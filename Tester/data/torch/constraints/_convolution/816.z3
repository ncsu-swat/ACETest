(declare-fun temp1085_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1085_2 () (_ BitVec 64))
(declare-fun temp1085_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1085_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1085_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1085_6 () (_ BitVec 64))
(declare-fun temp1085_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1085_8 () (_ BitVec 64))
(declare-fun temp1085_9 () (_ BitVec 64))
(declare-fun temp1085_10 () (_ BitVec 64))
(declare-fun temp1085_11 () (_ BitVec 64))
(declare-fun temp1085_12 () (_ BitVec 64))
(declare-fun temp1085_13 () (_ BitVec 64))
(declare-fun temp1085_14 () (_ BitVec 64))
(declare-fun temp1085_15 () (_ BitVec 64))
(declare-fun temp1085_16 () (_ BitVec 64))
(declare-fun temp1085_17 () (_ BitVec 64))
(declare-fun temp1085_18 () (_ BitVec 64))
(declare-fun temp1085_19 () (_ BitVec 64))
(declare-fun temp1085_20 () (_ BitVec 64))
(declare-fun temp1085_21 () (_ BitVec 64))
(declare-fun temp1085_22 () (_ BitVec 64))
(declare-fun temp1085_23 () (_ BitVec 64))
(declare-fun temp1085_24 () (_ BitVec 64))
(declare-fun temp1085_25 () (_ BitVec 64))
(declare-fun temp1085_26 () (_ BitVec 64))
(declare-fun temp1085_27 () (_ BitVec 64))
(declare-fun temp1085_28 () (_ BitVec 64))
(declare-fun temp1085_29 () (_ BitVec 64))
(declare-fun temp1085_30 () (_ BitVec 64))
(declare-fun temp1085_31 () (_ BitVec 64))
(declare-fun temp1085_32 () (_ BitVec 64))
(declare-fun temp1085_33 () (_ BitVec 64))
(declare-fun temp1085_34 () (_ BitVec 64))
(declare-fun temp1085_35 () (_ BitVec 64))
(declare-fun temp1085_36 () (_ BitVec 64))
(declare-fun temp1085_37 () (_ BitVec 64))
(declare-fun temp1085_38 () (_ BitVec 64))
(declare-fun temp1085_39 () (_ BitVec 64))
(declare-fun temp1085_40 () (_ BitVec 64))
(declare-fun temp1085_41 () (_ BitVec 64))
(declare-fun temp1085_42 () (_ BitVec 64))
(declare-fun temp1085_43 () (_ BitVec 64))
(declare-fun temp1085_44 () (_ BitVec 64))
(declare-fun temp1085_45 () (_ BitVec 64))
(declare-fun temp1085_46 () (_ BitVec 64))
(declare-fun temp1085_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1085_48 () (_ BitVec 64))
(declare-fun temp1085_49 () (_ BitVec 64))
(declare-fun temp1085_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1085_51 () (_ BitVec 64))
(declare-fun temp1085_52 () (_ BitVec 64))
(declare-fun temp1085_53 () (_ BitVec 64))
(declare-fun temp1085_54 () (_ BitVec 64))
(declare-fun temp1085_55 () (_ BitVec 64))
(declare-fun temp1085_56 () (_ BitVec 64))
(declare-fun temp1085_57 () (_ BitVec 64))
(declare-fun temp1085_58 () (_ BitVec 64))
(declare-fun temp1085_59 () (_ BitVec 64))
(declare-fun temp1085_60 () (_ BitVec 64))
(declare-fun temp1085_61 () (_ BitVec 64))
(declare-fun temp1085_62 () (_ BitVec 64))
(declare-fun temp1085_63 () (_ BitVec 64))
(declare-fun temp1085_64 () (_ BitVec 64))
(declare-fun temp1085_65 () (_ BitVec 64))
(declare-fun temp1085_66 () (_ BitVec 64))
(declare-fun temp1085_67 () (_ BitVec 64))
(declare-fun temp1085_68 () (_ BitVec 64))
(declare-fun temp1085_69 () (_ BitVec 64))
(declare-fun temp1085_70 () (_ BitVec 64))
(declare-fun temp1085_71 () (_ BitVec 64))
(declare-fun temp1085_72 () (_ BitVec 64))
(declare-fun temp1085_73 () (_ BitVec 64))
(declare-fun temp1085_74 () (_ BitVec 64))
(declare-fun temp1085_75 () (_ BitVec 64))
(declare-fun temp1085_76 () (_ BitVec 64))
(declare-fun temp1085_77 () (_ BitVec 64))
(declare-fun temp1085_78 () (_ BitVec 64))
(declare-fun temp1085_79 () (_ BitVec 64))
(declare-fun temp1085_80 () (_ BitVec 64))
(declare-fun temp1085_81 () (_ BitVec 64))
(declare-fun temp1085_82 () (_ BitVec 64))
(declare-fun temp1085_83 () (_ BitVec 64))
(declare-fun temp1085_84 () (_ BitVec 64))
(declare-fun temp1085_85 () (_ BitVec 64))
(declare-fun temp1085_86 () (_ BitVec 64))
(declare-fun temp1085_87 () (_ BitVec 64))
(declare-fun temp1085_88 () (_ BitVec 64))
(declare-fun temp1085_89 () (_ BitVec 64))
(declare-fun temp1085_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1085_91 () (_ BitVec 64))
(declare-fun temp1085_92 () (_ BitVec 64))
(declare-fun temp1085_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1085_94 () (_ BitVec 64))
(declare-fun temp1085_95 () (_ BitVec 64))
(declare-fun temp1085_96 () (_ BitVec 64))
(declare-fun temp1085_97 () (_ BitVec 64))
(declare-fun temp1085_98 () (_ BitVec 64))
(declare-fun temp1085_99 () (_ BitVec 64))
(declare-fun temp1085_100 () (_ BitVec 64))
(declare-fun temp1085_101 () (_ BitVec 64))
(declare-fun temp1085_102 () (_ BitVec 64))
(declare-fun temp1085_103 () (_ BitVec 64))
(declare-fun temp1085_104 () (_ BitVec 64))
(declare-fun temp1085_105 () (_ BitVec 64))
(declare-fun temp1085_106 () (_ BitVec 64))
(declare-fun temp1085_107 () (_ BitVec 64))
(declare-fun temp1085_108 () (_ BitVec 64))
(declare-fun temp1085_109 () (_ BitVec 64))
(declare-fun temp1085_110 () (_ BitVec 64))
(declare-fun temp1085_111 () (_ BitVec 64))
(declare-fun temp1085_112 () (_ BitVec 64))
(declare-fun temp1085_113 () (_ BitVec 64))
(declare-fun temp1085_114 () (_ BitVec 64))
(declare-fun temp1085_115 () (_ BitVec 64))
(declare-fun temp1085_116 () (_ BitVec 64))
(declare-fun temp1085_117 () (_ BitVec 64))
(declare-fun temp1085_118 () (_ BitVec 64))
(declare-fun temp1085_119 () (_ BitVec 64))
(declare-fun temp1085_120 () (_ BitVec 64))
(declare-fun temp1085_121 () (_ BitVec 64))
(declare-fun temp1085_122 () (_ BitVec 64))
(declare-fun temp1085_123 () (_ BitVec 64))
(declare-fun temp1085_124 () (_ BitVec 64))
(declare-fun temp1085_125 () (_ BitVec 64))
(declare-fun temp1085_126 () (_ BitVec 64))
(declare-fun temp1085_127 () (_ BitVec 64))
(declare-fun temp1085_128 () (_ BitVec 64))
(declare-fun temp1085_129 () (_ BitVec 64))
(declare-fun temp1085_130 () (_ BitVec 64))
(declare-fun temp1085_131 () (_ BitVec 64))
(declare-fun temp1085_132 () (_ BitVec 64))
(declare-fun temp1085_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1085_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1085_135 () (_ BitVec 64))
(declare-fun temp1085_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1085_137 () (_ BitVec 64))
(declare-fun temp1085_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1085_139 () (_ BitVec 64))
(declare-fun temp1085_140 () (_ BitVec 64))
(declare-fun temp1085_141 () (_ BitVec 64))
(declare-fun temp1085_142 () (_ BitVec 64))
(declare-fun temp1085_143 () (_ BitVec 64))
(declare-fun temp1085_144 () (_ BitVec 64))
(declare-fun temp1085_145 () (_ BitVec 64))
(declare-fun temp1085_146 () (_ BitVec 64))
(declare-fun temp1085_147 () (_ BitVec 64))
(declare-fun temp1085_148 () (_ BitVec 64))
(declare-fun temp1085_149 () (_ BitVec 64))
(declare-fun temp1085_150 () (_ BitVec 64))
(declare-fun temp1085_151 () (_ BitVec 64))
(declare-fun temp1085_152 () (_ BitVec 64))
(declare-fun temp1085_153 () (_ BitVec 64))
(declare-fun temp1085_154 () (_ BitVec 64))
(declare-fun temp1085_156 () (_ BitVec 64))
(declare-fun temp1085_157 () (_ BitVec 64))
(declare-fun temp1085_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1085_158 () (_ BitVec 64))
(declare-fun temp1085_159 () (_ BitVec 64))
(declare-fun temp1085_161 () (_ BitVec 64))
(declare-fun temp1085_162 () (_ BitVec 64))
(declare-fun temp1085_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1085_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1085_164 () (_ BitVec 64))
(declare-fun temp1085_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1085_166 () (_ BitVec 64))
(declare-fun temp1085_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1085_168 () (_ BitVec 64))
(declare-fun temp1085_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1085_170 () (_ BitVec 64))
(declare-fun temp1085_171 () (_ BitVec 64))
(declare-fun temp1085_172 () (_ BitVec 64))
(declare-fun temp1085_173 () (_ BitVec 64))
(declare-fun temp1085_174 () (_ BitVec 64))
(declare-fun temp1085_175 () (_ BitVec 64))
(declare-fun temp1085_176 () (_ BitVec 64))
(declare-fun temp1085_177 () (_ BitVec 64))
(declare-fun temp1085_178 () (_ BitVec 64))
(declare-fun temp1085_179 () (_ BitVec 64))
(declare-fun temp1085_180 () (_ BitVec 64))
(declare-fun temp1085_181 () (_ BitVec 64))
(declare-fun temp1085_182 () (_ BitVec 64))
(declare-fun temp1085_183 () (_ BitVec 64))
(declare-fun temp1085_184 () (_ BitVec 64))
(declare-fun temp1085_185 () (_ BitVec 64))
(declare-fun temp1085_186 () (_ BitVec 64))
(declare-fun temp1085_187 () (_ BitVec 64))
(declare-fun temp1085_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1085_189 () (_ BitVec 64))
(declare-fun temp1085_191 () (_ BitVec 64))
(declare-fun temp1085_192 () (_ BitVec 64))
(declare-fun temp1085_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1085_193 () (_ BitVec 64))
(declare-fun temp1085_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1085_195 () (_ BitVec 64))
(declare-fun temp1085_196 () (_ BitVec 64))
(declare-fun temp1085_197 () (_ BitVec 64))
(declare-fun temp1085_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1085_199 () (_ BitVec 64))
(declare-fun temp1085_200 () (_ BitVec 64))
(declare-fun temp1085_201 () (_ BitVec 64))
(declare-fun temp1085_202 () (_ BitVec 64))
(declare-fun temp1085_203 () (_ BitVec 64))
(declare-fun temp1085_204 () (_ BitVec 64))
(declare-fun temp1085_205 () (_ BitVec 64))
(declare-fun temp1085_206 () (_ BitVec 64))
(declare-fun temp1085_207 () (_ BitVec 64))
(declare-fun temp1085_208 () (_ BitVec 64))
(declare-fun temp1085_209 () (_ BitVec 64))
(declare-fun temp1085_210 () (_ BitVec 64))
(declare-fun temp1085_211 () (_ BitVec 64))
(declare-fun temp1085_212 () (_ BitVec 64))
(declare-fun temp1085_213 () (_ BitVec 64))
(declare-fun temp1085_214 () (_ BitVec 64))
(declare-fun temp1085_215 () (_ BitVec 64))
(declare-fun temp1085_216 () (_ BitVec 64))
(declare-fun temp1085_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1085_218 () (_ BitVec 64))
(declare-fun temp1085_220 () (_ BitVec 64))
(declare-fun temp1085_221 () (_ BitVec 64))
(declare-fun temp1085_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1085_222 () (_ BitVec 64))
(declare-fun temp1085_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1085_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1085_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1085_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1085_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1085_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1085_229 () (_ BitVec 64))
(declare-fun temp1085_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1085_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1085_232 () (_ BitVec 64))
(declare-fun temp1085_233 () (_ BitVec 64))
(declare-fun temp1085_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1085_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1085_236 () (_ BitVec 64))
(declare-fun temp1085_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1085_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1085_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1085_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1085_241 () (_ BitVec 64))
(declare-fun temp1085_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp1085_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp1085_244 () (_ BitVec 64))
(assert (= temp1085_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1085_1)))
(assert (= temp1085_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1085_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_3 #x0000000000000000))
(assert (= var79869 temp1085_3))
(assert (= temp1085_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1085_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_5 #x0000000000000000))
(assert (= var79914 temp1085_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1085_6 #x0000000000000000))
(assert (= temp1085_7 temp1085_6))
(assert (= temp1085_8 (select ARGNAME_padding_NAMEEND_VAL temp1085_7)))
(assert (= temp1085_9 #x0000000000000001))
(assert (= temp1085_10 temp1085_9))
(assert (= temp1085_11 (select ARGNAME_padding_NAMEEND_VAL temp1085_10)))
(assert (= temp1085_12 #x0000000000000002))
(assert (= temp1085_13 temp1085_12))
(assert (= temp1085_14 (select ARGNAME_padding_NAMEEND_VAL temp1085_13)))
(assert (= temp1085_15 #x0000000000000003))
(assert (= temp1085_16 temp1085_15))
(assert (= temp1085_17 (select ARGNAME_padding_NAMEEND_VAL temp1085_16)))
(assert (= temp1085_18 #x0000000000000004))
(assert (= temp1085_19 temp1085_18))
(assert (= temp1085_20 (select ARGNAME_padding_NAMEEND_VAL temp1085_19)))
(assert (= temp1085_21 #x0000000000000005))
(assert (= temp1085_22 temp1085_21))
(assert (= temp1085_23 (select ARGNAME_padding_NAMEEND_VAL temp1085_22)))
(assert (= temp1085_24 #x0000000000000000))
(assert (= temp1085_25 #x0000000000000000))
(assert (= temp1085_26 temp1085_25))
(assert (= temp1085_27 (select ARGNAME_padding_NAMEEND_VAL temp1085_26)))
(assert (= temp1085_28 #x0000000000000000))
(assert (= temp1085_29 #x0000000000000001))
(assert (= temp1085_30 temp1085_29))
(assert (= temp1085_31 (select ARGNAME_padding_NAMEEND_VAL temp1085_30)))
(assert (= temp1085_32 #x0000000000000000))
(assert (= temp1085_33 #x0000000000000002))
(assert (= temp1085_34 temp1085_33))
(assert (= temp1085_35 (select ARGNAME_padding_NAMEEND_VAL temp1085_34)))
(assert (= temp1085_36 #x0000000000000000))
(assert (= temp1085_37 #x0000000000000003))
(assert (= temp1085_38 temp1085_37))
(assert (= temp1085_39 (select ARGNAME_padding_NAMEEND_VAL temp1085_38)))
(assert (= temp1085_40 #x0000000000000000))
(assert (= temp1085_41 #x0000000000000004))
(assert (= temp1085_42 temp1085_41))
(assert (= temp1085_43 (select ARGNAME_padding_NAMEEND_VAL temp1085_42)))
(assert (= temp1085_44 #x0000000000000000))
(assert (= temp1085_45 #x0000000000000005))
(assert (= temp1085_46 temp1085_45))
(assert (= temp1085_47 (select ARGNAME_padding_NAMEEND_VAL temp1085_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1085_27 temp1085_24)
             (bvslt temp1085_31 temp1085_28)
             (bvslt temp1085_35 temp1085_32)
             (bvslt temp1085_39 temp1085_36)
             (bvslt temp1085_43 temp1085_40)
             (bvslt temp1085_47 temp1085_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_48 #x0000000000000000))
(assert (= var1322786 temp1085_48))
(assert (= temp1085_49 #x0000000000000000))
(assert (= temp1085_50 temp1085_49))
(assert (= temp1085_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_50)))
(assert (= temp1085_52 #x0000000000000001))
(assert (= temp1085_53 temp1085_52))
(assert (= temp1085_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_53)))
(assert (= temp1085_55 #x0000000000000002))
(assert (= temp1085_56 temp1085_55))
(assert (= temp1085_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_56)))
(assert (= temp1085_58 #x0000000000000003))
(assert (= temp1085_59 temp1085_58))
(assert (= temp1085_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_59)))
(assert (= temp1085_61 #x0000000000000004))
(assert (= temp1085_62 temp1085_61))
(assert (= temp1085_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_62)))
(assert (= temp1085_64 #x0000000000000005))
(assert (= temp1085_65 temp1085_64))
(assert (= temp1085_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_65)))
(assert (= temp1085_67 #x0000000000000000))
(assert (= temp1085_68 #x0000000000000000))
(assert (= temp1085_69 temp1085_68))
(assert (= temp1085_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_69)))
(assert (= temp1085_71 #x0000000000000000))
(assert (= temp1085_72 #x0000000000000001))
(assert (= temp1085_73 temp1085_72))
(assert (= temp1085_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_73)))
(assert (= temp1085_75 #x0000000000000000))
(assert (= temp1085_76 #x0000000000000002))
(assert (= temp1085_77 temp1085_76))
(assert (= temp1085_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_77)))
(assert (= temp1085_79 #x0000000000000000))
(assert (= temp1085_80 #x0000000000000003))
(assert (= temp1085_81 temp1085_80))
(assert (= temp1085_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_81)))
(assert (= temp1085_83 #x0000000000000000))
(assert (= temp1085_84 #x0000000000000004))
(assert (= temp1085_85 temp1085_84))
(assert (= temp1085_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_85)))
(assert (= temp1085_87 #x0000000000000000))
(assert (= temp1085_88 #x0000000000000005))
(assert (= temp1085_89 temp1085_88))
(assert (= temp1085_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1085_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1085_70 temp1085_67)
             (bvslt temp1085_74 temp1085_71)
             (bvslt temp1085_78 temp1085_75)
             (bvslt temp1085_82 temp1085_79)
             (bvslt temp1085_86 temp1085_83)
             (bvslt temp1085_90 temp1085_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_91 #x0000000000000000))
(assert (= var1322797 temp1085_91))
(assert (= temp1085_92 #x0000000000000000))
(assert (= temp1085_93 temp1085_92))
(assert (= temp1085_94 (select ARGNAME_stride_NAMEEND_VAL temp1085_93)))
(assert (= temp1085_95 #x0000000000000001))
(assert (= temp1085_96 temp1085_95))
(assert (= temp1085_97 (select ARGNAME_stride_NAMEEND_VAL temp1085_96)))
(assert (= temp1085_98 #x0000000000000002))
(assert (= temp1085_99 temp1085_98))
(assert (= temp1085_100 (select ARGNAME_stride_NAMEEND_VAL temp1085_99)))
(assert (= temp1085_101 #x0000000000000003))
(assert (= temp1085_102 temp1085_101))
(assert (= temp1085_103 (select ARGNAME_stride_NAMEEND_VAL temp1085_102)))
(assert (= temp1085_104 #x0000000000000004))
(assert (= temp1085_105 temp1085_104))
(assert (= temp1085_106 (select ARGNAME_stride_NAMEEND_VAL temp1085_105)))
(assert (= temp1085_107 #x0000000000000005))
(assert (= temp1085_108 temp1085_107))
(assert (= temp1085_109 (select ARGNAME_stride_NAMEEND_VAL temp1085_108)))
(assert (= temp1085_110 #x0000000000000000))
(assert (= temp1085_111 #x0000000000000000))
(assert (= temp1085_112 temp1085_111))
(assert (= temp1085_113 (select ARGNAME_stride_NAMEEND_VAL temp1085_112)))
(assert (= temp1085_114 #x0000000000000000))
(assert (= temp1085_115 #x0000000000000001))
(assert (= temp1085_116 temp1085_115))
(assert (= temp1085_117 (select ARGNAME_stride_NAMEEND_VAL temp1085_116)))
(assert (= temp1085_118 #x0000000000000000))
(assert (= temp1085_119 #x0000000000000002))
(assert (= temp1085_120 temp1085_119))
(assert (= temp1085_121 (select ARGNAME_stride_NAMEEND_VAL temp1085_120)))
(assert (= temp1085_122 #x0000000000000000))
(assert (= temp1085_123 #x0000000000000003))
(assert (= temp1085_124 temp1085_123))
(assert (= temp1085_125 (select ARGNAME_stride_NAMEEND_VAL temp1085_124)))
(assert (= temp1085_126 #x0000000000000000))
(assert (= temp1085_127 #x0000000000000004))
(assert (= temp1085_128 temp1085_127))
(assert (= temp1085_129 (select ARGNAME_stride_NAMEEND_VAL temp1085_128)))
(assert (= temp1085_130 #x0000000000000000))
(assert (= temp1085_131 #x0000000000000005))
(assert (= temp1085_132 temp1085_131))
(assert (= temp1085_133 (select ARGNAME_stride_NAMEEND_VAL temp1085_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1085_113 temp1085_110)
             (bvsle temp1085_117 temp1085_114)
             (bvsle temp1085_121 temp1085_118)
             (bvsle temp1085_125 temp1085_122)
             (bvsle temp1085_129 temp1085_126)
             (bvsle temp1085_133 temp1085_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_134 #x0000000000000000))
(assert (= var1322807 temp1085_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_135 #x0000000000000001))
(assert (= var1322819 temp1085_135))
(assert (= temp1085_136 #x0000000000000000))
(assert (= var1310898 temp1085_136))
(assert (= temp1085_137 #x0000000000000000))
(assert (= temp1085_138 temp1085_137))
(assert (= temp1085_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_138)))
(assert (= temp1085_140 #x0000000000000001))
(assert (= temp1085_141 temp1085_140))
(assert (= temp1085_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_141)))
(assert (= temp1085_143 #x0000000000000002))
(assert (= temp1085_144 temp1085_143))
(assert (= temp1085_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_144)))
(assert (= temp1085_146 #x0000000000000003))
(assert (= temp1085_147 temp1085_146))
(assert (= temp1085_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_147)))
(assert (= temp1085_149 #x0000000000000004))
(assert (= temp1085_150 temp1085_149))
(assert (= temp1085_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_150)))
(assert (= temp1085_152 #x0000000000000005))
(assert (= temp1085_153 temp1085_152))
(assert (= temp1085_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_153)))
(assert (= temp1085_156 var1310898))
(assert (= temp1085_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_156)))
(assert (= temp1085_155 temp1085_157))
(assert (= var1322852
   (ite (bvslt temp1085_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_158 #x0000000000000000))
(assert (= var1322852 temp1085_158))
(assert (= temp1085_159 #x0000000000000000))
(assert (= var1310898 temp1085_159))
(assert (= temp1085_161 var1310898))
(assert (= temp1085_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_161)))
(assert (= temp1085_160 temp1085_162))
(assert (= var1322874 (bvsmod temp1085_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1085_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1085_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1085_164 #x0000000000000001))
(assert (= var1322875 temp1085_164))
(assert (= temp1085_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1085_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_166 #x0000000000000001))
(assert (= var1322895 temp1085_166))
(assert (= temp1085_167 #x0000000000000001))
(assert (= var1311786 temp1085_167))
(assert (= temp1085_168 #x0000000000000000))
(assert (= temp1085_169 temp1085_168))
(assert (= temp1085_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1085_169)))
(assert (= temp1085_171 #x0000000000000001))
(assert (= temp1085_172 temp1085_171))
(assert (= temp1085_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1085_172)))
(assert (= temp1085_174 #x0000000000000002))
(assert (= temp1085_175 temp1085_174))
(assert (= temp1085_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1085_175)))
(assert (= temp1085_177 #x0000000000000003))
(assert (= temp1085_178 temp1085_177))
(assert (= temp1085_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1085_178)))
(assert (= temp1085_180 #x0000000000000004))
(assert (= temp1085_181 temp1085_180))
(assert (= temp1085_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1085_181)))
(assert (= temp1085_183 #x0000000000000005))
(assert (= temp1085_184 temp1085_183))
(assert (= temp1085_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1085_184)))
(assert (= temp1085_186 #x0000000000000000))
(assert (= temp1085_187
   (ite (bvslt var1311786 temp1085_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1085_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1085_187)))
(assert (= var1322903 temp1085_188))
(assert (bvslt (ite (bvslt var1311786 temp1085_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1085_189 #x0000000000000001))
(assert (= var1311786 temp1085_189))
(assert (= temp1085_191 var1311786))
(assert (= temp1085_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_191)))
(assert (= temp1085_190 temp1085_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1085_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1085_193 #x0000000000000001))
(assert (= var1322908 temp1085_193))
(assert (= temp1085_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1085_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_195 #x0000000000000001))
(assert (= var1322975 temp1085_195))
(assert (= temp1085_196 #x0000000000000000))
(assert (= var1310898 temp1085_196))
(assert (= temp1085_197 #x0000000000000000))
(assert (= temp1085_198 temp1085_197))
(assert (= temp1085_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1085_198)))
(assert (= temp1085_200 #x0000000000000001))
(assert (= temp1085_201 temp1085_200))
(assert (= temp1085_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1085_201)))
(assert (= temp1085_203 #x0000000000000002))
(assert (= temp1085_204 temp1085_203))
(assert (= temp1085_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1085_204)))
(assert (= temp1085_206 #x0000000000000003))
(assert (= temp1085_207 temp1085_206))
(assert (= temp1085_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1085_207)))
(assert (= temp1085_209 #x0000000000000004))
(assert (= temp1085_210 temp1085_209))
(assert (= temp1085_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1085_210)))
(assert (= temp1085_212 #x0000000000000005))
(assert (= temp1085_213 temp1085_212))
(assert (= temp1085_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1085_213)))
(assert (= temp1085_215 #x0000000000000000))
(assert (= temp1085_216
   (ite (bvslt var1310898 temp1085_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1085_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1085_216)))
(assert (= var1322977 temp1085_217))
(assert (bvslt (ite (bvslt var1310898 temp1085_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1085_218 #x0000000000000000))
(assert (= var1310898 temp1085_218))
(assert (= temp1085_220 var1310898))
(assert (= temp1085_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1085_220)))
(assert (= temp1085_219 temp1085_221))
(assert (= var1322980
   (ite (= var1322977 temp1085_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1085_222 #x0000000000000001))
(assert (= var1322980 temp1085_222))
(assert (= temp1085_223 #x0000000000000002))
(assert (= var1848169 temp1085_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1085_225 #x0000000000000001))
(assert (= var1323065 temp1085_225))
(assert (= temp1085_226 #x0000000000000001))
(assert (= var3486735 temp1085_226))
(assert (= temp1085_227 #x0000000000000001))
(assert (= var3814415 temp1085_227))
(assert (= temp1085_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1085_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_229 #x0000000000000001))
(assert (= var79986 temp1085_229))
(assert (= temp1085_230 #x0000000000000001))
(assert (= var80116 temp1085_230))
(assert (= var4796905 var80116))
(assert (= temp1085_231 #x0000000000000000))
(assert (= var4784306 temp1085_231))
(assert (= temp1085_232 #x0000000000000000))
(assert (= temp1085_233
   (ite (bvslt var4784306 temp1085_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1085_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1085_233)))
(assert (= var4796924 temp1085_234))
(assert (bvslt (ite (bvslt var4784306 temp1085_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1085_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1085_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1085_236 #x0000000000000001))
(assert (= var4796925 temp1085_236))
(assert (= temp1085_237 #x0000000000000000))
(assert (= var4996927 temp1085_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1085_238 #x0000000000000002))
(assert (= var5125763 temp1085_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_239 #x0000000000000000))
(assert (= var5191324 temp1085_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1085_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1085_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_241 #x0000000000000001))
(assert (= var81342 temp1085_241))
(assert (= temp1085_242 #x0000000000000002))
(assert (= var5977731 temp1085_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1085_243 #x0000000000000000))
(assert (= var6043292 temp1085_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp1085_244 #x0000000000000001))
(assert (= var79986 temp1085_244))
(model-add temp1085_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1085_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1085_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






