(declare-fun temp1301_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1301_2 () (_ BitVec 64))
(declare-fun temp1301_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1301_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1301_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1301_6 () (_ BitVec 64))
(declare-fun temp1301_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_8 () (_ BitVec 64))
(declare-fun temp1301_9 () (_ BitVec 64))
(declare-fun temp1301_10 () (_ BitVec 64))
(declare-fun temp1301_11 () (_ BitVec 64))
(declare-fun temp1301_12 () (_ BitVec 64))
(declare-fun temp1301_13 () (_ BitVec 64))
(declare-fun temp1301_14 () (_ BitVec 64))
(declare-fun temp1301_15 () (_ BitVec 64))
(declare-fun temp1301_16 () (_ BitVec 64))
(declare-fun temp1301_17 () (_ BitVec 64))
(declare-fun temp1301_18 () (_ BitVec 64))
(declare-fun temp1301_19 () (_ BitVec 64))
(declare-fun temp1301_20 () (_ BitVec 64))
(declare-fun temp1301_21 () (_ BitVec 64))
(declare-fun temp1301_22 () (_ BitVec 64))
(declare-fun temp1301_23 () (_ BitVec 64))
(declare-fun temp1301_24 () (_ BitVec 64))
(declare-fun temp1301_25 () (_ BitVec 64))
(declare-fun temp1301_26 () (_ BitVec 64))
(declare-fun temp1301_27 () (_ BitVec 64))
(declare-fun temp1301_28 () (_ BitVec 64))
(declare-fun temp1301_29 () (_ BitVec 64))
(declare-fun temp1301_30 () (_ BitVec 64))
(declare-fun temp1301_31 () (_ BitVec 64))
(declare-fun temp1301_32 () (_ BitVec 64))
(declare-fun temp1301_33 () (_ BitVec 64))
(declare-fun temp1301_34 () (_ BitVec 64))
(declare-fun temp1301_35 () (_ BitVec 64))
(declare-fun temp1301_36 () (_ BitVec 64))
(declare-fun temp1301_37 () (_ BitVec 64))
(declare-fun temp1301_38 () (_ BitVec 64))
(declare-fun temp1301_39 () (_ BitVec 64))
(declare-fun temp1301_40 () (_ BitVec 64))
(declare-fun temp1301_41 () (_ BitVec 64))
(declare-fun temp1301_42 () (_ BitVec 64))
(declare-fun temp1301_43 () (_ BitVec 64))
(declare-fun temp1301_44 () (_ BitVec 64))
(declare-fun temp1301_45 () (_ BitVec 64))
(declare-fun temp1301_46 () (_ BitVec 64))
(declare-fun temp1301_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1301_48 () (_ BitVec 64))
(declare-fun temp1301_49 () (_ BitVec 64))
(declare-fun temp1301_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_51 () (_ BitVec 64))
(declare-fun temp1301_52 () (_ BitVec 64))
(declare-fun temp1301_53 () (_ BitVec 64))
(declare-fun temp1301_54 () (_ BitVec 64))
(declare-fun temp1301_55 () (_ BitVec 64))
(declare-fun temp1301_56 () (_ BitVec 64))
(declare-fun temp1301_57 () (_ BitVec 64))
(declare-fun temp1301_58 () (_ BitVec 64))
(declare-fun temp1301_59 () (_ BitVec 64))
(declare-fun temp1301_60 () (_ BitVec 64))
(declare-fun temp1301_61 () (_ BitVec 64))
(declare-fun temp1301_62 () (_ BitVec 64))
(declare-fun temp1301_63 () (_ BitVec 64))
(declare-fun temp1301_64 () (_ BitVec 64))
(declare-fun temp1301_65 () (_ BitVec 64))
(declare-fun temp1301_66 () (_ BitVec 64))
(declare-fun temp1301_67 () (_ BitVec 64))
(declare-fun temp1301_68 () (_ BitVec 64))
(declare-fun temp1301_69 () (_ BitVec 64))
(declare-fun temp1301_70 () (_ BitVec 64))
(declare-fun temp1301_71 () (_ BitVec 64))
(declare-fun temp1301_72 () (_ BitVec 64))
(declare-fun temp1301_73 () (_ BitVec 64))
(declare-fun temp1301_74 () (_ BitVec 64))
(declare-fun temp1301_75 () (_ BitVec 64))
(declare-fun temp1301_76 () (_ BitVec 64))
(declare-fun temp1301_77 () (_ BitVec 64))
(declare-fun temp1301_78 () (_ BitVec 64))
(declare-fun temp1301_79 () (_ BitVec 64))
(declare-fun temp1301_80 () (_ BitVec 64))
(declare-fun temp1301_81 () (_ BitVec 64))
(declare-fun temp1301_82 () (_ BitVec 64))
(declare-fun temp1301_83 () (_ BitVec 64))
(declare-fun temp1301_84 () (_ BitVec 64))
(declare-fun temp1301_85 () (_ BitVec 64))
(declare-fun temp1301_86 () (_ BitVec 64))
(declare-fun temp1301_87 () (_ BitVec 64))
(declare-fun temp1301_88 () (_ BitVec 64))
(declare-fun temp1301_89 () (_ BitVec 64))
(declare-fun temp1301_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1301_91 () (_ BitVec 64))
(declare-fun temp1301_92 () (_ BitVec 64))
(declare-fun temp1301_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_94 () (_ BitVec 64))
(declare-fun temp1301_95 () (_ BitVec 64))
(declare-fun temp1301_96 () (_ BitVec 64))
(declare-fun temp1301_97 () (_ BitVec 64))
(declare-fun temp1301_98 () (_ BitVec 64))
(declare-fun temp1301_99 () (_ BitVec 64))
(declare-fun temp1301_100 () (_ BitVec 64))
(declare-fun temp1301_101 () (_ BitVec 64))
(declare-fun temp1301_102 () (_ BitVec 64))
(declare-fun temp1301_103 () (_ BitVec 64))
(declare-fun temp1301_104 () (_ BitVec 64))
(declare-fun temp1301_105 () (_ BitVec 64))
(declare-fun temp1301_106 () (_ BitVec 64))
(declare-fun temp1301_107 () (_ BitVec 64))
(declare-fun temp1301_108 () (_ BitVec 64))
(declare-fun temp1301_109 () (_ BitVec 64))
(declare-fun temp1301_110 () (_ BitVec 64))
(declare-fun temp1301_111 () (_ BitVec 64))
(declare-fun temp1301_112 () (_ BitVec 64))
(declare-fun temp1301_113 () (_ BitVec 64))
(declare-fun temp1301_114 () (_ BitVec 64))
(declare-fun temp1301_115 () (_ BitVec 64))
(declare-fun temp1301_116 () (_ BitVec 64))
(declare-fun temp1301_117 () (_ BitVec 64))
(declare-fun temp1301_118 () (_ BitVec 64))
(declare-fun temp1301_119 () (_ BitVec 64))
(declare-fun temp1301_120 () (_ BitVec 64))
(declare-fun temp1301_121 () (_ BitVec 64))
(declare-fun temp1301_122 () (_ BitVec 64))
(declare-fun temp1301_123 () (_ BitVec 64))
(declare-fun temp1301_124 () (_ BitVec 64))
(declare-fun temp1301_125 () (_ BitVec 64))
(declare-fun temp1301_126 () (_ BitVec 64))
(declare-fun temp1301_127 () (_ BitVec 64))
(declare-fun temp1301_128 () (_ BitVec 64))
(declare-fun temp1301_129 () (_ BitVec 64))
(declare-fun temp1301_130 () (_ BitVec 64))
(declare-fun temp1301_131 () (_ BitVec 64))
(declare-fun temp1301_132 () (_ BitVec 64))
(declare-fun temp1301_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1301_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1301_135 () (_ BitVec 64))
(declare-fun temp1301_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1301_137 () (_ BitVec 64))
(declare-fun temp1301_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_139 () (_ BitVec 64))
(declare-fun temp1301_140 () (_ BitVec 64))
(declare-fun temp1301_141 () (_ BitVec 64))
(declare-fun temp1301_142 () (_ BitVec 64))
(declare-fun temp1301_143 () (_ BitVec 64))
(declare-fun temp1301_144 () (_ BitVec 64))
(declare-fun temp1301_145 () (_ BitVec 64))
(declare-fun temp1301_146 () (_ BitVec 64))
(declare-fun temp1301_147 () (_ BitVec 64))
(declare-fun temp1301_148 () (_ BitVec 64))
(declare-fun temp1301_149 () (_ BitVec 64))
(declare-fun temp1301_150 () (_ BitVec 64))
(declare-fun temp1301_151 () (_ BitVec 64))
(declare-fun temp1301_152 () (_ BitVec 64))
(declare-fun temp1301_153 () (_ BitVec 64))
(declare-fun temp1301_154 () (_ BitVec 64))
(declare-fun temp1301_156 () (_ BitVec 64))
(declare-fun temp1301_157 () (_ BitVec 64))
(declare-fun temp1301_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1301_158 () (_ BitVec 64))
(declare-fun temp1301_159 () (_ BitVec 64))
(declare-fun temp1301_161 () (_ BitVec 64))
(declare-fun temp1301_162 () (_ BitVec 64))
(declare-fun temp1301_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1301_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1301_164 () (_ BitVec 64))
(declare-fun temp1301_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1301_166 () (_ BitVec 64))
(declare-fun temp1301_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1301_168 () (_ BitVec 64))
(declare-fun temp1301_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_170 () (_ BitVec 64))
(declare-fun temp1301_171 () (_ BitVec 64))
(declare-fun temp1301_172 () (_ BitVec 64))
(declare-fun temp1301_173 () (_ BitVec 64))
(declare-fun temp1301_174 () (_ BitVec 64))
(declare-fun temp1301_175 () (_ BitVec 64))
(declare-fun temp1301_176 () (_ BitVec 64))
(declare-fun temp1301_177 () (_ BitVec 64))
(declare-fun temp1301_178 () (_ BitVec 64))
(declare-fun temp1301_179 () (_ BitVec 64))
(declare-fun temp1301_180 () (_ BitVec 64))
(declare-fun temp1301_181 () (_ BitVec 64))
(declare-fun temp1301_182 () (_ BitVec 64))
(declare-fun temp1301_183 () (_ BitVec 64))
(declare-fun temp1301_184 () (_ BitVec 64))
(declare-fun temp1301_185 () (_ BitVec 64))
(declare-fun temp1301_186 () (_ BitVec 64))
(declare-fun temp1301_187 () (_ BitVec 64))
(declare-fun temp1301_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1301_189 () (_ BitVec 64))
(declare-fun temp1301_191 () (_ BitVec 64))
(declare-fun temp1301_192 () (_ BitVec 64))
(declare-fun temp1301_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1301_193 () (_ BitVec 64))
(declare-fun temp1301_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1301_195 () (_ BitVec 64))
(declare-fun temp1301_196 () (_ BitVec 64))
(declare-fun temp1301_197 () (_ BitVec 64))
(declare-fun temp1301_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_199 () (_ BitVec 64))
(declare-fun temp1301_200 () (_ BitVec 64))
(declare-fun temp1301_201 () (_ BitVec 64))
(declare-fun temp1301_202 () (_ BitVec 64))
(declare-fun temp1301_203 () (_ BitVec 64))
(declare-fun temp1301_204 () (_ BitVec 64))
(declare-fun temp1301_205 () (_ BitVec 64))
(declare-fun temp1301_206 () (_ BitVec 64))
(declare-fun temp1301_207 () (_ BitVec 64))
(declare-fun temp1301_208 () (_ BitVec 64))
(declare-fun temp1301_209 () (_ BitVec 64))
(declare-fun temp1301_210 () (_ BitVec 64))
(declare-fun temp1301_211 () (_ BitVec 64))
(declare-fun temp1301_212 () (_ BitVec 64))
(declare-fun temp1301_213 () (_ BitVec 64))
(declare-fun temp1301_214 () (_ BitVec 64))
(declare-fun temp1301_215 () (_ BitVec 64))
(declare-fun temp1301_216 () (_ BitVec 64))
(declare-fun temp1301_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1301_218 () (_ BitVec 64))
(declare-fun temp1301_220 () (_ BitVec 64))
(declare-fun temp1301_221 () (_ BitVec 64))
(declare-fun temp1301_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1301_222 () (_ BitVec 64))
(declare-fun temp1301_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1301_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1301_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1301_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1301_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1301_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1301_229 () (_ BitVec 64))
(declare-fun temp1301_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1301_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1301_232 () (_ BitVec 64))
(declare-fun temp1301_233 () (_ BitVec 64))
(declare-fun temp1301_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1301_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1301_236 () (_ BitVec 64))
(declare-fun temp1301_237 () (_ BitVec 64))
(declare-fun var5050621 () (_ BitVec 64))
(declare-fun var5050566 () (_ BitVec 64))
(declare-fun var4996900 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1301_238 () (_ BitVec 64))
(declare-fun var5256835 () (_ BitVec 64))
(declare-fun var5256837 () (_ BitVec 64))
(declare-fun var5322380 () (_ BitVec 64))
(declare-fun var5322381 () (_ BitVec 64))
(declare-fun var5322394 () (_ BitVec 64))
(declare-fun var5322396 () (_ BitVec 64))
(declare-fun temp1301_239 () (_ BitVec 64))
(declare-fun var5322421 () (_ BitVec 64))
(declare-fun var5322423 () (_ BitVec 64))
(declare-fun var5443411 () (_ BitVec 64))
(declare-fun temp1301_241 () (_ BitVec 64))
(declare-fun temp1301_240 () (_ BitVec 64))
(declare-fun temp1301_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp1301_243 () (_ BitVec 64))
(declare-fun temp1301_244 () (_ BitVec 64))
(declare-fun temp1301_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp1301_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp1301_247 () (_ BitVec 64))
(declare-fun temp1301_249 () (_ BitVec 64))
(declare-fun temp1301_248 () (_ BitVec 64))
(declare-fun temp1301_250 () (_ BitVec 64))
(assert (= temp1301_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1301_1)))
(assert (= temp1301_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1301_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_3 #x0000000000000000))
(assert (= var79869 temp1301_3))
(assert (= temp1301_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1301_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_5 #x0000000000000000))
(assert (= var79914 temp1301_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1301_6 #x0000000000000000))
(assert (= temp1301_7 temp1301_6))
(assert (= temp1301_8 (select ARGNAME_padding_NAMEEND_VAL temp1301_7)))
(assert (= temp1301_9 #x0000000000000001))
(assert (= temp1301_10 temp1301_9))
(assert (= temp1301_11 (select ARGNAME_padding_NAMEEND_VAL temp1301_10)))
(assert (= temp1301_12 #x0000000000000002))
(assert (= temp1301_13 temp1301_12))
(assert (= temp1301_14 (select ARGNAME_padding_NAMEEND_VAL temp1301_13)))
(assert (= temp1301_15 #x0000000000000003))
(assert (= temp1301_16 temp1301_15))
(assert (= temp1301_17 (select ARGNAME_padding_NAMEEND_VAL temp1301_16)))
(assert (= temp1301_18 #x0000000000000004))
(assert (= temp1301_19 temp1301_18))
(assert (= temp1301_20 (select ARGNAME_padding_NAMEEND_VAL temp1301_19)))
(assert (= temp1301_21 #x0000000000000005))
(assert (= temp1301_22 temp1301_21))
(assert (= temp1301_23 (select ARGNAME_padding_NAMEEND_VAL temp1301_22)))
(assert (= temp1301_24 #x0000000000000000))
(assert (= temp1301_25 #x0000000000000000))
(assert (= temp1301_26 temp1301_25))
(assert (= temp1301_27 (select ARGNAME_padding_NAMEEND_VAL temp1301_26)))
(assert (= temp1301_28 #x0000000000000000))
(assert (= temp1301_29 #x0000000000000001))
(assert (= temp1301_30 temp1301_29))
(assert (= temp1301_31 (select ARGNAME_padding_NAMEEND_VAL temp1301_30)))
(assert (= temp1301_32 #x0000000000000000))
(assert (= temp1301_33 #x0000000000000002))
(assert (= temp1301_34 temp1301_33))
(assert (= temp1301_35 (select ARGNAME_padding_NAMEEND_VAL temp1301_34)))
(assert (= temp1301_36 #x0000000000000000))
(assert (= temp1301_37 #x0000000000000003))
(assert (= temp1301_38 temp1301_37))
(assert (= temp1301_39 (select ARGNAME_padding_NAMEEND_VAL temp1301_38)))
(assert (= temp1301_40 #x0000000000000000))
(assert (= temp1301_41 #x0000000000000004))
(assert (= temp1301_42 temp1301_41))
(assert (= temp1301_43 (select ARGNAME_padding_NAMEEND_VAL temp1301_42)))
(assert (= temp1301_44 #x0000000000000000))
(assert (= temp1301_45 #x0000000000000005))
(assert (= temp1301_46 temp1301_45))
(assert (= temp1301_47 (select ARGNAME_padding_NAMEEND_VAL temp1301_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1301_27 temp1301_24)
             (bvslt temp1301_31 temp1301_28)
             (bvslt temp1301_35 temp1301_32)
             (bvslt temp1301_39 temp1301_36)
             (bvslt temp1301_43 temp1301_40)
             (bvslt temp1301_47 temp1301_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_48 #x0000000000000000))
(assert (= var1322786 temp1301_48))
(assert (= temp1301_49 #x0000000000000000))
(assert (= temp1301_50 temp1301_49))
(assert (= temp1301_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_50)))
(assert (= temp1301_52 #x0000000000000001))
(assert (= temp1301_53 temp1301_52))
(assert (= temp1301_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_53)))
(assert (= temp1301_55 #x0000000000000002))
(assert (= temp1301_56 temp1301_55))
(assert (= temp1301_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_56)))
(assert (= temp1301_58 #x0000000000000003))
(assert (= temp1301_59 temp1301_58))
(assert (= temp1301_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_59)))
(assert (= temp1301_61 #x0000000000000004))
(assert (= temp1301_62 temp1301_61))
(assert (= temp1301_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_62)))
(assert (= temp1301_64 #x0000000000000005))
(assert (= temp1301_65 temp1301_64))
(assert (= temp1301_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_65)))
(assert (= temp1301_67 #x0000000000000000))
(assert (= temp1301_68 #x0000000000000000))
(assert (= temp1301_69 temp1301_68))
(assert (= temp1301_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_69)))
(assert (= temp1301_71 #x0000000000000000))
(assert (= temp1301_72 #x0000000000000001))
(assert (= temp1301_73 temp1301_72))
(assert (= temp1301_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_73)))
(assert (= temp1301_75 #x0000000000000000))
(assert (= temp1301_76 #x0000000000000002))
(assert (= temp1301_77 temp1301_76))
(assert (= temp1301_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_77)))
(assert (= temp1301_79 #x0000000000000000))
(assert (= temp1301_80 #x0000000000000003))
(assert (= temp1301_81 temp1301_80))
(assert (= temp1301_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_81)))
(assert (= temp1301_83 #x0000000000000000))
(assert (= temp1301_84 #x0000000000000004))
(assert (= temp1301_85 temp1301_84))
(assert (= temp1301_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_85)))
(assert (= temp1301_87 #x0000000000000000))
(assert (= temp1301_88 #x0000000000000005))
(assert (= temp1301_89 temp1301_88))
(assert (= temp1301_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1301_70 temp1301_67)
             (bvslt temp1301_74 temp1301_71)
             (bvslt temp1301_78 temp1301_75)
             (bvslt temp1301_82 temp1301_79)
             (bvslt temp1301_86 temp1301_83)
             (bvslt temp1301_90 temp1301_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_91 #x0000000000000000))
(assert (= var1322797 temp1301_91))
(assert (= temp1301_92 #x0000000000000000))
(assert (= temp1301_93 temp1301_92))
(assert (= temp1301_94 (select ARGNAME_stride_NAMEEND_VAL temp1301_93)))
(assert (= temp1301_95 #x0000000000000001))
(assert (= temp1301_96 temp1301_95))
(assert (= temp1301_97 (select ARGNAME_stride_NAMEEND_VAL temp1301_96)))
(assert (= temp1301_98 #x0000000000000002))
(assert (= temp1301_99 temp1301_98))
(assert (= temp1301_100 (select ARGNAME_stride_NAMEEND_VAL temp1301_99)))
(assert (= temp1301_101 #x0000000000000003))
(assert (= temp1301_102 temp1301_101))
(assert (= temp1301_103 (select ARGNAME_stride_NAMEEND_VAL temp1301_102)))
(assert (= temp1301_104 #x0000000000000004))
(assert (= temp1301_105 temp1301_104))
(assert (= temp1301_106 (select ARGNAME_stride_NAMEEND_VAL temp1301_105)))
(assert (= temp1301_107 #x0000000000000005))
(assert (= temp1301_108 temp1301_107))
(assert (= temp1301_109 (select ARGNAME_stride_NAMEEND_VAL temp1301_108)))
(assert (= temp1301_110 #x0000000000000000))
(assert (= temp1301_111 #x0000000000000000))
(assert (= temp1301_112 temp1301_111))
(assert (= temp1301_113 (select ARGNAME_stride_NAMEEND_VAL temp1301_112)))
(assert (= temp1301_114 #x0000000000000000))
(assert (= temp1301_115 #x0000000000000001))
(assert (= temp1301_116 temp1301_115))
(assert (= temp1301_117 (select ARGNAME_stride_NAMEEND_VAL temp1301_116)))
(assert (= temp1301_118 #x0000000000000000))
(assert (= temp1301_119 #x0000000000000002))
(assert (= temp1301_120 temp1301_119))
(assert (= temp1301_121 (select ARGNAME_stride_NAMEEND_VAL temp1301_120)))
(assert (= temp1301_122 #x0000000000000000))
(assert (= temp1301_123 #x0000000000000003))
(assert (= temp1301_124 temp1301_123))
(assert (= temp1301_125 (select ARGNAME_stride_NAMEEND_VAL temp1301_124)))
(assert (= temp1301_126 #x0000000000000000))
(assert (= temp1301_127 #x0000000000000004))
(assert (= temp1301_128 temp1301_127))
(assert (= temp1301_129 (select ARGNAME_stride_NAMEEND_VAL temp1301_128)))
(assert (= temp1301_130 #x0000000000000000))
(assert (= temp1301_131 #x0000000000000005))
(assert (= temp1301_132 temp1301_131))
(assert (= temp1301_133 (select ARGNAME_stride_NAMEEND_VAL temp1301_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1301_113 temp1301_110)
             (bvsle temp1301_117 temp1301_114)
             (bvsle temp1301_121 temp1301_118)
             (bvsle temp1301_125 temp1301_122)
             (bvsle temp1301_129 temp1301_126)
             (bvsle temp1301_133 temp1301_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_134 #x0000000000000000))
(assert (= var1322807 temp1301_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_135 #x0000000000000001))
(assert (= var1322819 temp1301_135))
(assert (= temp1301_136 #x0000000000000000))
(assert (= var1310898 temp1301_136))
(assert (= temp1301_137 #x0000000000000000))
(assert (= temp1301_138 temp1301_137))
(assert (= temp1301_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_138)))
(assert (= temp1301_140 #x0000000000000001))
(assert (= temp1301_141 temp1301_140))
(assert (= temp1301_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_141)))
(assert (= temp1301_143 #x0000000000000002))
(assert (= temp1301_144 temp1301_143))
(assert (= temp1301_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_144)))
(assert (= temp1301_146 #x0000000000000003))
(assert (= temp1301_147 temp1301_146))
(assert (= temp1301_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_147)))
(assert (= temp1301_149 #x0000000000000004))
(assert (= temp1301_150 temp1301_149))
(assert (= temp1301_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_150)))
(assert (= temp1301_152 #x0000000000000005))
(assert (= temp1301_153 temp1301_152))
(assert (= temp1301_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_153)))
(assert (= temp1301_156 var1310898))
(assert (= temp1301_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_156)))
(assert (= temp1301_155 temp1301_157))
(assert (= var1322852
   (ite (bvslt temp1301_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_158 #x0000000000000000))
(assert (= var1322852 temp1301_158))
(assert (= temp1301_159 #x0000000000000000))
(assert (= var1310898 temp1301_159))
(assert (= temp1301_161 var1310898))
(assert (= temp1301_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_161)))
(assert (= temp1301_160 temp1301_162))
(assert (= var1322874 (bvsmod temp1301_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1301_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1301_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_164 #x0000000000000001))
(assert (= var1322875 temp1301_164))
(assert (= temp1301_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1301_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_166 #x0000000000000001))
(assert (= var1322895 temp1301_166))
(assert (= temp1301_167 #x0000000000000001))
(assert (= var1311786 temp1301_167))
(assert (= temp1301_168 #x0000000000000000))
(assert (= temp1301_169 temp1301_168))
(assert (= temp1301_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_169)))
(assert (= temp1301_171 #x0000000000000001))
(assert (= temp1301_172 temp1301_171))
(assert (= temp1301_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_172)))
(assert (= temp1301_174 #x0000000000000002))
(assert (= temp1301_175 temp1301_174))
(assert (= temp1301_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_175)))
(assert (= temp1301_177 #x0000000000000003))
(assert (= temp1301_178 temp1301_177))
(assert (= temp1301_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_178)))
(assert (= temp1301_180 #x0000000000000004))
(assert (= temp1301_181 temp1301_180))
(assert (= temp1301_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_181)))
(assert (= temp1301_183 #x0000000000000005))
(assert (= temp1301_184 temp1301_183))
(assert (= temp1301_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_184)))
(assert (= temp1301_186 #x0000000000000000))
(assert (= temp1301_187
   (ite (bvslt var1311786 temp1301_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1301_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_187)))
(assert (= var1322903 temp1301_188))
(assert (bvslt (ite (bvslt var1311786 temp1301_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1301_189 #x0000000000000001))
(assert (= var1311786 temp1301_189))
(assert (= temp1301_191 var1311786))
(assert (= temp1301_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_191)))
(assert (= temp1301_190 temp1301_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1301_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_193 #x0000000000000001))
(assert (= var1322908 temp1301_193))
(assert (= temp1301_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1301_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_195 #x0000000000000001))
(assert (= var1322975 temp1301_195))
(assert (= temp1301_196 #x0000000000000000))
(assert (= var1310898 temp1301_196))
(assert (= temp1301_197 #x0000000000000000))
(assert (= temp1301_198 temp1301_197))
(assert (= temp1301_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1301_198)))
(assert (= temp1301_200 #x0000000000000001))
(assert (= temp1301_201 temp1301_200))
(assert (= temp1301_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1301_201)))
(assert (= temp1301_203 #x0000000000000002))
(assert (= temp1301_204 temp1301_203))
(assert (= temp1301_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1301_204)))
(assert (= temp1301_206 #x0000000000000003))
(assert (= temp1301_207 temp1301_206))
(assert (= temp1301_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1301_207)))
(assert (= temp1301_209 #x0000000000000004))
(assert (= temp1301_210 temp1301_209))
(assert (= temp1301_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1301_210)))
(assert (= temp1301_212 #x0000000000000005))
(assert (= temp1301_213 temp1301_212))
(assert (= temp1301_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1301_213)))
(assert (= temp1301_215 #x0000000000000000))
(assert (= temp1301_216
   (ite (bvslt var1310898 temp1301_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1301_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1301_216)))
(assert (= var1322977 temp1301_217))
(assert (bvslt (ite (bvslt var1310898 temp1301_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1301_218 #x0000000000000000))
(assert (= var1310898 temp1301_218))
(assert (= temp1301_220 var1310898))
(assert (= temp1301_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_220)))
(assert (= temp1301_219 temp1301_221))
(assert (= var1322980
   (ite (= var1322977 temp1301_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_222 #x0000000000000001))
(assert (= var1322980 temp1301_222))
(assert (= temp1301_223 #x0000000000000002))
(assert (= var1848169 temp1301_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1301_225 #x0000000000000001))
(assert (= var1323065 temp1301_225))
(assert (= temp1301_226 #x0000000000000001))
(assert (= var3486735 temp1301_226))
(assert (= temp1301_227 #x0000000000000001))
(assert (= var3814415 temp1301_227))
(assert (= temp1301_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1301_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_229 #x0000000000000001))
(assert (= var79986 temp1301_229))
(assert (= temp1301_230 #x0000000000000001))
(assert (= var80116 temp1301_230))
(assert (= var4796905 var80116))
(assert (= temp1301_231 #x0000000000000000))
(assert (= var4784306 temp1301_231))
(assert (= temp1301_232 #x0000000000000000))
(assert (= temp1301_233
   (ite (bvslt var4784306 temp1301_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1301_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_233)))
(assert (= var4796924 temp1301_234))
(assert (bvslt (ite (bvslt var4784306 temp1301_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1301_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1301_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_236 #x0000000000000001))
(assert (= var4796925 temp1301_236))
(assert (= temp1301_237 #x0000000000000000))
(assert (= var5050621 temp1301_237))
(assert (= var5050566 var5050621))
(assert (= var4996900 var5050566))
(assert (= var4996927 var4996900))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1301_238 #x0000000000000002))
(assert (= var5256835 temp1301_238))
(assert (= var5256837 (bvsub ARGNAME_weight_NAMEEND_DIM var5256835)))
(assert (= var5322380 var5256835))
(assert (= var5322381 var5256837))
(assert (= var5322394 (bvadd var5322381 var5322380)))
(assert (= var5322396
   (ite (bvsgt var5322394 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_239 #x0000000000000000))
(assert (= var5322396 temp1301_239))
(assert (= var5322421 var5322380))
(assert (= var5322423 var5322381))
(assert (= var5443411 var5322423))
(assert (= temp1301_241 #xffffffffffffffff))
(assert (= temp1301_240 temp1301_241))
(assert (= temp1301_242 #x0000000000000001))
(assert (= var66602 temp1301_242))
(assert (= temp1301_243 #x0000000000000000))
(assert (= temp1301_244
   (ite (bvslt var66602 temp1301_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp1301_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_244)))
(assert (= var80523 temp1301_245))
(assert (bvslt (ite (bvslt var66602 temp1301_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1301_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp1301_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_247 #x0000000000000001))
(assert (= var80524 temp1301_247))
(assert (= temp1301_249 #xffffffffffffffff))
(assert (= temp1301_248 temp1301_249))
(assert (= temp1301_250 #x0000000000000001))
(assert (= var79986 temp1301_250))
(model-add temp1301_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1301_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1301_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






