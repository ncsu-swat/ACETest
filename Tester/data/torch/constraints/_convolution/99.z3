(declare-fun temp130_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp130_2 () (_ BitVec 64))
(declare-fun temp130_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp130_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp130_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp130_6 () (_ BitVec 64))
(declare-fun temp130_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp130_8 () (_ BitVec 64))
(declare-fun temp130_9 () (_ BitVec 64))
(declare-fun temp130_10 () (_ BitVec 64))
(declare-fun temp130_11 () (_ BitVec 64))
(declare-fun temp130_12 () (_ BitVec 64))
(declare-fun temp130_13 () (_ BitVec 64))
(declare-fun temp130_14 () (_ BitVec 64))
(declare-fun temp130_15 () (_ BitVec 64))
(declare-fun temp130_16 () (_ BitVec 64))
(declare-fun temp130_17 () (_ BitVec 64))
(declare-fun temp130_18 () (_ BitVec 64))
(declare-fun temp130_19 () (_ BitVec 64))
(declare-fun temp130_20 () (_ BitVec 64))
(declare-fun temp130_21 () (_ BitVec 64))
(declare-fun temp130_22 () (_ BitVec 64))
(declare-fun temp130_23 () (_ BitVec 64))
(declare-fun temp130_24 () (_ BitVec 64))
(declare-fun temp130_25 () (_ BitVec 64))
(declare-fun temp130_26 () (_ BitVec 64))
(declare-fun temp130_27 () (_ BitVec 64))
(declare-fun temp130_28 () (_ BitVec 64))
(declare-fun temp130_29 () (_ BitVec 64))
(declare-fun temp130_30 () (_ BitVec 64))
(declare-fun temp130_31 () (_ BitVec 64))
(declare-fun temp130_32 () (_ BitVec 64))
(declare-fun temp130_33 () (_ BitVec 64))
(declare-fun temp130_34 () (_ BitVec 64))
(declare-fun temp130_35 () (_ BitVec 64))
(declare-fun temp130_36 () (_ BitVec 64))
(declare-fun temp130_37 () (_ BitVec 64))
(declare-fun temp130_38 () (_ BitVec 64))
(declare-fun temp130_39 () (_ BitVec 64))
(declare-fun temp130_40 () (_ BitVec 64))
(declare-fun temp130_41 () (_ BitVec 64))
(declare-fun temp130_42 () (_ BitVec 64))
(declare-fun temp130_43 () (_ BitVec 64))
(declare-fun temp130_44 () (_ BitVec 64))
(declare-fun temp130_45 () (_ BitVec 64))
(declare-fun temp130_46 () (_ BitVec 64))
(declare-fun temp130_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp130_48 () (_ BitVec 64))
(declare-fun temp130_49 () (_ BitVec 64))
(declare-fun temp130_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp130_51 () (_ BitVec 64))
(declare-fun temp130_52 () (_ BitVec 64))
(declare-fun temp130_53 () (_ BitVec 64))
(declare-fun temp130_54 () (_ BitVec 64))
(declare-fun temp130_55 () (_ BitVec 64))
(declare-fun temp130_56 () (_ BitVec 64))
(declare-fun temp130_57 () (_ BitVec 64))
(declare-fun temp130_58 () (_ BitVec 64))
(declare-fun temp130_59 () (_ BitVec 64))
(declare-fun temp130_60 () (_ BitVec 64))
(declare-fun temp130_61 () (_ BitVec 64))
(declare-fun temp130_62 () (_ BitVec 64))
(declare-fun temp130_63 () (_ BitVec 64))
(declare-fun temp130_64 () (_ BitVec 64))
(declare-fun temp130_65 () (_ BitVec 64))
(declare-fun temp130_66 () (_ BitVec 64))
(declare-fun temp130_67 () (_ BitVec 64))
(declare-fun temp130_68 () (_ BitVec 64))
(declare-fun temp130_69 () (_ BitVec 64))
(declare-fun temp130_70 () (_ BitVec 64))
(declare-fun temp130_71 () (_ BitVec 64))
(declare-fun temp130_72 () (_ BitVec 64))
(declare-fun temp130_73 () (_ BitVec 64))
(declare-fun temp130_74 () (_ BitVec 64))
(declare-fun temp130_75 () (_ BitVec 64))
(declare-fun temp130_76 () (_ BitVec 64))
(declare-fun temp130_77 () (_ BitVec 64))
(declare-fun temp130_78 () (_ BitVec 64))
(declare-fun temp130_79 () (_ BitVec 64))
(declare-fun temp130_80 () (_ BitVec 64))
(declare-fun temp130_81 () (_ BitVec 64))
(declare-fun temp130_82 () (_ BitVec 64))
(declare-fun temp130_83 () (_ BitVec 64))
(declare-fun temp130_84 () (_ BitVec 64))
(declare-fun temp130_85 () (_ BitVec 64))
(declare-fun temp130_86 () (_ BitVec 64))
(declare-fun temp130_87 () (_ BitVec 64))
(declare-fun temp130_88 () (_ BitVec 64))
(declare-fun temp130_89 () (_ BitVec 64))
(declare-fun temp130_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp130_91 () (_ BitVec 64))
(declare-fun temp130_92 () (_ BitVec 64))
(declare-fun temp130_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp130_94 () (_ BitVec 64))
(declare-fun temp130_95 () (_ BitVec 64))
(declare-fun temp130_96 () (_ BitVec 64))
(declare-fun temp130_97 () (_ BitVec 64))
(declare-fun temp130_98 () (_ BitVec 64))
(declare-fun temp130_99 () (_ BitVec 64))
(declare-fun temp130_100 () (_ BitVec 64))
(declare-fun temp130_101 () (_ BitVec 64))
(declare-fun temp130_102 () (_ BitVec 64))
(declare-fun temp130_103 () (_ BitVec 64))
(declare-fun temp130_104 () (_ BitVec 64))
(declare-fun temp130_105 () (_ BitVec 64))
(declare-fun temp130_106 () (_ BitVec 64))
(declare-fun temp130_107 () (_ BitVec 64))
(declare-fun temp130_108 () (_ BitVec 64))
(declare-fun temp130_109 () (_ BitVec 64))
(declare-fun temp130_110 () (_ BitVec 64))
(declare-fun temp130_111 () (_ BitVec 64))
(declare-fun temp130_112 () (_ BitVec 64))
(declare-fun temp130_113 () (_ BitVec 64))
(declare-fun temp130_114 () (_ BitVec 64))
(declare-fun temp130_115 () (_ BitVec 64))
(declare-fun temp130_116 () (_ BitVec 64))
(declare-fun temp130_117 () (_ BitVec 64))
(declare-fun temp130_118 () (_ BitVec 64))
(declare-fun temp130_119 () (_ BitVec 64))
(declare-fun temp130_120 () (_ BitVec 64))
(declare-fun temp130_121 () (_ BitVec 64))
(declare-fun temp130_122 () (_ BitVec 64))
(declare-fun temp130_123 () (_ BitVec 64))
(declare-fun temp130_124 () (_ BitVec 64))
(declare-fun temp130_125 () (_ BitVec 64))
(declare-fun temp130_126 () (_ BitVec 64))
(declare-fun temp130_127 () (_ BitVec 64))
(declare-fun temp130_128 () (_ BitVec 64))
(declare-fun temp130_129 () (_ BitVec 64))
(declare-fun temp130_130 () (_ BitVec 64))
(declare-fun temp130_131 () (_ BitVec 64))
(declare-fun temp130_132 () (_ BitVec 64))
(declare-fun temp130_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp130_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp130_135 () (_ BitVec 64))
(declare-fun temp130_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp130_137 () (_ BitVec 64))
(declare-fun temp130_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp130_139 () (_ BitVec 64))
(declare-fun temp130_140 () (_ BitVec 64))
(declare-fun temp130_141 () (_ BitVec 64))
(declare-fun temp130_142 () (_ BitVec 64))
(declare-fun temp130_143 () (_ BitVec 64))
(declare-fun temp130_144 () (_ BitVec 64))
(declare-fun temp130_145 () (_ BitVec 64))
(declare-fun temp130_146 () (_ BitVec 64))
(declare-fun temp130_147 () (_ BitVec 64))
(declare-fun temp130_148 () (_ BitVec 64))
(declare-fun temp130_149 () (_ BitVec 64))
(declare-fun temp130_150 () (_ BitVec 64))
(declare-fun temp130_151 () (_ BitVec 64))
(declare-fun temp130_152 () (_ BitVec 64))
(declare-fun temp130_153 () (_ BitVec 64))
(declare-fun temp130_154 () (_ BitVec 64))
(declare-fun temp130_156 () (_ BitVec 64))
(declare-fun temp130_157 () (_ BitVec 64))
(declare-fun temp130_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp130_158 () (_ BitVec 64))
(declare-fun temp130_159 () (_ BitVec 64))
(declare-fun temp130_161 () (_ BitVec 64))
(declare-fun temp130_162 () (_ BitVec 64))
(declare-fun temp130_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp130_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp130_164 () (_ BitVec 64))
(declare-fun temp130_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp130_166 () (_ BitVec 64))
(declare-fun temp130_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp130_168 () (_ BitVec 64))
(declare-fun temp130_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp130_170 () (_ BitVec 64))
(declare-fun temp130_171 () (_ BitVec 64))
(declare-fun temp130_172 () (_ BitVec 64))
(declare-fun temp130_173 () (_ BitVec 64))
(declare-fun temp130_174 () (_ BitVec 64))
(declare-fun temp130_175 () (_ BitVec 64))
(declare-fun temp130_176 () (_ BitVec 64))
(declare-fun temp130_177 () (_ BitVec 64))
(declare-fun temp130_178 () (_ BitVec 64))
(declare-fun temp130_179 () (_ BitVec 64))
(declare-fun temp130_180 () (_ BitVec 64))
(declare-fun temp130_181 () (_ BitVec 64))
(declare-fun temp130_182 () (_ BitVec 64))
(declare-fun temp130_183 () (_ BitVec 64))
(declare-fun temp130_184 () (_ BitVec 64))
(declare-fun temp130_185 () (_ BitVec 64))
(declare-fun temp130_186 () (_ BitVec 64))
(declare-fun temp130_187 () (_ BitVec 64))
(declare-fun temp130_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp130_189 () (_ BitVec 64))
(declare-fun temp130_191 () (_ BitVec 64))
(declare-fun temp130_192 () (_ BitVec 64))
(declare-fun temp130_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp130_193 () (_ BitVec 64))
(declare-fun temp130_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp130_195 () (_ BitVec 64))
(declare-fun temp130_196 () (_ BitVec 64))
(declare-fun temp130_197 () (_ BitVec 64))
(declare-fun temp130_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp130_199 () (_ BitVec 64))
(declare-fun temp130_200 () (_ BitVec 64))
(declare-fun temp130_201 () (_ BitVec 64))
(declare-fun temp130_202 () (_ BitVec 64))
(declare-fun temp130_203 () (_ BitVec 64))
(declare-fun temp130_204 () (_ BitVec 64))
(declare-fun temp130_205 () (_ BitVec 64))
(declare-fun temp130_206 () (_ BitVec 64))
(declare-fun temp130_207 () (_ BitVec 64))
(declare-fun temp130_208 () (_ BitVec 64))
(declare-fun temp130_209 () (_ BitVec 64))
(declare-fun temp130_210 () (_ BitVec 64))
(declare-fun temp130_211 () (_ BitVec 64))
(declare-fun temp130_212 () (_ BitVec 64))
(declare-fun temp130_213 () (_ BitVec 64))
(declare-fun temp130_214 () (_ BitVec 64))
(declare-fun temp130_215 () (_ BitVec 64))
(declare-fun temp130_216 () (_ BitVec 64))
(declare-fun temp130_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp130_218 () (_ BitVec 64))
(declare-fun temp130_220 () (_ BitVec 64))
(declare-fun temp130_221 () (_ BitVec 64))
(declare-fun temp130_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp130_222 () (_ BitVec 64))
(declare-fun temp130_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp130_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp130_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp130_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp130_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp130_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp130_229 () (_ BitVec 64))
(declare-fun temp130_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp130_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp130_232 () (_ BitVec 64))
(declare-fun temp130_233 () (_ BitVec 64))
(declare-fun temp130_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp130_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp130_236 () (_ BitVec 64))
(declare-fun temp130_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp130_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp130_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp130_241 () (_ BitVec 64))
(declare-fun temp130_240 () (_ BitVec 64))
(declare-fun temp130_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp130_243 () (_ BitVec 64))
(declare-fun temp130_244 () (_ BitVec 64))
(declare-fun temp130_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp130_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp130_247 () (_ BitVec 64))
(declare-fun temp130_249 () (_ BitVec 64))
(declare-fun temp130_248 () (_ BitVec 64))
(declare-fun temp130_250 () (_ BitVec 64))
(assert (= temp130_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp130_1)))
(assert (= temp130_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp130_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_3 #x0000000000000000))
(assert (= var79869 temp130_3))
(assert (= temp130_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp130_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_5 #x0000000000000000))
(assert (= var79914 temp130_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp130_6 #x0000000000000000))
(assert (= temp130_7 temp130_6))
(assert (= temp130_8 (select ARGNAME_padding_NAMEEND_VAL temp130_7)))
(assert (= temp130_9 #x0000000000000001))
(assert (= temp130_10 temp130_9))
(assert (= temp130_11 (select ARGNAME_padding_NAMEEND_VAL temp130_10)))
(assert (= temp130_12 #x0000000000000002))
(assert (= temp130_13 temp130_12))
(assert (= temp130_14 (select ARGNAME_padding_NAMEEND_VAL temp130_13)))
(assert (= temp130_15 #x0000000000000003))
(assert (= temp130_16 temp130_15))
(assert (= temp130_17 (select ARGNAME_padding_NAMEEND_VAL temp130_16)))
(assert (= temp130_18 #x0000000000000004))
(assert (= temp130_19 temp130_18))
(assert (= temp130_20 (select ARGNAME_padding_NAMEEND_VAL temp130_19)))
(assert (= temp130_21 #x0000000000000005))
(assert (= temp130_22 temp130_21))
(assert (= temp130_23 (select ARGNAME_padding_NAMEEND_VAL temp130_22)))
(assert (= temp130_24 #x0000000000000000))
(assert (= temp130_25 #x0000000000000000))
(assert (= temp130_26 temp130_25))
(assert (= temp130_27 (select ARGNAME_padding_NAMEEND_VAL temp130_26)))
(assert (= temp130_28 #x0000000000000000))
(assert (= temp130_29 #x0000000000000001))
(assert (= temp130_30 temp130_29))
(assert (= temp130_31 (select ARGNAME_padding_NAMEEND_VAL temp130_30)))
(assert (= temp130_32 #x0000000000000000))
(assert (= temp130_33 #x0000000000000002))
(assert (= temp130_34 temp130_33))
(assert (= temp130_35 (select ARGNAME_padding_NAMEEND_VAL temp130_34)))
(assert (= temp130_36 #x0000000000000000))
(assert (= temp130_37 #x0000000000000003))
(assert (= temp130_38 temp130_37))
(assert (= temp130_39 (select ARGNAME_padding_NAMEEND_VAL temp130_38)))
(assert (= temp130_40 #x0000000000000000))
(assert (= temp130_41 #x0000000000000004))
(assert (= temp130_42 temp130_41))
(assert (= temp130_43 (select ARGNAME_padding_NAMEEND_VAL temp130_42)))
(assert (= temp130_44 #x0000000000000000))
(assert (= temp130_45 #x0000000000000005))
(assert (= temp130_46 temp130_45))
(assert (= temp130_47 (select ARGNAME_padding_NAMEEND_VAL temp130_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp130_27 temp130_24)
             (bvslt temp130_31 temp130_28)
             (bvslt temp130_35 temp130_32)
             (bvslt temp130_39 temp130_36)
             (bvslt temp130_43 temp130_40)
             (bvslt temp130_47 temp130_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_48 #x0000000000000000))
(assert (= var1322786 temp130_48))
(assert (= temp130_49 #x0000000000000000))
(assert (= temp130_50 temp130_49))
(assert (= temp130_51 (select ARGNAME_output_padding_NAMEEND_VAL temp130_50)))
(assert (= temp130_52 #x0000000000000001))
(assert (= temp130_53 temp130_52))
(assert (= temp130_54 (select ARGNAME_output_padding_NAMEEND_VAL temp130_53)))
(assert (= temp130_55 #x0000000000000002))
(assert (= temp130_56 temp130_55))
(assert (= temp130_57 (select ARGNAME_output_padding_NAMEEND_VAL temp130_56)))
(assert (= temp130_58 #x0000000000000003))
(assert (= temp130_59 temp130_58))
(assert (= temp130_60 (select ARGNAME_output_padding_NAMEEND_VAL temp130_59)))
(assert (= temp130_61 #x0000000000000004))
(assert (= temp130_62 temp130_61))
(assert (= temp130_63 (select ARGNAME_output_padding_NAMEEND_VAL temp130_62)))
(assert (= temp130_64 #x0000000000000005))
(assert (= temp130_65 temp130_64))
(assert (= temp130_66 (select ARGNAME_output_padding_NAMEEND_VAL temp130_65)))
(assert (= temp130_67 #x0000000000000000))
(assert (= temp130_68 #x0000000000000000))
(assert (= temp130_69 temp130_68))
(assert (= temp130_70 (select ARGNAME_output_padding_NAMEEND_VAL temp130_69)))
(assert (= temp130_71 #x0000000000000000))
(assert (= temp130_72 #x0000000000000001))
(assert (= temp130_73 temp130_72))
(assert (= temp130_74 (select ARGNAME_output_padding_NAMEEND_VAL temp130_73)))
(assert (= temp130_75 #x0000000000000000))
(assert (= temp130_76 #x0000000000000002))
(assert (= temp130_77 temp130_76))
(assert (= temp130_78 (select ARGNAME_output_padding_NAMEEND_VAL temp130_77)))
(assert (= temp130_79 #x0000000000000000))
(assert (= temp130_80 #x0000000000000003))
(assert (= temp130_81 temp130_80))
(assert (= temp130_82 (select ARGNAME_output_padding_NAMEEND_VAL temp130_81)))
(assert (= temp130_83 #x0000000000000000))
(assert (= temp130_84 #x0000000000000004))
(assert (= temp130_85 temp130_84))
(assert (= temp130_86 (select ARGNAME_output_padding_NAMEEND_VAL temp130_85)))
(assert (= temp130_87 #x0000000000000000))
(assert (= temp130_88 #x0000000000000005))
(assert (= temp130_89 temp130_88))
(assert (= temp130_90 (select ARGNAME_output_padding_NAMEEND_VAL temp130_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp130_70 temp130_67)
             (bvslt temp130_74 temp130_71)
             (bvslt temp130_78 temp130_75)
             (bvslt temp130_82 temp130_79)
             (bvslt temp130_86 temp130_83)
             (bvslt temp130_90 temp130_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_91 #x0000000000000000))
(assert (= var1322797 temp130_91))
(assert (= temp130_92 #x0000000000000000))
(assert (= temp130_93 temp130_92))
(assert (= temp130_94 (select ARGNAME_stride_NAMEEND_VAL temp130_93)))
(assert (= temp130_95 #x0000000000000001))
(assert (= temp130_96 temp130_95))
(assert (= temp130_97 (select ARGNAME_stride_NAMEEND_VAL temp130_96)))
(assert (= temp130_98 #x0000000000000002))
(assert (= temp130_99 temp130_98))
(assert (= temp130_100 (select ARGNAME_stride_NAMEEND_VAL temp130_99)))
(assert (= temp130_101 #x0000000000000003))
(assert (= temp130_102 temp130_101))
(assert (= temp130_103 (select ARGNAME_stride_NAMEEND_VAL temp130_102)))
(assert (= temp130_104 #x0000000000000004))
(assert (= temp130_105 temp130_104))
(assert (= temp130_106 (select ARGNAME_stride_NAMEEND_VAL temp130_105)))
(assert (= temp130_107 #x0000000000000005))
(assert (= temp130_108 temp130_107))
(assert (= temp130_109 (select ARGNAME_stride_NAMEEND_VAL temp130_108)))
(assert (= temp130_110 #x0000000000000000))
(assert (= temp130_111 #x0000000000000000))
(assert (= temp130_112 temp130_111))
(assert (= temp130_113 (select ARGNAME_stride_NAMEEND_VAL temp130_112)))
(assert (= temp130_114 #x0000000000000000))
(assert (= temp130_115 #x0000000000000001))
(assert (= temp130_116 temp130_115))
(assert (= temp130_117 (select ARGNAME_stride_NAMEEND_VAL temp130_116)))
(assert (= temp130_118 #x0000000000000000))
(assert (= temp130_119 #x0000000000000002))
(assert (= temp130_120 temp130_119))
(assert (= temp130_121 (select ARGNAME_stride_NAMEEND_VAL temp130_120)))
(assert (= temp130_122 #x0000000000000000))
(assert (= temp130_123 #x0000000000000003))
(assert (= temp130_124 temp130_123))
(assert (= temp130_125 (select ARGNAME_stride_NAMEEND_VAL temp130_124)))
(assert (= temp130_126 #x0000000000000000))
(assert (= temp130_127 #x0000000000000004))
(assert (= temp130_128 temp130_127))
(assert (= temp130_129 (select ARGNAME_stride_NAMEEND_VAL temp130_128)))
(assert (= temp130_130 #x0000000000000000))
(assert (= temp130_131 #x0000000000000005))
(assert (= temp130_132 temp130_131))
(assert (= temp130_133 (select ARGNAME_stride_NAMEEND_VAL temp130_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp130_113 temp130_110)
             (bvsle temp130_117 temp130_114)
             (bvsle temp130_121 temp130_118)
             (bvsle temp130_125 temp130_122)
             (bvsle temp130_129 temp130_126)
             (bvsle temp130_133 temp130_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_134 #x0000000000000000))
(assert (= var1322807 temp130_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_135 #x0000000000000001))
(assert (= var1322819 temp130_135))
(assert (= temp130_136 #x0000000000000000))
(assert (= var1310898 temp130_136))
(assert (= temp130_137 #x0000000000000000))
(assert (= temp130_138 temp130_137))
(assert (= temp130_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_138)))
(assert (= temp130_140 #x0000000000000001))
(assert (= temp130_141 temp130_140))
(assert (= temp130_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_141)))
(assert (= temp130_143 #x0000000000000002))
(assert (= temp130_144 temp130_143))
(assert (= temp130_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_144)))
(assert (= temp130_146 #x0000000000000003))
(assert (= temp130_147 temp130_146))
(assert (= temp130_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_147)))
(assert (= temp130_149 #x0000000000000004))
(assert (= temp130_150 temp130_149))
(assert (= temp130_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_150)))
(assert (= temp130_152 #x0000000000000005))
(assert (= temp130_153 temp130_152))
(assert (= temp130_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_153)))
(assert (= temp130_156 var1310898))
(assert (= temp130_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_156)))
(assert (= temp130_155 temp130_157))
(assert (= var1322852
   (ite (bvslt temp130_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_158 #x0000000000000000))
(assert (= var1322852 temp130_158))
(assert (= temp130_159 #x0000000000000000))
(assert (= var1310898 temp130_159))
(assert (= temp130_161 var1310898))
(assert (= temp130_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_161)))
(assert (= temp130_160 temp130_162))
(assert (= var1322874 (bvsmod temp130_160 ARGNAME_groups_NAMEEND)))
(assert (= temp130_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp130_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp130_164 #x0000000000000001))
(assert (= var1322875 temp130_164))
(assert (= temp130_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp130_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_166 #x0000000000000001))
(assert (= var1322895 temp130_166))
(assert (= temp130_167 #x0000000000000001))
(assert (= var1311786 temp130_167))
(assert (= temp130_168 #x0000000000000000))
(assert (= temp130_169 temp130_168))
(assert (= temp130_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp130_169)))
(assert (= temp130_171 #x0000000000000001))
(assert (= temp130_172 temp130_171))
(assert (= temp130_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp130_172)))
(assert (= temp130_174 #x0000000000000002))
(assert (= temp130_175 temp130_174))
(assert (= temp130_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp130_175)))
(assert (= temp130_177 #x0000000000000003))
(assert (= temp130_178 temp130_177))
(assert (= temp130_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp130_178)))
(assert (= temp130_180 #x0000000000000004))
(assert (= temp130_181 temp130_180))
(assert (= temp130_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp130_181)))
(assert (= temp130_183 #x0000000000000005))
(assert (= temp130_184 temp130_183))
(assert (= temp130_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp130_184)))
(assert (= temp130_186 #x0000000000000000))
(assert (= temp130_187
   (ite (bvslt var1311786 temp130_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp130_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp130_187)))
(assert (= var1322903 temp130_188))
(assert (bvslt (ite (bvslt var1311786 temp130_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp130_189 #x0000000000000001))
(assert (= var1311786 temp130_189))
(assert (= temp130_191 var1311786))
(assert (= temp130_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_191)))
(assert (= temp130_190 temp130_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp130_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp130_193 #x0000000000000001))
(assert (= var1322908 temp130_193))
(assert (= temp130_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp130_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_195 #x0000000000000001))
(assert (= var1322975 temp130_195))
(assert (= temp130_196 #x0000000000000000))
(assert (= var1310898 temp130_196))
(assert (= temp130_197 #x0000000000000000))
(assert (= temp130_198 temp130_197))
(assert (= temp130_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp130_198)))
(assert (= temp130_200 #x0000000000000001))
(assert (= temp130_201 temp130_200))
(assert (= temp130_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp130_201)))
(assert (= temp130_203 #x0000000000000002))
(assert (= temp130_204 temp130_203))
(assert (= temp130_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp130_204)))
(assert (= temp130_206 #x0000000000000003))
(assert (= temp130_207 temp130_206))
(assert (= temp130_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp130_207)))
(assert (= temp130_209 #x0000000000000004))
(assert (= temp130_210 temp130_209))
(assert (= temp130_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp130_210)))
(assert (= temp130_212 #x0000000000000005))
(assert (= temp130_213 temp130_212))
(assert (= temp130_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp130_213)))
(assert (= temp130_215 #x0000000000000000))
(assert (= temp130_216
   (ite (bvslt var1310898 temp130_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp130_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp130_216)))
(assert (= var1322977 temp130_217))
(assert (bvslt (ite (bvslt var1310898 temp130_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp130_218 #x0000000000000000))
(assert (= var1310898 temp130_218))
(assert (= temp130_220 var1310898))
(assert (= temp130_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_220)))
(assert (= temp130_219 temp130_221))
(assert (= var1322980
   (ite (= var1322977 temp130_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp130_222 #x0000000000000001))
(assert (= var1322980 temp130_222))
(assert (= temp130_223 #x0000000000000002))
(assert (= var1848169 temp130_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp130_225 #x0000000000000001))
(assert (= var1323065 temp130_225))
(assert (= temp130_226 #x0000000000000001))
(assert (= var3486735 temp130_226))
(assert (= temp130_227 #x0000000000000001))
(assert (= var3814415 temp130_227))
(assert (= temp130_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp130_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_229 #x0000000000000001))
(assert (= var79986 temp130_229))
(assert (= temp130_230 #x0000000000000001))
(assert (= var80116 temp130_230))
(assert (= var4796905 var80116))
(assert (= temp130_231 #x0000000000000000))
(assert (= var4784306 temp130_231))
(assert (= temp130_232 #x0000000000000000))
(assert (= temp130_233
   (ite (bvslt var4784306 temp130_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp130_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp130_233)))
(assert (= var4796924 temp130_234))
(assert (bvslt (ite (bvslt var4784306 temp130_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp130_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp130_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp130_236 #x0000000000000001))
(assert (= var4796925 temp130_236))
(assert (= temp130_237 #x0000000000000000))
(assert (= var4996927 temp130_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp130_238 #x0000000000000002))
(assert (= var5125763 temp130_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_239 #x0000000000000000))
(assert (= var5191324 temp130_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp130_241 #xffffffffffffffff))
(assert (= temp130_240 temp130_241))
(assert (= temp130_242 #x0000000000000001))
(assert (= var66602 temp130_242))
(assert (= temp130_243 #x0000000000000000))
(assert (= temp130_244
   (ite (bvslt var66602 temp130_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp130_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp130_244)))
(assert (= var80523 temp130_245))
(assert (bvslt (ite (bvslt var66602 temp130_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp130_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp130_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp130_247 #x0000000000000001))
(assert (= var80524 temp130_247))
(assert (= temp130_249 #xffffffffffffffff))
(assert (= temp130_248 temp130_249))
(assert (= temp130_250 #x0000000000000001))
(assert (= var79986 temp130_250))
(model-add temp130_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp130_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp130_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






