(declare-fun temp1012_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1012_2 () (_ BitVec 64))
(declare-fun temp1012_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1012_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1012_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1012_6 () (_ BitVec 64))
(declare-fun temp1012_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_8 () (_ BitVec 64))
(declare-fun temp1012_9 () (_ BitVec 64))
(declare-fun temp1012_10 () (_ BitVec 64))
(declare-fun temp1012_11 () (_ BitVec 64))
(declare-fun temp1012_12 () (_ BitVec 64))
(declare-fun temp1012_13 () (_ BitVec 64))
(declare-fun temp1012_14 () (_ BitVec 64))
(declare-fun temp1012_15 () (_ BitVec 64))
(declare-fun temp1012_16 () (_ BitVec 64))
(declare-fun temp1012_17 () (_ BitVec 64))
(declare-fun temp1012_18 () (_ BitVec 64))
(declare-fun temp1012_19 () (_ BitVec 64))
(declare-fun temp1012_20 () (_ BitVec 64))
(declare-fun temp1012_21 () (_ BitVec 64))
(declare-fun temp1012_22 () (_ BitVec 64))
(declare-fun temp1012_23 () (_ BitVec 64))
(declare-fun temp1012_24 () (_ BitVec 64))
(declare-fun temp1012_25 () (_ BitVec 64))
(declare-fun temp1012_26 () (_ BitVec 64))
(declare-fun temp1012_27 () (_ BitVec 64))
(declare-fun temp1012_28 () (_ BitVec 64))
(declare-fun temp1012_29 () (_ BitVec 64))
(declare-fun temp1012_30 () (_ BitVec 64))
(declare-fun temp1012_31 () (_ BitVec 64))
(declare-fun temp1012_32 () (_ BitVec 64))
(declare-fun temp1012_33 () (_ BitVec 64))
(declare-fun temp1012_34 () (_ BitVec 64))
(declare-fun temp1012_35 () (_ BitVec 64))
(declare-fun temp1012_36 () (_ BitVec 64))
(declare-fun temp1012_37 () (_ BitVec 64))
(declare-fun temp1012_38 () (_ BitVec 64))
(declare-fun temp1012_39 () (_ BitVec 64))
(declare-fun temp1012_40 () (_ BitVec 64))
(declare-fun temp1012_41 () (_ BitVec 64))
(declare-fun temp1012_42 () (_ BitVec 64))
(declare-fun temp1012_43 () (_ BitVec 64))
(declare-fun temp1012_44 () (_ BitVec 64))
(declare-fun temp1012_45 () (_ BitVec 64))
(declare-fun temp1012_46 () (_ BitVec 64))
(declare-fun temp1012_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1012_48 () (_ BitVec 64))
(declare-fun temp1012_49 () (_ BitVec 64))
(declare-fun temp1012_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_51 () (_ BitVec 64))
(declare-fun temp1012_52 () (_ BitVec 64))
(declare-fun temp1012_53 () (_ BitVec 64))
(declare-fun temp1012_54 () (_ BitVec 64))
(declare-fun temp1012_55 () (_ BitVec 64))
(declare-fun temp1012_56 () (_ BitVec 64))
(declare-fun temp1012_57 () (_ BitVec 64))
(declare-fun temp1012_58 () (_ BitVec 64))
(declare-fun temp1012_59 () (_ BitVec 64))
(declare-fun temp1012_60 () (_ BitVec 64))
(declare-fun temp1012_61 () (_ BitVec 64))
(declare-fun temp1012_62 () (_ BitVec 64))
(declare-fun temp1012_63 () (_ BitVec 64))
(declare-fun temp1012_64 () (_ BitVec 64))
(declare-fun temp1012_65 () (_ BitVec 64))
(declare-fun temp1012_66 () (_ BitVec 64))
(declare-fun temp1012_67 () (_ BitVec 64))
(declare-fun temp1012_68 () (_ BitVec 64))
(declare-fun temp1012_69 () (_ BitVec 64))
(declare-fun temp1012_70 () (_ BitVec 64))
(declare-fun temp1012_71 () (_ BitVec 64))
(declare-fun temp1012_72 () (_ BitVec 64))
(declare-fun temp1012_73 () (_ BitVec 64))
(declare-fun temp1012_74 () (_ BitVec 64))
(declare-fun temp1012_75 () (_ BitVec 64))
(declare-fun temp1012_76 () (_ BitVec 64))
(declare-fun temp1012_77 () (_ BitVec 64))
(declare-fun temp1012_78 () (_ BitVec 64))
(declare-fun temp1012_79 () (_ BitVec 64))
(declare-fun temp1012_80 () (_ BitVec 64))
(declare-fun temp1012_81 () (_ BitVec 64))
(declare-fun temp1012_82 () (_ BitVec 64))
(declare-fun temp1012_83 () (_ BitVec 64))
(declare-fun temp1012_84 () (_ BitVec 64))
(declare-fun temp1012_85 () (_ BitVec 64))
(declare-fun temp1012_86 () (_ BitVec 64))
(declare-fun temp1012_87 () (_ BitVec 64))
(declare-fun temp1012_88 () (_ BitVec 64))
(declare-fun temp1012_89 () (_ BitVec 64))
(declare-fun temp1012_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1012_91 () (_ BitVec 64))
(declare-fun temp1012_92 () (_ BitVec 64))
(declare-fun temp1012_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_94 () (_ BitVec 64))
(declare-fun temp1012_95 () (_ BitVec 64))
(declare-fun temp1012_96 () (_ BitVec 64))
(declare-fun temp1012_97 () (_ BitVec 64))
(declare-fun temp1012_98 () (_ BitVec 64))
(declare-fun temp1012_99 () (_ BitVec 64))
(declare-fun temp1012_100 () (_ BitVec 64))
(declare-fun temp1012_101 () (_ BitVec 64))
(declare-fun temp1012_102 () (_ BitVec 64))
(declare-fun temp1012_103 () (_ BitVec 64))
(declare-fun temp1012_104 () (_ BitVec 64))
(declare-fun temp1012_105 () (_ BitVec 64))
(declare-fun temp1012_106 () (_ BitVec 64))
(declare-fun temp1012_107 () (_ BitVec 64))
(declare-fun temp1012_108 () (_ BitVec 64))
(declare-fun temp1012_109 () (_ BitVec 64))
(declare-fun temp1012_110 () (_ BitVec 64))
(declare-fun temp1012_111 () (_ BitVec 64))
(declare-fun temp1012_112 () (_ BitVec 64))
(declare-fun temp1012_113 () (_ BitVec 64))
(declare-fun temp1012_114 () (_ BitVec 64))
(declare-fun temp1012_115 () (_ BitVec 64))
(declare-fun temp1012_116 () (_ BitVec 64))
(declare-fun temp1012_117 () (_ BitVec 64))
(declare-fun temp1012_118 () (_ BitVec 64))
(declare-fun temp1012_119 () (_ BitVec 64))
(declare-fun temp1012_120 () (_ BitVec 64))
(declare-fun temp1012_121 () (_ BitVec 64))
(declare-fun temp1012_122 () (_ BitVec 64))
(declare-fun temp1012_123 () (_ BitVec 64))
(declare-fun temp1012_124 () (_ BitVec 64))
(declare-fun temp1012_125 () (_ BitVec 64))
(declare-fun temp1012_126 () (_ BitVec 64))
(declare-fun temp1012_127 () (_ BitVec 64))
(declare-fun temp1012_128 () (_ BitVec 64))
(declare-fun temp1012_129 () (_ BitVec 64))
(declare-fun temp1012_130 () (_ BitVec 64))
(declare-fun temp1012_131 () (_ BitVec 64))
(declare-fun temp1012_132 () (_ BitVec 64))
(declare-fun temp1012_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1012_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1012_135 () (_ BitVec 64))
(declare-fun temp1012_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1012_137 () (_ BitVec 64))
(declare-fun temp1012_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_139 () (_ BitVec 64))
(declare-fun temp1012_140 () (_ BitVec 64))
(declare-fun temp1012_141 () (_ BitVec 64))
(declare-fun temp1012_142 () (_ BitVec 64))
(declare-fun temp1012_143 () (_ BitVec 64))
(declare-fun temp1012_144 () (_ BitVec 64))
(declare-fun temp1012_145 () (_ BitVec 64))
(declare-fun temp1012_146 () (_ BitVec 64))
(declare-fun temp1012_147 () (_ BitVec 64))
(declare-fun temp1012_148 () (_ BitVec 64))
(declare-fun temp1012_149 () (_ BitVec 64))
(declare-fun temp1012_150 () (_ BitVec 64))
(declare-fun temp1012_151 () (_ BitVec 64))
(declare-fun temp1012_152 () (_ BitVec 64))
(declare-fun temp1012_153 () (_ BitVec 64))
(declare-fun temp1012_154 () (_ BitVec 64))
(declare-fun temp1012_156 () (_ BitVec 64))
(declare-fun temp1012_157 () (_ BitVec 64))
(declare-fun temp1012_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1012_158 () (_ BitVec 64))
(declare-fun temp1012_159 () (_ BitVec 64))
(declare-fun temp1012_161 () (_ BitVec 64))
(declare-fun temp1012_162 () (_ BitVec 64))
(declare-fun temp1012_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1012_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1012_164 () (_ BitVec 64))
(declare-fun temp1012_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1012_166 () (_ BitVec 64))
(declare-fun temp1012_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1012_168 () (_ BitVec 64))
(declare-fun temp1012_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_170 () (_ BitVec 64))
(declare-fun temp1012_171 () (_ BitVec 64))
(declare-fun temp1012_172 () (_ BitVec 64))
(declare-fun temp1012_173 () (_ BitVec 64))
(declare-fun temp1012_174 () (_ BitVec 64))
(declare-fun temp1012_175 () (_ BitVec 64))
(declare-fun temp1012_176 () (_ BitVec 64))
(declare-fun temp1012_177 () (_ BitVec 64))
(declare-fun temp1012_178 () (_ BitVec 64))
(declare-fun temp1012_179 () (_ BitVec 64))
(declare-fun temp1012_180 () (_ BitVec 64))
(declare-fun temp1012_181 () (_ BitVec 64))
(declare-fun temp1012_182 () (_ BitVec 64))
(declare-fun temp1012_183 () (_ BitVec 64))
(declare-fun temp1012_184 () (_ BitVec 64))
(declare-fun temp1012_185 () (_ BitVec 64))
(declare-fun temp1012_186 () (_ BitVec 64))
(declare-fun temp1012_187 () (_ BitVec 64))
(declare-fun temp1012_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1012_189 () (_ BitVec 64))
(declare-fun temp1012_191 () (_ BitVec 64))
(declare-fun temp1012_192 () (_ BitVec 64))
(declare-fun temp1012_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1012_193 () (_ BitVec 64))
(declare-fun temp1012_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1012_195 () (_ BitVec 64))
(declare-fun temp1012_196 () (_ BitVec 64))
(declare-fun temp1012_197 () (_ BitVec 64))
(declare-fun temp1012_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_199 () (_ BitVec 64))
(declare-fun temp1012_200 () (_ BitVec 64))
(declare-fun temp1012_201 () (_ BitVec 64))
(declare-fun temp1012_202 () (_ BitVec 64))
(declare-fun temp1012_203 () (_ BitVec 64))
(declare-fun temp1012_204 () (_ BitVec 64))
(declare-fun temp1012_205 () (_ BitVec 64))
(declare-fun temp1012_206 () (_ BitVec 64))
(declare-fun temp1012_207 () (_ BitVec 64))
(declare-fun temp1012_208 () (_ BitVec 64))
(declare-fun temp1012_209 () (_ BitVec 64))
(declare-fun temp1012_210 () (_ BitVec 64))
(declare-fun temp1012_211 () (_ BitVec 64))
(declare-fun temp1012_212 () (_ BitVec 64))
(declare-fun temp1012_213 () (_ BitVec 64))
(declare-fun temp1012_214 () (_ BitVec 64))
(declare-fun temp1012_215 () (_ BitVec 64))
(declare-fun temp1012_216 () (_ BitVec 64))
(declare-fun temp1012_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1012_218 () (_ BitVec 64))
(declare-fun temp1012_220 () (_ BitVec 64))
(declare-fun temp1012_221 () (_ BitVec 64))
(declare-fun temp1012_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1012_222 () (_ BitVec 64))
(declare-fun temp1012_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1012_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1012_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1012_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1012_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1012_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1012_229 () (_ BitVec 64))
(declare-fun temp1012_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1012_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1012_232 () (_ BitVec 64))
(declare-fun temp1012_233 () (_ BitVec 64))
(declare-fun temp1012_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1012_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1012_236 () (_ BitVec 64))
(declare-fun temp1012_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1012_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1012_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp1012_240 () (_ BitVec 64))
(declare-fun temp1012_241 () (_ BitVec 64))
(declare-fun var7942932 () (_ BitVec 64))
(declare-fun var7942899 () (_ BitVec 64))
(declare-fun var7811463 () (_ BitVec 64))
(declare-fun var7811459 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1012_242 () (_ BitVec 64))
(assert (= temp1012_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1012_1)))
(assert (= temp1012_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1012_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_3 #x0000000000000000))
(assert (= var79869 temp1012_3))
(assert (= temp1012_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1012_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_5 #x0000000000000000))
(assert (= var79914 temp1012_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1012_6 #x0000000000000000))
(assert (= temp1012_7 temp1012_6))
(assert (= temp1012_8 (select ARGNAME_padding_NAMEEND_VAL temp1012_7)))
(assert (= temp1012_9 #x0000000000000001))
(assert (= temp1012_10 temp1012_9))
(assert (= temp1012_11 (select ARGNAME_padding_NAMEEND_VAL temp1012_10)))
(assert (= temp1012_12 #x0000000000000002))
(assert (= temp1012_13 temp1012_12))
(assert (= temp1012_14 (select ARGNAME_padding_NAMEEND_VAL temp1012_13)))
(assert (= temp1012_15 #x0000000000000003))
(assert (= temp1012_16 temp1012_15))
(assert (= temp1012_17 (select ARGNAME_padding_NAMEEND_VAL temp1012_16)))
(assert (= temp1012_18 #x0000000000000004))
(assert (= temp1012_19 temp1012_18))
(assert (= temp1012_20 (select ARGNAME_padding_NAMEEND_VAL temp1012_19)))
(assert (= temp1012_21 #x0000000000000005))
(assert (= temp1012_22 temp1012_21))
(assert (= temp1012_23 (select ARGNAME_padding_NAMEEND_VAL temp1012_22)))
(assert (= temp1012_24 #x0000000000000000))
(assert (= temp1012_25 #x0000000000000000))
(assert (= temp1012_26 temp1012_25))
(assert (= temp1012_27 (select ARGNAME_padding_NAMEEND_VAL temp1012_26)))
(assert (= temp1012_28 #x0000000000000000))
(assert (= temp1012_29 #x0000000000000001))
(assert (= temp1012_30 temp1012_29))
(assert (= temp1012_31 (select ARGNAME_padding_NAMEEND_VAL temp1012_30)))
(assert (= temp1012_32 #x0000000000000000))
(assert (= temp1012_33 #x0000000000000002))
(assert (= temp1012_34 temp1012_33))
(assert (= temp1012_35 (select ARGNAME_padding_NAMEEND_VAL temp1012_34)))
(assert (= temp1012_36 #x0000000000000000))
(assert (= temp1012_37 #x0000000000000003))
(assert (= temp1012_38 temp1012_37))
(assert (= temp1012_39 (select ARGNAME_padding_NAMEEND_VAL temp1012_38)))
(assert (= temp1012_40 #x0000000000000000))
(assert (= temp1012_41 #x0000000000000004))
(assert (= temp1012_42 temp1012_41))
(assert (= temp1012_43 (select ARGNAME_padding_NAMEEND_VAL temp1012_42)))
(assert (= temp1012_44 #x0000000000000000))
(assert (= temp1012_45 #x0000000000000005))
(assert (= temp1012_46 temp1012_45))
(assert (= temp1012_47 (select ARGNAME_padding_NAMEEND_VAL temp1012_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1012_27 temp1012_24)
             (bvslt temp1012_31 temp1012_28)
             (bvslt temp1012_35 temp1012_32)
             (bvslt temp1012_39 temp1012_36)
             (bvslt temp1012_43 temp1012_40)
             (bvslt temp1012_47 temp1012_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_48 #x0000000000000000))
(assert (= var1322786 temp1012_48))
(assert (= temp1012_49 #x0000000000000000))
(assert (= temp1012_50 temp1012_49))
(assert (= temp1012_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_50)))
(assert (= temp1012_52 #x0000000000000001))
(assert (= temp1012_53 temp1012_52))
(assert (= temp1012_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_53)))
(assert (= temp1012_55 #x0000000000000002))
(assert (= temp1012_56 temp1012_55))
(assert (= temp1012_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_56)))
(assert (= temp1012_58 #x0000000000000003))
(assert (= temp1012_59 temp1012_58))
(assert (= temp1012_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_59)))
(assert (= temp1012_61 #x0000000000000004))
(assert (= temp1012_62 temp1012_61))
(assert (= temp1012_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_62)))
(assert (= temp1012_64 #x0000000000000005))
(assert (= temp1012_65 temp1012_64))
(assert (= temp1012_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_65)))
(assert (= temp1012_67 #x0000000000000000))
(assert (= temp1012_68 #x0000000000000000))
(assert (= temp1012_69 temp1012_68))
(assert (= temp1012_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_69)))
(assert (= temp1012_71 #x0000000000000000))
(assert (= temp1012_72 #x0000000000000001))
(assert (= temp1012_73 temp1012_72))
(assert (= temp1012_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_73)))
(assert (= temp1012_75 #x0000000000000000))
(assert (= temp1012_76 #x0000000000000002))
(assert (= temp1012_77 temp1012_76))
(assert (= temp1012_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_77)))
(assert (= temp1012_79 #x0000000000000000))
(assert (= temp1012_80 #x0000000000000003))
(assert (= temp1012_81 temp1012_80))
(assert (= temp1012_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_81)))
(assert (= temp1012_83 #x0000000000000000))
(assert (= temp1012_84 #x0000000000000004))
(assert (= temp1012_85 temp1012_84))
(assert (= temp1012_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_85)))
(assert (= temp1012_87 #x0000000000000000))
(assert (= temp1012_88 #x0000000000000005))
(assert (= temp1012_89 temp1012_88))
(assert (= temp1012_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1012_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1012_70 temp1012_67)
             (bvslt temp1012_74 temp1012_71)
             (bvslt temp1012_78 temp1012_75)
             (bvslt temp1012_82 temp1012_79)
             (bvslt temp1012_86 temp1012_83)
             (bvslt temp1012_90 temp1012_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_91 #x0000000000000000))
(assert (= var1322797 temp1012_91))
(assert (= temp1012_92 #x0000000000000000))
(assert (= temp1012_93 temp1012_92))
(assert (= temp1012_94 (select ARGNAME_stride_NAMEEND_VAL temp1012_93)))
(assert (= temp1012_95 #x0000000000000001))
(assert (= temp1012_96 temp1012_95))
(assert (= temp1012_97 (select ARGNAME_stride_NAMEEND_VAL temp1012_96)))
(assert (= temp1012_98 #x0000000000000002))
(assert (= temp1012_99 temp1012_98))
(assert (= temp1012_100 (select ARGNAME_stride_NAMEEND_VAL temp1012_99)))
(assert (= temp1012_101 #x0000000000000003))
(assert (= temp1012_102 temp1012_101))
(assert (= temp1012_103 (select ARGNAME_stride_NAMEEND_VAL temp1012_102)))
(assert (= temp1012_104 #x0000000000000004))
(assert (= temp1012_105 temp1012_104))
(assert (= temp1012_106 (select ARGNAME_stride_NAMEEND_VAL temp1012_105)))
(assert (= temp1012_107 #x0000000000000005))
(assert (= temp1012_108 temp1012_107))
(assert (= temp1012_109 (select ARGNAME_stride_NAMEEND_VAL temp1012_108)))
(assert (= temp1012_110 #x0000000000000000))
(assert (= temp1012_111 #x0000000000000000))
(assert (= temp1012_112 temp1012_111))
(assert (= temp1012_113 (select ARGNAME_stride_NAMEEND_VAL temp1012_112)))
(assert (= temp1012_114 #x0000000000000000))
(assert (= temp1012_115 #x0000000000000001))
(assert (= temp1012_116 temp1012_115))
(assert (= temp1012_117 (select ARGNAME_stride_NAMEEND_VAL temp1012_116)))
(assert (= temp1012_118 #x0000000000000000))
(assert (= temp1012_119 #x0000000000000002))
(assert (= temp1012_120 temp1012_119))
(assert (= temp1012_121 (select ARGNAME_stride_NAMEEND_VAL temp1012_120)))
(assert (= temp1012_122 #x0000000000000000))
(assert (= temp1012_123 #x0000000000000003))
(assert (= temp1012_124 temp1012_123))
(assert (= temp1012_125 (select ARGNAME_stride_NAMEEND_VAL temp1012_124)))
(assert (= temp1012_126 #x0000000000000000))
(assert (= temp1012_127 #x0000000000000004))
(assert (= temp1012_128 temp1012_127))
(assert (= temp1012_129 (select ARGNAME_stride_NAMEEND_VAL temp1012_128)))
(assert (= temp1012_130 #x0000000000000000))
(assert (= temp1012_131 #x0000000000000005))
(assert (= temp1012_132 temp1012_131))
(assert (= temp1012_133 (select ARGNAME_stride_NAMEEND_VAL temp1012_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1012_113 temp1012_110)
             (bvsle temp1012_117 temp1012_114)
             (bvsle temp1012_121 temp1012_118)
             (bvsle temp1012_125 temp1012_122)
             (bvsle temp1012_129 temp1012_126)
             (bvsle temp1012_133 temp1012_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_134 #x0000000000000000))
(assert (= var1322807 temp1012_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_135 #x0000000000000001))
(assert (= var1322819 temp1012_135))
(assert (= temp1012_136 #x0000000000000000))
(assert (= var1310898 temp1012_136))
(assert (= temp1012_137 #x0000000000000000))
(assert (= temp1012_138 temp1012_137))
(assert (= temp1012_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_138)))
(assert (= temp1012_140 #x0000000000000001))
(assert (= temp1012_141 temp1012_140))
(assert (= temp1012_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_141)))
(assert (= temp1012_143 #x0000000000000002))
(assert (= temp1012_144 temp1012_143))
(assert (= temp1012_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_144)))
(assert (= temp1012_146 #x0000000000000003))
(assert (= temp1012_147 temp1012_146))
(assert (= temp1012_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_147)))
(assert (= temp1012_149 #x0000000000000004))
(assert (= temp1012_150 temp1012_149))
(assert (= temp1012_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_150)))
(assert (= temp1012_152 #x0000000000000005))
(assert (= temp1012_153 temp1012_152))
(assert (= temp1012_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_153)))
(assert (= temp1012_156 var1310898))
(assert (= temp1012_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_156)))
(assert (= temp1012_155 temp1012_157))
(assert (= var1322852
   (ite (bvslt temp1012_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_158 #x0000000000000000))
(assert (= var1322852 temp1012_158))
(assert (= temp1012_159 #x0000000000000000))
(assert (= var1310898 temp1012_159))
(assert (= temp1012_161 var1310898))
(assert (= temp1012_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_161)))
(assert (= temp1012_160 temp1012_162))
(assert (= var1322874 (bvsmod temp1012_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1012_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1012_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_164 #x0000000000000001))
(assert (= var1322875 temp1012_164))
(assert (= temp1012_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1012_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_166 #x0000000000000001))
(assert (= var1322895 temp1012_166))
(assert (= temp1012_167 #x0000000000000001))
(assert (= var1311786 temp1012_167))
(assert (= temp1012_168 #x0000000000000000))
(assert (= temp1012_169 temp1012_168))
(assert (= temp1012_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_169)))
(assert (= temp1012_171 #x0000000000000001))
(assert (= temp1012_172 temp1012_171))
(assert (= temp1012_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_172)))
(assert (= temp1012_174 #x0000000000000002))
(assert (= temp1012_175 temp1012_174))
(assert (= temp1012_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_175)))
(assert (= temp1012_177 #x0000000000000003))
(assert (= temp1012_178 temp1012_177))
(assert (= temp1012_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_178)))
(assert (= temp1012_180 #x0000000000000004))
(assert (= temp1012_181 temp1012_180))
(assert (= temp1012_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_181)))
(assert (= temp1012_183 #x0000000000000005))
(assert (= temp1012_184 temp1012_183))
(assert (= temp1012_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_184)))
(assert (= temp1012_186 #x0000000000000000))
(assert (= temp1012_187
   (ite (bvslt var1311786 temp1012_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1012_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_187)))
(assert (= var1322903 temp1012_188))
(assert (bvslt (ite (bvslt var1311786 temp1012_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1012_189 #x0000000000000001))
(assert (= var1311786 temp1012_189))
(assert (= temp1012_191 var1311786))
(assert (= temp1012_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_191)))
(assert (= temp1012_190 temp1012_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1012_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_193 #x0000000000000001))
(assert (= var1322908 temp1012_193))
(assert (= temp1012_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1012_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_195 #x0000000000000001))
(assert (= var1322975 temp1012_195))
(assert (= temp1012_196 #x0000000000000000))
(assert (= var1310898 temp1012_196))
(assert (= temp1012_197 #x0000000000000000))
(assert (= temp1012_198 temp1012_197))
(assert (= temp1012_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1012_198)))
(assert (= temp1012_200 #x0000000000000001))
(assert (= temp1012_201 temp1012_200))
(assert (= temp1012_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1012_201)))
(assert (= temp1012_203 #x0000000000000002))
(assert (= temp1012_204 temp1012_203))
(assert (= temp1012_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1012_204)))
(assert (= temp1012_206 #x0000000000000003))
(assert (= temp1012_207 temp1012_206))
(assert (= temp1012_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1012_207)))
(assert (= temp1012_209 #x0000000000000004))
(assert (= temp1012_210 temp1012_209))
(assert (= temp1012_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1012_210)))
(assert (= temp1012_212 #x0000000000000005))
(assert (= temp1012_213 temp1012_212))
(assert (= temp1012_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1012_213)))
(assert (= temp1012_215 #x0000000000000000))
(assert (= temp1012_216
   (ite (bvslt var1310898 temp1012_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1012_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1012_216)))
(assert (= var1322977 temp1012_217))
(assert (bvslt (ite (bvslt var1310898 temp1012_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1012_218 #x0000000000000000))
(assert (= var1310898 temp1012_218))
(assert (= temp1012_220 var1310898))
(assert (= temp1012_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_220)))
(assert (= temp1012_219 temp1012_221))
(assert (= var1322980
   (ite (= var1322977 temp1012_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_222 #x0000000000000001))
(assert (= var1322980 temp1012_222))
(assert (= temp1012_223 #x0000000000000002))
(assert (= var1848169 temp1012_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1012_225 #x0000000000000001))
(assert (= var1323065 temp1012_225))
(assert (= temp1012_226 #x0000000000000001))
(assert (= var3486735 temp1012_226))
(assert (= temp1012_227 #x0000000000000001))
(assert (= var3814415 temp1012_227))
(assert (= temp1012_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1012_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_229 #x0000000000000001))
(assert (= var79986 temp1012_229))
(assert (= temp1012_230 #x0000000000000001))
(assert (= var80116 temp1012_230))
(assert (= var4796905 var80116))
(assert (= temp1012_231 #x0000000000000000))
(assert (= var4784306 temp1012_231))
(assert (= temp1012_232 #x0000000000000000))
(assert (= temp1012_233
   (ite (bvslt var4784306 temp1012_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1012_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_233)))
(assert (= var4796924 temp1012_234))
(assert (bvslt (ite (bvslt var4784306 temp1012_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1012_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1012_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_236 #x0000000000000001))
(assert (= var4796925 temp1012_236))
(assert (= temp1012_237 #x0000000000000000))
(assert (= var4996927 temp1012_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1012_238 #x0000000000000002))
(assert (= var5125763 temp1012_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_239 #x0000000000000000))
(assert (= var5191324 temp1012_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp1012_240 #x0000000000000001))
(assert (= var79986 temp1012_240))
(assert (= temp1012_241 #x0000000000000000))
(assert (= var7942932 temp1012_241))
(assert (= var7942899 var7942932))
(assert (= var7811463 var7942899))
(assert (= var7811459 var7811463))
(assert (= var81597 var7811459))
(assert (= temp1012_242 #x0000000000000000))
(assert (= var81597 temp1012_242))
(model-add temp1012_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1012_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1012_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






