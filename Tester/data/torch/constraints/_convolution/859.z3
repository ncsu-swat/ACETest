(declare-fun temp1142_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1142_2 () (_ BitVec 64))
(declare-fun temp1142_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1142_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1142_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1142_6 () (_ BitVec 64))
(declare-fun temp1142_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1142_8 () (_ BitVec 64))
(declare-fun temp1142_9 () (_ BitVec 64))
(declare-fun temp1142_10 () (_ BitVec 64))
(declare-fun temp1142_11 () (_ BitVec 64))
(declare-fun temp1142_12 () (_ BitVec 64))
(declare-fun temp1142_13 () (_ BitVec 64))
(declare-fun temp1142_14 () (_ BitVec 64))
(declare-fun temp1142_15 () (_ BitVec 64))
(declare-fun temp1142_16 () (_ BitVec 64))
(declare-fun temp1142_17 () (_ BitVec 64))
(declare-fun temp1142_18 () (_ BitVec 64))
(declare-fun temp1142_19 () (_ BitVec 64))
(declare-fun temp1142_20 () (_ BitVec 64))
(declare-fun temp1142_21 () (_ BitVec 64))
(declare-fun temp1142_22 () (_ BitVec 64))
(declare-fun temp1142_23 () (_ BitVec 64))
(declare-fun temp1142_24 () (_ BitVec 64))
(declare-fun temp1142_25 () (_ BitVec 64))
(declare-fun temp1142_26 () (_ BitVec 64))
(declare-fun temp1142_27 () (_ BitVec 64))
(declare-fun temp1142_28 () (_ BitVec 64))
(declare-fun temp1142_29 () (_ BitVec 64))
(declare-fun temp1142_30 () (_ BitVec 64))
(declare-fun temp1142_31 () (_ BitVec 64))
(declare-fun temp1142_32 () (_ BitVec 64))
(declare-fun temp1142_33 () (_ BitVec 64))
(declare-fun temp1142_34 () (_ BitVec 64))
(declare-fun temp1142_35 () (_ BitVec 64))
(declare-fun temp1142_36 () (_ BitVec 64))
(declare-fun temp1142_37 () (_ BitVec 64))
(declare-fun temp1142_38 () (_ BitVec 64))
(declare-fun temp1142_39 () (_ BitVec 64))
(declare-fun temp1142_40 () (_ BitVec 64))
(declare-fun temp1142_41 () (_ BitVec 64))
(declare-fun temp1142_42 () (_ BitVec 64))
(declare-fun temp1142_43 () (_ BitVec 64))
(declare-fun temp1142_44 () (_ BitVec 64))
(declare-fun temp1142_45 () (_ BitVec 64))
(declare-fun temp1142_46 () (_ BitVec 64))
(declare-fun temp1142_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1142_48 () (_ BitVec 64))
(declare-fun temp1142_49 () (_ BitVec 64))
(declare-fun temp1142_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1142_51 () (_ BitVec 64))
(declare-fun temp1142_52 () (_ BitVec 64))
(declare-fun temp1142_53 () (_ BitVec 64))
(declare-fun temp1142_54 () (_ BitVec 64))
(declare-fun temp1142_55 () (_ BitVec 64))
(declare-fun temp1142_56 () (_ BitVec 64))
(declare-fun temp1142_57 () (_ BitVec 64))
(declare-fun temp1142_58 () (_ BitVec 64))
(declare-fun temp1142_59 () (_ BitVec 64))
(declare-fun temp1142_60 () (_ BitVec 64))
(declare-fun temp1142_61 () (_ BitVec 64))
(declare-fun temp1142_62 () (_ BitVec 64))
(declare-fun temp1142_63 () (_ BitVec 64))
(declare-fun temp1142_64 () (_ BitVec 64))
(declare-fun temp1142_65 () (_ BitVec 64))
(declare-fun temp1142_66 () (_ BitVec 64))
(declare-fun temp1142_67 () (_ BitVec 64))
(declare-fun temp1142_68 () (_ BitVec 64))
(declare-fun temp1142_69 () (_ BitVec 64))
(declare-fun temp1142_70 () (_ BitVec 64))
(declare-fun temp1142_71 () (_ BitVec 64))
(declare-fun temp1142_72 () (_ BitVec 64))
(declare-fun temp1142_73 () (_ BitVec 64))
(declare-fun temp1142_74 () (_ BitVec 64))
(declare-fun temp1142_75 () (_ BitVec 64))
(declare-fun temp1142_76 () (_ BitVec 64))
(declare-fun temp1142_77 () (_ BitVec 64))
(declare-fun temp1142_78 () (_ BitVec 64))
(declare-fun temp1142_79 () (_ BitVec 64))
(declare-fun temp1142_80 () (_ BitVec 64))
(declare-fun temp1142_81 () (_ BitVec 64))
(declare-fun temp1142_82 () (_ BitVec 64))
(declare-fun temp1142_83 () (_ BitVec 64))
(declare-fun temp1142_84 () (_ BitVec 64))
(declare-fun temp1142_85 () (_ BitVec 64))
(declare-fun temp1142_86 () (_ BitVec 64))
(declare-fun temp1142_87 () (_ BitVec 64))
(declare-fun temp1142_88 () (_ BitVec 64))
(declare-fun temp1142_89 () (_ BitVec 64))
(declare-fun temp1142_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1142_91 () (_ BitVec 64))
(declare-fun temp1142_92 () (_ BitVec 64))
(declare-fun temp1142_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1142_94 () (_ BitVec 64))
(declare-fun temp1142_95 () (_ BitVec 64))
(declare-fun temp1142_96 () (_ BitVec 64))
(declare-fun temp1142_97 () (_ BitVec 64))
(declare-fun temp1142_98 () (_ BitVec 64))
(declare-fun temp1142_99 () (_ BitVec 64))
(declare-fun temp1142_100 () (_ BitVec 64))
(declare-fun temp1142_101 () (_ BitVec 64))
(declare-fun temp1142_102 () (_ BitVec 64))
(declare-fun temp1142_103 () (_ BitVec 64))
(declare-fun temp1142_104 () (_ BitVec 64))
(declare-fun temp1142_105 () (_ BitVec 64))
(declare-fun temp1142_106 () (_ BitVec 64))
(declare-fun temp1142_107 () (_ BitVec 64))
(declare-fun temp1142_108 () (_ BitVec 64))
(declare-fun temp1142_109 () (_ BitVec 64))
(declare-fun temp1142_110 () (_ BitVec 64))
(declare-fun temp1142_111 () (_ BitVec 64))
(declare-fun temp1142_112 () (_ BitVec 64))
(declare-fun temp1142_113 () (_ BitVec 64))
(declare-fun temp1142_114 () (_ BitVec 64))
(declare-fun temp1142_115 () (_ BitVec 64))
(declare-fun temp1142_116 () (_ BitVec 64))
(declare-fun temp1142_117 () (_ BitVec 64))
(declare-fun temp1142_118 () (_ BitVec 64))
(declare-fun temp1142_119 () (_ BitVec 64))
(declare-fun temp1142_120 () (_ BitVec 64))
(declare-fun temp1142_121 () (_ BitVec 64))
(declare-fun temp1142_122 () (_ BitVec 64))
(declare-fun temp1142_123 () (_ BitVec 64))
(declare-fun temp1142_124 () (_ BitVec 64))
(declare-fun temp1142_125 () (_ BitVec 64))
(declare-fun temp1142_126 () (_ BitVec 64))
(declare-fun temp1142_127 () (_ BitVec 64))
(declare-fun temp1142_128 () (_ BitVec 64))
(declare-fun temp1142_129 () (_ BitVec 64))
(declare-fun temp1142_130 () (_ BitVec 64))
(declare-fun temp1142_131 () (_ BitVec 64))
(declare-fun temp1142_132 () (_ BitVec 64))
(declare-fun temp1142_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1142_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1142_135 () (_ BitVec 64))
(declare-fun temp1142_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1142_137 () (_ BitVec 64))
(declare-fun temp1142_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1142_139 () (_ BitVec 64))
(declare-fun temp1142_140 () (_ BitVec 64))
(declare-fun temp1142_141 () (_ BitVec 64))
(declare-fun temp1142_142 () (_ BitVec 64))
(declare-fun temp1142_143 () (_ BitVec 64))
(declare-fun temp1142_144 () (_ BitVec 64))
(declare-fun temp1142_145 () (_ BitVec 64))
(declare-fun temp1142_146 () (_ BitVec 64))
(declare-fun temp1142_147 () (_ BitVec 64))
(declare-fun temp1142_148 () (_ BitVec 64))
(declare-fun temp1142_149 () (_ BitVec 64))
(declare-fun temp1142_150 () (_ BitVec 64))
(declare-fun temp1142_151 () (_ BitVec 64))
(declare-fun temp1142_152 () (_ BitVec 64))
(declare-fun temp1142_153 () (_ BitVec 64))
(declare-fun temp1142_154 () (_ BitVec 64))
(declare-fun temp1142_156 () (_ BitVec 64))
(declare-fun temp1142_157 () (_ BitVec 64))
(declare-fun temp1142_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1142_158 () (_ BitVec 64))
(declare-fun temp1142_159 () (_ BitVec 64))
(declare-fun temp1142_161 () (_ BitVec 64))
(declare-fun temp1142_162 () (_ BitVec 64))
(declare-fun temp1142_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1142_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1142_164 () (_ BitVec 64))
(declare-fun temp1142_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1142_166 () (_ BitVec 64))
(declare-fun temp1142_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1142_168 () (_ BitVec 64))
(declare-fun temp1142_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1142_170 () (_ BitVec 64))
(declare-fun temp1142_171 () (_ BitVec 64))
(declare-fun temp1142_172 () (_ BitVec 64))
(declare-fun temp1142_173 () (_ BitVec 64))
(declare-fun temp1142_174 () (_ BitVec 64))
(declare-fun temp1142_175 () (_ BitVec 64))
(declare-fun temp1142_176 () (_ BitVec 64))
(declare-fun temp1142_177 () (_ BitVec 64))
(declare-fun temp1142_178 () (_ BitVec 64))
(declare-fun temp1142_179 () (_ BitVec 64))
(declare-fun temp1142_180 () (_ BitVec 64))
(declare-fun temp1142_181 () (_ BitVec 64))
(declare-fun temp1142_182 () (_ BitVec 64))
(declare-fun temp1142_183 () (_ BitVec 64))
(declare-fun temp1142_184 () (_ BitVec 64))
(declare-fun temp1142_185 () (_ BitVec 64))
(declare-fun temp1142_186 () (_ BitVec 64))
(declare-fun temp1142_187 () (_ BitVec 64))
(declare-fun temp1142_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1142_189 () (_ BitVec 64))
(declare-fun temp1142_191 () (_ BitVec 64))
(declare-fun temp1142_192 () (_ BitVec 64))
(declare-fun temp1142_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1142_193 () (_ BitVec 64))
(declare-fun temp1142_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1142_195 () (_ BitVec 64))
(declare-fun temp1142_196 () (_ BitVec 64))
(declare-fun temp1142_197 () (_ BitVec 64))
(declare-fun temp1142_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1142_199 () (_ BitVec 64))
(declare-fun temp1142_200 () (_ BitVec 64))
(declare-fun temp1142_201 () (_ BitVec 64))
(declare-fun temp1142_202 () (_ BitVec 64))
(declare-fun temp1142_203 () (_ BitVec 64))
(declare-fun temp1142_204 () (_ BitVec 64))
(declare-fun temp1142_205 () (_ BitVec 64))
(declare-fun temp1142_206 () (_ BitVec 64))
(declare-fun temp1142_207 () (_ BitVec 64))
(declare-fun temp1142_208 () (_ BitVec 64))
(declare-fun temp1142_209 () (_ BitVec 64))
(declare-fun temp1142_210 () (_ BitVec 64))
(declare-fun temp1142_211 () (_ BitVec 64))
(declare-fun temp1142_212 () (_ BitVec 64))
(declare-fun temp1142_213 () (_ BitVec 64))
(declare-fun temp1142_214 () (_ BitVec 64))
(declare-fun temp1142_215 () (_ BitVec 64))
(declare-fun temp1142_216 () (_ BitVec 64))
(declare-fun temp1142_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1142_218 () (_ BitVec 64))
(declare-fun temp1142_220 () (_ BitVec 64))
(declare-fun temp1142_221 () (_ BitVec 64))
(declare-fun temp1142_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1142_222 () (_ BitVec 64))
(declare-fun temp1142_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1142_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1142_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1142_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1142_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1142_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1142_229 () (_ BitVec 64))
(declare-fun temp1142_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1142_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1142_232 () (_ BitVec 64))
(declare-fun temp1142_233 () (_ BitVec 64))
(declare-fun temp1142_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1142_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1142_236 () (_ BitVec 64))
(declare-fun temp1142_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1142_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1142_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1142_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1142_241 () (_ BitVec 64))
(declare-fun temp1142_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp1142_243 () (_ BitVec 64))
(assert (= temp1142_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1142_1)))
(assert (= temp1142_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1142_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_3 #x0000000000000000))
(assert (= var79869 temp1142_3))
(assert (= temp1142_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1142_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_5 #x0000000000000000))
(assert (= var79914 temp1142_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1142_6 #x0000000000000000))
(assert (= temp1142_7 temp1142_6))
(assert (= temp1142_8 (select ARGNAME_padding_NAMEEND_VAL temp1142_7)))
(assert (= temp1142_9 #x0000000000000001))
(assert (= temp1142_10 temp1142_9))
(assert (= temp1142_11 (select ARGNAME_padding_NAMEEND_VAL temp1142_10)))
(assert (= temp1142_12 #x0000000000000002))
(assert (= temp1142_13 temp1142_12))
(assert (= temp1142_14 (select ARGNAME_padding_NAMEEND_VAL temp1142_13)))
(assert (= temp1142_15 #x0000000000000003))
(assert (= temp1142_16 temp1142_15))
(assert (= temp1142_17 (select ARGNAME_padding_NAMEEND_VAL temp1142_16)))
(assert (= temp1142_18 #x0000000000000004))
(assert (= temp1142_19 temp1142_18))
(assert (= temp1142_20 (select ARGNAME_padding_NAMEEND_VAL temp1142_19)))
(assert (= temp1142_21 #x0000000000000005))
(assert (= temp1142_22 temp1142_21))
(assert (= temp1142_23 (select ARGNAME_padding_NAMEEND_VAL temp1142_22)))
(assert (= temp1142_24 #x0000000000000000))
(assert (= temp1142_25 #x0000000000000000))
(assert (= temp1142_26 temp1142_25))
(assert (= temp1142_27 (select ARGNAME_padding_NAMEEND_VAL temp1142_26)))
(assert (= temp1142_28 #x0000000000000000))
(assert (= temp1142_29 #x0000000000000001))
(assert (= temp1142_30 temp1142_29))
(assert (= temp1142_31 (select ARGNAME_padding_NAMEEND_VAL temp1142_30)))
(assert (= temp1142_32 #x0000000000000000))
(assert (= temp1142_33 #x0000000000000002))
(assert (= temp1142_34 temp1142_33))
(assert (= temp1142_35 (select ARGNAME_padding_NAMEEND_VAL temp1142_34)))
(assert (= temp1142_36 #x0000000000000000))
(assert (= temp1142_37 #x0000000000000003))
(assert (= temp1142_38 temp1142_37))
(assert (= temp1142_39 (select ARGNAME_padding_NAMEEND_VAL temp1142_38)))
(assert (= temp1142_40 #x0000000000000000))
(assert (= temp1142_41 #x0000000000000004))
(assert (= temp1142_42 temp1142_41))
(assert (= temp1142_43 (select ARGNAME_padding_NAMEEND_VAL temp1142_42)))
(assert (= temp1142_44 #x0000000000000000))
(assert (= temp1142_45 #x0000000000000005))
(assert (= temp1142_46 temp1142_45))
(assert (= temp1142_47 (select ARGNAME_padding_NAMEEND_VAL temp1142_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1142_27 temp1142_24)
             (bvslt temp1142_31 temp1142_28)
             (bvslt temp1142_35 temp1142_32)
             (bvslt temp1142_39 temp1142_36)
             (bvslt temp1142_43 temp1142_40)
             (bvslt temp1142_47 temp1142_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_48 #x0000000000000000))
(assert (= var1322786 temp1142_48))
(assert (= temp1142_49 #x0000000000000000))
(assert (= temp1142_50 temp1142_49))
(assert (= temp1142_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_50)))
(assert (= temp1142_52 #x0000000000000001))
(assert (= temp1142_53 temp1142_52))
(assert (= temp1142_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_53)))
(assert (= temp1142_55 #x0000000000000002))
(assert (= temp1142_56 temp1142_55))
(assert (= temp1142_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_56)))
(assert (= temp1142_58 #x0000000000000003))
(assert (= temp1142_59 temp1142_58))
(assert (= temp1142_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_59)))
(assert (= temp1142_61 #x0000000000000004))
(assert (= temp1142_62 temp1142_61))
(assert (= temp1142_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_62)))
(assert (= temp1142_64 #x0000000000000005))
(assert (= temp1142_65 temp1142_64))
(assert (= temp1142_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_65)))
(assert (= temp1142_67 #x0000000000000000))
(assert (= temp1142_68 #x0000000000000000))
(assert (= temp1142_69 temp1142_68))
(assert (= temp1142_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_69)))
(assert (= temp1142_71 #x0000000000000000))
(assert (= temp1142_72 #x0000000000000001))
(assert (= temp1142_73 temp1142_72))
(assert (= temp1142_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_73)))
(assert (= temp1142_75 #x0000000000000000))
(assert (= temp1142_76 #x0000000000000002))
(assert (= temp1142_77 temp1142_76))
(assert (= temp1142_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_77)))
(assert (= temp1142_79 #x0000000000000000))
(assert (= temp1142_80 #x0000000000000003))
(assert (= temp1142_81 temp1142_80))
(assert (= temp1142_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_81)))
(assert (= temp1142_83 #x0000000000000000))
(assert (= temp1142_84 #x0000000000000004))
(assert (= temp1142_85 temp1142_84))
(assert (= temp1142_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_85)))
(assert (= temp1142_87 #x0000000000000000))
(assert (= temp1142_88 #x0000000000000005))
(assert (= temp1142_89 temp1142_88))
(assert (= temp1142_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1142_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1142_70 temp1142_67)
             (bvslt temp1142_74 temp1142_71)
             (bvslt temp1142_78 temp1142_75)
             (bvslt temp1142_82 temp1142_79)
             (bvslt temp1142_86 temp1142_83)
             (bvslt temp1142_90 temp1142_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_91 #x0000000000000000))
(assert (= var1322797 temp1142_91))
(assert (= temp1142_92 #x0000000000000000))
(assert (= temp1142_93 temp1142_92))
(assert (= temp1142_94 (select ARGNAME_stride_NAMEEND_VAL temp1142_93)))
(assert (= temp1142_95 #x0000000000000001))
(assert (= temp1142_96 temp1142_95))
(assert (= temp1142_97 (select ARGNAME_stride_NAMEEND_VAL temp1142_96)))
(assert (= temp1142_98 #x0000000000000002))
(assert (= temp1142_99 temp1142_98))
(assert (= temp1142_100 (select ARGNAME_stride_NAMEEND_VAL temp1142_99)))
(assert (= temp1142_101 #x0000000000000003))
(assert (= temp1142_102 temp1142_101))
(assert (= temp1142_103 (select ARGNAME_stride_NAMEEND_VAL temp1142_102)))
(assert (= temp1142_104 #x0000000000000004))
(assert (= temp1142_105 temp1142_104))
(assert (= temp1142_106 (select ARGNAME_stride_NAMEEND_VAL temp1142_105)))
(assert (= temp1142_107 #x0000000000000005))
(assert (= temp1142_108 temp1142_107))
(assert (= temp1142_109 (select ARGNAME_stride_NAMEEND_VAL temp1142_108)))
(assert (= temp1142_110 #x0000000000000000))
(assert (= temp1142_111 #x0000000000000000))
(assert (= temp1142_112 temp1142_111))
(assert (= temp1142_113 (select ARGNAME_stride_NAMEEND_VAL temp1142_112)))
(assert (= temp1142_114 #x0000000000000000))
(assert (= temp1142_115 #x0000000000000001))
(assert (= temp1142_116 temp1142_115))
(assert (= temp1142_117 (select ARGNAME_stride_NAMEEND_VAL temp1142_116)))
(assert (= temp1142_118 #x0000000000000000))
(assert (= temp1142_119 #x0000000000000002))
(assert (= temp1142_120 temp1142_119))
(assert (= temp1142_121 (select ARGNAME_stride_NAMEEND_VAL temp1142_120)))
(assert (= temp1142_122 #x0000000000000000))
(assert (= temp1142_123 #x0000000000000003))
(assert (= temp1142_124 temp1142_123))
(assert (= temp1142_125 (select ARGNAME_stride_NAMEEND_VAL temp1142_124)))
(assert (= temp1142_126 #x0000000000000000))
(assert (= temp1142_127 #x0000000000000004))
(assert (= temp1142_128 temp1142_127))
(assert (= temp1142_129 (select ARGNAME_stride_NAMEEND_VAL temp1142_128)))
(assert (= temp1142_130 #x0000000000000000))
(assert (= temp1142_131 #x0000000000000005))
(assert (= temp1142_132 temp1142_131))
(assert (= temp1142_133 (select ARGNAME_stride_NAMEEND_VAL temp1142_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1142_113 temp1142_110)
             (bvsle temp1142_117 temp1142_114)
             (bvsle temp1142_121 temp1142_118)
             (bvsle temp1142_125 temp1142_122)
             (bvsle temp1142_129 temp1142_126)
             (bvsle temp1142_133 temp1142_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_134 #x0000000000000000))
(assert (= var1322807 temp1142_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_135 #x0000000000000001))
(assert (= var1322819 temp1142_135))
(assert (= temp1142_136 #x0000000000000000))
(assert (= var1310898 temp1142_136))
(assert (= temp1142_137 #x0000000000000000))
(assert (= temp1142_138 temp1142_137))
(assert (= temp1142_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_138)))
(assert (= temp1142_140 #x0000000000000001))
(assert (= temp1142_141 temp1142_140))
(assert (= temp1142_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_141)))
(assert (= temp1142_143 #x0000000000000002))
(assert (= temp1142_144 temp1142_143))
(assert (= temp1142_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_144)))
(assert (= temp1142_146 #x0000000000000003))
(assert (= temp1142_147 temp1142_146))
(assert (= temp1142_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_147)))
(assert (= temp1142_149 #x0000000000000004))
(assert (= temp1142_150 temp1142_149))
(assert (= temp1142_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_150)))
(assert (= temp1142_152 #x0000000000000005))
(assert (= temp1142_153 temp1142_152))
(assert (= temp1142_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_153)))
(assert (= temp1142_156 var1310898))
(assert (= temp1142_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_156)))
(assert (= temp1142_155 temp1142_157))
(assert (= var1322852
   (ite (bvslt temp1142_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_158 #x0000000000000000))
(assert (= var1322852 temp1142_158))
(assert (= temp1142_159 #x0000000000000000))
(assert (= var1310898 temp1142_159))
(assert (= temp1142_161 var1310898))
(assert (= temp1142_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_161)))
(assert (= temp1142_160 temp1142_162))
(assert (= var1322874 (bvsmod temp1142_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1142_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1142_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1142_164 #x0000000000000001))
(assert (= var1322875 temp1142_164))
(assert (= temp1142_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1142_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_166 #x0000000000000001))
(assert (= var1322895 temp1142_166))
(assert (= temp1142_167 #x0000000000000001))
(assert (= var1311786 temp1142_167))
(assert (= temp1142_168 #x0000000000000000))
(assert (= temp1142_169 temp1142_168))
(assert (= temp1142_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1142_169)))
(assert (= temp1142_171 #x0000000000000001))
(assert (= temp1142_172 temp1142_171))
(assert (= temp1142_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1142_172)))
(assert (= temp1142_174 #x0000000000000002))
(assert (= temp1142_175 temp1142_174))
(assert (= temp1142_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1142_175)))
(assert (= temp1142_177 #x0000000000000003))
(assert (= temp1142_178 temp1142_177))
(assert (= temp1142_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1142_178)))
(assert (= temp1142_180 #x0000000000000004))
(assert (= temp1142_181 temp1142_180))
(assert (= temp1142_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1142_181)))
(assert (= temp1142_183 #x0000000000000005))
(assert (= temp1142_184 temp1142_183))
(assert (= temp1142_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1142_184)))
(assert (= temp1142_186 #x0000000000000000))
(assert (= temp1142_187
   (ite (bvslt var1311786 temp1142_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1142_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1142_187)))
(assert (= var1322903 temp1142_188))
(assert (bvslt (ite (bvslt var1311786 temp1142_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1142_189 #x0000000000000001))
(assert (= var1311786 temp1142_189))
(assert (= temp1142_191 var1311786))
(assert (= temp1142_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_191)))
(assert (= temp1142_190 temp1142_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1142_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1142_193 #x0000000000000001))
(assert (= var1322908 temp1142_193))
(assert (= temp1142_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1142_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_195 #x0000000000000001))
(assert (= var1322975 temp1142_195))
(assert (= temp1142_196 #x0000000000000000))
(assert (= var1310898 temp1142_196))
(assert (= temp1142_197 #x0000000000000000))
(assert (= temp1142_198 temp1142_197))
(assert (= temp1142_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1142_198)))
(assert (= temp1142_200 #x0000000000000001))
(assert (= temp1142_201 temp1142_200))
(assert (= temp1142_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1142_201)))
(assert (= temp1142_203 #x0000000000000002))
(assert (= temp1142_204 temp1142_203))
(assert (= temp1142_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1142_204)))
(assert (= temp1142_206 #x0000000000000003))
(assert (= temp1142_207 temp1142_206))
(assert (= temp1142_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1142_207)))
(assert (= temp1142_209 #x0000000000000004))
(assert (= temp1142_210 temp1142_209))
(assert (= temp1142_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1142_210)))
(assert (= temp1142_212 #x0000000000000005))
(assert (= temp1142_213 temp1142_212))
(assert (= temp1142_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1142_213)))
(assert (= temp1142_215 #x0000000000000000))
(assert (= temp1142_216
   (ite (bvslt var1310898 temp1142_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1142_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1142_216)))
(assert (= var1322977 temp1142_217))
(assert (bvslt (ite (bvslt var1310898 temp1142_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1142_218 #x0000000000000000))
(assert (= var1310898 temp1142_218))
(assert (= temp1142_220 var1310898))
(assert (= temp1142_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1142_220)))
(assert (= temp1142_219 temp1142_221))
(assert (= var1322980
   (ite (= var1322977 temp1142_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1142_222 #x0000000000000001))
(assert (= var1322980 temp1142_222))
(assert (= temp1142_223 #x0000000000000002))
(assert (= var1848169 temp1142_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1142_225 #x0000000000000001))
(assert (= var1323065 temp1142_225))
(assert (= temp1142_226 #x0000000000000001))
(assert (= var3486735 temp1142_226))
(assert (= temp1142_227 #x0000000000000001))
(assert (= var3814415 temp1142_227))
(assert (= temp1142_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1142_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_229 #x0000000000000001))
(assert (= var79986 temp1142_229))
(assert (= temp1142_230 #x0000000000000001))
(assert (= var80116 temp1142_230))
(assert (= var4796905 var80116))
(assert (= temp1142_231 #x0000000000000000))
(assert (= var4784306 temp1142_231))
(assert (= temp1142_232 #x0000000000000000))
(assert (= temp1142_233
   (ite (bvslt var4784306 temp1142_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1142_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1142_233)))
(assert (= var4796924 temp1142_234))
(assert (bvslt (ite (bvslt var4784306 temp1142_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1142_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1142_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1142_236 #x0000000000000001))
(assert (= var4796925 temp1142_236))
(assert (= temp1142_237 #x0000000000000000))
(assert (= var4996927 temp1142_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1142_238 #x0000000000000002))
(assert (= var5125763 temp1142_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_239 #x0000000000000000))
(assert (= var5191324 temp1142_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1142_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1142_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1142_241 #x0000000000000000))
(assert (= var81342 temp1142_241))
(assert (= temp1142_242 #x0000000000000002))
(assert (= var5977731 temp1142_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp1142_243 #x0000000000000001))
(assert (= var79986 temp1142_243))
(model-add temp1142_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1142_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1142_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






