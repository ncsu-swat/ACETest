(declare-fun temp126_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp126_2 () (_ BitVec 64))
(declare-fun temp126_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp126_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp126_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp126_6 () (_ BitVec 64))
(declare-fun temp126_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_8 () (_ BitVec 64))
(declare-fun temp126_9 () (_ BitVec 64))
(declare-fun temp126_10 () (_ BitVec 64))
(declare-fun temp126_11 () (_ BitVec 64))
(declare-fun temp126_12 () (_ BitVec 64))
(declare-fun temp126_13 () (_ BitVec 64))
(declare-fun temp126_14 () (_ BitVec 64))
(declare-fun temp126_15 () (_ BitVec 64))
(declare-fun temp126_16 () (_ BitVec 64))
(declare-fun temp126_17 () (_ BitVec 64))
(declare-fun temp126_18 () (_ BitVec 64))
(declare-fun temp126_19 () (_ BitVec 64))
(declare-fun temp126_20 () (_ BitVec 64))
(declare-fun temp126_21 () (_ BitVec 64))
(declare-fun temp126_22 () (_ BitVec 64))
(declare-fun temp126_23 () (_ BitVec 64))
(declare-fun temp126_24 () (_ BitVec 64))
(declare-fun temp126_25 () (_ BitVec 64))
(declare-fun temp126_26 () (_ BitVec 64))
(declare-fun temp126_27 () (_ BitVec 64))
(declare-fun temp126_28 () (_ BitVec 64))
(declare-fun temp126_29 () (_ BitVec 64))
(declare-fun temp126_30 () (_ BitVec 64))
(declare-fun temp126_31 () (_ BitVec 64))
(declare-fun temp126_32 () (_ BitVec 64))
(declare-fun temp126_33 () (_ BitVec 64))
(declare-fun temp126_34 () (_ BitVec 64))
(declare-fun temp126_35 () (_ BitVec 64))
(declare-fun temp126_36 () (_ BitVec 64))
(declare-fun temp126_37 () (_ BitVec 64))
(declare-fun temp126_38 () (_ BitVec 64))
(declare-fun temp126_39 () (_ BitVec 64))
(declare-fun temp126_40 () (_ BitVec 64))
(declare-fun temp126_41 () (_ BitVec 64))
(declare-fun temp126_42 () (_ BitVec 64))
(declare-fun temp126_43 () (_ BitVec 64))
(declare-fun temp126_44 () (_ BitVec 64))
(declare-fun temp126_45 () (_ BitVec 64))
(declare-fun temp126_46 () (_ BitVec 64))
(declare-fun temp126_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp126_48 () (_ BitVec 64))
(declare-fun temp126_49 () (_ BitVec 64))
(declare-fun temp126_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_51 () (_ BitVec 64))
(declare-fun temp126_52 () (_ BitVec 64))
(declare-fun temp126_53 () (_ BitVec 64))
(declare-fun temp126_54 () (_ BitVec 64))
(declare-fun temp126_55 () (_ BitVec 64))
(declare-fun temp126_56 () (_ BitVec 64))
(declare-fun temp126_57 () (_ BitVec 64))
(declare-fun temp126_58 () (_ BitVec 64))
(declare-fun temp126_59 () (_ BitVec 64))
(declare-fun temp126_60 () (_ BitVec 64))
(declare-fun temp126_61 () (_ BitVec 64))
(declare-fun temp126_62 () (_ BitVec 64))
(declare-fun temp126_63 () (_ BitVec 64))
(declare-fun temp126_64 () (_ BitVec 64))
(declare-fun temp126_65 () (_ BitVec 64))
(declare-fun temp126_66 () (_ BitVec 64))
(declare-fun temp126_67 () (_ BitVec 64))
(declare-fun temp126_68 () (_ BitVec 64))
(declare-fun temp126_69 () (_ BitVec 64))
(declare-fun temp126_70 () (_ BitVec 64))
(declare-fun temp126_71 () (_ BitVec 64))
(declare-fun temp126_72 () (_ BitVec 64))
(declare-fun temp126_73 () (_ BitVec 64))
(declare-fun temp126_74 () (_ BitVec 64))
(declare-fun temp126_75 () (_ BitVec 64))
(declare-fun temp126_76 () (_ BitVec 64))
(declare-fun temp126_77 () (_ BitVec 64))
(declare-fun temp126_78 () (_ BitVec 64))
(declare-fun temp126_79 () (_ BitVec 64))
(declare-fun temp126_80 () (_ BitVec 64))
(declare-fun temp126_81 () (_ BitVec 64))
(declare-fun temp126_82 () (_ BitVec 64))
(declare-fun temp126_83 () (_ BitVec 64))
(declare-fun temp126_84 () (_ BitVec 64))
(declare-fun temp126_85 () (_ BitVec 64))
(declare-fun temp126_86 () (_ BitVec 64))
(declare-fun temp126_87 () (_ BitVec 64))
(declare-fun temp126_88 () (_ BitVec 64))
(declare-fun temp126_89 () (_ BitVec 64))
(declare-fun temp126_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp126_91 () (_ BitVec 64))
(declare-fun temp126_92 () (_ BitVec 64))
(declare-fun temp126_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_94 () (_ BitVec 64))
(declare-fun temp126_95 () (_ BitVec 64))
(declare-fun temp126_96 () (_ BitVec 64))
(declare-fun temp126_97 () (_ BitVec 64))
(declare-fun temp126_98 () (_ BitVec 64))
(declare-fun temp126_99 () (_ BitVec 64))
(declare-fun temp126_100 () (_ BitVec 64))
(declare-fun temp126_101 () (_ BitVec 64))
(declare-fun temp126_102 () (_ BitVec 64))
(declare-fun temp126_103 () (_ BitVec 64))
(declare-fun temp126_104 () (_ BitVec 64))
(declare-fun temp126_105 () (_ BitVec 64))
(declare-fun temp126_106 () (_ BitVec 64))
(declare-fun temp126_107 () (_ BitVec 64))
(declare-fun temp126_108 () (_ BitVec 64))
(declare-fun temp126_109 () (_ BitVec 64))
(declare-fun temp126_110 () (_ BitVec 64))
(declare-fun temp126_111 () (_ BitVec 64))
(declare-fun temp126_112 () (_ BitVec 64))
(declare-fun temp126_113 () (_ BitVec 64))
(declare-fun temp126_114 () (_ BitVec 64))
(declare-fun temp126_115 () (_ BitVec 64))
(declare-fun temp126_116 () (_ BitVec 64))
(declare-fun temp126_117 () (_ BitVec 64))
(declare-fun temp126_118 () (_ BitVec 64))
(declare-fun temp126_119 () (_ BitVec 64))
(declare-fun temp126_120 () (_ BitVec 64))
(declare-fun temp126_121 () (_ BitVec 64))
(declare-fun temp126_122 () (_ BitVec 64))
(declare-fun temp126_123 () (_ BitVec 64))
(declare-fun temp126_124 () (_ BitVec 64))
(declare-fun temp126_125 () (_ BitVec 64))
(declare-fun temp126_126 () (_ BitVec 64))
(declare-fun temp126_127 () (_ BitVec 64))
(declare-fun temp126_128 () (_ BitVec 64))
(declare-fun temp126_129 () (_ BitVec 64))
(declare-fun temp126_130 () (_ BitVec 64))
(declare-fun temp126_131 () (_ BitVec 64))
(declare-fun temp126_132 () (_ BitVec 64))
(declare-fun temp126_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp126_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp126_135 () (_ BitVec 64))
(declare-fun temp126_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp126_137 () (_ BitVec 64))
(declare-fun temp126_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_139 () (_ BitVec 64))
(declare-fun temp126_140 () (_ BitVec 64))
(declare-fun temp126_141 () (_ BitVec 64))
(declare-fun temp126_142 () (_ BitVec 64))
(declare-fun temp126_143 () (_ BitVec 64))
(declare-fun temp126_144 () (_ BitVec 64))
(declare-fun temp126_145 () (_ BitVec 64))
(declare-fun temp126_146 () (_ BitVec 64))
(declare-fun temp126_147 () (_ BitVec 64))
(declare-fun temp126_148 () (_ BitVec 64))
(declare-fun temp126_149 () (_ BitVec 64))
(declare-fun temp126_150 () (_ BitVec 64))
(declare-fun temp126_151 () (_ BitVec 64))
(declare-fun temp126_152 () (_ BitVec 64))
(declare-fun temp126_153 () (_ BitVec 64))
(declare-fun temp126_154 () (_ BitVec 64))
(declare-fun temp126_156 () (_ BitVec 64))
(declare-fun temp126_157 () (_ BitVec 64))
(declare-fun temp126_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp126_158 () (_ BitVec 64))
(declare-fun temp126_159 () (_ BitVec 64))
(declare-fun temp126_161 () (_ BitVec 64))
(declare-fun temp126_162 () (_ BitVec 64))
(declare-fun temp126_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp126_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp126_164 () (_ BitVec 64))
(declare-fun temp126_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp126_166 () (_ BitVec 64))
(declare-fun temp126_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp126_168 () (_ BitVec 64))
(declare-fun temp126_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_170 () (_ BitVec 64))
(declare-fun temp126_171 () (_ BitVec 64))
(declare-fun temp126_172 () (_ BitVec 64))
(declare-fun temp126_173 () (_ BitVec 64))
(declare-fun temp126_174 () (_ BitVec 64))
(declare-fun temp126_175 () (_ BitVec 64))
(declare-fun temp126_176 () (_ BitVec 64))
(declare-fun temp126_177 () (_ BitVec 64))
(declare-fun temp126_178 () (_ BitVec 64))
(declare-fun temp126_179 () (_ BitVec 64))
(declare-fun temp126_180 () (_ BitVec 64))
(declare-fun temp126_181 () (_ BitVec 64))
(declare-fun temp126_182 () (_ BitVec 64))
(declare-fun temp126_183 () (_ BitVec 64))
(declare-fun temp126_184 () (_ BitVec 64))
(declare-fun temp126_185 () (_ BitVec 64))
(declare-fun temp126_186 () (_ BitVec 64))
(declare-fun temp126_187 () (_ BitVec 64))
(declare-fun temp126_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp126_189 () (_ BitVec 64))
(declare-fun temp126_191 () (_ BitVec 64))
(declare-fun temp126_192 () (_ BitVec 64))
(declare-fun temp126_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp126_193 () (_ BitVec 64))
(declare-fun temp126_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp126_195 () (_ BitVec 64))
(declare-fun temp126_196 () (_ BitVec 64))
(declare-fun temp126_197 () (_ BitVec 64))
(declare-fun temp126_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_199 () (_ BitVec 64))
(declare-fun temp126_200 () (_ BitVec 64))
(declare-fun temp126_201 () (_ BitVec 64))
(declare-fun temp126_202 () (_ BitVec 64))
(declare-fun temp126_203 () (_ BitVec 64))
(declare-fun temp126_204 () (_ BitVec 64))
(declare-fun temp126_205 () (_ BitVec 64))
(declare-fun temp126_206 () (_ BitVec 64))
(declare-fun temp126_207 () (_ BitVec 64))
(declare-fun temp126_208 () (_ BitVec 64))
(declare-fun temp126_209 () (_ BitVec 64))
(declare-fun temp126_210 () (_ BitVec 64))
(declare-fun temp126_211 () (_ BitVec 64))
(declare-fun temp126_212 () (_ BitVec 64))
(declare-fun temp126_213 () (_ BitVec 64))
(declare-fun temp126_214 () (_ BitVec 64))
(declare-fun temp126_215 () (_ BitVec 64))
(declare-fun temp126_216 () (_ BitVec 64))
(declare-fun temp126_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp126_218 () (_ BitVec 64))
(declare-fun temp126_220 () (_ BitVec 64))
(declare-fun temp126_221 () (_ BitVec 64))
(declare-fun temp126_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp126_222 () (_ BitVec 64))
(declare-fun temp126_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp126_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp126_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp126_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp126_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp126_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp126_229 () (_ BitVec 64))
(declare-fun temp126_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp126_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp126_232 () (_ BitVec 64))
(declare-fun temp126_233 () (_ BitVec 64))
(declare-fun temp126_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp126_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp126_236 () (_ BitVec 64))
(declare-fun temp126_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp126_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp126_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp126_241 () (_ BitVec 64))
(declare-fun temp126_240 () (_ BitVec 64))
(declare-fun temp126_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp126_243 () (_ BitVec 64))
(declare-fun temp126_244 () (_ BitVec 64))
(declare-fun temp126_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp126_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp126_247 () (_ BitVec 64))
(declare-fun temp126_249 () (_ BitVec 64))
(declare-fun temp126_248 () (_ BitVec 64))
(declare-fun temp126_250 () (_ BitVec 64))
(assert (= temp126_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp126_1)))
(assert (= temp126_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp126_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_3 #x0000000000000000))
(assert (= var79869 temp126_3))
(assert (= temp126_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp126_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_5 #x0000000000000000))
(assert (= var79914 temp126_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp126_6 #x0000000000000000))
(assert (= temp126_7 temp126_6))
(assert (= temp126_8 (select ARGNAME_padding_NAMEEND_VAL temp126_7)))
(assert (= temp126_9 #x0000000000000001))
(assert (= temp126_10 temp126_9))
(assert (= temp126_11 (select ARGNAME_padding_NAMEEND_VAL temp126_10)))
(assert (= temp126_12 #x0000000000000002))
(assert (= temp126_13 temp126_12))
(assert (= temp126_14 (select ARGNAME_padding_NAMEEND_VAL temp126_13)))
(assert (= temp126_15 #x0000000000000003))
(assert (= temp126_16 temp126_15))
(assert (= temp126_17 (select ARGNAME_padding_NAMEEND_VAL temp126_16)))
(assert (= temp126_18 #x0000000000000004))
(assert (= temp126_19 temp126_18))
(assert (= temp126_20 (select ARGNAME_padding_NAMEEND_VAL temp126_19)))
(assert (= temp126_21 #x0000000000000005))
(assert (= temp126_22 temp126_21))
(assert (= temp126_23 (select ARGNAME_padding_NAMEEND_VAL temp126_22)))
(assert (= temp126_24 #x0000000000000000))
(assert (= temp126_25 #x0000000000000000))
(assert (= temp126_26 temp126_25))
(assert (= temp126_27 (select ARGNAME_padding_NAMEEND_VAL temp126_26)))
(assert (= temp126_28 #x0000000000000000))
(assert (= temp126_29 #x0000000000000001))
(assert (= temp126_30 temp126_29))
(assert (= temp126_31 (select ARGNAME_padding_NAMEEND_VAL temp126_30)))
(assert (= temp126_32 #x0000000000000000))
(assert (= temp126_33 #x0000000000000002))
(assert (= temp126_34 temp126_33))
(assert (= temp126_35 (select ARGNAME_padding_NAMEEND_VAL temp126_34)))
(assert (= temp126_36 #x0000000000000000))
(assert (= temp126_37 #x0000000000000003))
(assert (= temp126_38 temp126_37))
(assert (= temp126_39 (select ARGNAME_padding_NAMEEND_VAL temp126_38)))
(assert (= temp126_40 #x0000000000000000))
(assert (= temp126_41 #x0000000000000004))
(assert (= temp126_42 temp126_41))
(assert (= temp126_43 (select ARGNAME_padding_NAMEEND_VAL temp126_42)))
(assert (= temp126_44 #x0000000000000000))
(assert (= temp126_45 #x0000000000000005))
(assert (= temp126_46 temp126_45))
(assert (= temp126_47 (select ARGNAME_padding_NAMEEND_VAL temp126_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp126_27 temp126_24)
             (bvslt temp126_31 temp126_28)
             (bvslt temp126_35 temp126_32)
             (bvslt temp126_39 temp126_36)
             (bvslt temp126_43 temp126_40)
             (bvslt temp126_47 temp126_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_48 #x0000000000000000))
(assert (= var1322786 temp126_48))
(assert (= temp126_49 #x0000000000000000))
(assert (= temp126_50 temp126_49))
(assert (= temp126_51 (select ARGNAME_output_padding_NAMEEND_VAL temp126_50)))
(assert (= temp126_52 #x0000000000000001))
(assert (= temp126_53 temp126_52))
(assert (= temp126_54 (select ARGNAME_output_padding_NAMEEND_VAL temp126_53)))
(assert (= temp126_55 #x0000000000000002))
(assert (= temp126_56 temp126_55))
(assert (= temp126_57 (select ARGNAME_output_padding_NAMEEND_VAL temp126_56)))
(assert (= temp126_58 #x0000000000000003))
(assert (= temp126_59 temp126_58))
(assert (= temp126_60 (select ARGNAME_output_padding_NAMEEND_VAL temp126_59)))
(assert (= temp126_61 #x0000000000000004))
(assert (= temp126_62 temp126_61))
(assert (= temp126_63 (select ARGNAME_output_padding_NAMEEND_VAL temp126_62)))
(assert (= temp126_64 #x0000000000000005))
(assert (= temp126_65 temp126_64))
(assert (= temp126_66 (select ARGNAME_output_padding_NAMEEND_VAL temp126_65)))
(assert (= temp126_67 #x0000000000000000))
(assert (= temp126_68 #x0000000000000000))
(assert (= temp126_69 temp126_68))
(assert (= temp126_70 (select ARGNAME_output_padding_NAMEEND_VAL temp126_69)))
(assert (= temp126_71 #x0000000000000000))
(assert (= temp126_72 #x0000000000000001))
(assert (= temp126_73 temp126_72))
(assert (= temp126_74 (select ARGNAME_output_padding_NAMEEND_VAL temp126_73)))
(assert (= temp126_75 #x0000000000000000))
(assert (= temp126_76 #x0000000000000002))
(assert (= temp126_77 temp126_76))
(assert (= temp126_78 (select ARGNAME_output_padding_NAMEEND_VAL temp126_77)))
(assert (= temp126_79 #x0000000000000000))
(assert (= temp126_80 #x0000000000000003))
(assert (= temp126_81 temp126_80))
(assert (= temp126_82 (select ARGNAME_output_padding_NAMEEND_VAL temp126_81)))
(assert (= temp126_83 #x0000000000000000))
(assert (= temp126_84 #x0000000000000004))
(assert (= temp126_85 temp126_84))
(assert (= temp126_86 (select ARGNAME_output_padding_NAMEEND_VAL temp126_85)))
(assert (= temp126_87 #x0000000000000000))
(assert (= temp126_88 #x0000000000000005))
(assert (= temp126_89 temp126_88))
(assert (= temp126_90 (select ARGNAME_output_padding_NAMEEND_VAL temp126_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp126_70 temp126_67)
             (bvslt temp126_74 temp126_71)
             (bvslt temp126_78 temp126_75)
             (bvslt temp126_82 temp126_79)
             (bvslt temp126_86 temp126_83)
             (bvslt temp126_90 temp126_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_91 #x0000000000000000))
(assert (= var1322797 temp126_91))
(assert (= temp126_92 #x0000000000000000))
(assert (= temp126_93 temp126_92))
(assert (= temp126_94 (select ARGNAME_stride_NAMEEND_VAL temp126_93)))
(assert (= temp126_95 #x0000000000000001))
(assert (= temp126_96 temp126_95))
(assert (= temp126_97 (select ARGNAME_stride_NAMEEND_VAL temp126_96)))
(assert (= temp126_98 #x0000000000000002))
(assert (= temp126_99 temp126_98))
(assert (= temp126_100 (select ARGNAME_stride_NAMEEND_VAL temp126_99)))
(assert (= temp126_101 #x0000000000000003))
(assert (= temp126_102 temp126_101))
(assert (= temp126_103 (select ARGNAME_stride_NAMEEND_VAL temp126_102)))
(assert (= temp126_104 #x0000000000000004))
(assert (= temp126_105 temp126_104))
(assert (= temp126_106 (select ARGNAME_stride_NAMEEND_VAL temp126_105)))
(assert (= temp126_107 #x0000000000000005))
(assert (= temp126_108 temp126_107))
(assert (= temp126_109 (select ARGNAME_stride_NAMEEND_VAL temp126_108)))
(assert (= temp126_110 #x0000000000000000))
(assert (= temp126_111 #x0000000000000000))
(assert (= temp126_112 temp126_111))
(assert (= temp126_113 (select ARGNAME_stride_NAMEEND_VAL temp126_112)))
(assert (= temp126_114 #x0000000000000000))
(assert (= temp126_115 #x0000000000000001))
(assert (= temp126_116 temp126_115))
(assert (= temp126_117 (select ARGNAME_stride_NAMEEND_VAL temp126_116)))
(assert (= temp126_118 #x0000000000000000))
(assert (= temp126_119 #x0000000000000002))
(assert (= temp126_120 temp126_119))
(assert (= temp126_121 (select ARGNAME_stride_NAMEEND_VAL temp126_120)))
(assert (= temp126_122 #x0000000000000000))
(assert (= temp126_123 #x0000000000000003))
(assert (= temp126_124 temp126_123))
(assert (= temp126_125 (select ARGNAME_stride_NAMEEND_VAL temp126_124)))
(assert (= temp126_126 #x0000000000000000))
(assert (= temp126_127 #x0000000000000004))
(assert (= temp126_128 temp126_127))
(assert (= temp126_129 (select ARGNAME_stride_NAMEEND_VAL temp126_128)))
(assert (= temp126_130 #x0000000000000000))
(assert (= temp126_131 #x0000000000000005))
(assert (= temp126_132 temp126_131))
(assert (= temp126_133 (select ARGNAME_stride_NAMEEND_VAL temp126_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp126_113 temp126_110)
             (bvsle temp126_117 temp126_114)
             (bvsle temp126_121 temp126_118)
             (bvsle temp126_125 temp126_122)
             (bvsle temp126_129 temp126_126)
             (bvsle temp126_133 temp126_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_134 #x0000000000000000))
(assert (= var1322807 temp126_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_135 #x0000000000000001))
(assert (= var1322819 temp126_135))
(assert (= temp126_136 #x0000000000000000))
(assert (= var1310898 temp126_136))
(assert (= temp126_137 #x0000000000000000))
(assert (= temp126_138 temp126_137))
(assert (= temp126_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_138)))
(assert (= temp126_140 #x0000000000000001))
(assert (= temp126_141 temp126_140))
(assert (= temp126_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_141)))
(assert (= temp126_143 #x0000000000000002))
(assert (= temp126_144 temp126_143))
(assert (= temp126_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_144)))
(assert (= temp126_146 #x0000000000000003))
(assert (= temp126_147 temp126_146))
(assert (= temp126_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_147)))
(assert (= temp126_149 #x0000000000000004))
(assert (= temp126_150 temp126_149))
(assert (= temp126_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_150)))
(assert (= temp126_152 #x0000000000000005))
(assert (= temp126_153 temp126_152))
(assert (= temp126_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_153)))
(assert (= temp126_156 var1310898))
(assert (= temp126_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_156)))
(assert (= temp126_155 temp126_157))
(assert (= var1322852
   (ite (bvslt temp126_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_158 #x0000000000000000))
(assert (= var1322852 temp126_158))
(assert (= temp126_159 #x0000000000000000))
(assert (= var1310898 temp126_159))
(assert (= temp126_161 var1310898))
(assert (= temp126_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_161)))
(assert (= temp126_160 temp126_162))
(assert (= var1322874 (bvsmod temp126_160 ARGNAME_groups_NAMEEND)))
(assert (= temp126_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp126_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_164 #x0000000000000001))
(assert (= var1322875 temp126_164))
(assert (= temp126_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp126_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_166 #x0000000000000001))
(assert (= var1322895 temp126_166))
(assert (= temp126_167 #x0000000000000001))
(assert (= var1311786 temp126_167))
(assert (= temp126_168 #x0000000000000000))
(assert (= temp126_169 temp126_168))
(assert (= temp126_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_169)))
(assert (= temp126_171 #x0000000000000001))
(assert (= temp126_172 temp126_171))
(assert (= temp126_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_172)))
(assert (= temp126_174 #x0000000000000002))
(assert (= temp126_175 temp126_174))
(assert (= temp126_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_175)))
(assert (= temp126_177 #x0000000000000003))
(assert (= temp126_178 temp126_177))
(assert (= temp126_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_178)))
(assert (= temp126_180 #x0000000000000004))
(assert (= temp126_181 temp126_180))
(assert (= temp126_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_181)))
(assert (= temp126_183 #x0000000000000005))
(assert (= temp126_184 temp126_183))
(assert (= temp126_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_184)))
(assert (= temp126_186 #x0000000000000000))
(assert (= temp126_187
   (ite (bvslt var1311786 temp126_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp126_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_187)))
(assert (= var1322903 temp126_188))
(assert (bvslt (ite (bvslt var1311786 temp126_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp126_189 #x0000000000000001))
(assert (= var1311786 temp126_189))
(assert (= temp126_191 var1311786))
(assert (= temp126_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_191)))
(assert (= temp126_190 temp126_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp126_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_193 #x0000000000000001))
(assert (= var1322908 temp126_193))
(assert (= temp126_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp126_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_195 #x0000000000000001))
(assert (= var1322975 temp126_195))
(assert (= temp126_196 #x0000000000000000))
(assert (= var1310898 temp126_196))
(assert (= temp126_197 #x0000000000000000))
(assert (= temp126_198 temp126_197))
(assert (= temp126_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp126_198)))
(assert (= temp126_200 #x0000000000000001))
(assert (= temp126_201 temp126_200))
(assert (= temp126_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp126_201)))
(assert (= temp126_203 #x0000000000000002))
(assert (= temp126_204 temp126_203))
(assert (= temp126_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp126_204)))
(assert (= temp126_206 #x0000000000000003))
(assert (= temp126_207 temp126_206))
(assert (= temp126_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp126_207)))
(assert (= temp126_209 #x0000000000000004))
(assert (= temp126_210 temp126_209))
(assert (= temp126_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp126_210)))
(assert (= temp126_212 #x0000000000000005))
(assert (= temp126_213 temp126_212))
(assert (= temp126_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp126_213)))
(assert (= temp126_215 #x0000000000000000))
(assert (= temp126_216
   (ite (bvslt var1310898 temp126_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp126_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp126_216)))
(assert (= var1322977 temp126_217))
(assert (bvslt (ite (bvslt var1310898 temp126_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp126_218 #x0000000000000000))
(assert (= var1310898 temp126_218))
(assert (= temp126_220 var1310898))
(assert (= temp126_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_220)))
(assert (= temp126_219 temp126_221))
(assert (= var1322980
   (ite (= var1322977 temp126_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_222 #x0000000000000001))
(assert (= var1322980 temp126_222))
(assert (= temp126_223 #x0000000000000002))
(assert (= var1848169 temp126_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp126_225 #x0000000000000001))
(assert (= var1323065 temp126_225))
(assert (= temp126_226 #x0000000000000001))
(assert (= var3486735 temp126_226))
(assert (= temp126_227 #x0000000000000001))
(assert (= var3814415 temp126_227))
(assert (= temp126_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp126_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_229 #x0000000000000001))
(assert (= var79986 temp126_229))
(assert (= temp126_230 #x0000000000000001))
(assert (= var80116 temp126_230))
(assert (= var4796905 var80116))
(assert (= temp126_231 #x0000000000000000))
(assert (= var4784306 temp126_231))
(assert (= temp126_232 #x0000000000000000))
(assert (= temp126_233
   (ite (bvslt var4784306 temp126_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp126_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_233)))
(assert (= var4796924 temp126_234))
(assert (bvslt (ite (bvslt var4784306 temp126_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp126_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp126_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_236 #x0000000000000001))
(assert (= var4796925 temp126_236))
(assert (= temp126_237 #x0000000000000000))
(assert (= var4996927 temp126_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp126_238 #x0000000000000002))
(assert (= var5125763 temp126_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_239 #x0000000000000000))
(assert (= var5191324 temp126_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp126_241 #xffffffffffffffff))
(assert (= temp126_240 temp126_241))
(assert (= temp126_242 #x0000000000000001))
(assert (= var66602 temp126_242))
(assert (= temp126_243 #x0000000000000000))
(assert (= temp126_244
   (ite (bvslt var66602 temp126_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp126_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_244)))
(assert (= var80523 temp126_245))
(assert (bvslt (ite (bvslt var66602 temp126_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp126_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp126_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_247 #x0000000000000001))
(assert (= var80524 temp126_247))
(assert (= temp126_249 #xffffffffffffffff))
(assert (= temp126_248 temp126_249))
(assert (= temp126_250 #x0000000000000001))
(assert (= var79986 temp126_250))
(model-add temp126_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp126_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp126_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






