(declare-fun temp1006_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1006_2 () (_ BitVec 64))
(declare-fun temp1006_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1006_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1006_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1006_6 () (_ BitVec 64))
(declare-fun temp1006_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1006_8 () (_ BitVec 64))
(declare-fun temp1006_9 () (_ BitVec 64))
(declare-fun temp1006_10 () (_ BitVec 64))
(declare-fun temp1006_11 () (_ BitVec 64))
(declare-fun temp1006_12 () (_ BitVec 64))
(declare-fun temp1006_13 () (_ BitVec 64))
(declare-fun temp1006_14 () (_ BitVec 64))
(declare-fun temp1006_15 () (_ BitVec 64))
(declare-fun temp1006_16 () (_ BitVec 64))
(declare-fun temp1006_17 () (_ BitVec 64))
(declare-fun temp1006_18 () (_ BitVec 64))
(declare-fun temp1006_19 () (_ BitVec 64))
(declare-fun temp1006_20 () (_ BitVec 64))
(declare-fun temp1006_21 () (_ BitVec 64))
(declare-fun temp1006_22 () (_ BitVec 64))
(declare-fun temp1006_23 () (_ BitVec 64))
(declare-fun temp1006_24 () (_ BitVec 64))
(declare-fun temp1006_25 () (_ BitVec 64))
(declare-fun temp1006_26 () (_ BitVec 64))
(declare-fun temp1006_27 () (_ BitVec 64))
(declare-fun temp1006_28 () (_ BitVec 64))
(declare-fun temp1006_29 () (_ BitVec 64))
(declare-fun temp1006_30 () (_ BitVec 64))
(declare-fun temp1006_31 () (_ BitVec 64))
(declare-fun temp1006_32 () (_ BitVec 64))
(declare-fun temp1006_33 () (_ BitVec 64))
(declare-fun temp1006_34 () (_ BitVec 64))
(declare-fun temp1006_35 () (_ BitVec 64))
(declare-fun temp1006_36 () (_ BitVec 64))
(declare-fun temp1006_37 () (_ BitVec 64))
(declare-fun temp1006_38 () (_ BitVec 64))
(declare-fun temp1006_39 () (_ BitVec 64))
(declare-fun temp1006_40 () (_ BitVec 64))
(declare-fun temp1006_41 () (_ BitVec 64))
(declare-fun temp1006_42 () (_ BitVec 64))
(declare-fun temp1006_43 () (_ BitVec 64))
(declare-fun temp1006_44 () (_ BitVec 64))
(declare-fun temp1006_45 () (_ BitVec 64))
(declare-fun temp1006_46 () (_ BitVec 64))
(declare-fun temp1006_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1006_48 () (_ BitVec 64))
(declare-fun temp1006_49 () (_ BitVec 64))
(declare-fun temp1006_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1006_51 () (_ BitVec 64))
(declare-fun temp1006_52 () (_ BitVec 64))
(declare-fun temp1006_53 () (_ BitVec 64))
(declare-fun temp1006_54 () (_ BitVec 64))
(declare-fun temp1006_55 () (_ BitVec 64))
(declare-fun temp1006_56 () (_ BitVec 64))
(declare-fun temp1006_57 () (_ BitVec 64))
(declare-fun temp1006_58 () (_ BitVec 64))
(declare-fun temp1006_59 () (_ BitVec 64))
(declare-fun temp1006_60 () (_ BitVec 64))
(declare-fun temp1006_61 () (_ BitVec 64))
(declare-fun temp1006_62 () (_ BitVec 64))
(declare-fun temp1006_63 () (_ BitVec 64))
(declare-fun temp1006_64 () (_ BitVec 64))
(declare-fun temp1006_65 () (_ BitVec 64))
(declare-fun temp1006_66 () (_ BitVec 64))
(declare-fun temp1006_67 () (_ BitVec 64))
(declare-fun temp1006_68 () (_ BitVec 64))
(declare-fun temp1006_69 () (_ BitVec 64))
(declare-fun temp1006_70 () (_ BitVec 64))
(declare-fun temp1006_71 () (_ BitVec 64))
(declare-fun temp1006_72 () (_ BitVec 64))
(declare-fun temp1006_73 () (_ BitVec 64))
(declare-fun temp1006_74 () (_ BitVec 64))
(declare-fun temp1006_75 () (_ BitVec 64))
(declare-fun temp1006_76 () (_ BitVec 64))
(declare-fun temp1006_77 () (_ BitVec 64))
(declare-fun temp1006_78 () (_ BitVec 64))
(declare-fun temp1006_79 () (_ BitVec 64))
(declare-fun temp1006_80 () (_ BitVec 64))
(declare-fun temp1006_81 () (_ BitVec 64))
(declare-fun temp1006_82 () (_ BitVec 64))
(declare-fun temp1006_83 () (_ BitVec 64))
(declare-fun temp1006_84 () (_ BitVec 64))
(declare-fun temp1006_85 () (_ BitVec 64))
(declare-fun temp1006_86 () (_ BitVec 64))
(declare-fun temp1006_87 () (_ BitVec 64))
(declare-fun temp1006_88 () (_ BitVec 64))
(declare-fun temp1006_89 () (_ BitVec 64))
(declare-fun temp1006_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1006_91 () (_ BitVec 64))
(declare-fun temp1006_92 () (_ BitVec 64))
(declare-fun temp1006_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1006_94 () (_ BitVec 64))
(declare-fun temp1006_95 () (_ BitVec 64))
(declare-fun temp1006_96 () (_ BitVec 64))
(declare-fun temp1006_97 () (_ BitVec 64))
(declare-fun temp1006_98 () (_ BitVec 64))
(declare-fun temp1006_99 () (_ BitVec 64))
(declare-fun temp1006_100 () (_ BitVec 64))
(declare-fun temp1006_101 () (_ BitVec 64))
(declare-fun temp1006_102 () (_ BitVec 64))
(declare-fun temp1006_103 () (_ BitVec 64))
(declare-fun temp1006_104 () (_ BitVec 64))
(declare-fun temp1006_105 () (_ BitVec 64))
(declare-fun temp1006_106 () (_ BitVec 64))
(declare-fun temp1006_107 () (_ BitVec 64))
(declare-fun temp1006_108 () (_ BitVec 64))
(declare-fun temp1006_109 () (_ BitVec 64))
(declare-fun temp1006_110 () (_ BitVec 64))
(declare-fun temp1006_111 () (_ BitVec 64))
(declare-fun temp1006_112 () (_ BitVec 64))
(declare-fun temp1006_113 () (_ BitVec 64))
(declare-fun temp1006_114 () (_ BitVec 64))
(declare-fun temp1006_115 () (_ BitVec 64))
(declare-fun temp1006_116 () (_ BitVec 64))
(declare-fun temp1006_117 () (_ BitVec 64))
(declare-fun temp1006_118 () (_ BitVec 64))
(declare-fun temp1006_119 () (_ BitVec 64))
(declare-fun temp1006_120 () (_ BitVec 64))
(declare-fun temp1006_121 () (_ BitVec 64))
(declare-fun temp1006_122 () (_ BitVec 64))
(declare-fun temp1006_123 () (_ BitVec 64))
(declare-fun temp1006_124 () (_ BitVec 64))
(declare-fun temp1006_125 () (_ BitVec 64))
(declare-fun temp1006_126 () (_ BitVec 64))
(declare-fun temp1006_127 () (_ BitVec 64))
(declare-fun temp1006_128 () (_ BitVec 64))
(declare-fun temp1006_129 () (_ BitVec 64))
(declare-fun temp1006_130 () (_ BitVec 64))
(declare-fun temp1006_131 () (_ BitVec 64))
(declare-fun temp1006_132 () (_ BitVec 64))
(declare-fun temp1006_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1006_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1006_135 () (_ BitVec 64))
(declare-fun temp1006_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1006_137 () (_ BitVec 64))
(declare-fun temp1006_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1006_139 () (_ BitVec 64))
(declare-fun temp1006_140 () (_ BitVec 64))
(declare-fun temp1006_141 () (_ BitVec 64))
(declare-fun temp1006_142 () (_ BitVec 64))
(declare-fun temp1006_143 () (_ BitVec 64))
(declare-fun temp1006_144 () (_ BitVec 64))
(declare-fun temp1006_145 () (_ BitVec 64))
(declare-fun temp1006_146 () (_ BitVec 64))
(declare-fun temp1006_147 () (_ BitVec 64))
(declare-fun temp1006_148 () (_ BitVec 64))
(declare-fun temp1006_149 () (_ BitVec 64))
(declare-fun temp1006_150 () (_ BitVec 64))
(declare-fun temp1006_151 () (_ BitVec 64))
(declare-fun temp1006_152 () (_ BitVec 64))
(declare-fun temp1006_153 () (_ BitVec 64))
(declare-fun temp1006_154 () (_ BitVec 64))
(declare-fun temp1006_156 () (_ BitVec 64))
(declare-fun temp1006_157 () (_ BitVec 64))
(declare-fun temp1006_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1006_158 () (_ BitVec 64))
(declare-fun temp1006_159 () (_ BitVec 64))
(declare-fun temp1006_161 () (_ BitVec 64))
(declare-fun temp1006_162 () (_ BitVec 64))
(declare-fun temp1006_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1006_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1006_164 () (_ BitVec 64))
(declare-fun temp1006_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1006_166 () (_ BitVec 64))
(declare-fun temp1006_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1006_168 () (_ BitVec 64))
(declare-fun temp1006_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1006_170 () (_ BitVec 64))
(declare-fun temp1006_171 () (_ BitVec 64))
(declare-fun temp1006_172 () (_ BitVec 64))
(declare-fun temp1006_173 () (_ BitVec 64))
(declare-fun temp1006_174 () (_ BitVec 64))
(declare-fun temp1006_175 () (_ BitVec 64))
(declare-fun temp1006_176 () (_ BitVec 64))
(declare-fun temp1006_177 () (_ BitVec 64))
(declare-fun temp1006_178 () (_ BitVec 64))
(declare-fun temp1006_179 () (_ BitVec 64))
(declare-fun temp1006_180 () (_ BitVec 64))
(declare-fun temp1006_181 () (_ BitVec 64))
(declare-fun temp1006_182 () (_ BitVec 64))
(declare-fun temp1006_183 () (_ BitVec 64))
(declare-fun temp1006_184 () (_ BitVec 64))
(declare-fun temp1006_185 () (_ BitVec 64))
(declare-fun temp1006_186 () (_ BitVec 64))
(declare-fun temp1006_187 () (_ BitVec 64))
(declare-fun temp1006_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1006_189 () (_ BitVec 64))
(declare-fun temp1006_191 () (_ BitVec 64))
(declare-fun temp1006_192 () (_ BitVec 64))
(declare-fun temp1006_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1006_193 () (_ BitVec 64))
(declare-fun temp1006_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1006_195 () (_ BitVec 64))
(declare-fun temp1006_196 () (_ BitVec 64))
(declare-fun temp1006_197 () (_ BitVec 64))
(declare-fun temp1006_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1006_199 () (_ BitVec 64))
(declare-fun temp1006_200 () (_ BitVec 64))
(declare-fun temp1006_201 () (_ BitVec 64))
(declare-fun temp1006_202 () (_ BitVec 64))
(declare-fun temp1006_203 () (_ BitVec 64))
(declare-fun temp1006_204 () (_ BitVec 64))
(declare-fun temp1006_205 () (_ BitVec 64))
(declare-fun temp1006_206 () (_ BitVec 64))
(declare-fun temp1006_207 () (_ BitVec 64))
(declare-fun temp1006_208 () (_ BitVec 64))
(declare-fun temp1006_209 () (_ BitVec 64))
(declare-fun temp1006_210 () (_ BitVec 64))
(declare-fun temp1006_211 () (_ BitVec 64))
(declare-fun temp1006_212 () (_ BitVec 64))
(declare-fun temp1006_213 () (_ BitVec 64))
(declare-fun temp1006_214 () (_ BitVec 64))
(declare-fun temp1006_215 () (_ BitVec 64))
(declare-fun temp1006_216 () (_ BitVec 64))
(declare-fun temp1006_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1006_218 () (_ BitVec 64))
(declare-fun temp1006_220 () (_ BitVec 64))
(declare-fun temp1006_221 () (_ BitVec 64))
(declare-fun temp1006_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1006_222 () (_ BitVec 64))
(declare-fun temp1006_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1006_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1006_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1006_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1006_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1006_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1006_229 () (_ BitVec 64))
(declare-fun temp1006_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1006_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1006_232 () (_ BitVec 64))
(declare-fun temp1006_233 () (_ BitVec 64))
(declare-fun temp1006_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1006_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1006_236 () (_ BitVec 64))
(declare-fun temp1006_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1006_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1006_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp1006_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp1006_241 () (_ BitVec 64))
(assert (= temp1006_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1006_1)))
(assert (= temp1006_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1006_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_3 #x0000000000000000))
(assert (= var79869 temp1006_3))
(assert (= temp1006_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1006_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_5 #x0000000000000000))
(assert (= var79914 temp1006_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1006_6 #x0000000000000000))
(assert (= temp1006_7 temp1006_6))
(assert (= temp1006_8 (select ARGNAME_padding_NAMEEND_VAL temp1006_7)))
(assert (= temp1006_9 #x0000000000000001))
(assert (= temp1006_10 temp1006_9))
(assert (= temp1006_11 (select ARGNAME_padding_NAMEEND_VAL temp1006_10)))
(assert (= temp1006_12 #x0000000000000002))
(assert (= temp1006_13 temp1006_12))
(assert (= temp1006_14 (select ARGNAME_padding_NAMEEND_VAL temp1006_13)))
(assert (= temp1006_15 #x0000000000000003))
(assert (= temp1006_16 temp1006_15))
(assert (= temp1006_17 (select ARGNAME_padding_NAMEEND_VAL temp1006_16)))
(assert (= temp1006_18 #x0000000000000004))
(assert (= temp1006_19 temp1006_18))
(assert (= temp1006_20 (select ARGNAME_padding_NAMEEND_VAL temp1006_19)))
(assert (= temp1006_21 #x0000000000000005))
(assert (= temp1006_22 temp1006_21))
(assert (= temp1006_23 (select ARGNAME_padding_NAMEEND_VAL temp1006_22)))
(assert (= temp1006_24 #x0000000000000000))
(assert (= temp1006_25 #x0000000000000000))
(assert (= temp1006_26 temp1006_25))
(assert (= temp1006_27 (select ARGNAME_padding_NAMEEND_VAL temp1006_26)))
(assert (= temp1006_28 #x0000000000000000))
(assert (= temp1006_29 #x0000000000000001))
(assert (= temp1006_30 temp1006_29))
(assert (= temp1006_31 (select ARGNAME_padding_NAMEEND_VAL temp1006_30)))
(assert (= temp1006_32 #x0000000000000000))
(assert (= temp1006_33 #x0000000000000002))
(assert (= temp1006_34 temp1006_33))
(assert (= temp1006_35 (select ARGNAME_padding_NAMEEND_VAL temp1006_34)))
(assert (= temp1006_36 #x0000000000000000))
(assert (= temp1006_37 #x0000000000000003))
(assert (= temp1006_38 temp1006_37))
(assert (= temp1006_39 (select ARGNAME_padding_NAMEEND_VAL temp1006_38)))
(assert (= temp1006_40 #x0000000000000000))
(assert (= temp1006_41 #x0000000000000004))
(assert (= temp1006_42 temp1006_41))
(assert (= temp1006_43 (select ARGNAME_padding_NAMEEND_VAL temp1006_42)))
(assert (= temp1006_44 #x0000000000000000))
(assert (= temp1006_45 #x0000000000000005))
(assert (= temp1006_46 temp1006_45))
(assert (= temp1006_47 (select ARGNAME_padding_NAMEEND_VAL temp1006_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1006_27 temp1006_24)
             (bvslt temp1006_31 temp1006_28)
             (bvslt temp1006_35 temp1006_32)
             (bvslt temp1006_39 temp1006_36)
             (bvslt temp1006_43 temp1006_40)
             (bvslt temp1006_47 temp1006_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_48 #x0000000000000000))
(assert (= var1322786 temp1006_48))
(assert (= temp1006_49 #x0000000000000000))
(assert (= temp1006_50 temp1006_49))
(assert (= temp1006_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_50)))
(assert (= temp1006_52 #x0000000000000001))
(assert (= temp1006_53 temp1006_52))
(assert (= temp1006_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_53)))
(assert (= temp1006_55 #x0000000000000002))
(assert (= temp1006_56 temp1006_55))
(assert (= temp1006_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_56)))
(assert (= temp1006_58 #x0000000000000003))
(assert (= temp1006_59 temp1006_58))
(assert (= temp1006_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_59)))
(assert (= temp1006_61 #x0000000000000004))
(assert (= temp1006_62 temp1006_61))
(assert (= temp1006_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_62)))
(assert (= temp1006_64 #x0000000000000005))
(assert (= temp1006_65 temp1006_64))
(assert (= temp1006_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_65)))
(assert (= temp1006_67 #x0000000000000000))
(assert (= temp1006_68 #x0000000000000000))
(assert (= temp1006_69 temp1006_68))
(assert (= temp1006_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_69)))
(assert (= temp1006_71 #x0000000000000000))
(assert (= temp1006_72 #x0000000000000001))
(assert (= temp1006_73 temp1006_72))
(assert (= temp1006_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_73)))
(assert (= temp1006_75 #x0000000000000000))
(assert (= temp1006_76 #x0000000000000002))
(assert (= temp1006_77 temp1006_76))
(assert (= temp1006_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_77)))
(assert (= temp1006_79 #x0000000000000000))
(assert (= temp1006_80 #x0000000000000003))
(assert (= temp1006_81 temp1006_80))
(assert (= temp1006_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_81)))
(assert (= temp1006_83 #x0000000000000000))
(assert (= temp1006_84 #x0000000000000004))
(assert (= temp1006_85 temp1006_84))
(assert (= temp1006_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_85)))
(assert (= temp1006_87 #x0000000000000000))
(assert (= temp1006_88 #x0000000000000005))
(assert (= temp1006_89 temp1006_88))
(assert (= temp1006_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1006_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1006_70 temp1006_67)
             (bvslt temp1006_74 temp1006_71)
             (bvslt temp1006_78 temp1006_75)
             (bvslt temp1006_82 temp1006_79)
             (bvslt temp1006_86 temp1006_83)
             (bvslt temp1006_90 temp1006_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_91 #x0000000000000000))
(assert (= var1322797 temp1006_91))
(assert (= temp1006_92 #x0000000000000000))
(assert (= temp1006_93 temp1006_92))
(assert (= temp1006_94 (select ARGNAME_stride_NAMEEND_VAL temp1006_93)))
(assert (= temp1006_95 #x0000000000000001))
(assert (= temp1006_96 temp1006_95))
(assert (= temp1006_97 (select ARGNAME_stride_NAMEEND_VAL temp1006_96)))
(assert (= temp1006_98 #x0000000000000002))
(assert (= temp1006_99 temp1006_98))
(assert (= temp1006_100 (select ARGNAME_stride_NAMEEND_VAL temp1006_99)))
(assert (= temp1006_101 #x0000000000000003))
(assert (= temp1006_102 temp1006_101))
(assert (= temp1006_103 (select ARGNAME_stride_NAMEEND_VAL temp1006_102)))
(assert (= temp1006_104 #x0000000000000004))
(assert (= temp1006_105 temp1006_104))
(assert (= temp1006_106 (select ARGNAME_stride_NAMEEND_VAL temp1006_105)))
(assert (= temp1006_107 #x0000000000000005))
(assert (= temp1006_108 temp1006_107))
(assert (= temp1006_109 (select ARGNAME_stride_NAMEEND_VAL temp1006_108)))
(assert (= temp1006_110 #x0000000000000000))
(assert (= temp1006_111 #x0000000000000000))
(assert (= temp1006_112 temp1006_111))
(assert (= temp1006_113 (select ARGNAME_stride_NAMEEND_VAL temp1006_112)))
(assert (= temp1006_114 #x0000000000000000))
(assert (= temp1006_115 #x0000000000000001))
(assert (= temp1006_116 temp1006_115))
(assert (= temp1006_117 (select ARGNAME_stride_NAMEEND_VAL temp1006_116)))
(assert (= temp1006_118 #x0000000000000000))
(assert (= temp1006_119 #x0000000000000002))
(assert (= temp1006_120 temp1006_119))
(assert (= temp1006_121 (select ARGNAME_stride_NAMEEND_VAL temp1006_120)))
(assert (= temp1006_122 #x0000000000000000))
(assert (= temp1006_123 #x0000000000000003))
(assert (= temp1006_124 temp1006_123))
(assert (= temp1006_125 (select ARGNAME_stride_NAMEEND_VAL temp1006_124)))
(assert (= temp1006_126 #x0000000000000000))
(assert (= temp1006_127 #x0000000000000004))
(assert (= temp1006_128 temp1006_127))
(assert (= temp1006_129 (select ARGNAME_stride_NAMEEND_VAL temp1006_128)))
(assert (= temp1006_130 #x0000000000000000))
(assert (= temp1006_131 #x0000000000000005))
(assert (= temp1006_132 temp1006_131))
(assert (= temp1006_133 (select ARGNAME_stride_NAMEEND_VAL temp1006_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1006_113 temp1006_110)
             (bvsle temp1006_117 temp1006_114)
             (bvsle temp1006_121 temp1006_118)
             (bvsle temp1006_125 temp1006_122)
             (bvsle temp1006_129 temp1006_126)
             (bvsle temp1006_133 temp1006_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_134 #x0000000000000000))
(assert (= var1322807 temp1006_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_135 #x0000000000000001))
(assert (= var1322819 temp1006_135))
(assert (= temp1006_136 #x0000000000000000))
(assert (= var1310898 temp1006_136))
(assert (= temp1006_137 #x0000000000000000))
(assert (= temp1006_138 temp1006_137))
(assert (= temp1006_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_138)))
(assert (= temp1006_140 #x0000000000000001))
(assert (= temp1006_141 temp1006_140))
(assert (= temp1006_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_141)))
(assert (= temp1006_143 #x0000000000000002))
(assert (= temp1006_144 temp1006_143))
(assert (= temp1006_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_144)))
(assert (= temp1006_146 #x0000000000000003))
(assert (= temp1006_147 temp1006_146))
(assert (= temp1006_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_147)))
(assert (= temp1006_149 #x0000000000000004))
(assert (= temp1006_150 temp1006_149))
(assert (= temp1006_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_150)))
(assert (= temp1006_152 #x0000000000000005))
(assert (= temp1006_153 temp1006_152))
(assert (= temp1006_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_153)))
(assert (= temp1006_156 var1310898))
(assert (= temp1006_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_156)))
(assert (= temp1006_155 temp1006_157))
(assert (= var1322852
   (ite (bvslt temp1006_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_158 #x0000000000000000))
(assert (= var1322852 temp1006_158))
(assert (= temp1006_159 #x0000000000000000))
(assert (= var1310898 temp1006_159))
(assert (= temp1006_161 var1310898))
(assert (= temp1006_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_161)))
(assert (= temp1006_160 temp1006_162))
(assert (= var1322874 (bvsmod temp1006_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1006_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1006_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1006_164 #x0000000000000001))
(assert (= var1322875 temp1006_164))
(assert (= temp1006_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1006_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_166 #x0000000000000001))
(assert (= var1322895 temp1006_166))
(assert (= temp1006_167 #x0000000000000001))
(assert (= var1311786 temp1006_167))
(assert (= temp1006_168 #x0000000000000000))
(assert (= temp1006_169 temp1006_168))
(assert (= temp1006_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1006_169)))
(assert (= temp1006_171 #x0000000000000001))
(assert (= temp1006_172 temp1006_171))
(assert (= temp1006_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1006_172)))
(assert (= temp1006_174 #x0000000000000002))
(assert (= temp1006_175 temp1006_174))
(assert (= temp1006_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1006_175)))
(assert (= temp1006_177 #x0000000000000003))
(assert (= temp1006_178 temp1006_177))
(assert (= temp1006_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1006_178)))
(assert (= temp1006_180 #x0000000000000004))
(assert (= temp1006_181 temp1006_180))
(assert (= temp1006_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1006_181)))
(assert (= temp1006_183 #x0000000000000005))
(assert (= temp1006_184 temp1006_183))
(assert (= temp1006_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1006_184)))
(assert (= temp1006_186 #x0000000000000000))
(assert (= temp1006_187
   (ite (bvslt var1311786 temp1006_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1006_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1006_187)))
(assert (= var1322903 temp1006_188))
(assert (bvslt (ite (bvslt var1311786 temp1006_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1006_189 #x0000000000000001))
(assert (= var1311786 temp1006_189))
(assert (= temp1006_191 var1311786))
(assert (= temp1006_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_191)))
(assert (= temp1006_190 temp1006_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1006_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1006_193 #x0000000000000001))
(assert (= var1322908 temp1006_193))
(assert (= temp1006_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1006_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_195 #x0000000000000001))
(assert (= var1322975 temp1006_195))
(assert (= temp1006_196 #x0000000000000000))
(assert (= var1310898 temp1006_196))
(assert (= temp1006_197 #x0000000000000000))
(assert (= temp1006_198 temp1006_197))
(assert (= temp1006_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1006_198)))
(assert (= temp1006_200 #x0000000000000001))
(assert (= temp1006_201 temp1006_200))
(assert (= temp1006_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1006_201)))
(assert (= temp1006_203 #x0000000000000002))
(assert (= temp1006_204 temp1006_203))
(assert (= temp1006_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1006_204)))
(assert (= temp1006_206 #x0000000000000003))
(assert (= temp1006_207 temp1006_206))
(assert (= temp1006_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1006_207)))
(assert (= temp1006_209 #x0000000000000004))
(assert (= temp1006_210 temp1006_209))
(assert (= temp1006_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1006_210)))
(assert (= temp1006_212 #x0000000000000005))
(assert (= temp1006_213 temp1006_212))
(assert (= temp1006_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1006_213)))
(assert (= temp1006_215 #x0000000000000000))
(assert (= temp1006_216
   (ite (bvslt var1310898 temp1006_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1006_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1006_216)))
(assert (= var1322977 temp1006_217))
(assert (bvslt (ite (bvslt var1310898 temp1006_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1006_218 #x0000000000000000))
(assert (= var1310898 temp1006_218))
(assert (= temp1006_220 var1310898))
(assert (= temp1006_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_220)))
(assert (= temp1006_219 temp1006_221))
(assert (= var1322980
   (ite (= var1322977 temp1006_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1006_222 #x0000000000000001))
(assert (= var1322980 temp1006_222))
(assert (= temp1006_223 #x0000000000000002))
(assert (= var1848169 temp1006_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1006_225 #x0000000000000001))
(assert (= var1323065 temp1006_225))
(assert (= temp1006_226 #x0000000000000001))
(assert (= var3486735 temp1006_226))
(assert (= temp1006_227 #x0000000000000001))
(assert (= var3814415 temp1006_227))
(assert (= temp1006_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1006_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_229 #x0000000000000001))
(assert (= var79986 temp1006_229))
(assert (= temp1006_230 #x0000000000000001))
(assert (= var80116 temp1006_230))
(assert (= var4796905 var80116))
(assert (= temp1006_231 #x0000000000000000))
(assert (= var4784306 temp1006_231))
(assert (= temp1006_232 #x0000000000000000))
(assert (= temp1006_233
   (ite (bvslt var4784306 temp1006_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1006_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1006_233)))
(assert (= var4796924 temp1006_234))
(assert (bvslt (ite (bvslt var4784306 temp1006_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1006_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1006_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1006_236 #x0000000000000001))
(assert (= var4796925 temp1006_236))
(assert (= temp1006_237 #x0000000000000000))
(assert (= var4996927 temp1006_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1006_238 #x0000000000000002))
(assert (= var5125763 temp1006_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_239 #x0000000000000000))
(assert (= var5191324 temp1006_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp1006_240 #x0000000000000000))
(assert (= var6631824 temp1006_240))
(assert (= temp1006_241 #x0000000000000001))
(assert (= var79986 temp1006_241))
(model-add temp1006_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1006_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1006_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






