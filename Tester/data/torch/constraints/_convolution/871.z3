(declare-fun temp1158_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1158_2 () (_ BitVec 64))
(declare-fun temp1158_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1158_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1158_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1158_6 () (_ BitVec 64))
(declare-fun temp1158_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_8 () (_ BitVec 64))
(declare-fun temp1158_9 () (_ BitVec 64))
(declare-fun temp1158_10 () (_ BitVec 64))
(declare-fun temp1158_11 () (_ BitVec 64))
(declare-fun temp1158_12 () (_ BitVec 64))
(declare-fun temp1158_13 () (_ BitVec 64))
(declare-fun temp1158_14 () (_ BitVec 64))
(declare-fun temp1158_15 () (_ BitVec 64))
(declare-fun temp1158_16 () (_ BitVec 64))
(declare-fun temp1158_17 () (_ BitVec 64))
(declare-fun temp1158_18 () (_ BitVec 64))
(declare-fun temp1158_19 () (_ BitVec 64))
(declare-fun temp1158_20 () (_ BitVec 64))
(declare-fun temp1158_21 () (_ BitVec 64))
(declare-fun temp1158_22 () (_ BitVec 64))
(declare-fun temp1158_23 () (_ BitVec 64))
(declare-fun temp1158_24 () (_ BitVec 64))
(declare-fun temp1158_25 () (_ BitVec 64))
(declare-fun temp1158_26 () (_ BitVec 64))
(declare-fun temp1158_27 () (_ BitVec 64))
(declare-fun temp1158_28 () (_ BitVec 64))
(declare-fun temp1158_29 () (_ BitVec 64))
(declare-fun temp1158_30 () (_ BitVec 64))
(declare-fun temp1158_31 () (_ BitVec 64))
(declare-fun temp1158_32 () (_ BitVec 64))
(declare-fun temp1158_33 () (_ BitVec 64))
(declare-fun temp1158_34 () (_ BitVec 64))
(declare-fun temp1158_35 () (_ BitVec 64))
(declare-fun temp1158_36 () (_ BitVec 64))
(declare-fun temp1158_37 () (_ BitVec 64))
(declare-fun temp1158_38 () (_ BitVec 64))
(declare-fun temp1158_39 () (_ BitVec 64))
(declare-fun temp1158_40 () (_ BitVec 64))
(declare-fun temp1158_41 () (_ BitVec 64))
(declare-fun temp1158_42 () (_ BitVec 64))
(declare-fun temp1158_43 () (_ BitVec 64))
(declare-fun temp1158_44 () (_ BitVec 64))
(declare-fun temp1158_45 () (_ BitVec 64))
(declare-fun temp1158_46 () (_ BitVec 64))
(declare-fun temp1158_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1158_48 () (_ BitVec 64))
(declare-fun temp1158_49 () (_ BitVec 64))
(declare-fun temp1158_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_51 () (_ BitVec 64))
(declare-fun temp1158_52 () (_ BitVec 64))
(declare-fun temp1158_53 () (_ BitVec 64))
(declare-fun temp1158_54 () (_ BitVec 64))
(declare-fun temp1158_55 () (_ BitVec 64))
(declare-fun temp1158_56 () (_ BitVec 64))
(declare-fun temp1158_57 () (_ BitVec 64))
(declare-fun temp1158_58 () (_ BitVec 64))
(declare-fun temp1158_59 () (_ BitVec 64))
(declare-fun temp1158_60 () (_ BitVec 64))
(declare-fun temp1158_61 () (_ BitVec 64))
(declare-fun temp1158_62 () (_ BitVec 64))
(declare-fun temp1158_63 () (_ BitVec 64))
(declare-fun temp1158_64 () (_ BitVec 64))
(declare-fun temp1158_65 () (_ BitVec 64))
(declare-fun temp1158_66 () (_ BitVec 64))
(declare-fun temp1158_67 () (_ BitVec 64))
(declare-fun temp1158_68 () (_ BitVec 64))
(declare-fun temp1158_69 () (_ BitVec 64))
(declare-fun temp1158_70 () (_ BitVec 64))
(declare-fun temp1158_71 () (_ BitVec 64))
(declare-fun temp1158_72 () (_ BitVec 64))
(declare-fun temp1158_73 () (_ BitVec 64))
(declare-fun temp1158_74 () (_ BitVec 64))
(declare-fun temp1158_75 () (_ BitVec 64))
(declare-fun temp1158_76 () (_ BitVec 64))
(declare-fun temp1158_77 () (_ BitVec 64))
(declare-fun temp1158_78 () (_ BitVec 64))
(declare-fun temp1158_79 () (_ BitVec 64))
(declare-fun temp1158_80 () (_ BitVec 64))
(declare-fun temp1158_81 () (_ BitVec 64))
(declare-fun temp1158_82 () (_ BitVec 64))
(declare-fun temp1158_83 () (_ BitVec 64))
(declare-fun temp1158_84 () (_ BitVec 64))
(declare-fun temp1158_85 () (_ BitVec 64))
(declare-fun temp1158_86 () (_ BitVec 64))
(declare-fun temp1158_87 () (_ BitVec 64))
(declare-fun temp1158_88 () (_ BitVec 64))
(declare-fun temp1158_89 () (_ BitVec 64))
(declare-fun temp1158_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1158_91 () (_ BitVec 64))
(declare-fun temp1158_92 () (_ BitVec 64))
(declare-fun temp1158_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_94 () (_ BitVec 64))
(declare-fun temp1158_95 () (_ BitVec 64))
(declare-fun temp1158_96 () (_ BitVec 64))
(declare-fun temp1158_97 () (_ BitVec 64))
(declare-fun temp1158_98 () (_ BitVec 64))
(declare-fun temp1158_99 () (_ BitVec 64))
(declare-fun temp1158_100 () (_ BitVec 64))
(declare-fun temp1158_101 () (_ BitVec 64))
(declare-fun temp1158_102 () (_ BitVec 64))
(declare-fun temp1158_103 () (_ BitVec 64))
(declare-fun temp1158_104 () (_ BitVec 64))
(declare-fun temp1158_105 () (_ BitVec 64))
(declare-fun temp1158_106 () (_ BitVec 64))
(declare-fun temp1158_107 () (_ BitVec 64))
(declare-fun temp1158_108 () (_ BitVec 64))
(declare-fun temp1158_109 () (_ BitVec 64))
(declare-fun temp1158_110 () (_ BitVec 64))
(declare-fun temp1158_111 () (_ BitVec 64))
(declare-fun temp1158_112 () (_ BitVec 64))
(declare-fun temp1158_113 () (_ BitVec 64))
(declare-fun temp1158_114 () (_ BitVec 64))
(declare-fun temp1158_115 () (_ BitVec 64))
(declare-fun temp1158_116 () (_ BitVec 64))
(declare-fun temp1158_117 () (_ BitVec 64))
(declare-fun temp1158_118 () (_ BitVec 64))
(declare-fun temp1158_119 () (_ BitVec 64))
(declare-fun temp1158_120 () (_ BitVec 64))
(declare-fun temp1158_121 () (_ BitVec 64))
(declare-fun temp1158_122 () (_ BitVec 64))
(declare-fun temp1158_123 () (_ BitVec 64))
(declare-fun temp1158_124 () (_ BitVec 64))
(declare-fun temp1158_125 () (_ BitVec 64))
(declare-fun temp1158_126 () (_ BitVec 64))
(declare-fun temp1158_127 () (_ BitVec 64))
(declare-fun temp1158_128 () (_ BitVec 64))
(declare-fun temp1158_129 () (_ BitVec 64))
(declare-fun temp1158_130 () (_ BitVec 64))
(declare-fun temp1158_131 () (_ BitVec 64))
(declare-fun temp1158_132 () (_ BitVec 64))
(declare-fun temp1158_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1158_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1158_135 () (_ BitVec 64))
(declare-fun temp1158_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1158_137 () (_ BitVec 64))
(declare-fun temp1158_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_139 () (_ BitVec 64))
(declare-fun temp1158_140 () (_ BitVec 64))
(declare-fun temp1158_141 () (_ BitVec 64))
(declare-fun temp1158_142 () (_ BitVec 64))
(declare-fun temp1158_143 () (_ BitVec 64))
(declare-fun temp1158_144 () (_ BitVec 64))
(declare-fun temp1158_145 () (_ BitVec 64))
(declare-fun temp1158_146 () (_ BitVec 64))
(declare-fun temp1158_147 () (_ BitVec 64))
(declare-fun temp1158_148 () (_ BitVec 64))
(declare-fun temp1158_149 () (_ BitVec 64))
(declare-fun temp1158_150 () (_ BitVec 64))
(declare-fun temp1158_151 () (_ BitVec 64))
(declare-fun temp1158_152 () (_ BitVec 64))
(declare-fun temp1158_153 () (_ BitVec 64))
(declare-fun temp1158_154 () (_ BitVec 64))
(declare-fun temp1158_156 () (_ BitVec 64))
(declare-fun temp1158_157 () (_ BitVec 64))
(declare-fun temp1158_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1158_158 () (_ BitVec 64))
(declare-fun temp1158_159 () (_ BitVec 64))
(declare-fun temp1158_161 () (_ BitVec 64))
(declare-fun temp1158_162 () (_ BitVec 64))
(declare-fun temp1158_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1158_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1158_164 () (_ BitVec 64))
(declare-fun temp1158_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1158_166 () (_ BitVec 64))
(declare-fun temp1158_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1158_168 () (_ BitVec 64))
(declare-fun temp1158_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_170 () (_ BitVec 64))
(declare-fun temp1158_171 () (_ BitVec 64))
(declare-fun temp1158_172 () (_ BitVec 64))
(declare-fun temp1158_173 () (_ BitVec 64))
(declare-fun temp1158_174 () (_ BitVec 64))
(declare-fun temp1158_175 () (_ BitVec 64))
(declare-fun temp1158_176 () (_ BitVec 64))
(declare-fun temp1158_177 () (_ BitVec 64))
(declare-fun temp1158_178 () (_ BitVec 64))
(declare-fun temp1158_179 () (_ BitVec 64))
(declare-fun temp1158_180 () (_ BitVec 64))
(declare-fun temp1158_181 () (_ BitVec 64))
(declare-fun temp1158_182 () (_ BitVec 64))
(declare-fun temp1158_183 () (_ BitVec 64))
(declare-fun temp1158_184 () (_ BitVec 64))
(declare-fun temp1158_185 () (_ BitVec 64))
(declare-fun temp1158_186 () (_ BitVec 64))
(declare-fun temp1158_187 () (_ BitVec 64))
(declare-fun temp1158_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1158_189 () (_ BitVec 64))
(declare-fun temp1158_191 () (_ BitVec 64))
(declare-fun temp1158_192 () (_ BitVec 64))
(declare-fun temp1158_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1158_193 () (_ BitVec 64))
(declare-fun temp1158_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1158_195 () (_ BitVec 64))
(declare-fun temp1158_196 () (_ BitVec 64))
(declare-fun temp1158_197 () (_ BitVec 64))
(declare-fun temp1158_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_199 () (_ BitVec 64))
(declare-fun temp1158_200 () (_ BitVec 64))
(declare-fun temp1158_201 () (_ BitVec 64))
(declare-fun temp1158_202 () (_ BitVec 64))
(declare-fun temp1158_203 () (_ BitVec 64))
(declare-fun temp1158_204 () (_ BitVec 64))
(declare-fun temp1158_205 () (_ BitVec 64))
(declare-fun temp1158_206 () (_ BitVec 64))
(declare-fun temp1158_207 () (_ BitVec 64))
(declare-fun temp1158_208 () (_ BitVec 64))
(declare-fun temp1158_209 () (_ BitVec 64))
(declare-fun temp1158_210 () (_ BitVec 64))
(declare-fun temp1158_211 () (_ BitVec 64))
(declare-fun temp1158_212 () (_ BitVec 64))
(declare-fun temp1158_213 () (_ BitVec 64))
(declare-fun temp1158_214 () (_ BitVec 64))
(declare-fun temp1158_215 () (_ BitVec 64))
(declare-fun temp1158_216 () (_ BitVec 64))
(declare-fun temp1158_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1158_218 () (_ BitVec 64))
(declare-fun temp1158_220 () (_ BitVec 64))
(declare-fun temp1158_221 () (_ BitVec 64))
(declare-fun temp1158_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1158_222 () (_ BitVec 64))
(declare-fun temp1158_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1158_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1158_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1158_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1158_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1158_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1158_229 () (_ BitVec 64))
(declare-fun temp1158_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1158_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1158_232 () (_ BitVec 64))
(declare-fun temp1158_233 () (_ BitVec 64))
(declare-fun temp1158_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1158_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1158_236 () (_ BitVec 64))
(declare-fun temp1158_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1158_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1158_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1158_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1158_241 () (_ BitVec 64))
(declare-fun temp1158_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp1158_243 () (_ BitVec 64))
(assert (= temp1158_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1158_1)))
(assert (= temp1158_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1158_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_3 #x0000000000000000))
(assert (= var79869 temp1158_3))
(assert (= temp1158_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1158_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_5 #x0000000000000000))
(assert (= var79914 temp1158_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1158_6 #x0000000000000000))
(assert (= temp1158_7 temp1158_6))
(assert (= temp1158_8 (select ARGNAME_padding_NAMEEND_VAL temp1158_7)))
(assert (= temp1158_9 #x0000000000000001))
(assert (= temp1158_10 temp1158_9))
(assert (= temp1158_11 (select ARGNAME_padding_NAMEEND_VAL temp1158_10)))
(assert (= temp1158_12 #x0000000000000002))
(assert (= temp1158_13 temp1158_12))
(assert (= temp1158_14 (select ARGNAME_padding_NAMEEND_VAL temp1158_13)))
(assert (= temp1158_15 #x0000000000000003))
(assert (= temp1158_16 temp1158_15))
(assert (= temp1158_17 (select ARGNAME_padding_NAMEEND_VAL temp1158_16)))
(assert (= temp1158_18 #x0000000000000004))
(assert (= temp1158_19 temp1158_18))
(assert (= temp1158_20 (select ARGNAME_padding_NAMEEND_VAL temp1158_19)))
(assert (= temp1158_21 #x0000000000000005))
(assert (= temp1158_22 temp1158_21))
(assert (= temp1158_23 (select ARGNAME_padding_NAMEEND_VAL temp1158_22)))
(assert (= temp1158_24 #x0000000000000000))
(assert (= temp1158_25 #x0000000000000000))
(assert (= temp1158_26 temp1158_25))
(assert (= temp1158_27 (select ARGNAME_padding_NAMEEND_VAL temp1158_26)))
(assert (= temp1158_28 #x0000000000000000))
(assert (= temp1158_29 #x0000000000000001))
(assert (= temp1158_30 temp1158_29))
(assert (= temp1158_31 (select ARGNAME_padding_NAMEEND_VAL temp1158_30)))
(assert (= temp1158_32 #x0000000000000000))
(assert (= temp1158_33 #x0000000000000002))
(assert (= temp1158_34 temp1158_33))
(assert (= temp1158_35 (select ARGNAME_padding_NAMEEND_VAL temp1158_34)))
(assert (= temp1158_36 #x0000000000000000))
(assert (= temp1158_37 #x0000000000000003))
(assert (= temp1158_38 temp1158_37))
(assert (= temp1158_39 (select ARGNAME_padding_NAMEEND_VAL temp1158_38)))
(assert (= temp1158_40 #x0000000000000000))
(assert (= temp1158_41 #x0000000000000004))
(assert (= temp1158_42 temp1158_41))
(assert (= temp1158_43 (select ARGNAME_padding_NAMEEND_VAL temp1158_42)))
(assert (= temp1158_44 #x0000000000000000))
(assert (= temp1158_45 #x0000000000000005))
(assert (= temp1158_46 temp1158_45))
(assert (= temp1158_47 (select ARGNAME_padding_NAMEEND_VAL temp1158_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1158_27 temp1158_24)
             (bvslt temp1158_31 temp1158_28)
             (bvslt temp1158_35 temp1158_32)
             (bvslt temp1158_39 temp1158_36)
             (bvslt temp1158_43 temp1158_40)
             (bvslt temp1158_47 temp1158_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_48 #x0000000000000000))
(assert (= var1322786 temp1158_48))
(assert (= temp1158_49 #x0000000000000000))
(assert (= temp1158_50 temp1158_49))
(assert (= temp1158_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_50)))
(assert (= temp1158_52 #x0000000000000001))
(assert (= temp1158_53 temp1158_52))
(assert (= temp1158_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_53)))
(assert (= temp1158_55 #x0000000000000002))
(assert (= temp1158_56 temp1158_55))
(assert (= temp1158_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_56)))
(assert (= temp1158_58 #x0000000000000003))
(assert (= temp1158_59 temp1158_58))
(assert (= temp1158_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_59)))
(assert (= temp1158_61 #x0000000000000004))
(assert (= temp1158_62 temp1158_61))
(assert (= temp1158_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_62)))
(assert (= temp1158_64 #x0000000000000005))
(assert (= temp1158_65 temp1158_64))
(assert (= temp1158_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_65)))
(assert (= temp1158_67 #x0000000000000000))
(assert (= temp1158_68 #x0000000000000000))
(assert (= temp1158_69 temp1158_68))
(assert (= temp1158_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_69)))
(assert (= temp1158_71 #x0000000000000000))
(assert (= temp1158_72 #x0000000000000001))
(assert (= temp1158_73 temp1158_72))
(assert (= temp1158_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_73)))
(assert (= temp1158_75 #x0000000000000000))
(assert (= temp1158_76 #x0000000000000002))
(assert (= temp1158_77 temp1158_76))
(assert (= temp1158_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_77)))
(assert (= temp1158_79 #x0000000000000000))
(assert (= temp1158_80 #x0000000000000003))
(assert (= temp1158_81 temp1158_80))
(assert (= temp1158_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_81)))
(assert (= temp1158_83 #x0000000000000000))
(assert (= temp1158_84 #x0000000000000004))
(assert (= temp1158_85 temp1158_84))
(assert (= temp1158_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_85)))
(assert (= temp1158_87 #x0000000000000000))
(assert (= temp1158_88 #x0000000000000005))
(assert (= temp1158_89 temp1158_88))
(assert (= temp1158_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1158_70 temp1158_67)
             (bvslt temp1158_74 temp1158_71)
             (bvslt temp1158_78 temp1158_75)
             (bvslt temp1158_82 temp1158_79)
             (bvslt temp1158_86 temp1158_83)
             (bvslt temp1158_90 temp1158_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_91 #x0000000000000000))
(assert (= var1322797 temp1158_91))
(assert (= temp1158_92 #x0000000000000000))
(assert (= temp1158_93 temp1158_92))
(assert (= temp1158_94 (select ARGNAME_stride_NAMEEND_VAL temp1158_93)))
(assert (= temp1158_95 #x0000000000000001))
(assert (= temp1158_96 temp1158_95))
(assert (= temp1158_97 (select ARGNAME_stride_NAMEEND_VAL temp1158_96)))
(assert (= temp1158_98 #x0000000000000002))
(assert (= temp1158_99 temp1158_98))
(assert (= temp1158_100 (select ARGNAME_stride_NAMEEND_VAL temp1158_99)))
(assert (= temp1158_101 #x0000000000000003))
(assert (= temp1158_102 temp1158_101))
(assert (= temp1158_103 (select ARGNAME_stride_NAMEEND_VAL temp1158_102)))
(assert (= temp1158_104 #x0000000000000004))
(assert (= temp1158_105 temp1158_104))
(assert (= temp1158_106 (select ARGNAME_stride_NAMEEND_VAL temp1158_105)))
(assert (= temp1158_107 #x0000000000000005))
(assert (= temp1158_108 temp1158_107))
(assert (= temp1158_109 (select ARGNAME_stride_NAMEEND_VAL temp1158_108)))
(assert (= temp1158_110 #x0000000000000000))
(assert (= temp1158_111 #x0000000000000000))
(assert (= temp1158_112 temp1158_111))
(assert (= temp1158_113 (select ARGNAME_stride_NAMEEND_VAL temp1158_112)))
(assert (= temp1158_114 #x0000000000000000))
(assert (= temp1158_115 #x0000000000000001))
(assert (= temp1158_116 temp1158_115))
(assert (= temp1158_117 (select ARGNAME_stride_NAMEEND_VAL temp1158_116)))
(assert (= temp1158_118 #x0000000000000000))
(assert (= temp1158_119 #x0000000000000002))
(assert (= temp1158_120 temp1158_119))
(assert (= temp1158_121 (select ARGNAME_stride_NAMEEND_VAL temp1158_120)))
(assert (= temp1158_122 #x0000000000000000))
(assert (= temp1158_123 #x0000000000000003))
(assert (= temp1158_124 temp1158_123))
(assert (= temp1158_125 (select ARGNAME_stride_NAMEEND_VAL temp1158_124)))
(assert (= temp1158_126 #x0000000000000000))
(assert (= temp1158_127 #x0000000000000004))
(assert (= temp1158_128 temp1158_127))
(assert (= temp1158_129 (select ARGNAME_stride_NAMEEND_VAL temp1158_128)))
(assert (= temp1158_130 #x0000000000000000))
(assert (= temp1158_131 #x0000000000000005))
(assert (= temp1158_132 temp1158_131))
(assert (= temp1158_133 (select ARGNAME_stride_NAMEEND_VAL temp1158_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1158_113 temp1158_110)
             (bvsle temp1158_117 temp1158_114)
             (bvsle temp1158_121 temp1158_118)
             (bvsle temp1158_125 temp1158_122)
             (bvsle temp1158_129 temp1158_126)
             (bvsle temp1158_133 temp1158_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_134 #x0000000000000000))
(assert (= var1322807 temp1158_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_135 #x0000000000000001))
(assert (= var1322819 temp1158_135))
(assert (= temp1158_136 #x0000000000000000))
(assert (= var1310898 temp1158_136))
(assert (= temp1158_137 #x0000000000000000))
(assert (= temp1158_138 temp1158_137))
(assert (= temp1158_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_138)))
(assert (= temp1158_140 #x0000000000000001))
(assert (= temp1158_141 temp1158_140))
(assert (= temp1158_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_141)))
(assert (= temp1158_143 #x0000000000000002))
(assert (= temp1158_144 temp1158_143))
(assert (= temp1158_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_144)))
(assert (= temp1158_146 #x0000000000000003))
(assert (= temp1158_147 temp1158_146))
(assert (= temp1158_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_147)))
(assert (= temp1158_149 #x0000000000000004))
(assert (= temp1158_150 temp1158_149))
(assert (= temp1158_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_150)))
(assert (= temp1158_152 #x0000000000000005))
(assert (= temp1158_153 temp1158_152))
(assert (= temp1158_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_153)))
(assert (= temp1158_156 var1310898))
(assert (= temp1158_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_156)))
(assert (= temp1158_155 temp1158_157))
(assert (= var1322852
   (ite (bvslt temp1158_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_158 #x0000000000000000))
(assert (= var1322852 temp1158_158))
(assert (= temp1158_159 #x0000000000000000))
(assert (= var1310898 temp1158_159))
(assert (= temp1158_161 var1310898))
(assert (= temp1158_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_161)))
(assert (= temp1158_160 temp1158_162))
(assert (= var1322874 (bvsmod temp1158_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1158_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1158_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1158_164 #x0000000000000001))
(assert (= var1322875 temp1158_164))
(assert (= temp1158_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1158_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_166 #x0000000000000001))
(assert (= var1322895 temp1158_166))
(assert (= temp1158_167 #x0000000000000001))
(assert (= var1311786 temp1158_167))
(assert (= temp1158_168 #x0000000000000000))
(assert (= temp1158_169 temp1158_168))
(assert (= temp1158_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_169)))
(assert (= temp1158_171 #x0000000000000001))
(assert (= temp1158_172 temp1158_171))
(assert (= temp1158_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_172)))
(assert (= temp1158_174 #x0000000000000002))
(assert (= temp1158_175 temp1158_174))
(assert (= temp1158_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_175)))
(assert (= temp1158_177 #x0000000000000003))
(assert (= temp1158_178 temp1158_177))
(assert (= temp1158_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_178)))
(assert (= temp1158_180 #x0000000000000004))
(assert (= temp1158_181 temp1158_180))
(assert (= temp1158_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_181)))
(assert (= temp1158_183 #x0000000000000005))
(assert (= temp1158_184 temp1158_183))
(assert (= temp1158_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_184)))
(assert (= temp1158_186 #x0000000000000000))
(assert (= temp1158_187
   (ite (bvslt var1311786 temp1158_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1158_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_187)))
(assert (= var1322903 temp1158_188))
(assert (bvslt (ite (bvslt var1311786 temp1158_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1158_189 #x0000000000000001))
(assert (= var1311786 temp1158_189))
(assert (= temp1158_191 var1311786))
(assert (= temp1158_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_191)))
(assert (= temp1158_190 temp1158_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1158_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1158_193 #x0000000000000001))
(assert (= var1322908 temp1158_193))
(assert (= temp1158_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1158_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_195 #x0000000000000001))
(assert (= var1322975 temp1158_195))
(assert (= temp1158_196 #x0000000000000000))
(assert (= var1310898 temp1158_196))
(assert (= temp1158_197 #x0000000000000000))
(assert (= temp1158_198 temp1158_197))
(assert (= temp1158_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1158_198)))
(assert (= temp1158_200 #x0000000000000001))
(assert (= temp1158_201 temp1158_200))
(assert (= temp1158_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1158_201)))
(assert (= temp1158_203 #x0000000000000002))
(assert (= temp1158_204 temp1158_203))
(assert (= temp1158_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1158_204)))
(assert (= temp1158_206 #x0000000000000003))
(assert (= temp1158_207 temp1158_206))
(assert (= temp1158_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1158_207)))
(assert (= temp1158_209 #x0000000000000004))
(assert (= temp1158_210 temp1158_209))
(assert (= temp1158_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1158_210)))
(assert (= temp1158_212 #x0000000000000005))
(assert (= temp1158_213 temp1158_212))
(assert (= temp1158_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1158_213)))
(assert (= temp1158_215 #x0000000000000000))
(assert (= temp1158_216
   (ite (bvslt var1310898 temp1158_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1158_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1158_216)))
(assert (= var1322977 temp1158_217))
(assert (bvslt (ite (bvslt var1310898 temp1158_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1158_218 #x0000000000000000))
(assert (= var1310898 temp1158_218))
(assert (= temp1158_220 var1310898))
(assert (= temp1158_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_220)))
(assert (= temp1158_219 temp1158_221))
(assert (= var1322980
   (ite (= var1322977 temp1158_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1158_222 #x0000000000000001))
(assert (= var1322980 temp1158_222))
(assert (= temp1158_223 #x0000000000000002))
(assert (= var1848169 temp1158_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1158_225 #x0000000000000001))
(assert (= var1323065 temp1158_225))
(assert (= temp1158_226 #x0000000000000001))
(assert (= var3486735 temp1158_226))
(assert (= temp1158_227 #x0000000000000001))
(assert (= var3814415 temp1158_227))
(assert (= temp1158_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1158_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_229 #x0000000000000001))
(assert (= var79986 temp1158_229))
(assert (= temp1158_230 #x0000000000000001))
(assert (= var80116 temp1158_230))
(assert (= var4796905 var80116))
(assert (= temp1158_231 #x0000000000000000))
(assert (= var4784306 temp1158_231))
(assert (= temp1158_232 #x0000000000000000))
(assert (= temp1158_233
   (ite (bvslt var4784306 temp1158_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1158_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_233)))
(assert (= var4796924 temp1158_234))
(assert (bvslt (ite (bvslt var4784306 temp1158_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1158_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1158_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1158_236 #x0000000000000001))
(assert (= var4796925 temp1158_236))
(assert (= temp1158_237 #x0000000000000000))
(assert (= var4996927 temp1158_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1158_238 #x0000000000000002))
(assert (= var5125763 temp1158_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_239 #x0000000000000000))
(assert (= var5191324 temp1158_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1158_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1158_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_241 #x0000000000000000))
(assert (= var81342 temp1158_241))
(assert (= temp1158_242 #x0000000000000002))
(assert (= var5977731 temp1158_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp1158_243 #x0000000000000001))
(assert (= var79986 temp1158_243))
(model-add temp1158_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1158_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1158_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






