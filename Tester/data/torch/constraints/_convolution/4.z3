(declare-fun temp5_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp5_2 () (_ BitVec 64))
(declare-fun temp5_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp5_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp5_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp5_6 () (_ BitVec 64))
(declare-fun temp5_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5_8 () (_ BitVec 64))
(declare-fun temp5_9 () (_ BitVec 64))
(declare-fun temp5_10 () (_ BitVec 64))
(declare-fun temp5_11 () (_ BitVec 64))
(declare-fun temp5_12 () (_ BitVec 64))
(declare-fun temp5_13 () (_ BitVec 64))
(declare-fun temp5_14 () (_ BitVec 64))
(declare-fun temp5_15 () (_ BitVec 64))
(declare-fun temp5_16 () (_ BitVec 64))
(declare-fun temp5_17 () (_ BitVec 64))
(declare-fun temp5_18 () (_ BitVec 64))
(declare-fun temp5_19 () (_ BitVec 64))
(declare-fun temp5_20 () (_ BitVec 64))
(declare-fun temp5_21 () (_ BitVec 64))
(declare-fun temp5_22 () (_ BitVec 64))
(declare-fun temp5_23 () (_ BitVec 64))
(declare-fun temp5_24 () (_ BitVec 64))
(declare-fun temp5_25 () (_ BitVec 64))
(declare-fun temp5_26 () (_ BitVec 64))
(declare-fun temp5_27 () (_ BitVec 64))
(declare-fun temp5_28 () (_ BitVec 64))
(declare-fun temp5_29 () (_ BitVec 64))
(declare-fun temp5_30 () (_ BitVec 64))
(declare-fun temp5_31 () (_ BitVec 64))
(declare-fun temp5_32 () (_ BitVec 64))
(declare-fun temp5_33 () (_ BitVec 64))
(declare-fun temp5_34 () (_ BitVec 64))
(declare-fun temp5_35 () (_ BitVec 64))
(declare-fun temp5_36 () (_ BitVec 64))
(declare-fun temp5_37 () (_ BitVec 64))
(declare-fun temp5_38 () (_ BitVec 64))
(declare-fun temp5_39 () (_ BitVec 64))
(declare-fun temp5_40 () (_ BitVec 64))
(declare-fun temp5_41 () (_ BitVec 64))
(declare-fun temp5_42 () (_ BitVec 64))
(declare-fun temp5_43 () (_ BitVec 64))
(declare-fun temp5_44 () (_ BitVec 64))
(declare-fun temp5_45 () (_ BitVec 64))
(declare-fun temp5_46 () (_ BitVec 64))
(declare-fun temp5_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp5_48 () (_ BitVec 64))
(declare-fun temp5_49 () (_ BitVec 64))
(declare-fun temp5_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5_51 () (_ BitVec 64))
(declare-fun temp5_52 () (_ BitVec 64))
(declare-fun temp5_53 () (_ BitVec 64))
(declare-fun temp5_54 () (_ BitVec 64))
(declare-fun temp5_55 () (_ BitVec 64))
(declare-fun temp5_56 () (_ BitVec 64))
(declare-fun temp5_57 () (_ BitVec 64))
(declare-fun temp5_58 () (_ BitVec 64))
(declare-fun temp5_59 () (_ BitVec 64))
(declare-fun temp5_60 () (_ BitVec 64))
(declare-fun temp5_61 () (_ BitVec 64))
(declare-fun temp5_62 () (_ BitVec 64))
(declare-fun temp5_63 () (_ BitVec 64))
(declare-fun temp5_64 () (_ BitVec 64))
(declare-fun temp5_65 () (_ BitVec 64))
(declare-fun temp5_66 () (_ BitVec 64))
(declare-fun temp5_67 () (_ BitVec 64))
(declare-fun temp5_68 () (_ BitVec 64))
(declare-fun temp5_69 () (_ BitVec 64))
(declare-fun temp5_70 () (_ BitVec 64))
(declare-fun temp5_71 () (_ BitVec 64))
(declare-fun temp5_72 () (_ BitVec 64))
(declare-fun temp5_73 () (_ BitVec 64))
(declare-fun temp5_74 () (_ BitVec 64))
(declare-fun temp5_75 () (_ BitVec 64))
(declare-fun temp5_76 () (_ BitVec 64))
(declare-fun temp5_77 () (_ BitVec 64))
(declare-fun temp5_78 () (_ BitVec 64))
(declare-fun temp5_79 () (_ BitVec 64))
(declare-fun temp5_80 () (_ BitVec 64))
(declare-fun temp5_81 () (_ BitVec 64))
(declare-fun temp5_82 () (_ BitVec 64))
(declare-fun temp5_83 () (_ BitVec 64))
(declare-fun temp5_84 () (_ BitVec 64))
(declare-fun temp5_85 () (_ BitVec 64))
(declare-fun temp5_86 () (_ BitVec 64))
(declare-fun temp5_87 () (_ BitVec 64))
(declare-fun temp5_88 () (_ BitVec 64))
(declare-fun temp5_89 () (_ BitVec 64))
(declare-fun temp5_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp5_91 () (_ BitVec 64))
(declare-fun temp5_92 () (_ BitVec 64))
(declare-fun temp5_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5_94 () (_ BitVec 64))
(declare-fun temp5_95 () (_ BitVec 64))
(declare-fun temp5_96 () (_ BitVec 64))
(declare-fun temp5_97 () (_ BitVec 64))
(declare-fun temp5_98 () (_ BitVec 64))
(declare-fun temp5_99 () (_ BitVec 64))
(declare-fun temp5_100 () (_ BitVec 64))
(declare-fun temp5_101 () (_ BitVec 64))
(declare-fun temp5_102 () (_ BitVec 64))
(declare-fun temp5_103 () (_ BitVec 64))
(declare-fun temp5_104 () (_ BitVec 64))
(declare-fun temp5_105 () (_ BitVec 64))
(declare-fun temp5_106 () (_ BitVec 64))
(declare-fun temp5_107 () (_ BitVec 64))
(declare-fun temp5_108 () (_ BitVec 64))
(declare-fun temp5_109 () (_ BitVec 64))
(declare-fun temp5_110 () (_ BitVec 64))
(declare-fun temp5_111 () (_ BitVec 64))
(declare-fun temp5_112 () (_ BitVec 64))
(declare-fun temp5_113 () (_ BitVec 64))
(declare-fun temp5_114 () (_ BitVec 64))
(declare-fun temp5_115 () (_ BitVec 64))
(declare-fun temp5_116 () (_ BitVec 64))
(declare-fun temp5_117 () (_ BitVec 64))
(declare-fun temp5_118 () (_ BitVec 64))
(declare-fun temp5_119 () (_ BitVec 64))
(declare-fun temp5_120 () (_ BitVec 64))
(declare-fun temp5_121 () (_ BitVec 64))
(declare-fun temp5_122 () (_ BitVec 64))
(declare-fun temp5_123 () (_ BitVec 64))
(declare-fun temp5_124 () (_ BitVec 64))
(declare-fun temp5_125 () (_ BitVec 64))
(declare-fun temp5_126 () (_ BitVec 64))
(declare-fun temp5_127 () (_ BitVec 64))
(declare-fun temp5_128 () (_ BitVec 64))
(declare-fun temp5_129 () (_ BitVec 64))
(declare-fun temp5_130 () (_ BitVec 64))
(declare-fun temp5_131 () (_ BitVec 64))
(declare-fun temp5_132 () (_ BitVec 64))
(declare-fun temp5_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp5_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp5_135 () (_ BitVec 64))
(declare-fun temp5_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp5_137 () (_ BitVec 64))
(declare-fun temp5_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5_139 () (_ BitVec 64))
(declare-fun temp5_140 () (_ BitVec 64))
(declare-fun temp5_141 () (_ BitVec 64))
(declare-fun temp5_142 () (_ BitVec 64))
(declare-fun temp5_143 () (_ BitVec 64))
(declare-fun temp5_144 () (_ BitVec 64))
(declare-fun temp5_145 () (_ BitVec 64))
(declare-fun temp5_146 () (_ BitVec 64))
(declare-fun temp5_147 () (_ BitVec 64))
(declare-fun temp5_148 () (_ BitVec 64))
(declare-fun temp5_149 () (_ BitVec 64))
(declare-fun temp5_150 () (_ BitVec 64))
(declare-fun temp5_151 () (_ BitVec 64))
(declare-fun temp5_152 () (_ BitVec 64))
(declare-fun temp5_153 () (_ BitVec 64))
(declare-fun temp5_154 () (_ BitVec 64))
(declare-fun temp5_156 () (_ BitVec 64))
(declare-fun temp5_157 () (_ BitVec 64))
(declare-fun temp5_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp5_158 () (_ BitVec 64))
(declare-fun temp5_159 () (_ BitVec 64))
(declare-fun temp5_161 () (_ BitVec 64))
(declare-fun temp5_162 () (_ BitVec 64))
(declare-fun temp5_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp5_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp5_164 () (_ BitVec 64))
(declare-fun temp5_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp5_166 () (_ BitVec 64))
(declare-fun temp5_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp5_168 () (_ BitVec 64))
(declare-fun temp5_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5_170 () (_ BitVec 64))
(declare-fun temp5_171 () (_ BitVec 64))
(declare-fun temp5_172 () (_ BitVec 64))
(declare-fun temp5_173 () (_ BitVec 64))
(declare-fun temp5_174 () (_ BitVec 64))
(declare-fun temp5_175 () (_ BitVec 64))
(declare-fun temp5_176 () (_ BitVec 64))
(declare-fun temp5_177 () (_ BitVec 64))
(declare-fun temp5_178 () (_ BitVec 64))
(declare-fun temp5_179 () (_ BitVec 64))
(declare-fun temp5_180 () (_ BitVec 64))
(declare-fun temp5_181 () (_ BitVec 64))
(declare-fun temp5_182 () (_ BitVec 64))
(declare-fun temp5_183 () (_ BitVec 64))
(declare-fun temp5_184 () (_ BitVec 64))
(declare-fun temp5_185 () (_ BitVec 64))
(declare-fun temp5_186 () (_ BitVec 64))
(declare-fun temp5_187 () (_ BitVec 64))
(declare-fun temp5_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp5_189 () (_ BitVec 64))
(declare-fun temp5_191 () (_ BitVec 64))
(declare-fun temp5_192 () (_ BitVec 64))
(declare-fun temp5_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp5_193 () (_ BitVec 64))
(declare-fun temp5_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp5_195 () (_ BitVec 64))
(declare-fun temp5_196 () (_ BitVec 64))
(declare-fun temp5_197 () (_ BitVec 64))
(declare-fun temp5_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5_199 () (_ BitVec 64))
(declare-fun temp5_200 () (_ BitVec 64))
(declare-fun temp5_201 () (_ BitVec 64))
(declare-fun temp5_202 () (_ BitVec 64))
(declare-fun temp5_203 () (_ BitVec 64))
(declare-fun temp5_204 () (_ BitVec 64))
(declare-fun temp5_205 () (_ BitVec 64))
(declare-fun temp5_206 () (_ BitVec 64))
(declare-fun temp5_207 () (_ BitVec 64))
(declare-fun temp5_208 () (_ BitVec 64))
(declare-fun temp5_209 () (_ BitVec 64))
(declare-fun temp5_210 () (_ BitVec 64))
(declare-fun temp5_211 () (_ BitVec 64))
(declare-fun temp5_212 () (_ BitVec 64))
(declare-fun temp5_213 () (_ BitVec 64))
(declare-fun temp5_214 () (_ BitVec 64))
(declare-fun temp5_215 () (_ BitVec 64))
(declare-fun temp5_216 () (_ BitVec 64))
(declare-fun temp5_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp5_218 () (_ BitVec 64))
(declare-fun temp5_220 () (_ BitVec 64))
(declare-fun temp5_221 () (_ BitVec 64))
(declare-fun temp5_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp5_222 () (_ BitVec 64))
(declare-fun temp5_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp5_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp5_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp5_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp5_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp5_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp5_229 () (_ BitVec 64))
(declare-fun temp5_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp5_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp5_232 () (_ BitVec 64))
(declare-fun temp5_233 () (_ BitVec 64))
(declare-fun temp5_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp5_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp5_236 () (_ BitVec 64))
(declare-fun temp5_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp5_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp5_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp5_240 () (_ BitVec 64))
(assert (= temp5_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp5_1)))
(assert (= temp5_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp5_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_3 #x0000000000000000))
(assert (= var79869 temp5_3))
(assert (= temp5_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp5_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_5 #x0000000000000000))
(assert (= var79914 temp5_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp5_6 #x0000000000000000))
(assert (= temp5_7 temp5_6))
(assert (= temp5_8 (select ARGNAME_padding_NAMEEND_VAL temp5_7)))
(assert (= temp5_9 #x0000000000000001))
(assert (= temp5_10 temp5_9))
(assert (= temp5_11 (select ARGNAME_padding_NAMEEND_VAL temp5_10)))
(assert (= temp5_12 #x0000000000000002))
(assert (= temp5_13 temp5_12))
(assert (= temp5_14 (select ARGNAME_padding_NAMEEND_VAL temp5_13)))
(assert (= temp5_15 #x0000000000000003))
(assert (= temp5_16 temp5_15))
(assert (= temp5_17 (select ARGNAME_padding_NAMEEND_VAL temp5_16)))
(assert (= temp5_18 #x0000000000000004))
(assert (= temp5_19 temp5_18))
(assert (= temp5_20 (select ARGNAME_padding_NAMEEND_VAL temp5_19)))
(assert (= temp5_21 #x0000000000000005))
(assert (= temp5_22 temp5_21))
(assert (= temp5_23 (select ARGNAME_padding_NAMEEND_VAL temp5_22)))
(assert (= temp5_24 #x0000000000000000))
(assert (= temp5_25 #x0000000000000000))
(assert (= temp5_26 temp5_25))
(assert (= temp5_27 (select ARGNAME_padding_NAMEEND_VAL temp5_26)))
(assert (= temp5_28 #x0000000000000000))
(assert (= temp5_29 #x0000000000000001))
(assert (= temp5_30 temp5_29))
(assert (= temp5_31 (select ARGNAME_padding_NAMEEND_VAL temp5_30)))
(assert (= temp5_32 #x0000000000000000))
(assert (= temp5_33 #x0000000000000002))
(assert (= temp5_34 temp5_33))
(assert (= temp5_35 (select ARGNAME_padding_NAMEEND_VAL temp5_34)))
(assert (= temp5_36 #x0000000000000000))
(assert (= temp5_37 #x0000000000000003))
(assert (= temp5_38 temp5_37))
(assert (= temp5_39 (select ARGNAME_padding_NAMEEND_VAL temp5_38)))
(assert (= temp5_40 #x0000000000000000))
(assert (= temp5_41 #x0000000000000004))
(assert (= temp5_42 temp5_41))
(assert (= temp5_43 (select ARGNAME_padding_NAMEEND_VAL temp5_42)))
(assert (= temp5_44 #x0000000000000000))
(assert (= temp5_45 #x0000000000000005))
(assert (= temp5_46 temp5_45))
(assert (= temp5_47 (select ARGNAME_padding_NAMEEND_VAL temp5_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp5_27 temp5_24)
             (bvslt temp5_31 temp5_28)
             (bvslt temp5_35 temp5_32)
             (bvslt temp5_39 temp5_36)
             (bvslt temp5_43 temp5_40)
             (bvslt temp5_47 temp5_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_48 #x0000000000000000))
(assert (= var1322786 temp5_48))
(assert (= temp5_49 #x0000000000000000))
(assert (= temp5_50 temp5_49))
(assert (= temp5_51 (select ARGNAME_output_padding_NAMEEND_VAL temp5_50)))
(assert (= temp5_52 #x0000000000000001))
(assert (= temp5_53 temp5_52))
(assert (= temp5_54 (select ARGNAME_output_padding_NAMEEND_VAL temp5_53)))
(assert (= temp5_55 #x0000000000000002))
(assert (= temp5_56 temp5_55))
(assert (= temp5_57 (select ARGNAME_output_padding_NAMEEND_VAL temp5_56)))
(assert (= temp5_58 #x0000000000000003))
(assert (= temp5_59 temp5_58))
(assert (= temp5_60 (select ARGNAME_output_padding_NAMEEND_VAL temp5_59)))
(assert (= temp5_61 #x0000000000000004))
(assert (= temp5_62 temp5_61))
(assert (= temp5_63 (select ARGNAME_output_padding_NAMEEND_VAL temp5_62)))
(assert (= temp5_64 #x0000000000000005))
(assert (= temp5_65 temp5_64))
(assert (= temp5_66 (select ARGNAME_output_padding_NAMEEND_VAL temp5_65)))
(assert (= temp5_67 #x0000000000000000))
(assert (= temp5_68 #x0000000000000000))
(assert (= temp5_69 temp5_68))
(assert (= temp5_70 (select ARGNAME_output_padding_NAMEEND_VAL temp5_69)))
(assert (= temp5_71 #x0000000000000000))
(assert (= temp5_72 #x0000000000000001))
(assert (= temp5_73 temp5_72))
(assert (= temp5_74 (select ARGNAME_output_padding_NAMEEND_VAL temp5_73)))
(assert (= temp5_75 #x0000000000000000))
(assert (= temp5_76 #x0000000000000002))
(assert (= temp5_77 temp5_76))
(assert (= temp5_78 (select ARGNAME_output_padding_NAMEEND_VAL temp5_77)))
(assert (= temp5_79 #x0000000000000000))
(assert (= temp5_80 #x0000000000000003))
(assert (= temp5_81 temp5_80))
(assert (= temp5_82 (select ARGNAME_output_padding_NAMEEND_VAL temp5_81)))
(assert (= temp5_83 #x0000000000000000))
(assert (= temp5_84 #x0000000000000004))
(assert (= temp5_85 temp5_84))
(assert (= temp5_86 (select ARGNAME_output_padding_NAMEEND_VAL temp5_85)))
(assert (= temp5_87 #x0000000000000000))
(assert (= temp5_88 #x0000000000000005))
(assert (= temp5_89 temp5_88))
(assert (= temp5_90 (select ARGNAME_output_padding_NAMEEND_VAL temp5_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp5_70 temp5_67)
             (bvslt temp5_74 temp5_71)
             (bvslt temp5_78 temp5_75)
             (bvslt temp5_82 temp5_79)
             (bvslt temp5_86 temp5_83)
             (bvslt temp5_90 temp5_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_91 #x0000000000000000))
(assert (= var1322797 temp5_91))
(assert (= temp5_92 #x0000000000000000))
(assert (= temp5_93 temp5_92))
(assert (= temp5_94 (select ARGNAME_stride_NAMEEND_VAL temp5_93)))
(assert (= temp5_95 #x0000000000000001))
(assert (= temp5_96 temp5_95))
(assert (= temp5_97 (select ARGNAME_stride_NAMEEND_VAL temp5_96)))
(assert (= temp5_98 #x0000000000000002))
(assert (= temp5_99 temp5_98))
(assert (= temp5_100 (select ARGNAME_stride_NAMEEND_VAL temp5_99)))
(assert (= temp5_101 #x0000000000000003))
(assert (= temp5_102 temp5_101))
(assert (= temp5_103 (select ARGNAME_stride_NAMEEND_VAL temp5_102)))
(assert (= temp5_104 #x0000000000000004))
(assert (= temp5_105 temp5_104))
(assert (= temp5_106 (select ARGNAME_stride_NAMEEND_VAL temp5_105)))
(assert (= temp5_107 #x0000000000000005))
(assert (= temp5_108 temp5_107))
(assert (= temp5_109 (select ARGNAME_stride_NAMEEND_VAL temp5_108)))
(assert (= temp5_110 #x0000000000000000))
(assert (= temp5_111 #x0000000000000000))
(assert (= temp5_112 temp5_111))
(assert (= temp5_113 (select ARGNAME_stride_NAMEEND_VAL temp5_112)))
(assert (= temp5_114 #x0000000000000000))
(assert (= temp5_115 #x0000000000000001))
(assert (= temp5_116 temp5_115))
(assert (= temp5_117 (select ARGNAME_stride_NAMEEND_VAL temp5_116)))
(assert (= temp5_118 #x0000000000000000))
(assert (= temp5_119 #x0000000000000002))
(assert (= temp5_120 temp5_119))
(assert (= temp5_121 (select ARGNAME_stride_NAMEEND_VAL temp5_120)))
(assert (= temp5_122 #x0000000000000000))
(assert (= temp5_123 #x0000000000000003))
(assert (= temp5_124 temp5_123))
(assert (= temp5_125 (select ARGNAME_stride_NAMEEND_VAL temp5_124)))
(assert (= temp5_126 #x0000000000000000))
(assert (= temp5_127 #x0000000000000004))
(assert (= temp5_128 temp5_127))
(assert (= temp5_129 (select ARGNAME_stride_NAMEEND_VAL temp5_128)))
(assert (= temp5_130 #x0000000000000000))
(assert (= temp5_131 #x0000000000000005))
(assert (= temp5_132 temp5_131))
(assert (= temp5_133 (select ARGNAME_stride_NAMEEND_VAL temp5_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp5_113 temp5_110)
             (bvsle temp5_117 temp5_114)
             (bvsle temp5_121 temp5_118)
             (bvsle temp5_125 temp5_122)
             (bvsle temp5_129 temp5_126)
             (bvsle temp5_133 temp5_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_134 #x0000000000000000))
(assert (= var1322807 temp5_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_135 #x0000000000000001))
(assert (= var1322819 temp5_135))
(assert (= temp5_136 #x0000000000000000))
(assert (= var1310898 temp5_136))
(assert (= temp5_137 #x0000000000000000))
(assert (= temp5_138 temp5_137))
(assert (= temp5_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_138)))
(assert (= temp5_140 #x0000000000000001))
(assert (= temp5_141 temp5_140))
(assert (= temp5_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_141)))
(assert (= temp5_143 #x0000000000000002))
(assert (= temp5_144 temp5_143))
(assert (= temp5_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_144)))
(assert (= temp5_146 #x0000000000000003))
(assert (= temp5_147 temp5_146))
(assert (= temp5_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_147)))
(assert (= temp5_149 #x0000000000000004))
(assert (= temp5_150 temp5_149))
(assert (= temp5_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_150)))
(assert (= temp5_152 #x0000000000000005))
(assert (= temp5_153 temp5_152))
(assert (= temp5_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_153)))
(assert (= temp5_156 var1310898))
(assert (= temp5_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_156)))
(assert (= temp5_155 temp5_157))
(assert (= var1322852
   (ite (bvslt temp5_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_158 #x0000000000000000))
(assert (= var1322852 temp5_158))
(assert (= temp5_159 #x0000000000000000))
(assert (= var1310898 temp5_159))
(assert (= temp5_161 var1310898))
(assert (= temp5_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_161)))
(assert (= temp5_160 temp5_162))
(assert (= var1322874 (bvsmod temp5_160 ARGNAME_groups_NAMEEND)))
(assert (= temp5_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp5_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp5_164 #x0000000000000001))
(assert (= var1322875 temp5_164))
(assert (= temp5_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp5_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_166 #x0000000000000001))
(assert (= var1322895 temp5_166))
(assert (= temp5_167 #x0000000000000001))
(assert (= var1311786 temp5_167))
(assert (= temp5_168 #x0000000000000000))
(assert (= temp5_169 temp5_168))
(assert (= temp5_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp5_169)))
(assert (= temp5_171 #x0000000000000001))
(assert (= temp5_172 temp5_171))
(assert (= temp5_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp5_172)))
(assert (= temp5_174 #x0000000000000002))
(assert (= temp5_175 temp5_174))
(assert (= temp5_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp5_175)))
(assert (= temp5_177 #x0000000000000003))
(assert (= temp5_178 temp5_177))
(assert (= temp5_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp5_178)))
(assert (= temp5_180 #x0000000000000004))
(assert (= temp5_181 temp5_180))
(assert (= temp5_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp5_181)))
(assert (= temp5_183 #x0000000000000005))
(assert (= temp5_184 temp5_183))
(assert (= temp5_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp5_184)))
(assert (= temp5_186 #x0000000000000000))
(assert (= temp5_187
   (ite (bvslt var1311786 temp5_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp5_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp5_187)))
(assert (= var1322903 temp5_188))
(assert (bvslt (ite (bvslt var1311786 temp5_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp5_189 #x0000000000000001))
(assert (= var1311786 temp5_189))
(assert (= temp5_191 var1311786))
(assert (= temp5_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_191)))
(assert (= temp5_190 temp5_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp5_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp5_193 #x0000000000000001))
(assert (= var1322908 temp5_193))
(assert (= temp5_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp5_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_195 #x0000000000000001))
(assert (= var1322975 temp5_195))
(assert (= temp5_196 #x0000000000000000))
(assert (= var1310898 temp5_196))
(assert (= temp5_197 #x0000000000000000))
(assert (= temp5_198 temp5_197))
(assert (= temp5_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp5_198)))
(assert (= temp5_200 #x0000000000000001))
(assert (= temp5_201 temp5_200))
(assert (= temp5_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp5_201)))
(assert (= temp5_203 #x0000000000000002))
(assert (= temp5_204 temp5_203))
(assert (= temp5_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp5_204)))
(assert (= temp5_206 #x0000000000000003))
(assert (= temp5_207 temp5_206))
(assert (= temp5_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp5_207)))
(assert (= temp5_209 #x0000000000000004))
(assert (= temp5_210 temp5_209))
(assert (= temp5_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp5_210)))
(assert (= temp5_212 #x0000000000000005))
(assert (= temp5_213 temp5_212))
(assert (= temp5_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp5_213)))
(assert (= temp5_215 #x0000000000000000))
(assert (= temp5_216
   (ite (bvslt var1310898 temp5_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp5_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp5_216)))
(assert (= var1322977 temp5_217))
(assert (bvslt (ite (bvslt var1310898 temp5_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp5_218 #x0000000000000000))
(assert (= var1310898 temp5_218))
(assert (= temp5_220 var1310898))
(assert (= temp5_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp5_220)))
(assert (= temp5_219 temp5_221))
(assert (= var1322980
   (ite (= var1322977 temp5_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp5_222 #x0000000000000001))
(assert (= var1322980 temp5_222))
(assert (= temp5_223 #x0000000000000002))
(assert (= var1848169 temp5_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp5_225 #x0000000000000001))
(assert (= var1323065 temp5_225))
(assert (= temp5_226 #x0000000000000001))
(assert (= var3486735 temp5_226))
(assert (= temp5_227 #x0000000000000001))
(assert (= var3814415 temp5_227))
(assert (= temp5_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp5_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_229 #x0000000000000001))
(assert (= var79986 temp5_229))
(assert (= temp5_230 #x0000000000000001))
(assert (= var80116 temp5_230))
(assert (= var4796905 var80116))
(assert (= temp5_231 #x0000000000000000))
(assert (= var4784306 temp5_231))
(assert (= temp5_232 #x0000000000000000))
(assert (= temp5_233
   (ite (bvslt var4784306 temp5_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp5_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp5_233)))
(assert (= var4796924 temp5_234))
(assert (bvslt (ite (bvslt var4784306 temp5_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp5_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp5_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp5_236 #x0000000000000001))
(assert (= var4796925 temp5_236))
(assert (= temp5_237 #x0000000000000000))
(assert (= var4996927 temp5_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp5_238 #x0000000000000002))
(assert (= var5125763 temp5_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5_239 #x0000000000000000))
(assert (= var5191324 temp5_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp5_240 #x0000000000000001))
(assert (= var79986 temp5_240))
(model-add temp5_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp5_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp5_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






