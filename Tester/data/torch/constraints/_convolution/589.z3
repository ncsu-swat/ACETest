(declare-fun temp782_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp782_2 () (_ BitVec 64))
(declare-fun temp782_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp782_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp782_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp782_6 () (_ BitVec 64))
(declare-fun temp782_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp782_8 () (_ BitVec 64))
(declare-fun temp782_9 () (_ BitVec 64))
(declare-fun temp782_10 () (_ BitVec 64))
(declare-fun temp782_11 () (_ BitVec 64))
(declare-fun temp782_12 () (_ BitVec 64))
(declare-fun temp782_13 () (_ BitVec 64))
(declare-fun temp782_14 () (_ BitVec 64))
(declare-fun temp782_15 () (_ BitVec 64))
(declare-fun temp782_16 () (_ BitVec 64))
(declare-fun temp782_17 () (_ BitVec 64))
(declare-fun temp782_18 () (_ BitVec 64))
(declare-fun temp782_19 () (_ BitVec 64))
(declare-fun temp782_20 () (_ BitVec 64))
(declare-fun temp782_21 () (_ BitVec 64))
(declare-fun temp782_22 () (_ BitVec 64))
(declare-fun temp782_23 () (_ BitVec 64))
(declare-fun temp782_24 () (_ BitVec 64))
(declare-fun temp782_25 () (_ BitVec 64))
(declare-fun temp782_26 () (_ BitVec 64))
(declare-fun temp782_27 () (_ BitVec 64))
(declare-fun temp782_28 () (_ BitVec 64))
(declare-fun temp782_29 () (_ BitVec 64))
(declare-fun temp782_30 () (_ BitVec 64))
(declare-fun temp782_31 () (_ BitVec 64))
(declare-fun temp782_32 () (_ BitVec 64))
(declare-fun temp782_33 () (_ BitVec 64))
(declare-fun temp782_34 () (_ BitVec 64))
(declare-fun temp782_35 () (_ BitVec 64))
(declare-fun temp782_36 () (_ BitVec 64))
(declare-fun temp782_37 () (_ BitVec 64))
(declare-fun temp782_38 () (_ BitVec 64))
(declare-fun temp782_39 () (_ BitVec 64))
(declare-fun temp782_40 () (_ BitVec 64))
(declare-fun temp782_41 () (_ BitVec 64))
(declare-fun temp782_42 () (_ BitVec 64))
(declare-fun temp782_43 () (_ BitVec 64))
(declare-fun temp782_44 () (_ BitVec 64))
(declare-fun temp782_45 () (_ BitVec 64))
(declare-fun temp782_46 () (_ BitVec 64))
(declare-fun temp782_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp782_48 () (_ BitVec 64))
(declare-fun temp782_49 () (_ BitVec 64))
(declare-fun temp782_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp782_51 () (_ BitVec 64))
(declare-fun temp782_52 () (_ BitVec 64))
(declare-fun temp782_53 () (_ BitVec 64))
(declare-fun temp782_54 () (_ BitVec 64))
(declare-fun temp782_55 () (_ BitVec 64))
(declare-fun temp782_56 () (_ BitVec 64))
(declare-fun temp782_57 () (_ BitVec 64))
(declare-fun temp782_58 () (_ BitVec 64))
(declare-fun temp782_59 () (_ BitVec 64))
(declare-fun temp782_60 () (_ BitVec 64))
(declare-fun temp782_61 () (_ BitVec 64))
(declare-fun temp782_62 () (_ BitVec 64))
(declare-fun temp782_63 () (_ BitVec 64))
(declare-fun temp782_64 () (_ BitVec 64))
(declare-fun temp782_65 () (_ BitVec 64))
(declare-fun temp782_66 () (_ BitVec 64))
(declare-fun temp782_67 () (_ BitVec 64))
(declare-fun temp782_68 () (_ BitVec 64))
(declare-fun temp782_69 () (_ BitVec 64))
(declare-fun temp782_70 () (_ BitVec 64))
(declare-fun temp782_71 () (_ BitVec 64))
(declare-fun temp782_72 () (_ BitVec 64))
(declare-fun temp782_73 () (_ BitVec 64))
(declare-fun temp782_74 () (_ BitVec 64))
(declare-fun temp782_75 () (_ BitVec 64))
(declare-fun temp782_76 () (_ BitVec 64))
(declare-fun temp782_77 () (_ BitVec 64))
(declare-fun temp782_78 () (_ BitVec 64))
(declare-fun temp782_79 () (_ BitVec 64))
(declare-fun temp782_80 () (_ BitVec 64))
(declare-fun temp782_81 () (_ BitVec 64))
(declare-fun temp782_82 () (_ BitVec 64))
(declare-fun temp782_83 () (_ BitVec 64))
(declare-fun temp782_84 () (_ BitVec 64))
(declare-fun temp782_85 () (_ BitVec 64))
(declare-fun temp782_86 () (_ BitVec 64))
(declare-fun temp782_87 () (_ BitVec 64))
(declare-fun temp782_88 () (_ BitVec 64))
(declare-fun temp782_89 () (_ BitVec 64))
(declare-fun temp782_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp782_91 () (_ BitVec 64))
(declare-fun temp782_92 () (_ BitVec 64))
(declare-fun temp782_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp782_94 () (_ BitVec 64))
(declare-fun temp782_95 () (_ BitVec 64))
(declare-fun temp782_96 () (_ BitVec 64))
(declare-fun temp782_97 () (_ BitVec 64))
(declare-fun temp782_98 () (_ BitVec 64))
(declare-fun temp782_99 () (_ BitVec 64))
(declare-fun temp782_100 () (_ BitVec 64))
(declare-fun temp782_101 () (_ BitVec 64))
(declare-fun temp782_102 () (_ BitVec 64))
(declare-fun temp782_103 () (_ BitVec 64))
(declare-fun temp782_104 () (_ BitVec 64))
(declare-fun temp782_105 () (_ BitVec 64))
(declare-fun temp782_106 () (_ BitVec 64))
(declare-fun temp782_107 () (_ BitVec 64))
(declare-fun temp782_108 () (_ BitVec 64))
(declare-fun temp782_109 () (_ BitVec 64))
(declare-fun temp782_110 () (_ BitVec 64))
(declare-fun temp782_111 () (_ BitVec 64))
(declare-fun temp782_112 () (_ BitVec 64))
(declare-fun temp782_113 () (_ BitVec 64))
(declare-fun temp782_114 () (_ BitVec 64))
(declare-fun temp782_115 () (_ BitVec 64))
(declare-fun temp782_116 () (_ BitVec 64))
(declare-fun temp782_117 () (_ BitVec 64))
(declare-fun temp782_118 () (_ BitVec 64))
(declare-fun temp782_119 () (_ BitVec 64))
(declare-fun temp782_120 () (_ BitVec 64))
(declare-fun temp782_121 () (_ BitVec 64))
(declare-fun temp782_122 () (_ BitVec 64))
(declare-fun temp782_123 () (_ BitVec 64))
(declare-fun temp782_124 () (_ BitVec 64))
(declare-fun temp782_125 () (_ BitVec 64))
(declare-fun temp782_126 () (_ BitVec 64))
(declare-fun temp782_127 () (_ BitVec 64))
(declare-fun temp782_128 () (_ BitVec 64))
(declare-fun temp782_129 () (_ BitVec 64))
(declare-fun temp782_130 () (_ BitVec 64))
(declare-fun temp782_131 () (_ BitVec 64))
(declare-fun temp782_132 () (_ BitVec 64))
(declare-fun temp782_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp782_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp782_135 () (_ BitVec 64))
(declare-fun temp782_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp782_137 () (_ BitVec 64))
(declare-fun temp782_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp782_139 () (_ BitVec 64))
(declare-fun temp782_140 () (_ BitVec 64))
(declare-fun temp782_141 () (_ BitVec 64))
(declare-fun temp782_142 () (_ BitVec 64))
(declare-fun temp782_143 () (_ BitVec 64))
(declare-fun temp782_144 () (_ BitVec 64))
(declare-fun temp782_145 () (_ BitVec 64))
(declare-fun temp782_146 () (_ BitVec 64))
(declare-fun temp782_147 () (_ BitVec 64))
(declare-fun temp782_148 () (_ BitVec 64))
(declare-fun temp782_149 () (_ BitVec 64))
(declare-fun temp782_150 () (_ BitVec 64))
(declare-fun temp782_151 () (_ BitVec 64))
(declare-fun temp782_152 () (_ BitVec 64))
(declare-fun temp782_153 () (_ BitVec 64))
(declare-fun temp782_154 () (_ BitVec 64))
(declare-fun temp782_156 () (_ BitVec 64))
(declare-fun temp782_157 () (_ BitVec 64))
(declare-fun temp782_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp782_158 () (_ BitVec 64))
(declare-fun temp782_159 () (_ BitVec 64))
(declare-fun temp782_161 () (_ BitVec 64))
(declare-fun temp782_162 () (_ BitVec 64))
(declare-fun temp782_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp782_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp782_164 () (_ BitVec 64))
(declare-fun temp782_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp782_166 () (_ BitVec 64))
(declare-fun temp782_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp782_168 () (_ BitVec 64))
(declare-fun temp782_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp782_170 () (_ BitVec 64))
(declare-fun temp782_171 () (_ BitVec 64))
(declare-fun temp782_172 () (_ BitVec 64))
(declare-fun temp782_173 () (_ BitVec 64))
(declare-fun temp782_174 () (_ BitVec 64))
(declare-fun temp782_175 () (_ BitVec 64))
(declare-fun temp782_176 () (_ BitVec 64))
(declare-fun temp782_177 () (_ BitVec 64))
(declare-fun temp782_178 () (_ BitVec 64))
(declare-fun temp782_179 () (_ BitVec 64))
(declare-fun temp782_180 () (_ BitVec 64))
(declare-fun temp782_181 () (_ BitVec 64))
(declare-fun temp782_182 () (_ BitVec 64))
(declare-fun temp782_183 () (_ BitVec 64))
(declare-fun temp782_184 () (_ BitVec 64))
(declare-fun temp782_185 () (_ BitVec 64))
(declare-fun temp782_186 () (_ BitVec 64))
(declare-fun temp782_187 () (_ BitVec 64))
(declare-fun temp782_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp782_189 () (_ BitVec 64))
(declare-fun temp782_191 () (_ BitVec 64))
(declare-fun temp782_192 () (_ BitVec 64))
(declare-fun temp782_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp782_193 () (_ BitVec 64))
(declare-fun temp782_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp782_195 () (_ BitVec 64))
(declare-fun temp782_196 () (_ BitVec 64))
(declare-fun temp782_197 () (_ BitVec 64))
(declare-fun temp782_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp782_199 () (_ BitVec 64))
(declare-fun temp782_200 () (_ BitVec 64))
(declare-fun temp782_201 () (_ BitVec 64))
(declare-fun temp782_202 () (_ BitVec 64))
(declare-fun temp782_203 () (_ BitVec 64))
(declare-fun temp782_204 () (_ BitVec 64))
(declare-fun temp782_205 () (_ BitVec 64))
(declare-fun temp782_206 () (_ BitVec 64))
(declare-fun temp782_207 () (_ BitVec 64))
(declare-fun temp782_208 () (_ BitVec 64))
(declare-fun temp782_209 () (_ BitVec 64))
(declare-fun temp782_210 () (_ BitVec 64))
(declare-fun temp782_211 () (_ BitVec 64))
(declare-fun temp782_212 () (_ BitVec 64))
(declare-fun temp782_213 () (_ BitVec 64))
(declare-fun temp782_214 () (_ BitVec 64))
(declare-fun temp782_215 () (_ BitVec 64))
(declare-fun temp782_216 () (_ BitVec 64))
(declare-fun temp782_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp782_218 () (_ BitVec 64))
(declare-fun temp782_220 () (_ BitVec 64))
(declare-fun temp782_221 () (_ BitVec 64))
(declare-fun temp782_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp782_222 () (_ BitVec 64))
(declare-fun temp782_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp782_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp782_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp782_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp782_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp782_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp782_229 () (_ BitVec 64))
(declare-fun temp782_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp782_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp782_232 () (_ BitVec 64))
(declare-fun temp782_233 () (_ BitVec 64))
(declare-fun temp782_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp782_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp782_236 () (_ BitVec 64))
(declare-fun temp782_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp782_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp782_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp782_241 () (_ BitVec 64))
(declare-fun temp782_240 () (_ BitVec 64))
(declare-fun temp782_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp782_243 () (_ BitVec 64))
(declare-fun temp782_244 () (_ BitVec 64))
(declare-fun temp782_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp782_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp782_247 () (_ BitVec 64))
(declare-fun temp782_248 () (_ BitVec 64))
(assert (= temp782_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp782_1)))
(assert (= temp782_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp782_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_3 #x0000000000000000))
(assert (= var79869 temp782_3))
(assert (= temp782_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp782_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_5 #x0000000000000000))
(assert (= var79914 temp782_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp782_6 #x0000000000000000))
(assert (= temp782_7 temp782_6))
(assert (= temp782_8 (select ARGNAME_padding_NAMEEND_VAL temp782_7)))
(assert (= temp782_9 #x0000000000000001))
(assert (= temp782_10 temp782_9))
(assert (= temp782_11 (select ARGNAME_padding_NAMEEND_VAL temp782_10)))
(assert (= temp782_12 #x0000000000000002))
(assert (= temp782_13 temp782_12))
(assert (= temp782_14 (select ARGNAME_padding_NAMEEND_VAL temp782_13)))
(assert (= temp782_15 #x0000000000000003))
(assert (= temp782_16 temp782_15))
(assert (= temp782_17 (select ARGNAME_padding_NAMEEND_VAL temp782_16)))
(assert (= temp782_18 #x0000000000000004))
(assert (= temp782_19 temp782_18))
(assert (= temp782_20 (select ARGNAME_padding_NAMEEND_VAL temp782_19)))
(assert (= temp782_21 #x0000000000000005))
(assert (= temp782_22 temp782_21))
(assert (= temp782_23 (select ARGNAME_padding_NAMEEND_VAL temp782_22)))
(assert (= temp782_24 #x0000000000000000))
(assert (= temp782_25 #x0000000000000000))
(assert (= temp782_26 temp782_25))
(assert (= temp782_27 (select ARGNAME_padding_NAMEEND_VAL temp782_26)))
(assert (= temp782_28 #x0000000000000000))
(assert (= temp782_29 #x0000000000000001))
(assert (= temp782_30 temp782_29))
(assert (= temp782_31 (select ARGNAME_padding_NAMEEND_VAL temp782_30)))
(assert (= temp782_32 #x0000000000000000))
(assert (= temp782_33 #x0000000000000002))
(assert (= temp782_34 temp782_33))
(assert (= temp782_35 (select ARGNAME_padding_NAMEEND_VAL temp782_34)))
(assert (= temp782_36 #x0000000000000000))
(assert (= temp782_37 #x0000000000000003))
(assert (= temp782_38 temp782_37))
(assert (= temp782_39 (select ARGNAME_padding_NAMEEND_VAL temp782_38)))
(assert (= temp782_40 #x0000000000000000))
(assert (= temp782_41 #x0000000000000004))
(assert (= temp782_42 temp782_41))
(assert (= temp782_43 (select ARGNAME_padding_NAMEEND_VAL temp782_42)))
(assert (= temp782_44 #x0000000000000000))
(assert (= temp782_45 #x0000000000000005))
(assert (= temp782_46 temp782_45))
(assert (= temp782_47 (select ARGNAME_padding_NAMEEND_VAL temp782_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp782_27 temp782_24)
             (bvslt temp782_31 temp782_28)
             (bvslt temp782_35 temp782_32)
             (bvslt temp782_39 temp782_36)
             (bvslt temp782_43 temp782_40)
             (bvslt temp782_47 temp782_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_48 #x0000000000000000))
(assert (= var1322786 temp782_48))
(assert (= temp782_49 #x0000000000000000))
(assert (= temp782_50 temp782_49))
(assert (= temp782_51 (select ARGNAME_output_padding_NAMEEND_VAL temp782_50)))
(assert (= temp782_52 #x0000000000000001))
(assert (= temp782_53 temp782_52))
(assert (= temp782_54 (select ARGNAME_output_padding_NAMEEND_VAL temp782_53)))
(assert (= temp782_55 #x0000000000000002))
(assert (= temp782_56 temp782_55))
(assert (= temp782_57 (select ARGNAME_output_padding_NAMEEND_VAL temp782_56)))
(assert (= temp782_58 #x0000000000000003))
(assert (= temp782_59 temp782_58))
(assert (= temp782_60 (select ARGNAME_output_padding_NAMEEND_VAL temp782_59)))
(assert (= temp782_61 #x0000000000000004))
(assert (= temp782_62 temp782_61))
(assert (= temp782_63 (select ARGNAME_output_padding_NAMEEND_VAL temp782_62)))
(assert (= temp782_64 #x0000000000000005))
(assert (= temp782_65 temp782_64))
(assert (= temp782_66 (select ARGNAME_output_padding_NAMEEND_VAL temp782_65)))
(assert (= temp782_67 #x0000000000000000))
(assert (= temp782_68 #x0000000000000000))
(assert (= temp782_69 temp782_68))
(assert (= temp782_70 (select ARGNAME_output_padding_NAMEEND_VAL temp782_69)))
(assert (= temp782_71 #x0000000000000000))
(assert (= temp782_72 #x0000000000000001))
(assert (= temp782_73 temp782_72))
(assert (= temp782_74 (select ARGNAME_output_padding_NAMEEND_VAL temp782_73)))
(assert (= temp782_75 #x0000000000000000))
(assert (= temp782_76 #x0000000000000002))
(assert (= temp782_77 temp782_76))
(assert (= temp782_78 (select ARGNAME_output_padding_NAMEEND_VAL temp782_77)))
(assert (= temp782_79 #x0000000000000000))
(assert (= temp782_80 #x0000000000000003))
(assert (= temp782_81 temp782_80))
(assert (= temp782_82 (select ARGNAME_output_padding_NAMEEND_VAL temp782_81)))
(assert (= temp782_83 #x0000000000000000))
(assert (= temp782_84 #x0000000000000004))
(assert (= temp782_85 temp782_84))
(assert (= temp782_86 (select ARGNAME_output_padding_NAMEEND_VAL temp782_85)))
(assert (= temp782_87 #x0000000000000000))
(assert (= temp782_88 #x0000000000000005))
(assert (= temp782_89 temp782_88))
(assert (= temp782_90 (select ARGNAME_output_padding_NAMEEND_VAL temp782_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp782_70 temp782_67)
             (bvslt temp782_74 temp782_71)
             (bvslt temp782_78 temp782_75)
             (bvslt temp782_82 temp782_79)
             (bvslt temp782_86 temp782_83)
             (bvslt temp782_90 temp782_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_91 #x0000000000000000))
(assert (= var1322797 temp782_91))
(assert (= temp782_92 #x0000000000000000))
(assert (= temp782_93 temp782_92))
(assert (= temp782_94 (select ARGNAME_stride_NAMEEND_VAL temp782_93)))
(assert (= temp782_95 #x0000000000000001))
(assert (= temp782_96 temp782_95))
(assert (= temp782_97 (select ARGNAME_stride_NAMEEND_VAL temp782_96)))
(assert (= temp782_98 #x0000000000000002))
(assert (= temp782_99 temp782_98))
(assert (= temp782_100 (select ARGNAME_stride_NAMEEND_VAL temp782_99)))
(assert (= temp782_101 #x0000000000000003))
(assert (= temp782_102 temp782_101))
(assert (= temp782_103 (select ARGNAME_stride_NAMEEND_VAL temp782_102)))
(assert (= temp782_104 #x0000000000000004))
(assert (= temp782_105 temp782_104))
(assert (= temp782_106 (select ARGNAME_stride_NAMEEND_VAL temp782_105)))
(assert (= temp782_107 #x0000000000000005))
(assert (= temp782_108 temp782_107))
(assert (= temp782_109 (select ARGNAME_stride_NAMEEND_VAL temp782_108)))
(assert (= temp782_110 #x0000000000000000))
(assert (= temp782_111 #x0000000000000000))
(assert (= temp782_112 temp782_111))
(assert (= temp782_113 (select ARGNAME_stride_NAMEEND_VAL temp782_112)))
(assert (= temp782_114 #x0000000000000000))
(assert (= temp782_115 #x0000000000000001))
(assert (= temp782_116 temp782_115))
(assert (= temp782_117 (select ARGNAME_stride_NAMEEND_VAL temp782_116)))
(assert (= temp782_118 #x0000000000000000))
(assert (= temp782_119 #x0000000000000002))
(assert (= temp782_120 temp782_119))
(assert (= temp782_121 (select ARGNAME_stride_NAMEEND_VAL temp782_120)))
(assert (= temp782_122 #x0000000000000000))
(assert (= temp782_123 #x0000000000000003))
(assert (= temp782_124 temp782_123))
(assert (= temp782_125 (select ARGNAME_stride_NAMEEND_VAL temp782_124)))
(assert (= temp782_126 #x0000000000000000))
(assert (= temp782_127 #x0000000000000004))
(assert (= temp782_128 temp782_127))
(assert (= temp782_129 (select ARGNAME_stride_NAMEEND_VAL temp782_128)))
(assert (= temp782_130 #x0000000000000000))
(assert (= temp782_131 #x0000000000000005))
(assert (= temp782_132 temp782_131))
(assert (= temp782_133 (select ARGNAME_stride_NAMEEND_VAL temp782_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp782_113 temp782_110)
             (bvsle temp782_117 temp782_114)
             (bvsle temp782_121 temp782_118)
             (bvsle temp782_125 temp782_122)
             (bvsle temp782_129 temp782_126)
             (bvsle temp782_133 temp782_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_134 #x0000000000000000))
(assert (= var1322807 temp782_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_135 #x0000000000000001))
(assert (= var1322819 temp782_135))
(assert (= temp782_136 #x0000000000000000))
(assert (= var1310898 temp782_136))
(assert (= temp782_137 #x0000000000000000))
(assert (= temp782_138 temp782_137))
(assert (= temp782_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_138)))
(assert (= temp782_140 #x0000000000000001))
(assert (= temp782_141 temp782_140))
(assert (= temp782_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_141)))
(assert (= temp782_143 #x0000000000000002))
(assert (= temp782_144 temp782_143))
(assert (= temp782_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_144)))
(assert (= temp782_146 #x0000000000000003))
(assert (= temp782_147 temp782_146))
(assert (= temp782_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_147)))
(assert (= temp782_149 #x0000000000000004))
(assert (= temp782_150 temp782_149))
(assert (= temp782_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_150)))
(assert (= temp782_152 #x0000000000000005))
(assert (= temp782_153 temp782_152))
(assert (= temp782_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_153)))
(assert (= temp782_156 var1310898))
(assert (= temp782_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_156)))
(assert (= temp782_155 temp782_157))
(assert (= var1322852
   (ite (bvslt temp782_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_158 #x0000000000000000))
(assert (= var1322852 temp782_158))
(assert (= temp782_159 #x0000000000000000))
(assert (= var1310898 temp782_159))
(assert (= temp782_161 var1310898))
(assert (= temp782_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_161)))
(assert (= temp782_160 temp782_162))
(assert (= var1322874 (bvsmod temp782_160 ARGNAME_groups_NAMEEND)))
(assert (= temp782_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp782_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp782_164 #x0000000000000001))
(assert (= var1322875 temp782_164))
(assert (= temp782_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp782_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_166 #x0000000000000001))
(assert (= var1322895 temp782_166))
(assert (= temp782_167 #x0000000000000001))
(assert (= var1311786 temp782_167))
(assert (= temp782_168 #x0000000000000000))
(assert (= temp782_169 temp782_168))
(assert (= temp782_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp782_169)))
(assert (= temp782_171 #x0000000000000001))
(assert (= temp782_172 temp782_171))
(assert (= temp782_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp782_172)))
(assert (= temp782_174 #x0000000000000002))
(assert (= temp782_175 temp782_174))
(assert (= temp782_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp782_175)))
(assert (= temp782_177 #x0000000000000003))
(assert (= temp782_178 temp782_177))
(assert (= temp782_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp782_178)))
(assert (= temp782_180 #x0000000000000004))
(assert (= temp782_181 temp782_180))
(assert (= temp782_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp782_181)))
(assert (= temp782_183 #x0000000000000005))
(assert (= temp782_184 temp782_183))
(assert (= temp782_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp782_184)))
(assert (= temp782_186 #x0000000000000000))
(assert (= temp782_187
   (ite (bvslt var1311786 temp782_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp782_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp782_187)))
(assert (= var1322903 temp782_188))
(assert (bvslt (ite (bvslt var1311786 temp782_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp782_189 #x0000000000000001))
(assert (= var1311786 temp782_189))
(assert (= temp782_191 var1311786))
(assert (= temp782_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_191)))
(assert (= temp782_190 temp782_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp782_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp782_193 #x0000000000000001))
(assert (= var1322908 temp782_193))
(assert (= temp782_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp782_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_195 #x0000000000000001))
(assert (= var1322975 temp782_195))
(assert (= temp782_196 #x0000000000000000))
(assert (= var1310898 temp782_196))
(assert (= temp782_197 #x0000000000000000))
(assert (= temp782_198 temp782_197))
(assert (= temp782_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp782_198)))
(assert (= temp782_200 #x0000000000000001))
(assert (= temp782_201 temp782_200))
(assert (= temp782_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp782_201)))
(assert (= temp782_203 #x0000000000000002))
(assert (= temp782_204 temp782_203))
(assert (= temp782_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp782_204)))
(assert (= temp782_206 #x0000000000000003))
(assert (= temp782_207 temp782_206))
(assert (= temp782_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp782_207)))
(assert (= temp782_209 #x0000000000000004))
(assert (= temp782_210 temp782_209))
(assert (= temp782_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp782_210)))
(assert (= temp782_212 #x0000000000000005))
(assert (= temp782_213 temp782_212))
(assert (= temp782_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp782_213)))
(assert (= temp782_215 #x0000000000000000))
(assert (= temp782_216
   (ite (bvslt var1310898 temp782_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp782_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp782_216)))
(assert (= var1322977 temp782_217))
(assert (bvslt (ite (bvslt var1310898 temp782_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp782_218 #x0000000000000000))
(assert (= var1310898 temp782_218))
(assert (= temp782_220 var1310898))
(assert (= temp782_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp782_220)))
(assert (= temp782_219 temp782_221))
(assert (= var1322980
   (ite (= var1322977 temp782_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp782_222 #x0000000000000001))
(assert (= var1322980 temp782_222))
(assert (= temp782_223 #x0000000000000002))
(assert (= var1848169 temp782_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp782_225 #x0000000000000001))
(assert (= var1323065 temp782_225))
(assert (= temp782_226 #x0000000000000001))
(assert (= var3486735 temp782_226))
(assert (= temp782_227 #x0000000000000001))
(assert (= var3814415 temp782_227))
(assert (= temp782_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp782_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_229 #x0000000000000001))
(assert (= var79986 temp782_229))
(assert (= temp782_230 #x0000000000000001))
(assert (= var80116 temp782_230))
(assert (= var4796905 var80116))
(assert (= temp782_231 #x0000000000000000))
(assert (= var4784306 temp782_231))
(assert (= temp782_232 #x0000000000000000))
(assert (= temp782_233
   (ite (bvslt var4784306 temp782_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp782_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp782_233)))
(assert (= var4796924 temp782_234))
(assert (bvslt (ite (bvslt var4784306 temp782_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp782_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp782_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp782_236 #x0000000000000001))
(assert (= var4796925 temp782_236))
(assert (= temp782_237 #x0000000000000000))
(assert (= var4996927 temp782_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp782_238 #x0000000000000002))
(assert (= var5125763 temp782_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp782_239 #x0000000000000000))
(assert (= var5191324 temp782_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp782_241 #xffffffffffffffff))
(assert (= temp782_240 temp782_241))
(assert (= temp782_242 #x0000000000000001))
(assert (= var66602 temp782_242))
(assert (= temp782_243 #x0000000000000000))
(assert (= temp782_244
   (ite (bvslt var66602 temp782_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp782_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp782_244)))
(assert (= var80523 temp782_245))
(assert (bvslt (ite (bvslt var66602 temp782_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp782_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp782_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp782_247 #x0000000000000000))
(assert (= var80524 temp782_247))
(assert (= temp782_248 #x0000000000000001))
(assert (= var79986 temp782_248))
(model-add temp782_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp782_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp782_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






