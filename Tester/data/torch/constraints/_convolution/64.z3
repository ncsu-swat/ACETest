(declare-fun temp84_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp84_2 () (_ BitVec 64))
(declare-fun temp84_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp84_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp84_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp84_6 () (_ BitVec 64))
(declare-fun temp84_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp84_8 () (_ BitVec 64))
(declare-fun temp84_9 () (_ BitVec 64))
(declare-fun temp84_10 () (_ BitVec 64))
(declare-fun temp84_11 () (_ BitVec 64))
(declare-fun temp84_12 () (_ BitVec 64))
(declare-fun temp84_13 () (_ BitVec 64))
(declare-fun temp84_14 () (_ BitVec 64))
(declare-fun temp84_15 () (_ BitVec 64))
(declare-fun temp84_16 () (_ BitVec 64))
(declare-fun temp84_17 () (_ BitVec 64))
(declare-fun temp84_18 () (_ BitVec 64))
(declare-fun temp84_19 () (_ BitVec 64))
(declare-fun temp84_20 () (_ BitVec 64))
(declare-fun temp84_21 () (_ BitVec 64))
(declare-fun temp84_22 () (_ BitVec 64))
(declare-fun temp84_23 () (_ BitVec 64))
(declare-fun temp84_24 () (_ BitVec 64))
(declare-fun temp84_25 () (_ BitVec 64))
(declare-fun temp84_26 () (_ BitVec 64))
(declare-fun temp84_27 () (_ BitVec 64))
(declare-fun temp84_28 () (_ BitVec 64))
(declare-fun temp84_29 () (_ BitVec 64))
(declare-fun temp84_30 () (_ BitVec 64))
(declare-fun temp84_31 () (_ BitVec 64))
(declare-fun temp84_32 () (_ BitVec 64))
(declare-fun temp84_33 () (_ BitVec 64))
(declare-fun temp84_34 () (_ BitVec 64))
(declare-fun temp84_35 () (_ BitVec 64))
(declare-fun temp84_36 () (_ BitVec 64))
(declare-fun temp84_37 () (_ BitVec 64))
(declare-fun temp84_38 () (_ BitVec 64))
(declare-fun temp84_39 () (_ BitVec 64))
(declare-fun temp84_40 () (_ BitVec 64))
(declare-fun temp84_41 () (_ BitVec 64))
(declare-fun temp84_42 () (_ BitVec 64))
(declare-fun temp84_43 () (_ BitVec 64))
(declare-fun temp84_44 () (_ BitVec 64))
(declare-fun temp84_45 () (_ BitVec 64))
(declare-fun temp84_46 () (_ BitVec 64))
(declare-fun temp84_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp84_48 () (_ BitVec 64))
(declare-fun temp84_49 () (_ BitVec 64))
(declare-fun temp84_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp84_51 () (_ BitVec 64))
(declare-fun temp84_52 () (_ BitVec 64))
(declare-fun temp84_53 () (_ BitVec 64))
(declare-fun temp84_54 () (_ BitVec 64))
(declare-fun temp84_55 () (_ BitVec 64))
(declare-fun temp84_56 () (_ BitVec 64))
(declare-fun temp84_57 () (_ BitVec 64))
(declare-fun temp84_58 () (_ BitVec 64))
(declare-fun temp84_59 () (_ BitVec 64))
(declare-fun temp84_60 () (_ BitVec 64))
(declare-fun temp84_61 () (_ BitVec 64))
(declare-fun temp84_62 () (_ BitVec 64))
(declare-fun temp84_63 () (_ BitVec 64))
(declare-fun temp84_64 () (_ BitVec 64))
(declare-fun temp84_65 () (_ BitVec 64))
(declare-fun temp84_66 () (_ BitVec 64))
(declare-fun temp84_67 () (_ BitVec 64))
(declare-fun temp84_68 () (_ BitVec 64))
(declare-fun temp84_69 () (_ BitVec 64))
(declare-fun temp84_70 () (_ BitVec 64))
(declare-fun temp84_71 () (_ BitVec 64))
(declare-fun temp84_72 () (_ BitVec 64))
(declare-fun temp84_73 () (_ BitVec 64))
(declare-fun temp84_74 () (_ BitVec 64))
(declare-fun temp84_75 () (_ BitVec 64))
(declare-fun temp84_76 () (_ BitVec 64))
(declare-fun temp84_77 () (_ BitVec 64))
(declare-fun temp84_78 () (_ BitVec 64))
(declare-fun temp84_79 () (_ BitVec 64))
(declare-fun temp84_80 () (_ BitVec 64))
(declare-fun temp84_81 () (_ BitVec 64))
(declare-fun temp84_82 () (_ BitVec 64))
(declare-fun temp84_83 () (_ BitVec 64))
(declare-fun temp84_84 () (_ BitVec 64))
(declare-fun temp84_85 () (_ BitVec 64))
(declare-fun temp84_86 () (_ BitVec 64))
(declare-fun temp84_87 () (_ BitVec 64))
(declare-fun temp84_88 () (_ BitVec 64))
(declare-fun temp84_89 () (_ BitVec 64))
(declare-fun temp84_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp84_91 () (_ BitVec 64))
(declare-fun temp84_92 () (_ BitVec 64))
(declare-fun temp84_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp84_94 () (_ BitVec 64))
(declare-fun temp84_95 () (_ BitVec 64))
(declare-fun temp84_96 () (_ BitVec 64))
(declare-fun temp84_97 () (_ BitVec 64))
(declare-fun temp84_98 () (_ BitVec 64))
(declare-fun temp84_99 () (_ BitVec 64))
(declare-fun temp84_100 () (_ BitVec 64))
(declare-fun temp84_101 () (_ BitVec 64))
(declare-fun temp84_102 () (_ BitVec 64))
(declare-fun temp84_103 () (_ BitVec 64))
(declare-fun temp84_104 () (_ BitVec 64))
(declare-fun temp84_105 () (_ BitVec 64))
(declare-fun temp84_106 () (_ BitVec 64))
(declare-fun temp84_107 () (_ BitVec 64))
(declare-fun temp84_108 () (_ BitVec 64))
(declare-fun temp84_109 () (_ BitVec 64))
(declare-fun temp84_110 () (_ BitVec 64))
(declare-fun temp84_111 () (_ BitVec 64))
(declare-fun temp84_112 () (_ BitVec 64))
(declare-fun temp84_113 () (_ BitVec 64))
(declare-fun temp84_114 () (_ BitVec 64))
(declare-fun temp84_115 () (_ BitVec 64))
(declare-fun temp84_116 () (_ BitVec 64))
(declare-fun temp84_117 () (_ BitVec 64))
(declare-fun temp84_118 () (_ BitVec 64))
(declare-fun temp84_119 () (_ BitVec 64))
(declare-fun temp84_120 () (_ BitVec 64))
(declare-fun temp84_121 () (_ BitVec 64))
(declare-fun temp84_122 () (_ BitVec 64))
(declare-fun temp84_123 () (_ BitVec 64))
(declare-fun temp84_124 () (_ BitVec 64))
(declare-fun temp84_125 () (_ BitVec 64))
(declare-fun temp84_126 () (_ BitVec 64))
(declare-fun temp84_127 () (_ BitVec 64))
(declare-fun temp84_128 () (_ BitVec 64))
(declare-fun temp84_129 () (_ BitVec 64))
(declare-fun temp84_130 () (_ BitVec 64))
(declare-fun temp84_131 () (_ BitVec 64))
(declare-fun temp84_132 () (_ BitVec 64))
(declare-fun temp84_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp84_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp84_135 () (_ BitVec 64))
(declare-fun temp84_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp84_137 () (_ BitVec 64))
(declare-fun temp84_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp84_139 () (_ BitVec 64))
(declare-fun temp84_140 () (_ BitVec 64))
(declare-fun temp84_141 () (_ BitVec 64))
(declare-fun temp84_142 () (_ BitVec 64))
(declare-fun temp84_143 () (_ BitVec 64))
(declare-fun temp84_144 () (_ BitVec 64))
(declare-fun temp84_145 () (_ BitVec 64))
(declare-fun temp84_146 () (_ BitVec 64))
(declare-fun temp84_147 () (_ BitVec 64))
(declare-fun temp84_148 () (_ BitVec 64))
(declare-fun temp84_149 () (_ BitVec 64))
(declare-fun temp84_150 () (_ BitVec 64))
(declare-fun temp84_151 () (_ BitVec 64))
(declare-fun temp84_152 () (_ BitVec 64))
(declare-fun temp84_153 () (_ BitVec 64))
(declare-fun temp84_154 () (_ BitVec 64))
(declare-fun temp84_156 () (_ BitVec 64))
(declare-fun temp84_157 () (_ BitVec 64))
(declare-fun temp84_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp84_158 () (_ BitVec 64))
(declare-fun temp84_159 () (_ BitVec 64))
(declare-fun temp84_161 () (_ BitVec 64))
(declare-fun temp84_162 () (_ BitVec 64))
(declare-fun temp84_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp84_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp84_164 () (_ BitVec 64))
(declare-fun temp84_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp84_166 () (_ BitVec 64))
(declare-fun temp84_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp84_168 () (_ BitVec 64))
(declare-fun temp84_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp84_170 () (_ BitVec 64))
(declare-fun temp84_171 () (_ BitVec 64))
(declare-fun temp84_172 () (_ BitVec 64))
(declare-fun temp84_173 () (_ BitVec 64))
(declare-fun temp84_174 () (_ BitVec 64))
(declare-fun temp84_175 () (_ BitVec 64))
(declare-fun temp84_176 () (_ BitVec 64))
(declare-fun temp84_177 () (_ BitVec 64))
(declare-fun temp84_178 () (_ BitVec 64))
(declare-fun temp84_179 () (_ BitVec 64))
(declare-fun temp84_180 () (_ BitVec 64))
(declare-fun temp84_181 () (_ BitVec 64))
(declare-fun temp84_182 () (_ BitVec 64))
(declare-fun temp84_183 () (_ BitVec 64))
(declare-fun temp84_184 () (_ BitVec 64))
(declare-fun temp84_185 () (_ BitVec 64))
(declare-fun temp84_186 () (_ BitVec 64))
(declare-fun temp84_187 () (_ BitVec 64))
(declare-fun temp84_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp84_189 () (_ BitVec 64))
(declare-fun temp84_191 () (_ BitVec 64))
(declare-fun temp84_192 () (_ BitVec 64))
(declare-fun temp84_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp84_193 () (_ BitVec 64))
(declare-fun temp84_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp84_195 () (_ BitVec 64))
(declare-fun temp84_196 () (_ BitVec 64))
(declare-fun temp84_197 () (_ BitVec 64))
(declare-fun temp84_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp84_199 () (_ BitVec 64))
(declare-fun temp84_200 () (_ BitVec 64))
(declare-fun temp84_201 () (_ BitVec 64))
(declare-fun temp84_202 () (_ BitVec 64))
(declare-fun temp84_203 () (_ BitVec 64))
(declare-fun temp84_204 () (_ BitVec 64))
(declare-fun temp84_205 () (_ BitVec 64))
(declare-fun temp84_206 () (_ BitVec 64))
(declare-fun temp84_207 () (_ BitVec 64))
(declare-fun temp84_208 () (_ BitVec 64))
(declare-fun temp84_209 () (_ BitVec 64))
(declare-fun temp84_210 () (_ BitVec 64))
(declare-fun temp84_211 () (_ BitVec 64))
(declare-fun temp84_212 () (_ BitVec 64))
(declare-fun temp84_213 () (_ BitVec 64))
(declare-fun temp84_214 () (_ BitVec 64))
(declare-fun temp84_215 () (_ BitVec 64))
(declare-fun temp84_216 () (_ BitVec 64))
(declare-fun temp84_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp84_218 () (_ BitVec 64))
(declare-fun temp84_220 () (_ BitVec 64))
(declare-fun temp84_221 () (_ BitVec 64))
(declare-fun temp84_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp84_222 () (_ BitVec 64))
(declare-fun temp84_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp84_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp84_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp84_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp84_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp84_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp84_229 () (_ BitVec 64))
(declare-fun temp84_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp84_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp84_232 () (_ BitVec 64))
(declare-fun temp84_233 () (_ BitVec 64))
(declare-fun temp84_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp84_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp84_236 () (_ BitVec 64))
(declare-fun temp84_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp84_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp84_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp84_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp84_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp84_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp84_244 () (_ BitVec 64))
(declare-fun temp84_243 () (_ BitVec 64))
(declare-fun temp84_245 () (_ BitVec 64))
(declare-fun var8130026 () (_ BitVec 64))
(declare-fun temp84_247 () (_ BitVec 64))
(declare-fun temp84_246 () (_ BitVec 64))
(declare-fun temp84_248 () (_ BitVec 64))
(assert (= temp84_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp84_1)))
(assert (= temp84_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp84_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_3 #x0000000000000000))
(assert (= var79869 temp84_3))
(assert (= temp84_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp84_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_5 #x0000000000000000))
(assert (= var79914 temp84_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp84_6 #x0000000000000000))
(assert (= temp84_7 temp84_6))
(assert (= temp84_8 (select ARGNAME_padding_NAMEEND_VAL temp84_7)))
(assert (= temp84_9 #x0000000000000001))
(assert (= temp84_10 temp84_9))
(assert (= temp84_11 (select ARGNAME_padding_NAMEEND_VAL temp84_10)))
(assert (= temp84_12 #x0000000000000002))
(assert (= temp84_13 temp84_12))
(assert (= temp84_14 (select ARGNAME_padding_NAMEEND_VAL temp84_13)))
(assert (= temp84_15 #x0000000000000003))
(assert (= temp84_16 temp84_15))
(assert (= temp84_17 (select ARGNAME_padding_NAMEEND_VAL temp84_16)))
(assert (= temp84_18 #x0000000000000004))
(assert (= temp84_19 temp84_18))
(assert (= temp84_20 (select ARGNAME_padding_NAMEEND_VAL temp84_19)))
(assert (= temp84_21 #x0000000000000005))
(assert (= temp84_22 temp84_21))
(assert (= temp84_23 (select ARGNAME_padding_NAMEEND_VAL temp84_22)))
(assert (= temp84_24 #x0000000000000000))
(assert (= temp84_25 #x0000000000000000))
(assert (= temp84_26 temp84_25))
(assert (= temp84_27 (select ARGNAME_padding_NAMEEND_VAL temp84_26)))
(assert (= temp84_28 #x0000000000000000))
(assert (= temp84_29 #x0000000000000001))
(assert (= temp84_30 temp84_29))
(assert (= temp84_31 (select ARGNAME_padding_NAMEEND_VAL temp84_30)))
(assert (= temp84_32 #x0000000000000000))
(assert (= temp84_33 #x0000000000000002))
(assert (= temp84_34 temp84_33))
(assert (= temp84_35 (select ARGNAME_padding_NAMEEND_VAL temp84_34)))
(assert (= temp84_36 #x0000000000000000))
(assert (= temp84_37 #x0000000000000003))
(assert (= temp84_38 temp84_37))
(assert (= temp84_39 (select ARGNAME_padding_NAMEEND_VAL temp84_38)))
(assert (= temp84_40 #x0000000000000000))
(assert (= temp84_41 #x0000000000000004))
(assert (= temp84_42 temp84_41))
(assert (= temp84_43 (select ARGNAME_padding_NAMEEND_VAL temp84_42)))
(assert (= temp84_44 #x0000000000000000))
(assert (= temp84_45 #x0000000000000005))
(assert (= temp84_46 temp84_45))
(assert (= temp84_47 (select ARGNAME_padding_NAMEEND_VAL temp84_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp84_27 temp84_24)
             (bvslt temp84_31 temp84_28)
             (bvslt temp84_35 temp84_32)
             (bvslt temp84_39 temp84_36)
             (bvslt temp84_43 temp84_40)
             (bvslt temp84_47 temp84_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_48 #x0000000000000000))
(assert (= var1322786 temp84_48))
(assert (= temp84_49 #x0000000000000000))
(assert (= temp84_50 temp84_49))
(assert (= temp84_51 (select ARGNAME_output_padding_NAMEEND_VAL temp84_50)))
(assert (= temp84_52 #x0000000000000001))
(assert (= temp84_53 temp84_52))
(assert (= temp84_54 (select ARGNAME_output_padding_NAMEEND_VAL temp84_53)))
(assert (= temp84_55 #x0000000000000002))
(assert (= temp84_56 temp84_55))
(assert (= temp84_57 (select ARGNAME_output_padding_NAMEEND_VAL temp84_56)))
(assert (= temp84_58 #x0000000000000003))
(assert (= temp84_59 temp84_58))
(assert (= temp84_60 (select ARGNAME_output_padding_NAMEEND_VAL temp84_59)))
(assert (= temp84_61 #x0000000000000004))
(assert (= temp84_62 temp84_61))
(assert (= temp84_63 (select ARGNAME_output_padding_NAMEEND_VAL temp84_62)))
(assert (= temp84_64 #x0000000000000005))
(assert (= temp84_65 temp84_64))
(assert (= temp84_66 (select ARGNAME_output_padding_NAMEEND_VAL temp84_65)))
(assert (= temp84_67 #x0000000000000000))
(assert (= temp84_68 #x0000000000000000))
(assert (= temp84_69 temp84_68))
(assert (= temp84_70 (select ARGNAME_output_padding_NAMEEND_VAL temp84_69)))
(assert (= temp84_71 #x0000000000000000))
(assert (= temp84_72 #x0000000000000001))
(assert (= temp84_73 temp84_72))
(assert (= temp84_74 (select ARGNAME_output_padding_NAMEEND_VAL temp84_73)))
(assert (= temp84_75 #x0000000000000000))
(assert (= temp84_76 #x0000000000000002))
(assert (= temp84_77 temp84_76))
(assert (= temp84_78 (select ARGNAME_output_padding_NAMEEND_VAL temp84_77)))
(assert (= temp84_79 #x0000000000000000))
(assert (= temp84_80 #x0000000000000003))
(assert (= temp84_81 temp84_80))
(assert (= temp84_82 (select ARGNAME_output_padding_NAMEEND_VAL temp84_81)))
(assert (= temp84_83 #x0000000000000000))
(assert (= temp84_84 #x0000000000000004))
(assert (= temp84_85 temp84_84))
(assert (= temp84_86 (select ARGNAME_output_padding_NAMEEND_VAL temp84_85)))
(assert (= temp84_87 #x0000000000000000))
(assert (= temp84_88 #x0000000000000005))
(assert (= temp84_89 temp84_88))
(assert (= temp84_90 (select ARGNAME_output_padding_NAMEEND_VAL temp84_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp84_70 temp84_67)
             (bvslt temp84_74 temp84_71)
             (bvslt temp84_78 temp84_75)
             (bvslt temp84_82 temp84_79)
             (bvslt temp84_86 temp84_83)
             (bvslt temp84_90 temp84_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_91 #x0000000000000000))
(assert (= var1322797 temp84_91))
(assert (= temp84_92 #x0000000000000000))
(assert (= temp84_93 temp84_92))
(assert (= temp84_94 (select ARGNAME_stride_NAMEEND_VAL temp84_93)))
(assert (= temp84_95 #x0000000000000001))
(assert (= temp84_96 temp84_95))
(assert (= temp84_97 (select ARGNAME_stride_NAMEEND_VAL temp84_96)))
(assert (= temp84_98 #x0000000000000002))
(assert (= temp84_99 temp84_98))
(assert (= temp84_100 (select ARGNAME_stride_NAMEEND_VAL temp84_99)))
(assert (= temp84_101 #x0000000000000003))
(assert (= temp84_102 temp84_101))
(assert (= temp84_103 (select ARGNAME_stride_NAMEEND_VAL temp84_102)))
(assert (= temp84_104 #x0000000000000004))
(assert (= temp84_105 temp84_104))
(assert (= temp84_106 (select ARGNAME_stride_NAMEEND_VAL temp84_105)))
(assert (= temp84_107 #x0000000000000005))
(assert (= temp84_108 temp84_107))
(assert (= temp84_109 (select ARGNAME_stride_NAMEEND_VAL temp84_108)))
(assert (= temp84_110 #x0000000000000000))
(assert (= temp84_111 #x0000000000000000))
(assert (= temp84_112 temp84_111))
(assert (= temp84_113 (select ARGNAME_stride_NAMEEND_VAL temp84_112)))
(assert (= temp84_114 #x0000000000000000))
(assert (= temp84_115 #x0000000000000001))
(assert (= temp84_116 temp84_115))
(assert (= temp84_117 (select ARGNAME_stride_NAMEEND_VAL temp84_116)))
(assert (= temp84_118 #x0000000000000000))
(assert (= temp84_119 #x0000000000000002))
(assert (= temp84_120 temp84_119))
(assert (= temp84_121 (select ARGNAME_stride_NAMEEND_VAL temp84_120)))
(assert (= temp84_122 #x0000000000000000))
(assert (= temp84_123 #x0000000000000003))
(assert (= temp84_124 temp84_123))
(assert (= temp84_125 (select ARGNAME_stride_NAMEEND_VAL temp84_124)))
(assert (= temp84_126 #x0000000000000000))
(assert (= temp84_127 #x0000000000000004))
(assert (= temp84_128 temp84_127))
(assert (= temp84_129 (select ARGNAME_stride_NAMEEND_VAL temp84_128)))
(assert (= temp84_130 #x0000000000000000))
(assert (= temp84_131 #x0000000000000005))
(assert (= temp84_132 temp84_131))
(assert (= temp84_133 (select ARGNAME_stride_NAMEEND_VAL temp84_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp84_113 temp84_110)
             (bvsle temp84_117 temp84_114)
             (bvsle temp84_121 temp84_118)
             (bvsle temp84_125 temp84_122)
             (bvsle temp84_129 temp84_126)
             (bvsle temp84_133 temp84_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_134 #x0000000000000000))
(assert (= var1322807 temp84_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_135 #x0000000000000001))
(assert (= var1322819 temp84_135))
(assert (= temp84_136 #x0000000000000000))
(assert (= var1310898 temp84_136))
(assert (= temp84_137 #x0000000000000000))
(assert (= temp84_138 temp84_137))
(assert (= temp84_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_138)))
(assert (= temp84_140 #x0000000000000001))
(assert (= temp84_141 temp84_140))
(assert (= temp84_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_141)))
(assert (= temp84_143 #x0000000000000002))
(assert (= temp84_144 temp84_143))
(assert (= temp84_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_144)))
(assert (= temp84_146 #x0000000000000003))
(assert (= temp84_147 temp84_146))
(assert (= temp84_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_147)))
(assert (= temp84_149 #x0000000000000004))
(assert (= temp84_150 temp84_149))
(assert (= temp84_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_150)))
(assert (= temp84_152 #x0000000000000005))
(assert (= temp84_153 temp84_152))
(assert (= temp84_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_153)))
(assert (= temp84_156 var1310898))
(assert (= temp84_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_156)))
(assert (= temp84_155 temp84_157))
(assert (= var1322852
   (ite (bvslt temp84_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_158 #x0000000000000000))
(assert (= var1322852 temp84_158))
(assert (= temp84_159 #x0000000000000000))
(assert (= var1310898 temp84_159))
(assert (= temp84_161 var1310898))
(assert (= temp84_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_161)))
(assert (= temp84_160 temp84_162))
(assert (= var1322874 (bvsmod temp84_160 ARGNAME_groups_NAMEEND)))
(assert (= temp84_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp84_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp84_164 #x0000000000000001))
(assert (= var1322875 temp84_164))
(assert (= temp84_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp84_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_166 #x0000000000000001))
(assert (= var1322895 temp84_166))
(assert (= temp84_167 #x0000000000000001))
(assert (= var1311786 temp84_167))
(assert (= temp84_168 #x0000000000000000))
(assert (= temp84_169 temp84_168))
(assert (= temp84_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp84_169)))
(assert (= temp84_171 #x0000000000000001))
(assert (= temp84_172 temp84_171))
(assert (= temp84_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp84_172)))
(assert (= temp84_174 #x0000000000000002))
(assert (= temp84_175 temp84_174))
(assert (= temp84_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp84_175)))
(assert (= temp84_177 #x0000000000000003))
(assert (= temp84_178 temp84_177))
(assert (= temp84_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp84_178)))
(assert (= temp84_180 #x0000000000000004))
(assert (= temp84_181 temp84_180))
(assert (= temp84_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp84_181)))
(assert (= temp84_183 #x0000000000000005))
(assert (= temp84_184 temp84_183))
(assert (= temp84_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp84_184)))
(assert (= temp84_186 #x0000000000000000))
(assert (= temp84_187
   (ite (bvslt var1311786 temp84_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp84_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp84_187)))
(assert (= var1322903 temp84_188))
(assert (bvslt (ite (bvslt var1311786 temp84_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp84_189 #x0000000000000001))
(assert (= var1311786 temp84_189))
(assert (= temp84_191 var1311786))
(assert (= temp84_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_191)))
(assert (= temp84_190 temp84_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp84_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp84_193 #x0000000000000001))
(assert (= var1322908 temp84_193))
(assert (= temp84_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp84_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_195 #x0000000000000001))
(assert (= var1322975 temp84_195))
(assert (= temp84_196 #x0000000000000000))
(assert (= var1310898 temp84_196))
(assert (= temp84_197 #x0000000000000000))
(assert (= temp84_198 temp84_197))
(assert (= temp84_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp84_198)))
(assert (= temp84_200 #x0000000000000001))
(assert (= temp84_201 temp84_200))
(assert (= temp84_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp84_201)))
(assert (= temp84_203 #x0000000000000002))
(assert (= temp84_204 temp84_203))
(assert (= temp84_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp84_204)))
(assert (= temp84_206 #x0000000000000003))
(assert (= temp84_207 temp84_206))
(assert (= temp84_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp84_207)))
(assert (= temp84_209 #x0000000000000004))
(assert (= temp84_210 temp84_209))
(assert (= temp84_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp84_210)))
(assert (= temp84_212 #x0000000000000005))
(assert (= temp84_213 temp84_212))
(assert (= temp84_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp84_213)))
(assert (= temp84_215 #x0000000000000000))
(assert (= temp84_216
   (ite (bvslt var1310898 temp84_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp84_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp84_216)))
(assert (= var1322977 temp84_217))
(assert (bvslt (ite (bvslt var1310898 temp84_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp84_218 #x0000000000000000))
(assert (= var1310898 temp84_218))
(assert (= temp84_220 var1310898))
(assert (= temp84_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_220)))
(assert (= temp84_219 temp84_221))
(assert (= var1322980
   (ite (= var1322977 temp84_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp84_222 #x0000000000000001))
(assert (= var1322980 temp84_222))
(assert (= temp84_223 #x0000000000000002))
(assert (= var1848169 temp84_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp84_225 #x0000000000000001))
(assert (= var1323065 temp84_225))
(assert (= temp84_226 #x0000000000000001))
(assert (= var3486735 temp84_226))
(assert (= temp84_227 #x0000000000000001))
(assert (= var3814415 temp84_227))
(assert (= temp84_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp84_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_229 #x0000000000000001))
(assert (= var79986 temp84_229))
(assert (= temp84_230 #x0000000000000001))
(assert (= var80116 temp84_230))
(assert (= var4796905 var80116))
(assert (= temp84_231 #x0000000000000000))
(assert (= var4784306 temp84_231))
(assert (= temp84_232 #x0000000000000000))
(assert (= temp84_233
   (ite (bvslt var4784306 temp84_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp84_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp84_233)))
(assert (= var4796924 temp84_234))
(assert (bvslt (ite (bvslt var4784306 temp84_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp84_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp84_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp84_236 #x0000000000000001))
(assert (= var4796925 temp84_236))
(assert (= temp84_237 #x0000000000000000))
(assert (= var4996927 temp84_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp84_238 #x0000000000000002))
(assert (= var5125763 temp84_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_239 #x0000000000000000))
(assert (= var5191324 temp84_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp84_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp84_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp84_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp84_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_244 #x0000000000000001))
(assert (= temp84_243 temp84_244))
(assert (= temp84_245 #x0000000000000001))
(assert (= var8130026 temp84_245))
(assert (= temp84_247 #xffffffffffffffff))
(assert (= temp84_246 temp84_247))
(assert (= temp84_248 #x0000000000000001))
(assert (= var79986 temp84_248))
(model-add temp84_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp84_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp84_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






