(declare-fun temp498_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp498_2 () (_ BitVec 64))
(declare-fun temp498_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp498_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp498_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp498_6 () (_ BitVec 64))
(declare-fun temp498_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp498_8 () (_ BitVec 64))
(declare-fun temp498_9 () (_ BitVec 64))
(declare-fun temp498_10 () (_ BitVec 64))
(declare-fun temp498_11 () (_ BitVec 64))
(declare-fun temp498_12 () (_ BitVec 64))
(declare-fun temp498_13 () (_ BitVec 64))
(declare-fun temp498_14 () (_ BitVec 64))
(declare-fun temp498_15 () (_ BitVec 64))
(declare-fun temp498_16 () (_ BitVec 64))
(declare-fun temp498_17 () (_ BitVec 64))
(declare-fun temp498_18 () (_ BitVec 64))
(declare-fun temp498_19 () (_ BitVec 64))
(declare-fun temp498_20 () (_ BitVec 64))
(declare-fun temp498_21 () (_ BitVec 64))
(declare-fun temp498_22 () (_ BitVec 64))
(declare-fun temp498_23 () (_ BitVec 64))
(declare-fun temp498_24 () (_ BitVec 64))
(declare-fun temp498_25 () (_ BitVec 64))
(declare-fun temp498_26 () (_ BitVec 64))
(declare-fun temp498_27 () (_ BitVec 64))
(declare-fun temp498_28 () (_ BitVec 64))
(declare-fun temp498_29 () (_ BitVec 64))
(declare-fun temp498_30 () (_ BitVec 64))
(declare-fun temp498_31 () (_ BitVec 64))
(declare-fun temp498_32 () (_ BitVec 64))
(declare-fun temp498_33 () (_ BitVec 64))
(declare-fun temp498_34 () (_ BitVec 64))
(declare-fun temp498_35 () (_ BitVec 64))
(declare-fun temp498_36 () (_ BitVec 64))
(declare-fun temp498_37 () (_ BitVec 64))
(declare-fun temp498_38 () (_ BitVec 64))
(declare-fun temp498_39 () (_ BitVec 64))
(declare-fun temp498_40 () (_ BitVec 64))
(declare-fun temp498_41 () (_ BitVec 64))
(declare-fun temp498_42 () (_ BitVec 64))
(declare-fun temp498_43 () (_ BitVec 64))
(declare-fun temp498_44 () (_ BitVec 64))
(declare-fun temp498_45 () (_ BitVec 64))
(declare-fun temp498_46 () (_ BitVec 64))
(declare-fun temp498_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp498_48 () (_ BitVec 64))
(declare-fun temp498_49 () (_ BitVec 64))
(declare-fun temp498_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp498_51 () (_ BitVec 64))
(declare-fun temp498_52 () (_ BitVec 64))
(declare-fun temp498_53 () (_ BitVec 64))
(declare-fun temp498_54 () (_ BitVec 64))
(declare-fun temp498_55 () (_ BitVec 64))
(declare-fun temp498_56 () (_ BitVec 64))
(declare-fun temp498_57 () (_ BitVec 64))
(declare-fun temp498_58 () (_ BitVec 64))
(declare-fun temp498_59 () (_ BitVec 64))
(declare-fun temp498_60 () (_ BitVec 64))
(declare-fun temp498_61 () (_ BitVec 64))
(declare-fun temp498_62 () (_ BitVec 64))
(declare-fun temp498_63 () (_ BitVec 64))
(declare-fun temp498_64 () (_ BitVec 64))
(declare-fun temp498_65 () (_ BitVec 64))
(declare-fun temp498_66 () (_ BitVec 64))
(declare-fun temp498_67 () (_ BitVec 64))
(declare-fun temp498_68 () (_ BitVec 64))
(declare-fun temp498_69 () (_ BitVec 64))
(declare-fun temp498_70 () (_ BitVec 64))
(declare-fun temp498_71 () (_ BitVec 64))
(declare-fun temp498_72 () (_ BitVec 64))
(declare-fun temp498_73 () (_ BitVec 64))
(declare-fun temp498_74 () (_ BitVec 64))
(declare-fun temp498_75 () (_ BitVec 64))
(declare-fun temp498_76 () (_ BitVec 64))
(declare-fun temp498_77 () (_ BitVec 64))
(declare-fun temp498_78 () (_ BitVec 64))
(declare-fun temp498_79 () (_ BitVec 64))
(declare-fun temp498_80 () (_ BitVec 64))
(declare-fun temp498_81 () (_ BitVec 64))
(declare-fun temp498_82 () (_ BitVec 64))
(declare-fun temp498_83 () (_ BitVec 64))
(declare-fun temp498_84 () (_ BitVec 64))
(declare-fun temp498_85 () (_ BitVec 64))
(declare-fun temp498_86 () (_ BitVec 64))
(declare-fun temp498_87 () (_ BitVec 64))
(declare-fun temp498_88 () (_ BitVec 64))
(declare-fun temp498_89 () (_ BitVec 64))
(declare-fun temp498_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp498_91 () (_ BitVec 64))
(declare-fun temp498_92 () (_ BitVec 64))
(declare-fun temp498_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp498_94 () (_ BitVec 64))
(declare-fun temp498_95 () (_ BitVec 64))
(declare-fun temp498_96 () (_ BitVec 64))
(declare-fun temp498_97 () (_ BitVec 64))
(declare-fun temp498_98 () (_ BitVec 64))
(declare-fun temp498_99 () (_ BitVec 64))
(declare-fun temp498_100 () (_ BitVec 64))
(declare-fun temp498_101 () (_ BitVec 64))
(declare-fun temp498_102 () (_ BitVec 64))
(declare-fun temp498_103 () (_ BitVec 64))
(declare-fun temp498_104 () (_ BitVec 64))
(declare-fun temp498_105 () (_ BitVec 64))
(declare-fun temp498_106 () (_ BitVec 64))
(declare-fun temp498_107 () (_ BitVec 64))
(declare-fun temp498_108 () (_ BitVec 64))
(declare-fun temp498_109 () (_ BitVec 64))
(declare-fun temp498_110 () (_ BitVec 64))
(declare-fun temp498_111 () (_ BitVec 64))
(declare-fun temp498_112 () (_ BitVec 64))
(declare-fun temp498_113 () (_ BitVec 64))
(declare-fun temp498_114 () (_ BitVec 64))
(declare-fun temp498_115 () (_ BitVec 64))
(declare-fun temp498_116 () (_ BitVec 64))
(declare-fun temp498_117 () (_ BitVec 64))
(declare-fun temp498_118 () (_ BitVec 64))
(declare-fun temp498_119 () (_ BitVec 64))
(declare-fun temp498_120 () (_ BitVec 64))
(declare-fun temp498_121 () (_ BitVec 64))
(declare-fun temp498_122 () (_ BitVec 64))
(declare-fun temp498_123 () (_ BitVec 64))
(declare-fun temp498_124 () (_ BitVec 64))
(declare-fun temp498_125 () (_ BitVec 64))
(declare-fun temp498_126 () (_ BitVec 64))
(declare-fun temp498_127 () (_ BitVec 64))
(declare-fun temp498_128 () (_ BitVec 64))
(declare-fun temp498_129 () (_ BitVec 64))
(declare-fun temp498_130 () (_ BitVec 64))
(declare-fun temp498_131 () (_ BitVec 64))
(declare-fun temp498_132 () (_ BitVec 64))
(declare-fun temp498_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp498_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp498_135 () (_ BitVec 64))
(declare-fun temp498_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp498_137 () (_ BitVec 64))
(declare-fun temp498_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp498_139 () (_ BitVec 64))
(declare-fun temp498_140 () (_ BitVec 64))
(declare-fun temp498_141 () (_ BitVec 64))
(declare-fun temp498_142 () (_ BitVec 64))
(declare-fun temp498_143 () (_ BitVec 64))
(declare-fun temp498_144 () (_ BitVec 64))
(declare-fun temp498_145 () (_ BitVec 64))
(declare-fun temp498_146 () (_ BitVec 64))
(declare-fun temp498_147 () (_ BitVec 64))
(declare-fun temp498_148 () (_ BitVec 64))
(declare-fun temp498_149 () (_ BitVec 64))
(declare-fun temp498_150 () (_ BitVec 64))
(declare-fun temp498_151 () (_ BitVec 64))
(declare-fun temp498_152 () (_ BitVec 64))
(declare-fun temp498_153 () (_ BitVec 64))
(declare-fun temp498_154 () (_ BitVec 64))
(declare-fun temp498_156 () (_ BitVec 64))
(declare-fun temp498_157 () (_ BitVec 64))
(declare-fun temp498_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp498_158 () (_ BitVec 64))
(declare-fun temp498_159 () (_ BitVec 64))
(declare-fun temp498_161 () (_ BitVec 64))
(declare-fun temp498_162 () (_ BitVec 64))
(declare-fun temp498_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp498_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp498_164 () (_ BitVec 64))
(declare-fun temp498_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp498_166 () (_ BitVec 64))
(declare-fun temp498_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp498_168 () (_ BitVec 64))
(declare-fun temp498_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp498_170 () (_ BitVec 64))
(declare-fun temp498_171 () (_ BitVec 64))
(declare-fun temp498_172 () (_ BitVec 64))
(declare-fun temp498_173 () (_ BitVec 64))
(declare-fun temp498_174 () (_ BitVec 64))
(declare-fun temp498_175 () (_ BitVec 64))
(declare-fun temp498_176 () (_ BitVec 64))
(declare-fun temp498_177 () (_ BitVec 64))
(declare-fun temp498_178 () (_ BitVec 64))
(declare-fun temp498_179 () (_ BitVec 64))
(declare-fun temp498_180 () (_ BitVec 64))
(declare-fun temp498_181 () (_ BitVec 64))
(declare-fun temp498_182 () (_ BitVec 64))
(declare-fun temp498_183 () (_ BitVec 64))
(declare-fun temp498_184 () (_ BitVec 64))
(declare-fun temp498_185 () (_ BitVec 64))
(declare-fun temp498_186 () (_ BitVec 64))
(declare-fun temp498_187 () (_ BitVec 64))
(declare-fun temp498_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp498_189 () (_ BitVec 64))
(declare-fun temp498_191 () (_ BitVec 64))
(declare-fun temp498_192 () (_ BitVec 64))
(declare-fun temp498_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp498_193 () (_ BitVec 64))
(declare-fun temp498_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp498_195 () (_ BitVec 64))
(declare-fun temp498_196 () (_ BitVec 64))
(declare-fun temp498_197 () (_ BitVec 64))
(declare-fun temp498_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp498_199 () (_ BitVec 64))
(declare-fun temp498_200 () (_ BitVec 64))
(declare-fun temp498_201 () (_ BitVec 64))
(declare-fun temp498_202 () (_ BitVec 64))
(declare-fun temp498_203 () (_ BitVec 64))
(declare-fun temp498_204 () (_ BitVec 64))
(declare-fun temp498_205 () (_ BitVec 64))
(declare-fun temp498_206 () (_ BitVec 64))
(declare-fun temp498_207 () (_ BitVec 64))
(declare-fun temp498_208 () (_ BitVec 64))
(declare-fun temp498_209 () (_ BitVec 64))
(declare-fun temp498_210 () (_ BitVec 64))
(declare-fun temp498_211 () (_ BitVec 64))
(declare-fun temp498_212 () (_ BitVec 64))
(declare-fun temp498_213 () (_ BitVec 64))
(declare-fun temp498_214 () (_ BitVec 64))
(declare-fun temp498_215 () (_ BitVec 64))
(declare-fun temp498_216 () (_ BitVec 64))
(declare-fun temp498_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp498_218 () (_ BitVec 64))
(declare-fun temp498_220 () (_ BitVec 64))
(declare-fun temp498_221 () (_ BitVec 64))
(declare-fun temp498_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp498_222 () (_ BitVec 64))
(declare-fun temp498_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp498_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp498_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp498_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp498_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp498_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp498_229 () (_ BitVec 64))
(declare-fun temp498_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp498_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp498_232 () (_ BitVec 64))
(declare-fun temp498_233 () (_ BitVec 64))
(declare-fun temp498_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp498_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp498_236 () (_ BitVec 64))
(declare-fun temp498_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp498_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp498_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp498_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp498_241 () (_ BitVec 64))
(declare-fun temp498_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp498_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp498_244 () (_ BitVec 64))
(assert (= temp498_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp498_1)))
(assert (= temp498_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp498_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_3 #x0000000000000000))
(assert (= var79869 temp498_3))
(assert (= temp498_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp498_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_5 #x0000000000000000))
(assert (= var79914 temp498_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp498_6 #x0000000000000000))
(assert (= temp498_7 temp498_6))
(assert (= temp498_8 (select ARGNAME_padding_NAMEEND_VAL temp498_7)))
(assert (= temp498_9 #x0000000000000001))
(assert (= temp498_10 temp498_9))
(assert (= temp498_11 (select ARGNAME_padding_NAMEEND_VAL temp498_10)))
(assert (= temp498_12 #x0000000000000002))
(assert (= temp498_13 temp498_12))
(assert (= temp498_14 (select ARGNAME_padding_NAMEEND_VAL temp498_13)))
(assert (= temp498_15 #x0000000000000003))
(assert (= temp498_16 temp498_15))
(assert (= temp498_17 (select ARGNAME_padding_NAMEEND_VAL temp498_16)))
(assert (= temp498_18 #x0000000000000004))
(assert (= temp498_19 temp498_18))
(assert (= temp498_20 (select ARGNAME_padding_NAMEEND_VAL temp498_19)))
(assert (= temp498_21 #x0000000000000005))
(assert (= temp498_22 temp498_21))
(assert (= temp498_23 (select ARGNAME_padding_NAMEEND_VAL temp498_22)))
(assert (= temp498_24 #x0000000000000000))
(assert (= temp498_25 #x0000000000000000))
(assert (= temp498_26 temp498_25))
(assert (= temp498_27 (select ARGNAME_padding_NAMEEND_VAL temp498_26)))
(assert (= temp498_28 #x0000000000000000))
(assert (= temp498_29 #x0000000000000001))
(assert (= temp498_30 temp498_29))
(assert (= temp498_31 (select ARGNAME_padding_NAMEEND_VAL temp498_30)))
(assert (= temp498_32 #x0000000000000000))
(assert (= temp498_33 #x0000000000000002))
(assert (= temp498_34 temp498_33))
(assert (= temp498_35 (select ARGNAME_padding_NAMEEND_VAL temp498_34)))
(assert (= temp498_36 #x0000000000000000))
(assert (= temp498_37 #x0000000000000003))
(assert (= temp498_38 temp498_37))
(assert (= temp498_39 (select ARGNAME_padding_NAMEEND_VAL temp498_38)))
(assert (= temp498_40 #x0000000000000000))
(assert (= temp498_41 #x0000000000000004))
(assert (= temp498_42 temp498_41))
(assert (= temp498_43 (select ARGNAME_padding_NAMEEND_VAL temp498_42)))
(assert (= temp498_44 #x0000000000000000))
(assert (= temp498_45 #x0000000000000005))
(assert (= temp498_46 temp498_45))
(assert (= temp498_47 (select ARGNAME_padding_NAMEEND_VAL temp498_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp498_27 temp498_24)
             (bvslt temp498_31 temp498_28)
             (bvslt temp498_35 temp498_32)
             (bvslt temp498_39 temp498_36)
             (bvslt temp498_43 temp498_40)
             (bvslt temp498_47 temp498_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_48 #x0000000000000000))
(assert (= var1322786 temp498_48))
(assert (= temp498_49 #x0000000000000000))
(assert (= temp498_50 temp498_49))
(assert (= temp498_51 (select ARGNAME_output_padding_NAMEEND_VAL temp498_50)))
(assert (= temp498_52 #x0000000000000001))
(assert (= temp498_53 temp498_52))
(assert (= temp498_54 (select ARGNAME_output_padding_NAMEEND_VAL temp498_53)))
(assert (= temp498_55 #x0000000000000002))
(assert (= temp498_56 temp498_55))
(assert (= temp498_57 (select ARGNAME_output_padding_NAMEEND_VAL temp498_56)))
(assert (= temp498_58 #x0000000000000003))
(assert (= temp498_59 temp498_58))
(assert (= temp498_60 (select ARGNAME_output_padding_NAMEEND_VAL temp498_59)))
(assert (= temp498_61 #x0000000000000004))
(assert (= temp498_62 temp498_61))
(assert (= temp498_63 (select ARGNAME_output_padding_NAMEEND_VAL temp498_62)))
(assert (= temp498_64 #x0000000000000005))
(assert (= temp498_65 temp498_64))
(assert (= temp498_66 (select ARGNAME_output_padding_NAMEEND_VAL temp498_65)))
(assert (= temp498_67 #x0000000000000000))
(assert (= temp498_68 #x0000000000000000))
(assert (= temp498_69 temp498_68))
(assert (= temp498_70 (select ARGNAME_output_padding_NAMEEND_VAL temp498_69)))
(assert (= temp498_71 #x0000000000000000))
(assert (= temp498_72 #x0000000000000001))
(assert (= temp498_73 temp498_72))
(assert (= temp498_74 (select ARGNAME_output_padding_NAMEEND_VAL temp498_73)))
(assert (= temp498_75 #x0000000000000000))
(assert (= temp498_76 #x0000000000000002))
(assert (= temp498_77 temp498_76))
(assert (= temp498_78 (select ARGNAME_output_padding_NAMEEND_VAL temp498_77)))
(assert (= temp498_79 #x0000000000000000))
(assert (= temp498_80 #x0000000000000003))
(assert (= temp498_81 temp498_80))
(assert (= temp498_82 (select ARGNAME_output_padding_NAMEEND_VAL temp498_81)))
(assert (= temp498_83 #x0000000000000000))
(assert (= temp498_84 #x0000000000000004))
(assert (= temp498_85 temp498_84))
(assert (= temp498_86 (select ARGNAME_output_padding_NAMEEND_VAL temp498_85)))
(assert (= temp498_87 #x0000000000000000))
(assert (= temp498_88 #x0000000000000005))
(assert (= temp498_89 temp498_88))
(assert (= temp498_90 (select ARGNAME_output_padding_NAMEEND_VAL temp498_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp498_70 temp498_67)
             (bvslt temp498_74 temp498_71)
             (bvslt temp498_78 temp498_75)
             (bvslt temp498_82 temp498_79)
             (bvslt temp498_86 temp498_83)
             (bvslt temp498_90 temp498_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_91 #x0000000000000000))
(assert (= var1322797 temp498_91))
(assert (= temp498_92 #x0000000000000000))
(assert (= temp498_93 temp498_92))
(assert (= temp498_94 (select ARGNAME_stride_NAMEEND_VAL temp498_93)))
(assert (= temp498_95 #x0000000000000001))
(assert (= temp498_96 temp498_95))
(assert (= temp498_97 (select ARGNAME_stride_NAMEEND_VAL temp498_96)))
(assert (= temp498_98 #x0000000000000002))
(assert (= temp498_99 temp498_98))
(assert (= temp498_100 (select ARGNAME_stride_NAMEEND_VAL temp498_99)))
(assert (= temp498_101 #x0000000000000003))
(assert (= temp498_102 temp498_101))
(assert (= temp498_103 (select ARGNAME_stride_NAMEEND_VAL temp498_102)))
(assert (= temp498_104 #x0000000000000004))
(assert (= temp498_105 temp498_104))
(assert (= temp498_106 (select ARGNAME_stride_NAMEEND_VAL temp498_105)))
(assert (= temp498_107 #x0000000000000005))
(assert (= temp498_108 temp498_107))
(assert (= temp498_109 (select ARGNAME_stride_NAMEEND_VAL temp498_108)))
(assert (= temp498_110 #x0000000000000000))
(assert (= temp498_111 #x0000000000000000))
(assert (= temp498_112 temp498_111))
(assert (= temp498_113 (select ARGNAME_stride_NAMEEND_VAL temp498_112)))
(assert (= temp498_114 #x0000000000000000))
(assert (= temp498_115 #x0000000000000001))
(assert (= temp498_116 temp498_115))
(assert (= temp498_117 (select ARGNAME_stride_NAMEEND_VAL temp498_116)))
(assert (= temp498_118 #x0000000000000000))
(assert (= temp498_119 #x0000000000000002))
(assert (= temp498_120 temp498_119))
(assert (= temp498_121 (select ARGNAME_stride_NAMEEND_VAL temp498_120)))
(assert (= temp498_122 #x0000000000000000))
(assert (= temp498_123 #x0000000000000003))
(assert (= temp498_124 temp498_123))
(assert (= temp498_125 (select ARGNAME_stride_NAMEEND_VAL temp498_124)))
(assert (= temp498_126 #x0000000000000000))
(assert (= temp498_127 #x0000000000000004))
(assert (= temp498_128 temp498_127))
(assert (= temp498_129 (select ARGNAME_stride_NAMEEND_VAL temp498_128)))
(assert (= temp498_130 #x0000000000000000))
(assert (= temp498_131 #x0000000000000005))
(assert (= temp498_132 temp498_131))
(assert (= temp498_133 (select ARGNAME_stride_NAMEEND_VAL temp498_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp498_113 temp498_110)
             (bvsle temp498_117 temp498_114)
             (bvsle temp498_121 temp498_118)
             (bvsle temp498_125 temp498_122)
             (bvsle temp498_129 temp498_126)
             (bvsle temp498_133 temp498_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_134 #x0000000000000000))
(assert (= var1322807 temp498_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_135 #x0000000000000001))
(assert (= var1322819 temp498_135))
(assert (= temp498_136 #x0000000000000000))
(assert (= var1310898 temp498_136))
(assert (= temp498_137 #x0000000000000000))
(assert (= temp498_138 temp498_137))
(assert (= temp498_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_138)))
(assert (= temp498_140 #x0000000000000001))
(assert (= temp498_141 temp498_140))
(assert (= temp498_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_141)))
(assert (= temp498_143 #x0000000000000002))
(assert (= temp498_144 temp498_143))
(assert (= temp498_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_144)))
(assert (= temp498_146 #x0000000000000003))
(assert (= temp498_147 temp498_146))
(assert (= temp498_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_147)))
(assert (= temp498_149 #x0000000000000004))
(assert (= temp498_150 temp498_149))
(assert (= temp498_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_150)))
(assert (= temp498_152 #x0000000000000005))
(assert (= temp498_153 temp498_152))
(assert (= temp498_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_153)))
(assert (= temp498_156 var1310898))
(assert (= temp498_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_156)))
(assert (= temp498_155 temp498_157))
(assert (= var1322852
   (ite (bvslt temp498_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_158 #x0000000000000000))
(assert (= var1322852 temp498_158))
(assert (= temp498_159 #x0000000000000000))
(assert (= var1310898 temp498_159))
(assert (= temp498_161 var1310898))
(assert (= temp498_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_161)))
(assert (= temp498_160 temp498_162))
(assert (= var1322874 (bvsmod temp498_160 ARGNAME_groups_NAMEEND)))
(assert (= temp498_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp498_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp498_164 #x0000000000000001))
(assert (= var1322875 temp498_164))
(assert (= temp498_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp498_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_166 #x0000000000000001))
(assert (= var1322895 temp498_166))
(assert (= temp498_167 #x0000000000000001))
(assert (= var1311786 temp498_167))
(assert (= temp498_168 #x0000000000000000))
(assert (= temp498_169 temp498_168))
(assert (= temp498_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_169)))
(assert (= temp498_171 #x0000000000000001))
(assert (= temp498_172 temp498_171))
(assert (= temp498_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_172)))
(assert (= temp498_174 #x0000000000000002))
(assert (= temp498_175 temp498_174))
(assert (= temp498_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_175)))
(assert (= temp498_177 #x0000000000000003))
(assert (= temp498_178 temp498_177))
(assert (= temp498_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_178)))
(assert (= temp498_180 #x0000000000000004))
(assert (= temp498_181 temp498_180))
(assert (= temp498_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_181)))
(assert (= temp498_183 #x0000000000000005))
(assert (= temp498_184 temp498_183))
(assert (= temp498_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_184)))
(assert (= temp498_186 #x0000000000000000))
(assert (= temp498_187
   (ite (bvslt var1311786 temp498_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp498_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_187)))
(assert (= var1322903 temp498_188))
(assert (bvslt (ite (bvslt var1311786 temp498_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp498_189 #x0000000000000001))
(assert (= var1311786 temp498_189))
(assert (= temp498_191 var1311786))
(assert (= temp498_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_191)))
(assert (= temp498_190 temp498_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp498_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp498_193 #x0000000000000001))
(assert (= var1322908 temp498_193))
(assert (= temp498_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp498_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_195 #x0000000000000001))
(assert (= var1322975 temp498_195))
(assert (= temp498_196 #x0000000000000000))
(assert (= var1310898 temp498_196))
(assert (= temp498_197 #x0000000000000000))
(assert (= temp498_198 temp498_197))
(assert (= temp498_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp498_198)))
(assert (= temp498_200 #x0000000000000001))
(assert (= temp498_201 temp498_200))
(assert (= temp498_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp498_201)))
(assert (= temp498_203 #x0000000000000002))
(assert (= temp498_204 temp498_203))
(assert (= temp498_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp498_204)))
(assert (= temp498_206 #x0000000000000003))
(assert (= temp498_207 temp498_206))
(assert (= temp498_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp498_207)))
(assert (= temp498_209 #x0000000000000004))
(assert (= temp498_210 temp498_209))
(assert (= temp498_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp498_210)))
(assert (= temp498_212 #x0000000000000005))
(assert (= temp498_213 temp498_212))
(assert (= temp498_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp498_213)))
(assert (= temp498_215 #x0000000000000000))
(assert (= temp498_216
   (ite (bvslt var1310898 temp498_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp498_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp498_216)))
(assert (= var1322977 temp498_217))
(assert (bvslt (ite (bvslt var1310898 temp498_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp498_218 #x0000000000000000))
(assert (= var1310898 temp498_218))
(assert (= temp498_220 var1310898))
(assert (= temp498_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp498_220)))
(assert (= temp498_219 temp498_221))
(assert (= var1322980
   (ite (= var1322977 temp498_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp498_222 #x0000000000000001))
(assert (= var1322980 temp498_222))
(assert (= temp498_223 #x0000000000000002))
(assert (= var1848169 temp498_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp498_225 #x0000000000000001))
(assert (= var1323065 temp498_225))
(assert (= temp498_226 #x0000000000000001))
(assert (= var3486735 temp498_226))
(assert (= temp498_227 #x0000000000000001))
(assert (= var3814415 temp498_227))
(assert (= temp498_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp498_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_229 #x0000000000000001))
(assert (= var79986 temp498_229))
(assert (= temp498_230 #x0000000000000001))
(assert (= var80116 temp498_230))
(assert (= var4796905 var80116))
(assert (= temp498_231 #x0000000000000000))
(assert (= var4784306 temp498_231))
(assert (= temp498_232 #x0000000000000000))
(assert (= temp498_233
   (ite (bvslt var4784306 temp498_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp498_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_233)))
(assert (= var4796924 temp498_234))
(assert (bvslt (ite (bvslt var4784306 temp498_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp498_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp498_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp498_236 #x0000000000000001))
(assert (= var4796925 temp498_236))
(assert (= temp498_237 #x0000000000000000))
(assert (= var4996927 temp498_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp498_238 #x0000000000000002))
(assert (= var5125763 temp498_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_239 #x0000000000000000))
(assert (= var5191324 temp498_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp498_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp498_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_241 #x0000000000000001))
(assert (= var81342 temp498_241))
(assert (= temp498_242 #x0000000000000002))
(assert (= var5977731 temp498_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_243 #x0000000000000000))
(assert (= var6043292 temp498_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp498_244 #x0000000000000001))
(assert (= var79986 temp498_244))
(model-add temp498_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp498_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp498_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






