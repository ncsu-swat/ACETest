(declare-fun temp852_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp852_2 () (_ BitVec 64))
(declare-fun temp852_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp852_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp852_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp852_6 () (_ BitVec 64))
(declare-fun temp852_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp852_8 () (_ BitVec 64))
(declare-fun temp852_9 () (_ BitVec 64))
(declare-fun temp852_10 () (_ BitVec 64))
(declare-fun temp852_11 () (_ BitVec 64))
(declare-fun temp852_12 () (_ BitVec 64))
(declare-fun temp852_13 () (_ BitVec 64))
(declare-fun temp852_14 () (_ BitVec 64))
(declare-fun temp852_15 () (_ BitVec 64))
(declare-fun temp852_16 () (_ BitVec 64))
(declare-fun temp852_17 () (_ BitVec 64))
(declare-fun temp852_18 () (_ BitVec 64))
(declare-fun temp852_19 () (_ BitVec 64))
(declare-fun temp852_20 () (_ BitVec 64))
(declare-fun temp852_21 () (_ BitVec 64))
(declare-fun temp852_22 () (_ BitVec 64))
(declare-fun temp852_23 () (_ BitVec 64))
(declare-fun temp852_24 () (_ BitVec 64))
(declare-fun temp852_25 () (_ BitVec 64))
(declare-fun temp852_26 () (_ BitVec 64))
(declare-fun temp852_27 () (_ BitVec 64))
(declare-fun temp852_28 () (_ BitVec 64))
(declare-fun temp852_29 () (_ BitVec 64))
(declare-fun temp852_30 () (_ BitVec 64))
(declare-fun temp852_31 () (_ BitVec 64))
(declare-fun temp852_32 () (_ BitVec 64))
(declare-fun temp852_33 () (_ BitVec 64))
(declare-fun temp852_34 () (_ BitVec 64))
(declare-fun temp852_35 () (_ BitVec 64))
(declare-fun temp852_36 () (_ BitVec 64))
(declare-fun temp852_37 () (_ BitVec 64))
(declare-fun temp852_38 () (_ BitVec 64))
(declare-fun temp852_39 () (_ BitVec 64))
(declare-fun temp852_40 () (_ BitVec 64))
(declare-fun temp852_41 () (_ BitVec 64))
(declare-fun temp852_42 () (_ BitVec 64))
(declare-fun temp852_43 () (_ BitVec 64))
(declare-fun temp852_44 () (_ BitVec 64))
(declare-fun temp852_45 () (_ BitVec 64))
(declare-fun temp852_46 () (_ BitVec 64))
(declare-fun temp852_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp852_48 () (_ BitVec 64))
(declare-fun temp852_49 () (_ BitVec 64))
(declare-fun temp852_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp852_51 () (_ BitVec 64))
(declare-fun temp852_52 () (_ BitVec 64))
(declare-fun temp852_53 () (_ BitVec 64))
(declare-fun temp852_54 () (_ BitVec 64))
(declare-fun temp852_55 () (_ BitVec 64))
(declare-fun temp852_56 () (_ BitVec 64))
(declare-fun temp852_57 () (_ BitVec 64))
(declare-fun temp852_58 () (_ BitVec 64))
(declare-fun temp852_59 () (_ BitVec 64))
(declare-fun temp852_60 () (_ BitVec 64))
(declare-fun temp852_61 () (_ BitVec 64))
(declare-fun temp852_62 () (_ BitVec 64))
(declare-fun temp852_63 () (_ BitVec 64))
(declare-fun temp852_64 () (_ BitVec 64))
(declare-fun temp852_65 () (_ BitVec 64))
(declare-fun temp852_66 () (_ BitVec 64))
(declare-fun temp852_67 () (_ BitVec 64))
(declare-fun temp852_68 () (_ BitVec 64))
(declare-fun temp852_69 () (_ BitVec 64))
(declare-fun temp852_70 () (_ BitVec 64))
(declare-fun temp852_71 () (_ BitVec 64))
(declare-fun temp852_72 () (_ BitVec 64))
(declare-fun temp852_73 () (_ BitVec 64))
(declare-fun temp852_74 () (_ BitVec 64))
(declare-fun temp852_75 () (_ BitVec 64))
(declare-fun temp852_76 () (_ BitVec 64))
(declare-fun temp852_77 () (_ BitVec 64))
(declare-fun temp852_78 () (_ BitVec 64))
(declare-fun temp852_79 () (_ BitVec 64))
(declare-fun temp852_80 () (_ BitVec 64))
(declare-fun temp852_81 () (_ BitVec 64))
(declare-fun temp852_82 () (_ BitVec 64))
(declare-fun temp852_83 () (_ BitVec 64))
(declare-fun temp852_84 () (_ BitVec 64))
(declare-fun temp852_85 () (_ BitVec 64))
(declare-fun temp852_86 () (_ BitVec 64))
(declare-fun temp852_87 () (_ BitVec 64))
(declare-fun temp852_88 () (_ BitVec 64))
(declare-fun temp852_89 () (_ BitVec 64))
(declare-fun temp852_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp852_91 () (_ BitVec 64))
(declare-fun temp852_92 () (_ BitVec 64))
(declare-fun temp852_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp852_94 () (_ BitVec 64))
(declare-fun temp852_95 () (_ BitVec 64))
(declare-fun temp852_96 () (_ BitVec 64))
(declare-fun temp852_97 () (_ BitVec 64))
(declare-fun temp852_98 () (_ BitVec 64))
(declare-fun temp852_99 () (_ BitVec 64))
(declare-fun temp852_100 () (_ BitVec 64))
(declare-fun temp852_101 () (_ BitVec 64))
(declare-fun temp852_102 () (_ BitVec 64))
(declare-fun temp852_103 () (_ BitVec 64))
(declare-fun temp852_104 () (_ BitVec 64))
(declare-fun temp852_105 () (_ BitVec 64))
(declare-fun temp852_106 () (_ BitVec 64))
(declare-fun temp852_107 () (_ BitVec 64))
(declare-fun temp852_108 () (_ BitVec 64))
(declare-fun temp852_109 () (_ BitVec 64))
(declare-fun temp852_110 () (_ BitVec 64))
(declare-fun temp852_111 () (_ BitVec 64))
(declare-fun temp852_112 () (_ BitVec 64))
(declare-fun temp852_113 () (_ BitVec 64))
(declare-fun temp852_114 () (_ BitVec 64))
(declare-fun temp852_115 () (_ BitVec 64))
(declare-fun temp852_116 () (_ BitVec 64))
(declare-fun temp852_117 () (_ BitVec 64))
(declare-fun temp852_118 () (_ BitVec 64))
(declare-fun temp852_119 () (_ BitVec 64))
(declare-fun temp852_120 () (_ BitVec 64))
(declare-fun temp852_121 () (_ BitVec 64))
(declare-fun temp852_122 () (_ BitVec 64))
(declare-fun temp852_123 () (_ BitVec 64))
(declare-fun temp852_124 () (_ BitVec 64))
(declare-fun temp852_125 () (_ BitVec 64))
(declare-fun temp852_126 () (_ BitVec 64))
(declare-fun temp852_127 () (_ BitVec 64))
(declare-fun temp852_128 () (_ BitVec 64))
(declare-fun temp852_129 () (_ BitVec 64))
(declare-fun temp852_130 () (_ BitVec 64))
(declare-fun temp852_131 () (_ BitVec 64))
(declare-fun temp852_132 () (_ BitVec 64))
(declare-fun temp852_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp852_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp852_135 () (_ BitVec 64))
(declare-fun temp852_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp852_137 () (_ BitVec 64))
(declare-fun temp852_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp852_139 () (_ BitVec 64))
(declare-fun temp852_140 () (_ BitVec 64))
(declare-fun temp852_141 () (_ BitVec 64))
(declare-fun temp852_142 () (_ BitVec 64))
(declare-fun temp852_143 () (_ BitVec 64))
(declare-fun temp852_144 () (_ BitVec 64))
(declare-fun temp852_145 () (_ BitVec 64))
(declare-fun temp852_146 () (_ BitVec 64))
(declare-fun temp852_147 () (_ BitVec 64))
(declare-fun temp852_148 () (_ BitVec 64))
(declare-fun temp852_149 () (_ BitVec 64))
(declare-fun temp852_150 () (_ BitVec 64))
(declare-fun temp852_151 () (_ BitVec 64))
(declare-fun temp852_152 () (_ BitVec 64))
(declare-fun temp852_153 () (_ BitVec 64))
(declare-fun temp852_154 () (_ BitVec 64))
(declare-fun temp852_156 () (_ BitVec 64))
(declare-fun temp852_157 () (_ BitVec 64))
(declare-fun temp852_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp852_158 () (_ BitVec 64))
(declare-fun temp852_159 () (_ BitVec 64))
(declare-fun temp852_161 () (_ BitVec 64))
(declare-fun temp852_162 () (_ BitVec 64))
(declare-fun temp852_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp852_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp852_164 () (_ BitVec 64))
(declare-fun temp852_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp852_166 () (_ BitVec 64))
(declare-fun temp852_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp852_168 () (_ BitVec 64))
(declare-fun temp852_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp852_170 () (_ BitVec 64))
(declare-fun temp852_171 () (_ BitVec 64))
(declare-fun temp852_172 () (_ BitVec 64))
(declare-fun temp852_173 () (_ BitVec 64))
(declare-fun temp852_174 () (_ BitVec 64))
(declare-fun temp852_175 () (_ BitVec 64))
(declare-fun temp852_176 () (_ BitVec 64))
(declare-fun temp852_177 () (_ BitVec 64))
(declare-fun temp852_178 () (_ BitVec 64))
(declare-fun temp852_179 () (_ BitVec 64))
(declare-fun temp852_180 () (_ BitVec 64))
(declare-fun temp852_181 () (_ BitVec 64))
(declare-fun temp852_182 () (_ BitVec 64))
(declare-fun temp852_183 () (_ BitVec 64))
(declare-fun temp852_184 () (_ BitVec 64))
(declare-fun temp852_185 () (_ BitVec 64))
(declare-fun temp852_186 () (_ BitVec 64))
(declare-fun temp852_187 () (_ BitVec 64))
(declare-fun temp852_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp852_189 () (_ BitVec 64))
(declare-fun temp852_191 () (_ BitVec 64))
(declare-fun temp852_192 () (_ BitVec 64))
(declare-fun temp852_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp852_193 () (_ BitVec 64))
(declare-fun temp852_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp852_195 () (_ BitVec 64))
(declare-fun temp852_196 () (_ BitVec 64))
(declare-fun temp852_197 () (_ BitVec 64))
(declare-fun temp852_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp852_199 () (_ BitVec 64))
(declare-fun temp852_200 () (_ BitVec 64))
(declare-fun temp852_201 () (_ BitVec 64))
(declare-fun temp852_202 () (_ BitVec 64))
(declare-fun temp852_203 () (_ BitVec 64))
(declare-fun temp852_204 () (_ BitVec 64))
(declare-fun temp852_205 () (_ BitVec 64))
(declare-fun temp852_206 () (_ BitVec 64))
(declare-fun temp852_207 () (_ BitVec 64))
(declare-fun temp852_208 () (_ BitVec 64))
(declare-fun temp852_209 () (_ BitVec 64))
(declare-fun temp852_210 () (_ BitVec 64))
(declare-fun temp852_211 () (_ BitVec 64))
(declare-fun temp852_212 () (_ BitVec 64))
(declare-fun temp852_213 () (_ BitVec 64))
(declare-fun temp852_214 () (_ BitVec 64))
(declare-fun temp852_215 () (_ BitVec 64))
(declare-fun temp852_216 () (_ BitVec 64))
(declare-fun temp852_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp852_218 () (_ BitVec 64))
(declare-fun temp852_220 () (_ BitVec 64))
(declare-fun temp852_221 () (_ BitVec 64))
(declare-fun temp852_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp852_222 () (_ BitVec 64))
(declare-fun temp852_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp852_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp852_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp852_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp852_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp852_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp852_229 () (_ BitVec 64))
(declare-fun temp852_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp852_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp852_232 () (_ BitVec 64))
(declare-fun temp852_233 () (_ BitVec 64))
(declare-fun temp852_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp852_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp852_236 () (_ BitVec 64))
(declare-fun temp852_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp852_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp852_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp852_240 () (_ BitVec 64))
(declare-fun temp852_241 () (_ BitVec 64))
(declare-fun var7156500 () (_ BitVec 64))
(declare-fun var7156467 () (_ BitVec 64))
(declare-fun var7025031 () (_ BitVec 64))
(declare-fun var7025027 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp852_242 () (_ BitVec 64))
(assert (= temp852_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp852_1)))
(assert (= temp852_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp852_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_3 #x0000000000000000))
(assert (= var79869 temp852_3))
(assert (= temp852_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp852_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_5 #x0000000000000000))
(assert (= var79914 temp852_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp852_6 #x0000000000000000))
(assert (= temp852_7 temp852_6))
(assert (= temp852_8 (select ARGNAME_padding_NAMEEND_VAL temp852_7)))
(assert (= temp852_9 #x0000000000000001))
(assert (= temp852_10 temp852_9))
(assert (= temp852_11 (select ARGNAME_padding_NAMEEND_VAL temp852_10)))
(assert (= temp852_12 #x0000000000000002))
(assert (= temp852_13 temp852_12))
(assert (= temp852_14 (select ARGNAME_padding_NAMEEND_VAL temp852_13)))
(assert (= temp852_15 #x0000000000000003))
(assert (= temp852_16 temp852_15))
(assert (= temp852_17 (select ARGNAME_padding_NAMEEND_VAL temp852_16)))
(assert (= temp852_18 #x0000000000000004))
(assert (= temp852_19 temp852_18))
(assert (= temp852_20 (select ARGNAME_padding_NAMEEND_VAL temp852_19)))
(assert (= temp852_21 #x0000000000000005))
(assert (= temp852_22 temp852_21))
(assert (= temp852_23 (select ARGNAME_padding_NAMEEND_VAL temp852_22)))
(assert (= temp852_24 #x0000000000000000))
(assert (= temp852_25 #x0000000000000000))
(assert (= temp852_26 temp852_25))
(assert (= temp852_27 (select ARGNAME_padding_NAMEEND_VAL temp852_26)))
(assert (= temp852_28 #x0000000000000000))
(assert (= temp852_29 #x0000000000000001))
(assert (= temp852_30 temp852_29))
(assert (= temp852_31 (select ARGNAME_padding_NAMEEND_VAL temp852_30)))
(assert (= temp852_32 #x0000000000000000))
(assert (= temp852_33 #x0000000000000002))
(assert (= temp852_34 temp852_33))
(assert (= temp852_35 (select ARGNAME_padding_NAMEEND_VAL temp852_34)))
(assert (= temp852_36 #x0000000000000000))
(assert (= temp852_37 #x0000000000000003))
(assert (= temp852_38 temp852_37))
(assert (= temp852_39 (select ARGNAME_padding_NAMEEND_VAL temp852_38)))
(assert (= temp852_40 #x0000000000000000))
(assert (= temp852_41 #x0000000000000004))
(assert (= temp852_42 temp852_41))
(assert (= temp852_43 (select ARGNAME_padding_NAMEEND_VAL temp852_42)))
(assert (= temp852_44 #x0000000000000000))
(assert (= temp852_45 #x0000000000000005))
(assert (= temp852_46 temp852_45))
(assert (= temp852_47 (select ARGNAME_padding_NAMEEND_VAL temp852_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp852_27 temp852_24)
             (bvslt temp852_31 temp852_28)
             (bvslt temp852_35 temp852_32)
             (bvslt temp852_39 temp852_36)
             (bvslt temp852_43 temp852_40)
             (bvslt temp852_47 temp852_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_48 #x0000000000000000))
(assert (= var1322786 temp852_48))
(assert (= temp852_49 #x0000000000000000))
(assert (= temp852_50 temp852_49))
(assert (= temp852_51 (select ARGNAME_output_padding_NAMEEND_VAL temp852_50)))
(assert (= temp852_52 #x0000000000000001))
(assert (= temp852_53 temp852_52))
(assert (= temp852_54 (select ARGNAME_output_padding_NAMEEND_VAL temp852_53)))
(assert (= temp852_55 #x0000000000000002))
(assert (= temp852_56 temp852_55))
(assert (= temp852_57 (select ARGNAME_output_padding_NAMEEND_VAL temp852_56)))
(assert (= temp852_58 #x0000000000000003))
(assert (= temp852_59 temp852_58))
(assert (= temp852_60 (select ARGNAME_output_padding_NAMEEND_VAL temp852_59)))
(assert (= temp852_61 #x0000000000000004))
(assert (= temp852_62 temp852_61))
(assert (= temp852_63 (select ARGNAME_output_padding_NAMEEND_VAL temp852_62)))
(assert (= temp852_64 #x0000000000000005))
(assert (= temp852_65 temp852_64))
(assert (= temp852_66 (select ARGNAME_output_padding_NAMEEND_VAL temp852_65)))
(assert (= temp852_67 #x0000000000000000))
(assert (= temp852_68 #x0000000000000000))
(assert (= temp852_69 temp852_68))
(assert (= temp852_70 (select ARGNAME_output_padding_NAMEEND_VAL temp852_69)))
(assert (= temp852_71 #x0000000000000000))
(assert (= temp852_72 #x0000000000000001))
(assert (= temp852_73 temp852_72))
(assert (= temp852_74 (select ARGNAME_output_padding_NAMEEND_VAL temp852_73)))
(assert (= temp852_75 #x0000000000000000))
(assert (= temp852_76 #x0000000000000002))
(assert (= temp852_77 temp852_76))
(assert (= temp852_78 (select ARGNAME_output_padding_NAMEEND_VAL temp852_77)))
(assert (= temp852_79 #x0000000000000000))
(assert (= temp852_80 #x0000000000000003))
(assert (= temp852_81 temp852_80))
(assert (= temp852_82 (select ARGNAME_output_padding_NAMEEND_VAL temp852_81)))
(assert (= temp852_83 #x0000000000000000))
(assert (= temp852_84 #x0000000000000004))
(assert (= temp852_85 temp852_84))
(assert (= temp852_86 (select ARGNAME_output_padding_NAMEEND_VAL temp852_85)))
(assert (= temp852_87 #x0000000000000000))
(assert (= temp852_88 #x0000000000000005))
(assert (= temp852_89 temp852_88))
(assert (= temp852_90 (select ARGNAME_output_padding_NAMEEND_VAL temp852_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp852_70 temp852_67)
             (bvslt temp852_74 temp852_71)
             (bvslt temp852_78 temp852_75)
             (bvslt temp852_82 temp852_79)
             (bvslt temp852_86 temp852_83)
             (bvslt temp852_90 temp852_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_91 #x0000000000000000))
(assert (= var1322797 temp852_91))
(assert (= temp852_92 #x0000000000000000))
(assert (= temp852_93 temp852_92))
(assert (= temp852_94 (select ARGNAME_stride_NAMEEND_VAL temp852_93)))
(assert (= temp852_95 #x0000000000000001))
(assert (= temp852_96 temp852_95))
(assert (= temp852_97 (select ARGNAME_stride_NAMEEND_VAL temp852_96)))
(assert (= temp852_98 #x0000000000000002))
(assert (= temp852_99 temp852_98))
(assert (= temp852_100 (select ARGNAME_stride_NAMEEND_VAL temp852_99)))
(assert (= temp852_101 #x0000000000000003))
(assert (= temp852_102 temp852_101))
(assert (= temp852_103 (select ARGNAME_stride_NAMEEND_VAL temp852_102)))
(assert (= temp852_104 #x0000000000000004))
(assert (= temp852_105 temp852_104))
(assert (= temp852_106 (select ARGNAME_stride_NAMEEND_VAL temp852_105)))
(assert (= temp852_107 #x0000000000000005))
(assert (= temp852_108 temp852_107))
(assert (= temp852_109 (select ARGNAME_stride_NAMEEND_VAL temp852_108)))
(assert (= temp852_110 #x0000000000000000))
(assert (= temp852_111 #x0000000000000000))
(assert (= temp852_112 temp852_111))
(assert (= temp852_113 (select ARGNAME_stride_NAMEEND_VAL temp852_112)))
(assert (= temp852_114 #x0000000000000000))
(assert (= temp852_115 #x0000000000000001))
(assert (= temp852_116 temp852_115))
(assert (= temp852_117 (select ARGNAME_stride_NAMEEND_VAL temp852_116)))
(assert (= temp852_118 #x0000000000000000))
(assert (= temp852_119 #x0000000000000002))
(assert (= temp852_120 temp852_119))
(assert (= temp852_121 (select ARGNAME_stride_NAMEEND_VAL temp852_120)))
(assert (= temp852_122 #x0000000000000000))
(assert (= temp852_123 #x0000000000000003))
(assert (= temp852_124 temp852_123))
(assert (= temp852_125 (select ARGNAME_stride_NAMEEND_VAL temp852_124)))
(assert (= temp852_126 #x0000000000000000))
(assert (= temp852_127 #x0000000000000004))
(assert (= temp852_128 temp852_127))
(assert (= temp852_129 (select ARGNAME_stride_NAMEEND_VAL temp852_128)))
(assert (= temp852_130 #x0000000000000000))
(assert (= temp852_131 #x0000000000000005))
(assert (= temp852_132 temp852_131))
(assert (= temp852_133 (select ARGNAME_stride_NAMEEND_VAL temp852_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp852_113 temp852_110)
             (bvsle temp852_117 temp852_114)
             (bvsle temp852_121 temp852_118)
             (bvsle temp852_125 temp852_122)
             (bvsle temp852_129 temp852_126)
             (bvsle temp852_133 temp852_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_134 #x0000000000000000))
(assert (= var1322807 temp852_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_135 #x0000000000000001))
(assert (= var1322819 temp852_135))
(assert (= temp852_136 #x0000000000000000))
(assert (= var1310898 temp852_136))
(assert (= temp852_137 #x0000000000000000))
(assert (= temp852_138 temp852_137))
(assert (= temp852_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_138)))
(assert (= temp852_140 #x0000000000000001))
(assert (= temp852_141 temp852_140))
(assert (= temp852_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_141)))
(assert (= temp852_143 #x0000000000000002))
(assert (= temp852_144 temp852_143))
(assert (= temp852_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_144)))
(assert (= temp852_146 #x0000000000000003))
(assert (= temp852_147 temp852_146))
(assert (= temp852_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_147)))
(assert (= temp852_149 #x0000000000000004))
(assert (= temp852_150 temp852_149))
(assert (= temp852_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_150)))
(assert (= temp852_152 #x0000000000000005))
(assert (= temp852_153 temp852_152))
(assert (= temp852_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_153)))
(assert (= temp852_156 var1310898))
(assert (= temp852_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_156)))
(assert (= temp852_155 temp852_157))
(assert (= var1322852
   (ite (bvslt temp852_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_158 #x0000000000000000))
(assert (= var1322852 temp852_158))
(assert (= temp852_159 #x0000000000000000))
(assert (= var1310898 temp852_159))
(assert (= temp852_161 var1310898))
(assert (= temp852_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_161)))
(assert (= temp852_160 temp852_162))
(assert (= var1322874 (bvsmod temp852_160 ARGNAME_groups_NAMEEND)))
(assert (= temp852_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp852_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp852_164 #x0000000000000001))
(assert (= var1322875 temp852_164))
(assert (= temp852_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp852_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_166 #x0000000000000001))
(assert (= var1322895 temp852_166))
(assert (= temp852_167 #x0000000000000001))
(assert (= var1311786 temp852_167))
(assert (= temp852_168 #x0000000000000000))
(assert (= temp852_169 temp852_168))
(assert (= temp852_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp852_169)))
(assert (= temp852_171 #x0000000000000001))
(assert (= temp852_172 temp852_171))
(assert (= temp852_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp852_172)))
(assert (= temp852_174 #x0000000000000002))
(assert (= temp852_175 temp852_174))
(assert (= temp852_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp852_175)))
(assert (= temp852_177 #x0000000000000003))
(assert (= temp852_178 temp852_177))
(assert (= temp852_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp852_178)))
(assert (= temp852_180 #x0000000000000004))
(assert (= temp852_181 temp852_180))
(assert (= temp852_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp852_181)))
(assert (= temp852_183 #x0000000000000005))
(assert (= temp852_184 temp852_183))
(assert (= temp852_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp852_184)))
(assert (= temp852_186 #x0000000000000000))
(assert (= temp852_187
   (ite (bvslt var1311786 temp852_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp852_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp852_187)))
(assert (= var1322903 temp852_188))
(assert (bvslt (ite (bvslt var1311786 temp852_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp852_189 #x0000000000000001))
(assert (= var1311786 temp852_189))
(assert (= temp852_191 var1311786))
(assert (= temp852_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_191)))
(assert (= temp852_190 temp852_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp852_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp852_193 #x0000000000000001))
(assert (= var1322908 temp852_193))
(assert (= temp852_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp852_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_195 #x0000000000000001))
(assert (= var1322975 temp852_195))
(assert (= temp852_196 #x0000000000000000))
(assert (= var1310898 temp852_196))
(assert (= temp852_197 #x0000000000000000))
(assert (= temp852_198 temp852_197))
(assert (= temp852_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp852_198)))
(assert (= temp852_200 #x0000000000000001))
(assert (= temp852_201 temp852_200))
(assert (= temp852_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp852_201)))
(assert (= temp852_203 #x0000000000000002))
(assert (= temp852_204 temp852_203))
(assert (= temp852_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp852_204)))
(assert (= temp852_206 #x0000000000000003))
(assert (= temp852_207 temp852_206))
(assert (= temp852_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp852_207)))
(assert (= temp852_209 #x0000000000000004))
(assert (= temp852_210 temp852_209))
(assert (= temp852_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp852_210)))
(assert (= temp852_212 #x0000000000000005))
(assert (= temp852_213 temp852_212))
(assert (= temp852_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp852_213)))
(assert (= temp852_215 #x0000000000000000))
(assert (= temp852_216
   (ite (bvslt var1310898 temp852_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp852_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp852_216)))
(assert (= var1322977 temp852_217))
(assert (bvslt (ite (bvslt var1310898 temp852_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp852_218 #x0000000000000000))
(assert (= var1310898 temp852_218))
(assert (= temp852_220 var1310898))
(assert (= temp852_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp852_220)))
(assert (= temp852_219 temp852_221))
(assert (= var1322980
   (ite (= var1322977 temp852_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp852_222 #x0000000000000001))
(assert (= var1322980 temp852_222))
(assert (= temp852_223 #x0000000000000002))
(assert (= var1848169 temp852_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp852_225 #x0000000000000001))
(assert (= var1323065 temp852_225))
(assert (= temp852_226 #x0000000000000001))
(assert (= var3486735 temp852_226))
(assert (= temp852_227 #x0000000000000001))
(assert (= var3814415 temp852_227))
(assert (= temp852_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp852_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_229 #x0000000000000001))
(assert (= var79986 temp852_229))
(assert (= temp852_230 #x0000000000000001))
(assert (= var80116 temp852_230))
(assert (= var4796905 var80116))
(assert (= temp852_231 #x0000000000000000))
(assert (= var4784306 temp852_231))
(assert (= temp852_232 #x0000000000000000))
(assert (= temp852_233
   (ite (bvslt var4784306 temp852_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp852_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp852_233)))
(assert (= var4796924 temp852_234))
(assert (bvslt (ite (bvslt var4784306 temp852_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp852_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp852_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp852_236 #x0000000000000001))
(assert (= var4796925 temp852_236))
(assert (= temp852_237 #x0000000000000000))
(assert (= var4996927 temp852_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp852_238 #x0000000000000002))
(assert (= var5125763 temp852_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp852_239 #x0000000000000000))
(assert (= var5191324 temp852_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp852_240 #x0000000000000001))
(assert (= var79986 temp852_240))
(assert (= temp852_241 #x0000000000000000))
(assert (= var7156500 temp852_241))
(assert (= var7156467 var7156500))
(assert (= var7025031 var7156467))
(assert (= var7025027 var7025031))
(assert (= var81597 var7025027))
(assert (= temp852_242 #x0000000000000000))
(assert (= var81597 temp852_242))
(model-add temp852_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp852_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp852_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






