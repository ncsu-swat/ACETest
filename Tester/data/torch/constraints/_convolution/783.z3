(declare-fun temp1041_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1041_2 () (_ BitVec 64))
(declare-fun temp1041_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1041_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1041_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1041_6 () (_ BitVec 64))
(declare-fun temp1041_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1041_8 () (_ BitVec 64))
(declare-fun temp1041_9 () (_ BitVec 64))
(declare-fun temp1041_10 () (_ BitVec 64))
(declare-fun temp1041_11 () (_ BitVec 64))
(declare-fun temp1041_12 () (_ BitVec 64))
(declare-fun temp1041_13 () (_ BitVec 64))
(declare-fun temp1041_14 () (_ BitVec 64))
(declare-fun temp1041_15 () (_ BitVec 64))
(declare-fun temp1041_16 () (_ BitVec 64))
(declare-fun temp1041_17 () (_ BitVec 64))
(declare-fun temp1041_18 () (_ BitVec 64))
(declare-fun temp1041_19 () (_ BitVec 64))
(declare-fun temp1041_20 () (_ BitVec 64))
(declare-fun temp1041_21 () (_ BitVec 64))
(declare-fun temp1041_22 () (_ BitVec 64))
(declare-fun temp1041_23 () (_ BitVec 64))
(declare-fun temp1041_24 () (_ BitVec 64))
(declare-fun temp1041_25 () (_ BitVec 64))
(declare-fun temp1041_26 () (_ BitVec 64))
(declare-fun temp1041_27 () (_ BitVec 64))
(declare-fun temp1041_28 () (_ BitVec 64))
(declare-fun temp1041_29 () (_ BitVec 64))
(declare-fun temp1041_30 () (_ BitVec 64))
(declare-fun temp1041_31 () (_ BitVec 64))
(declare-fun temp1041_32 () (_ BitVec 64))
(declare-fun temp1041_33 () (_ BitVec 64))
(declare-fun temp1041_34 () (_ BitVec 64))
(declare-fun temp1041_35 () (_ BitVec 64))
(declare-fun temp1041_36 () (_ BitVec 64))
(declare-fun temp1041_37 () (_ BitVec 64))
(declare-fun temp1041_38 () (_ BitVec 64))
(declare-fun temp1041_39 () (_ BitVec 64))
(declare-fun temp1041_40 () (_ BitVec 64))
(declare-fun temp1041_41 () (_ BitVec 64))
(declare-fun temp1041_42 () (_ BitVec 64))
(declare-fun temp1041_43 () (_ BitVec 64))
(declare-fun temp1041_44 () (_ BitVec 64))
(declare-fun temp1041_45 () (_ BitVec 64))
(declare-fun temp1041_46 () (_ BitVec 64))
(declare-fun temp1041_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1041_48 () (_ BitVec 64))
(declare-fun temp1041_49 () (_ BitVec 64))
(declare-fun temp1041_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1041_51 () (_ BitVec 64))
(declare-fun temp1041_52 () (_ BitVec 64))
(declare-fun temp1041_53 () (_ BitVec 64))
(declare-fun temp1041_54 () (_ BitVec 64))
(declare-fun temp1041_55 () (_ BitVec 64))
(declare-fun temp1041_56 () (_ BitVec 64))
(declare-fun temp1041_57 () (_ BitVec 64))
(declare-fun temp1041_58 () (_ BitVec 64))
(declare-fun temp1041_59 () (_ BitVec 64))
(declare-fun temp1041_60 () (_ BitVec 64))
(declare-fun temp1041_61 () (_ BitVec 64))
(declare-fun temp1041_62 () (_ BitVec 64))
(declare-fun temp1041_63 () (_ BitVec 64))
(declare-fun temp1041_64 () (_ BitVec 64))
(declare-fun temp1041_65 () (_ BitVec 64))
(declare-fun temp1041_66 () (_ BitVec 64))
(declare-fun temp1041_67 () (_ BitVec 64))
(declare-fun temp1041_68 () (_ BitVec 64))
(declare-fun temp1041_69 () (_ BitVec 64))
(declare-fun temp1041_70 () (_ BitVec 64))
(declare-fun temp1041_71 () (_ BitVec 64))
(declare-fun temp1041_72 () (_ BitVec 64))
(declare-fun temp1041_73 () (_ BitVec 64))
(declare-fun temp1041_74 () (_ BitVec 64))
(declare-fun temp1041_75 () (_ BitVec 64))
(declare-fun temp1041_76 () (_ BitVec 64))
(declare-fun temp1041_77 () (_ BitVec 64))
(declare-fun temp1041_78 () (_ BitVec 64))
(declare-fun temp1041_79 () (_ BitVec 64))
(declare-fun temp1041_80 () (_ BitVec 64))
(declare-fun temp1041_81 () (_ BitVec 64))
(declare-fun temp1041_82 () (_ BitVec 64))
(declare-fun temp1041_83 () (_ BitVec 64))
(declare-fun temp1041_84 () (_ BitVec 64))
(declare-fun temp1041_85 () (_ BitVec 64))
(declare-fun temp1041_86 () (_ BitVec 64))
(declare-fun temp1041_87 () (_ BitVec 64))
(declare-fun temp1041_88 () (_ BitVec 64))
(declare-fun temp1041_89 () (_ BitVec 64))
(declare-fun temp1041_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1041_91 () (_ BitVec 64))
(declare-fun temp1041_92 () (_ BitVec 64))
(declare-fun temp1041_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1041_94 () (_ BitVec 64))
(declare-fun temp1041_95 () (_ BitVec 64))
(declare-fun temp1041_96 () (_ BitVec 64))
(declare-fun temp1041_97 () (_ BitVec 64))
(declare-fun temp1041_98 () (_ BitVec 64))
(declare-fun temp1041_99 () (_ BitVec 64))
(declare-fun temp1041_100 () (_ BitVec 64))
(declare-fun temp1041_101 () (_ BitVec 64))
(declare-fun temp1041_102 () (_ BitVec 64))
(declare-fun temp1041_103 () (_ BitVec 64))
(declare-fun temp1041_104 () (_ BitVec 64))
(declare-fun temp1041_105 () (_ BitVec 64))
(declare-fun temp1041_106 () (_ BitVec 64))
(declare-fun temp1041_107 () (_ BitVec 64))
(declare-fun temp1041_108 () (_ BitVec 64))
(declare-fun temp1041_109 () (_ BitVec 64))
(declare-fun temp1041_110 () (_ BitVec 64))
(declare-fun temp1041_111 () (_ BitVec 64))
(declare-fun temp1041_112 () (_ BitVec 64))
(declare-fun temp1041_113 () (_ BitVec 64))
(declare-fun temp1041_114 () (_ BitVec 64))
(declare-fun temp1041_115 () (_ BitVec 64))
(declare-fun temp1041_116 () (_ BitVec 64))
(declare-fun temp1041_117 () (_ BitVec 64))
(declare-fun temp1041_118 () (_ BitVec 64))
(declare-fun temp1041_119 () (_ BitVec 64))
(declare-fun temp1041_120 () (_ BitVec 64))
(declare-fun temp1041_121 () (_ BitVec 64))
(declare-fun temp1041_122 () (_ BitVec 64))
(declare-fun temp1041_123 () (_ BitVec 64))
(declare-fun temp1041_124 () (_ BitVec 64))
(declare-fun temp1041_125 () (_ BitVec 64))
(declare-fun temp1041_126 () (_ BitVec 64))
(declare-fun temp1041_127 () (_ BitVec 64))
(declare-fun temp1041_128 () (_ BitVec 64))
(declare-fun temp1041_129 () (_ BitVec 64))
(declare-fun temp1041_130 () (_ BitVec 64))
(declare-fun temp1041_131 () (_ BitVec 64))
(declare-fun temp1041_132 () (_ BitVec 64))
(declare-fun temp1041_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1041_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1041_135 () (_ BitVec 64))
(declare-fun temp1041_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1041_137 () (_ BitVec 64))
(declare-fun temp1041_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1041_139 () (_ BitVec 64))
(declare-fun temp1041_140 () (_ BitVec 64))
(declare-fun temp1041_141 () (_ BitVec 64))
(declare-fun temp1041_142 () (_ BitVec 64))
(declare-fun temp1041_143 () (_ BitVec 64))
(declare-fun temp1041_144 () (_ BitVec 64))
(declare-fun temp1041_145 () (_ BitVec 64))
(declare-fun temp1041_146 () (_ BitVec 64))
(declare-fun temp1041_147 () (_ BitVec 64))
(declare-fun temp1041_148 () (_ BitVec 64))
(declare-fun temp1041_149 () (_ BitVec 64))
(declare-fun temp1041_150 () (_ BitVec 64))
(declare-fun temp1041_151 () (_ BitVec 64))
(declare-fun temp1041_152 () (_ BitVec 64))
(declare-fun temp1041_153 () (_ BitVec 64))
(declare-fun temp1041_154 () (_ BitVec 64))
(declare-fun temp1041_156 () (_ BitVec 64))
(declare-fun temp1041_157 () (_ BitVec 64))
(declare-fun temp1041_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1041_158 () (_ BitVec 64))
(declare-fun temp1041_159 () (_ BitVec 64))
(declare-fun temp1041_161 () (_ BitVec 64))
(declare-fun temp1041_162 () (_ BitVec 64))
(declare-fun temp1041_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1041_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1041_164 () (_ BitVec 64))
(declare-fun temp1041_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1041_166 () (_ BitVec 64))
(declare-fun temp1041_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1041_168 () (_ BitVec 64))
(declare-fun temp1041_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1041_170 () (_ BitVec 64))
(declare-fun temp1041_171 () (_ BitVec 64))
(declare-fun temp1041_172 () (_ BitVec 64))
(declare-fun temp1041_173 () (_ BitVec 64))
(declare-fun temp1041_174 () (_ BitVec 64))
(declare-fun temp1041_175 () (_ BitVec 64))
(declare-fun temp1041_176 () (_ BitVec 64))
(declare-fun temp1041_177 () (_ BitVec 64))
(declare-fun temp1041_178 () (_ BitVec 64))
(declare-fun temp1041_179 () (_ BitVec 64))
(declare-fun temp1041_180 () (_ BitVec 64))
(declare-fun temp1041_181 () (_ BitVec 64))
(declare-fun temp1041_182 () (_ BitVec 64))
(declare-fun temp1041_183 () (_ BitVec 64))
(declare-fun temp1041_184 () (_ BitVec 64))
(declare-fun temp1041_185 () (_ BitVec 64))
(declare-fun temp1041_186 () (_ BitVec 64))
(declare-fun temp1041_187 () (_ BitVec 64))
(declare-fun temp1041_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1041_189 () (_ BitVec 64))
(declare-fun temp1041_191 () (_ BitVec 64))
(declare-fun temp1041_192 () (_ BitVec 64))
(declare-fun temp1041_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1041_193 () (_ BitVec 64))
(declare-fun temp1041_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1041_195 () (_ BitVec 64))
(declare-fun temp1041_196 () (_ BitVec 64))
(declare-fun temp1041_197 () (_ BitVec 64))
(declare-fun temp1041_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1041_199 () (_ BitVec 64))
(declare-fun temp1041_200 () (_ BitVec 64))
(declare-fun temp1041_201 () (_ BitVec 64))
(declare-fun temp1041_202 () (_ BitVec 64))
(declare-fun temp1041_203 () (_ BitVec 64))
(declare-fun temp1041_204 () (_ BitVec 64))
(declare-fun temp1041_205 () (_ BitVec 64))
(declare-fun temp1041_206 () (_ BitVec 64))
(declare-fun temp1041_207 () (_ BitVec 64))
(declare-fun temp1041_208 () (_ BitVec 64))
(declare-fun temp1041_209 () (_ BitVec 64))
(declare-fun temp1041_210 () (_ BitVec 64))
(declare-fun temp1041_211 () (_ BitVec 64))
(declare-fun temp1041_212 () (_ BitVec 64))
(declare-fun temp1041_213 () (_ BitVec 64))
(declare-fun temp1041_214 () (_ BitVec 64))
(declare-fun temp1041_215 () (_ BitVec 64))
(declare-fun temp1041_216 () (_ BitVec 64))
(declare-fun temp1041_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1041_218 () (_ BitVec 64))
(declare-fun temp1041_220 () (_ BitVec 64))
(declare-fun temp1041_221 () (_ BitVec 64))
(declare-fun temp1041_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1041_222 () (_ BitVec 64))
(declare-fun temp1041_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1041_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1041_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1041_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1041_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1041_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1041_229 () (_ BitVec 64))
(declare-fun temp1041_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1041_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1041_232 () (_ BitVec 64))
(declare-fun temp1041_233 () (_ BitVec 64))
(declare-fun temp1041_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1041_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1041_236 () (_ BitVec 64))
(declare-fun temp1041_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1041_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1041_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1041_240 () (_ BitVec 64))
(assert (= temp1041_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1041_1)))
(assert (= temp1041_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1041_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_3 #x0000000000000000))
(assert (= var79869 temp1041_3))
(assert (= temp1041_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1041_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_5 #x0000000000000000))
(assert (= var79914 temp1041_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1041_6 #x0000000000000000))
(assert (= temp1041_7 temp1041_6))
(assert (= temp1041_8 (select ARGNAME_padding_NAMEEND_VAL temp1041_7)))
(assert (= temp1041_9 #x0000000000000001))
(assert (= temp1041_10 temp1041_9))
(assert (= temp1041_11 (select ARGNAME_padding_NAMEEND_VAL temp1041_10)))
(assert (= temp1041_12 #x0000000000000002))
(assert (= temp1041_13 temp1041_12))
(assert (= temp1041_14 (select ARGNAME_padding_NAMEEND_VAL temp1041_13)))
(assert (= temp1041_15 #x0000000000000003))
(assert (= temp1041_16 temp1041_15))
(assert (= temp1041_17 (select ARGNAME_padding_NAMEEND_VAL temp1041_16)))
(assert (= temp1041_18 #x0000000000000004))
(assert (= temp1041_19 temp1041_18))
(assert (= temp1041_20 (select ARGNAME_padding_NAMEEND_VAL temp1041_19)))
(assert (= temp1041_21 #x0000000000000005))
(assert (= temp1041_22 temp1041_21))
(assert (= temp1041_23 (select ARGNAME_padding_NAMEEND_VAL temp1041_22)))
(assert (= temp1041_24 #x0000000000000000))
(assert (= temp1041_25 #x0000000000000000))
(assert (= temp1041_26 temp1041_25))
(assert (= temp1041_27 (select ARGNAME_padding_NAMEEND_VAL temp1041_26)))
(assert (= temp1041_28 #x0000000000000000))
(assert (= temp1041_29 #x0000000000000001))
(assert (= temp1041_30 temp1041_29))
(assert (= temp1041_31 (select ARGNAME_padding_NAMEEND_VAL temp1041_30)))
(assert (= temp1041_32 #x0000000000000000))
(assert (= temp1041_33 #x0000000000000002))
(assert (= temp1041_34 temp1041_33))
(assert (= temp1041_35 (select ARGNAME_padding_NAMEEND_VAL temp1041_34)))
(assert (= temp1041_36 #x0000000000000000))
(assert (= temp1041_37 #x0000000000000003))
(assert (= temp1041_38 temp1041_37))
(assert (= temp1041_39 (select ARGNAME_padding_NAMEEND_VAL temp1041_38)))
(assert (= temp1041_40 #x0000000000000000))
(assert (= temp1041_41 #x0000000000000004))
(assert (= temp1041_42 temp1041_41))
(assert (= temp1041_43 (select ARGNAME_padding_NAMEEND_VAL temp1041_42)))
(assert (= temp1041_44 #x0000000000000000))
(assert (= temp1041_45 #x0000000000000005))
(assert (= temp1041_46 temp1041_45))
(assert (= temp1041_47 (select ARGNAME_padding_NAMEEND_VAL temp1041_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1041_27 temp1041_24)
             (bvslt temp1041_31 temp1041_28)
             (bvslt temp1041_35 temp1041_32)
             (bvslt temp1041_39 temp1041_36)
             (bvslt temp1041_43 temp1041_40)
             (bvslt temp1041_47 temp1041_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_48 #x0000000000000000))
(assert (= var1322786 temp1041_48))
(assert (= temp1041_49 #x0000000000000000))
(assert (= temp1041_50 temp1041_49))
(assert (= temp1041_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_50)))
(assert (= temp1041_52 #x0000000000000001))
(assert (= temp1041_53 temp1041_52))
(assert (= temp1041_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_53)))
(assert (= temp1041_55 #x0000000000000002))
(assert (= temp1041_56 temp1041_55))
(assert (= temp1041_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_56)))
(assert (= temp1041_58 #x0000000000000003))
(assert (= temp1041_59 temp1041_58))
(assert (= temp1041_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_59)))
(assert (= temp1041_61 #x0000000000000004))
(assert (= temp1041_62 temp1041_61))
(assert (= temp1041_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_62)))
(assert (= temp1041_64 #x0000000000000005))
(assert (= temp1041_65 temp1041_64))
(assert (= temp1041_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_65)))
(assert (= temp1041_67 #x0000000000000000))
(assert (= temp1041_68 #x0000000000000000))
(assert (= temp1041_69 temp1041_68))
(assert (= temp1041_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_69)))
(assert (= temp1041_71 #x0000000000000000))
(assert (= temp1041_72 #x0000000000000001))
(assert (= temp1041_73 temp1041_72))
(assert (= temp1041_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_73)))
(assert (= temp1041_75 #x0000000000000000))
(assert (= temp1041_76 #x0000000000000002))
(assert (= temp1041_77 temp1041_76))
(assert (= temp1041_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_77)))
(assert (= temp1041_79 #x0000000000000000))
(assert (= temp1041_80 #x0000000000000003))
(assert (= temp1041_81 temp1041_80))
(assert (= temp1041_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_81)))
(assert (= temp1041_83 #x0000000000000000))
(assert (= temp1041_84 #x0000000000000004))
(assert (= temp1041_85 temp1041_84))
(assert (= temp1041_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_85)))
(assert (= temp1041_87 #x0000000000000000))
(assert (= temp1041_88 #x0000000000000005))
(assert (= temp1041_89 temp1041_88))
(assert (= temp1041_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1041_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1041_70 temp1041_67)
             (bvslt temp1041_74 temp1041_71)
             (bvslt temp1041_78 temp1041_75)
             (bvslt temp1041_82 temp1041_79)
             (bvslt temp1041_86 temp1041_83)
             (bvslt temp1041_90 temp1041_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_91 #x0000000000000000))
(assert (= var1322797 temp1041_91))
(assert (= temp1041_92 #x0000000000000000))
(assert (= temp1041_93 temp1041_92))
(assert (= temp1041_94 (select ARGNAME_stride_NAMEEND_VAL temp1041_93)))
(assert (= temp1041_95 #x0000000000000001))
(assert (= temp1041_96 temp1041_95))
(assert (= temp1041_97 (select ARGNAME_stride_NAMEEND_VAL temp1041_96)))
(assert (= temp1041_98 #x0000000000000002))
(assert (= temp1041_99 temp1041_98))
(assert (= temp1041_100 (select ARGNAME_stride_NAMEEND_VAL temp1041_99)))
(assert (= temp1041_101 #x0000000000000003))
(assert (= temp1041_102 temp1041_101))
(assert (= temp1041_103 (select ARGNAME_stride_NAMEEND_VAL temp1041_102)))
(assert (= temp1041_104 #x0000000000000004))
(assert (= temp1041_105 temp1041_104))
(assert (= temp1041_106 (select ARGNAME_stride_NAMEEND_VAL temp1041_105)))
(assert (= temp1041_107 #x0000000000000005))
(assert (= temp1041_108 temp1041_107))
(assert (= temp1041_109 (select ARGNAME_stride_NAMEEND_VAL temp1041_108)))
(assert (= temp1041_110 #x0000000000000000))
(assert (= temp1041_111 #x0000000000000000))
(assert (= temp1041_112 temp1041_111))
(assert (= temp1041_113 (select ARGNAME_stride_NAMEEND_VAL temp1041_112)))
(assert (= temp1041_114 #x0000000000000000))
(assert (= temp1041_115 #x0000000000000001))
(assert (= temp1041_116 temp1041_115))
(assert (= temp1041_117 (select ARGNAME_stride_NAMEEND_VAL temp1041_116)))
(assert (= temp1041_118 #x0000000000000000))
(assert (= temp1041_119 #x0000000000000002))
(assert (= temp1041_120 temp1041_119))
(assert (= temp1041_121 (select ARGNAME_stride_NAMEEND_VAL temp1041_120)))
(assert (= temp1041_122 #x0000000000000000))
(assert (= temp1041_123 #x0000000000000003))
(assert (= temp1041_124 temp1041_123))
(assert (= temp1041_125 (select ARGNAME_stride_NAMEEND_VAL temp1041_124)))
(assert (= temp1041_126 #x0000000000000000))
(assert (= temp1041_127 #x0000000000000004))
(assert (= temp1041_128 temp1041_127))
(assert (= temp1041_129 (select ARGNAME_stride_NAMEEND_VAL temp1041_128)))
(assert (= temp1041_130 #x0000000000000000))
(assert (= temp1041_131 #x0000000000000005))
(assert (= temp1041_132 temp1041_131))
(assert (= temp1041_133 (select ARGNAME_stride_NAMEEND_VAL temp1041_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1041_113 temp1041_110)
             (bvsle temp1041_117 temp1041_114)
             (bvsle temp1041_121 temp1041_118)
             (bvsle temp1041_125 temp1041_122)
             (bvsle temp1041_129 temp1041_126)
             (bvsle temp1041_133 temp1041_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_134 #x0000000000000000))
(assert (= var1322807 temp1041_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_135 #x0000000000000001))
(assert (= var1322819 temp1041_135))
(assert (= temp1041_136 #x0000000000000000))
(assert (= var1310898 temp1041_136))
(assert (= temp1041_137 #x0000000000000000))
(assert (= temp1041_138 temp1041_137))
(assert (= temp1041_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_138)))
(assert (= temp1041_140 #x0000000000000001))
(assert (= temp1041_141 temp1041_140))
(assert (= temp1041_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_141)))
(assert (= temp1041_143 #x0000000000000002))
(assert (= temp1041_144 temp1041_143))
(assert (= temp1041_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_144)))
(assert (= temp1041_146 #x0000000000000003))
(assert (= temp1041_147 temp1041_146))
(assert (= temp1041_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_147)))
(assert (= temp1041_149 #x0000000000000004))
(assert (= temp1041_150 temp1041_149))
(assert (= temp1041_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_150)))
(assert (= temp1041_152 #x0000000000000005))
(assert (= temp1041_153 temp1041_152))
(assert (= temp1041_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_153)))
(assert (= temp1041_156 var1310898))
(assert (= temp1041_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_156)))
(assert (= temp1041_155 temp1041_157))
(assert (= var1322852
   (ite (bvslt temp1041_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_158 #x0000000000000000))
(assert (= var1322852 temp1041_158))
(assert (= temp1041_159 #x0000000000000000))
(assert (= var1310898 temp1041_159))
(assert (= temp1041_161 var1310898))
(assert (= temp1041_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_161)))
(assert (= temp1041_160 temp1041_162))
(assert (= var1322874 (bvsmod temp1041_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1041_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1041_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1041_164 #x0000000000000001))
(assert (= var1322875 temp1041_164))
(assert (= temp1041_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1041_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_166 #x0000000000000001))
(assert (= var1322895 temp1041_166))
(assert (= temp1041_167 #x0000000000000001))
(assert (= var1311786 temp1041_167))
(assert (= temp1041_168 #x0000000000000000))
(assert (= temp1041_169 temp1041_168))
(assert (= temp1041_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_169)))
(assert (= temp1041_171 #x0000000000000001))
(assert (= temp1041_172 temp1041_171))
(assert (= temp1041_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_172)))
(assert (= temp1041_174 #x0000000000000002))
(assert (= temp1041_175 temp1041_174))
(assert (= temp1041_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_175)))
(assert (= temp1041_177 #x0000000000000003))
(assert (= temp1041_178 temp1041_177))
(assert (= temp1041_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_178)))
(assert (= temp1041_180 #x0000000000000004))
(assert (= temp1041_181 temp1041_180))
(assert (= temp1041_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_181)))
(assert (= temp1041_183 #x0000000000000005))
(assert (= temp1041_184 temp1041_183))
(assert (= temp1041_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_184)))
(assert (= temp1041_186 #x0000000000000000))
(assert (= temp1041_187
   (ite (bvslt var1311786 temp1041_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1041_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_187)))
(assert (= var1322903 temp1041_188))
(assert (bvslt (ite (bvslt var1311786 temp1041_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1041_189 #x0000000000000001))
(assert (= var1311786 temp1041_189))
(assert (= temp1041_191 var1311786))
(assert (= temp1041_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_191)))
(assert (= temp1041_190 temp1041_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1041_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1041_193 #x0000000000000001))
(assert (= var1322908 temp1041_193))
(assert (= temp1041_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1041_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_195 #x0000000000000001))
(assert (= var1322975 temp1041_195))
(assert (= temp1041_196 #x0000000000000000))
(assert (= var1310898 temp1041_196))
(assert (= temp1041_197 #x0000000000000000))
(assert (= temp1041_198 temp1041_197))
(assert (= temp1041_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1041_198)))
(assert (= temp1041_200 #x0000000000000001))
(assert (= temp1041_201 temp1041_200))
(assert (= temp1041_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1041_201)))
(assert (= temp1041_203 #x0000000000000002))
(assert (= temp1041_204 temp1041_203))
(assert (= temp1041_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1041_204)))
(assert (= temp1041_206 #x0000000000000003))
(assert (= temp1041_207 temp1041_206))
(assert (= temp1041_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1041_207)))
(assert (= temp1041_209 #x0000000000000004))
(assert (= temp1041_210 temp1041_209))
(assert (= temp1041_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1041_210)))
(assert (= temp1041_212 #x0000000000000005))
(assert (= temp1041_213 temp1041_212))
(assert (= temp1041_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1041_213)))
(assert (= temp1041_215 #x0000000000000000))
(assert (= temp1041_216
   (ite (bvslt var1310898 temp1041_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1041_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1041_216)))
(assert (= var1322977 temp1041_217))
(assert (bvslt (ite (bvslt var1310898 temp1041_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1041_218 #x0000000000000000))
(assert (= var1310898 temp1041_218))
(assert (= temp1041_220 var1310898))
(assert (= temp1041_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1041_220)))
(assert (= temp1041_219 temp1041_221))
(assert (= var1322980
   (ite (= var1322977 temp1041_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1041_222 #x0000000000000001))
(assert (= var1322980 temp1041_222))
(assert (= temp1041_223 #x0000000000000002))
(assert (= var1848169 temp1041_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1041_225 #x0000000000000001))
(assert (= var1323065 temp1041_225))
(assert (= temp1041_226 #x0000000000000001))
(assert (= var3486735 temp1041_226))
(assert (= temp1041_227 #x0000000000000001))
(assert (= var3814415 temp1041_227))
(assert (= temp1041_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1041_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_229 #x0000000000000001))
(assert (= var79986 temp1041_229))
(assert (= temp1041_230 #x0000000000000001))
(assert (= var80116 temp1041_230))
(assert (= var4796905 var80116))
(assert (= temp1041_231 #x0000000000000000))
(assert (= var4784306 temp1041_231))
(assert (= temp1041_232 #x0000000000000000))
(assert (= temp1041_233
   (ite (bvslt var4784306 temp1041_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1041_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_233)))
(assert (= var4796924 temp1041_234))
(assert (bvslt (ite (bvslt var4784306 temp1041_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1041_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1041_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1041_236 #x0000000000000001))
(assert (= var4796925 temp1041_236))
(assert (= temp1041_237 #x0000000000000000))
(assert (= var4996927 temp1041_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1041_238 #x0000000000000002))
(assert (= var5125763 temp1041_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_239 #x0000000000000000))
(assert (= var5191324 temp1041_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1041_240 #x0000000000000001))
(assert (= var79986 temp1041_240))
(model-add temp1041_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1041_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1041_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






