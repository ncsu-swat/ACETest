(declare-fun temp706_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp706_2 () (_ BitVec 64))
(declare-fun temp706_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp706_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp706_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp706_6 () (_ BitVec 64))
(declare-fun temp706_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp706_8 () (_ BitVec 64))
(declare-fun temp706_9 () (_ BitVec 64))
(declare-fun temp706_10 () (_ BitVec 64))
(declare-fun temp706_11 () (_ BitVec 64))
(declare-fun temp706_12 () (_ BitVec 64))
(declare-fun temp706_13 () (_ BitVec 64))
(declare-fun temp706_14 () (_ BitVec 64))
(declare-fun temp706_15 () (_ BitVec 64))
(declare-fun temp706_16 () (_ BitVec 64))
(declare-fun temp706_17 () (_ BitVec 64))
(declare-fun temp706_18 () (_ BitVec 64))
(declare-fun temp706_19 () (_ BitVec 64))
(declare-fun temp706_20 () (_ BitVec 64))
(declare-fun temp706_21 () (_ BitVec 64))
(declare-fun temp706_22 () (_ BitVec 64))
(declare-fun temp706_23 () (_ BitVec 64))
(declare-fun temp706_24 () (_ BitVec 64))
(declare-fun temp706_25 () (_ BitVec 64))
(declare-fun temp706_26 () (_ BitVec 64))
(declare-fun temp706_27 () (_ BitVec 64))
(declare-fun temp706_28 () (_ BitVec 64))
(declare-fun temp706_29 () (_ BitVec 64))
(declare-fun temp706_30 () (_ BitVec 64))
(declare-fun temp706_31 () (_ BitVec 64))
(declare-fun temp706_32 () (_ BitVec 64))
(declare-fun temp706_33 () (_ BitVec 64))
(declare-fun temp706_34 () (_ BitVec 64))
(declare-fun temp706_35 () (_ BitVec 64))
(declare-fun temp706_36 () (_ BitVec 64))
(declare-fun temp706_37 () (_ BitVec 64))
(declare-fun temp706_38 () (_ BitVec 64))
(declare-fun temp706_39 () (_ BitVec 64))
(declare-fun temp706_40 () (_ BitVec 64))
(declare-fun temp706_41 () (_ BitVec 64))
(declare-fun temp706_42 () (_ BitVec 64))
(declare-fun temp706_43 () (_ BitVec 64))
(declare-fun temp706_44 () (_ BitVec 64))
(declare-fun temp706_45 () (_ BitVec 64))
(declare-fun temp706_46 () (_ BitVec 64))
(declare-fun temp706_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp706_48 () (_ BitVec 64))
(declare-fun temp706_49 () (_ BitVec 64))
(declare-fun temp706_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp706_51 () (_ BitVec 64))
(declare-fun temp706_52 () (_ BitVec 64))
(declare-fun temp706_53 () (_ BitVec 64))
(declare-fun temp706_54 () (_ BitVec 64))
(declare-fun temp706_55 () (_ BitVec 64))
(declare-fun temp706_56 () (_ BitVec 64))
(declare-fun temp706_57 () (_ BitVec 64))
(declare-fun temp706_58 () (_ BitVec 64))
(declare-fun temp706_59 () (_ BitVec 64))
(declare-fun temp706_60 () (_ BitVec 64))
(declare-fun temp706_61 () (_ BitVec 64))
(declare-fun temp706_62 () (_ BitVec 64))
(declare-fun temp706_63 () (_ BitVec 64))
(declare-fun temp706_64 () (_ BitVec 64))
(declare-fun temp706_65 () (_ BitVec 64))
(declare-fun temp706_66 () (_ BitVec 64))
(declare-fun temp706_67 () (_ BitVec 64))
(declare-fun temp706_68 () (_ BitVec 64))
(declare-fun temp706_69 () (_ BitVec 64))
(declare-fun temp706_70 () (_ BitVec 64))
(declare-fun temp706_71 () (_ BitVec 64))
(declare-fun temp706_72 () (_ BitVec 64))
(declare-fun temp706_73 () (_ BitVec 64))
(declare-fun temp706_74 () (_ BitVec 64))
(declare-fun temp706_75 () (_ BitVec 64))
(declare-fun temp706_76 () (_ BitVec 64))
(declare-fun temp706_77 () (_ BitVec 64))
(declare-fun temp706_78 () (_ BitVec 64))
(declare-fun temp706_79 () (_ BitVec 64))
(declare-fun temp706_80 () (_ BitVec 64))
(declare-fun temp706_81 () (_ BitVec 64))
(declare-fun temp706_82 () (_ BitVec 64))
(declare-fun temp706_83 () (_ BitVec 64))
(declare-fun temp706_84 () (_ BitVec 64))
(declare-fun temp706_85 () (_ BitVec 64))
(declare-fun temp706_86 () (_ BitVec 64))
(declare-fun temp706_87 () (_ BitVec 64))
(declare-fun temp706_88 () (_ BitVec 64))
(declare-fun temp706_89 () (_ BitVec 64))
(declare-fun temp706_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp706_91 () (_ BitVec 64))
(declare-fun temp706_92 () (_ BitVec 64))
(declare-fun temp706_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp706_94 () (_ BitVec 64))
(declare-fun temp706_95 () (_ BitVec 64))
(declare-fun temp706_96 () (_ BitVec 64))
(declare-fun temp706_97 () (_ BitVec 64))
(declare-fun temp706_98 () (_ BitVec 64))
(declare-fun temp706_99 () (_ BitVec 64))
(declare-fun temp706_100 () (_ BitVec 64))
(declare-fun temp706_101 () (_ BitVec 64))
(declare-fun temp706_102 () (_ BitVec 64))
(declare-fun temp706_103 () (_ BitVec 64))
(declare-fun temp706_104 () (_ BitVec 64))
(declare-fun temp706_105 () (_ BitVec 64))
(declare-fun temp706_106 () (_ BitVec 64))
(declare-fun temp706_107 () (_ BitVec 64))
(declare-fun temp706_108 () (_ BitVec 64))
(declare-fun temp706_109 () (_ BitVec 64))
(declare-fun temp706_110 () (_ BitVec 64))
(declare-fun temp706_111 () (_ BitVec 64))
(declare-fun temp706_112 () (_ BitVec 64))
(declare-fun temp706_113 () (_ BitVec 64))
(declare-fun temp706_114 () (_ BitVec 64))
(declare-fun temp706_115 () (_ BitVec 64))
(declare-fun temp706_116 () (_ BitVec 64))
(declare-fun temp706_117 () (_ BitVec 64))
(declare-fun temp706_118 () (_ BitVec 64))
(declare-fun temp706_119 () (_ BitVec 64))
(declare-fun temp706_120 () (_ BitVec 64))
(declare-fun temp706_121 () (_ BitVec 64))
(declare-fun temp706_122 () (_ BitVec 64))
(declare-fun temp706_123 () (_ BitVec 64))
(declare-fun temp706_124 () (_ BitVec 64))
(declare-fun temp706_125 () (_ BitVec 64))
(declare-fun temp706_126 () (_ BitVec 64))
(declare-fun temp706_127 () (_ BitVec 64))
(declare-fun temp706_128 () (_ BitVec 64))
(declare-fun temp706_129 () (_ BitVec 64))
(declare-fun temp706_130 () (_ BitVec 64))
(declare-fun temp706_131 () (_ BitVec 64))
(declare-fun temp706_132 () (_ BitVec 64))
(declare-fun temp706_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp706_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp706_135 () (_ BitVec 64))
(declare-fun temp706_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp706_137 () (_ BitVec 64))
(declare-fun temp706_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp706_139 () (_ BitVec 64))
(declare-fun temp706_140 () (_ BitVec 64))
(declare-fun temp706_141 () (_ BitVec 64))
(declare-fun temp706_142 () (_ BitVec 64))
(declare-fun temp706_143 () (_ BitVec 64))
(declare-fun temp706_144 () (_ BitVec 64))
(declare-fun temp706_145 () (_ BitVec 64))
(declare-fun temp706_146 () (_ BitVec 64))
(declare-fun temp706_147 () (_ BitVec 64))
(declare-fun temp706_148 () (_ BitVec 64))
(declare-fun temp706_149 () (_ BitVec 64))
(declare-fun temp706_150 () (_ BitVec 64))
(declare-fun temp706_151 () (_ BitVec 64))
(declare-fun temp706_152 () (_ BitVec 64))
(declare-fun temp706_153 () (_ BitVec 64))
(declare-fun temp706_154 () (_ BitVec 64))
(declare-fun temp706_156 () (_ BitVec 64))
(declare-fun temp706_157 () (_ BitVec 64))
(declare-fun temp706_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp706_158 () (_ BitVec 64))
(declare-fun temp706_159 () (_ BitVec 64))
(declare-fun temp706_161 () (_ BitVec 64))
(declare-fun temp706_162 () (_ BitVec 64))
(declare-fun temp706_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp706_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp706_164 () (_ BitVec 64))
(declare-fun temp706_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp706_166 () (_ BitVec 64))
(declare-fun temp706_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp706_168 () (_ BitVec 64))
(declare-fun temp706_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp706_170 () (_ BitVec 64))
(declare-fun temp706_171 () (_ BitVec 64))
(declare-fun temp706_172 () (_ BitVec 64))
(declare-fun temp706_173 () (_ BitVec 64))
(declare-fun temp706_174 () (_ BitVec 64))
(declare-fun temp706_175 () (_ BitVec 64))
(declare-fun temp706_176 () (_ BitVec 64))
(declare-fun temp706_177 () (_ BitVec 64))
(declare-fun temp706_178 () (_ BitVec 64))
(declare-fun temp706_179 () (_ BitVec 64))
(declare-fun temp706_180 () (_ BitVec 64))
(declare-fun temp706_181 () (_ BitVec 64))
(declare-fun temp706_182 () (_ BitVec 64))
(declare-fun temp706_183 () (_ BitVec 64))
(declare-fun temp706_184 () (_ BitVec 64))
(declare-fun temp706_185 () (_ BitVec 64))
(declare-fun temp706_186 () (_ BitVec 64))
(declare-fun temp706_187 () (_ BitVec 64))
(declare-fun temp706_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp706_189 () (_ BitVec 64))
(declare-fun temp706_191 () (_ BitVec 64))
(declare-fun temp706_192 () (_ BitVec 64))
(declare-fun temp706_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp706_193 () (_ BitVec 64))
(declare-fun temp706_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp706_195 () (_ BitVec 64))
(declare-fun temp706_196 () (_ BitVec 64))
(declare-fun temp706_197 () (_ BitVec 64))
(declare-fun temp706_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp706_199 () (_ BitVec 64))
(declare-fun temp706_200 () (_ BitVec 64))
(declare-fun temp706_201 () (_ BitVec 64))
(declare-fun temp706_202 () (_ BitVec 64))
(declare-fun temp706_203 () (_ BitVec 64))
(declare-fun temp706_204 () (_ BitVec 64))
(declare-fun temp706_205 () (_ BitVec 64))
(declare-fun temp706_206 () (_ BitVec 64))
(declare-fun temp706_207 () (_ BitVec 64))
(declare-fun temp706_208 () (_ BitVec 64))
(declare-fun temp706_209 () (_ BitVec 64))
(declare-fun temp706_210 () (_ BitVec 64))
(declare-fun temp706_211 () (_ BitVec 64))
(declare-fun temp706_212 () (_ BitVec 64))
(declare-fun temp706_213 () (_ BitVec 64))
(declare-fun temp706_214 () (_ BitVec 64))
(declare-fun temp706_215 () (_ BitVec 64))
(declare-fun temp706_216 () (_ BitVec 64))
(declare-fun temp706_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp706_218 () (_ BitVec 64))
(declare-fun temp706_220 () (_ BitVec 64))
(declare-fun temp706_221 () (_ BitVec 64))
(declare-fun temp706_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp706_222 () (_ BitVec 64))
(declare-fun temp706_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp706_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp706_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp706_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp706_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp706_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp706_229 () (_ BitVec 64))
(declare-fun temp706_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp706_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp706_232 () (_ BitVec 64))
(declare-fun temp706_233 () (_ BitVec 64))
(declare-fun temp706_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp706_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp706_236 () (_ BitVec 64))
(declare-fun temp706_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp706_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp706_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp706_241 () (_ BitVec 64))
(declare-fun temp706_240 () (_ BitVec 64))
(declare-fun temp706_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp706_243 () (_ BitVec 64))
(declare-fun temp706_244 () (_ BitVec 64))
(declare-fun temp706_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp706_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp706_247 () (_ BitVec 64))
(declare-fun temp706_249 () (_ BitVec 64))
(declare-fun temp706_248 () (_ BitVec 64))
(declare-fun temp706_250 () (_ BitVec 64))
(assert (= temp706_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp706_1)))
(assert (= temp706_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp706_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_3 #x0000000000000000))
(assert (= var79869 temp706_3))
(assert (= temp706_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp706_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_5 #x0000000000000000))
(assert (= var79914 temp706_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp706_6 #x0000000000000000))
(assert (= temp706_7 temp706_6))
(assert (= temp706_8 (select ARGNAME_padding_NAMEEND_VAL temp706_7)))
(assert (= temp706_9 #x0000000000000001))
(assert (= temp706_10 temp706_9))
(assert (= temp706_11 (select ARGNAME_padding_NAMEEND_VAL temp706_10)))
(assert (= temp706_12 #x0000000000000002))
(assert (= temp706_13 temp706_12))
(assert (= temp706_14 (select ARGNAME_padding_NAMEEND_VAL temp706_13)))
(assert (= temp706_15 #x0000000000000003))
(assert (= temp706_16 temp706_15))
(assert (= temp706_17 (select ARGNAME_padding_NAMEEND_VAL temp706_16)))
(assert (= temp706_18 #x0000000000000004))
(assert (= temp706_19 temp706_18))
(assert (= temp706_20 (select ARGNAME_padding_NAMEEND_VAL temp706_19)))
(assert (= temp706_21 #x0000000000000005))
(assert (= temp706_22 temp706_21))
(assert (= temp706_23 (select ARGNAME_padding_NAMEEND_VAL temp706_22)))
(assert (= temp706_24 #x0000000000000000))
(assert (= temp706_25 #x0000000000000000))
(assert (= temp706_26 temp706_25))
(assert (= temp706_27 (select ARGNAME_padding_NAMEEND_VAL temp706_26)))
(assert (= temp706_28 #x0000000000000000))
(assert (= temp706_29 #x0000000000000001))
(assert (= temp706_30 temp706_29))
(assert (= temp706_31 (select ARGNAME_padding_NAMEEND_VAL temp706_30)))
(assert (= temp706_32 #x0000000000000000))
(assert (= temp706_33 #x0000000000000002))
(assert (= temp706_34 temp706_33))
(assert (= temp706_35 (select ARGNAME_padding_NAMEEND_VAL temp706_34)))
(assert (= temp706_36 #x0000000000000000))
(assert (= temp706_37 #x0000000000000003))
(assert (= temp706_38 temp706_37))
(assert (= temp706_39 (select ARGNAME_padding_NAMEEND_VAL temp706_38)))
(assert (= temp706_40 #x0000000000000000))
(assert (= temp706_41 #x0000000000000004))
(assert (= temp706_42 temp706_41))
(assert (= temp706_43 (select ARGNAME_padding_NAMEEND_VAL temp706_42)))
(assert (= temp706_44 #x0000000000000000))
(assert (= temp706_45 #x0000000000000005))
(assert (= temp706_46 temp706_45))
(assert (= temp706_47 (select ARGNAME_padding_NAMEEND_VAL temp706_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp706_27 temp706_24)
             (bvslt temp706_31 temp706_28)
             (bvslt temp706_35 temp706_32)
             (bvslt temp706_39 temp706_36)
             (bvslt temp706_43 temp706_40)
             (bvslt temp706_47 temp706_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_48 #x0000000000000000))
(assert (= var1322786 temp706_48))
(assert (= temp706_49 #x0000000000000000))
(assert (= temp706_50 temp706_49))
(assert (= temp706_51 (select ARGNAME_output_padding_NAMEEND_VAL temp706_50)))
(assert (= temp706_52 #x0000000000000001))
(assert (= temp706_53 temp706_52))
(assert (= temp706_54 (select ARGNAME_output_padding_NAMEEND_VAL temp706_53)))
(assert (= temp706_55 #x0000000000000002))
(assert (= temp706_56 temp706_55))
(assert (= temp706_57 (select ARGNAME_output_padding_NAMEEND_VAL temp706_56)))
(assert (= temp706_58 #x0000000000000003))
(assert (= temp706_59 temp706_58))
(assert (= temp706_60 (select ARGNAME_output_padding_NAMEEND_VAL temp706_59)))
(assert (= temp706_61 #x0000000000000004))
(assert (= temp706_62 temp706_61))
(assert (= temp706_63 (select ARGNAME_output_padding_NAMEEND_VAL temp706_62)))
(assert (= temp706_64 #x0000000000000005))
(assert (= temp706_65 temp706_64))
(assert (= temp706_66 (select ARGNAME_output_padding_NAMEEND_VAL temp706_65)))
(assert (= temp706_67 #x0000000000000000))
(assert (= temp706_68 #x0000000000000000))
(assert (= temp706_69 temp706_68))
(assert (= temp706_70 (select ARGNAME_output_padding_NAMEEND_VAL temp706_69)))
(assert (= temp706_71 #x0000000000000000))
(assert (= temp706_72 #x0000000000000001))
(assert (= temp706_73 temp706_72))
(assert (= temp706_74 (select ARGNAME_output_padding_NAMEEND_VAL temp706_73)))
(assert (= temp706_75 #x0000000000000000))
(assert (= temp706_76 #x0000000000000002))
(assert (= temp706_77 temp706_76))
(assert (= temp706_78 (select ARGNAME_output_padding_NAMEEND_VAL temp706_77)))
(assert (= temp706_79 #x0000000000000000))
(assert (= temp706_80 #x0000000000000003))
(assert (= temp706_81 temp706_80))
(assert (= temp706_82 (select ARGNAME_output_padding_NAMEEND_VAL temp706_81)))
(assert (= temp706_83 #x0000000000000000))
(assert (= temp706_84 #x0000000000000004))
(assert (= temp706_85 temp706_84))
(assert (= temp706_86 (select ARGNAME_output_padding_NAMEEND_VAL temp706_85)))
(assert (= temp706_87 #x0000000000000000))
(assert (= temp706_88 #x0000000000000005))
(assert (= temp706_89 temp706_88))
(assert (= temp706_90 (select ARGNAME_output_padding_NAMEEND_VAL temp706_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp706_70 temp706_67)
             (bvslt temp706_74 temp706_71)
             (bvslt temp706_78 temp706_75)
             (bvslt temp706_82 temp706_79)
             (bvslt temp706_86 temp706_83)
             (bvslt temp706_90 temp706_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_91 #x0000000000000000))
(assert (= var1322797 temp706_91))
(assert (= temp706_92 #x0000000000000000))
(assert (= temp706_93 temp706_92))
(assert (= temp706_94 (select ARGNAME_stride_NAMEEND_VAL temp706_93)))
(assert (= temp706_95 #x0000000000000001))
(assert (= temp706_96 temp706_95))
(assert (= temp706_97 (select ARGNAME_stride_NAMEEND_VAL temp706_96)))
(assert (= temp706_98 #x0000000000000002))
(assert (= temp706_99 temp706_98))
(assert (= temp706_100 (select ARGNAME_stride_NAMEEND_VAL temp706_99)))
(assert (= temp706_101 #x0000000000000003))
(assert (= temp706_102 temp706_101))
(assert (= temp706_103 (select ARGNAME_stride_NAMEEND_VAL temp706_102)))
(assert (= temp706_104 #x0000000000000004))
(assert (= temp706_105 temp706_104))
(assert (= temp706_106 (select ARGNAME_stride_NAMEEND_VAL temp706_105)))
(assert (= temp706_107 #x0000000000000005))
(assert (= temp706_108 temp706_107))
(assert (= temp706_109 (select ARGNAME_stride_NAMEEND_VAL temp706_108)))
(assert (= temp706_110 #x0000000000000000))
(assert (= temp706_111 #x0000000000000000))
(assert (= temp706_112 temp706_111))
(assert (= temp706_113 (select ARGNAME_stride_NAMEEND_VAL temp706_112)))
(assert (= temp706_114 #x0000000000000000))
(assert (= temp706_115 #x0000000000000001))
(assert (= temp706_116 temp706_115))
(assert (= temp706_117 (select ARGNAME_stride_NAMEEND_VAL temp706_116)))
(assert (= temp706_118 #x0000000000000000))
(assert (= temp706_119 #x0000000000000002))
(assert (= temp706_120 temp706_119))
(assert (= temp706_121 (select ARGNAME_stride_NAMEEND_VAL temp706_120)))
(assert (= temp706_122 #x0000000000000000))
(assert (= temp706_123 #x0000000000000003))
(assert (= temp706_124 temp706_123))
(assert (= temp706_125 (select ARGNAME_stride_NAMEEND_VAL temp706_124)))
(assert (= temp706_126 #x0000000000000000))
(assert (= temp706_127 #x0000000000000004))
(assert (= temp706_128 temp706_127))
(assert (= temp706_129 (select ARGNAME_stride_NAMEEND_VAL temp706_128)))
(assert (= temp706_130 #x0000000000000000))
(assert (= temp706_131 #x0000000000000005))
(assert (= temp706_132 temp706_131))
(assert (= temp706_133 (select ARGNAME_stride_NAMEEND_VAL temp706_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp706_113 temp706_110)
             (bvsle temp706_117 temp706_114)
             (bvsle temp706_121 temp706_118)
             (bvsle temp706_125 temp706_122)
             (bvsle temp706_129 temp706_126)
             (bvsle temp706_133 temp706_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_134 #x0000000000000000))
(assert (= var1322807 temp706_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_135 #x0000000000000001))
(assert (= var1322819 temp706_135))
(assert (= temp706_136 #x0000000000000000))
(assert (= var1310898 temp706_136))
(assert (= temp706_137 #x0000000000000000))
(assert (= temp706_138 temp706_137))
(assert (= temp706_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_138)))
(assert (= temp706_140 #x0000000000000001))
(assert (= temp706_141 temp706_140))
(assert (= temp706_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_141)))
(assert (= temp706_143 #x0000000000000002))
(assert (= temp706_144 temp706_143))
(assert (= temp706_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_144)))
(assert (= temp706_146 #x0000000000000003))
(assert (= temp706_147 temp706_146))
(assert (= temp706_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_147)))
(assert (= temp706_149 #x0000000000000004))
(assert (= temp706_150 temp706_149))
(assert (= temp706_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_150)))
(assert (= temp706_152 #x0000000000000005))
(assert (= temp706_153 temp706_152))
(assert (= temp706_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_153)))
(assert (= temp706_156 var1310898))
(assert (= temp706_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_156)))
(assert (= temp706_155 temp706_157))
(assert (= var1322852
   (ite (bvslt temp706_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_158 #x0000000000000000))
(assert (= var1322852 temp706_158))
(assert (= temp706_159 #x0000000000000000))
(assert (= var1310898 temp706_159))
(assert (= temp706_161 var1310898))
(assert (= temp706_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_161)))
(assert (= temp706_160 temp706_162))
(assert (= var1322874 (bvsmod temp706_160 ARGNAME_groups_NAMEEND)))
(assert (= temp706_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp706_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp706_164 #x0000000000000001))
(assert (= var1322875 temp706_164))
(assert (= temp706_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp706_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_166 #x0000000000000001))
(assert (= var1322895 temp706_166))
(assert (= temp706_167 #x0000000000000001))
(assert (= var1311786 temp706_167))
(assert (= temp706_168 #x0000000000000000))
(assert (= temp706_169 temp706_168))
(assert (= temp706_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp706_169)))
(assert (= temp706_171 #x0000000000000001))
(assert (= temp706_172 temp706_171))
(assert (= temp706_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp706_172)))
(assert (= temp706_174 #x0000000000000002))
(assert (= temp706_175 temp706_174))
(assert (= temp706_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp706_175)))
(assert (= temp706_177 #x0000000000000003))
(assert (= temp706_178 temp706_177))
(assert (= temp706_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp706_178)))
(assert (= temp706_180 #x0000000000000004))
(assert (= temp706_181 temp706_180))
(assert (= temp706_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp706_181)))
(assert (= temp706_183 #x0000000000000005))
(assert (= temp706_184 temp706_183))
(assert (= temp706_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp706_184)))
(assert (= temp706_186 #x0000000000000000))
(assert (= temp706_187
   (ite (bvslt var1311786 temp706_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp706_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp706_187)))
(assert (= var1322903 temp706_188))
(assert (bvslt (ite (bvslt var1311786 temp706_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp706_189 #x0000000000000001))
(assert (= var1311786 temp706_189))
(assert (= temp706_191 var1311786))
(assert (= temp706_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_191)))
(assert (= temp706_190 temp706_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp706_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp706_193 #x0000000000000001))
(assert (= var1322908 temp706_193))
(assert (= temp706_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp706_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_195 #x0000000000000001))
(assert (= var1322975 temp706_195))
(assert (= temp706_196 #x0000000000000000))
(assert (= var1310898 temp706_196))
(assert (= temp706_197 #x0000000000000000))
(assert (= temp706_198 temp706_197))
(assert (= temp706_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp706_198)))
(assert (= temp706_200 #x0000000000000001))
(assert (= temp706_201 temp706_200))
(assert (= temp706_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp706_201)))
(assert (= temp706_203 #x0000000000000002))
(assert (= temp706_204 temp706_203))
(assert (= temp706_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp706_204)))
(assert (= temp706_206 #x0000000000000003))
(assert (= temp706_207 temp706_206))
(assert (= temp706_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp706_207)))
(assert (= temp706_209 #x0000000000000004))
(assert (= temp706_210 temp706_209))
(assert (= temp706_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp706_210)))
(assert (= temp706_212 #x0000000000000005))
(assert (= temp706_213 temp706_212))
(assert (= temp706_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp706_213)))
(assert (= temp706_215 #x0000000000000000))
(assert (= temp706_216
   (ite (bvslt var1310898 temp706_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp706_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp706_216)))
(assert (= var1322977 temp706_217))
(assert (bvslt (ite (bvslt var1310898 temp706_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp706_218 #x0000000000000000))
(assert (= var1310898 temp706_218))
(assert (= temp706_220 var1310898))
(assert (= temp706_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp706_220)))
(assert (= temp706_219 temp706_221))
(assert (= var1322980
   (ite (= var1322977 temp706_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp706_222 #x0000000000000001))
(assert (= var1322980 temp706_222))
(assert (= temp706_223 #x0000000000000002))
(assert (= var1848169 temp706_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp706_225 #x0000000000000001))
(assert (= var1323065 temp706_225))
(assert (= temp706_226 #x0000000000000001))
(assert (= var3486735 temp706_226))
(assert (= temp706_227 #x0000000000000001))
(assert (= var3814415 temp706_227))
(assert (= temp706_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp706_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_229 #x0000000000000001))
(assert (= var79986 temp706_229))
(assert (= temp706_230 #x0000000000000001))
(assert (= var80116 temp706_230))
(assert (= var4796905 var80116))
(assert (= temp706_231 #x0000000000000000))
(assert (= var4784306 temp706_231))
(assert (= temp706_232 #x0000000000000000))
(assert (= temp706_233
   (ite (bvslt var4784306 temp706_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp706_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp706_233)))
(assert (= var4796924 temp706_234))
(assert (bvslt (ite (bvslt var4784306 temp706_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp706_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp706_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp706_236 #x0000000000000001))
(assert (= var4796925 temp706_236))
(assert (= temp706_237 #x0000000000000000))
(assert (= var4996927 temp706_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp706_238 #x0000000000000002))
(assert (= var5125763 temp706_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp706_239 #x0000000000000000))
(assert (= var5191324 temp706_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp706_241 #xffffffffffffffff))
(assert (= temp706_240 temp706_241))
(assert (= temp706_242 #x0000000000000001))
(assert (= var66602 temp706_242))
(assert (= temp706_243 #x0000000000000000))
(assert (= temp706_244
   (ite (bvslt var66602 temp706_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp706_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp706_244)))
(assert (= var80523 temp706_245))
(assert (bvslt (ite (bvslt var66602 temp706_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp706_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp706_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp706_247 #x0000000000000001))
(assert (= var80524 temp706_247))
(assert (= temp706_249 #xffffffffffffffff))
(assert (= temp706_248 temp706_249))
(assert (= temp706_250 #x0000000000000001))
(assert (= var79986 temp706_250))
(model-add temp706_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp706_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp706_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






