(declare-fun temp34_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp34_2 () (_ BitVec 64))
(declare-fun temp34_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp34_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp34_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp34_6 () (_ BitVec 64))
(declare-fun temp34_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp34_8 () (_ BitVec 64))
(declare-fun temp34_9 () (_ BitVec 64))
(declare-fun temp34_10 () (_ BitVec 64))
(declare-fun temp34_11 () (_ BitVec 64))
(declare-fun temp34_12 () (_ BitVec 64))
(declare-fun temp34_13 () (_ BitVec 64))
(declare-fun temp34_14 () (_ BitVec 64))
(declare-fun temp34_15 () (_ BitVec 64))
(declare-fun temp34_16 () (_ BitVec 64))
(declare-fun temp34_17 () (_ BitVec 64))
(declare-fun temp34_18 () (_ BitVec 64))
(declare-fun temp34_19 () (_ BitVec 64))
(declare-fun temp34_20 () (_ BitVec 64))
(declare-fun temp34_21 () (_ BitVec 64))
(declare-fun temp34_22 () (_ BitVec 64))
(declare-fun temp34_23 () (_ BitVec 64))
(declare-fun temp34_24 () (_ BitVec 64))
(declare-fun temp34_25 () (_ BitVec 64))
(declare-fun temp34_26 () (_ BitVec 64))
(declare-fun temp34_27 () (_ BitVec 64))
(declare-fun temp34_28 () (_ BitVec 64))
(declare-fun temp34_29 () (_ BitVec 64))
(declare-fun temp34_30 () (_ BitVec 64))
(declare-fun temp34_31 () (_ BitVec 64))
(declare-fun temp34_32 () (_ BitVec 64))
(declare-fun temp34_33 () (_ BitVec 64))
(declare-fun temp34_34 () (_ BitVec 64))
(declare-fun temp34_35 () (_ BitVec 64))
(declare-fun temp34_36 () (_ BitVec 64))
(declare-fun temp34_37 () (_ BitVec 64))
(declare-fun temp34_38 () (_ BitVec 64))
(declare-fun temp34_39 () (_ BitVec 64))
(declare-fun temp34_40 () (_ BitVec 64))
(declare-fun temp34_41 () (_ BitVec 64))
(declare-fun temp34_42 () (_ BitVec 64))
(declare-fun temp34_43 () (_ BitVec 64))
(declare-fun temp34_44 () (_ BitVec 64))
(declare-fun temp34_45 () (_ BitVec 64))
(declare-fun temp34_46 () (_ BitVec 64))
(declare-fun temp34_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp34_48 () (_ BitVec 64))
(declare-fun temp34_49 () (_ BitVec 64))
(declare-fun temp34_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp34_51 () (_ BitVec 64))
(declare-fun temp34_52 () (_ BitVec 64))
(declare-fun temp34_53 () (_ BitVec 64))
(declare-fun temp34_54 () (_ BitVec 64))
(declare-fun temp34_55 () (_ BitVec 64))
(declare-fun temp34_56 () (_ BitVec 64))
(declare-fun temp34_57 () (_ BitVec 64))
(declare-fun temp34_58 () (_ BitVec 64))
(declare-fun temp34_59 () (_ BitVec 64))
(declare-fun temp34_60 () (_ BitVec 64))
(declare-fun temp34_61 () (_ BitVec 64))
(declare-fun temp34_62 () (_ BitVec 64))
(declare-fun temp34_63 () (_ BitVec 64))
(declare-fun temp34_64 () (_ BitVec 64))
(declare-fun temp34_65 () (_ BitVec 64))
(declare-fun temp34_66 () (_ BitVec 64))
(declare-fun temp34_67 () (_ BitVec 64))
(declare-fun temp34_68 () (_ BitVec 64))
(declare-fun temp34_69 () (_ BitVec 64))
(declare-fun temp34_70 () (_ BitVec 64))
(declare-fun temp34_71 () (_ BitVec 64))
(declare-fun temp34_72 () (_ BitVec 64))
(declare-fun temp34_73 () (_ BitVec 64))
(declare-fun temp34_74 () (_ BitVec 64))
(declare-fun temp34_75 () (_ BitVec 64))
(declare-fun temp34_76 () (_ BitVec 64))
(declare-fun temp34_77 () (_ BitVec 64))
(declare-fun temp34_78 () (_ BitVec 64))
(declare-fun temp34_79 () (_ BitVec 64))
(declare-fun temp34_80 () (_ BitVec 64))
(declare-fun temp34_81 () (_ BitVec 64))
(declare-fun temp34_82 () (_ BitVec 64))
(declare-fun temp34_83 () (_ BitVec 64))
(declare-fun temp34_84 () (_ BitVec 64))
(declare-fun temp34_85 () (_ BitVec 64))
(declare-fun temp34_86 () (_ BitVec 64))
(declare-fun temp34_87 () (_ BitVec 64))
(declare-fun temp34_88 () (_ BitVec 64))
(declare-fun temp34_89 () (_ BitVec 64))
(declare-fun temp34_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp34_91 () (_ BitVec 64))
(declare-fun temp34_92 () (_ BitVec 64))
(declare-fun temp34_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp34_94 () (_ BitVec 64))
(declare-fun temp34_95 () (_ BitVec 64))
(declare-fun temp34_96 () (_ BitVec 64))
(declare-fun temp34_97 () (_ BitVec 64))
(declare-fun temp34_98 () (_ BitVec 64))
(declare-fun temp34_99 () (_ BitVec 64))
(declare-fun temp34_100 () (_ BitVec 64))
(declare-fun temp34_101 () (_ BitVec 64))
(declare-fun temp34_102 () (_ BitVec 64))
(declare-fun temp34_103 () (_ BitVec 64))
(declare-fun temp34_104 () (_ BitVec 64))
(declare-fun temp34_105 () (_ BitVec 64))
(declare-fun temp34_106 () (_ BitVec 64))
(declare-fun temp34_107 () (_ BitVec 64))
(declare-fun temp34_108 () (_ BitVec 64))
(declare-fun temp34_109 () (_ BitVec 64))
(declare-fun temp34_110 () (_ BitVec 64))
(declare-fun temp34_111 () (_ BitVec 64))
(declare-fun temp34_112 () (_ BitVec 64))
(declare-fun temp34_113 () (_ BitVec 64))
(declare-fun temp34_114 () (_ BitVec 64))
(declare-fun temp34_115 () (_ BitVec 64))
(declare-fun temp34_116 () (_ BitVec 64))
(declare-fun temp34_117 () (_ BitVec 64))
(declare-fun temp34_118 () (_ BitVec 64))
(declare-fun temp34_119 () (_ BitVec 64))
(declare-fun temp34_120 () (_ BitVec 64))
(declare-fun temp34_121 () (_ BitVec 64))
(declare-fun temp34_122 () (_ BitVec 64))
(declare-fun temp34_123 () (_ BitVec 64))
(declare-fun temp34_124 () (_ BitVec 64))
(declare-fun temp34_125 () (_ BitVec 64))
(declare-fun temp34_126 () (_ BitVec 64))
(declare-fun temp34_127 () (_ BitVec 64))
(declare-fun temp34_128 () (_ BitVec 64))
(declare-fun temp34_129 () (_ BitVec 64))
(declare-fun temp34_130 () (_ BitVec 64))
(declare-fun temp34_131 () (_ BitVec 64))
(declare-fun temp34_132 () (_ BitVec 64))
(declare-fun temp34_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp34_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp34_135 () (_ BitVec 64))
(declare-fun temp34_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp34_137 () (_ BitVec 64))
(declare-fun temp34_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp34_139 () (_ BitVec 64))
(declare-fun temp34_140 () (_ BitVec 64))
(declare-fun temp34_141 () (_ BitVec 64))
(declare-fun temp34_142 () (_ BitVec 64))
(declare-fun temp34_143 () (_ BitVec 64))
(declare-fun temp34_144 () (_ BitVec 64))
(declare-fun temp34_145 () (_ BitVec 64))
(declare-fun temp34_146 () (_ BitVec 64))
(declare-fun temp34_147 () (_ BitVec 64))
(declare-fun temp34_148 () (_ BitVec 64))
(declare-fun temp34_149 () (_ BitVec 64))
(declare-fun temp34_150 () (_ BitVec 64))
(declare-fun temp34_151 () (_ BitVec 64))
(declare-fun temp34_152 () (_ BitVec 64))
(declare-fun temp34_153 () (_ BitVec 64))
(declare-fun temp34_154 () (_ BitVec 64))
(declare-fun temp34_156 () (_ BitVec 64))
(declare-fun temp34_157 () (_ BitVec 64))
(declare-fun temp34_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp34_158 () (_ BitVec 64))
(declare-fun temp34_159 () (_ BitVec 64))
(declare-fun temp34_161 () (_ BitVec 64))
(declare-fun temp34_162 () (_ BitVec 64))
(declare-fun temp34_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp34_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp34_164 () (_ BitVec 64))
(declare-fun temp34_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp34_166 () (_ BitVec 64))
(declare-fun temp34_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp34_168 () (_ BitVec 64))
(declare-fun temp34_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp34_170 () (_ BitVec 64))
(declare-fun temp34_171 () (_ BitVec 64))
(declare-fun temp34_172 () (_ BitVec 64))
(declare-fun temp34_173 () (_ BitVec 64))
(declare-fun temp34_174 () (_ BitVec 64))
(declare-fun temp34_175 () (_ BitVec 64))
(declare-fun temp34_176 () (_ BitVec 64))
(declare-fun temp34_177 () (_ BitVec 64))
(declare-fun temp34_178 () (_ BitVec 64))
(declare-fun temp34_179 () (_ BitVec 64))
(declare-fun temp34_180 () (_ BitVec 64))
(declare-fun temp34_181 () (_ BitVec 64))
(declare-fun temp34_182 () (_ BitVec 64))
(declare-fun temp34_183 () (_ BitVec 64))
(declare-fun temp34_184 () (_ BitVec 64))
(declare-fun temp34_185 () (_ BitVec 64))
(declare-fun temp34_186 () (_ BitVec 64))
(declare-fun temp34_187 () (_ BitVec 64))
(declare-fun temp34_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp34_189 () (_ BitVec 64))
(declare-fun temp34_191 () (_ BitVec 64))
(declare-fun temp34_192 () (_ BitVec 64))
(declare-fun temp34_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp34_193 () (_ BitVec 64))
(declare-fun temp34_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp34_195 () (_ BitVec 64))
(declare-fun temp34_196 () (_ BitVec 64))
(declare-fun temp34_197 () (_ BitVec 64))
(declare-fun temp34_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp34_199 () (_ BitVec 64))
(declare-fun temp34_200 () (_ BitVec 64))
(declare-fun temp34_201 () (_ BitVec 64))
(declare-fun temp34_202 () (_ BitVec 64))
(declare-fun temp34_203 () (_ BitVec 64))
(declare-fun temp34_204 () (_ BitVec 64))
(declare-fun temp34_205 () (_ BitVec 64))
(declare-fun temp34_206 () (_ BitVec 64))
(declare-fun temp34_207 () (_ BitVec 64))
(declare-fun temp34_208 () (_ BitVec 64))
(declare-fun temp34_209 () (_ BitVec 64))
(declare-fun temp34_210 () (_ BitVec 64))
(declare-fun temp34_211 () (_ BitVec 64))
(declare-fun temp34_212 () (_ BitVec 64))
(declare-fun temp34_213 () (_ BitVec 64))
(declare-fun temp34_214 () (_ BitVec 64))
(declare-fun temp34_215 () (_ BitVec 64))
(declare-fun temp34_216 () (_ BitVec 64))
(declare-fun temp34_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp34_218 () (_ BitVec 64))
(declare-fun temp34_220 () (_ BitVec 64))
(declare-fun temp34_221 () (_ BitVec 64))
(declare-fun temp34_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp34_222 () (_ BitVec 64))
(declare-fun temp34_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp34_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp34_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp34_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp34_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp34_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp34_229 () (_ BitVec 64))
(declare-fun temp34_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp34_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp34_232 () (_ BitVec 64))
(declare-fun temp34_233 () (_ BitVec 64))
(declare-fun temp34_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp34_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp34_236 () (_ BitVec 64))
(declare-fun temp34_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp34_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp34_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp34_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp34_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp34_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp34_244 () (_ BitVec 64))
(declare-fun temp34_243 () (_ BitVec 64))
(declare-fun temp34_245 () (_ BitVec 64))
(declare-fun var8130026 () (_ BitVec 64))
(declare-fun temp34_247 () (_ BitVec 64))
(declare-fun temp34_246 () (_ BitVec 64))
(declare-fun temp34_248 () (_ BitVec 64))
(assert (= temp34_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp34_1)))
(assert (= temp34_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp34_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_3 #x0000000000000000))
(assert (= var79869 temp34_3))
(assert (= temp34_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp34_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_5 #x0000000000000000))
(assert (= var79914 temp34_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp34_6 #x0000000000000000))
(assert (= temp34_7 temp34_6))
(assert (= temp34_8 (select ARGNAME_padding_NAMEEND_VAL temp34_7)))
(assert (= temp34_9 #x0000000000000001))
(assert (= temp34_10 temp34_9))
(assert (= temp34_11 (select ARGNAME_padding_NAMEEND_VAL temp34_10)))
(assert (= temp34_12 #x0000000000000002))
(assert (= temp34_13 temp34_12))
(assert (= temp34_14 (select ARGNAME_padding_NAMEEND_VAL temp34_13)))
(assert (= temp34_15 #x0000000000000003))
(assert (= temp34_16 temp34_15))
(assert (= temp34_17 (select ARGNAME_padding_NAMEEND_VAL temp34_16)))
(assert (= temp34_18 #x0000000000000004))
(assert (= temp34_19 temp34_18))
(assert (= temp34_20 (select ARGNAME_padding_NAMEEND_VAL temp34_19)))
(assert (= temp34_21 #x0000000000000005))
(assert (= temp34_22 temp34_21))
(assert (= temp34_23 (select ARGNAME_padding_NAMEEND_VAL temp34_22)))
(assert (= temp34_24 #x0000000000000000))
(assert (= temp34_25 #x0000000000000000))
(assert (= temp34_26 temp34_25))
(assert (= temp34_27 (select ARGNAME_padding_NAMEEND_VAL temp34_26)))
(assert (= temp34_28 #x0000000000000000))
(assert (= temp34_29 #x0000000000000001))
(assert (= temp34_30 temp34_29))
(assert (= temp34_31 (select ARGNAME_padding_NAMEEND_VAL temp34_30)))
(assert (= temp34_32 #x0000000000000000))
(assert (= temp34_33 #x0000000000000002))
(assert (= temp34_34 temp34_33))
(assert (= temp34_35 (select ARGNAME_padding_NAMEEND_VAL temp34_34)))
(assert (= temp34_36 #x0000000000000000))
(assert (= temp34_37 #x0000000000000003))
(assert (= temp34_38 temp34_37))
(assert (= temp34_39 (select ARGNAME_padding_NAMEEND_VAL temp34_38)))
(assert (= temp34_40 #x0000000000000000))
(assert (= temp34_41 #x0000000000000004))
(assert (= temp34_42 temp34_41))
(assert (= temp34_43 (select ARGNAME_padding_NAMEEND_VAL temp34_42)))
(assert (= temp34_44 #x0000000000000000))
(assert (= temp34_45 #x0000000000000005))
(assert (= temp34_46 temp34_45))
(assert (= temp34_47 (select ARGNAME_padding_NAMEEND_VAL temp34_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp34_27 temp34_24)
             (bvslt temp34_31 temp34_28)
             (bvslt temp34_35 temp34_32)
             (bvslt temp34_39 temp34_36)
             (bvslt temp34_43 temp34_40)
             (bvslt temp34_47 temp34_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_48 #x0000000000000000))
(assert (= var1322786 temp34_48))
(assert (= temp34_49 #x0000000000000000))
(assert (= temp34_50 temp34_49))
(assert (= temp34_51 (select ARGNAME_output_padding_NAMEEND_VAL temp34_50)))
(assert (= temp34_52 #x0000000000000001))
(assert (= temp34_53 temp34_52))
(assert (= temp34_54 (select ARGNAME_output_padding_NAMEEND_VAL temp34_53)))
(assert (= temp34_55 #x0000000000000002))
(assert (= temp34_56 temp34_55))
(assert (= temp34_57 (select ARGNAME_output_padding_NAMEEND_VAL temp34_56)))
(assert (= temp34_58 #x0000000000000003))
(assert (= temp34_59 temp34_58))
(assert (= temp34_60 (select ARGNAME_output_padding_NAMEEND_VAL temp34_59)))
(assert (= temp34_61 #x0000000000000004))
(assert (= temp34_62 temp34_61))
(assert (= temp34_63 (select ARGNAME_output_padding_NAMEEND_VAL temp34_62)))
(assert (= temp34_64 #x0000000000000005))
(assert (= temp34_65 temp34_64))
(assert (= temp34_66 (select ARGNAME_output_padding_NAMEEND_VAL temp34_65)))
(assert (= temp34_67 #x0000000000000000))
(assert (= temp34_68 #x0000000000000000))
(assert (= temp34_69 temp34_68))
(assert (= temp34_70 (select ARGNAME_output_padding_NAMEEND_VAL temp34_69)))
(assert (= temp34_71 #x0000000000000000))
(assert (= temp34_72 #x0000000000000001))
(assert (= temp34_73 temp34_72))
(assert (= temp34_74 (select ARGNAME_output_padding_NAMEEND_VAL temp34_73)))
(assert (= temp34_75 #x0000000000000000))
(assert (= temp34_76 #x0000000000000002))
(assert (= temp34_77 temp34_76))
(assert (= temp34_78 (select ARGNAME_output_padding_NAMEEND_VAL temp34_77)))
(assert (= temp34_79 #x0000000000000000))
(assert (= temp34_80 #x0000000000000003))
(assert (= temp34_81 temp34_80))
(assert (= temp34_82 (select ARGNAME_output_padding_NAMEEND_VAL temp34_81)))
(assert (= temp34_83 #x0000000000000000))
(assert (= temp34_84 #x0000000000000004))
(assert (= temp34_85 temp34_84))
(assert (= temp34_86 (select ARGNAME_output_padding_NAMEEND_VAL temp34_85)))
(assert (= temp34_87 #x0000000000000000))
(assert (= temp34_88 #x0000000000000005))
(assert (= temp34_89 temp34_88))
(assert (= temp34_90 (select ARGNAME_output_padding_NAMEEND_VAL temp34_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp34_70 temp34_67)
             (bvslt temp34_74 temp34_71)
             (bvslt temp34_78 temp34_75)
             (bvslt temp34_82 temp34_79)
             (bvslt temp34_86 temp34_83)
             (bvslt temp34_90 temp34_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_91 #x0000000000000000))
(assert (= var1322797 temp34_91))
(assert (= temp34_92 #x0000000000000000))
(assert (= temp34_93 temp34_92))
(assert (= temp34_94 (select ARGNAME_stride_NAMEEND_VAL temp34_93)))
(assert (= temp34_95 #x0000000000000001))
(assert (= temp34_96 temp34_95))
(assert (= temp34_97 (select ARGNAME_stride_NAMEEND_VAL temp34_96)))
(assert (= temp34_98 #x0000000000000002))
(assert (= temp34_99 temp34_98))
(assert (= temp34_100 (select ARGNAME_stride_NAMEEND_VAL temp34_99)))
(assert (= temp34_101 #x0000000000000003))
(assert (= temp34_102 temp34_101))
(assert (= temp34_103 (select ARGNAME_stride_NAMEEND_VAL temp34_102)))
(assert (= temp34_104 #x0000000000000004))
(assert (= temp34_105 temp34_104))
(assert (= temp34_106 (select ARGNAME_stride_NAMEEND_VAL temp34_105)))
(assert (= temp34_107 #x0000000000000005))
(assert (= temp34_108 temp34_107))
(assert (= temp34_109 (select ARGNAME_stride_NAMEEND_VAL temp34_108)))
(assert (= temp34_110 #x0000000000000000))
(assert (= temp34_111 #x0000000000000000))
(assert (= temp34_112 temp34_111))
(assert (= temp34_113 (select ARGNAME_stride_NAMEEND_VAL temp34_112)))
(assert (= temp34_114 #x0000000000000000))
(assert (= temp34_115 #x0000000000000001))
(assert (= temp34_116 temp34_115))
(assert (= temp34_117 (select ARGNAME_stride_NAMEEND_VAL temp34_116)))
(assert (= temp34_118 #x0000000000000000))
(assert (= temp34_119 #x0000000000000002))
(assert (= temp34_120 temp34_119))
(assert (= temp34_121 (select ARGNAME_stride_NAMEEND_VAL temp34_120)))
(assert (= temp34_122 #x0000000000000000))
(assert (= temp34_123 #x0000000000000003))
(assert (= temp34_124 temp34_123))
(assert (= temp34_125 (select ARGNAME_stride_NAMEEND_VAL temp34_124)))
(assert (= temp34_126 #x0000000000000000))
(assert (= temp34_127 #x0000000000000004))
(assert (= temp34_128 temp34_127))
(assert (= temp34_129 (select ARGNAME_stride_NAMEEND_VAL temp34_128)))
(assert (= temp34_130 #x0000000000000000))
(assert (= temp34_131 #x0000000000000005))
(assert (= temp34_132 temp34_131))
(assert (= temp34_133 (select ARGNAME_stride_NAMEEND_VAL temp34_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp34_113 temp34_110)
             (bvsle temp34_117 temp34_114)
             (bvsle temp34_121 temp34_118)
             (bvsle temp34_125 temp34_122)
             (bvsle temp34_129 temp34_126)
             (bvsle temp34_133 temp34_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_134 #x0000000000000000))
(assert (= var1322807 temp34_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_135 #x0000000000000001))
(assert (= var1322819 temp34_135))
(assert (= temp34_136 #x0000000000000000))
(assert (= var1310898 temp34_136))
(assert (= temp34_137 #x0000000000000000))
(assert (= temp34_138 temp34_137))
(assert (= temp34_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_138)))
(assert (= temp34_140 #x0000000000000001))
(assert (= temp34_141 temp34_140))
(assert (= temp34_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_141)))
(assert (= temp34_143 #x0000000000000002))
(assert (= temp34_144 temp34_143))
(assert (= temp34_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_144)))
(assert (= temp34_146 #x0000000000000003))
(assert (= temp34_147 temp34_146))
(assert (= temp34_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_147)))
(assert (= temp34_149 #x0000000000000004))
(assert (= temp34_150 temp34_149))
(assert (= temp34_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_150)))
(assert (= temp34_152 #x0000000000000005))
(assert (= temp34_153 temp34_152))
(assert (= temp34_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_153)))
(assert (= temp34_156 var1310898))
(assert (= temp34_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_156)))
(assert (= temp34_155 temp34_157))
(assert (= var1322852
   (ite (bvslt temp34_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_158 #x0000000000000000))
(assert (= var1322852 temp34_158))
(assert (= temp34_159 #x0000000000000000))
(assert (= var1310898 temp34_159))
(assert (= temp34_161 var1310898))
(assert (= temp34_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_161)))
(assert (= temp34_160 temp34_162))
(assert (= var1322874 (bvsmod temp34_160 ARGNAME_groups_NAMEEND)))
(assert (= temp34_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp34_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp34_164 #x0000000000000001))
(assert (= var1322875 temp34_164))
(assert (= temp34_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp34_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_166 #x0000000000000001))
(assert (= var1322895 temp34_166))
(assert (= temp34_167 #x0000000000000001))
(assert (= var1311786 temp34_167))
(assert (= temp34_168 #x0000000000000000))
(assert (= temp34_169 temp34_168))
(assert (= temp34_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp34_169)))
(assert (= temp34_171 #x0000000000000001))
(assert (= temp34_172 temp34_171))
(assert (= temp34_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp34_172)))
(assert (= temp34_174 #x0000000000000002))
(assert (= temp34_175 temp34_174))
(assert (= temp34_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp34_175)))
(assert (= temp34_177 #x0000000000000003))
(assert (= temp34_178 temp34_177))
(assert (= temp34_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp34_178)))
(assert (= temp34_180 #x0000000000000004))
(assert (= temp34_181 temp34_180))
(assert (= temp34_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp34_181)))
(assert (= temp34_183 #x0000000000000005))
(assert (= temp34_184 temp34_183))
(assert (= temp34_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp34_184)))
(assert (= temp34_186 #x0000000000000000))
(assert (= temp34_187
   (ite (bvslt var1311786 temp34_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp34_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp34_187)))
(assert (= var1322903 temp34_188))
(assert (bvslt (ite (bvslt var1311786 temp34_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp34_189 #x0000000000000001))
(assert (= var1311786 temp34_189))
(assert (= temp34_191 var1311786))
(assert (= temp34_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_191)))
(assert (= temp34_190 temp34_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp34_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp34_193 #x0000000000000001))
(assert (= var1322908 temp34_193))
(assert (= temp34_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp34_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_195 #x0000000000000001))
(assert (= var1322975 temp34_195))
(assert (= temp34_196 #x0000000000000000))
(assert (= var1310898 temp34_196))
(assert (= temp34_197 #x0000000000000000))
(assert (= temp34_198 temp34_197))
(assert (= temp34_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp34_198)))
(assert (= temp34_200 #x0000000000000001))
(assert (= temp34_201 temp34_200))
(assert (= temp34_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp34_201)))
(assert (= temp34_203 #x0000000000000002))
(assert (= temp34_204 temp34_203))
(assert (= temp34_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp34_204)))
(assert (= temp34_206 #x0000000000000003))
(assert (= temp34_207 temp34_206))
(assert (= temp34_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp34_207)))
(assert (= temp34_209 #x0000000000000004))
(assert (= temp34_210 temp34_209))
(assert (= temp34_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp34_210)))
(assert (= temp34_212 #x0000000000000005))
(assert (= temp34_213 temp34_212))
(assert (= temp34_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp34_213)))
(assert (= temp34_215 #x0000000000000000))
(assert (= temp34_216
   (ite (bvslt var1310898 temp34_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp34_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp34_216)))
(assert (= var1322977 temp34_217))
(assert (bvslt (ite (bvslt var1310898 temp34_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp34_218 #x0000000000000000))
(assert (= var1310898 temp34_218))
(assert (= temp34_220 var1310898))
(assert (= temp34_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_220)))
(assert (= temp34_219 temp34_221))
(assert (= var1322980
   (ite (= var1322977 temp34_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp34_222 #x0000000000000001))
(assert (= var1322980 temp34_222))
(assert (= temp34_223 #x0000000000000002))
(assert (= var1848169 temp34_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp34_225 #x0000000000000001))
(assert (= var1323065 temp34_225))
(assert (= temp34_226 #x0000000000000001))
(assert (= var3486735 temp34_226))
(assert (= temp34_227 #x0000000000000001))
(assert (= var3814415 temp34_227))
(assert (= temp34_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp34_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_229 #x0000000000000001))
(assert (= var79986 temp34_229))
(assert (= temp34_230 #x0000000000000001))
(assert (= var80116 temp34_230))
(assert (= var4796905 var80116))
(assert (= temp34_231 #x0000000000000000))
(assert (= var4784306 temp34_231))
(assert (= temp34_232 #x0000000000000000))
(assert (= temp34_233
   (ite (bvslt var4784306 temp34_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp34_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp34_233)))
(assert (= var4796924 temp34_234))
(assert (bvslt (ite (bvslt var4784306 temp34_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp34_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp34_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp34_236 #x0000000000000001))
(assert (= var4796925 temp34_236))
(assert (= temp34_237 #x0000000000000000))
(assert (= var4996927 temp34_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp34_238 #x0000000000000002))
(assert (= var5125763 temp34_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_239 #x0000000000000000))
(assert (= var5191324 temp34_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp34_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp34_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp34_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp34_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp34_244 #x0000000000000001))
(assert (= temp34_243 temp34_244))
(assert (= temp34_245 #x0000000000000001))
(assert (= var8130026 temp34_245))
(assert (= temp34_247 #xffffffffffffffff))
(assert (= temp34_246 temp34_247))
(assert (= temp34_248 #x0000000000000001))
(assert (= var79986 temp34_248))
(model-add temp34_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp34_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp34_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






