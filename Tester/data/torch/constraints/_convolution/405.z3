(declare-fun temp538_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp538_2 () (_ BitVec 64))
(declare-fun temp538_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp538_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp538_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp538_6 () (_ BitVec 64))
(declare-fun temp538_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp538_8 () (_ BitVec 64))
(declare-fun temp538_9 () (_ BitVec 64))
(declare-fun temp538_10 () (_ BitVec 64))
(declare-fun temp538_11 () (_ BitVec 64))
(declare-fun temp538_12 () (_ BitVec 64))
(declare-fun temp538_13 () (_ BitVec 64))
(declare-fun temp538_14 () (_ BitVec 64))
(declare-fun temp538_15 () (_ BitVec 64))
(declare-fun temp538_16 () (_ BitVec 64))
(declare-fun temp538_17 () (_ BitVec 64))
(declare-fun temp538_18 () (_ BitVec 64))
(declare-fun temp538_19 () (_ BitVec 64))
(declare-fun temp538_20 () (_ BitVec 64))
(declare-fun temp538_21 () (_ BitVec 64))
(declare-fun temp538_22 () (_ BitVec 64))
(declare-fun temp538_23 () (_ BitVec 64))
(declare-fun temp538_24 () (_ BitVec 64))
(declare-fun temp538_25 () (_ BitVec 64))
(declare-fun temp538_26 () (_ BitVec 64))
(declare-fun temp538_27 () (_ BitVec 64))
(declare-fun temp538_28 () (_ BitVec 64))
(declare-fun temp538_29 () (_ BitVec 64))
(declare-fun temp538_30 () (_ BitVec 64))
(declare-fun temp538_31 () (_ BitVec 64))
(declare-fun temp538_32 () (_ BitVec 64))
(declare-fun temp538_33 () (_ BitVec 64))
(declare-fun temp538_34 () (_ BitVec 64))
(declare-fun temp538_35 () (_ BitVec 64))
(declare-fun temp538_36 () (_ BitVec 64))
(declare-fun temp538_37 () (_ BitVec 64))
(declare-fun temp538_38 () (_ BitVec 64))
(declare-fun temp538_39 () (_ BitVec 64))
(declare-fun temp538_40 () (_ BitVec 64))
(declare-fun temp538_41 () (_ BitVec 64))
(declare-fun temp538_42 () (_ BitVec 64))
(declare-fun temp538_43 () (_ BitVec 64))
(declare-fun temp538_44 () (_ BitVec 64))
(declare-fun temp538_45 () (_ BitVec 64))
(declare-fun temp538_46 () (_ BitVec 64))
(declare-fun temp538_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp538_48 () (_ BitVec 64))
(declare-fun temp538_49 () (_ BitVec 64))
(declare-fun temp538_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp538_51 () (_ BitVec 64))
(declare-fun temp538_52 () (_ BitVec 64))
(declare-fun temp538_53 () (_ BitVec 64))
(declare-fun temp538_54 () (_ BitVec 64))
(declare-fun temp538_55 () (_ BitVec 64))
(declare-fun temp538_56 () (_ BitVec 64))
(declare-fun temp538_57 () (_ BitVec 64))
(declare-fun temp538_58 () (_ BitVec 64))
(declare-fun temp538_59 () (_ BitVec 64))
(declare-fun temp538_60 () (_ BitVec 64))
(declare-fun temp538_61 () (_ BitVec 64))
(declare-fun temp538_62 () (_ BitVec 64))
(declare-fun temp538_63 () (_ BitVec 64))
(declare-fun temp538_64 () (_ BitVec 64))
(declare-fun temp538_65 () (_ BitVec 64))
(declare-fun temp538_66 () (_ BitVec 64))
(declare-fun temp538_67 () (_ BitVec 64))
(declare-fun temp538_68 () (_ BitVec 64))
(declare-fun temp538_69 () (_ BitVec 64))
(declare-fun temp538_70 () (_ BitVec 64))
(declare-fun temp538_71 () (_ BitVec 64))
(declare-fun temp538_72 () (_ BitVec 64))
(declare-fun temp538_73 () (_ BitVec 64))
(declare-fun temp538_74 () (_ BitVec 64))
(declare-fun temp538_75 () (_ BitVec 64))
(declare-fun temp538_76 () (_ BitVec 64))
(declare-fun temp538_77 () (_ BitVec 64))
(declare-fun temp538_78 () (_ BitVec 64))
(declare-fun temp538_79 () (_ BitVec 64))
(declare-fun temp538_80 () (_ BitVec 64))
(declare-fun temp538_81 () (_ BitVec 64))
(declare-fun temp538_82 () (_ BitVec 64))
(declare-fun temp538_83 () (_ BitVec 64))
(declare-fun temp538_84 () (_ BitVec 64))
(declare-fun temp538_85 () (_ BitVec 64))
(declare-fun temp538_86 () (_ BitVec 64))
(declare-fun temp538_87 () (_ BitVec 64))
(declare-fun temp538_88 () (_ BitVec 64))
(declare-fun temp538_89 () (_ BitVec 64))
(declare-fun temp538_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp538_91 () (_ BitVec 64))
(declare-fun temp538_92 () (_ BitVec 64))
(declare-fun temp538_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp538_94 () (_ BitVec 64))
(declare-fun temp538_95 () (_ BitVec 64))
(declare-fun temp538_96 () (_ BitVec 64))
(declare-fun temp538_97 () (_ BitVec 64))
(declare-fun temp538_98 () (_ BitVec 64))
(declare-fun temp538_99 () (_ BitVec 64))
(declare-fun temp538_100 () (_ BitVec 64))
(declare-fun temp538_101 () (_ BitVec 64))
(declare-fun temp538_102 () (_ BitVec 64))
(declare-fun temp538_103 () (_ BitVec 64))
(declare-fun temp538_104 () (_ BitVec 64))
(declare-fun temp538_105 () (_ BitVec 64))
(declare-fun temp538_106 () (_ BitVec 64))
(declare-fun temp538_107 () (_ BitVec 64))
(declare-fun temp538_108 () (_ BitVec 64))
(declare-fun temp538_109 () (_ BitVec 64))
(declare-fun temp538_110 () (_ BitVec 64))
(declare-fun temp538_111 () (_ BitVec 64))
(declare-fun temp538_112 () (_ BitVec 64))
(declare-fun temp538_113 () (_ BitVec 64))
(declare-fun temp538_114 () (_ BitVec 64))
(declare-fun temp538_115 () (_ BitVec 64))
(declare-fun temp538_116 () (_ BitVec 64))
(declare-fun temp538_117 () (_ BitVec 64))
(declare-fun temp538_118 () (_ BitVec 64))
(declare-fun temp538_119 () (_ BitVec 64))
(declare-fun temp538_120 () (_ BitVec 64))
(declare-fun temp538_121 () (_ BitVec 64))
(declare-fun temp538_122 () (_ BitVec 64))
(declare-fun temp538_123 () (_ BitVec 64))
(declare-fun temp538_124 () (_ BitVec 64))
(declare-fun temp538_125 () (_ BitVec 64))
(declare-fun temp538_126 () (_ BitVec 64))
(declare-fun temp538_127 () (_ BitVec 64))
(declare-fun temp538_128 () (_ BitVec 64))
(declare-fun temp538_129 () (_ BitVec 64))
(declare-fun temp538_130 () (_ BitVec 64))
(declare-fun temp538_131 () (_ BitVec 64))
(declare-fun temp538_132 () (_ BitVec 64))
(declare-fun temp538_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp538_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp538_135 () (_ BitVec 64))
(declare-fun temp538_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp538_137 () (_ BitVec 64))
(declare-fun temp538_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp538_139 () (_ BitVec 64))
(declare-fun temp538_140 () (_ BitVec 64))
(declare-fun temp538_141 () (_ BitVec 64))
(declare-fun temp538_142 () (_ BitVec 64))
(declare-fun temp538_143 () (_ BitVec 64))
(declare-fun temp538_144 () (_ BitVec 64))
(declare-fun temp538_145 () (_ BitVec 64))
(declare-fun temp538_146 () (_ BitVec 64))
(declare-fun temp538_147 () (_ BitVec 64))
(declare-fun temp538_148 () (_ BitVec 64))
(declare-fun temp538_149 () (_ BitVec 64))
(declare-fun temp538_150 () (_ BitVec 64))
(declare-fun temp538_151 () (_ BitVec 64))
(declare-fun temp538_152 () (_ BitVec 64))
(declare-fun temp538_153 () (_ BitVec 64))
(declare-fun temp538_154 () (_ BitVec 64))
(declare-fun temp538_156 () (_ BitVec 64))
(declare-fun temp538_157 () (_ BitVec 64))
(declare-fun temp538_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp538_158 () (_ BitVec 64))
(declare-fun temp538_159 () (_ BitVec 64))
(declare-fun temp538_161 () (_ BitVec 64))
(declare-fun temp538_162 () (_ BitVec 64))
(declare-fun temp538_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp538_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp538_164 () (_ BitVec 64))
(declare-fun temp538_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp538_166 () (_ BitVec 64))
(declare-fun temp538_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp538_168 () (_ BitVec 64))
(declare-fun temp538_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp538_170 () (_ BitVec 64))
(declare-fun temp538_171 () (_ BitVec 64))
(declare-fun temp538_172 () (_ BitVec 64))
(declare-fun temp538_173 () (_ BitVec 64))
(declare-fun temp538_174 () (_ BitVec 64))
(declare-fun temp538_175 () (_ BitVec 64))
(declare-fun temp538_176 () (_ BitVec 64))
(declare-fun temp538_177 () (_ BitVec 64))
(declare-fun temp538_178 () (_ BitVec 64))
(declare-fun temp538_179 () (_ BitVec 64))
(declare-fun temp538_180 () (_ BitVec 64))
(declare-fun temp538_181 () (_ BitVec 64))
(declare-fun temp538_182 () (_ BitVec 64))
(declare-fun temp538_183 () (_ BitVec 64))
(declare-fun temp538_184 () (_ BitVec 64))
(declare-fun temp538_185 () (_ BitVec 64))
(declare-fun temp538_186 () (_ BitVec 64))
(declare-fun temp538_187 () (_ BitVec 64))
(declare-fun temp538_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp538_189 () (_ BitVec 64))
(declare-fun temp538_191 () (_ BitVec 64))
(declare-fun temp538_192 () (_ BitVec 64))
(declare-fun temp538_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp538_193 () (_ BitVec 64))
(declare-fun temp538_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp538_195 () (_ BitVec 64))
(declare-fun temp538_196 () (_ BitVec 64))
(declare-fun temp538_197 () (_ BitVec 64))
(declare-fun temp538_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp538_199 () (_ BitVec 64))
(declare-fun temp538_200 () (_ BitVec 64))
(declare-fun temp538_201 () (_ BitVec 64))
(declare-fun temp538_202 () (_ BitVec 64))
(declare-fun temp538_203 () (_ BitVec 64))
(declare-fun temp538_204 () (_ BitVec 64))
(declare-fun temp538_205 () (_ BitVec 64))
(declare-fun temp538_206 () (_ BitVec 64))
(declare-fun temp538_207 () (_ BitVec 64))
(declare-fun temp538_208 () (_ BitVec 64))
(declare-fun temp538_209 () (_ BitVec 64))
(declare-fun temp538_210 () (_ BitVec 64))
(declare-fun temp538_211 () (_ BitVec 64))
(declare-fun temp538_212 () (_ BitVec 64))
(declare-fun temp538_213 () (_ BitVec 64))
(declare-fun temp538_214 () (_ BitVec 64))
(declare-fun temp538_215 () (_ BitVec 64))
(declare-fun temp538_216 () (_ BitVec 64))
(declare-fun temp538_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp538_218 () (_ BitVec 64))
(declare-fun temp538_220 () (_ BitVec 64))
(declare-fun temp538_221 () (_ BitVec 64))
(declare-fun temp538_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp538_222 () (_ BitVec 64))
(declare-fun temp538_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp538_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp538_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp538_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp538_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp538_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp538_229 () (_ BitVec 64))
(declare-fun temp538_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp538_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp538_232 () (_ BitVec 64))
(declare-fun temp538_233 () (_ BitVec 64))
(declare-fun temp538_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp538_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp538_236 () (_ BitVec 64))
(declare-fun temp538_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp538_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp538_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp538_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp538_241 () (_ BitVec 64))
(declare-fun temp538_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp538_243 () (_ BitVec 64))
(assert (= temp538_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp538_1)))
(assert (= temp538_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp538_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_3 #x0000000000000000))
(assert (= var79869 temp538_3))
(assert (= temp538_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp538_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_5 #x0000000000000000))
(assert (= var79914 temp538_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp538_6 #x0000000000000000))
(assert (= temp538_7 temp538_6))
(assert (= temp538_8 (select ARGNAME_padding_NAMEEND_VAL temp538_7)))
(assert (= temp538_9 #x0000000000000001))
(assert (= temp538_10 temp538_9))
(assert (= temp538_11 (select ARGNAME_padding_NAMEEND_VAL temp538_10)))
(assert (= temp538_12 #x0000000000000002))
(assert (= temp538_13 temp538_12))
(assert (= temp538_14 (select ARGNAME_padding_NAMEEND_VAL temp538_13)))
(assert (= temp538_15 #x0000000000000003))
(assert (= temp538_16 temp538_15))
(assert (= temp538_17 (select ARGNAME_padding_NAMEEND_VAL temp538_16)))
(assert (= temp538_18 #x0000000000000004))
(assert (= temp538_19 temp538_18))
(assert (= temp538_20 (select ARGNAME_padding_NAMEEND_VAL temp538_19)))
(assert (= temp538_21 #x0000000000000005))
(assert (= temp538_22 temp538_21))
(assert (= temp538_23 (select ARGNAME_padding_NAMEEND_VAL temp538_22)))
(assert (= temp538_24 #x0000000000000000))
(assert (= temp538_25 #x0000000000000000))
(assert (= temp538_26 temp538_25))
(assert (= temp538_27 (select ARGNAME_padding_NAMEEND_VAL temp538_26)))
(assert (= temp538_28 #x0000000000000000))
(assert (= temp538_29 #x0000000000000001))
(assert (= temp538_30 temp538_29))
(assert (= temp538_31 (select ARGNAME_padding_NAMEEND_VAL temp538_30)))
(assert (= temp538_32 #x0000000000000000))
(assert (= temp538_33 #x0000000000000002))
(assert (= temp538_34 temp538_33))
(assert (= temp538_35 (select ARGNAME_padding_NAMEEND_VAL temp538_34)))
(assert (= temp538_36 #x0000000000000000))
(assert (= temp538_37 #x0000000000000003))
(assert (= temp538_38 temp538_37))
(assert (= temp538_39 (select ARGNAME_padding_NAMEEND_VAL temp538_38)))
(assert (= temp538_40 #x0000000000000000))
(assert (= temp538_41 #x0000000000000004))
(assert (= temp538_42 temp538_41))
(assert (= temp538_43 (select ARGNAME_padding_NAMEEND_VAL temp538_42)))
(assert (= temp538_44 #x0000000000000000))
(assert (= temp538_45 #x0000000000000005))
(assert (= temp538_46 temp538_45))
(assert (= temp538_47 (select ARGNAME_padding_NAMEEND_VAL temp538_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp538_27 temp538_24)
             (bvslt temp538_31 temp538_28)
             (bvslt temp538_35 temp538_32)
             (bvslt temp538_39 temp538_36)
             (bvslt temp538_43 temp538_40)
             (bvslt temp538_47 temp538_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_48 #x0000000000000000))
(assert (= var1322786 temp538_48))
(assert (= temp538_49 #x0000000000000000))
(assert (= temp538_50 temp538_49))
(assert (= temp538_51 (select ARGNAME_output_padding_NAMEEND_VAL temp538_50)))
(assert (= temp538_52 #x0000000000000001))
(assert (= temp538_53 temp538_52))
(assert (= temp538_54 (select ARGNAME_output_padding_NAMEEND_VAL temp538_53)))
(assert (= temp538_55 #x0000000000000002))
(assert (= temp538_56 temp538_55))
(assert (= temp538_57 (select ARGNAME_output_padding_NAMEEND_VAL temp538_56)))
(assert (= temp538_58 #x0000000000000003))
(assert (= temp538_59 temp538_58))
(assert (= temp538_60 (select ARGNAME_output_padding_NAMEEND_VAL temp538_59)))
(assert (= temp538_61 #x0000000000000004))
(assert (= temp538_62 temp538_61))
(assert (= temp538_63 (select ARGNAME_output_padding_NAMEEND_VAL temp538_62)))
(assert (= temp538_64 #x0000000000000005))
(assert (= temp538_65 temp538_64))
(assert (= temp538_66 (select ARGNAME_output_padding_NAMEEND_VAL temp538_65)))
(assert (= temp538_67 #x0000000000000000))
(assert (= temp538_68 #x0000000000000000))
(assert (= temp538_69 temp538_68))
(assert (= temp538_70 (select ARGNAME_output_padding_NAMEEND_VAL temp538_69)))
(assert (= temp538_71 #x0000000000000000))
(assert (= temp538_72 #x0000000000000001))
(assert (= temp538_73 temp538_72))
(assert (= temp538_74 (select ARGNAME_output_padding_NAMEEND_VAL temp538_73)))
(assert (= temp538_75 #x0000000000000000))
(assert (= temp538_76 #x0000000000000002))
(assert (= temp538_77 temp538_76))
(assert (= temp538_78 (select ARGNAME_output_padding_NAMEEND_VAL temp538_77)))
(assert (= temp538_79 #x0000000000000000))
(assert (= temp538_80 #x0000000000000003))
(assert (= temp538_81 temp538_80))
(assert (= temp538_82 (select ARGNAME_output_padding_NAMEEND_VAL temp538_81)))
(assert (= temp538_83 #x0000000000000000))
(assert (= temp538_84 #x0000000000000004))
(assert (= temp538_85 temp538_84))
(assert (= temp538_86 (select ARGNAME_output_padding_NAMEEND_VAL temp538_85)))
(assert (= temp538_87 #x0000000000000000))
(assert (= temp538_88 #x0000000000000005))
(assert (= temp538_89 temp538_88))
(assert (= temp538_90 (select ARGNAME_output_padding_NAMEEND_VAL temp538_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp538_70 temp538_67)
             (bvslt temp538_74 temp538_71)
             (bvslt temp538_78 temp538_75)
             (bvslt temp538_82 temp538_79)
             (bvslt temp538_86 temp538_83)
             (bvslt temp538_90 temp538_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_91 #x0000000000000000))
(assert (= var1322797 temp538_91))
(assert (= temp538_92 #x0000000000000000))
(assert (= temp538_93 temp538_92))
(assert (= temp538_94 (select ARGNAME_stride_NAMEEND_VAL temp538_93)))
(assert (= temp538_95 #x0000000000000001))
(assert (= temp538_96 temp538_95))
(assert (= temp538_97 (select ARGNAME_stride_NAMEEND_VAL temp538_96)))
(assert (= temp538_98 #x0000000000000002))
(assert (= temp538_99 temp538_98))
(assert (= temp538_100 (select ARGNAME_stride_NAMEEND_VAL temp538_99)))
(assert (= temp538_101 #x0000000000000003))
(assert (= temp538_102 temp538_101))
(assert (= temp538_103 (select ARGNAME_stride_NAMEEND_VAL temp538_102)))
(assert (= temp538_104 #x0000000000000004))
(assert (= temp538_105 temp538_104))
(assert (= temp538_106 (select ARGNAME_stride_NAMEEND_VAL temp538_105)))
(assert (= temp538_107 #x0000000000000005))
(assert (= temp538_108 temp538_107))
(assert (= temp538_109 (select ARGNAME_stride_NAMEEND_VAL temp538_108)))
(assert (= temp538_110 #x0000000000000000))
(assert (= temp538_111 #x0000000000000000))
(assert (= temp538_112 temp538_111))
(assert (= temp538_113 (select ARGNAME_stride_NAMEEND_VAL temp538_112)))
(assert (= temp538_114 #x0000000000000000))
(assert (= temp538_115 #x0000000000000001))
(assert (= temp538_116 temp538_115))
(assert (= temp538_117 (select ARGNAME_stride_NAMEEND_VAL temp538_116)))
(assert (= temp538_118 #x0000000000000000))
(assert (= temp538_119 #x0000000000000002))
(assert (= temp538_120 temp538_119))
(assert (= temp538_121 (select ARGNAME_stride_NAMEEND_VAL temp538_120)))
(assert (= temp538_122 #x0000000000000000))
(assert (= temp538_123 #x0000000000000003))
(assert (= temp538_124 temp538_123))
(assert (= temp538_125 (select ARGNAME_stride_NAMEEND_VAL temp538_124)))
(assert (= temp538_126 #x0000000000000000))
(assert (= temp538_127 #x0000000000000004))
(assert (= temp538_128 temp538_127))
(assert (= temp538_129 (select ARGNAME_stride_NAMEEND_VAL temp538_128)))
(assert (= temp538_130 #x0000000000000000))
(assert (= temp538_131 #x0000000000000005))
(assert (= temp538_132 temp538_131))
(assert (= temp538_133 (select ARGNAME_stride_NAMEEND_VAL temp538_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp538_113 temp538_110)
             (bvsle temp538_117 temp538_114)
             (bvsle temp538_121 temp538_118)
             (bvsle temp538_125 temp538_122)
             (bvsle temp538_129 temp538_126)
             (bvsle temp538_133 temp538_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_134 #x0000000000000000))
(assert (= var1322807 temp538_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_135 #x0000000000000001))
(assert (= var1322819 temp538_135))
(assert (= temp538_136 #x0000000000000000))
(assert (= var1310898 temp538_136))
(assert (= temp538_137 #x0000000000000000))
(assert (= temp538_138 temp538_137))
(assert (= temp538_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_138)))
(assert (= temp538_140 #x0000000000000001))
(assert (= temp538_141 temp538_140))
(assert (= temp538_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_141)))
(assert (= temp538_143 #x0000000000000002))
(assert (= temp538_144 temp538_143))
(assert (= temp538_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_144)))
(assert (= temp538_146 #x0000000000000003))
(assert (= temp538_147 temp538_146))
(assert (= temp538_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_147)))
(assert (= temp538_149 #x0000000000000004))
(assert (= temp538_150 temp538_149))
(assert (= temp538_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_150)))
(assert (= temp538_152 #x0000000000000005))
(assert (= temp538_153 temp538_152))
(assert (= temp538_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_153)))
(assert (= temp538_156 var1310898))
(assert (= temp538_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_156)))
(assert (= temp538_155 temp538_157))
(assert (= var1322852
   (ite (bvslt temp538_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_158 #x0000000000000000))
(assert (= var1322852 temp538_158))
(assert (= temp538_159 #x0000000000000000))
(assert (= var1310898 temp538_159))
(assert (= temp538_161 var1310898))
(assert (= temp538_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_161)))
(assert (= temp538_160 temp538_162))
(assert (= var1322874 (bvsmod temp538_160 ARGNAME_groups_NAMEEND)))
(assert (= temp538_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp538_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp538_164 #x0000000000000001))
(assert (= var1322875 temp538_164))
(assert (= temp538_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp538_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_166 #x0000000000000001))
(assert (= var1322895 temp538_166))
(assert (= temp538_167 #x0000000000000001))
(assert (= var1311786 temp538_167))
(assert (= temp538_168 #x0000000000000000))
(assert (= temp538_169 temp538_168))
(assert (= temp538_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp538_169)))
(assert (= temp538_171 #x0000000000000001))
(assert (= temp538_172 temp538_171))
(assert (= temp538_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp538_172)))
(assert (= temp538_174 #x0000000000000002))
(assert (= temp538_175 temp538_174))
(assert (= temp538_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp538_175)))
(assert (= temp538_177 #x0000000000000003))
(assert (= temp538_178 temp538_177))
(assert (= temp538_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp538_178)))
(assert (= temp538_180 #x0000000000000004))
(assert (= temp538_181 temp538_180))
(assert (= temp538_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp538_181)))
(assert (= temp538_183 #x0000000000000005))
(assert (= temp538_184 temp538_183))
(assert (= temp538_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp538_184)))
(assert (= temp538_186 #x0000000000000000))
(assert (= temp538_187
   (ite (bvslt var1311786 temp538_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp538_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp538_187)))
(assert (= var1322903 temp538_188))
(assert (bvslt (ite (bvslt var1311786 temp538_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp538_189 #x0000000000000001))
(assert (= var1311786 temp538_189))
(assert (= temp538_191 var1311786))
(assert (= temp538_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_191)))
(assert (= temp538_190 temp538_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp538_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp538_193 #x0000000000000001))
(assert (= var1322908 temp538_193))
(assert (= temp538_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp538_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_195 #x0000000000000001))
(assert (= var1322975 temp538_195))
(assert (= temp538_196 #x0000000000000000))
(assert (= var1310898 temp538_196))
(assert (= temp538_197 #x0000000000000000))
(assert (= temp538_198 temp538_197))
(assert (= temp538_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp538_198)))
(assert (= temp538_200 #x0000000000000001))
(assert (= temp538_201 temp538_200))
(assert (= temp538_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp538_201)))
(assert (= temp538_203 #x0000000000000002))
(assert (= temp538_204 temp538_203))
(assert (= temp538_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp538_204)))
(assert (= temp538_206 #x0000000000000003))
(assert (= temp538_207 temp538_206))
(assert (= temp538_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp538_207)))
(assert (= temp538_209 #x0000000000000004))
(assert (= temp538_210 temp538_209))
(assert (= temp538_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp538_210)))
(assert (= temp538_212 #x0000000000000005))
(assert (= temp538_213 temp538_212))
(assert (= temp538_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp538_213)))
(assert (= temp538_215 #x0000000000000000))
(assert (= temp538_216
   (ite (bvslt var1310898 temp538_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp538_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp538_216)))
(assert (= var1322977 temp538_217))
(assert (bvslt (ite (bvslt var1310898 temp538_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp538_218 #x0000000000000000))
(assert (= var1310898 temp538_218))
(assert (= temp538_220 var1310898))
(assert (= temp538_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp538_220)))
(assert (= temp538_219 temp538_221))
(assert (= var1322980
   (ite (= var1322977 temp538_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp538_222 #x0000000000000001))
(assert (= var1322980 temp538_222))
(assert (= temp538_223 #x0000000000000002))
(assert (= var1848169 temp538_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp538_225 #x0000000000000001))
(assert (= var1323065 temp538_225))
(assert (= temp538_226 #x0000000000000001))
(assert (= var3486735 temp538_226))
(assert (= temp538_227 #x0000000000000001))
(assert (= var3814415 temp538_227))
(assert (= temp538_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp538_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_229 #x0000000000000001))
(assert (= var79986 temp538_229))
(assert (= temp538_230 #x0000000000000001))
(assert (= var80116 temp538_230))
(assert (= var4796905 var80116))
(assert (= temp538_231 #x0000000000000000))
(assert (= var4784306 temp538_231))
(assert (= temp538_232 #x0000000000000000))
(assert (= temp538_233
   (ite (bvslt var4784306 temp538_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp538_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp538_233)))
(assert (= var4796924 temp538_234))
(assert (bvslt (ite (bvslt var4784306 temp538_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp538_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp538_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp538_236 #x0000000000000001))
(assert (= var4796925 temp538_236))
(assert (= temp538_237 #x0000000000000000))
(assert (= var4996927 temp538_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp538_238 #x0000000000000002))
(assert (= var5125763 temp538_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_239 #x0000000000000000))
(assert (= var5191324 temp538_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp538_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp538_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp538_241 #x0000000000000000))
(assert (= var81342 temp538_241))
(assert (= temp538_242 #x0000000000000002))
(assert (= var5977731 temp538_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp538_243 #x0000000000000001))
(assert (= var79986 temp538_243))
(model-add temp538_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp538_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp538_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






