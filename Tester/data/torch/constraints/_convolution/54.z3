(declare-fun temp71_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp71_2 () (_ BitVec 64))
(declare-fun temp71_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp71_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp71_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp71_6 () (_ BitVec 64))
(declare-fun temp71_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp71_8 () (_ BitVec 64))
(declare-fun temp71_9 () (_ BitVec 64))
(declare-fun temp71_10 () (_ BitVec 64))
(declare-fun temp71_11 () (_ BitVec 64))
(declare-fun temp71_12 () (_ BitVec 64))
(declare-fun temp71_13 () (_ BitVec 64))
(declare-fun temp71_14 () (_ BitVec 64))
(declare-fun temp71_15 () (_ BitVec 64))
(declare-fun temp71_16 () (_ BitVec 64))
(declare-fun temp71_17 () (_ BitVec 64))
(declare-fun temp71_18 () (_ BitVec 64))
(declare-fun temp71_19 () (_ BitVec 64))
(declare-fun temp71_20 () (_ BitVec 64))
(declare-fun temp71_21 () (_ BitVec 64))
(declare-fun temp71_22 () (_ BitVec 64))
(declare-fun temp71_23 () (_ BitVec 64))
(declare-fun temp71_24 () (_ BitVec 64))
(declare-fun temp71_25 () (_ BitVec 64))
(declare-fun temp71_26 () (_ BitVec 64))
(declare-fun temp71_27 () (_ BitVec 64))
(declare-fun temp71_28 () (_ BitVec 64))
(declare-fun temp71_29 () (_ BitVec 64))
(declare-fun temp71_30 () (_ BitVec 64))
(declare-fun temp71_31 () (_ BitVec 64))
(declare-fun temp71_32 () (_ BitVec 64))
(declare-fun temp71_33 () (_ BitVec 64))
(declare-fun temp71_34 () (_ BitVec 64))
(declare-fun temp71_35 () (_ BitVec 64))
(declare-fun temp71_36 () (_ BitVec 64))
(declare-fun temp71_37 () (_ BitVec 64))
(declare-fun temp71_38 () (_ BitVec 64))
(declare-fun temp71_39 () (_ BitVec 64))
(declare-fun temp71_40 () (_ BitVec 64))
(declare-fun temp71_41 () (_ BitVec 64))
(declare-fun temp71_42 () (_ BitVec 64))
(declare-fun temp71_43 () (_ BitVec 64))
(declare-fun temp71_44 () (_ BitVec 64))
(declare-fun temp71_45 () (_ BitVec 64))
(declare-fun temp71_46 () (_ BitVec 64))
(declare-fun temp71_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp71_48 () (_ BitVec 64))
(declare-fun temp71_49 () (_ BitVec 64))
(declare-fun temp71_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp71_51 () (_ BitVec 64))
(declare-fun temp71_52 () (_ BitVec 64))
(declare-fun temp71_53 () (_ BitVec 64))
(declare-fun temp71_54 () (_ BitVec 64))
(declare-fun temp71_55 () (_ BitVec 64))
(declare-fun temp71_56 () (_ BitVec 64))
(declare-fun temp71_57 () (_ BitVec 64))
(declare-fun temp71_58 () (_ BitVec 64))
(declare-fun temp71_59 () (_ BitVec 64))
(declare-fun temp71_60 () (_ BitVec 64))
(declare-fun temp71_61 () (_ BitVec 64))
(declare-fun temp71_62 () (_ BitVec 64))
(declare-fun temp71_63 () (_ BitVec 64))
(declare-fun temp71_64 () (_ BitVec 64))
(declare-fun temp71_65 () (_ BitVec 64))
(declare-fun temp71_66 () (_ BitVec 64))
(declare-fun temp71_67 () (_ BitVec 64))
(declare-fun temp71_68 () (_ BitVec 64))
(declare-fun temp71_69 () (_ BitVec 64))
(declare-fun temp71_70 () (_ BitVec 64))
(declare-fun temp71_71 () (_ BitVec 64))
(declare-fun temp71_72 () (_ BitVec 64))
(declare-fun temp71_73 () (_ BitVec 64))
(declare-fun temp71_74 () (_ BitVec 64))
(declare-fun temp71_75 () (_ BitVec 64))
(declare-fun temp71_76 () (_ BitVec 64))
(declare-fun temp71_77 () (_ BitVec 64))
(declare-fun temp71_78 () (_ BitVec 64))
(declare-fun temp71_79 () (_ BitVec 64))
(declare-fun temp71_80 () (_ BitVec 64))
(declare-fun temp71_81 () (_ BitVec 64))
(declare-fun temp71_82 () (_ BitVec 64))
(declare-fun temp71_83 () (_ BitVec 64))
(declare-fun temp71_84 () (_ BitVec 64))
(declare-fun temp71_85 () (_ BitVec 64))
(declare-fun temp71_86 () (_ BitVec 64))
(declare-fun temp71_87 () (_ BitVec 64))
(declare-fun temp71_88 () (_ BitVec 64))
(declare-fun temp71_89 () (_ BitVec 64))
(declare-fun temp71_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp71_91 () (_ BitVec 64))
(declare-fun temp71_92 () (_ BitVec 64))
(declare-fun temp71_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp71_94 () (_ BitVec 64))
(declare-fun temp71_95 () (_ BitVec 64))
(declare-fun temp71_96 () (_ BitVec 64))
(declare-fun temp71_97 () (_ BitVec 64))
(declare-fun temp71_98 () (_ BitVec 64))
(declare-fun temp71_99 () (_ BitVec 64))
(declare-fun temp71_100 () (_ BitVec 64))
(declare-fun temp71_101 () (_ BitVec 64))
(declare-fun temp71_102 () (_ BitVec 64))
(declare-fun temp71_103 () (_ BitVec 64))
(declare-fun temp71_104 () (_ BitVec 64))
(declare-fun temp71_105 () (_ BitVec 64))
(declare-fun temp71_106 () (_ BitVec 64))
(declare-fun temp71_107 () (_ BitVec 64))
(declare-fun temp71_108 () (_ BitVec 64))
(declare-fun temp71_109 () (_ BitVec 64))
(declare-fun temp71_110 () (_ BitVec 64))
(declare-fun temp71_111 () (_ BitVec 64))
(declare-fun temp71_112 () (_ BitVec 64))
(declare-fun temp71_113 () (_ BitVec 64))
(declare-fun temp71_114 () (_ BitVec 64))
(declare-fun temp71_115 () (_ BitVec 64))
(declare-fun temp71_116 () (_ BitVec 64))
(declare-fun temp71_117 () (_ BitVec 64))
(declare-fun temp71_118 () (_ BitVec 64))
(declare-fun temp71_119 () (_ BitVec 64))
(declare-fun temp71_120 () (_ BitVec 64))
(declare-fun temp71_121 () (_ BitVec 64))
(declare-fun temp71_122 () (_ BitVec 64))
(declare-fun temp71_123 () (_ BitVec 64))
(declare-fun temp71_124 () (_ BitVec 64))
(declare-fun temp71_125 () (_ BitVec 64))
(declare-fun temp71_126 () (_ BitVec 64))
(declare-fun temp71_127 () (_ BitVec 64))
(declare-fun temp71_128 () (_ BitVec 64))
(declare-fun temp71_129 () (_ BitVec 64))
(declare-fun temp71_130 () (_ BitVec 64))
(declare-fun temp71_131 () (_ BitVec 64))
(declare-fun temp71_132 () (_ BitVec 64))
(declare-fun temp71_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp71_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp71_135 () (_ BitVec 64))
(declare-fun temp71_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp71_137 () (_ BitVec 64))
(declare-fun temp71_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp71_139 () (_ BitVec 64))
(declare-fun temp71_140 () (_ BitVec 64))
(declare-fun temp71_141 () (_ BitVec 64))
(declare-fun temp71_142 () (_ BitVec 64))
(declare-fun temp71_143 () (_ BitVec 64))
(declare-fun temp71_144 () (_ BitVec 64))
(declare-fun temp71_145 () (_ BitVec 64))
(declare-fun temp71_146 () (_ BitVec 64))
(declare-fun temp71_147 () (_ BitVec 64))
(declare-fun temp71_148 () (_ BitVec 64))
(declare-fun temp71_149 () (_ BitVec 64))
(declare-fun temp71_150 () (_ BitVec 64))
(declare-fun temp71_151 () (_ BitVec 64))
(declare-fun temp71_152 () (_ BitVec 64))
(declare-fun temp71_153 () (_ BitVec 64))
(declare-fun temp71_154 () (_ BitVec 64))
(declare-fun temp71_156 () (_ BitVec 64))
(declare-fun temp71_157 () (_ BitVec 64))
(declare-fun temp71_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp71_158 () (_ BitVec 64))
(declare-fun temp71_159 () (_ BitVec 64))
(declare-fun temp71_161 () (_ BitVec 64))
(declare-fun temp71_162 () (_ BitVec 64))
(declare-fun temp71_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp71_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp71_164 () (_ BitVec 64))
(declare-fun temp71_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp71_166 () (_ BitVec 64))
(declare-fun temp71_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp71_168 () (_ BitVec 64))
(declare-fun temp71_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp71_170 () (_ BitVec 64))
(declare-fun temp71_171 () (_ BitVec 64))
(declare-fun temp71_172 () (_ BitVec 64))
(declare-fun temp71_173 () (_ BitVec 64))
(declare-fun temp71_174 () (_ BitVec 64))
(declare-fun temp71_175 () (_ BitVec 64))
(declare-fun temp71_176 () (_ BitVec 64))
(declare-fun temp71_177 () (_ BitVec 64))
(declare-fun temp71_178 () (_ BitVec 64))
(declare-fun temp71_179 () (_ BitVec 64))
(declare-fun temp71_180 () (_ BitVec 64))
(declare-fun temp71_181 () (_ BitVec 64))
(declare-fun temp71_182 () (_ BitVec 64))
(declare-fun temp71_183 () (_ BitVec 64))
(declare-fun temp71_184 () (_ BitVec 64))
(declare-fun temp71_185 () (_ BitVec 64))
(declare-fun temp71_186 () (_ BitVec 64))
(declare-fun temp71_187 () (_ BitVec 64))
(declare-fun temp71_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp71_189 () (_ BitVec 64))
(declare-fun temp71_191 () (_ BitVec 64))
(declare-fun temp71_192 () (_ BitVec 64))
(declare-fun temp71_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp71_193 () (_ BitVec 64))
(declare-fun temp71_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp71_195 () (_ BitVec 64))
(declare-fun temp71_196 () (_ BitVec 64))
(declare-fun temp71_197 () (_ BitVec 64))
(declare-fun temp71_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp71_199 () (_ BitVec 64))
(declare-fun temp71_200 () (_ BitVec 64))
(declare-fun temp71_201 () (_ BitVec 64))
(declare-fun temp71_202 () (_ BitVec 64))
(declare-fun temp71_203 () (_ BitVec 64))
(declare-fun temp71_204 () (_ BitVec 64))
(declare-fun temp71_205 () (_ BitVec 64))
(declare-fun temp71_206 () (_ BitVec 64))
(declare-fun temp71_207 () (_ BitVec 64))
(declare-fun temp71_208 () (_ BitVec 64))
(declare-fun temp71_209 () (_ BitVec 64))
(declare-fun temp71_210 () (_ BitVec 64))
(declare-fun temp71_211 () (_ BitVec 64))
(declare-fun temp71_212 () (_ BitVec 64))
(declare-fun temp71_213 () (_ BitVec 64))
(declare-fun temp71_214 () (_ BitVec 64))
(declare-fun temp71_215 () (_ BitVec 64))
(declare-fun temp71_216 () (_ BitVec 64))
(declare-fun temp71_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp71_218 () (_ BitVec 64))
(declare-fun temp71_220 () (_ BitVec 64))
(declare-fun temp71_221 () (_ BitVec 64))
(declare-fun temp71_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp71_222 () (_ BitVec 64))
(declare-fun temp71_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp71_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp71_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp71_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp71_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp71_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp71_229 () (_ BitVec 64))
(declare-fun temp71_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp71_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp71_232 () (_ BitVec 64))
(declare-fun temp71_233 () (_ BitVec 64))
(declare-fun temp71_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp71_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp71_236 () (_ BitVec 64))
(declare-fun temp71_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp71_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp71_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp71_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp71_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp71_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp71_244 () (_ BitVec 64))
(declare-fun temp71_243 () (_ BitVec 64))
(declare-fun temp71_245 () (_ BitVec 64))
(declare-fun var8326634 () (_ BitVec 64))
(declare-fun temp71_247 () (_ BitVec 64))
(declare-fun temp71_246 () (_ BitVec 64))
(declare-fun temp71_248 () (_ BitVec 64))
(declare-fun temp71_249 () (_ BitVec 64))
(declare-fun var9122580 () (_ BitVec 64))
(declare-fun var9122547 () (_ BitVec 64))
(declare-fun var8991111 () (_ BitVec 64))
(declare-fun var8991107 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp71_250 () (_ BitVec 64))
(assert (= temp71_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp71_1)))
(assert (= temp71_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp71_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_3 #x0000000000000000))
(assert (= var79869 temp71_3))
(assert (= temp71_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp71_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_5 #x0000000000000000))
(assert (= var79914 temp71_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp71_6 #x0000000000000000))
(assert (= temp71_7 temp71_6))
(assert (= temp71_8 (select ARGNAME_padding_NAMEEND_VAL temp71_7)))
(assert (= temp71_9 #x0000000000000001))
(assert (= temp71_10 temp71_9))
(assert (= temp71_11 (select ARGNAME_padding_NAMEEND_VAL temp71_10)))
(assert (= temp71_12 #x0000000000000002))
(assert (= temp71_13 temp71_12))
(assert (= temp71_14 (select ARGNAME_padding_NAMEEND_VAL temp71_13)))
(assert (= temp71_15 #x0000000000000003))
(assert (= temp71_16 temp71_15))
(assert (= temp71_17 (select ARGNAME_padding_NAMEEND_VAL temp71_16)))
(assert (= temp71_18 #x0000000000000004))
(assert (= temp71_19 temp71_18))
(assert (= temp71_20 (select ARGNAME_padding_NAMEEND_VAL temp71_19)))
(assert (= temp71_21 #x0000000000000005))
(assert (= temp71_22 temp71_21))
(assert (= temp71_23 (select ARGNAME_padding_NAMEEND_VAL temp71_22)))
(assert (= temp71_24 #x0000000000000000))
(assert (= temp71_25 #x0000000000000000))
(assert (= temp71_26 temp71_25))
(assert (= temp71_27 (select ARGNAME_padding_NAMEEND_VAL temp71_26)))
(assert (= temp71_28 #x0000000000000000))
(assert (= temp71_29 #x0000000000000001))
(assert (= temp71_30 temp71_29))
(assert (= temp71_31 (select ARGNAME_padding_NAMEEND_VAL temp71_30)))
(assert (= temp71_32 #x0000000000000000))
(assert (= temp71_33 #x0000000000000002))
(assert (= temp71_34 temp71_33))
(assert (= temp71_35 (select ARGNAME_padding_NAMEEND_VAL temp71_34)))
(assert (= temp71_36 #x0000000000000000))
(assert (= temp71_37 #x0000000000000003))
(assert (= temp71_38 temp71_37))
(assert (= temp71_39 (select ARGNAME_padding_NAMEEND_VAL temp71_38)))
(assert (= temp71_40 #x0000000000000000))
(assert (= temp71_41 #x0000000000000004))
(assert (= temp71_42 temp71_41))
(assert (= temp71_43 (select ARGNAME_padding_NAMEEND_VAL temp71_42)))
(assert (= temp71_44 #x0000000000000000))
(assert (= temp71_45 #x0000000000000005))
(assert (= temp71_46 temp71_45))
(assert (= temp71_47 (select ARGNAME_padding_NAMEEND_VAL temp71_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp71_27 temp71_24)
             (bvslt temp71_31 temp71_28)
             (bvslt temp71_35 temp71_32)
             (bvslt temp71_39 temp71_36)
             (bvslt temp71_43 temp71_40)
             (bvslt temp71_47 temp71_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_48 #x0000000000000000))
(assert (= var1322786 temp71_48))
(assert (= temp71_49 #x0000000000000000))
(assert (= temp71_50 temp71_49))
(assert (= temp71_51 (select ARGNAME_output_padding_NAMEEND_VAL temp71_50)))
(assert (= temp71_52 #x0000000000000001))
(assert (= temp71_53 temp71_52))
(assert (= temp71_54 (select ARGNAME_output_padding_NAMEEND_VAL temp71_53)))
(assert (= temp71_55 #x0000000000000002))
(assert (= temp71_56 temp71_55))
(assert (= temp71_57 (select ARGNAME_output_padding_NAMEEND_VAL temp71_56)))
(assert (= temp71_58 #x0000000000000003))
(assert (= temp71_59 temp71_58))
(assert (= temp71_60 (select ARGNAME_output_padding_NAMEEND_VAL temp71_59)))
(assert (= temp71_61 #x0000000000000004))
(assert (= temp71_62 temp71_61))
(assert (= temp71_63 (select ARGNAME_output_padding_NAMEEND_VAL temp71_62)))
(assert (= temp71_64 #x0000000000000005))
(assert (= temp71_65 temp71_64))
(assert (= temp71_66 (select ARGNAME_output_padding_NAMEEND_VAL temp71_65)))
(assert (= temp71_67 #x0000000000000000))
(assert (= temp71_68 #x0000000000000000))
(assert (= temp71_69 temp71_68))
(assert (= temp71_70 (select ARGNAME_output_padding_NAMEEND_VAL temp71_69)))
(assert (= temp71_71 #x0000000000000000))
(assert (= temp71_72 #x0000000000000001))
(assert (= temp71_73 temp71_72))
(assert (= temp71_74 (select ARGNAME_output_padding_NAMEEND_VAL temp71_73)))
(assert (= temp71_75 #x0000000000000000))
(assert (= temp71_76 #x0000000000000002))
(assert (= temp71_77 temp71_76))
(assert (= temp71_78 (select ARGNAME_output_padding_NAMEEND_VAL temp71_77)))
(assert (= temp71_79 #x0000000000000000))
(assert (= temp71_80 #x0000000000000003))
(assert (= temp71_81 temp71_80))
(assert (= temp71_82 (select ARGNAME_output_padding_NAMEEND_VAL temp71_81)))
(assert (= temp71_83 #x0000000000000000))
(assert (= temp71_84 #x0000000000000004))
(assert (= temp71_85 temp71_84))
(assert (= temp71_86 (select ARGNAME_output_padding_NAMEEND_VAL temp71_85)))
(assert (= temp71_87 #x0000000000000000))
(assert (= temp71_88 #x0000000000000005))
(assert (= temp71_89 temp71_88))
(assert (= temp71_90 (select ARGNAME_output_padding_NAMEEND_VAL temp71_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp71_70 temp71_67)
             (bvslt temp71_74 temp71_71)
             (bvslt temp71_78 temp71_75)
             (bvslt temp71_82 temp71_79)
             (bvslt temp71_86 temp71_83)
             (bvslt temp71_90 temp71_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_91 #x0000000000000000))
(assert (= var1322797 temp71_91))
(assert (= temp71_92 #x0000000000000000))
(assert (= temp71_93 temp71_92))
(assert (= temp71_94 (select ARGNAME_stride_NAMEEND_VAL temp71_93)))
(assert (= temp71_95 #x0000000000000001))
(assert (= temp71_96 temp71_95))
(assert (= temp71_97 (select ARGNAME_stride_NAMEEND_VAL temp71_96)))
(assert (= temp71_98 #x0000000000000002))
(assert (= temp71_99 temp71_98))
(assert (= temp71_100 (select ARGNAME_stride_NAMEEND_VAL temp71_99)))
(assert (= temp71_101 #x0000000000000003))
(assert (= temp71_102 temp71_101))
(assert (= temp71_103 (select ARGNAME_stride_NAMEEND_VAL temp71_102)))
(assert (= temp71_104 #x0000000000000004))
(assert (= temp71_105 temp71_104))
(assert (= temp71_106 (select ARGNAME_stride_NAMEEND_VAL temp71_105)))
(assert (= temp71_107 #x0000000000000005))
(assert (= temp71_108 temp71_107))
(assert (= temp71_109 (select ARGNAME_stride_NAMEEND_VAL temp71_108)))
(assert (= temp71_110 #x0000000000000000))
(assert (= temp71_111 #x0000000000000000))
(assert (= temp71_112 temp71_111))
(assert (= temp71_113 (select ARGNAME_stride_NAMEEND_VAL temp71_112)))
(assert (= temp71_114 #x0000000000000000))
(assert (= temp71_115 #x0000000000000001))
(assert (= temp71_116 temp71_115))
(assert (= temp71_117 (select ARGNAME_stride_NAMEEND_VAL temp71_116)))
(assert (= temp71_118 #x0000000000000000))
(assert (= temp71_119 #x0000000000000002))
(assert (= temp71_120 temp71_119))
(assert (= temp71_121 (select ARGNAME_stride_NAMEEND_VAL temp71_120)))
(assert (= temp71_122 #x0000000000000000))
(assert (= temp71_123 #x0000000000000003))
(assert (= temp71_124 temp71_123))
(assert (= temp71_125 (select ARGNAME_stride_NAMEEND_VAL temp71_124)))
(assert (= temp71_126 #x0000000000000000))
(assert (= temp71_127 #x0000000000000004))
(assert (= temp71_128 temp71_127))
(assert (= temp71_129 (select ARGNAME_stride_NAMEEND_VAL temp71_128)))
(assert (= temp71_130 #x0000000000000000))
(assert (= temp71_131 #x0000000000000005))
(assert (= temp71_132 temp71_131))
(assert (= temp71_133 (select ARGNAME_stride_NAMEEND_VAL temp71_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp71_113 temp71_110)
             (bvsle temp71_117 temp71_114)
             (bvsle temp71_121 temp71_118)
             (bvsle temp71_125 temp71_122)
             (bvsle temp71_129 temp71_126)
             (bvsle temp71_133 temp71_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_134 #x0000000000000000))
(assert (= var1322807 temp71_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_135 #x0000000000000001))
(assert (= var1322819 temp71_135))
(assert (= temp71_136 #x0000000000000000))
(assert (= var1310898 temp71_136))
(assert (= temp71_137 #x0000000000000000))
(assert (= temp71_138 temp71_137))
(assert (= temp71_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_138)))
(assert (= temp71_140 #x0000000000000001))
(assert (= temp71_141 temp71_140))
(assert (= temp71_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_141)))
(assert (= temp71_143 #x0000000000000002))
(assert (= temp71_144 temp71_143))
(assert (= temp71_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_144)))
(assert (= temp71_146 #x0000000000000003))
(assert (= temp71_147 temp71_146))
(assert (= temp71_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_147)))
(assert (= temp71_149 #x0000000000000004))
(assert (= temp71_150 temp71_149))
(assert (= temp71_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_150)))
(assert (= temp71_152 #x0000000000000005))
(assert (= temp71_153 temp71_152))
(assert (= temp71_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_153)))
(assert (= temp71_156 var1310898))
(assert (= temp71_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_156)))
(assert (= temp71_155 temp71_157))
(assert (= var1322852
   (ite (bvslt temp71_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_158 #x0000000000000000))
(assert (= var1322852 temp71_158))
(assert (= temp71_159 #x0000000000000000))
(assert (= var1310898 temp71_159))
(assert (= temp71_161 var1310898))
(assert (= temp71_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_161)))
(assert (= temp71_160 temp71_162))
(assert (= var1322874 (bvsmod temp71_160 ARGNAME_groups_NAMEEND)))
(assert (= temp71_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp71_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp71_164 #x0000000000000001))
(assert (= var1322875 temp71_164))
(assert (= temp71_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp71_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_166 #x0000000000000001))
(assert (= var1322895 temp71_166))
(assert (= temp71_167 #x0000000000000001))
(assert (= var1311786 temp71_167))
(assert (= temp71_168 #x0000000000000000))
(assert (= temp71_169 temp71_168))
(assert (= temp71_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp71_169)))
(assert (= temp71_171 #x0000000000000001))
(assert (= temp71_172 temp71_171))
(assert (= temp71_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp71_172)))
(assert (= temp71_174 #x0000000000000002))
(assert (= temp71_175 temp71_174))
(assert (= temp71_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp71_175)))
(assert (= temp71_177 #x0000000000000003))
(assert (= temp71_178 temp71_177))
(assert (= temp71_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp71_178)))
(assert (= temp71_180 #x0000000000000004))
(assert (= temp71_181 temp71_180))
(assert (= temp71_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp71_181)))
(assert (= temp71_183 #x0000000000000005))
(assert (= temp71_184 temp71_183))
(assert (= temp71_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp71_184)))
(assert (= temp71_186 #x0000000000000000))
(assert (= temp71_187
   (ite (bvslt var1311786 temp71_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp71_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp71_187)))
(assert (= var1322903 temp71_188))
(assert (bvslt (ite (bvslt var1311786 temp71_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp71_189 #x0000000000000001))
(assert (= var1311786 temp71_189))
(assert (= temp71_191 var1311786))
(assert (= temp71_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_191)))
(assert (= temp71_190 temp71_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp71_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp71_193 #x0000000000000001))
(assert (= var1322908 temp71_193))
(assert (= temp71_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp71_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_195 #x0000000000000001))
(assert (= var1322975 temp71_195))
(assert (= temp71_196 #x0000000000000000))
(assert (= var1310898 temp71_196))
(assert (= temp71_197 #x0000000000000000))
(assert (= temp71_198 temp71_197))
(assert (= temp71_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp71_198)))
(assert (= temp71_200 #x0000000000000001))
(assert (= temp71_201 temp71_200))
(assert (= temp71_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp71_201)))
(assert (= temp71_203 #x0000000000000002))
(assert (= temp71_204 temp71_203))
(assert (= temp71_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp71_204)))
(assert (= temp71_206 #x0000000000000003))
(assert (= temp71_207 temp71_206))
(assert (= temp71_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp71_207)))
(assert (= temp71_209 #x0000000000000004))
(assert (= temp71_210 temp71_209))
(assert (= temp71_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp71_210)))
(assert (= temp71_212 #x0000000000000005))
(assert (= temp71_213 temp71_212))
(assert (= temp71_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp71_213)))
(assert (= temp71_215 #x0000000000000000))
(assert (= temp71_216
   (ite (bvslt var1310898 temp71_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp71_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp71_216)))
(assert (= var1322977 temp71_217))
(assert (bvslt (ite (bvslt var1310898 temp71_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp71_218 #x0000000000000000))
(assert (= var1310898 temp71_218))
(assert (= temp71_220 var1310898))
(assert (= temp71_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp71_220)))
(assert (= temp71_219 temp71_221))
(assert (= var1322980
   (ite (= var1322977 temp71_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp71_222 #x0000000000000001))
(assert (= var1322980 temp71_222))
(assert (= temp71_223 #x0000000000000002))
(assert (= var1848169 temp71_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp71_225 #x0000000000000001))
(assert (= var1323065 temp71_225))
(assert (= temp71_226 #x0000000000000001))
(assert (= var3486735 temp71_226))
(assert (= temp71_227 #x0000000000000001))
(assert (= var3814415 temp71_227))
(assert (= temp71_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp71_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_229 #x0000000000000001))
(assert (= var79986 temp71_229))
(assert (= temp71_230 #x0000000000000001))
(assert (= var80116 temp71_230))
(assert (= var4796905 var80116))
(assert (= temp71_231 #x0000000000000000))
(assert (= var4784306 temp71_231))
(assert (= temp71_232 #x0000000000000000))
(assert (= temp71_233
   (ite (bvslt var4784306 temp71_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp71_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp71_233)))
(assert (= var4796924 temp71_234))
(assert (bvslt (ite (bvslt var4784306 temp71_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp71_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp71_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp71_236 #x0000000000000001))
(assert (= var4796925 temp71_236))
(assert (= temp71_237 #x0000000000000000))
(assert (= var4996927 temp71_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp71_238 #x0000000000000002))
(assert (= var5125763 temp71_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_239 #x0000000000000000))
(assert (= var5191324 temp71_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp71_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp71_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp71_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp71_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp71_244 #x0000000000000001))
(assert (= temp71_243 temp71_244))
(assert (= temp71_245 #x0000000000000001))
(assert (= var8326634 temp71_245))
(assert (= temp71_247 #xffffffffffffffff))
(assert (= temp71_246 temp71_247))
(assert (= temp71_248 #x0000000000000001))
(assert (= var79986 temp71_248))
(assert (= temp71_249 #x0000000000000000))
(assert (= var9122580 temp71_249))
(assert (= var9122547 var9122580))
(assert (= var8991111 var9122547))
(assert (= var8991107 var8991111))
(assert (= var81597 var8991107))
(assert (= temp71_250 #x0000000000000000))
(assert (= var81597 temp71_250))
(model-add temp71_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp71_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp71_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






