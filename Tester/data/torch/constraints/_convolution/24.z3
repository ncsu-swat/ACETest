(declare-fun temp32_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp32_2 () (_ BitVec 64))
(declare-fun temp32_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp32_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp32_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp32_6 () (_ BitVec 64))
(declare-fun temp32_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_8 () (_ BitVec 64))
(declare-fun temp32_9 () (_ BitVec 64))
(declare-fun temp32_10 () (_ BitVec 64))
(declare-fun temp32_11 () (_ BitVec 64))
(declare-fun temp32_12 () (_ BitVec 64))
(declare-fun temp32_13 () (_ BitVec 64))
(declare-fun temp32_14 () (_ BitVec 64))
(declare-fun temp32_15 () (_ BitVec 64))
(declare-fun temp32_16 () (_ BitVec 64))
(declare-fun temp32_17 () (_ BitVec 64))
(declare-fun temp32_18 () (_ BitVec 64))
(declare-fun temp32_19 () (_ BitVec 64))
(declare-fun temp32_20 () (_ BitVec 64))
(declare-fun temp32_21 () (_ BitVec 64))
(declare-fun temp32_22 () (_ BitVec 64))
(declare-fun temp32_23 () (_ BitVec 64))
(declare-fun temp32_24 () (_ BitVec 64))
(declare-fun temp32_25 () (_ BitVec 64))
(declare-fun temp32_26 () (_ BitVec 64))
(declare-fun temp32_27 () (_ BitVec 64))
(declare-fun temp32_28 () (_ BitVec 64))
(declare-fun temp32_29 () (_ BitVec 64))
(declare-fun temp32_30 () (_ BitVec 64))
(declare-fun temp32_31 () (_ BitVec 64))
(declare-fun temp32_32 () (_ BitVec 64))
(declare-fun temp32_33 () (_ BitVec 64))
(declare-fun temp32_34 () (_ BitVec 64))
(declare-fun temp32_35 () (_ BitVec 64))
(declare-fun temp32_36 () (_ BitVec 64))
(declare-fun temp32_37 () (_ BitVec 64))
(declare-fun temp32_38 () (_ BitVec 64))
(declare-fun temp32_39 () (_ BitVec 64))
(declare-fun temp32_40 () (_ BitVec 64))
(declare-fun temp32_41 () (_ BitVec 64))
(declare-fun temp32_42 () (_ BitVec 64))
(declare-fun temp32_43 () (_ BitVec 64))
(declare-fun temp32_44 () (_ BitVec 64))
(declare-fun temp32_45 () (_ BitVec 64))
(declare-fun temp32_46 () (_ BitVec 64))
(declare-fun temp32_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp32_48 () (_ BitVec 64))
(declare-fun temp32_49 () (_ BitVec 64))
(declare-fun temp32_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_51 () (_ BitVec 64))
(declare-fun temp32_52 () (_ BitVec 64))
(declare-fun temp32_53 () (_ BitVec 64))
(declare-fun temp32_54 () (_ BitVec 64))
(declare-fun temp32_55 () (_ BitVec 64))
(declare-fun temp32_56 () (_ BitVec 64))
(declare-fun temp32_57 () (_ BitVec 64))
(declare-fun temp32_58 () (_ BitVec 64))
(declare-fun temp32_59 () (_ BitVec 64))
(declare-fun temp32_60 () (_ BitVec 64))
(declare-fun temp32_61 () (_ BitVec 64))
(declare-fun temp32_62 () (_ BitVec 64))
(declare-fun temp32_63 () (_ BitVec 64))
(declare-fun temp32_64 () (_ BitVec 64))
(declare-fun temp32_65 () (_ BitVec 64))
(declare-fun temp32_66 () (_ BitVec 64))
(declare-fun temp32_67 () (_ BitVec 64))
(declare-fun temp32_68 () (_ BitVec 64))
(declare-fun temp32_69 () (_ BitVec 64))
(declare-fun temp32_70 () (_ BitVec 64))
(declare-fun temp32_71 () (_ BitVec 64))
(declare-fun temp32_72 () (_ BitVec 64))
(declare-fun temp32_73 () (_ BitVec 64))
(declare-fun temp32_74 () (_ BitVec 64))
(declare-fun temp32_75 () (_ BitVec 64))
(declare-fun temp32_76 () (_ BitVec 64))
(declare-fun temp32_77 () (_ BitVec 64))
(declare-fun temp32_78 () (_ BitVec 64))
(declare-fun temp32_79 () (_ BitVec 64))
(declare-fun temp32_80 () (_ BitVec 64))
(declare-fun temp32_81 () (_ BitVec 64))
(declare-fun temp32_82 () (_ BitVec 64))
(declare-fun temp32_83 () (_ BitVec 64))
(declare-fun temp32_84 () (_ BitVec 64))
(declare-fun temp32_85 () (_ BitVec 64))
(declare-fun temp32_86 () (_ BitVec 64))
(declare-fun temp32_87 () (_ BitVec 64))
(declare-fun temp32_88 () (_ BitVec 64))
(declare-fun temp32_89 () (_ BitVec 64))
(declare-fun temp32_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp32_91 () (_ BitVec 64))
(declare-fun temp32_92 () (_ BitVec 64))
(declare-fun temp32_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_94 () (_ BitVec 64))
(declare-fun temp32_95 () (_ BitVec 64))
(declare-fun temp32_96 () (_ BitVec 64))
(declare-fun temp32_97 () (_ BitVec 64))
(declare-fun temp32_98 () (_ BitVec 64))
(declare-fun temp32_99 () (_ BitVec 64))
(declare-fun temp32_100 () (_ BitVec 64))
(declare-fun temp32_101 () (_ BitVec 64))
(declare-fun temp32_102 () (_ BitVec 64))
(declare-fun temp32_103 () (_ BitVec 64))
(declare-fun temp32_104 () (_ BitVec 64))
(declare-fun temp32_105 () (_ BitVec 64))
(declare-fun temp32_106 () (_ BitVec 64))
(declare-fun temp32_107 () (_ BitVec 64))
(declare-fun temp32_108 () (_ BitVec 64))
(declare-fun temp32_109 () (_ BitVec 64))
(declare-fun temp32_110 () (_ BitVec 64))
(declare-fun temp32_111 () (_ BitVec 64))
(declare-fun temp32_112 () (_ BitVec 64))
(declare-fun temp32_113 () (_ BitVec 64))
(declare-fun temp32_114 () (_ BitVec 64))
(declare-fun temp32_115 () (_ BitVec 64))
(declare-fun temp32_116 () (_ BitVec 64))
(declare-fun temp32_117 () (_ BitVec 64))
(declare-fun temp32_118 () (_ BitVec 64))
(declare-fun temp32_119 () (_ BitVec 64))
(declare-fun temp32_120 () (_ BitVec 64))
(declare-fun temp32_121 () (_ BitVec 64))
(declare-fun temp32_122 () (_ BitVec 64))
(declare-fun temp32_123 () (_ BitVec 64))
(declare-fun temp32_124 () (_ BitVec 64))
(declare-fun temp32_125 () (_ BitVec 64))
(declare-fun temp32_126 () (_ BitVec 64))
(declare-fun temp32_127 () (_ BitVec 64))
(declare-fun temp32_128 () (_ BitVec 64))
(declare-fun temp32_129 () (_ BitVec 64))
(declare-fun temp32_130 () (_ BitVec 64))
(declare-fun temp32_131 () (_ BitVec 64))
(declare-fun temp32_132 () (_ BitVec 64))
(declare-fun temp32_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp32_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp32_135 () (_ BitVec 64))
(declare-fun temp32_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp32_137 () (_ BitVec 64))
(declare-fun temp32_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_139 () (_ BitVec 64))
(declare-fun temp32_140 () (_ BitVec 64))
(declare-fun temp32_141 () (_ BitVec 64))
(declare-fun temp32_142 () (_ BitVec 64))
(declare-fun temp32_143 () (_ BitVec 64))
(declare-fun temp32_144 () (_ BitVec 64))
(declare-fun temp32_145 () (_ BitVec 64))
(declare-fun temp32_146 () (_ BitVec 64))
(declare-fun temp32_147 () (_ BitVec 64))
(declare-fun temp32_148 () (_ BitVec 64))
(declare-fun temp32_149 () (_ BitVec 64))
(declare-fun temp32_150 () (_ BitVec 64))
(declare-fun temp32_151 () (_ BitVec 64))
(declare-fun temp32_152 () (_ BitVec 64))
(declare-fun temp32_153 () (_ BitVec 64))
(declare-fun temp32_154 () (_ BitVec 64))
(declare-fun temp32_156 () (_ BitVec 64))
(declare-fun temp32_157 () (_ BitVec 64))
(declare-fun temp32_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp32_158 () (_ BitVec 64))
(declare-fun temp32_159 () (_ BitVec 64))
(declare-fun temp32_161 () (_ BitVec 64))
(declare-fun temp32_162 () (_ BitVec 64))
(declare-fun temp32_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp32_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp32_164 () (_ BitVec 64))
(declare-fun temp32_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp32_166 () (_ BitVec 64))
(declare-fun temp32_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp32_168 () (_ BitVec 64))
(declare-fun temp32_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_170 () (_ BitVec 64))
(declare-fun temp32_171 () (_ BitVec 64))
(declare-fun temp32_172 () (_ BitVec 64))
(declare-fun temp32_173 () (_ BitVec 64))
(declare-fun temp32_174 () (_ BitVec 64))
(declare-fun temp32_175 () (_ BitVec 64))
(declare-fun temp32_176 () (_ BitVec 64))
(declare-fun temp32_177 () (_ BitVec 64))
(declare-fun temp32_178 () (_ BitVec 64))
(declare-fun temp32_179 () (_ BitVec 64))
(declare-fun temp32_180 () (_ BitVec 64))
(declare-fun temp32_181 () (_ BitVec 64))
(declare-fun temp32_182 () (_ BitVec 64))
(declare-fun temp32_183 () (_ BitVec 64))
(declare-fun temp32_184 () (_ BitVec 64))
(declare-fun temp32_185 () (_ BitVec 64))
(declare-fun temp32_186 () (_ BitVec 64))
(declare-fun temp32_187 () (_ BitVec 64))
(declare-fun temp32_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp32_189 () (_ BitVec 64))
(declare-fun temp32_191 () (_ BitVec 64))
(declare-fun temp32_192 () (_ BitVec 64))
(declare-fun temp32_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp32_193 () (_ BitVec 64))
(declare-fun temp32_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp32_195 () (_ BitVec 64))
(declare-fun temp32_196 () (_ BitVec 64))
(declare-fun temp32_197 () (_ BitVec 64))
(declare-fun temp32_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_199 () (_ BitVec 64))
(declare-fun temp32_200 () (_ BitVec 64))
(declare-fun temp32_201 () (_ BitVec 64))
(declare-fun temp32_202 () (_ BitVec 64))
(declare-fun temp32_203 () (_ BitVec 64))
(declare-fun temp32_204 () (_ BitVec 64))
(declare-fun temp32_205 () (_ BitVec 64))
(declare-fun temp32_206 () (_ BitVec 64))
(declare-fun temp32_207 () (_ BitVec 64))
(declare-fun temp32_208 () (_ BitVec 64))
(declare-fun temp32_209 () (_ BitVec 64))
(declare-fun temp32_210 () (_ BitVec 64))
(declare-fun temp32_211 () (_ BitVec 64))
(declare-fun temp32_212 () (_ BitVec 64))
(declare-fun temp32_213 () (_ BitVec 64))
(declare-fun temp32_214 () (_ BitVec 64))
(declare-fun temp32_215 () (_ BitVec 64))
(declare-fun temp32_216 () (_ BitVec 64))
(declare-fun temp32_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp32_218 () (_ BitVec 64))
(declare-fun temp32_220 () (_ BitVec 64))
(declare-fun temp32_221 () (_ BitVec 64))
(declare-fun temp32_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp32_222 () (_ BitVec 64))
(declare-fun temp32_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp32_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp32_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp32_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp32_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp32_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp32_229 () (_ BitVec 64))
(declare-fun temp32_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp32_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp32_232 () (_ BitVec 64))
(declare-fun temp32_233 () (_ BitVec 64))
(declare-fun temp32_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp32_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp32_236 () (_ BitVec 64))
(declare-fun temp32_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp32_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp32_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp32_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp32_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp32_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp32_244 () (_ BitVec 64))
(declare-fun temp32_243 () (_ BitVec 64))
(assert (= temp32_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp32_1)))
(assert (= temp32_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp32_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_3 #x0000000000000000))
(assert (= var79869 temp32_3))
(assert (= temp32_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp32_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_5 #x0000000000000000))
(assert (= var79914 temp32_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp32_6 #x0000000000000000))
(assert (= temp32_7 temp32_6))
(assert (= temp32_8 (select ARGNAME_padding_NAMEEND_VAL temp32_7)))
(assert (= temp32_9 #x0000000000000001))
(assert (= temp32_10 temp32_9))
(assert (= temp32_11 (select ARGNAME_padding_NAMEEND_VAL temp32_10)))
(assert (= temp32_12 #x0000000000000002))
(assert (= temp32_13 temp32_12))
(assert (= temp32_14 (select ARGNAME_padding_NAMEEND_VAL temp32_13)))
(assert (= temp32_15 #x0000000000000003))
(assert (= temp32_16 temp32_15))
(assert (= temp32_17 (select ARGNAME_padding_NAMEEND_VAL temp32_16)))
(assert (= temp32_18 #x0000000000000004))
(assert (= temp32_19 temp32_18))
(assert (= temp32_20 (select ARGNAME_padding_NAMEEND_VAL temp32_19)))
(assert (= temp32_21 #x0000000000000005))
(assert (= temp32_22 temp32_21))
(assert (= temp32_23 (select ARGNAME_padding_NAMEEND_VAL temp32_22)))
(assert (= temp32_24 #x0000000000000000))
(assert (= temp32_25 #x0000000000000000))
(assert (= temp32_26 temp32_25))
(assert (= temp32_27 (select ARGNAME_padding_NAMEEND_VAL temp32_26)))
(assert (= temp32_28 #x0000000000000000))
(assert (= temp32_29 #x0000000000000001))
(assert (= temp32_30 temp32_29))
(assert (= temp32_31 (select ARGNAME_padding_NAMEEND_VAL temp32_30)))
(assert (= temp32_32 #x0000000000000000))
(assert (= temp32_33 #x0000000000000002))
(assert (= temp32_34 temp32_33))
(assert (= temp32_35 (select ARGNAME_padding_NAMEEND_VAL temp32_34)))
(assert (= temp32_36 #x0000000000000000))
(assert (= temp32_37 #x0000000000000003))
(assert (= temp32_38 temp32_37))
(assert (= temp32_39 (select ARGNAME_padding_NAMEEND_VAL temp32_38)))
(assert (= temp32_40 #x0000000000000000))
(assert (= temp32_41 #x0000000000000004))
(assert (= temp32_42 temp32_41))
(assert (= temp32_43 (select ARGNAME_padding_NAMEEND_VAL temp32_42)))
(assert (= temp32_44 #x0000000000000000))
(assert (= temp32_45 #x0000000000000005))
(assert (= temp32_46 temp32_45))
(assert (= temp32_47 (select ARGNAME_padding_NAMEEND_VAL temp32_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp32_27 temp32_24)
             (bvslt temp32_31 temp32_28)
             (bvslt temp32_35 temp32_32)
             (bvslt temp32_39 temp32_36)
             (bvslt temp32_43 temp32_40)
             (bvslt temp32_47 temp32_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_48 #x0000000000000000))
(assert (= var1322786 temp32_48))
(assert (= temp32_49 #x0000000000000000))
(assert (= temp32_50 temp32_49))
(assert (= temp32_51 (select ARGNAME_output_padding_NAMEEND_VAL temp32_50)))
(assert (= temp32_52 #x0000000000000001))
(assert (= temp32_53 temp32_52))
(assert (= temp32_54 (select ARGNAME_output_padding_NAMEEND_VAL temp32_53)))
(assert (= temp32_55 #x0000000000000002))
(assert (= temp32_56 temp32_55))
(assert (= temp32_57 (select ARGNAME_output_padding_NAMEEND_VAL temp32_56)))
(assert (= temp32_58 #x0000000000000003))
(assert (= temp32_59 temp32_58))
(assert (= temp32_60 (select ARGNAME_output_padding_NAMEEND_VAL temp32_59)))
(assert (= temp32_61 #x0000000000000004))
(assert (= temp32_62 temp32_61))
(assert (= temp32_63 (select ARGNAME_output_padding_NAMEEND_VAL temp32_62)))
(assert (= temp32_64 #x0000000000000005))
(assert (= temp32_65 temp32_64))
(assert (= temp32_66 (select ARGNAME_output_padding_NAMEEND_VAL temp32_65)))
(assert (= temp32_67 #x0000000000000000))
(assert (= temp32_68 #x0000000000000000))
(assert (= temp32_69 temp32_68))
(assert (= temp32_70 (select ARGNAME_output_padding_NAMEEND_VAL temp32_69)))
(assert (= temp32_71 #x0000000000000000))
(assert (= temp32_72 #x0000000000000001))
(assert (= temp32_73 temp32_72))
(assert (= temp32_74 (select ARGNAME_output_padding_NAMEEND_VAL temp32_73)))
(assert (= temp32_75 #x0000000000000000))
(assert (= temp32_76 #x0000000000000002))
(assert (= temp32_77 temp32_76))
(assert (= temp32_78 (select ARGNAME_output_padding_NAMEEND_VAL temp32_77)))
(assert (= temp32_79 #x0000000000000000))
(assert (= temp32_80 #x0000000000000003))
(assert (= temp32_81 temp32_80))
(assert (= temp32_82 (select ARGNAME_output_padding_NAMEEND_VAL temp32_81)))
(assert (= temp32_83 #x0000000000000000))
(assert (= temp32_84 #x0000000000000004))
(assert (= temp32_85 temp32_84))
(assert (= temp32_86 (select ARGNAME_output_padding_NAMEEND_VAL temp32_85)))
(assert (= temp32_87 #x0000000000000000))
(assert (= temp32_88 #x0000000000000005))
(assert (= temp32_89 temp32_88))
(assert (= temp32_90 (select ARGNAME_output_padding_NAMEEND_VAL temp32_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp32_70 temp32_67)
             (bvslt temp32_74 temp32_71)
             (bvslt temp32_78 temp32_75)
             (bvslt temp32_82 temp32_79)
             (bvslt temp32_86 temp32_83)
             (bvslt temp32_90 temp32_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_91 #x0000000000000000))
(assert (= var1322797 temp32_91))
(assert (= temp32_92 #x0000000000000000))
(assert (= temp32_93 temp32_92))
(assert (= temp32_94 (select ARGNAME_stride_NAMEEND_VAL temp32_93)))
(assert (= temp32_95 #x0000000000000001))
(assert (= temp32_96 temp32_95))
(assert (= temp32_97 (select ARGNAME_stride_NAMEEND_VAL temp32_96)))
(assert (= temp32_98 #x0000000000000002))
(assert (= temp32_99 temp32_98))
(assert (= temp32_100 (select ARGNAME_stride_NAMEEND_VAL temp32_99)))
(assert (= temp32_101 #x0000000000000003))
(assert (= temp32_102 temp32_101))
(assert (= temp32_103 (select ARGNAME_stride_NAMEEND_VAL temp32_102)))
(assert (= temp32_104 #x0000000000000004))
(assert (= temp32_105 temp32_104))
(assert (= temp32_106 (select ARGNAME_stride_NAMEEND_VAL temp32_105)))
(assert (= temp32_107 #x0000000000000005))
(assert (= temp32_108 temp32_107))
(assert (= temp32_109 (select ARGNAME_stride_NAMEEND_VAL temp32_108)))
(assert (= temp32_110 #x0000000000000000))
(assert (= temp32_111 #x0000000000000000))
(assert (= temp32_112 temp32_111))
(assert (= temp32_113 (select ARGNAME_stride_NAMEEND_VAL temp32_112)))
(assert (= temp32_114 #x0000000000000000))
(assert (= temp32_115 #x0000000000000001))
(assert (= temp32_116 temp32_115))
(assert (= temp32_117 (select ARGNAME_stride_NAMEEND_VAL temp32_116)))
(assert (= temp32_118 #x0000000000000000))
(assert (= temp32_119 #x0000000000000002))
(assert (= temp32_120 temp32_119))
(assert (= temp32_121 (select ARGNAME_stride_NAMEEND_VAL temp32_120)))
(assert (= temp32_122 #x0000000000000000))
(assert (= temp32_123 #x0000000000000003))
(assert (= temp32_124 temp32_123))
(assert (= temp32_125 (select ARGNAME_stride_NAMEEND_VAL temp32_124)))
(assert (= temp32_126 #x0000000000000000))
(assert (= temp32_127 #x0000000000000004))
(assert (= temp32_128 temp32_127))
(assert (= temp32_129 (select ARGNAME_stride_NAMEEND_VAL temp32_128)))
(assert (= temp32_130 #x0000000000000000))
(assert (= temp32_131 #x0000000000000005))
(assert (= temp32_132 temp32_131))
(assert (= temp32_133 (select ARGNAME_stride_NAMEEND_VAL temp32_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp32_113 temp32_110)
             (bvsle temp32_117 temp32_114)
             (bvsle temp32_121 temp32_118)
             (bvsle temp32_125 temp32_122)
             (bvsle temp32_129 temp32_126)
             (bvsle temp32_133 temp32_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_134 #x0000000000000000))
(assert (= var1322807 temp32_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_135 #x0000000000000001))
(assert (= var1322819 temp32_135))
(assert (= temp32_136 #x0000000000000000))
(assert (= var1310898 temp32_136))
(assert (= temp32_137 #x0000000000000000))
(assert (= temp32_138 temp32_137))
(assert (= temp32_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_138)))
(assert (= temp32_140 #x0000000000000001))
(assert (= temp32_141 temp32_140))
(assert (= temp32_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_141)))
(assert (= temp32_143 #x0000000000000002))
(assert (= temp32_144 temp32_143))
(assert (= temp32_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_144)))
(assert (= temp32_146 #x0000000000000003))
(assert (= temp32_147 temp32_146))
(assert (= temp32_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_147)))
(assert (= temp32_149 #x0000000000000004))
(assert (= temp32_150 temp32_149))
(assert (= temp32_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_150)))
(assert (= temp32_152 #x0000000000000005))
(assert (= temp32_153 temp32_152))
(assert (= temp32_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_153)))
(assert (= temp32_156 var1310898))
(assert (= temp32_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_156)))
(assert (= temp32_155 temp32_157))
(assert (= var1322852
   (ite (bvslt temp32_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_158 #x0000000000000000))
(assert (= var1322852 temp32_158))
(assert (= temp32_159 #x0000000000000000))
(assert (= var1310898 temp32_159))
(assert (= temp32_161 var1310898))
(assert (= temp32_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_161)))
(assert (= temp32_160 temp32_162))
(assert (= var1322874 (bvsmod temp32_160 ARGNAME_groups_NAMEEND)))
(assert (= temp32_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp32_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_164 #x0000000000000001))
(assert (= var1322875 temp32_164))
(assert (= temp32_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp32_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_166 #x0000000000000001))
(assert (= var1322895 temp32_166))
(assert (= temp32_167 #x0000000000000001))
(assert (= var1311786 temp32_167))
(assert (= temp32_168 #x0000000000000000))
(assert (= temp32_169 temp32_168))
(assert (= temp32_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_169)))
(assert (= temp32_171 #x0000000000000001))
(assert (= temp32_172 temp32_171))
(assert (= temp32_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_172)))
(assert (= temp32_174 #x0000000000000002))
(assert (= temp32_175 temp32_174))
(assert (= temp32_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_175)))
(assert (= temp32_177 #x0000000000000003))
(assert (= temp32_178 temp32_177))
(assert (= temp32_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_178)))
(assert (= temp32_180 #x0000000000000004))
(assert (= temp32_181 temp32_180))
(assert (= temp32_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_181)))
(assert (= temp32_183 #x0000000000000005))
(assert (= temp32_184 temp32_183))
(assert (= temp32_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_184)))
(assert (= temp32_186 #x0000000000000000))
(assert (= temp32_187
   (ite (bvslt var1311786 temp32_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp32_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_187)))
(assert (= var1322903 temp32_188))
(assert (bvslt (ite (bvslt var1311786 temp32_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp32_189 #x0000000000000001))
(assert (= var1311786 temp32_189))
(assert (= temp32_191 var1311786))
(assert (= temp32_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_191)))
(assert (= temp32_190 temp32_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp32_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_193 #x0000000000000001))
(assert (= var1322908 temp32_193))
(assert (= temp32_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp32_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_195 #x0000000000000001))
(assert (= var1322975 temp32_195))
(assert (= temp32_196 #x0000000000000000))
(assert (= var1310898 temp32_196))
(assert (= temp32_197 #x0000000000000000))
(assert (= temp32_198 temp32_197))
(assert (= temp32_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp32_198)))
(assert (= temp32_200 #x0000000000000001))
(assert (= temp32_201 temp32_200))
(assert (= temp32_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp32_201)))
(assert (= temp32_203 #x0000000000000002))
(assert (= temp32_204 temp32_203))
(assert (= temp32_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp32_204)))
(assert (= temp32_206 #x0000000000000003))
(assert (= temp32_207 temp32_206))
(assert (= temp32_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp32_207)))
(assert (= temp32_209 #x0000000000000004))
(assert (= temp32_210 temp32_209))
(assert (= temp32_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp32_210)))
(assert (= temp32_212 #x0000000000000005))
(assert (= temp32_213 temp32_212))
(assert (= temp32_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp32_213)))
(assert (= temp32_215 #x0000000000000000))
(assert (= temp32_216
   (ite (bvslt var1310898 temp32_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp32_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp32_216)))
(assert (= var1322977 temp32_217))
(assert (bvslt (ite (bvslt var1310898 temp32_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp32_218 #x0000000000000000))
(assert (= var1310898 temp32_218))
(assert (= temp32_220 var1310898))
(assert (= temp32_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_220)))
(assert (= temp32_219 temp32_221))
(assert (= var1322980
   (ite (= var1322977 temp32_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_222 #x0000000000000001))
(assert (= var1322980 temp32_222))
(assert (= temp32_223 #x0000000000000002))
(assert (= var1848169 temp32_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp32_225 #x0000000000000001))
(assert (= var1323065 temp32_225))
(assert (= temp32_226 #x0000000000000001))
(assert (= var3486735 temp32_226))
(assert (= temp32_227 #x0000000000000001))
(assert (= var3814415 temp32_227))
(assert (= temp32_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp32_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_229 #x0000000000000001))
(assert (= var79986 temp32_229))
(assert (= temp32_230 #x0000000000000001))
(assert (= var80116 temp32_230))
(assert (= var4796905 var80116))
(assert (= temp32_231 #x0000000000000000))
(assert (= var4784306 temp32_231))
(assert (= temp32_232 #x0000000000000000))
(assert (= temp32_233
   (ite (bvslt var4784306 temp32_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp32_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_233)))
(assert (= var4796924 temp32_234))
(assert (bvslt (ite (bvslt var4784306 temp32_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp32_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp32_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_236 #x0000000000000001))
(assert (= var4796925 temp32_236))
(assert (= temp32_237 #x0000000000000000))
(assert (= var4996927 temp32_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp32_238 #x0000000000000002))
(assert (= var5125763 temp32_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_239 #x0000000000000000))
(assert (= var5191324 temp32_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp32_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp32_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp32_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp32_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp32_244 #x0000000000000001))
(assert (= temp32_243 temp32_244))
(model-add temp32_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp32_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp32_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






