(declare-fun temp508_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp508_2 () (_ BitVec 64))
(declare-fun temp508_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp508_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp508_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp508_6 () (_ BitVec 64))
(declare-fun temp508_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp508_8 () (_ BitVec 64))
(declare-fun temp508_9 () (_ BitVec 64))
(declare-fun temp508_10 () (_ BitVec 64))
(declare-fun temp508_11 () (_ BitVec 64))
(declare-fun temp508_12 () (_ BitVec 64))
(declare-fun temp508_13 () (_ BitVec 64))
(declare-fun temp508_14 () (_ BitVec 64))
(declare-fun temp508_15 () (_ BitVec 64))
(declare-fun temp508_16 () (_ BitVec 64))
(declare-fun temp508_17 () (_ BitVec 64))
(declare-fun temp508_18 () (_ BitVec 64))
(declare-fun temp508_19 () (_ BitVec 64))
(declare-fun temp508_20 () (_ BitVec 64))
(declare-fun temp508_21 () (_ BitVec 64))
(declare-fun temp508_22 () (_ BitVec 64))
(declare-fun temp508_23 () (_ BitVec 64))
(declare-fun temp508_24 () (_ BitVec 64))
(declare-fun temp508_25 () (_ BitVec 64))
(declare-fun temp508_26 () (_ BitVec 64))
(declare-fun temp508_27 () (_ BitVec 64))
(declare-fun temp508_28 () (_ BitVec 64))
(declare-fun temp508_29 () (_ BitVec 64))
(declare-fun temp508_30 () (_ BitVec 64))
(declare-fun temp508_31 () (_ BitVec 64))
(declare-fun temp508_32 () (_ BitVec 64))
(declare-fun temp508_33 () (_ BitVec 64))
(declare-fun temp508_34 () (_ BitVec 64))
(declare-fun temp508_35 () (_ BitVec 64))
(declare-fun temp508_36 () (_ BitVec 64))
(declare-fun temp508_37 () (_ BitVec 64))
(declare-fun temp508_38 () (_ BitVec 64))
(declare-fun temp508_39 () (_ BitVec 64))
(declare-fun temp508_40 () (_ BitVec 64))
(declare-fun temp508_41 () (_ BitVec 64))
(declare-fun temp508_42 () (_ BitVec 64))
(declare-fun temp508_43 () (_ BitVec 64))
(declare-fun temp508_44 () (_ BitVec 64))
(declare-fun temp508_45 () (_ BitVec 64))
(declare-fun temp508_46 () (_ BitVec 64))
(declare-fun temp508_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp508_48 () (_ BitVec 64))
(declare-fun temp508_49 () (_ BitVec 64))
(declare-fun temp508_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp508_51 () (_ BitVec 64))
(declare-fun temp508_52 () (_ BitVec 64))
(declare-fun temp508_53 () (_ BitVec 64))
(declare-fun temp508_54 () (_ BitVec 64))
(declare-fun temp508_55 () (_ BitVec 64))
(declare-fun temp508_56 () (_ BitVec 64))
(declare-fun temp508_57 () (_ BitVec 64))
(declare-fun temp508_58 () (_ BitVec 64))
(declare-fun temp508_59 () (_ BitVec 64))
(declare-fun temp508_60 () (_ BitVec 64))
(declare-fun temp508_61 () (_ BitVec 64))
(declare-fun temp508_62 () (_ BitVec 64))
(declare-fun temp508_63 () (_ BitVec 64))
(declare-fun temp508_64 () (_ BitVec 64))
(declare-fun temp508_65 () (_ BitVec 64))
(declare-fun temp508_66 () (_ BitVec 64))
(declare-fun temp508_67 () (_ BitVec 64))
(declare-fun temp508_68 () (_ BitVec 64))
(declare-fun temp508_69 () (_ BitVec 64))
(declare-fun temp508_70 () (_ BitVec 64))
(declare-fun temp508_71 () (_ BitVec 64))
(declare-fun temp508_72 () (_ BitVec 64))
(declare-fun temp508_73 () (_ BitVec 64))
(declare-fun temp508_74 () (_ BitVec 64))
(declare-fun temp508_75 () (_ BitVec 64))
(declare-fun temp508_76 () (_ BitVec 64))
(declare-fun temp508_77 () (_ BitVec 64))
(declare-fun temp508_78 () (_ BitVec 64))
(declare-fun temp508_79 () (_ BitVec 64))
(declare-fun temp508_80 () (_ BitVec 64))
(declare-fun temp508_81 () (_ BitVec 64))
(declare-fun temp508_82 () (_ BitVec 64))
(declare-fun temp508_83 () (_ BitVec 64))
(declare-fun temp508_84 () (_ BitVec 64))
(declare-fun temp508_85 () (_ BitVec 64))
(declare-fun temp508_86 () (_ BitVec 64))
(declare-fun temp508_87 () (_ BitVec 64))
(declare-fun temp508_88 () (_ BitVec 64))
(declare-fun temp508_89 () (_ BitVec 64))
(declare-fun temp508_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp508_91 () (_ BitVec 64))
(declare-fun temp508_92 () (_ BitVec 64))
(declare-fun temp508_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp508_94 () (_ BitVec 64))
(declare-fun temp508_95 () (_ BitVec 64))
(declare-fun temp508_96 () (_ BitVec 64))
(declare-fun temp508_97 () (_ BitVec 64))
(declare-fun temp508_98 () (_ BitVec 64))
(declare-fun temp508_99 () (_ BitVec 64))
(declare-fun temp508_100 () (_ BitVec 64))
(declare-fun temp508_101 () (_ BitVec 64))
(declare-fun temp508_102 () (_ BitVec 64))
(declare-fun temp508_103 () (_ BitVec 64))
(declare-fun temp508_104 () (_ BitVec 64))
(declare-fun temp508_105 () (_ BitVec 64))
(declare-fun temp508_106 () (_ BitVec 64))
(declare-fun temp508_107 () (_ BitVec 64))
(declare-fun temp508_108 () (_ BitVec 64))
(declare-fun temp508_109 () (_ BitVec 64))
(declare-fun temp508_110 () (_ BitVec 64))
(declare-fun temp508_111 () (_ BitVec 64))
(declare-fun temp508_112 () (_ BitVec 64))
(declare-fun temp508_113 () (_ BitVec 64))
(declare-fun temp508_114 () (_ BitVec 64))
(declare-fun temp508_115 () (_ BitVec 64))
(declare-fun temp508_116 () (_ BitVec 64))
(declare-fun temp508_117 () (_ BitVec 64))
(declare-fun temp508_118 () (_ BitVec 64))
(declare-fun temp508_119 () (_ BitVec 64))
(declare-fun temp508_120 () (_ BitVec 64))
(declare-fun temp508_121 () (_ BitVec 64))
(declare-fun temp508_122 () (_ BitVec 64))
(declare-fun temp508_123 () (_ BitVec 64))
(declare-fun temp508_124 () (_ BitVec 64))
(declare-fun temp508_125 () (_ BitVec 64))
(declare-fun temp508_126 () (_ BitVec 64))
(declare-fun temp508_127 () (_ BitVec 64))
(declare-fun temp508_128 () (_ BitVec 64))
(declare-fun temp508_129 () (_ BitVec 64))
(declare-fun temp508_130 () (_ BitVec 64))
(declare-fun temp508_131 () (_ BitVec 64))
(declare-fun temp508_132 () (_ BitVec 64))
(declare-fun temp508_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp508_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp508_135 () (_ BitVec 64))
(declare-fun temp508_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp508_137 () (_ BitVec 64))
(declare-fun temp508_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp508_139 () (_ BitVec 64))
(declare-fun temp508_140 () (_ BitVec 64))
(declare-fun temp508_141 () (_ BitVec 64))
(declare-fun temp508_142 () (_ BitVec 64))
(declare-fun temp508_143 () (_ BitVec 64))
(declare-fun temp508_144 () (_ BitVec 64))
(declare-fun temp508_145 () (_ BitVec 64))
(declare-fun temp508_146 () (_ BitVec 64))
(declare-fun temp508_147 () (_ BitVec 64))
(declare-fun temp508_148 () (_ BitVec 64))
(declare-fun temp508_149 () (_ BitVec 64))
(declare-fun temp508_150 () (_ BitVec 64))
(declare-fun temp508_151 () (_ BitVec 64))
(declare-fun temp508_152 () (_ BitVec 64))
(declare-fun temp508_153 () (_ BitVec 64))
(declare-fun temp508_154 () (_ BitVec 64))
(declare-fun temp508_156 () (_ BitVec 64))
(declare-fun temp508_157 () (_ BitVec 64))
(declare-fun temp508_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp508_158 () (_ BitVec 64))
(declare-fun temp508_159 () (_ BitVec 64))
(declare-fun temp508_161 () (_ BitVec 64))
(declare-fun temp508_162 () (_ BitVec 64))
(declare-fun temp508_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp508_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp508_164 () (_ BitVec 64))
(declare-fun temp508_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp508_166 () (_ BitVec 64))
(declare-fun temp508_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp508_168 () (_ BitVec 64))
(declare-fun temp508_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp508_170 () (_ BitVec 64))
(declare-fun temp508_171 () (_ BitVec 64))
(declare-fun temp508_172 () (_ BitVec 64))
(declare-fun temp508_173 () (_ BitVec 64))
(declare-fun temp508_174 () (_ BitVec 64))
(declare-fun temp508_175 () (_ BitVec 64))
(declare-fun temp508_176 () (_ BitVec 64))
(declare-fun temp508_177 () (_ BitVec 64))
(declare-fun temp508_178 () (_ BitVec 64))
(declare-fun temp508_179 () (_ BitVec 64))
(declare-fun temp508_180 () (_ BitVec 64))
(declare-fun temp508_181 () (_ BitVec 64))
(declare-fun temp508_182 () (_ BitVec 64))
(declare-fun temp508_183 () (_ BitVec 64))
(declare-fun temp508_184 () (_ BitVec 64))
(declare-fun temp508_185 () (_ BitVec 64))
(declare-fun temp508_186 () (_ BitVec 64))
(declare-fun temp508_187 () (_ BitVec 64))
(declare-fun temp508_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp508_189 () (_ BitVec 64))
(declare-fun temp508_191 () (_ BitVec 64))
(declare-fun temp508_192 () (_ BitVec 64))
(declare-fun temp508_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp508_193 () (_ BitVec 64))
(declare-fun temp508_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp508_195 () (_ BitVec 64))
(declare-fun temp508_196 () (_ BitVec 64))
(declare-fun temp508_197 () (_ BitVec 64))
(declare-fun temp508_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp508_199 () (_ BitVec 64))
(declare-fun temp508_200 () (_ BitVec 64))
(declare-fun temp508_201 () (_ BitVec 64))
(declare-fun temp508_202 () (_ BitVec 64))
(declare-fun temp508_203 () (_ BitVec 64))
(declare-fun temp508_204 () (_ BitVec 64))
(declare-fun temp508_205 () (_ BitVec 64))
(declare-fun temp508_206 () (_ BitVec 64))
(declare-fun temp508_207 () (_ BitVec 64))
(declare-fun temp508_208 () (_ BitVec 64))
(declare-fun temp508_209 () (_ BitVec 64))
(declare-fun temp508_210 () (_ BitVec 64))
(declare-fun temp508_211 () (_ BitVec 64))
(declare-fun temp508_212 () (_ BitVec 64))
(declare-fun temp508_213 () (_ BitVec 64))
(declare-fun temp508_214 () (_ BitVec 64))
(declare-fun temp508_215 () (_ BitVec 64))
(declare-fun temp508_216 () (_ BitVec 64))
(declare-fun temp508_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp508_218 () (_ BitVec 64))
(declare-fun temp508_220 () (_ BitVec 64))
(declare-fun temp508_221 () (_ BitVec 64))
(declare-fun temp508_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp508_222 () (_ BitVec 64))
(declare-fun temp508_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp508_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp508_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp508_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp508_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp508_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp508_229 () (_ BitVec 64))
(declare-fun temp508_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp508_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp508_232 () (_ BitVec 64))
(declare-fun temp508_233 () (_ BitVec 64))
(declare-fun temp508_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp508_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp508_236 () (_ BitVec 64))
(declare-fun temp508_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp508_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp508_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp508_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp508_241 () (_ BitVec 64))
(declare-fun temp508_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp508_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp508_244 () (_ BitVec 64))
(assert (= temp508_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp508_1)))
(assert (= temp508_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp508_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_3 #x0000000000000000))
(assert (= var79869 temp508_3))
(assert (= temp508_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp508_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_5 #x0000000000000000))
(assert (= var79914 temp508_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp508_6 #x0000000000000000))
(assert (= temp508_7 temp508_6))
(assert (= temp508_8 (select ARGNAME_padding_NAMEEND_VAL temp508_7)))
(assert (= temp508_9 #x0000000000000001))
(assert (= temp508_10 temp508_9))
(assert (= temp508_11 (select ARGNAME_padding_NAMEEND_VAL temp508_10)))
(assert (= temp508_12 #x0000000000000002))
(assert (= temp508_13 temp508_12))
(assert (= temp508_14 (select ARGNAME_padding_NAMEEND_VAL temp508_13)))
(assert (= temp508_15 #x0000000000000003))
(assert (= temp508_16 temp508_15))
(assert (= temp508_17 (select ARGNAME_padding_NAMEEND_VAL temp508_16)))
(assert (= temp508_18 #x0000000000000004))
(assert (= temp508_19 temp508_18))
(assert (= temp508_20 (select ARGNAME_padding_NAMEEND_VAL temp508_19)))
(assert (= temp508_21 #x0000000000000005))
(assert (= temp508_22 temp508_21))
(assert (= temp508_23 (select ARGNAME_padding_NAMEEND_VAL temp508_22)))
(assert (= temp508_24 #x0000000000000000))
(assert (= temp508_25 #x0000000000000000))
(assert (= temp508_26 temp508_25))
(assert (= temp508_27 (select ARGNAME_padding_NAMEEND_VAL temp508_26)))
(assert (= temp508_28 #x0000000000000000))
(assert (= temp508_29 #x0000000000000001))
(assert (= temp508_30 temp508_29))
(assert (= temp508_31 (select ARGNAME_padding_NAMEEND_VAL temp508_30)))
(assert (= temp508_32 #x0000000000000000))
(assert (= temp508_33 #x0000000000000002))
(assert (= temp508_34 temp508_33))
(assert (= temp508_35 (select ARGNAME_padding_NAMEEND_VAL temp508_34)))
(assert (= temp508_36 #x0000000000000000))
(assert (= temp508_37 #x0000000000000003))
(assert (= temp508_38 temp508_37))
(assert (= temp508_39 (select ARGNAME_padding_NAMEEND_VAL temp508_38)))
(assert (= temp508_40 #x0000000000000000))
(assert (= temp508_41 #x0000000000000004))
(assert (= temp508_42 temp508_41))
(assert (= temp508_43 (select ARGNAME_padding_NAMEEND_VAL temp508_42)))
(assert (= temp508_44 #x0000000000000000))
(assert (= temp508_45 #x0000000000000005))
(assert (= temp508_46 temp508_45))
(assert (= temp508_47 (select ARGNAME_padding_NAMEEND_VAL temp508_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp508_27 temp508_24)
             (bvslt temp508_31 temp508_28)
             (bvslt temp508_35 temp508_32)
             (bvslt temp508_39 temp508_36)
             (bvslt temp508_43 temp508_40)
             (bvslt temp508_47 temp508_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_48 #x0000000000000000))
(assert (= var1322786 temp508_48))
(assert (= temp508_49 #x0000000000000000))
(assert (= temp508_50 temp508_49))
(assert (= temp508_51 (select ARGNAME_output_padding_NAMEEND_VAL temp508_50)))
(assert (= temp508_52 #x0000000000000001))
(assert (= temp508_53 temp508_52))
(assert (= temp508_54 (select ARGNAME_output_padding_NAMEEND_VAL temp508_53)))
(assert (= temp508_55 #x0000000000000002))
(assert (= temp508_56 temp508_55))
(assert (= temp508_57 (select ARGNAME_output_padding_NAMEEND_VAL temp508_56)))
(assert (= temp508_58 #x0000000000000003))
(assert (= temp508_59 temp508_58))
(assert (= temp508_60 (select ARGNAME_output_padding_NAMEEND_VAL temp508_59)))
(assert (= temp508_61 #x0000000000000004))
(assert (= temp508_62 temp508_61))
(assert (= temp508_63 (select ARGNAME_output_padding_NAMEEND_VAL temp508_62)))
(assert (= temp508_64 #x0000000000000005))
(assert (= temp508_65 temp508_64))
(assert (= temp508_66 (select ARGNAME_output_padding_NAMEEND_VAL temp508_65)))
(assert (= temp508_67 #x0000000000000000))
(assert (= temp508_68 #x0000000000000000))
(assert (= temp508_69 temp508_68))
(assert (= temp508_70 (select ARGNAME_output_padding_NAMEEND_VAL temp508_69)))
(assert (= temp508_71 #x0000000000000000))
(assert (= temp508_72 #x0000000000000001))
(assert (= temp508_73 temp508_72))
(assert (= temp508_74 (select ARGNAME_output_padding_NAMEEND_VAL temp508_73)))
(assert (= temp508_75 #x0000000000000000))
(assert (= temp508_76 #x0000000000000002))
(assert (= temp508_77 temp508_76))
(assert (= temp508_78 (select ARGNAME_output_padding_NAMEEND_VAL temp508_77)))
(assert (= temp508_79 #x0000000000000000))
(assert (= temp508_80 #x0000000000000003))
(assert (= temp508_81 temp508_80))
(assert (= temp508_82 (select ARGNAME_output_padding_NAMEEND_VAL temp508_81)))
(assert (= temp508_83 #x0000000000000000))
(assert (= temp508_84 #x0000000000000004))
(assert (= temp508_85 temp508_84))
(assert (= temp508_86 (select ARGNAME_output_padding_NAMEEND_VAL temp508_85)))
(assert (= temp508_87 #x0000000000000000))
(assert (= temp508_88 #x0000000000000005))
(assert (= temp508_89 temp508_88))
(assert (= temp508_90 (select ARGNAME_output_padding_NAMEEND_VAL temp508_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp508_70 temp508_67)
             (bvslt temp508_74 temp508_71)
             (bvslt temp508_78 temp508_75)
             (bvslt temp508_82 temp508_79)
             (bvslt temp508_86 temp508_83)
             (bvslt temp508_90 temp508_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_91 #x0000000000000000))
(assert (= var1322797 temp508_91))
(assert (= temp508_92 #x0000000000000000))
(assert (= temp508_93 temp508_92))
(assert (= temp508_94 (select ARGNAME_stride_NAMEEND_VAL temp508_93)))
(assert (= temp508_95 #x0000000000000001))
(assert (= temp508_96 temp508_95))
(assert (= temp508_97 (select ARGNAME_stride_NAMEEND_VAL temp508_96)))
(assert (= temp508_98 #x0000000000000002))
(assert (= temp508_99 temp508_98))
(assert (= temp508_100 (select ARGNAME_stride_NAMEEND_VAL temp508_99)))
(assert (= temp508_101 #x0000000000000003))
(assert (= temp508_102 temp508_101))
(assert (= temp508_103 (select ARGNAME_stride_NAMEEND_VAL temp508_102)))
(assert (= temp508_104 #x0000000000000004))
(assert (= temp508_105 temp508_104))
(assert (= temp508_106 (select ARGNAME_stride_NAMEEND_VAL temp508_105)))
(assert (= temp508_107 #x0000000000000005))
(assert (= temp508_108 temp508_107))
(assert (= temp508_109 (select ARGNAME_stride_NAMEEND_VAL temp508_108)))
(assert (= temp508_110 #x0000000000000000))
(assert (= temp508_111 #x0000000000000000))
(assert (= temp508_112 temp508_111))
(assert (= temp508_113 (select ARGNAME_stride_NAMEEND_VAL temp508_112)))
(assert (= temp508_114 #x0000000000000000))
(assert (= temp508_115 #x0000000000000001))
(assert (= temp508_116 temp508_115))
(assert (= temp508_117 (select ARGNAME_stride_NAMEEND_VAL temp508_116)))
(assert (= temp508_118 #x0000000000000000))
(assert (= temp508_119 #x0000000000000002))
(assert (= temp508_120 temp508_119))
(assert (= temp508_121 (select ARGNAME_stride_NAMEEND_VAL temp508_120)))
(assert (= temp508_122 #x0000000000000000))
(assert (= temp508_123 #x0000000000000003))
(assert (= temp508_124 temp508_123))
(assert (= temp508_125 (select ARGNAME_stride_NAMEEND_VAL temp508_124)))
(assert (= temp508_126 #x0000000000000000))
(assert (= temp508_127 #x0000000000000004))
(assert (= temp508_128 temp508_127))
(assert (= temp508_129 (select ARGNAME_stride_NAMEEND_VAL temp508_128)))
(assert (= temp508_130 #x0000000000000000))
(assert (= temp508_131 #x0000000000000005))
(assert (= temp508_132 temp508_131))
(assert (= temp508_133 (select ARGNAME_stride_NAMEEND_VAL temp508_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp508_113 temp508_110)
             (bvsle temp508_117 temp508_114)
             (bvsle temp508_121 temp508_118)
             (bvsle temp508_125 temp508_122)
             (bvsle temp508_129 temp508_126)
             (bvsle temp508_133 temp508_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_134 #x0000000000000000))
(assert (= var1322807 temp508_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_135 #x0000000000000001))
(assert (= var1322819 temp508_135))
(assert (= temp508_136 #x0000000000000000))
(assert (= var1310898 temp508_136))
(assert (= temp508_137 #x0000000000000000))
(assert (= temp508_138 temp508_137))
(assert (= temp508_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_138)))
(assert (= temp508_140 #x0000000000000001))
(assert (= temp508_141 temp508_140))
(assert (= temp508_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_141)))
(assert (= temp508_143 #x0000000000000002))
(assert (= temp508_144 temp508_143))
(assert (= temp508_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_144)))
(assert (= temp508_146 #x0000000000000003))
(assert (= temp508_147 temp508_146))
(assert (= temp508_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_147)))
(assert (= temp508_149 #x0000000000000004))
(assert (= temp508_150 temp508_149))
(assert (= temp508_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_150)))
(assert (= temp508_152 #x0000000000000005))
(assert (= temp508_153 temp508_152))
(assert (= temp508_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_153)))
(assert (= temp508_156 var1310898))
(assert (= temp508_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_156)))
(assert (= temp508_155 temp508_157))
(assert (= var1322852
   (ite (bvslt temp508_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_158 #x0000000000000000))
(assert (= var1322852 temp508_158))
(assert (= temp508_159 #x0000000000000000))
(assert (= var1310898 temp508_159))
(assert (= temp508_161 var1310898))
(assert (= temp508_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_161)))
(assert (= temp508_160 temp508_162))
(assert (= var1322874 (bvsmod temp508_160 ARGNAME_groups_NAMEEND)))
(assert (= temp508_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp508_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp508_164 #x0000000000000001))
(assert (= var1322875 temp508_164))
(assert (= temp508_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp508_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_166 #x0000000000000001))
(assert (= var1322895 temp508_166))
(assert (= temp508_167 #x0000000000000001))
(assert (= var1311786 temp508_167))
(assert (= temp508_168 #x0000000000000000))
(assert (= temp508_169 temp508_168))
(assert (= temp508_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp508_169)))
(assert (= temp508_171 #x0000000000000001))
(assert (= temp508_172 temp508_171))
(assert (= temp508_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp508_172)))
(assert (= temp508_174 #x0000000000000002))
(assert (= temp508_175 temp508_174))
(assert (= temp508_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp508_175)))
(assert (= temp508_177 #x0000000000000003))
(assert (= temp508_178 temp508_177))
(assert (= temp508_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp508_178)))
(assert (= temp508_180 #x0000000000000004))
(assert (= temp508_181 temp508_180))
(assert (= temp508_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp508_181)))
(assert (= temp508_183 #x0000000000000005))
(assert (= temp508_184 temp508_183))
(assert (= temp508_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp508_184)))
(assert (= temp508_186 #x0000000000000000))
(assert (= temp508_187
   (ite (bvslt var1311786 temp508_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp508_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp508_187)))
(assert (= var1322903 temp508_188))
(assert (bvslt (ite (bvslt var1311786 temp508_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp508_189 #x0000000000000001))
(assert (= var1311786 temp508_189))
(assert (= temp508_191 var1311786))
(assert (= temp508_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_191)))
(assert (= temp508_190 temp508_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp508_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp508_193 #x0000000000000001))
(assert (= var1322908 temp508_193))
(assert (= temp508_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp508_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_195 #x0000000000000001))
(assert (= var1322975 temp508_195))
(assert (= temp508_196 #x0000000000000000))
(assert (= var1310898 temp508_196))
(assert (= temp508_197 #x0000000000000000))
(assert (= temp508_198 temp508_197))
(assert (= temp508_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp508_198)))
(assert (= temp508_200 #x0000000000000001))
(assert (= temp508_201 temp508_200))
(assert (= temp508_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp508_201)))
(assert (= temp508_203 #x0000000000000002))
(assert (= temp508_204 temp508_203))
(assert (= temp508_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp508_204)))
(assert (= temp508_206 #x0000000000000003))
(assert (= temp508_207 temp508_206))
(assert (= temp508_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp508_207)))
(assert (= temp508_209 #x0000000000000004))
(assert (= temp508_210 temp508_209))
(assert (= temp508_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp508_210)))
(assert (= temp508_212 #x0000000000000005))
(assert (= temp508_213 temp508_212))
(assert (= temp508_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp508_213)))
(assert (= temp508_215 #x0000000000000000))
(assert (= temp508_216
   (ite (bvslt var1310898 temp508_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp508_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp508_216)))
(assert (= var1322977 temp508_217))
(assert (bvslt (ite (bvslt var1310898 temp508_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp508_218 #x0000000000000000))
(assert (= var1310898 temp508_218))
(assert (= temp508_220 var1310898))
(assert (= temp508_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_220)))
(assert (= temp508_219 temp508_221))
(assert (= var1322980
   (ite (= var1322977 temp508_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp508_222 #x0000000000000001))
(assert (= var1322980 temp508_222))
(assert (= temp508_223 #x0000000000000002))
(assert (= var1848169 temp508_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp508_225 #x0000000000000001))
(assert (= var1323065 temp508_225))
(assert (= temp508_226 #x0000000000000001))
(assert (= var3486735 temp508_226))
(assert (= temp508_227 #x0000000000000001))
(assert (= var3814415 temp508_227))
(assert (= temp508_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp508_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_229 #x0000000000000001))
(assert (= var79986 temp508_229))
(assert (= temp508_230 #x0000000000000001))
(assert (= var80116 temp508_230))
(assert (= var4796905 var80116))
(assert (= temp508_231 #x0000000000000000))
(assert (= var4784306 temp508_231))
(assert (= temp508_232 #x0000000000000000))
(assert (= temp508_233
   (ite (bvslt var4784306 temp508_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp508_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp508_233)))
(assert (= var4796924 temp508_234))
(assert (bvslt (ite (bvslt var4784306 temp508_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp508_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp508_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp508_236 #x0000000000000001))
(assert (= var4796925 temp508_236))
(assert (= temp508_237 #x0000000000000000))
(assert (= var4996927 temp508_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp508_238 #x0000000000000002))
(assert (= var5125763 temp508_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_239 #x0000000000000000))
(assert (= var5191324 temp508_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp508_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp508_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_241 #x0000000000000001))
(assert (= var81342 temp508_241))
(assert (= temp508_242 #x0000000000000002))
(assert (= var5977731 temp508_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_243 #x0000000000000000))
(assert (= var6043292 temp508_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp508_244 #x0000000000000001))
(assert (= var79986 temp508_244))
(model-add temp508_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp508_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp508_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






