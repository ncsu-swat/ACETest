(declare-fun temp884_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp884_2 () (_ BitVec 64))
(declare-fun temp884_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp884_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp884_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp884_6 () (_ BitVec 64))
(declare-fun temp884_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp884_8 () (_ BitVec 64))
(declare-fun temp884_9 () (_ BitVec 64))
(declare-fun temp884_10 () (_ BitVec 64))
(declare-fun temp884_11 () (_ BitVec 64))
(declare-fun temp884_12 () (_ BitVec 64))
(declare-fun temp884_13 () (_ BitVec 64))
(declare-fun temp884_14 () (_ BitVec 64))
(declare-fun temp884_15 () (_ BitVec 64))
(declare-fun temp884_16 () (_ BitVec 64))
(declare-fun temp884_17 () (_ BitVec 64))
(declare-fun temp884_18 () (_ BitVec 64))
(declare-fun temp884_19 () (_ BitVec 64))
(declare-fun temp884_20 () (_ BitVec 64))
(declare-fun temp884_21 () (_ BitVec 64))
(declare-fun temp884_22 () (_ BitVec 64))
(declare-fun temp884_23 () (_ BitVec 64))
(declare-fun temp884_24 () (_ BitVec 64))
(declare-fun temp884_25 () (_ BitVec 64))
(declare-fun temp884_26 () (_ BitVec 64))
(declare-fun temp884_27 () (_ BitVec 64))
(declare-fun temp884_28 () (_ BitVec 64))
(declare-fun temp884_29 () (_ BitVec 64))
(declare-fun temp884_30 () (_ BitVec 64))
(declare-fun temp884_31 () (_ BitVec 64))
(declare-fun temp884_32 () (_ BitVec 64))
(declare-fun temp884_33 () (_ BitVec 64))
(declare-fun temp884_34 () (_ BitVec 64))
(declare-fun temp884_35 () (_ BitVec 64))
(declare-fun temp884_36 () (_ BitVec 64))
(declare-fun temp884_37 () (_ BitVec 64))
(declare-fun temp884_38 () (_ BitVec 64))
(declare-fun temp884_39 () (_ BitVec 64))
(declare-fun temp884_40 () (_ BitVec 64))
(declare-fun temp884_41 () (_ BitVec 64))
(declare-fun temp884_42 () (_ BitVec 64))
(declare-fun temp884_43 () (_ BitVec 64))
(declare-fun temp884_44 () (_ BitVec 64))
(declare-fun temp884_45 () (_ BitVec 64))
(declare-fun temp884_46 () (_ BitVec 64))
(declare-fun temp884_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp884_48 () (_ BitVec 64))
(declare-fun temp884_49 () (_ BitVec 64))
(declare-fun temp884_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp884_51 () (_ BitVec 64))
(declare-fun temp884_52 () (_ BitVec 64))
(declare-fun temp884_53 () (_ BitVec 64))
(declare-fun temp884_54 () (_ BitVec 64))
(declare-fun temp884_55 () (_ BitVec 64))
(declare-fun temp884_56 () (_ BitVec 64))
(declare-fun temp884_57 () (_ BitVec 64))
(declare-fun temp884_58 () (_ BitVec 64))
(declare-fun temp884_59 () (_ BitVec 64))
(declare-fun temp884_60 () (_ BitVec 64))
(declare-fun temp884_61 () (_ BitVec 64))
(declare-fun temp884_62 () (_ BitVec 64))
(declare-fun temp884_63 () (_ BitVec 64))
(declare-fun temp884_64 () (_ BitVec 64))
(declare-fun temp884_65 () (_ BitVec 64))
(declare-fun temp884_66 () (_ BitVec 64))
(declare-fun temp884_67 () (_ BitVec 64))
(declare-fun temp884_68 () (_ BitVec 64))
(declare-fun temp884_69 () (_ BitVec 64))
(declare-fun temp884_70 () (_ BitVec 64))
(declare-fun temp884_71 () (_ BitVec 64))
(declare-fun temp884_72 () (_ BitVec 64))
(declare-fun temp884_73 () (_ BitVec 64))
(declare-fun temp884_74 () (_ BitVec 64))
(declare-fun temp884_75 () (_ BitVec 64))
(declare-fun temp884_76 () (_ BitVec 64))
(declare-fun temp884_77 () (_ BitVec 64))
(declare-fun temp884_78 () (_ BitVec 64))
(declare-fun temp884_79 () (_ BitVec 64))
(declare-fun temp884_80 () (_ BitVec 64))
(declare-fun temp884_81 () (_ BitVec 64))
(declare-fun temp884_82 () (_ BitVec 64))
(declare-fun temp884_83 () (_ BitVec 64))
(declare-fun temp884_84 () (_ BitVec 64))
(declare-fun temp884_85 () (_ BitVec 64))
(declare-fun temp884_86 () (_ BitVec 64))
(declare-fun temp884_87 () (_ BitVec 64))
(declare-fun temp884_88 () (_ BitVec 64))
(declare-fun temp884_89 () (_ BitVec 64))
(declare-fun temp884_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp884_91 () (_ BitVec 64))
(declare-fun temp884_92 () (_ BitVec 64))
(declare-fun temp884_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp884_94 () (_ BitVec 64))
(declare-fun temp884_95 () (_ BitVec 64))
(declare-fun temp884_96 () (_ BitVec 64))
(declare-fun temp884_97 () (_ BitVec 64))
(declare-fun temp884_98 () (_ BitVec 64))
(declare-fun temp884_99 () (_ BitVec 64))
(declare-fun temp884_100 () (_ BitVec 64))
(declare-fun temp884_101 () (_ BitVec 64))
(declare-fun temp884_102 () (_ BitVec 64))
(declare-fun temp884_103 () (_ BitVec 64))
(declare-fun temp884_104 () (_ BitVec 64))
(declare-fun temp884_105 () (_ BitVec 64))
(declare-fun temp884_106 () (_ BitVec 64))
(declare-fun temp884_107 () (_ BitVec 64))
(declare-fun temp884_108 () (_ BitVec 64))
(declare-fun temp884_109 () (_ BitVec 64))
(declare-fun temp884_110 () (_ BitVec 64))
(declare-fun temp884_111 () (_ BitVec 64))
(declare-fun temp884_112 () (_ BitVec 64))
(declare-fun temp884_113 () (_ BitVec 64))
(declare-fun temp884_114 () (_ BitVec 64))
(declare-fun temp884_115 () (_ BitVec 64))
(declare-fun temp884_116 () (_ BitVec 64))
(declare-fun temp884_117 () (_ BitVec 64))
(declare-fun temp884_118 () (_ BitVec 64))
(declare-fun temp884_119 () (_ BitVec 64))
(declare-fun temp884_120 () (_ BitVec 64))
(declare-fun temp884_121 () (_ BitVec 64))
(declare-fun temp884_122 () (_ BitVec 64))
(declare-fun temp884_123 () (_ BitVec 64))
(declare-fun temp884_124 () (_ BitVec 64))
(declare-fun temp884_125 () (_ BitVec 64))
(declare-fun temp884_126 () (_ BitVec 64))
(declare-fun temp884_127 () (_ BitVec 64))
(declare-fun temp884_128 () (_ BitVec 64))
(declare-fun temp884_129 () (_ BitVec 64))
(declare-fun temp884_130 () (_ BitVec 64))
(declare-fun temp884_131 () (_ BitVec 64))
(declare-fun temp884_132 () (_ BitVec 64))
(declare-fun temp884_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp884_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp884_135 () (_ BitVec 64))
(declare-fun temp884_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp884_137 () (_ BitVec 64))
(declare-fun temp884_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp884_139 () (_ BitVec 64))
(declare-fun temp884_140 () (_ BitVec 64))
(declare-fun temp884_141 () (_ BitVec 64))
(declare-fun temp884_142 () (_ BitVec 64))
(declare-fun temp884_143 () (_ BitVec 64))
(declare-fun temp884_144 () (_ BitVec 64))
(declare-fun temp884_145 () (_ BitVec 64))
(declare-fun temp884_146 () (_ BitVec 64))
(declare-fun temp884_147 () (_ BitVec 64))
(declare-fun temp884_148 () (_ BitVec 64))
(declare-fun temp884_149 () (_ BitVec 64))
(declare-fun temp884_150 () (_ BitVec 64))
(declare-fun temp884_151 () (_ BitVec 64))
(declare-fun temp884_152 () (_ BitVec 64))
(declare-fun temp884_153 () (_ BitVec 64))
(declare-fun temp884_154 () (_ BitVec 64))
(declare-fun temp884_156 () (_ BitVec 64))
(declare-fun temp884_157 () (_ BitVec 64))
(declare-fun temp884_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp884_158 () (_ BitVec 64))
(declare-fun temp884_159 () (_ BitVec 64))
(declare-fun temp884_161 () (_ BitVec 64))
(declare-fun temp884_162 () (_ BitVec 64))
(declare-fun temp884_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp884_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp884_164 () (_ BitVec 64))
(declare-fun temp884_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp884_166 () (_ BitVec 64))
(declare-fun temp884_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp884_168 () (_ BitVec 64))
(declare-fun temp884_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp884_170 () (_ BitVec 64))
(declare-fun temp884_171 () (_ BitVec 64))
(declare-fun temp884_172 () (_ BitVec 64))
(declare-fun temp884_173 () (_ BitVec 64))
(declare-fun temp884_174 () (_ BitVec 64))
(declare-fun temp884_175 () (_ BitVec 64))
(declare-fun temp884_176 () (_ BitVec 64))
(declare-fun temp884_177 () (_ BitVec 64))
(declare-fun temp884_178 () (_ BitVec 64))
(declare-fun temp884_179 () (_ BitVec 64))
(declare-fun temp884_180 () (_ BitVec 64))
(declare-fun temp884_181 () (_ BitVec 64))
(declare-fun temp884_182 () (_ BitVec 64))
(declare-fun temp884_183 () (_ BitVec 64))
(declare-fun temp884_184 () (_ BitVec 64))
(declare-fun temp884_185 () (_ BitVec 64))
(declare-fun temp884_186 () (_ BitVec 64))
(declare-fun temp884_187 () (_ BitVec 64))
(declare-fun temp884_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp884_189 () (_ BitVec 64))
(declare-fun temp884_191 () (_ BitVec 64))
(declare-fun temp884_192 () (_ BitVec 64))
(declare-fun temp884_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp884_193 () (_ BitVec 64))
(declare-fun temp884_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp884_195 () (_ BitVec 64))
(declare-fun temp884_196 () (_ BitVec 64))
(declare-fun temp884_197 () (_ BitVec 64))
(declare-fun temp884_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp884_199 () (_ BitVec 64))
(declare-fun temp884_200 () (_ BitVec 64))
(declare-fun temp884_201 () (_ BitVec 64))
(declare-fun temp884_202 () (_ BitVec 64))
(declare-fun temp884_203 () (_ BitVec 64))
(declare-fun temp884_204 () (_ BitVec 64))
(declare-fun temp884_205 () (_ BitVec 64))
(declare-fun temp884_206 () (_ BitVec 64))
(declare-fun temp884_207 () (_ BitVec 64))
(declare-fun temp884_208 () (_ BitVec 64))
(declare-fun temp884_209 () (_ BitVec 64))
(declare-fun temp884_210 () (_ BitVec 64))
(declare-fun temp884_211 () (_ BitVec 64))
(declare-fun temp884_212 () (_ BitVec 64))
(declare-fun temp884_213 () (_ BitVec 64))
(declare-fun temp884_214 () (_ BitVec 64))
(declare-fun temp884_215 () (_ BitVec 64))
(declare-fun temp884_216 () (_ BitVec 64))
(declare-fun temp884_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp884_218 () (_ BitVec 64))
(declare-fun temp884_220 () (_ BitVec 64))
(declare-fun temp884_221 () (_ BitVec 64))
(declare-fun temp884_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp884_222 () (_ BitVec 64))
(declare-fun temp884_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp884_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp884_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp884_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp884_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp884_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp884_229 () (_ BitVec 64))
(declare-fun temp884_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp884_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp884_232 () (_ BitVec 64))
(declare-fun temp884_233 () (_ BitVec 64))
(declare-fun temp884_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp884_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp884_236 () (_ BitVec 64))
(declare-fun temp884_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp884_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp884_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun temp884_240 () (_ BitVec 64))
(declare-fun var6828432 () (_ BitVec 64))
(declare-fun temp884_241 () (_ BitVec 64))
(declare-fun temp884_242 () (_ BitVec 64))
(declare-fun var8270612 () (_ BitVec 64))
(declare-fun var8270579 () (_ BitVec 64))
(declare-fun var8139143 () (_ BitVec 64))
(declare-fun var8139139 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp884_243 () (_ BitVec 64))
(assert (= temp884_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp884_1)))
(assert (= temp884_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp884_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_3 #x0000000000000000))
(assert (= var79869 temp884_3))
(assert (= temp884_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp884_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_5 #x0000000000000000))
(assert (= var79914 temp884_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp884_6 #x0000000000000000))
(assert (= temp884_7 temp884_6))
(assert (= temp884_8 (select ARGNAME_padding_NAMEEND_VAL temp884_7)))
(assert (= temp884_9 #x0000000000000001))
(assert (= temp884_10 temp884_9))
(assert (= temp884_11 (select ARGNAME_padding_NAMEEND_VAL temp884_10)))
(assert (= temp884_12 #x0000000000000002))
(assert (= temp884_13 temp884_12))
(assert (= temp884_14 (select ARGNAME_padding_NAMEEND_VAL temp884_13)))
(assert (= temp884_15 #x0000000000000003))
(assert (= temp884_16 temp884_15))
(assert (= temp884_17 (select ARGNAME_padding_NAMEEND_VAL temp884_16)))
(assert (= temp884_18 #x0000000000000004))
(assert (= temp884_19 temp884_18))
(assert (= temp884_20 (select ARGNAME_padding_NAMEEND_VAL temp884_19)))
(assert (= temp884_21 #x0000000000000005))
(assert (= temp884_22 temp884_21))
(assert (= temp884_23 (select ARGNAME_padding_NAMEEND_VAL temp884_22)))
(assert (= temp884_24 #x0000000000000000))
(assert (= temp884_25 #x0000000000000000))
(assert (= temp884_26 temp884_25))
(assert (= temp884_27 (select ARGNAME_padding_NAMEEND_VAL temp884_26)))
(assert (= temp884_28 #x0000000000000000))
(assert (= temp884_29 #x0000000000000001))
(assert (= temp884_30 temp884_29))
(assert (= temp884_31 (select ARGNAME_padding_NAMEEND_VAL temp884_30)))
(assert (= temp884_32 #x0000000000000000))
(assert (= temp884_33 #x0000000000000002))
(assert (= temp884_34 temp884_33))
(assert (= temp884_35 (select ARGNAME_padding_NAMEEND_VAL temp884_34)))
(assert (= temp884_36 #x0000000000000000))
(assert (= temp884_37 #x0000000000000003))
(assert (= temp884_38 temp884_37))
(assert (= temp884_39 (select ARGNAME_padding_NAMEEND_VAL temp884_38)))
(assert (= temp884_40 #x0000000000000000))
(assert (= temp884_41 #x0000000000000004))
(assert (= temp884_42 temp884_41))
(assert (= temp884_43 (select ARGNAME_padding_NAMEEND_VAL temp884_42)))
(assert (= temp884_44 #x0000000000000000))
(assert (= temp884_45 #x0000000000000005))
(assert (= temp884_46 temp884_45))
(assert (= temp884_47 (select ARGNAME_padding_NAMEEND_VAL temp884_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp884_27 temp884_24)
             (bvslt temp884_31 temp884_28)
             (bvslt temp884_35 temp884_32)
             (bvslt temp884_39 temp884_36)
             (bvslt temp884_43 temp884_40)
             (bvslt temp884_47 temp884_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_48 #x0000000000000000))
(assert (= var1322786 temp884_48))
(assert (= temp884_49 #x0000000000000000))
(assert (= temp884_50 temp884_49))
(assert (= temp884_51 (select ARGNAME_output_padding_NAMEEND_VAL temp884_50)))
(assert (= temp884_52 #x0000000000000001))
(assert (= temp884_53 temp884_52))
(assert (= temp884_54 (select ARGNAME_output_padding_NAMEEND_VAL temp884_53)))
(assert (= temp884_55 #x0000000000000002))
(assert (= temp884_56 temp884_55))
(assert (= temp884_57 (select ARGNAME_output_padding_NAMEEND_VAL temp884_56)))
(assert (= temp884_58 #x0000000000000003))
(assert (= temp884_59 temp884_58))
(assert (= temp884_60 (select ARGNAME_output_padding_NAMEEND_VAL temp884_59)))
(assert (= temp884_61 #x0000000000000004))
(assert (= temp884_62 temp884_61))
(assert (= temp884_63 (select ARGNAME_output_padding_NAMEEND_VAL temp884_62)))
(assert (= temp884_64 #x0000000000000005))
(assert (= temp884_65 temp884_64))
(assert (= temp884_66 (select ARGNAME_output_padding_NAMEEND_VAL temp884_65)))
(assert (= temp884_67 #x0000000000000000))
(assert (= temp884_68 #x0000000000000000))
(assert (= temp884_69 temp884_68))
(assert (= temp884_70 (select ARGNAME_output_padding_NAMEEND_VAL temp884_69)))
(assert (= temp884_71 #x0000000000000000))
(assert (= temp884_72 #x0000000000000001))
(assert (= temp884_73 temp884_72))
(assert (= temp884_74 (select ARGNAME_output_padding_NAMEEND_VAL temp884_73)))
(assert (= temp884_75 #x0000000000000000))
(assert (= temp884_76 #x0000000000000002))
(assert (= temp884_77 temp884_76))
(assert (= temp884_78 (select ARGNAME_output_padding_NAMEEND_VAL temp884_77)))
(assert (= temp884_79 #x0000000000000000))
(assert (= temp884_80 #x0000000000000003))
(assert (= temp884_81 temp884_80))
(assert (= temp884_82 (select ARGNAME_output_padding_NAMEEND_VAL temp884_81)))
(assert (= temp884_83 #x0000000000000000))
(assert (= temp884_84 #x0000000000000004))
(assert (= temp884_85 temp884_84))
(assert (= temp884_86 (select ARGNAME_output_padding_NAMEEND_VAL temp884_85)))
(assert (= temp884_87 #x0000000000000000))
(assert (= temp884_88 #x0000000000000005))
(assert (= temp884_89 temp884_88))
(assert (= temp884_90 (select ARGNAME_output_padding_NAMEEND_VAL temp884_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp884_70 temp884_67)
             (bvslt temp884_74 temp884_71)
             (bvslt temp884_78 temp884_75)
             (bvslt temp884_82 temp884_79)
             (bvslt temp884_86 temp884_83)
             (bvslt temp884_90 temp884_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_91 #x0000000000000000))
(assert (= var1322797 temp884_91))
(assert (= temp884_92 #x0000000000000000))
(assert (= temp884_93 temp884_92))
(assert (= temp884_94 (select ARGNAME_stride_NAMEEND_VAL temp884_93)))
(assert (= temp884_95 #x0000000000000001))
(assert (= temp884_96 temp884_95))
(assert (= temp884_97 (select ARGNAME_stride_NAMEEND_VAL temp884_96)))
(assert (= temp884_98 #x0000000000000002))
(assert (= temp884_99 temp884_98))
(assert (= temp884_100 (select ARGNAME_stride_NAMEEND_VAL temp884_99)))
(assert (= temp884_101 #x0000000000000003))
(assert (= temp884_102 temp884_101))
(assert (= temp884_103 (select ARGNAME_stride_NAMEEND_VAL temp884_102)))
(assert (= temp884_104 #x0000000000000004))
(assert (= temp884_105 temp884_104))
(assert (= temp884_106 (select ARGNAME_stride_NAMEEND_VAL temp884_105)))
(assert (= temp884_107 #x0000000000000005))
(assert (= temp884_108 temp884_107))
(assert (= temp884_109 (select ARGNAME_stride_NAMEEND_VAL temp884_108)))
(assert (= temp884_110 #x0000000000000000))
(assert (= temp884_111 #x0000000000000000))
(assert (= temp884_112 temp884_111))
(assert (= temp884_113 (select ARGNAME_stride_NAMEEND_VAL temp884_112)))
(assert (= temp884_114 #x0000000000000000))
(assert (= temp884_115 #x0000000000000001))
(assert (= temp884_116 temp884_115))
(assert (= temp884_117 (select ARGNAME_stride_NAMEEND_VAL temp884_116)))
(assert (= temp884_118 #x0000000000000000))
(assert (= temp884_119 #x0000000000000002))
(assert (= temp884_120 temp884_119))
(assert (= temp884_121 (select ARGNAME_stride_NAMEEND_VAL temp884_120)))
(assert (= temp884_122 #x0000000000000000))
(assert (= temp884_123 #x0000000000000003))
(assert (= temp884_124 temp884_123))
(assert (= temp884_125 (select ARGNAME_stride_NAMEEND_VAL temp884_124)))
(assert (= temp884_126 #x0000000000000000))
(assert (= temp884_127 #x0000000000000004))
(assert (= temp884_128 temp884_127))
(assert (= temp884_129 (select ARGNAME_stride_NAMEEND_VAL temp884_128)))
(assert (= temp884_130 #x0000000000000000))
(assert (= temp884_131 #x0000000000000005))
(assert (= temp884_132 temp884_131))
(assert (= temp884_133 (select ARGNAME_stride_NAMEEND_VAL temp884_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp884_113 temp884_110)
             (bvsle temp884_117 temp884_114)
             (bvsle temp884_121 temp884_118)
             (bvsle temp884_125 temp884_122)
             (bvsle temp884_129 temp884_126)
             (bvsle temp884_133 temp884_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_134 #x0000000000000000))
(assert (= var1322807 temp884_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_135 #x0000000000000001))
(assert (= var1322819 temp884_135))
(assert (= temp884_136 #x0000000000000000))
(assert (= var1310898 temp884_136))
(assert (= temp884_137 #x0000000000000000))
(assert (= temp884_138 temp884_137))
(assert (= temp884_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_138)))
(assert (= temp884_140 #x0000000000000001))
(assert (= temp884_141 temp884_140))
(assert (= temp884_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_141)))
(assert (= temp884_143 #x0000000000000002))
(assert (= temp884_144 temp884_143))
(assert (= temp884_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_144)))
(assert (= temp884_146 #x0000000000000003))
(assert (= temp884_147 temp884_146))
(assert (= temp884_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_147)))
(assert (= temp884_149 #x0000000000000004))
(assert (= temp884_150 temp884_149))
(assert (= temp884_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_150)))
(assert (= temp884_152 #x0000000000000005))
(assert (= temp884_153 temp884_152))
(assert (= temp884_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_153)))
(assert (= temp884_156 var1310898))
(assert (= temp884_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_156)))
(assert (= temp884_155 temp884_157))
(assert (= var1322852
   (ite (bvslt temp884_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_158 #x0000000000000000))
(assert (= var1322852 temp884_158))
(assert (= temp884_159 #x0000000000000000))
(assert (= var1310898 temp884_159))
(assert (= temp884_161 var1310898))
(assert (= temp884_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_161)))
(assert (= temp884_160 temp884_162))
(assert (= var1322874 (bvsmod temp884_160 ARGNAME_groups_NAMEEND)))
(assert (= temp884_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp884_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp884_164 #x0000000000000001))
(assert (= var1322875 temp884_164))
(assert (= temp884_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp884_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_166 #x0000000000000001))
(assert (= var1322895 temp884_166))
(assert (= temp884_167 #x0000000000000001))
(assert (= var1311786 temp884_167))
(assert (= temp884_168 #x0000000000000000))
(assert (= temp884_169 temp884_168))
(assert (= temp884_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp884_169)))
(assert (= temp884_171 #x0000000000000001))
(assert (= temp884_172 temp884_171))
(assert (= temp884_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp884_172)))
(assert (= temp884_174 #x0000000000000002))
(assert (= temp884_175 temp884_174))
(assert (= temp884_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp884_175)))
(assert (= temp884_177 #x0000000000000003))
(assert (= temp884_178 temp884_177))
(assert (= temp884_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp884_178)))
(assert (= temp884_180 #x0000000000000004))
(assert (= temp884_181 temp884_180))
(assert (= temp884_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp884_181)))
(assert (= temp884_183 #x0000000000000005))
(assert (= temp884_184 temp884_183))
(assert (= temp884_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp884_184)))
(assert (= temp884_186 #x0000000000000000))
(assert (= temp884_187
   (ite (bvslt var1311786 temp884_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp884_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp884_187)))
(assert (= var1322903 temp884_188))
(assert (bvslt (ite (bvslt var1311786 temp884_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp884_189 #x0000000000000001))
(assert (= var1311786 temp884_189))
(assert (= temp884_191 var1311786))
(assert (= temp884_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_191)))
(assert (= temp884_190 temp884_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp884_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp884_193 #x0000000000000001))
(assert (= var1322908 temp884_193))
(assert (= temp884_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp884_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_195 #x0000000000000001))
(assert (= var1322975 temp884_195))
(assert (= temp884_196 #x0000000000000000))
(assert (= var1310898 temp884_196))
(assert (= temp884_197 #x0000000000000000))
(assert (= temp884_198 temp884_197))
(assert (= temp884_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp884_198)))
(assert (= temp884_200 #x0000000000000001))
(assert (= temp884_201 temp884_200))
(assert (= temp884_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp884_201)))
(assert (= temp884_203 #x0000000000000002))
(assert (= temp884_204 temp884_203))
(assert (= temp884_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp884_204)))
(assert (= temp884_206 #x0000000000000003))
(assert (= temp884_207 temp884_206))
(assert (= temp884_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp884_207)))
(assert (= temp884_209 #x0000000000000004))
(assert (= temp884_210 temp884_209))
(assert (= temp884_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp884_210)))
(assert (= temp884_212 #x0000000000000005))
(assert (= temp884_213 temp884_212))
(assert (= temp884_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp884_213)))
(assert (= temp884_215 #x0000000000000000))
(assert (= temp884_216
   (ite (bvslt var1310898 temp884_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp884_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp884_216)))
(assert (= var1322977 temp884_217))
(assert (bvslt (ite (bvslt var1310898 temp884_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp884_218 #x0000000000000000))
(assert (= var1310898 temp884_218))
(assert (= temp884_220 var1310898))
(assert (= temp884_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_220)))
(assert (= temp884_219 temp884_221))
(assert (= var1322980
   (ite (= var1322977 temp884_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp884_222 #x0000000000000001))
(assert (= var1322980 temp884_222))
(assert (= temp884_223 #x0000000000000002))
(assert (= var1848169 temp884_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp884_225 #x0000000000000001))
(assert (= var1323065 temp884_225))
(assert (= temp884_226 #x0000000000000001))
(assert (= var3486735 temp884_226))
(assert (= temp884_227 #x0000000000000001))
(assert (= var3814415 temp884_227))
(assert (= temp884_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp884_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_229 #x0000000000000001))
(assert (= var79986 temp884_229))
(assert (= temp884_230 #x0000000000000001))
(assert (= var80116 temp884_230))
(assert (= var4796905 var80116))
(assert (= temp884_231 #x0000000000000000))
(assert (= var4784306 temp884_231))
(assert (= temp884_232 #x0000000000000000))
(assert (= temp884_233
   (ite (bvslt var4784306 temp884_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp884_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp884_233)))
(assert (= var4796924 temp884_234))
(assert (bvslt (ite (bvslt var4784306 temp884_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp884_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp884_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp884_236 #x0000000000000001))
(assert (= var4796925 temp884_236))
(assert (= temp884_237 #x0000000000000000))
(assert (= var4996927 temp884_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp884_238 #x0000000000000002))
(assert (= var5125763 temp884_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_239 #x0000000000000000))
(assert (= var5191324 temp884_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6238608 var80129))
(assert (= var6500752 var80129))
(assert (= temp884_240 #x0000000000000000))
(assert (= var6828432 temp884_240))
(assert (= temp884_241 #x0000000000000001))
(assert (= var79986 temp884_241))
(assert (= temp884_242 #x0000000000000000))
(assert (= var8270612 temp884_242))
(assert (= var8270579 var8270612))
(assert (= var8139143 var8270579))
(assert (= var8139139 var8139143))
(assert (= var81597 var8139139))
(assert (= temp884_243 #x0000000000000000))
(assert (= var81597 temp884_243))
(model-add temp884_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp884_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp884_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






