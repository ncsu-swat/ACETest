(declare-fun temp388_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp388_2 () (_ BitVec 64))
(declare-fun temp388_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp388_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp388_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp388_6 () (_ BitVec 64))
(declare-fun temp388_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_8 () (_ BitVec 64))
(declare-fun temp388_9 () (_ BitVec 64))
(declare-fun temp388_10 () (_ BitVec 64))
(declare-fun temp388_11 () (_ BitVec 64))
(declare-fun temp388_12 () (_ BitVec 64))
(declare-fun temp388_13 () (_ BitVec 64))
(declare-fun temp388_14 () (_ BitVec 64))
(declare-fun temp388_15 () (_ BitVec 64))
(declare-fun temp388_16 () (_ BitVec 64))
(declare-fun temp388_17 () (_ BitVec 64))
(declare-fun temp388_18 () (_ BitVec 64))
(declare-fun temp388_19 () (_ BitVec 64))
(declare-fun temp388_20 () (_ BitVec 64))
(declare-fun temp388_21 () (_ BitVec 64))
(declare-fun temp388_22 () (_ BitVec 64))
(declare-fun temp388_23 () (_ BitVec 64))
(declare-fun temp388_24 () (_ BitVec 64))
(declare-fun temp388_25 () (_ BitVec 64))
(declare-fun temp388_26 () (_ BitVec 64))
(declare-fun temp388_27 () (_ BitVec 64))
(declare-fun temp388_28 () (_ BitVec 64))
(declare-fun temp388_29 () (_ BitVec 64))
(declare-fun temp388_30 () (_ BitVec 64))
(declare-fun temp388_31 () (_ BitVec 64))
(declare-fun temp388_32 () (_ BitVec 64))
(declare-fun temp388_33 () (_ BitVec 64))
(declare-fun temp388_34 () (_ BitVec 64))
(declare-fun temp388_35 () (_ BitVec 64))
(declare-fun temp388_36 () (_ BitVec 64))
(declare-fun temp388_37 () (_ BitVec 64))
(declare-fun temp388_38 () (_ BitVec 64))
(declare-fun temp388_39 () (_ BitVec 64))
(declare-fun temp388_40 () (_ BitVec 64))
(declare-fun temp388_41 () (_ BitVec 64))
(declare-fun temp388_42 () (_ BitVec 64))
(declare-fun temp388_43 () (_ BitVec 64))
(declare-fun temp388_44 () (_ BitVec 64))
(declare-fun temp388_45 () (_ BitVec 64))
(declare-fun temp388_46 () (_ BitVec 64))
(declare-fun temp388_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp388_48 () (_ BitVec 64))
(declare-fun temp388_49 () (_ BitVec 64))
(declare-fun temp388_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_51 () (_ BitVec 64))
(declare-fun temp388_52 () (_ BitVec 64))
(declare-fun temp388_53 () (_ BitVec 64))
(declare-fun temp388_54 () (_ BitVec 64))
(declare-fun temp388_55 () (_ BitVec 64))
(declare-fun temp388_56 () (_ BitVec 64))
(declare-fun temp388_57 () (_ BitVec 64))
(declare-fun temp388_58 () (_ BitVec 64))
(declare-fun temp388_59 () (_ BitVec 64))
(declare-fun temp388_60 () (_ BitVec 64))
(declare-fun temp388_61 () (_ BitVec 64))
(declare-fun temp388_62 () (_ BitVec 64))
(declare-fun temp388_63 () (_ BitVec 64))
(declare-fun temp388_64 () (_ BitVec 64))
(declare-fun temp388_65 () (_ BitVec 64))
(declare-fun temp388_66 () (_ BitVec 64))
(declare-fun temp388_67 () (_ BitVec 64))
(declare-fun temp388_68 () (_ BitVec 64))
(declare-fun temp388_69 () (_ BitVec 64))
(declare-fun temp388_70 () (_ BitVec 64))
(declare-fun temp388_71 () (_ BitVec 64))
(declare-fun temp388_72 () (_ BitVec 64))
(declare-fun temp388_73 () (_ BitVec 64))
(declare-fun temp388_74 () (_ BitVec 64))
(declare-fun temp388_75 () (_ BitVec 64))
(declare-fun temp388_76 () (_ BitVec 64))
(declare-fun temp388_77 () (_ BitVec 64))
(declare-fun temp388_78 () (_ BitVec 64))
(declare-fun temp388_79 () (_ BitVec 64))
(declare-fun temp388_80 () (_ BitVec 64))
(declare-fun temp388_81 () (_ BitVec 64))
(declare-fun temp388_82 () (_ BitVec 64))
(declare-fun temp388_83 () (_ BitVec 64))
(declare-fun temp388_84 () (_ BitVec 64))
(declare-fun temp388_85 () (_ BitVec 64))
(declare-fun temp388_86 () (_ BitVec 64))
(declare-fun temp388_87 () (_ BitVec 64))
(declare-fun temp388_88 () (_ BitVec 64))
(declare-fun temp388_89 () (_ BitVec 64))
(declare-fun temp388_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp388_91 () (_ BitVec 64))
(declare-fun temp388_92 () (_ BitVec 64))
(declare-fun temp388_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_94 () (_ BitVec 64))
(declare-fun temp388_95 () (_ BitVec 64))
(declare-fun temp388_96 () (_ BitVec 64))
(declare-fun temp388_97 () (_ BitVec 64))
(declare-fun temp388_98 () (_ BitVec 64))
(declare-fun temp388_99 () (_ BitVec 64))
(declare-fun temp388_100 () (_ BitVec 64))
(declare-fun temp388_101 () (_ BitVec 64))
(declare-fun temp388_102 () (_ BitVec 64))
(declare-fun temp388_103 () (_ BitVec 64))
(declare-fun temp388_104 () (_ BitVec 64))
(declare-fun temp388_105 () (_ BitVec 64))
(declare-fun temp388_106 () (_ BitVec 64))
(declare-fun temp388_107 () (_ BitVec 64))
(declare-fun temp388_108 () (_ BitVec 64))
(declare-fun temp388_109 () (_ BitVec 64))
(declare-fun temp388_110 () (_ BitVec 64))
(declare-fun temp388_111 () (_ BitVec 64))
(declare-fun temp388_112 () (_ BitVec 64))
(declare-fun temp388_113 () (_ BitVec 64))
(declare-fun temp388_114 () (_ BitVec 64))
(declare-fun temp388_115 () (_ BitVec 64))
(declare-fun temp388_116 () (_ BitVec 64))
(declare-fun temp388_117 () (_ BitVec 64))
(declare-fun temp388_118 () (_ BitVec 64))
(declare-fun temp388_119 () (_ BitVec 64))
(declare-fun temp388_120 () (_ BitVec 64))
(declare-fun temp388_121 () (_ BitVec 64))
(declare-fun temp388_122 () (_ BitVec 64))
(declare-fun temp388_123 () (_ BitVec 64))
(declare-fun temp388_124 () (_ BitVec 64))
(declare-fun temp388_125 () (_ BitVec 64))
(declare-fun temp388_126 () (_ BitVec 64))
(declare-fun temp388_127 () (_ BitVec 64))
(declare-fun temp388_128 () (_ BitVec 64))
(declare-fun temp388_129 () (_ BitVec 64))
(declare-fun temp388_130 () (_ BitVec 64))
(declare-fun temp388_131 () (_ BitVec 64))
(declare-fun temp388_132 () (_ BitVec 64))
(declare-fun temp388_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp388_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp388_135 () (_ BitVec 64))
(declare-fun temp388_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp388_137 () (_ BitVec 64))
(declare-fun temp388_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_139 () (_ BitVec 64))
(declare-fun temp388_140 () (_ BitVec 64))
(declare-fun temp388_141 () (_ BitVec 64))
(declare-fun temp388_142 () (_ BitVec 64))
(declare-fun temp388_143 () (_ BitVec 64))
(declare-fun temp388_144 () (_ BitVec 64))
(declare-fun temp388_145 () (_ BitVec 64))
(declare-fun temp388_146 () (_ BitVec 64))
(declare-fun temp388_147 () (_ BitVec 64))
(declare-fun temp388_148 () (_ BitVec 64))
(declare-fun temp388_149 () (_ BitVec 64))
(declare-fun temp388_150 () (_ BitVec 64))
(declare-fun temp388_151 () (_ BitVec 64))
(declare-fun temp388_152 () (_ BitVec 64))
(declare-fun temp388_153 () (_ BitVec 64))
(declare-fun temp388_154 () (_ BitVec 64))
(declare-fun temp388_156 () (_ BitVec 64))
(declare-fun temp388_157 () (_ BitVec 64))
(declare-fun temp388_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp388_158 () (_ BitVec 64))
(declare-fun temp388_159 () (_ BitVec 64))
(declare-fun temp388_161 () (_ BitVec 64))
(declare-fun temp388_162 () (_ BitVec 64))
(declare-fun temp388_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp388_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp388_164 () (_ BitVec 64))
(declare-fun temp388_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp388_166 () (_ BitVec 64))
(declare-fun temp388_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp388_168 () (_ BitVec 64))
(declare-fun temp388_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_170 () (_ BitVec 64))
(declare-fun temp388_171 () (_ BitVec 64))
(declare-fun temp388_172 () (_ BitVec 64))
(declare-fun temp388_173 () (_ BitVec 64))
(declare-fun temp388_174 () (_ BitVec 64))
(declare-fun temp388_175 () (_ BitVec 64))
(declare-fun temp388_176 () (_ BitVec 64))
(declare-fun temp388_177 () (_ BitVec 64))
(declare-fun temp388_178 () (_ BitVec 64))
(declare-fun temp388_179 () (_ BitVec 64))
(declare-fun temp388_180 () (_ BitVec 64))
(declare-fun temp388_181 () (_ BitVec 64))
(declare-fun temp388_182 () (_ BitVec 64))
(declare-fun temp388_183 () (_ BitVec 64))
(declare-fun temp388_184 () (_ BitVec 64))
(declare-fun temp388_185 () (_ BitVec 64))
(declare-fun temp388_186 () (_ BitVec 64))
(declare-fun temp388_187 () (_ BitVec 64))
(declare-fun temp388_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp388_189 () (_ BitVec 64))
(declare-fun temp388_191 () (_ BitVec 64))
(declare-fun temp388_192 () (_ BitVec 64))
(declare-fun temp388_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp388_193 () (_ BitVec 64))
(declare-fun temp388_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp388_195 () (_ BitVec 64))
(declare-fun temp388_196 () (_ BitVec 64))
(declare-fun temp388_197 () (_ BitVec 64))
(declare-fun temp388_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_199 () (_ BitVec 64))
(declare-fun temp388_200 () (_ BitVec 64))
(declare-fun temp388_201 () (_ BitVec 64))
(declare-fun temp388_202 () (_ BitVec 64))
(declare-fun temp388_203 () (_ BitVec 64))
(declare-fun temp388_204 () (_ BitVec 64))
(declare-fun temp388_205 () (_ BitVec 64))
(declare-fun temp388_206 () (_ BitVec 64))
(declare-fun temp388_207 () (_ BitVec 64))
(declare-fun temp388_208 () (_ BitVec 64))
(declare-fun temp388_209 () (_ BitVec 64))
(declare-fun temp388_210 () (_ BitVec 64))
(declare-fun temp388_211 () (_ BitVec 64))
(declare-fun temp388_212 () (_ BitVec 64))
(declare-fun temp388_213 () (_ BitVec 64))
(declare-fun temp388_214 () (_ BitVec 64))
(declare-fun temp388_215 () (_ BitVec 64))
(declare-fun temp388_216 () (_ BitVec 64))
(declare-fun temp388_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp388_218 () (_ BitVec 64))
(declare-fun temp388_220 () (_ BitVec 64))
(declare-fun temp388_221 () (_ BitVec 64))
(declare-fun temp388_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp388_222 () (_ BitVec 64))
(declare-fun temp388_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp388_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp388_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp388_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp388_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp388_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp388_229 () (_ BitVec 64))
(declare-fun temp388_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp388_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp388_232 () (_ BitVec 64))
(declare-fun temp388_233 () (_ BitVec 64))
(declare-fun temp388_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp388_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp388_236 () (_ BitVec 64))
(declare-fun temp388_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp388_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp388_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp388_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp388_241 () (_ BitVec 64))
(assert (= temp388_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp388_1)))
(assert (= temp388_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp388_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_3 #x0000000000000000))
(assert (= var79869 temp388_3))
(assert (= temp388_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp388_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_5 #x0000000000000000))
(assert (= var79914 temp388_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp388_6 #x0000000000000000))
(assert (= temp388_7 temp388_6))
(assert (= temp388_8 (select ARGNAME_padding_NAMEEND_VAL temp388_7)))
(assert (= temp388_9 #x0000000000000001))
(assert (= temp388_10 temp388_9))
(assert (= temp388_11 (select ARGNAME_padding_NAMEEND_VAL temp388_10)))
(assert (= temp388_12 #x0000000000000002))
(assert (= temp388_13 temp388_12))
(assert (= temp388_14 (select ARGNAME_padding_NAMEEND_VAL temp388_13)))
(assert (= temp388_15 #x0000000000000003))
(assert (= temp388_16 temp388_15))
(assert (= temp388_17 (select ARGNAME_padding_NAMEEND_VAL temp388_16)))
(assert (= temp388_18 #x0000000000000004))
(assert (= temp388_19 temp388_18))
(assert (= temp388_20 (select ARGNAME_padding_NAMEEND_VAL temp388_19)))
(assert (= temp388_21 #x0000000000000005))
(assert (= temp388_22 temp388_21))
(assert (= temp388_23 (select ARGNAME_padding_NAMEEND_VAL temp388_22)))
(assert (= temp388_24 #x0000000000000000))
(assert (= temp388_25 #x0000000000000000))
(assert (= temp388_26 temp388_25))
(assert (= temp388_27 (select ARGNAME_padding_NAMEEND_VAL temp388_26)))
(assert (= temp388_28 #x0000000000000000))
(assert (= temp388_29 #x0000000000000001))
(assert (= temp388_30 temp388_29))
(assert (= temp388_31 (select ARGNAME_padding_NAMEEND_VAL temp388_30)))
(assert (= temp388_32 #x0000000000000000))
(assert (= temp388_33 #x0000000000000002))
(assert (= temp388_34 temp388_33))
(assert (= temp388_35 (select ARGNAME_padding_NAMEEND_VAL temp388_34)))
(assert (= temp388_36 #x0000000000000000))
(assert (= temp388_37 #x0000000000000003))
(assert (= temp388_38 temp388_37))
(assert (= temp388_39 (select ARGNAME_padding_NAMEEND_VAL temp388_38)))
(assert (= temp388_40 #x0000000000000000))
(assert (= temp388_41 #x0000000000000004))
(assert (= temp388_42 temp388_41))
(assert (= temp388_43 (select ARGNAME_padding_NAMEEND_VAL temp388_42)))
(assert (= temp388_44 #x0000000000000000))
(assert (= temp388_45 #x0000000000000005))
(assert (= temp388_46 temp388_45))
(assert (= temp388_47 (select ARGNAME_padding_NAMEEND_VAL temp388_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp388_27 temp388_24)
             (bvslt temp388_31 temp388_28)
             (bvslt temp388_35 temp388_32)
             (bvslt temp388_39 temp388_36)
             (bvslt temp388_43 temp388_40)
             (bvslt temp388_47 temp388_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_48 #x0000000000000000))
(assert (= var1322786 temp388_48))
(assert (= temp388_49 #x0000000000000000))
(assert (= temp388_50 temp388_49))
(assert (= temp388_51 (select ARGNAME_output_padding_NAMEEND_VAL temp388_50)))
(assert (= temp388_52 #x0000000000000001))
(assert (= temp388_53 temp388_52))
(assert (= temp388_54 (select ARGNAME_output_padding_NAMEEND_VAL temp388_53)))
(assert (= temp388_55 #x0000000000000002))
(assert (= temp388_56 temp388_55))
(assert (= temp388_57 (select ARGNAME_output_padding_NAMEEND_VAL temp388_56)))
(assert (= temp388_58 #x0000000000000003))
(assert (= temp388_59 temp388_58))
(assert (= temp388_60 (select ARGNAME_output_padding_NAMEEND_VAL temp388_59)))
(assert (= temp388_61 #x0000000000000004))
(assert (= temp388_62 temp388_61))
(assert (= temp388_63 (select ARGNAME_output_padding_NAMEEND_VAL temp388_62)))
(assert (= temp388_64 #x0000000000000005))
(assert (= temp388_65 temp388_64))
(assert (= temp388_66 (select ARGNAME_output_padding_NAMEEND_VAL temp388_65)))
(assert (= temp388_67 #x0000000000000000))
(assert (= temp388_68 #x0000000000000000))
(assert (= temp388_69 temp388_68))
(assert (= temp388_70 (select ARGNAME_output_padding_NAMEEND_VAL temp388_69)))
(assert (= temp388_71 #x0000000000000000))
(assert (= temp388_72 #x0000000000000001))
(assert (= temp388_73 temp388_72))
(assert (= temp388_74 (select ARGNAME_output_padding_NAMEEND_VAL temp388_73)))
(assert (= temp388_75 #x0000000000000000))
(assert (= temp388_76 #x0000000000000002))
(assert (= temp388_77 temp388_76))
(assert (= temp388_78 (select ARGNAME_output_padding_NAMEEND_VAL temp388_77)))
(assert (= temp388_79 #x0000000000000000))
(assert (= temp388_80 #x0000000000000003))
(assert (= temp388_81 temp388_80))
(assert (= temp388_82 (select ARGNAME_output_padding_NAMEEND_VAL temp388_81)))
(assert (= temp388_83 #x0000000000000000))
(assert (= temp388_84 #x0000000000000004))
(assert (= temp388_85 temp388_84))
(assert (= temp388_86 (select ARGNAME_output_padding_NAMEEND_VAL temp388_85)))
(assert (= temp388_87 #x0000000000000000))
(assert (= temp388_88 #x0000000000000005))
(assert (= temp388_89 temp388_88))
(assert (= temp388_90 (select ARGNAME_output_padding_NAMEEND_VAL temp388_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp388_70 temp388_67)
             (bvslt temp388_74 temp388_71)
             (bvslt temp388_78 temp388_75)
             (bvslt temp388_82 temp388_79)
             (bvslt temp388_86 temp388_83)
             (bvslt temp388_90 temp388_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_91 #x0000000000000000))
(assert (= var1322797 temp388_91))
(assert (= temp388_92 #x0000000000000000))
(assert (= temp388_93 temp388_92))
(assert (= temp388_94 (select ARGNAME_stride_NAMEEND_VAL temp388_93)))
(assert (= temp388_95 #x0000000000000001))
(assert (= temp388_96 temp388_95))
(assert (= temp388_97 (select ARGNAME_stride_NAMEEND_VAL temp388_96)))
(assert (= temp388_98 #x0000000000000002))
(assert (= temp388_99 temp388_98))
(assert (= temp388_100 (select ARGNAME_stride_NAMEEND_VAL temp388_99)))
(assert (= temp388_101 #x0000000000000003))
(assert (= temp388_102 temp388_101))
(assert (= temp388_103 (select ARGNAME_stride_NAMEEND_VAL temp388_102)))
(assert (= temp388_104 #x0000000000000004))
(assert (= temp388_105 temp388_104))
(assert (= temp388_106 (select ARGNAME_stride_NAMEEND_VAL temp388_105)))
(assert (= temp388_107 #x0000000000000005))
(assert (= temp388_108 temp388_107))
(assert (= temp388_109 (select ARGNAME_stride_NAMEEND_VAL temp388_108)))
(assert (= temp388_110 #x0000000000000000))
(assert (= temp388_111 #x0000000000000000))
(assert (= temp388_112 temp388_111))
(assert (= temp388_113 (select ARGNAME_stride_NAMEEND_VAL temp388_112)))
(assert (= temp388_114 #x0000000000000000))
(assert (= temp388_115 #x0000000000000001))
(assert (= temp388_116 temp388_115))
(assert (= temp388_117 (select ARGNAME_stride_NAMEEND_VAL temp388_116)))
(assert (= temp388_118 #x0000000000000000))
(assert (= temp388_119 #x0000000000000002))
(assert (= temp388_120 temp388_119))
(assert (= temp388_121 (select ARGNAME_stride_NAMEEND_VAL temp388_120)))
(assert (= temp388_122 #x0000000000000000))
(assert (= temp388_123 #x0000000000000003))
(assert (= temp388_124 temp388_123))
(assert (= temp388_125 (select ARGNAME_stride_NAMEEND_VAL temp388_124)))
(assert (= temp388_126 #x0000000000000000))
(assert (= temp388_127 #x0000000000000004))
(assert (= temp388_128 temp388_127))
(assert (= temp388_129 (select ARGNAME_stride_NAMEEND_VAL temp388_128)))
(assert (= temp388_130 #x0000000000000000))
(assert (= temp388_131 #x0000000000000005))
(assert (= temp388_132 temp388_131))
(assert (= temp388_133 (select ARGNAME_stride_NAMEEND_VAL temp388_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp388_113 temp388_110)
             (bvsle temp388_117 temp388_114)
             (bvsle temp388_121 temp388_118)
             (bvsle temp388_125 temp388_122)
             (bvsle temp388_129 temp388_126)
             (bvsle temp388_133 temp388_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_134 #x0000000000000000))
(assert (= var1322807 temp388_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_135 #x0000000000000001))
(assert (= var1322819 temp388_135))
(assert (= temp388_136 #x0000000000000000))
(assert (= var1310898 temp388_136))
(assert (= temp388_137 #x0000000000000000))
(assert (= temp388_138 temp388_137))
(assert (= temp388_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_138)))
(assert (= temp388_140 #x0000000000000001))
(assert (= temp388_141 temp388_140))
(assert (= temp388_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_141)))
(assert (= temp388_143 #x0000000000000002))
(assert (= temp388_144 temp388_143))
(assert (= temp388_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_144)))
(assert (= temp388_146 #x0000000000000003))
(assert (= temp388_147 temp388_146))
(assert (= temp388_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_147)))
(assert (= temp388_149 #x0000000000000004))
(assert (= temp388_150 temp388_149))
(assert (= temp388_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_150)))
(assert (= temp388_152 #x0000000000000005))
(assert (= temp388_153 temp388_152))
(assert (= temp388_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_153)))
(assert (= temp388_156 var1310898))
(assert (= temp388_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_156)))
(assert (= temp388_155 temp388_157))
(assert (= var1322852
   (ite (bvslt temp388_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_158 #x0000000000000000))
(assert (= var1322852 temp388_158))
(assert (= temp388_159 #x0000000000000000))
(assert (= var1310898 temp388_159))
(assert (= temp388_161 var1310898))
(assert (= temp388_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_161)))
(assert (= temp388_160 temp388_162))
(assert (= var1322874 (bvsmod temp388_160 ARGNAME_groups_NAMEEND)))
(assert (= temp388_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp388_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp388_164 #x0000000000000001))
(assert (= var1322875 temp388_164))
(assert (= temp388_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp388_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_166 #x0000000000000001))
(assert (= var1322895 temp388_166))
(assert (= temp388_167 #x0000000000000001))
(assert (= var1311786 temp388_167))
(assert (= temp388_168 #x0000000000000000))
(assert (= temp388_169 temp388_168))
(assert (= temp388_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_169)))
(assert (= temp388_171 #x0000000000000001))
(assert (= temp388_172 temp388_171))
(assert (= temp388_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_172)))
(assert (= temp388_174 #x0000000000000002))
(assert (= temp388_175 temp388_174))
(assert (= temp388_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_175)))
(assert (= temp388_177 #x0000000000000003))
(assert (= temp388_178 temp388_177))
(assert (= temp388_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_178)))
(assert (= temp388_180 #x0000000000000004))
(assert (= temp388_181 temp388_180))
(assert (= temp388_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_181)))
(assert (= temp388_183 #x0000000000000005))
(assert (= temp388_184 temp388_183))
(assert (= temp388_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_184)))
(assert (= temp388_186 #x0000000000000000))
(assert (= temp388_187
   (ite (bvslt var1311786 temp388_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp388_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_187)))
(assert (= var1322903 temp388_188))
(assert (bvslt (ite (bvslt var1311786 temp388_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp388_189 #x0000000000000001))
(assert (= var1311786 temp388_189))
(assert (= temp388_191 var1311786))
(assert (= temp388_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_191)))
(assert (= temp388_190 temp388_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp388_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp388_193 #x0000000000000001))
(assert (= var1322908 temp388_193))
(assert (= temp388_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp388_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_195 #x0000000000000001))
(assert (= var1322975 temp388_195))
(assert (= temp388_196 #x0000000000000000))
(assert (= var1310898 temp388_196))
(assert (= temp388_197 #x0000000000000000))
(assert (= temp388_198 temp388_197))
(assert (= temp388_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp388_198)))
(assert (= temp388_200 #x0000000000000001))
(assert (= temp388_201 temp388_200))
(assert (= temp388_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp388_201)))
(assert (= temp388_203 #x0000000000000002))
(assert (= temp388_204 temp388_203))
(assert (= temp388_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp388_204)))
(assert (= temp388_206 #x0000000000000003))
(assert (= temp388_207 temp388_206))
(assert (= temp388_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp388_207)))
(assert (= temp388_209 #x0000000000000004))
(assert (= temp388_210 temp388_209))
(assert (= temp388_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp388_210)))
(assert (= temp388_212 #x0000000000000005))
(assert (= temp388_213 temp388_212))
(assert (= temp388_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp388_213)))
(assert (= temp388_215 #x0000000000000000))
(assert (= temp388_216
   (ite (bvslt var1310898 temp388_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp388_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp388_216)))
(assert (= var1322977 temp388_217))
(assert (bvslt (ite (bvslt var1310898 temp388_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp388_218 #x0000000000000000))
(assert (= var1310898 temp388_218))
(assert (= temp388_220 var1310898))
(assert (= temp388_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp388_220)))
(assert (= temp388_219 temp388_221))
(assert (= var1322980
   (ite (= var1322977 temp388_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp388_222 #x0000000000000001))
(assert (= var1322980 temp388_222))
(assert (= temp388_223 #x0000000000000002))
(assert (= var1848169 temp388_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp388_225 #x0000000000000001))
(assert (= var1323065 temp388_225))
(assert (= temp388_226 #x0000000000000001))
(assert (= var3486735 temp388_226))
(assert (= temp388_227 #x0000000000000001))
(assert (= var3814415 temp388_227))
(assert (= temp388_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp388_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_229 #x0000000000000001))
(assert (= var79986 temp388_229))
(assert (= temp388_230 #x0000000000000001))
(assert (= var80116 temp388_230))
(assert (= var4796905 var80116))
(assert (= temp388_231 #x0000000000000000))
(assert (= var4784306 temp388_231))
(assert (= temp388_232 #x0000000000000000))
(assert (= temp388_233
   (ite (bvslt var4784306 temp388_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp388_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_233)))
(assert (= var4796924 temp388_234))
(assert (bvslt (ite (bvslt var4784306 temp388_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp388_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp388_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp388_236 #x0000000000000001))
(assert (= var4796925 temp388_236))
(assert (= temp388_237 #x0000000000000000))
(assert (= var4996927 temp388_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp388_238 #x0000000000000002))
(assert (= var5125763 temp388_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_239 #x0000000000000000))
(assert (= var5191324 temp388_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp388_240 #x0000000000000000))
(assert (= var6631824 temp388_240))
(assert (= temp388_241 #x0000000000000001))
(assert (= var79986 temp388_241))
(model-add temp388_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp388_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp388_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






