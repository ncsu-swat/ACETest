(declare-fun temp671_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp671_2 () (_ BitVec 64))
(declare-fun temp671_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp671_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp671_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp671_6 () (_ BitVec 64))
(declare-fun temp671_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp671_8 () (_ BitVec 64))
(declare-fun temp671_9 () (_ BitVec 64))
(declare-fun temp671_10 () (_ BitVec 64))
(declare-fun temp671_11 () (_ BitVec 64))
(declare-fun temp671_12 () (_ BitVec 64))
(declare-fun temp671_13 () (_ BitVec 64))
(declare-fun temp671_14 () (_ BitVec 64))
(declare-fun temp671_15 () (_ BitVec 64))
(declare-fun temp671_16 () (_ BitVec 64))
(declare-fun temp671_17 () (_ BitVec 64))
(declare-fun temp671_18 () (_ BitVec 64))
(declare-fun temp671_19 () (_ BitVec 64))
(declare-fun temp671_20 () (_ BitVec 64))
(declare-fun temp671_21 () (_ BitVec 64))
(declare-fun temp671_22 () (_ BitVec 64))
(declare-fun temp671_23 () (_ BitVec 64))
(declare-fun temp671_24 () (_ BitVec 64))
(declare-fun temp671_25 () (_ BitVec 64))
(declare-fun temp671_26 () (_ BitVec 64))
(declare-fun temp671_27 () (_ BitVec 64))
(declare-fun temp671_28 () (_ BitVec 64))
(declare-fun temp671_29 () (_ BitVec 64))
(declare-fun temp671_30 () (_ BitVec 64))
(declare-fun temp671_31 () (_ BitVec 64))
(declare-fun temp671_32 () (_ BitVec 64))
(declare-fun temp671_33 () (_ BitVec 64))
(declare-fun temp671_34 () (_ BitVec 64))
(declare-fun temp671_35 () (_ BitVec 64))
(declare-fun temp671_36 () (_ BitVec 64))
(declare-fun temp671_37 () (_ BitVec 64))
(declare-fun temp671_38 () (_ BitVec 64))
(declare-fun temp671_39 () (_ BitVec 64))
(declare-fun temp671_40 () (_ BitVec 64))
(declare-fun temp671_41 () (_ BitVec 64))
(declare-fun temp671_42 () (_ BitVec 64))
(declare-fun temp671_43 () (_ BitVec 64))
(declare-fun temp671_44 () (_ BitVec 64))
(declare-fun temp671_45 () (_ BitVec 64))
(declare-fun temp671_46 () (_ BitVec 64))
(declare-fun temp671_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp671_48 () (_ BitVec 64))
(declare-fun temp671_49 () (_ BitVec 64))
(declare-fun temp671_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp671_51 () (_ BitVec 64))
(declare-fun temp671_52 () (_ BitVec 64))
(declare-fun temp671_53 () (_ BitVec 64))
(declare-fun temp671_54 () (_ BitVec 64))
(declare-fun temp671_55 () (_ BitVec 64))
(declare-fun temp671_56 () (_ BitVec 64))
(declare-fun temp671_57 () (_ BitVec 64))
(declare-fun temp671_58 () (_ BitVec 64))
(declare-fun temp671_59 () (_ BitVec 64))
(declare-fun temp671_60 () (_ BitVec 64))
(declare-fun temp671_61 () (_ BitVec 64))
(declare-fun temp671_62 () (_ BitVec 64))
(declare-fun temp671_63 () (_ BitVec 64))
(declare-fun temp671_64 () (_ BitVec 64))
(declare-fun temp671_65 () (_ BitVec 64))
(declare-fun temp671_66 () (_ BitVec 64))
(declare-fun temp671_67 () (_ BitVec 64))
(declare-fun temp671_68 () (_ BitVec 64))
(declare-fun temp671_69 () (_ BitVec 64))
(declare-fun temp671_70 () (_ BitVec 64))
(declare-fun temp671_71 () (_ BitVec 64))
(declare-fun temp671_72 () (_ BitVec 64))
(declare-fun temp671_73 () (_ BitVec 64))
(declare-fun temp671_74 () (_ BitVec 64))
(declare-fun temp671_75 () (_ BitVec 64))
(declare-fun temp671_76 () (_ BitVec 64))
(declare-fun temp671_77 () (_ BitVec 64))
(declare-fun temp671_78 () (_ BitVec 64))
(declare-fun temp671_79 () (_ BitVec 64))
(declare-fun temp671_80 () (_ BitVec 64))
(declare-fun temp671_81 () (_ BitVec 64))
(declare-fun temp671_82 () (_ BitVec 64))
(declare-fun temp671_83 () (_ BitVec 64))
(declare-fun temp671_84 () (_ BitVec 64))
(declare-fun temp671_85 () (_ BitVec 64))
(declare-fun temp671_86 () (_ BitVec 64))
(declare-fun temp671_87 () (_ BitVec 64))
(declare-fun temp671_88 () (_ BitVec 64))
(declare-fun temp671_89 () (_ BitVec 64))
(declare-fun temp671_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp671_91 () (_ BitVec 64))
(declare-fun temp671_92 () (_ BitVec 64))
(declare-fun temp671_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp671_94 () (_ BitVec 64))
(declare-fun temp671_95 () (_ BitVec 64))
(declare-fun temp671_96 () (_ BitVec 64))
(declare-fun temp671_97 () (_ BitVec 64))
(declare-fun temp671_98 () (_ BitVec 64))
(declare-fun temp671_99 () (_ BitVec 64))
(declare-fun temp671_100 () (_ BitVec 64))
(declare-fun temp671_101 () (_ BitVec 64))
(declare-fun temp671_102 () (_ BitVec 64))
(declare-fun temp671_103 () (_ BitVec 64))
(declare-fun temp671_104 () (_ BitVec 64))
(declare-fun temp671_105 () (_ BitVec 64))
(declare-fun temp671_106 () (_ BitVec 64))
(declare-fun temp671_107 () (_ BitVec 64))
(declare-fun temp671_108 () (_ BitVec 64))
(declare-fun temp671_109 () (_ BitVec 64))
(declare-fun temp671_110 () (_ BitVec 64))
(declare-fun temp671_111 () (_ BitVec 64))
(declare-fun temp671_112 () (_ BitVec 64))
(declare-fun temp671_113 () (_ BitVec 64))
(declare-fun temp671_114 () (_ BitVec 64))
(declare-fun temp671_115 () (_ BitVec 64))
(declare-fun temp671_116 () (_ BitVec 64))
(declare-fun temp671_117 () (_ BitVec 64))
(declare-fun temp671_118 () (_ BitVec 64))
(declare-fun temp671_119 () (_ BitVec 64))
(declare-fun temp671_120 () (_ BitVec 64))
(declare-fun temp671_121 () (_ BitVec 64))
(declare-fun temp671_122 () (_ BitVec 64))
(declare-fun temp671_123 () (_ BitVec 64))
(declare-fun temp671_124 () (_ BitVec 64))
(declare-fun temp671_125 () (_ BitVec 64))
(declare-fun temp671_126 () (_ BitVec 64))
(declare-fun temp671_127 () (_ BitVec 64))
(declare-fun temp671_128 () (_ BitVec 64))
(declare-fun temp671_129 () (_ BitVec 64))
(declare-fun temp671_130 () (_ BitVec 64))
(declare-fun temp671_131 () (_ BitVec 64))
(declare-fun temp671_132 () (_ BitVec 64))
(declare-fun temp671_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp671_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp671_135 () (_ BitVec 64))
(declare-fun temp671_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp671_137 () (_ BitVec 64))
(declare-fun temp671_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp671_139 () (_ BitVec 64))
(declare-fun temp671_140 () (_ BitVec 64))
(declare-fun temp671_141 () (_ BitVec 64))
(declare-fun temp671_142 () (_ BitVec 64))
(declare-fun temp671_143 () (_ BitVec 64))
(declare-fun temp671_144 () (_ BitVec 64))
(declare-fun temp671_145 () (_ BitVec 64))
(declare-fun temp671_146 () (_ BitVec 64))
(declare-fun temp671_147 () (_ BitVec 64))
(declare-fun temp671_148 () (_ BitVec 64))
(declare-fun temp671_149 () (_ BitVec 64))
(declare-fun temp671_150 () (_ BitVec 64))
(declare-fun temp671_151 () (_ BitVec 64))
(declare-fun temp671_152 () (_ BitVec 64))
(declare-fun temp671_153 () (_ BitVec 64))
(declare-fun temp671_154 () (_ BitVec 64))
(declare-fun temp671_156 () (_ BitVec 64))
(declare-fun temp671_157 () (_ BitVec 64))
(declare-fun temp671_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp671_158 () (_ BitVec 64))
(declare-fun temp671_159 () (_ BitVec 64))
(declare-fun temp671_161 () (_ BitVec 64))
(declare-fun temp671_162 () (_ BitVec 64))
(declare-fun temp671_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp671_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp671_164 () (_ BitVec 64))
(declare-fun temp671_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp671_166 () (_ BitVec 64))
(declare-fun temp671_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp671_168 () (_ BitVec 64))
(declare-fun temp671_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp671_170 () (_ BitVec 64))
(declare-fun temp671_171 () (_ BitVec 64))
(declare-fun temp671_172 () (_ BitVec 64))
(declare-fun temp671_173 () (_ BitVec 64))
(declare-fun temp671_174 () (_ BitVec 64))
(declare-fun temp671_175 () (_ BitVec 64))
(declare-fun temp671_176 () (_ BitVec 64))
(declare-fun temp671_177 () (_ BitVec 64))
(declare-fun temp671_178 () (_ BitVec 64))
(declare-fun temp671_179 () (_ BitVec 64))
(declare-fun temp671_180 () (_ BitVec 64))
(declare-fun temp671_181 () (_ BitVec 64))
(declare-fun temp671_182 () (_ BitVec 64))
(declare-fun temp671_183 () (_ BitVec 64))
(declare-fun temp671_184 () (_ BitVec 64))
(declare-fun temp671_185 () (_ BitVec 64))
(declare-fun temp671_186 () (_ BitVec 64))
(declare-fun temp671_187 () (_ BitVec 64))
(declare-fun temp671_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp671_189 () (_ BitVec 64))
(declare-fun temp671_191 () (_ BitVec 64))
(declare-fun temp671_192 () (_ BitVec 64))
(declare-fun temp671_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp671_193 () (_ BitVec 64))
(declare-fun temp671_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp671_195 () (_ BitVec 64))
(declare-fun temp671_196 () (_ BitVec 64))
(declare-fun temp671_197 () (_ BitVec 64))
(declare-fun temp671_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp671_199 () (_ BitVec 64))
(declare-fun temp671_200 () (_ BitVec 64))
(declare-fun temp671_201 () (_ BitVec 64))
(declare-fun temp671_202 () (_ BitVec 64))
(declare-fun temp671_203 () (_ BitVec 64))
(declare-fun temp671_204 () (_ BitVec 64))
(declare-fun temp671_205 () (_ BitVec 64))
(declare-fun temp671_206 () (_ BitVec 64))
(declare-fun temp671_207 () (_ BitVec 64))
(declare-fun temp671_208 () (_ BitVec 64))
(declare-fun temp671_209 () (_ BitVec 64))
(declare-fun temp671_210 () (_ BitVec 64))
(declare-fun temp671_211 () (_ BitVec 64))
(declare-fun temp671_212 () (_ BitVec 64))
(declare-fun temp671_213 () (_ BitVec 64))
(declare-fun temp671_214 () (_ BitVec 64))
(declare-fun temp671_215 () (_ BitVec 64))
(declare-fun temp671_216 () (_ BitVec 64))
(declare-fun temp671_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp671_218 () (_ BitVec 64))
(declare-fun temp671_220 () (_ BitVec 64))
(declare-fun temp671_221 () (_ BitVec 64))
(declare-fun temp671_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp671_222 () (_ BitVec 64))
(declare-fun temp671_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp671_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp671_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp671_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp671_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp671_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp671_229 () (_ BitVec 64))
(declare-fun temp671_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp671_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp671_232 () (_ BitVec 64))
(declare-fun temp671_233 () (_ BitVec 64))
(declare-fun temp671_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp671_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp671_236 () (_ BitVec 64))
(declare-fun temp671_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp671_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp671_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp671_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp671_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp671_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp671_244 () (_ BitVec 64))
(declare-fun temp671_243 () (_ BitVec 64))
(assert (= temp671_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp671_1)))
(assert (= temp671_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp671_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_3 #x0000000000000000))
(assert (= var79869 temp671_3))
(assert (= temp671_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp671_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_5 #x0000000000000000))
(assert (= var79914 temp671_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp671_6 #x0000000000000000))
(assert (= temp671_7 temp671_6))
(assert (= temp671_8 (select ARGNAME_padding_NAMEEND_VAL temp671_7)))
(assert (= temp671_9 #x0000000000000001))
(assert (= temp671_10 temp671_9))
(assert (= temp671_11 (select ARGNAME_padding_NAMEEND_VAL temp671_10)))
(assert (= temp671_12 #x0000000000000002))
(assert (= temp671_13 temp671_12))
(assert (= temp671_14 (select ARGNAME_padding_NAMEEND_VAL temp671_13)))
(assert (= temp671_15 #x0000000000000003))
(assert (= temp671_16 temp671_15))
(assert (= temp671_17 (select ARGNAME_padding_NAMEEND_VAL temp671_16)))
(assert (= temp671_18 #x0000000000000004))
(assert (= temp671_19 temp671_18))
(assert (= temp671_20 (select ARGNAME_padding_NAMEEND_VAL temp671_19)))
(assert (= temp671_21 #x0000000000000005))
(assert (= temp671_22 temp671_21))
(assert (= temp671_23 (select ARGNAME_padding_NAMEEND_VAL temp671_22)))
(assert (= temp671_24 #x0000000000000000))
(assert (= temp671_25 #x0000000000000000))
(assert (= temp671_26 temp671_25))
(assert (= temp671_27 (select ARGNAME_padding_NAMEEND_VAL temp671_26)))
(assert (= temp671_28 #x0000000000000000))
(assert (= temp671_29 #x0000000000000001))
(assert (= temp671_30 temp671_29))
(assert (= temp671_31 (select ARGNAME_padding_NAMEEND_VAL temp671_30)))
(assert (= temp671_32 #x0000000000000000))
(assert (= temp671_33 #x0000000000000002))
(assert (= temp671_34 temp671_33))
(assert (= temp671_35 (select ARGNAME_padding_NAMEEND_VAL temp671_34)))
(assert (= temp671_36 #x0000000000000000))
(assert (= temp671_37 #x0000000000000003))
(assert (= temp671_38 temp671_37))
(assert (= temp671_39 (select ARGNAME_padding_NAMEEND_VAL temp671_38)))
(assert (= temp671_40 #x0000000000000000))
(assert (= temp671_41 #x0000000000000004))
(assert (= temp671_42 temp671_41))
(assert (= temp671_43 (select ARGNAME_padding_NAMEEND_VAL temp671_42)))
(assert (= temp671_44 #x0000000000000000))
(assert (= temp671_45 #x0000000000000005))
(assert (= temp671_46 temp671_45))
(assert (= temp671_47 (select ARGNAME_padding_NAMEEND_VAL temp671_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp671_27 temp671_24)
             (bvslt temp671_31 temp671_28)
             (bvslt temp671_35 temp671_32)
             (bvslt temp671_39 temp671_36)
             (bvslt temp671_43 temp671_40)
             (bvslt temp671_47 temp671_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_48 #x0000000000000000))
(assert (= var1322786 temp671_48))
(assert (= temp671_49 #x0000000000000000))
(assert (= temp671_50 temp671_49))
(assert (= temp671_51 (select ARGNAME_output_padding_NAMEEND_VAL temp671_50)))
(assert (= temp671_52 #x0000000000000001))
(assert (= temp671_53 temp671_52))
(assert (= temp671_54 (select ARGNAME_output_padding_NAMEEND_VAL temp671_53)))
(assert (= temp671_55 #x0000000000000002))
(assert (= temp671_56 temp671_55))
(assert (= temp671_57 (select ARGNAME_output_padding_NAMEEND_VAL temp671_56)))
(assert (= temp671_58 #x0000000000000003))
(assert (= temp671_59 temp671_58))
(assert (= temp671_60 (select ARGNAME_output_padding_NAMEEND_VAL temp671_59)))
(assert (= temp671_61 #x0000000000000004))
(assert (= temp671_62 temp671_61))
(assert (= temp671_63 (select ARGNAME_output_padding_NAMEEND_VAL temp671_62)))
(assert (= temp671_64 #x0000000000000005))
(assert (= temp671_65 temp671_64))
(assert (= temp671_66 (select ARGNAME_output_padding_NAMEEND_VAL temp671_65)))
(assert (= temp671_67 #x0000000000000000))
(assert (= temp671_68 #x0000000000000000))
(assert (= temp671_69 temp671_68))
(assert (= temp671_70 (select ARGNAME_output_padding_NAMEEND_VAL temp671_69)))
(assert (= temp671_71 #x0000000000000000))
(assert (= temp671_72 #x0000000000000001))
(assert (= temp671_73 temp671_72))
(assert (= temp671_74 (select ARGNAME_output_padding_NAMEEND_VAL temp671_73)))
(assert (= temp671_75 #x0000000000000000))
(assert (= temp671_76 #x0000000000000002))
(assert (= temp671_77 temp671_76))
(assert (= temp671_78 (select ARGNAME_output_padding_NAMEEND_VAL temp671_77)))
(assert (= temp671_79 #x0000000000000000))
(assert (= temp671_80 #x0000000000000003))
(assert (= temp671_81 temp671_80))
(assert (= temp671_82 (select ARGNAME_output_padding_NAMEEND_VAL temp671_81)))
(assert (= temp671_83 #x0000000000000000))
(assert (= temp671_84 #x0000000000000004))
(assert (= temp671_85 temp671_84))
(assert (= temp671_86 (select ARGNAME_output_padding_NAMEEND_VAL temp671_85)))
(assert (= temp671_87 #x0000000000000000))
(assert (= temp671_88 #x0000000000000005))
(assert (= temp671_89 temp671_88))
(assert (= temp671_90 (select ARGNAME_output_padding_NAMEEND_VAL temp671_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp671_70 temp671_67)
             (bvslt temp671_74 temp671_71)
             (bvslt temp671_78 temp671_75)
             (bvslt temp671_82 temp671_79)
             (bvslt temp671_86 temp671_83)
             (bvslt temp671_90 temp671_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_91 #x0000000000000000))
(assert (= var1322797 temp671_91))
(assert (= temp671_92 #x0000000000000000))
(assert (= temp671_93 temp671_92))
(assert (= temp671_94 (select ARGNAME_stride_NAMEEND_VAL temp671_93)))
(assert (= temp671_95 #x0000000000000001))
(assert (= temp671_96 temp671_95))
(assert (= temp671_97 (select ARGNAME_stride_NAMEEND_VAL temp671_96)))
(assert (= temp671_98 #x0000000000000002))
(assert (= temp671_99 temp671_98))
(assert (= temp671_100 (select ARGNAME_stride_NAMEEND_VAL temp671_99)))
(assert (= temp671_101 #x0000000000000003))
(assert (= temp671_102 temp671_101))
(assert (= temp671_103 (select ARGNAME_stride_NAMEEND_VAL temp671_102)))
(assert (= temp671_104 #x0000000000000004))
(assert (= temp671_105 temp671_104))
(assert (= temp671_106 (select ARGNAME_stride_NAMEEND_VAL temp671_105)))
(assert (= temp671_107 #x0000000000000005))
(assert (= temp671_108 temp671_107))
(assert (= temp671_109 (select ARGNAME_stride_NAMEEND_VAL temp671_108)))
(assert (= temp671_110 #x0000000000000000))
(assert (= temp671_111 #x0000000000000000))
(assert (= temp671_112 temp671_111))
(assert (= temp671_113 (select ARGNAME_stride_NAMEEND_VAL temp671_112)))
(assert (= temp671_114 #x0000000000000000))
(assert (= temp671_115 #x0000000000000001))
(assert (= temp671_116 temp671_115))
(assert (= temp671_117 (select ARGNAME_stride_NAMEEND_VAL temp671_116)))
(assert (= temp671_118 #x0000000000000000))
(assert (= temp671_119 #x0000000000000002))
(assert (= temp671_120 temp671_119))
(assert (= temp671_121 (select ARGNAME_stride_NAMEEND_VAL temp671_120)))
(assert (= temp671_122 #x0000000000000000))
(assert (= temp671_123 #x0000000000000003))
(assert (= temp671_124 temp671_123))
(assert (= temp671_125 (select ARGNAME_stride_NAMEEND_VAL temp671_124)))
(assert (= temp671_126 #x0000000000000000))
(assert (= temp671_127 #x0000000000000004))
(assert (= temp671_128 temp671_127))
(assert (= temp671_129 (select ARGNAME_stride_NAMEEND_VAL temp671_128)))
(assert (= temp671_130 #x0000000000000000))
(assert (= temp671_131 #x0000000000000005))
(assert (= temp671_132 temp671_131))
(assert (= temp671_133 (select ARGNAME_stride_NAMEEND_VAL temp671_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp671_113 temp671_110)
             (bvsle temp671_117 temp671_114)
             (bvsle temp671_121 temp671_118)
             (bvsle temp671_125 temp671_122)
             (bvsle temp671_129 temp671_126)
             (bvsle temp671_133 temp671_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_134 #x0000000000000000))
(assert (= var1322807 temp671_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_135 #x0000000000000001))
(assert (= var1322819 temp671_135))
(assert (= temp671_136 #x0000000000000000))
(assert (= var1310898 temp671_136))
(assert (= temp671_137 #x0000000000000000))
(assert (= temp671_138 temp671_137))
(assert (= temp671_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_138)))
(assert (= temp671_140 #x0000000000000001))
(assert (= temp671_141 temp671_140))
(assert (= temp671_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_141)))
(assert (= temp671_143 #x0000000000000002))
(assert (= temp671_144 temp671_143))
(assert (= temp671_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_144)))
(assert (= temp671_146 #x0000000000000003))
(assert (= temp671_147 temp671_146))
(assert (= temp671_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_147)))
(assert (= temp671_149 #x0000000000000004))
(assert (= temp671_150 temp671_149))
(assert (= temp671_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_150)))
(assert (= temp671_152 #x0000000000000005))
(assert (= temp671_153 temp671_152))
(assert (= temp671_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_153)))
(assert (= temp671_156 var1310898))
(assert (= temp671_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_156)))
(assert (= temp671_155 temp671_157))
(assert (= var1322852
   (ite (bvslt temp671_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_158 #x0000000000000000))
(assert (= var1322852 temp671_158))
(assert (= temp671_159 #x0000000000000000))
(assert (= var1310898 temp671_159))
(assert (= temp671_161 var1310898))
(assert (= temp671_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_161)))
(assert (= temp671_160 temp671_162))
(assert (= var1322874 (bvsmod temp671_160 ARGNAME_groups_NAMEEND)))
(assert (= temp671_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp671_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp671_164 #x0000000000000001))
(assert (= var1322875 temp671_164))
(assert (= temp671_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp671_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_166 #x0000000000000001))
(assert (= var1322895 temp671_166))
(assert (= temp671_167 #x0000000000000001))
(assert (= var1311786 temp671_167))
(assert (= temp671_168 #x0000000000000000))
(assert (= temp671_169 temp671_168))
(assert (= temp671_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp671_169)))
(assert (= temp671_171 #x0000000000000001))
(assert (= temp671_172 temp671_171))
(assert (= temp671_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp671_172)))
(assert (= temp671_174 #x0000000000000002))
(assert (= temp671_175 temp671_174))
(assert (= temp671_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp671_175)))
(assert (= temp671_177 #x0000000000000003))
(assert (= temp671_178 temp671_177))
(assert (= temp671_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp671_178)))
(assert (= temp671_180 #x0000000000000004))
(assert (= temp671_181 temp671_180))
(assert (= temp671_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp671_181)))
(assert (= temp671_183 #x0000000000000005))
(assert (= temp671_184 temp671_183))
(assert (= temp671_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp671_184)))
(assert (= temp671_186 #x0000000000000000))
(assert (= temp671_187
   (ite (bvslt var1311786 temp671_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp671_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp671_187)))
(assert (= var1322903 temp671_188))
(assert (bvslt (ite (bvslt var1311786 temp671_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp671_189 #x0000000000000001))
(assert (= var1311786 temp671_189))
(assert (= temp671_191 var1311786))
(assert (= temp671_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_191)))
(assert (= temp671_190 temp671_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp671_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp671_193 #x0000000000000001))
(assert (= var1322908 temp671_193))
(assert (= temp671_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp671_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_195 #x0000000000000001))
(assert (= var1322975 temp671_195))
(assert (= temp671_196 #x0000000000000000))
(assert (= var1310898 temp671_196))
(assert (= temp671_197 #x0000000000000000))
(assert (= temp671_198 temp671_197))
(assert (= temp671_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp671_198)))
(assert (= temp671_200 #x0000000000000001))
(assert (= temp671_201 temp671_200))
(assert (= temp671_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp671_201)))
(assert (= temp671_203 #x0000000000000002))
(assert (= temp671_204 temp671_203))
(assert (= temp671_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp671_204)))
(assert (= temp671_206 #x0000000000000003))
(assert (= temp671_207 temp671_206))
(assert (= temp671_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp671_207)))
(assert (= temp671_209 #x0000000000000004))
(assert (= temp671_210 temp671_209))
(assert (= temp671_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp671_210)))
(assert (= temp671_212 #x0000000000000005))
(assert (= temp671_213 temp671_212))
(assert (= temp671_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp671_213)))
(assert (= temp671_215 #x0000000000000000))
(assert (= temp671_216
   (ite (bvslt var1310898 temp671_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp671_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp671_216)))
(assert (= var1322977 temp671_217))
(assert (bvslt (ite (bvslt var1310898 temp671_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp671_218 #x0000000000000000))
(assert (= var1310898 temp671_218))
(assert (= temp671_220 var1310898))
(assert (= temp671_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp671_220)))
(assert (= temp671_219 temp671_221))
(assert (= var1322980
   (ite (= var1322977 temp671_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp671_222 #x0000000000000001))
(assert (= var1322980 temp671_222))
(assert (= temp671_223 #x0000000000000002))
(assert (= var1848169 temp671_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp671_225 #x0000000000000001))
(assert (= var1323065 temp671_225))
(assert (= temp671_226 #x0000000000000001))
(assert (= var3486735 temp671_226))
(assert (= temp671_227 #x0000000000000001))
(assert (= var3814415 temp671_227))
(assert (= temp671_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp671_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_229 #x0000000000000001))
(assert (= var79986 temp671_229))
(assert (= temp671_230 #x0000000000000001))
(assert (= var80116 temp671_230))
(assert (= var4796905 var80116))
(assert (= temp671_231 #x0000000000000000))
(assert (= var4784306 temp671_231))
(assert (= temp671_232 #x0000000000000000))
(assert (= temp671_233
   (ite (bvslt var4784306 temp671_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp671_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp671_233)))
(assert (= var4796924 temp671_234))
(assert (bvslt (ite (bvslt var4784306 temp671_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp671_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp671_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp671_236 #x0000000000000001))
(assert (= var4796925 temp671_236))
(assert (= temp671_237 #x0000000000000000))
(assert (= var4996927 temp671_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp671_238 #x0000000000000002))
(assert (= var5125763 temp671_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_239 #x0000000000000000))
(assert (= var5191324 temp671_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp671_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp671_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp671_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp671_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp671_244 #x0000000000000001))
(assert (= temp671_243 temp671_244))
(model-add temp671_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp671_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp671_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






