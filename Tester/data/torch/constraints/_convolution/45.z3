(declare-fun temp59_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp59_2 () (_ BitVec 64))
(declare-fun temp59_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp59_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp59_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp59_6 () (_ BitVec 64))
(declare-fun temp59_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp59_8 () (_ BitVec 64))
(declare-fun temp59_9 () (_ BitVec 64))
(declare-fun temp59_10 () (_ BitVec 64))
(declare-fun temp59_11 () (_ BitVec 64))
(declare-fun temp59_12 () (_ BitVec 64))
(declare-fun temp59_13 () (_ BitVec 64))
(declare-fun temp59_14 () (_ BitVec 64))
(declare-fun temp59_15 () (_ BitVec 64))
(declare-fun temp59_16 () (_ BitVec 64))
(declare-fun temp59_17 () (_ BitVec 64))
(declare-fun temp59_18 () (_ BitVec 64))
(declare-fun temp59_19 () (_ BitVec 64))
(declare-fun temp59_20 () (_ BitVec 64))
(declare-fun temp59_21 () (_ BitVec 64))
(declare-fun temp59_22 () (_ BitVec 64))
(declare-fun temp59_23 () (_ BitVec 64))
(declare-fun temp59_24 () (_ BitVec 64))
(declare-fun temp59_25 () (_ BitVec 64))
(declare-fun temp59_26 () (_ BitVec 64))
(declare-fun temp59_27 () (_ BitVec 64))
(declare-fun temp59_28 () (_ BitVec 64))
(declare-fun temp59_29 () (_ BitVec 64))
(declare-fun temp59_30 () (_ BitVec 64))
(declare-fun temp59_31 () (_ BitVec 64))
(declare-fun temp59_32 () (_ BitVec 64))
(declare-fun temp59_33 () (_ BitVec 64))
(declare-fun temp59_34 () (_ BitVec 64))
(declare-fun temp59_35 () (_ BitVec 64))
(declare-fun temp59_36 () (_ BitVec 64))
(declare-fun temp59_37 () (_ BitVec 64))
(declare-fun temp59_38 () (_ BitVec 64))
(declare-fun temp59_39 () (_ BitVec 64))
(declare-fun temp59_40 () (_ BitVec 64))
(declare-fun temp59_41 () (_ BitVec 64))
(declare-fun temp59_42 () (_ BitVec 64))
(declare-fun temp59_43 () (_ BitVec 64))
(declare-fun temp59_44 () (_ BitVec 64))
(declare-fun temp59_45 () (_ BitVec 64))
(declare-fun temp59_46 () (_ BitVec 64))
(declare-fun temp59_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp59_48 () (_ BitVec 64))
(declare-fun temp59_49 () (_ BitVec 64))
(declare-fun temp59_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp59_51 () (_ BitVec 64))
(declare-fun temp59_52 () (_ BitVec 64))
(declare-fun temp59_53 () (_ BitVec 64))
(declare-fun temp59_54 () (_ BitVec 64))
(declare-fun temp59_55 () (_ BitVec 64))
(declare-fun temp59_56 () (_ BitVec 64))
(declare-fun temp59_57 () (_ BitVec 64))
(declare-fun temp59_58 () (_ BitVec 64))
(declare-fun temp59_59 () (_ BitVec 64))
(declare-fun temp59_60 () (_ BitVec 64))
(declare-fun temp59_61 () (_ BitVec 64))
(declare-fun temp59_62 () (_ BitVec 64))
(declare-fun temp59_63 () (_ BitVec 64))
(declare-fun temp59_64 () (_ BitVec 64))
(declare-fun temp59_65 () (_ BitVec 64))
(declare-fun temp59_66 () (_ BitVec 64))
(declare-fun temp59_67 () (_ BitVec 64))
(declare-fun temp59_68 () (_ BitVec 64))
(declare-fun temp59_69 () (_ BitVec 64))
(declare-fun temp59_70 () (_ BitVec 64))
(declare-fun temp59_71 () (_ BitVec 64))
(declare-fun temp59_72 () (_ BitVec 64))
(declare-fun temp59_73 () (_ BitVec 64))
(declare-fun temp59_74 () (_ BitVec 64))
(declare-fun temp59_75 () (_ BitVec 64))
(declare-fun temp59_76 () (_ BitVec 64))
(declare-fun temp59_77 () (_ BitVec 64))
(declare-fun temp59_78 () (_ BitVec 64))
(declare-fun temp59_79 () (_ BitVec 64))
(declare-fun temp59_80 () (_ BitVec 64))
(declare-fun temp59_81 () (_ BitVec 64))
(declare-fun temp59_82 () (_ BitVec 64))
(declare-fun temp59_83 () (_ BitVec 64))
(declare-fun temp59_84 () (_ BitVec 64))
(declare-fun temp59_85 () (_ BitVec 64))
(declare-fun temp59_86 () (_ BitVec 64))
(declare-fun temp59_87 () (_ BitVec 64))
(declare-fun temp59_88 () (_ BitVec 64))
(declare-fun temp59_89 () (_ BitVec 64))
(declare-fun temp59_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp59_91 () (_ BitVec 64))
(declare-fun temp59_92 () (_ BitVec 64))
(declare-fun temp59_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp59_94 () (_ BitVec 64))
(declare-fun temp59_95 () (_ BitVec 64))
(declare-fun temp59_96 () (_ BitVec 64))
(declare-fun temp59_97 () (_ BitVec 64))
(declare-fun temp59_98 () (_ BitVec 64))
(declare-fun temp59_99 () (_ BitVec 64))
(declare-fun temp59_100 () (_ BitVec 64))
(declare-fun temp59_101 () (_ BitVec 64))
(declare-fun temp59_102 () (_ BitVec 64))
(declare-fun temp59_103 () (_ BitVec 64))
(declare-fun temp59_104 () (_ BitVec 64))
(declare-fun temp59_105 () (_ BitVec 64))
(declare-fun temp59_106 () (_ BitVec 64))
(declare-fun temp59_107 () (_ BitVec 64))
(declare-fun temp59_108 () (_ BitVec 64))
(declare-fun temp59_109 () (_ BitVec 64))
(declare-fun temp59_110 () (_ BitVec 64))
(declare-fun temp59_111 () (_ BitVec 64))
(declare-fun temp59_112 () (_ BitVec 64))
(declare-fun temp59_113 () (_ BitVec 64))
(declare-fun temp59_114 () (_ BitVec 64))
(declare-fun temp59_115 () (_ BitVec 64))
(declare-fun temp59_116 () (_ BitVec 64))
(declare-fun temp59_117 () (_ BitVec 64))
(declare-fun temp59_118 () (_ BitVec 64))
(declare-fun temp59_119 () (_ BitVec 64))
(declare-fun temp59_120 () (_ BitVec 64))
(declare-fun temp59_121 () (_ BitVec 64))
(declare-fun temp59_122 () (_ BitVec 64))
(declare-fun temp59_123 () (_ BitVec 64))
(declare-fun temp59_124 () (_ BitVec 64))
(declare-fun temp59_125 () (_ BitVec 64))
(declare-fun temp59_126 () (_ BitVec 64))
(declare-fun temp59_127 () (_ BitVec 64))
(declare-fun temp59_128 () (_ BitVec 64))
(declare-fun temp59_129 () (_ BitVec 64))
(declare-fun temp59_130 () (_ BitVec 64))
(declare-fun temp59_131 () (_ BitVec 64))
(declare-fun temp59_132 () (_ BitVec 64))
(declare-fun temp59_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp59_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp59_135 () (_ BitVec 64))
(declare-fun temp59_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp59_137 () (_ BitVec 64))
(declare-fun temp59_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp59_139 () (_ BitVec 64))
(declare-fun temp59_140 () (_ BitVec 64))
(declare-fun temp59_141 () (_ BitVec 64))
(declare-fun temp59_142 () (_ BitVec 64))
(declare-fun temp59_143 () (_ BitVec 64))
(declare-fun temp59_144 () (_ BitVec 64))
(declare-fun temp59_145 () (_ BitVec 64))
(declare-fun temp59_146 () (_ BitVec 64))
(declare-fun temp59_147 () (_ BitVec 64))
(declare-fun temp59_148 () (_ BitVec 64))
(declare-fun temp59_149 () (_ BitVec 64))
(declare-fun temp59_150 () (_ BitVec 64))
(declare-fun temp59_151 () (_ BitVec 64))
(declare-fun temp59_152 () (_ BitVec 64))
(declare-fun temp59_153 () (_ BitVec 64))
(declare-fun temp59_154 () (_ BitVec 64))
(declare-fun temp59_156 () (_ BitVec 64))
(declare-fun temp59_157 () (_ BitVec 64))
(declare-fun temp59_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp59_158 () (_ BitVec 64))
(declare-fun temp59_159 () (_ BitVec 64))
(declare-fun temp59_161 () (_ BitVec 64))
(declare-fun temp59_162 () (_ BitVec 64))
(declare-fun temp59_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp59_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp59_164 () (_ BitVec 64))
(declare-fun temp59_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp59_166 () (_ BitVec 64))
(declare-fun temp59_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp59_168 () (_ BitVec 64))
(declare-fun temp59_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp59_170 () (_ BitVec 64))
(declare-fun temp59_171 () (_ BitVec 64))
(declare-fun temp59_172 () (_ BitVec 64))
(declare-fun temp59_173 () (_ BitVec 64))
(declare-fun temp59_174 () (_ BitVec 64))
(declare-fun temp59_175 () (_ BitVec 64))
(declare-fun temp59_176 () (_ BitVec 64))
(declare-fun temp59_177 () (_ BitVec 64))
(declare-fun temp59_178 () (_ BitVec 64))
(declare-fun temp59_179 () (_ BitVec 64))
(declare-fun temp59_180 () (_ BitVec 64))
(declare-fun temp59_181 () (_ BitVec 64))
(declare-fun temp59_182 () (_ BitVec 64))
(declare-fun temp59_183 () (_ BitVec 64))
(declare-fun temp59_184 () (_ BitVec 64))
(declare-fun temp59_185 () (_ BitVec 64))
(declare-fun temp59_186 () (_ BitVec 64))
(declare-fun temp59_187 () (_ BitVec 64))
(declare-fun temp59_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp59_189 () (_ BitVec 64))
(declare-fun temp59_191 () (_ BitVec 64))
(declare-fun temp59_192 () (_ BitVec 64))
(declare-fun temp59_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp59_193 () (_ BitVec 64))
(declare-fun temp59_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp59_195 () (_ BitVec 64))
(declare-fun temp59_196 () (_ BitVec 64))
(declare-fun temp59_197 () (_ BitVec 64))
(declare-fun temp59_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp59_199 () (_ BitVec 64))
(declare-fun temp59_200 () (_ BitVec 64))
(declare-fun temp59_201 () (_ BitVec 64))
(declare-fun temp59_202 () (_ BitVec 64))
(declare-fun temp59_203 () (_ BitVec 64))
(declare-fun temp59_204 () (_ BitVec 64))
(declare-fun temp59_205 () (_ BitVec 64))
(declare-fun temp59_206 () (_ BitVec 64))
(declare-fun temp59_207 () (_ BitVec 64))
(declare-fun temp59_208 () (_ BitVec 64))
(declare-fun temp59_209 () (_ BitVec 64))
(declare-fun temp59_210 () (_ BitVec 64))
(declare-fun temp59_211 () (_ BitVec 64))
(declare-fun temp59_212 () (_ BitVec 64))
(declare-fun temp59_213 () (_ BitVec 64))
(declare-fun temp59_214 () (_ BitVec 64))
(declare-fun temp59_215 () (_ BitVec 64))
(declare-fun temp59_216 () (_ BitVec 64))
(declare-fun temp59_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp59_218 () (_ BitVec 64))
(declare-fun temp59_220 () (_ BitVec 64))
(declare-fun temp59_221 () (_ BitVec 64))
(declare-fun temp59_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp59_222 () (_ BitVec 64))
(declare-fun temp59_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp59_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp59_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp59_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp59_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp59_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp59_229 () (_ BitVec 64))
(declare-fun temp59_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp59_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp59_232 () (_ BitVec 64))
(declare-fun temp59_233 () (_ BitVec 64))
(declare-fun temp59_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp59_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp59_236 () (_ BitVec 64))
(declare-fun temp59_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp59_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp59_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp59_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp59_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp59_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp59_243 () (_ BitVec 64))
(assert (= temp59_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp59_1)))
(assert (= temp59_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp59_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_3 #x0000000000000000))
(assert (= var79869 temp59_3))
(assert (= temp59_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp59_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_5 #x0000000000000000))
(assert (= var79914 temp59_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp59_6 #x0000000000000000))
(assert (= temp59_7 temp59_6))
(assert (= temp59_8 (select ARGNAME_padding_NAMEEND_VAL temp59_7)))
(assert (= temp59_9 #x0000000000000001))
(assert (= temp59_10 temp59_9))
(assert (= temp59_11 (select ARGNAME_padding_NAMEEND_VAL temp59_10)))
(assert (= temp59_12 #x0000000000000002))
(assert (= temp59_13 temp59_12))
(assert (= temp59_14 (select ARGNAME_padding_NAMEEND_VAL temp59_13)))
(assert (= temp59_15 #x0000000000000003))
(assert (= temp59_16 temp59_15))
(assert (= temp59_17 (select ARGNAME_padding_NAMEEND_VAL temp59_16)))
(assert (= temp59_18 #x0000000000000004))
(assert (= temp59_19 temp59_18))
(assert (= temp59_20 (select ARGNAME_padding_NAMEEND_VAL temp59_19)))
(assert (= temp59_21 #x0000000000000005))
(assert (= temp59_22 temp59_21))
(assert (= temp59_23 (select ARGNAME_padding_NAMEEND_VAL temp59_22)))
(assert (= temp59_24 #x0000000000000000))
(assert (= temp59_25 #x0000000000000000))
(assert (= temp59_26 temp59_25))
(assert (= temp59_27 (select ARGNAME_padding_NAMEEND_VAL temp59_26)))
(assert (= temp59_28 #x0000000000000000))
(assert (= temp59_29 #x0000000000000001))
(assert (= temp59_30 temp59_29))
(assert (= temp59_31 (select ARGNAME_padding_NAMEEND_VAL temp59_30)))
(assert (= temp59_32 #x0000000000000000))
(assert (= temp59_33 #x0000000000000002))
(assert (= temp59_34 temp59_33))
(assert (= temp59_35 (select ARGNAME_padding_NAMEEND_VAL temp59_34)))
(assert (= temp59_36 #x0000000000000000))
(assert (= temp59_37 #x0000000000000003))
(assert (= temp59_38 temp59_37))
(assert (= temp59_39 (select ARGNAME_padding_NAMEEND_VAL temp59_38)))
(assert (= temp59_40 #x0000000000000000))
(assert (= temp59_41 #x0000000000000004))
(assert (= temp59_42 temp59_41))
(assert (= temp59_43 (select ARGNAME_padding_NAMEEND_VAL temp59_42)))
(assert (= temp59_44 #x0000000000000000))
(assert (= temp59_45 #x0000000000000005))
(assert (= temp59_46 temp59_45))
(assert (= temp59_47 (select ARGNAME_padding_NAMEEND_VAL temp59_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp59_27 temp59_24)
             (bvslt temp59_31 temp59_28)
             (bvslt temp59_35 temp59_32)
             (bvslt temp59_39 temp59_36)
             (bvslt temp59_43 temp59_40)
             (bvslt temp59_47 temp59_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_48 #x0000000000000000))
(assert (= var1322786 temp59_48))
(assert (= temp59_49 #x0000000000000000))
(assert (= temp59_50 temp59_49))
(assert (= temp59_51 (select ARGNAME_output_padding_NAMEEND_VAL temp59_50)))
(assert (= temp59_52 #x0000000000000001))
(assert (= temp59_53 temp59_52))
(assert (= temp59_54 (select ARGNAME_output_padding_NAMEEND_VAL temp59_53)))
(assert (= temp59_55 #x0000000000000002))
(assert (= temp59_56 temp59_55))
(assert (= temp59_57 (select ARGNAME_output_padding_NAMEEND_VAL temp59_56)))
(assert (= temp59_58 #x0000000000000003))
(assert (= temp59_59 temp59_58))
(assert (= temp59_60 (select ARGNAME_output_padding_NAMEEND_VAL temp59_59)))
(assert (= temp59_61 #x0000000000000004))
(assert (= temp59_62 temp59_61))
(assert (= temp59_63 (select ARGNAME_output_padding_NAMEEND_VAL temp59_62)))
(assert (= temp59_64 #x0000000000000005))
(assert (= temp59_65 temp59_64))
(assert (= temp59_66 (select ARGNAME_output_padding_NAMEEND_VAL temp59_65)))
(assert (= temp59_67 #x0000000000000000))
(assert (= temp59_68 #x0000000000000000))
(assert (= temp59_69 temp59_68))
(assert (= temp59_70 (select ARGNAME_output_padding_NAMEEND_VAL temp59_69)))
(assert (= temp59_71 #x0000000000000000))
(assert (= temp59_72 #x0000000000000001))
(assert (= temp59_73 temp59_72))
(assert (= temp59_74 (select ARGNAME_output_padding_NAMEEND_VAL temp59_73)))
(assert (= temp59_75 #x0000000000000000))
(assert (= temp59_76 #x0000000000000002))
(assert (= temp59_77 temp59_76))
(assert (= temp59_78 (select ARGNAME_output_padding_NAMEEND_VAL temp59_77)))
(assert (= temp59_79 #x0000000000000000))
(assert (= temp59_80 #x0000000000000003))
(assert (= temp59_81 temp59_80))
(assert (= temp59_82 (select ARGNAME_output_padding_NAMEEND_VAL temp59_81)))
(assert (= temp59_83 #x0000000000000000))
(assert (= temp59_84 #x0000000000000004))
(assert (= temp59_85 temp59_84))
(assert (= temp59_86 (select ARGNAME_output_padding_NAMEEND_VAL temp59_85)))
(assert (= temp59_87 #x0000000000000000))
(assert (= temp59_88 #x0000000000000005))
(assert (= temp59_89 temp59_88))
(assert (= temp59_90 (select ARGNAME_output_padding_NAMEEND_VAL temp59_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp59_70 temp59_67)
             (bvslt temp59_74 temp59_71)
             (bvslt temp59_78 temp59_75)
             (bvslt temp59_82 temp59_79)
             (bvslt temp59_86 temp59_83)
             (bvslt temp59_90 temp59_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_91 #x0000000000000000))
(assert (= var1322797 temp59_91))
(assert (= temp59_92 #x0000000000000000))
(assert (= temp59_93 temp59_92))
(assert (= temp59_94 (select ARGNAME_stride_NAMEEND_VAL temp59_93)))
(assert (= temp59_95 #x0000000000000001))
(assert (= temp59_96 temp59_95))
(assert (= temp59_97 (select ARGNAME_stride_NAMEEND_VAL temp59_96)))
(assert (= temp59_98 #x0000000000000002))
(assert (= temp59_99 temp59_98))
(assert (= temp59_100 (select ARGNAME_stride_NAMEEND_VAL temp59_99)))
(assert (= temp59_101 #x0000000000000003))
(assert (= temp59_102 temp59_101))
(assert (= temp59_103 (select ARGNAME_stride_NAMEEND_VAL temp59_102)))
(assert (= temp59_104 #x0000000000000004))
(assert (= temp59_105 temp59_104))
(assert (= temp59_106 (select ARGNAME_stride_NAMEEND_VAL temp59_105)))
(assert (= temp59_107 #x0000000000000005))
(assert (= temp59_108 temp59_107))
(assert (= temp59_109 (select ARGNAME_stride_NAMEEND_VAL temp59_108)))
(assert (= temp59_110 #x0000000000000000))
(assert (= temp59_111 #x0000000000000000))
(assert (= temp59_112 temp59_111))
(assert (= temp59_113 (select ARGNAME_stride_NAMEEND_VAL temp59_112)))
(assert (= temp59_114 #x0000000000000000))
(assert (= temp59_115 #x0000000000000001))
(assert (= temp59_116 temp59_115))
(assert (= temp59_117 (select ARGNAME_stride_NAMEEND_VAL temp59_116)))
(assert (= temp59_118 #x0000000000000000))
(assert (= temp59_119 #x0000000000000002))
(assert (= temp59_120 temp59_119))
(assert (= temp59_121 (select ARGNAME_stride_NAMEEND_VAL temp59_120)))
(assert (= temp59_122 #x0000000000000000))
(assert (= temp59_123 #x0000000000000003))
(assert (= temp59_124 temp59_123))
(assert (= temp59_125 (select ARGNAME_stride_NAMEEND_VAL temp59_124)))
(assert (= temp59_126 #x0000000000000000))
(assert (= temp59_127 #x0000000000000004))
(assert (= temp59_128 temp59_127))
(assert (= temp59_129 (select ARGNAME_stride_NAMEEND_VAL temp59_128)))
(assert (= temp59_130 #x0000000000000000))
(assert (= temp59_131 #x0000000000000005))
(assert (= temp59_132 temp59_131))
(assert (= temp59_133 (select ARGNAME_stride_NAMEEND_VAL temp59_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp59_113 temp59_110)
             (bvsle temp59_117 temp59_114)
             (bvsle temp59_121 temp59_118)
             (bvsle temp59_125 temp59_122)
             (bvsle temp59_129 temp59_126)
             (bvsle temp59_133 temp59_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_134 #x0000000000000000))
(assert (= var1322807 temp59_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_135 #x0000000000000001))
(assert (= var1322819 temp59_135))
(assert (= temp59_136 #x0000000000000000))
(assert (= var1310898 temp59_136))
(assert (= temp59_137 #x0000000000000000))
(assert (= temp59_138 temp59_137))
(assert (= temp59_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_138)))
(assert (= temp59_140 #x0000000000000001))
(assert (= temp59_141 temp59_140))
(assert (= temp59_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_141)))
(assert (= temp59_143 #x0000000000000002))
(assert (= temp59_144 temp59_143))
(assert (= temp59_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_144)))
(assert (= temp59_146 #x0000000000000003))
(assert (= temp59_147 temp59_146))
(assert (= temp59_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_147)))
(assert (= temp59_149 #x0000000000000004))
(assert (= temp59_150 temp59_149))
(assert (= temp59_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_150)))
(assert (= temp59_152 #x0000000000000005))
(assert (= temp59_153 temp59_152))
(assert (= temp59_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_153)))
(assert (= temp59_156 var1310898))
(assert (= temp59_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_156)))
(assert (= temp59_155 temp59_157))
(assert (= var1322852
   (ite (bvslt temp59_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_158 #x0000000000000000))
(assert (= var1322852 temp59_158))
(assert (= temp59_159 #x0000000000000000))
(assert (= var1310898 temp59_159))
(assert (= temp59_161 var1310898))
(assert (= temp59_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_161)))
(assert (= temp59_160 temp59_162))
(assert (= var1322874 (bvsmod temp59_160 ARGNAME_groups_NAMEEND)))
(assert (= temp59_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp59_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp59_164 #x0000000000000001))
(assert (= var1322875 temp59_164))
(assert (= temp59_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp59_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_166 #x0000000000000001))
(assert (= var1322895 temp59_166))
(assert (= temp59_167 #x0000000000000001))
(assert (= var1311786 temp59_167))
(assert (= temp59_168 #x0000000000000000))
(assert (= temp59_169 temp59_168))
(assert (= temp59_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp59_169)))
(assert (= temp59_171 #x0000000000000001))
(assert (= temp59_172 temp59_171))
(assert (= temp59_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp59_172)))
(assert (= temp59_174 #x0000000000000002))
(assert (= temp59_175 temp59_174))
(assert (= temp59_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp59_175)))
(assert (= temp59_177 #x0000000000000003))
(assert (= temp59_178 temp59_177))
(assert (= temp59_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp59_178)))
(assert (= temp59_180 #x0000000000000004))
(assert (= temp59_181 temp59_180))
(assert (= temp59_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp59_181)))
(assert (= temp59_183 #x0000000000000005))
(assert (= temp59_184 temp59_183))
(assert (= temp59_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp59_184)))
(assert (= temp59_186 #x0000000000000000))
(assert (= temp59_187
   (ite (bvslt var1311786 temp59_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp59_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp59_187)))
(assert (= var1322903 temp59_188))
(assert (bvslt (ite (bvslt var1311786 temp59_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp59_189 #x0000000000000001))
(assert (= var1311786 temp59_189))
(assert (= temp59_191 var1311786))
(assert (= temp59_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_191)))
(assert (= temp59_190 temp59_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp59_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp59_193 #x0000000000000001))
(assert (= var1322908 temp59_193))
(assert (= temp59_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp59_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_195 #x0000000000000001))
(assert (= var1322975 temp59_195))
(assert (= temp59_196 #x0000000000000000))
(assert (= var1310898 temp59_196))
(assert (= temp59_197 #x0000000000000000))
(assert (= temp59_198 temp59_197))
(assert (= temp59_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp59_198)))
(assert (= temp59_200 #x0000000000000001))
(assert (= temp59_201 temp59_200))
(assert (= temp59_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp59_201)))
(assert (= temp59_203 #x0000000000000002))
(assert (= temp59_204 temp59_203))
(assert (= temp59_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp59_204)))
(assert (= temp59_206 #x0000000000000003))
(assert (= temp59_207 temp59_206))
(assert (= temp59_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp59_207)))
(assert (= temp59_209 #x0000000000000004))
(assert (= temp59_210 temp59_209))
(assert (= temp59_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp59_210)))
(assert (= temp59_212 #x0000000000000005))
(assert (= temp59_213 temp59_212))
(assert (= temp59_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp59_213)))
(assert (= temp59_215 #x0000000000000000))
(assert (= temp59_216
   (ite (bvslt var1310898 temp59_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp59_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp59_216)))
(assert (= var1322977 temp59_217))
(assert (bvslt (ite (bvslt var1310898 temp59_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp59_218 #x0000000000000000))
(assert (= var1310898 temp59_218))
(assert (= temp59_220 var1310898))
(assert (= temp59_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_220)))
(assert (= temp59_219 temp59_221))
(assert (= var1322980
   (ite (= var1322977 temp59_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp59_222 #x0000000000000001))
(assert (= var1322980 temp59_222))
(assert (= temp59_223 #x0000000000000002))
(assert (= var1848169 temp59_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp59_225 #x0000000000000001))
(assert (= var1323065 temp59_225))
(assert (= temp59_226 #x0000000000000001))
(assert (= var3486735 temp59_226))
(assert (= temp59_227 #x0000000000000001))
(assert (= var3814415 temp59_227))
(assert (= temp59_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp59_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_229 #x0000000000000001))
(assert (= var79986 temp59_229))
(assert (= temp59_230 #x0000000000000001))
(assert (= var80116 temp59_230))
(assert (= var4796905 var80116))
(assert (= temp59_231 #x0000000000000000))
(assert (= var4784306 temp59_231))
(assert (= temp59_232 #x0000000000000000))
(assert (= temp59_233
   (ite (bvslt var4784306 temp59_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp59_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp59_233)))
(assert (= var4796924 temp59_234))
(assert (bvslt (ite (bvslt var4784306 temp59_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp59_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp59_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp59_236 #x0000000000000001))
(assert (= var4796925 temp59_236))
(assert (= temp59_237 #x0000000000000000))
(assert (= var4996927 temp59_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp59_238 #x0000000000000002))
(assert (= var5125763 temp59_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_239 #x0000000000000000))
(assert (= var5191324 temp59_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp59_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp59_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp59_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp59_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_243 #x0000000000000001))
(assert (= var79986 temp59_243))
(model-add temp59_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp59_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp59_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






