(declare-fun temp164_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp164_2 () (_ BitVec 64))
(declare-fun temp164_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp164_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp164_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp164_6 () (_ BitVec 64))
(declare-fun temp164_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_8 () (_ BitVec 64))
(declare-fun temp164_9 () (_ BitVec 64))
(declare-fun temp164_10 () (_ BitVec 64))
(declare-fun temp164_11 () (_ BitVec 64))
(declare-fun temp164_12 () (_ BitVec 64))
(declare-fun temp164_13 () (_ BitVec 64))
(declare-fun temp164_14 () (_ BitVec 64))
(declare-fun temp164_15 () (_ BitVec 64))
(declare-fun temp164_16 () (_ BitVec 64))
(declare-fun temp164_17 () (_ BitVec 64))
(declare-fun temp164_18 () (_ BitVec 64))
(declare-fun temp164_19 () (_ BitVec 64))
(declare-fun temp164_20 () (_ BitVec 64))
(declare-fun temp164_21 () (_ BitVec 64))
(declare-fun temp164_22 () (_ BitVec 64))
(declare-fun temp164_23 () (_ BitVec 64))
(declare-fun temp164_24 () (_ BitVec 64))
(declare-fun temp164_25 () (_ BitVec 64))
(declare-fun temp164_26 () (_ BitVec 64))
(declare-fun temp164_27 () (_ BitVec 64))
(declare-fun temp164_28 () (_ BitVec 64))
(declare-fun temp164_29 () (_ BitVec 64))
(declare-fun temp164_30 () (_ BitVec 64))
(declare-fun temp164_31 () (_ BitVec 64))
(declare-fun temp164_32 () (_ BitVec 64))
(declare-fun temp164_33 () (_ BitVec 64))
(declare-fun temp164_34 () (_ BitVec 64))
(declare-fun temp164_35 () (_ BitVec 64))
(declare-fun temp164_36 () (_ BitVec 64))
(declare-fun temp164_37 () (_ BitVec 64))
(declare-fun temp164_38 () (_ BitVec 64))
(declare-fun temp164_39 () (_ BitVec 64))
(declare-fun temp164_40 () (_ BitVec 64))
(declare-fun temp164_41 () (_ BitVec 64))
(declare-fun temp164_42 () (_ BitVec 64))
(declare-fun temp164_43 () (_ BitVec 64))
(declare-fun temp164_44 () (_ BitVec 64))
(declare-fun temp164_45 () (_ BitVec 64))
(declare-fun temp164_46 () (_ BitVec 64))
(declare-fun temp164_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp164_48 () (_ BitVec 64))
(declare-fun temp164_49 () (_ BitVec 64))
(declare-fun temp164_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_51 () (_ BitVec 64))
(declare-fun temp164_52 () (_ BitVec 64))
(declare-fun temp164_53 () (_ BitVec 64))
(declare-fun temp164_54 () (_ BitVec 64))
(declare-fun temp164_55 () (_ BitVec 64))
(declare-fun temp164_56 () (_ BitVec 64))
(declare-fun temp164_57 () (_ BitVec 64))
(declare-fun temp164_58 () (_ BitVec 64))
(declare-fun temp164_59 () (_ BitVec 64))
(declare-fun temp164_60 () (_ BitVec 64))
(declare-fun temp164_61 () (_ BitVec 64))
(declare-fun temp164_62 () (_ BitVec 64))
(declare-fun temp164_63 () (_ BitVec 64))
(declare-fun temp164_64 () (_ BitVec 64))
(declare-fun temp164_65 () (_ BitVec 64))
(declare-fun temp164_66 () (_ BitVec 64))
(declare-fun temp164_67 () (_ BitVec 64))
(declare-fun temp164_68 () (_ BitVec 64))
(declare-fun temp164_69 () (_ BitVec 64))
(declare-fun temp164_70 () (_ BitVec 64))
(declare-fun temp164_71 () (_ BitVec 64))
(declare-fun temp164_72 () (_ BitVec 64))
(declare-fun temp164_73 () (_ BitVec 64))
(declare-fun temp164_74 () (_ BitVec 64))
(declare-fun temp164_75 () (_ BitVec 64))
(declare-fun temp164_76 () (_ BitVec 64))
(declare-fun temp164_77 () (_ BitVec 64))
(declare-fun temp164_78 () (_ BitVec 64))
(declare-fun temp164_79 () (_ BitVec 64))
(declare-fun temp164_80 () (_ BitVec 64))
(declare-fun temp164_81 () (_ BitVec 64))
(declare-fun temp164_82 () (_ BitVec 64))
(declare-fun temp164_83 () (_ BitVec 64))
(declare-fun temp164_84 () (_ BitVec 64))
(declare-fun temp164_85 () (_ BitVec 64))
(declare-fun temp164_86 () (_ BitVec 64))
(declare-fun temp164_87 () (_ BitVec 64))
(declare-fun temp164_88 () (_ BitVec 64))
(declare-fun temp164_89 () (_ BitVec 64))
(declare-fun temp164_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp164_91 () (_ BitVec 64))
(declare-fun temp164_92 () (_ BitVec 64))
(declare-fun temp164_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_94 () (_ BitVec 64))
(declare-fun temp164_95 () (_ BitVec 64))
(declare-fun temp164_96 () (_ BitVec 64))
(declare-fun temp164_97 () (_ BitVec 64))
(declare-fun temp164_98 () (_ BitVec 64))
(declare-fun temp164_99 () (_ BitVec 64))
(declare-fun temp164_100 () (_ BitVec 64))
(declare-fun temp164_101 () (_ BitVec 64))
(declare-fun temp164_102 () (_ BitVec 64))
(declare-fun temp164_103 () (_ BitVec 64))
(declare-fun temp164_104 () (_ BitVec 64))
(declare-fun temp164_105 () (_ BitVec 64))
(declare-fun temp164_106 () (_ BitVec 64))
(declare-fun temp164_107 () (_ BitVec 64))
(declare-fun temp164_108 () (_ BitVec 64))
(declare-fun temp164_109 () (_ BitVec 64))
(declare-fun temp164_110 () (_ BitVec 64))
(declare-fun temp164_111 () (_ BitVec 64))
(declare-fun temp164_112 () (_ BitVec 64))
(declare-fun temp164_113 () (_ BitVec 64))
(declare-fun temp164_114 () (_ BitVec 64))
(declare-fun temp164_115 () (_ BitVec 64))
(declare-fun temp164_116 () (_ BitVec 64))
(declare-fun temp164_117 () (_ BitVec 64))
(declare-fun temp164_118 () (_ BitVec 64))
(declare-fun temp164_119 () (_ BitVec 64))
(declare-fun temp164_120 () (_ BitVec 64))
(declare-fun temp164_121 () (_ BitVec 64))
(declare-fun temp164_122 () (_ BitVec 64))
(declare-fun temp164_123 () (_ BitVec 64))
(declare-fun temp164_124 () (_ BitVec 64))
(declare-fun temp164_125 () (_ BitVec 64))
(declare-fun temp164_126 () (_ BitVec 64))
(declare-fun temp164_127 () (_ BitVec 64))
(declare-fun temp164_128 () (_ BitVec 64))
(declare-fun temp164_129 () (_ BitVec 64))
(declare-fun temp164_130 () (_ BitVec 64))
(declare-fun temp164_131 () (_ BitVec 64))
(declare-fun temp164_132 () (_ BitVec 64))
(declare-fun temp164_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp164_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp164_135 () (_ BitVec 64))
(declare-fun temp164_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp164_137 () (_ BitVec 64))
(declare-fun temp164_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_139 () (_ BitVec 64))
(declare-fun temp164_140 () (_ BitVec 64))
(declare-fun temp164_141 () (_ BitVec 64))
(declare-fun temp164_142 () (_ BitVec 64))
(declare-fun temp164_143 () (_ BitVec 64))
(declare-fun temp164_144 () (_ BitVec 64))
(declare-fun temp164_145 () (_ BitVec 64))
(declare-fun temp164_146 () (_ BitVec 64))
(declare-fun temp164_147 () (_ BitVec 64))
(declare-fun temp164_148 () (_ BitVec 64))
(declare-fun temp164_149 () (_ BitVec 64))
(declare-fun temp164_150 () (_ BitVec 64))
(declare-fun temp164_151 () (_ BitVec 64))
(declare-fun temp164_152 () (_ BitVec 64))
(declare-fun temp164_153 () (_ BitVec 64))
(declare-fun temp164_154 () (_ BitVec 64))
(declare-fun temp164_156 () (_ BitVec 64))
(declare-fun temp164_157 () (_ BitVec 64))
(declare-fun temp164_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp164_158 () (_ BitVec 64))
(declare-fun temp164_159 () (_ BitVec 64))
(declare-fun temp164_161 () (_ BitVec 64))
(declare-fun temp164_162 () (_ BitVec 64))
(declare-fun temp164_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp164_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp164_164 () (_ BitVec 64))
(declare-fun temp164_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp164_166 () (_ BitVec 64))
(declare-fun temp164_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp164_168 () (_ BitVec 64))
(declare-fun temp164_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_170 () (_ BitVec 64))
(declare-fun temp164_171 () (_ BitVec 64))
(declare-fun temp164_172 () (_ BitVec 64))
(declare-fun temp164_173 () (_ BitVec 64))
(declare-fun temp164_174 () (_ BitVec 64))
(declare-fun temp164_175 () (_ BitVec 64))
(declare-fun temp164_176 () (_ BitVec 64))
(declare-fun temp164_177 () (_ BitVec 64))
(declare-fun temp164_178 () (_ BitVec 64))
(declare-fun temp164_179 () (_ BitVec 64))
(declare-fun temp164_180 () (_ BitVec 64))
(declare-fun temp164_181 () (_ BitVec 64))
(declare-fun temp164_182 () (_ BitVec 64))
(declare-fun temp164_183 () (_ BitVec 64))
(declare-fun temp164_184 () (_ BitVec 64))
(declare-fun temp164_185 () (_ BitVec 64))
(declare-fun temp164_186 () (_ BitVec 64))
(declare-fun temp164_187 () (_ BitVec 64))
(declare-fun temp164_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp164_189 () (_ BitVec 64))
(declare-fun temp164_191 () (_ BitVec 64))
(declare-fun temp164_192 () (_ BitVec 64))
(declare-fun temp164_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp164_193 () (_ BitVec 64))
(declare-fun temp164_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp164_195 () (_ BitVec 64))
(declare-fun temp164_196 () (_ BitVec 64))
(declare-fun temp164_197 () (_ BitVec 64))
(declare-fun temp164_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_199 () (_ BitVec 64))
(declare-fun temp164_200 () (_ BitVec 64))
(declare-fun temp164_201 () (_ BitVec 64))
(declare-fun temp164_202 () (_ BitVec 64))
(declare-fun temp164_203 () (_ BitVec 64))
(declare-fun temp164_204 () (_ BitVec 64))
(declare-fun temp164_205 () (_ BitVec 64))
(declare-fun temp164_206 () (_ BitVec 64))
(declare-fun temp164_207 () (_ BitVec 64))
(declare-fun temp164_208 () (_ BitVec 64))
(declare-fun temp164_209 () (_ BitVec 64))
(declare-fun temp164_210 () (_ BitVec 64))
(declare-fun temp164_211 () (_ BitVec 64))
(declare-fun temp164_212 () (_ BitVec 64))
(declare-fun temp164_213 () (_ BitVec 64))
(declare-fun temp164_214 () (_ BitVec 64))
(declare-fun temp164_215 () (_ BitVec 64))
(declare-fun temp164_216 () (_ BitVec 64))
(declare-fun temp164_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp164_218 () (_ BitVec 64))
(declare-fun temp164_220 () (_ BitVec 64))
(declare-fun temp164_221 () (_ BitVec 64))
(declare-fun temp164_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp164_222 () (_ BitVec 64))
(declare-fun temp164_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp164_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp164_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp164_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp164_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp164_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp164_229 () (_ BitVec 64))
(declare-fun temp164_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp164_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp164_232 () (_ BitVec 64))
(declare-fun temp164_233 () (_ BitVec 64))
(declare-fun temp164_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp164_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp164_236 () (_ BitVec 64))
(declare-fun temp164_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp164_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp164_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp164_241 () (_ BitVec 64))
(declare-fun temp164_240 () (_ BitVec 64))
(declare-fun temp164_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp164_243 () (_ BitVec 64))
(declare-fun temp164_244 () (_ BitVec 64))
(declare-fun temp164_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp164_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp164_247 () (_ BitVec 64))
(declare-fun temp164_248 () (_ BitVec 64))
(assert (= temp164_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp164_1)))
(assert (= temp164_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp164_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_3 #x0000000000000000))
(assert (= var79869 temp164_3))
(assert (= temp164_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp164_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_5 #x0000000000000000))
(assert (= var79914 temp164_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp164_6 #x0000000000000000))
(assert (= temp164_7 temp164_6))
(assert (= temp164_8 (select ARGNAME_padding_NAMEEND_VAL temp164_7)))
(assert (= temp164_9 #x0000000000000001))
(assert (= temp164_10 temp164_9))
(assert (= temp164_11 (select ARGNAME_padding_NAMEEND_VAL temp164_10)))
(assert (= temp164_12 #x0000000000000002))
(assert (= temp164_13 temp164_12))
(assert (= temp164_14 (select ARGNAME_padding_NAMEEND_VAL temp164_13)))
(assert (= temp164_15 #x0000000000000003))
(assert (= temp164_16 temp164_15))
(assert (= temp164_17 (select ARGNAME_padding_NAMEEND_VAL temp164_16)))
(assert (= temp164_18 #x0000000000000004))
(assert (= temp164_19 temp164_18))
(assert (= temp164_20 (select ARGNAME_padding_NAMEEND_VAL temp164_19)))
(assert (= temp164_21 #x0000000000000005))
(assert (= temp164_22 temp164_21))
(assert (= temp164_23 (select ARGNAME_padding_NAMEEND_VAL temp164_22)))
(assert (= temp164_24 #x0000000000000000))
(assert (= temp164_25 #x0000000000000000))
(assert (= temp164_26 temp164_25))
(assert (= temp164_27 (select ARGNAME_padding_NAMEEND_VAL temp164_26)))
(assert (= temp164_28 #x0000000000000000))
(assert (= temp164_29 #x0000000000000001))
(assert (= temp164_30 temp164_29))
(assert (= temp164_31 (select ARGNAME_padding_NAMEEND_VAL temp164_30)))
(assert (= temp164_32 #x0000000000000000))
(assert (= temp164_33 #x0000000000000002))
(assert (= temp164_34 temp164_33))
(assert (= temp164_35 (select ARGNAME_padding_NAMEEND_VAL temp164_34)))
(assert (= temp164_36 #x0000000000000000))
(assert (= temp164_37 #x0000000000000003))
(assert (= temp164_38 temp164_37))
(assert (= temp164_39 (select ARGNAME_padding_NAMEEND_VAL temp164_38)))
(assert (= temp164_40 #x0000000000000000))
(assert (= temp164_41 #x0000000000000004))
(assert (= temp164_42 temp164_41))
(assert (= temp164_43 (select ARGNAME_padding_NAMEEND_VAL temp164_42)))
(assert (= temp164_44 #x0000000000000000))
(assert (= temp164_45 #x0000000000000005))
(assert (= temp164_46 temp164_45))
(assert (= temp164_47 (select ARGNAME_padding_NAMEEND_VAL temp164_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp164_27 temp164_24)
             (bvslt temp164_31 temp164_28)
             (bvslt temp164_35 temp164_32)
             (bvslt temp164_39 temp164_36)
             (bvslt temp164_43 temp164_40)
             (bvslt temp164_47 temp164_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_48 #x0000000000000000))
(assert (= var1322786 temp164_48))
(assert (= temp164_49 #x0000000000000000))
(assert (= temp164_50 temp164_49))
(assert (= temp164_51 (select ARGNAME_output_padding_NAMEEND_VAL temp164_50)))
(assert (= temp164_52 #x0000000000000001))
(assert (= temp164_53 temp164_52))
(assert (= temp164_54 (select ARGNAME_output_padding_NAMEEND_VAL temp164_53)))
(assert (= temp164_55 #x0000000000000002))
(assert (= temp164_56 temp164_55))
(assert (= temp164_57 (select ARGNAME_output_padding_NAMEEND_VAL temp164_56)))
(assert (= temp164_58 #x0000000000000003))
(assert (= temp164_59 temp164_58))
(assert (= temp164_60 (select ARGNAME_output_padding_NAMEEND_VAL temp164_59)))
(assert (= temp164_61 #x0000000000000004))
(assert (= temp164_62 temp164_61))
(assert (= temp164_63 (select ARGNAME_output_padding_NAMEEND_VAL temp164_62)))
(assert (= temp164_64 #x0000000000000005))
(assert (= temp164_65 temp164_64))
(assert (= temp164_66 (select ARGNAME_output_padding_NAMEEND_VAL temp164_65)))
(assert (= temp164_67 #x0000000000000000))
(assert (= temp164_68 #x0000000000000000))
(assert (= temp164_69 temp164_68))
(assert (= temp164_70 (select ARGNAME_output_padding_NAMEEND_VAL temp164_69)))
(assert (= temp164_71 #x0000000000000000))
(assert (= temp164_72 #x0000000000000001))
(assert (= temp164_73 temp164_72))
(assert (= temp164_74 (select ARGNAME_output_padding_NAMEEND_VAL temp164_73)))
(assert (= temp164_75 #x0000000000000000))
(assert (= temp164_76 #x0000000000000002))
(assert (= temp164_77 temp164_76))
(assert (= temp164_78 (select ARGNAME_output_padding_NAMEEND_VAL temp164_77)))
(assert (= temp164_79 #x0000000000000000))
(assert (= temp164_80 #x0000000000000003))
(assert (= temp164_81 temp164_80))
(assert (= temp164_82 (select ARGNAME_output_padding_NAMEEND_VAL temp164_81)))
(assert (= temp164_83 #x0000000000000000))
(assert (= temp164_84 #x0000000000000004))
(assert (= temp164_85 temp164_84))
(assert (= temp164_86 (select ARGNAME_output_padding_NAMEEND_VAL temp164_85)))
(assert (= temp164_87 #x0000000000000000))
(assert (= temp164_88 #x0000000000000005))
(assert (= temp164_89 temp164_88))
(assert (= temp164_90 (select ARGNAME_output_padding_NAMEEND_VAL temp164_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp164_70 temp164_67)
             (bvslt temp164_74 temp164_71)
             (bvslt temp164_78 temp164_75)
             (bvslt temp164_82 temp164_79)
             (bvslt temp164_86 temp164_83)
             (bvslt temp164_90 temp164_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_91 #x0000000000000000))
(assert (= var1322797 temp164_91))
(assert (= temp164_92 #x0000000000000000))
(assert (= temp164_93 temp164_92))
(assert (= temp164_94 (select ARGNAME_stride_NAMEEND_VAL temp164_93)))
(assert (= temp164_95 #x0000000000000001))
(assert (= temp164_96 temp164_95))
(assert (= temp164_97 (select ARGNAME_stride_NAMEEND_VAL temp164_96)))
(assert (= temp164_98 #x0000000000000002))
(assert (= temp164_99 temp164_98))
(assert (= temp164_100 (select ARGNAME_stride_NAMEEND_VAL temp164_99)))
(assert (= temp164_101 #x0000000000000003))
(assert (= temp164_102 temp164_101))
(assert (= temp164_103 (select ARGNAME_stride_NAMEEND_VAL temp164_102)))
(assert (= temp164_104 #x0000000000000004))
(assert (= temp164_105 temp164_104))
(assert (= temp164_106 (select ARGNAME_stride_NAMEEND_VAL temp164_105)))
(assert (= temp164_107 #x0000000000000005))
(assert (= temp164_108 temp164_107))
(assert (= temp164_109 (select ARGNAME_stride_NAMEEND_VAL temp164_108)))
(assert (= temp164_110 #x0000000000000000))
(assert (= temp164_111 #x0000000000000000))
(assert (= temp164_112 temp164_111))
(assert (= temp164_113 (select ARGNAME_stride_NAMEEND_VAL temp164_112)))
(assert (= temp164_114 #x0000000000000000))
(assert (= temp164_115 #x0000000000000001))
(assert (= temp164_116 temp164_115))
(assert (= temp164_117 (select ARGNAME_stride_NAMEEND_VAL temp164_116)))
(assert (= temp164_118 #x0000000000000000))
(assert (= temp164_119 #x0000000000000002))
(assert (= temp164_120 temp164_119))
(assert (= temp164_121 (select ARGNAME_stride_NAMEEND_VAL temp164_120)))
(assert (= temp164_122 #x0000000000000000))
(assert (= temp164_123 #x0000000000000003))
(assert (= temp164_124 temp164_123))
(assert (= temp164_125 (select ARGNAME_stride_NAMEEND_VAL temp164_124)))
(assert (= temp164_126 #x0000000000000000))
(assert (= temp164_127 #x0000000000000004))
(assert (= temp164_128 temp164_127))
(assert (= temp164_129 (select ARGNAME_stride_NAMEEND_VAL temp164_128)))
(assert (= temp164_130 #x0000000000000000))
(assert (= temp164_131 #x0000000000000005))
(assert (= temp164_132 temp164_131))
(assert (= temp164_133 (select ARGNAME_stride_NAMEEND_VAL temp164_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp164_113 temp164_110)
             (bvsle temp164_117 temp164_114)
             (bvsle temp164_121 temp164_118)
             (bvsle temp164_125 temp164_122)
             (bvsle temp164_129 temp164_126)
             (bvsle temp164_133 temp164_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_134 #x0000000000000000))
(assert (= var1322807 temp164_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_135 #x0000000000000001))
(assert (= var1322819 temp164_135))
(assert (= temp164_136 #x0000000000000000))
(assert (= var1310898 temp164_136))
(assert (= temp164_137 #x0000000000000000))
(assert (= temp164_138 temp164_137))
(assert (= temp164_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_138)))
(assert (= temp164_140 #x0000000000000001))
(assert (= temp164_141 temp164_140))
(assert (= temp164_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_141)))
(assert (= temp164_143 #x0000000000000002))
(assert (= temp164_144 temp164_143))
(assert (= temp164_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_144)))
(assert (= temp164_146 #x0000000000000003))
(assert (= temp164_147 temp164_146))
(assert (= temp164_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_147)))
(assert (= temp164_149 #x0000000000000004))
(assert (= temp164_150 temp164_149))
(assert (= temp164_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_150)))
(assert (= temp164_152 #x0000000000000005))
(assert (= temp164_153 temp164_152))
(assert (= temp164_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_153)))
(assert (= temp164_156 var1310898))
(assert (= temp164_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_156)))
(assert (= temp164_155 temp164_157))
(assert (= var1322852
   (ite (bvslt temp164_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_158 #x0000000000000000))
(assert (= var1322852 temp164_158))
(assert (= temp164_159 #x0000000000000000))
(assert (= var1310898 temp164_159))
(assert (= temp164_161 var1310898))
(assert (= temp164_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_161)))
(assert (= temp164_160 temp164_162))
(assert (= var1322874 (bvsmod temp164_160 ARGNAME_groups_NAMEEND)))
(assert (= temp164_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp164_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_164 #x0000000000000001))
(assert (= var1322875 temp164_164))
(assert (= temp164_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp164_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_166 #x0000000000000001))
(assert (= var1322895 temp164_166))
(assert (= temp164_167 #x0000000000000001))
(assert (= var1311786 temp164_167))
(assert (= temp164_168 #x0000000000000000))
(assert (= temp164_169 temp164_168))
(assert (= temp164_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_169)))
(assert (= temp164_171 #x0000000000000001))
(assert (= temp164_172 temp164_171))
(assert (= temp164_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_172)))
(assert (= temp164_174 #x0000000000000002))
(assert (= temp164_175 temp164_174))
(assert (= temp164_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_175)))
(assert (= temp164_177 #x0000000000000003))
(assert (= temp164_178 temp164_177))
(assert (= temp164_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_178)))
(assert (= temp164_180 #x0000000000000004))
(assert (= temp164_181 temp164_180))
(assert (= temp164_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_181)))
(assert (= temp164_183 #x0000000000000005))
(assert (= temp164_184 temp164_183))
(assert (= temp164_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_184)))
(assert (= temp164_186 #x0000000000000000))
(assert (= temp164_187
   (ite (bvslt var1311786 temp164_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp164_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_187)))
(assert (= var1322903 temp164_188))
(assert (bvslt (ite (bvslt var1311786 temp164_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp164_189 #x0000000000000001))
(assert (= var1311786 temp164_189))
(assert (= temp164_191 var1311786))
(assert (= temp164_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_191)))
(assert (= temp164_190 temp164_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp164_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_193 #x0000000000000001))
(assert (= var1322908 temp164_193))
(assert (= temp164_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp164_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_195 #x0000000000000001))
(assert (= var1322975 temp164_195))
(assert (= temp164_196 #x0000000000000000))
(assert (= var1310898 temp164_196))
(assert (= temp164_197 #x0000000000000000))
(assert (= temp164_198 temp164_197))
(assert (= temp164_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp164_198)))
(assert (= temp164_200 #x0000000000000001))
(assert (= temp164_201 temp164_200))
(assert (= temp164_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp164_201)))
(assert (= temp164_203 #x0000000000000002))
(assert (= temp164_204 temp164_203))
(assert (= temp164_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp164_204)))
(assert (= temp164_206 #x0000000000000003))
(assert (= temp164_207 temp164_206))
(assert (= temp164_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp164_207)))
(assert (= temp164_209 #x0000000000000004))
(assert (= temp164_210 temp164_209))
(assert (= temp164_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp164_210)))
(assert (= temp164_212 #x0000000000000005))
(assert (= temp164_213 temp164_212))
(assert (= temp164_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp164_213)))
(assert (= temp164_215 #x0000000000000000))
(assert (= temp164_216
   (ite (bvslt var1310898 temp164_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp164_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp164_216)))
(assert (= var1322977 temp164_217))
(assert (bvslt (ite (bvslt var1310898 temp164_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp164_218 #x0000000000000000))
(assert (= var1310898 temp164_218))
(assert (= temp164_220 var1310898))
(assert (= temp164_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_220)))
(assert (= temp164_219 temp164_221))
(assert (= var1322980
   (ite (= var1322977 temp164_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_222 #x0000000000000001))
(assert (= var1322980 temp164_222))
(assert (= temp164_223 #x0000000000000002))
(assert (= var1848169 temp164_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp164_225 #x0000000000000001))
(assert (= var1323065 temp164_225))
(assert (= temp164_226 #x0000000000000001))
(assert (= var3486735 temp164_226))
(assert (= temp164_227 #x0000000000000001))
(assert (= var3814415 temp164_227))
(assert (= temp164_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp164_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_229 #x0000000000000001))
(assert (= var79986 temp164_229))
(assert (= temp164_230 #x0000000000000001))
(assert (= var80116 temp164_230))
(assert (= var4796905 var80116))
(assert (= temp164_231 #x0000000000000000))
(assert (= var4784306 temp164_231))
(assert (= temp164_232 #x0000000000000000))
(assert (= temp164_233
   (ite (bvslt var4784306 temp164_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp164_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_233)))
(assert (= var4796924 temp164_234))
(assert (bvslt (ite (bvslt var4784306 temp164_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp164_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp164_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_236 #x0000000000000001))
(assert (= var4796925 temp164_236))
(assert (= temp164_237 #x0000000000000000))
(assert (= var4996927 temp164_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp164_238 #x0000000000000002))
(assert (= var5125763 temp164_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_239 #x0000000000000000))
(assert (= var5191324 temp164_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp164_241 #xffffffffffffffff))
(assert (= temp164_240 temp164_241))
(assert (= temp164_242 #x0000000000000001))
(assert (= var66602 temp164_242))
(assert (= temp164_243 #x0000000000000000))
(assert (= temp164_244
   (ite (bvslt var66602 temp164_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp164_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_244)))
(assert (= var80523 temp164_245))
(assert (bvslt (ite (bvslt var66602 temp164_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp164_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp164_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_247 #x0000000000000000))
(assert (= var80524 temp164_247))
(assert (= temp164_248 #x0000000000000001))
(assert (= var79986 temp164_248))
(model-add temp164_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp164_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp164_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






