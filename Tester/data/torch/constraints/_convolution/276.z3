(declare-fun temp366_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp366_2 () (_ BitVec 64))
(declare-fun temp366_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp366_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp366_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp366_6 () (_ BitVec 64))
(declare-fun temp366_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp366_8 () (_ BitVec 64))
(declare-fun temp366_9 () (_ BitVec 64))
(declare-fun temp366_10 () (_ BitVec 64))
(declare-fun temp366_11 () (_ BitVec 64))
(declare-fun temp366_12 () (_ BitVec 64))
(declare-fun temp366_13 () (_ BitVec 64))
(declare-fun temp366_14 () (_ BitVec 64))
(declare-fun temp366_15 () (_ BitVec 64))
(declare-fun temp366_16 () (_ BitVec 64))
(declare-fun temp366_17 () (_ BitVec 64))
(declare-fun temp366_18 () (_ BitVec 64))
(declare-fun temp366_19 () (_ BitVec 64))
(declare-fun temp366_20 () (_ BitVec 64))
(declare-fun temp366_21 () (_ BitVec 64))
(declare-fun temp366_22 () (_ BitVec 64))
(declare-fun temp366_23 () (_ BitVec 64))
(declare-fun temp366_24 () (_ BitVec 64))
(declare-fun temp366_25 () (_ BitVec 64))
(declare-fun temp366_26 () (_ BitVec 64))
(declare-fun temp366_27 () (_ BitVec 64))
(declare-fun temp366_28 () (_ BitVec 64))
(declare-fun temp366_29 () (_ BitVec 64))
(declare-fun temp366_30 () (_ BitVec 64))
(declare-fun temp366_31 () (_ BitVec 64))
(declare-fun temp366_32 () (_ BitVec 64))
(declare-fun temp366_33 () (_ BitVec 64))
(declare-fun temp366_34 () (_ BitVec 64))
(declare-fun temp366_35 () (_ BitVec 64))
(declare-fun temp366_36 () (_ BitVec 64))
(declare-fun temp366_37 () (_ BitVec 64))
(declare-fun temp366_38 () (_ BitVec 64))
(declare-fun temp366_39 () (_ BitVec 64))
(declare-fun temp366_40 () (_ BitVec 64))
(declare-fun temp366_41 () (_ BitVec 64))
(declare-fun temp366_42 () (_ BitVec 64))
(declare-fun temp366_43 () (_ BitVec 64))
(declare-fun temp366_44 () (_ BitVec 64))
(declare-fun temp366_45 () (_ BitVec 64))
(declare-fun temp366_46 () (_ BitVec 64))
(declare-fun temp366_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp366_48 () (_ BitVec 64))
(declare-fun temp366_49 () (_ BitVec 64))
(declare-fun temp366_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp366_51 () (_ BitVec 64))
(declare-fun temp366_52 () (_ BitVec 64))
(declare-fun temp366_53 () (_ BitVec 64))
(declare-fun temp366_54 () (_ BitVec 64))
(declare-fun temp366_55 () (_ BitVec 64))
(declare-fun temp366_56 () (_ BitVec 64))
(declare-fun temp366_57 () (_ BitVec 64))
(declare-fun temp366_58 () (_ BitVec 64))
(declare-fun temp366_59 () (_ BitVec 64))
(declare-fun temp366_60 () (_ BitVec 64))
(declare-fun temp366_61 () (_ BitVec 64))
(declare-fun temp366_62 () (_ BitVec 64))
(declare-fun temp366_63 () (_ BitVec 64))
(declare-fun temp366_64 () (_ BitVec 64))
(declare-fun temp366_65 () (_ BitVec 64))
(declare-fun temp366_66 () (_ BitVec 64))
(declare-fun temp366_67 () (_ BitVec 64))
(declare-fun temp366_68 () (_ BitVec 64))
(declare-fun temp366_69 () (_ BitVec 64))
(declare-fun temp366_70 () (_ BitVec 64))
(declare-fun temp366_71 () (_ BitVec 64))
(declare-fun temp366_72 () (_ BitVec 64))
(declare-fun temp366_73 () (_ BitVec 64))
(declare-fun temp366_74 () (_ BitVec 64))
(declare-fun temp366_75 () (_ BitVec 64))
(declare-fun temp366_76 () (_ BitVec 64))
(declare-fun temp366_77 () (_ BitVec 64))
(declare-fun temp366_78 () (_ BitVec 64))
(declare-fun temp366_79 () (_ BitVec 64))
(declare-fun temp366_80 () (_ BitVec 64))
(declare-fun temp366_81 () (_ BitVec 64))
(declare-fun temp366_82 () (_ BitVec 64))
(declare-fun temp366_83 () (_ BitVec 64))
(declare-fun temp366_84 () (_ BitVec 64))
(declare-fun temp366_85 () (_ BitVec 64))
(declare-fun temp366_86 () (_ BitVec 64))
(declare-fun temp366_87 () (_ BitVec 64))
(declare-fun temp366_88 () (_ BitVec 64))
(declare-fun temp366_89 () (_ BitVec 64))
(declare-fun temp366_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp366_91 () (_ BitVec 64))
(declare-fun temp366_92 () (_ BitVec 64))
(declare-fun temp366_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp366_94 () (_ BitVec 64))
(declare-fun temp366_95 () (_ BitVec 64))
(declare-fun temp366_96 () (_ BitVec 64))
(declare-fun temp366_97 () (_ BitVec 64))
(declare-fun temp366_98 () (_ BitVec 64))
(declare-fun temp366_99 () (_ BitVec 64))
(declare-fun temp366_100 () (_ BitVec 64))
(declare-fun temp366_101 () (_ BitVec 64))
(declare-fun temp366_102 () (_ BitVec 64))
(declare-fun temp366_103 () (_ BitVec 64))
(declare-fun temp366_104 () (_ BitVec 64))
(declare-fun temp366_105 () (_ BitVec 64))
(declare-fun temp366_106 () (_ BitVec 64))
(declare-fun temp366_107 () (_ BitVec 64))
(declare-fun temp366_108 () (_ BitVec 64))
(declare-fun temp366_109 () (_ BitVec 64))
(declare-fun temp366_110 () (_ BitVec 64))
(declare-fun temp366_111 () (_ BitVec 64))
(declare-fun temp366_112 () (_ BitVec 64))
(declare-fun temp366_113 () (_ BitVec 64))
(declare-fun temp366_114 () (_ BitVec 64))
(declare-fun temp366_115 () (_ BitVec 64))
(declare-fun temp366_116 () (_ BitVec 64))
(declare-fun temp366_117 () (_ BitVec 64))
(declare-fun temp366_118 () (_ BitVec 64))
(declare-fun temp366_119 () (_ BitVec 64))
(declare-fun temp366_120 () (_ BitVec 64))
(declare-fun temp366_121 () (_ BitVec 64))
(declare-fun temp366_122 () (_ BitVec 64))
(declare-fun temp366_123 () (_ BitVec 64))
(declare-fun temp366_124 () (_ BitVec 64))
(declare-fun temp366_125 () (_ BitVec 64))
(declare-fun temp366_126 () (_ BitVec 64))
(declare-fun temp366_127 () (_ BitVec 64))
(declare-fun temp366_128 () (_ BitVec 64))
(declare-fun temp366_129 () (_ BitVec 64))
(declare-fun temp366_130 () (_ BitVec 64))
(declare-fun temp366_131 () (_ BitVec 64))
(declare-fun temp366_132 () (_ BitVec 64))
(declare-fun temp366_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp366_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp366_135 () (_ BitVec 64))
(declare-fun temp366_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp366_137 () (_ BitVec 64))
(declare-fun temp366_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp366_139 () (_ BitVec 64))
(declare-fun temp366_140 () (_ BitVec 64))
(declare-fun temp366_141 () (_ BitVec 64))
(declare-fun temp366_142 () (_ BitVec 64))
(declare-fun temp366_143 () (_ BitVec 64))
(declare-fun temp366_144 () (_ BitVec 64))
(declare-fun temp366_145 () (_ BitVec 64))
(declare-fun temp366_146 () (_ BitVec 64))
(declare-fun temp366_147 () (_ BitVec 64))
(declare-fun temp366_148 () (_ BitVec 64))
(declare-fun temp366_149 () (_ BitVec 64))
(declare-fun temp366_150 () (_ BitVec 64))
(declare-fun temp366_151 () (_ BitVec 64))
(declare-fun temp366_152 () (_ BitVec 64))
(declare-fun temp366_153 () (_ BitVec 64))
(declare-fun temp366_154 () (_ BitVec 64))
(declare-fun temp366_156 () (_ BitVec 64))
(declare-fun temp366_157 () (_ BitVec 64))
(declare-fun temp366_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp366_158 () (_ BitVec 64))
(declare-fun temp366_159 () (_ BitVec 64))
(declare-fun temp366_161 () (_ BitVec 64))
(declare-fun temp366_162 () (_ BitVec 64))
(declare-fun temp366_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp366_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp366_164 () (_ BitVec 64))
(declare-fun temp366_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp366_166 () (_ BitVec 64))
(declare-fun temp366_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp366_168 () (_ BitVec 64))
(declare-fun temp366_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp366_170 () (_ BitVec 64))
(declare-fun temp366_171 () (_ BitVec 64))
(declare-fun temp366_172 () (_ BitVec 64))
(declare-fun temp366_173 () (_ BitVec 64))
(declare-fun temp366_174 () (_ BitVec 64))
(declare-fun temp366_175 () (_ BitVec 64))
(declare-fun temp366_176 () (_ BitVec 64))
(declare-fun temp366_177 () (_ BitVec 64))
(declare-fun temp366_178 () (_ BitVec 64))
(declare-fun temp366_179 () (_ BitVec 64))
(declare-fun temp366_180 () (_ BitVec 64))
(declare-fun temp366_181 () (_ BitVec 64))
(declare-fun temp366_182 () (_ BitVec 64))
(declare-fun temp366_183 () (_ BitVec 64))
(declare-fun temp366_184 () (_ BitVec 64))
(declare-fun temp366_185 () (_ BitVec 64))
(declare-fun temp366_186 () (_ BitVec 64))
(declare-fun temp366_187 () (_ BitVec 64))
(declare-fun temp366_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp366_189 () (_ BitVec 64))
(declare-fun temp366_191 () (_ BitVec 64))
(declare-fun temp366_192 () (_ BitVec 64))
(declare-fun temp366_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp366_193 () (_ BitVec 64))
(declare-fun temp366_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp366_195 () (_ BitVec 64))
(declare-fun temp366_196 () (_ BitVec 64))
(declare-fun temp366_197 () (_ BitVec 64))
(declare-fun temp366_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp366_199 () (_ BitVec 64))
(declare-fun temp366_200 () (_ BitVec 64))
(declare-fun temp366_201 () (_ BitVec 64))
(declare-fun temp366_202 () (_ BitVec 64))
(declare-fun temp366_203 () (_ BitVec 64))
(declare-fun temp366_204 () (_ BitVec 64))
(declare-fun temp366_205 () (_ BitVec 64))
(declare-fun temp366_206 () (_ BitVec 64))
(declare-fun temp366_207 () (_ BitVec 64))
(declare-fun temp366_208 () (_ BitVec 64))
(declare-fun temp366_209 () (_ BitVec 64))
(declare-fun temp366_210 () (_ BitVec 64))
(declare-fun temp366_211 () (_ BitVec 64))
(declare-fun temp366_212 () (_ BitVec 64))
(declare-fun temp366_213 () (_ BitVec 64))
(declare-fun temp366_214 () (_ BitVec 64))
(declare-fun temp366_215 () (_ BitVec 64))
(declare-fun temp366_216 () (_ BitVec 64))
(declare-fun temp366_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp366_218 () (_ BitVec 64))
(declare-fun temp366_220 () (_ BitVec 64))
(declare-fun temp366_221 () (_ BitVec 64))
(declare-fun temp366_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp366_222 () (_ BitVec 64))
(declare-fun temp366_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp366_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp366_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp366_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp366_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp366_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp366_229 () (_ BitVec 64))
(declare-fun temp366_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp366_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp366_232 () (_ BitVec 64))
(declare-fun temp366_233 () (_ BitVec 64))
(declare-fun temp366_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp366_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp366_236 () (_ BitVec 64))
(declare-fun temp366_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp366_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp366_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun var6762896 () (_ BitVec 64))
(declare-fun temp366_240 () (_ BitVec 64))
(declare-fun var7090576 () (_ BitVec 64))
(declare-fun temp366_241 () (_ BitVec 64))
(assert (= temp366_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp366_1)))
(assert (= temp366_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp366_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_3 #x0000000000000000))
(assert (= var79869 temp366_3))
(assert (= temp366_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp366_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_5 #x0000000000000000))
(assert (= var79914 temp366_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp366_6 #x0000000000000000))
(assert (= temp366_7 temp366_6))
(assert (= temp366_8 (select ARGNAME_padding_NAMEEND_VAL temp366_7)))
(assert (= temp366_9 #x0000000000000001))
(assert (= temp366_10 temp366_9))
(assert (= temp366_11 (select ARGNAME_padding_NAMEEND_VAL temp366_10)))
(assert (= temp366_12 #x0000000000000002))
(assert (= temp366_13 temp366_12))
(assert (= temp366_14 (select ARGNAME_padding_NAMEEND_VAL temp366_13)))
(assert (= temp366_15 #x0000000000000003))
(assert (= temp366_16 temp366_15))
(assert (= temp366_17 (select ARGNAME_padding_NAMEEND_VAL temp366_16)))
(assert (= temp366_18 #x0000000000000004))
(assert (= temp366_19 temp366_18))
(assert (= temp366_20 (select ARGNAME_padding_NAMEEND_VAL temp366_19)))
(assert (= temp366_21 #x0000000000000005))
(assert (= temp366_22 temp366_21))
(assert (= temp366_23 (select ARGNAME_padding_NAMEEND_VAL temp366_22)))
(assert (= temp366_24 #x0000000000000000))
(assert (= temp366_25 #x0000000000000000))
(assert (= temp366_26 temp366_25))
(assert (= temp366_27 (select ARGNAME_padding_NAMEEND_VAL temp366_26)))
(assert (= temp366_28 #x0000000000000000))
(assert (= temp366_29 #x0000000000000001))
(assert (= temp366_30 temp366_29))
(assert (= temp366_31 (select ARGNAME_padding_NAMEEND_VAL temp366_30)))
(assert (= temp366_32 #x0000000000000000))
(assert (= temp366_33 #x0000000000000002))
(assert (= temp366_34 temp366_33))
(assert (= temp366_35 (select ARGNAME_padding_NAMEEND_VAL temp366_34)))
(assert (= temp366_36 #x0000000000000000))
(assert (= temp366_37 #x0000000000000003))
(assert (= temp366_38 temp366_37))
(assert (= temp366_39 (select ARGNAME_padding_NAMEEND_VAL temp366_38)))
(assert (= temp366_40 #x0000000000000000))
(assert (= temp366_41 #x0000000000000004))
(assert (= temp366_42 temp366_41))
(assert (= temp366_43 (select ARGNAME_padding_NAMEEND_VAL temp366_42)))
(assert (= temp366_44 #x0000000000000000))
(assert (= temp366_45 #x0000000000000005))
(assert (= temp366_46 temp366_45))
(assert (= temp366_47 (select ARGNAME_padding_NAMEEND_VAL temp366_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp366_27 temp366_24)
             (bvslt temp366_31 temp366_28)
             (bvslt temp366_35 temp366_32)
             (bvslt temp366_39 temp366_36)
             (bvslt temp366_43 temp366_40)
             (bvslt temp366_47 temp366_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_48 #x0000000000000000))
(assert (= var1322786 temp366_48))
(assert (= temp366_49 #x0000000000000000))
(assert (= temp366_50 temp366_49))
(assert (= temp366_51 (select ARGNAME_output_padding_NAMEEND_VAL temp366_50)))
(assert (= temp366_52 #x0000000000000001))
(assert (= temp366_53 temp366_52))
(assert (= temp366_54 (select ARGNAME_output_padding_NAMEEND_VAL temp366_53)))
(assert (= temp366_55 #x0000000000000002))
(assert (= temp366_56 temp366_55))
(assert (= temp366_57 (select ARGNAME_output_padding_NAMEEND_VAL temp366_56)))
(assert (= temp366_58 #x0000000000000003))
(assert (= temp366_59 temp366_58))
(assert (= temp366_60 (select ARGNAME_output_padding_NAMEEND_VAL temp366_59)))
(assert (= temp366_61 #x0000000000000004))
(assert (= temp366_62 temp366_61))
(assert (= temp366_63 (select ARGNAME_output_padding_NAMEEND_VAL temp366_62)))
(assert (= temp366_64 #x0000000000000005))
(assert (= temp366_65 temp366_64))
(assert (= temp366_66 (select ARGNAME_output_padding_NAMEEND_VAL temp366_65)))
(assert (= temp366_67 #x0000000000000000))
(assert (= temp366_68 #x0000000000000000))
(assert (= temp366_69 temp366_68))
(assert (= temp366_70 (select ARGNAME_output_padding_NAMEEND_VAL temp366_69)))
(assert (= temp366_71 #x0000000000000000))
(assert (= temp366_72 #x0000000000000001))
(assert (= temp366_73 temp366_72))
(assert (= temp366_74 (select ARGNAME_output_padding_NAMEEND_VAL temp366_73)))
(assert (= temp366_75 #x0000000000000000))
(assert (= temp366_76 #x0000000000000002))
(assert (= temp366_77 temp366_76))
(assert (= temp366_78 (select ARGNAME_output_padding_NAMEEND_VAL temp366_77)))
(assert (= temp366_79 #x0000000000000000))
(assert (= temp366_80 #x0000000000000003))
(assert (= temp366_81 temp366_80))
(assert (= temp366_82 (select ARGNAME_output_padding_NAMEEND_VAL temp366_81)))
(assert (= temp366_83 #x0000000000000000))
(assert (= temp366_84 #x0000000000000004))
(assert (= temp366_85 temp366_84))
(assert (= temp366_86 (select ARGNAME_output_padding_NAMEEND_VAL temp366_85)))
(assert (= temp366_87 #x0000000000000000))
(assert (= temp366_88 #x0000000000000005))
(assert (= temp366_89 temp366_88))
(assert (= temp366_90 (select ARGNAME_output_padding_NAMEEND_VAL temp366_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp366_70 temp366_67)
             (bvslt temp366_74 temp366_71)
             (bvslt temp366_78 temp366_75)
             (bvslt temp366_82 temp366_79)
             (bvslt temp366_86 temp366_83)
             (bvslt temp366_90 temp366_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_91 #x0000000000000000))
(assert (= var1322797 temp366_91))
(assert (= temp366_92 #x0000000000000000))
(assert (= temp366_93 temp366_92))
(assert (= temp366_94 (select ARGNAME_stride_NAMEEND_VAL temp366_93)))
(assert (= temp366_95 #x0000000000000001))
(assert (= temp366_96 temp366_95))
(assert (= temp366_97 (select ARGNAME_stride_NAMEEND_VAL temp366_96)))
(assert (= temp366_98 #x0000000000000002))
(assert (= temp366_99 temp366_98))
(assert (= temp366_100 (select ARGNAME_stride_NAMEEND_VAL temp366_99)))
(assert (= temp366_101 #x0000000000000003))
(assert (= temp366_102 temp366_101))
(assert (= temp366_103 (select ARGNAME_stride_NAMEEND_VAL temp366_102)))
(assert (= temp366_104 #x0000000000000004))
(assert (= temp366_105 temp366_104))
(assert (= temp366_106 (select ARGNAME_stride_NAMEEND_VAL temp366_105)))
(assert (= temp366_107 #x0000000000000005))
(assert (= temp366_108 temp366_107))
(assert (= temp366_109 (select ARGNAME_stride_NAMEEND_VAL temp366_108)))
(assert (= temp366_110 #x0000000000000000))
(assert (= temp366_111 #x0000000000000000))
(assert (= temp366_112 temp366_111))
(assert (= temp366_113 (select ARGNAME_stride_NAMEEND_VAL temp366_112)))
(assert (= temp366_114 #x0000000000000000))
(assert (= temp366_115 #x0000000000000001))
(assert (= temp366_116 temp366_115))
(assert (= temp366_117 (select ARGNAME_stride_NAMEEND_VAL temp366_116)))
(assert (= temp366_118 #x0000000000000000))
(assert (= temp366_119 #x0000000000000002))
(assert (= temp366_120 temp366_119))
(assert (= temp366_121 (select ARGNAME_stride_NAMEEND_VAL temp366_120)))
(assert (= temp366_122 #x0000000000000000))
(assert (= temp366_123 #x0000000000000003))
(assert (= temp366_124 temp366_123))
(assert (= temp366_125 (select ARGNAME_stride_NAMEEND_VAL temp366_124)))
(assert (= temp366_126 #x0000000000000000))
(assert (= temp366_127 #x0000000000000004))
(assert (= temp366_128 temp366_127))
(assert (= temp366_129 (select ARGNAME_stride_NAMEEND_VAL temp366_128)))
(assert (= temp366_130 #x0000000000000000))
(assert (= temp366_131 #x0000000000000005))
(assert (= temp366_132 temp366_131))
(assert (= temp366_133 (select ARGNAME_stride_NAMEEND_VAL temp366_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp366_113 temp366_110)
             (bvsle temp366_117 temp366_114)
             (bvsle temp366_121 temp366_118)
             (bvsle temp366_125 temp366_122)
             (bvsle temp366_129 temp366_126)
             (bvsle temp366_133 temp366_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_134 #x0000000000000000))
(assert (= var1322807 temp366_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_135 #x0000000000000001))
(assert (= var1322819 temp366_135))
(assert (= temp366_136 #x0000000000000000))
(assert (= var1310898 temp366_136))
(assert (= temp366_137 #x0000000000000000))
(assert (= temp366_138 temp366_137))
(assert (= temp366_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_138)))
(assert (= temp366_140 #x0000000000000001))
(assert (= temp366_141 temp366_140))
(assert (= temp366_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_141)))
(assert (= temp366_143 #x0000000000000002))
(assert (= temp366_144 temp366_143))
(assert (= temp366_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_144)))
(assert (= temp366_146 #x0000000000000003))
(assert (= temp366_147 temp366_146))
(assert (= temp366_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_147)))
(assert (= temp366_149 #x0000000000000004))
(assert (= temp366_150 temp366_149))
(assert (= temp366_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_150)))
(assert (= temp366_152 #x0000000000000005))
(assert (= temp366_153 temp366_152))
(assert (= temp366_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_153)))
(assert (= temp366_156 var1310898))
(assert (= temp366_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_156)))
(assert (= temp366_155 temp366_157))
(assert (= var1322852
   (ite (bvslt temp366_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_158 #x0000000000000000))
(assert (= var1322852 temp366_158))
(assert (= temp366_159 #x0000000000000000))
(assert (= var1310898 temp366_159))
(assert (= temp366_161 var1310898))
(assert (= temp366_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_161)))
(assert (= temp366_160 temp366_162))
(assert (= var1322874 (bvsmod temp366_160 ARGNAME_groups_NAMEEND)))
(assert (= temp366_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp366_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp366_164 #x0000000000000001))
(assert (= var1322875 temp366_164))
(assert (= temp366_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp366_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_166 #x0000000000000001))
(assert (= var1322895 temp366_166))
(assert (= temp366_167 #x0000000000000001))
(assert (= var1311786 temp366_167))
(assert (= temp366_168 #x0000000000000000))
(assert (= temp366_169 temp366_168))
(assert (= temp366_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp366_169)))
(assert (= temp366_171 #x0000000000000001))
(assert (= temp366_172 temp366_171))
(assert (= temp366_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp366_172)))
(assert (= temp366_174 #x0000000000000002))
(assert (= temp366_175 temp366_174))
(assert (= temp366_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp366_175)))
(assert (= temp366_177 #x0000000000000003))
(assert (= temp366_178 temp366_177))
(assert (= temp366_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp366_178)))
(assert (= temp366_180 #x0000000000000004))
(assert (= temp366_181 temp366_180))
(assert (= temp366_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp366_181)))
(assert (= temp366_183 #x0000000000000005))
(assert (= temp366_184 temp366_183))
(assert (= temp366_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp366_184)))
(assert (= temp366_186 #x0000000000000000))
(assert (= temp366_187
   (ite (bvslt var1311786 temp366_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp366_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp366_187)))
(assert (= var1322903 temp366_188))
(assert (bvslt (ite (bvslt var1311786 temp366_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp366_189 #x0000000000000001))
(assert (= var1311786 temp366_189))
(assert (= temp366_191 var1311786))
(assert (= temp366_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_191)))
(assert (= temp366_190 temp366_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp366_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp366_193 #x0000000000000001))
(assert (= var1322908 temp366_193))
(assert (= temp366_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp366_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_195 #x0000000000000001))
(assert (= var1322975 temp366_195))
(assert (= temp366_196 #x0000000000000000))
(assert (= var1310898 temp366_196))
(assert (= temp366_197 #x0000000000000000))
(assert (= temp366_198 temp366_197))
(assert (= temp366_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp366_198)))
(assert (= temp366_200 #x0000000000000001))
(assert (= temp366_201 temp366_200))
(assert (= temp366_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp366_201)))
(assert (= temp366_203 #x0000000000000002))
(assert (= temp366_204 temp366_203))
(assert (= temp366_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp366_204)))
(assert (= temp366_206 #x0000000000000003))
(assert (= temp366_207 temp366_206))
(assert (= temp366_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp366_207)))
(assert (= temp366_209 #x0000000000000004))
(assert (= temp366_210 temp366_209))
(assert (= temp366_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp366_210)))
(assert (= temp366_212 #x0000000000000005))
(assert (= temp366_213 temp366_212))
(assert (= temp366_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp366_213)))
(assert (= temp366_215 #x0000000000000000))
(assert (= temp366_216
   (ite (bvslt var1310898 temp366_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp366_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp366_216)))
(assert (= var1322977 temp366_217))
(assert (bvslt (ite (bvslt var1310898 temp366_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp366_218 #x0000000000000000))
(assert (= var1310898 temp366_218))
(assert (= temp366_220 var1310898))
(assert (= temp366_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_220)))
(assert (= temp366_219 temp366_221))
(assert (= var1322980
   (ite (= var1322977 temp366_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp366_222 #x0000000000000001))
(assert (= var1322980 temp366_222))
(assert (= temp366_223 #x0000000000000002))
(assert (= var1848169 temp366_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp366_225 #x0000000000000001))
(assert (= var1323065 temp366_225))
(assert (= temp366_226 #x0000000000000001))
(assert (= var3486735 temp366_226))
(assert (= temp366_227 #x0000000000000001))
(assert (= var3814415 temp366_227))
(assert (= temp366_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp366_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_229 #x0000000000000001))
(assert (= var79986 temp366_229))
(assert (= temp366_230 #x0000000000000001))
(assert (= var80116 temp366_230))
(assert (= var4796905 var80116))
(assert (= temp366_231 #x0000000000000000))
(assert (= var4784306 temp366_231))
(assert (= temp366_232 #x0000000000000000))
(assert (= temp366_233
   (ite (bvslt var4784306 temp366_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp366_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp366_233)))
(assert (= var4796924 temp366_234))
(assert (bvslt (ite (bvslt var4784306 temp366_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp366_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp366_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp366_236 #x0000000000000001))
(assert (= var4796925 temp366_236))
(assert (= temp366_237 #x0000000000000000))
(assert (= var4996927 temp366_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp366_238 #x0000000000000002))
(assert (= var5125763 temp366_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_239 #x0000000000000000))
(assert (= var5191324 temp366_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6500752 var80129))
(assert (= var6762896 var80129))
(assert (= temp366_240 #x0000000000000000))
(assert (= var7090576 temp366_240))
(assert (= temp366_241 #x0000000000000001))
(assert (= var79986 temp366_241))
(model-add temp366_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp366_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp366_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






