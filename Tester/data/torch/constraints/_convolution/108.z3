(declare-fun temp142_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp142_2 () (_ BitVec 64))
(declare-fun temp142_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp142_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp142_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp142_6 () (_ BitVec 64))
(declare-fun temp142_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_8 () (_ BitVec 64))
(declare-fun temp142_9 () (_ BitVec 64))
(declare-fun temp142_10 () (_ BitVec 64))
(declare-fun temp142_11 () (_ BitVec 64))
(declare-fun temp142_12 () (_ BitVec 64))
(declare-fun temp142_13 () (_ BitVec 64))
(declare-fun temp142_14 () (_ BitVec 64))
(declare-fun temp142_15 () (_ BitVec 64))
(declare-fun temp142_16 () (_ BitVec 64))
(declare-fun temp142_17 () (_ BitVec 64))
(declare-fun temp142_18 () (_ BitVec 64))
(declare-fun temp142_19 () (_ BitVec 64))
(declare-fun temp142_20 () (_ BitVec 64))
(declare-fun temp142_21 () (_ BitVec 64))
(declare-fun temp142_22 () (_ BitVec 64))
(declare-fun temp142_23 () (_ BitVec 64))
(declare-fun temp142_24 () (_ BitVec 64))
(declare-fun temp142_25 () (_ BitVec 64))
(declare-fun temp142_26 () (_ BitVec 64))
(declare-fun temp142_27 () (_ BitVec 64))
(declare-fun temp142_28 () (_ BitVec 64))
(declare-fun temp142_29 () (_ BitVec 64))
(declare-fun temp142_30 () (_ BitVec 64))
(declare-fun temp142_31 () (_ BitVec 64))
(declare-fun temp142_32 () (_ BitVec 64))
(declare-fun temp142_33 () (_ BitVec 64))
(declare-fun temp142_34 () (_ BitVec 64))
(declare-fun temp142_35 () (_ BitVec 64))
(declare-fun temp142_36 () (_ BitVec 64))
(declare-fun temp142_37 () (_ BitVec 64))
(declare-fun temp142_38 () (_ BitVec 64))
(declare-fun temp142_39 () (_ BitVec 64))
(declare-fun temp142_40 () (_ BitVec 64))
(declare-fun temp142_41 () (_ BitVec 64))
(declare-fun temp142_42 () (_ BitVec 64))
(declare-fun temp142_43 () (_ BitVec 64))
(declare-fun temp142_44 () (_ BitVec 64))
(declare-fun temp142_45 () (_ BitVec 64))
(declare-fun temp142_46 () (_ BitVec 64))
(declare-fun temp142_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp142_48 () (_ BitVec 64))
(declare-fun temp142_49 () (_ BitVec 64))
(declare-fun temp142_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_51 () (_ BitVec 64))
(declare-fun temp142_52 () (_ BitVec 64))
(declare-fun temp142_53 () (_ BitVec 64))
(declare-fun temp142_54 () (_ BitVec 64))
(declare-fun temp142_55 () (_ BitVec 64))
(declare-fun temp142_56 () (_ BitVec 64))
(declare-fun temp142_57 () (_ BitVec 64))
(declare-fun temp142_58 () (_ BitVec 64))
(declare-fun temp142_59 () (_ BitVec 64))
(declare-fun temp142_60 () (_ BitVec 64))
(declare-fun temp142_61 () (_ BitVec 64))
(declare-fun temp142_62 () (_ BitVec 64))
(declare-fun temp142_63 () (_ BitVec 64))
(declare-fun temp142_64 () (_ BitVec 64))
(declare-fun temp142_65 () (_ BitVec 64))
(declare-fun temp142_66 () (_ BitVec 64))
(declare-fun temp142_67 () (_ BitVec 64))
(declare-fun temp142_68 () (_ BitVec 64))
(declare-fun temp142_69 () (_ BitVec 64))
(declare-fun temp142_70 () (_ BitVec 64))
(declare-fun temp142_71 () (_ BitVec 64))
(declare-fun temp142_72 () (_ BitVec 64))
(declare-fun temp142_73 () (_ BitVec 64))
(declare-fun temp142_74 () (_ BitVec 64))
(declare-fun temp142_75 () (_ BitVec 64))
(declare-fun temp142_76 () (_ BitVec 64))
(declare-fun temp142_77 () (_ BitVec 64))
(declare-fun temp142_78 () (_ BitVec 64))
(declare-fun temp142_79 () (_ BitVec 64))
(declare-fun temp142_80 () (_ BitVec 64))
(declare-fun temp142_81 () (_ BitVec 64))
(declare-fun temp142_82 () (_ BitVec 64))
(declare-fun temp142_83 () (_ BitVec 64))
(declare-fun temp142_84 () (_ BitVec 64))
(declare-fun temp142_85 () (_ BitVec 64))
(declare-fun temp142_86 () (_ BitVec 64))
(declare-fun temp142_87 () (_ BitVec 64))
(declare-fun temp142_88 () (_ BitVec 64))
(declare-fun temp142_89 () (_ BitVec 64))
(declare-fun temp142_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp142_91 () (_ BitVec 64))
(declare-fun temp142_92 () (_ BitVec 64))
(declare-fun temp142_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_94 () (_ BitVec 64))
(declare-fun temp142_95 () (_ BitVec 64))
(declare-fun temp142_96 () (_ BitVec 64))
(declare-fun temp142_97 () (_ BitVec 64))
(declare-fun temp142_98 () (_ BitVec 64))
(declare-fun temp142_99 () (_ BitVec 64))
(declare-fun temp142_100 () (_ BitVec 64))
(declare-fun temp142_101 () (_ BitVec 64))
(declare-fun temp142_102 () (_ BitVec 64))
(declare-fun temp142_103 () (_ BitVec 64))
(declare-fun temp142_104 () (_ BitVec 64))
(declare-fun temp142_105 () (_ BitVec 64))
(declare-fun temp142_106 () (_ BitVec 64))
(declare-fun temp142_107 () (_ BitVec 64))
(declare-fun temp142_108 () (_ BitVec 64))
(declare-fun temp142_109 () (_ BitVec 64))
(declare-fun temp142_110 () (_ BitVec 64))
(declare-fun temp142_111 () (_ BitVec 64))
(declare-fun temp142_112 () (_ BitVec 64))
(declare-fun temp142_113 () (_ BitVec 64))
(declare-fun temp142_114 () (_ BitVec 64))
(declare-fun temp142_115 () (_ BitVec 64))
(declare-fun temp142_116 () (_ BitVec 64))
(declare-fun temp142_117 () (_ BitVec 64))
(declare-fun temp142_118 () (_ BitVec 64))
(declare-fun temp142_119 () (_ BitVec 64))
(declare-fun temp142_120 () (_ BitVec 64))
(declare-fun temp142_121 () (_ BitVec 64))
(declare-fun temp142_122 () (_ BitVec 64))
(declare-fun temp142_123 () (_ BitVec 64))
(declare-fun temp142_124 () (_ BitVec 64))
(declare-fun temp142_125 () (_ BitVec 64))
(declare-fun temp142_126 () (_ BitVec 64))
(declare-fun temp142_127 () (_ BitVec 64))
(declare-fun temp142_128 () (_ BitVec 64))
(declare-fun temp142_129 () (_ BitVec 64))
(declare-fun temp142_130 () (_ BitVec 64))
(declare-fun temp142_131 () (_ BitVec 64))
(declare-fun temp142_132 () (_ BitVec 64))
(declare-fun temp142_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp142_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp142_135 () (_ BitVec 64))
(declare-fun temp142_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp142_137 () (_ BitVec 64))
(declare-fun temp142_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_139 () (_ BitVec 64))
(declare-fun temp142_140 () (_ BitVec 64))
(declare-fun temp142_141 () (_ BitVec 64))
(declare-fun temp142_142 () (_ BitVec 64))
(declare-fun temp142_143 () (_ BitVec 64))
(declare-fun temp142_144 () (_ BitVec 64))
(declare-fun temp142_145 () (_ BitVec 64))
(declare-fun temp142_146 () (_ BitVec 64))
(declare-fun temp142_147 () (_ BitVec 64))
(declare-fun temp142_148 () (_ BitVec 64))
(declare-fun temp142_149 () (_ BitVec 64))
(declare-fun temp142_150 () (_ BitVec 64))
(declare-fun temp142_151 () (_ BitVec 64))
(declare-fun temp142_152 () (_ BitVec 64))
(declare-fun temp142_153 () (_ BitVec 64))
(declare-fun temp142_154 () (_ BitVec 64))
(declare-fun temp142_156 () (_ BitVec 64))
(declare-fun temp142_157 () (_ BitVec 64))
(declare-fun temp142_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp142_158 () (_ BitVec 64))
(declare-fun temp142_159 () (_ BitVec 64))
(declare-fun temp142_161 () (_ BitVec 64))
(declare-fun temp142_162 () (_ BitVec 64))
(declare-fun temp142_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp142_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp142_164 () (_ BitVec 64))
(declare-fun temp142_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp142_166 () (_ BitVec 64))
(declare-fun temp142_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp142_168 () (_ BitVec 64))
(declare-fun temp142_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_170 () (_ BitVec 64))
(declare-fun temp142_171 () (_ BitVec 64))
(declare-fun temp142_172 () (_ BitVec 64))
(declare-fun temp142_173 () (_ BitVec 64))
(declare-fun temp142_174 () (_ BitVec 64))
(declare-fun temp142_175 () (_ BitVec 64))
(declare-fun temp142_176 () (_ BitVec 64))
(declare-fun temp142_177 () (_ BitVec 64))
(declare-fun temp142_178 () (_ BitVec 64))
(declare-fun temp142_179 () (_ BitVec 64))
(declare-fun temp142_180 () (_ BitVec 64))
(declare-fun temp142_181 () (_ BitVec 64))
(declare-fun temp142_182 () (_ BitVec 64))
(declare-fun temp142_183 () (_ BitVec 64))
(declare-fun temp142_184 () (_ BitVec 64))
(declare-fun temp142_185 () (_ BitVec 64))
(declare-fun temp142_186 () (_ BitVec 64))
(declare-fun temp142_187 () (_ BitVec 64))
(declare-fun temp142_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp142_189 () (_ BitVec 64))
(declare-fun temp142_191 () (_ BitVec 64))
(declare-fun temp142_192 () (_ BitVec 64))
(declare-fun temp142_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp142_193 () (_ BitVec 64))
(declare-fun temp142_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp142_195 () (_ BitVec 64))
(declare-fun temp142_196 () (_ BitVec 64))
(declare-fun temp142_197 () (_ BitVec 64))
(declare-fun temp142_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_199 () (_ BitVec 64))
(declare-fun temp142_200 () (_ BitVec 64))
(declare-fun temp142_201 () (_ BitVec 64))
(declare-fun temp142_202 () (_ BitVec 64))
(declare-fun temp142_203 () (_ BitVec 64))
(declare-fun temp142_204 () (_ BitVec 64))
(declare-fun temp142_205 () (_ BitVec 64))
(declare-fun temp142_206 () (_ BitVec 64))
(declare-fun temp142_207 () (_ BitVec 64))
(declare-fun temp142_208 () (_ BitVec 64))
(declare-fun temp142_209 () (_ BitVec 64))
(declare-fun temp142_210 () (_ BitVec 64))
(declare-fun temp142_211 () (_ BitVec 64))
(declare-fun temp142_212 () (_ BitVec 64))
(declare-fun temp142_213 () (_ BitVec 64))
(declare-fun temp142_214 () (_ BitVec 64))
(declare-fun temp142_215 () (_ BitVec 64))
(declare-fun temp142_216 () (_ BitVec 64))
(declare-fun temp142_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp142_218 () (_ BitVec 64))
(declare-fun temp142_220 () (_ BitVec 64))
(declare-fun temp142_221 () (_ BitVec 64))
(declare-fun temp142_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp142_222 () (_ BitVec 64))
(declare-fun temp142_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp142_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp142_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp142_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp142_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp142_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp142_229 () (_ BitVec 64))
(declare-fun temp142_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp142_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp142_232 () (_ BitVec 64))
(declare-fun temp142_233 () (_ BitVec 64))
(declare-fun temp142_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp142_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp142_236 () (_ BitVec 64))
(declare-fun temp142_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp142_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp142_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp142_241 () (_ BitVec 64))
(declare-fun temp142_240 () (_ BitVec 64))
(declare-fun temp142_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp142_243 () (_ BitVec 64))
(declare-fun temp142_244 () (_ BitVec 64))
(declare-fun temp142_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp142_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp142_247 () (_ BitVec 64))
(declare-fun temp142_249 () (_ BitVec 64))
(declare-fun temp142_248 () (_ BitVec 64))
(declare-fun temp142_250 () (_ BitVec 64))
(assert (= temp142_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp142_1)))
(assert (= temp142_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp142_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_3 #x0000000000000000))
(assert (= var79869 temp142_3))
(assert (= temp142_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp142_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_5 #x0000000000000000))
(assert (= var79914 temp142_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp142_6 #x0000000000000000))
(assert (= temp142_7 temp142_6))
(assert (= temp142_8 (select ARGNAME_padding_NAMEEND_VAL temp142_7)))
(assert (= temp142_9 #x0000000000000001))
(assert (= temp142_10 temp142_9))
(assert (= temp142_11 (select ARGNAME_padding_NAMEEND_VAL temp142_10)))
(assert (= temp142_12 #x0000000000000002))
(assert (= temp142_13 temp142_12))
(assert (= temp142_14 (select ARGNAME_padding_NAMEEND_VAL temp142_13)))
(assert (= temp142_15 #x0000000000000003))
(assert (= temp142_16 temp142_15))
(assert (= temp142_17 (select ARGNAME_padding_NAMEEND_VAL temp142_16)))
(assert (= temp142_18 #x0000000000000004))
(assert (= temp142_19 temp142_18))
(assert (= temp142_20 (select ARGNAME_padding_NAMEEND_VAL temp142_19)))
(assert (= temp142_21 #x0000000000000005))
(assert (= temp142_22 temp142_21))
(assert (= temp142_23 (select ARGNAME_padding_NAMEEND_VAL temp142_22)))
(assert (= temp142_24 #x0000000000000000))
(assert (= temp142_25 #x0000000000000000))
(assert (= temp142_26 temp142_25))
(assert (= temp142_27 (select ARGNAME_padding_NAMEEND_VAL temp142_26)))
(assert (= temp142_28 #x0000000000000000))
(assert (= temp142_29 #x0000000000000001))
(assert (= temp142_30 temp142_29))
(assert (= temp142_31 (select ARGNAME_padding_NAMEEND_VAL temp142_30)))
(assert (= temp142_32 #x0000000000000000))
(assert (= temp142_33 #x0000000000000002))
(assert (= temp142_34 temp142_33))
(assert (= temp142_35 (select ARGNAME_padding_NAMEEND_VAL temp142_34)))
(assert (= temp142_36 #x0000000000000000))
(assert (= temp142_37 #x0000000000000003))
(assert (= temp142_38 temp142_37))
(assert (= temp142_39 (select ARGNAME_padding_NAMEEND_VAL temp142_38)))
(assert (= temp142_40 #x0000000000000000))
(assert (= temp142_41 #x0000000000000004))
(assert (= temp142_42 temp142_41))
(assert (= temp142_43 (select ARGNAME_padding_NAMEEND_VAL temp142_42)))
(assert (= temp142_44 #x0000000000000000))
(assert (= temp142_45 #x0000000000000005))
(assert (= temp142_46 temp142_45))
(assert (= temp142_47 (select ARGNAME_padding_NAMEEND_VAL temp142_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp142_27 temp142_24)
             (bvslt temp142_31 temp142_28)
             (bvslt temp142_35 temp142_32)
             (bvslt temp142_39 temp142_36)
             (bvslt temp142_43 temp142_40)
             (bvslt temp142_47 temp142_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_48 #x0000000000000000))
(assert (= var1322786 temp142_48))
(assert (= temp142_49 #x0000000000000000))
(assert (= temp142_50 temp142_49))
(assert (= temp142_51 (select ARGNAME_output_padding_NAMEEND_VAL temp142_50)))
(assert (= temp142_52 #x0000000000000001))
(assert (= temp142_53 temp142_52))
(assert (= temp142_54 (select ARGNAME_output_padding_NAMEEND_VAL temp142_53)))
(assert (= temp142_55 #x0000000000000002))
(assert (= temp142_56 temp142_55))
(assert (= temp142_57 (select ARGNAME_output_padding_NAMEEND_VAL temp142_56)))
(assert (= temp142_58 #x0000000000000003))
(assert (= temp142_59 temp142_58))
(assert (= temp142_60 (select ARGNAME_output_padding_NAMEEND_VAL temp142_59)))
(assert (= temp142_61 #x0000000000000004))
(assert (= temp142_62 temp142_61))
(assert (= temp142_63 (select ARGNAME_output_padding_NAMEEND_VAL temp142_62)))
(assert (= temp142_64 #x0000000000000005))
(assert (= temp142_65 temp142_64))
(assert (= temp142_66 (select ARGNAME_output_padding_NAMEEND_VAL temp142_65)))
(assert (= temp142_67 #x0000000000000000))
(assert (= temp142_68 #x0000000000000000))
(assert (= temp142_69 temp142_68))
(assert (= temp142_70 (select ARGNAME_output_padding_NAMEEND_VAL temp142_69)))
(assert (= temp142_71 #x0000000000000000))
(assert (= temp142_72 #x0000000000000001))
(assert (= temp142_73 temp142_72))
(assert (= temp142_74 (select ARGNAME_output_padding_NAMEEND_VAL temp142_73)))
(assert (= temp142_75 #x0000000000000000))
(assert (= temp142_76 #x0000000000000002))
(assert (= temp142_77 temp142_76))
(assert (= temp142_78 (select ARGNAME_output_padding_NAMEEND_VAL temp142_77)))
(assert (= temp142_79 #x0000000000000000))
(assert (= temp142_80 #x0000000000000003))
(assert (= temp142_81 temp142_80))
(assert (= temp142_82 (select ARGNAME_output_padding_NAMEEND_VAL temp142_81)))
(assert (= temp142_83 #x0000000000000000))
(assert (= temp142_84 #x0000000000000004))
(assert (= temp142_85 temp142_84))
(assert (= temp142_86 (select ARGNAME_output_padding_NAMEEND_VAL temp142_85)))
(assert (= temp142_87 #x0000000000000000))
(assert (= temp142_88 #x0000000000000005))
(assert (= temp142_89 temp142_88))
(assert (= temp142_90 (select ARGNAME_output_padding_NAMEEND_VAL temp142_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp142_70 temp142_67)
             (bvslt temp142_74 temp142_71)
             (bvslt temp142_78 temp142_75)
             (bvslt temp142_82 temp142_79)
             (bvslt temp142_86 temp142_83)
             (bvslt temp142_90 temp142_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_91 #x0000000000000000))
(assert (= var1322797 temp142_91))
(assert (= temp142_92 #x0000000000000000))
(assert (= temp142_93 temp142_92))
(assert (= temp142_94 (select ARGNAME_stride_NAMEEND_VAL temp142_93)))
(assert (= temp142_95 #x0000000000000001))
(assert (= temp142_96 temp142_95))
(assert (= temp142_97 (select ARGNAME_stride_NAMEEND_VAL temp142_96)))
(assert (= temp142_98 #x0000000000000002))
(assert (= temp142_99 temp142_98))
(assert (= temp142_100 (select ARGNAME_stride_NAMEEND_VAL temp142_99)))
(assert (= temp142_101 #x0000000000000003))
(assert (= temp142_102 temp142_101))
(assert (= temp142_103 (select ARGNAME_stride_NAMEEND_VAL temp142_102)))
(assert (= temp142_104 #x0000000000000004))
(assert (= temp142_105 temp142_104))
(assert (= temp142_106 (select ARGNAME_stride_NAMEEND_VAL temp142_105)))
(assert (= temp142_107 #x0000000000000005))
(assert (= temp142_108 temp142_107))
(assert (= temp142_109 (select ARGNAME_stride_NAMEEND_VAL temp142_108)))
(assert (= temp142_110 #x0000000000000000))
(assert (= temp142_111 #x0000000000000000))
(assert (= temp142_112 temp142_111))
(assert (= temp142_113 (select ARGNAME_stride_NAMEEND_VAL temp142_112)))
(assert (= temp142_114 #x0000000000000000))
(assert (= temp142_115 #x0000000000000001))
(assert (= temp142_116 temp142_115))
(assert (= temp142_117 (select ARGNAME_stride_NAMEEND_VAL temp142_116)))
(assert (= temp142_118 #x0000000000000000))
(assert (= temp142_119 #x0000000000000002))
(assert (= temp142_120 temp142_119))
(assert (= temp142_121 (select ARGNAME_stride_NAMEEND_VAL temp142_120)))
(assert (= temp142_122 #x0000000000000000))
(assert (= temp142_123 #x0000000000000003))
(assert (= temp142_124 temp142_123))
(assert (= temp142_125 (select ARGNAME_stride_NAMEEND_VAL temp142_124)))
(assert (= temp142_126 #x0000000000000000))
(assert (= temp142_127 #x0000000000000004))
(assert (= temp142_128 temp142_127))
(assert (= temp142_129 (select ARGNAME_stride_NAMEEND_VAL temp142_128)))
(assert (= temp142_130 #x0000000000000000))
(assert (= temp142_131 #x0000000000000005))
(assert (= temp142_132 temp142_131))
(assert (= temp142_133 (select ARGNAME_stride_NAMEEND_VAL temp142_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp142_113 temp142_110)
             (bvsle temp142_117 temp142_114)
             (bvsle temp142_121 temp142_118)
             (bvsle temp142_125 temp142_122)
             (bvsle temp142_129 temp142_126)
             (bvsle temp142_133 temp142_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_134 #x0000000000000000))
(assert (= var1322807 temp142_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_135 #x0000000000000001))
(assert (= var1322819 temp142_135))
(assert (= temp142_136 #x0000000000000000))
(assert (= var1310898 temp142_136))
(assert (= temp142_137 #x0000000000000000))
(assert (= temp142_138 temp142_137))
(assert (= temp142_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_138)))
(assert (= temp142_140 #x0000000000000001))
(assert (= temp142_141 temp142_140))
(assert (= temp142_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_141)))
(assert (= temp142_143 #x0000000000000002))
(assert (= temp142_144 temp142_143))
(assert (= temp142_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_144)))
(assert (= temp142_146 #x0000000000000003))
(assert (= temp142_147 temp142_146))
(assert (= temp142_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_147)))
(assert (= temp142_149 #x0000000000000004))
(assert (= temp142_150 temp142_149))
(assert (= temp142_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_150)))
(assert (= temp142_152 #x0000000000000005))
(assert (= temp142_153 temp142_152))
(assert (= temp142_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_153)))
(assert (= temp142_156 var1310898))
(assert (= temp142_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_156)))
(assert (= temp142_155 temp142_157))
(assert (= var1322852
   (ite (bvslt temp142_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_158 #x0000000000000000))
(assert (= var1322852 temp142_158))
(assert (= temp142_159 #x0000000000000000))
(assert (= var1310898 temp142_159))
(assert (= temp142_161 var1310898))
(assert (= temp142_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_161)))
(assert (= temp142_160 temp142_162))
(assert (= var1322874 (bvsmod temp142_160 ARGNAME_groups_NAMEEND)))
(assert (= temp142_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp142_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_164 #x0000000000000001))
(assert (= var1322875 temp142_164))
(assert (= temp142_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp142_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_166 #x0000000000000001))
(assert (= var1322895 temp142_166))
(assert (= temp142_167 #x0000000000000001))
(assert (= var1311786 temp142_167))
(assert (= temp142_168 #x0000000000000000))
(assert (= temp142_169 temp142_168))
(assert (= temp142_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_169)))
(assert (= temp142_171 #x0000000000000001))
(assert (= temp142_172 temp142_171))
(assert (= temp142_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_172)))
(assert (= temp142_174 #x0000000000000002))
(assert (= temp142_175 temp142_174))
(assert (= temp142_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_175)))
(assert (= temp142_177 #x0000000000000003))
(assert (= temp142_178 temp142_177))
(assert (= temp142_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_178)))
(assert (= temp142_180 #x0000000000000004))
(assert (= temp142_181 temp142_180))
(assert (= temp142_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_181)))
(assert (= temp142_183 #x0000000000000005))
(assert (= temp142_184 temp142_183))
(assert (= temp142_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_184)))
(assert (= temp142_186 #x0000000000000000))
(assert (= temp142_187
   (ite (bvslt var1311786 temp142_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp142_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_187)))
(assert (= var1322903 temp142_188))
(assert (bvslt (ite (bvslt var1311786 temp142_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp142_189 #x0000000000000001))
(assert (= var1311786 temp142_189))
(assert (= temp142_191 var1311786))
(assert (= temp142_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_191)))
(assert (= temp142_190 temp142_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp142_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_193 #x0000000000000001))
(assert (= var1322908 temp142_193))
(assert (= temp142_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp142_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_195 #x0000000000000001))
(assert (= var1322975 temp142_195))
(assert (= temp142_196 #x0000000000000000))
(assert (= var1310898 temp142_196))
(assert (= temp142_197 #x0000000000000000))
(assert (= temp142_198 temp142_197))
(assert (= temp142_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp142_198)))
(assert (= temp142_200 #x0000000000000001))
(assert (= temp142_201 temp142_200))
(assert (= temp142_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp142_201)))
(assert (= temp142_203 #x0000000000000002))
(assert (= temp142_204 temp142_203))
(assert (= temp142_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp142_204)))
(assert (= temp142_206 #x0000000000000003))
(assert (= temp142_207 temp142_206))
(assert (= temp142_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp142_207)))
(assert (= temp142_209 #x0000000000000004))
(assert (= temp142_210 temp142_209))
(assert (= temp142_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp142_210)))
(assert (= temp142_212 #x0000000000000005))
(assert (= temp142_213 temp142_212))
(assert (= temp142_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp142_213)))
(assert (= temp142_215 #x0000000000000000))
(assert (= temp142_216
   (ite (bvslt var1310898 temp142_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp142_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp142_216)))
(assert (= var1322977 temp142_217))
(assert (bvslt (ite (bvslt var1310898 temp142_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp142_218 #x0000000000000000))
(assert (= var1310898 temp142_218))
(assert (= temp142_220 var1310898))
(assert (= temp142_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_220)))
(assert (= temp142_219 temp142_221))
(assert (= var1322980
   (ite (= var1322977 temp142_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_222 #x0000000000000001))
(assert (= var1322980 temp142_222))
(assert (= temp142_223 #x0000000000000002))
(assert (= var1848169 temp142_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp142_225 #x0000000000000001))
(assert (= var1323065 temp142_225))
(assert (= temp142_226 #x0000000000000001))
(assert (= var3486735 temp142_226))
(assert (= temp142_227 #x0000000000000001))
(assert (= var3814415 temp142_227))
(assert (= temp142_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp142_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_229 #x0000000000000001))
(assert (= var79986 temp142_229))
(assert (= temp142_230 #x0000000000000001))
(assert (= var80116 temp142_230))
(assert (= var4796905 var80116))
(assert (= temp142_231 #x0000000000000000))
(assert (= var4784306 temp142_231))
(assert (= temp142_232 #x0000000000000000))
(assert (= temp142_233
   (ite (bvslt var4784306 temp142_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp142_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_233)))
(assert (= var4796924 temp142_234))
(assert (bvslt (ite (bvslt var4784306 temp142_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp142_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp142_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_236 #x0000000000000001))
(assert (= var4796925 temp142_236))
(assert (= temp142_237 #x0000000000000000))
(assert (= var4996927 temp142_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp142_238 #x0000000000000002))
(assert (= var5125763 temp142_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_239 #x0000000000000000))
(assert (= var5191324 temp142_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp142_241 #xffffffffffffffff))
(assert (= temp142_240 temp142_241))
(assert (= temp142_242 #x0000000000000001))
(assert (= var66602 temp142_242))
(assert (= temp142_243 #x0000000000000000))
(assert (= temp142_244
   (ite (bvslt var66602 temp142_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp142_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_244)))
(assert (= var80523 temp142_245))
(assert (bvslt (ite (bvslt var66602 temp142_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp142_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp142_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_247 #x0000000000000001))
(assert (= var80524 temp142_247))
(assert (= temp142_249 #xffffffffffffffff))
(assert (= temp142_248 temp142_249))
(assert (= temp142_250 #x0000000000000001))
(assert (= var79986 temp142_250))
(model-add temp142_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp142_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp142_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






