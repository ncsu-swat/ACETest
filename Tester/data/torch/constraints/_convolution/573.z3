(declare-fun temp761_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp761_2 () (_ BitVec 64))
(declare-fun temp761_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp761_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp761_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp761_6 () (_ BitVec 64))
(declare-fun temp761_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp761_8 () (_ BitVec 64))
(declare-fun temp761_9 () (_ BitVec 64))
(declare-fun temp761_10 () (_ BitVec 64))
(declare-fun temp761_11 () (_ BitVec 64))
(declare-fun temp761_12 () (_ BitVec 64))
(declare-fun temp761_13 () (_ BitVec 64))
(declare-fun temp761_14 () (_ BitVec 64))
(declare-fun temp761_15 () (_ BitVec 64))
(declare-fun temp761_16 () (_ BitVec 64))
(declare-fun temp761_17 () (_ BitVec 64))
(declare-fun temp761_18 () (_ BitVec 64))
(declare-fun temp761_19 () (_ BitVec 64))
(declare-fun temp761_20 () (_ BitVec 64))
(declare-fun temp761_21 () (_ BitVec 64))
(declare-fun temp761_22 () (_ BitVec 64))
(declare-fun temp761_23 () (_ BitVec 64))
(declare-fun temp761_24 () (_ BitVec 64))
(declare-fun temp761_25 () (_ BitVec 64))
(declare-fun temp761_26 () (_ BitVec 64))
(declare-fun temp761_27 () (_ BitVec 64))
(declare-fun temp761_28 () (_ BitVec 64))
(declare-fun temp761_29 () (_ BitVec 64))
(declare-fun temp761_30 () (_ BitVec 64))
(declare-fun temp761_31 () (_ BitVec 64))
(declare-fun temp761_32 () (_ BitVec 64))
(declare-fun temp761_33 () (_ BitVec 64))
(declare-fun temp761_34 () (_ BitVec 64))
(declare-fun temp761_35 () (_ BitVec 64))
(declare-fun temp761_36 () (_ BitVec 64))
(declare-fun temp761_37 () (_ BitVec 64))
(declare-fun temp761_38 () (_ BitVec 64))
(declare-fun temp761_39 () (_ BitVec 64))
(declare-fun temp761_40 () (_ BitVec 64))
(declare-fun temp761_41 () (_ BitVec 64))
(declare-fun temp761_42 () (_ BitVec 64))
(declare-fun temp761_43 () (_ BitVec 64))
(declare-fun temp761_44 () (_ BitVec 64))
(declare-fun temp761_45 () (_ BitVec 64))
(declare-fun temp761_46 () (_ BitVec 64))
(declare-fun temp761_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp761_48 () (_ BitVec 64))
(declare-fun temp761_49 () (_ BitVec 64))
(declare-fun temp761_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp761_51 () (_ BitVec 64))
(declare-fun temp761_52 () (_ BitVec 64))
(declare-fun temp761_53 () (_ BitVec 64))
(declare-fun temp761_54 () (_ BitVec 64))
(declare-fun temp761_55 () (_ BitVec 64))
(declare-fun temp761_56 () (_ BitVec 64))
(declare-fun temp761_57 () (_ BitVec 64))
(declare-fun temp761_58 () (_ BitVec 64))
(declare-fun temp761_59 () (_ BitVec 64))
(declare-fun temp761_60 () (_ BitVec 64))
(declare-fun temp761_61 () (_ BitVec 64))
(declare-fun temp761_62 () (_ BitVec 64))
(declare-fun temp761_63 () (_ BitVec 64))
(declare-fun temp761_64 () (_ BitVec 64))
(declare-fun temp761_65 () (_ BitVec 64))
(declare-fun temp761_66 () (_ BitVec 64))
(declare-fun temp761_67 () (_ BitVec 64))
(declare-fun temp761_68 () (_ BitVec 64))
(declare-fun temp761_69 () (_ BitVec 64))
(declare-fun temp761_70 () (_ BitVec 64))
(declare-fun temp761_71 () (_ BitVec 64))
(declare-fun temp761_72 () (_ BitVec 64))
(declare-fun temp761_73 () (_ BitVec 64))
(declare-fun temp761_74 () (_ BitVec 64))
(declare-fun temp761_75 () (_ BitVec 64))
(declare-fun temp761_76 () (_ BitVec 64))
(declare-fun temp761_77 () (_ BitVec 64))
(declare-fun temp761_78 () (_ BitVec 64))
(declare-fun temp761_79 () (_ BitVec 64))
(declare-fun temp761_80 () (_ BitVec 64))
(declare-fun temp761_81 () (_ BitVec 64))
(declare-fun temp761_82 () (_ BitVec 64))
(declare-fun temp761_83 () (_ BitVec 64))
(declare-fun temp761_84 () (_ BitVec 64))
(declare-fun temp761_85 () (_ BitVec 64))
(declare-fun temp761_86 () (_ BitVec 64))
(declare-fun temp761_87 () (_ BitVec 64))
(declare-fun temp761_88 () (_ BitVec 64))
(declare-fun temp761_89 () (_ BitVec 64))
(declare-fun temp761_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp761_91 () (_ BitVec 64))
(declare-fun temp761_92 () (_ BitVec 64))
(declare-fun temp761_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp761_94 () (_ BitVec 64))
(declare-fun temp761_95 () (_ BitVec 64))
(declare-fun temp761_96 () (_ BitVec 64))
(declare-fun temp761_97 () (_ BitVec 64))
(declare-fun temp761_98 () (_ BitVec 64))
(declare-fun temp761_99 () (_ BitVec 64))
(declare-fun temp761_100 () (_ BitVec 64))
(declare-fun temp761_101 () (_ BitVec 64))
(declare-fun temp761_102 () (_ BitVec 64))
(declare-fun temp761_103 () (_ BitVec 64))
(declare-fun temp761_104 () (_ BitVec 64))
(declare-fun temp761_105 () (_ BitVec 64))
(declare-fun temp761_106 () (_ BitVec 64))
(declare-fun temp761_107 () (_ BitVec 64))
(declare-fun temp761_108 () (_ BitVec 64))
(declare-fun temp761_109 () (_ BitVec 64))
(declare-fun temp761_110 () (_ BitVec 64))
(declare-fun temp761_111 () (_ BitVec 64))
(declare-fun temp761_112 () (_ BitVec 64))
(declare-fun temp761_113 () (_ BitVec 64))
(declare-fun temp761_114 () (_ BitVec 64))
(declare-fun temp761_115 () (_ BitVec 64))
(declare-fun temp761_116 () (_ BitVec 64))
(declare-fun temp761_117 () (_ BitVec 64))
(declare-fun temp761_118 () (_ BitVec 64))
(declare-fun temp761_119 () (_ BitVec 64))
(declare-fun temp761_120 () (_ BitVec 64))
(declare-fun temp761_121 () (_ BitVec 64))
(declare-fun temp761_122 () (_ BitVec 64))
(declare-fun temp761_123 () (_ BitVec 64))
(declare-fun temp761_124 () (_ BitVec 64))
(declare-fun temp761_125 () (_ BitVec 64))
(declare-fun temp761_126 () (_ BitVec 64))
(declare-fun temp761_127 () (_ BitVec 64))
(declare-fun temp761_128 () (_ BitVec 64))
(declare-fun temp761_129 () (_ BitVec 64))
(declare-fun temp761_130 () (_ BitVec 64))
(declare-fun temp761_131 () (_ BitVec 64))
(declare-fun temp761_132 () (_ BitVec 64))
(declare-fun temp761_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp761_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp761_135 () (_ BitVec 64))
(declare-fun temp761_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp761_137 () (_ BitVec 64))
(declare-fun temp761_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp761_139 () (_ BitVec 64))
(declare-fun temp761_140 () (_ BitVec 64))
(declare-fun temp761_141 () (_ BitVec 64))
(declare-fun temp761_142 () (_ BitVec 64))
(declare-fun temp761_143 () (_ BitVec 64))
(declare-fun temp761_144 () (_ BitVec 64))
(declare-fun temp761_145 () (_ BitVec 64))
(declare-fun temp761_146 () (_ BitVec 64))
(declare-fun temp761_147 () (_ BitVec 64))
(declare-fun temp761_148 () (_ BitVec 64))
(declare-fun temp761_149 () (_ BitVec 64))
(declare-fun temp761_150 () (_ BitVec 64))
(declare-fun temp761_151 () (_ BitVec 64))
(declare-fun temp761_152 () (_ BitVec 64))
(declare-fun temp761_153 () (_ BitVec 64))
(declare-fun temp761_154 () (_ BitVec 64))
(declare-fun temp761_156 () (_ BitVec 64))
(declare-fun temp761_157 () (_ BitVec 64))
(declare-fun temp761_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp761_158 () (_ BitVec 64))
(declare-fun temp761_159 () (_ BitVec 64))
(declare-fun temp761_161 () (_ BitVec 64))
(declare-fun temp761_162 () (_ BitVec 64))
(declare-fun temp761_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp761_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp761_164 () (_ BitVec 64))
(declare-fun temp761_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp761_166 () (_ BitVec 64))
(declare-fun temp761_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp761_168 () (_ BitVec 64))
(declare-fun temp761_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp761_170 () (_ BitVec 64))
(declare-fun temp761_171 () (_ BitVec 64))
(declare-fun temp761_172 () (_ BitVec 64))
(declare-fun temp761_173 () (_ BitVec 64))
(declare-fun temp761_174 () (_ BitVec 64))
(declare-fun temp761_175 () (_ BitVec 64))
(declare-fun temp761_176 () (_ BitVec 64))
(declare-fun temp761_177 () (_ BitVec 64))
(declare-fun temp761_178 () (_ BitVec 64))
(declare-fun temp761_179 () (_ BitVec 64))
(declare-fun temp761_180 () (_ BitVec 64))
(declare-fun temp761_181 () (_ BitVec 64))
(declare-fun temp761_182 () (_ BitVec 64))
(declare-fun temp761_183 () (_ BitVec 64))
(declare-fun temp761_184 () (_ BitVec 64))
(declare-fun temp761_185 () (_ BitVec 64))
(declare-fun temp761_186 () (_ BitVec 64))
(declare-fun temp761_187 () (_ BitVec 64))
(declare-fun temp761_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp761_189 () (_ BitVec 64))
(declare-fun temp761_191 () (_ BitVec 64))
(declare-fun temp761_192 () (_ BitVec 64))
(declare-fun temp761_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp761_193 () (_ BitVec 64))
(declare-fun temp761_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp761_195 () (_ BitVec 64))
(declare-fun temp761_196 () (_ BitVec 64))
(declare-fun temp761_197 () (_ BitVec 64))
(declare-fun temp761_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp761_199 () (_ BitVec 64))
(declare-fun temp761_200 () (_ BitVec 64))
(declare-fun temp761_201 () (_ BitVec 64))
(declare-fun temp761_202 () (_ BitVec 64))
(declare-fun temp761_203 () (_ BitVec 64))
(declare-fun temp761_204 () (_ BitVec 64))
(declare-fun temp761_205 () (_ BitVec 64))
(declare-fun temp761_206 () (_ BitVec 64))
(declare-fun temp761_207 () (_ BitVec 64))
(declare-fun temp761_208 () (_ BitVec 64))
(declare-fun temp761_209 () (_ BitVec 64))
(declare-fun temp761_210 () (_ BitVec 64))
(declare-fun temp761_211 () (_ BitVec 64))
(declare-fun temp761_212 () (_ BitVec 64))
(declare-fun temp761_213 () (_ BitVec 64))
(declare-fun temp761_214 () (_ BitVec 64))
(declare-fun temp761_215 () (_ BitVec 64))
(declare-fun temp761_216 () (_ BitVec 64))
(declare-fun temp761_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp761_218 () (_ BitVec 64))
(declare-fun temp761_220 () (_ BitVec 64))
(declare-fun temp761_221 () (_ BitVec 64))
(declare-fun temp761_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp761_222 () (_ BitVec 64))
(declare-fun temp761_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp761_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp761_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp761_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp761_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp761_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp761_229 () (_ BitVec 64))
(declare-fun temp761_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp761_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp761_232 () (_ BitVec 64))
(declare-fun temp761_233 () (_ BitVec 64))
(declare-fun temp761_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp761_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp761_236 () (_ BitVec 64))
(declare-fun temp761_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp761_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp761_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp761_241 () (_ BitVec 64))
(declare-fun temp761_240 () (_ BitVec 64))
(declare-fun temp761_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp761_243 () (_ BitVec 64))
(declare-fun temp761_244 () (_ BitVec 64))
(declare-fun temp761_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp761_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp761_247 () (_ BitVec 64))
(declare-fun temp761_248 () (_ BitVec 64))
(assert (= temp761_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp761_1)))
(assert (= temp761_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp761_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_3 #x0000000000000000))
(assert (= var79869 temp761_3))
(assert (= temp761_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp761_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_5 #x0000000000000000))
(assert (= var79914 temp761_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp761_6 #x0000000000000000))
(assert (= temp761_7 temp761_6))
(assert (= temp761_8 (select ARGNAME_padding_NAMEEND_VAL temp761_7)))
(assert (= temp761_9 #x0000000000000001))
(assert (= temp761_10 temp761_9))
(assert (= temp761_11 (select ARGNAME_padding_NAMEEND_VAL temp761_10)))
(assert (= temp761_12 #x0000000000000002))
(assert (= temp761_13 temp761_12))
(assert (= temp761_14 (select ARGNAME_padding_NAMEEND_VAL temp761_13)))
(assert (= temp761_15 #x0000000000000003))
(assert (= temp761_16 temp761_15))
(assert (= temp761_17 (select ARGNAME_padding_NAMEEND_VAL temp761_16)))
(assert (= temp761_18 #x0000000000000004))
(assert (= temp761_19 temp761_18))
(assert (= temp761_20 (select ARGNAME_padding_NAMEEND_VAL temp761_19)))
(assert (= temp761_21 #x0000000000000005))
(assert (= temp761_22 temp761_21))
(assert (= temp761_23 (select ARGNAME_padding_NAMEEND_VAL temp761_22)))
(assert (= temp761_24 #x0000000000000000))
(assert (= temp761_25 #x0000000000000000))
(assert (= temp761_26 temp761_25))
(assert (= temp761_27 (select ARGNAME_padding_NAMEEND_VAL temp761_26)))
(assert (= temp761_28 #x0000000000000000))
(assert (= temp761_29 #x0000000000000001))
(assert (= temp761_30 temp761_29))
(assert (= temp761_31 (select ARGNAME_padding_NAMEEND_VAL temp761_30)))
(assert (= temp761_32 #x0000000000000000))
(assert (= temp761_33 #x0000000000000002))
(assert (= temp761_34 temp761_33))
(assert (= temp761_35 (select ARGNAME_padding_NAMEEND_VAL temp761_34)))
(assert (= temp761_36 #x0000000000000000))
(assert (= temp761_37 #x0000000000000003))
(assert (= temp761_38 temp761_37))
(assert (= temp761_39 (select ARGNAME_padding_NAMEEND_VAL temp761_38)))
(assert (= temp761_40 #x0000000000000000))
(assert (= temp761_41 #x0000000000000004))
(assert (= temp761_42 temp761_41))
(assert (= temp761_43 (select ARGNAME_padding_NAMEEND_VAL temp761_42)))
(assert (= temp761_44 #x0000000000000000))
(assert (= temp761_45 #x0000000000000005))
(assert (= temp761_46 temp761_45))
(assert (= temp761_47 (select ARGNAME_padding_NAMEEND_VAL temp761_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp761_27 temp761_24)
             (bvslt temp761_31 temp761_28)
             (bvslt temp761_35 temp761_32)
             (bvslt temp761_39 temp761_36)
             (bvslt temp761_43 temp761_40)
             (bvslt temp761_47 temp761_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_48 #x0000000000000000))
(assert (= var1322786 temp761_48))
(assert (= temp761_49 #x0000000000000000))
(assert (= temp761_50 temp761_49))
(assert (= temp761_51 (select ARGNAME_output_padding_NAMEEND_VAL temp761_50)))
(assert (= temp761_52 #x0000000000000001))
(assert (= temp761_53 temp761_52))
(assert (= temp761_54 (select ARGNAME_output_padding_NAMEEND_VAL temp761_53)))
(assert (= temp761_55 #x0000000000000002))
(assert (= temp761_56 temp761_55))
(assert (= temp761_57 (select ARGNAME_output_padding_NAMEEND_VAL temp761_56)))
(assert (= temp761_58 #x0000000000000003))
(assert (= temp761_59 temp761_58))
(assert (= temp761_60 (select ARGNAME_output_padding_NAMEEND_VAL temp761_59)))
(assert (= temp761_61 #x0000000000000004))
(assert (= temp761_62 temp761_61))
(assert (= temp761_63 (select ARGNAME_output_padding_NAMEEND_VAL temp761_62)))
(assert (= temp761_64 #x0000000000000005))
(assert (= temp761_65 temp761_64))
(assert (= temp761_66 (select ARGNAME_output_padding_NAMEEND_VAL temp761_65)))
(assert (= temp761_67 #x0000000000000000))
(assert (= temp761_68 #x0000000000000000))
(assert (= temp761_69 temp761_68))
(assert (= temp761_70 (select ARGNAME_output_padding_NAMEEND_VAL temp761_69)))
(assert (= temp761_71 #x0000000000000000))
(assert (= temp761_72 #x0000000000000001))
(assert (= temp761_73 temp761_72))
(assert (= temp761_74 (select ARGNAME_output_padding_NAMEEND_VAL temp761_73)))
(assert (= temp761_75 #x0000000000000000))
(assert (= temp761_76 #x0000000000000002))
(assert (= temp761_77 temp761_76))
(assert (= temp761_78 (select ARGNAME_output_padding_NAMEEND_VAL temp761_77)))
(assert (= temp761_79 #x0000000000000000))
(assert (= temp761_80 #x0000000000000003))
(assert (= temp761_81 temp761_80))
(assert (= temp761_82 (select ARGNAME_output_padding_NAMEEND_VAL temp761_81)))
(assert (= temp761_83 #x0000000000000000))
(assert (= temp761_84 #x0000000000000004))
(assert (= temp761_85 temp761_84))
(assert (= temp761_86 (select ARGNAME_output_padding_NAMEEND_VAL temp761_85)))
(assert (= temp761_87 #x0000000000000000))
(assert (= temp761_88 #x0000000000000005))
(assert (= temp761_89 temp761_88))
(assert (= temp761_90 (select ARGNAME_output_padding_NAMEEND_VAL temp761_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp761_70 temp761_67)
             (bvslt temp761_74 temp761_71)
             (bvslt temp761_78 temp761_75)
             (bvslt temp761_82 temp761_79)
             (bvslt temp761_86 temp761_83)
             (bvslt temp761_90 temp761_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_91 #x0000000000000000))
(assert (= var1322797 temp761_91))
(assert (= temp761_92 #x0000000000000000))
(assert (= temp761_93 temp761_92))
(assert (= temp761_94 (select ARGNAME_stride_NAMEEND_VAL temp761_93)))
(assert (= temp761_95 #x0000000000000001))
(assert (= temp761_96 temp761_95))
(assert (= temp761_97 (select ARGNAME_stride_NAMEEND_VAL temp761_96)))
(assert (= temp761_98 #x0000000000000002))
(assert (= temp761_99 temp761_98))
(assert (= temp761_100 (select ARGNAME_stride_NAMEEND_VAL temp761_99)))
(assert (= temp761_101 #x0000000000000003))
(assert (= temp761_102 temp761_101))
(assert (= temp761_103 (select ARGNAME_stride_NAMEEND_VAL temp761_102)))
(assert (= temp761_104 #x0000000000000004))
(assert (= temp761_105 temp761_104))
(assert (= temp761_106 (select ARGNAME_stride_NAMEEND_VAL temp761_105)))
(assert (= temp761_107 #x0000000000000005))
(assert (= temp761_108 temp761_107))
(assert (= temp761_109 (select ARGNAME_stride_NAMEEND_VAL temp761_108)))
(assert (= temp761_110 #x0000000000000000))
(assert (= temp761_111 #x0000000000000000))
(assert (= temp761_112 temp761_111))
(assert (= temp761_113 (select ARGNAME_stride_NAMEEND_VAL temp761_112)))
(assert (= temp761_114 #x0000000000000000))
(assert (= temp761_115 #x0000000000000001))
(assert (= temp761_116 temp761_115))
(assert (= temp761_117 (select ARGNAME_stride_NAMEEND_VAL temp761_116)))
(assert (= temp761_118 #x0000000000000000))
(assert (= temp761_119 #x0000000000000002))
(assert (= temp761_120 temp761_119))
(assert (= temp761_121 (select ARGNAME_stride_NAMEEND_VAL temp761_120)))
(assert (= temp761_122 #x0000000000000000))
(assert (= temp761_123 #x0000000000000003))
(assert (= temp761_124 temp761_123))
(assert (= temp761_125 (select ARGNAME_stride_NAMEEND_VAL temp761_124)))
(assert (= temp761_126 #x0000000000000000))
(assert (= temp761_127 #x0000000000000004))
(assert (= temp761_128 temp761_127))
(assert (= temp761_129 (select ARGNAME_stride_NAMEEND_VAL temp761_128)))
(assert (= temp761_130 #x0000000000000000))
(assert (= temp761_131 #x0000000000000005))
(assert (= temp761_132 temp761_131))
(assert (= temp761_133 (select ARGNAME_stride_NAMEEND_VAL temp761_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp761_113 temp761_110)
             (bvsle temp761_117 temp761_114)
             (bvsle temp761_121 temp761_118)
             (bvsle temp761_125 temp761_122)
             (bvsle temp761_129 temp761_126)
             (bvsle temp761_133 temp761_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_134 #x0000000000000000))
(assert (= var1322807 temp761_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_135 #x0000000000000001))
(assert (= var1322819 temp761_135))
(assert (= temp761_136 #x0000000000000000))
(assert (= var1310898 temp761_136))
(assert (= temp761_137 #x0000000000000000))
(assert (= temp761_138 temp761_137))
(assert (= temp761_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_138)))
(assert (= temp761_140 #x0000000000000001))
(assert (= temp761_141 temp761_140))
(assert (= temp761_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_141)))
(assert (= temp761_143 #x0000000000000002))
(assert (= temp761_144 temp761_143))
(assert (= temp761_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_144)))
(assert (= temp761_146 #x0000000000000003))
(assert (= temp761_147 temp761_146))
(assert (= temp761_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_147)))
(assert (= temp761_149 #x0000000000000004))
(assert (= temp761_150 temp761_149))
(assert (= temp761_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_150)))
(assert (= temp761_152 #x0000000000000005))
(assert (= temp761_153 temp761_152))
(assert (= temp761_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_153)))
(assert (= temp761_156 var1310898))
(assert (= temp761_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_156)))
(assert (= temp761_155 temp761_157))
(assert (= var1322852
   (ite (bvslt temp761_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_158 #x0000000000000000))
(assert (= var1322852 temp761_158))
(assert (= temp761_159 #x0000000000000000))
(assert (= var1310898 temp761_159))
(assert (= temp761_161 var1310898))
(assert (= temp761_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_161)))
(assert (= temp761_160 temp761_162))
(assert (= var1322874 (bvsmod temp761_160 ARGNAME_groups_NAMEEND)))
(assert (= temp761_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp761_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp761_164 #x0000000000000001))
(assert (= var1322875 temp761_164))
(assert (= temp761_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp761_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_166 #x0000000000000001))
(assert (= var1322895 temp761_166))
(assert (= temp761_167 #x0000000000000001))
(assert (= var1311786 temp761_167))
(assert (= temp761_168 #x0000000000000000))
(assert (= temp761_169 temp761_168))
(assert (= temp761_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp761_169)))
(assert (= temp761_171 #x0000000000000001))
(assert (= temp761_172 temp761_171))
(assert (= temp761_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp761_172)))
(assert (= temp761_174 #x0000000000000002))
(assert (= temp761_175 temp761_174))
(assert (= temp761_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp761_175)))
(assert (= temp761_177 #x0000000000000003))
(assert (= temp761_178 temp761_177))
(assert (= temp761_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp761_178)))
(assert (= temp761_180 #x0000000000000004))
(assert (= temp761_181 temp761_180))
(assert (= temp761_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp761_181)))
(assert (= temp761_183 #x0000000000000005))
(assert (= temp761_184 temp761_183))
(assert (= temp761_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp761_184)))
(assert (= temp761_186 #x0000000000000000))
(assert (= temp761_187
   (ite (bvslt var1311786 temp761_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp761_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp761_187)))
(assert (= var1322903 temp761_188))
(assert (bvslt (ite (bvslt var1311786 temp761_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp761_189 #x0000000000000001))
(assert (= var1311786 temp761_189))
(assert (= temp761_191 var1311786))
(assert (= temp761_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_191)))
(assert (= temp761_190 temp761_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp761_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp761_193 #x0000000000000001))
(assert (= var1322908 temp761_193))
(assert (= temp761_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp761_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_195 #x0000000000000001))
(assert (= var1322975 temp761_195))
(assert (= temp761_196 #x0000000000000000))
(assert (= var1310898 temp761_196))
(assert (= temp761_197 #x0000000000000000))
(assert (= temp761_198 temp761_197))
(assert (= temp761_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp761_198)))
(assert (= temp761_200 #x0000000000000001))
(assert (= temp761_201 temp761_200))
(assert (= temp761_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp761_201)))
(assert (= temp761_203 #x0000000000000002))
(assert (= temp761_204 temp761_203))
(assert (= temp761_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp761_204)))
(assert (= temp761_206 #x0000000000000003))
(assert (= temp761_207 temp761_206))
(assert (= temp761_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp761_207)))
(assert (= temp761_209 #x0000000000000004))
(assert (= temp761_210 temp761_209))
(assert (= temp761_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp761_210)))
(assert (= temp761_212 #x0000000000000005))
(assert (= temp761_213 temp761_212))
(assert (= temp761_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp761_213)))
(assert (= temp761_215 #x0000000000000000))
(assert (= temp761_216
   (ite (bvslt var1310898 temp761_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp761_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp761_216)))
(assert (= var1322977 temp761_217))
(assert (bvslt (ite (bvslt var1310898 temp761_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp761_218 #x0000000000000000))
(assert (= var1310898 temp761_218))
(assert (= temp761_220 var1310898))
(assert (= temp761_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp761_220)))
(assert (= temp761_219 temp761_221))
(assert (= var1322980
   (ite (= var1322977 temp761_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp761_222 #x0000000000000001))
(assert (= var1322980 temp761_222))
(assert (= temp761_223 #x0000000000000002))
(assert (= var1848169 temp761_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp761_225 #x0000000000000001))
(assert (= var1323065 temp761_225))
(assert (= temp761_226 #x0000000000000001))
(assert (= var3486735 temp761_226))
(assert (= temp761_227 #x0000000000000001))
(assert (= var3814415 temp761_227))
(assert (= temp761_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp761_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_229 #x0000000000000001))
(assert (= var79986 temp761_229))
(assert (= temp761_230 #x0000000000000001))
(assert (= var80116 temp761_230))
(assert (= var4796905 var80116))
(assert (= temp761_231 #x0000000000000000))
(assert (= var4784306 temp761_231))
(assert (= temp761_232 #x0000000000000000))
(assert (= temp761_233
   (ite (bvslt var4784306 temp761_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp761_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp761_233)))
(assert (= var4796924 temp761_234))
(assert (bvslt (ite (bvslt var4784306 temp761_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp761_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp761_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp761_236 #x0000000000000001))
(assert (= var4796925 temp761_236))
(assert (= temp761_237 #x0000000000000000))
(assert (= var4996927 temp761_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp761_238 #x0000000000000002))
(assert (= var5125763 temp761_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp761_239 #x0000000000000000))
(assert (= var5191324 temp761_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp761_241 #xffffffffffffffff))
(assert (= temp761_240 temp761_241))
(assert (= temp761_242 #x0000000000000001))
(assert (= var66602 temp761_242))
(assert (= temp761_243 #x0000000000000000))
(assert (= temp761_244
   (ite (bvslt var66602 temp761_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp761_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp761_244)))
(assert (= var80523 temp761_245))
(assert (bvslt (ite (bvslt var66602 temp761_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp761_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp761_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp761_247 #x0000000000000000))
(assert (= var80524 temp761_247))
(assert (= temp761_248 #x0000000000000001))
(assert (= var79986 temp761_248))
(model-add temp761_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp761_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp761_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






