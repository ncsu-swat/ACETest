(declare-fun temp92_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp92_2 () (_ BitVec 64))
(declare-fun temp92_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp92_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp92_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp92_6 () (_ BitVec 64))
(declare-fun temp92_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp92_8 () (_ BitVec 64))
(declare-fun temp92_9 () (_ BitVec 64))
(declare-fun temp92_10 () (_ BitVec 64))
(declare-fun temp92_11 () (_ BitVec 64))
(declare-fun temp92_12 () (_ BitVec 64))
(declare-fun temp92_13 () (_ BitVec 64))
(declare-fun temp92_14 () (_ BitVec 64))
(declare-fun temp92_15 () (_ BitVec 64))
(declare-fun temp92_16 () (_ BitVec 64))
(declare-fun temp92_17 () (_ BitVec 64))
(declare-fun temp92_18 () (_ BitVec 64))
(declare-fun temp92_19 () (_ BitVec 64))
(declare-fun temp92_20 () (_ BitVec 64))
(declare-fun temp92_21 () (_ BitVec 64))
(declare-fun temp92_22 () (_ BitVec 64))
(declare-fun temp92_23 () (_ BitVec 64))
(declare-fun temp92_24 () (_ BitVec 64))
(declare-fun temp92_25 () (_ BitVec 64))
(declare-fun temp92_26 () (_ BitVec 64))
(declare-fun temp92_27 () (_ BitVec 64))
(declare-fun temp92_28 () (_ BitVec 64))
(declare-fun temp92_29 () (_ BitVec 64))
(declare-fun temp92_30 () (_ BitVec 64))
(declare-fun temp92_31 () (_ BitVec 64))
(declare-fun temp92_32 () (_ BitVec 64))
(declare-fun temp92_33 () (_ BitVec 64))
(declare-fun temp92_34 () (_ BitVec 64))
(declare-fun temp92_35 () (_ BitVec 64))
(declare-fun temp92_36 () (_ BitVec 64))
(declare-fun temp92_37 () (_ BitVec 64))
(declare-fun temp92_38 () (_ BitVec 64))
(declare-fun temp92_39 () (_ BitVec 64))
(declare-fun temp92_40 () (_ BitVec 64))
(declare-fun temp92_41 () (_ BitVec 64))
(declare-fun temp92_42 () (_ BitVec 64))
(declare-fun temp92_43 () (_ BitVec 64))
(declare-fun temp92_44 () (_ BitVec 64))
(declare-fun temp92_45 () (_ BitVec 64))
(declare-fun temp92_46 () (_ BitVec 64))
(declare-fun temp92_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp92_48 () (_ BitVec 64))
(declare-fun temp92_49 () (_ BitVec 64))
(declare-fun temp92_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp92_51 () (_ BitVec 64))
(declare-fun temp92_52 () (_ BitVec 64))
(declare-fun temp92_53 () (_ BitVec 64))
(declare-fun temp92_54 () (_ BitVec 64))
(declare-fun temp92_55 () (_ BitVec 64))
(declare-fun temp92_56 () (_ BitVec 64))
(declare-fun temp92_57 () (_ BitVec 64))
(declare-fun temp92_58 () (_ BitVec 64))
(declare-fun temp92_59 () (_ BitVec 64))
(declare-fun temp92_60 () (_ BitVec 64))
(declare-fun temp92_61 () (_ BitVec 64))
(declare-fun temp92_62 () (_ BitVec 64))
(declare-fun temp92_63 () (_ BitVec 64))
(declare-fun temp92_64 () (_ BitVec 64))
(declare-fun temp92_65 () (_ BitVec 64))
(declare-fun temp92_66 () (_ BitVec 64))
(declare-fun temp92_67 () (_ BitVec 64))
(declare-fun temp92_68 () (_ BitVec 64))
(declare-fun temp92_69 () (_ BitVec 64))
(declare-fun temp92_70 () (_ BitVec 64))
(declare-fun temp92_71 () (_ BitVec 64))
(declare-fun temp92_72 () (_ BitVec 64))
(declare-fun temp92_73 () (_ BitVec 64))
(declare-fun temp92_74 () (_ BitVec 64))
(declare-fun temp92_75 () (_ BitVec 64))
(declare-fun temp92_76 () (_ BitVec 64))
(declare-fun temp92_77 () (_ BitVec 64))
(declare-fun temp92_78 () (_ BitVec 64))
(declare-fun temp92_79 () (_ BitVec 64))
(declare-fun temp92_80 () (_ BitVec 64))
(declare-fun temp92_81 () (_ BitVec 64))
(declare-fun temp92_82 () (_ BitVec 64))
(declare-fun temp92_83 () (_ BitVec 64))
(declare-fun temp92_84 () (_ BitVec 64))
(declare-fun temp92_85 () (_ BitVec 64))
(declare-fun temp92_86 () (_ BitVec 64))
(declare-fun temp92_87 () (_ BitVec 64))
(declare-fun temp92_88 () (_ BitVec 64))
(declare-fun temp92_89 () (_ BitVec 64))
(declare-fun temp92_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp92_91 () (_ BitVec 64))
(declare-fun temp92_92 () (_ BitVec 64))
(declare-fun temp92_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp92_94 () (_ BitVec 64))
(declare-fun temp92_95 () (_ BitVec 64))
(declare-fun temp92_96 () (_ BitVec 64))
(declare-fun temp92_97 () (_ BitVec 64))
(declare-fun temp92_98 () (_ BitVec 64))
(declare-fun temp92_99 () (_ BitVec 64))
(declare-fun temp92_100 () (_ BitVec 64))
(declare-fun temp92_101 () (_ BitVec 64))
(declare-fun temp92_102 () (_ BitVec 64))
(declare-fun temp92_103 () (_ BitVec 64))
(declare-fun temp92_104 () (_ BitVec 64))
(declare-fun temp92_105 () (_ BitVec 64))
(declare-fun temp92_106 () (_ BitVec 64))
(declare-fun temp92_107 () (_ BitVec 64))
(declare-fun temp92_108 () (_ BitVec 64))
(declare-fun temp92_109 () (_ BitVec 64))
(declare-fun temp92_110 () (_ BitVec 64))
(declare-fun temp92_111 () (_ BitVec 64))
(declare-fun temp92_112 () (_ BitVec 64))
(declare-fun temp92_113 () (_ BitVec 64))
(declare-fun temp92_114 () (_ BitVec 64))
(declare-fun temp92_115 () (_ BitVec 64))
(declare-fun temp92_116 () (_ BitVec 64))
(declare-fun temp92_117 () (_ BitVec 64))
(declare-fun temp92_118 () (_ BitVec 64))
(declare-fun temp92_119 () (_ BitVec 64))
(declare-fun temp92_120 () (_ BitVec 64))
(declare-fun temp92_121 () (_ BitVec 64))
(declare-fun temp92_122 () (_ BitVec 64))
(declare-fun temp92_123 () (_ BitVec 64))
(declare-fun temp92_124 () (_ BitVec 64))
(declare-fun temp92_125 () (_ BitVec 64))
(declare-fun temp92_126 () (_ BitVec 64))
(declare-fun temp92_127 () (_ BitVec 64))
(declare-fun temp92_128 () (_ BitVec 64))
(declare-fun temp92_129 () (_ BitVec 64))
(declare-fun temp92_130 () (_ BitVec 64))
(declare-fun temp92_131 () (_ BitVec 64))
(declare-fun temp92_132 () (_ BitVec 64))
(declare-fun temp92_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp92_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp92_135 () (_ BitVec 64))
(declare-fun temp92_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp92_137 () (_ BitVec 64))
(declare-fun temp92_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp92_139 () (_ BitVec 64))
(declare-fun temp92_140 () (_ BitVec 64))
(declare-fun temp92_141 () (_ BitVec 64))
(declare-fun temp92_142 () (_ BitVec 64))
(declare-fun temp92_143 () (_ BitVec 64))
(declare-fun temp92_144 () (_ BitVec 64))
(declare-fun temp92_145 () (_ BitVec 64))
(declare-fun temp92_146 () (_ BitVec 64))
(declare-fun temp92_147 () (_ BitVec 64))
(declare-fun temp92_148 () (_ BitVec 64))
(declare-fun temp92_149 () (_ BitVec 64))
(declare-fun temp92_150 () (_ BitVec 64))
(declare-fun temp92_151 () (_ BitVec 64))
(declare-fun temp92_152 () (_ BitVec 64))
(declare-fun temp92_153 () (_ BitVec 64))
(declare-fun temp92_154 () (_ BitVec 64))
(declare-fun temp92_156 () (_ BitVec 64))
(declare-fun temp92_157 () (_ BitVec 64))
(declare-fun temp92_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp92_158 () (_ BitVec 64))
(declare-fun temp92_159 () (_ BitVec 64))
(declare-fun temp92_161 () (_ BitVec 64))
(declare-fun temp92_162 () (_ BitVec 64))
(declare-fun temp92_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp92_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp92_164 () (_ BitVec 64))
(declare-fun temp92_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp92_166 () (_ BitVec 64))
(declare-fun temp92_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp92_168 () (_ BitVec 64))
(declare-fun temp92_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp92_170 () (_ BitVec 64))
(declare-fun temp92_171 () (_ BitVec 64))
(declare-fun temp92_172 () (_ BitVec 64))
(declare-fun temp92_173 () (_ BitVec 64))
(declare-fun temp92_174 () (_ BitVec 64))
(declare-fun temp92_175 () (_ BitVec 64))
(declare-fun temp92_176 () (_ BitVec 64))
(declare-fun temp92_177 () (_ BitVec 64))
(declare-fun temp92_178 () (_ BitVec 64))
(declare-fun temp92_179 () (_ BitVec 64))
(declare-fun temp92_180 () (_ BitVec 64))
(declare-fun temp92_181 () (_ BitVec 64))
(declare-fun temp92_182 () (_ BitVec 64))
(declare-fun temp92_183 () (_ BitVec 64))
(declare-fun temp92_184 () (_ BitVec 64))
(declare-fun temp92_185 () (_ BitVec 64))
(declare-fun temp92_186 () (_ BitVec 64))
(declare-fun temp92_187 () (_ BitVec 64))
(declare-fun temp92_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp92_189 () (_ BitVec 64))
(declare-fun temp92_191 () (_ BitVec 64))
(declare-fun temp92_192 () (_ BitVec 64))
(declare-fun temp92_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp92_193 () (_ BitVec 64))
(declare-fun temp92_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp92_195 () (_ BitVec 64))
(declare-fun temp92_196 () (_ BitVec 64))
(declare-fun temp92_197 () (_ BitVec 64))
(declare-fun temp92_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp92_199 () (_ BitVec 64))
(declare-fun temp92_200 () (_ BitVec 64))
(declare-fun temp92_201 () (_ BitVec 64))
(declare-fun temp92_202 () (_ BitVec 64))
(declare-fun temp92_203 () (_ BitVec 64))
(declare-fun temp92_204 () (_ BitVec 64))
(declare-fun temp92_205 () (_ BitVec 64))
(declare-fun temp92_206 () (_ BitVec 64))
(declare-fun temp92_207 () (_ BitVec 64))
(declare-fun temp92_208 () (_ BitVec 64))
(declare-fun temp92_209 () (_ BitVec 64))
(declare-fun temp92_210 () (_ BitVec 64))
(declare-fun temp92_211 () (_ BitVec 64))
(declare-fun temp92_212 () (_ BitVec 64))
(declare-fun temp92_213 () (_ BitVec 64))
(declare-fun temp92_214 () (_ BitVec 64))
(declare-fun temp92_215 () (_ BitVec 64))
(declare-fun temp92_216 () (_ BitVec 64))
(declare-fun temp92_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp92_218 () (_ BitVec 64))
(declare-fun temp92_220 () (_ BitVec 64))
(declare-fun temp92_221 () (_ BitVec 64))
(declare-fun temp92_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp92_222 () (_ BitVec 64))
(declare-fun temp92_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp92_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp92_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp92_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp92_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp92_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp92_229 () (_ BitVec 64))
(declare-fun temp92_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp92_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp92_232 () (_ BitVec 64))
(declare-fun temp92_233 () (_ BitVec 64))
(declare-fun temp92_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp92_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp92_236 () (_ BitVec 64))
(declare-fun temp92_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp92_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp92_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp92_241 () (_ BitVec 64))
(declare-fun temp92_240 () (_ BitVec 64))
(declare-fun temp92_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp92_243 () (_ BitVec 64))
(declare-fun temp92_244 () (_ BitVec 64))
(declare-fun temp92_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp92_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp92_247 () (_ BitVec 64))
(declare-fun temp92_249 () (_ BitVec 64))
(declare-fun temp92_248 () (_ BitVec 64))
(declare-fun temp92_250 () (_ BitVec 64))
(assert (= temp92_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp92_1)))
(assert (= temp92_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp92_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_3 #x0000000000000000))
(assert (= var79869 temp92_3))
(assert (= temp92_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp92_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_5 #x0000000000000000))
(assert (= var79914 temp92_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp92_6 #x0000000000000000))
(assert (= temp92_7 temp92_6))
(assert (= temp92_8 (select ARGNAME_padding_NAMEEND_VAL temp92_7)))
(assert (= temp92_9 #x0000000000000001))
(assert (= temp92_10 temp92_9))
(assert (= temp92_11 (select ARGNAME_padding_NAMEEND_VAL temp92_10)))
(assert (= temp92_12 #x0000000000000002))
(assert (= temp92_13 temp92_12))
(assert (= temp92_14 (select ARGNAME_padding_NAMEEND_VAL temp92_13)))
(assert (= temp92_15 #x0000000000000003))
(assert (= temp92_16 temp92_15))
(assert (= temp92_17 (select ARGNAME_padding_NAMEEND_VAL temp92_16)))
(assert (= temp92_18 #x0000000000000004))
(assert (= temp92_19 temp92_18))
(assert (= temp92_20 (select ARGNAME_padding_NAMEEND_VAL temp92_19)))
(assert (= temp92_21 #x0000000000000005))
(assert (= temp92_22 temp92_21))
(assert (= temp92_23 (select ARGNAME_padding_NAMEEND_VAL temp92_22)))
(assert (= temp92_24 #x0000000000000000))
(assert (= temp92_25 #x0000000000000000))
(assert (= temp92_26 temp92_25))
(assert (= temp92_27 (select ARGNAME_padding_NAMEEND_VAL temp92_26)))
(assert (= temp92_28 #x0000000000000000))
(assert (= temp92_29 #x0000000000000001))
(assert (= temp92_30 temp92_29))
(assert (= temp92_31 (select ARGNAME_padding_NAMEEND_VAL temp92_30)))
(assert (= temp92_32 #x0000000000000000))
(assert (= temp92_33 #x0000000000000002))
(assert (= temp92_34 temp92_33))
(assert (= temp92_35 (select ARGNAME_padding_NAMEEND_VAL temp92_34)))
(assert (= temp92_36 #x0000000000000000))
(assert (= temp92_37 #x0000000000000003))
(assert (= temp92_38 temp92_37))
(assert (= temp92_39 (select ARGNAME_padding_NAMEEND_VAL temp92_38)))
(assert (= temp92_40 #x0000000000000000))
(assert (= temp92_41 #x0000000000000004))
(assert (= temp92_42 temp92_41))
(assert (= temp92_43 (select ARGNAME_padding_NAMEEND_VAL temp92_42)))
(assert (= temp92_44 #x0000000000000000))
(assert (= temp92_45 #x0000000000000005))
(assert (= temp92_46 temp92_45))
(assert (= temp92_47 (select ARGNAME_padding_NAMEEND_VAL temp92_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp92_27 temp92_24)
             (bvslt temp92_31 temp92_28)
             (bvslt temp92_35 temp92_32)
             (bvslt temp92_39 temp92_36)
             (bvslt temp92_43 temp92_40)
             (bvslt temp92_47 temp92_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_48 #x0000000000000000))
(assert (= var1322786 temp92_48))
(assert (= temp92_49 #x0000000000000000))
(assert (= temp92_50 temp92_49))
(assert (= temp92_51 (select ARGNAME_output_padding_NAMEEND_VAL temp92_50)))
(assert (= temp92_52 #x0000000000000001))
(assert (= temp92_53 temp92_52))
(assert (= temp92_54 (select ARGNAME_output_padding_NAMEEND_VAL temp92_53)))
(assert (= temp92_55 #x0000000000000002))
(assert (= temp92_56 temp92_55))
(assert (= temp92_57 (select ARGNAME_output_padding_NAMEEND_VAL temp92_56)))
(assert (= temp92_58 #x0000000000000003))
(assert (= temp92_59 temp92_58))
(assert (= temp92_60 (select ARGNAME_output_padding_NAMEEND_VAL temp92_59)))
(assert (= temp92_61 #x0000000000000004))
(assert (= temp92_62 temp92_61))
(assert (= temp92_63 (select ARGNAME_output_padding_NAMEEND_VAL temp92_62)))
(assert (= temp92_64 #x0000000000000005))
(assert (= temp92_65 temp92_64))
(assert (= temp92_66 (select ARGNAME_output_padding_NAMEEND_VAL temp92_65)))
(assert (= temp92_67 #x0000000000000000))
(assert (= temp92_68 #x0000000000000000))
(assert (= temp92_69 temp92_68))
(assert (= temp92_70 (select ARGNAME_output_padding_NAMEEND_VAL temp92_69)))
(assert (= temp92_71 #x0000000000000000))
(assert (= temp92_72 #x0000000000000001))
(assert (= temp92_73 temp92_72))
(assert (= temp92_74 (select ARGNAME_output_padding_NAMEEND_VAL temp92_73)))
(assert (= temp92_75 #x0000000000000000))
(assert (= temp92_76 #x0000000000000002))
(assert (= temp92_77 temp92_76))
(assert (= temp92_78 (select ARGNAME_output_padding_NAMEEND_VAL temp92_77)))
(assert (= temp92_79 #x0000000000000000))
(assert (= temp92_80 #x0000000000000003))
(assert (= temp92_81 temp92_80))
(assert (= temp92_82 (select ARGNAME_output_padding_NAMEEND_VAL temp92_81)))
(assert (= temp92_83 #x0000000000000000))
(assert (= temp92_84 #x0000000000000004))
(assert (= temp92_85 temp92_84))
(assert (= temp92_86 (select ARGNAME_output_padding_NAMEEND_VAL temp92_85)))
(assert (= temp92_87 #x0000000000000000))
(assert (= temp92_88 #x0000000000000005))
(assert (= temp92_89 temp92_88))
(assert (= temp92_90 (select ARGNAME_output_padding_NAMEEND_VAL temp92_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp92_70 temp92_67)
             (bvslt temp92_74 temp92_71)
             (bvslt temp92_78 temp92_75)
             (bvslt temp92_82 temp92_79)
             (bvslt temp92_86 temp92_83)
             (bvslt temp92_90 temp92_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_91 #x0000000000000000))
(assert (= var1322797 temp92_91))
(assert (= temp92_92 #x0000000000000000))
(assert (= temp92_93 temp92_92))
(assert (= temp92_94 (select ARGNAME_stride_NAMEEND_VAL temp92_93)))
(assert (= temp92_95 #x0000000000000001))
(assert (= temp92_96 temp92_95))
(assert (= temp92_97 (select ARGNAME_stride_NAMEEND_VAL temp92_96)))
(assert (= temp92_98 #x0000000000000002))
(assert (= temp92_99 temp92_98))
(assert (= temp92_100 (select ARGNAME_stride_NAMEEND_VAL temp92_99)))
(assert (= temp92_101 #x0000000000000003))
(assert (= temp92_102 temp92_101))
(assert (= temp92_103 (select ARGNAME_stride_NAMEEND_VAL temp92_102)))
(assert (= temp92_104 #x0000000000000004))
(assert (= temp92_105 temp92_104))
(assert (= temp92_106 (select ARGNAME_stride_NAMEEND_VAL temp92_105)))
(assert (= temp92_107 #x0000000000000005))
(assert (= temp92_108 temp92_107))
(assert (= temp92_109 (select ARGNAME_stride_NAMEEND_VAL temp92_108)))
(assert (= temp92_110 #x0000000000000000))
(assert (= temp92_111 #x0000000000000000))
(assert (= temp92_112 temp92_111))
(assert (= temp92_113 (select ARGNAME_stride_NAMEEND_VAL temp92_112)))
(assert (= temp92_114 #x0000000000000000))
(assert (= temp92_115 #x0000000000000001))
(assert (= temp92_116 temp92_115))
(assert (= temp92_117 (select ARGNAME_stride_NAMEEND_VAL temp92_116)))
(assert (= temp92_118 #x0000000000000000))
(assert (= temp92_119 #x0000000000000002))
(assert (= temp92_120 temp92_119))
(assert (= temp92_121 (select ARGNAME_stride_NAMEEND_VAL temp92_120)))
(assert (= temp92_122 #x0000000000000000))
(assert (= temp92_123 #x0000000000000003))
(assert (= temp92_124 temp92_123))
(assert (= temp92_125 (select ARGNAME_stride_NAMEEND_VAL temp92_124)))
(assert (= temp92_126 #x0000000000000000))
(assert (= temp92_127 #x0000000000000004))
(assert (= temp92_128 temp92_127))
(assert (= temp92_129 (select ARGNAME_stride_NAMEEND_VAL temp92_128)))
(assert (= temp92_130 #x0000000000000000))
(assert (= temp92_131 #x0000000000000005))
(assert (= temp92_132 temp92_131))
(assert (= temp92_133 (select ARGNAME_stride_NAMEEND_VAL temp92_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp92_113 temp92_110)
             (bvsle temp92_117 temp92_114)
             (bvsle temp92_121 temp92_118)
             (bvsle temp92_125 temp92_122)
             (bvsle temp92_129 temp92_126)
             (bvsle temp92_133 temp92_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_134 #x0000000000000000))
(assert (= var1322807 temp92_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_135 #x0000000000000001))
(assert (= var1322819 temp92_135))
(assert (= temp92_136 #x0000000000000000))
(assert (= var1310898 temp92_136))
(assert (= temp92_137 #x0000000000000000))
(assert (= temp92_138 temp92_137))
(assert (= temp92_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_138)))
(assert (= temp92_140 #x0000000000000001))
(assert (= temp92_141 temp92_140))
(assert (= temp92_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_141)))
(assert (= temp92_143 #x0000000000000002))
(assert (= temp92_144 temp92_143))
(assert (= temp92_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_144)))
(assert (= temp92_146 #x0000000000000003))
(assert (= temp92_147 temp92_146))
(assert (= temp92_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_147)))
(assert (= temp92_149 #x0000000000000004))
(assert (= temp92_150 temp92_149))
(assert (= temp92_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_150)))
(assert (= temp92_152 #x0000000000000005))
(assert (= temp92_153 temp92_152))
(assert (= temp92_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_153)))
(assert (= temp92_156 var1310898))
(assert (= temp92_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_156)))
(assert (= temp92_155 temp92_157))
(assert (= var1322852
   (ite (bvslt temp92_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_158 #x0000000000000000))
(assert (= var1322852 temp92_158))
(assert (= temp92_159 #x0000000000000000))
(assert (= var1310898 temp92_159))
(assert (= temp92_161 var1310898))
(assert (= temp92_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_161)))
(assert (= temp92_160 temp92_162))
(assert (= var1322874 (bvsmod temp92_160 ARGNAME_groups_NAMEEND)))
(assert (= temp92_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp92_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp92_164 #x0000000000000001))
(assert (= var1322875 temp92_164))
(assert (= temp92_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp92_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_166 #x0000000000000001))
(assert (= var1322895 temp92_166))
(assert (= temp92_167 #x0000000000000001))
(assert (= var1311786 temp92_167))
(assert (= temp92_168 #x0000000000000000))
(assert (= temp92_169 temp92_168))
(assert (= temp92_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp92_169)))
(assert (= temp92_171 #x0000000000000001))
(assert (= temp92_172 temp92_171))
(assert (= temp92_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp92_172)))
(assert (= temp92_174 #x0000000000000002))
(assert (= temp92_175 temp92_174))
(assert (= temp92_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp92_175)))
(assert (= temp92_177 #x0000000000000003))
(assert (= temp92_178 temp92_177))
(assert (= temp92_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp92_178)))
(assert (= temp92_180 #x0000000000000004))
(assert (= temp92_181 temp92_180))
(assert (= temp92_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp92_181)))
(assert (= temp92_183 #x0000000000000005))
(assert (= temp92_184 temp92_183))
(assert (= temp92_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp92_184)))
(assert (= temp92_186 #x0000000000000000))
(assert (= temp92_187
   (ite (bvslt var1311786 temp92_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp92_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp92_187)))
(assert (= var1322903 temp92_188))
(assert (bvslt (ite (bvslt var1311786 temp92_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp92_189 #x0000000000000001))
(assert (= var1311786 temp92_189))
(assert (= temp92_191 var1311786))
(assert (= temp92_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_191)))
(assert (= temp92_190 temp92_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp92_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp92_193 #x0000000000000001))
(assert (= var1322908 temp92_193))
(assert (= temp92_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp92_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_195 #x0000000000000001))
(assert (= var1322975 temp92_195))
(assert (= temp92_196 #x0000000000000000))
(assert (= var1310898 temp92_196))
(assert (= temp92_197 #x0000000000000000))
(assert (= temp92_198 temp92_197))
(assert (= temp92_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp92_198)))
(assert (= temp92_200 #x0000000000000001))
(assert (= temp92_201 temp92_200))
(assert (= temp92_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp92_201)))
(assert (= temp92_203 #x0000000000000002))
(assert (= temp92_204 temp92_203))
(assert (= temp92_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp92_204)))
(assert (= temp92_206 #x0000000000000003))
(assert (= temp92_207 temp92_206))
(assert (= temp92_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp92_207)))
(assert (= temp92_209 #x0000000000000004))
(assert (= temp92_210 temp92_209))
(assert (= temp92_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp92_210)))
(assert (= temp92_212 #x0000000000000005))
(assert (= temp92_213 temp92_212))
(assert (= temp92_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp92_213)))
(assert (= temp92_215 #x0000000000000000))
(assert (= temp92_216
   (ite (bvslt var1310898 temp92_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp92_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp92_216)))
(assert (= var1322977 temp92_217))
(assert (bvslt (ite (bvslt var1310898 temp92_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp92_218 #x0000000000000000))
(assert (= var1310898 temp92_218))
(assert (= temp92_220 var1310898))
(assert (= temp92_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp92_220)))
(assert (= temp92_219 temp92_221))
(assert (= var1322980
   (ite (= var1322977 temp92_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp92_222 #x0000000000000001))
(assert (= var1322980 temp92_222))
(assert (= temp92_223 #x0000000000000002))
(assert (= var1848169 temp92_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp92_225 #x0000000000000001))
(assert (= var1323065 temp92_225))
(assert (= temp92_226 #x0000000000000001))
(assert (= var3486735 temp92_226))
(assert (= temp92_227 #x0000000000000001))
(assert (= var3814415 temp92_227))
(assert (= temp92_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp92_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_229 #x0000000000000001))
(assert (= var79986 temp92_229))
(assert (= temp92_230 #x0000000000000001))
(assert (= var80116 temp92_230))
(assert (= var4796905 var80116))
(assert (= temp92_231 #x0000000000000000))
(assert (= var4784306 temp92_231))
(assert (= temp92_232 #x0000000000000000))
(assert (= temp92_233
   (ite (bvslt var4784306 temp92_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp92_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp92_233)))
(assert (= var4796924 temp92_234))
(assert (bvslt (ite (bvslt var4784306 temp92_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp92_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp92_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp92_236 #x0000000000000001))
(assert (= var4796925 temp92_236))
(assert (= temp92_237 #x0000000000000000))
(assert (= var4996927 temp92_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp92_238 #x0000000000000002))
(assert (= var5125763 temp92_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_239 #x0000000000000000))
(assert (= var5191324 temp92_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp92_241 #xffffffffffffffff))
(assert (= temp92_240 temp92_241))
(assert (= temp92_242 #x0000000000000001))
(assert (= var66602 temp92_242))
(assert (= temp92_243 #x0000000000000000))
(assert (= temp92_244
   (ite (bvslt var66602 temp92_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp92_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp92_244)))
(assert (= var80523 temp92_245))
(assert (bvslt (ite (bvslt var66602 temp92_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp92_246 #x0000000000000000))
(assert (= var80524 (ite (= var80523 temp92_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp92_247 #x0000000000000001))
(assert (= var80524 temp92_247))
(assert (= temp92_249 #xffffffffffffffff))
(assert (= temp92_248 temp92_249))
(assert (= temp92_250 #x0000000000000001))
(assert (= var79986 temp92_250))
(model-add temp92_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp92_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp92_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






