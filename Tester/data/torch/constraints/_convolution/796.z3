(declare-fun temp1058_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1058_2 () (_ BitVec 64))
(declare-fun temp1058_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1058_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1058_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1058_6 () (_ BitVec 64))
(declare-fun temp1058_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1058_8 () (_ BitVec 64))
(declare-fun temp1058_9 () (_ BitVec 64))
(declare-fun temp1058_10 () (_ BitVec 64))
(declare-fun temp1058_11 () (_ BitVec 64))
(declare-fun temp1058_12 () (_ BitVec 64))
(declare-fun temp1058_13 () (_ BitVec 64))
(declare-fun temp1058_14 () (_ BitVec 64))
(declare-fun temp1058_15 () (_ BitVec 64))
(declare-fun temp1058_16 () (_ BitVec 64))
(declare-fun temp1058_17 () (_ BitVec 64))
(declare-fun temp1058_18 () (_ BitVec 64))
(declare-fun temp1058_19 () (_ BitVec 64))
(declare-fun temp1058_20 () (_ BitVec 64))
(declare-fun temp1058_21 () (_ BitVec 64))
(declare-fun temp1058_22 () (_ BitVec 64))
(declare-fun temp1058_23 () (_ BitVec 64))
(declare-fun temp1058_24 () (_ BitVec 64))
(declare-fun temp1058_25 () (_ BitVec 64))
(declare-fun temp1058_26 () (_ BitVec 64))
(declare-fun temp1058_27 () (_ BitVec 64))
(declare-fun temp1058_28 () (_ BitVec 64))
(declare-fun temp1058_29 () (_ BitVec 64))
(declare-fun temp1058_30 () (_ BitVec 64))
(declare-fun temp1058_31 () (_ BitVec 64))
(declare-fun temp1058_32 () (_ BitVec 64))
(declare-fun temp1058_33 () (_ BitVec 64))
(declare-fun temp1058_34 () (_ BitVec 64))
(declare-fun temp1058_35 () (_ BitVec 64))
(declare-fun temp1058_36 () (_ BitVec 64))
(declare-fun temp1058_37 () (_ BitVec 64))
(declare-fun temp1058_38 () (_ BitVec 64))
(declare-fun temp1058_39 () (_ BitVec 64))
(declare-fun temp1058_40 () (_ BitVec 64))
(declare-fun temp1058_41 () (_ BitVec 64))
(declare-fun temp1058_42 () (_ BitVec 64))
(declare-fun temp1058_43 () (_ BitVec 64))
(declare-fun temp1058_44 () (_ BitVec 64))
(declare-fun temp1058_45 () (_ BitVec 64))
(declare-fun temp1058_46 () (_ BitVec 64))
(declare-fun temp1058_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1058_48 () (_ BitVec 64))
(declare-fun temp1058_49 () (_ BitVec 64))
(declare-fun temp1058_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1058_51 () (_ BitVec 64))
(declare-fun temp1058_52 () (_ BitVec 64))
(declare-fun temp1058_53 () (_ BitVec 64))
(declare-fun temp1058_54 () (_ BitVec 64))
(declare-fun temp1058_55 () (_ BitVec 64))
(declare-fun temp1058_56 () (_ BitVec 64))
(declare-fun temp1058_57 () (_ BitVec 64))
(declare-fun temp1058_58 () (_ BitVec 64))
(declare-fun temp1058_59 () (_ BitVec 64))
(declare-fun temp1058_60 () (_ BitVec 64))
(declare-fun temp1058_61 () (_ BitVec 64))
(declare-fun temp1058_62 () (_ BitVec 64))
(declare-fun temp1058_63 () (_ BitVec 64))
(declare-fun temp1058_64 () (_ BitVec 64))
(declare-fun temp1058_65 () (_ BitVec 64))
(declare-fun temp1058_66 () (_ BitVec 64))
(declare-fun temp1058_67 () (_ BitVec 64))
(declare-fun temp1058_68 () (_ BitVec 64))
(declare-fun temp1058_69 () (_ BitVec 64))
(declare-fun temp1058_70 () (_ BitVec 64))
(declare-fun temp1058_71 () (_ BitVec 64))
(declare-fun temp1058_72 () (_ BitVec 64))
(declare-fun temp1058_73 () (_ BitVec 64))
(declare-fun temp1058_74 () (_ BitVec 64))
(declare-fun temp1058_75 () (_ BitVec 64))
(declare-fun temp1058_76 () (_ BitVec 64))
(declare-fun temp1058_77 () (_ BitVec 64))
(declare-fun temp1058_78 () (_ BitVec 64))
(declare-fun temp1058_79 () (_ BitVec 64))
(declare-fun temp1058_80 () (_ BitVec 64))
(declare-fun temp1058_81 () (_ BitVec 64))
(declare-fun temp1058_82 () (_ BitVec 64))
(declare-fun temp1058_83 () (_ BitVec 64))
(declare-fun temp1058_84 () (_ BitVec 64))
(declare-fun temp1058_85 () (_ BitVec 64))
(declare-fun temp1058_86 () (_ BitVec 64))
(declare-fun temp1058_87 () (_ BitVec 64))
(declare-fun temp1058_88 () (_ BitVec 64))
(declare-fun temp1058_89 () (_ BitVec 64))
(declare-fun temp1058_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1058_91 () (_ BitVec 64))
(declare-fun temp1058_92 () (_ BitVec 64))
(declare-fun temp1058_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1058_94 () (_ BitVec 64))
(declare-fun temp1058_95 () (_ BitVec 64))
(declare-fun temp1058_96 () (_ BitVec 64))
(declare-fun temp1058_97 () (_ BitVec 64))
(declare-fun temp1058_98 () (_ BitVec 64))
(declare-fun temp1058_99 () (_ BitVec 64))
(declare-fun temp1058_100 () (_ BitVec 64))
(declare-fun temp1058_101 () (_ BitVec 64))
(declare-fun temp1058_102 () (_ BitVec 64))
(declare-fun temp1058_103 () (_ BitVec 64))
(declare-fun temp1058_104 () (_ BitVec 64))
(declare-fun temp1058_105 () (_ BitVec 64))
(declare-fun temp1058_106 () (_ BitVec 64))
(declare-fun temp1058_107 () (_ BitVec 64))
(declare-fun temp1058_108 () (_ BitVec 64))
(declare-fun temp1058_109 () (_ BitVec 64))
(declare-fun temp1058_110 () (_ BitVec 64))
(declare-fun temp1058_111 () (_ BitVec 64))
(declare-fun temp1058_112 () (_ BitVec 64))
(declare-fun temp1058_113 () (_ BitVec 64))
(declare-fun temp1058_114 () (_ BitVec 64))
(declare-fun temp1058_115 () (_ BitVec 64))
(declare-fun temp1058_116 () (_ BitVec 64))
(declare-fun temp1058_117 () (_ BitVec 64))
(declare-fun temp1058_118 () (_ BitVec 64))
(declare-fun temp1058_119 () (_ BitVec 64))
(declare-fun temp1058_120 () (_ BitVec 64))
(declare-fun temp1058_121 () (_ BitVec 64))
(declare-fun temp1058_122 () (_ BitVec 64))
(declare-fun temp1058_123 () (_ BitVec 64))
(declare-fun temp1058_124 () (_ BitVec 64))
(declare-fun temp1058_125 () (_ BitVec 64))
(declare-fun temp1058_126 () (_ BitVec 64))
(declare-fun temp1058_127 () (_ BitVec 64))
(declare-fun temp1058_128 () (_ BitVec 64))
(declare-fun temp1058_129 () (_ BitVec 64))
(declare-fun temp1058_130 () (_ BitVec 64))
(declare-fun temp1058_131 () (_ BitVec 64))
(declare-fun temp1058_132 () (_ BitVec 64))
(declare-fun temp1058_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1058_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1058_135 () (_ BitVec 64))
(declare-fun temp1058_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1058_137 () (_ BitVec 64))
(declare-fun temp1058_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1058_139 () (_ BitVec 64))
(declare-fun temp1058_140 () (_ BitVec 64))
(declare-fun temp1058_141 () (_ BitVec 64))
(declare-fun temp1058_142 () (_ BitVec 64))
(declare-fun temp1058_143 () (_ BitVec 64))
(declare-fun temp1058_144 () (_ BitVec 64))
(declare-fun temp1058_145 () (_ BitVec 64))
(declare-fun temp1058_146 () (_ BitVec 64))
(declare-fun temp1058_147 () (_ BitVec 64))
(declare-fun temp1058_148 () (_ BitVec 64))
(declare-fun temp1058_149 () (_ BitVec 64))
(declare-fun temp1058_150 () (_ BitVec 64))
(declare-fun temp1058_151 () (_ BitVec 64))
(declare-fun temp1058_152 () (_ BitVec 64))
(declare-fun temp1058_153 () (_ BitVec 64))
(declare-fun temp1058_154 () (_ BitVec 64))
(declare-fun temp1058_156 () (_ BitVec 64))
(declare-fun temp1058_157 () (_ BitVec 64))
(declare-fun temp1058_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1058_158 () (_ BitVec 64))
(declare-fun temp1058_159 () (_ BitVec 64))
(declare-fun temp1058_161 () (_ BitVec 64))
(declare-fun temp1058_162 () (_ BitVec 64))
(declare-fun temp1058_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1058_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1058_164 () (_ BitVec 64))
(declare-fun temp1058_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1058_166 () (_ BitVec 64))
(declare-fun temp1058_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1058_168 () (_ BitVec 64))
(declare-fun temp1058_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1058_170 () (_ BitVec 64))
(declare-fun temp1058_171 () (_ BitVec 64))
(declare-fun temp1058_172 () (_ BitVec 64))
(declare-fun temp1058_173 () (_ BitVec 64))
(declare-fun temp1058_174 () (_ BitVec 64))
(declare-fun temp1058_175 () (_ BitVec 64))
(declare-fun temp1058_176 () (_ BitVec 64))
(declare-fun temp1058_177 () (_ BitVec 64))
(declare-fun temp1058_178 () (_ BitVec 64))
(declare-fun temp1058_179 () (_ BitVec 64))
(declare-fun temp1058_180 () (_ BitVec 64))
(declare-fun temp1058_181 () (_ BitVec 64))
(declare-fun temp1058_182 () (_ BitVec 64))
(declare-fun temp1058_183 () (_ BitVec 64))
(declare-fun temp1058_184 () (_ BitVec 64))
(declare-fun temp1058_185 () (_ BitVec 64))
(declare-fun temp1058_186 () (_ BitVec 64))
(declare-fun temp1058_187 () (_ BitVec 64))
(declare-fun temp1058_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1058_189 () (_ BitVec 64))
(declare-fun temp1058_191 () (_ BitVec 64))
(declare-fun temp1058_192 () (_ BitVec 64))
(declare-fun temp1058_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1058_193 () (_ BitVec 64))
(declare-fun temp1058_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1058_195 () (_ BitVec 64))
(declare-fun temp1058_196 () (_ BitVec 64))
(declare-fun temp1058_197 () (_ BitVec 64))
(declare-fun temp1058_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1058_199 () (_ BitVec 64))
(declare-fun temp1058_200 () (_ BitVec 64))
(declare-fun temp1058_201 () (_ BitVec 64))
(declare-fun temp1058_202 () (_ BitVec 64))
(declare-fun temp1058_203 () (_ BitVec 64))
(declare-fun temp1058_204 () (_ BitVec 64))
(declare-fun temp1058_205 () (_ BitVec 64))
(declare-fun temp1058_206 () (_ BitVec 64))
(declare-fun temp1058_207 () (_ BitVec 64))
(declare-fun temp1058_208 () (_ BitVec 64))
(declare-fun temp1058_209 () (_ BitVec 64))
(declare-fun temp1058_210 () (_ BitVec 64))
(declare-fun temp1058_211 () (_ BitVec 64))
(declare-fun temp1058_212 () (_ BitVec 64))
(declare-fun temp1058_213 () (_ BitVec 64))
(declare-fun temp1058_214 () (_ BitVec 64))
(declare-fun temp1058_215 () (_ BitVec 64))
(declare-fun temp1058_216 () (_ BitVec 64))
(declare-fun temp1058_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1058_218 () (_ BitVec 64))
(declare-fun temp1058_220 () (_ BitVec 64))
(declare-fun temp1058_221 () (_ BitVec 64))
(declare-fun temp1058_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1058_222 () (_ BitVec 64))
(declare-fun temp1058_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1058_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1058_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1058_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1058_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1058_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1058_229 () (_ BitVec 64))
(declare-fun temp1058_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1058_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1058_232 () (_ BitVec 64))
(declare-fun temp1058_233 () (_ BitVec 64))
(declare-fun temp1058_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1058_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1058_236 () (_ BitVec 64))
(declare-fun temp1058_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1058_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1058_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1058_240 () (_ BitVec 64))
(assert (= temp1058_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1058_1)))
(assert (= temp1058_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1058_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_3 #x0000000000000000))
(assert (= var79869 temp1058_3))
(assert (= temp1058_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1058_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_5 #x0000000000000000))
(assert (= var79914 temp1058_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1058_6 #x0000000000000000))
(assert (= temp1058_7 temp1058_6))
(assert (= temp1058_8 (select ARGNAME_padding_NAMEEND_VAL temp1058_7)))
(assert (= temp1058_9 #x0000000000000001))
(assert (= temp1058_10 temp1058_9))
(assert (= temp1058_11 (select ARGNAME_padding_NAMEEND_VAL temp1058_10)))
(assert (= temp1058_12 #x0000000000000002))
(assert (= temp1058_13 temp1058_12))
(assert (= temp1058_14 (select ARGNAME_padding_NAMEEND_VAL temp1058_13)))
(assert (= temp1058_15 #x0000000000000003))
(assert (= temp1058_16 temp1058_15))
(assert (= temp1058_17 (select ARGNAME_padding_NAMEEND_VAL temp1058_16)))
(assert (= temp1058_18 #x0000000000000004))
(assert (= temp1058_19 temp1058_18))
(assert (= temp1058_20 (select ARGNAME_padding_NAMEEND_VAL temp1058_19)))
(assert (= temp1058_21 #x0000000000000005))
(assert (= temp1058_22 temp1058_21))
(assert (= temp1058_23 (select ARGNAME_padding_NAMEEND_VAL temp1058_22)))
(assert (= temp1058_24 #x0000000000000000))
(assert (= temp1058_25 #x0000000000000000))
(assert (= temp1058_26 temp1058_25))
(assert (= temp1058_27 (select ARGNAME_padding_NAMEEND_VAL temp1058_26)))
(assert (= temp1058_28 #x0000000000000000))
(assert (= temp1058_29 #x0000000000000001))
(assert (= temp1058_30 temp1058_29))
(assert (= temp1058_31 (select ARGNAME_padding_NAMEEND_VAL temp1058_30)))
(assert (= temp1058_32 #x0000000000000000))
(assert (= temp1058_33 #x0000000000000002))
(assert (= temp1058_34 temp1058_33))
(assert (= temp1058_35 (select ARGNAME_padding_NAMEEND_VAL temp1058_34)))
(assert (= temp1058_36 #x0000000000000000))
(assert (= temp1058_37 #x0000000000000003))
(assert (= temp1058_38 temp1058_37))
(assert (= temp1058_39 (select ARGNAME_padding_NAMEEND_VAL temp1058_38)))
(assert (= temp1058_40 #x0000000000000000))
(assert (= temp1058_41 #x0000000000000004))
(assert (= temp1058_42 temp1058_41))
(assert (= temp1058_43 (select ARGNAME_padding_NAMEEND_VAL temp1058_42)))
(assert (= temp1058_44 #x0000000000000000))
(assert (= temp1058_45 #x0000000000000005))
(assert (= temp1058_46 temp1058_45))
(assert (= temp1058_47 (select ARGNAME_padding_NAMEEND_VAL temp1058_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1058_27 temp1058_24)
             (bvslt temp1058_31 temp1058_28)
             (bvslt temp1058_35 temp1058_32)
             (bvslt temp1058_39 temp1058_36)
             (bvslt temp1058_43 temp1058_40)
             (bvslt temp1058_47 temp1058_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_48 #x0000000000000000))
(assert (= var1322786 temp1058_48))
(assert (= temp1058_49 #x0000000000000000))
(assert (= temp1058_50 temp1058_49))
(assert (= temp1058_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_50)))
(assert (= temp1058_52 #x0000000000000001))
(assert (= temp1058_53 temp1058_52))
(assert (= temp1058_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_53)))
(assert (= temp1058_55 #x0000000000000002))
(assert (= temp1058_56 temp1058_55))
(assert (= temp1058_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_56)))
(assert (= temp1058_58 #x0000000000000003))
(assert (= temp1058_59 temp1058_58))
(assert (= temp1058_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_59)))
(assert (= temp1058_61 #x0000000000000004))
(assert (= temp1058_62 temp1058_61))
(assert (= temp1058_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_62)))
(assert (= temp1058_64 #x0000000000000005))
(assert (= temp1058_65 temp1058_64))
(assert (= temp1058_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_65)))
(assert (= temp1058_67 #x0000000000000000))
(assert (= temp1058_68 #x0000000000000000))
(assert (= temp1058_69 temp1058_68))
(assert (= temp1058_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_69)))
(assert (= temp1058_71 #x0000000000000000))
(assert (= temp1058_72 #x0000000000000001))
(assert (= temp1058_73 temp1058_72))
(assert (= temp1058_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_73)))
(assert (= temp1058_75 #x0000000000000000))
(assert (= temp1058_76 #x0000000000000002))
(assert (= temp1058_77 temp1058_76))
(assert (= temp1058_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_77)))
(assert (= temp1058_79 #x0000000000000000))
(assert (= temp1058_80 #x0000000000000003))
(assert (= temp1058_81 temp1058_80))
(assert (= temp1058_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_81)))
(assert (= temp1058_83 #x0000000000000000))
(assert (= temp1058_84 #x0000000000000004))
(assert (= temp1058_85 temp1058_84))
(assert (= temp1058_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_85)))
(assert (= temp1058_87 #x0000000000000000))
(assert (= temp1058_88 #x0000000000000005))
(assert (= temp1058_89 temp1058_88))
(assert (= temp1058_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1058_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1058_70 temp1058_67)
             (bvslt temp1058_74 temp1058_71)
             (bvslt temp1058_78 temp1058_75)
             (bvslt temp1058_82 temp1058_79)
             (bvslt temp1058_86 temp1058_83)
             (bvslt temp1058_90 temp1058_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_91 #x0000000000000000))
(assert (= var1322797 temp1058_91))
(assert (= temp1058_92 #x0000000000000000))
(assert (= temp1058_93 temp1058_92))
(assert (= temp1058_94 (select ARGNAME_stride_NAMEEND_VAL temp1058_93)))
(assert (= temp1058_95 #x0000000000000001))
(assert (= temp1058_96 temp1058_95))
(assert (= temp1058_97 (select ARGNAME_stride_NAMEEND_VAL temp1058_96)))
(assert (= temp1058_98 #x0000000000000002))
(assert (= temp1058_99 temp1058_98))
(assert (= temp1058_100 (select ARGNAME_stride_NAMEEND_VAL temp1058_99)))
(assert (= temp1058_101 #x0000000000000003))
(assert (= temp1058_102 temp1058_101))
(assert (= temp1058_103 (select ARGNAME_stride_NAMEEND_VAL temp1058_102)))
(assert (= temp1058_104 #x0000000000000004))
(assert (= temp1058_105 temp1058_104))
(assert (= temp1058_106 (select ARGNAME_stride_NAMEEND_VAL temp1058_105)))
(assert (= temp1058_107 #x0000000000000005))
(assert (= temp1058_108 temp1058_107))
(assert (= temp1058_109 (select ARGNAME_stride_NAMEEND_VAL temp1058_108)))
(assert (= temp1058_110 #x0000000000000000))
(assert (= temp1058_111 #x0000000000000000))
(assert (= temp1058_112 temp1058_111))
(assert (= temp1058_113 (select ARGNAME_stride_NAMEEND_VAL temp1058_112)))
(assert (= temp1058_114 #x0000000000000000))
(assert (= temp1058_115 #x0000000000000001))
(assert (= temp1058_116 temp1058_115))
(assert (= temp1058_117 (select ARGNAME_stride_NAMEEND_VAL temp1058_116)))
(assert (= temp1058_118 #x0000000000000000))
(assert (= temp1058_119 #x0000000000000002))
(assert (= temp1058_120 temp1058_119))
(assert (= temp1058_121 (select ARGNAME_stride_NAMEEND_VAL temp1058_120)))
(assert (= temp1058_122 #x0000000000000000))
(assert (= temp1058_123 #x0000000000000003))
(assert (= temp1058_124 temp1058_123))
(assert (= temp1058_125 (select ARGNAME_stride_NAMEEND_VAL temp1058_124)))
(assert (= temp1058_126 #x0000000000000000))
(assert (= temp1058_127 #x0000000000000004))
(assert (= temp1058_128 temp1058_127))
(assert (= temp1058_129 (select ARGNAME_stride_NAMEEND_VAL temp1058_128)))
(assert (= temp1058_130 #x0000000000000000))
(assert (= temp1058_131 #x0000000000000005))
(assert (= temp1058_132 temp1058_131))
(assert (= temp1058_133 (select ARGNAME_stride_NAMEEND_VAL temp1058_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1058_113 temp1058_110)
             (bvsle temp1058_117 temp1058_114)
             (bvsle temp1058_121 temp1058_118)
             (bvsle temp1058_125 temp1058_122)
             (bvsle temp1058_129 temp1058_126)
             (bvsle temp1058_133 temp1058_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_134 #x0000000000000000))
(assert (= var1322807 temp1058_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_135 #x0000000000000001))
(assert (= var1322819 temp1058_135))
(assert (= temp1058_136 #x0000000000000000))
(assert (= var1310898 temp1058_136))
(assert (= temp1058_137 #x0000000000000000))
(assert (= temp1058_138 temp1058_137))
(assert (= temp1058_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_138)))
(assert (= temp1058_140 #x0000000000000001))
(assert (= temp1058_141 temp1058_140))
(assert (= temp1058_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_141)))
(assert (= temp1058_143 #x0000000000000002))
(assert (= temp1058_144 temp1058_143))
(assert (= temp1058_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_144)))
(assert (= temp1058_146 #x0000000000000003))
(assert (= temp1058_147 temp1058_146))
(assert (= temp1058_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_147)))
(assert (= temp1058_149 #x0000000000000004))
(assert (= temp1058_150 temp1058_149))
(assert (= temp1058_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_150)))
(assert (= temp1058_152 #x0000000000000005))
(assert (= temp1058_153 temp1058_152))
(assert (= temp1058_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_153)))
(assert (= temp1058_156 var1310898))
(assert (= temp1058_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_156)))
(assert (= temp1058_155 temp1058_157))
(assert (= var1322852
   (ite (bvslt temp1058_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_158 #x0000000000000000))
(assert (= var1322852 temp1058_158))
(assert (= temp1058_159 #x0000000000000000))
(assert (= var1310898 temp1058_159))
(assert (= temp1058_161 var1310898))
(assert (= temp1058_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_161)))
(assert (= temp1058_160 temp1058_162))
(assert (= var1322874 (bvsmod temp1058_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1058_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1058_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1058_164 #x0000000000000001))
(assert (= var1322875 temp1058_164))
(assert (= temp1058_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1058_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_166 #x0000000000000001))
(assert (= var1322895 temp1058_166))
(assert (= temp1058_167 #x0000000000000001))
(assert (= var1311786 temp1058_167))
(assert (= temp1058_168 #x0000000000000000))
(assert (= temp1058_169 temp1058_168))
(assert (= temp1058_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1058_169)))
(assert (= temp1058_171 #x0000000000000001))
(assert (= temp1058_172 temp1058_171))
(assert (= temp1058_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1058_172)))
(assert (= temp1058_174 #x0000000000000002))
(assert (= temp1058_175 temp1058_174))
(assert (= temp1058_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1058_175)))
(assert (= temp1058_177 #x0000000000000003))
(assert (= temp1058_178 temp1058_177))
(assert (= temp1058_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1058_178)))
(assert (= temp1058_180 #x0000000000000004))
(assert (= temp1058_181 temp1058_180))
(assert (= temp1058_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1058_181)))
(assert (= temp1058_183 #x0000000000000005))
(assert (= temp1058_184 temp1058_183))
(assert (= temp1058_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1058_184)))
(assert (= temp1058_186 #x0000000000000000))
(assert (= temp1058_187
   (ite (bvslt var1311786 temp1058_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1058_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1058_187)))
(assert (= var1322903 temp1058_188))
(assert (bvslt (ite (bvslt var1311786 temp1058_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1058_189 #x0000000000000001))
(assert (= var1311786 temp1058_189))
(assert (= temp1058_191 var1311786))
(assert (= temp1058_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_191)))
(assert (= temp1058_190 temp1058_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1058_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1058_193 #x0000000000000001))
(assert (= var1322908 temp1058_193))
(assert (= temp1058_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1058_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_195 #x0000000000000001))
(assert (= var1322975 temp1058_195))
(assert (= temp1058_196 #x0000000000000000))
(assert (= var1310898 temp1058_196))
(assert (= temp1058_197 #x0000000000000000))
(assert (= temp1058_198 temp1058_197))
(assert (= temp1058_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1058_198)))
(assert (= temp1058_200 #x0000000000000001))
(assert (= temp1058_201 temp1058_200))
(assert (= temp1058_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1058_201)))
(assert (= temp1058_203 #x0000000000000002))
(assert (= temp1058_204 temp1058_203))
(assert (= temp1058_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1058_204)))
(assert (= temp1058_206 #x0000000000000003))
(assert (= temp1058_207 temp1058_206))
(assert (= temp1058_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1058_207)))
(assert (= temp1058_209 #x0000000000000004))
(assert (= temp1058_210 temp1058_209))
(assert (= temp1058_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1058_210)))
(assert (= temp1058_212 #x0000000000000005))
(assert (= temp1058_213 temp1058_212))
(assert (= temp1058_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1058_213)))
(assert (= temp1058_215 #x0000000000000000))
(assert (= temp1058_216
   (ite (bvslt var1310898 temp1058_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1058_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1058_216)))
(assert (= var1322977 temp1058_217))
(assert (bvslt (ite (bvslt var1310898 temp1058_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1058_218 #x0000000000000000))
(assert (= var1310898 temp1058_218))
(assert (= temp1058_220 var1310898))
(assert (= temp1058_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_220)))
(assert (= temp1058_219 temp1058_221))
(assert (= var1322980
   (ite (= var1322977 temp1058_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1058_222 #x0000000000000001))
(assert (= var1322980 temp1058_222))
(assert (= temp1058_223 #x0000000000000002))
(assert (= var1848169 temp1058_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1058_225 #x0000000000000001))
(assert (= var1323065 temp1058_225))
(assert (= temp1058_226 #x0000000000000001))
(assert (= var3486735 temp1058_226))
(assert (= temp1058_227 #x0000000000000001))
(assert (= var3814415 temp1058_227))
(assert (= temp1058_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1058_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_229 #x0000000000000001))
(assert (= var79986 temp1058_229))
(assert (= temp1058_230 #x0000000000000001))
(assert (= var80116 temp1058_230))
(assert (= var4796905 var80116))
(assert (= temp1058_231 #x0000000000000000))
(assert (= var4784306 temp1058_231))
(assert (= temp1058_232 #x0000000000000000))
(assert (= temp1058_233
   (ite (bvslt var4784306 temp1058_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1058_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1058_233)))
(assert (= var4796924 temp1058_234))
(assert (bvslt (ite (bvslt var4784306 temp1058_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1058_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1058_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1058_236 #x0000000000000001))
(assert (= var4796925 temp1058_236))
(assert (= temp1058_237 #x0000000000000000))
(assert (= var4996927 temp1058_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1058_238 #x0000000000000002))
(assert (= var5125763 temp1058_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_239 #x0000000000000000))
(assert (= var5191324 temp1058_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1058_240 #x0000000000000001))
(assert (= var79986 temp1058_240))
(model-add temp1058_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1058_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1058_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






