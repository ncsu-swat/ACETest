(declare-fun temp76_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp76_2 () (_ BitVec 64))
(declare-fun temp76_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp76_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp76_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp76_6 () (_ BitVec 64))
(declare-fun temp76_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76_8 () (_ BitVec 64))
(declare-fun temp76_9 () (_ BitVec 64))
(declare-fun temp76_10 () (_ BitVec 64))
(declare-fun temp76_11 () (_ BitVec 64))
(declare-fun temp76_12 () (_ BitVec 64))
(declare-fun temp76_13 () (_ BitVec 64))
(declare-fun temp76_14 () (_ BitVec 64))
(declare-fun temp76_15 () (_ BitVec 64))
(declare-fun temp76_16 () (_ BitVec 64))
(declare-fun temp76_17 () (_ BitVec 64))
(declare-fun temp76_18 () (_ BitVec 64))
(declare-fun temp76_19 () (_ BitVec 64))
(declare-fun temp76_20 () (_ BitVec 64))
(declare-fun temp76_21 () (_ BitVec 64))
(declare-fun temp76_22 () (_ BitVec 64))
(declare-fun temp76_23 () (_ BitVec 64))
(declare-fun temp76_24 () (_ BitVec 64))
(declare-fun temp76_25 () (_ BitVec 64))
(declare-fun temp76_26 () (_ BitVec 64))
(declare-fun temp76_27 () (_ BitVec 64))
(declare-fun temp76_28 () (_ BitVec 64))
(declare-fun temp76_29 () (_ BitVec 64))
(declare-fun temp76_30 () (_ BitVec 64))
(declare-fun temp76_31 () (_ BitVec 64))
(declare-fun temp76_32 () (_ BitVec 64))
(declare-fun temp76_33 () (_ BitVec 64))
(declare-fun temp76_34 () (_ BitVec 64))
(declare-fun temp76_35 () (_ BitVec 64))
(declare-fun temp76_36 () (_ BitVec 64))
(declare-fun temp76_37 () (_ BitVec 64))
(declare-fun temp76_38 () (_ BitVec 64))
(declare-fun temp76_39 () (_ BitVec 64))
(declare-fun temp76_40 () (_ BitVec 64))
(declare-fun temp76_41 () (_ BitVec 64))
(declare-fun temp76_42 () (_ BitVec 64))
(declare-fun temp76_43 () (_ BitVec 64))
(declare-fun temp76_44 () (_ BitVec 64))
(declare-fun temp76_45 () (_ BitVec 64))
(declare-fun temp76_46 () (_ BitVec 64))
(declare-fun temp76_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp76_48 () (_ BitVec 64))
(declare-fun temp76_49 () (_ BitVec 64))
(declare-fun temp76_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76_51 () (_ BitVec 64))
(declare-fun temp76_52 () (_ BitVec 64))
(declare-fun temp76_53 () (_ BitVec 64))
(declare-fun temp76_54 () (_ BitVec 64))
(declare-fun temp76_55 () (_ BitVec 64))
(declare-fun temp76_56 () (_ BitVec 64))
(declare-fun temp76_57 () (_ BitVec 64))
(declare-fun temp76_58 () (_ BitVec 64))
(declare-fun temp76_59 () (_ BitVec 64))
(declare-fun temp76_60 () (_ BitVec 64))
(declare-fun temp76_61 () (_ BitVec 64))
(declare-fun temp76_62 () (_ BitVec 64))
(declare-fun temp76_63 () (_ BitVec 64))
(declare-fun temp76_64 () (_ BitVec 64))
(declare-fun temp76_65 () (_ BitVec 64))
(declare-fun temp76_66 () (_ BitVec 64))
(declare-fun temp76_67 () (_ BitVec 64))
(declare-fun temp76_68 () (_ BitVec 64))
(declare-fun temp76_69 () (_ BitVec 64))
(declare-fun temp76_70 () (_ BitVec 64))
(declare-fun temp76_71 () (_ BitVec 64))
(declare-fun temp76_72 () (_ BitVec 64))
(declare-fun temp76_73 () (_ BitVec 64))
(declare-fun temp76_74 () (_ BitVec 64))
(declare-fun temp76_75 () (_ BitVec 64))
(declare-fun temp76_76 () (_ BitVec 64))
(declare-fun temp76_77 () (_ BitVec 64))
(declare-fun temp76_78 () (_ BitVec 64))
(declare-fun temp76_79 () (_ BitVec 64))
(declare-fun temp76_80 () (_ BitVec 64))
(declare-fun temp76_81 () (_ BitVec 64))
(declare-fun temp76_82 () (_ BitVec 64))
(declare-fun temp76_83 () (_ BitVec 64))
(declare-fun temp76_84 () (_ BitVec 64))
(declare-fun temp76_85 () (_ BitVec 64))
(declare-fun temp76_86 () (_ BitVec 64))
(declare-fun temp76_87 () (_ BitVec 64))
(declare-fun temp76_88 () (_ BitVec 64))
(declare-fun temp76_89 () (_ BitVec 64))
(declare-fun temp76_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp76_91 () (_ BitVec 64))
(declare-fun temp76_92 () (_ BitVec 64))
(declare-fun temp76_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76_94 () (_ BitVec 64))
(declare-fun temp76_95 () (_ BitVec 64))
(declare-fun temp76_96 () (_ BitVec 64))
(declare-fun temp76_97 () (_ BitVec 64))
(declare-fun temp76_98 () (_ BitVec 64))
(declare-fun temp76_99 () (_ BitVec 64))
(declare-fun temp76_100 () (_ BitVec 64))
(declare-fun temp76_101 () (_ BitVec 64))
(declare-fun temp76_102 () (_ BitVec 64))
(declare-fun temp76_103 () (_ BitVec 64))
(declare-fun temp76_104 () (_ BitVec 64))
(declare-fun temp76_105 () (_ BitVec 64))
(declare-fun temp76_106 () (_ BitVec 64))
(declare-fun temp76_107 () (_ BitVec 64))
(declare-fun temp76_108 () (_ BitVec 64))
(declare-fun temp76_109 () (_ BitVec 64))
(declare-fun temp76_110 () (_ BitVec 64))
(declare-fun temp76_111 () (_ BitVec 64))
(declare-fun temp76_112 () (_ BitVec 64))
(declare-fun temp76_113 () (_ BitVec 64))
(declare-fun temp76_114 () (_ BitVec 64))
(declare-fun temp76_115 () (_ BitVec 64))
(declare-fun temp76_116 () (_ BitVec 64))
(declare-fun temp76_117 () (_ BitVec 64))
(declare-fun temp76_118 () (_ BitVec 64))
(declare-fun temp76_119 () (_ BitVec 64))
(declare-fun temp76_120 () (_ BitVec 64))
(declare-fun temp76_121 () (_ BitVec 64))
(declare-fun temp76_122 () (_ BitVec 64))
(declare-fun temp76_123 () (_ BitVec 64))
(declare-fun temp76_124 () (_ BitVec 64))
(declare-fun temp76_125 () (_ BitVec 64))
(declare-fun temp76_126 () (_ BitVec 64))
(declare-fun temp76_127 () (_ BitVec 64))
(declare-fun temp76_128 () (_ BitVec 64))
(declare-fun temp76_129 () (_ BitVec 64))
(declare-fun temp76_130 () (_ BitVec 64))
(declare-fun temp76_131 () (_ BitVec 64))
(declare-fun temp76_132 () (_ BitVec 64))
(declare-fun temp76_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp76_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp76_135 () (_ BitVec 64))
(declare-fun temp76_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp76_137 () (_ BitVec 64))
(declare-fun temp76_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76_139 () (_ BitVec 64))
(declare-fun temp76_140 () (_ BitVec 64))
(declare-fun temp76_141 () (_ BitVec 64))
(declare-fun temp76_142 () (_ BitVec 64))
(declare-fun temp76_143 () (_ BitVec 64))
(declare-fun temp76_144 () (_ BitVec 64))
(declare-fun temp76_145 () (_ BitVec 64))
(declare-fun temp76_146 () (_ BitVec 64))
(declare-fun temp76_147 () (_ BitVec 64))
(declare-fun temp76_148 () (_ BitVec 64))
(declare-fun temp76_149 () (_ BitVec 64))
(declare-fun temp76_150 () (_ BitVec 64))
(declare-fun temp76_151 () (_ BitVec 64))
(declare-fun temp76_152 () (_ BitVec 64))
(declare-fun temp76_153 () (_ BitVec 64))
(declare-fun temp76_154 () (_ BitVec 64))
(declare-fun temp76_156 () (_ BitVec 64))
(declare-fun temp76_157 () (_ BitVec 64))
(declare-fun temp76_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp76_158 () (_ BitVec 64))
(declare-fun temp76_159 () (_ BitVec 64))
(declare-fun temp76_161 () (_ BitVec 64))
(declare-fun temp76_162 () (_ BitVec 64))
(declare-fun temp76_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp76_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp76_164 () (_ BitVec 64))
(declare-fun temp76_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp76_166 () (_ BitVec 64))
(declare-fun temp76_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp76_168 () (_ BitVec 64))
(declare-fun temp76_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76_170 () (_ BitVec 64))
(declare-fun temp76_171 () (_ BitVec 64))
(declare-fun temp76_172 () (_ BitVec 64))
(declare-fun temp76_173 () (_ BitVec 64))
(declare-fun temp76_174 () (_ BitVec 64))
(declare-fun temp76_175 () (_ BitVec 64))
(declare-fun temp76_176 () (_ BitVec 64))
(declare-fun temp76_177 () (_ BitVec 64))
(declare-fun temp76_178 () (_ BitVec 64))
(declare-fun temp76_179 () (_ BitVec 64))
(declare-fun temp76_180 () (_ BitVec 64))
(declare-fun temp76_181 () (_ BitVec 64))
(declare-fun temp76_182 () (_ BitVec 64))
(declare-fun temp76_183 () (_ BitVec 64))
(declare-fun temp76_184 () (_ BitVec 64))
(declare-fun temp76_185 () (_ BitVec 64))
(declare-fun temp76_186 () (_ BitVec 64))
(declare-fun temp76_187 () (_ BitVec 64))
(declare-fun temp76_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp76_189 () (_ BitVec 64))
(declare-fun temp76_191 () (_ BitVec 64))
(declare-fun temp76_192 () (_ BitVec 64))
(declare-fun temp76_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp76_193 () (_ BitVec 64))
(declare-fun temp76_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp76_195 () (_ BitVec 64))
(declare-fun temp76_196 () (_ BitVec 64))
(declare-fun temp76_197 () (_ BitVec 64))
(declare-fun temp76_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76_199 () (_ BitVec 64))
(declare-fun temp76_200 () (_ BitVec 64))
(declare-fun temp76_201 () (_ BitVec 64))
(declare-fun temp76_202 () (_ BitVec 64))
(declare-fun temp76_203 () (_ BitVec 64))
(declare-fun temp76_204 () (_ BitVec 64))
(declare-fun temp76_205 () (_ BitVec 64))
(declare-fun temp76_206 () (_ BitVec 64))
(declare-fun temp76_207 () (_ BitVec 64))
(declare-fun temp76_208 () (_ BitVec 64))
(declare-fun temp76_209 () (_ BitVec 64))
(declare-fun temp76_210 () (_ BitVec 64))
(declare-fun temp76_211 () (_ BitVec 64))
(declare-fun temp76_212 () (_ BitVec 64))
(declare-fun temp76_213 () (_ BitVec 64))
(declare-fun temp76_214 () (_ BitVec 64))
(declare-fun temp76_215 () (_ BitVec 64))
(declare-fun temp76_216 () (_ BitVec 64))
(declare-fun temp76_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp76_218 () (_ BitVec 64))
(declare-fun temp76_220 () (_ BitVec 64))
(declare-fun temp76_221 () (_ BitVec 64))
(declare-fun temp76_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp76_222 () (_ BitVec 64))
(declare-fun temp76_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp76_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp76_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp76_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp76_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp76_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp76_229 () (_ BitVec 64))
(declare-fun temp76_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp76_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp76_232 () (_ BitVec 64))
(declare-fun temp76_233 () (_ BitVec 64))
(declare-fun temp76_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp76_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp76_236 () (_ BitVec 64))
(declare-fun temp76_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp76_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp76_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp76_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp76_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp76_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp76_243 () (_ BitVec 64))
(assert (= temp76_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp76_1)))
(assert (= temp76_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp76_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_3 #x0000000000000000))
(assert (= var79869 temp76_3))
(assert (= temp76_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp76_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_5 #x0000000000000000))
(assert (= var79914 temp76_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp76_6 #x0000000000000000))
(assert (= temp76_7 temp76_6))
(assert (= temp76_8 (select ARGNAME_padding_NAMEEND_VAL temp76_7)))
(assert (= temp76_9 #x0000000000000001))
(assert (= temp76_10 temp76_9))
(assert (= temp76_11 (select ARGNAME_padding_NAMEEND_VAL temp76_10)))
(assert (= temp76_12 #x0000000000000002))
(assert (= temp76_13 temp76_12))
(assert (= temp76_14 (select ARGNAME_padding_NAMEEND_VAL temp76_13)))
(assert (= temp76_15 #x0000000000000003))
(assert (= temp76_16 temp76_15))
(assert (= temp76_17 (select ARGNAME_padding_NAMEEND_VAL temp76_16)))
(assert (= temp76_18 #x0000000000000004))
(assert (= temp76_19 temp76_18))
(assert (= temp76_20 (select ARGNAME_padding_NAMEEND_VAL temp76_19)))
(assert (= temp76_21 #x0000000000000005))
(assert (= temp76_22 temp76_21))
(assert (= temp76_23 (select ARGNAME_padding_NAMEEND_VAL temp76_22)))
(assert (= temp76_24 #x0000000000000000))
(assert (= temp76_25 #x0000000000000000))
(assert (= temp76_26 temp76_25))
(assert (= temp76_27 (select ARGNAME_padding_NAMEEND_VAL temp76_26)))
(assert (= temp76_28 #x0000000000000000))
(assert (= temp76_29 #x0000000000000001))
(assert (= temp76_30 temp76_29))
(assert (= temp76_31 (select ARGNAME_padding_NAMEEND_VAL temp76_30)))
(assert (= temp76_32 #x0000000000000000))
(assert (= temp76_33 #x0000000000000002))
(assert (= temp76_34 temp76_33))
(assert (= temp76_35 (select ARGNAME_padding_NAMEEND_VAL temp76_34)))
(assert (= temp76_36 #x0000000000000000))
(assert (= temp76_37 #x0000000000000003))
(assert (= temp76_38 temp76_37))
(assert (= temp76_39 (select ARGNAME_padding_NAMEEND_VAL temp76_38)))
(assert (= temp76_40 #x0000000000000000))
(assert (= temp76_41 #x0000000000000004))
(assert (= temp76_42 temp76_41))
(assert (= temp76_43 (select ARGNAME_padding_NAMEEND_VAL temp76_42)))
(assert (= temp76_44 #x0000000000000000))
(assert (= temp76_45 #x0000000000000005))
(assert (= temp76_46 temp76_45))
(assert (= temp76_47 (select ARGNAME_padding_NAMEEND_VAL temp76_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp76_27 temp76_24)
             (bvslt temp76_31 temp76_28)
             (bvslt temp76_35 temp76_32)
             (bvslt temp76_39 temp76_36)
             (bvslt temp76_43 temp76_40)
             (bvslt temp76_47 temp76_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_48 #x0000000000000000))
(assert (= var1322786 temp76_48))
(assert (= temp76_49 #x0000000000000000))
(assert (= temp76_50 temp76_49))
(assert (= temp76_51 (select ARGNAME_output_padding_NAMEEND_VAL temp76_50)))
(assert (= temp76_52 #x0000000000000001))
(assert (= temp76_53 temp76_52))
(assert (= temp76_54 (select ARGNAME_output_padding_NAMEEND_VAL temp76_53)))
(assert (= temp76_55 #x0000000000000002))
(assert (= temp76_56 temp76_55))
(assert (= temp76_57 (select ARGNAME_output_padding_NAMEEND_VAL temp76_56)))
(assert (= temp76_58 #x0000000000000003))
(assert (= temp76_59 temp76_58))
(assert (= temp76_60 (select ARGNAME_output_padding_NAMEEND_VAL temp76_59)))
(assert (= temp76_61 #x0000000000000004))
(assert (= temp76_62 temp76_61))
(assert (= temp76_63 (select ARGNAME_output_padding_NAMEEND_VAL temp76_62)))
(assert (= temp76_64 #x0000000000000005))
(assert (= temp76_65 temp76_64))
(assert (= temp76_66 (select ARGNAME_output_padding_NAMEEND_VAL temp76_65)))
(assert (= temp76_67 #x0000000000000000))
(assert (= temp76_68 #x0000000000000000))
(assert (= temp76_69 temp76_68))
(assert (= temp76_70 (select ARGNAME_output_padding_NAMEEND_VAL temp76_69)))
(assert (= temp76_71 #x0000000000000000))
(assert (= temp76_72 #x0000000000000001))
(assert (= temp76_73 temp76_72))
(assert (= temp76_74 (select ARGNAME_output_padding_NAMEEND_VAL temp76_73)))
(assert (= temp76_75 #x0000000000000000))
(assert (= temp76_76 #x0000000000000002))
(assert (= temp76_77 temp76_76))
(assert (= temp76_78 (select ARGNAME_output_padding_NAMEEND_VAL temp76_77)))
(assert (= temp76_79 #x0000000000000000))
(assert (= temp76_80 #x0000000000000003))
(assert (= temp76_81 temp76_80))
(assert (= temp76_82 (select ARGNAME_output_padding_NAMEEND_VAL temp76_81)))
(assert (= temp76_83 #x0000000000000000))
(assert (= temp76_84 #x0000000000000004))
(assert (= temp76_85 temp76_84))
(assert (= temp76_86 (select ARGNAME_output_padding_NAMEEND_VAL temp76_85)))
(assert (= temp76_87 #x0000000000000000))
(assert (= temp76_88 #x0000000000000005))
(assert (= temp76_89 temp76_88))
(assert (= temp76_90 (select ARGNAME_output_padding_NAMEEND_VAL temp76_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp76_70 temp76_67)
             (bvslt temp76_74 temp76_71)
             (bvslt temp76_78 temp76_75)
             (bvslt temp76_82 temp76_79)
             (bvslt temp76_86 temp76_83)
             (bvslt temp76_90 temp76_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_91 #x0000000000000000))
(assert (= var1322797 temp76_91))
(assert (= temp76_92 #x0000000000000000))
(assert (= temp76_93 temp76_92))
(assert (= temp76_94 (select ARGNAME_stride_NAMEEND_VAL temp76_93)))
(assert (= temp76_95 #x0000000000000001))
(assert (= temp76_96 temp76_95))
(assert (= temp76_97 (select ARGNAME_stride_NAMEEND_VAL temp76_96)))
(assert (= temp76_98 #x0000000000000002))
(assert (= temp76_99 temp76_98))
(assert (= temp76_100 (select ARGNAME_stride_NAMEEND_VAL temp76_99)))
(assert (= temp76_101 #x0000000000000003))
(assert (= temp76_102 temp76_101))
(assert (= temp76_103 (select ARGNAME_stride_NAMEEND_VAL temp76_102)))
(assert (= temp76_104 #x0000000000000004))
(assert (= temp76_105 temp76_104))
(assert (= temp76_106 (select ARGNAME_stride_NAMEEND_VAL temp76_105)))
(assert (= temp76_107 #x0000000000000005))
(assert (= temp76_108 temp76_107))
(assert (= temp76_109 (select ARGNAME_stride_NAMEEND_VAL temp76_108)))
(assert (= temp76_110 #x0000000000000000))
(assert (= temp76_111 #x0000000000000000))
(assert (= temp76_112 temp76_111))
(assert (= temp76_113 (select ARGNAME_stride_NAMEEND_VAL temp76_112)))
(assert (= temp76_114 #x0000000000000000))
(assert (= temp76_115 #x0000000000000001))
(assert (= temp76_116 temp76_115))
(assert (= temp76_117 (select ARGNAME_stride_NAMEEND_VAL temp76_116)))
(assert (= temp76_118 #x0000000000000000))
(assert (= temp76_119 #x0000000000000002))
(assert (= temp76_120 temp76_119))
(assert (= temp76_121 (select ARGNAME_stride_NAMEEND_VAL temp76_120)))
(assert (= temp76_122 #x0000000000000000))
(assert (= temp76_123 #x0000000000000003))
(assert (= temp76_124 temp76_123))
(assert (= temp76_125 (select ARGNAME_stride_NAMEEND_VAL temp76_124)))
(assert (= temp76_126 #x0000000000000000))
(assert (= temp76_127 #x0000000000000004))
(assert (= temp76_128 temp76_127))
(assert (= temp76_129 (select ARGNAME_stride_NAMEEND_VAL temp76_128)))
(assert (= temp76_130 #x0000000000000000))
(assert (= temp76_131 #x0000000000000005))
(assert (= temp76_132 temp76_131))
(assert (= temp76_133 (select ARGNAME_stride_NAMEEND_VAL temp76_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp76_113 temp76_110)
             (bvsle temp76_117 temp76_114)
             (bvsle temp76_121 temp76_118)
             (bvsle temp76_125 temp76_122)
             (bvsle temp76_129 temp76_126)
             (bvsle temp76_133 temp76_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_134 #x0000000000000000))
(assert (= var1322807 temp76_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_135 #x0000000000000001))
(assert (= var1322819 temp76_135))
(assert (= temp76_136 #x0000000000000000))
(assert (= var1310898 temp76_136))
(assert (= temp76_137 #x0000000000000000))
(assert (= temp76_138 temp76_137))
(assert (= temp76_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_138)))
(assert (= temp76_140 #x0000000000000001))
(assert (= temp76_141 temp76_140))
(assert (= temp76_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_141)))
(assert (= temp76_143 #x0000000000000002))
(assert (= temp76_144 temp76_143))
(assert (= temp76_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_144)))
(assert (= temp76_146 #x0000000000000003))
(assert (= temp76_147 temp76_146))
(assert (= temp76_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_147)))
(assert (= temp76_149 #x0000000000000004))
(assert (= temp76_150 temp76_149))
(assert (= temp76_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_150)))
(assert (= temp76_152 #x0000000000000005))
(assert (= temp76_153 temp76_152))
(assert (= temp76_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_153)))
(assert (= temp76_156 var1310898))
(assert (= temp76_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_156)))
(assert (= temp76_155 temp76_157))
(assert (= var1322852
   (ite (bvslt temp76_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_158 #x0000000000000000))
(assert (= var1322852 temp76_158))
(assert (= temp76_159 #x0000000000000000))
(assert (= var1310898 temp76_159))
(assert (= temp76_161 var1310898))
(assert (= temp76_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_161)))
(assert (= temp76_160 temp76_162))
(assert (= var1322874 (bvsmod temp76_160 ARGNAME_groups_NAMEEND)))
(assert (= temp76_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp76_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp76_164 #x0000000000000001))
(assert (= var1322875 temp76_164))
(assert (= temp76_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp76_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_166 #x0000000000000001))
(assert (= var1322895 temp76_166))
(assert (= temp76_167 #x0000000000000001))
(assert (= var1311786 temp76_167))
(assert (= temp76_168 #x0000000000000000))
(assert (= temp76_169 temp76_168))
(assert (= temp76_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_169)))
(assert (= temp76_171 #x0000000000000001))
(assert (= temp76_172 temp76_171))
(assert (= temp76_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_172)))
(assert (= temp76_174 #x0000000000000002))
(assert (= temp76_175 temp76_174))
(assert (= temp76_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_175)))
(assert (= temp76_177 #x0000000000000003))
(assert (= temp76_178 temp76_177))
(assert (= temp76_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_178)))
(assert (= temp76_180 #x0000000000000004))
(assert (= temp76_181 temp76_180))
(assert (= temp76_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_181)))
(assert (= temp76_183 #x0000000000000005))
(assert (= temp76_184 temp76_183))
(assert (= temp76_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_184)))
(assert (= temp76_186 #x0000000000000000))
(assert (= temp76_187
   (ite (bvslt var1311786 temp76_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp76_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_187)))
(assert (= var1322903 temp76_188))
(assert (bvslt (ite (bvslt var1311786 temp76_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp76_189 #x0000000000000001))
(assert (= var1311786 temp76_189))
(assert (= temp76_191 var1311786))
(assert (= temp76_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_191)))
(assert (= temp76_190 temp76_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp76_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp76_193 #x0000000000000001))
(assert (= var1322908 temp76_193))
(assert (= temp76_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp76_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_195 #x0000000000000001))
(assert (= var1322975 temp76_195))
(assert (= temp76_196 #x0000000000000000))
(assert (= var1310898 temp76_196))
(assert (= temp76_197 #x0000000000000000))
(assert (= temp76_198 temp76_197))
(assert (= temp76_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp76_198)))
(assert (= temp76_200 #x0000000000000001))
(assert (= temp76_201 temp76_200))
(assert (= temp76_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp76_201)))
(assert (= temp76_203 #x0000000000000002))
(assert (= temp76_204 temp76_203))
(assert (= temp76_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp76_204)))
(assert (= temp76_206 #x0000000000000003))
(assert (= temp76_207 temp76_206))
(assert (= temp76_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp76_207)))
(assert (= temp76_209 #x0000000000000004))
(assert (= temp76_210 temp76_209))
(assert (= temp76_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp76_210)))
(assert (= temp76_212 #x0000000000000005))
(assert (= temp76_213 temp76_212))
(assert (= temp76_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp76_213)))
(assert (= temp76_215 #x0000000000000000))
(assert (= temp76_216
   (ite (bvslt var1310898 temp76_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp76_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp76_216)))
(assert (= var1322977 temp76_217))
(assert (bvslt (ite (bvslt var1310898 temp76_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp76_218 #x0000000000000000))
(assert (= var1310898 temp76_218))
(assert (= temp76_220 var1310898))
(assert (= temp76_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_220)))
(assert (= temp76_219 temp76_221))
(assert (= var1322980
   (ite (= var1322977 temp76_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp76_222 #x0000000000000001))
(assert (= var1322980 temp76_222))
(assert (= temp76_223 #x0000000000000002))
(assert (= var1848169 temp76_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp76_225 #x0000000000000001))
(assert (= var1323065 temp76_225))
(assert (= temp76_226 #x0000000000000001))
(assert (= var3486735 temp76_226))
(assert (= temp76_227 #x0000000000000001))
(assert (= var3814415 temp76_227))
(assert (= temp76_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp76_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_229 #x0000000000000001))
(assert (= var79986 temp76_229))
(assert (= temp76_230 #x0000000000000001))
(assert (= var80116 temp76_230))
(assert (= var4796905 var80116))
(assert (= temp76_231 #x0000000000000000))
(assert (= var4784306 temp76_231))
(assert (= temp76_232 #x0000000000000000))
(assert (= temp76_233
   (ite (bvslt var4784306 temp76_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp76_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_233)))
(assert (= var4796924 temp76_234))
(assert (bvslt (ite (bvslt var4784306 temp76_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp76_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp76_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp76_236 #x0000000000000001))
(assert (= var4796925 temp76_236))
(assert (= temp76_237 #x0000000000000000))
(assert (= var4996927 temp76_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp76_238 #x0000000000000002))
(assert (= var5125763 temp76_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_239 #x0000000000000000))
(assert (= var5191324 temp76_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp76_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp76_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp76_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp76_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_243 #x0000000000000001))
(assert (= var79986 temp76_243))
(model-add temp76_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp76_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp76_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






