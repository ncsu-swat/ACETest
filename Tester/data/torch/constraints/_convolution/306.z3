(declare-fun temp406_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp406_2 () (_ BitVec 64))
(declare-fun temp406_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp406_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp406_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp406_6 () (_ BitVec 64))
(declare-fun temp406_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_8 () (_ BitVec 64))
(declare-fun temp406_9 () (_ BitVec 64))
(declare-fun temp406_10 () (_ BitVec 64))
(declare-fun temp406_11 () (_ BitVec 64))
(declare-fun temp406_12 () (_ BitVec 64))
(declare-fun temp406_13 () (_ BitVec 64))
(declare-fun temp406_14 () (_ BitVec 64))
(declare-fun temp406_15 () (_ BitVec 64))
(declare-fun temp406_16 () (_ BitVec 64))
(declare-fun temp406_17 () (_ BitVec 64))
(declare-fun temp406_18 () (_ BitVec 64))
(declare-fun temp406_19 () (_ BitVec 64))
(declare-fun temp406_20 () (_ BitVec 64))
(declare-fun temp406_21 () (_ BitVec 64))
(declare-fun temp406_22 () (_ BitVec 64))
(declare-fun temp406_23 () (_ BitVec 64))
(declare-fun temp406_24 () (_ BitVec 64))
(declare-fun temp406_25 () (_ BitVec 64))
(declare-fun temp406_26 () (_ BitVec 64))
(declare-fun temp406_27 () (_ BitVec 64))
(declare-fun temp406_28 () (_ BitVec 64))
(declare-fun temp406_29 () (_ BitVec 64))
(declare-fun temp406_30 () (_ BitVec 64))
(declare-fun temp406_31 () (_ BitVec 64))
(declare-fun temp406_32 () (_ BitVec 64))
(declare-fun temp406_33 () (_ BitVec 64))
(declare-fun temp406_34 () (_ BitVec 64))
(declare-fun temp406_35 () (_ BitVec 64))
(declare-fun temp406_36 () (_ BitVec 64))
(declare-fun temp406_37 () (_ BitVec 64))
(declare-fun temp406_38 () (_ BitVec 64))
(declare-fun temp406_39 () (_ BitVec 64))
(declare-fun temp406_40 () (_ BitVec 64))
(declare-fun temp406_41 () (_ BitVec 64))
(declare-fun temp406_42 () (_ BitVec 64))
(declare-fun temp406_43 () (_ BitVec 64))
(declare-fun temp406_44 () (_ BitVec 64))
(declare-fun temp406_45 () (_ BitVec 64))
(declare-fun temp406_46 () (_ BitVec 64))
(declare-fun temp406_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp406_48 () (_ BitVec 64))
(declare-fun temp406_49 () (_ BitVec 64))
(declare-fun temp406_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_51 () (_ BitVec 64))
(declare-fun temp406_52 () (_ BitVec 64))
(declare-fun temp406_53 () (_ BitVec 64))
(declare-fun temp406_54 () (_ BitVec 64))
(declare-fun temp406_55 () (_ BitVec 64))
(declare-fun temp406_56 () (_ BitVec 64))
(declare-fun temp406_57 () (_ BitVec 64))
(declare-fun temp406_58 () (_ BitVec 64))
(declare-fun temp406_59 () (_ BitVec 64))
(declare-fun temp406_60 () (_ BitVec 64))
(declare-fun temp406_61 () (_ BitVec 64))
(declare-fun temp406_62 () (_ BitVec 64))
(declare-fun temp406_63 () (_ BitVec 64))
(declare-fun temp406_64 () (_ BitVec 64))
(declare-fun temp406_65 () (_ BitVec 64))
(declare-fun temp406_66 () (_ BitVec 64))
(declare-fun temp406_67 () (_ BitVec 64))
(declare-fun temp406_68 () (_ BitVec 64))
(declare-fun temp406_69 () (_ BitVec 64))
(declare-fun temp406_70 () (_ BitVec 64))
(declare-fun temp406_71 () (_ BitVec 64))
(declare-fun temp406_72 () (_ BitVec 64))
(declare-fun temp406_73 () (_ BitVec 64))
(declare-fun temp406_74 () (_ BitVec 64))
(declare-fun temp406_75 () (_ BitVec 64))
(declare-fun temp406_76 () (_ BitVec 64))
(declare-fun temp406_77 () (_ BitVec 64))
(declare-fun temp406_78 () (_ BitVec 64))
(declare-fun temp406_79 () (_ BitVec 64))
(declare-fun temp406_80 () (_ BitVec 64))
(declare-fun temp406_81 () (_ BitVec 64))
(declare-fun temp406_82 () (_ BitVec 64))
(declare-fun temp406_83 () (_ BitVec 64))
(declare-fun temp406_84 () (_ BitVec 64))
(declare-fun temp406_85 () (_ BitVec 64))
(declare-fun temp406_86 () (_ BitVec 64))
(declare-fun temp406_87 () (_ BitVec 64))
(declare-fun temp406_88 () (_ BitVec 64))
(declare-fun temp406_89 () (_ BitVec 64))
(declare-fun temp406_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp406_91 () (_ BitVec 64))
(declare-fun temp406_92 () (_ BitVec 64))
(declare-fun temp406_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_94 () (_ BitVec 64))
(declare-fun temp406_95 () (_ BitVec 64))
(declare-fun temp406_96 () (_ BitVec 64))
(declare-fun temp406_97 () (_ BitVec 64))
(declare-fun temp406_98 () (_ BitVec 64))
(declare-fun temp406_99 () (_ BitVec 64))
(declare-fun temp406_100 () (_ BitVec 64))
(declare-fun temp406_101 () (_ BitVec 64))
(declare-fun temp406_102 () (_ BitVec 64))
(declare-fun temp406_103 () (_ BitVec 64))
(declare-fun temp406_104 () (_ BitVec 64))
(declare-fun temp406_105 () (_ BitVec 64))
(declare-fun temp406_106 () (_ BitVec 64))
(declare-fun temp406_107 () (_ BitVec 64))
(declare-fun temp406_108 () (_ BitVec 64))
(declare-fun temp406_109 () (_ BitVec 64))
(declare-fun temp406_110 () (_ BitVec 64))
(declare-fun temp406_111 () (_ BitVec 64))
(declare-fun temp406_112 () (_ BitVec 64))
(declare-fun temp406_113 () (_ BitVec 64))
(declare-fun temp406_114 () (_ BitVec 64))
(declare-fun temp406_115 () (_ BitVec 64))
(declare-fun temp406_116 () (_ BitVec 64))
(declare-fun temp406_117 () (_ BitVec 64))
(declare-fun temp406_118 () (_ BitVec 64))
(declare-fun temp406_119 () (_ BitVec 64))
(declare-fun temp406_120 () (_ BitVec 64))
(declare-fun temp406_121 () (_ BitVec 64))
(declare-fun temp406_122 () (_ BitVec 64))
(declare-fun temp406_123 () (_ BitVec 64))
(declare-fun temp406_124 () (_ BitVec 64))
(declare-fun temp406_125 () (_ BitVec 64))
(declare-fun temp406_126 () (_ BitVec 64))
(declare-fun temp406_127 () (_ BitVec 64))
(declare-fun temp406_128 () (_ BitVec 64))
(declare-fun temp406_129 () (_ BitVec 64))
(declare-fun temp406_130 () (_ BitVec 64))
(declare-fun temp406_131 () (_ BitVec 64))
(declare-fun temp406_132 () (_ BitVec 64))
(declare-fun temp406_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp406_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp406_135 () (_ BitVec 64))
(declare-fun temp406_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp406_137 () (_ BitVec 64))
(declare-fun temp406_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_139 () (_ BitVec 64))
(declare-fun temp406_140 () (_ BitVec 64))
(declare-fun temp406_141 () (_ BitVec 64))
(declare-fun temp406_142 () (_ BitVec 64))
(declare-fun temp406_143 () (_ BitVec 64))
(declare-fun temp406_144 () (_ BitVec 64))
(declare-fun temp406_145 () (_ BitVec 64))
(declare-fun temp406_146 () (_ BitVec 64))
(declare-fun temp406_147 () (_ BitVec 64))
(declare-fun temp406_148 () (_ BitVec 64))
(declare-fun temp406_149 () (_ BitVec 64))
(declare-fun temp406_150 () (_ BitVec 64))
(declare-fun temp406_151 () (_ BitVec 64))
(declare-fun temp406_152 () (_ BitVec 64))
(declare-fun temp406_153 () (_ BitVec 64))
(declare-fun temp406_154 () (_ BitVec 64))
(declare-fun temp406_156 () (_ BitVec 64))
(declare-fun temp406_157 () (_ BitVec 64))
(declare-fun temp406_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp406_158 () (_ BitVec 64))
(declare-fun temp406_159 () (_ BitVec 64))
(declare-fun temp406_161 () (_ BitVec 64))
(declare-fun temp406_162 () (_ BitVec 64))
(declare-fun temp406_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp406_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp406_164 () (_ BitVec 64))
(declare-fun temp406_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp406_166 () (_ BitVec 64))
(declare-fun temp406_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp406_168 () (_ BitVec 64))
(declare-fun temp406_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_170 () (_ BitVec 64))
(declare-fun temp406_171 () (_ BitVec 64))
(declare-fun temp406_172 () (_ BitVec 64))
(declare-fun temp406_173 () (_ BitVec 64))
(declare-fun temp406_174 () (_ BitVec 64))
(declare-fun temp406_175 () (_ BitVec 64))
(declare-fun temp406_176 () (_ BitVec 64))
(declare-fun temp406_177 () (_ BitVec 64))
(declare-fun temp406_178 () (_ BitVec 64))
(declare-fun temp406_179 () (_ BitVec 64))
(declare-fun temp406_180 () (_ BitVec 64))
(declare-fun temp406_181 () (_ BitVec 64))
(declare-fun temp406_182 () (_ BitVec 64))
(declare-fun temp406_183 () (_ BitVec 64))
(declare-fun temp406_184 () (_ BitVec 64))
(declare-fun temp406_185 () (_ BitVec 64))
(declare-fun temp406_186 () (_ BitVec 64))
(declare-fun temp406_187 () (_ BitVec 64))
(declare-fun temp406_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp406_189 () (_ BitVec 64))
(declare-fun temp406_191 () (_ BitVec 64))
(declare-fun temp406_192 () (_ BitVec 64))
(declare-fun temp406_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp406_193 () (_ BitVec 64))
(declare-fun temp406_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp406_195 () (_ BitVec 64))
(declare-fun temp406_196 () (_ BitVec 64))
(declare-fun temp406_197 () (_ BitVec 64))
(declare-fun temp406_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_199 () (_ BitVec 64))
(declare-fun temp406_200 () (_ BitVec 64))
(declare-fun temp406_201 () (_ BitVec 64))
(declare-fun temp406_202 () (_ BitVec 64))
(declare-fun temp406_203 () (_ BitVec 64))
(declare-fun temp406_204 () (_ BitVec 64))
(declare-fun temp406_205 () (_ BitVec 64))
(declare-fun temp406_206 () (_ BitVec 64))
(declare-fun temp406_207 () (_ BitVec 64))
(declare-fun temp406_208 () (_ BitVec 64))
(declare-fun temp406_209 () (_ BitVec 64))
(declare-fun temp406_210 () (_ BitVec 64))
(declare-fun temp406_211 () (_ BitVec 64))
(declare-fun temp406_212 () (_ BitVec 64))
(declare-fun temp406_213 () (_ BitVec 64))
(declare-fun temp406_214 () (_ BitVec 64))
(declare-fun temp406_215 () (_ BitVec 64))
(declare-fun temp406_216 () (_ BitVec 64))
(declare-fun temp406_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp406_218 () (_ BitVec 64))
(declare-fun temp406_220 () (_ BitVec 64))
(declare-fun temp406_221 () (_ BitVec 64))
(declare-fun temp406_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp406_222 () (_ BitVec 64))
(declare-fun temp406_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp406_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp406_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp406_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp406_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp406_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp406_229 () (_ BitVec 64))
(declare-fun temp406_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp406_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp406_232 () (_ BitVec 64))
(declare-fun temp406_233 () (_ BitVec 64))
(declare-fun temp406_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp406_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp406_236 () (_ BitVec 64))
(declare-fun temp406_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp406_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp406_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp406_240 () (_ BitVec 64))
(assert (= temp406_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp406_1)))
(assert (= temp406_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp406_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_3 #x0000000000000000))
(assert (= var79869 temp406_3))
(assert (= temp406_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp406_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_5 #x0000000000000000))
(assert (= var79914 temp406_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp406_6 #x0000000000000000))
(assert (= temp406_7 temp406_6))
(assert (= temp406_8 (select ARGNAME_padding_NAMEEND_VAL temp406_7)))
(assert (= temp406_9 #x0000000000000001))
(assert (= temp406_10 temp406_9))
(assert (= temp406_11 (select ARGNAME_padding_NAMEEND_VAL temp406_10)))
(assert (= temp406_12 #x0000000000000002))
(assert (= temp406_13 temp406_12))
(assert (= temp406_14 (select ARGNAME_padding_NAMEEND_VAL temp406_13)))
(assert (= temp406_15 #x0000000000000003))
(assert (= temp406_16 temp406_15))
(assert (= temp406_17 (select ARGNAME_padding_NAMEEND_VAL temp406_16)))
(assert (= temp406_18 #x0000000000000004))
(assert (= temp406_19 temp406_18))
(assert (= temp406_20 (select ARGNAME_padding_NAMEEND_VAL temp406_19)))
(assert (= temp406_21 #x0000000000000005))
(assert (= temp406_22 temp406_21))
(assert (= temp406_23 (select ARGNAME_padding_NAMEEND_VAL temp406_22)))
(assert (= temp406_24 #x0000000000000000))
(assert (= temp406_25 #x0000000000000000))
(assert (= temp406_26 temp406_25))
(assert (= temp406_27 (select ARGNAME_padding_NAMEEND_VAL temp406_26)))
(assert (= temp406_28 #x0000000000000000))
(assert (= temp406_29 #x0000000000000001))
(assert (= temp406_30 temp406_29))
(assert (= temp406_31 (select ARGNAME_padding_NAMEEND_VAL temp406_30)))
(assert (= temp406_32 #x0000000000000000))
(assert (= temp406_33 #x0000000000000002))
(assert (= temp406_34 temp406_33))
(assert (= temp406_35 (select ARGNAME_padding_NAMEEND_VAL temp406_34)))
(assert (= temp406_36 #x0000000000000000))
(assert (= temp406_37 #x0000000000000003))
(assert (= temp406_38 temp406_37))
(assert (= temp406_39 (select ARGNAME_padding_NAMEEND_VAL temp406_38)))
(assert (= temp406_40 #x0000000000000000))
(assert (= temp406_41 #x0000000000000004))
(assert (= temp406_42 temp406_41))
(assert (= temp406_43 (select ARGNAME_padding_NAMEEND_VAL temp406_42)))
(assert (= temp406_44 #x0000000000000000))
(assert (= temp406_45 #x0000000000000005))
(assert (= temp406_46 temp406_45))
(assert (= temp406_47 (select ARGNAME_padding_NAMEEND_VAL temp406_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp406_27 temp406_24)
             (bvslt temp406_31 temp406_28)
             (bvslt temp406_35 temp406_32)
             (bvslt temp406_39 temp406_36)
             (bvslt temp406_43 temp406_40)
             (bvslt temp406_47 temp406_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_48 #x0000000000000000))
(assert (= var1322786 temp406_48))
(assert (= temp406_49 #x0000000000000000))
(assert (= temp406_50 temp406_49))
(assert (= temp406_51 (select ARGNAME_output_padding_NAMEEND_VAL temp406_50)))
(assert (= temp406_52 #x0000000000000001))
(assert (= temp406_53 temp406_52))
(assert (= temp406_54 (select ARGNAME_output_padding_NAMEEND_VAL temp406_53)))
(assert (= temp406_55 #x0000000000000002))
(assert (= temp406_56 temp406_55))
(assert (= temp406_57 (select ARGNAME_output_padding_NAMEEND_VAL temp406_56)))
(assert (= temp406_58 #x0000000000000003))
(assert (= temp406_59 temp406_58))
(assert (= temp406_60 (select ARGNAME_output_padding_NAMEEND_VAL temp406_59)))
(assert (= temp406_61 #x0000000000000004))
(assert (= temp406_62 temp406_61))
(assert (= temp406_63 (select ARGNAME_output_padding_NAMEEND_VAL temp406_62)))
(assert (= temp406_64 #x0000000000000005))
(assert (= temp406_65 temp406_64))
(assert (= temp406_66 (select ARGNAME_output_padding_NAMEEND_VAL temp406_65)))
(assert (= temp406_67 #x0000000000000000))
(assert (= temp406_68 #x0000000000000000))
(assert (= temp406_69 temp406_68))
(assert (= temp406_70 (select ARGNAME_output_padding_NAMEEND_VAL temp406_69)))
(assert (= temp406_71 #x0000000000000000))
(assert (= temp406_72 #x0000000000000001))
(assert (= temp406_73 temp406_72))
(assert (= temp406_74 (select ARGNAME_output_padding_NAMEEND_VAL temp406_73)))
(assert (= temp406_75 #x0000000000000000))
(assert (= temp406_76 #x0000000000000002))
(assert (= temp406_77 temp406_76))
(assert (= temp406_78 (select ARGNAME_output_padding_NAMEEND_VAL temp406_77)))
(assert (= temp406_79 #x0000000000000000))
(assert (= temp406_80 #x0000000000000003))
(assert (= temp406_81 temp406_80))
(assert (= temp406_82 (select ARGNAME_output_padding_NAMEEND_VAL temp406_81)))
(assert (= temp406_83 #x0000000000000000))
(assert (= temp406_84 #x0000000000000004))
(assert (= temp406_85 temp406_84))
(assert (= temp406_86 (select ARGNAME_output_padding_NAMEEND_VAL temp406_85)))
(assert (= temp406_87 #x0000000000000000))
(assert (= temp406_88 #x0000000000000005))
(assert (= temp406_89 temp406_88))
(assert (= temp406_90 (select ARGNAME_output_padding_NAMEEND_VAL temp406_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp406_70 temp406_67)
             (bvslt temp406_74 temp406_71)
             (bvslt temp406_78 temp406_75)
             (bvslt temp406_82 temp406_79)
             (bvslt temp406_86 temp406_83)
             (bvslt temp406_90 temp406_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_91 #x0000000000000000))
(assert (= var1322797 temp406_91))
(assert (= temp406_92 #x0000000000000000))
(assert (= temp406_93 temp406_92))
(assert (= temp406_94 (select ARGNAME_stride_NAMEEND_VAL temp406_93)))
(assert (= temp406_95 #x0000000000000001))
(assert (= temp406_96 temp406_95))
(assert (= temp406_97 (select ARGNAME_stride_NAMEEND_VAL temp406_96)))
(assert (= temp406_98 #x0000000000000002))
(assert (= temp406_99 temp406_98))
(assert (= temp406_100 (select ARGNAME_stride_NAMEEND_VAL temp406_99)))
(assert (= temp406_101 #x0000000000000003))
(assert (= temp406_102 temp406_101))
(assert (= temp406_103 (select ARGNAME_stride_NAMEEND_VAL temp406_102)))
(assert (= temp406_104 #x0000000000000004))
(assert (= temp406_105 temp406_104))
(assert (= temp406_106 (select ARGNAME_stride_NAMEEND_VAL temp406_105)))
(assert (= temp406_107 #x0000000000000005))
(assert (= temp406_108 temp406_107))
(assert (= temp406_109 (select ARGNAME_stride_NAMEEND_VAL temp406_108)))
(assert (= temp406_110 #x0000000000000000))
(assert (= temp406_111 #x0000000000000000))
(assert (= temp406_112 temp406_111))
(assert (= temp406_113 (select ARGNAME_stride_NAMEEND_VAL temp406_112)))
(assert (= temp406_114 #x0000000000000000))
(assert (= temp406_115 #x0000000000000001))
(assert (= temp406_116 temp406_115))
(assert (= temp406_117 (select ARGNAME_stride_NAMEEND_VAL temp406_116)))
(assert (= temp406_118 #x0000000000000000))
(assert (= temp406_119 #x0000000000000002))
(assert (= temp406_120 temp406_119))
(assert (= temp406_121 (select ARGNAME_stride_NAMEEND_VAL temp406_120)))
(assert (= temp406_122 #x0000000000000000))
(assert (= temp406_123 #x0000000000000003))
(assert (= temp406_124 temp406_123))
(assert (= temp406_125 (select ARGNAME_stride_NAMEEND_VAL temp406_124)))
(assert (= temp406_126 #x0000000000000000))
(assert (= temp406_127 #x0000000000000004))
(assert (= temp406_128 temp406_127))
(assert (= temp406_129 (select ARGNAME_stride_NAMEEND_VAL temp406_128)))
(assert (= temp406_130 #x0000000000000000))
(assert (= temp406_131 #x0000000000000005))
(assert (= temp406_132 temp406_131))
(assert (= temp406_133 (select ARGNAME_stride_NAMEEND_VAL temp406_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp406_113 temp406_110)
             (bvsle temp406_117 temp406_114)
             (bvsle temp406_121 temp406_118)
             (bvsle temp406_125 temp406_122)
             (bvsle temp406_129 temp406_126)
             (bvsle temp406_133 temp406_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_134 #x0000000000000000))
(assert (= var1322807 temp406_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_135 #x0000000000000001))
(assert (= var1322819 temp406_135))
(assert (= temp406_136 #x0000000000000000))
(assert (= var1310898 temp406_136))
(assert (= temp406_137 #x0000000000000000))
(assert (= temp406_138 temp406_137))
(assert (= temp406_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_138)))
(assert (= temp406_140 #x0000000000000001))
(assert (= temp406_141 temp406_140))
(assert (= temp406_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_141)))
(assert (= temp406_143 #x0000000000000002))
(assert (= temp406_144 temp406_143))
(assert (= temp406_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_144)))
(assert (= temp406_146 #x0000000000000003))
(assert (= temp406_147 temp406_146))
(assert (= temp406_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_147)))
(assert (= temp406_149 #x0000000000000004))
(assert (= temp406_150 temp406_149))
(assert (= temp406_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_150)))
(assert (= temp406_152 #x0000000000000005))
(assert (= temp406_153 temp406_152))
(assert (= temp406_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_153)))
(assert (= temp406_156 var1310898))
(assert (= temp406_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_156)))
(assert (= temp406_155 temp406_157))
(assert (= var1322852
   (ite (bvslt temp406_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_158 #x0000000000000000))
(assert (= var1322852 temp406_158))
(assert (= temp406_159 #x0000000000000000))
(assert (= var1310898 temp406_159))
(assert (= temp406_161 var1310898))
(assert (= temp406_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_161)))
(assert (= temp406_160 temp406_162))
(assert (= var1322874 (bvsmod temp406_160 ARGNAME_groups_NAMEEND)))
(assert (= temp406_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp406_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_164 #x0000000000000001))
(assert (= var1322875 temp406_164))
(assert (= temp406_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp406_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_166 #x0000000000000001))
(assert (= var1322895 temp406_166))
(assert (= temp406_167 #x0000000000000001))
(assert (= var1311786 temp406_167))
(assert (= temp406_168 #x0000000000000000))
(assert (= temp406_169 temp406_168))
(assert (= temp406_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_169)))
(assert (= temp406_171 #x0000000000000001))
(assert (= temp406_172 temp406_171))
(assert (= temp406_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_172)))
(assert (= temp406_174 #x0000000000000002))
(assert (= temp406_175 temp406_174))
(assert (= temp406_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_175)))
(assert (= temp406_177 #x0000000000000003))
(assert (= temp406_178 temp406_177))
(assert (= temp406_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_178)))
(assert (= temp406_180 #x0000000000000004))
(assert (= temp406_181 temp406_180))
(assert (= temp406_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_181)))
(assert (= temp406_183 #x0000000000000005))
(assert (= temp406_184 temp406_183))
(assert (= temp406_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_184)))
(assert (= temp406_186 #x0000000000000000))
(assert (= temp406_187
   (ite (bvslt var1311786 temp406_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp406_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_187)))
(assert (= var1322903 temp406_188))
(assert (bvslt (ite (bvslt var1311786 temp406_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp406_189 #x0000000000000001))
(assert (= var1311786 temp406_189))
(assert (= temp406_191 var1311786))
(assert (= temp406_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_191)))
(assert (= temp406_190 temp406_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp406_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_193 #x0000000000000001))
(assert (= var1322908 temp406_193))
(assert (= temp406_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp406_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_195 #x0000000000000001))
(assert (= var1322975 temp406_195))
(assert (= temp406_196 #x0000000000000000))
(assert (= var1310898 temp406_196))
(assert (= temp406_197 #x0000000000000000))
(assert (= temp406_198 temp406_197))
(assert (= temp406_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp406_198)))
(assert (= temp406_200 #x0000000000000001))
(assert (= temp406_201 temp406_200))
(assert (= temp406_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp406_201)))
(assert (= temp406_203 #x0000000000000002))
(assert (= temp406_204 temp406_203))
(assert (= temp406_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp406_204)))
(assert (= temp406_206 #x0000000000000003))
(assert (= temp406_207 temp406_206))
(assert (= temp406_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp406_207)))
(assert (= temp406_209 #x0000000000000004))
(assert (= temp406_210 temp406_209))
(assert (= temp406_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp406_210)))
(assert (= temp406_212 #x0000000000000005))
(assert (= temp406_213 temp406_212))
(assert (= temp406_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp406_213)))
(assert (= temp406_215 #x0000000000000000))
(assert (= temp406_216
   (ite (bvslt var1310898 temp406_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp406_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp406_216)))
(assert (= var1322977 temp406_217))
(assert (bvslt (ite (bvslt var1310898 temp406_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp406_218 #x0000000000000000))
(assert (= var1310898 temp406_218))
(assert (= temp406_220 var1310898))
(assert (= temp406_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_220)))
(assert (= temp406_219 temp406_221))
(assert (= var1322980
   (ite (= var1322977 temp406_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_222 #x0000000000000001))
(assert (= var1322980 temp406_222))
(assert (= temp406_223 #x0000000000000002))
(assert (= var1848169 temp406_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp406_225 #x0000000000000001))
(assert (= var1323065 temp406_225))
(assert (= temp406_226 #x0000000000000001))
(assert (= var3486735 temp406_226))
(assert (= temp406_227 #x0000000000000001))
(assert (= var3814415 temp406_227))
(assert (= temp406_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp406_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_229 #x0000000000000001))
(assert (= var79986 temp406_229))
(assert (= temp406_230 #x0000000000000001))
(assert (= var80116 temp406_230))
(assert (= var4796905 var80116))
(assert (= temp406_231 #x0000000000000000))
(assert (= var4784306 temp406_231))
(assert (= temp406_232 #x0000000000000000))
(assert (= temp406_233
   (ite (bvslt var4784306 temp406_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp406_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_233)))
(assert (= var4796924 temp406_234))
(assert (bvslt (ite (bvslt var4784306 temp406_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp406_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp406_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_236 #x0000000000000001))
(assert (= var4796925 temp406_236))
(assert (= temp406_237 #x0000000000000000))
(assert (= var4996927 temp406_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp406_238 #x0000000000000002))
(assert (= var5125763 temp406_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_239 #x0000000000000000))
(assert (= var5191324 temp406_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp406_240 #x0000000000000001))
(assert (= var79986 temp406_240))
(model-add temp406_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp406_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp406_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






