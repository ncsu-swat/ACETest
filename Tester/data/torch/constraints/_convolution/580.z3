(declare-fun temp770_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp770_2 () (_ BitVec 64))
(declare-fun temp770_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp770_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp770_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp770_6 () (_ BitVec 64))
(declare-fun temp770_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp770_8 () (_ BitVec 64))
(declare-fun temp770_9 () (_ BitVec 64))
(declare-fun temp770_10 () (_ BitVec 64))
(declare-fun temp770_11 () (_ BitVec 64))
(declare-fun temp770_12 () (_ BitVec 64))
(declare-fun temp770_13 () (_ BitVec 64))
(declare-fun temp770_14 () (_ BitVec 64))
(declare-fun temp770_15 () (_ BitVec 64))
(declare-fun temp770_16 () (_ BitVec 64))
(declare-fun temp770_17 () (_ BitVec 64))
(declare-fun temp770_18 () (_ BitVec 64))
(declare-fun temp770_19 () (_ BitVec 64))
(declare-fun temp770_20 () (_ BitVec 64))
(declare-fun temp770_21 () (_ BitVec 64))
(declare-fun temp770_22 () (_ BitVec 64))
(declare-fun temp770_23 () (_ BitVec 64))
(declare-fun temp770_24 () (_ BitVec 64))
(declare-fun temp770_25 () (_ BitVec 64))
(declare-fun temp770_26 () (_ BitVec 64))
(declare-fun temp770_27 () (_ BitVec 64))
(declare-fun temp770_28 () (_ BitVec 64))
(declare-fun temp770_29 () (_ BitVec 64))
(declare-fun temp770_30 () (_ BitVec 64))
(declare-fun temp770_31 () (_ BitVec 64))
(declare-fun temp770_32 () (_ BitVec 64))
(declare-fun temp770_33 () (_ BitVec 64))
(declare-fun temp770_34 () (_ BitVec 64))
(declare-fun temp770_35 () (_ BitVec 64))
(declare-fun temp770_36 () (_ BitVec 64))
(declare-fun temp770_37 () (_ BitVec 64))
(declare-fun temp770_38 () (_ BitVec 64))
(declare-fun temp770_39 () (_ BitVec 64))
(declare-fun temp770_40 () (_ BitVec 64))
(declare-fun temp770_41 () (_ BitVec 64))
(declare-fun temp770_42 () (_ BitVec 64))
(declare-fun temp770_43 () (_ BitVec 64))
(declare-fun temp770_44 () (_ BitVec 64))
(declare-fun temp770_45 () (_ BitVec 64))
(declare-fun temp770_46 () (_ BitVec 64))
(declare-fun temp770_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp770_48 () (_ BitVec 64))
(declare-fun temp770_49 () (_ BitVec 64))
(declare-fun temp770_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp770_51 () (_ BitVec 64))
(declare-fun temp770_52 () (_ BitVec 64))
(declare-fun temp770_53 () (_ BitVec 64))
(declare-fun temp770_54 () (_ BitVec 64))
(declare-fun temp770_55 () (_ BitVec 64))
(declare-fun temp770_56 () (_ BitVec 64))
(declare-fun temp770_57 () (_ BitVec 64))
(declare-fun temp770_58 () (_ BitVec 64))
(declare-fun temp770_59 () (_ BitVec 64))
(declare-fun temp770_60 () (_ BitVec 64))
(declare-fun temp770_61 () (_ BitVec 64))
(declare-fun temp770_62 () (_ BitVec 64))
(declare-fun temp770_63 () (_ BitVec 64))
(declare-fun temp770_64 () (_ BitVec 64))
(declare-fun temp770_65 () (_ BitVec 64))
(declare-fun temp770_66 () (_ BitVec 64))
(declare-fun temp770_67 () (_ BitVec 64))
(declare-fun temp770_68 () (_ BitVec 64))
(declare-fun temp770_69 () (_ BitVec 64))
(declare-fun temp770_70 () (_ BitVec 64))
(declare-fun temp770_71 () (_ BitVec 64))
(declare-fun temp770_72 () (_ BitVec 64))
(declare-fun temp770_73 () (_ BitVec 64))
(declare-fun temp770_74 () (_ BitVec 64))
(declare-fun temp770_75 () (_ BitVec 64))
(declare-fun temp770_76 () (_ BitVec 64))
(declare-fun temp770_77 () (_ BitVec 64))
(declare-fun temp770_78 () (_ BitVec 64))
(declare-fun temp770_79 () (_ BitVec 64))
(declare-fun temp770_80 () (_ BitVec 64))
(declare-fun temp770_81 () (_ BitVec 64))
(declare-fun temp770_82 () (_ BitVec 64))
(declare-fun temp770_83 () (_ BitVec 64))
(declare-fun temp770_84 () (_ BitVec 64))
(declare-fun temp770_85 () (_ BitVec 64))
(declare-fun temp770_86 () (_ BitVec 64))
(declare-fun temp770_87 () (_ BitVec 64))
(declare-fun temp770_88 () (_ BitVec 64))
(declare-fun temp770_89 () (_ BitVec 64))
(declare-fun temp770_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp770_91 () (_ BitVec 64))
(declare-fun temp770_92 () (_ BitVec 64))
(declare-fun temp770_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp770_94 () (_ BitVec 64))
(declare-fun temp770_95 () (_ BitVec 64))
(declare-fun temp770_96 () (_ BitVec 64))
(declare-fun temp770_97 () (_ BitVec 64))
(declare-fun temp770_98 () (_ BitVec 64))
(declare-fun temp770_99 () (_ BitVec 64))
(declare-fun temp770_100 () (_ BitVec 64))
(declare-fun temp770_101 () (_ BitVec 64))
(declare-fun temp770_102 () (_ BitVec 64))
(declare-fun temp770_103 () (_ BitVec 64))
(declare-fun temp770_104 () (_ BitVec 64))
(declare-fun temp770_105 () (_ BitVec 64))
(declare-fun temp770_106 () (_ BitVec 64))
(declare-fun temp770_107 () (_ BitVec 64))
(declare-fun temp770_108 () (_ BitVec 64))
(declare-fun temp770_109 () (_ BitVec 64))
(declare-fun temp770_110 () (_ BitVec 64))
(declare-fun temp770_111 () (_ BitVec 64))
(declare-fun temp770_112 () (_ BitVec 64))
(declare-fun temp770_113 () (_ BitVec 64))
(declare-fun temp770_114 () (_ BitVec 64))
(declare-fun temp770_115 () (_ BitVec 64))
(declare-fun temp770_116 () (_ BitVec 64))
(declare-fun temp770_117 () (_ BitVec 64))
(declare-fun temp770_118 () (_ BitVec 64))
(declare-fun temp770_119 () (_ BitVec 64))
(declare-fun temp770_120 () (_ BitVec 64))
(declare-fun temp770_121 () (_ BitVec 64))
(declare-fun temp770_122 () (_ BitVec 64))
(declare-fun temp770_123 () (_ BitVec 64))
(declare-fun temp770_124 () (_ BitVec 64))
(declare-fun temp770_125 () (_ BitVec 64))
(declare-fun temp770_126 () (_ BitVec 64))
(declare-fun temp770_127 () (_ BitVec 64))
(declare-fun temp770_128 () (_ BitVec 64))
(declare-fun temp770_129 () (_ BitVec 64))
(declare-fun temp770_130 () (_ BitVec 64))
(declare-fun temp770_131 () (_ BitVec 64))
(declare-fun temp770_132 () (_ BitVec 64))
(declare-fun temp770_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp770_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp770_135 () (_ BitVec 64))
(declare-fun temp770_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp770_137 () (_ BitVec 64))
(declare-fun temp770_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp770_139 () (_ BitVec 64))
(declare-fun temp770_140 () (_ BitVec 64))
(declare-fun temp770_141 () (_ BitVec 64))
(declare-fun temp770_142 () (_ BitVec 64))
(declare-fun temp770_143 () (_ BitVec 64))
(declare-fun temp770_144 () (_ BitVec 64))
(declare-fun temp770_145 () (_ BitVec 64))
(declare-fun temp770_146 () (_ BitVec 64))
(declare-fun temp770_147 () (_ BitVec 64))
(declare-fun temp770_148 () (_ BitVec 64))
(declare-fun temp770_149 () (_ BitVec 64))
(declare-fun temp770_150 () (_ BitVec 64))
(declare-fun temp770_151 () (_ BitVec 64))
(declare-fun temp770_152 () (_ BitVec 64))
(declare-fun temp770_153 () (_ BitVec 64))
(declare-fun temp770_154 () (_ BitVec 64))
(declare-fun temp770_156 () (_ BitVec 64))
(declare-fun temp770_157 () (_ BitVec 64))
(declare-fun temp770_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp770_158 () (_ BitVec 64))
(declare-fun temp770_159 () (_ BitVec 64))
(declare-fun temp770_161 () (_ BitVec 64))
(declare-fun temp770_162 () (_ BitVec 64))
(declare-fun temp770_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp770_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp770_164 () (_ BitVec 64))
(declare-fun temp770_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp770_166 () (_ BitVec 64))
(declare-fun temp770_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp770_168 () (_ BitVec 64))
(declare-fun temp770_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp770_170 () (_ BitVec 64))
(declare-fun temp770_171 () (_ BitVec 64))
(declare-fun temp770_172 () (_ BitVec 64))
(declare-fun temp770_173 () (_ BitVec 64))
(declare-fun temp770_174 () (_ BitVec 64))
(declare-fun temp770_175 () (_ BitVec 64))
(declare-fun temp770_176 () (_ BitVec 64))
(declare-fun temp770_177 () (_ BitVec 64))
(declare-fun temp770_178 () (_ BitVec 64))
(declare-fun temp770_179 () (_ BitVec 64))
(declare-fun temp770_180 () (_ BitVec 64))
(declare-fun temp770_181 () (_ BitVec 64))
(declare-fun temp770_182 () (_ BitVec 64))
(declare-fun temp770_183 () (_ BitVec 64))
(declare-fun temp770_184 () (_ BitVec 64))
(declare-fun temp770_185 () (_ BitVec 64))
(declare-fun temp770_186 () (_ BitVec 64))
(declare-fun temp770_187 () (_ BitVec 64))
(declare-fun temp770_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp770_189 () (_ BitVec 64))
(declare-fun temp770_191 () (_ BitVec 64))
(declare-fun temp770_192 () (_ BitVec 64))
(declare-fun temp770_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp770_193 () (_ BitVec 64))
(declare-fun temp770_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp770_195 () (_ BitVec 64))
(declare-fun temp770_196 () (_ BitVec 64))
(declare-fun temp770_197 () (_ BitVec 64))
(declare-fun temp770_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp770_199 () (_ BitVec 64))
(declare-fun temp770_200 () (_ BitVec 64))
(declare-fun temp770_201 () (_ BitVec 64))
(declare-fun temp770_202 () (_ BitVec 64))
(declare-fun temp770_203 () (_ BitVec 64))
(declare-fun temp770_204 () (_ BitVec 64))
(declare-fun temp770_205 () (_ BitVec 64))
(declare-fun temp770_206 () (_ BitVec 64))
(declare-fun temp770_207 () (_ BitVec 64))
(declare-fun temp770_208 () (_ BitVec 64))
(declare-fun temp770_209 () (_ BitVec 64))
(declare-fun temp770_210 () (_ BitVec 64))
(declare-fun temp770_211 () (_ BitVec 64))
(declare-fun temp770_212 () (_ BitVec 64))
(declare-fun temp770_213 () (_ BitVec 64))
(declare-fun temp770_214 () (_ BitVec 64))
(declare-fun temp770_215 () (_ BitVec 64))
(declare-fun temp770_216 () (_ BitVec 64))
(declare-fun temp770_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp770_218 () (_ BitVec 64))
(declare-fun temp770_220 () (_ BitVec 64))
(declare-fun temp770_221 () (_ BitVec 64))
(declare-fun temp770_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp770_222 () (_ BitVec 64))
(declare-fun temp770_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp770_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp770_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp770_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp770_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp770_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp770_229 () (_ BitVec 64))
(declare-fun temp770_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp770_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp770_232 () (_ BitVec 64))
(declare-fun temp770_233 () (_ BitVec 64))
(declare-fun temp770_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp770_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp770_236 () (_ BitVec 64))
(declare-fun temp770_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp770_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp770_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp770_241 () (_ BitVec 64))
(declare-fun temp770_240 () (_ BitVec 64))
(declare-fun temp770_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp770_243 () (_ BitVec 64))
(declare-fun temp770_244 () (_ BitVec 64))
(declare-fun temp770_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp770_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp770_247 () (_ BitVec 64))
(declare-fun temp770_248 () (_ BitVec 64))
(assert (= temp770_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp770_1)))
(assert (= temp770_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp770_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_3 #x0000000000000000))
(assert (= var79869 temp770_3))
(assert (= temp770_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp770_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_5 #x0000000000000000))
(assert (= var79914 temp770_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp770_6 #x0000000000000000))
(assert (= temp770_7 temp770_6))
(assert (= temp770_8 (select ARGNAME_padding_NAMEEND_VAL temp770_7)))
(assert (= temp770_9 #x0000000000000001))
(assert (= temp770_10 temp770_9))
(assert (= temp770_11 (select ARGNAME_padding_NAMEEND_VAL temp770_10)))
(assert (= temp770_12 #x0000000000000002))
(assert (= temp770_13 temp770_12))
(assert (= temp770_14 (select ARGNAME_padding_NAMEEND_VAL temp770_13)))
(assert (= temp770_15 #x0000000000000003))
(assert (= temp770_16 temp770_15))
(assert (= temp770_17 (select ARGNAME_padding_NAMEEND_VAL temp770_16)))
(assert (= temp770_18 #x0000000000000004))
(assert (= temp770_19 temp770_18))
(assert (= temp770_20 (select ARGNAME_padding_NAMEEND_VAL temp770_19)))
(assert (= temp770_21 #x0000000000000005))
(assert (= temp770_22 temp770_21))
(assert (= temp770_23 (select ARGNAME_padding_NAMEEND_VAL temp770_22)))
(assert (= temp770_24 #x0000000000000000))
(assert (= temp770_25 #x0000000000000000))
(assert (= temp770_26 temp770_25))
(assert (= temp770_27 (select ARGNAME_padding_NAMEEND_VAL temp770_26)))
(assert (= temp770_28 #x0000000000000000))
(assert (= temp770_29 #x0000000000000001))
(assert (= temp770_30 temp770_29))
(assert (= temp770_31 (select ARGNAME_padding_NAMEEND_VAL temp770_30)))
(assert (= temp770_32 #x0000000000000000))
(assert (= temp770_33 #x0000000000000002))
(assert (= temp770_34 temp770_33))
(assert (= temp770_35 (select ARGNAME_padding_NAMEEND_VAL temp770_34)))
(assert (= temp770_36 #x0000000000000000))
(assert (= temp770_37 #x0000000000000003))
(assert (= temp770_38 temp770_37))
(assert (= temp770_39 (select ARGNAME_padding_NAMEEND_VAL temp770_38)))
(assert (= temp770_40 #x0000000000000000))
(assert (= temp770_41 #x0000000000000004))
(assert (= temp770_42 temp770_41))
(assert (= temp770_43 (select ARGNAME_padding_NAMEEND_VAL temp770_42)))
(assert (= temp770_44 #x0000000000000000))
(assert (= temp770_45 #x0000000000000005))
(assert (= temp770_46 temp770_45))
(assert (= temp770_47 (select ARGNAME_padding_NAMEEND_VAL temp770_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp770_27 temp770_24)
             (bvslt temp770_31 temp770_28)
             (bvslt temp770_35 temp770_32)
             (bvslt temp770_39 temp770_36)
             (bvslt temp770_43 temp770_40)
             (bvslt temp770_47 temp770_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_48 #x0000000000000000))
(assert (= var1322786 temp770_48))
(assert (= temp770_49 #x0000000000000000))
(assert (= temp770_50 temp770_49))
(assert (= temp770_51 (select ARGNAME_output_padding_NAMEEND_VAL temp770_50)))
(assert (= temp770_52 #x0000000000000001))
(assert (= temp770_53 temp770_52))
(assert (= temp770_54 (select ARGNAME_output_padding_NAMEEND_VAL temp770_53)))
(assert (= temp770_55 #x0000000000000002))
(assert (= temp770_56 temp770_55))
(assert (= temp770_57 (select ARGNAME_output_padding_NAMEEND_VAL temp770_56)))
(assert (= temp770_58 #x0000000000000003))
(assert (= temp770_59 temp770_58))
(assert (= temp770_60 (select ARGNAME_output_padding_NAMEEND_VAL temp770_59)))
(assert (= temp770_61 #x0000000000000004))
(assert (= temp770_62 temp770_61))
(assert (= temp770_63 (select ARGNAME_output_padding_NAMEEND_VAL temp770_62)))
(assert (= temp770_64 #x0000000000000005))
(assert (= temp770_65 temp770_64))
(assert (= temp770_66 (select ARGNAME_output_padding_NAMEEND_VAL temp770_65)))
(assert (= temp770_67 #x0000000000000000))
(assert (= temp770_68 #x0000000000000000))
(assert (= temp770_69 temp770_68))
(assert (= temp770_70 (select ARGNAME_output_padding_NAMEEND_VAL temp770_69)))
(assert (= temp770_71 #x0000000000000000))
(assert (= temp770_72 #x0000000000000001))
(assert (= temp770_73 temp770_72))
(assert (= temp770_74 (select ARGNAME_output_padding_NAMEEND_VAL temp770_73)))
(assert (= temp770_75 #x0000000000000000))
(assert (= temp770_76 #x0000000000000002))
(assert (= temp770_77 temp770_76))
(assert (= temp770_78 (select ARGNAME_output_padding_NAMEEND_VAL temp770_77)))
(assert (= temp770_79 #x0000000000000000))
(assert (= temp770_80 #x0000000000000003))
(assert (= temp770_81 temp770_80))
(assert (= temp770_82 (select ARGNAME_output_padding_NAMEEND_VAL temp770_81)))
(assert (= temp770_83 #x0000000000000000))
(assert (= temp770_84 #x0000000000000004))
(assert (= temp770_85 temp770_84))
(assert (= temp770_86 (select ARGNAME_output_padding_NAMEEND_VAL temp770_85)))
(assert (= temp770_87 #x0000000000000000))
(assert (= temp770_88 #x0000000000000005))
(assert (= temp770_89 temp770_88))
(assert (= temp770_90 (select ARGNAME_output_padding_NAMEEND_VAL temp770_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp770_70 temp770_67)
             (bvslt temp770_74 temp770_71)
             (bvslt temp770_78 temp770_75)
             (bvslt temp770_82 temp770_79)
             (bvslt temp770_86 temp770_83)
             (bvslt temp770_90 temp770_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_91 #x0000000000000000))
(assert (= var1322797 temp770_91))
(assert (= temp770_92 #x0000000000000000))
(assert (= temp770_93 temp770_92))
(assert (= temp770_94 (select ARGNAME_stride_NAMEEND_VAL temp770_93)))
(assert (= temp770_95 #x0000000000000001))
(assert (= temp770_96 temp770_95))
(assert (= temp770_97 (select ARGNAME_stride_NAMEEND_VAL temp770_96)))
(assert (= temp770_98 #x0000000000000002))
(assert (= temp770_99 temp770_98))
(assert (= temp770_100 (select ARGNAME_stride_NAMEEND_VAL temp770_99)))
(assert (= temp770_101 #x0000000000000003))
(assert (= temp770_102 temp770_101))
(assert (= temp770_103 (select ARGNAME_stride_NAMEEND_VAL temp770_102)))
(assert (= temp770_104 #x0000000000000004))
(assert (= temp770_105 temp770_104))
(assert (= temp770_106 (select ARGNAME_stride_NAMEEND_VAL temp770_105)))
(assert (= temp770_107 #x0000000000000005))
(assert (= temp770_108 temp770_107))
(assert (= temp770_109 (select ARGNAME_stride_NAMEEND_VAL temp770_108)))
(assert (= temp770_110 #x0000000000000000))
(assert (= temp770_111 #x0000000000000000))
(assert (= temp770_112 temp770_111))
(assert (= temp770_113 (select ARGNAME_stride_NAMEEND_VAL temp770_112)))
(assert (= temp770_114 #x0000000000000000))
(assert (= temp770_115 #x0000000000000001))
(assert (= temp770_116 temp770_115))
(assert (= temp770_117 (select ARGNAME_stride_NAMEEND_VAL temp770_116)))
(assert (= temp770_118 #x0000000000000000))
(assert (= temp770_119 #x0000000000000002))
(assert (= temp770_120 temp770_119))
(assert (= temp770_121 (select ARGNAME_stride_NAMEEND_VAL temp770_120)))
(assert (= temp770_122 #x0000000000000000))
(assert (= temp770_123 #x0000000000000003))
(assert (= temp770_124 temp770_123))
(assert (= temp770_125 (select ARGNAME_stride_NAMEEND_VAL temp770_124)))
(assert (= temp770_126 #x0000000000000000))
(assert (= temp770_127 #x0000000000000004))
(assert (= temp770_128 temp770_127))
(assert (= temp770_129 (select ARGNAME_stride_NAMEEND_VAL temp770_128)))
(assert (= temp770_130 #x0000000000000000))
(assert (= temp770_131 #x0000000000000005))
(assert (= temp770_132 temp770_131))
(assert (= temp770_133 (select ARGNAME_stride_NAMEEND_VAL temp770_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp770_113 temp770_110)
             (bvsle temp770_117 temp770_114)
             (bvsle temp770_121 temp770_118)
             (bvsle temp770_125 temp770_122)
             (bvsle temp770_129 temp770_126)
             (bvsle temp770_133 temp770_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_134 #x0000000000000000))
(assert (= var1322807 temp770_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_135 #x0000000000000001))
(assert (= var1322819 temp770_135))
(assert (= temp770_136 #x0000000000000000))
(assert (= var1310898 temp770_136))
(assert (= temp770_137 #x0000000000000000))
(assert (= temp770_138 temp770_137))
(assert (= temp770_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_138)))
(assert (= temp770_140 #x0000000000000001))
(assert (= temp770_141 temp770_140))
(assert (= temp770_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_141)))
(assert (= temp770_143 #x0000000000000002))
(assert (= temp770_144 temp770_143))
(assert (= temp770_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_144)))
(assert (= temp770_146 #x0000000000000003))
(assert (= temp770_147 temp770_146))
(assert (= temp770_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_147)))
(assert (= temp770_149 #x0000000000000004))
(assert (= temp770_150 temp770_149))
(assert (= temp770_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_150)))
(assert (= temp770_152 #x0000000000000005))
(assert (= temp770_153 temp770_152))
(assert (= temp770_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_153)))
(assert (= temp770_156 var1310898))
(assert (= temp770_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_156)))
(assert (= temp770_155 temp770_157))
(assert (= var1322852
   (ite (bvslt temp770_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_158 #x0000000000000000))
(assert (= var1322852 temp770_158))
(assert (= temp770_159 #x0000000000000000))
(assert (= var1310898 temp770_159))
(assert (= temp770_161 var1310898))
(assert (= temp770_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_161)))
(assert (= temp770_160 temp770_162))
(assert (= var1322874 (bvsmod temp770_160 ARGNAME_groups_NAMEEND)))
(assert (= temp770_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp770_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp770_164 #x0000000000000001))
(assert (= var1322875 temp770_164))
(assert (= temp770_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp770_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_166 #x0000000000000001))
(assert (= var1322895 temp770_166))
(assert (= temp770_167 #x0000000000000001))
(assert (= var1311786 temp770_167))
(assert (= temp770_168 #x0000000000000000))
(assert (= temp770_169 temp770_168))
(assert (= temp770_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp770_169)))
(assert (= temp770_171 #x0000000000000001))
(assert (= temp770_172 temp770_171))
(assert (= temp770_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp770_172)))
(assert (= temp770_174 #x0000000000000002))
(assert (= temp770_175 temp770_174))
(assert (= temp770_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp770_175)))
(assert (= temp770_177 #x0000000000000003))
(assert (= temp770_178 temp770_177))
(assert (= temp770_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp770_178)))
(assert (= temp770_180 #x0000000000000004))
(assert (= temp770_181 temp770_180))
(assert (= temp770_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp770_181)))
(assert (= temp770_183 #x0000000000000005))
(assert (= temp770_184 temp770_183))
(assert (= temp770_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp770_184)))
(assert (= temp770_186 #x0000000000000000))
(assert (= temp770_187
   (ite (bvslt var1311786 temp770_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp770_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp770_187)))
(assert (= var1322903 temp770_188))
(assert (bvslt (ite (bvslt var1311786 temp770_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp770_189 #x0000000000000001))
(assert (= var1311786 temp770_189))
(assert (= temp770_191 var1311786))
(assert (= temp770_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_191)))
(assert (= temp770_190 temp770_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp770_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp770_193 #x0000000000000001))
(assert (= var1322908 temp770_193))
(assert (= temp770_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp770_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_195 #x0000000000000001))
(assert (= var1322975 temp770_195))
(assert (= temp770_196 #x0000000000000000))
(assert (= var1310898 temp770_196))
(assert (= temp770_197 #x0000000000000000))
(assert (= temp770_198 temp770_197))
(assert (= temp770_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp770_198)))
(assert (= temp770_200 #x0000000000000001))
(assert (= temp770_201 temp770_200))
(assert (= temp770_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp770_201)))
(assert (= temp770_203 #x0000000000000002))
(assert (= temp770_204 temp770_203))
(assert (= temp770_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp770_204)))
(assert (= temp770_206 #x0000000000000003))
(assert (= temp770_207 temp770_206))
(assert (= temp770_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp770_207)))
(assert (= temp770_209 #x0000000000000004))
(assert (= temp770_210 temp770_209))
(assert (= temp770_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp770_210)))
(assert (= temp770_212 #x0000000000000005))
(assert (= temp770_213 temp770_212))
(assert (= temp770_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp770_213)))
(assert (= temp770_215 #x0000000000000000))
(assert (= temp770_216
   (ite (bvslt var1310898 temp770_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp770_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp770_216)))
(assert (= var1322977 temp770_217))
(assert (bvslt (ite (bvslt var1310898 temp770_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp770_218 #x0000000000000000))
(assert (= var1310898 temp770_218))
(assert (= temp770_220 var1310898))
(assert (= temp770_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp770_220)))
(assert (= temp770_219 temp770_221))
(assert (= var1322980
   (ite (= var1322977 temp770_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp770_222 #x0000000000000001))
(assert (= var1322980 temp770_222))
(assert (= temp770_223 #x0000000000000002))
(assert (= var1848169 temp770_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp770_225 #x0000000000000001))
(assert (= var1323065 temp770_225))
(assert (= temp770_226 #x0000000000000001))
(assert (= var3486735 temp770_226))
(assert (= temp770_227 #x0000000000000001))
(assert (= var3814415 temp770_227))
(assert (= temp770_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp770_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_229 #x0000000000000001))
(assert (= var79986 temp770_229))
(assert (= temp770_230 #x0000000000000001))
(assert (= var80116 temp770_230))
(assert (= var4796905 var80116))
(assert (= temp770_231 #x0000000000000000))
(assert (= var4784306 temp770_231))
(assert (= temp770_232 #x0000000000000000))
(assert (= temp770_233
   (ite (bvslt var4784306 temp770_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp770_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp770_233)))
(assert (= var4796924 temp770_234))
(assert (bvslt (ite (bvslt var4784306 temp770_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp770_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp770_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp770_236 #x0000000000000001))
(assert (= var4796925 temp770_236))
(assert (= temp770_237 #x0000000000000000))
(assert (= var4996927 temp770_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp770_238 #x0000000000000002))
(assert (= var5125763 temp770_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp770_239 #x0000000000000000))
(assert (= var5191324 temp770_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp770_241 #xffffffffffffffff))
(assert (= temp770_240 temp770_241))
(assert (= temp770_242 #x0000000000000001))
(assert (= var66602 temp770_242))
(assert (= temp770_243 #x0000000000000000))
(assert (= temp770_244
   (ite (bvslt var66602 temp770_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp770_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp770_244)))
(assert (= var80523 temp770_245))
(assert (bvslt (ite (bvslt var66602 temp770_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp770_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp770_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp770_247 #x0000000000000000))
(assert (= var80524 temp770_247))
(assert (= temp770_248 #x0000000000000001))
(assert (= var79986 temp770_248))
(model-add temp770_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp770_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp770_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






