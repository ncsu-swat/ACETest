(declare-fun temp890_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp890_2 () (_ BitVec 64))
(declare-fun temp890_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp890_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp890_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp890_6 () (_ BitVec 64))
(declare-fun temp890_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_8 () (_ BitVec 64))
(declare-fun temp890_9 () (_ BitVec 64))
(declare-fun temp890_10 () (_ BitVec 64))
(declare-fun temp890_11 () (_ BitVec 64))
(declare-fun temp890_12 () (_ BitVec 64))
(declare-fun temp890_13 () (_ BitVec 64))
(declare-fun temp890_14 () (_ BitVec 64))
(declare-fun temp890_15 () (_ BitVec 64))
(declare-fun temp890_16 () (_ BitVec 64))
(declare-fun temp890_17 () (_ BitVec 64))
(declare-fun temp890_18 () (_ BitVec 64))
(declare-fun temp890_19 () (_ BitVec 64))
(declare-fun temp890_20 () (_ BitVec 64))
(declare-fun temp890_21 () (_ BitVec 64))
(declare-fun temp890_22 () (_ BitVec 64))
(declare-fun temp890_23 () (_ BitVec 64))
(declare-fun temp890_24 () (_ BitVec 64))
(declare-fun temp890_25 () (_ BitVec 64))
(declare-fun temp890_26 () (_ BitVec 64))
(declare-fun temp890_27 () (_ BitVec 64))
(declare-fun temp890_28 () (_ BitVec 64))
(declare-fun temp890_29 () (_ BitVec 64))
(declare-fun temp890_30 () (_ BitVec 64))
(declare-fun temp890_31 () (_ BitVec 64))
(declare-fun temp890_32 () (_ BitVec 64))
(declare-fun temp890_33 () (_ BitVec 64))
(declare-fun temp890_34 () (_ BitVec 64))
(declare-fun temp890_35 () (_ BitVec 64))
(declare-fun temp890_36 () (_ BitVec 64))
(declare-fun temp890_37 () (_ BitVec 64))
(declare-fun temp890_38 () (_ BitVec 64))
(declare-fun temp890_39 () (_ BitVec 64))
(declare-fun temp890_40 () (_ BitVec 64))
(declare-fun temp890_41 () (_ BitVec 64))
(declare-fun temp890_42 () (_ BitVec 64))
(declare-fun temp890_43 () (_ BitVec 64))
(declare-fun temp890_44 () (_ BitVec 64))
(declare-fun temp890_45 () (_ BitVec 64))
(declare-fun temp890_46 () (_ BitVec 64))
(declare-fun temp890_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp890_48 () (_ BitVec 64))
(declare-fun temp890_49 () (_ BitVec 64))
(declare-fun temp890_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_51 () (_ BitVec 64))
(declare-fun temp890_52 () (_ BitVec 64))
(declare-fun temp890_53 () (_ BitVec 64))
(declare-fun temp890_54 () (_ BitVec 64))
(declare-fun temp890_55 () (_ BitVec 64))
(declare-fun temp890_56 () (_ BitVec 64))
(declare-fun temp890_57 () (_ BitVec 64))
(declare-fun temp890_58 () (_ BitVec 64))
(declare-fun temp890_59 () (_ BitVec 64))
(declare-fun temp890_60 () (_ BitVec 64))
(declare-fun temp890_61 () (_ BitVec 64))
(declare-fun temp890_62 () (_ BitVec 64))
(declare-fun temp890_63 () (_ BitVec 64))
(declare-fun temp890_64 () (_ BitVec 64))
(declare-fun temp890_65 () (_ BitVec 64))
(declare-fun temp890_66 () (_ BitVec 64))
(declare-fun temp890_67 () (_ BitVec 64))
(declare-fun temp890_68 () (_ BitVec 64))
(declare-fun temp890_69 () (_ BitVec 64))
(declare-fun temp890_70 () (_ BitVec 64))
(declare-fun temp890_71 () (_ BitVec 64))
(declare-fun temp890_72 () (_ BitVec 64))
(declare-fun temp890_73 () (_ BitVec 64))
(declare-fun temp890_74 () (_ BitVec 64))
(declare-fun temp890_75 () (_ BitVec 64))
(declare-fun temp890_76 () (_ BitVec 64))
(declare-fun temp890_77 () (_ BitVec 64))
(declare-fun temp890_78 () (_ BitVec 64))
(declare-fun temp890_79 () (_ BitVec 64))
(declare-fun temp890_80 () (_ BitVec 64))
(declare-fun temp890_81 () (_ BitVec 64))
(declare-fun temp890_82 () (_ BitVec 64))
(declare-fun temp890_83 () (_ BitVec 64))
(declare-fun temp890_84 () (_ BitVec 64))
(declare-fun temp890_85 () (_ BitVec 64))
(declare-fun temp890_86 () (_ BitVec 64))
(declare-fun temp890_87 () (_ BitVec 64))
(declare-fun temp890_88 () (_ BitVec 64))
(declare-fun temp890_89 () (_ BitVec 64))
(declare-fun temp890_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp890_91 () (_ BitVec 64))
(declare-fun temp890_92 () (_ BitVec 64))
(declare-fun temp890_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_94 () (_ BitVec 64))
(declare-fun temp890_95 () (_ BitVec 64))
(declare-fun temp890_96 () (_ BitVec 64))
(declare-fun temp890_97 () (_ BitVec 64))
(declare-fun temp890_98 () (_ BitVec 64))
(declare-fun temp890_99 () (_ BitVec 64))
(declare-fun temp890_100 () (_ BitVec 64))
(declare-fun temp890_101 () (_ BitVec 64))
(declare-fun temp890_102 () (_ BitVec 64))
(declare-fun temp890_103 () (_ BitVec 64))
(declare-fun temp890_104 () (_ BitVec 64))
(declare-fun temp890_105 () (_ BitVec 64))
(declare-fun temp890_106 () (_ BitVec 64))
(declare-fun temp890_107 () (_ BitVec 64))
(declare-fun temp890_108 () (_ BitVec 64))
(declare-fun temp890_109 () (_ BitVec 64))
(declare-fun temp890_110 () (_ BitVec 64))
(declare-fun temp890_111 () (_ BitVec 64))
(declare-fun temp890_112 () (_ BitVec 64))
(declare-fun temp890_113 () (_ BitVec 64))
(declare-fun temp890_114 () (_ BitVec 64))
(declare-fun temp890_115 () (_ BitVec 64))
(declare-fun temp890_116 () (_ BitVec 64))
(declare-fun temp890_117 () (_ BitVec 64))
(declare-fun temp890_118 () (_ BitVec 64))
(declare-fun temp890_119 () (_ BitVec 64))
(declare-fun temp890_120 () (_ BitVec 64))
(declare-fun temp890_121 () (_ BitVec 64))
(declare-fun temp890_122 () (_ BitVec 64))
(declare-fun temp890_123 () (_ BitVec 64))
(declare-fun temp890_124 () (_ BitVec 64))
(declare-fun temp890_125 () (_ BitVec 64))
(declare-fun temp890_126 () (_ BitVec 64))
(declare-fun temp890_127 () (_ BitVec 64))
(declare-fun temp890_128 () (_ BitVec 64))
(declare-fun temp890_129 () (_ BitVec 64))
(declare-fun temp890_130 () (_ BitVec 64))
(declare-fun temp890_131 () (_ BitVec 64))
(declare-fun temp890_132 () (_ BitVec 64))
(declare-fun temp890_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp890_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp890_135 () (_ BitVec 64))
(declare-fun temp890_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp890_137 () (_ BitVec 64))
(declare-fun temp890_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_139 () (_ BitVec 64))
(declare-fun temp890_140 () (_ BitVec 64))
(declare-fun temp890_141 () (_ BitVec 64))
(declare-fun temp890_142 () (_ BitVec 64))
(declare-fun temp890_143 () (_ BitVec 64))
(declare-fun temp890_144 () (_ BitVec 64))
(declare-fun temp890_145 () (_ BitVec 64))
(declare-fun temp890_146 () (_ BitVec 64))
(declare-fun temp890_147 () (_ BitVec 64))
(declare-fun temp890_148 () (_ BitVec 64))
(declare-fun temp890_149 () (_ BitVec 64))
(declare-fun temp890_150 () (_ BitVec 64))
(declare-fun temp890_151 () (_ BitVec 64))
(declare-fun temp890_152 () (_ BitVec 64))
(declare-fun temp890_153 () (_ BitVec 64))
(declare-fun temp890_154 () (_ BitVec 64))
(declare-fun temp890_156 () (_ BitVec 64))
(declare-fun temp890_157 () (_ BitVec 64))
(declare-fun temp890_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp890_158 () (_ BitVec 64))
(declare-fun temp890_159 () (_ BitVec 64))
(declare-fun temp890_161 () (_ BitVec 64))
(declare-fun temp890_162 () (_ BitVec 64))
(declare-fun temp890_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp890_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp890_164 () (_ BitVec 64))
(declare-fun temp890_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp890_166 () (_ BitVec 64))
(declare-fun temp890_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp890_168 () (_ BitVec 64))
(declare-fun temp890_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_170 () (_ BitVec 64))
(declare-fun temp890_171 () (_ BitVec 64))
(declare-fun temp890_172 () (_ BitVec 64))
(declare-fun temp890_173 () (_ BitVec 64))
(declare-fun temp890_174 () (_ BitVec 64))
(declare-fun temp890_175 () (_ BitVec 64))
(declare-fun temp890_176 () (_ BitVec 64))
(declare-fun temp890_177 () (_ BitVec 64))
(declare-fun temp890_178 () (_ BitVec 64))
(declare-fun temp890_179 () (_ BitVec 64))
(declare-fun temp890_180 () (_ BitVec 64))
(declare-fun temp890_181 () (_ BitVec 64))
(declare-fun temp890_182 () (_ BitVec 64))
(declare-fun temp890_183 () (_ BitVec 64))
(declare-fun temp890_184 () (_ BitVec 64))
(declare-fun temp890_185 () (_ BitVec 64))
(declare-fun temp890_186 () (_ BitVec 64))
(declare-fun temp890_187 () (_ BitVec 64))
(declare-fun temp890_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp890_189 () (_ BitVec 64))
(declare-fun temp890_191 () (_ BitVec 64))
(declare-fun temp890_192 () (_ BitVec 64))
(declare-fun temp890_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp890_193 () (_ BitVec 64))
(declare-fun temp890_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp890_195 () (_ BitVec 64))
(declare-fun temp890_196 () (_ BitVec 64))
(declare-fun temp890_197 () (_ BitVec 64))
(declare-fun temp890_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_199 () (_ BitVec 64))
(declare-fun temp890_200 () (_ BitVec 64))
(declare-fun temp890_201 () (_ BitVec 64))
(declare-fun temp890_202 () (_ BitVec 64))
(declare-fun temp890_203 () (_ BitVec 64))
(declare-fun temp890_204 () (_ BitVec 64))
(declare-fun temp890_205 () (_ BitVec 64))
(declare-fun temp890_206 () (_ BitVec 64))
(declare-fun temp890_207 () (_ BitVec 64))
(declare-fun temp890_208 () (_ BitVec 64))
(declare-fun temp890_209 () (_ BitVec 64))
(declare-fun temp890_210 () (_ BitVec 64))
(declare-fun temp890_211 () (_ BitVec 64))
(declare-fun temp890_212 () (_ BitVec 64))
(declare-fun temp890_213 () (_ BitVec 64))
(declare-fun temp890_214 () (_ BitVec 64))
(declare-fun temp890_215 () (_ BitVec 64))
(declare-fun temp890_216 () (_ BitVec 64))
(declare-fun temp890_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp890_218 () (_ BitVec 64))
(declare-fun temp890_220 () (_ BitVec 64))
(declare-fun temp890_221 () (_ BitVec 64))
(declare-fun temp890_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp890_222 () (_ BitVec 64))
(declare-fun temp890_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp890_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp890_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp890_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp890_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp890_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp890_229 () (_ BitVec 64))
(declare-fun temp890_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp890_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp890_232 () (_ BitVec 64))
(declare-fun temp890_233 () (_ BitVec 64))
(declare-fun temp890_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp890_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp890_236 () (_ BitVec 64))
(declare-fun temp890_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp890_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp890_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun temp890_240 () (_ BitVec 64))
(assert (= temp890_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp890_1)))
(assert (= temp890_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp890_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_3 #x0000000000000000))
(assert (= var79869 temp890_3))
(assert (= temp890_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp890_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_5 #x0000000000000000))
(assert (= var79914 temp890_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp890_6 #x0000000000000000))
(assert (= temp890_7 temp890_6))
(assert (= temp890_8 (select ARGNAME_padding_NAMEEND_VAL temp890_7)))
(assert (= temp890_9 #x0000000000000001))
(assert (= temp890_10 temp890_9))
(assert (= temp890_11 (select ARGNAME_padding_NAMEEND_VAL temp890_10)))
(assert (= temp890_12 #x0000000000000002))
(assert (= temp890_13 temp890_12))
(assert (= temp890_14 (select ARGNAME_padding_NAMEEND_VAL temp890_13)))
(assert (= temp890_15 #x0000000000000003))
(assert (= temp890_16 temp890_15))
(assert (= temp890_17 (select ARGNAME_padding_NAMEEND_VAL temp890_16)))
(assert (= temp890_18 #x0000000000000004))
(assert (= temp890_19 temp890_18))
(assert (= temp890_20 (select ARGNAME_padding_NAMEEND_VAL temp890_19)))
(assert (= temp890_21 #x0000000000000005))
(assert (= temp890_22 temp890_21))
(assert (= temp890_23 (select ARGNAME_padding_NAMEEND_VAL temp890_22)))
(assert (= temp890_24 #x0000000000000000))
(assert (= temp890_25 #x0000000000000000))
(assert (= temp890_26 temp890_25))
(assert (= temp890_27 (select ARGNAME_padding_NAMEEND_VAL temp890_26)))
(assert (= temp890_28 #x0000000000000000))
(assert (= temp890_29 #x0000000000000001))
(assert (= temp890_30 temp890_29))
(assert (= temp890_31 (select ARGNAME_padding_NAMEEND_VAL temp890_30)))
(assert (= temp890_32 #x0000000000000000))
(assert (= temp890_33 #x0000000000000002))
(assert (= temp890_34 temp890_33))
(assert (= temp890_35 (select ARGNAME_padding_NAMEEND_VAL temp890_34)))
(assert (= temp890_36 #x0000000000000000))
(assert (= temp890_37 #x0000000000000003))
(assert (= temp890_38 temp890_37))
(assert (= temp890_39 (select ARGNAME_padding_NAMEEND_VAL temp890_38)))
(assert (= temp890_40 #x0000000000000000))
(assert (= temp890_41 #x0000000000000004))
(assert (= temp890_42 temp890_41))
(assert (= temp890_43 (select ARGNAME_padding_NAMEEND_VAL temp890_42)))
(assert (= temp890_44 #x0000000000000000))
(assert (= temp890_45 #x0000000000000005))
(assert (= temp890_46 temp890_45))
(assert (= temp890_47 (select ARGNAME_padding_NAMEEND_VAL temp890_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp890_27 temp890_24)
             (bvslt temp890_31 temp890_28)
             (bvslt temp890_35 temp890_32)
             (bvslt temp890_39 temp890_36)
             (bvslt temp890_43 temp890_40)
             (bvslt temp890_47 temp890_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_48 #x0000000000000000))
(assert (= var1322786 temp890_48))
(assert (= temp890_49 #x0000000000000000))
(assert (= temp890_50 temp890_49))
(assert (= temp890_51 (select ARGNAME_output_padding_NAMEEND_VAL temp890_50)))
(assert (= temp890_52 #x0000000000000001))
(assert (= temp890_53 temp890_52))
(assert (= temp890_54 (select ARGNAME_output_padding_NAMEEND_VAL temp890_53)))
(assert (= temp890_55 #x0000000000000002))
(assert (= temp890_56 temp890_55))
(assert (= temp890_57 (select ARGNAME_output_padding_NAMEEND_VAL temp890_56)))
(assert (= temp890_58 #x0000000000000003))
(assert (= temp890_59 temp890_58))
(assert (= temp890_60 (select ARGNAME_output_padding_NAMEEND_VAL temp890_59)))
(assert (= temp890_61 #x0000000000000004))
(assert (= temp890_62 temp890_61))
(assert (= temp890_63 (select ARGNAME_output_padding_NAMEEND_VAL temp890_62)))
(assert (= temp890_64 #x0000000000000005))
(assert (= temp890_65 temp890_64))
(assert (= temp890_66 (select ARGNAME_output_padding_NAMEEND_VAL temp890_65)))
(assert (= temp890_67 #x0000000000000000))
(assert (= temp890_68 #x0000000000000000))
(assert (= temp890_69 temp890_68))
(assert (= temp890_70 (select ARGNAME_output_padding_NAMEEND_VAL temp890_69)))
(assert (= temp890_71 #x0000000000000000))
(assert (= temp890_72 #x0000000000000001))
(assert (= temp890_73 temp890_72))
(assert (= temp890_74 (select ARGNAME_output_padding_NAMEEND_VAL temp890_73)))
(assert (= temp890_75 #x0000000000000000))
(assert (= temp890_76 #x0000000000000002))
(assert (= temp890_77 temp890_76))
(assert (= temp890_78 (select ARGNAME_output_padding_NAMEEND_VAL temp890_77)))
(assert (= temp890_79 #x0000000000000000))
(assert (= temp890_80 #x0000000000000003))
(assert (= temp890_81 temp890_80))
(assert (= temp890_82 (select ARGNAME_output_padding_NAMEEND_VAL temp890_81)))
(assert (= temp890_83 #x0000000000000000))
(assert (= temp890_84 #x0000000000000004))
(assert (= temp890_85 temp890_84))
(assert (= temp890_86 (select ARGNAME_output_padding_NAMEEND_VAL temp890_85)))
(assert (= temp890_87 #x0000000000000000))
(assert (= temp890_88 #x0000000000000005))
(assert (= temp890_89 temp890_88))
(assert (= temp890_90 (select ARGNAME_output_padding_NAMEEND_VAL temp890_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp890_70 temp890_67)
             (bvslt temp890_74 temp890_71)
             (bvslt temp890_78 temp890_75)
             (bvslt temp890_82 temp890_79)
             (bvslt temp890_86 temp890_83)
             (bvslt temp890_90 temp890_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_91 #x0000000000000000))
(assert (= var1322797 temp890_91))
(assert (= temp890_92 #x0000000000000000))
(assert (= temp890_93 temp890_92))
(assert (= temp890_94 (select ARGNAME_stride_NAMEEND_VAL temp890_93)))
(assert (= temp890_95 #x0000000000000001))
(assert (= temp890_96 temp890_95))
(assert (= temp890_97 (select ARGNAME_stride_NAMEEND_VAL temp890_96)))
(assert (= temp890_98 #x0000000000000002))
(assert (= temp890_99 temp890_98))
(assert (= temp890_100 (select ARGNAME_stride_NAMEEND_VAL temp890_99)))
(assert (= temp890_101 #x0000000000000003))
(assert (= temp890_102 temp890_101))
(assert (= temp890_103 (select ARGNAME_stride_NAMEEND_VAL temp890_102)))
(assert (= temp890_104 #x0000000000000004))
(assert (= temp890_105 temp890_104))
(assert (= temp890_106 (select ARGNAME_stride_NAMEEND_VAL temp890_105)))
(assert (= temp890_107 #x0000000000000005))
(assert (= temp890_108 temp890_107))
(assert (= temp890_109 (select ARGNAME_stride_NAMEEND_VAL temp890_108)))
(assert (= temp890_110 #x0000000000000000))
(assert (= temp890_111 #x0000000000000000))
(assert (= temp890_112 temp890_111))
(assert (= temp890_113 (select ARGNAME_stride_NAMEEND_VAL temp890_112)))
(assert (= temp890_114 #x0000000000000000))
(assert (= temp890_115 #x0000000000000001))
(assert (= temp890_116 temp890_115))
(assert (= temp890_117 (select ARGNAME_stride_NAMEEND_VAL temp890_116)))
(assert (= temp890_118 #x0000000000000000))
(assert (= temp890_119 #x0000000000000002))
(assert (= temp890_120 temp890_119))
(assert (= temp890_121 (select ARGNAME_stride_NAMEEND_VAL temp890_120)))
(assert (= temp890_122 #x0000000000000000))
(assert (= temp890_123 #x0000000000000003))
(assert (= temp890_124 temp890_123))
(assert (= temp890_125 (select ARGNAME_stride_NAMEEND_VAL temp890_124)))
(assert (= temp890_126 #x0000000000000000))
(assert (= temp890_127 #x0000000000000004))
(assert (= temp890_128 temp890_127))
(assert (= temp890_129 (select ARGNAME_stride_NAMEEND_VAL temp890_128)))
(assert (= temp890_130 #x0000000000000000))
(assert (= temp890_131 #x0000000000000005))
(assert (= temp890_132 temp890_131))
(assert (= temp890_133 (select ARGNAME_stride_NAMEEND_VAL temp890_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp890_113 temp890_110)
             (bvsle temp890_117 temp890_114)
             (bvsle temp890_121 temp890_118)
             (bvsle temp890_125 temp890_122)
             (bvsle temp890_129 temp890_126)
             (bvsle temp890_133 temp890_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_134 #x0000000000000000))
(assert (= var1322807 temp890_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_135 #x0000000000000001))
(assert (= var1322819 temp890_135))
(assert (= temp890_136 #x0000000000000000))
(assert (= var1310898 temp890_136))
(assert (= temp890_137 #x0000000000000000))
(assert (= temp890_138 temp890_137))
(assert (= temp890_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_138)))
(assert (= temp890_140 #x0000000000000001))
(assert (= temp890_141 temp890_140))
(assert (= temp890_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_141)))
(assert (= temp890_143 #x0000000000000002))
(assert (= temp890_144 temp890_143))
(assert (= temp890_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_144)))
(assert (= temp890_146 #x0000000000000003))
(assert (= temp890_147 temp890_146))
(assert (= temp890_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_147)))
(assert (= temp890_149 #x0000000000000004))
(assert (= temp890_150 temp890_149))
(assert (= temp890_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_150)))
(assert (= temp890_152 #x0000000000000005))
(assert (= temp890_153 temp890_152))
(assert (= temp890_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_153)))
(assert (= temp890_156 var1310898))
(assert (= temp890_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_156)))
(assert (= temp890_155 temp890_157))
(assert (= var1322852
   (ite (bvslt temp890_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_158 #x0000000000000000))
(assert (= var1322852 temp890_158))
(assert (= temp890_159 #x0000000000000000))
(assert (= var1310898 temp890_159))
(assert (= temp890_161 var1310898))
(assert (= temp890_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_161)))
(assert (= temp890_160 temp890_162))
(assert (= var1322874 (bvsmod temp890_160 ARGNAME_groups_NAMEEND)))
(assert (= temp890_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp890_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_164 #x0000000000000001))
(assert (= var1322875 temp890_164))
(assert (= temp890_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp890_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_166 #x0000000000000001))
(assert (= var1322895 temp890_166))
(assert (= temp890_167 #x0000000000000001))
(assert (= var1311786 temp890_167))
(assert (= temp890_168 #x0000000000000000))
(assert (= temp890_169 temp890_168))
(assert (= temp890_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_169)))
(assert (= temp890_171 #x0000000000000001))
(assert (= temp890_172 temp890_171))
(assert (= temp890_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_172)))
(assert (= temp890_174 #x0000000000000002))
(assert (= temp890_175 temp890_174))
(assert (= temp890_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_175)))
(assert (= temp890_177 #x0000000000000003))
(assert (= temp890_178 temp890_177))
(assert (= temp890_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_178)))
(assert (= temp890_180 #x0000000000000004))
(assert (= temp890_181 temp890_180))
(assert (= temp890_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_181)))
(assert (= temp890_183 #x0000000000000005))
(assert (= temp890_184 temp890_183))
(assert (= temp890_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_184)))
(assert (= temp890_186 #x0000000000000000))
(assert (= temp890_187
   (ite (bvslt var1311786 temp890_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp890_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_187)))
(assert (= var1322903 temp890_188))
(assert (bvslt (ite (bvslt var1311786 temp890_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp890_189 #x0000000000000001))
(assert (= var1311786 temp890_189))
(assert (= temp890_191 var1311786))
(assert (= temp890_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_191)))
(assert (= temp890_190 temp890_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp890_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_193 #x0000000000000001))
(assert (= var1322908 temp890_193))
(assert (= temp890_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp890_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_195 #x0000000000000001))
(assert (= var1322975 temp890_195))
(assert (= temp890_196 #x0000000000000000))
(assert (= var1310898 temp890_196))
(assert (= temp890_197 #x0000000000000000))
(assert (= temp890_198 temp890_197))
(assert (= temp890_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp890_198)))
(assert (= temp890_200 #x0000000000000001))
(assert (= temp890_201 temp890_200))
(assert (= temp890_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp890_201)))
(assert (= temp890_203 #x0000000000000002))
(assert (= temp890_204 temp890_203))
(assert (= temp890_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp890_204)))
(assert (= temp890_206 #x0000000000000003))
(assert (= temp890_207 temp890_206))
(assert (= temp890_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp890_207)))
(assert (= temp890_209 #x0000000000000004))
(assert (= temp890_210 temp890_209))
(assert (= temp890_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp890_210)))
(assert (= temp890_212 #x0000000000000005))
(assert (= temp890_213 temp890_212))
(assert (= temp890_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp890_213)))
(assert (= temp890_215 #x0000000000000000))
(assert (= temp890_216
   (ite (bvslt var1310898 temp890_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp890_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp890_216)))
(assert (= var1322977 temp890_217))
(assert (bvslt (ite (bvslt var1310898 temp890_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp890_218 #x0000000000000000))
(assert (= var1310898 temp890_218))
(assert (= temp890_220 var1310898))
(assert (= temp890_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_220)))
(assert (= temp890_219 temp890_221))
(assert (= var1322980
   (ite (= var1322977 temp890_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_222 #x0000000000000001))
(assert (= var1322980 temp890_222))
(assert (= temp890_223 #x0000000000000002))
(assert (= var1848169 temp890_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp890_225 #x0000000000000001))
(assert (= var1323065 temp890_225))
(assert (= temp890_226 #x0000000000000001))
(assert (= var3486735 temp890_226))
(assert (= temp890_227 #x0000000000000001))
(assert (= var3814415 temp890_227))
(assert (= temp890_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp890_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_229 #x0000000000000001))
(assert (= var79986 temp890_229))
(assert (= temp890_230 #x0000000000000001))
(assert (= var80116 temp890_230))
(assert (= var4796905 var80116))
(assert (= temp890_231 #x0000000000000000))
(assert (= var4784306 temp890_231))
(assert (= temp890_232 #x0000000000000000))
(assert (= temp890_233
   (ite (bvslt var4784306 temp890_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp890_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_233)))
(assert (= var4796924 temp890_234))
(assert (bvslt (ite (bvslt var4784306 temp890_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp890_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp890_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_236 #x0000000000000001))
(assert (= var4796925 temp890_236))
(assert (= temp890_237 #x0000000000000000))
(assert (= var4996927 temp890_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp890_238 #x0000000000000002))
(assert (= var5125763 temp890_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_239 #x0000000000000000))
(assert (= var5191324 temp890_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6238608 var80129))
(assert (= var6500752 var80129))
(assert (= temp890_240 #x0000000000000001))
(assert (= var79986 temp890_240))
(model-add temp890_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp890_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp890_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






