(declare-fun temp1033_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1033_2 () (_ BitVec 64))
(declare-fun temp1033_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1033_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1033_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1033_6 () (_ BitVec 64))
(declare-fun temp1033_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1033_8 () (_ BitVec 64))
(declare-fun temp1033_9 () (_ BitVec 64))
(declare-fun temp1033_10 () (_ BitVec 64))
(declare-fun temp1033_11 () (_ BitVec 64))
(declare-fun temp1033_12 () (_ BitVec 64))
(declare-fun temp1033_13 () (_ BitVec 64))
(declare-fun temp1033_14 () (_ BitVec 64))
(declare-fun temp1033_15 () (_ BitVec 64))
(declare-fun temp1033_16 () (_ BitVec 64))
(declare-fun temp1033_17 () (_ BitVec 64))
(declare-fun temp1033_18 () (_ BitVec 64))
(declare-fun temp1033_19 () (_ BitVec 64))
(declare-fun temp1033_20 () (_ BitVec 64))
(declare-fun temp1033_21 () (_ BitVec 64))
(declare-fun temp1033_22 () (_ BitVec 64))
(declare-fun temp1033_23 () (_ BitVec 64))
(declare-fun temp1033_24 () (_ BitVec 64))
(declare-fun temp1033_25 () (_ BitVec 64))
(declare-fun temp1033_26 () (_ BitVec 64))
(declare-fun temp1033_27 () (_ BitVec 64))
(declare-fun temp1033_28 () (_ BitVec 64))
(declare-fun temp1033_29 () (_ BitVec 64))
(declare-fun temp1033_30 () (_ BitVec 64))
(declare-fun temp1033_31 () (_ BitVec 64))
(declare-fun temp1033_32 () (_ BitVec 64))
(declare-fun temp1033_33 () (_ BitVec 64))
(declare-fun temp1033_34 () (_ BitVec 64))
(declare-fun temp1033_35 () (_ BitVec 64))
(declare-fun temp1033_36 () (_ BitVec 64))
(declare-fun temp1033_37 () (_ BitVec 64))
(declare-fun temp1033_38 () (_ BitVec 64))
(declare-fun temp1033_39 () (_ BitVec 64))
(declare-fun temp1033_40 () (_ BitVec 64))
(declare-fun temp1033_41 () (_ BitVec 64))
(declare-fun temp1033_42 () (_ BitVec 64))
(declare-fun temp1033_43 () (_ BitVec 64))
(declare-fun temp1033_44 () (_ BitVec 64))
(declare-fun temp1033_45 () (_ BitVec 64))
(declare-fun temp1033_46 () (_ BitVec 64))
(declare-fun temp1033_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1033_48 () (_ BitVec 64))
(declare-fun temp1033_49 () (_ BitVec 64))
(declare-fun temp1033_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1033_51 () (_ BitVec 64))
(declare-fun temp1033_52 () (_ BitVec 64))
(declare-fun temp1033_53 () (_ BitVec 64))
(declare-fun temp1033_54 () (_ BitVec 64))
(declare-fun temp1033_55 () (_ BitVec 64))
(declare-fun temp1033_56 () (_ BitVec 64))
(declare-fun temp1033_57 () (_ BitVec 64))
(declare-fun temp1033_58 () (_ BitVec 64))
(declare-fun temp1033_59 () (_ BitVec 64))
(declare-fun temp1033_60 () (_ BitVec 64))
(declare-fun temp1033_61 () (_ BitVec 64))
(declare-fun temp1033_62 () (_ BitVec 64))
(declare-fun temp1033_63 () (_ BitVec 64))
(declare-fun temp1033_64 () (_ BitVec 64))
(declare-fun temp1033_65 () (_ BitVec 64))
(declare-fun temp1033_66 () (_ BitVec 64))
(declare-fun temp1033_67 () (_ BitVec 64))
(declare-fun temp1033_68 () (_ BitVec 64))
(declare-fun temp1033_69 () (_ BitVec 64))
(declare-fun temp1033_70 () (_ BitVec 64))
(declare-fun temp1033_71 () (_ BitVec 64))
(declare-fun temp1033_72 () (_ BitVec 64))
(declare-fun temp1033_73 () (_ BitVec 64))
(declare-fun temp1033_74 () (_ BitVec 64))
(declare-fun temp1033_75 () (_ BitVec 64))
(declare-fun temp1033_76 () (_ BitVec 64))
(declare-fun temp1033_77 () (_ BitVec 64))
(declare-fun temp1033_78 () (_ BitVec 64))
(declare-fun temp1033_79 () (_ BitVec 64))
(declare-fun temp1033_80 () (_ BitVec 64))
(declare-fun temp1033_81 () (_ BitVec 64))
(declare-fun temp1033_82 () (_ BitVec 64))
(declare-fun temp1033_83 () (_ BitVec 64))
(declare-fun temp1033_84 () (_ BitVec 64))
(declare-fun temp1033_85 () (_ BitVec 64))
(declare-fun temp1033_86 () (_ BitVec 64))
(declare-fun temp1033_87 () (_ BitVec 64))
(declare-fun temp1033_88 () (_ BitVec 64))
(declare-fun temp1033_89 () (_ BitVec 64))
(declare-fun temp1033_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1033_91 () (_ BitVec 64))
(declare-fun temp1033_92 () (_ BitVec 64))
(declare-fun temp1033_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1033_94 () (_ BitVec 64))
(declare-fun temp1033_95 () (_ BitVec 64))
(declare-fun temp1033_96 () (_ BitVec 64))
(declare-fun temp1033_97 () (_ BitVec 64))
(declare-fun temp1033_98 () (_ BitVec 64))
(declare-fun temp1033_99 () (_ BitVec 64))
(declare-fun temp1033_100 () (_ BitVec 64))
(declare-fun temp1033_101 () (_ BitVec 64))
(declare-fun temp1033_102 () (_ BitVec 64))
(declare-fun temp1033_103 () (_ BitVec 64))
(declare-fun temp1033_104 () (_ BitVec 64))
(declare-fun temp1033_105 () (_ BitVec 64))
(declare-fun temp1033_106 () (_ BitVec 64))
(declare-fun temp1033_107 () (_ BitVec 64))
(declare-fun temp1033_108 () (_ BitVec 64))
(declare-fun temp1033_109 () (_ BitVec 64))
(declare-fun temp1033_110 () (_ BitVec 64))
(declare-fun temp1033_111 () (_ BitVec 64))
(declare-fun temp1033_112 () (_ BitVec 64))
(declare-fun temp1033_113 () (_ BitVec 64))
(declare-fun temp1033_114 () (_ BitVec 64))
(declare-fun temp1033_115 () (_ BitVec 64))
(declare-fun temp1033_116 () (_ BitVec 64))
(declare-fun temp1033_117 () (_ BitVec 64))
(declare-fun temp1033_118 () (_ BitVec 64))
(declare-fun temp1033_119 () (_ BitVec 64))
(declare-fun temp1033_120 () (_ BitVec 64))
(declare-fun temp1033_121 () (_ BitVec 64))
(declare-fun temp1033_122 () (_ BitVec 64))
(declare-fun temp1033_123 () (_ BitVec 64))
(declare-fun temp1033_124 () (_ BitVec 64))
(declare-fun temp1033_125 () (_ BitVec 64))
(declare-fun temp1033_126 () (_ BitVec 64))
(declare-fun temp1033_127 () (_ BitVec 64))
(declare-fun temp1033_128 () (_ BitVec 64))
(declare-fun temp1033_129 () (_ BitVec 64))
(declare-fun temp1033_130 () (_ BitVec 64))
(declare-fun temp1033_131 () (_ BitVec 64))
(declare-fun temp1033_132 () (_ BitVec 64))
(declare-fun temp1033_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1033_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1033_135 () (_ BitVec 64))
(declare-fun temp1033_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1033_137 () (_ BitVec 64))
(declare-fun temp1033_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1033_139 () (_ BitVec 64))
(declare-fun temp1033_140 () (_ BitVec 64))
(declare-fun temp1033_141 () (_ BitVec 64))
(declare-fun temp1033_142 () (_ BitVec 64))
(declare-fun temp1033_143 () (_ BitVec 64))
(declare-fun temp1033_144 () (_ BitVec 64))
(declare-fun temp1033_145 () (_ BitVec 64))
(declare-fun temp1033_146 () (_ BitVec 64))
(declare-fun temp1033_147 () (_ BitVec 64))
(declare-fun temp1033_148 () (_ BitVec 64))
(declare-fun temp1033_149 () (_ BitVec 64))
(declare-fun temp1033_150 () (_ BitVec 64))
(declare-fun temp1033_151 () (_ BitVec 64))
(declare-fun temp1033_152 () (_ BitVec 64))
(declare-fun temp1033_153 () (_ BitVec 64))
(declare-fun temp1033_154 () (_ BitVec 64))
(declare-fun temp1033_156 () (_ BitVec 64))
(declare-fun temp1033_157 () (_ BitVec 64))
(declare-fun temp1033_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1033_158 () (_ BitVec 64))
(declare-fun temp1033_159 () (_ BitVec 64))
(declare-fun temp1033_161 () (_ BitVec 64))
(declare-fun temp1033_162 () (_ BitVec 64))
(declare-fun temp1033_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1033_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1033_164 () (_ BitVec 64))
(declare-fun temp1033_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1033_166 () (_ BitVec 64))
(declare-fun temp1033_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1033_168 () (_ BitVec 64))
(declare-fun temp1033_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1033_170 () (_ BitVec 64))
(declare-fun temp1033_171 () (_ BitVec 64))
(declare-fun temp1033_172 () (_ BitVec 64))
(declare-fun temp1033_173 () (_ BitVec 64))
(declare-fun temp1033_174 () (_ BitVec 64))
(declare-fun temp1033_175 () (_ BitVec 64))
(declare-fun temp1033_176 () (_ BitVec 64))
(declare-fun temp1033_177 () (_ BitVec 64))
(declare-fun temp1033_178 () (_ BitVec 64))
(declare-fun temp1033_179 () (_ BitVec 64))
(declare-fun temp1033_180 () (_ BitVec 64))
(declare-fun temp1033_181 () (_ BitVec 64))
(declare-fun temp1033_182 () (_ BitVec 64))
(declare-fun temp1033_183 () (_ BitVec 64))
(declare-fun temp1033_184 () (_ BitVec 64))
(declare-fun temp1033_185 () (_ BitVec 64))
(declare-fun temp1033_186 () (_ BitVec 64))
(declare-fun temp1033_187 () (_ BitVec 64))
(declare-fun temp1033_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1033_189 () (_ BitVec 64))
(declare-fun temp1033_191 () (_ BitVec 64))
(declare-fun temp1033_192 () (_ BitVec 64))
(declare-fun temp1033_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1033_193 () (_ BitVec 64))
(declare-fun temp1033_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1033_195 () (_ BitVec 64))
(declare-fun temp1033_196 () (_ BitVec 64))
(declare-fun temp1033_197 () (_ BitVec 64))
(declare-fun temp1033_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1033_199 () (_ BitVec 64))
(declare-fun temp1033_200 () (_ BitVec 64))
(declare-fun temp1033_201 () (_ BitVec 64))
(declare-fun temp1033_202 () (_ BitVec 64))
(declare-fun temp1033_203 () (_ BitVec 64))
(declare-fun temp1033_204 () (_ BitVec 64))
(declare-fun temp1033_205 () (_ BitVec 64))
(declare-fun temp1033_206 () (_ BitVec 64))
(declare-fun temp1033_207 () (_ BitVec 64))
(declare-fun temp1033_208 () (_ BitVec 64))
(declare-fun temp1033_209 () (_ BitVec 64))
(declare-fun temp1033_210 () (_ BitVec 64))
(declare-fun temp1033_211 () (_ BitVec 64))
(declare-fun temp1033_212 () (_ BitVec 64))
(declare-fun temp1033_213 () (_ BitVec 64))
(declare-fun temp1033_214 () (_ BitVec 64))
(declare-fun temp1033_215 () (_ BitVec 64))
(declare-fun temp1033_216 () (_ BitVec 64))
(declare-fun temp1033_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1033_218 () (_ BitVec 64))
(declare-fun temp1033_220 () (_ BitVec 64))
(declare-fun temp1033_221 () (_ BitVec 64))
(declare-fun temp1033_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1033_222 () (_ BitVec 64))
(declare-fun temp1033_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1033_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1033_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1033_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1033_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1033_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1033_229 () (_ BitVec 64))
(declare-fun temp1033_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1033_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1033_232 () (_ BitVec 64))
(declare-fun temp1033_233 () (_ BitVec 64))
(declare-fun temp1033_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1033_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1033_236 () (_ BitVec 64))
(declare-fun temp1033_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1033_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1033_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun var6107536 () (_ BitVec 64))
(declare-fun temp1033_240 () (_ BitVec 64))
(assert (= temp1033_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1033_1)))
(assert (= temp1033_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1033_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_3 #x0000000000000000))
(assert (= var79869 temp1033_3))
(assert (= temp1033_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1033_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_5 #x0000000000000000))
(assert (= var79914 temp1033_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1033_6 #x0000000000000000))
(assert (= temp1033_7 temp1033_6))
(assert (= temp1033_8 (select ARGNAME_padding_NAMEEND_VAL temp1033_7)))
(assert (= temp1033_9 #x0000000000000001))
(assert (= temp1033_10 temp1033_9))
(assert (= temp1033_11 (select ARGNAME_padding_NAMEEND_VAL temp1033_10)))
(assert (= temp1033_12 #x0000000000000002))
(assert (= temp1033_13 temp1033_12))
(assert (= temp1033_14 (select ARGNAME_padding_NAMEEND_VAL temp1033_13)))
(assert (= temp1033_15 #x0000000000000003))
(assert (= temp1033_16 temp1033_15))
(assert (= temp1033_17 (select ARGNAME_padding_NAMEEND_VAL temp1033_16)))
(assert (= temp1033_18 #x0000000000000004))
(assert (= temp1033_19 temp1033_18))
(assert (= temp1033_20 (select ARGNAME_padding_NAMEEND_VAL temp1033_19)))
(assert (= temp1033_21 #x0000000000000005))
(assert (= temp1033_22 temp1033_21))
(assert (= temp1033_23 (select ARGNAME_padding_NAMEEND_VAL temp1033_22)))
(assert (= temp1033_24 #x0000000000000000))
(assert (= temp1033_25 #x0000000000000000))
(assert (= temp1033_26 temp1033_25))
(assert (= temp1033_27 (select ARGNAME_padding_NAMEEND_VAL temp1033_26)))
(assert (= temp1033_28 #x0000000000000000))
(assert (= temp1033_29 #x0000000000000001))
(assert (= temp1033_30 temp1033_29))
(assert (= temp1033_31 (select ARGNAME_padding_NAMEEND_VAL temp1033_30)))
(assert (= temp1033_32 #x0000000000000000))
(assert (= temp1033_33 #x0000000000000002))
(assert (= temp1033_34 temp1033_33))
(assert (= temp1033_35 (select ARGNAME_padding_NAMEEND_VAL temp1033_34)))
(assert (= temp1033_36 #x0000000000000000))
(assert (= temp1033_37 #x0000000000000003))
(assert (= temp1033_38 temp1033_37))
(assert (= temp1033_39 (select ARGNAME_padding_NAMEEND_VAL temp1033_38)))
(assert (= temp1033_40 #x0000000000000000))
(assert (= temp1033_41 #x0000000000000004))
(assert (= temp1033_42 temp1033_41))
(assert (= temp1033_43 (select ARGNAME_padding_NAMEEND_VAL temp1033_42)))
(assert (= temp1033_44 #x0000000000000000))
(assert (= temp1033_45 #x0000000000000005))
(assert (= temp1033_46 temp1033_45))
(assert (= temp1033_47 (select ARGNAME_padding_NAMEEND_VAL temp1033_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1033_27 temp1033_24)
             (bvslt temp1033_31 temp1033_28)
             (bvslt temp1033_35 temp1033_32)
             (bvslt temp1033_39 temp1033_36)
             (bvslt temp1033_43 temp1033_40)
             (bvslt temp1033_47 temp1033_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_48 #x0000000000000000))
(assert (= var1322786 temp1033_48))
(assert (= temp1033_49 #x0000000000000000))
(assert (= temp1033_50 temp1033_49))
(assert (= temp1033_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_50)))
(assert (= temp1033_52 #x0000000000000001))
(assert (= temp1033_53 temp1033_52))
(assert (= temp1033_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_53)))
(assert (= temp1033_55 #x0000000000000002))
(assert (= temp1033_56 temp1033_55))
(assert (= temp1033_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_56)))
(assert (= temp1033_58 #x0000000000000003))
(assert (= temp1033_59 temp1033_58))
(assert (= temp1033_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_59)))
(assert (= temp1033_61 #x0000000000000004))
(assert (= temp1033_62 temp1033_61))
(assert (= temp1033_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_62)))
(assert (= temp1033_64 #x0000000000000005))
(assert (= temp1033_65 temp1033_64))
(assert (= temp1033_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_65)))
(assert (= temp1033_67 #x0000000000000000))
(assert (= temp1033_68 #x0000000000000000))
(assert (= temp1033_69 temp1033_68))
(assert (= temp1033_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_69)))
(assert (= temp1033_71 #x0000000000000000))
(assert (= temp1033_72 #x0000000000000001))
(assert (= temp1033_73 temp1033_72))
(assert (= temp1033_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_73)))
(assert (= temp1033_75 #x0000000000000000))
(assert (= temp1033_76 #x0000000000000002))
(assert (= temp1033_77 temp1033_76))
(assert (= temp1033_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_77)))
(assert (= temp1033_79 #x0000000000000000))
(assert (= temp1033_80 #x0000000000000003))
(assert (= temp1033_81 temp1033_80))
(assert (= temp1033_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_81)))
(assert (= temp1033_83 #x0000000000000000))
(assert (= temp1033_84 #x0000000000000004))
(assert (= temp1033_85 temp1033_84))
(assert (= temp1033_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_85)))
(assert (= temp1033_87 #x0000000000000000))
(assert (= temp1033_88 #x0000000000000005))
(assert (= temp1033_89 temp1033_88))
(assert (= temp1033_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1033_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1033_70 temp1033_67)
             (bvslt temp1033_74 temp1033_71)
             (bvslt temp1033_78 temp1033_75)
             (bvslt temp1033_82 temp1033_79)
             (bvslt temp1033_86 temp1033_83)
             (bvslt temp1033_90 temp1033_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_91 #x0000000000000000))
(assert (= var1322797 temp1033_91))
(assert (= temp1033_92 #x0000000000000000))
(assert (= temp1033_93 temp1033_92))
(assert (= temp1033_94 (select ARGNAME_stride_NAMEEND_VAL temp1033_93)))
(assert (= temp1033_95 #x0000000000000001))
(assert (= temp1033_96 temp1033_95))
(assert (= temp1033_97 (select ARGNAME_stride_NAMEEND_VAL temp1033_96)))
(assert (= temp1033_98 #x0000000000000002))
(assert (= temp1033_99 temp1033_98))
(assert (= temp1033_100 (select ARGNAME_stride_NAMEEND_VAL temp1033_99)))
(assert (= temp1033_101 #x0000000000000003))
(assert (= temp1033_102 temp1033_101))
(assert (= temp1033_103 (select ARGNAME_stride_NAMEEND_VAL temp1033_102)))
(assert (= temp1033_104 #x0000000000000004))
(assert (= temp1033_105 temp1033_104))
(assert (= temp1033_106 (select ARGNAME_stride_NAMEEND_VAL temp1033_105)))
(assert (= temp1033_107 #x0000000000000005))
(assert (= temp1033_108 temp1033_107))
(assert (= temp1033_109 (select ARGNAME_stride_NAMEEND_VAL temp1033_108)))
(assert (= temp1033_110 #x0000000000000000))
(assert (= temp1033_111 #x0000000000000000))
(assert (= temp1033_112 temp1033_111))
(assert (= temp1033_113 (select ARGNAME_stride_NAMEEND_VAL temp1033_112)))
(assert (= temp1033_114 #x0000000000000000))
(assert (= temp1033_115 #x0000000000000001))
(assert (= temp1033_116 temp1033_115))
(assert (= temp1033_117 (select ARGNAME_stride_NAMEEND_VAL temp1033_116)))
(assert (= temp1033_118 #x0000000000000000))
(assert (= temp1033_119 #x0000000000000002))
(assert (= temp1033_120 temp1033_119))
(assert (= temp1033_121 (select ARGNAME_stride_NAMEEND_VAL temp1033_120)))
(assert (= temp1033_122 #x0000000000000000))
(assert (= temp1033_123 #x0000000000000003))
(assert (= temp1033_124 temp1033_123))
(assert (= temp1033_125 (select ARGNAME_stride_NAMEEND_VAL temp1033_124)))
(assert (= temp1033_126 #x0000000000000000))
(assert (= temp1033_127 #x0000000000000004))
(assert (= temp1033_128 temp1033_127))
(assert (= temp1033_129 (select ARGNAME_stride_NAMEEND_VAL temp1033_128)))
(assert (= temp1033_130 #x0000000000000000))
(assert (= temp1033_131 #x0000000000000005))
(assert (= temp1033_132 temp1033_131))
(assert (= temp1033_133 (select ARGNAME_stride_NAMEEND_VAL temp1033_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1033_113 temp1033_110)
             (bvsle temp1033_117 temp1033_114)
             (bvsle temp1033_121 temp1033_118)
             (bvsle temp1033_125 temp1033_122)
             (bvsle temp1033_129 temp1033_126)
             (bvsle temp1033_133 temp1033_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_134 #x0000000000000000))
(assert (= var1322807 temp1033_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_135 #x0000000000000001))
(assert (= var1322819 temp1033_135))
(assert (= temp1033_136 #x0000000000000000))
(assert (= var1310898 temp1033_136))
(assert (= temp1033_137 #x0000000000000000))
(assert (= temp1033_138 temp1033_137))
(assert (= temp1033_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_138)))
(assert (= temp1033_140 #x0000000000000001))
(assert (= temp1033_141 temp1033_140))
(assert (= temp1033_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_141)))
(assert (= temp1033_143 #x0000000000000002))
(assert (= temp1033_144 temp1033_143))
(assert (= temp1033_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_144)))
(assert (= temp1033_146 #x0000000000000003))
(assert (= temp1033_147 temp1033_146))
(assert (= temp1033_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_147)))
(assert (= temp1033_149 #x0000000000000004))
(assert (= temp1033_150 temp1033_149))
(assert (= temp1033_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_150)))
(assert (= temp1033_152 #x0000000000000005))
(assert (= temp1033_153 temp1033_152))
(assert (= temp1033_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_153)))
(assert (= temp1033_156 var1310898))
(assert (= temp1033_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_156)))
(assert (= temp1033_155 temp1033_157))
(assert (= var1322852
   (ite (bvslt temp1033_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_158 #x0000000000000000))
(assert (= var1322852 temp1033_158))
(assert (= temp1033_159 #x0000000000000000))
(assert (= var1310898 temp1033_159))
(assert (= temp1033_161 var1310898))
(assert (= temp1033_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_161)))
(assert (= temp1033_160 temp1033_162))
(assert (= var1322874 (bvsmod temp1033_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1033_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1033_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1033_164 #x0000000000000001))
(assert (= var1322875 temp1033_164))
(assert (= temp1033_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1033_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_166 #x0000000000000001))
(assert (= var1322895 temp1033_166))
(assert (= temp1033_167 #x0000000000000001))
(assert (= var1311786 temp1033_167))
(assert (= temp1033_168 #x0000000000000000))
(assert (= temp1033_169 temp1033_168))
(assert (= temp1033_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1033_169)))
(assert (= temp1033_171 #x0000000000000001))
(assert (= temp1033_172 temp1033_171))
(assert (= temp1033_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1033_172)))
(assert (= temp1033_174 #x0000000000000002))
(assert (= temp1033_175 temp1033_174))
(assert (= temp1033_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1033_175)))
(assert (= temp1033_177 #x0000000000000003))
(assert (= temp1033_178 temp1033_177))
(assert (= temp1033_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1033_178)))
(assert (= temp1033_180 #x0000000000000004))
(assert (= temp1033_181 temp1033_180))
(assert (= temp1033_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1033_181)))
(assert (= temp1033_183 #x0000000000000005))
(assert (= temp1033_184 temp1033_183))
(assert (= temp1033_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1033_184)))
(assert (= temp1033_186 #x0000000000000000))
(assert (= temp1033_187
   (ite (bvslt var1311786 temp1033_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1033_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1033_187)))
(assert (= var1322903 temp1033_188))
(assert (bvslt (ite (bvslt var1311786 temp1033_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1033_189 #x0000000000000001))
(assert (= var1311786 temp1033_189))
(assert (= temp1033_191 var1311786))
(assert (= temp1033_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_191)))
(assert (= temp1033_190 temp1033_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1033_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1033_193 #x0000000000000001))
(assert (= var1322908 temp1033_193))
(assert (= temp1033_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1033_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_195 #x0000000000000001))
(assert (= var1322975 temp1033_195))
(assert (= temp1033_196 #x0000000000000000))
(assert (= var1310898 temp1033_196))
(assert (= temp1033_197 #x0000000000000000))
(assert (= temp1033_198 temp1033_197))
(assert (= temp1033_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1033_198)))
(assert (= temp1033_200 #x0000000000000001))
(assert (= temp1033_201 temp1033_200))
(assert (= temp1033_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1033_201)))
(assert (= temp1033_203 #x0000000000000002))
(assert (= temp1033_204 temp1033_203))
(assert (= temp1033_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1033_204)))
(assert (= temp1033_206 #x0000000000000003))
(assert (= temp1033_207 temp1033_206))
(assert (= temp1033_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1033_207)))
(assert (= temp1033_209 #x0000000000000004))
(assert (= temp1033_210 temp1033_209))
(assert (= temp1033_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1033_210)))
(assert (= temp1033_212 #x0000000000000005))
(assert (= temp1033_213 temp1033_212))
(assert (= temp1033_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1033_213)))
(assert (= temp1033_215 #x0000000000000000))
(assert (= temp1033_216
   (ite (bvslt var1310898 temp1033_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1033_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1033_216)))
(assert (= var1322977 temp1033_217))
(assert (bvslt (ite (bvslt var1310898 temp1033_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1033_218 #x0000000000000000))
(assert (= var1310898 temp1033_218))
(assert (= temp1033_220 var1310898))
(assert (= temp1033_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1033_220)))
(assert (= temp1033_219 temp1033_221))
(assert (= var1322980
   (ite (= var1322977 temp1033_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1033_222 #x0000000000000001))
(assert (= var1322980 temp1033_222))
(assert (= temp1033_223 #x0000000000000002))
(assert (= var1848169 temp1033_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1033_225 #x0000000000000001))
(assert (= var1323065 temp1033_225))
(assert (= temp1033_226 #x0000000000000001))
(assert (= var3486735 temp1033_226))
(assert (= temp1033_227 #x0000000000000001))
(assert (= var3814415 temp1033_227))
(assert (= temp1033_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1033_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_229 #x0000000000000001))
(assert (= var79986 temp1033_229))
(assert (= temp1033_230 #x0000000000000001))
(assert (= var80116 temp1033_230))
(assert (= var4796905 var80116))
(assert (= temp1033_231 #x0000000000000000))
(assert (= var4784306 temp1033_231))
(assert (= temp1033_232 #x0000000000000000))
(assert (= temp1033_233
   (ite (bvslt var4784306 temp1033_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1033_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1033_233)))
(assert (= var4796924 temp1033_234))
(assert (bvslt (ite (bvslt var4784306 temp1033_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1033_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1033_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1033_236 #x0000000000000001))
(assert (= var4796925 temp1033_236))
(assert (= temp1033_237 #x0000000000000000))
(assert (= var4996927 temp1033_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1033_238 #x0000000000000002))
(assert (= var5125763 temp1033_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1033_239 #x0000000000000000))
(assert (= var5191324 temp1033_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5845392 var80129))
(assert (= var6107536 var80129))
(assert (= temp1033_240 #x0000000000000001))
(assert (= var79986 temp1033_240))
(model-add temp1033_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1033_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1033_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






