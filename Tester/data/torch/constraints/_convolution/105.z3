(declare-fun temp138_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp138_2 () (_ BitVec 64))
(declare-fun temp138_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp138_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp138_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp138_6 () (_ BitVec 64))
(declare-fun temp138_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_8 () (_ BitVec 64))
(declare-fun temp138_9 () (_ BitVec 64))
(declare-fun temp138_10 () (_ BitVec 64))
(declare-fun temp138_11 () (_ BitVec 64))
(declare-fun temp138_12 () (_ BitVec 64))
(declare-fun temp138_13 () (_ BitVec 64))
(declare-fun temp138_14 () (_ BitVec 64))
(declare-fun temp138_15 () (_ BitVec 64))
(declare-fun temp138_16 () (_ BitVec 64))
(declare-fun temp138_17 () (_ BitVec 64))
(declare-fun temp138_18 () (_ BitVec 64))
(declare-fun temp138_19 () (_ BitVec 64))
(declare-fun temp138_20 () (_ BitVec 64))
(declare-fun temp138_21 () (_ BitVec 64))
(declare-fun temp138_22 () (_ BitVec 64))
(declare-fun temp138_23 () (_ BitVec 64))
(declare-fun temp138_24 () (_ BitVec 64))
(declare-fun temp138_25 () (_ BitVec 64))
(declare-fun temp138_26 () (_ BitVec 64))
(declare-fun temp138_27 () (_ BitVec 64))
(declare-fun temp138_28 () (_ BitVec 64))
(declare-fun temp138_29 () (_ BitVec 64))
(declare-fun temp138_30 () (_ BitVec 64))
(declare-fun temp138_31 () (_ BitVec 64))
(declare-fun temp138_32 () (_ BitVec 64))
(declare-fun temp138_33 () (_ BitVec 64))
(declare-fun temp138_34 () (_ BitVec 64))
(declare-fun temp138_35 () (_ BitVec 64))
(declare-fun temp138_36 () (_ BitVec 64))
(declare-fun temp138_37 () (_ BitVec 64))
(declare-fun temp138_38 () (_ BitVec 64))
(declare-fun temp138_39 () (_ BitVec 64))
(declare-fun temp138_40 () (_ BitVec 64))
(declare-fun temp138_41 () (_ BitVec 64))
(declare-fun temp138_42 () (_ BitVec 64))
(declare-fun temp138_43 () (_ BitVec 64))
(declare-fun temp138_44 () (_ BitVec 64))
(declare-fun temp138_45 () (_ BitVec 64))
(declare-fun temp138_46 () (_ BitVec 64))
(declare-fun temp138_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp138_48 () (_ BitVec 64))
(declare-fun temp138_49 () (_ BitVec 64))
(declare-fun temp138_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_51 () (_ BitVec 64))
(declare-fun temp138_52 () (_ BitVec 64))
(declare-fun temp138_53 () (_ BitVec 64))
(declare-fun temp138_54 () (_ BitVec 64))
(declare-fun temp138_55 () (_ BitVec 64))
(declare-fun temp138_56 () (_ BitVec 64))
(declare-fun temp138_57 () (_ BitVec 64))
(declare-fun temp138_58 () (_ BitVec 64))
(declare-fun temp138_59 () (_ BitVec 64))
(declare-fun temp138_60 () (_ BitVec 64))
(declare-fun temp138_61 () (_ BitVec 64))
(declare-fun temp138_62 () (_ BitVec 64))
(declare-fun temp138_63 () (_ BitVec 64))
(declare-fun temp138_64 () (_ BitVec 64))
(declare-fun temp138_65 () (_ BitVec 64))
(declare-fun temp138_66 () (_ BitVec 64))
(declare-fun temp138_67 () (_ BitVec 64))
(declare-fun temp138_68 () (_ BitVec 64))
(declare-fun temp138_69 () (_ BitVec 64))
(declare-fun temp138_70 () (_ BitVec 64))
(declare-fun temp138_71 () (_ BitVec 64))
(declare-fun temp138_72 () (_ BitVec 64))
(declare-fun temp138_73 () (_ BitVec 64))
(declare-fun temp138_74 () (_ BitVec 64))
(declare-fun temp138_75 () (_ BitVec 64))
(declare-fun temp138_76 () (_ BitVec 64))
(declare-fun temp138_77 () (_ BitVec 64))
(declare-fun temp138_78 () (_ BitVec 64))
(declare-fun temp138_79 () (_ BitVec 64))
(declare-fun temp138_80 () (_ BitVec 64))
(declare-fun temp138_81 () (_ BitVec 64))
(declare-fun temp138_82 () (_ BitVec 64))
(declare-fun temp138_83 () (_ BitVec 64))
(declare-fun temp138_84 () (_ BitVec 64))
(declare-fun temp138_85 () (_ BitVec 64))
(declare-fun temp138_86 () (_ BitVec 64))
(declare-fun temp138_87 () (_ BitVec 64))
(declare-fun temp138_88 () (_ BitVec 64))
(declare-fun temp138_89 () (_ BitVec 64))
(declare-fun temp138_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp138_91 () (_ BitVec 64))
(declare-fun temp138_92 () (_ BitVec 64))
(declare-fun temp138_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_94 () (_ BitVec 64))
(declare-fun temp138_95 () (_ BitVec 64))
(declare-fun temp138_96 () (_ BitVec 64))
(declare-fun temp138_97 () (_ BitVec 64))
(declare-fun temp138_98 () (_ BitVec 64))
(declare-fun temp138_99 () (_ BitVec 64))
(declare-fun temp138_100 () (_ BitVec 64))
(declare-fun temp138_101 () (_ BitVec 64))
(declare-fun temp138_102 () (_ BitVec 64))
(declare-fun temp138_103 () (_ BitVec 64))
(declare-fun temp138_104 () (_ BitVec 64))
(declare-fun temp138_105 () (_ BitVec 64))
(declare-fun temp138_106 () (_ BitVec 64))
(declare-fun temp138_107 () (_ BitVec 64))
(declare-fun temp138_108 () (_ BitVec 64))
(declare-fun temp138_109 () (_ BitVec 64))
(declare-fun temp138_110 () (_ BitVec 64))
(declare-fun temp138_111 () (_ BitVec 64))
(declare-fun temp138_112 () (_ BitVec 64))
(declare-fun temp138_113 () (_ BitVec 64))
(declare-fun temp138_114 () (_ BitVec 64))
(declare-fun temp138_115 () (_ BitVec 64))
(declare-fun temp138_116 () (_ BitVec 64))
(declare-fun temp138_117 () (_ BitVec 64))
(declare-fun temp138_118 () (_ BitVec 64))
(declare-fun temp138_119 () (_ BitVec 64))
(declare-fun temp138_120 () (_ BitVec 64))
(declare-fun temp138_121 () (_ BitVec 64))
(declare-fun temp138_122 () (_ BitVec 64))
(declare-fun temp138_123 () (_ BitVec 64))
(declare-fun temp138_124 () (_ BitVec 64))
(declare-fun temp138_125 () (_ BitVec 64))
(declare-fun temp138_126 () (_ BitVec 64))
(declare-fun temp138_127 () (_ BitVec 64))
(declare-fun temp138_128 () (_ BitVec 64))
(declare-fun temp138_129 () (_ BitVec 64))
(declare-fun temp138_130 () (_ BitVec 64))
(declare-fun temp138_131 () (_ BitVec 64))
(declare-fun temp138_132 () (_ BitVec 64))
(declare-fun temp138_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp138_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp138_135 () (_ BitVec 64))
(declare-fun temp138_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp138_137 () (_ BitVec 64))
(declare-fun temp138_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_139 () (_ BitVec 64))
(declare-fun temp138_140 () (_ BitVec 64))
(declare-fun temp138_141 () (_ BitVec 64))
(declare-fun temp138_142 () (_ BitVec 64))
(declare-fun temp138_143 () (_ BitVec 64))
(declare-fun temp138_144 () (_ BitVec 64))
(declare-fun temp138_145 () (_ BitVec 64))
(declare-fun temp138_146 () (_ BitVec 64))
(declare-fun temp138_147 () (_ BitVec 64))
(declare-fun temp138_148 () (_ BitVec 64))
(declare-fun temp138_149 () (_ BitVec 64))
(declare-fun temp138_150 () (_ BitVec 64))
(declare-fun temp138_151 () (_ BitVec 64))
(declare-fun temp138_152 () (_ BitVec 64))
(declare-fun temp138_153 () (_ BitVec 64))
(declare-fun temp138_154 () (_ BitVec 64))
(declare-fun temp138_156 () (_ BitVec 64))
(declare-fun temp138_157 () (_ BitVec 64))
(declare-fun temp138_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp138_158 () (_ BitVec 64))
(declare-fun temp138_159 () (_ BitVec 64))
(declare-fun temp138_161 () (_ BitVec 64))
(declare-fun temp138_162 () (_ BitVec 64))
(declare-fun temp138_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp138_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp138_164 () (_ BitVec 64))
(declare-fun temp138_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp138_166 () (_ BitVec 64))
(declare-fun temp138_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp138_168 () (_ BitVec 64))
(declare-fun temp138_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_170 () (_ BitVec 64))
(declare-fun temp138_171 () (_ BitVec 64))
(declare-fun temp138_172 () (_ BitVec 64))
(declare-fun temp138_173 () (_ BitVec 64))
(declare-fun temp138_174 () (_ BitVec 64))
(declare-fun temp138_175 () (_ BitVec 64))
(declare-fun temp138_176 () (_ BitVec 64))
(declare-fun temp138_177 () (_ BitVec 64))
(declare-fun temp138_178 () (_ BitVec 64))
(declare-fun temp138_179 () (_ BitVec 64))
(declare-fun temp138_180 () (_ BitVec 64))
(declare-fun temp138_181 () (_ BitVec 64))
(declare-fun temp138_182 () (_ BitVec 64))
(declare-fun temp138_183 () (_ BitVec 64))
(declare-fun temp138_184 () (_ BitVec 64))
(declare-fun temp138_185 () (_ BitVec 64))
(declare-fun temp138_186 () (_ BitVec 64))
(declare-fun temp138_187 () (_ BitVec 64))
(declare-fun temp138_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp138_189 () (_ BitVec 64))
(declare-fun temp138_191 () (_ BitVec 64))
(declare-fun temp138_192 () (_ BitVec 64))
(declare-fun temp138_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp138_193 () (_ BitVec 64))
(declare-fun temp138_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp138_195 () (_ BitVec 64))
(declare-fun temp138_196 () (_ BitVec 64))
(declare-fun temp138_197 () (_ BitVec 64))
(declare-fun temp138_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_199 () (_ BitVec 64))
(declare-fun temp138_200 () (_ BitVec 64))
(declare-fun temp138_201 () (_ BitVec 64))
(declare-fun temp138_202 () (_ BitVec 64))
(declare-fun temp138_203 () (_ BitVec 64))
(declare-fun temp138_204 () (_ BitVec 64))
(declare-fun temp138_205 () (_ BitVec 64))
(declare-fun temp138_206 () (_ BitVec 64))
(declare-fun temp138_207 () (_ BitVec 64))
(declare-fun temp138_208 () (_ BitVec 64))
(declare-fun temp138_209 () (_ BitVec 64))
(declare-fun temp138_210 () (_ BitVec 64))
(declare-fun temp138_211 () (_ BitVec 64))
(declare-fun temp138_212 () (_ BitVec 64))
(declare-fun temp138_213 () (_ BitVec 64))
(declare-fun temp138_214 () (_ BitVec 64))
(declare-fun temp138_215 () (_ BitVec 64))
(declare-fun temp138_216 () (_ BitVec 64))
(declare-fun temp138_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp138_218 () (_ BitVec 64))
(declare-fun temp138_220 () (_ BitVec 64))
(declare-fun temp138_221 () (_ BitVec 64))
(declare-fun temp138_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp138_222 () (_ BitVec 64))
(declare-fun temp138_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp138_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp138_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp138_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp138_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp138_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp138_229 () (_ BitVec 64))
(declare-fun temp138_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp138_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp138_232 () (_ BitVec 64))
(declare-fun temp138_233 () (_ BitVec 64))
(declare-fun temp138_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp138_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp138_236 () (_ BitVec 64))
(declare-fun temp138_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp138_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp138_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp138_241 () (_ BitVec 64))
(declare-fun temp138_240 () (_ BitVec 64))
(declare-fun temp138_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp138_243 () (_ BitVec 64))
(declare-fun temp138_244 () (_ BitVec 64))
(declare-fun temp138_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp138_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp138_247 () (_ BitVec 64))
(declare-fun temp138_249 () (_ BitVec 64))
(declare-fun temp138_248 () (_ BitVec 64))
(declare-fun temp138_250 () (_ BitVec 64))
(assert (= temp138_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp138_1)))
(assert (= temp138_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp138_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_3 #x0000000000000000))
(assert (= var79869 temp138_3))
(assert (= temp138_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp138_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_5 #x0000000000000000))
(assert (= var79914 temp138_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp138_6 #x0000000000000000))
(assert (= temp138_7 temp138_6))
(assert (= temp138_8 (select ARGNAME_padding_NAMEEND_VAL temp138_7)))
(assert (= temp138_9 #x0000000000000001))
(assert (= temp138_10 temp138_9))
(assert (= temp138_11 (select ARGNAME_padding_NAMEEND_VAL temp138_10)))
(assert (= temp138_12 #x0000000000000002))
(assert (= temp138_13 temp138_12))
(assert (= temp138_14 (select ARGNAME_padding_NAMEEND_VAL temp138_13)))
(assert (= temp138_15 #x0000000000000003))
(assert (= temp138_16 temp138_15))
(assert (= temp138_17 (select ARGNAME_padding_NAMEEND_VAL temp138_16)))
(assert (= temp138_18 #x0000000000000004))
(assert (= temp138_19 temp138_18))
(assert (= temp138_20 (select ARGNAME_padding_NAMEEND_VAL temp138_19)))
(assert (= temp138_21 #x0000000000000005))
(assert (= temp138_22 temp138_21))
(assert (= temp138_23 (select ARGNAME_padding_NAMEEND_VAL temp138_22)))
(assert (= temp138_24 #x0000000000000000))
(assert (= temp138_25 #x0000000000000000))
(assert (= temp138_26 temp138_25))
(assert (= temp138_27 (select ARGNAME_padding_NAMEEND_VAL temp138_26)))
(assert (= temp138_28 #x0000000000000000))
(assert (= temp138_29 #x0000000000000001))
(assert (= temp138_30 temp138_29))
(assert (= temp138_31 (select ARGNAME_padding_NAMEEND_VAL temp138_30)))
(assert (= temp138_32 #x0000000000000000))
(assert (= temp138_33 #x0000000000000002))
(assert (= temp138_34 temp138_33))
(assert (= temp138_35 (select ARGNAME_padding_NAMEEND_VAL temp138_34)))
(assert (= temp138_36 #x0000000000000000))
(assert (= temp138_37 #x0000000000000003))
(assert (= temp138_38 temp138_37))
(assert (= temp138_39 (select ARGNAME_padding_NAMEEND_VAL temp138_38)))
(assert (= temp138_40 #x0000000000000000))
(assert (= temp138_41 #x0000000000000004))
(assert (= temp138_42 temp138_41))
(assert (= temp138_43 (select ARGNAME_padding_NAMEEND_VAL temp138_42)))
(assert (= temp138_44 #x0000000000000000))
(assert (= temp138_45 #x0000000000000005))
(assert (= temp138_46 temp138_45))
(assert (= temp138_47 (select ARGNAME_padding_NAMEEND_VAL temp138_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp138_27 temp138_24)
             (bvslt temp138_31 temp138_28)
             (bvslt temp138_35 temp138_32)
             (bvslt temp138_39 temp138_36)
             (bvslt temp138_43 temp138_40)
             (bvslt temp138_47 temp138_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_48 #x0000000000000000))
(assert (= var1322786 temp138_48))
(assert (= temp138_49 #x0000000000000000))
(assert (= temp138_50 temp138_49))
(assert (= temp138_51 (select ARGNAME_output_padding_NAMEEND_VAL temp138_50)))
(assert (= temp138_52 #x0000000000000001))
(assert (= temp138_53 temp138_52))
(assert (= temp138_54 (select ARGNAME_output_padding_NAMEEND_VAL temp138_53)))
(assert (= temp138_55 #x0000000000000002))
(assert (= temp138_56 temp138_55))
(assert (= temp138_57 (select ARGNAME_output_padding_NAMEEND_VAL temp138_56)))
(assert (= temp138_58 #x0000000000000003))
(assert (= temp138_59 temp138_58))
(assert (= temp138_60 (select ARGNAME_output_padding_NAMEEND_VAL temp138_59)))
(assert (= temp138_61 #x0000000000000004))
(assert (= temp138_62 temp138_61))
(assert (= temp138_63 (select ARGNAME_output_padding_NAMEEND_VAL temp138_62)))
(assert (= temp138_64 #x0000000000000005))
(assert (= temp138_65 temp138_64))
(assert (= temp138_66 (select ARGNAME_output_padding_NAMEEND_VAL temp138_65)))
(assert (= temp138_67 #x0000000000000000))
(assert (= temp138_68 #x0000000000000000))
(assert (= temp138_69 temp138_68))
(assert (= temp138_70 (select ARGNAME_output_padding_NAMEEND_VAL temp138_69)))
(assert (= temp138_71 #x0000000000000000))
(assert (= temp138_72 #x0000000000000001))
(assert (= temp138_73 temp138_72))
(assert (= temp138_74 (select ARGNAME_output_padding_NAMEEND_VAL temp138_73)))
(assert (= temp138_75 #x0000000000000000))
(assert (= temp138_76 #x0000000000000002))
(assert (= temp138_77 temp138_76))
(assert (= temp138_78 (select ARGNAME_output_padding_NAMEEND_VAL temp138_77)))
(assert (= temp138_79 #x0000000000000000))
(assert (= temp138_80 #x0000000000000003))
(assert (= temp138_81 temp138_80))
(assert (= temp138_82 (select ARGNAME_output_padding_NAMEEND_VAL temp138_81)))
(assert (= temp138_83 #x0000000000000000))
(assert (= temp138_84 #x0000000000000004))
(assert (= temp138_85 temp138_84))
(assert (= temp138_86 (select ARGNAME_output_padding_NAMEEND_VAL temp138_85)))
(assert (= temp138_87 #x0000000000000000))
(assert (= temp138_88 #x0000000000000005))
(assert (= temp138_89 temp138_88))
(assert (= temp138_90 (select ARGNAME_output_padding_NAMEEND_VAL temp138_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp138_70 temp138_67)
             (bvslt temp138_74 temp138_71)
             (bvslt temp138_78 temp138_75)
             (bvslt temp138_82 temp138_79)
             (bvslt temp138_86 temp138_83)
             (bvslt temp138_90 temp138_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_91 #x0000000000000000))
(assert (= var1322797 temp138_91))
(assert (= temp138_92 #x0000000000000000))
(assert (= temp138_93 temp138_92))
(assert (= temp138_94 (select ARGNAME_stride_NAMEEND_VAL temp138_93)))
(assert (= temp138_95 #x0000000000000001))
(assert (= temp138_96 temp138_95))
(assert (= temp138_97 (select ARGNAME_stride_NAMEEND_VAL temp138_96)))
(assert (= temp138_98 #x0000000000000002))
(assert (= temp138_99 temp138_98))
(assert (= temp138_100 (select ARGNAME_stride_NAMEEND_VAL temp138_99)))
(assert (= temp138_101 #x0000000000000003))
(assert (= temp138_102 temp138_101))
(assert (= temp138_103 (select ARGNAME_stride_NAMEEND_VAL temp138_102)))
(assert (= temp138_104 #x0000000000000004))
(assert (= temp138_105 temp138_104))
(assert (= temp138_106 (select ARGNAME_stride_NAMEEND_VAL temp138_105)))
(assert (= temp138_107 #x0000000000000005))
(assert (= temp138_108 temp138_107))
(assert (= temp138_109 (select ARGNAME_stride_NAMEEND_VAL temp138_108)))
(assert (= temp138_110 #x0000000000000000))
(assert (= temp138_111 #x0000000000000000))
(assert (= temp138_112 temp138_111))
(assert (= temp138_113 (select ARGNAME_stride_NAMEEND_VAL temp138_112)))
(assert (= temp138_114 #x0000000000000000))
(assert (= temp138_115 #x0000000000000001))
(assert (= temp138_116 temp138_115))
(assert (= temp138_117 (select ARGNAME_stride_NAMEEND_VAL temp138_116)))
(assert (= temp138_118 #x0000000000000000))
(assert (= temp138_119 #x0000000000000002))
(assert (= temp138_120 temp138_119))
(assert (= temp138_121 (select ARGNAME_stride_NAMEEND_VAL temp138_120)))
(assert (= temp138_122 #x0000000000000000))
(assert (= temp138_123 #x0000000000000003))
(assert (= temp138_124 temp138_123))
(assert (= temp138_125 (select ARGNAME_stride_NAMEEND_VAL temp138_124)))
(assert (= temp138_126 #x0000000000000000))
(assert (= temp138_127 #x0000000000000004))
(assert (= temp138_128 temp138_127))
(assert (= temp138_129 (select ARGNAME_stride_NAMEEND_VAL temp138_128)))
(assert (= temp138_130 #x0000000000000000))
(assert (= temp138_131 #x0000000000000005))
(assert (= temp138_132 temp138_131))
(assert (= temp138_133 (select ARGNAME_stride_NAMEEND_VAL temp138_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp138_113 temp138_110)
             (bvsle temp138_117 temp138_114)
             (bvsle temp138_121 temp138_118)
             (bvsle temp138_125 temp138_122)
             (bvsle temp138_129 temp138_126)
             (bvsle temp138_133 temp138_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_134 #x0000000000000000))
(assert (= var1322807 temp138_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_135 #x0000000000000001))
(assert (= var1322819 temp138_135))
(assert (= temp138_136 #x0000000000000000))
(assert (= var1310898 temp138_136))
(assert (= temp138_137 #x0000000000000000))
(assert (= temp138_138 temp138_137))
(assert (= temp138_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_138)))
(assert (= temp138_140 #x0000000000000001))
(assert (= temp138_141 temp138_140))
(assert (= temp138_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_141)))
(assert (= temp138_143 #x0000000000000002))
(assert (= temp138_144 temp138_143))
(assert (= temp138_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_144)))
(assert (= temp138_146 #x0000000000000003))
(assert (= temp138_147 temp138_146))
(assert (= temp138_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_147)))
(assert (= temp138_149 #x0000000000000004))
(assert (= temp138_150 temp138_149))
(assert (= temp138_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_150)))
(assert (= temp138_152 #x0000000000000005))
(assert (= temp138_153 temp138_152))
(assert (= temp138_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_153)))
(assert (= temp138_156 var1310898))
(assert (= temp138_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_156)))
(assert (= temp138_155 temp138_157))
(assert (= var1322852
   (ite (bvslt temp138_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_158 #x0000000000000000))
(assert (= var1322852 temp138_158))
(assert (= temp138_159 #x0000000000000000))
(assert (= var1310898 temp138_159))
(assert (= temp138_161 var1310898))
(assert (= temp138_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_161)))
(assert (= temp138_160 temp138_162))
(assert (= var1322874 (bvsmod temp138_160 ARGNAME_groups_NAMEEND)))
(assert (= temp138_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp138_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_164 #x0000000000000001))
(assert (= var1322875 temp138_164))
(assert (= temp138_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp138_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_166 #x0000000000000001))
(assert (= var1322895 temp138_166))
(assert (= temp138_167 #x0000000000000001))
(assert (= var1311786 temp138_167))
(assert (= temp138_168 #x0000000000000000))
(assert (= temp138_169 temp138_168))
(assert (= temp138_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_169)))
(assert (= temp138_171 #x0000000000000001))
(assert (= temp138_172 temp138_171))
(assert (= temp138_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_172)))
(assert (= temp138_174 #x0000000000000002))
(assert (= temp138_175 temp138_174))
(assert (= temp138_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_175)))
(assert (= temp138_177 #x0000000000000003))
(assert (= temp138_178 temp138_177))
(assert (= temp138_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_178)))
(assert (= temp138_180 #x0000000000000004))
(assert (= temp138_181 temp138_180))
(assert (= temp138_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_181)))
(assert (= temp138_183 #x0000000000000005))
(assert (= temp138_184 temp138_183))
(assert (= temp138_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_184)))
(assert (= temp138_186 #x0000000000000000))
(assert (= temp138_187
   (ite (bvslt var1311786 temp138_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp138_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_187)))
(assert (= var1322903 temp138_188))
(assert (bvslt (ite (bvslt var1311786 temp138_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp138_189 #x0000000000000001))
(assert (= var1311786 temp138_189))
(assert (= temp138_191 var1311786))
(assert (= temp138_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_191)))
(assert (= temp138_190 temp138_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp138_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_193 #x0000000000000001))
(assert (= var1322908 temp138_193))
(assert (= temp138_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp138_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_195 #x0000000000000001))
(assert (= var1322975 temp138_195))
(assert (= temp138_196 #x0000000000000000))
(assert (= var1310898 temp138_196))
(assert (= temp138_197 #x0000000000000000))
(assert (= temp138_198 temp138_197))
(assert (= temp138_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp138_198)))
(assert (= temp138_200 #x0000000000000001))
(assert (= temp138_201 temp138_200))
(assert (= temp138_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp138_201)))
(assert (= temp138_203 #x0000000000000002))
(assert (= temp138_204 temp138_203))
(assert (= temp138_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp138_204)))
(assert (= temp138_206 #x0000000000000003))
(assert (= temp138_207 temp138_206))
(assert (= temp138_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp138_207)))
(assert (= temp138_209 #x0000000000000004))
(assert (= temp138_210 temp138_209))
(assert (= temp138_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp138_210)))
(assert (= temp138_212 #x0000000000000005))
(assert (= temp138_213 temp138_212))
(assert (= temp138_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp138_213)))
(assert (= temp138_215 #x0000000000000000))
(assert (= temp138_216
   (ite (bvslt var1310898 temp138_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp138_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp138_216)))
(assert (= var1322977 temp138_217))
(assert (bvslt (ite (bvslt var1310898 temp138_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp138_218 #x0000000000000000))
(assert (= var1310898 temp138_218))
(assert (= temp138_220 var1310898))
(assert (= temp138_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_220)))
(assert (= temp138_219 temp138_221))
(assert (= var1322980
   (ite (= var1322977 temp138_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_222 #x0000000000000001))
(assert (= var1322980 temp138_222))
(assert (= temp138_223 #x0000000000000002))
(assert (= var1848169 temp138_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp138_225 #x0000000000000001))
(assert (= var1323065 temp138_225))
(assert (= temp138_226 #x0000000000000001))
(assert (= var3486735 temp138_226))
(assert (= temp138_227 #x0000000000000001))
(assert (= var3814415 temp138_227))
(assert (= temp138_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp138_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_229 #x0000000000000001))
(assert (= var79986 temp138_229))
(assert (= temp138_230 #x0000000000000001))
(assert (= var80116 temp138_230))
(assert (= var4796905 var80116))
(assert (= temp138_231 #x0000000000000000))
(assert (= var4784306 temp138_231))
(assert (= temp138_232 #x0000000000000000))
(assert (= temp138_233
   (ite (bvslt var4784306 temp138_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp138_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_233)))
(assert (= var4796924 temp138_234))
(assert (bvslt (ite (bvslt var4784306 temp138_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp138_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp138_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_236 #x0000000000000001))
(assert (= var4796925 temp138_236))
(assert (= temp138_237 #x0000000000000000))
(assert (= var4996927 temp138_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp138_238 #x0000000000000002))
(assert (= var5125763 temp138_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_239 #x0000000000000000))
(assert (= var5191324 temp138_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp138_241 #xffffffffffffffff))
(assert (= temp138_240 temp138_241))
(assert (= temp138_242 #x0000000000000001))
(assert (= var66602 temp138_242))
(assert (= temp138_243 #x0000000000000000))
(assert (= temp138_244
   (ite (bvslt var66602 temp138_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp138_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_244)))
(assert (= var80523 temp138_245))
(assert (bvslt (ite (bvslt var66602 temp138_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp138_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp138_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_247 #x0000000000000001))
(assert (= var80524 temp138_247))
(assert (= temp138_249 #xffffffffffffffff))
(assert (= temp138_248 temp138_249))
(assert (= temp138_250 #x0000000000000001))
(assert (= var79986 temp138_250))
(model-add temp138_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp138_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp138_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






