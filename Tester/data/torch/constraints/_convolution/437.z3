(declare-fun temp581_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp581_2 () (_ BitVec 64))
(declare-fun temp581_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp581_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp581_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp581_6 () (_ BitVec 64))
(declare-fun temp581_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_8 () (_ BitVec 64))
(declare-fun temp581_9 () (_ BitVec 64))
(declare-fun temp581_10 () (_ BitVec 64))
(declare-fun temp581_11 () (_ BitVec 64))
(declare-fun temp581_12 () (_ BitVec 64))
(declare-fun temp581_13 () (_ BitVec 64))
(declare-fun temp581_14 () (_ BitVec 64))
(declare-fun temp581_15 () (_ BitVec 64))
(declare-fun temp581_16 () (_ BitVec 64))
(declare-fun temp581_17 () (_ BitVec 64))
(declare-fun temp581_18 () (_ BitVec 64))
(declare-fun temp581_19 () (_ BitVec 64))
(declare-fun temp581_20 () (_ BitVec 64))
(declare-fun temp581_21 () (_ BitVec 64))
(declare-fun temp581_22 () (_ BitVec 64))
(declare-fun temp581_23 () (_ BitVec 64))
(declare-fun temp581_24 () (_ BitVec 64))
(declare-fun temp581_25 () (_ BitVec 64))
(declare-fun temp581_26 () (_ BitVec 64))
(declare-fun temp581_27 () (_ BitVec 64))
(declare-fun temp581_28 () (_ BitVec 64))
(declare-fun temp581_29 () (_ BitVec 64))
(declare-fun temp581_30 () (_ BitVec 64))
(declare-fun temp581_31 () (_ BitVec 64))
(declare-fun temp581_32 () (_ BitVec 64))
(declare-fun temp581_33 () (_ BitVec 64))
(declare-fun temp581_34 () (_ BitVec 64))
(declare-fun temp581_35 () (_ BitVec 64))
(declare-fun temp581_36 () (_ BitVec 64))
(declare-fun temp581_37 () (_ BitVec 64))
(declare-fun temp581_38 () (_ BitVec 64))
(declare-fun temp581_39 () (_ BitVec 64))
(declare-fun temp581_40 () (_ BitVec 64))
(declare-fun temp581_41 () (_ BitVec 64))
(declare-fun temp581_42 () (_ BitVec 64))
(declare-fun temp581_43 () (_ BitVec 64))
(declare-fun temp581_44 () (_ BitVec 64))
(declare-fun temp581_45 () (_ BitVec 64))
(declare-fun temp581_46 () (_ BitVec 64))
(declare-fun temp581_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp581_48 () (_ BitVec 64))
(declare-fun temp581_49 () (_ BitVec 64))
(declare-fun temp581_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_51 () (_ BitVec 64))
(declare-fun temp581_52 () (_ BitVec 64))
(declare-fun temp581_53 () (_ BitVec 64))
(declare-fun temp581_54 () (_ BitVec 64))
(declare-fun temp581_55 () (_ BitVec 64))
(declare-fun temp581_56 () (_ BitVec 64))
(declare-fun temp581_57 () (_ BitVec 64))
(declare-fun temp581_58 () (_ BitVec 64))
(declare-fun temp581_59 () (_ BitVec 64))
(declare-fun temp581_60 () (_ BitVec 64))
(declare-fun temp581_61 () (_ BitVec 64))
(declare-fun temp581_62 () (_ BitVec 64))
(declare-fun temp581_63 () (_ BitVec 64))
(declare-fun temp581_64 () (_ BitVec 64))
(declare-fun temp581_65 () (_ BitVec 64))
(declare-fun temp581_66 () (_ BitVec 64))
(declare-fun temp581_67 () (_ BitVec 64))
(declare-fun temp581_68 () (_ BitVec 64))
(declare-fun temp581_69 () (_ BitVec 64))
(declare-fun temp581_70 () (_ BitVec 64))
(declare-fun temp581_71 () (_ BitVec 64))
(declare-fun temp581_72 () (_ BitVec 64))
(declare-fun temp581_73 () (_ BitVec 64))
(declare-fun temp581_74 () (_ BitVec 64))
(declare-fun temp581_75 () (_ BitVec 64))
(declare-fun temp581_76 () (_ BitVec 64))
(declare-fun temp581_77 () (_ BitVec 64))
(declare-fun temp581_78 () (_ BitVec 64))
(declare-fun temp581_79 () (_ BitVec 64))
(declare-fun temp581_80 () (_ BitVec 64))
(declare-fun temp581_81 () (_ BitVec 64))
(declare-fun temp581_82 () (_ BitVec 64))
(declare-fun temp581_83 () (_ BitVec 64))
(declare-fun temp581_84 () (_ BitVec 64))
(declare-fun temp581_85 () (_ BitVec 64))
(declare-fun temp581_86 () (_ BitVec 64))
(declare-fun temp581_87 () (_ BitVec 64))
(declare-fun temp581_88 () (_ BitVec 64))
(declare-fun temp581_89 () (_ BitVec 64))
(declare-fun temp581_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp581_91 () (_ BitVec 64))
(declare-fun temp581_92 () (_ BitVec 64))
(declare-fun temp581_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_94 () (_ BitVec 64))
(declare-fun temp581_95 () (_ BitVec 64))
(declare-fun temp581_96 () (_ BitVec 64))
(declare-fun temp581_97 () (_ BitVec 64))
(declare-fun temp581_98 () (_ BitVec 64))
(declare-fun temp581_99 () (_ BitVec 64))
(declare-fun temp581_100 () (_ BitVec 64))
(declare-fun temp581_101 () (_ BitVec 64))
(declare-fun temp581_102 () (_ BitVec 64))
(declare-fun temp581_103 () (_ BitVec 64))
(declare-fun temp581_104 () (_ BitVec 64))
(declare-fun temp581_105 () (_ BitVec 64))
(declare-fun temp581_106 () (_ BitVec 64))
(declare-fun temp581_107 () (_ BitVec 64))
(declare-fun temp581_108 () (_ BitVec 64))
(declare-fun temp581_109 () (_ BitVec 64))
(declare-fun temp581_110 () (_ BitVec 64))
(declare-fun temp581_111 () (_ BitVec 64))
(declare-fun temp581_112 () (_ BitVec 64))
(declare-fun temp581_113 () (_ BitVec 64))
(declare-fun temp581_114 () (_ BitVec 64))
(declare-fun temp581_115 () (_ BitVec 64))
(declare-fun temp581_116 () (_ BitVec 64))
(declare-fun temp581_117 () (_ BitVec 64))
(declare-fun temp581_118 () (_ BitVec 64))
(declare-fun temp581_119 () (_ BitVec 64))
(declare-fun temp581_120 () (_ BitVec 64))
(declare-fun temp581_121 () (_ BitVec 64))
(declare-fun temp581_122 () (_ BitVec 64))
(declare-fun temp581_123 () (_ BitVec 64))
(declare-fun temp581_124 () (_ BitVec 64))
(declare-fun temp581_125 () (_ BitVec 64))
(declare-fun temp581_126 () (_ BitVec 64))
(declare-fun temp581_127 () (_ BitVec 64))
(declare-fun temp581_128 () (_ BitVec 64))
(declare-fun temp581_129 () (_ BitVec 64))
(declare-fun temp581_130 () (_ BitVec 64))
(declare-fun temp581_131 () (_ BitVec 64))
(declare-fun temp581_132 () (_ BitVec 64))
(declare-fun temp581_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp581_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp581_135 () (_ BitVec 64))
(declare-fun temp581_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp581_137 () (_ BitVec 64))
(declare-fun temp581_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_139 () (_ BitVec 64))
(declare-fun temp581_140 () (_ BitVec 64))
(declare-fun temp581_141 () (_ BitVec 64))
(declare-fun temp581_142 () (_ BitVec 64))
(declare-fun temp581_143 () (_ BitVec 64))
(declare-fun temp581_144 () (_ BitVec 64))
(declare-fun temp581_145 () (_ BitVec 64))
(declare-fun temp581_146 () (_ BitVec 64))
(declare-fun temp581_147 () (_ BitVec 64))
(declare-fun temp581_148 () (_ BitVec 64))
(declare-fun temp581_149 () (_ BitVec 64))
(declare-fun temp581_150 () (_ BitVec 64))
(declare-fun temp581_151 () (_ BitVec 64))
(declare-fun temp581_152 () (_ BitVec 64))
(declare-fun temp581_153 () (_ BitVec 64))
(declare-fun temp581_154 () (_ BitVec 64))
(declare-fun temp581_156 () (_ BitVec 64))
(declare-fun temp581_157 () (_ BitVec 64))
(declare-fun temp581_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp581_158 () (_ BitVec 64))
(declare-fun temp581_159 () (_ BitVec 64))
(declare-fun temp581_161 () (_ BitVec 64))
(declare-fun temp581_162 () (_ BitVec 64))
(declare-fun temp581_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp581_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp581_164 () (_ BitVec 64))
(declare-fun temp581_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp581_166 () (_ BitVec 64))
(declare-fun temp581_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp581_168 () (_ BitVec 64))
(declare-fun temp581_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_170 () (_ BitVec 64))
(declare-fun temp581_171 () (_ BitVec 64))
(declare-fun temp581_172 () (_ BitVec 64))
(declare-fun temp581_173 () (_ BitVec 64))
(declare-fun temp581_174 () (_ BitVec 64))
(declare-fun temp581_175 () (_ BitVec 64))
(declare-fun temp581_176 () (_ BitVec 64))
(declare-fun temp581_177 () (_ BitVec 64))
(declare-fun temp581_178 () (_ BitVec 64))
(declare-fun temp581_179 () (_ BitVec 64))
(declare-fun temp581_180 () (_ BitVec 64))
(declare-fun temp581_181 () (_ BitVec 64))
(declare-fun temp581_182 () (_ BitVec 64))
(declare-fun temp581_183 () (_ BitVec 64))
(declare-fun temp581_184 () (_ BitVec 64))
(declare-fun temp581_185 () (_ BitVec 64))
(declare-fun temp581_186 () (_ BitVec 64))
(declare-fun temp581_187 () (_ BitVec 64))
(declare-fun temp581_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp581_189 () (_ BitVec 64))
(declare-fun temp581_191 () (_ BitVec 64))
(declare-fun temp581_192 () (_ BitVec 64))
(declare-fun temp581_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp581_193 () (_ BitVec 64))
(declare-fun temp581_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp581_195 () (_ BitVec 64))
(declare-fun temp581_196 () (_ BitVec 64))
(declare-fun temp581_197 () (_ BitVec 64))
(declare-fun temp581_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_199 () (_ BitVec 64))
(declare-fun temp581_200 () (_ BitVec 64))
(declare-fun temp581_201 () (_ BitVec 64))
(declare-fun temp581_202 () (_ BitVec 64))
(declare-fun temp581_203 () (_ BitVec 64))
(declare-fun temp581_204 () (_ BitVec 64))
(declare-fun temp581_205 () (_ BitVec 64))
(declare-fun temp581_206 () (_ BitVec 64))
(declare-fun temp581_207 () (_ BitVec 64))
(declare-fun temp581_208 () (_ BitVec 64))
(declare-fun temp581_209 () (_ BitVec 64))
(declare-fun temp581_210 () (_ BitVec 64))
(declare-fun temp581_211 () (_ BitVec 64))
(declare-fun temp581_212 () (_ BitVec 64))
(declare-fun temp581_213 () (_ BitVec 64))
(declare-fun temp581_214 () (_ BitVec 64))
(declare-fun temp581_215 () (_ BitVec 64))
(declare-fun temp581_216 () (_ BitVec 64))
(declare-fun temp581_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp581_218 () (_ BitVec 64))
(declare-fun temp581_220 () (_ BitVec 64))
(declare-fun temp581_221 () (_ BitVec 64))
(declare-fun temp581_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp581_222 () (_ BitVec 64))
(declare-fun temp581_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp581_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp581_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp581_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp581_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp581_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp581_229 () (_ BitVec 64))
(declare-fun temp581_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp581_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp581_232 () (_ BitVec 64))
(declare-fun temp581_233 () (_ BitVec 64))
(declare-fun temp581_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp581_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp581_236 () (_ BitVec 64))
(declare-fun temp581_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp581_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp581_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp581_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp581_241 () (_ BitVec 64))
(declare-fun temp581_242 () (_ BitVec 64))
(assert (= temp581_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp581_1)))
(assert (= temp581_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp581_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_3 #x0000000000000000))
(assert (= var79869 temp581_3))
(assert (= temp581_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp581_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_5 #x0000000000000000))
(assert (= var79914 temp581_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp581_6 #x0000000000000000))
(assert (= temp581_7 temp581_6))
(assert (= temp581_8 (select ARGNAME_padding_NAMEEND_VAL temp581_7)))
(assert (= temp581_9 #x0000000000000001))
(assert (= temp581_10 temp581_9))
(assert (= temp581_11 (select ARGNAME_padding_NAMEEND_VAL temp581_10)))
(assert (= temp581_12 #x0000000000000002))
(assert (= temp581_13 temp581_12))
(assert (= temp581_14 (select ARGNAME_padding_NAMEEND_VAL temp581_13)))
(assert (= temp581_15 #x0000000000000003))
(assert (= temp581_16 temp581_15))
(assert (= temp581_17 (select ARGNAME_padding_NAMEEND_VAL temp581_16)))
(assert (= temp581_18 #x0000000000000004))
(assert (= temp581_19 temp581_18))
(assert (= temp581_20 (select ARGNAME_padding_NAMEEND_VAL temp581_19)))
(assert (= temp581_21 #x0000000000000005))
(assert (= temp581_22 temp581_21))
(assert (= temp581_23 (select ARGNAME_padding_NAMEEND_VAL temp581_22)))
(assert (= temp581_24 #x0000000000000000))
(assert (= temp581_25 #x0000000000000000))
(assert (= temp581_26 temp581_25))
(assert (= temp581_27 (select ARGNAME_padding_NAMEEND_VAL temp581_26)))
(assert (= temp581_28 #x0000000000000000))
(assert (= temp581_29 #x0000000000000001))
(assert (= temp581_30 temp581_29))
(assert (= temp581_31 (select ARGNAME_padding_NAMEEND_VAL temp581_30)))
(assert (= temp581_32 #x0000000000000000))
(assert (= temp581_33 #x0000000000000002))
(assert (= temp581_34 temp581_33))
(assert (= temp581_35 (select ARGNAME_padding_NAMEEND_VAL temp581_34)))
(assert (= temp581_36 #x0000000000000000))
(assert (= temp581_37 #x0000000000000003))
(assert (= temp581_38 temp581_37))
(assert (= temp581_39 (select ARGNAME_padding_NAMEEND_VAL temp581_38)))
(assert (= temp581_40 #x0000000000000000))
(assert (= temp581_41 #x0000000000000004))
(assert (= temp581_42 temp581_41))
(assert (= temp581_43 (select ARGNAME_padding_NAMEEND_VAL temp581_42)))
(assert (= temp581_44 #x0000000000000000))
(assert (= temp581_45 #x0000000000000005))
(assert (= temp581_46 temp581_45))
(assert (= temp581_47 (select ARGNAME_padding_NAMEEND_VAL temp581_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp581_27 temp581_24)
             (bvslt temp581_31 temp581_28)
             (bvslt temp581_35 temp581_32)
             (bvslt temp581_39 temp581_36)
             (bvslt temp581_43 temp581_40)
             (bvslt temp581_47 temp581_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_48 #x0000000000000000))
(assert (= var1322786 temp581_48))
(assert (= temp581_49 #x0000000000000000))
(assert (= temp581_50 temp581_49))
(assert (= temp581_51 (select ARGNAME_output_padding_NAMEEND_VAL temp581_50)))
(assert (= temp581_52 #x0000000000000001))
(assert (= temp581_53 temp581_52))
(assert (= temp581_54 (select ARGNAME_output_padding_NAMEEND_VAL temp581_53)))
(assert (= temp581_55 #x0000000000000002))
(assert (= temp581_56 temp581_55))
(assert (= temp581_57 (select ARGNAME_output_padding_NAMEEND_VAL temp581_56)))
(assert (= temp581_58 #x0000000000000003))
(assert (= temp581_59 temp581_58))
(assert (= temp581_60 (select ARGNAME_output_padding_NAMEEND_VAL temp581_59)))
(assert (= temp581_61 #x0000000000000004))
(assert (= temp581_62 temp581_61))
(assert (= temp581_63 (select ARGNAME_output_padding_NAMEEND_VAL temp581_62)))
(assert (= temp581_64 #x0000000000000005))
(assert (= temp581_65 temp581_64))
(assert (= temp581_66 (select ARGNAME_output_padding_NAMEEND_VAL temp581_65)))
(assert (= temp581_67 #x0000000000000000))
(assert (= temp581_68 #x0000000000000000))
(assert (= temp581_69 temp581_68))
(assert (= temp581_70 (select ARGNAME_output_padding_NAMEEND_VAL temp581_69)))
(assert (= temp581_71 #x0000000000000000))
(assert (= temp581_72 #x0000000000000001))
(assert (= temp581_73 temp581_72))
(assert (= temp581_74 (select ARGNAME_output_padding_NAMEEND_VAL temp581_73)))
(assert (= temp581_75 #x0000000000000000))
(assert (= temp581_76 #x0000000000000002))
(assert (= temp581_77 temp581_76))
(assert (= temp581_78 (select ARGNAME_output_padding_NAMEEND_VAL temp581_77)))
(assert (= temp581_79 #x0000000000000000))
(assert (= temp581_80 #x0000000000000003))
(assert (= temp581_81 temp581_80))
(assert (= temp581_82 (select ARGNAME_output_padding_NAMEEND_VAL temp581_81)))
(assert (= temp581_83 #x0000000000000000))
(assert (= temp581_84 #x0000000000000004))
(assert (= temp581_85 temp581_84))
(assert (= temp581_86 (select ARGNAME_output_padding_NAMEEND_VAL temp581_85)))
(assert (= temp581_87 #x0000000000000000))
(assert (= temp581_88 #x0000000000000005))
(assert (= temp581_89 temp581_88))
(assert (= temp581_90 (select ARGNAME_output_padding_NAMEEND_VAL temp581_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp581_70 temp581_67)
             (bvslt temp581_74 temp581_71)
             (bvslt temp581_78 temp581_75)
             (bvslt temp581_82 temp581_79)
             (bvslt temp581_86 temp581_83)
             (bvslt temp581_90 temp581_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_91 #x0000000000000000))
(assert (= var1322797 temp581_91))
(assert (= temp581_92 #x0000000000000000))
(assert (= temp581_93 temp581_92))
(assert (= temp581_94 (select ARGNAME_stride_NAMEEND_VAL temp581_93)))
(assert (= temp581_95 #x0000000000000001))
(assert (= temp581_96 temp581_95))
(assert (= temp581_97 (select ARGNAME_stride_NAMEEND_VAL temp581_96)))
(assert (= temp581_98 #x0000000000000002))
(assert (= temp581_99 temp581_98))
(assert (= temp581_100 (select ARGNAME_stride_NAMEEND_VAL temp581_99)))
(assert (= temp581_101 #x0000000000000003))
(assert (= temp581_102 temp581_101))
(assert (= temp581_103 (select ARGNAME_stride_NAMEEND_VAL temp581_102)))
(assert (= temp581_104 #x0000000000000004))
(assert (= temp581_105 temp581_104))
(assert (= temp581_106 (select ARGNAME_stride_NAMEEND_VAL temp581_105)))
(assert (= temp581_107 #x0000000000000005))
(assert (= temp581_108 temp581_107))
(assert (= temp581_109 (select ARGNAME_stride_NAMEEND_VAL temp581_108)))
(assert (= temp581_110 #x0000000000000000))
(assert (= temp581_111 #x0000000000000000))
(assert (= temp581_112 temp581_111))
(assert (= temp581_113 (select ARGNAME_stride_NAMEEND_VAL temp581_112)))
(assert (= temp581_114 #x0000000000000000))
(assert (= temp581_115 #x0000000000000001))
(assert (= temp581_116 temp581_115))
(assert (= temp581_117 (select ARGNAME_stride_NAMEEND_VAL temp581_116)))
(assert (= temp581_118 #x0000000000000000))
(assert (= temp581_119 #x0000000000000002))
(assert (= temp581_120 temp581_119))
(assert (= temp581_121 (select ARGNAME_stride_NAMEEND_VAL temp581_120)))
(assert (= temp581_122 #x0000000000000000))
(assert (= temp581_123 #x0000000000000003))
(assert (= temp581_124 temp581_123))
(assert (= temp581_125 (select ARGNAME_stride_NAMEEND_VAL temp581_124)))
(assert (= temp581_126 #x0000000000000000))
(assert (= temp581_127 #x0000000000000004))
(assert (= temp581_128 temp581_127))
(assert (= temp581_129 (select ARGNAME_stride_NAMEEND_VAL temp581_128)))
(assert (= temp581_130 #x0000000000000000))
(assert (= temp581_131 #x0000000000000005))
(assert (= temp581_132 temp581_131))
(assert (= temp581_133 (select ARGNAME_stride_NAMEEND_VAL temp581_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp581_113 temp581_110)
             (bvsle temp581_117 temp581_114)
             (bvsle temp581_121 temp581_118)
             (bvsle temp581_125 temp581_122)
             (bvsle temp581_129 temp581_126)
             (bvsle temp581_133 temp581_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_134 #x0000000000000000))
(assert (= var1322807 temp581_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_135 #x0000000000000001))
(assert (= var1322819 temp581_135))
(assert (= temp581_136 #x0000000000000000))
(assert (= var1310898 temp581_136))
(assert (= temp581_137 #x0000000000000000))
(assert (= temp581_138 temp581_137))
(assert (= temp581_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_138)))
(assert (= temp581_140 #x0000000000000001))
(assert (= temp581_141 temp581_140))
(assert (= temp581_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_141)))
(assert (= temp581_143 #x0000000000000002))
(assert (= temp581_144 temp581_143))
(assert (= temp581_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_144)))
(assert (= temp581_146 #x0000000000000003))
(assert (= temp581_147 temp581_146))
(assert (= temp581_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_147)))
(assert (= temp581_149 #x0000000000000004))
(assert (= temp581_150 temp581_149))
(assert (= temp581_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_150)))
(assert (= temp581_152 #x0000000000000005))
(assert (= temp581_153 temp581_152))
(assert (= temp581_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_153)))
(assert (= temp581_156 var1310898))
(assert (= temp581_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_156)))
(assert (= temp581_155 temp581_157))
(assert (= var1322852
   (ite (bvslt temp581_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_158 #x0000000000000000))
(assert (= var1322852 temp581_158))
(assert (= temp581_159 #x0000000000000000))
(assert (= var1310898 temp581_159))
(assert (= temp581_161 var1310898))
(assert (= temp581_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_161)))
(assert (= temp581_160 temp581_162))
(assert (= var1322874 (bvsmod temp581_160 ARGNAME_groups_NAMEEND)))
(assert (= temp581_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp581_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp581_164 #x0000000000000001))
(assert (= var1322875 temp581_164))
(assert (= temp581_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp581_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_166 #x0000000000000001))
(assert (= var1322895 temp581_166))
(assert (= temp581_167 #x0000000000000001))
(assert (= var1311786 temp581_167))
(assert (= temp581_168 #x0000000000000000))
(assert (= temp581_169 temp581_168))
(assert (= temp581_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_169)))
(assert (= temp581_171 #x0000000000000001))
(assert (= temp581_172 temp581_171))
(assert (= temp581_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_172)))
(assert (= temp581_174 #x0000000000000002))
(assert (= temp581_175 temp581_174))
(assert (= temp581_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_175)))
(assert (= temp581_177 #x0000000000000003))
(assert (= temp581_178 temp581_177))
(assert (= temp581_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_178)))
(assert (= temp581_180 #x0000000000000004))
(assert (= temp581_181 temp581_180))
(assert (= temp581_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_181)))
(assert (= temp581_183 #x0000000000000005))
(assert (= temp581_184 temp581_183))
(assert (= temp581_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_184)))
(assert (= temp581_186 #x0000000000000000))
(assert (= temp581_187
   (ite (bvslt var1311786 temp581_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp581_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_187)))
(assert (= var1322903 temp581_188))
(assert (bvslt (ite (bvslt var1311786 temp581_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp581_189 #x0000000000000001))
(assert (= var1311786 temp581_189))
(assert (= temp581_191 var1311786))
(assert (= temp581_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_191)))
(assert (= temp581_190 temp581_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp581_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp581_193 #x0000000000000001))
(assert (= var1322908 temp581_193))
(assert (= temp581_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp581_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_195 #x0000000000000001))
(assert (= var1322975 temp581_195))
(assert (= temp581_196 #x0000000000000000))
(assert (= var1310898 temp581_196))
(assert (= temp581_197 #x0000000000000000))
(assert (= temp581_198 temp581_197))
(assert (= temp581_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp581_198)))
(assert (= temp581_200 #x0000000000000001))
(assert (= temp581_201 temp581_200))
(assert (= temp581_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp581_201)))
(assert (= temp581_203 #x0000000000000002))
(assert (= temp581_204 temp581_203))
(assert (= temp581_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp581_204)))
(assert (= temp581_206 #x0000000000000003))
(assert (= temp581_207 temp581_206))
(assert (= temp581_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp581_207)))
(assert (= temp581_209 #x0000000000000004))
(assert (= temp581_210 temp581_209))
(assert (= temp581_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp581_210)))
(assert (= temp581_212 #x0000000000000005))
(assert (= temp581_213 temp581_212))
(assert (= temp581_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp581_213)))
(assert (= temp581_215 #x0000000000000000))
(assert (= temp581_216
   (ite (bvslt var1310898 temp581_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp581_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp581_216)))
(assert (= var1322977 temp581_217))
(assert (bvslt (ite (bvslt var1310898 temp581_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp581_218 #x0000000000000000))
(assert (= var1310898 temp581_218))
(assert (= temp581_220 var1310898))
(assert (= temp581_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_220)))
(assert (= temp581_219 temp581_221))
(assert (= var1322980
   (ite (= var1322977 temp581_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp581_222 #x0000000000000001))
(assert (= var1322980 temp581_222))
(assert (= temp581_223 #x0000000000000002))
(assert (= var1848169 temp581_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp581_225 #x0000000000000001))
(assert (= var1323065 temp581_225))
(assert (= temp581_226 #x0000000000000001))
(assert (= var3486735 temp581_226))
(assert (= temp581_227 #x0000000000000001))
(assert (= var3814415 temp581_227))
(assert (= temp581_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp581_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_229 #x0000000000000001))
(assert (= var79986 temp581_229))
(assert (= temp581_230 #x0000000000000001))
(assert (= var80116 temp581_230))
(assert (= var4796905 var80116))
(assert (= temp581_231 #x0000000000000000))
(assert (= var4784306 temp581_231))
(assert (= temp581_232 #x0000000000000000))
(assert (= temp581_233
   (ite (bvslt var4784306 temp581_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp581_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_233)))
(assert (= var4796924 temp581_234))
(assert (bvslt (ite (bvslt var4784306 temp581_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp581_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp581_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp581_236 #x0000000000000001))
(assert (= var4796925 temp581_236))
(assert (= temp581_237 #x0000000000000000))
(assert (= var4996927 temp581_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp581_238 #x0000000000000002))
(assert (= var5125763 temp581_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_239 #x0000000000000000))
(assert (= var5191324 temp581_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp581_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp581_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_241 #x0000000000000000))
(assert (= var81342 temp581_241))
(assert (= temp581_242 #x0000000000000001))
(assert (= var79986 temp581_242))
(model-add temp581_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp581_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp581_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






