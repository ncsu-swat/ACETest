(declare-fun temp134_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp134_2 () (_ BitVec 64))
(declare-fun temp134_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp134_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp134_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp134_6 () (_ BitVec 64))
(declare-fun temp134_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp134_8 () (_ BitVec 64))
(declare-fun temp134_9 () (_ BitVec 64))
(declare-fun temp134_10 () (_ BitVec 64))
(declare-fun temp134_11 () (_ BitVec 64))
(declare-fun temp134_12 () (_ BitVec 64))
(declare-fun temp134_13 () (_ BitVec 64))
(declare-fun temp134_14 () (_ BitVec 64))
(declare-fun temp134_15 () (_ BitVec 64))
(declare-fun temp134_16 () (_ BitVec 64))
(declare-fun temp134_17 () (_ BitVec 64))
(declare-fun temp134_18 () (_ BitVec 64))
(declare-fun temp134_19 () (_ BitVec 64))
(declare-fun temp134_20 () (_ BitVec 64))
(declare-fun temp134_21 () (_ BitVec 64))
(declare-fun temp134_22 () (_ BitVec 64))
(declare-fun temp134_23 () (_ BitVec 64))
(declare-fun temp134_24 () (_ BitVec 64))
(declare-fun temp134_25 () (_ BitVec 64))
(declare-fun temp134_26 () (_ BitVec 64))
(declare-fun temp134_27 () (_ BitVec 64))
(declare-fun temp134_28 () (_ BitVec 64))
(declare-fun temp134_29 () (_ BitVec 64))
(declare-fun temp134_30 () (_ BitVec 64))
(declare-fun temp134_31 () (_ BitVec 64))
(declare-fun temp134_32 () (_ BitVec 64))
(declare-fun temp134_33 () (_ BitVec 64))
(declare-fun temp134_34 () (_ BitVec 64))
(declare-fun temp134_35 () (_ BitVec 64))
(declare-fun temp134_36 () (_ BitVec 64))
(declare-fun temp134_37 () (_ BitVec 64))
(declare-fun temp134_38 () (_ BitVec 64))
(declare-fun temp134_39 () (_ BitVec 64))
(declare-fun temp134_40 () (_ BitVec 64))
(declare-fun temp134_41 () (_ BitVec 64))
(declare-fun temp134_42 () (_ BitVec 64))
(declare-fun temp134_43 () (_ BitVec 64))
(declare-fun temp134_44 () (_ BitVec 64))
(declare-fun temp134_45 () (_ BitVec 64))
(declare-fun temp134_46 () (_ BitVec 64))
(declare-fun temp134_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp134_48 () (_ BitVec 64))
(declare-fun temp134_49 () (_ BitVec 64))
(declare-fun temp134_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp134_51 () (_ BitVec 64))
(declare-fun temp134_52 () (_ BitVec 64))
(declare-fun temp134_53 () (_ BitVec 64))
(declare-fun temp134_54 () (_ BitVec 64))
(declare-fun temp134_55 () (_ BitVec 64))
(declare-fun temp134_56 () (_ BitVec 64))
(declare-fun temp134_57 () (_ BitVec 64))
(declare-fun temp134_58 () (_ BitVec 64))
(declare-fun temp134_59 () (_ BitVec 64))
(declare-fun temp134_60 () (_ BitVec 64))
(declare-fun temp134_61 () (_ BitVec 64))
(declare-fun temp134_62 () (_ BitVec 64))
(declare-fun temp134_63 () (_ BitVec 64))
(declare-fun temp134_64 () (_ BitVec 64))
(declare-fun temp134_65 () (_ BitVec 64))
(declare-fun temp134_66 () (_ BitVec 64))
(declare-fun temp134_67 () (_ BitVec 64))
(declare-fun temp134_68 () (_ BitVec 64))
(declare-fun temp134_69 () (_ BitVec 64))
(declare-fun temp134_70 () (_ BitVec 64))
(declare-fun temp134_71 () (_ BitVec 64))
(declare-fun temp134_72 () (_ BitVec 64))
(declare-fun temp134_73 () (_ BitVec 64))
(declare-fun temp134_74 () (_ BitVec 64))
(declare-fun temp134_75 () (_ BitVec 64))
(declare-fun temp134_76 () (_ BitVec 64))
(declare-fun temp134_77 () (_ BitVec 64))
(declare-fun temp134_78 () (_ BitVec 64))
(declare-fun temp134_79 () (_ BitVec 64))
(declare-fun temp134_80 () (_ BitVec 64))
(declare-fun temp134_81 () (_ BitVec 64))
(declare-fun temp134_82 () (_ BitVec 64))
(declare-fun temp134_83 () (_ BitVec 64))
(declare-fun temp134_84 () (_ BitVec 64))
(declare-fun temp134_85 () (_ BitVec 64))
(declare-fun temp134_86 () (_ BitVec 64))
(declare-fun temp134_87 () (_ BitVec 64))
(declare-fun temp134_88 () (_ BitVec 64))
(declare-fun temp134_89 () (_ BitVec 64))
(declare-fun temp134_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp134_91 () (_ BitVec 64))
(declare-fun temp134_92 () (_ BitVec 64))
(declare-fun temp134_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp134_94 () (_ BitVec 64))
(declare-fun temp134_95 () (_ BitVec 64))
(declare-fun temp134_96 () (_ BitVec 64))
(declare-fun temp134_97 () (_ BitVec 64))
(declare-fun temp134_98 () (_ BitVec 64))
(declare-fun temp134_99 () (_ BitVec 64))
(declare-fun temp134_100 () (_ BitVec 64))
(declare-fun temp134_101 () (_ BitVec 64))
(declare-fun temp134_102 () (_ BitVec 64))
(declare-fun temp134_103 () (_ BitVec 64))
(declare-fun temp134_104 () (_ BitVec 64))
(declare-fun temp134_105 () (_ BitVec 64))
(declare-fun temp134_106 () (_ BitVec 64))
(declare-fun temp134_107 () (_ BitVec 64))
(declare-fun temp134_108 () (_ BitVec 64))
(declare-fun temp134_109 () (_ BitVec 64))
(declare-fun temp134_110 () (_ BitVec 64))
(declare-fun temp134_111 () (_ BitVec 64))
(declare-fun temp134_112 () (_ BitVec 64))
(declare-fun temp134_113 () (_ BitVec 64))
(declare-fun temp134_114 () (_ BitVec 64))
(declare-fun temp134_115 () (_ BitVec 64))
(declare-fun temp134_116 () (_ BitVec 64))
(declare-fun temp134_117 () (_ BitVec 64))
(declare-fun temp134_118 () (_ BitVec 64))
(declare-fun temp134_119 () (_ BitVec 64))
(declare-fun temp134_120 () (_ BitVec 64))
(declare-fun temp134_121 () (_ BitVec 64))
(declare-fun temp134_122 () (_ BitVec 64))
(declare-fun temp134_123 () (_ BitVec 64))
(declare-fun temp134_124 () (_ BitVec 64))
(declare-fun temp134_125 () (_ BitVec 64))
(declare-fun temp134_126 () (_ BitVec 64))
(declare-fun temp134_127 () (_ BitVec 64))
(declare-fun temp134_128 () (_ BitVec 64))
(declare-fun temp134_129 () (_ BitVec 64))
(declare-fun temp134_130 () (_ BitVec 64))
(declare-fun temp134_131 () (_ BitVec 64))
(declare-fun temp134_132 () (_ BitVec 64))
(declare-fun temp134_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp134_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp134_135 () (_ BitVec 64))
(declare-fun temp134_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp134_137 () (_ BitVec 64))
(declare-fun temp134_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp134_139 () (_ BitVec 64))
(declare-fun temp134_140 () (_ BitVec 64))
(declare-fun temp134_141 () (_ BitVec 64))
(declare-fun temp134_142 () (_ BitVec 64))
(declare-fun temp134_143 () (_ BitVec 64))
(declare-fun temp134_144 () (_ BitVec 64))
(declare-fun temp134_145 () (_ BitVec 64))
(declare-fun temp134_146 () (_ BitVec 64))
(declare-fun temp134_147 () (_ BitVec 64))
(declare-fun temp134_148 () (_ BitVec 64))
(declare-fun temp134_149 () (_ BitVec 64))
(declare-fun temp134_150 () (_ BitVec 64))
(declare-fun temp134_151 () (_ BitVec 64))
(declare-fun temp134_152 () (_ BitVec 64))
(declare-fun temp134_153 () (_ BitVec 64))
(declare-fun temp134_154 () (_ BitVec 64))
(declare-fun temp134_156 () (_ BitVec 64))
(declare-fun temp134_157 () (_ BitVec 64))
(declare-fun temp134_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp134_158 () (_ BitVec 64))
(declare-fun temp134_159 () (_ BitVec 64))
(declare-fun temp134_161 () (_ BitVec 64))
(declare-fun temp134_162 () (_ BitVec 64))
(declare-fun temp134_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp134_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp134_164 () (_ BitVec 64))
(declare-fun temp134_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp134_166 () (_ BitVec 64))
(declare-fun temp134_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp134_168 () (_ BitVec 64))
(declare-fun temp134_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp134_170 () (_ BitVec 64))
(declare-fun temp134_171 () (_ BitVec 64))
(declare-fun temp134_172 () (_ BitVec 64))
(declare-fun temp134_173 () (_ BitVec 64))
(declare-fun temp134_174 () (_ BitVec 64))
(declare-fun temp134_175 () (_ BitVec 64))
(declare-fun temp134_176 () (_ BitVec 64))
(declare-fun temp134_177 () (_ BitVec 64))
(declare-fun temp134_178 () (_ BitVec 64))
(declare-fun temp134_179 () (_ BitVec 64))
(declare-fun temp134_180 () (_ BitVec 64))
(declare-fun temp134_181 () (_ BitVec 64))
(declare-fun temp134_182 () (_ BitVec 64))
(declare-fun temp134_183 () (_ BitVec 64))
(declare-fun temp134_184 () (_ BitVec 64))
(declare-fun temp134_185 () (_ BitVec 64))
(declare-fun temp134_186 () (_ BitVec 64))
(declare-fun temp134_187 () (_ BitVec 64))
(declare-fun temp134_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp134_189 () (_ BitVec 64))
(declare-fun temp134_191 () (_ BitVec 64))
(declare-fun temp134_192 () (_ BitVec 64))
(declare-fun temp134_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp134_193 () (_ BitVec 64))
(declare-fun temp134_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp134_195 () (_ BitVec 64))
(declare-fun temp134_196 () (_ BitVec 64))
(declare-fun temp134_197 () (_ BitVec 64))
(declare-fun temp134_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp134_199 () (_ BitVec 64))
(declare-fun temp134_200 () (_ BitVec 64))
(declare-fun temp134_201 () (_ BitVec 64))
(declare-fun temp134_202 () (_ BitVec 64))
(declare-fun temp134_203 () (_ BitVec 64))
(declare-fun temp134_204 () (_ BitVec 64))
(declare-fun temp134_205 () (_ BitVec 64))
(declare-fun temp134_206 () (_ BitVec 64))
(declare-fun temp134_207 () (_ BitVec 64))
(declare-fun temp134_208 () (_ BitVec 64))
(declare-fun temp134_209 () (_ BitVec 64))
(declare-fun temp134_210 () (_ BitVec 64))
(declare-fun temp134_211 () (_ BitVec 64))
(declare-fun temp134_212 () (_ BitVec 64))
(declare-fun temp134_213 () (_ BitVec 64))
(declare-fun temp134_214 () (_ BitVec 64))
(declare-fun temp134_215 () (_ BitVec 64))
(declare-fun temp134_216 () (_ BitVec 64))
(declare-fun temp134_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp134_218 () (_ BitVec 64))
(declare-fun temp134_220 () (_ BitVec 64))
(declare-fun temp134_221 () (_ BitVec 64))
(declare-fun temp134_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp134_222 () (_ BitVec 64))
(declare-fun temp134_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp134_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp134_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp134_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp134_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp134_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp134_229 () (_ BitVec 64))
(declare-fun temp134_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp134_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp134_232 () (_ BitVec 64))
(declare-fun temp134_233 () (_ BitVec 64))
(declare-fun temp134_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp134_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp134_236 () (_ BitVec 64))
(declare-fun temp134_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp134_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp134_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp134_241 () (_ BitVec 64))
(declare-fun temp134_240 () (_ BitVec 64))
(declare-fun temp134_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp134_243 () (_ BitVec 64))
(declare-fun temp134_244 () (_ BitVec 64))
(declare-fun temp134_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp134_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp134_247 () (_ BitVec 64))
(declare-fun temp134_249 () (_ BitVec 64))
(declare-fun temp134_248 () (_ BitVec 64))
(declare-fun temp134_250 () (_ BitVec 64))
(assert (= temp134_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp134_1)))
(assert (= temp134_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp134_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_3 #x0000000000000000))
(assert (= var79869 temp134_3))
(assert (= temp134_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp134_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_5 #x0000000000000000))
(assert (= var79914 temp134_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp134_6 #x0000000000000000))
(assert (= temp134_7 temp134_6))
(assert (= temp134_8 (select ARGNAME_padding_NAMEEND_VAL temp134_7)))
(assert (= temp134_9 #x0000000000000001))
(assert (= temp134_10 temp134_9))
(assert (= temp134_11 (select ARGNAME_padding_NAMEEND_VAL temp134_10)))
(assert (= temp134_12 #x0000000000000002))
(assert (= temp134_13 temp134_12))
(assert (= temp134_14 (select ARGNAME_padding_NAMEEND_VAL temp134_13)))
(assert (= temp134_15 #x0000000000000003))
(assert (= temp134_16 temp134_15))
(assert (= temp134_17 (select ARGNAME_padding_NAMEEND_VAL temp134_16)))
(assert (= temp134_18 #x0000000000000004))
(assert (= temp134_19 temp134_18))
(assert (= temp134_20 (select ARGNAME_padding_NAMEEND_VAL temp134_19)))
(assert (= temp134_21 #x0000000000000005))
(assert (= temp134_22 temp134_21))
(assert (= temp134_23 (select ARGNAME_padding_NAMEEND_VAL temp134_22)))
(assert (= temp134_24 #x0000000000000000))
(assert (= temp134_25 #x0000000000000000))
(assert (= temp134_26 temp134_25))
(assert (= temp134_27 (select ARGNAME_padding_NAMEEND_VAL temp134_26)))
(assert (= temp134_28 #x0000000000000000))
(assert (= temp134_29 #x0000000000000001))
(assert (= temp134_30 temp134_29))
(assert (= temp134_31 (select ARGNAME_padding_NAMEEND_VAL temp134_30)))
(assert (= temp134_32 #x0000000000000000))
(assert (= temp134_33 #x0000000000000002))
(assert (= temp134_34 temp134_33))
(assert (= temp134_35 (select ARGNAME_padding_NAMEEND_VAL temp134_34)))
(assert (= temp134_36 #x0000000000000000))
(assert (= temp134_37 #x0000000000000003))
(assert (= temp134_38 temp134_37))
(assert (= temp134_39 (select ARGNAME_padding_NAMEEND_VAL temp134_38)))
(assert (= temp134_40 #x0000000000000000))
(assert (= temp134_41 #x0000000000000004))
(assert (= temp134_42 temp134_41))
(assert (= temp134_43 (select ARGNAME_padding_NAMEEND_VAL temp134_42)))
(assert (= temp134_44 #x0000000000000000))
(assert (= temp134_45 #x0000000000000005))
(assert (= temp134_46 temp134_45))
(assert (= temp134_47 (select ARGNAME_padding_NAMEEND_VAL temp134_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp134_27 temp134_24)
             (bvslt temp134_31 temp134_28)
             (bvslt temp134_35 temp134_32)
             (bvslt temp134_39 temp134_36)
             (bvslt temp134_43 temp134_40)
             (bvslt temp134_47 temp134_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_48 #x0000000000000000))
(assert (= var1322786 temp134_48))
(assert (= temp134_49 #x0000000000000000))
(assert (= temp134_50 temp134_49))
(assert (= temp134_51 (select ARGNAME_output_padding_NAMEEND_VAL temp134_50)))
(assert (= temp134_52 #x0000000000000001))
(assert (= temp134_53 temp134_52))
(assert (= temp134_54 (select ARGNAME_output_padding_NAMEEND_VAL temp134_53)))
(assert (= temp134_55 #x0000000000000002))
(assert (= temp134_56 temp134_55))
(assert (= temp134_57 (select ARGNAME_output_padding_NAMEEND_VAL temp134_56)))
(assert (= temp134_58 #x0000000000000003))
(assert (= temp134_59 temp134_58))
(assert (= temp134_60 (select ARGNAME_output_padding_NAMEEND_VAL temp134_59)))
(assert (= temp134_61 #x0000000000000004))
(assert (= temp134_62 temp134_61))
(assert (= temp134_63 (select ARGNAME_output_padding_NAMEEND_VAL temp134_62)))
(assert (= temp134_64 #x0000000000000005))
(assert (= temp134_65 temp134_64))
(assert (= temp134_66 (select ARGNAME_output_padding_NAMEEND_VAL temp134_65)))
(assert (= temp134_67 #x0000000000000000))
(assert (= temp134_68 #x0000000000000000))
(assert (= temp134_69 temp134_68))
(assert (= temp134_70 (select ARGNAME_output_padding_NAMEEND_VAL temp134_69)))
(assert (= temp134_71 #x0000000000000000))
(assert (= temp134_72 #x0000000000000001))
(assert (= temp134_73 temp134_72))
(assert (= temp134_74 (select ARGNAME_output_padding_NAMEEND_VAL temp134_73)))
(assert (= temp134_75 #x0000000000000000))
(assert (= temp134_76 #x0000000000000002))
(assert (= temp134_77 temp134_76))
(assert (= temp134_78 (select ARGNAME_output_padding_NAMEEND_VAL temp134_77)))
(assert (= temp134_79 #x0000000000000000))
(assert (= temp134_80 #x0000000000000003))
(assert (= temp134_81 temp134_80))
(assert (= temp134_82 (select ARGNAME_output_padding_NAMEEND_VAL temp134_81)))
(assert (= temp134_83 #x0000000000000000))
(assert (= temp134_84 #x0000000000000004))
(assert (= temp134_85 temp134_84))
(assert (= temp134_86 (select ARGNAME_output_padding_NAMEEND_VAL temp134_85)))
(assert (= temp134_87 #x0000000000000000))
(assert (= temp134_88 #x0000000000000005))
(assert (= temp134_89 temp134_88))
(assert (= temp134_90 (select ARGNAME_output_padding_NAMEEND_VAL temp134_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp134_70 temp134_67)
             (bvslt temp134_74 temp134_71)
             (bvslt temp134_78 temp134_75)
             (bvslt temp134_82 temp134_79)
             (bvslt temp134_86 temp134_83)
             (bvslt temp134_90 temp134_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_91 #x0000000000000000))
(assert (= var1322797 temp134_91))
(assert (= temp134_92 #x0000000000000000))
(assert (= temp134_93 temp134_92))
(assert (= temp134_94 (select ARGNAME_stride_NAMEEND_VAL temp134_93)))
(assert (= temp134_95 #x0000000000000001))
(assert (= temp134_96 temp134_95))
(assert (= temp134_97 (select ARGNAME_stride_NAMEEND_VAL temp134_96)))
(assert (= temp134_98 #x0000000000000002))
(assert (= temp134_99 temp134_98))
(assert (= temp134_100 (select ARGNAME_stride_NAMEEND_VAL temp134_99)))
(assert (= temp134_101 #x0000000000000003))
(assert (= temp134_102 temp134_101))
(assert (= temp134_103 (select ARGNAME_stride_NAMEEND_VAL temp134_102)))
(assert (= temp134_104 #x0000000000000004))
(assert (= temp134_105 temp134_104))
(assert (= temp134_106 (select ARGNAME_stride_NAMEEND_VAL temp134_105)))
(assert (= temp134_107 #x0000000000000005))
(assert (= temp134_108 temp134_107))
(assert (= temp134_109 (select ARGNAME_stride_NAMEEND_VAL temp134_108)))
(assert (= temp134_110 #x0000000000000000))
(assert (= temp134_111 #x0000000000000000))
(assert (= temp134_112 temp134_111))
(assert (= temp134_113 (select ARGNAME_stride_NAMEEND_VAL temp134_112)))
(assert (= temp134_114 #x0000000000000000))
(assert (= temp134_115 #x0000000000000001))
(assert (= temp134_116 temp134_115))
(assert (= temp134_117 (select ARGNAME_stride_NAMEEND_VAL temp134_116)))
(assert (= temp134_118 #x0000000000000000))
(assert (= temp134_119 #x0000000000000002))
(assert (= temp134_120 temp134_119))
(assert (= temp134_121 (select ARGNAME_stride_NAMEEND_VAL temp134_120)))
(assert (= temp134_122 #x0000000000000000))
(assert (= temp134_123 #x0000000000000003))
(assert (= temp134_124 temp134_123))
(assert (= temp134_125 (select ARGNAME_stride_NAMEEND_VAL temp134_124)))
(assert (= temp134_126 #x0000000000000000))
(assert (= temp134_127 #x0000000000000004))
(assert (= temp134_128 temp134_127))
(assert (= temp134_129 (select ARGNAME_stride_NAMEEND_VAL temp134_128)))
(assert (= temp134_130 #x0000000000000000))
(assert (= temp134_131 #x0000000000000005))
(assert (= temp134_132 temp134_131))
(assert (= temp134_133 (select ARGNAME_stride_NAMEEND_VAL temp134_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp134_113 temp134_110)
             (bvsle temp134_117 temp134_114)
             (bvsle temp134_121 temp134_118)
             (bvsle temp134_125 temp134_122)
             (bvsle temp134_129 temp134_126)
             (bvsle temp134_133 temp134_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_134 #x0000000000000000))
(assert (= var1322807 temp134_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_135 #x0000000000000001))
(assert (= var1322819 temp134_135))
(assert (= temp134_136 #x0000000000000000))
(assert (= var1310898 temp134_136))
(assert (= temp134_137 #x0000000000000000))
(assert (= temp134_138 temp134_137))
(assert (= temp134_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_138)))
(assert (= temp134_140 #x0000000000000001))
(assert (= temp134_141 temp134_140))
(assert (= temp134_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_141)))
(assert (= temp134_143 #x0000000000000002))
(assert (= temp134_144 temp134_143))
(assert (= temp134_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_144)))
(assert (= temp134_146 #x0000000000000003))
(assert (= temp134_147 temp134_146))
(assert (= temp134_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_147)))
(assert (= temp134_149 #x0000000000000004))
(assert (= temp134_150 temp134_149))
(assert (= temp134_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_150)))
(assert (= temp134_152 #x0000000000000005))
(assert (= temp134_153 temp134_152))
(assert (= temp134_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_153)))
(assert (= temp134_156 var1310898))
(assert (= temp134_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_156)))
(assert (= temp134_155 temp134_157))
(assert (= var1322852
   (ite (bvslt temp134_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_158 #x0000000000000000))
(assert (= var1322852 temp134_158))
(assert (= temp134_159 #x0000000000000000))
(assert (= var1310898 temp134_159))
(assert (= temp134_161 var1310898))
(assert (= temp134_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_161)))
(assert (= temp134_160 temp134_162))
(assert (= var1322874 (bvsmod temp134_160 ARGNAME_groups_NAMEEND)))
(assert (= temp134_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp134_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp134_164 #x0000000000000001))
(assert (= var1322875 temp134_164))
(assert (= temp134_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp134_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_166 #x0000000000000001))
(assert (= var1322895 temp134_166))
(assert (= temp134_167 #x0000000000000001))
(assert (= var1311786 temp134_167))
(assert (= temp134_168 #x0000000000000000))
(assert (= temp134_169 temp134_168))
(assert (= temp134_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp134_169)))
(assert (= temp134_171 #x0000000000000001))
(assert (= temp134_172 temp134_171))
(assert (= temp134_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp134_172)))
(assert (= temp134_174 #x0000000000000002))
(assert (= temp134_175 temp134_174))
(assert (= temp134_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp134_175)))
(assert (= temp134_177 #x0000000000000003))
(assert (= temp134_178 temp134_177))
(assert (= temp134_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp134_178)))
(assert (= temp134_180 #x0000000000000004))
(assert (= temp134_181 temp134_180))
(assert (= temp134_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp134_181)))
(assert (= temp134_183 #x0000000000000005))
(assert (= temp134_184 temp134_183))
(assert (= temp134_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp134_184)))
(assert (= temp134_186 #x0000000000000000))
(assert (= temp134_187
   (ite (bvslt var1311786 temp134_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp134_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp134_187)))
(assert (= var1322903 temp134_188))
(assert (bvslt (ite (bvslt var1311786 temp134_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp134_189 #x0000000000000001))
(assert (= var1311786 temp134_189))
(assert (= temp134_191 var1311786))
(assert (= temp134_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_191)))
(assert (= temp134_190 temp134_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp134_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp134_193 #x0000000000000001))
(assert (= var1322908 temp134_193))
(assert (= temp134_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp134_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_195 #x0000000000000001))
(assert (= var1322975 temp134_195))
(assert (= temp134_196 #x0000000000000000))
(assert (= var1310898 temp134_196))
(assert (= temp134_197 #x0000000000000000))
(assert (= temp134_198 temp134_197))
(assert (= temp134_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp134_198)))
(assert (= temp134_200 #x0000000000000001))
(assert (= temp134_201 temp134_200))
(assert (= temp134_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp134_201)))
(assert (= temp134_203 #x0000000000000002))
(assert (= temp134_204 temp134_203))
(assert (= temp134_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp134_204)))
(assert (= temp134_206 #x0000000000000003))
(assert (= temp134_207 temp134_206))
(assert (= temp134_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp134_207)))
(assert (= temp134_209 #x0000000000000004))
(assert (= temp134_210 temp134_209))
(assert (= temp134_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp134_210)))
(assert (= temp134_212 #x0000000000000005))
(assert (= temp134_213 temp134_212))
(assert (= temp134_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp134_213)))
(assert (= temp134_215 #x0000000000000000))
(assert (= temp134_216
   (ite (bvslt var1310898 temp134_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp134_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp134_216)))
(assert (= var1322977 temp134_217))
(assert (bvslt (ite (bvslt var1310898 temp134_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp134_218 #x0000000000000000))
(assert (= var1310898 temp134_218))
(assert (= temp134_220 var1310898))
(assert (= temp134_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_220)))
(assert (= temp134_219 temp134_221))
(assert (= var1322980
   (ite (= var1322977 temp134_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp134_222 #x0000000000000001))
(assert (= var1322980 temp134_222))
(assert (= temp134_223 #x0000000000000002))
(assert (= var1848169 temp134_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp134_225 #x0000000000000001))
(assert (= var1323065 temp134_225))
(assert (= temp134_226 #x0000000000000001))
(assert (= var3486735 temp134_226))
(assert (= temp134_227 #x0000000000000001))
(assert (= var3814415 temp134_227))
(assert (= temp134_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp134_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_229 #x0000000000000001))
(assert (= var79986 temp134_229))
(assert (= temp134_230 #x0000000000000001))
(assert (= var80116 temp134_230))
(assert (= var4796905 var80116))
(assert (= temp134_231 #x0000000000000000))
(assert (= var4784306 temp134_231))
(assert (= temp134_232 #x0000000000000000))
(assert (= temp134_233
   (ite (bvslt var4784306 temp134_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp134_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp134_233)))
(assert (= var4796924 temp134_234))
(assert (bvslt (ite (bvslt var4784306 temp134_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp134_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp134_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp134_236 #x0000000000000001))
(assert (= var4796925 temp134_236))
(assert (= temp134_237 #x0000000000000000))
(assert (= var4996927 temp134_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp134_238 #x0000000000000002))
(assert (= var5125763 temp134_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_239 #x0000000000000000))
(assert (= var5191324 temp134_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp134_241 #xffffffffffffffff))
(assert (= temp134_240 temp134_241))
(assert (= temp134_242 #x0000000000000001))
(assert (= var66602 temp134_242))
(assert (= temp134_243 #x0000000000000000))
(assert (= temp134_244
   (ite (bvslt var66602 temp134_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp134_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp134_244)))
(assert (= var80523 temp134_245))
(assert (bvslt (ite (bvslt var66602 temp134_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp134_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp134_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp134_247 #x0000000000000001))
(assert (= var80524 temp134_247))
(assert (= temp134_249 #xffffffffffffffff))
(assert (= temp134_248 temp134_249))
(assert (= temp134_250 #x0000000000000001))
(assert (= var79986 temp134_250))
(model-add temp134_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp134_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp134_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






