(declare-fun temp608_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp608_2 () (_ BitVec 64))
(declare-fun temp608_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp608_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp608_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp608_6 () (_ BitVec 64))
(declare-fun temp608_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_8 () (_ BitVec 64))
(declare-fun temp608_9 () (_ BitVec 64))
(declare-fun temp608_10 () (_ BitVec 64))
(declare-fun temp608_11 () (_ BitVec 64))
(declare-fun temp608_12 () (_ BitVec 64))
(declare-fun temp608_13 () (_ BitVec 64))
(declare-fun temp608_14 () (_ BitVec 64))
(declare-fun temp608_15 () (_ BitVec 64))
(declare-fun temp608_16 () (_ BitVec 64))
(declare-fun temp608_17 () (_ BitVec 64))
(declare-fun temp608_18 () (_ BitVec 64))
(declare-fun temp608_19 () (_ BitVec 64))
(declare-fun temp608_20 () (_ BitVec 64))
(declare-fun temp608_21 () (_ BitVec 64))
(declare-fun temp608_22 () (_ BitVec 64))
(declare-fun temp608_23 () (_ BitVec 64))
(declare-fun temp608_24 () (_ BitVec 64))
(declare-fun temp608_25 () (_ BitVec 64))
(declare-fun temp608_26 () (_ BitVec 64))
(declare-fun temp608_27 () (_ BitVec 64))
(declare-fun temp608_28 () (_ BitVec 64))
(declare-fun temp608_29 () (_ BitVec 64))
(declare-fun temp608_30 () (_ BitVec 64))
(declare-fun temp608_31 () (_ BitVec 64))
(declare-fun temp608_32 () (_ BitVec 64))
(declare-fun temp608_33 () (_ BitVec 64))
(declare-fun temp608_34 () (_ BitVec 64))
(declare-fun temp608_35 () (_ BitVec 64))
(declare-fun temp608_36 () (_ BitVec 64))
(declare-fun temp608_37 () (_ BitVec 64))
(declare-fun temp608_38 () (_ BitVec 64))
(declare-fun temp608_39 () (_ BitVec 64))
(declare-fun temp608_40 () (_ BitVec 64))
(declare-fun temp608_41 () (_ BitVec 64))
(declare-fun temp608_42 () (_ BitVec 64))
(declare-fun temp608_43 () (_ BitVec 64))
(declare-fun temp608_44 () (_ BitVec 64))
(declare-fun temp608_45 () (_ BitVec 64))
(declare-fun temp608_46 () (_ BitVec 64))
(declare-fun temp608_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp608_48 () (_ BitVec 64))
(declare-fun temp608_49 () (_ BitVec 64))
(declare-fun temp608_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_51 () (_ BitVec 64))
(declare-fun temp608_52 () (_ BitVec 64))
(declare-fun temp608_53 () (_ BitVec 64))
(declare-fun temp608_54 () (_ BitVec 64))
(declare-fun temp608_55 () (_ BitVec 64))
(declare-fun temp608_56 () (_ BitVec 64))
(declare-fun temp608_57 () (_ BitVec 64))
(declare-fun temp608_58 () (_ BitVec 64))
(declare-fun temp608_59 () (_ BitVec 64))
(declare-fun temp608_60 () (_ BitVec 64))
(declare-fun temp608_61 () (_ BitVec 64))
(declare-fun temp608_62 () (_ BitVec 64))
(declare-fun temp608_63 () (_ BitVec 64))
(declare-fun temp608_64 () (_ BitVec 64))
(declare-fun temp608_65 () (_ BitVec 64))
(declare-fun temp608_66 () (_ BitVec 64))
(declare-fun temp608_67 () (_ BitVec 64))
(declare-fun temp608_68 () (_ BitVec 64))
(declare-fun temp608_69 () (_ BitVec 64))
(declare-fun temp608_70 () (_ BitVec 64))
(declare-fun temp608_71 () (_ BitVec 64))
(declare-fun temp608_72 () (_ BitVec 64))
(declare-fun temp608_73 () (_ BitVec 64))
(declare-fun temp608_74 () (_ BitVec 64))
(declare-fun temp608_75 () (_ BitVec 64))
(declare-fun temp608_76 () (_ BitVec 64))
(declare-fun temp608_77 () (_ BitVec 64))
(declare-fun temp608_78 () (_ BitVec 64))
(declare-fun temp608_79 () (_ BitVec 64))
(declare-fun temp608_80 () (_ BitVec 64))
(declare-fun temp608_81 () (_ BitVec 64))
(declare-fun temp608_82 () (_ BitVec 64))
(declare-fun temp608_83 () (_ BitVec 64))
(declare-fun temp608_84 () (_ BitVec 64))
(declare-fun temp608_85 () (_ BitVec 64))
(declare-fun temp608_86 () (_ BitVec 64))
(declare-fun temp608_87 () (_ BitVec 64))
(declare-fun temp608_88 () (_ BitVec 64))
(declare-fun temp608_89 () (_ BitVec 64))
(declare-fun temp608_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp608_91 () (_ BitVec 64))
(declare-fun temp608_92 () (_ BitVec 64))
(declare-fun temp608_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_94 () (_ BitVec 64))
(declare-fun temp608_95 () (_ BitVec 64))
(declare-fun temp608_96 () (_ BitVec 64))
(declare-fun temp608_97 () (_ BitVec 64))
(declare-fun temp608_98 () (_ BitVec 64))
(declare-fun temp608_99 () (_ BitVec 64))
(declare-fun temp608_100 () (_ BitVec 64))
(declare-fun temp608_101 () (_ BitVec 64))
(declare-fun temp608_102 () (_ BitVec 64))
(declare-fun temp608_103 () (_ BitVec 64))
(declare-fun temp608_104 () (_ BitVec 64))
(declare-fun temp608_105 () (_ BitVec 64))
(declare-fun temp608_106 () (_ BitVec 64))
(declare-fun temp608_107 () (_ BitVec 64))
(declare-fun temp608_108 () (_ BitVec 64))
(declare-fun temp608_109 () (_ BitVec 64))
(declare-fun temp608_110 () (_ BitVec 64))
(declare-fun temp608_111 () (_ BitVec 64))
(declare-fun temp608_112 () (_ BitVec 64))
(declare-fun temp608_113 () (_ BitVec 64))
(declare-fun temp608_114 () (_ BitVec 64))
(declare-fun temp608_115 () (_ BitVec 64))
(declare-fun temp608_116 () (_ BitVec 64))
(declare-fun temp608_117 () (_ BitVec 64))
(declare-fun temp608_118 () (_ BitVec 64))
(declare-fun temp608_119 () (_ BitVec 64))
(declare-fun temp608_120 () (_ BitVec 64))
(declare-fun temp608_121 () (_ BitVec 64))
(declare-fun temp608_122 () (_ BitVec 64))
(declare-fun temp608_123 () (_ BitVec 64))
(declare-fun temp608_124 () (_ BitVec 64))
(declare-fun temp608_125 () (_ BitVec 64))
(declare-fun temp608_126 () (_ BitVec 64))
(declare-fun temp608_127 () (_ BitVec 64))
(declare-fun temp608_128 () (_ BitVec 64))
(declare-fun temp608_129 () (_ BitVec 64))
(declare-fun temp608_130 () (_ BitVec 64))
(declare-fun temp608_131 () (_ BitVec 64))
(declare-fun temp608_132 () (_ BitVec 64))
(declare-fun temp608_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp608_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp608_135 () (_ BitVec 64))
(declare-fun temp608_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp608_137 () (_ BitVec 64))
(declare-fun temp608_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_139 () (_ BitVec 64))
(declare-fun temp608_140 () (_ BitVec 64))
(declare-fun temp608_141 () (_ BitVec 64))
(declare-fun temp608_142 () (_ BitVec 64))
(declare-fun temp608_143 () (_ BitVec 64))
(declare-fun temp608_144 () (_ BitVec 64))
(declare-fun temp608_145 () (_ BitVec 64))
(declare-fun temp608_146 () (_ BitVec 64))
(declare-fun temp608_147 () (_ BitVec 64))
(declare-fun temp608_148 () (_ BitVec 64))
(declare-fun temp608_149 () (_ BitVec 64))
(declare-fun temp608_150 () (_ BitVec 64))
(declare-fun temp608_151 () (_ BitVec 64))
(declare-fun temp608_152 () (_ BitVec 64))
(declare-fun temp608_153 () (_ BitVec 64))
(declare-fun temp608_154 () (_ BitVec 64))
(declare-fun temp608_156 () (_ BitVec 64))
(declare-fun temp608_157 () (_ BitVec 64))
(declare-fun temp608_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp608_158 () (_ BitVec 64))
(declare-fun temp608_159 () (_ BitVec 64))
(declare-fun temp608_161 () (_ BitVec 64))
(declare-fun temp608_162 () (_ BitVec 64))
(declare-fun temp608_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp608_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp608_164 () (_ BitVec 64))
(declare-fun temp608_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp608_166 () (_ BitVec 64))
(declare-fun temp608_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp608_168 () (_ BitVec 64))
(declare-fun temp608_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_170 () (_ BitVec 64))
(declare-fun temp608_171 () (_ BitVec 64))
(declare-fun temp608_172 () (_ BitVec 64))
(declare-fun temp608_173 () (_ BitVec 64))
(declare-fun temp608_174 () (_ BitVec 64))
(declare-fun temp608_175 () (_ BitVec 64))
(declare-fun temp608_176 () (_ BitVec 64))
(declare-fun temp608_177 () (_ BitVec 64))
(declare-fun temp608_178 () (_ BitVec 64))
(declare-fun temp608_179 () (_ BitVec 64))
(declare-fun temp608_180 () (_ BitVec 64))
(declare-fun temp608_181 () (_ BitVec 64))
(declare-fun temp608_182 () (_ BitVec 64))
(declare-fun temp608_183 () (_ BitVec 64))
(declare-fun temp608_184 () (_ BitVec 64))
(declare-fun temp608_185 () (_ BitVec 64))
(declare-fun temp608_186 () (_ BitVec 64))
(declare-fun temp608_187 () (_ BitVec 64))
(declare-fun temp608_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp608_189 () (_ BitVec 64))
(declare-fun temp608_191 () (_ BitVec 64))
(declare-fun temp608_192 () (_ BitVec 64))
(declare-fun temp608_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp608_193 () (_ BitVec 64))
(declare-fun temp608_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp608_195 () (_ BitVec 64))
(declare-fun temp608_196 () (_ BitVec 64))
(declare-fun temp608_197 () (_ BitVec 64))
(declare-fun temp608_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_199 () (_ BitVec 64))
(declare-fun temp608_200 () (_ BitVec 64))
(declare-fun temp608_201 () (_ BitVec 64))
(declare-fun temp608_202 () (_ BitVec 64))
(declare-fun temp608_203 () (_ BitVec 64))
(declare-fun temp608_204 () (_ BitVec 64))
(declare-fun temp608_205 () (_ BitVec 64))
(declare-fun temp608_206 () (_ BitVec 64))
(declare-fun temp608_207 () (_ BitVec 64))
(declare-fun temp608_208 () (_ BitVec 64))
(declare-fun temp608_209 () (_ BitVec 64))
(declare-fun temp608_210 () (_ BitVec 64))
(declare-fun temp608_211 () (_ BitVec 64))
(declare-fun temp608_212 () (_ BitVec 64))
(declare-fun temp608_213 () (_ BitVec 64))
(declare-fun temp608_214 () (_ BitVec 64))
(declare-fun temp608_215 () (_ BitVec 64))
(declare-fun temp608_216 () (_ BitVec 64))
(declare-fun temp608_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp608_218 () (_ BitVec 64))
(declare-fun temp608_220 () (_ BitVec 64))
(declare-fun temp608_221 () (_ BitVec 64))
(declare-fun temp608_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp608_222 () (_ BitVec 64))
(declare-fun temp608_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp608_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp608_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp608_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp608_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp608_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp608_229 () (_ BitVec 64))
(declare-fun temp608_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp608_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp608_232 () (_ BitVec 64))
(declare-fun temp608_233 () (_ BitVec 64))
(declare-fun temp608_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp608_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp608_236 () (_ BitVec 64))
(declare-fun temp608_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp608_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp608_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp608_240 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp608_241 () (_ BitVec 64))
(declare-fun temp608_242 () (_ BitVec 64))
(declare-fun var6763284 () (_ BitVec 64))
(declare-fun var6763251 () (_ BitVec 64))
(declare-fun var6631815 () (_ BitVec 64))
(declare-fun var6631811 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp608_243 () (_ BitVec 64))
(assert (= temp608_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp608_1)))
(assert (= temp608_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp608_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_3 #x0000000000000000))
(assert (= var79869 temp608_3))
(assert (= temp608_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp608_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_5 #x0000000000000000))
(assert (= var79914 temp608_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp608_6 #x0000000000000000))
(assert (= temp608_7 temp608_6))
(assert (= temp608_8 (select ARGNAME_padding_NAMEEND_VAL temp608_7)))
(assert (= temp608_9 #x0000000000000001))
(assert (= temp608_10 temp608_9))
(assert (= temp608_11 (select ARGNAME_padding_NAMEEND_VAL temp608_10)))
(assert (= temp608_12 #x0000000000000002))
(assert (= temp608_13 temp608_12))
(assert (= temp608_14 (select ARGNAME_padding_NAMEEND_VAL temp608_13)))
(assert (= temp608_15 #x0000000000000003))
(assert (= temp608_16 temp608_15))
(assert (= temp608_17 (select ARGNAME_padding_NAMEEND_VAL temp608_16)))
(assert (= temp608_18 #x0000000000000004))
(assert (= temp608_19 temp608_18))
(assert (= temp608_20 (select ARGNAME_padding_NAMEEND_VAL temp608_19)))
(assert (= temp608_21 #x0000000000000005))
(assert (= temp608_22 temp608_21))
(assert (= temp608_23 (select ARGNAME_padding_NAMEEND_VAL temp608_22)))
(assert (= temp608_24 #x0000000000000000))
(assert (= temp608_25 #x0000000000000000))
(assert (= temp608_26 temp608_25))
(assert (= temp608_27 (select ARGNAME_padding_NAMEEND_VAL temp608_26)))
(assert (= temp608_28 #x0000000000000000))
(assert (= temp608_29 #x0000000000000001))
(assert (= temp608_30 temp608_29))
(assert (= temp608_31 (select ARGNAME_padding_NAMEEND_VAL temp608_30)))
(assert (= temp608_32 #x0000000000000000))
(assert (= temp608_33 #x0000000000000002))
(assert (= temp608_34 temp608_33))
(assert (= temp608_35 (select ARGNAME_padding_NAMEEND_VAL temp608_34)))
(assert (= temp608_36 #x0000000000000000))
(assert (= temp608_37 #x0000000000000003))
(assert (= temp608_38 temp608_37))
(assert (= temp608_39 (select ARGNAME_padding_NAMEEND_VAL temp608_38)))
(assert (= temp608_40 #x0000000000000000))
(assert (= temp608_41 #x0000000000000004))
(assert (= temp608_42 temp608_41))
(assert (= temp608_43 (select ARGNAME_padding_NAMEEND_VAL temp608_42)))
(assert (= temp608_44 #x0000000000000000))
(assert (= temp608_45 #x0000000000000005))
(assert (= temp608_46 temp608_45))
(assert (= temp608_47 (select ARGNAME_padding_NAMEEND_VAL temp608_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp608_27 temp608_24)
             (bvslt temp608_31 temp608_28)
             (bvslt temp608_35 temp608_32)
             (bvslt temp608_39 temp608_36)
             (bvslt temp608_43 temp608_40)
             (bvslt temp608_47 temp608_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_48 #x0000000000000000))
(assert (= var1322786 temp608_48))
(assert (= temp608_49 #x0000000000000000))
(assert (= temp608_50 temp608_49))
(assert (= temp608_51 (select ARGNAME_output_padding_NAMEEND_VAL temp608_50)))
(assert (= temp608_52 #x0000000000000001))
(assert (= temp608_53 temp608_52))
(assert (= temp608_54 (select ARGNAME_output_padding_NAMEEND_VAL temp608_53)))
(assert (= temp608_55 #x0000000000000002))
(assert (= temp608_56 temp608_55))
(assert (= temp608_57 (select ARGNAME_output_padding_NAMEEND_VAL temp608_56)))
(assert (= temp608_58 #x0000000000000003))
(assert (= temp608_59 temp608_58))
(assert (= temp608_60 (select ARGNAME_output_padding_NAMEEND_VAL temp608_59)))
(assert (= temp608_61 #x0000000000000004))
(assert (= temp608_62 temp608_61))
(assert (= temp608_63 (select ARGNAME_output_padding_NAMEEND_VAL temp608_62)))
(assert (= temp608_64 #x0000000000000005))
(assert (= temp608_65 temp608_64))
(assert (= temp608_66 (select ARGNAME_output_padding_NAMEEND_VAL temp608_65)))
(assert (= temp608_67 #x0000000000000000))
(assert (= temp608_68 #x0000000000000000))
(assert (= temp608_69 temp608_68))
(assert (= temp608_70 (select ARGNAME_output_padding_NAMEEND_VAL temp608_69)))
(assert (= temp608_71 #x0000000000000000))
(assert (= temp608_72 #x0000000000000001))
(assert (= temp608_73 temp608_72))
(assert (= temp608_74 (select ARGNAME_output_padding_NAMEEND_VAL temp608_73)))
(assert (= temp608_75 #x0000000000000000))
(assert (= temp608_76 #x0000000000000002))
(assert (= temp608_77 temp608_76))
(assert (= temp608_78 (select ARGNAME_output_padding_NAMEEND_VAL temp608_77)))
(assert (= temp608_79 #x0000000000000000))
(assert (= temp608_80 #x0000000000000003))
(assert (= temp608_81 temp608_80))
(assert (= temp608_82 (select ARGNAME_output_padding_NAMEEND_VAL temp608_81)))
(assert (= temp608_83 #x0000000000000000))
(assert (= temp608_84 #x0000000000000004))
(assert (= temp608_85 temp608_84))
(assert (= temp608_86 (select ARGNAME_output_padding_NAMEEND_VAL temp608_85)))
(assert (= temp608_87 #x0000000000000000))
(assert (= temp608_88 #x0000000000000005))
(assert (= temp608_89 temp608_88))
(assert (= temp608_90 (select ARGNAME_output_padding_NAMEEND_VAL temp608_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp608_70 temp608_67)
             (bvslt temp608_74 temp608_71)
             (bvslt temp608_78 temp608_75)
             (bvslt temp608_82 temp608_79)
             (bvslt temp608_86 temp608_83)
             (bvslt temp608_90 temp608_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_91 #x0000000000000000))
(assert (= var1322797 temp608_91))
(assert (= temp608_92 #x0000000000000000))
(assert (= temp608_93 temp608_92))
(assert (= temp608_94 (select ARGNAME_stride_NAMEEND_VAL temp608_93)))
(assert (= temp608_95 #x0000000000000001))
(assert (= temp608_96 temp608_95))
(assert (= temp608_97 (select ARGNAME_stride_NAMEEND_VAL temp608_96)))
(assert (= temp608_98 #x0000000000000002))
(assert (= temp608_99 temp608_98))
(assert (= temp608_100 (select ARGNAME_stride_NAMEEND_VAL temp608_99)))
(assert (= temp608_101 #x0000000000000003))
(assert (= temp608_102 temp608_101))
(assert (= temp608_103 (select ARGNAME_stride_NAMEEND_VAL temp608_102)))
(assert (= temp608_104 #x0000000000000004))
(assert (= temp608_105 temp608_104))
(assert (= temp608_106 (select ARGNAME_stride_NAMEEND_VAL temp608_105)))
(assert (= temp608_107 #x0000000000000005))
(assert (= temp608_108 temp608_107))
(assert (= temp608_109 (select ARGNAME_stride_NAMEEND_VAL temp608_108)))
(assert (= temp608_110 #x0000000000000000))
(assert (= temp608_111 #x0000000000000000))
(assert (= temp608_112 temp608_111))
(assert (= temp608_113 (select ARGNAME_stride_NAMEEND_VAL temp608_112)))
(assert (= temp608_114 #x0000000000000000))
(assert (= temp608_115 #x0000000000000001))
(assert (= temp608_116 temp608_115))
(assert (= temp608_117 (select ARGNAME_stride_NAMEEND_VAL temp608_116)))
(assert (= temp608_118 #x0000000000000000))
(assert (= temp608_119 #x0000000000000002))
(assert (= temp608_120 temp608_119))
(assert (= temp608_121 (select ARGNAME_stride_NAMEEND_VAL temp608_120)))
(assert (= temp608_122 #x0000000000000000))
(assert (= temp608_123 #x0000000000000003))
(assert (= temp608_124 temp608_123))
(assert (= temp608_125 (select ARGNAME_stride_NAMEEND_VAL temp608_124)))
(assert (= temp608_126 #x0000000000000000))
(assert (= temp608_127 #x0000000000000004))
(assert (= temp608_128 temp608_127))
(assert (= temp608_129 (select ARGNAME_stride_NAMEEND_VAL temp608_128)))
(assert (= temp608_130 #x0000000000000000))
(assert (= temp608_131 #x0000000000000005))
(assert (= temp608_132 temp608_131))
(assert (= temp608_133 (select ARGNAME_stride_NAMEEND_VAL temp608_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp608_113 temp608_110)
             (bvsle temp608_117 temp608_114)
             (bvsle temp608_121 temp608_118)
             (bvsle temp608_125 temp608_122)
             (bvsle temp608_129 temp608_126)
             (bvsle temp608_133 temp608_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_134 #x0000000000000000))
(assert (= var1322807 temp608_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_135 #x0000000000000001))
(assert (= var1322819 temp608_135))
(assert (= temp608_136 #x0000000000000000))
(assert (= var1310898 temp608_136))
(assert (= temp608_137 #x0000000000000000))
(assert (= temp608_138 temp608_137))
(assert (= temp608_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_138)))
(assert (= temp608_140 #x0000000000000001))
(assert (= temp608_141 temp608_140))
(assert (= temp608_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_141)))
(assert (= temp608_143 #x0000000000000002))
(assert (= temp608_144 temp608_143))
(assert (= temp608_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_144)))
(assert (= temp608_146 #x0000000000000003))
(assert (= temp608_147 temp608_146))
(assert (= temp608_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_147)))
(assert (= temp608_149 #x0000000000000004))
(assert (= temp608_150 temp608_149))
(assert (= temp608_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_150)))
(assert (= temp608_152 #x0000000000000005))
(assert (= temp608_153 temp608_152))
(assert (= temp608_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_153)))
(assert (= temp608_156 var1310898))
(assert (= temp608_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_156)))
(assert (= temp608_155 temp608_157))
(assert (= var1322852
   (ite (bvslt temp608_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_158 #x0000000000000000))
(assert (= var1322852 temp608_158))
(assert (= temp608_159 #x0000000000000000))
(assert (= var1310898 temp608_159))
(assert (= temp608_161 var1310898))
(assert (= temp608_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_161)))
(assert (= temp608_160 temp608_162))
(assert (= var1322874 (bvsmod temp608_160 ARGNAME_groups_NAMEEND)))
(assert (= temp608_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp608_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp608_164 #x0000000000000001))
(assert (= var1322875 temp608_164))
(assert (= temp608_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp608_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_166 #x0000000000000001))
(assert (= var1322895 temp608_166))
(assert (= temp608_167 #x0000000000000001))
(assert (= var1311786 temp608_167))
(assert (= temp608_168 #x0000000000000000))
(assert (= temp608_169 temp608_168))
(assert (= temp608_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_169)))
(assert (= temp608_171 #x0000000000000001))
(assert (= temp608_172 temp608_171))
(assert (= temp608_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_172)))
(assert (= temp608_174 #x0000000000000002))
(assert (= temp608_175 temp608_174))
(assert (= temp608_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_175)))
(assert (= temp608_177 #x0000000000000003))
(assert (= temp608_178 temp608_177))
(assert (= temp608_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_178)))
(assert (= temp608_180 #x0000000000000004))
(assert (= temp608_181 temp608_180))
(assert (= temp608_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_181)))
(assert (= temp608_183 #x0000000000000005))
(assert (= temp608_184 temp608_183))
(assert (= temp608_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_184)))
(assert (= temp608_186 #x0000000000000000))
(assert (= temp608_187
   (ite (bvslt var1311786 temp608_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp608_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_187)))
(assert (= var1322903 temp608_188))
(assert (bvslt (ite (bvslt var1311786 temp608_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp608_189 #x0000000000000001))
(assert (= var1311786 temp608_189))
(assert (= temp608_191 var1311786))
(assert (= temp608_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_191)))
(assert (= temp608_190 temp608_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp608_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp608_193 #x0000000000000001))
(assert (= var1322908 temp608_193))
(assert (= temp608_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp608_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_195 #x0000000000000001))
(assert (= var1322975 temp608_195))
(assert (= temp608_196 #x0000000000000000))
(assert (= var1310898 temp608_196))
(assert (= temp608_197 #x0000000000000000))
(assert (= temp608_198 temp608_197))
(assert (= temp608_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp608_198)))
(assert (= temp608_200 #x0000000000000001))
(assert (= temp608_201 temp608_200))
(assert (= temp608_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp608_201)))
(assert (= temp608_203 #x0000000000000002))
(assert (= temp608_204 temp608_203))
(assert (= temp608_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp608_204)))
(assert (= temp608_206 #x0000000000000003))
(assert (= temp608_207 temp608_206))
(assert (= temp608_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp608_207)))
(assert (= temp608_209 #x0000000000000004))
(assert (= temp608_210 temp608_209))
(assert (= temp608_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp608_210)))
(assert (= temp608_212 #x0000000000000005))
(assert (= temp608_213 temp608_212))
(assert (= temp608_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp608_213)))
(assert (= temp608_215 #x0000000000000000))
(assert (= temp608_216
   (ite (bvslt var1310898 temp608_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp608_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp608_216)))
(assert (= var1322977 temp608_217))
(assert (bvslt (ite (bvslt var1310898 temp608_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp608_218 #x0000000000000000))
(assert (= var1310898 temp608_218))
(assert (= temp608_220 var1310898))
(assert (= temp608_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_220)))
(assert (= temp608_219 temp608_221))
(assert (= var1322980
   (ite (= var1322977 temp608_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp608_222 #x0000000000000001))
(assert (= var1322980 temp608_222))
(assert (= temp608_223 #x0000000000000002))
(assert (= var1848169 temp608_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp608_225 #x0000000000000001))
(assert (= var1323065 temp608_225))
(assert (= temp608_226 #x0000000000000001))
(assert (= var3486735 temp608_226))
(assert (= temp608_227 #x0000000000000001))
(assert (= var3814415 temp608_227))
(assert (= temp608_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp608_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_229 #x0000000000000001))
(assert (= var79986 temp608_229))
(assert (= temp608_230 #x0000000000000001))
(assert (= var80116 temp608_230))
(assert (= var4796905 var80116))
(assert (= temp608_231 #x0000000000000000))
(assert (= var4784306 temp608_231))
(assert (= temp608_232 #x0000000000000000))
(assert (= temp608_233
   (ite (bvslt var4784306 temp608_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp608_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_233)))
(assert (= var4796924 temp608_234))
(assert (bvslt (ite (bvslt var4784306 temp608_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp608_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp608_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp608_236 #x0000000000000001))
(assert (= var4796925 temp608_236))
(assert (= temp608_237 #x0000000000000000))
(assert (= var4996927 temp608_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp608_238 #x0000000000000002))
(assert (= var5125763 temp608_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_239 #x0000000000000000))
(assert (= var5191324 temp608_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp608_240 #x0000000000000000))
(assert (= var5386640 temp608_240))
(assert (= temp608_241 #x0000000000000001))
(assert (= var79986 temp608_241))
(assert (= temp608_242 #x0000000000000000))
(assert (= var6763284 temp608_242))
(assert (= var6763251 var6763284))
(assert (= var6631815 var6763251))
(assert (= var6631811 var6631815))
(assert (= var81597 var6631811))
(assert (= temp608_243 #x0000000000000000))
(assert (= var81597 temp608_243))
(model-add temp608_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp608_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp608_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






