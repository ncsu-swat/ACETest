(declare-fun temp285_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp285_2 () (_ BitVec 64))
(declare-fun temp285_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp285_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp285_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp285_6 () (_ BitVec 64))
(declare-fun temp285_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_8 () (_ BitVec 64))
(declare-fun temp285_9 () (_ BitVec 64))
(declare-fun temp285_10 () (_ BitVec 64))
(declare-fun temp285_11 () (_ BitVec 64))
(declare-fun temp285_12 () (_ BitVec 64))
(declare-fun temp285_13 () (_ BitVec 64))
(declare-fun temp285_14 () (_ BitVec 64))
(declare-fun temp285_15 () (_ BitVec 64))
(declare-fun temp285_16 () (_ BitVec 64))
(declare-fun temp285_17 () (_ BitVec 64))
(declare-fun temp285_18 () (_ BitVec 64))
(declare-fun temp285_19 () (_ BitVec 64))
(declare-fun temp285_20 () (_ BitVec 64))
(declare-fun temp285_21 () (_ BitVec 64))
(declare-fun temp285_22 () (_ BitVec 64))
(declare-fun temp285_23 () (_ BitVec 64))
(declare-fun temp285_24 () (_ BitVec 64))
(declare-fun temp285_25 () (_ BitVec 64))
(declare-fun temp285_26 () (_ BitVec 64))
(declare-fun temp285_27 () (_ BitVec 64))
(declare-fun temp285_28 () (_ BitVec 64))
(declare-fun temp285_29 () (_ BitVec 64))
(declare-fun temp285_30 () (_ BitVec 64))
(declare-fun temp285_31 () (_ BitVec 64))
(declare-fun temp285_32 () (_ BitVec 64))
(declare-fun temp285_33 () (_ BitVec 64))
(declare-fun temp285_34 () (_ BitVec 64))
(declare-fun temp285_35 () (_ BitVec 64))
(declare-fun temp285_36 () (_ BitVec 64))
(declare-fun temp285_37 () (_ BitVec 64))
(declare-fun temp285_38 () (_ BitVec 64))
(declare-fun temp285_39 () (_ BitVec 64))
(declare-fun temp285_40 () (_ BitVec 64))
(declare-fun temp285_41 () (_ BitVec 64))
(declare-fun temp285_42 () (_ BitVec 64))
(declare-fun temp285_43 () (_ BitVec 64))
(declare-fun temp285_44 () (_ BitVec 64))
(declare-fun temp285_45 () (_ BitVec 64))
(declare-fun temp285_46 () (_ BitVec 64))
(declare-fun temp285_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp285_48 () (_ BitVec 64))
(declare-fun temp285_49 () (_ BitVec 64))
(declare-fun temp285_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_51 () (_ BitVec 64))
(declare-fun temp285_52 () (_ BitVec 64))
(declare-fun temp285_53 () (_ BitVec 64))
(declare-fun temp285_54 () (_ BitVec 64))
(declare-fun temp285_55 () (_ BitVec 64))
(declare-fun temp285_56 () (_ BitVec 64))
(declare-fun temp285_57 () (_ BitVec 64))
(declare-fun temp285_58 () (_ BitVec 64))
(declare-fun temp285_59 () (_ BitVec 64))
(declare-fun temp285_60 () (_ BitVec 64))
(declare-fun temp285_61 () (_ BitVec 64))
(declare-fun temp285_62 () (_ BitVec 64))
(declare-fun temp285_63 () (_ BitVec 64))
(declare-fun temp285_64 () (_ BitVec 64))
(declare-fun temp285_65 () (_ BitVec 64))
(declare-fun temp285_66 () (_ BitVec 64))
(declare-fun temp285_67 () (_ BitVec 64))
(declare-fun temp285_68 () (_ BitVec 64))
(declare-fun temp285_69 () (_ BitVec 64))
(declare-fun temp285_70 () (_ BitVec 64))
(declare-fun temp285_71 () (_ BitVec 64))
(declare-fun temp285_72 () (_ BitVec 64))
(declare-fun temp285_73 () (_ BitVec 64))
(declare-fun temp285_74 () (_ BitVec 64))
(declare-fun temp285_75 () (_ BitVec 64))
(declare-fun temp285_76 () (_ BitVec 64))
(declare-fun temp285_77 () (_ BitVec 64))
(declare-fun temp285_78 () (_ BitVec 64))
(declare-fun temp285_79 () (_ BitVec 64))
(declare-fun temp285_80 () (_ BitVec 64))
(declare-fun temp285_81 () (_ BitVec 64))
(declare-fun temp285_82 () (_ BitVec 64))
(declare-fun temp285_83 () (_ BitVec 64))
(declare-fun temp285_84 () (_ BitVec 64))
(declare-fun temp285_85 () (_ BitVec 64))
(declare-fun temp285_86 () (_ BitVec 64))
(declare-fun temp285_87 () (_ BitVec 64))
(declare-fun temp285_88 () (_ BitVec 64))
(declare-fun temp285_89 () (_ BitVec 64))
(declare-fun temp285_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp285_91 () (_ BitVec 64))
(declare-fun temp285_92 () (_ BitVec 64))
(declare-fun temp285_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_94 () (_ BitVec 64))
(declare-fun temp285_95 () (_ BitVec 64))
(declare-fun temp285_96 () (_ BitVec 64))
(declare-fun temp285_97 () (_ BitVec 64))
(declare-fun temp285_98 () (_ BitVec 64))
(declare-fun temp285_99 () (_ BitVec 64))
(declare-fun temp285_100 () (_ BitVec 64))
(declare-fun temp285_101 () (_ BitVec 64))
(declare-fun temp285_102 () (_ BitVec 64))
(declare-fun temp285_103 () (_ BitVec 64))
(declare-fun temp285_104 () (_ BitVec 64))
(declare-fun temp285_105 () (_ BitVec 64))
(declare-fun temp285_106 () (_ BitVec 64))
(declare-fun temp285_107 () (_ BitVec 64))
(declare-fun temp285_108 () (_ BitVec 64))
(declare-fun temp285_109 () (_ BitVec 64))
(declare-fun temp285_110 () (_ BitVec 64))
(declare-fun temp285_111 () (_ BitVec 64))
(declare-fun temp285_112 () (_ BitVec 64))
(declare-fun temp285_113 () (_ BitVec 64))
(declare-fun temp285_114 () (_ BitVec 64))
(declare-fun temp285_115 () (_ BitVec 64))
(declare-fun temp285_116 () (_ BitVec 64))
(declare-fun temp285_117 () (_ BitVec 64))
(declare-fun temp285_118 () (_ BitVec 64))
(declare-fun temp285_119 () (_ BitVec 64))
(declare-fun temp285_120 () (_ BitVec 64))
(declare-fun temp285_121 () (_ BitVec 64))
(declare-fun temp285_122 () (_ BitVec 64))
(declare-fun temp285_123 () (_ BitVec 64))
(declare-fun temp285_124 () (_ BitVec 64))
(declare-fun temp285_125 () (_ BitVec 64))
(declare-fun temp285_126 () (_ BitVec 64))
(declare-fun temp285_127 () (_ BitVec 64))
(declare-fun temp285_128 () (_ BitVec 64))
(declare-fun temp285_129 () (_ BitVec 64))
(declare-fun temp285_130 () (_ BitVec 64))
(declare-fun temp285_131 () (_ BitVec 64))
(declare-fun temp285_132 () (_ BitVec 64))
(declare-fun temp285_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp285_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp285_135 () (_ BitVec 64))
(declare-fun temp285_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp285_137 () (_ BitVec 64))
(declare-fun temp285_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_139 () (_ BitVec 64))
(declare-fun temp285_140 () (_ BitVec 64))
(declare-fun temp285_141 () (_ BitVec 64))
(declare-fun temp285_142 () (_ BitVec 64))
(declare-fun temp285_143 () (_ BitVec 64))
(declare-fun temp285_144 () (_ BitVec 64))
(declare-fun temp285_145 () (_ BitVec 64))
(declare-fun temp285_146 () (_ BitVec 64))
(declare-fun temp285_147 () (_ BitVec 64))
(declare-fun temp285_148 () (_ BitVec 64))
(declare-fun temp285_149 () (_ BitVec 64))
(declare-fun temp285_150 () (_ BitVec 64))
(declare-fun temp285_151 () (_ BitVec 64))
(declare-fun temp285_152 () (_ BitVec 64))
(declare-fun temp285_153 () (_ BitVec 64))
(declare-fun temp285_154 () (_ BitVec 64))
(declare-fun temp285_156 () (_ BitVec 64))
(declare-fun temp285_157 () (_ BitVec 64))
(declare-fun temp285_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp285_158 () (_ BitVec 64))
(declare-fun temp285_159 () (_ BitVec 64))
(declare-fun temp285_161 () (_ BitVec 64))
(declare-fun temp285_162 () (_ BitVec 64))
(declare-fun temp285_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp285_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp285_164 () (_ BitVec 64))
(declare-fun temp285_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp285_166 () (_ BitVec 64))
(declare-fun temp285_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp285_168 () (_ BitVec 64))
(declare-fun temp285_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_170 () (_ BitVec 64))
(declare-fun temp285_171 () (_ BitVec 64))
(declare-fun temp285_172 () (_ BitVec 64))
(declare-fun temp285_173 () (_ BitVec 64))
(declare-fun temp285_174 () (_ BitVec 64))
(declare-fun temp285_175 () (_ BitVec 64))
(declare-fun temp285_176 () (_ BitVec 64))
(declare-fun temp285_177 () (_ BitVec 64))
(declare-fun temp285_178 () (_ BitVec 64))
(declare-fun temp285_179 () (_ BitVec 64))
(declare-fun temp285_180 () (_ BitVec 64))
(declare-fun temp285_181 () (_ BitVec 64))
(declare-fun temp285_182 () (_ BitVec 64))
(declare-fun temp285_183 () (_ BitVec 64))
(declare-fun temp285_184 () (_ BitVec 64))
(declare-fun temp285_185 () (_ BitVec 64))
(declare-fun temp285_186 () (_ BitVec 64))
(declare-fun temp285_187 () (_ BitVec 64))
(declare-fun temp285_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp285_189 () (_ BitVec 64))
(declare-fun temp285_191 () (_ BitVec 64))
(declare-fun temp285_192 () (_ BitVec 64))
(declare-fun temp285_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp285_193 () (_ BitVec 64))
(declare-fun temp285_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp285_195 () (_ BitVec 64))
(declare-fun temp285_196 () (_ BitVec 64))
(declare-fun temp285_197 () (_ BitVec 64))
(declare-fun temp285_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_199 () (_ BitVec 64))
(declare-fun temp285_200 () (_ BitVec 64))
(declare-fun temp285_201 () (_ BitVec 64))
(declare-fun temp285_202 () (_ BitVec 64))
(declare-fun temp285_203 () (_ BitVec 64))
(declare-fun temp285_204 () (_ BitVec 64))
(declare-fun temp285_205 () (_ BitVec 64))
(declare-fun temp285_206 () (_ BitVec 64))
(declare-fun temp285_207 () (_ BitVec 64))
(declare-fun temp285_208 () (_ BitVec 64))
(declare-fun temp285_209 () (_ BitVec 64))
(declare-fun temp285_210 () (_ BitVec 64))
(declare-fun temp285_211 () (_ BitVec 64))
(declare-fun temp285_212 () (_ BitVec 64))
(declare-fun temp285_213 () (_ BitVec 64))
(declare-fun temp285_214 () (_ BitVec 64))
(declare-fun temp285_215 () (_ BitVec 64))
(declare-fun temp285_216 () (_ BitVec 64))
(declare-fun temp285_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp285_218 () (_ BitVec 64))
(declare-fun temp285_220 () (_ BitVec 64))
(declare-fun temp285_221 () (_ BitVec 64))
(declare-fun temp285_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp285_222 () (_ BitVec 64))
(declare-fun temp285_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp285_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp285_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp285_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp285_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp285_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp285_229 () (_ BitVec 64))
(declare-fun temp285_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp285_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp285_232 () (_ BitVec 64))
(declare-fun temp285_233 () (_ BitVec 64))
(declare-fun temp285_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp285_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp285_236 () (_ BitVec 64))
(declare-fun temp285_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp285_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp285_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp285_240 () (_ BitVec 64))
(assert (= temp285_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp285_1)))
(assert (= temp285_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp285_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_3 #x0000000000000000))
(assert (= var79869 temp285_3))
(assert (= temp285_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp285_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_5 #x0000000000000000))
(assert (= var79914 temp285_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp285_6 #x0000000000000000))
(assert (= temp285_7 temp285_6))
(assert (= temp285_8 (select ARGNAME_padding_NAMEEND_VAL temp285_7)))
(assert (= temp285_9 #x0000000000000001))
(assert (= temp285_10 temp285_9))
(assert (= temp285_11 (select ARGNAME_padding_NAMEEND_VAL temp285_10)))
(assert (= temp285_12 #x0000000000000002))
(assert (= temp285_13 temp285_12))
(assert (= temp285_14 (select ARGNAME_padding_NAMEEND_VAL temp285_13)))
(assert (= temp285_15 #x0000000000000003))
(assert (= temp285_16 temp285_15))
(assert (= temp285_17 (select ARGNAME_padding_NAMEEND_VAL temp285_16)))
(assert (= temp285_18 #x0000000000000004))
(assert (= temp285_19 temp285_18))
(assert (= temp285_20 (select ARGNAME_padding_NAMEEND_VAL temp285_19)))
(assert (= temp285_21 #x0000000000000005))
(assert (= temp285_22 temp285_21))
(assert (= temp285_23 (select ARGNAME_padding_NAMEEND_VAL temp285_22)))
(assert (= temp285_24 #x0000000000000000))
(assert (= temp285_25 #x0000000000000000))
(assert (= temp285_26 temp285_25))
(assert (= temp285_27 (select ARGNAME_padding_NAMEEND_VAL temp285_26)))
(assert (= temp285_28 #x0000000000000000))
(assert (= temp285_29 #x0000000000000001))
(assert (= temp285_30 temp285_29))
(assert (= temp285_31 (select ARGNAME_padding_NAMEEND_VAL temp285_30)))
(assert (= temp285_32 #x0000000000000000))
(assert (= temp285_33 #x0000000000000002))
(assert (= temp285_34 temp285_33))
(assert (= temp285_35 (select ARGNAME_padding_NAMEEND_VAL temp285_34)))
(assert (= temp285_36 #x0000000000000000))
(assert (= temp285_37 #x0000000000000003))
(assert (= temp285_38 temp285_37))
(assert (= temp285_39 (select ARGNAME_padding_NAMEEND_VAL temp285_38)))
(assert (= temp285_40 #x0000000000000000))
(assert (= temp285_41 #x0000000000000004))
(assert (= temp285_42 temp285_41))
(assert (= temp285_43 (select ARGNAME_padding_NAMEEND_VAL temp285_42)))
(assert (= temp285_44 #x0000000000000000))
(assert (= temp285_45 #x0000000000000005))
(assert (= temp285_46 temp285_45))
(assert (= temp285_47 (select ARGNAME_padding_NAMEEND_VAL temp285_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp285_27 temp285_24)
             (bvslt temp285_31 temp285_28)
             (bvslt temp285_35 temp285_32)
             (bvslt temp285_39 temp285_36)
             (bvslt temp285_43 temp285_40)
             (bvslt temp285_47 temp285_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_48 #x0000000000000000))
(assert (= var1322786 temp285_48))
(assert (= temp285_49 #x0000000000000000))
(assert (= temp285_50 temp285_49))
(assert (= temp285_51 (select ARGNAME_output_padding_NAMEEND_VAL temp285_50)))
(assert (= temp285_52 #x0000000000000001))
(assert (= temp285_53 temp285_52))
(assert (= temp285_54 (select ARGNAME_output_padding_NAMEEND_VAL temp285_53)))
(assert (= temp285_55 #x0000000000000002))
(assert (= temp285_56 temp285_55))
(assert (= temp285_57 (select ARGNAME_output_padding_NAMEEND_VAL temp285_56)))
(assert (= temp285_58 #x0000000000000003))
(assert (= temp285_59 temp285_58))
(assert (= temp285_60 (select ARGNAME_output_padding_NAMEEND_VAL temp285_59)))
(assert (= temp285_61 #x0000000000000004))
(assert (= temp285_62 temp285_61))
(assert (= temp285_63 (select ARGNAME_output_padding_NAMEEND_VAL temp285_62)))
(assert (= temp285_64 #x0000000000000005))
(assert (= temp285_65 temp285_64))
(assert (= temp285_66 (select ARGNAME_output_padding_NAMEEND_VAL temp285_65)))
(assert (= temp285_67 #x0000000000000000))
(assert (= temp285_68 #x0000000000000000))
(assert (= temp285_69 temp285_68))
(assert (= temp285_70 (select ARGNAME_output_padding_NAMEEND_VAL temp285_69)))
(assert (= temp285_71 #x0000000000000000))
(assert (= temp285_72 #x0000000000000001))
(assert (= temp285_73 temp285_72))
(assert (= temp285_74 (select ARGNAME_output_padding_NAMEEND_VAL temp285_73)))
(assert (= temp285_75 #x0000000000000000))
(assert (= temp285_76 #x0000000000000002))
(assert (= temp285_77 temp285_76))
(assert (= temp285_78 (select ARGNAME_output_padding_NAMEEND_VAL temp285_77)))
(assert (= temp285_79 #x0000000000000000))
(assert (= temp285_80 #x0000000000000003))
(assert (= temp285_81 temp285_80))
(assert (= temp285_82 (select ARGNAME_output_padding_NAMEEND_VAL temp285_81)))
(assert (= temp285_83 #x0000000000000000))
(assert (= temp285_84 #x0000000000000004))
(assert (= temp285_85 temp285_84))
(assert (= temp285_86 (select ARGNAME_output_padding_NAMEEND_VAL temp285_85)))
(assert (= temp285_87 #x0000000000000000))
(assert (= temp285_88 #x0000000000000005))
(assert (= temp285_89 temp285_88))
(assert (= temp285_90 (select ARGNAME_output_padding_NAMEEND_VAL temp285_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp285_70 temp285_67)
             (bvslt temp285_74 temp285_71)
             (bvslt temp285_78 temp285_75)
             (bvslt temp285_82 temp285_79)
             (bvslt temp285_86 temp285_83)
             (bvslt temp285_90 temp285_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_91 #x0000000000000000))
(assert (= var1322797 temp285_91))
(assert (= temp285_92 #x0000000000000000))
(assert (= temp285_93 temp285_92))
(assert (= temp285_94 (select ARGNAME_stride_NAMEEND_VAL temp285_93)))
(assert (= temp285_95 #x0000000000000001))
(assert (= temp285_96 temp285_95))
(assert (= temp285_97 (select ARGNAME_stride_NAMEEND_VAL temp285_96)))
(assert (= temp285_98 #x0000000000000002))
(assert (= temp285_99 temp285_98))
(assert (= temp285_100 (select ARGNAME_stride_NAMEEND_VAL temp285_99)))
(assert (= temp285_101 #x0000000000000003))
(assert (= temp285_102 temp285_101))
(assert (= temp285_103 (select ARGNAME_stride_NAMEEND_VAL temp285_102)))
(assert (= temp285_104 #x0000000000000004))
(assert (= temp285_105 temp285_104))
(assert (= temp285_106 (select ARGNAME_stride_NAMEEND_VAL temp285_105)))
(assert (= temp285_107 #x0000000000000005))
(assert (= temp285_108 temp285_107))
(assert (= temp285_109 (select ARGNAME_stride_NAMEEND_VAL temp285_108)))
(assert (= temp285_110 #x0000000000000000))
(assert (= temp285_111 #x0000000000000000))
(assert (= temp285_112 temp285_111))
(assert (= temp285_113 (select ARGNAME_stride_NAMEEND_VAL temp285_112)))
(assert (= temp285_114 #x0000000000000000))
(assert (= temp285_115 #x0000000000000001))
(assert (= temp285_116 temp285_115))
(assert (= temp285_117 (select ARGNAME_stride_NAMEEND_VAL temp285_116)))
(assert (= temp285_118 #x0000000000000000))
(assert (= temp285_119 #x0000000000000002))
(assert (= temp285_120 temp285_119))
(assert (= temp285_121 (select ARGNAME_stride_NAMEEND_VAL temp285_120)))
(assert (= temp285_122 #x0000000000000000))
(assert (= temp285_123 #x0000000000000003))
(assert (= temp285_124 temp285_123))
(assert (= temp285_125 (select ARGNAME_stride_NAMEEND_VAL temp285_124)))
(assert (= temp285_126 #x0000000000000000))
(assert (= temp285_127 #x0000000000000004))
(assert (= temp285_128 temp285_127))
(assert (= temp285_129 (select ARGNAME_stride_NAMEEND_VAL temp285_128)))
(assert (= temp285_130 #x0000000000000000))
(assert (= temp285_131 #x0000000000000005))
(assert (= temp285_132 temp285_131))
(assert (= temp285_133 (select ARGNAME_stride_NAMEEND_VAL temp285_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp285_113 temp285_110)
             (bvsle temp285_117 temp285_114)
             (bvsle temp285_121 temp285_118)
             (bvsle temp285_125 temp285_122)
             (bvsle temp285_129 temp285_126)
             (bvsle temp285_133 temp285_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_134 #x0000000000000000))
(assert (= var1322807 temp285_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_135 #x0000000000000001))
(assert (= var1322819 temp285_135))
(assert (= temp285_136 #x0000000000000000))
(assert (= var1310898 temp285_136))
(assert (= temp285_137 #x0000000000000000))
(assert (= temp285_138 temp285_137))
(assert (= temp285_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_138)))
(assert (= temp285_140 #x0000000000000001))
(assert (= temp285_141 temp285_140))
(assert (= temp285_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_141)))
(assert (= temp285_143 #x0000000000000002))
(assert (= temp285_144 temp285_143))
(assert (= temp285_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_144)))
(assert (= temp285_146 #x0000000000000003))
(assert (= temp285_147 temp285_146))
(assert (= temp285_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_147)))
(assert (= temp285_149 #x0000000000000004))
(assert (= temp285_150 temp285_149))
(assert (= temp285_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_150)))
(assert (= temp285_152 #x0000000000000005))
(assert (= temp285_153 temp285_152))
(assert (= temp285_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_153)))
(assert (= temp285_156 var1310898))
(assert (= temp285_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_156)))
(assert (= temp285_155 temp285_157))
(assert (= var1322852
   (ite (bvslt temp285_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_158 #x0000000000000000))
(assert (= var1322852 temp285_158))
(assert (= temp285_159 #x0000000000000000))
(assert (= var1310898 temp285_159))
(assert (= temp285_161 var1310898))
(assert (= temp285_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_161)))
(assert (= temp285_160 temp285_162))
(assert (= var1322874 (bvsmod temp285_160 ARGNAME_groups_NAMEEND)))
(assert (= temp285_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp285_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_164 #x0000000000000001))
(assert (= var1322875 temp285_164))
(assert (= temp285_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp285_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_166 #x0000000000000001))
(assert (= var1322895 temp285_166))
(assert (= temp285_167 #x0000000000000001))
(assert (= var1311786 temp285_167))
(assert (= temp285_168 #x0000000000000000))
(assert (= temp285_169 temp285_168))
(assert (= temp285_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_169)))
(assert (= temp285_171 #x0000000000000001))
(assert (= temp285_172 temp285_171))
(assert (= temp285_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_172)))
(assert (= temp285_174 #x0000000000000002))
(assert (= temp285_175 temp285_174))
(assert (= temp285_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_175)))
(assert (= temp285_177 #x0000000000000003))
(assert (= temp285_178 temp285_177))
(assert (= temp285_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_178)))
(assert (= temp285_180 #x0000000000000004))
(assert (= temp285_181 temp285_180))
(assert (= temp285_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_181)))
(assert (= temp285_183 #x0000000000000005))
(assert (= temp285_184 temp285_183))
(assert (= temp285_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_184)))
(assert (= temp285_186 #x0000000000000000))
(assert (= temp285_187
   (ite (bvslt var1311786 temp285_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp285_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_187)))
(assert (= var1322903 temp285_188))
(assert (bvslt (ite (bvslt var1311786 temp285_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp285_189 #x0000000000000001))
(assert (= var1311786 temp285_189))
(assert (= temp285_191 var1311786))
(assert (= temp285_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_191)))
(assert (= temp285_190 temp285_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp285_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_193 #x0000000000000001))
(assert (= var1322908 temp285_193))
(assert (= temp285_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp285_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_195 #x0000000000000001))
(assert (= var1322975 temp285_195))
(assert (= temp285_196 #x0000000000000000))
(assert (= var1310898 temp285_196))
(assert (= temp285_197 #x0000000000000000))
(assert (= temp285_198 temp285_197))
(assert (= temp285_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp285_198)))
(assert (= temp285_200 #x0000000000000001))
(assert (= temp285_201 temp285_200))
(assert (= temp285_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp285_201)))
(assert (= temp285_203 #x0000000000000002))
(assert (= temp285_204 temp285_203))
(assert (= temp285_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp285_204)))
(assert (= temp285_206 #x0000000000000003))
(assert (= temp285_207 temp285_206))
(assert (= temp285_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp285_207)))
(assert (= temp285_209 #x0000000000000004))
(assert (= temp285_210 temp285_209))
(assert (= temp285_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp285_210)))
(assert (= temp285_212 #x0000000000000005))
(assert (= temp285_213 temp285_212))
(assert (= temp285_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp285_213)))
(assert (= temp285_215 #x0000000000000000))
(assert (= temp285_216
   (ite (bvslt var1310898 temp285_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp285_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp285_216)))
(assert (= var1322977 temp285_217))
(assert (bvslt (ite (bvslt var1310898 temp285_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp285_218 #x0000000000000000))
(assert (= var1310898 temp285_218))
(assert (= temp285_220 var1310898))
(assert (= temp285_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_220)))
(assert (= temp285_219 temp285_221))
(assert (= var1322980
   (ite (= var1322977 temp285_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_222 #x0000000000000001))
(assert (= var1322980 temp285_222))
(assert (= temp285_223 #x0000000000000002))
(assert (= var1848169 temp285_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp285_225 #x0000000000000001))
(assert (= var1323065 temp285_225))
(assert (= temp285_226 #x0000000000000001))
(assert (= var3486735 temp285_226))
(assert (= temp285_227 #x0000000000000001))
(assert (= var3814415 temp285_227))
(assert (= temp285_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp285_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_229 #x0000000000000001))
(assert (= var79986 temp285_229))
(assert (= temp285_230 #x0000000000000001))
(assert (= var80116 temp285_230))
(assert (= var4796905 var80116))
(assert (= temp285_231 #x0000000000000000))
(assert (= var4784306 temp285_231))
(assert (= temp285_232 #x0000000000000000))
(assert (= temp285_233
   (ite (bvslt var4784306 temp285_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp285_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_233)))
(assert (= var4796924 temp285_234))
(assert (bvslt (ite (bvslt var4784306 temp285_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp285_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp285_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_236 #x0000000000000001))
(assert (= var4796925 temp285_236))
(assert (= temp285_237 #x0000000000000000))
(assert (= var4996927 temp285_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp285_238 #x0000000000000002))
(assert (= var5125763 temp285_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_239 #x0000000000000000))
(assert (= var5191324 temp285_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp285_240 #x0000000000000001))
(assert (= var79986 temp285_240))
(model-add temp285_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp285_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp285_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






