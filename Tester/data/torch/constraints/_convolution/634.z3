(declare-fun temp842_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp842_2 () (_ BitVec 64))
(declare-fun temp842_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp842_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp842_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp842_6 () (_ BitVec 64))
(declare-fun temp842_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_8 () (_ BitVec 64))
(declare-fun temp842_9 () (_ BitVec 64))
(declare-fun temp842_10 () (_ BitVec 64))
(declare-fun temp842_11 () (_ BitVec 64))
(declare-fun temp842_12 () (_ BitVec 64))
(declare-fun temp842_13 () (_ BitVec 64))
(declare-fun temp842_14 () (_ BitVec 64))
(declare-fun temp842_15 () (_ BitVec 64))
(declare-fun temp842_16 () (_ BitVec 64))
(declare-fun temp842_17 () (_ BitVec 64))
(declare-fun temp842_18 () (_ BitVec 64))
(declare-fun temp842_19 () (_ BitVec 64))
(declare-fun temp842_20 () (_ BitVec 64))
(declare-fun temp842_21 () (_ BitVec 64))
(declare-fun temp842_22 () (_ BitVec 64))
(declare-fun temp842_23 () (_ BitVec 64))
(declare-fun temp842_24 () (_ BitVec 64))
(declare-fun temp842_25 () (_ BitVec 64))
(declare-fun temp842_26 () (_ BitVec 64))
(declare-fun temp842_27 () (_ BitVec 64))
(declare-fun temp842_28 () (_ BitVec 64))
(declare-fun temp842_29 () (_ BitVec 64))
(declare-fun temp842_30 () (_ BitVec 64))
(declare-fun temp842_31 () (_ BitVec 64))
(declare-fun temp842_32 () (_ BitVec 64))
(declare-fun temp842_33 () (_ BitVec 64))
(declare-fun temp842_34 () (_ BitVec 64))
(declare-fun temp842_35 () (_ BitVec 64))
(declare-fun temp842_36 () (_ BitVec 64))
(declare-fun temp842_37 () (_ BitVec 64))
(declare-fun temp842_38 () (_ BitVec 64))
(declare-fun temp842_39 () (_ BitVec 64))
(declare-fun temp842_40 () (_ BitVec 64))
(declare-fun temp842_41 () (_ BitVec 64))
(declare-fun temp842_42 () (_ BitVec 64))
(declare-fun temp842_43 () (_ BitVec 64))
(declare-fun temp842_44 () (_ BitVec 64))
(declare-fun temp842_45 () (_ BitVec 64))
(declare-fun temp842_46 () (_ BitVec 64))
(declare-fun temp842_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp842_48 () (_ BitVec 64))
(declare-fun temp842_49 () (_ BitVec 64))
(declare-fun temp842_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_51 () (_ BitVec 64))
(declare-fun temp842_52 () (_ BitVec 64))
(declare-fun temp842_53 () (_ BitVec 64))
(declare-fun temp842_54 () (_ BitVec 64))
(declare-fun temp842_55 () (_ BitVec 64))
(declare-fun temp842_56 () (_ BitVec 64))
(declare-fun temp842_57 () (_ BitVec 64))
(declare-fun temp842_58 () (_ BitVec 64))
(declare-fun temp842_59 () (_ BitVec 64))
(declare-fun temp842_60 () (_ BitVec 64))
(declare-fun temp842_61 () (_ BitVec 64))
(declare-fun temp842_62 () (_ BitVec 64))
(declare-fun temp842_63 () (_ BitVec 64))
(declare-fun temp842_64 () (_ BitVec 64))
(declare-fun temp842_65 () (_ BitVec 64))
(declare-fun temp842_66 () (_ BitVec 64))
(declare-fun temp842_67 () (_ BitVec 64))
(declare-fun temp842_68 () (_ BitVec 64))
(declare-fun temp842_69 () (_ BitVec 64))
(declare-fun temp842_70 () (_ BitVec 64))
(declare-fun temp842_71 () (_ BitVec 64))
(declare-fun temp842_72 () (_ BitVec 64))
(declare-fun temp842_73 () (_ BitVec 64))
(declare-fun temp842_74 () (_ BitVec 64))
(declare-fun temp842_75 () (_ BitVec 64))
(declare-fun temp842_76 () (_ BitVec 64))
(declare-fun temp842_77 () (_ BitVec 64))
(declare-fun temp842_78 () (_ BitVec 64))
(declare-fun temp842_79 () (_ BitVec 64))
(declare-fun temp842_80 () (_ BitVec 64))
(declare-fun temp842_81 () (_ BitVec 64))
(declare-fun temp842_82 () (_ BitVec 64))
(declare-fun temp842_83 () (_ BitVec 64))
(declare-fun temp842_84 () (_ BitVec 64))
(declare-fun temp842_85 () (_ BitVec 64))
(declare-fun temp842_86 () (_ BitVec 64))
(declare-fun temp842_87 () (_ BitVec 64))
(declare-fun temp842_88 () (_ BitVec 64))
(declare-fun temp842_89 () (_ BitVec 64))
(declare-fun temp842_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp842_91 () (_ BitVec 64))
(declare-fun temp842_92 () (_ BitVec 64))
(declare-fun temp842_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_94 () (_ BitVec 64))
(declare-fun temp842_95 () (_ BitVec 64))
(declare-fun temp842_96 () (_ BitVec 64))
(declare-fun temp842_97 () (_ BitVec 64))
(declare-fun temp842_98 () (_ BitVec 64))
(declare-fun temp842_99 () (_ BitVec 64))
(declare-fun temp842_100 () (_ BitVec 64))
(declare-fun temp842_101 () (_ BitVec 64))
(declare-fun temp842_102 () (_ BitVec 64))
(declare-fun temp842_103 () (_ BitVec 64))
(declare-fun temp842_104 () (_ BitVec 64))
(declare-fun temp842_105 () (_ BitVec 64))
(declare-fun temp842_106 () (_ BitVec 64))
(declare-fun temp842_107 () (_ BitVec 64))
(declare-fun temp842_108 () (_ BitVec 64))
(declare-fun temp842_109 () (_ BitVec 64))
(declare-fun temp842_110 () (_ BitVec 64))
(declare-fun temp842_111 () (_ BitVec 64))
(declare-fun temp842_112 () (_ BitVec 64))
(declare-fun temp842_113 () (_ BitVec 64))
(declare-fun temp842_114 () (_ BitVec 64))
(declare-fun temp842_115 () (_ BitVec 64))
(declare-fun temp842_116 () (_ BitVec 64))
(declare-fun temp842_117 () (_ BitVec 64))
(declare-fun temp842_118 () (_ BitVec 64))
(declare-fun temp842_119 () (_ BitVec 64))
(declare-fun temp842_120 () (_ BitVec 64))
(declare-fun temp842_121 () (_ BitVec 64))
(declare-fun temp842_122 () (_ BitVec 64))
(declare-fun temp842_123 () (_ BitVec 64))
(declare-fun temp842_124 () (_ BitVec 64))
(declare-fun temp842_125 () (_ BitVec 64))
(declare-fun temp842_126 () (_ BitVec 64))
(declare-fun temp842_127 () (_ BitVec 64))
(declare-fun temp842_128 () (_ BitVec 64))
(declare-fun temp842_129 () (_ BitVec 64))
(declare-fun temp842_130 () (_ BitVec 64))
(declare-fun temp842_131 () (_ BitVec 64))
(declare-fun temp842_132 () (_ BitVec 64))
(declare-fun temp842_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp842_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp842_135 () (_ BitVec 64))
(declare-fun temp842_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp842_137 () (_ BitVec 64))
(declare-fun temp842_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_139 () (_ BitVec 64))
(declare-fun temp842_140 () (_ BitVec 64))
(declare-fun temp842_141 () (_ BitVec 64))
(declare-fun temp842_142 () (_ BitVec 64))
(declare-fun temp842_143 () (_ BitVec 64))
(declare-fun temp842_144 () (_ BitVec 64))
(declare-fun temp842_145 () (_ BitVec 64))
(declare-fun temp842_146 () (_ BitVec 64))
(declare-fun temp842_147 () (_ BitVec 64))
(declare-fun temp842_148 () (_ BitVec 64))
(declare-fun temp842_149 () (_ BitVec 64))
(declare-fun temp842_150 () (_ BitVec 64))
(declare-fun temp842_151 () (_ BitVec 64))
(declare-fun temp842_152 () (_ BitVec 64))
(declare-fun temp842_153 () (_ BitVec 64))
(declare-fun temp842_154 () (_ BitVec 64))
(declare-fun temp842_156 () (_ BitVec 64))
(declare-fun temp842_157 () (_ BitVec 64))
(declare-fun temp842_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp842_158 () (_ BitVec 64))
(declare-fun temp842_159 () (_ BitVec 64))
(declare-fun temp842_161 () (_ BitVec 64))
(declare-fun temp842_162 () (_ BitVec 64))
(declare-fun temp842_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp842_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp842_164 () (_ BitVec 64))
(declare-fun temp842_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp842_166 () (_ BitVec 64))
(declare-fun temp842_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp842_168 () (_ BitVec 64))
(declare-fun temp842_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_170 () (_ BitVec 64))
(declare-fun temp842_171 () (_ BitVec 64))
(declare-fun temp842_172 () (_ BitVec 64))
(declare-fun temp842_173 () (_ BitVec 64))
(declare-fun temp842_174 () (_ BitVec 64))
(declare-fun temp842_175 () (_ BitVec 64))
(declare-fun temp842_176 () (_ BitVec 64))
(declare-fun temp842_177 () (_ BitVec 64))
(declare-fun temp842_178 () (_ BitVec 64))
(declare-fun temp842_179 () (_ BitVec 64))
(declare-fun temp842_180 () (_ BitVec 64))
(declare-fun temp842_181 () (_ BitVec 64))
(declare-fun temp842_182 () (_ BitVec 64))
(declare-fun temp842_183 () (_ BitVec 64))
(declare-fun temp842_184 () (_ BitVec 64))
(declare-fun temp842_185 () (_ BitVec 64))
(declare-fun temp842_186 () (_ BitVec 64))
(declare-fun temp842_187 () (_ BitVec 64))
(declare-fun temp842_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp842_189 () (_ BitVec 64))
(declare-fun temp842_191 () (_ BitVec 64))
(declare-fun temp842_192 () (_ BitVec 64))
(declare-fun temp842_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp842_193 () (_ BitVec 64))
(declare-fun temp842_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp842_195 () (_ BitVec 64))
(declare-fun temp842_196 () (_ BitVec 64))
(declare-fun temp842_197 () (_ BitVec 64))
(declare-fun temp842_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_199 () (_ BitVec 64))
(declare-fun temp842_200 () (_ BitVec 64))
(declare-fun temp842_201 () (_ BitVec 64))
(declare-fun temp842_202 () (_ BitVec 64))
(declare-fun temp842_203 () (_ BitVec 64))
(declare-fun temp842_204 () (_ BitVec 64))
(declare-fun temp842_205 () (_ BitVec 64))
(declare-fun temp842_206 () (_ BitVec 64))
(declare-fun temp842_207 () (_ BitVec 64))
(declare-fun temp842_208 () (_ BitVec 64))
(declare-fun temp842_209 () (_ BitVec 64))
(declare-fun temp842_210 () (_ BitVec 64))
(declare-fun temp842_211 () (_ BitVec 64))
(declare-fun temp842_212 () (_ BitVec 64))
(declare-fun temp842_213 () (_ BitVec 64))
(declare-fun temp842_214 () (_ BitVec 64))
(declare-fun temp842_215 () (_ BitVec 64))
(declare-fun temp842_216 () (_ BitVec 64))
(declare-fun temp842_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp842_218 () (_ BitVec 64))
(declare-fun temp842_220 () (_ BitVec 64))
(declare-fun temp842_221 () (_ BitVec 64))
(declare-fun temp842_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp842_222 () (_ BitVec 64))
(declare-fun temp842_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp842_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp842_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp842_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp842_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp842_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp842_229 () (_ BitVec 64))
(declare-fun temp842_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp842_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp842_232 () (_ BitVec 64))
(declare-fun temp842_233 () (_ BitVec 64))
(declare-fun temp842_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp842_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp842_236 () (_ BitVec 64))
(declare-fun temp842_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp842_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp842_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp842_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80889 () (_ BitVec 64))
(declare-fun temp842_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80891 () (_ BitVec 64))
(declare-fun temp842_242 () (_ BitVec 64))
(assert (= temp842_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp842_1)))
(assert (= temp842_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp842_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_3 #x0000000000000000))
(assert (= var79869 temp842_3))
(assert (= temp842_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp842_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_5 #x0000000000000000))
(assert (= var79914 temp842_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp842_6 #x0000000000000000))
(assert (= temp842_7 temp842_6))
(assert (= temp842_8 (select ARGNAME_padding_NAMEEND_VAL temp842_7)))
(assert (= temp842_9 #x0000000000000001))
(assert (= temp842_10 temp842_9))
(assert (= temp842_11 (select ARGNAME_padding_NAMEEND_VAL temp842_10)))
(assert (= temp842_12 #x0000000000000002))
(assert (= temp842_13 temp842_12))
(assert (= temp842_14 (select ARGNAME_padding_NAMEEND_VAL temp842_13)))
(assert (= temp842_15 #x0000000000000003))
(assert (= temp842_16 temp842_15))
(assert (= temp842_17 (select ARGNAME_padding_NAMEEND_VAL temp842_16)))
(assert (= temp842_18 #x0000000000000004))
(assert (= temp842_19 temp842_18))
(assert (= temp842_20 (select ARGNAME_padding_NAMEEND_VAL temp842_19)))
(assert (= temp842_21 #x0000000000000005))
(assert (= temp842_22 temp842_21))
(assert (= temp842_23 (select ARGNAME_padding_NAMEEND_VAL temp842_22)))
(assert (= temp842_24 #x0000000000000000))
(assert (= temp842_25 #x0000000000000000))
(assert (= temp842_26 temp842_25))
(assert (= temp842_27 (select ARGNAME_padding_NAMEEND_VAL temp842_26)))
(assert (= temp842_28 #x0000000000000000))
(assert (= temp842_29 #x0000000000000001))
(assert (= temp842_30 temp842_29))
(assert (= temp842_31 (select ARGNAME_padding_NAMEEND_VAL temp842_30)))
(assert (= temp842_32 #x0000000000000000))
(assert (= temp842_33 #x0000000000000002))
(assert (= temp842_34 temp842_33))
(assert (= temp842_35 (select ARGNAME_padding_NAMEEND_VAL temp842_34)))
(assert (= temp842_36 #x0000000000000000))
(assert (= temp842_37 #x0000000000000003))
(assert (= temp842_38 temp842_37))
(assert (= temp842_39 (select ARGNAME_padding_NAMEEND_VAL temp842_38)))
(assert (= temp842_40 #x0000000000000000))
(assert (= temp842_41 #x0000000000000004))
(assert (= temp842_42 temp842_41))
(assert (= temp842_43 (select ARGNAME_padding_NAMEEND_VAL temp842_42)))
(assert (= temp842_44 #x0000000000000000))
(assert (= temp842_45 #x0000000000000005))
(assert (= temp842_46 temp842_45))
(assert (= temp842_47 (select ARGNAME_padding_NAMEEND_VAL temp842_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp842_27 temp842_24)
             (bvslt temp842_31 temp842_28)
             (bvslt temp842_35 temp842_32)
             (bvslt temp842_39 temp842_36)
             (bvslt temp842_43 temp842_40)
             (bvslt temp842_47 temp842_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_48 #x0000000000000000))
(assert (= var1322786 temp842_48))
(assert (= temp842_49 #x0000000000000000))
(assert (= temp842_50 temp842_49))
(assert (= temp842_51 (select ARGNAME_output_padding_NAMEEND_VAL temp842_50)))
(assert (= temp842_52 #x0000000000000001))
(assert (= temp842_53 temp842_52))
(assert (= temp842_54 (select ARGNAME_output_padding_NAMEEND_VAL temp842_53)))
(assert (= temp842_55 #x0000000000000002))
(assert (= temp842_56 temp842_55))
(assert (= temp842_57 (select ARGNAME_output_padding_NAMEEND_VAL temp842_56)))
(assert (= temp842_58 #x0000000000000003))
(assert (= temp842_59 temp842_58))
(assert (= temp842_60 (select ARGNAME_output_padding_NAMEEND_VAL temp842_59)))
(assert (= temp842_61 #x0000000000000004))
(assert (= temp842_62 temp842_61))
(assert (= temp842_63 (select ARGNAME_output_padding_NAMEEND_VAL temp842_62)))
(assert (= temp842_64 #x0000000000000005))
(assert (= temp842_65 temp842_64))
(assert (= temp842_66 (select ARGNAME_output_padding_NAMEEND_VAL temp842_65)))
(assert (= temp842_67 #x0000000000000000))
(assert (= temp842_68 #x0000000000000000))
(assert (= temp842_69 temp842_68))
(assert (= temp842_70 (select ARGNAME_output_padding_NAMEEND_VAL temp842_69)))
(assert (= temp842_71 #x0000000000000000))
(assert (= temp842_72 #x0000000000000001))
(assert (= temp842_73 temp842_72))
(assert (= temp842_74 (select ARGNAME_output_padding_NAMEEND_VAL temp842_73)))
(assert (= temp842_75 #x0000000000000000))
(assert (= temp842_76 #x0000000000000002))
(assert (= temp842_77 temp842_76))
(assert (= temp842_78 (select ARGNAME_output_padding_NAMEEND_VAL temp842_77)))
(assert (= temp842_79 #x0000000000000000))
(assert (= temp842_80 #x0000000000000003))
(assert (= temp842_81 temp842_80))
(assert (= temp842_82 (select ARGNAME_output_padding_NAMEEND_VAL temp842_81)))
(assert (= temp842_83 #x0000000000000000))
(assert (= temp842_84 #x0000000000000004))
(assert (= temp842_85 temp842_84))
(assert (= temp842_86 (select ARGNAME_output_padding_NAMEEND_VAL temp842_85)))
(assert (= temp842_87 #x0000000000000000))
(assert (= temp842_88 #x0000000000000005))
(assert (= temp842_89 temp842_88))
(assert (= temp842_90 (select ARGNAME_output_padding_NAMEEND_VAL temp842_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp842_70 temp842_67)
             (bvslt temp842_74 temp842_71)
             (bvslt temp842_78 temp842_75)
             (bvslt temp842_82 temp842_79)
             (bvslt temp842_86 temp842_83)
             (bvslt temp842_90 temp842_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_91 #x0000000000000000))
(assert (= var1322797 temp842_91))
(assert (= temp842_92 #x0000000000000000))
(assert (= temp842_93 temp842_92))
(assert (= temp842_94 (select ARGNAME_stride_NAMEEND_VAL temp842_93)))
(assert (= temp842_95 #x0000000000000001))
(assert (= temp842_96 temp842_95))
(assert (= temp842_97 (select ARGNAME_stride_NAMEEND_VAL temp842_96)))
(assert (= temp842_98 #x0000000000000002))
(assert (= temp842_99 temp842_98))
(assert (= temp842_100 (select ARGNAME_stride_NAMEEND_VAL temp842_99)))
(assert (= temp842_101 #x0000000000000003))
(assert (= temp842_102 temp842_101))
(assert (= temp842_103 (select ARGNAME_stride_NAMEEND_VAL temp842_102)))
(assert (= temp842_104 #x0000000000000004))
(assert (= temp842_105 temp842_104))
(assert (= temp842_106 (select ARGNAME_stride_NAMEEND_VAL temp842_105)))
(assert (= temp842_107 #x0000000000000005))
(assert (= temp842_108 temp842_107))
(assert (= temp842_109 (select ARGNAME_stride_NAMEEND_VAL temp842_108)))
(assert (= temp842_110 #x0000000000000000))
(assert (= temp842_111 #x0000000000000000))
(assert (= temp842_112 temp842_111))
(assert (= temp842_113 (select ARGNAME_stride_NAMEEND_VAL temp842_112)))
(assert (= temp842_114 #x0000000000000000))
(assert (= temp842_115 #x0000000000000001))
(assert (= temp842_116 temp842_115))
(assert (= temp842_117 (select ARGNAME_stride_NAMEEND_VAL temp842_116)))
(assert (= temp842_118 #x0000000000000000))
(assert (= temp842_119 #x0000000000000002))
(assert (= temp842_120 temp842_119))
(assert (= temp842_121 (select ARGNAME_stride_NAMEEND_VAL temp842_120)))
(assert (= temp842_122 #x0000000000000000))
(assert (= temp842_123 #x0000000000000003))
(assert (= temp842_124 temp842_123))
(assert (= temp842_125 (select ARGNAME_stride_NAMEEND_VAL temp842_124)))
(assert (= temp842_126 #x0000000000000000))
(assert (= temp842_127 #x0000000000000004))
(assert (= temp842_128 temp842_127))
(assert (= temp842_129 (select ARGNAME_stride_NAMEEND_VAL temp842_128)))
(assert (= temp842_130 #x0000000000000000))
(assert (= temp842_131 #x0000000000000005))
(assert (= temp842_132 temp842_131))
(assert (= temp842_133 (select ARGNAME_stride_NAMEEND_VAL temp842_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp842_113 temp842_110)
             (bvsle temp842_117 temp842_114)
             (bvsle temp842_121 temp842_118)
             (bvsle temp842_125 temp842_122)
             (bvsle temp842_129 temp842_126)
             (bvsle temp842_133 temp842_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_134 #x0000000000000000))
(assert (= var1322807 temp842_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_135 #x0000000000000001))
(assert (= var1322819 temp842_135))
(assert (= temp842_136 #x0000000000000000))
(assert (= var1310898 temp842_136))
(assert (= temp842_137 #x0000000000000000))
(assert (= temp842_138 temp842_137))
(assert (= temp842_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_138)))
(assert (= temp842_140 #x0000000000000001))
(assert (= temp842_141 temp842_140))
(assert (= temp842_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_141)))
(assert (= temp842_143 #x0000000000000002))
(assert (= temp842_144 temp842_143))
(assert (= temp842_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_144)))
(assert (= temp842_146 #x0000000000000003))
(assert (= temp842_147 temp842_146))
(assert (= temp842_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_147)))
(assert (= temp842_149 #x0000000000000004))
(assert (= temp842_150 temp842_149))
(assert (= temp842_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_150)))
(assert (= temp842_152 #x0000000000000005))
(assert (= temp842_153 temp842_152))
(assert (= temp842_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_153)))
(assert (= temp842_156 var1310898))
(assert (= temp842_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_156)))
(assert (= temp842_155 temp842_157))
(assert (= var1322852
   (ite (bvslt temp842_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_158 #x0000000000000000))
(assert (= var1322852 temp842_158))
(assert (= temp842_159 #x0000000000000000))
(assert (= var1310898 temp842_159))
(assert (= temp842_161 var1310898))
(assert (= temp842_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_161)))
(assert (= temp842_160 temp842_162))
(assert (= var1322874 (bvsmod temp842_160 ARGNAME_groups_NAMEEND)))
(assert (= temp842_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp842_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_164 #x0000000000000001))
(assert (= var1322875 temp842_164))
(assert (= temp842_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp842_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_166 #x0000000000000001))
(assert (= var1322895 temp842_166))
(assert (= temp842_167 #x0000000000000001))
(assert (= var1311786 temp842_167))
(assert (= temp842_168 #x0000000000000000))
(assert (= temp842_169 temp842_168))
(assert (= temp842_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_169)))
(assert (= temp842_171 #x0000000000000001))
(assert (= temp842_172 temp842_171))
(assert (= temp842_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_172)))
(assert (= temp842_174 #x0000000000000002))
(assert (= temp842_175 temp842_174))
(assert (= temp842_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_175)))
(assert (= temp842_177 #x0000000000000003))
(assert (= temp842_178 temp842_177))
(assert (= temp842_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_178)))
(assert (= temp842_180 #x0000000000000004))
(assert (= temp842_181 temp842_180))
(assert (= temp842_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_181)))
(assert (= temp842_183 #x0000000000000005))
(assert (= temp842_184 temp842_183))
(assert (= temp842_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_184)))
(assert (= temp842_186 #x0000000000000000))
(assert (= temp842_187
   (ite (bvslt var1311786 temp842_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp842_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_187)))
(assert (= var1322903 temp842_188))
(assert (bvslt (ite (bvslt var1311786 temp842_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp842_189 #x0000000000000001))
(assert (= var1311786 temp842_189))
(assert (= temp842_191 var1311786))
(assert (= temp842_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_191)))
(assert (= temp842_190 temp842_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp842_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_193 #x0000000000000001))
(assert (= var1322908 temp842_193))
(assert (= temp842_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp842_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_195 #x0000000000000001))
(assert (= var1322975 temp842_195))
(assert (= temp842_196 #x0000000000000000))
(assert (= var1310898 temp842_196))
(assert (= temp842_197 #x0000000000000000))
(assert (= temp842_198 temp842_197))
(assert (= temp842_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp842_198)))
(assert (= temp842_200 #x0000000000000001))
(assert (= temp842_201 temp842_200))
(assert (= temp842_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp842_201)))
(assert (= temp842_203 #x0000000000000002))
(assert (= temp842_204 temp842_203))
(assert (= temp842_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp842_204)))
(assert (= temp842_206 #x0000000000000003))
(assert (= temp842_207 temp842_206))
(assert (= temp842_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp842_207)))
(assert (= temp842_209 #x0000000000000004))
(assert (= temp842_210 temp842_209))
(assert (= temp842_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp842_210)))
(assert (= temp842_212 #x0000000000000005))
(assert (= temp842_213 temp842_212))
(assert (= temp842_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp842_213)))
(assert (= temp842_215 #x0000000000000000))
(assert (= temp842_216
   (ite (bvslt var1310898 temp842_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp842_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp842_216)))
(assert (= var1322977 temp842_217))
(assert (bvslt (ite (bvslt var1310898 temp842_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp842_218 #x0000000000000000))
(assert (= var1310898 temp842_218))
(assert (= temp842_220 var1310898))
(assert (= temp842_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_220)))
(assert (= temp842_219 temp842_221))
(assert (= var1322980
   (ite (= var1322977 temp842_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_222 #x0000000000000001))
(assert (= var1322980 temp842_222))
(assert (= temp842_223 #x0000000000000002))
(assert (= var1848169 temp842_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp842_225 #x0000000000000001))
(assert (= var1323065 temp842_225))
(assert (= temp842_226 #x0000000000000001))
(assert (= var3486735 temp842_226))
(assert (= temp842_227 #x0000000000000001))
(assert (= var3814415 temp842_227))
(assert (= temp842_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp842_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_229 #x0000000000000001))
(assert (= var79986 temp842_229))
(assert (= temp842_230 #x0000000000000001))
(assert (= var80116 temp842_230))
(assert (= var4796905 var80116))
(assert (= temp842_231 #x0000000000000000))
(assert (= var4784306 temp842_231))
(assert (= temp842_232 #x0000000000000000))
(assert (= temp842_233
   (ite (bvslt var4784306 temp842_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp842_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_233)))
(assert (= var4796924 temp842_234))
(assert (bvslt (ite (bvslt var4784306 temp842_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp842_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp842_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_236 #x0000000000000001))
(assert (= var4796925 temp842_236))
(assert (= temp842_237 #x0000000000000000))
(assert (= var4996927 temp842_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp842_238 #x0000000000000002))
(assert (= var5125763 temp842_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_239 #x0000000000000000))
(assert (= var5191324 temp842_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp842_240 #x0000000000000000))
(assert (= var80889
   (ite (distinct ARGNAME_benchmark_NAMEEND temp842_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_241 #x0000000000000000))
(assert (= var80891
   (ite (distinct ARGNAME_deterministic_NAMEEND temp842_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_242 #x0000000000000001))
(assert (= var79986 temp842_242))
(model-add temp842_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp842_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp842_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






