(declare-fun temp81_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp81_2 () (_ BitVec 64))
(declare-fun temp81_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp81_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp81_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp81_6 () (_ BitVec 64))
(declare-fun temp81_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_8 () (_ BitVec 64))
(declare-fun temp81_9 () (_ BitVec 64))
(declare-fun temp81_10 () (_ BitVec 64))
(declare-fun temp81_11 () (_ BitVec 64))
(declare-fun temp81_12 () (_ BitVec 64))
(declare-fun temp81_13 () (_ BitVec 64))
(declare-fun temp81_14 () (_ BitVec 64))
(declare-fun temp81_15 () (_ BitVec 64))
(declare-fun temp81_16 () (_ BitVec 64))
(declare-fun temp81_17 () (_ BitVec 64))
(declare-fun temp81_18 () (_ BitVec 64))
(declare-fun temp81_19 () (_ BitVec 64))
(declare-fun temp81_20 () (_ BitVec 64))
(declare-fun temp81_21 () (_ BitVec 64))
(declare-fun temp81_22 () (_ BitVec 64))
(declare-fun temp81_23 () (_ BitVec 64))
(declare-fun temp81_24 () (_ BitVec 64))
(declare-fun temp81_25 () (_ BitVec 64))
(declare-fun temp81_26 () (_ BitVec 64))
(declare-fun temp81_27 () (_ BitVec 64))
(declare-fun temp81_28 () (_ BitVec 64))
(declare-fun temp81_29 () (_ BitVec 64))
(declare-fun temp81_30 () (_ BitVec 64))
(declare-fun temp81_31 () (_ BitVec 64))
(declare-fun temp81_32 () (_ BitVec 64))
(declare-fun temp81_33 () (_ BitVec 64))
(declare-fun temp81_34 () (_ BitVec 64))
(declare-fun temp81_35 () (_ BitVec 64))
(declare-fun temp81_36 () (_ BitVec 64))
(declare-fun temp81_37 () (_ BitVec 64))
(declare-fun temp81_38 () (_ BitVec 64))
(declare-fun temp81_39 () (_ BitVec 64))
(declare-fun temp81_40 () (_ BitVec 64))
(declare-fun temp81_41 () (_ BitVec 64))
(declare-fun temp81_42 () (_ BitVec 64))
(declare-fun temp81_43 () (_ BitVec 64))
(declare-fun temp81_44 () (_ BitVec 64))
(declare-fun temp81_45 () (_ BitVec 64))
(declare-fun temp81_46 () (_ BitVec 64))
(declare-fun temp81_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp81_48 () (_ BitVec 64))
(declare-fun temp81_49 () (_ BitVec 64))
(declare-fun temp81_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_51 () (_ BitVec 64))
(declare-fun temp81_52 () (_ BitVec 64))
(declare-fun temp81_53 () (_ BitVec 64))
(declare-fun temp81_54 () (_ BitVec 64))
(declare-fun temp81_55 () (_ BitVec 64))
(declare-fun temp81_56 () (_ BitVec 64))
(declare-fun temp81_57 () (_ BitVec 64))
(declare-fun temp81_58 () (_ BitVec 64))
(declare-fun temp81_59 () (_ BitVec 64))
(declare-fun temp81_60 () (_ BitVec 64))
(declare-fun temp81_61 () (_ BitVec 64))
(declare-fun temp81_62 () (_ BitVec 64))
(declare-fun temp81_63 () (_ BitVec 64))
(declare-fun temp81_64 () (_ BitVec 64))
(declare-fun temp81_65 () (_ BitVec 64))
(declare-fun temp81_66 () (_ BitVec 64))
(declare-fun temp81_67 () (_ BitVec 64))
(declare-fun temp81_68 () (_ BitVec 64))
(declare-fun temp81_69 () (_ BitVec 64))
(declare-fun temp81_70 () (_ BitVec 64))
(declare-fun temp81_71 () (_ BitVec 64))
(declare-fun temp81_72 () (_ BitVec 64))
(declare-fun temp81_73 () (_ BitVec 64))
(declare-fun temp81_74 () (_ BitVec 64))
(declare-fun temp81_75 () (_ BitVec 64))
(declare-fun temp81_76 () (_ BitVec 64))
(declare-fun temp81_77 () (_ BitVec 64))
(declare-fun temp81_78 () (_ BitVec 64))
(declare-fun temp81_79 () (_ BitVec 64))
(declare-fun temp81_80 () (_ BitVec 64))
(declare-fun temp81_81 () (_ BitVec 64))
(declare-fun temp81_82 () (_ BitVec 64))
(declare-fun temp81_83 () (_ BitVec 64))
(declare-fun temp81_84 () (_ BitVec 64))
(declare-fun temp81_85 () (_ BitVec 64))
(declare-fun temp81_86 () (_ BitVec 64))
(declare-fun temp81_87 () (_ BitVec 64))
(declare-fun temp81_88 () (_ BitVec 64))
(declare-fun temp81_89 () (_ BitVec 64))
(declare-fun temp81_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp81_91 () (_ BitVec 64))
(declare-fun temp81_92 () (_ BitVec 64))
(declare-fun temp81_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_94 () (_ BitVec 64))
(declare-fun temp81_95 () (_ BitVec 64))
(declare-fun temp81_96 () (_ BitVec 64))
(declare-fun temp81_97 () (_ BitVec 64))
(declare-fun temp81_98 () (_ BitVec 64))
(declare-fun temp81_99 () (_ BitVec 64))
(declare-fun temp81_100 () (_ BitVec 64))
(declare-fun temp81_101 () (_ BitVec 64))
(declare-fun temp81_102 () (_ BitVec 64))
(declare-fun temp81_103 () (_ BitVec 64))
(declare-fun temp81_104 () (_ BitVec 64))
(declare-fun temp81_105 () (_ BitVec 64))
(declare-fun temp81_106 () (_ BitVec 64))
(declare-fun temp81_107 () (_ BitVec 64))
(declare-fun temp81_108 () (_ BitVec 64))
(declare-fun temp81_109 () (_ BitVec 64))
(declare-fun temp81_110 () (_ BitVec 64))
(declare-fun temp81_111 () (_ BitVec 64))
(declare-fun temp81_112 () (_ BitVec 64))
(declare-fun temp81_113 () (_ BitVec 64))
(declare-fun temp81_114 () (_ BitVec 64))
(declare-fun temp81_115 () (_ BitVec 64))
(declare-fun temp81_116 () (_ BitVec 64))
(declare-fun temp81_117 () (_ BitVec 64))
(declare-fun temp81_118 () (_ BitVec 64))
(declare-fun temp81_119 () (_ BitVec 64))
(declare-fun temp81_120 () (_ BitVec 64))
(declare-fun temp81_121 () (_ BitVec 64))
(declare-fun temp81_122 () (_ BitVec 64))
(declare-fun temp81_123 () (_ BitVec 64))
(declare-fun temp81_124 () (_ BitVec 64))
(declare-fun temp81_125 () (_ BitVec 64))
(declare-fun temp81_126 () (_ BitVec 64))
(declare-fun temp81_127 () (_ BitVec 64))
(declare-fun temp81_128 () (_ BitVec 64))
(declare-fun temp81_129 () (_ BitVec 64))
(declare-fun temp81_130 () (_ BitVec 64))
(declare-fun temp81_131 () (_ BitVec 64))
(declare-fun temp81_132 () (_ BitVec 64))
(declare-fun temp81_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp81_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp81_135 () (_ BitVec 64))
(declare-fun temp81_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp81_137 () (_ BitVec 64))
(declare-fun temp81_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_139 () (_ BitVec 64))
(declare-fun temp81_140 () (_ BitVec 64))
(declare-fun temp81_141 () (_ BitVec 64))
(declare-fun temp81_142 () (_ BitVec 64))
(declare-fun temp81_143 () (_ BitVec 64))
(declare-fun temp81_144 () (_ BitVec 64))
(declare-fun temp81_145 () (_ BitVec 64))
(declare-fun temp81_146 () (_ BitVec 64))
(declare-fun temp81_147 () (_ BitVec 64))
(declare-fun temp81_148 () (_ BitVec 64))
(declare-fun temp81_149 () (_ BitVec 64))
(declare-fun temp81_150 () (_ BitVec 64))
(declare-fun temp81_151 () (_ BitVec 64))
(declare-fun temp81_152 () (_ BitVec 64))
(declare-fun temp81_153 () (_ BitVec 64))
(declare-fun temp81_154 () (_ BitVec 64))
(declare-fun temp81_156 () (_ BitVec 64))
(declare-fun temp81_157 () (_ BitVec 64))
(declare-fun temp81_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp81_158 () (_ BitVec 64))
(declare-fun temp81_159 () (_ BitVec 64))
(declare-fun temp81_161 () (_ BitVec 64))
(declare-fun temp81_162 () (_ BitVec 64))
(declare-fun temp81_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp81_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp81_164 () (_ BitVec 64))
(declare-fun temp81_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp81_166 () (_ BitVec 64))
(declare-fun temp81_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp81_168 () (_ BitVec 64))
(declare-fun temp81_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_170 () (_ BitVec 64))
(declare-fun temp81_171 () (_ BitVec 64))
(declare-fun temp81_172 () (_ BitVec 64))
(declare-fun temp81_173 () (_ BitVec 64))
(declare-fun temp81_174 () (_ BitVec 64))
(declare-fun temp81_175 () (_ BitVec 64))
(declare-fun temp81_176 () (_ BitVec 64))
(declare-fun temp81_177 () (_ BitVec 64))
(declare-fun temp81_178 () (_ BitVec 64))
(declare-fun temp81_179 () (_ BitVec 64))
(declare-fun temp81_180 () (_ BitVec 64))
(declare-fun temp81_181 () (_ BitVec 64))
(declare-fun temp81_182 () (_ BitVec 64))
(declare-fun temp81_183 () (_ BitVec 64))
(declare-fun temp81_184 () (_ BitVec 64))
(declare-fun temp81_185 () (_ BitVec 64))
(declare-fun temp81_186 () (_ BitVec 64))
(declare-fun temp81_187 () (_ BitVec 64))
(declare-fun temp81_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp81_189 () (_ BitVec 64))
(declare-fun temp81_191 () (_ BitVec 64))
(declare-fun temp81_192 () (_ BitVec 64))
(declare-fun temp81_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp81_193 () (_ BitVec 64))
(declare-fun temp81_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp81_195 () (_ BitVec 64))
(declare-fun temp81_196 () (_ BitVec 64))
(declare-fun temp81_197 () (_ BitVec 64))
(declare-fun temp81_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_199 () (_ BitVec 64))
(declare-fun temp81_200 () (_ BitVec 64))
(declare-fun temp81_201 () (_ BitVec 64))
(declare-fun temp81_202 () (_ BitVec 64))
(declare-fun temp81_203 () (_ BitVec 64))
(declare-fun temp81_204 () (_ BitVec 64))
(declare-fun temp81_205 () (_ BitVec 64))
(declare-fun temp81_206 () (_ BitVec 64))
(declare-fun temp81_207 () (_ BitVec 64))
(declare-fun temp81_208 () (_ BitVec 64))
(declare-fun temp81_209 () (_ BitVec 64))
(declare-fun temp81_210 () (_ BitVec 64))
(declare-fun temp81_211 () (_ BitVec 64))
(declare-fun temp81_212 () (_ BitVec 64))
(declare-fun temp81_213 () (_ BitVec 64))
(declare-fun temp81_214 () (_ BitVec 64))
(declare-fun temp81_215 () (_ BitVec 64))
(declare-fun temp81_216 () (_ BitVec 64))
(declare-fun temp81_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp81_218 () (_ BitVec 64))
(declare-fun temp81_220 () (_ BitVec 64))
(declare-fun temp81_221 () (_ BitVec 64))
(declare-fun temp81_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp81_222 () (_ BitVec 64))
(declare-fun temp81_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp81_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp81_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp81_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp81_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp81_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp81_229 () (_ BitVec 64))
(declare-fun temp81_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp81_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp81_232 () (_ BitVec 64))
(declare-fun temp81_233 () (_ BitVec 64))
(declare-fun temp81_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp81_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp81_236 () (_ BitVec 64))
(declare-fun temp81_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp81_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp81_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp81_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp81_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp81_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp81_243 () (_ BitVec 64))
(assert (= temp81_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp81_1)))
(assert (= temp81_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp81_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_3 #x0000000000000000))
(assert (= var79869 temp81_3))
(assert (= temp81_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp81_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_5 #x0000000000000000))
(assert (= var79914 temp81_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp81_6 #x0000000000000000))
(assert (= temp81_7 temp81_6))
(assert (= temp81_8 (select ARGNAME_padding_NAMEEND_VAL temp81_7)))
(assert (= temp81_9 #x0000000000000001))
(assert (= temp81_10 temp81_9))
(assert (= temp81_11 (select ARGNAME_padding_NAMEEND_VAL temp81_10)))
(assert (= temp81_12 #x0000000000000002))
(assert (= temp81_13 temp81_12))
(assert (= temp81_14 (select ARGNAME_padding_NAMEEND_VAL temp81_13)))
(assert (= temp81_15 #x0000000000000003))
(assert (= temp81_16 temp81_15))
(assert (= temp81_17 (select ARGNAME_padding_NAMEEND_VAL temp81_16)))
(assert (= temp81_18 #x0000000000000004))
(assert (= temp81_19 temp81_18))
(assert (= temp81_20 (select ARGNAME_padding_NAMEEND_VAL temp81_19)))
(assert (= temp81_21 #x0000000000000005))
(assert (= temp81_22 temp81_21))
(assert (= temp81_23 (select ARGNAME_padding_NAMEEND_VAL temp81_22)))
(assert (= temp81_24 #x0000000000000000))
(assert (= temp81_25 #x0000000000000000))
(assert (= temp81_26 temp81_25))
(assert (= temp81_27 (select ARGNAME_padding_NAMEEND_VAL temp81_26)))
(assert (= temp81_28 #x0000000000000000))
(assert (= temp81_29 #x0000000000000001))
(assert (= temp81_30 temp81_29))
(assert (= temp81_31 (select ARGNAME_padding_NAMEEND_VAL temp81_30)))
(assert (= temp81_32 #x0000000000000000))
(assert (= temp81_33 #x0000000000000002))
(assert (= temp81_34 temp81_33))
(assert (= temp81_35 (select ARGNAME_padding_NAMEEND_VAL temp81_34)))
(assert (= temp81_36 #x0000000000000000))
(assert (= temp81_37 #x0000000000000003))
(assert (= temp81_38 temp81_37))
(assert (= temp81_39 (select ARGNAME_padding_NAMEEND_VAL temp81_38)))
(assert (= temp81_40 #x0000000000000000))
(assert (= temp81_41 #x0000000000000004))
(assert (= temp81_42 temp81_41))
(assert (= temp81_43 (select ARGNAME_padding_NAMEEND_VAL temp81_42)))
(assert (= temp81_44 #x0000000000000000))
(assert (= temp81_45 #x0000000000000005))
(assert (= temp81_46 temp81_45))
(assert (= temp81_47 (select ARGNAME_padding_NAMEEND_VAL temp81_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp81_27 temp81_24)
             (bvslt temp81_31 temp81_28)
             (bvslt temp81_35 temp81_32)
             (bvslt temp81_39 temp81_36)
             (bvslt temp81_43 temp81_40)
             (bvslt temp81_47 temp81_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_48 #x0000000000000000))
(assert (= var1322786 temp81_48))
(assert (= temp81_49 #x0000000000000000))
(assert (= temp81_50 temp81_49))
(assert (= temp81_51 (select ARGNAME_output_padding_NAMEEND_VAL temp81_50)))
(assert (= temp81_52 #x0000000000000001))
(assert (= temp81_53 temp81_52))
(assert (= temp81_54 (select ARGNAME_output_padding_NAMEEND_VAL temp81_53)))
(assert (= temp81_55 #x0000000000000002))
(assert (= temp81_56 temp81_55))
(assert (= temp81_57 (select ARGNAME_output_padding_NAMEEND_VAL temp81_56)))
(assert (= temp81_58 #x0000000000000003))
(assert (= temp81_59 temp81_58))
(assert (= temp81_60 (select ARGNAME_output_padding_NAMEEND_VAL temp81_59)))
(assert (= temp81_61 #x0000000000000004))
(assert (= temp81_62 temp81_61))
(assert (= temp81_63 (select ARGNAME_output_padding_NAMEEND_VAL temp81_62)))
(assert (= temp81_64 #x0000000000000005))
(assert (= temp81_65 temp81_64))
(assert (= temp81_66 (select ARGNAME_output_padding_NAMEEND_VAL temp81_65)))
(assert (= temp81_67 #x0000000000000000))
(assert (= temp81_68 #x0000000000000000))
(assert (= temp81_69 temp81_68))
(assert (= temp81_70 (select ARGNAME_output_padding_NAMEEND_VAL temp81_69)))
(assert (= temp81_71 #x0000000000000000))
(assert (= temp81_72 #x0000000000000001))
(assert (= temp81_73 temp81_72))
(assert (= temp81_74 (select ARGNAME_output_padding_NAMEEND_VAL temp81_73)))
(assert (= temp81_75 #x0000000000000000))
(assert (= temp81_76 #x0000000000000002))
(assert (= temp81_77 temp81_76))
(assert (= temp81_78 (select ARGNAME_output_padding_NAMEEND_VAL temp81_77)))
(assert (= temp81_79 #x0000000000000000))
(assert (= temp81_80 #x0000000000000003))
(assert (= temp81_81 temp81_80))
(assert (= temp81_82 (select ARGNAME_output_padding_NAMEEND_VAL temp81_81)))
(assert (= temp81_83 #x0000000000000000))
(assert (= temp81_84 #x0000000000000004))
(assert (= temp81_85 temp81_84))
(assert (= temp81_86 (select ARGNAME_output_padding_NAMEEND_VAL temp81_85)))
(assert (= temp81_87 #x0000000000000000))
(assert (= temp81_88 #x0000000000000005))
(assert (= temp81_89 temp81_88))
(assert (= temp81_90 (select ARGNAME_output_padding_NAMEEND_VAL temp81_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp81_70 temp81_67)
             (bvslt temp81_74 temp81_71)
             (bvslt temp81_78 temp81_75)
             (bvslt temp81_82 temp81_79)
             (bvslt temp81_86 temp81_83)
             (bvslt temp81_90 temp81_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_91 #x0000000000000000))
(assert (= var1322797 temp81_91))
(assert (= temp81_92 #x0000000000000000))
(assert (= temp81_93 temp81_92))
(assert (= temp81_94 (select ARGNAME_stride_NAMEEND_VAL temp81_93)))
(assert (= temp81_95 #x0000000000000001))
(assert (= temp81_96 temp81_95))
(assert (= temp81_97 (select ARGNAME_stride_NAMEEND_VAL temp81_96)))
(assert (= temp81_98 #x0000000000000002))
(assert (= temp81_99 temp81_98))
(assert (= temp81_100 (select ARGNAME_stride_NAMEEND_VAL temp81_99)))
(assert (= temp81_101 #x0000000000000003))
(assert (= temp81_102 temp81_101))
(assert (= temp81_103 (select ARGNAME_stride_NAMEEND_VAL temp81_102)))
(assert (= temp81_104 #x0000000000000004))
(assert (= temp81_105 temp81_104))
(assert (= temp81_106 (select ARGNAME_stride_NAMEEND_VAL temp81_105)))
(assert (= temp81_107 #x0000000000000005))
(assert (= temp81_108 temp81_107))
(assert (= temp81_109 (select ARGNAME_stride_NAMEEND_VAL temp81_108)))
(assert (= temp81_110 #x0000000000000000))
(assert (= temp81_111 #x0000000000000000))
(assert (= temp81_112 temp81_111))
(assert (= temp81_113 (select ARGNAME_stride_NAMEEND_VAL temp81_112)))
(assert (= temp81_114 #x0000000000000000))
(assert (= temp81_115 #x0000000000000001))
(assert (= temp81_116 temp81_115))
(assert (= temp81_117 (select ARGNAME_stride_NAMEEND_VAL temp81_116)))
(assert (= temp81_118 #x0000000000000000))
(assert (= temp81_119 #x0000000000000002))
(assert (= temp81_120 temp81_119))
(assert (= temp81_121 (select ARGNAME_stride_NAMEEND_VAL temp81_120)))
(assert (= temp81_122 #x0000000000000000))
(assert (= temp81_123 #x0000000000000003))
(assert (= temp81_124 temp81_123))
(assert (= temp81_125 (select ARGNAME_stride_NAMEEND_VAL temp81_124)))
(assert (= temp81_126 #x0000000000000000))
(assert (= temp81_127 #x0000000000000004))
(assert (= temp81_128 temp81_127))
(assert (= temp81_129 (select ARGNAME_stride_NAMEEND_VAL temp81_128)))
(assert (= temp81_130 #x0000000000000000))
(assert (= temp81_131 #x0000000000000005))
(assert (= temp81_132 temp81_131))
(assert (= temp81_133 (select ARGNAME_stride_NAMEEND_VAL temp81_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp81_113 temp81_110)
             (bvsle temp81_117 temp81_114)
             (bvsle temp81_121 temp81_118)
             (bvsle temp81_125 temp81_122)
             (bvsle temp81_129 temp81_126)
             (bvsle temp81_133 temp81_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_134 #x0000000000000000))
(assert (= var1322807 temp81_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_135 #x0000000000000001))
(assert (= var1322819 temp81_135))
(assert (= temp81_136 #x0000000000000000))
(assert (= var1310898 temp81_136))
(assert (= temp81_137 #x0000000000000000))
(assert (= temp81_138 temp81_137))
(assert (= temp81_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_138)))
(assert (= temp81_140 #x0000000000000001))
(assert (= temp81_141 temp81_140))
(assert (= temp81_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_141)))
(assert (= temp81_143 #x0000000000000002))
(assert (= temp81_144 temp81_143))
(assert (= temp81_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_144)))
(assert (= temp81_146 #x0000000000000003))
(assert (= temp81_147 temp81_146))
(assert (= temp81_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_147)))
(assert (= temp81_149 #x0000000000000004))
(assert (= temp81_150 temp81_149))
(assert (= temp81_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_150)))
(assert (= temp81_152 #x0000000000000005))
(assert (= temp81_153 temp81_152))
(assert (= temp81_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_153)))
(assert (= temp81_156 var1310898))
(assert (= temp81_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_156)))
(assert (= temp81_155 temp81_157))
(assert (= var1322852
   (ite (bvslt temp81_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_158 #x0000000000000000))
(assert (= var1322852 temp81_158))
(assert (= temp81_159 #x0000000000000000))
(assert (= var1310898 temp81_159))
(assert (= temp81_161 var1310898))
(assert (= temp81_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_161)))
(assert (= temp81_160 temp81_162))
(assert (= var1322874 (bvsmod temp81_160 ARGNAME_groups_NAMEEND)))
(assert (= temp81_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp81_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp81_164 #x0000000000000001))
(assert (= var1322875 temp81_164))
(assert (= temp81_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp81_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_166 #x0000000000000001))
(assert (= var1322895 temp81_166))
(assert (= temp81_167 #x0000000000000001))
(assert (= var1311786 temp81_167))
(assert (= temp81_168 #x0000000000000000))
(assert (= temp81_169 temp81_168))
(assert (= temp81_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_169)))
(assert (= temp81_171 #x0000000000000001))
(assert (= temp81_172 temp81_171))
(assert (= temp81_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_172)))
(assert (= temp81_174 #x0000000000000002))
(assert (= temp81_175 temp81_174))
(assert (= temp81_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_175)))
(assert (= temp81_177 #x0000000000000003))
(assert (= temp81_178 temp81_177))
(assert (= temp81_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_178)))
(assert (= temp81_180 #x0000000000000004))
(assert (= temp81_181 temp81_180))
(assert (= temp81_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_181)))
(assert (= temp81_183 #x0000000000000005))
(assert (= temp81_184 temp81_183))
(assert (= temp81_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_184)))
(assert (= temp81_186 #x0000000000000000))
(assert (= temp81_187
   (ite (bvslt var1311786 temp81_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp81_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_187)))
(assert (= var1322903 temp81_188))
(assert (bvslt (ite (bvslt var1311786 temp81_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp81_189 #x0000000000000001))
(assert (= var1311786 temp81_189))
(assert (= temp81_191 var1311786))
(assert (= temp81_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_191)))
(assert (= temp81_190 temp81_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp81_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp81_193 #x0000000000000001))
(assert (= var1322908 temp81_193))
(assert (= temp81_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp81_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_195 #x0000000000000001))
(assert (= var1322975 temp81_195))
(assert (= temp81_196 #x0000000000000000))
(assert (= var1310898 temp81_196))
(assert (= temp81_197 #x0000000000000000))
(assert (= temp81_198 temp81_197))
(assert (= temp81_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp81_198)))
(assert (= temp81_200 #x0000000000000001))
(assert (= temp81_201 temp81_200))
(assert (= temp81_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp81_201)))
(assert (= temp81_203 #x0000000000000002))
(assert (= temp81_204 temp81_203))
(assert (= temp81_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp81_204)))
(assert (= temp81_206 #x0000000000000003))
(assert (= temp81_207 temp81_206))
(assert (= temp81_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp81_207)))
(assert (= temp81_209 #x0000000000000004))
(assert (= temp81_210 temp81_209))
(assert (= temp81_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp81_210)))
(assert (= temp81_212 #x0000000000000005))
(assert (= temp81_213 temp81_212))
(assert (= temp81_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp81_213)))
(assert (= temp81_215 #x0000000000000000))
(assert (= temp81_216
   (ite (bvslt var1310898 temp81_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp81_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp81_216)))
(assert (= var1322977 temp81_217))
(assert (bvslt (ite (bvslt var1310898 temp81_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp81_218 #x0000000000000000))
(assert (= var1310898 temp81_218))
(assert (= temp81_220 var1310898))
(assert (= temp81_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_220)))
(assert (= temp81_219 temp81_221))
(assert (= var1322980
   (ite (= var1322977 temp81_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp81_222 #x0000000000000001))
(assert (= var1322980 temp81_222))
(assert (= temp81_223 #x0000000000000002))
(assert (= var1848169 temp81_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp81_225 #x0000000000000001))
(assert (= var1323065 temp81_225))
(assert (= temp81_226 #x0000000000000001))
(assert (= var3486735 temp81_226))
(assert (= temp81_227 #x0000000000000001))
(assert (= var3814415 temp81_227))
(assert (= temp81_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp81_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_229 #x0000000000000001))
(assert (= var79986 temp81_229))
(assert (= temp81_230 #x0000000000000001))
(assert (= var80116 temp81_230))
(assert (= var4796905 var80116))
(assert (= temp81_231 #x0000000000000000))
(assert (= var4784306 temp81_231))
(assert (= temp81_232 #x0000000000000000))
(assert (= temp81_233
   (ite (bvslt var4784306 temp81_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp81_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_233)))
(assert (= var4796924 temp81_234))
(assert (bvslt (ite (bvslt var4784306 temp81_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp81_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp81_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp81_236 #x0000000000000001))
(assert (= var4796925 temp81_236))
(assert (= temp81_237 #x0000000000000000))
(assert (= var4996927 temp81_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp81_238 #x0000000000000002))
(assert (= var5125763 temp81_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_239 #x0000000000000000))
(assert (= var5191324 temp81_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp81_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp81_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp81_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp81_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_243 #x0000000000000001))
(assert (= var79986 temp81_243))
(model-add temp81_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp81_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp81_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






