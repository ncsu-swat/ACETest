(declare-fun temp8_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp8_2 () (_ BitVec 64))
(declare-fun temp8_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp8_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp8_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp8_6 () (_ BitVec 64))
(declare-fun temp8_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_8 () (_ BitVec 64))
(declare-fun temp8_9 () (_ BitVec 64))
(declare-fun temp8_10 () (_ BitVec 64))
(declare-fun temp8_11 () (_ BitVec 64))
(declare-fun temp8_12 () (_ BitVec 64))
(declare-fun temp8_13 () (_ BitVec 64))
(declare-fun temp8_14 () (_ BitVec 64))
(declare-fun temp8_15 () (_ BitVec 64))
(declare-fun temp8_16 () (_ BitVec 64))
(declare-fun temp8_17 () (_ BitVec 64))
(declare-fun temp8_18 () (_ BitVec 64))
(declare-fun temp8_19 () (_ BitVec 64))
(declare-fun temp8_20 () (_ BitVec 64))
(declare-fun temp8_21 () (_ BitVec 64))
(declare-fun temp8_22 () (_ BitVec 64))
(declare-fun temp8_23 () (_ BitVec 64))
(declare-fun temp8_24 () (_ BitVec 64))
(declare-fun temp8_25 () (_ BitVec 64))
(declare-fun temp8_26 () (_ BitVec 64))
(declare-fun temp8_27 () (_ BitVec 64))
(declare-fun temp8_28 () (_ BitVec 64))
(declare-fun temp8_29 () (_ BitVec 64))
(declare-fun temp8_30 () (_ BitVec 64))
(declare-fun temp8_31 () (_ BitVec 64))
(declare-fun temp8_32 () (_ BitVec 64))
(declare-fun temp8_33 () (_ BitVec 64))
(declare-fun temp8_34 () (_ BitVec 64))
(declare-fun temp8_35 () (_ BitVec 64))
(declare-fun temp8_36 () (_ BitVec 64))
(declare-fun temp8_37 () (_ BitVec 64))
(declare-fun temp8_38 () (_ BitVec 64))
(declare-fun temp8_39 () (_ BitVec 64))
(declare-fun temp8_40 () (_ BitVec 64))
(declare-fun temp8_41 () (_ BitVec 64))
(declare-fun temp8_42 () (_ BitVec 64))
(declare-fun temp8_43 () (_ BitVec 64))
(declare-fun temp8_44 () (_ BitVec 64))
(declare-fun temp8_45 () (_ BitVec 64))
(declare-fun temp8_46 () (_ BitVec 64))
(declare-fun temp8_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp8_48 () (_ BitVec 64))
(declare-fun temp8_49 () (_ BitVec 64))
(declare-fun temp8_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_51 () (_ BitVec 64))
(declare-fun temp8_52 () (_ BitVec 64))
(declare-fun temp8_53 () (_ BitVec 64))
(declare-fun temp8_54 () (_ BitVec 64))
(declare-fun temp8_55 () (_ BitVec 64))
(declare-fun temp8_56 () (_ BitVec 64))
(declare-fun temp8_57 () (_ BitVec 64))
(declare-fun temp8_58 () (_ BitVec 64))
(declare-fun temp8_59 () (_ BitVec 64))
(declare-fun temp8_60 () (_ BitVec 64))
(declare-fun temp8_61 () (_ BitVec 64))
(declare-fun temp8_62 () (_ BitVec 64))
(declare-fun temp8_63 () (_ BitVec 64))
(declare-fun temp8_64 () (_ BitVec 64))
(declare-fun temp8_65 () (_ BitVec 64))
(declare-fun temp8_66 () (_ BitVec 64))
(declare-fun temp8_67 () (_ BitVec 64))
(declare-fun temp8_68 () (_ BitVec 64))
(declare-fun temp8_69 () (_ BitVec 64))
(declare-fun temp8_70 () (_ BitVec 64))
(declare-fun temp8_71 () (_ BitVec 64))
(declare-fun temp8_72 () (_ BitVec 64))
(declare-fun temp8_73 () (_ BitVec 64))
(declare-fun temp8_74 () (_ BitVec 64))
(declare-fun temp8_75 () (_ BitVec 64))
(declare-fun temp8_76 () (_ BitVec 64))
(declare-fun temp8_77 () (_ BitVec 64))
(declare-fun temp8_78 () (_ BitVec 64))
(declare-fun temp8_79 () (_ BitVec 64))
(declare-fun temp8_80 () (_ BitVec 64))
(declare-fun temp8_81 () (_ BitVec 64))
(declare-fun temp8_82 () (_ BitVec 64))
(declare-fun temp8_83 () (_ BitVec 64))
(declare-fun temp8_84 () (_ BitVec 64))
(declare-fun temp8_85 () (_ BitVec 64))
(declare-fun temp8_86 () (_ BitVec 64))
(declare-fun temp8_87 () (_ BitVec 64))
(declare-fun temp8_88 () (_ BitVec 64))
(declare-fun temp8_89 () (_ BitVec 64))
(declare-fun temp8_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp8_91 () (_ BitVec 64))
(declare-fun temp8_92 () (_ BitVec 64))
(declare-fun temp8_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_94 () (_ BitVec 64))
(declare-fun temp8_95 () (_ BitVec 64))
(declare-fun temp8_96 () (_ BitVec 64))
(declare-fun temp8_97 () (_ BitVec 64))
(declare-fun temp8_98 () (_ BitVec 64))
(declare-fun temp8_99 () (_ BitVec 64))
(declare-fun temp8_100 () (_ BitVec 64))
(declare-fun temp8_101 () (_ BitVec 64))
(declare-fun temp8_102 () (_ BitVec 64))
(declare-fun temp8_103 () (_ BitVec 64))
(declare-fun temp8_104 () (_ BitVec 64))
(declare-fun temp8_105 () (_ BitVec 64))
(declare-fun temp8_106 () (_ BitVec 64))
(declare-fun temp8_107 () (_ BitVec 64))
(declare-fun temp8_108 () (_ BitVec 64))
(declare-fun temp8_109 () (_ BitVec 64))
(declare-fun temp8_110 () (_ BitVec 64))
(declare-fun temp8_111 () (_ BitVec 64))
(declare-fun temp8_112 () (_ BitVec 64))
(declare-fun temp8_113 () (_ BitVec 64))
(declare-fun temp8_114 () (_ BitVec 64))
(declare-fun temp8_115 () (_ BitVec 64))
(declare-fun temp8_116 () (_ BitVec 64))
(declare-fun temp8_117 () (_ BitVec 64))
(declare-fun temp8_118 () (_ BitVec 64))
(declare-fun temp8_119 () (_ BitVec 64))
(declare-fun temp8_120 () (_ BitVec 64))
(declare-fun temp8_121 () (_ BitVec 64))
(declare-fun temp8_122 () (_ BitVec 64))
(declare-fun temp8_123 () (_ BitVec 64))
(declare-fun temp8_124 () (_ BitVec 64))
(declare-fun temp8_125 () (_ BitVec 64))
(declare-fun temp8_126 () (_ BitVec 64))
(declare-fun temp8_127 () (_ BitVec 64))
(declare-fun temp8_128 () (_ BitVec 64))
(declare-fun temp8_129 () (_ BitVec 64))
(declare-fun temp8_130 () (_ BitVec 64))
(declare-fun temp8_131 () (_ BitVec 64))
(declare-fun temp8_132 () (_ BitVec 64))
(declare-fun temp8_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp8_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp8_135 () (_ BitVec 64))
(declare-fun temp8_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp8_137 () (_ BitVec 64))
(declare-fun temp8_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_139 () (_ BitVec 64))
(declare-fun temp8_140 () (_ BitVec 64))
(declare-fun temp8_141 () (_ BitVec 64))
(declare-fun temp8_142 () (_ BitVec 64))
(declare-fun temp8_143 () (_ BitVec 64))
(declare-fun temp8_144 () (_ BitVec 64))
(declare-fun temp8_145 () (_ BitVec 64))
(declare-fun temp8_146 () (_ BitVec 64))
(declare-fun temp8_147 () (_ BitVec 64))
(declare-fun temp8_148 () (_ BitVec 64))
(declare-fun temp8_149 () (_ BitVec 64))
(declare-fun temp8_150 () (_ BitVec 64))
(declare-fun temp8_151 () (_ BitVec 64))
(declare-fun temp8_152 () (_ BitVec 64))
(declare-fun temp8_153 () (_ BitVec 64))
(declare-fun temp8_154 () (_ BitVec 64))
(declare-fun temp8_156 () (_ BitVec 64))
(declare-fun temp8_157 () (_ BitVec 64))
(declare-fun temp8_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp8_158 () (_ BitVec 64))
(declare-fun temp8_159 () (_ BitVec 64))
(declare-fun temp8_161 () (_ BitVec 64))
(declare-fun temp8_162 () (_ BitVec 64))
(declare-fun temp8_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp8_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp8_164 () (_ BitVec 64))
(declare-fun temp8_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp8_166 () (_ BitVec 64))
(declare-fun temp8_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp8_168 () (_ BitVec 64))
(declare-fun temp8_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_170 () (_ BitVec 64))
(declare-fun temp8_171 () (_ BitVec 64))
(declare-fun temp8_172 () (_ BitVec 64))
(declare-fun temp8_173 () (_ BitVec 64))
(declare-fun temp8_174 () (_ BitVec 64))
(declare-fun temp8_175 () (_ BitVec 64))
(declare-fun temp8_176 () (_ BitVec 64))
(declare-fun temp8_177 () (_ BitVec 64))
(declare-fun temp8_178 () (_ BitVec 64))
(declare-fun temp8_179 () (_ BitVec 64))
(declare-fun temp8_180 () (_ BitVec 64))
(declare-fun temp8_181 () (_ BitVec 64))
(declare-fun temp8_182 () (_ BitVec 64))
(declare-fun temp8_183 () (_ BitVec 64))
(declare-fun temp8_184 () (_ BitVec 64))
(declare-fun temp8_185 () (_ BitVec 64))
(declare-fun temp8_186 () (_ BitVec 64))
(declare-fun temp8_187 () (_ BitVec 64))
(declare-fun temp8_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp8_189 () (_ BitVec 64))
(declare-fun temp8_191 () (_ BitVec 64))
(declare-fun temp8_192 () (_ BitVec 64))
(declare-fun temp8_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp8_193 () (_ BitVec 64))
(declare-fun temp8_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp8_195 () (_ BitVec 64))
(declare-fun temp8_196 () (_ BitVec 64))
(declare-fun temp8_197 () (_ BitVec 64))
(declare-fun temp8_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_199 () (_ BitVec 64))
(declare-fun temp8_200 () (_ BitVec 64))
(declare-fun temp8_201 () (_ BitVec 64))
(declare-fun temp8_202 () (_ BitVec 64))
(declare-fun temp8_203 () (_ BitVec 64))
(declare-fun temp8_204 () (_ BitVec 64))
(declare-fun temp8_205 () (_ BitVec 64))
(declare-fun temp8_206 () (_ BitVec 64))
(declare-fun temp8_207 () (_ BitVec 64))
(declare-fun temp8_208 () (_ BitVec 64))
(declare-fun temp8_209 () (_ BitVec 64))
(declare-fun temp8_210 () (_ BitVec 64))
(declare-fun temp8_211 () (_ BitVec 64))
(declare-fun temp8_212 () (_ BitVec 64))
(declare-fun temp8_213 () (_ BitVec 64))
(declare-fun temp8_214 () (_ BitVec 64))
(declare-fun temp8_215 () (_ BitVec 64))
(declare-fun temp8_216 () (_ BitVec 64))
(declare-fun temp8_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp8_218 () (_ BitVec 64))
(declare-fun temp8_220 () (_ BitVec 64))
(declare-fun temp8_221 () (_ BitVec 64))
(declare-fun temp8_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp8_222 () (_ BitVec 64))
(declare-fun temp8_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp8_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp8_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp8_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp8_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp8_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp8_229 () (_ BitVec 64))
(declare-fun temp8_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp8_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp8_232 () (_ BitVec 64))
(declare-fun temp8_233 () (_ BitVec 64))
(declare-fun temp8_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp8_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp8_236 () (_ BitVec 64))
(declare-fun temp8_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp8_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp8_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp8_240 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp8_241 () (_ BitVec 64))
(assert (= temp8_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp8_1)))
(assert (= temp8_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp8_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_3 #x0000000000000000))
(assert (= var79869 temp8_3))
(assert (= temp8_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp8_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_5 #x0000000000000000))
(assert (= var79914 temp8_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp8_6 #x0000000000000000))
(assert (= temp8_7 temp8_6))
(assert (= temp8_8 (select ARGNAME_padding_NAMEEND_VAL temp8_7)))
(assert (= temp8_9 #x0000000000000001))
(assert (= temp8_10 temp8_9))
(assert (= temp8_11 (select ARGNAME_padding_NAMEEND_VAL temp8_10)))
(assert (= temp8_12 #x0000000000000002))
(assert (= temp8_13 temp8_12))
(assert (= temp8_14 (select ARGNAME_padding_NAMEEND_VAL temp8_13)))
(assert (= temp8_15 #x0000000000000003))
(assert (= temp8_16 temp8_15))
(assert (= temp8_17 (select ARGNAME_padding_NAMEEND_VAL temp8_16)))
(assert (= temp8_18 #x0000000000000004))
(assert (= temp8_19 temp8_18))
(assert (= temp8_20 (select ARGNAME_padding_NAMEEND_VAL temp8_19)))
(assert (= temp8_21 #x0000000000000005))
(assert (= temp8_22 temp8_21))
(assert (= temp8_23 (select ARGNAME_padding_NAMEEND_VAL temp8_22)))
(assert (= temp8_24 #x0000000000000000))
(assert (= temp8_25 #x0000000000000000))
(assert (= temp8_26 temp8_25))
(assert (= temp8_27 (select ARGNAME_padding_NAMEEND_VAL temp8_26)))
(assert (= temp8_28 #x0000000000000000))
(assert (= temp8_29 #x0000000000000001))
(assert (= temp8_30 temp8_29))
(assert (= temp8_31 (select ARGNAME_padding_NAMEEND_VAL temp8_30)))
(assert (= temp8_32 #x0000000000000000))
(assert (= temp8_33 #x0000000000000002))
(assert (= temp8_34 temp8_33))
(assert (= temp8_35 (select ARGNAME_padding_NAMEEND_VAL temp8_34)))
(assert (= temp8_36 #x0000000000000000))
(assert (= temp8_37 #x0000000000000003))
(assert (= temp8_38 temp8_37))
(assert (= temp8_39 (select ARGNAME_padding_NAMEEND_VAL temp8_38)))
(assert (= temp8_40 #x0000000000000000))
(assert (= temp8_41 #x0000000000000004))
(assert (= temp8_42 temp8_41))
(assert (= temp8_43 (select ARGNAME_padding_NAMEEND_VAL temp8_42)))
(assert (= temp8_44 #x0000000000000000))
(assert (= temp8_45 #x0000000000000005))
(assert (= temp8_46 temp8_45))
(assert (= temp8_47 (select ARGNAME_padding_NAMEEND_VAL temp8_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp8_27 temp8_24)
             (bvslt temp8_31 temp8_28)
             (bvslt temp8_35 temp8_32)
             (bvslt temp8_39 temp8_36)
             (bvslt temp8_43 temp8_40)
             (bvslt temp8_47 temp8_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_48 #x0000000000000000))
(assert (= var1322786 temp8_48))
(assert (= temp8_49 #x0000000000000000))
(assert (= temp8_50 temp8_49))
(assert (= temp8_51 (select ARGNAME_output_padding_NAMEEND_VAL temp8_50)))
(assert (= temp8_52 #x0000000000000001))
(assert (= temp8_53 temp8_52))
(assert (= temp8_54 (select ARGNAME_output_padding_NAMEEND_VAL temp8_53)))
(assert (= temp8_55 #x0000000000000002))
(assert (= temp8_56 temp8_55))
(assert (= temp8_57 (select ARGNAME_output_padding_NAMEEND_VAL temp8_56)))
(assert (= temp8_58 #x0000000000000003))
(assert (= temp8_59 temp8_58))
(assert (= temp8_60 (select ARGNAME_output_padding_NAMEEND_VAL temp8_59)))
(assert (= temp8_61 #x0000000000000004))
(assert (= temp8_62 temp8_61))
(assert (= temp8_63 (select ARGNAME_output_padding_NAMEEND_VAL temp8_62)))
(assert (= temp8_64 #x0000000000000005))
(assert (= temp8_65 temp8_64))
(assert (= temp8_66 (select ARGNAME_output_padding_NAMEEND_VAL temp8_65)))
(assert (= temp8_67 #x0000000000000000))
(assert (= temp8_68 #x0000000000000000))
(assert (= temp8_69 temp8_68))
(assert (= temp8_70 (select ARGNAME_output_padding_NAMEEND_VAL temp8_69)))
(assert (= temp8_71 #x0000000000000000))
(assert (= temp8_72 #x0000000000000001))
(assert (= temp8_73 temp8_72))
(assert (= temp8_74 (select ARGNAME_output_padding_NAMEEND_VAL temp8_73)))
(assert (= temp8_75 #x0000000000000000))
(assert (= temp8_76 #x0000000000000002))
(assert (= temp8_77 temp8_76))
(assert (= temp8_78 (select ARGNAME_output_padding_NAMEEND_VAL temp8_77)))
(assert (= temp8_79 #x0000000000000000))
(assert (= temp8_80 #x0000000000000003))
(assert (= temp8_81 temp8_80))
(assert (= temp8_82 (select ARGNAME_output_padding_NAMEEND_VAL temp8_81)))
(assert (= temp8_83 #x0000000000000000))
(assert (= temp8_84 #x0000000000000004))
(assert (= temp8_85 temp8_84))
(assert (= temp8_86 (select ARGNAME_output_padding_NAMEEND_VAL temp8_85)))
(assert (= temp8_87 #x0000000000000000))
(assert (= temp8_88 #x0000000000000005))
(assert (= temp8_89 temp8_88))
(assert (= temp8_90 (select ARGNAME_output_padding_NAMEEND_VAL temp8_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp8_70 temp8_67)
             (bvslt temp8_74 temp8_71)
             (bvslt temp8_78 temp8_75)
             (bvslt temp8_82 temp8_79)
             (bvslt temp8_86 temp8_83)
             (bvslt temp8_90 temp8_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_91 #x0000000000000000))
(assert (= var1322797 temp8_91))
(assert (= temp8_92 #x0000000000000000))
(assert (= temp8_93 temp8_92))
(assert (= temp8_94 (select ARGNAME_stride_NAMEEND_VAL temp8_93)))
(assert (= temp8_95 #x0000000000000001))
(assert (= temp8_96 temp8_95))
(assert (= temp8_97 (select ARGNAME_stride_NAMEEND_VAL temp8_96)))
(assert (= temp8_98 #x0000000000000002))
(assert (= temp8_99 temp8_98))
(assert (= temp8_100 (select ARGNAME_stride_NAMEEND_VAL temp8_99)))
(assert (= temp8_101 #x0000000000000003))
(assert (= temp8_102 temp8_101))
(assert (= temp8_103 (select ARGNAME_stride_NAMEEND_VAL temp8_102)))
(assert (= temp8_104 #x0000000000000004))
(assert (= temp8_105 temp8_104))
(assert (= temp8_106 (select ARGNAME_stride_NAMEEND_VAL temp8_105)))
(assert (= temp8_107 #x0000000000000005))
(assert (= temp8_108 temp8_107))
(assert (= temp8_109 (select ARGNAME_stride_NAMEEND_VAL temp8_108)))
(assert (= temp8_110 #x0000000000000000))
(assert (= temp8_111 #x0000000000000000))
(assert (= temp8_112 temp8_111))
(assert (= temp8_113 (select ARGNAME_stride_NAMEEND_VAL temp8_112)))
(assert (= temp8_114 #x0000000000000000))
(assert (= temp8_115 #x0000000000000001))
(assert (= temp8_116 temp8_115))
(assert (= temp8_117 (select ARGNAME_stride_NAMEEND_VAL temp8_116)))
(assert (= temp8_118 #x0000000000000000))
(assert (= temp8_119 #x0000000000000002))
(assert (= temp8_120 temp8_119))
(assert (= temp8_121 (select ARGNAME_stride_NAMEEND_VAL temp8_120)))
(assert (= temp8_122 #x0000000000000000))
(assert (= temp8_123 #x0000000000000003))
(assert (= temp8_124 temp8_123))
(assert (= temp8_125 (select ARGNAME_stride_NAMEEND_VAL temp8_124)))
(assert (= temp8_126 #x0000000000000000))
(assert (= temp8_127 #x0000000000000004))
(assert (= temp8_128 temp8_127))
(assert (= temp8_129 (select ARGNAME_stride_NAMEEND_VAL temp8_128)))
(assert (= temp8_130 #x0000000000000000))
(assert (= temp8_131 #x0000000000000005))
(assert (= temp8_132 temp8_131))
(assert (= temp8_133 (select ARGNAME_stride_NAMEEND_VAL temp8_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp8_113 temp8_110)
             (bvsle temp8_117 temp8_114)
             (bvsle temp8_121 temp8_118)
             (bvsle temp8_125 temp8_122)
             (bvsle temp8_129 temp8_126)
             (bvsle temp8_133 temp8_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_134 #x0000000000000000))
(assert (= var1322807 temp8_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_135 #x0000000000000001))
(assert (= var1322819 temp8_135))
(assert (= temp8_136 #x0000000000000000))
(assert (= var1310898 temp8_136))
(assert (= temp8_137 #x0000000000000000))
(assert (= temp8_138 temp8_137))
(assert (= temp8_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_138)))
(assert (= temp8_140 #x0000000000000001))
(assert (= temp8_141 temp8_140))
(assert (= temp8_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_141)))
(assert (= temp8_143 #x0000000000000002))
(assert (= temp8_144 temp8_143))
(assert (= temp8_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_144)))
(assert (= temp8_146 #x0000000000000003))
(assert (= temp8_147 temp8_146))
(assert (= temp8_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_147)))
(assert (= temp8_149 #x0000000000000004))
(assert (= temp8_150 temp8_149))
(assert (= temp8_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_150)))
(assert (= temp8_152 #x0000000000000005))
(assert (= temp8_153 temp8_152))
(assert (= temp8_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_153)))
(assert (= temp8_156 var1310898))
(assert (= temp8_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_156)))
(assert (= temp8_155 temp8_157))
(assert (= var1322852
   (ite (bvslt temp8_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_158 #x0000000000000000))
(assert (= var1322852 temp8_158))
(assert (= temp8_159 #x0000000000000000))
(assert (= var1310898 temp8_159))
(assert (= temp8_161 var1310898))
(assert (= temp8_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_161)))
(assert (= temp8_160 temp8_162))
(assert (= var1322874 (bvsmod temp8_160 ARGNAME_groups_NAMEEND)))
(assert (= temp8_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp8_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_164 #x0000000000000001))
(assert (= var1322875 temp8_164))
(assert (= temp8_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp8_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_166 #x0000000000000001))
(assert (= var1322895 temp8_166))
(assert (= temp8_167 #x0000000000000001))
(assert (= var1311786 temp8_167))
(assert (= temp8_168 #x0000000000000000))
(assert (= temp8_169 temp8_168))
(assert (= temp8_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_169)))
(assert (= temp8_171 #x0000000000000001))
(assert (= temp8_172 temp8_171))
(assert (= temp8_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_172)))
(assert (= temp8_174 #x0000000000000002))
(assert (= temp8_175 temp8_174))
(assert (= temp8_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_175)))
(assert (= temp8_177 #x0000000000000003))
(assert (= temp8_178 temp8_177))
(assert (= temp8_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_178)))
(assert (= temp8_180 #x0000000000000004))
(assert (= temp8_181 temp8_180))
(assert (= temp8_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_181)))
(assert (= temp8_183 #x0000000000000005))
(assert (= temp8_184 temp8_183))
(assert (= temp8_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_184)))
(assert (= temp8_186 #x0000000000000000))
(assert (= temp8_187
   (ite (bvslt var1311786 temp8_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp8_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_187)))
(assert (= var1322903 temp8_188))
(assert (bvslt (ite (bvslt var1311786 temp8_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp8_189 #x0000000000000001))
(assert (= var1311786 temp8_189))
(assert (= temp8_191 var1311786))
(assert (= temp8_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_191)))
(assert (= temp8_190 temp8_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp8_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_193 #x0000000000000001))
(assert (= var1322908 temp8_193))
(assert (= temp8_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp8_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_195 #x0000000000000001))
(assert (= var1322975 temp8_195))
(assert (= temp8_196 #x0000000000000000))
(assert (= var1310898 temp8_196))
(assert (= temp8_197 #x0000000000000000))
(assert (= temp8_198 temp8_197))
(assert (= temp8_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp8_198)))
(assert (= temp8_200 #x0000000000000001))
(assert (= temp8_201 temp8_200))
(assert (= temp8_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp8_201)))
(assert (= temp8_203 #x0000000000000002))
(assert (= temp8_204 temp8_203))
(assert (= temp8_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp8_204)))
(assert (= temp8_206 #x0000000000000003))
(assert (= temp8_207 temp8_206))
(assert (= temp8_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp8_207)))
(assert (= temp8_209 #x0000000000000004))
(assert (= temp8_210 temp8_209))
(assert (= temp8_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp8_210)))
(assert (= temp8_212 #x0000000000000005))
(assert (= temp8_213 temp8_212))
(assert (= temp8_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp8_213)))
(assert (= temp8_215 #x0000000000000000))
(assert (= temp8_216
   (ite (bvslt var1310898 temp8_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp8_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp8_216)))
(assert (= var1322977 temp8_217))
(assert (bvslt (ite (bvslt var1310898 temp8_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp8_218 #x0000000000000000))
(assert (= var1310898 temp8_218))
(assert (= temp8_220 var1310898))
(assert (= temp8_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_220)))
(assert (= temp8_219 temp8_221))
(assert (= var1322980
   (ite (= var1322977 temp8_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_222 #x0000000000000001))
(assert (= var1322980 temp8_222))
(assert (= temp8_223 #x0000000000000002))
(assert (= var1848169 temp8_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp8_225 #x0000000000000001))
(assert (= var1323065 temp8_225))
(assert (= temp8_226 #x0000000000000001))
(assert (= var3486735 temp8_226))
(assert (= temp8_227 #x0000000000000001))
(assert (= var3814415 temp8_227))
(assert (= temp8_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp8_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_229 #x0000000000000001))
(assert (= var79986 temp8_229))
(assert (= temp8_230 #x0000000000000001))
(assert (= var80116 temp8_230))
(assert (= var4796905 var80116))
(assert (= temp8_231 #x0000000000000000))
(assert (= var4784306 temp8_231))
(assert (= temp8_232 #x0000000000000000))
(assert (= temp8_233
   (ite (bvslt var4784306 temp8_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp8_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_233)))
(assert (= var4796924 temp8_234))
(assert (bvslt (ite (bvslt var4784306 temp8_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp8_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp8_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_236 #x0000000000000001))
(assert (= var4796925 temp8_236))
(assert (= temp8_237 #x0000000000000000))
(assert (= var4996927 temp8_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp8_238 #x0000000000000002))
(assert (= var5125763 temp8_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_239 #x0000000000000000))
(assert (= var5191324 temp8_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp8_240 #x0000000000000000))
(assert (= var5386640 temp8_240))
(assert (= temp8_241 #x0000000000000001))
(assert (= var79986 temp8_241))
(model-add temp8_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp8_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp8_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






