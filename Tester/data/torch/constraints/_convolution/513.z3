(declare-fun temp681_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp681_2 () (_ BitVec 64))
(declare-fun temp681_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp681_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp681_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp681_6 () (_ BitVec 64))
(declare-fun temp681_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_8 () (_ BitVec 64))
(declare-fun temp681_9 () (_ BitVec 64))
(declare-fun temp681_10 () (_ BitVec 64))
(declare-fun temp681_11 () (_ BitVec 64))
(declare-fun temp681_12 () (_ BitVec 64))
(declare-fun temp681_13 () (_ BitVec 64))
(declare-fun temp681_14 () (_ BitVec 64))
(declare-fun temp681_15 () (_ BitVec 64))
(declare-fun temp681_16 () (_ BitVec 64))
(declare-fun temp681_17 () (_ BitVec 64))
(declare-fun temp681_18 () (_ BitVec 64))
(declare-fun temp681_19 () (_ BitVec 64))
(declare-fun temp681_20 () (_ BitVec 64))
(declare-fun temp681_21 () (_ BitVec 64))
(declare-fun temp681_22 () (_ BitVec 64))
(declare-fun temp681_23 () (_ BitVec 64))
(declare-fun temp681_24 () (_ BitVec 64))
(declare-fun temp681_25 () (_ BitVec 64))
(declare-fun temp681_26 () (_ BitVec 64))
(declare-fun temp681_27 () (_ BitVec 64))
(declare-fun temp681_28 () (_ BitVec 64))
(declare-fun temp681_29 () (_ BitVec 64))
(declare-fun temp681_30 () (_ BitVec 64))
(declare-fun temp681_31 () (_ BitVec 64))
(declare-fun temp681_32 () (_ BitVec 64))
(declare-fun temp681_33 () (_ BitVec 64))
(declare-fun temp681_34 () (_ BitVec 64))
(declare-fun temp681_35 () (_ BitVec 64))
(declare-fun temp681_36 () (_ BitVec 64))
(declare-fun temp681_37 () (_ BitVec 64))
(declare-fun temp681_38 () (_ BitVec 64))
(declare-fun temp681_39 () (_ BitVec 64))
(declare-fun temp681_40 () (_ BitVec 64))
(declare-fun temp681_41 () (_ BitVec 64))
(declare-fun temp681_42 () (_ BitVec 64))
(declare-fun temp681_43 () (_ BitVec 64))
(declare-fun temp681_44 () (_ BitVec 64))
(declare-fun temp681_45 () (_ BitVec 64))
(declare-fun temp681_46 () (_ BitVec 64))
(declare-fun temp681_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp681_48 () (_ BitVec 64))
(declare-fun temp681_49 () (_ BitVec 64))
(declare-fun temp681_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_51 () (_ BitVec 64))
(declare-fun temp681_52 () (_ BitVec 64))
(declare-fun temp681_53 () (_ BitVec 64))
(declare-fun temp681_54 () (_ BitVec 64))
(declare-fun temp681_55 () (_ BitVec 64))
(declare-fun temp681_56 () (_ BitVec 64))
(declare-fun temp681_57 () (_ BitVec 64))
(declare-fun temp681_58 () (_ BitVec 64))
(declare-fun temp681_59 () (_ BitVec 64))
(declare-fun temp681_60 () (_ BitVec 64))
(declare-fun temp681_61 () (_ BitVec 64))
(declare-fun temp681_62 () (_ BitVec 64))
(declare-fun temp681_63 () (_ BitVec 64))
(declare-fun temp681_64 () (_ BitVec 64))
(declare-fun temp681_65 () (_ BitVec 64))
(declare-fun temp681_66 () (_ BitVec 64))
(declare-fun temp681_67 () (_ BitVec 64))
(declare-fun temp681_68 () (_ BitVec 64))
(declare-fun temp681_69 () (_ BitVec 64))
(declare-fun temp681_70 () (_ BitVec 64))
(declare-fun temp681_71 () (_ BitVec 64))
(declare-fun temp681_72 () (_ BitVec 64))
(declare-fun temp681_73 () (_ BitVec 64))
(declare-fun temp681_74 () (_ BitVec 64))
(declare-fun temp681_75 () (_ BitVec 64))
(declare-fun temp681_76 () (_ BitVec 64))
(declare-fun temp681_77 () (_ BitVec 64))
(declare-fun temp681_78 () (_ BitVec 64))
(declare-fun temp681_79 () (_ BitVec 64))
(declare-fun temp681_80 () (_ BitVec 64))
(declare-fun temp681_81 () (_ BitVec 64))
(declare-fun temp681_82 () (_ BitVec 64))
(declare-fun temp681_83 () (_ BitVec 64))
(declare-fun temp681_84 () (_ BitVec 64))
(declare-fun temp681_85 () (_ BitVec 64))
(declare-fun temp681_86 () (_ BitVec 64))
(declare-fun temp681_87 () (_ BitVec 64))
(declare-fun temp681_88 () (_ BitVec 64))
(declare-fun temp681_89 () (_ BitVec 64))
(declare-fun temp681_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp681_91 () (_ BitVec 64))
(declare-fun temp681_92 () (_ BitVec 64))
(declare-fun temp681_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_94 () (_ BitVec 64))
(declare-fun temp681_95 () (_ BitVec 64))
(declare-fun temp681_96 () (_ BitVec 64))
(declare-fun temp681_97 () (_ BitVec 64))
(declare-fun temp681_98 () (_ BitVec 64))
(declare-fun temp681_99 () (_ BitVec 64))
(declare-fun temp681_100 () (_ BitVec 64))
(declare-fun temp681_101 () (_ BitVec 64))
(declare-fun temp681_102 () (_ BitVec 64))
(declare-fun temp681_103 () (_ BitVec 64))
(declare-fun temp681_104 () (_ BitVec 64))
(declare-fun temp681_105 () (_ BitVec 64))
(declare-fun temp681_106 () (_ BitVec 64))
(declare-fun temp681_107 () (_ BitVec 64))
(declare-fun temp681_108 () (_ BitVec 64))
(declare-fun temp681_109 () (_ BitVec 64))
(declare-fun temp681_110 () (_ BitVec 64))
(declare-fun temp681_111 () (_ BitVec 64))
(declare-fun temp681_112 () (_ BitVec 64))
(declare-fun temp681_113 () (_ BitVec 64))
(declare-fun temp681_114 () (_ BitVec 64))
(declare-fun temp681_115 () (_ BitVec 64))
(declare-fun temp681_116 () (_ BitVec 64))
(declare-fun temp681_117 () (_ BitVec 64))
(declare-fun temp681_118 () (_ BitVec 64))
(declare-fun temp681_119 () (_ BitVec 64))
(declare-fun temp681_120 () (_ BitVec 64))
(declare-fun temp681_121 () (_ BitVec 64))
(declare-fun temp681_122 () (_ BitVec 64))
(declare-fun temp681_123 () (_ BitVec 64))
(declare-fun temp681_124 () (_ BitVec 64))
(declare-fun temp681_125 () (_ BitVec 64))
(declare-fun temp681_126 () (_ BitVec 64))
(declare-fun temp681_127 () (_ BitVec 64))
(declare-fun temp681_128 () (_ BitVec 64))
(declare-fun temp681_129 () (_ BitVec 64))
(declare-fun temp681_130 () (_ BitVec 64))
(declare-fun temp681_131 () (_ BitVec 64))
(declare-fun temp681_132 () (_ BitVec 64))
(declare-fun temp681_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp681_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp681_135 () (_ BitVec 64))
(declare-fun temp681_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp681_137 () (_ BitVec 64))
(declare-fun temp681_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_139 () (_ BitVec 64))
(declare-fun temp681_140 () (_ BitVec 64))
(declare-fun temp681_141 () (_ BitVec 64))
(declare-fun temp681_142 () (_ BitVec 64))
(declare-fun temp681_143 () (_ BitVec 64))
(declare-fun temp681_144 () (_ BitVec 64))
(declare-fun temp681_145 () (_ BitVec 64))
(declare-fun temp681_146 () (_ BitVec 64))
(declare-fun temp681_147 () (_ BitVec 64))
(declare-fun temp681_148 () (_ BitVec 64))
(declare-fun temp681_149 () (_ BitVec 64))
(declare-fun temp681_150 () (_ BitVec 64))
(declare-fun temp681_151 () (_ BitVec 64))
(declare-fun temp681_152 () (_ BitVec 64))
(declare-fun temp681_153 () (_ BitVec 64))
(declare-fun temp681_154 () (_ BitVec 64))
(declare-fun temp681_156 () (_ BitVec 64))
(declare-fun temp681_157 () (_ BitVec 64))
(declare-fun temp681_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp681_158 () (_ BitVec 64))
(declare-fun temp681_159 () (_ BitVec 64))
(declare-fun temp681_161 () (_ BitVec 64))
(declare-fun temp681_162 () (_ BitVec 64))
(declare-fun temp681_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp681_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp681_164 () (_ BitVec 64))
(declare-fun temp681_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp681_166 () (_ BitVec 64))
(declare-fun temp681_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp681_168 () (_ BitVec 64))
(declare-fun temp681_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_170 () (_ BitVec 64))
(declare-fun temp681_171 () (_ BitVec 64))
(declare-fun temp681_172 () (_ BitVec 64))
(declare-fun temp681_173 () (_ BitVec 64))
(declare-fun temp681_174 () (_ BitVec 64))
(declare-fun temp681_175 () (_ BitVec 64))
(declare-fun temp681_176 () (_ BitVec 64))
(declare-fun temp681_177 () (_ BitVec 64))
(declare-fun temp681_178 () (_ BitVec 64))
(declare-fun temp681_179 () (_ BitVec 64))
(declare-fun temp681_180 () (_ BitVec 64))
(declare-fun temp681_181 () (_ BitVec 64))
(declare-fun temp681_182 () (_ BitVec 64))
(declare-fun temp681_183 () (_ BitVec 64))
(declare-fun temp681_184 () (_ BitVec 64))
(declare-fun temp681_185 () (_ BitVec 64))
(declare-fun temp681_186 () (_ BitVec 64))
(declare-fun temp681_187 () (_ BitVec 64))
(declare-fun temp681_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp681_189 () (_ BitVec 64))
(declare-fun temp681_191 () (_ BitVec 64))
(declare-fun temp681_192 () (_ BitVec 64))
(declare-fun temp681_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp681_193 () (_ BitVec 64))
(declare-fun temp681_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp681_195 () (_ BitVec 64))
(declare-fun temp681_196 () (_ BitVec 64))
(declare-fun temp681_197 () (_ BitVec 64))
(declare-fun temp681_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_199 () (_ BitVec 64))
(declare-fun temp681_200 () (_ BitVec 64))
(declare-fun temp681_201 () (_ BitVec 64))
(declare-fun temp681_202 () (_ BitVec 64))
(declare-fun temp681_203 () (_ BitVec 64))
(declare-fun temp681_204 () (_ BitVec 64))
(declare-fun temp681_205 () (_ BitVec 64))
(declare-fun temp681_206 () (_ BitVec 64))
(declare-fun temp681_207 () (_ BitVec 64))
(declare-fun temp681_208 () (_ BitVec 64))
(declare-fun temp681_209 () (_ BitVec 64))
(declare-fun temp681_210 () (_ BitVec 64))
(declare-fun temp681_211 () (_ BitVec 64))
(declare-fun temp681_212 () (_ BitVec 64))
(declare-fun temp681_213 () (_ BitVec 64))
(declare-fun temp681_214 () (_ BitVec 64))
(declare-fun temp681_215 () (_ BitVec 64))
(declare-fun temp681_216 () (_ BitVec 64))
(declare-fun temp681_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp681_218 () (_ BitVec 64))
(declare-fun temp681_220 () (_ BitVec 64))
(declare-fun temp681_221 () (_ BitVec 64))
(declare-fun temp681_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp681_222 () (_ BitVec 64))
(declare-fun temp681_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp681_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp681_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp681_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp681_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp681_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp681_229 () (_ BitVec 64))
(declare-fun temp681_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp681_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp681_232 () (_ BitVec 64))
(declare-fun temp681_233 () (_ BitVec 64))
(declare-fun temp681_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp681_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp681_236 () (_ BitVec 64))
(declare-fun temp681_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp681_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp681_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp681_241 () (_ BitVec 64))
(declare-fun temp681_240 () (_ BitVec 64))
(declare-fun temp681_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp681_243 () (_ BitVec 64))
(declare-fun temp681_244 () (_ BitVec 64))
(declare-fun temp681_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp681_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp681_247 () (_ BitVec 64))
(declare-fun temp681_249 () (_ BitVec 64))
(declare-fun temp681_248 () (_ BitVec 64))
(declare-fun temp681_250 () (_ BitVec 64))
(assert (= temp681_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp681_1)))
(assert (= temp681_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp681_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_3 #x0000000000000000))
(assert (= var79869 temp681_3))
(assert (= temp681_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp681_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_5 #x0000000000000000))
(assert (= var79914 temp681_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp681_6 #x0000000000000000))
(assert (= temp681_7 temp681_6))
(assert (= temp681_8 (select ARGNAME_padding_NAMEEND_VAL temp681_7)))
(assert (= temp681_9 #x0000000000000001))
(assert (= temp681_10 temp681_9))
(assert (= temp681_11 (select ARGNAME_padding_NAMEEND_VAL temp681_10)))
(assert (= temp681_12 #x0000000000000002))
(assert (= temp681_13 temp681_12))
(assert (= temp681_14 (select ARGNAME_padding_NAMEEND_VAL temp681_13)))
(assert (= temp681_15 #x0000000000000003))
(assert (= temp681_16 temp681_15))
(assert (= temp681_17 (select ARGNAME_padding_NAMEEND_VAL temp681_16)))
(assert (= temp681_18 #x0000000000000004))
(assert (= temp681_19 temp681_18))
(assert (= temp681_20 (select ARGNAME_padding_NAMEEND_VAL temp681_19)))
(assert (= temp681_21 #x0000000000000005))
(assert (= temp681_22 temp681_21))
(assert (= temp681_23 (select ARGNAME_padding_NAMEEND_VAL temp681_22)))
(assert (= temp681_24 #x0000000000000000))
(assert (= temp681_25 #x0000000000000000))
(assert (= temp681_26 temp681_25))
(assert (= temp681_27 (select ARGNAME_padding_NAMEEND_VAL temp681_26)))
(assert (= temp681_28 #x0000000000000000))
(assert (= temp681_29 #x0000000000000001))
(assert (= temp681_30 temp681_29))
(assert (= temp681_31 (select ARGNAME_padding_NAMEEND_VAL temp681_30)))
(assert (= temp681_32 #x0000000000000000))
(assert (= temp681_33 #x0000000000000002))
(assert (= temp681_34 temp681_33))
(assert (= temp681_35 (select ARGNAME_padding_NAMEEND_VAL temp681_34)))
(assert (= temp681_36 #x0000000000000000))
(assert (= temp681_37 #x0000000000000003))
(assert (= temp681_38 temp681_37))
(assert (= temp681_39 (select ARGNAME_padding_NAMEEND_VAL temp681_38)))
(assert (= temp681_40 #x0000000000000000))
(assert (= temp681_41 #x0000000000000004))
(assert (= temp681_42 temp681_41))
(assert (= temp681_43 (select ARGNAME_padding_NAMEEND_VAL temp681_42)))
(assert (= temp681_44 #x0000000000000000))
(assert (= temp681_45 #x0000000000000005))
(assert (= temp681_46 temp681_45))
(assert (= temp681_47 (select ARGNAME_padding_NAMEEND_VAL temp681_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp681_27 temp681_24)
             (bvslt temp681_31 temp681_28)
             (bvslt temp681_35 temp681_32)
             (bvslt temp681_39 temp681_36)
             (bvslt temp681_43 temp681_40)
             (bvslt temp681_47 temp681_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_48 #x0000000000000000))
(assert (= var1322786 temp681_48))
(assert (= temp681_49 #x0000000000000000))
(assert (= temp681_50 temp681_49))
(assert (= temp681_51 (select ARGNAME_output_padding_NAMEEND_VAL temp681_50)))
(assert (= temp681_52 #x0000000000000001))
(assert (= temp681_53 temp681_52))
(assert (= temp681_54 (select ARGNAME_output_padding_NAMEEND_VAL temp681_53)))
(assert (= temp681_55 #x0000000000000002))
(assert (= temp681_56 temp681_55))
(assert (= temp681_57 (select ARGNAME_output_padding_NAMEEND_VAL temp681_56)))
(assert (= temp681_58 #x0000000000000003))
(assert (= temp681_59 temp681_58))
(assert (= temp681_60 (select ARGNAME_output_padding_NAMEEND_VAL temp681_59)))
(assert (= temp681_61 #x0000000000000004))
(assert (= temp681_62 temp681_61))
(assert (= temp681_63 (select ARGNAME_output_padding_NAMEEND_VAL temp681_62)))
(assert (= temp681_64 #x0000000000000005))
(assert (= temp681_65 temp681_64))
(assert (= temp681_66 (select ARGNAME_output_padding_NAMEEND_VAL temp681_65)))
(assert (= temp681_67 #x0000000000000000))
(assert (= temp681_68 #x0000000000000000))
(assert (= temp681_69 temp681_68))
(assert (= temp681_70 (select ARGNAME_output_padding_NAMEEND_VAL temp681_69)))
(assert (= temp681_71 #x0000000000000000))
(assert (= temp681_72 #x0000000000000001))
(assert (= temp681_73 temp681_72))
(assert (= temp681_74 (select ARGNAME_output_padding_NAMEEND_VAL temp681_73)))
(assert (= temp681_75 #x0000000000000000))
(assert (= temp681_76 #x0000000000000002))
(assert (= temp681_77 temp681_76))
(assert (= temp681_78 (select ARGNAME_output_padding_NAMEEND_VAL temp681_77)))
(assert (= temp681_79 #x0000000000000000))
(assert (= temp681_80 #x0000000000000003))
(assert (= temp681_81 temp681_80))
(assert (= temp681_82 (select ARGNAME_output_padding_NAMEEND_VAL temp681_81)))
(assert (= temp681_83 #x0000000000000000))
(assert (= temp681_84 #x0000000000000004))
(assert (= temp681_85 temp681_84))
(assert (= temp681_86 (select ARGNAME_output_padding_NAMEEND_VAL temp681_85)))
(assert (= temp681_87 #x0000000000000000))
(assert (= temp681_88 #x0000000000000005))
(assert (= temp681_89 temp681_88))
(assert (= temp681_90 (select ARGNAME_output_padding_NAMEEND_VAL temp681_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp681_70 temp681_67)
             (bvslt temp681_74 temp681_71)
             (bvslt temp681_78 temp681_75)
             (bvslt temp681_82 temp681_79)
             (bvslt temp681_86 temp681_83)
             (bvslt temp681_90 temp681_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_91 #x0000000000000000))
(assert (= var1322797 temp681_91))
(assert (= temp681_92 #x0000000000000000))
(assert (= temp681_93 temp681_92))
(assert (= temp681_94 (select ARGNAME_stride_NAMEEND_VAL temp681_93)))
(assert (= temp681_95 #x0000000000000001))
(assert (= temp681_96 temp681_95))
(assert (= temp681_97 (select ARGNAME_stride_NAMEEND_VAL temp681_96)))
(assert (= temp681_98 #x0000000000000002))
(assert (= temp681_99 temp681_98))
(assert (= temp681_100 (select ARGNAME_stride_NAMEEND_VAL temp681_99)))
(assert (= temp681_101 #x0000000000000003))
(assert (= temp681_102 temp681_101))
(assert (= temp681_103 (select ARGNAME_stride_NAMEEND_VAL temp681_102)))
(assert (= temp681_104 #x0000000000000004))
(assert (= temp681_105 temp681_104))
(assert (= temp681_106 (select ARGNAME_stride_NAMEEND_VAL temp681_105)))
(assert (= temp681_107 #x0000000000000005))
(assert (= temp681_108 temp681_107))
(assert (= temp681_109 (select ARGNAME_stride_NAMEEND_VAL temp681_108)))
(assert (= temp681_110 #x0000000000000000))
(assert (= temp681_111 #x0000000000000000))
(assert (= temp681_112 temp681_111))
(assert (= temp681_113 (select ARGNAME_stride_NAMEEND_VAL temp681_112)))
(assert (= temp681_114 #x0000000000000000))
(assert (= temp681_115 #x0000000000000001))
(assert (= temp681_116 temp681_115))
(assert (= temp681_117 (select ARGNAME_stride_NAMEEND_VAL temp681_116)))
(assert (= temp681_118 #x0000000000000000))
(assert (= temp681_119 #x0000000000000002))
(assert (= temp681_120 temp681_119))
(assert (= temp681_121 (select ARGNAME_stride_NAMEEND_VAL temp681_120)))
(assert (= temp681_122 #x0000000000000000))
(assert (= temp681_123 #x0000000000000003))
(assert (= temp681_124 temp681_123))
(assert (= temp681_125 (select ARGNAME_stride_NAMEEND_VAL temp681_124)))
(assert (= temp681_126 #x0000000000000000))
(assert (= temp681_127 #x0000000000000004))
(assert (= temp681_128 temp681_127))
(assert (= temp681_129 (select ARGNAME_stride_NAMEEND_VAL temp681_128)))
(assert (= temp681_130 #x0000000000000000))
(assert (= temp681_131 #x0000000000000005))
(assert (= temp681_132 temp681_131))
(assert (= temp681_133 (select ARGNAME_stride_NAMEEND_VAL temp681_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp681_113 temp681_110)
             (bvsle temp681_117 temp681_114)
             (bvsle temp681_121 temp681_118)
             (bvsle temp681_125 temp681_122)
             (bvsle temp681_129 temp681_126)
             (bvsle temp681_133 temp681_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_134 #x0000000000000000))
(assert (= var1322807 temp681_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_135 #x0000000000000001))
(assert (= var1322819 temp681_135))
(assert (= temp681_136 #x0000000000000000))
(assert (= var1310898 temp681_136))
(assert (= temp681_137 #x0000000000000000))
(assert (= temp681_138 temp681_137))
(assert (= temp681_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_138)))
(assert (= temp681_140 #x0000000000000001))
(assert (= temp681_141 temp681_140))
(assert (= temp681_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_141)))
(assert (= temp681_143 #x0000000000000002))
(assert (= temp681_144 temp681_143))
(assert (= temp681_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_144)))
(assert (= temp681_146 #x0000000000000003))
(assert (= temp681_147 temp681_146))
(assert (= temp681_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_147)))
(assert (= temp681_149 #x0000000000000004))
(assert (= temp681_150 temp681_149))
(assert (= temp681_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_150)))
(assert (= temp681_152 #x0000000000000005))
(assert (= temp681_153 temp681_152))
(assert (= temp681_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_153)))
(assert (= temp681_156 var1310898))
(assert (= temp681_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_156)))
(assert (= temp681_155 temp681_157))
(assert (= var1322852
   (ite (bvslt temp681_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_158 #x0000000000000000))
(assert (= var1322852 temp681_158))
(assert (= temp681_159 #x0000000000000000))
(assert (= var1310898 temp681_159))
(assert (= temp681_161 var1310898))
(assert (= temp681_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_161)))
(assert (= temp681_160 temp681_162))
(assert (= var1322874 (bvsmod temp681_160 ARGNAME_groups_NAMEEND)))
(assert (= temp681_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp681_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp681_164 #x0000000000000001))
(assert (= var1322875 temp681_164))
(assert (= temp681_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp681_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_166 #x0000000000000001))
(assert (= var1322895 temp681_166))
(assert (= temp681_167 #x0000000000000001))
(assert (= var1311786 temp681_167))
(assert (= temp681_168 #x0000000000000000))
(assert (= temp681_169 temp681_168))
(assert (= temp681_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_169)))
(assert (= temp681_171 #x0000000000000001))
(assert (= temp681_172 temp681_171))
(assert (= temp681_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_172)))
(assert (= temp681_174 #x0000000000000002))
(assert (= temp681_175 temp681_174))
(assert (= temp681_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_175)))
(assert (= temp681_177 #x0000000000000003))
(assert (= temp681_178 temp681_177))
(assert (= temp681_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_178)))
(assert (= temp681_180 #x0000000000000004))
(assert (= temp681_181 temp681_180))
(assert (= temp681_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_181)))
(assert (= temp681_183 #x0000000000000005))
(assert (= temp681_184 temp681_183))
(assert (= temp681_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_184)))
(assert (= temp681_186 #x0000000000000000))
(assert (= temp681_187
   (ite (bvslt var1311786 temp681_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp681_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_187)))
(assert (= var1322903 temp681_188))
(assert (bvslt (ite (bvslt var1311786 temp681_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp681_189 #x0000000000000001))
(assert (= var1311786 temp681_189))
(assert (= temp681_191 var1311786))
(assert (= temp681_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_191)))
(assert (= temp681_190 temp681_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp681_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp681_193 #x0000000000000001))
(assert (= var1322908 temp681_193))
(assert (= temp681_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp681_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_195 #x0000000000000001))
(assert (= var1322975 temp681_195))
(assert (= temp681_196 #x0000000000000000))
(assert (= var1310898 temp681_196))
(assert (= temp681_197 #x0000000000000000))
(assert (= temp681_198 temp681_197))
(assert (= temp681_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp681_198)))
(assert (= temp681_200 #x0000000000000001))
(assert (= temp681_201 temp681_200))
(assert (= temp681_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp681_201)))
(assert (= temp681_203 #x0000000000000002))
(assert (= temp681_204 temp681_203))
(assert (= temp681_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp681_204)))
(assert (= temp681_206 #x0000000000000003))
(assert (= temp681_207 temp681_206))
(assert (= temp681_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp681_207)))
(assert (= temp681_209 #x0000000000000004))
(assert (= temp681_210 temp681_209))
(assert (= temp681_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp681_210)))
(assert (= temp681_212 #x0000000000000005))
(assert (= temp681_213 temp681_212))
(assert (= temp681_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp681_213)))
(assert (= temp681_215 #x0000000000000000))
(assert (= temp681_216
   (ite (bvslt var1310898 temp681_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp681_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp681_216)))
(assert (= var1322977 temp681_217))
(assert (bvslt (ite (bvslt var1310898 temp681_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp681_218 #x0000000000000000))
(assert (= var1310898 temp681_218))
(assert (= temp681_220 var1310898))
(assert (= temp681_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_220)))
(assert (= temp681_219 temp681_221))
(assert (= var1322980
   (ite (= var1322977 temp681_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp681_222 #x0000000000000001))
(assert (= var1322980 temp681_222))
(assert (= temp681_223 #x0000000000000002))
(assert (= var1848169 temp681_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp681_225 #x0000000000000001))
(assert (= var1323065 temp681_225))
(assert (= temp681_226 #x0000000000000001))
(assert (= var3486735 temp681_226))
(assert (= temp681_227 #x0000000000000001))
(assert (= var3814415 temp681_227))
(assert (= temp681_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp681_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_229 #x0000000000000001))
(assert (= var79986 temp681_229))
(assert (= temp681_230 #x0000000000000001))
(assert (= var80116 temp681_230))
(assert (= var4796905 var80116))
(assert (= temp681_231 #x0000000000000000))
(assert (= var4784306 temp681_231))
(assert (= temp681_232 #x0000000000000000))
(assert (= temp681_233
   (ite (bvslt var4784306 temp681_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp681_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_233)))
(assert (= var4796924 temp681_234))
(assert (bvslt (ite (bvslt var4784306 temp681_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp681_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp681_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp681_236 #x0000000000000001))
(assert (= var4796925 temp681_236))
(assert (= temp681_237 #x0000000000000000))
(assert (= var4996927 temp681_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp681_238 #x0000000000000002))
(assert (= var5125763 temp681_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_239 #x0000000000000000))
(assert (= var5191324 temp681_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp681_241 #xffffffffffffffff))
(assert (= temp681_240 temp681_241))
(assert (= temp681_242 #x0000000000000001))
(assert (= var66602 temp681_242))
(assert (= temp681_243 #x0000000000000000))
(assert (= temp681_244
   (ite (bvslt var66602 temp681_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp681_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_244)))
(assert (= var80523 temp681_245))
(assert (bvslt (ite (bvslt var66602 temp681_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp681_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp681_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp681_247 #x0000000000000001))
(assert (= var80524 temp681_247))
(assert (= temp681_249 #xffffffffffffffff))
(assert (= temp681_248 temp681_249))
(assert (= temp681_250 #x0000000000000001))
(assert (= var79986 temp681_250))
(model-add temp681_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp681_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp681_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






