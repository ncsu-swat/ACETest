(declare-fun temp661_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp661_2 () (_ BitVec 64))
(declare-fun temp661_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp661_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp661_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp661_6 () (_ BitVec 64))
(declare-fun temp661_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_8 () (_ BitVec 64))
(declare-fun temp661_9 () (_ BitVec 64))
(declare-fun temp661_10 () (_ BitVec 64))
(declare-fun temp661_11 () (_ BitVec 64))
(declare-fun temp661_12 () (_ BitVec 64))
(declare-fun temp661_13 () (_ BitVec 64))
(declare-fun temp661_14 () (_ BitVec 64))
(declare-fun temp661_15 () (_ BitVec 64))
(declare-fun temp661_16 () (_ BitVec 64))
(declare-fun temp661_17 () (_ BitVec 64))
(declare-fun temp661_18 () (_ BitVec 64))
(declare-fun temp661_19 () (_ BitVec 64))
(declare-fun temp661_20 () (_ BitVec 64))
(declare-fun temp661_21 () (_ BitVec 64))
(declare-fun temp661_22 () (_ BitVec 64))
(declare-fun temp661_23 () (_ BitVec 64))
(declare-fun temp661_24 () (_ BitVec 64))
(declare-fun temp661_25 () (_ BitVec 64))
(declare-fun temp661_26 () (_ BitVec 64))
(declare-fun temp661_27 () (_ BitVec 64))
(declare-fun temp661_28 () (_ BitVec 64))
(declare-fun temp661_29 () (_ BitVec 64))
(declare-fun temp661_30 () (_ BitVec 64))
(declare-fun temp661_31 () (_ BitVec 64))
(declare-fun temp661_32 () (_ BitVec 64))
(declare-fun temp661_33 () (_ BitVec 64))
(declare-fun temp661_34 () (_ BitVec 64))
(declare-fun temp661_35 () (_ BitVec 64))
(declare-fun temp661_36 () (_ BitVec 64))
(declare-fun temp661_37 () (_ BitVec 64))
(declare-fun temp661_38 () (_ BitVec 64))
(declare-fun temp661_39 () (_ BitVec 64))
(declare-fun temp661_40 () (_ BitVec 64))
(declare-fun temp661_41 () (_ BitVec 64))
(declare-fun temp661_42 () (_ BitVec 64))
(declare-fun temp661_43 () (_ BitVec 64))
(declare-fun temp661_44 () (_ BitVec 64))
(declare-fun temp661_45 () (_ BitVec 64))
(declare-fun temp661_46 () (_ BitVec 64))
(declare-fun temp661_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp661_48 () (_ BitVec 64))
(declare-fun temp661_49 () (_ BitVec 64))
(declare-fun temp661_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_51 () (_ BitVec 64))
(declare-fun temp661_52 () (_ BitVec 64))
(declare-fun temp661_53 () (_ BitVec 64))
(declare-fun temp661_54 () (_ BitVec 64))
(declare-fun temp661_55 () (_ BitVec 64))
(declare-fun temp661_56 () (_ BitVec 64))
(declare-fun temp661_57 () (_ BitVec 64))
(declare-fun temp661_58 () (_ BitVec 64))
(declare-fun temp661_59 () (_ BitVec 64))
(declare-fun temp661_60 () (_ BitVec 64))
(declare-fun temp661_61 () (_ BitVec 64))
(declare-fun temp661_62 () (_ BitVec 64))
(declare-fun temp661_63 () (_ BitVec 64))
(declare-fun temp661_64 () (_ BitVec 64))
(declare-fun temp661_65 () (_ BitVec 64))
(declare-fun temp661_66 () (_ BitVec 64))
(declare-fun temp661_67 () (_ BitVec 64))
(declare-fun temp661_68 () (_ BitVec 64))
(declare-fun temp661_69 () (_ BitVec 64))
(declare-fun temp661_70 () (_ BitVec 64))
(declare-fun temp661_71 () (_ BitVec 64))
(declare-fun temp661_72 () (_ BitVec 64))
(declare-fun temp661_73 () (_ BitVec 64))
(declare-fun temp661_74 () (_ BitVec 64))
(declare-fun temp661_75 () (_ BitVec 64))
(declare-fun temp661_76 () (_ BitVec 64))
(declare-fun temp661_77 () (_ BitVec 64))
(declare-fun temp661_78 () (_ BitVec 64))
(declare-fun temp661_79 () (_ BitVec 64))
(declare-fun temp661_80 () (_ BitVec 64))
(declare-fun temp661_81 () (_ BitVec 64))
(declare-fun temp661_82 () (_ BitVec 64))
(declare-fun temp661_83 () (_ BitVec 64))
(declare-fun temp661_84 () (_ BitVec 64))
(declare-fun temp661_85 () (_ BitVec 64))
(declare-fun temp661_86 () (_ BitVec 64))
(declare-fun temp661_87 () (_ BitVec 64))
(declare-fun temp661_88 () (_ BitVec 64))
(declare-fun temp661_89 () (_ BitVec 64))
(declare-fun temp661_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp661_91 () (_ BitVec 64))
(declare-fun temp661_92 () (_ BitVec 64))
(declare-fun temp661_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_94 () (_ BitVec 64))
(declare-fun temp661_95 () (_ BitVec 64))
(declare-fun temp661_96 () (_ BitVec 64))
(declare-fun temp661_97 () (_ BitVec 64))
(declare-fun temp661_98 () (_ BitVec 64))
(declare-fun temp661_99 () (_ BitVec 64))
(declare-fun temp661_100 () (_ BitVec 64))
(declare-fun temp661_101 () (_ BitVec 64))
(declare-fun temp661_102 () (_ BitVec 64))
(declare-fun temp661_103 () (_ BitVec 64))
(declare-fun temp661_104 () (_ BitVec 64))
(declare-fun temp661_105 () (_ BitVec 64))
(declare-fun temp661_106 () (_ BitVec 64))
(declare-fun temp661_107 () (_ BitVec 64))
(declare-fun temp661_108 () (_ BitVec 64))
(declare-fun temp661_109 () (_ BitVec 64))
(declare-fun temp661_110 () (_ BitVec 64))
(declare-fun temp661_111 () (_ BitVec 64))
(declare-fun temp661_112 () (_ BitVec 64))
(declare-fun temp661_113 () (_ BitVec 64))
(declare-fun temp661_114 () (_ BitVec 64))
(declare-fun temp661_115 () (_ BitVec 64))
(declare-fun temp661_116 () (_ BitVec 64))
(declare-fun temp661_117 () (_ BitVec 64))
(declare-fun temp661_118 () (_ BitVec 64))
(declare-fun temp661_119 () (_ BitVec 64))
(declare-fun temp661_120 () (_ BitVec 64))
(declare-fun temp661_121 () (_ BitVec 64))
(declare-fun temp661_122 () (_ BitVec 64))
(declare-fun temp661_123 () (_ BitVec 64))
(declare-fun temp661_124 () (_ BitVec 64))
(declare-fun temp661_125 () (_ BitVec 64))
(declare-fun temp661_126 () (_ BitVec 64))
(declare-fun temp661_127 () (_ BitVec 64))
(declare-fun temp661_128 () (_ BitVec 64))
(declare-fun temp661_129 () (_ BitVec 64))
(declare-fun temp661_130 () (_ BitVec 64))
(declare-fun temp661_131 () (_ BitVec 64))
(declare-fun temp661_132 () (_ BitVec 64))
(declare-fun temp661_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp661_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp661_135 () (_ BitVec 64))
(declare-fun temp661_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp661_137 () (_ BitVec 64))
(declare-fun temp661_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_139 () (_ BitVec 64))
(declare-fun temp661_140 () (_ BitVec 64))
(declare-fun temp661_141 () (_ BitVec 64))
(declare-fun temp661_142 () (_ BitVec 64))
(declare-fun temp661_143 () (_ BitVec 64))
(declare-fun temp661_144 () (_ BitVec 64))
(declare-fun temp661_145 () (_ BitVec 64))
(declare-fun temp661_146 () (_ BitVec 64))
(declare-fun temp661_147 () (_ BitVec 64))
(declare-fun temp661_148 () (_ BitVec 64))
(declare-fun temp661_149 () (_ BitVec 64))
(declare-fun temp661_150 () (_ BitVec 64))
(declare-fun temp661_151 () (_ BitVec 64))
(declare-fun temp661_152 () (_ BitVec 64))
(declare-fun temp661_153 () (_ BitVec 64))
(declare-fun temp661_154 () (_ BitVec 64))
(declare-fun temp661_156 () (_ BitVec 64))
(declare-fun temp661_157 () (_ BitVec 64))
(declare-fun temp661_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp661_158 () (_ BitVec 64))
(declare-fun temp661_159 () (_ BitVec 64))
(declare-fun temp661_161 () (_ BitVec 64))
(declare-fun temp661_162 () (_ BitVec 64))
(declare-fun temp661_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp661_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp661_164 () (_ BitVec 64))
(declare-fun temp661_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp661_166 () (_ BitVec 64))
(declare-fun temp661_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp661_168 () (_ BitVec 64))
(declare-fun temp661_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_170 () (_ BitVec 64))
(declare-fun temp661_171 () (_ BitVec 64))
(declare-fun temp661_172 () (_ BitVec 64))
(declare-fun temp661_173 () (_ BitVec 64))
(declare-fun temp661_174 () (_ BitVec 64))
(declare-fun temp661_175 () (_ BitVec 64))
(declare-fun temp661_176 () (_ BitVec 64))
(declare-fun temp661_177 () (_ BitVec 64))
(declare-fun temp661_178 () (_ BitVec 64))
(declare-fun temp661_179 () (_ BitVec 64))
(declare-fun temp661_180 () (_ BitVec 64))
(declare-fun temp661_181 () (_ BitVec 64))
(declare-fun temp661_182 () (_ BitVec 64))
(declare-fun temp661_183 () (_ BitVec 64))
(declare-fun temp661_184 () (_ BitVec 64))
(declare-fun temp661_185 () (_ BitVec 64))
(declare-fun temp661_186 () (_ BitVec 64))
(declare-fun temp661_187 () (_ BitVec 64))
(declare-fun temp661_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp661_189 () (_ BitVec 64))
(declare-fun temp661_191 () (_ BitVec 64))
(declare-fun temp661_192 () (_ BitVec 64))
(declare-fun temp661_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp661_193 () (_ BitVec 64))
(declare-fun temp661_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp661_195 () (_ BitVec 64))
(declare-fun temp661_196 () (_ BitVec 64))
(declare-fun temp661_197 () (_ BitVec 64))
(declare-fun temp661_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_199 () (_ BitVec 64))
(declare-fun temp661_200 () (_ BitVec 64))
(declare-fun temp661_201 () (_ BitVec 64))
(declare-fun temp661_202 () (_ BitVec 64))
(declare-fun temp661_203 () (_ BitVec 64))
(declare-fun temp661_204 () (_ BitVec 64))
(declare-fun temp661_205 () (_ BitVec 64))
(declare-fun temp661_206 () (_ BitVec 64))
(declare-fun temp661_207 () (_ BitVec 64))
(declare-fun temp661_208 () (_ BitVec 64))
(declare-fun temp661_209 () (_ BitVec 64))
(declare-fun temp661_210 () (_ BitVec 64))
(declare-fun temp661_211 () (_ BitVec 64))
(declare-fun temp661_212 () (_ BitVec 64))
(declare-fun temp661_213 () (_ BitVec 64))
(declare-fun temp661_214 () (_ BitVec 64))
(declare-fun temp661_215 () (_ BitVec 64))
(declare-fun temp661_216 () (_ BitVec 64))
(declare-fun temp661_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp661_218 () (_ BitVec 64))
(declare-fun temp661_220 () (_ BitVec 64))
(declare-fun temp661_221 () (_ BitVec 64))
(declare-fun temp661_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp661_222 () (_ BitVec 64))
(declare-fun temp661_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp661_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp661_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp661_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp661_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp661_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp661_229 () (_ BitVec 64))
(declare-fun temp661_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp661_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp661_232 () (_ BitVec 64))
(declare-fun temp661_233 () (_ BitVec 64))
(declare-fun temp661_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp661_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp661_236 () (_ BitVec 64))
(declare-fun temp661_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp661_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp661_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp661_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp661_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp661_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp661_244 () (_ BitVec 64))
(declare-fun temp661_243 () (_ BitVec 64))
(declare-fun temp661_245 () (_ BitVec 64))
(declare-fun var8326634 () (_ BitVec 64))
(declare-fun temp661_247 () (_ BitVec 64))
(declare-fun temp661_246 () (_ BitVec 64))
(declare-fun temp661_248 () (_ BitVec 64))
(assert (= temp661_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp661_1)))
(assert (= temp661_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp661_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_3 #x0000000000000000))
(assert (= var79869 temp661_3))
(assert (= temp661_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp661_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_5 #x0000000000000000))
(assert (= var79914 temp661_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp661_6 #x0000000000000000))
(assert (= temp661_7 temp661_6))
(assert (= temp661_8 (select ARGNAME_padding_NAMEEND_VAL temp661_7)))
(assert (= temp661_9 #x0000000000000001))
(assert (= temp661_10 temp661_9))
(assert (= temp661_11 (select ARGNAME_padding_NAMEEND_VAL temp661_10)))
(assert (= temp661_12 #x0000000000000002))
(assert (= temp661_13 temp661_12))
(assert (= temp661_14 (select ARGNAME_padding_NAMEEND_VAL temp661_13)))
(assert (= temp661_15 #x0000000000000003))
(assert (= temp661_16 temp661_15))
(assert (= temp661_17 (select ARGNAME_padding_NAMEEND_VAL temp661_16)))
(assert (= temp661_18 #x0000000000000004))
(assert (= temp661_19 temp661_18))
(assert (= temp661_20 (select ARGNAME_padding_NAMEEND_VAL temp661_19)))
(assert (= temp661_21 #x0000000000000005))
(assert (= temp661_22 temp661_21))
(assert (= temp661_23 (select ARGNAME_padding_NAMEEND_VAL temp661_22)))
(assert (= temp661_24 #x0000000000000000))
(assert (= temp661_25 #x0000000000000000))
(assert (= temp661_26 temp661_25))
(assert (= temp661_27 (select ARGNAME_padding_NAMEEND_VAL temp661_26)))
(assert (= temp661_28 #x0000000000000000))
(assert (= temp661_29 #x0000000000000001))
(assert (= temp661_30 temp661_29))
(assert (= temp661_31 (select ARGNAME_padding_NAMEEND_VAL temp661_30)))
(assert (= temp661_32 #x0000000000000000))
(assert (= temp661_33 #x0000000000000002))
(assert (= temp661_34 temp661_33))
(assert (= temp661_35 (select ARGNAME_padding_NAMEEND_VAL temp661_34)))
(assert (= temp661_36 #x0000000000000000))
(assert (= temp661_37 #x0000000000000003))
(assert (= temp661_38 temp661_37))
(assert (= temp661_39 (select ARGNAME_padding_NAMEEND_VAL temp661_38)))
(assert (= temp661_40 #x0000000000000000))
(assert (= temp661_41 #x0000000000000004))
(assert (= temp661_42 temp661_41))
(assert (= temp661_43 (select ARGNAME_padding_NAMEEND_VAL temp661_42)))
(assert (= temp661_44 #x0000000000000000))
(assert (= temp661_45 #x0000000000000005))
(assert (= temp661_46 temp661_45))
(assert (= temp661_47 (select ARGNAME_padding_NAMEEND_VAL temp661_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp661_27 temp661_24)
             (bvslt temp661_31 temp661_28)
             (bvslt temp661_35 temp661_32)
             (bvslt temp661_39 temp661_36)
             (bvslt temp661_43 temp661_40)
             (bvslt temp661_47 temp661_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_48 #x0000000000000000))
(assert (= var1322786 temp661_48))
(assert (= temp661_49 #x0000000000000000))
(assert (= temp661_50 temp661_49))
(assert (= temp661_51 (select ARGNAME_output_padding_NAMEEND_VAL temp661_50)))
(assert (= temp661_52 #x0000000000000001))
(assert (= temp661_53 temp661_52))
(assert (= temp661_54 (select ARGNAME_output_padding_NAMEEND_VAL temp661_53)))
(assert (= temp661_55 #x0000000000000002))
(assert (= temp661_56 temp661_55))
(assert (= temp661_57 (select ARGNAME_output_padding_NAMEEND_VAL temp661_56)))
(assert (= temp661_58 #x0000000000000003))
(assert (= temp661_59 temp661_58))
(assert (= temp661_60 (select ARGNAME_output_padding_NAMEEND_VAL temp661_59)))
(assert (= temp661_61 #x0000000000000004))
(assert (= temp661_62 temp661_61))
(assert (= temp661_63 (select ARGNAME_output_padding_NAMEEND_VAL temp661_62)))
(assert (= temp661_64 #x0000000000000005))
(assert (= temp661_65 temp661_64))
(assert (= temp661_66 (select ARGNAME_output_padding_NAMEEND_VAL temp661_65)))
(assert (= temp661_67 #x0000000000000000))
(assert (= temp661_68 #x0000000000000000))
(assert (= temp661_69 temp661_68))
(assert (= temp661_70 (select ARGNAME_output_padding_NAMEEND_VAL temp661_69)))
(assert (= temp661_71 #x0000000000000000))
(assert (= temp661_72 #x0000000000000001))
(assert (= temp661_73 temp661_72))
(assert (= temp661_74 (select ARGNAME_output_padding_NAMEEND_VAL temp661_73)))
(assert (= temp661_75 #x0000000000000000))
(assert (= temp661_76 #x0000000000000002))
(assert (= temp661_77 temp661_76))
(assert (= temp661_78 (select ARGNAME_output_padding_NAMEEND_VAL temp661_77)))
(assert (= temp661_79 #x0000000000000000))
(assert (= temp661_80 #x0000000000000003))
(assert (= temp661_81 temp661_80))
(assert (= temp661_82 (select ARGNAME_output_padding_NAMEEND_VAL temp661_81)))
(assert (= temp661_83 #x0000000000000000))
(assert (= temp661_84 #x0000000000000004))
(assert (= temp661_85 temp661_84))
(assert (= temp661_86 (select ARGNAME_output_padding_NAMEEND_VAL temp661_85)))
(assert (= temp661_87 #x0000000000000000))
(assert (= temp661_88 #x0000000000000005))
(assert (= temp661_89 temp661_88))
(assert (= temp661_90 (select ARGNAME_output_padding_NAMEEND_VAL temp661_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp661_70 temp661_67)
             (bvslt temp661_74 temp661_71)
             (bvslt temp661_78 temp661_75)
             (bvslt temp661_82 temp661_79)
             (bvslt temp661_86 temp661_83)
             (bvslt temp661_90 temp661_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_91 #x0000000000000000))
(assert (= var1322797 temp661_91))
(assert (= temp661_92 #x0000000000000000))
(assert (= temp661_93 temp661_92))
(assert (= temp661_94 (select ARGNAME_stride_NAMEEND_VAL temp661_93)))
(assert (= temp661_95 #x0000000000000001))
(assert (= temp661_96 temp661_95))
(assert (= temp661_97 (select ARGNAME_stride_NAMEEND_VAL temp661_96)))
(assert (= temp661_98 #x0000000000000002))
(assert (= temp661_99 temp661_98))
(assert (= temp661_100 (select ARGNAME_stride_NAMEEND_VAL temp661_99)))
(assert (= temp661_101 #x0000000000000003))
(assert (= temp661_102 temp661_101))
(assert (= temp661_103 (select ARGNAME_stride_NAMEEND_VAL temp661_102)))
(assert (= temp661_104 #x0000000000000004))
(assert (= temp661_105 temp661_104))
(assert (= temp661_106 (select ARGNAME_stride_NAMEEND_VAL temp661_105)))
(assert (= temp661_107 #x0000000000000005))
(assert (= temp661_108 temp661_107))
(assert (= temp661_109 (select ARGNAME_stride_NAMEEND_VAL temp661_108)))
(assert (= temp661_110 #x0000000000000000))
(assert (= temp661_111 #x0000000000000000))
(assert (= temp661_112 temp661_111))
(assert (= temp661_113 (select ARGNAME_stride_NAMEEND_VAL temp661_112)))
(assert (= temp661_114 #x0000000000000000))
(assert (= temp661_115 #x0000000000000001))
(assert (= temp661_116 temp661_115))
(assert (= temp661_117 (select ARGNAME_stride_NAMEEND_VAL temp661_116)))
(assert (= temp661_118 #x0000000000000000))
(assert (= temp661_119 #x0000000000000002))
(assert (= temp661_120 temp661_119))
(assert (= temp661_121 (select ARGNAME_stride_NAMEEND_VAL temp661_120)))
(assert (= temp661_122 #x0000000000000000))
(assert (= temp661_123 #x0000000000000003))
(assert (= temp661_124 temp661_123))
(assert (= temp661_125 (select ARGNAME_stride_NAMEEND_VAL temp661_124)))
(assert (= temp661_126 #x0000000000000000))
(assert (= temp661_127 #x0000000000000004))
(assert (= temp661_128 temp661_127))
(assert (= temp661_129 (select ARGNAME_stride_NAMEEND_VAL temp661_128)))
(assert (= temp661_130 #x0000000000000000))
(assert (= temp661_131 #x0000000000000005))
(assert (= temp661_132 temp661_131))
(assert (= temp661_133 (select ARGNAME_stride_NAMEEND_VAL temp661_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp661_113 temp661_110)
             (bvsle temp661_117 temp661_114)
             (bvsle temp661_121 temp661_118)
             (bvsle temp661_125 temp661_122)
             (bvsle temp661_129 temp661_126)
             (bvsle temp661_133 temp661_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_134 #x0000000000000000))
(assert (= var1322807 temp661_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_135 #x0000000000000001))
(assert (= var1322819 temp661_135))
(assert (= temp661_136 #x0000000000000000))
(assert (= var1310898 temp661_136))
(assert (= temp661_137 #x0000000000000000))
(assert (= temp661_138 temp661_137))
(assert (= temp661_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_138)))
(assert (= temp661_140 #x0000000000000001))
(assert (= temp661_141 temp661_140))
(assert (= temp661_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_141)))
(assert (= temp661_143 #x0000000000000002))
(assert (= temp661_144 temp661_143))
(assert (= temp661_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_144)))
(assert (= temp661_146 #x0000000000000003))
(assert (= temp661_147 temp661_146))
(assert (= temp661_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_147)))
(assert (= temp661_149 #x0000000000000004))
(assert (= temp661_150 temp661_149))
(assert (= temp661_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_150)))
(assert (= temp661_152 #x0000000000000005))
(assert (= temp661_153 temp661_152))
(assert (= temp661_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_153)))
(assert (= temp661_156 var1310898))
(assert (= temp661_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_156)))
(assert (= temp661_155 temp661_157))
(assert (= var1322852
   (ite (bvslt temp661_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_158 #x0000000000000000))
(assert (= var1322852 temp661_158))
(assert (= temp661_159 #x0000000000000000))
(assert (= var1310898 temp661_159))
(assert (= temp661_161 var1310898))
(assert (= temp661_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_161)))
(assert (= temp661_160 temp661_162))
(assert (= var1322874 (bvsmod temp661_160 ARGNAME_groups_NAMEEND)))
(assert (= temp661_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp661_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_164 #x0000000000000001))
(assert (= var1322875 temp661_164))
(assert (= temp661_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp661_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_166 #x0000000000000001))
(assert (= var1322895 temp661_166))
(assert (= temp661_167 #x0000000000000001))
(assert (= var1311786 temp661_167))
(assert (= temp661_168 #x0000000000000000))
(assert (= temp661_169 temp661_168))
(assert (= temp661_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_169)))
(assert (= temp661_171 #x0000000000000001))
(assert (= temp661_172 temp661_171))
(assert (= temp661_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_172)))
(assert (= temp661_174 #x0000000000000002))
(assert (= temp661_175 temp661_174))
(assert (= temp661_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_175)))
(assert (= temp661_177 #x0000000000000003))
(assert (= temp661_178 temp661_177))
(assert (= temp661_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_178)))
(assert (= temp661_180 #x0000000000000004))
(assert (= temp661_181 temp661_180))
(assert (= temp661_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_181)))
(assert (= temp661_183 #x0000000000000005))
(assert (= temp661_184 temp661_183))
(assert (= temp661_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_184)))
(assert (= temp661_186 #x0000000000000000))
(assert (= temp661_187
   (ite (bvslt var1311786 temp661_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp661_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_187)))
(assert (= var1322903 temp661_188))
(assert (bvslt (ite (bvslt var1311786 temp661_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp661_189 #x0000000000000001))
(assert (= var1311786 temp661_189))
(assert (= temp661_191 var1311786))
(assert (= temp661_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_191)))
(assert (= temp661_190 temp661_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp661_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_193 #x0000000000000001))
(assert (= var1322908 temp661_193))
(assert (= temp661_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp661_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_195 #x0000000000000001))
(assert (= var1322975 temp661_195))
(assert (= temp661_196 #x0000000000000000))
(assert (= var1310898 temp661_196))
(assert (= temp661_197 #x0000000000000000))
(assert (= temp661_198 temp661_197))
(assert (= temp661_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp661_198)))
(assert (= temp661_200 #x0000000000000001))
(assert (= temp661_201 temp661_200))
(assert (= temp661_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp661_201)))
(assert (= temp661_203 #x0000000000000002))
(assert (= temp661_204 temp661_203))
(assert (= temp661_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp661_204)))
(assert (= temp661_206 #x0000000000000003))
(assert (= temp661_207 temp661_206))
(assert (= temp661_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp661_207)))
(assert (= temp661_209 #x0000000000000004))
(assert (= temp661_210 temp661_209))
(assert (= temp661_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp661_210)))
(assert (= temp661_212 #x0000000000000005))
(assert (= temp661_213 temp661_212))
(assert (= temp661_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp661_213)))
(assert (= temp661_215 #x0000000000000000))
(assert (= temp661_216
   (ite (bvslt var1310898 temp661_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp661_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp661_216)))
(assert (= var1322977 temp661_217))
(assert (bvslt (ite (bvslt var1310898 temp661_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp661_218 #x0000000000000000))
(assert (= var1310898 temp661_218))
(assert (= temp661_220 var1310898))
(assert (= temp661_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_220)))
(assert (= temp661_219 temp661_221))
(assert (= var1322980
   (ite (= var1322977 temp661_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_222 #x0000000000000001))
(assert (= var1322980 temp661_222))
(assert (= temp661_223 #x0000000000000002))
(assert (= var1848169 temp661_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp661_225 #x0000000000000001))
(assert (= var1323065 temp661_225))
(assert (= temp661_226 #x0000000000000001))
(assert (= var3486735 temp661_226))
(assert (= temp661_227 #x0000000000000001))
(assert (= var3814415 temp661_227))
(assert (= temp661_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp661_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_229 #x0000000000000001))
(assert (= var79986 temp661_229))
(assert (= temp661_230 #x0000000000000001))
(assert (= var80116 temp661_230))
(assert (= var4796905 var80116))
(assert (= temp661_231 #x0000000000000000))
(assert (= var4784306 temp661_231))
(assert (= temp661_232 #x0000000000000000))
(assert (= temp661_233
   (ite (bvslt var4784306 temp661_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp661_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_233)))
(assert (= var4796924 temp661_234))
(assert (bvslt (ite (bvslt var4784306 temp661_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp661_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp661_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_236 #x0000000000000001))
(assert (= var4796925 temp661_236))
(assert (= temp661_237 #x0000000000000000))
(assert (= var4996927 temp661_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp661_238 #x0000000000000002))
(assert (= var5125763 temp661_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_239 #x0000000000000000))
(assert (= var5191324 temp661_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp661_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp661_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp661_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp661_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_244 #x0000000000000001))
(assert (= temp661_243 temp661_244))
(assert (= temp661_245 #x0000000000000001))
(assert (= var8326634 temp661_245))
(assert (= temp661_247 #xffffffffffffffff))
(assert (= temp661_246 temp661_247))
(assert (= temp661_248 #x0000000000000001))
(assert (= var79986 temp661_248))
(model-add temp661_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp661_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp661_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






