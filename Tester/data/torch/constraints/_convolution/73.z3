(declare-fun temp96_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp96_2 () (_ BitVec 64))
(declare-fun temp96_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp96_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp96_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp96_6 () (_ BitVec 64))
(declare-fun temp96_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_8 () (_ BitVec 64))
(declare-fun temp96_9 () (_ BitVec 64))
(declare-fun temp96_10 () (_ BitVec 64))
(declare-fun temp96_11 () (_ BitVec 64))
(declare-fun temp96_12 () (_ BitVec 64))
(declare-fun temp96_13 () (_ BitVec 64))
(declare-fun temp96_14 () (_ BitVec 64))
(declare-fun temp96_15 () (_ BitVec 64))
(declare-fun temp96_16 () (_ BitVec 64))
(declare-fun temp96_17 () (_ BitVec 64))
(declare-fun temp96_18 () (_ BitVec 64))
(declare-fun temp96_19 () (_ BitVec 64))
(declare-fun temp96_20 () (_ BitVec 64))
(declare-fun temp96_21 () (_ BitVec 64))
(declare-fun temp96_22 () (_ BitVec 64))
(declare-fun temp96_23 () (_ BitVec 64))
(declare-fun temp96_24 () (_ BitVec 64))
(declare-fun temp96_25 () (_ BitVec 64))
(declare-fun temp96_26 () (_ BitVec 64))
(declare-fun temp96_27 () (_ BitVec 64))
(declare-fun temp96_28 () (_ BitVec 64))
(declare-fun temp96_29 () (_ BitVec 64))
(declare-fun temp96_30 () (_ BitVec 64))
(declare-fun temp96_31 () (_ BitVec 64))
(declare-fun temp96_32 () (_ BitVec 64))
(declare-fun temp96_33 () (_ BitVec 64))
(declare-fun temp96_34 () (_ BitVec 64))
(declare-fun temp96_35 () (_ BitVec 64))
(declare-fun temp96_36 () (_ BitVec 64))
(declare-fun temp96_37 () (_ BitVec 64))
(declare-fun temp96_38 () (_ BitVec 64))
(declare-fun temp96_39 () (_ BitVec 64))
(declare-fun temp96_40 () (_ BitVec 64))
(declare-fun temp96_41 () (_ BitVec 64))
(declare-fun temp96_42 () (_ BitVec 64))
(declare-fun temp96_43 () (_ BitVec 64))
(declare-fun temp96_44 () (_ BitVec 64))
(declare-fun temp96_45 () (_ BitVec 64))
(declare-fun temp96_46 () (_ BitVec 64))
(declare-fun temp96_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp96_48 () (_ BitVec 64))
(declare-fun temp96_49 () (_ BitVec 64))
(declare-fun temp96_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_51 () (_ BitVec 64))
(declare-fun temp96_52 () (_ BitVec 64))
(declare-fun temp96_53 () (_ BitVec 64))
(declare-fun temp96_54 () (_ BitVec 64))
(declare-fun temp96_55 () (_ BitVec 64))
(declare-fun temp96_56 () (_ BitVec 64))
(declare-fun temp96_57 () (_ BitVec 64))
(declare-fun temp96_58 () (_ BitVec 64))
(declare-fun temp96_59 () (_ BitVec 64))
(declare-fun temp96_60 () (_ BitVec 64))
(declare-fun temp96_61 () (_ BitVec 64))
(declare-fun temp96_62 () (_ BitVec 64))
(declare-fun temp96_63 () (_ BitVec 64))
(declare-fun temp96_64 () (_ BitVec 64))
(declare-fun temp96_65 () (_ BitVec 64))
(declare-fun temp96_66 () (_ BitVec 64))
(declare-fun temp96_67 () (_ BitVec 64))
(declare-fun temp96_68 () (_ BitVec 64))
(declare-fun temp96_69 () (_ BitVec 64))
(declare-fun temp96_70 () (_ BitVec 64))
(declare-fun temp96_71 () (_ BitVec 64))
(declare-fun temp96_72 () (_ BitVec 64))
(declare-fun temp96_73 () (_ BitVec 64))
(declare-fun temp96_74 () (_ BitVec 64))
(declare-fun temp96_75 () (_ BitVec 64))
(declare-fun temp96_76 () (_ BitVec 64))
(declare-fun temp96_77 () (_ BitVec 64))
(declare-fun temp96_78 () (_ BitVec 64))
(declare-fun temp96_79 () (_ BitVec 64))
(declare-fun temp96_80 () (_ BitVec 64))
(declare-fun temp96_81 () (_ BitVec 64))
(declare-fun temp96_82 () (_ BitVec 64))
(declare-fun temp96_83 () (_ BitVec 64))
(declare-fun temp96_84 () (_ BitVec 64))
(declare-fun temp96_85 () (_ BitVec 64))
(declare-fun temp96_86 () (_ BitVec 64))
(declare-fun temp96_87 () (_ BitVec 64))
(declare-fun temp96_88 () (_ BitVec 64))
(declare-fun temp96_89 () (_ BitVec 64))
(declare-fun temp96_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp96_91 () (_ BitVec 64))
(declare-fun temp96_92 () (_ BitVec 64))
(declare-fun temp96_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_94 () (_ BitVec 64))
(declare-fun temp96_95 () (_ BitVec 64))
(declare-fun temp96_96 () (_ BitVec 64))
(declare-fun temp96_97 () (_ BitVec 64))
(declare-fun temp96_98 () (_ BitVec 64))
(declare-fun temp96_99 () (_ BitVec 64))
(declare-fun temp96_100 () (_ BitVec 64))
(declare-fun temp96_101 () (_ BitVec 64))
(declare-fun temp96_102 () (_ BitVec 64))
(declare-fun temp96_103 () (_ BitVec 64))
(declare-fun temp96_104 () (_ BitVec 64))
(declare-fun temp96_105 () (_ BitVec 64))
(declare-fun temp96_106 () (_ BitVec 64))
(declare-fun temp96_107 () (_ BitVec 64))
(declare-fun temp96_108 () (_ BitVec 64))
(declare-fun temp96_109 () (_ BitVec 64))
(declare-fun temp96_110 () (_ BitVec 64))
(declare-fun temp96_111 () (_ BitVec 64))
(declare-fun temp96_112 () (_ BitVec 64))
(declare-fun temp96_113 () (_ BitVec 64))
(declare-fun temp96_114 () (_ BitVec 64))
(declare-fun temp96_115 () (_ BitVec 64))
(declare-fun temp96_116 () (_ BitVec 64))
(declare-fun temp96_117 () (_ BitVec 64))
(declare-fun temp96_118 () (_ BitVec 64))
(declare-fun temp96_119 () (_ BitVec 64))
(declare-fun temp96_120 () (_ BitVec 64))
(declare-fun temp96_121 () (_ BitVec 64))
(declare-fun temp96_122 () (_ BitVec 64))
(declare-fun temp96_123 () (_ BitVec 64))
(declare-fun temp96_124 () (_ BitVec 64))
(declare-fun temp96_125 () (_ BitVec 64))
(declare-fun temp96_126 () (_ BitVec 64))
(declare-fun temp96_127 () (_ BitVec 64))
(declare-fun temp96_128 () (_ BitVec 64))
(declare-fun temp96_129 () (_ BitVec 64))
(declare-fun temp96_130 () (_ BitVec 64))
(declare-fun temp96_131 () (_ BitVec 64))
(declare-fun temp96_132 () (_ BitVec 64))
(declare-fun temp96_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp96_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp96_135 () (_ BitVec 64))
(declare-fun temp96_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp96_137 () (_ BitVec 64))
(declare-fun temp96_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_139 () (_ BitVec 64))
(declare-fun temp96_140 () (_ BitVec 64))
(declare-fun temp96_141 () (_ BitVec 64))
(declare-fun temp96_142 () (_ BitVec 64))
(declare-fun temp96_143 () (_ BitVec 64))
(declare-fun temp96_144 () (_ BitVec 64))
(declare-fun temp96_145 () (_ BitVec 64))
(declare-fun temp96_146 () (_ BitVec 64))
(declare-fun temp96_147 () (_ BitVec 64))
(declare-fun temp96_148 () (_ BitVec 64))
(declare-fun temp96_149 () (_ BitVec 64))
(declare-fun temp96_150 () (_ BitVec 64))
(declare-fun temp96_151 () (_ BitVec 64))
(declare-fun temp96_152 () (_ BitVec 64))
(declare-fun temp96_153 () (_ BitVec 64))
(declare-fun temp96_154 () (_ BitVec 64))
(declare-fun temp96_156 () (_ BitVec 64))
(declare-fun temp96_157 () (_ BitVec 64))
(declare-fun temp96_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp96_158 () (_ BitVec 64))
(declare-fun temp96_159 () (_ BitVec 64))
(declare-fun temp96_161 () (_ BitVec 64))
(declare-fun temp96_162 () (_ BitVec 64))
(declare-fun temp96_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp96_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp96_164 () (_ BitVec 64))
(declare-fun temp96_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp96_166 () (_ BitVec 64))
(declare-fun temp96_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp96_168 () (_ BitVec 64))
(declare-fun temp96_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_170 () (_ BitVec 64))
(declare-fun temp96_171 () (_ BitVec 64))
(declare-fun temp96_172 () (_ BitVec 64))
(declare-fun temp96_173 () (_ BitVec 64))
(declare-fun temp96_174 () (_ BitVec 64))
(declare-fun temp96_175 () (_ BitVec 64))
(declare-fun temp96_176 () (_ BitVec 64))
(declare-fun temp96_177 () (_ BitVec 64))
(declare-fun temp96_178 () (_ BitVec 64))
(declare-fun temp96_179 () (_ BitVec 64))
(declare-fun temp96_180 () (_ BitVec 64))
(declare-fun temp96_181 () (_ BitVec 64))
(declare-fun temp96_182 () (_ BitVec 64))
(declare-fun temp96_183 () (_ BitVec 64))
(declare-fun temp96_184 () (_ BitVec 64))
(declare-fun temp96_185 () (_ BitVec 64))
(declare-fun temp96_186 () (_ BitVec 64))
(declare-fun temp96_187 () (_ BitVec 64))
(declare-fun temp96_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp96_189 () (_ BitVec 64))
(declare-fun temp96_191 () (_ BitVec 64))
(declare-fun temp96_192 () (_ BitVec 64))
(declare-fun temp96_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp96_193 () (_ BitVec 64))
(declare-fun temp96_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp96_195 () (_ BitVec 64))
(declare-fun temp96_196 () (_ BitVec 64))
(declare-fun temp96_197 () (_ BitVec 64))
(declare-fun temp96_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_199 () (_ BitVec 64))
(declare-fun temp96_200 () (_ BitVec 64))
(declare-fun temp96_201 () (_ BitVec 64))
(declare-fun temp96_202 () (_ BitVec 64))
(declare-fun temp96_203 () (_ BitVec 64))
(declare-fun temp96_204 () (_ BitVec 64))
(declare-fun temp96_205 () (_ BitVec 64))
(declare-fun temp96_206 () (_ BitVec 64))
(declare-fun temp96_207 () (_ BitVec 64))
(declare-fun temp96_208 () (_ BitVec 64))
(declare-fun temp96_209 () (_ BitVec 64))
(declare-fun temp96_210 () (_ BitVec 64))
(declare-fun temp96_211 () (_ BitVec 64))
(declare-fun temp96_212 () (_ BitVec 64))
(declare-fun temp96_213 () (_ BitVec 64))
(declare-fun temp96_214 () (_ BitVec 64))
(declare-fun temp96_215 () (_ BitVec 64))
(declare-fun temp96_216 () (_ BitVec 64))
(declare-fun temp96_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp96_218 () (_ BitVec 64))
(declare-fun temp96_220 () (_ BitVec 64))
(declare-fun temp96_221 () (_ BitVec 64))
(declare-fun temp96_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp96_222 () (_ BitVec 64))
(declare-fun temp96_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp96_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp96_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp96_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp96_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp96_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp96_229 () (_ BitVec 64))
(declare-fun temp96_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp96_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp96_232 () (_ BitVec 64))
(declare-fun temp96_233 () (_ BitVec 64))
(declare-fun temp96_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp96_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp96_236 () (_ BitVec 64))
(declare-fun temp96_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp96_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp96_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp96_241 () (_ BitVec 64))
(declare-fun temp96_240 () (_ BitVec 64))
(declare-fun temp96_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp96_243 () (_ BitVec 64))
(declare-fun temp96_244 () (_ BitVec 64))
(declare-fun temp96_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp96_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp96_247 () (_ BitVec 64))
(declare-fun temp96_249 () (_ BitVec 64))
(declare-fun temp96_248 () (_ BitVec 64))
(declare-fun temp96_250 () (_ BitVec 64))
(declare-fun temp96_251 () (_ BitVec 64))
(declare-fun var6501140 () (_ BitVec 64))
(declare-fun var6501107 () (_ BitVec 64))
(declare-fun var6369671 () (_ BitVec 64))
(declare-fun var6369667 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp96_252 () (_ BitVec 64))
(assert (= temp96_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp96_1)))
(assert (= temp96_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp96_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_3 #x0000000000000000))
(assert (= var79869 temp96_3))
(assert (= temp96_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp96_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_5 #x0000000000000000))
(assert (= var79914 temp96_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp96_6 #x0000000000000000))
(assert (= temp96_7 temp96_6))
(assert (= temp96_8 (select ARGNAME_padding_NAMEEND_VAL temp96_7)))
(assert (= temp96_9 #x0000000000000001))
(assert (= temp96_10 temp96_9))
(assert (= temp96_11 (select ARGNAME_padding_NAMEEND_VAL temp96_10)))
(assert (= temp96_12 #x0000000000000002))
(assert (= temp96_13 temp96_12))
(assert (= temp96_14 (select ARGNAME_padding_NAMEEND_VAL temp96_13)))
(assert (= temp96_15 #x0000000000000003))
(assert (= temp96_16 temp96_15))
(assert (= temp96_17 (select ARGNAME_padding_NAMEEND_VAL temp96_16)))
(assert (= temp96_18 #x0000000000000004))
(assert (= temp96_19 temp96_18))
(assert (= temp96_20 (select ARGNAME_padding_NAMEEND_VAL temp96_19)))
(assert (= temp96_21 #x0000000000000005))
(assert (= temp96_22 temp96_21))
(assert (= temp96_23 (select ARGNAME_padding_NAMEEND_VAL temp96_22)))
(assert (= temp96_24 #x0000000000000000))
(assert (= temp96_25 #x0000000000000000))
(assert (= temp96_26 temp96_25))
(assert (= temp96_27 (select ARGNAME_padding_NAMEEND_VAL temp96_26)))
(assert (= temp96_28 #x0000000000000000))
(assert (= temp96_29 #x0000000000000001))
(assert (= temp96_30 temp96_29))
(assert (= temp96_31 (select ARGNAME_padding_NAMEEND_VAL temp96_30)))
(assert (= temp96_32 #x0000000000000000))
(assert (= temp96_33 #x0000000000000002))
(assert (= temp96_34 temp96_33))
(assert (= temp96_35 (select ARGNAME_padding_NAMEEND_VAL temp96_34)))
(assert (= temp96_36 #x0000000000000000))
(assert (= temp96_37 #x0000000000000003))
(assert (= temp96_38 temp96_37))
(assert (= temp96_39 (select ARGNAME_padding_NAMEEND_VAL temp96_38)))
(assert (= temp96_40 #x0000000000000000))
(assert (= temp96_41 #x0000000000000004))
(assert (= temp96_42 temp96_41))
(assert (= temp96_43 (select ARGNAME_padding_NAMEEND_VAL temp96_42)))
(assert (= temp96_44 #x0000000000000000))
(assert (= temp96_45 #x0000000000000005))
(assert (= temp96_46 temp96_45))
(assert (= temp96_47 (select ARGNAME_padding_NAMEEND_VAL temp96_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp96_27 temp96_24)
             (bvslt temp96_31 temp96_28)
             (bvslt temp96_35 temp96_32)
             (bvslt temp96_39 temp96_36)
             (bvslt temp96_43 temp96_40)
             (bvslt temp96_47 temp96_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_48 #x0000000000000000))
(assert (= var1322786 temp96_48))
(assert (= temp96_49 #x0000000000000000))
(assert (= temp96_50 temp96_49))
(assert (= temp96_51 (select ARGNAME_output_padding_NAMEEND_VAL temp96_50)))
(assert (= temp96_52 #x0000000000000001))
(assert (= temp96_53 temp96_52))
(assert (= temp96_54 (select ARGNAME_output_padding_NAMEEND_VAL temp96_53)))
(assert (= temp96_55 #x0000000000000002))
(assert (= temp96_56 temp96_55))
(assert (= temp96_57 (select ARGNAME_output_padding_NAMEEND_VAL temp96_56)))
(assert (= temp96_58 #x0000000000000003))
(assert (= temp96_59 temp96_58))
(assert (= temp96_60 (select ARGNAME_output_padding_NAMEEND_VAL temp96_59)))
(assert (= temp96_61 #x0000000000000004))
(assert (= temp96_62 temp96_61))
(assert (= temp96_63 (select ARGNAME_output_padding_NAMEEND_VAL temp96_62)))
(assert (= temp96_64 #x0000000000000005))
(assert (= temp96_65 temp96_64))
(assert (= temp96_66 (select ARGNAME_output_padding_NAMEEND_VAL temp96_65)))
(assert (= temp96_67 #x0000000000000000))
(assert (= temp96_68 #x0000000000000000))
(assert (= temp96_69 temp96_68))
(assert (= temp96_70 (select ARGNAME_output_padding_NAMEEND_VAL temp96_69)))
(assert (= temp96_71 #x0000000000000000))
(assert (= temp96_72 #x0000000000000001))
(assert (= temp96_73 temp96_72))
(assert (= temp96_74 (select ARGNAME_output_padding_NAMEEND_VAL temp96_73)))
(assert (= temp96_75 #x0000000000000000))
(assert (= temp96_76 #x0000000000000002))
(assert (= temp96_77 temp96_76))
(assert (= temp96_78 (select ARGNAME_output_padding_NAMEEND_VAL temp96_77)))
(assert (= temp96_79 #x0000000000000000))
(assert (= temp96_80 #x0000000000000003))
(assert (= temp96_81 temp96_80))
(assert (= temp96_82 (select ARGNAME_output_padding_NAMEEND_VAL temp96_81)))
(assert (= temp96_83 #x0000000000000000))
(assert (= temp96_84 #x0000000000000004))
(assert (= temp96_85 temp96_84))
(assert (= temp96_86 (select ARGNAME_output_padding_NAMEEND_VAL temp96_85)))
(assert (= temp96_87 #x0000000000000000))
(assert (= temp96_88 #x0000000000000005))
(assert (= temp96_89 temp96_88))
(assert (= temp96_90 (select ARGNAME_output_padding_NAMEEND_VAL temp96_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp96_70 temp96_67)
             (bvslt temp96_74 temp96_71)
             (bvslt temp96_78 temp96_75)
             (bvslt temp96_82 temp96_79)
             (bvslt temp96_86 temp96_83)
             (bvslt temp96_90 temp96_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_91 #x0000000000000000))
(assert (= var1322797 temp96_91))
(assert (= temp96_92 #x0000000000000000))
(assert (= temp96_93 temp96_92))
(assert (= temp96_94 (select ARGNAME_stride_NAMEEND_VAL temp96_93)))
(assert (= temp96_95 #x0000000000000001))
(assert (= temp96_96 temp96_95))
(assert (= temp96_97 (select ARGNAME_stride_NAMEEND_VAL temp96_96)))
(assert (= temp96_98 #x0000000000000002))
(assert (= temp96_99 temp96_98))
(assert (= temp96_100 (select ARGNAME_stride_NAMEEND_VAL temp96_99)))
(assert (= temp96_101 #x0000000000000003))
(assert (= temp96_102 temp96_101))
(assert (= temp96_103 (select ARGNAME_stride_NAMEEND_VAL temp96_102)))
(assert (= temp96_104 #x0000000000000004))
(assert (= temp96_105 temp96_104))
(assert (= temp96_106 (select ARGNAME_stride_NAMEEND_VAL temp96_105)))
(assert (= temp96_107 #x0000000000000005))
(assert (= temp96_108 temp96_107))
(assert (= temp96_109 (select ARGNAME_stride_NAMEEND_VAL temp96_108)))
(assert (= temp96_110 #x0000000000000000))
(assert (= temp96_111 #x0000000000000000))
(assert (= temp96_112 temp96_111))
(assert (= temp96_113 (select ARGNAME_stride_NAMEEND_VAL temp96_112)))
(assert (= temp96_114 #x0000000000000000))
(assert (= temp96_115 #x0000000000000001))
(assert (= temp96_116 temp96_115))
(assert (= temp96_117 (select ARGNAME_stride_NAMEEND_VAL temp96_116)))
(assert (= temp96_118 #x0000000000000000))
(assert (= temp96_119 #x0000000000000002))
(assert (= temp96_120 temp96_119))
(assert (= temp96_121 (select ARGNAME_stride_NAMEEND_VAL temp96_120)))
(assert (= temp96_122 #x0000000000000000))
(assert (= temp96_123 #x0000000000000003))
(assert (= temp96_124 temp96_123))
(assert (= temp96_125 (select ARGNAME_stride_NAMEEND_VAL temp96_124)))
(assert (= temp96_126 #x0000000000000000))
(assert (= temp96_127 #x0000000000000004))
(assert (= temp96_128 temp96_127))
(assert (= temp96_129 (select ARGNAME_stride_NAMEEND_VAL temp96_128)))
(assert (= temp96_130 #x0000000000000000))
(assert (= temp96_131 #x0000000000000005))
(assert (= temp96_132 temp96_131))
(assert (= temp96_133 (select ARGNAME_stride_NAMEEND_VAL temp96_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp96_113 temp96_110)
             (bvsle temp96_117 temp96_114)
             (bvsle temp96_121 temp96_118)
             (bvsle temp96_125 temp96_122)
             (bvsle temp96_129 temp96_126)
             (bvsle temp96_133 temp96_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_134 #x0000000000000000))
(assert (= var1322807 temp96_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_135 #x0000000000000001))
(assert (= var1322819 temp96_135))
(assert (= temp96_136 #x0000000000000000))
(assert (= var1310898 temp96_136))
(assert (= temp96_137 #x0000000000000000))
(assert (= temp96_138 temp96_137))
(assert (= temp96_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_138)))
(assert (= temp96_140 #x0000000000000001))
(assert (= temp96_141 temp96_140))
(assert (= temp96_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_141)))
(assert (= temp96_143 #x0000000000000002))
(assert (= temp96_144 temp96_143))
(assert (= temp96_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_144)))
(assert (= temp96_146 #x0000000000000003))
(assert (= temp96_147 temp96_146))
(assert (= temp96_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_147)))
(assert (= temp96_149 #x0000000000000004))
(assert (= temp96_150 temp96_149))
(assert (= temp96_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_150)))
(assert (= temp96_152 #x0000000000000005))
(assert (= temp96_153 temp96_152))
(assert (= temp96_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_153)))
(assert (= temp96_156 var1310898))
(assert (= temp96_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_156)))
(assert (= temp96_155 temp96_157))
(assert (= var1322852
   (ite (bvslt temp96_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_158 #x0000000000000000))
(assert (= var1322852 temp96_158))
(assert (= temp96_159 #x0000000000000000))
(assert (= var1310898 temp96_159))
(assert (= temp96_161 var1310898))
(assert (= temp96_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_161)))
(assert (= temp96_160 temp96_162))
(assert (= var1322874 (bvsmod temp96_160 ARGNAME_groups_NAMEEND)))
(assert (= temp96_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp96_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_164 #x0000000000000001))
(assert (= var1322875 temp96_164))
(assert (= temp96_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp96_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_166 #x0000000000000001))
(assert (= var1322895 temp96_166))
(assert (= temp96_167 #x0000000000000001))
(assert (= var1311786 temp96_167))
(assert (= temp96_168 #x0000000000000000))
(assert (= temp96_169 temp96_168))
(assert (= temp96_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_169)))
(assert (= temp96_171 #x0000000000000001))
(assert (= temp96_172 temp96_171))
(assert (= temp96_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_172)))
(assert (= temp96_174 #x0000000000000002))
(assert (= temp96_175 temp96_174))
(assert (= temp96_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_175)))
(assert (= temp96_177 #x0000000000000003))
(assert (= temp96_178 temp96_177))
(assert (= temp96_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_178)))
(assert (= temp96_180 #x0000000000000004))
(assert (= temp96_181 temp96_180))
(assert (= temp96_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_181)))
(assert (= temp96_183 #x0000000000000005))
(assert (= temp96_184 temp96_183))
(assert (= temp96_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_184)))
(assert (= temp96_186 #x0000000000000000))
(assert (= temp96_187
   (ite (bvslt var1311786 temp96_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp96_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_187)))
(assert (= var1322903 temp96_188))
(assert (bvslt (ite (bvslt var1311786 temp96_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp96_189 #x0000000000000001))
(assert (= var1311786 temp96_189))
(assert (= temp96_191 var1311786))
(assert (= temp96_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_191)))
(assert (= temp96_190 temp96_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp96_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_193 #x0000000000000001))
(assert (= var1322908 temp96_193))
(assert (= temp96_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp96_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_195 #x0000000000000001))
(assert (= var1322975 temp96_195))
(assert (= temp96_196 #x0000000000000000))
(assert (= var1310898 temp96_196))
(assert (= temp96_197 #x0000000000000000))
(assert (= temp96_198 temp96_197))
(assert (= temp96_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp96_198)))
(assert (= temp96_200 #x0000000000000001))
(assert (= temp96_201 temp96_200))
(assert (= temp96_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp96_201)))
(assert (= temp96_203 #x0000000000000002))
(assert (= temp96_204 temp96_203))
(assert (= temp96_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp96_204)))
(assert (= temp96_206 #x0000000000000003))
(assert (= temp96_207 temp96_206))
(assert (= temp96_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp96_207)))
(assert (= temp96_209 #x0000000000000004))
(assert (= temp96_210 temp96_209))
(assert (= temp96_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp96_210)))
(assert (= temp96_212 #x0000000000000005))
(assert (= temp96_213 temp96_212))
(assert (= temp96_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp96_213)))
(assert (= temp96_215 #x0000000000000000))
(assert (= temp96_216
   (ite (bvslt var1310898 temp96_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp96_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp96_216)))
(assert (= var1322977 temp96_217))
(assert (bvslt (ite (bvslt var1310898 temp96_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp96_218 #x0000000000000000))
(assert (= var1310898 temp96_218))
(assert (= temp96_220 var1310898))
(assert (= temp96_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_220)))
(assert (= temp96_219 temp96_221))
(assert (= var1322980
   (ite (= var1322977 temp96_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_222 #x0000000000000001))
(assert (= var1322980 temp96_222))
(assert (= temp96_223 #x0000000000000002))
(assert (= var1848169 temp96_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp96_225 #x0000000000000001))
(assert (= var1323065 temp96_225))
(assert (= temp96_226 #x0000000000000001))
(assert (= var3486735 temp96_226))
(assert (= temp96_227 #x0000000000000001))
(assert (= var3814415 temp96_227))
(assert (= temp96_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp96_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_229 #x0000000000000001))
(assert (= var79986 temp96_229))
(assert (= temp96_230 #x0000000000000001))
(assert (= var80116 temp96_230))
(assert (= var4796905 var80116))
(assert (= temp96_231 #x0000000000000000))
(assert (= var4784306 temp96_231))
(assert (= temp96_232 #x0000000000000000))
(assert (= temp96_233
   (ite (bvslt var4784306 temp96_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp96_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_233)))
(assert (= var4796924 temp96_234))
(assert (bvslt (ite (bvslt var4784306 temp96_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp96_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp96_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_236 #x0000000000000001))
(assert (= var4796925 temp96_236))
(assert (= temp96_237 #x0000000000000000))
(assert (= var4996927 temp96_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp96_238 #x0000000000000002))
(assert (= var5125763 temp96_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_239 #x0000000000000000))
(assert (= var5191324 temp96_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp96_241 #xffffffffffffffff))
(assert (= temp96_240 temp96_241))
(assert (= temp96_242 #x0000000000000001))
(assert (= var66602 temp96_242))
(assert (= temp96_243 #x0000000000000000))
(assert (= temp96_244
   (ite (bvslt var66602 temp96_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp96_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_244)))
(assert (= var80523 temp96_245))
(assert (bvslt (ite (bvslt var66602 temp96_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp96_246 #x0000000000000000))
(assert (= var80524 (ite (= var80523 temp96_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_247 #x0000000000000001))
(assert (= var80524 temp96_247))
(assert (= temp96_249 #xffffffffffffffff))
(assert (= temp96_248 temp96_249))
(assert (= temp96_250 #x0000000000000001))
(assert (= var79986 temp96_250))
(assert (= temp96_251 #x0000000000000000))
(assert (= var6501140 temp96_251))
(assert (= var6501107 var6501140))
(assert (= var6369671 var6501107))
(assert (= var6369667 var6369671))
(assert (= var81597 var6369667))
(assert (= temp96_252 #x0000000000000000))
(assert (= var81597 temp96_252))
(model-add temp96_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp96_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp96_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






