(declare-fun temp744_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp744_2 () (_ BitVec 64))
(declare-fun temp744_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp744_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp744_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp744_6 () (_ BitVec 64))
(declare-fun temp744_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp744_8 () (_ BitVec 64))
(declare-fun temp744_9 () (_ BitVec 64))
(declare-fun temp744_10 () (_ BitVec 64))
(declare-fun temp744_11 () (_ BitVec 64))
(declare-fun temp744_12 () (_ BitVec 64))
(declare-fun temp744_13 () (_ BitVec 64))
(declare-fun temp744_14 () (_ BitVec 64))
(declare-fun temp744_15 () (_ BitVec 64))
(declare-fun temp744_16 () (_ BitVec 64))
(declare-fun temp744_17 () (_ BitVec 64))
(declare-fun temp744_18 () (_ BitVec 64))
(declare-fun temp744_19 () (_ BitVec 64))
(declare-fun temp744_20 () (_ BitVec 64))
(declare-fun temp744_21 () (_ BitVec 64))
(declare-fun temp744_22 () (_ BitVec 64))
(declare-fun temp744_23 () (_ BitVec 64))
(declare-fun temp744_24 () (_ BitVec 64))
(declare-fun temp744_25 () (_ BitVec 64))
(declare-fun temp744_26 () (_ BitVec 64))
(declare-fun temp744_27 () (_ BitVec 64))
(declare-fun temp744_28 () (_ BitVec 64))
(declare-fun temp744_29 () (_ BitVec 64))
(declare-fun temp744_30 () (_ BitVec 64))
(declare-fun temp744_31 () (_ BitVec 64))
(declare-fun temp744_32 () (_ BitVec 64))
(declare-fun temp744_33 () (_ BitVec 64))
(declare-fun temp744_34 () (_ BitVec 64))
(declare-fun temp744_35 () (_ BitVec 64))
(declare-fun temp744_36 () (_ BitVec 64))
(declare-fun temp744_37 () (_ BitVec 64))
(declare-fun temp744_38 () (_ BitVec 64))
(declare-fun temp744_39 () (_ BitVec 64))
(declare-fun temp744_40 () (_ BitVec 64))
(declare-fun temp744_41 () (_ BitVec 64))
(declare-fun temp744_42 () (_ BitVec 64))
(declare-fun temp744_43 () (_ BitVec 64))
(declare-fun temp744_44 () (_ BitVec 64))
(declare-fun temp744_45 () (_ BitVec 64))
(declare-fun temp744_46 () (_ BitVec 64))
(declare-fun temp744_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp744_48 () (_ BitVec 64))
(declare-fun temp744_49 () (_ BitVec 64))
(declare-fun temp744_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp744_51 () (_ BitVec 64))
(declare-fun temp744_52 () (_ BitVec 64))
(declare-fun temp744_53 () (_ BitVec 64))
(declare-fun temp744_54 () (_ BitVec 64))
(declare-fun temp744_55 () (_ BitVec 64))
(declare-fun temp744_56 () (_ BitVec 64))
(declare-fun temp744_57 () (_ BitVec 64))
(declare-fun temp744_58 () (_ BitVec 64))
(declare-fun temp744_59 () (_ BitVec 64))
(declare-fun temp744_60 () (_ BitVec 64))
(declare-fun temp744_61 () (_ BitVec 64))
(declare-fun temp744_62 () (_ BitVec 64))
(declare-fun temp744_63 () (_ BitVec 64))
(declare-fun temp744_64 () (_ BitVec 64))
(declare-fun temp744_65 () (_ BitVec 64))
(declare-fun temp744_66 () (_ BitVec 64))
(declare-fun temp744_67 () (_ BitVec 64))
(declare-fun temp744_68 () (_ BitVec 64))
(declare-fun temp744_69 () (_ BitVec 64))
(declare-fun temp744_70 () (_ BitVec 64))
(declare-fun temp744_71 () (_ BitVec 64))
(declare-fun temp744_72 () (_ BitVec 64))
(declare-fun temp744_73 () (_ BitVec 64))
(declare-fun temp744_74 () (_ BitVec 64))
(declare-fun temp744_75 () (_ BitVec 64))
(declare-fun temp744_76 () (_ BitVec 64))
(declare-fun temp744_77 () (_ BitVec 64))
(declare-fun temp744_78 () (_ BitVec 64))
(declare-fun temp744_79 () (_ BitVec 64))
(declare-fun temp744_80 () (_ BitVec 64))
(declare-fun temp744_81 () (_ BitVec 64))
(declare-fun temp744_82 () (_ BitVec 64))
(declare-fun temp744_83 () (_ BitVec 64))
(declare-fun temp744_84 () (_ BitVec 64))
(declare-fun temp744_85 () (_ BitVec 64))
(declare-fun temp744_86 () (_ BitVec 64))
(declare-fun temp744_87 () (_ BitVec 64))
(declare-fun temp744_88 () (_ BitVec 64))
(declare-fun temp744_89 () (_ BitVec 64))
(declare-fun temp744_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp744_91 () (_ BitVec 64))
(declare-fun temp744_92 () (_ BitVec 64))
(declare-fun temp744_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp744_94 () (_ BitVec 64))
(declare-fun temp744_95 () (_ BitVec 64))
(declare-fun temp744_96 () (_ BitVec 64))
(declare-fun temp744_97 () (_ BitVec 64))
(declare-fun temp744_98 () (_ BitVec 64))
(declare-fun temp744_99 () (_ BitVec 64))
(declare-fun temp744_100 () (_ BitVec 64))
(declare-fun temp744_101 () (_ BitVec 64))
(declare-fun temp744_102 () (_ BitVec 64))
(declare-fun temp744_103 () (_ BitVec 64))
(declare-fun temp744_104 () (_ BitVec 64))
(declare-fun temp744_105 () (_ BitVec 64))
(declare-fun temp744_106 () (_ BitVec 64))
(declare-fun temp744_107 () (_ BitVec 64))
(declare-fun temp744_108 () (_ BitVec 64))
(declare-fun temp744_109 () (_ BitVec 64))
(declare-fun temp744_110 () (_ BitVec 64))
(declare-fun temp744_111 () (_ BitVec 64))
(declare-fun temp744_112 () (_ BitVec 64))
(declare-fun temp744_113 () (_ BitVec 64))
(declare-fun temp744_114 () (_ BitVec 64))
(declare-fun temp744_115 () (_ BitVec 64))
(declare-fun temp744_116 () (_ BitVec 64))
(declare-fun temp744_117 () (_ BitVec 64))
(declare-fun temp744_118 () (_ BitVec 64))
(declare-fun temp744_119 () (_ BitVec 64))
(declare-fun temp744_120 () (_ BitVec 64))
(declare-fun temp744_121 () (_ BitVec 64))
(declare-fun temp744_122 () (_ BitVec 64))
(declare-fun temp744_123 () (_ BitVec 64))
(declare-fun temp744_124 () (_ BitVec 64))
(declare-fun temp744_125 () (_ BitVec 64))
(declare-fun temp744_126 () (_ BitVec 64))
(declare-fun temp744_127 () (_ BitVec 64))
(declare-fun temp744_128 () (_ BitVec 64))
(declare-fun temp744_129 () (_ BitVec 64))
(declare-fun temp744_130 () (_ BitVec 64))
(declare-fun temp744_131 () (_ BitVec 64))
(declare-fun temp744_132 () (_ BitVec 64))
(declare-fun temp744_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp744_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp744_135 () (_ BitVec 64))
(declare-fun temp744_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp744_137 () (_ BitVec 64))
(declare-fun temp744_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp744_139 () (_ BitVec 64))
(declare-fun temp744_140 () (_ BitVec 64))
(declare-fun temp744_141 () (_ BitVec 64))
(declare-fun temp744_142 () (_ BitVec 64))
(declare-fun temp744_143 () (_ BitVec 64))
(declare-fun temp744_144 () (_ BitVec 64))
(declare-fun temp744_145 () (_ BitVec 64))
(declare-fun temp744_146 () (_ BitVec 64))
(declare-fun temp744_147 () (_ BitVec 64))
(declare-fun temp744_148 () (_ BitVec 64))
(declare-fun temp744_149 () (_ BitVec 64))
(declare-fun temp744_150 () (_ BitVec 64))
(declare-fun temp744_151 () (_ BitVec 64))
(declare-fun temp744_152 () (_ BitVec 64))
(declare-fun temp744_153 () (_ BitVec 64))
(declare-fun temp744_154 () (_ BitVec 64))
(declare-fun temp744_156 () (_ BitVec 64))
(declare-fun temp744_157 () (_ BitVec 64))
(declare-fun temp744_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp744_158 () (_ BitVec 64))
(declare-fun temp744_159 () (_ BitVec 64))
(declare-fun temp744_161 () (_ BitVec 64))
(declare-fun temp744_162 () (_ BitVec 64))
(declare-fun temp744_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp744_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp744_164 () (_ BitVec 64))
(declare-fun temp744_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp744_166 () (_ BitVec 64))
(declare-fun temp744_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp744_168 () (_ BitVec 64))
(declare-fun temp744_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp744_170 () (_ BitVec 64))
(declare-fun temp744_171 () (_ BitVec 64))
(declare-fun temp744_172 () (_ BitVec 64))
(declare-fun temp744_173 () (_ BitVec 64))
(declare-fun temp744_174 () (_ BitVec 64))
(declare-fun temp744_175 () (_ BitVec 64))
(declare-fun temp744_176 () (_ BitVec 64))
(declare-fun temp744_177 () (_ BitVec 64))
(declare-fun temp744_178 () (_ BitVec 64))
(declare-fun temp744_179 () (_ BitVec 64))
(declare-fun temp744_180 () (_ BitVec 64))
(declare-fun temp744_181 () (_ BitVec 64))
(declare-fun temp744_182 () (_ BitVec 64))
(declare-fun temp744_183 () (_ BitVec 64))
(declare-fun temp744_184 () (_ BitVec 64))
(declare-fun temp744_185 () (_ BitVec 64))
(declare-fun temp744_186 () (_ BitVec 64))
(declare-fun temp744_187 () (_ BitVec 64))
(declare-fun temp744_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp744_189 () (_ BitVec 64))
(declare-fun temp744_191 () (_ BitVec 64))
(declare-fun temp744_192 () (_ BitVec 64))
(declare-fun temp744_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp744_193 () (_ BitVec 64))
(declare-fun temp744_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp744_195 () (_ BitVec 64))
(declare-fun temp744_196 () (_ BitVec 64))
(declare-fun temp744_197 () (_ BitVec 64))
(declare-fun temp744_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp744_199 () (_ BitVec 64))
(declare-fun temp744_200 () (_ BitVec 64))
(declare-fun temp744_201 () (_ BitVec 64))
(declare-fun temp744_202 () (_ BitVec 64))
(declare-fun temp744_203 () (_ BitVec 64))
(declare-fun temp744_204 () (_ BitVec 64))
(declare-fun temp744_205 () (_ BitVec 64))
(declare-fun temp744_206 () (_ BitVec 64))
(declare-fun temp744_207 () (_ BitVec 64))
(declare-fun temp744_208 () (_ BitVec 64))
(declare-fun temp744_209 () (_ BitVec 64))
(declare-fun temp744_210 () (_ BitVec 64))
(declare-fun temp744_211 () (_ BitVec 64))
(declare-fun temp744_212 () (_ BitVec 64))
(declare-fun temp744_213 () (_ BitVec 64))
(declare-fun temp744_214 () (_ BitVec 64))
(declare-fun temp744_215 () (_ BitVec 64))
(declare-fun temp744_216 () (_ BitVec 64))
(declare-fun temp744_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp744_218 () (_ BitVec 64))
(declare-fun temp744_220 () (_ BitVec 64))
(declare-fun temp744_221 () (_ BitVec 64))
(declare-fun temp744_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp744_222 () (_ BitVec 64))
(declare-fun temp744_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp744_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp744_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp744_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp744_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp744_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp744_229 () (_ BitVec 64))
(declare-fun temp744_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp744_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp744_232 () (_ BitVec 64))
(declare-fun temp744_233 () (_ BitVec 64))
(declare-fun temp744_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp744_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp744_236 () (_ BitVec 64))
(declare-fun temp744_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp744_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp744_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp744_241 () (_ BitVec 64))
(declare-fun temp744_240 () (_ BitVec 64))
(declare-fun temp744_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp744_243 () (_ BitVec 64))
(declare-fun temp744_244 () (_ BitVec 64))
(declare-fun temp744_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp744_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp744_247 () (_ BitVec 64))
(declare-fun temp744_248 () (_ BitVec 64))
(assert (= temp744_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp744_1)))
(assert (= temp744_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp744_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_3 #x0000000000000000))
(assert (= var79869 temp744_3))
(assert (= temp744_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp744_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_5 #x0000000000000000))
(assert (= var79914 temp744_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp744_6 #x0000000000000000))
(assert (= temp744_7 temp744_6))
(assert (= temp744_8 (select ARGNAME_padding_NAMEEND_VAL temp744_7)))
(assert (= temp744_9 #x0000000000000001))
(assert (= temp744_10 temp744_9))
(assert (= temp744_11 (select ARGNAME_padding_NAMEEND_VAL temp744_10)))
(assert (= temp744_12 #x0000000000000002))
(assert (= temp744_13 temp744_12))
(assert (= temp744_14 (select ARGNAME_padding_NAMEEND_VAL temp744_13)))
(assert (= temp744_15 #x0000000000000003))
(assert (= temp744_16 temp744_15))
(assert (= temp744_17 (select ARGNAME_padding_NAMEEND_VAL temp744_16)))
(assert (= temp744_18 #x0000000000000004))
(assert (= temp744_19 temp744_18))
(assert (= temp744_20 (select ARGNAME_padding_NAMEEND_VAL temp744_19)))
(assert (= temp744_21 #x0000000000000005))
(assert (= temp744_22 temp744_21))
(assert (= temp744_23 (select ARGNAME_padding_NAMEEND_VAL temp744_22)))
(assert (= temp744_24 #x0000000000000000))
(assert (= temp744_25 #x0000000000000000))
(assert (= temp744_26 temp744_25))
(assert (= temp744_27 (select ARGNAME_padding_NAMEEND_VAL temp744_26)))
(assert (= temp744_28 #x0000000000000000))
(assert (= temp744_29 #x0000000000000001))
(assert (= temp744_30 temp744_29))
(assert (= temp744_31 (select ARGNAME_padding_NAMEEND_VAL temp744_30)))
(assert (= temp744_32 #x0000000000000000))
(assert (= temp744_33 #x0000000000000002))
(assert (= temp744_34 temp744_33))
(assert (= temp744_35 (select ARGNAME_padding_NAMEEND_VAL temp744_34)))
(assert (= temp744_36 #x0000000000000000))
(assert (= temp744_37 #x0000000000000003))
(assert (= temp744_38 temp744_37))
(assert (= temp744_39 (select ARGNAME_padding_NAMEEND_VAL temp744_38)))
(assert (= temp744_40 #x0000000000000000))
(assert (= temp744_41 #x0000000000000004))
(assert (= temp744_42 temp744_41))
(assert (= temp744_43 (select ARGNAME_padding_NAMEEND_VAL temp744_42)))
(assert (= temp744_44 #x0000000000000000))
(assert (= temp744_45 #x0000000000000005))
(assert (= temp744_46 temp744_45))
(assert (= temp744_47 (select ARGNAME_padding_NAMEEND_VAL temp744_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp744_27 temp744_24)
             (bvslt temp744_31 temp744_28)
             (bvslt temp744_35 temp744_32)
             (bvslt temp744_39 temp744_36)
             (bvslt temp744_43 temp744_40)
             (bvslt temp744_47 temp744_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_48 #x0000000000000000))
(assert (= var1322786 temp744_48))
(assert (= temp744_49 #x0000000000000000))
(assert (= temp744_50 temp744_49))
(assert (= temp744_51 (select ARGNAME_output_padding_NAMEEND_VAL temp744_50)))
(assert (= temp744_52 #x0000000000000001))
(assert (= temp744_53 temp744_52))
(assert (= temp744_54 (select ARGNAME_output_padding_NAMEEND_VAL temp744_53)))
(assert (= temp744_55 #x0000000000000002))
(assert (= temp744_56 temp744_55))
(assert (= temp744_57 (select ARGNAME_output_padding_NAMEEND_VAL temp744_56)))
(assert (= temp744_58 #x0000000000000003))
(assert (= temp744_59 temp744_58))
(assert (= temp744_60 (select ARGNAME_output_padding_NAMEEND_VAL temp744_59)))
(assert (= temp744_61 #x0000000000000004))
(assert (= temp744_62 temp744_61))
(assert (= temp744_63 (select ARGNAME_output_padding_NAMEEND_VAL temp744_62)))
(assert (= temp744_64 #x0000000000000005))
(assert (= temp744_65 temp744_64))
(assert (= temp744_66 (select ARGNAME_output_padding_NAMEEND_VAL temp744_65)))
(assert (= temp744_67 #x0000000000000000))
(assert (= temp744_68 #x0000000000000000))
(assert (= temp744_69 temp744_68))
(assert (= temp744_70 (select ARGNAME_output_padding_NAMEEND_VAL temp744_69)))
(assert (= temp744_71 #x0000000000000000))
(assert (= temp744_72 #x0000000000000001))
(assert (= temp744_73 temp744_72))
(assert (= temp744_74 (select ARGNAME_output_padding_NAMEEND_VAL temp744_73)))
(assert (= temp744_75 #x0000000000000000))
(assert (= temp744_76 #x0000000000000002))
(assert (= temp744_77 temp744_76))
(assert (= temp744_78 (select ARGNAME_output_padding_NAMEEND_VAL temp744_77)))
(assert (= temp744_79 #x0000000000000000))
(assert (= temp744_80 #x0000000000000003))
(assert (= temp744_81 temp744_80))
(assert (= temp744_82 (select ARGNAME_output_padding_NAMEEND_VAL temp744_81)))
(assert (= temp744_83 #x0000000000000000))
(assert (= temp744_84 #x0000000000000004))
(assert (= temp744_85 temp744_84))
(assert (= temp744_86 (select ARGNAME_output_padding_NAMEEND_VAL temp744_85)))
(assert (= temp744_87 #x0000000000000000))
(assert (= temp744_88 #x0000000000000005))
(assert (= temp744_89 temp744_88))
(assert (= temp744_90 (select ARGNAME_output_padding_NAMEEND_VAL temp744_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp744_70 temp744_67)
             (bvslt temp744_74 temp744_71)
             (bvslt temp744_78 temp744_75)
             (bvslt temp744_82 temp744_79)
             (bvslt temp744_86 temp744_83)
             (bvslt temp744_90 temp744_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_91 #x0000000000000000))
(assert (= var1322797 temp744_91))
(assert (= temp744_92 #x0000000000000000))
(assert (= temp744_93 temp744_92))
(assert (= temp744_94 (select ARGNAME_stride_NAMEEND_VAL temp744_93)))
(assert (= temp744_95 #x0000000000000001))
(assert (= temp744_96 temp744_95))
(assert (= temp744_97 (select ARGNAME_stride_NAMEEND_VAL temp744_96)))
(assert (= temp744_98 #x0000000000000002))
(assert (= temp744_99 temp744_98))
(assert (= temp744_100 (select ARGNAME_stride_NAMEEND_VAL temp744_99)))
(assert (= temp744_101 #x0000000000000003))
(assert (= temp744_102 temp744_101))
(assert (= temp744_103 (select ARGNAME_stride_NAMEEND_VAL temp744_102)))
(assert (= temp744_104 #x0000000000000004))
(assert (= temp744_105 temp744_104))
(assert (= temp744_106 (select ARGNAME_stride_NAMEEND_VAL temp744_105)))
(assert (= temp744_107 #x0000000000000005))
(assert (= temp744_108 temp744_107))
(assert (= temp744_109 (select ARGNAME_stride_NAMEEND_VAL temp744_108)))
(assert (= temp744_110 #x0000000000000000))
(assert (= temp744_111 #x0000000000000000))
(assert (= temp744_112 temp744_111))
(assert (= temp744_113 (select ARGNAME_stride_NAMEEND_VAL temp744_112)))
(assert (= temp744_114 #x0000000000000000))
(assert (= temp744_115 #x0000000000000001))
(assert (= temp744_116 temp744_115))
(assert (= temp744_117 (select ARGNAME_stride_NAMEEND_VAL temp744_116)))
(assert (= temp744_118 #x0000000000000000))
(assert (= temp744_119 #x0000000000000002))
(assert (= temp744_120 temp744_119))
(assert (= temp744_121 (select ARGNAME_stride_NAMEEND_VAL temp744_120)))
(assert (= temp744_122 #x0000000000000000))
(assert (= temp744_123 #x0000000000000003))
(assert (= temp744_124 temp744_123))
(assert (= temp744_125 (select ARGNAME_stride_NAMEEND_VAL temp744_124)))
(assert (= temp744_126 #x0000000000000000))
(assert (= temp744_127 #x0000000000000004))
(assert (= temp744_128 temp744_127))
(assert (= temp744_129 (select ARGNAME_stride_NAMEEND_VAL temp744_128)))
(assert (= temp744_130 #x0000000000000000))
(assert (= temp744_131 #x0000000000000005))
(assert (= temp744_132 temp744_131))
(assert (= temp744_133 (select ARGNAME_stride_NAMEEND_VAL temp744_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp744_113 temp744_110)
             (bvsle temp744_117 temp744_114)
             (bvsle temp744_121 temp744_118)
             (bvsle temp744_125 temp744_122)
             (bvsle temp744_129 temp744_126)
             (bvsle temp744_133 temp744_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_134 #x0000000000000000))
(assert (= var1322807 temp744_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_135 #x0000000000000001))
(assert (= var1322819 temp744_135))
(assert (= temp744_136 #x0000000000000000))
(assert (= var1310898 temp744_136))
(assert (= temp744_137 #x0000000000000000))
(assert (= temp744_138 temp744_137))
(assert (= temp744_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_138)))
(assert (= temp744_140 #x0000000000000001))
(assert (= temp744_141 temp744_140))
(assert (= temp744_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_141)))
(assert (= temp744_143 #x0000000000000002))
(assert (= temp744_144 temp744_143))
(assert (= temp744_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_144)))
(assert (= temp744_146 #x0000000000000003))
(assert (= temp744_147 temp744_146))
(assert (= temp744_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_147)))
(assert (= temp744_149 #x0000000000000004))
(assert (= temp744_150 temp744_149))
(assert (= temp744_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_150)))
(assert (= temp744_152 #x0000000000000005))
(assert (= temp744_153 temp744_152))
(assert (= temp744_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_153)))
(assert (= temp744_156 var1310898))
(assert (= temp744_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_156)))
(assert (= temp744_155 temp744_157))
(assert (= var1322852
   (ite (bvslt temp744_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_158 #x0000000000000000))
(assert (= var1322852 temp744_158))
(assert (= temp744_159 #x0000000000000000))
(assert (= var1310898 temp744_159))
(assert (= temp744_161 var1310898))
(assert (= temp744_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_161)))
(assert (= temp744_160 temp744_162))
(assert (= var1322874 (bvsmod temp744_160 ARGNAME_groups_NAMEEND)))
(assert (= temp744_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp744_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp744_164 #x0000000000000001))
(assert (= var1322875 temp744_164))
(assert (= temp744_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp744_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_166 #x0000000000000001))
(assert (= var1322895 temp744_166))
(assert (= temp744_167 #x0000000000000001))
(assert (= var1311786 temp744_167))
(assert (= temp744_168 #x0000000000000000))
(assert (= temp744_169 temp744_168))
(assert (= temp744_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp744_169)))
(assert (= temp744_171 #x0000000000000001))
(assert (= temp744_172 temp744_171))
(assert (= temp744_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp744_172)))
(assert (= temp744_174 #x0000000000000002))
(assert (= temp744_175 temp744_174))
(assert (= temp744_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp744_175)))
(assert (= temp744_177 #x0000000000000003))
(assert (= temp744_178 temp744_177))
(assert (= temp744_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp744_178)))
(assert (= temp744_180 #x0000000000000004))
(assert (= temp744_181 temp744_180))
(assert (= temp744_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp744_181)))
(assert (= temp744_183 #x0000000000000005))
(assert (= temp744_184 temp744_183))
(assert (= temp744_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp744_184)))
(assert (= temp744_186 #x0000000000000000))
(assert (= temp744_187
   (ite (bvslt var1311786 temp744_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp744_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp744_187)))
(assert (= var1322903 temp744_188))
(assert (bvslt (ite (bvslt var1311786 temp744_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp744_189 #x0000000000000001))
(assert (= var1311786 temp744_189))
(assert (= temp744_191 var1311786))
(assert (= temp744_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_191)))
(assert (= temp744_190 temp744_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp744_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp744_193 #x0000000000000001))
(assert (= var1322908 temp744_193))
(assert (= temp744_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp744_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_195 #x0000000000000001))
(assert (= var1322975 temp744_195))
(assert (= temp744_196 #x0000000000000000))
(assert (= var1310898 temp744_196))
(assert (= temp744_197 #x0000000000000000))
(assert (= temp744_198 temp744_197))
(assert (= temp744_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp744_198)))
(assert (= temp744_200 #x0000000000000001))
(assert (= temp744_201 temp744_200))
(assert (= temp744_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp744_201)))
(assert (= temp744_203 #x0000000000000002))
(assert (= temp744_204 temp744_203))
(assert (= temp744_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp744_204)))
(assert (= temp744_206 #x0000000000000003))
(assert (= temp744_207 temp744_206))
(assert (= temp744_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp744_207)))
(assert (= temp744_209 #x0000000000000004))
(assert (= temp744_210 temp744_209))
(assert (= temp744_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp744_210)))
(assert (= temp744_212 #x0000000000000005))
(assert (= temp744_213 temp744_212))
(assert (= temp744_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp744_213)))
(assert (= temp744_215 #x0000000000000000))
(assert (= temp744_216
   (ite (bvslt var1310898 temp744_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp744_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp744_216)))
(assert (= var1322977 temp744_217))
(assert (bvslt (ite (bvslt var1310898 temp744_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp744_218 #x0000000000000000))
(assert (= var1310898 temp744_218))
(assert (= temp744_220 var1310898))
(assert (= temp744_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp744_220)))
(assert (= temp744_219 temp744_221))
(assert (= var1322980
   (ite (= var1322977 temp744_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp744_222 #x0000000000000001))
(assert (= var1322980 temp744_222))
(assert (= temp744_223 #x0000000000000002))
(assert (= var1848169 temp744_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp744_225 #x0000000000000001))
(assert (= var1323065 temp744_225))
(assert (= temp744_226 #x0000000000000001))
(assert (= var3486735 temp744_226))
(assert (= temp744_227 #x0000000000000001))
(assert (= var3814415 temp744_227))
(assert (= temp744_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp744_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_229 #x0000000000000001))
(assert (= var79986 temp744_229))
(assert (= temp744_230 #x0000000000000001))
(assert (= var80116 temp744_230))
(assert (= var4796905 var80116))
(assert (= temp744_231 #x0000000000000000))
(assert (= var4784306 temp744_231))
(assert (= temp744_232 #x0000000000000000))
(assert (= temp744_233
   (ite (bvslt var4784306 temp744_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp744_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp744_233)))
(assert (= var4796924 temp744_234))
(assert (bvslt (ite (bvslt var4784306 temp744_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp744_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp744_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp744_236 #x0000000000000001))
(assert (= var4796925 temp744_236))
(assert (= temp744_237 #x0000000000000000))
(assert (= var4996927 temp744_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp744_238 #x0000000000000002))
(assert (= var5125763 temp744_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp744_239 #x0000000000000000))
(assert (= var5191324 temp744_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp744_241 #xffffffffffffffff))
(assert (= temp744_240 temp744_241))
(assert (= temp744_242 #x0000000000000001))
(assert (= var66602 temp744_242))
(assert (= temp744_243 #x0000000000000000))
(assert (= temp744_244
   (ite (bvslt var66602 temp744_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp744_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp744_244)))
(assert (= var80523 temp744_245))
(assert (bvslt (ite (bvslt var66602 temp744_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp744_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp744_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp744_247 #x0000000000000000))
(assert (= var80524 temp744_247))
(assert (= temp744_248 #x0000000000000001))
(assert (= var79986 temp744_248))
(model-add temp744_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp744_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp744_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






