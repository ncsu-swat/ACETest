(declare-fun temp333_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp333_2 () (_ BitVec 64))
(declare-fun temp333_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp333_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp333_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp333_6 () (_ BitVec 64))
(declare-fun temp333_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_8 () (_ BitVec 64))
(declare-fun temp333_9 () (_ BitVec 64))
(declare-fun temp333_10 () (_ BitVec 64))
(declare-fun temp333_11 () (_ BitVec 64))
(declare-fun temp333_12 () (_ BitVec 64))
(declare-fun temp333_13 () (_ BitVec 64))
(declare-fun temp333_14 () (_ BitVec 64))
(declare-fun temp333_15 () (_ BitVec 64))
(declare-fun temp333_16 () (_ BitVec 64))
(declare-fun temp333_17 () (_ BitVec 64))
(declare-fun temp333_18 () (_ BitVec 64))
(declare-fun temp333_19 () (_ BitVec 64))
(declare-fun temp333_20 () (_ BitVec 64))
(declare-fun temp333_21 () (_ BitVec 64))
(declare-fun temp333_22 () (_ BitVec 64))
(declare-fun temp333_23 () (_ BitVec 64))
(declare-fun temp333_24 () (_ BitVec 64))
(declare-fun temp333_25 () (_ BitVec 64))
(declare-fun temp333_26 () (_ BitVec 64))
(declare-fun temp333_27 () (_ BitVec 64))
(declare-fun temp333_28 () (_ BitVec 64))
(declare-fun temp333_29 () (_ BitVec 64))
(declare-fun temp333_30 () (_ BitVec 64))
(declare-fun temp333_31 () (_ BitVec 64))
(declare-fun temp333_32 () (_ BitVec 64))
(declare-fun temp333_33 () (_ BitVec 64))
(declare-fun temp333_34 () (_ BitVec 64))
(declare-fun temp333_35 () (_ BitVec 64))
(declare-fun temp333_36 () (_ BitVec 64))
(declare-fun temp333_37 () (_ BitVec 64))
(declare-fun temp333_38 () (_ BitVec 64))
(declare-fun temp333_39 () (_ BitVec 64))
(declare-fun temp333_40 () (_ BitVec 64))
(declare-fun temp333_41 () (_ BitVec 64))
(declare-fun temp333_42 () (_ BitVec 64))
(declare-fun temp333_43 () (_ BitVec 64))
(declare-fun temp333_44 () (_ BitVec 64))
(declare-fun temp333_45 () (_ BitVec 64))
(declare-fun temp333_46 () (_ BitVec 64))
(declare-fun temp333_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp333_48 () (_ BitVec 64))
(declare-fun temp333_49 () (_ BitVec 64))
(declare-fun temp333_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_51 () (_ BitVec 64))
(declare-fun temp333_52 () (_ BitVec 64))
(declare-fun temp333_53 () (_ BitVec 64))
(declare-fun temp333_54 () (_ BitVec 64))
(declare-fun temp333_55 () (_ BitVec 64))
(declare-fun temp333_56 () (_ BitVec 64))
(declare-fun temp333_57 () (_ BitVec 64))
(declare-fun temp333_58 () (_ BitVec 64))
(declare-fun temp333_59 () (_ BitVec 64))
(declare-fun temp333_60 () (_ BitVec 64))
(declare-fun temp333_61 () (_ BitVec 64))
(declare-fun temp333_62 () (_ BitVec 64))
(declare-fun temp333_63 () (_ BitVec 64))
(declare-fun temp333_64 () (_ BitVec 64))
(declare-fun temp333_65 () (_ BitVec 64))
(declare-fun temp333_66 () (_ BitVec 64))
(declare-fun temp333_67 () (_ BitVec 64))
(declare-fun temp333_68 () (_ BitVec 64))
(declare-fun temp333_69 () (_ BitVec 64))
(declare-fun temp333_70 () (_ BitVec 64))
(declare-fun temp333_71 () (_ BitVec 64))
(declare-fun temp333_72 () (_ BitVec 64))
(declare-fun temp333_73 () (_ BitVec 64))
(declare-fun temp333_74 () (_ BitVec 64))
(declare-fun temp333_75 () (_ BitVec 64))
(declare-fun temp333_76 () (_ BitVec 64))
(declare-fun temp333_77 () (_ BitVec 64))
(declare-fun temp333_78 () (_ BitVec 64))
(declare-fun temp333_79 () (_ BitVec 64))
(declare-fun temp333_80 () (_ BitVec 64))
(declare-fun temp333_81 () (_ BitVec 64))
(declare-fun temp333_82 () (_ BitVec 64))
(declare-fun temp333_83 () (_ BitVec 64))
(declare-fun temp333_84 () (_ BitVec 64))
(declare-fun temp333_85 () (_ BitVec 64))
(declare-fun temp333_86 () (_ BitVec 64))
(declare-fun temp333_87 () (_ BitVec 64))
(declare-fun temp333_88 () (_ BitVec 64))
(declare-fun temp333_89 () (_ BitVec 64))
(declare-fun temp333_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp333_91 () (_ BitVec 64))
(declare-fun temp333_92 () (_ BitVec 64))
(declare-fun temp333_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_94 () (_ BitVec 64))
(declare-fun temp333_95 () (_ BitVec 64))
(declare-fun temp333_96 () (_ BitVec 64))
(declare-fun temp333_97 () (_ BitVec 64))
(declare-fun temp333_98 () (_ BitVec 64))
(declare-fun temp333_99 () (_ BitVec 64))
(declare-fun temp333_100 () (_ BitVec 64))
(declare-fun temp333_101 () (_ BitVec 64))
(declare-fun temp333_102 () (_ BitVec 64))
(declare-fun temp333_103 () (_ BitVec 64))
(declare-fun temp333_104 () (_ BitVec 64))
(declare-fun temp333_105 () (_ BitVec 64))
(declare-fun temp333_106 () (_ BitVec 64))
(declare-fun temp333_107 () (_ BitVec 64))
(declare-fun temp333_108 () (_ BitVec 64))
(declare-fun temp333_109 () (_ BitVec 64))
(declare-fun temp333_110 () (_ BitVec 64))
(declare-fun temp333_111 () (_ BitVec 64))
(declare-fun temp333_112 () (_ BitVec 64))
(declare-fun temp333_113 () (_ BitVec 64))
(declare-fun temp333_114 () (_ BitVec 64))
(declare-fun temp333_115 () (_ BitVec 64))
(declare-fun temp333_116 () (_ BitVec 64))
(declare-fun temp333_117 () (_ BitVec 64))
(declare-fun temp333_118 () (_ BitVec 64))
(declare-fun temp333_119 () (_ BitVec 64))
(declare-fun temp333_120 () (_ BitVec 64))
(declare-fun temp333_121 () (_ BitVec 64))
(declare-fun temp333_122 () (_ BitVec 64))
(declare-fun temp333_123 () (_ BitVec 64))
(declare-fun temp333_124 () (_ BitVec 64))
(declare-fun temp333_125 () (_ BitVec 64))
(declare-fun temp333_126 () (_ BitVec 64))
(declare-fun temp333_127 () (_ BitVec 64))
(declare-fun temp333_128 () (_ BitVec 64))
(declare-fun temp333_129 () (_ BitVec 64))
(declare-fun temp333_130 () (_ BitVec 64))
(declare-fun temp333_131 () (_ BitVec 64))
(declare-fun temp333_132 () (_ BitVec 64))
(declare-fun temp333_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp333_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp333_135 () (_ BitVec 64))
(declare-fun temp333_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp333_137 () (_ BitVec 64))
(declare-fun temp333_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_139 () (_ BitVec 64))
(declare-fun temp333_140 () (_ BitVec 64))
(declare-fun temp333_141 () (_ BitVec 64))
(declare-fun temp333_142 () (_ BitVec 64))
(declare-fun temp333_143 () (_ BitVec 64))
(declare-fun temp333_144 () (_ BitVec 64))
(declare-fun temp333_145 () (_ BitVec 64))
(declare-fun temp333_146 () (_ BitVec 64))
(declare-fun temp333_147 () (_ BitVec 64))
(declare-fun temp333_148 () (_ BitVec 64))
(declare-fun temp333_149 () (_ BitVec 64))
(declare-fun temp333_150 () (_ BitVec 64))
(declare-fun temp333_151 () (_ BitVec 64))
(declare-fun temp333_152 () (_ BitVec 64))
(declare-fun temp333_153 () (_ BitVec 64))
(declare-fun temp333_154 () (_ BitVec 64))
(declare-fun temp333_156 () (_ BitVec 64))
(declare-fun temp333_157 () (_ BitVec 64))
(declare-fun temp333_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp333_158 () (_ BitVec 64))
(declare-fun temp333_159 () (_ BitVec 64))
(declare-fun temp333_161 () (_ BitVec 64))
(declare-fun temp333_162 () (_ BitVec 64))
(declare-fun temp333_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp333_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp333_164 () (_ BitVec 64))
(declare-fun temp333_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp333_166 () (_ BitVec 64))
(declare-fun temp333_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp333_168 () (_ BitVec 64))
(declare-fun temp333_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_170 () (_ BitVec 64))
(declare-fun temp333_171 () (_ BitVec 64))
(declare-fun temp333_172 () (_ BitVec 64))
(declare-fun temp333_173 () (_ BitVec 64))
(declare-fun temp333_174 () (_ BitVec 64))
(declare-fun temp333_175 () (_ BitVec 64))
(declare-fun temp333_176 () (_ BitVec 64))
(declare-fun temp333_177 () (_ BitVec 64))
(declare-fun temp333_178 () (_ BitVec 64))
(declare-fun temp333_179 () (_ BitVec 64))
(declare-fun temp333_180 () (_ BitVec 64))
(declare-fun temp333_181 () (_ BitVec 64))
(declare-fun temp333_182 () (_ BitVec 64))
(declare-fun temp333_183 () (_ BitVec 64))
(declare-fun temp333_184 () (_ BitVec 64))
(declare-fun temp333_185 () (_ BitVec 64))
(declare-fun temp333_186 () (_ BitVec 64))
(declare-fun temp333_187 () (_ BitVec 64))
(declare-fun temp333_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp333_189 () (_ BitVec 64))
(declare-fun temp333_191 () (_ BitVec 64))
(declare-fun temp333_192 () (_ BitVec 64))
(declare-fun temp333_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp333_193 () (_ BitVec 64))
(declare-fun temp333_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp333_195 () (_ BitVec 64))
(declare-fun temp333_196 () (_ BitVec 64))
(declare-fun temp333_197 () (_ BitVec 64))
(declare-fun temp333_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_199 () (_ BitVec 64))
(declare-fun temp333_200 () (_ BitVec 64))
(declare-fun temp333_201 () (_ BitVec 64))
(declare-fun temp333_202 () (_ BitVec 64))
(declare-fun temp333_203 () (_ BitVec 64))
(declare-fun temp333_204 () (_ BitVec 64))
(declare-fun temp333_205 () (_ BitVec 64))
(declare-fun temp333_206 () (_ BitVec 64))
(declare-fun temp333_207 () (_ BitVec 64))
(declare-fun temp333_208 () (_ BitVec 64))
(declare-fun temp333_209 () (_ BitVec 64))
(declare-fun temp333_210 () (_ BitVec 64))
(declare-fun temp333_211 () (_ BitVec 64))
(declare-fun temp333_212 () (_ BitVec 64))
(declare-fun temp333_213 () (_ BitVec 64))
(declare-fun temp333_214 () (_ BitVec 64))
(declare-fun temp333_215 () (_ BitVec 64))
(declare-fun temp333_216 () (_ BitVec 64))
(declare-fun temp333_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp333_218 () (_ BitVec 64))
(declare-fun temp333_220 () (_ BitVec 64))
(declare-fun temp333_221 () (_ BitVec 64))
(declare-fun temp333_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp333_222 () (_ BitVec 64))
(declare-fun temp333_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp333_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp333_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp333_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp333_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp333_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp333_229 () (_ BitVec 64))
(declare-fun temp333_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp333_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp333_232 () (_ BitVec 64))
(declare-fun temp333_233 () (_ BitVec 64))
(declare-fun temp333_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp333_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp333_236 () (_ BitVec 64))
(declare-fun temp333_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp333_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp333_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp333_240 () (_ BitVec 64))
(assert (= temp333_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp333_1)))
(assert (= temp333_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp333_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_3 #x0000000000000000))
(assert (= var79869 temp333_3))
(assert (= temp333_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp333_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_5 #x0000000000000000))
(assert (= var79914 temp333_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp333_6 #x0000000000000000))
(assert (= temp333_7 temp333_6))
(assert (= temp333_8 (select ARGNAME_padding_NAMEEND_VAL temp333_7)))
(assert (= temp333_9 #x0000000000000001))
(assert (= temp333_10 temp333_9))
(assert (= temp333_11 (select ARGNAME_padding_NAMEEND_VAL temp333_10)))
(assert (= temp333_12 #x0000000000000002))
(assert (= temp333_13 temp333_12))
(assert (= temp333_14 (select ARGNAME_padding_NAMEEND_VAL temp333_13)))
(assert (= temp333_15 #x0000000000000003))
(assert (= temp333_16 temp333_15))
(assert (= temp333_17 (select ARGNAME_padding_NAMEEND_VAL temp333_16)))
(assert (= temp333_18 #x0000000000000004))
(assert (= temp333_19 temp333_18))
(assert (= temp333_20 (select ARGNAME_padding_NAMEEND_VAL temp333_19)))
(assert (= temp333_21 #x0000000000000005))
(assert (= temp333_22 temp333_21))
(assert (= temp333_23 (select ARGNAME_padding_NAMEEND_VAL temp333_22)))
(assert (= temp333_24 #x0000000000000000))
(assert (= temp333_25 #x0000000000000000))
(assert (= temp333_26 temp333_25))
(assert (= temp333_27 (select ARGNAME_padding_NAMEEND_VAL temp333_26)))
(assert (= temp333_28 #x0000000000000000))
(assert (= temp333_29 #x0000000000000001))
(assert (= temp333_30 temp333_29))
(assert (= temp333_31 (select ARGNAME_padding_NAMEEND_VAL temp333_30)))
(assert (= temp333_32 #x0000000000000000))
(assert (= temp333_33 #x0000000000000002))
(assert (= temp333_34 temp333_33))
(assert (= temp333_35 (select ARGNAME_padding_NAMEEND_VAL temp333_34)))
(assert (= temp333_36 #x0000000000000000))
(assert (= temp333_37 #x0000000000000003))
(assert (= temp333_38 temp333_37))
(assert (= temp333_39 (select ARGNAME_padding_NAMEEND_VAL temp333_38)))
(assert (= temp333_40 #x0000000000000000))
(assert (= temp333_41 #x0000000000000004))
(assert (= temp333_42 temp333_41))
(assert (= temp333_43 (select ARGNAME_padding_NAMEEND_VAL temp333_42)))
(assert (= temp333_44 #x0000000000000000))
(assert (= temp333_45 #x0000000000000005))
(assert (= temp333_46 temp333_45))
(assert (= temp333_47 (select ARGNAME_padding_NAMEEND_VAL temp333_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp333_27 temp333_24)
             (bvslt temp333_31 temp333_28)
             (bvslt temp333_35 temp333_32)
             (bvslt temp333_39 temp333_36)
             (bvslt temp333_43 temp333_40)
             (bvslt temp333_47 temp333_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_48 #x0000000000000000))
(assert (= var1322786 temp333_48))
(assert (= temp333_49 #x0000000000000000))
(assert (= temp333_50 temp333_49))
(assert (= temp333_51 (select ARGNAME_output_padding_NAMEEND_VAL temp333_50)))
(assert (= temp333_52 #x0000000000000001))
(assert (= temp333_53 temp333_52))
(assert (= temp333_54 (select ARGNAME_output_padding_NAMEEND_VAL temp333_53)))
(assert (= temp333_55 #x0000000000000002))
(assert (= temp333_56 temp333_55))
(assert (= temp333_57 (select ARGNAME_output_padding_NAMEEND_VAL temp333_56)))
(assert (= temp333_58 #x0000000000000003))
(assert (= temp333_59 temp333_58))
(assert (= temp333_60 (select ARGNAME_output_padding_NAMEEND_VAL temp333_59)))
(assert (= temp333_61 #x0000000000000004))
(assert (= temp333_62 temp333_61))
(assert (= temp333_63 (select ARGNAME_output_padding_NAMEEND_VAL temp333_62)))
(assert (= temp333_64 #x0000000000000005))
(assert (= temp333_65 temp333_64))
(assert (= temp333_66 (select ARGNAME_output_padding_NAMEEND_VAL temp333_65)))
(assert (= temp333_67 #x0000000000000000))
(assert (= temp333_68 #x0000000000000000))
(assert (= temp333_69 temp333_68))
(assert (= temp333_70 (select ARGNAME_output_padding_NAMEEND_VAL temp333_69)))
(assert (= temp333_71 #x0000000000000000))
(assert (= temp333_72 #x0000000000000001))
(assert (= temp333_73 temp333_72))
(assert (= temp333_74 (select ARGNAME_output_padding_NAMEEND_VAL temp333_73)))
(assert (= temp333_75 #x0000000000000000))
(assert (= temp333_76 #x0000000000000002))
(assert (= temp333_77 temp333_76))
(assert (= temp333_78 (select ARGNAME_output_padding_NAMEEND_VAL temp333_77)))
(assert (= temp333_79 #x0000000000000000))
(assert (= temp333_80 #x0000000000000003))
(assert (= temp333_81 temp333_80))
(assert (= temp333_82 (select ARGNAME_output_padding_NAMEEND_VAL temp333_81)))
(assert (= temp333_83 #x0000000000000000))
(assert (= temp333_84 #x0000000000000004))
(assert (= temp333_85 temp333_84))
(assert (= temp333_86 (select ARGNAME_output_padding_NAMEEND_VAL temp333_85)))
(assert (= temp333_87 #x0000000000000000))
(assert (= temp333_88 #x0000000000000005))
(assert (= temp333_89 temp333_88))
(assert (= temp333_90 (select ARGNAME_output_padding_NAMEEND_VAL temp333_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp333_70 temp333_67)
             (bvslt temp333_74 temp333_71)
             (bvslt temp333_78 temp333_75)
             (bvslt temp333_82 temp333_79)
             (bvslt temp333_86 temp333_83)
             (bvslt temp333_90 temp333_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_91 #x0000000000000000))
(assert (= var1322797 temp333_91))
(assert (= temp333_92 #x0000000000000000))
(assert (= temp333_93 temp333_92))
(assert (= temp333_94 (select ARGNAME_stride_NAMEEND_VAL temp333_93)))
(assert (= temp333_95 #x0000000000000001))
(assert (= temp333_96 temp333_95))
(assert (= temp333_97 (select ARGNAME_stride_NAMEEND_VAL temp333_96)))
(assert (= temp333_98 #x0000000000000002))
(assert (= temp333_99 temp333_98))
(assert (= temp333_100 (select ARGNAME_stride_NAMEEND_VAL temp333_99)))
(assert (= temp333_101 #x0000000000000003))
(assert (= temp333_102 temp333_101))
(assert (= temp333_103 (select ARGNAME_stride_NAMEEND_VAL temp333_102)))
(assert (= temp333_104 #x0000000000000004))
(assert (= temp333_105 temp333_104))
(assert (= temp333_106 (select ARGNAME_stride_NAMEEND_VAL temp333_105)))
(assert (= temp333_107 #x0000000000000005))
(assert (= temp333_108 temp333_107))
(assert (= temp333_109 (select ARGNAME_stride_NAMEEND_VAL temp333_108)))
(assert (= temp333_110 #x0000000000000000))
(assert (= temp333_111 #x0000000000000000))
(assert (= temp333_112 temp333_111))
(assert (= temp333_113 (select ARGNAME_stride_NAMEEND_VAL temp333_112)))
(assert (= temp333_114 #x0000000000000000))
(assert (= temp333_115 #x0000000000000001))
(assert (= temp333_116 temp333_115))
(assert (= temp333_117 (select ARGNAME_stride_NAMEEND_VAL temp333_116)))
(assert (= temp333_118 #x0000000000000000))
(assert (= temp333_119 #x0000000000000002))
(assert (= temp333_120 temp333_119))
(assert (= temp333_121 (select ARGNAME_stride_NAMEEND_VAL temp333_120)))
(assert (= temp333_122 #x0000000000000000))
(assert (= temp333_123 #x0000000000000003))
(assert (= temp333_124 temp333_123))
(assert (= temp333_125 (select ARGNAME_stride_NAMEEND_VAL temp333_124)))
(assert (= temp333_126 #x0000000000000000))
(assert (= temp333_127 #x0000000000000004))
(assert (= temp333_128 temp333_127))
(assert (= temp333_129 (select ARGNAME_stride_NAMEEND_VAL temp333_128)))
(assert (= temp333_130 #x0000000000000000))
(assert (= temp333_131 #x0000000000000005))
(assert (= temp333_132 temp333_131))
(assert (= temp333_133 (select ARGNAME_stride_NAMEEND_VAL temp333_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp333_113 temp333_110)
             (bvsle temp333_117 temp333_114)
             (bvsle temp333_121 temp333_118)
             (bvsle temp333_125 temp333_122)
             (bvsle temp333_129 temp333_126)
             (bvsle temp333_133 temp333_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_134 #x0000000000000000))
(assert (= var1322807 temp333_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_135 #x0000000000000001))
(assert (= var1322819 temp333_135))
(assert (= temp333_136 #x0000000000000000))
(assert (= var1310898 temp333_136))
(assert (= temp333_137 #x0000000000000000))
(assert (= temp333_138 temp333_137))
(assert (= temp333_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_138)))
(assert (= temp333_140 #x0000000000000001))
(assert (= temp333_141 temp333_140))
(assert (= temp333_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_141)))
(assert (= temp333_143 #x0000000000000002))
(assert (= temp333_144 temp333_143))
(assert (= temp333_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_144)))
(assert (= temp333_146 #x0000000000000003))
(assert (= temp333_147 temp333_146))
(assert (= temp333_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_147)))
(assert (= temp333_149 #x0000000000000004))
(assert (= temp333_150 temp333_149))
(assert (= temp333_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_150)))
(assert (= temp333_152 #x0000000000000005))
(assert (= temp333_153 temp333_152))
(assert (= temp333_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_153)))
(assert (= temp333_156 var1310898))
(assert (= temp333_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_156)))
(assert (= temp333_155 temp333_157))
(assert (= var1322852
   (ite (bvslt temp333_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_158 #x0000000000000000))
(assert (= var1322852 temp333_158))
(assert (= temp333_159 #x0000000000000000))
(assert (= var1310898 temp333_159))
(assert (= temp333_161 var1310898))
(assert (= temp333_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_161)))
(assert (= temp333_160 temp333_162))
(assert (= var1322874 (bvsmod temp333_160 ARGNAME_groups_NAMEEND)))
(assert (= temp333_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp333_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp333_164 #x0000000000000001))
(assert (= var1322875 temp333_164))
(assert (= temp333_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp333_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_166 #x0000000000000001))
(assert (= var1322895 temp333_166))
(assert (= temp333_167 #x0000000000000001))
(assert (= var1311786 temp333_167))
(assert (= temp333_168 #x0000000000000000))
(assert (= temp333_169 temp333_168))
(assert (= temp333_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp333_169)))
(assert (= temp333_171 #x0000000000000001))
(assert (= temp333_172 temp333_171))
(assert (= temp333_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp333_172)))
(assert (= temp333_174 #x0000000000000002))
(assert (= temp333_175 temp333_174))
(assert (= temp333_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp333_175)))
(assert (= temp333_177 #x0000000000000003))
(assert (= temp333_178 temp333_177))
(assert (= temp333_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp333_178)))
(assert (= temp333_180 #x0000000000000004))
(assert (= temp333_181 temp333_180))
(assert (= temp333_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp333_181)))
(assert (= temp333_183 #x0000000000000005))
(assert (= temp333_184 temp333_183))
(assert (= temp333_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp333_184)))
(assert (= temp333_186 #x0000000000000000))
(assert (= temp333_187
   (ite (bvslt var1311786 temp333_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp333_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp333_187)))
(assert (= var1322903 temp333_188))
(assert (bvslt (ite (bvslt var1311786 temp333_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp333_189 #x0000000000000001))
(assert (= var1311786 temp333_189))
(assert (= temp333_191 var1311786))
(assert (= temp333_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_191)))
(assert (= temp333_190 temp333_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp333_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp333_193 #x0000000000000001))
(assert (= var1322908 temp333_193))
(assert (= temp333_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp333_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_195 #x0000000000000001))
(assert (= var1322975 temp333_195))
(assert (= temp333_196 #x0000000000000000))
(assert (= var1310898 temp333_196))
(assert (= temp333_197 #x0000000000000000))
(assert (= temp333_198 temp333_197))
(assert (= temp333_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp333_198)))
(assert (= temp333_200 #x0000000000000001))
(assert (= temp333_201 temp333_200))
(assert (= temp333_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp333_201)))
(assert (= temp333_203 #x0000000000000002))
(assert (= temp333_204 temp333_203))
(assert (= temp333_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp333_204)))
(assert (= temp333_206 #x0000000000000003))
(assert (= temp333_207 temp333_206))
(assert (= temp333_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp333_207)))
(assert (= temp333_209 #x0000000000000004))
(assert (= temp333_210 temp333_209))
(assert (= temp333_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp333_210)))
(assert (= temp333_212 #x0000000000000005))
(assert (= temp333_213 temp333_212))
(assert (= temp333_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp333_213)))
(assert (= temp333_215 #x0000000000000000))
(assert (= temp333_216
   (ite (bvslt var1310898 temp333_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp333_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp333_216)))
(assert (= var1322977 temp333_217))
(assert (bvslt (ite (bvslt var1310898 temp333_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp333_218 #x0000000000000000))
(assert (= var1310898 temp333_218))
(assert (= temp333_220 var1310898))
(assert (= temp333_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_220)))
(assert (= temp333_219 temp333_221))
(assert (= var1322980
   (ite (= var1322977 temp333_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp333_222 #x0000000000000001))
(assert (= var1322980 temp333_222))
(assert (= temp333_223 #x0000000000000002))
(assert (= var1848169 temp333_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp333_225 #x0000000000000001))
(assert (= var1323065 temp333_225))
(assert (= temp333_226 #x0000000000000001))
(assert (= var3486735 temp333_226))
(assert (= temp333_227 #x0000000000000001))
(assert (= var3814415 temp333_227))
(assert (= temp333_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp333_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_229 #x0000000000000001))
(assert (= var79986 temp333_229))
(assert (= temp333_230 #x0000000000000001))
(assert (= var80116 temp333_230))
(assert (= var4796905 var80116))
(assert (= temp333_231 #x0000000000000000))
(assert (= var4784306 temp333_231))
(assert (= temp333_232 #x0000000000000000))
(assert (= temp333_233
   (ite (bvslt var4784306 temp333_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp333_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp333_233)))
(assert (= var4796924 temp333_234))
(assert (bvslt (ite (bvslt var4784306 temp333_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp333_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp333_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp333_236 #x0000000000000001))
(assert (= var4796925 temp333_236))
(assert (= temp333_237 #x0000000000000000))
(assert (= var4996927 temp333_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp333_238 #x0000000000000002))
(assert (= var5125763 temp333_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_239 #x0000000000000000))
(assert (= var5191324 temp333_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp333_240 #x0000000000000001))
(assert (= var79986 temp333_240))
(model-add temp333_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp333_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp333_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






