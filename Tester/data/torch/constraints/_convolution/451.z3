(declare-fun temp600_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp600_2 () (_ BitVec 64))
(declare-fun temp600_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp600_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp600_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp600_6 () (_ BitVec 64))
(declare-fun temp600_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_8 () (_ BitVec 64))
(declare-fun temp600_9 () (_ BitVec 64))
(declare-fun temp600_10 () (_ BitVec 64))
(declare-fun temp600_11 () (_ BitVec 64))
(declare-fun temp600_12 () (_ BitVec 64))
(declare-fun temp600_13 () (_ BitVec 64))
(declare-fun temp600_14 () (_ BitVec 64))
(declare-fun temp600_15 () (_ BitVec 64))
(declare-fun temp600_16 () (_ BitVec 64))
(declare-fun temp600_17 () (_ BitVec 64))
(declare-fun temp600_18 () (_ BitVec 64))
(declare-fun temp600_19 () (_ BitVec 64))
(declare-fun temp600_20 () (_ BitVec 64))
(declare-fun temp600_21 () (_ BitVec 64))
(declare-fun temp600_22 () (_ BitVec 64))
(declare-fun temp600_23 () (_ BitVec 64))
(declare-fun temp600_24 () (_ BitVec 64))
(declare-fun temp600_25 () (_ BitVec 64))
(declare-fun temp600_26 () (_ BitVec 64))
(declare-fun temp600_27 () (_ BitVec 64))
(declare-fun temp600_28 () (_ BitVec 64))
(declare-fun temp600_29 () (_ BitVec 64))
(declare-fun temp600_30 () (_ BitVec 64))
(declare-fun temp600_31 () (_ BitVec 64))
(declare-fun temp600_32 () (_ BitVec 64))
(declare-fun temp600_33 () (_ BitVec 64))
(declare-fun temp600_34 () (_ BitVec 64))
(declare-fun temp600_35 () (_ BitVec 64))
(declare-fun temp600_36 () (_ BitVec 64))
(declare-fun temp600_37 () (_ BitVec 64))
(declare-fun temp600_38 () (_ BitVec 64))
(declare-fun temp600_39 () (_ BitVec 64))
(declare-fun temp600_40 () (_ BitVec 64))
(declare-fun temp600_41 () (_ BitVec 64))
(declare-fun temp600_42 () (_ BitVec 64))
(declare-fun temp600_43 () (_ BitVec 64))
(declare-fun temp600_44 () (_ BitVec 64))
(declare-fun temp600_45 () (_ BitVec 64))
(declare-fun temp600_46 () (_ BitVec 64))
(declare-fun temp600_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp600_48 () (_ BitVec 64))
(declare-fun temp600_49 () (_ BitVec 64))
(declare-fun temp600_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_51 () (_ BitVec 64))
(declare-fun temp600_52 () (_ BitVec 64))
(declare-fun temp600_53 () (_ BitVec 64))
(declare-fun temp600_54 () (_ BitVec 64))
(declare-fun temp600_55 () (_ BitVec 64))
(declare-fun temp600_56 () (_ BitVec 64))
(declare-fun temp600_57 () (_ BitVec 64))
(declare-fun temp600_58 () (_ BitVec 64))
(declare-fun temp600_59 () (_ BitVec 64))
(declare-fun temp600_60 () (_ BitVec 64))
(declare-fun temp600_61 () (_ BitVec 64))
(declare-fun temp600_62 () (_ BitVec 64))
(declare-fun temp600_63 () (_ BitVec 64))
(declare-fun temp600_64 () (_ BitVec 64))
(declare-fun temp600_65 () (_ BitVec 64))
(declare-fun temp600_66 () (_ BitVec 64))
(declare-fun temp600_67 () (_ BitVec 64))
(declare-fun temp600_68 () (_ BitVec 64))
(declare-fun temp600_69 () (_ BitVec 64))
(declare-fun temp600_70 () (_ BitVec 64))
(declare-fun temp600_71 () (_ BitVec 64))
(declare-fun temp600_72 () (_ BitVec 64))
(declare-fun temp600_73 () (_ BitVec 64))
(declare-fun temp600_74 () (_ BitVec 64))
(declare-fun temp600_75 () (_ BitVec 64))
(declare-fun temp600_76 () (_ BitVec 64))
(declare-fun temp600_77 () (_ BitVec 64))
(declare-fun temp600_78 () (_ BitVec 64))
(declare-fun temp600_79 () (_ BitVec 64))
(declare-fun temp600_80 () (_ BitVec 64))
(declare-fun temp600_81 () (_ BitVec 64))
(declare-fun temp600_82 () (_ BitVec 64))
(declare-fun temp600_83 () (_ BitVec 64))
(declare-fun temp600_84 () (_ BitVec 64))
(declare-fun temp600_85 () (_ BitVec 64))
(declare-fun temp600_86 () (_ BitVec 64))
(declare-fun temp600_87 () (_ BitVec 64))
(declare-fun temp600_88 () (_ BitVec 64))
(declare-fun temp600_89 () (_ BitVec 64))
(declare-fun temp600_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp600_91 () (_ BitVec 64))
(declare-fun temp600_92 () (_ BitVec 64))
(declare-fun temp600_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_94 () (_ BitVec 64))
(declare-fun temp600_95 () (_ BitVec 64))
(declare-fun temp600_96 () (_ BitVec 64))
(declare-fun temp600_97 () (_ BitVec 64))
(declare-fun temp600_98 () (_ BitVec 64))
(declare-fun temp600_99 () (_ BitVec 64))
(declare-fun temp600_100 () (_ BitVec 64))
(declare-fun temp600_101 () (_ BitVec 64))
(declare-fun temp600_102 () (_ BitVec 64))
(declare-fun temp600_103 () (_ BitVec 64))
(declare-fun temp600_104 () (_ BitVec 64))
(declare-fun temp600_105 () (_ BitVec 64))
(declare-fun temp600_106 () (_ BitVec 64))
(declare-fun temp600_107 () (_ BitVec 64))
(declare-fun temp600_108 () (_ BitVec 64))
(declare-fun temp600_109 () (_ BitVec 64))
(declare-fun temp600_110 () (_ BitVec 64))
(declare-fun temp600_111 () (_ BitVec 64))
(declare-fun temp600_112 () (_ BitVec 64))
(declare-fun temp600_113 () (_ BitVec 64))
(declare-fun temp600_114 () (_ BitVec 64))
(declare-fun temp600_115 () (_ BitVec 64))
(declare-fun temp600_116 () (_ BitVec 64))
(declare-fun temp600_117 () (_ BitVec 64))
(declare-fun temp600_118 () (_ BitVec 64))
(declare-fun temp600_119 () (_ BitVec 64))
(declare-fun temp600_120 () (_ BitVec 64))
(declare-fun temp600_121 () (_ BitVec 64))
(declare-fun temp600_122 () (_ BitVec 64))
(declare-fun temp600_123 () (_ BitVec 64))
(declare-fun temp600_124 () (_ BitVec 64))
(declare-fun temp600_125 () (_ BitVec 64))
(declare-fun temp600_126 () (_ BitVec 64))
(declare-fun temp600_127 () (_ BitVec 64))
(declare-fun temp600_128 () (_ BitVec 64))
(declare-fun temp600_129 () (_ BitVec 64))
(declare-fun temp600_130 () (_ BitVec 64))
(declare-fun temp600_131 () (_ BitVec 64))
(declare-fun temp600_132 () (_ BitVec 64))
(declare-fun temp600_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp600_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp600_135 () (_ BitVec 64))
(declare-fun temp600_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp600_137 () (_ BitVec 64))
(declare-fun temp600_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_139 () (_ BitVec 64))
(declare-fun temp600_140 () (_ BitVec 64))
(declare-fun temp600_141 () (_ BitVec 64))
(declare-fun temp600_142 () (_ BitVec 64))
(declare-fun temp600_143 () (_ BitVec 64))
(declare-fun temp600_144 () (_ BitVec 64))
(declare-fun temp600_145 () (_ BitVec 64))
(declare-fun temp600_146 () (_ BitVec 64))
(declare-fun temp600_147 () (_ BitVec 64))
(declare-fun temp600_148 () (_ BitVec 64))
(declare-fun temp600_149 () (_ BitVec 64))
(declare-fun temp600_150 () (_ BitVec 64))
(declare-fun temp600_151 () (_ BitVec 64))
(declare-fun temp600_152 () (_ BitVec 64))
(declare-fun temp600_153 () (_ BitVec 64))
(declare-fun temp600_154 () (_ BitVec 64))
(declare-fun temp600_156 () (_ BitVec 64))
(declare-fun temp600_157 () (_ BitVec 64))
(declare-fun temp600_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp600_158 () (_ BitVec 64))
(declare-fun temp600_159 () (_ BitVec 64))
(declare-fun temp600_161 () (_ BitVec 64))
(declare-fun temp600_162 () (_ BitVec 64))
(declare-fun temp600_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp600_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp600_164 () (_ BitVec 64))
(declare-fun temp600_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp600_166 () (_ BitVec 64))
(declare-fun temp600_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp600_168 () (_ BitVec 64))
(declare-fun temp600_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_170 () (_ BitVec 64))
(declare-fun temp600_171 () (_ BitVec 64))
(declare-fun temp600_172 () (_ BitVec 64))
(declare-fun temp600_173 () (_ BitVec 64))
(declare-fun temp600_174 () (_ BitVec 64))
(declare-fun temp600_175 () (_ BitVec 64))
(declare-fun temp600_176 () (_ BitVec 64))
(declare-fun temp600_177 () (_ BitVec 64))
(declare-fun temp600_178 () (_ BitVec 64))
(declare-fun temp600_179 () (_ BitVec 64))
(declare-fun temp600_180 () (_ BitVec 64))
(declare-fun temp600_181 () (_ BitVec 64))
(declare-fun temp600_182 () (_ BitVec 64))
(declare-fun temp600_183 () (_ BitVec 64))
(declare-fun temp600_184 () (_ BitVec 64))
(declare-fun temp600_185 () (_ BitVec 64))
(declare-fun temp600_186 () (_ BitVec 64))
(declare-fun temp600_187 () (_ BitVec 64))
(declare-fun temp600_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp600_189 () (_ BitVec 64))
(declare-fun temp600_191 () (_ BitVec 64))
(declare-fun temp600_192 () (_ BitVec 64))
(declare-fun temp600_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp600_193 () (_ BitVec 64))
(declare-fun temp600_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp600_195 () (_ BitVec 64))
(declare-fun temp600_196 () (_ BitVec 64))
(declare-fun temp600_197 () (_ BitVec 64))
(declare-fun temp600_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_199 () (_ BitVec 64))
(declare-fun temp600_200 () (_ BitVec 64))
(declare-fun temp600_201 () (_ BitVec 64))
(declare-fun temp600_202 () (_ BitVec 64))
(declare-fun temp600_203 () (_ BitVec 64))
(declare-fun temp600_204 () (_ BitVec 64))
(declare-fun temp600_205 () (_ BitVec 64))
(declare-fun temp600_206 () (_ BitVec 64))
(declare-fun temp600_207 () (_ BitVec 64))
(declare-fun temp600_208 () (_ BitVec 64))
(declare-fun temp600_209 () (_ BitVec 64))
(declare-fun temp600_210 () (_ BitVec 64))
(declare-fun temp600_211 () (_ BitVec 64))
(declare-fun temp600_212 () (_ BitVec 64))
(declare-fun temp600_213 () (_ BitVec 64))
(declare-fun temp600_214 () (_ BitVec 64))
(declare-fun temp600_215 () (_ BitVec 64))
(declare-fun temp600_216 () (_ BitVec 64))
(declare-fun temp600_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp600_218 () (_ BitVec 64))
(declare-fun temp600_220 () (_ BitVec 64))
(declare-fun temp600_221 () (_ BitVec 64))
(declare-fun temp600_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp600_222 () (_ BitVec 64))
(declare-fun temp600_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp600_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp600_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp600_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp600_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp600_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp600_229 () (_ BitVec 64))
(declare-fun temp600_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp600_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp600_232 () (_ BitVec 64))
(declare-fun temp600_233 () (_ BitVec 64))
(declare-fun temp600_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp600_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp600_236 () (_ BitVec 64))
(declare-fun temp600_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp600_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp600_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp600_240 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp600_241 () (_ BitVec 64))
(declare-fun temp600_242 () (_ BitVec 64))
(declare-fun var6763284 () (_ BitVec 64))
(declare-fun var6763251 () (_ BitVec 64))
(declare-fun var6631815 () (_ BitVec 64))
(declare-fun var6631811 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp600_243 () (_ BitVec 64))
(assert (= temp600_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp600_1)))
(assert (= temp600_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp600_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_3 #x0000000000000000))
(assert (= var79869 temp600_3))
(assert (= temp600_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp600_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_5 #x0000000000000000))
(assert (= var79914 temp600_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp600_6 #x0000000000000000))
(assert (= temp600_7 temp600_6))
(assert (= temp600_8 (select ARGNAME_padding_NAMEEND_VAL temp600_7)))
(assert (= temp600_9 #x0000000000000001))
(assert (= temp600_10 temp600_9))
(assert (= temp600_11 (select ARGNAME_padding_NAMEEND_VAL temp600_10)))
(assert (= temp600_12 #x0000000000000002))
(assert (= temp600_13 temp600_12))
(assert (= temp600_14 (select ARGNAME_padding_NAMEEND_VAL temp600_13)))
(assert (= temp600_15 #x0000000000000003))
(assert (= temp600_16 temp600_15))
(assert (= temp600_17 (select ARGNAME_padding_NAMEEND_VAL temp600_16)))
(assert (= temp600_18 #x0000000000000004))
(assert (= temp600_19 temp600_18))
(assert (= temp600_20 (select ARGNAME_padding_NAMEEND_VAL temp600_19)))
(assert (= temp600_21 #x0000000000000005))
(assert (= temp600_22 temp600_21))
(assert (= temp600_23 (select ARGNAME_padding_NAMEEND_VAL temp600_22)))
(assert (= temp600_24 #x0000000000000000))
(assert (= temp600_25 #x0000000000000000))
(assert (= temp600_26 temp600_25))
(assert (= temp600_27 (select ARGNAME_padding_NAMEEND_VAL temp600_26)))
(assert (= temp600_28 #x0000000000000000))
(assert (= temp600_29 #x0000000000000001))
(assert (= temp600_30 temp600_29))
(assert (= temp600_31 (select ARGNAME_padding_NAMEEND_VAL temp600_30)))
(assert (= temp600_32 #x0000000000000000))
(assert (= temp600_33 #x0000000000000002))
(assert (= temp600_34 temp600_33))
(assert (= temp600_35 (select ARGNAME_padding_NAMEEND_VAL temp600_34)))
(assert (= temp600_36 #x0000000000000000))
(assert (= temp600_37 #x0000000000000003))
(assert (= temp600_38 temp600_37))
(assert (= temp600_39 (select ARGNAME_padding_NAMEEND_VAL temp600_38)))
(assert (= temp600_40 #x0000000000000000))
(assert (= temp600_41 #x0000000000000004))
(assert (= temp600_42 temp600_41))
(assert (= temp600_43 (select ARGNAME_padding_NAMEEND_VAL temp600_42)))
(assert (= temp600_44 #x0000000000000000))
(assert (= temp600_45 #x0000000000000005))
(assert (= temp600_46 temp600_45))
(assert (= temp600_47 (select ARGNAME_padding_NAMEEND_VAL temp600_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp600_27 temp600_24)
             (bvslt temp600_31 temp600_28)
             (bvslt temp600_35 temp600_32)
             (bvslt temp600_39 temp600_36)
             (bvslt temp600_43 temp600_40)
             (bvslt temp600_47 temp600_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_48 #x0000000000000000))
(assert (= var1322786 temp600_48))
(assert (= temp600_49 #x0000000000000000))
(assert (= temp600_50 temp600_49))
(assert (= temp600_51 (select ARGNAME_output_padding_NAMEEND_VAL temp600_50)))
(assert (= temp600_52 #x0000000000000001))
(assert (= temp600_53 temp600_52))
(assert (= temp600_54 (select ARGNAME_output_padding_NAMEEND_VAL temp600_53)))
(assert (= temp600_55 #x0000000000000002))
(assert (= temp600_56 temp600_55))
(assert (= temp600_57 (select ARGNAME_output_padding_NAMEEND_VAL temp600_56)))
(assert (= temp600_58 #x0000000000000003))
(assert (= temp600_59 temp600_58))
(assert (= temp600_60 (select ARGNAME_output_padding_NAMEEND_VAL temp600_59)))
(assert (= temp600_61 #x0000000000000004))
(assert (= temp600_62 temp600_61))
(assert (= temp600_63 (select ARGNAME_output_padding_NAMEEND_VAL temp600_62)))
(assert (= temp600_64 #x0000000000000005))
(assert (= temp600_65 temp600_64))
(assert (= temp600_66 (select ARGNAME_output_padding_NAMEEND_VAL temp600_65)))
(assert (= temp600_67 #x0000000000000000))
(assert (= temp600_68 #x0000000000000000))
(assert (= temp600_69 temp600_68))
(assert (= temp600_70 (select ARGNAME_output_padding_NAMEEND_VAL temp600_69)))
(assert (= temp600_71 #x0000000000000000))
(assert (= temp600_72 #x0000000000000001))
(assert (= temp600_73 temp600_72))
(assert (= temp600_74 (select ARGNAME_output_padding_NAMEEND_VAL temp600_73)))
(assert (= temp600_75 #x0000000000000000))
(assert (= temp600_76 #x0000000000000002))
(assert (= temp600_77 temp600_76))
(assert (= temp600_78 (select ARGNAME_output_padding_NAMEEND_VAL temp600_77)))
(assert (= temp600_79 #x0000000000000000))
(assert (= temp600_80 #x0000000000000003))
(assert (= temp600_81 temp600_80))
(assert (= temp600_82 (select ARGNAME_output_padding_NAMEEND_VAL temp600_81)))
(assert (= temp600_83 #x0000000000000000))
(assert (= temp600_84 #x0000000000000004))
(assert (= temp600_85 temp600_84))
(assert (= temp600_86 (select ARGNAME_output_padding_NAMEEND_VAL temp600_85)))
(assert (= temp600_87 #x0000000000000000))
(assert (= temp600_88 #x0000000000000005))
(assert (= temp600_89 temp600_88))
(assert (= temp600_90 (select ARGNAME_output_padding_NAMEEND_VAL temp600_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp600_70 temp600_67)
             (bvslt temp600_74 temp600_71)
             (bvslt temp600_78 temp600_75)
             (bvslt temp600_82 temp600_79)
             (bvslt temp600_86 temp600_83)
             (bvslt temp600_90 temp600_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_91 #x0000000000000000))
(assert (= var1322797 temp600_91))
(assert (= temp600_92 #x0000000000000000))
(assert (= temp600_93 temp600_92))
(assert (= temp600_94 (select ARGNAME_stride_NAMEEND_VAL temp600_93)))
(assert (= temp600_95 #x0000000000000001))
(assert (= temp600_96 temp600_95))
(assert (= temp600_97 (select ARGNAME_stride_NAMEEND_VAL temp600_96)))
(assert (= temp600_98 #x0000000000000002))
(assert (= temp600_99 temp600_98))
(assert (= temp600_100 (select ARGNAME_stride_NAMEEND_VAL temp600_99)))
(assert (= temp600_101 #x0000000000000003))
(assert (= temp600_102 temp600_101))
(assert (= temp600_103 (select ARGNAME_stride_NAMEEND_VAL temp600_102)))
(assert (= temp600_104 #x0000000000000004))
(assert (= temp600_105 temp600_104))
(assert (= temp600_106 (select ARGNAME_stride_NAMEEND_VAL temp600_105)))
(assert (= temp600_107 #x0000000000000005))
(assert (= temp600_108 temp600_107))
(assert (= temp600_109 (select ARGNAME_stride_NAMEEND_VAL temp600_108)))
(assert (= temp600_110 #x0000000000000000))
(assert (= temp600_111 #x0000000000000000))
(assert (= temp600_112 temp600_111))
(assert (= temp600_113 (select ARGNAME_stride_NAMEEND_VAL temp600_112)))
(assert (= temp600_114 #x0000000000000000))
(assert (= temp600_115 #x0000000000000001))
(assert (= temp600_116 temp600_115))
(assert (= temp600_117 (select ARGNAME_stride_NAMEEND_VAL temp600_116)))
(assert (= temp600_118 #x0000000000000000))
(assert (= temp600_119 #x0000000000000002))
(assert (= temp600_120 temp600_119))
(assert (= temp600_121 (select ARGNAME_stride_NAMEEND_VAL temp600_120)))
(assert (= temp600_122 #x0000000000000000))
(assert (= temp600_123 #x0000000000000003))
(assert (= temp600_124 temp600_123))
(assert (= temp600_125 (select ARGNAME_stride_NAMEEND_VAL temp600_124)))
(assert (= temp600_126 #x0000000000000000))
(assert (= temp600_127 #x0000000000000004))
(assert (= temp600_128 temp600_127))
(assert (= temp600_129 (select ARGNAME_stride_NAMEEND_VAL temp600_128)))
(assert (= temp600_130 #x0000000000000000))
(assert (= temp600_131 #x0000000000000005))
(assert (= temp600_132 temp600_131))
(assert (= temp600_133 (select ARGNAME_stride_NAMEEND_VAL temp600_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp600_113 temp600_110)
             (bvsle temp600_117 temp600_114)
             (bvsle temp600_121 temp600_118)
             (bvsle temp600_125 temp600_122)
             (bvsle temp600_129 temp600_126)
             (bvsle temp600_133 temp600_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_134 #x0000000000000000))
(assert (= var1322807 temp600_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_135 #x0000000000000001))
(assert (= var1322819 temp600_135))
(assert (= temp600_136 #x0000000000000000))
(assert (= var1310898 temp600_136))
(assert (= temp600_137 #x0000000000000000))
(assert (= temp600_138 temp600_137))
(assert (= temp600_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_138)))
(assert (= temp600_140 #x0000000000000001))
(assert (= temp600_141 temp600_140))
(assert (= temp600_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_141)))
(assert (= temp600_143 #x0000000000000002))
(assert (= temp600_144 temp600_143))
(assert (= temp600_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_144)))
(assert (= temp600_146 #x0000000000000003))
(assert (= temp600_147 temp600_146))
(assert (= temp600_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_147)))
(assert (= temp600_149 #x0000000000000004))
(assert (= temp600_150 temp600_149))
(assert (= temp600_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_150)))
(assert (= temp600_152 #x0000000000000005))
(assert (= temp600_153 temp600_152))
(assert (= temp600_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_153)))
(assert (= temp600_156 var1310898))
(assert (= temp600_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_156)))
(assert (= temp600_155 temp600_157))
(assert (= var1322852
   (ite (bvslt temp600_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_158 #x0000000000000000))
(assert (= var1322852 temp600_158))
(assert (= temp600_159 #x0000000000000000))
(assert (= var1310898 temp600_159))
(assert (= temp600_161 var1310898))
(assert (= temp600_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_161)))
(assert (= temp600_160 temp600_162))
(assert (= var1322874 (bvsmod temp600_160 ARGNAME_groups_NAMEEND)))
(assert (= temp600_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp600_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp600_164 #x0000000000000001))
(assert (= var1322875 temp600_164))
(assert (= temp600_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp600_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_166 #x0000000000000001))
(assert (= var1322895 temp600_166))
(assert (= temp600_167 #x0000000000000001))
(assert (= var1311786 temp600_167))
(assert (= temp600_168 #x0000000000000000))
(assert (= temp600_169 temp600_168))
(assert (= temp600_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_169)))
(assert (= temp600_171 #x0000000000000001))
(assert (= temp600_172 temp600_171))
(assert (= temp600_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_172)))
(assert (= temp600_174 #x0000000000000002))
(assert (= temp600_175 temp600_174))
(assert (= temp600_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_175)))
(assert (= temp600_177 #x0000000000000003))
(assert (= temp600_178 temp600_177))
(assert (= temp600_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_178)))
(assert (= temp600_180 #x0000000000000004))
(assert (= temp600_181 temp600_180))
(assert (= temp600_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_181)))
(assert (= temp600_183 #x0000000000000005))
(assert (= temp600_184 temp600_183))
(assert (= temp600_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_184)))
(assert (= temp600_186 #x0000000000000000))
(assert (= temp600_187
   (ite (bvslt var1311786 temp600_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp600_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_187)))
(assert (= var1322903 temp600_188))
(assert (bvslt (ite (bvslt var1311786 temp600_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp600_189 #x0000000000000001))
(assert (= var1311786 temp600_189))
(assert (= temp600_191 var1311786))
(assert (= temp600_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_191)))
(assert (= temp600_190 temp600_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp600_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp600_193 #x0000000000000001))
(assert (= var1322908 temp600_193))
(assert (= temp600_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp600_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_195 #x0000000000000001))
(assert (= var1322975 temp600_195))
(assert (= temp600_196 #x0000000000000000))
(assert (= var1310898 temp600_196))
(assert (= temp600_197 #x0000000000000000))
(assert (= temp600_198 temp600_197))
(assert (= temp600_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp600_198)))
(assert (= temp600_200 #x0000000000000001))
(assert (= temp600_201 temp600_200))
(assert (= temp600_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp600_201)))
(assert (= temp600_203 #x0000000000000002))
(assert (= temp600_204 temp600_203))
(assert (= temp600_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp600_204)))
(assert (= temp600_206 #x0000000000000003))
(assert (= temp600_207 temp600_206))
(assert (= temp600_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp600_207)))
(assert (= temp600_209 #x0000000000000004))
(assert (= temp600_210 temp600_209))
(assert (= temp600_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp600_210)))
(assert (= temp600_212 #x0000000000000005))
(assert (= temp600_213 temp600_212))
(assert (= temp600_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp600_213)))
(assert (= temp600_215 #x0000000000000000))
(assert (= temp600_216
   (ite (bvslt var1310898 temp600_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp600_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp600_216)))
(assert (= var1322977 temp600_217))
(assert (bvslt (ite (bvslt var1310898 temp600_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp600_218 #x0000000000000000))
(assert (= var1310898 temp600_218))
(assert (= temp600_220 var1310898))
(assert (= temp600_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_220)))
(assert (= temp600_219 temp600_221))
(assert (= var1322980
   (ite (= var1322977 temp600_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp600_222 #x0000000000000001))
(assert (= var1322980 temp600_222))
(assert (= temp600_223 #x0000000000000002))
(assert (= var1848169 temp600_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp600_225 #x0000000000000001))
(assert (= var1323065 temp600_225))
(assert (= temp600_226 #x0000000000000001))
(assert (= var3486735 temp600_226))
(assert (= temp600_227 #x0000000000000001))
(assert (= var3814415 temp600_227))
(assert (= temp600_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp600_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_229 #x0000000000000001))
(assert (= var79986 temp600_229))
(assert (= temp600_230 #x0000000000000001))
(assert (= var80116 temp600_230))
(assert (= var4796905 var80116))
(assert (= temp600_231 #x0000000000000000))
(assert (= var4784306 temp600_231))
(assert (= temp600_232 #x0000000000000000))
(assert (= temp600_233
   (ite (bvslt var4784306 temp600_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp600_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_233)))
(assert (= var4796924 temp600_234))
(assert (bvslt (ite (bvslt var4784306 temp600_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp600_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp600_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp600_236 #x0000000000000001))
(assert (= var4796925 temp600_236))
(assert (= temp600_237 #x0000000000000000))
(assert (= var4996927 temp600_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp600_238 #x0000000000000002))
(assert (= var5125763 temp600_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_239 #x0000000000000000))
(assert (= var5191324 temp600_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp600_240 #x0000000000000000))
(assert (= var5386640 temp600_240))
(assert (= temp600_241 #x0000000000000001))
(assert (= var79986 temp600_241))
(assert (= temp600_242 #x0000000000000000))
(assert (= var6763284 temp600_242))
(assert (= var6763251 var6763284))
(assert (= var6631815 var6763251))
(assert (= var6631811 var6631815))
(assert (= var81597 var6631811))
(assert (= temp600_243 #x0000000000000000))
(assert (= var81597 temp600_243))
(model-add temp600_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp600_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp600_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






