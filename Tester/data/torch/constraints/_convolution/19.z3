(declare-fun temp25_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp25_2 () (_ BitVec 64))
(declare-fun temp25_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp25_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp25_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp25_6 () (_ BitVec 64))
(declare-fun temp25_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_8 () (_ BitVec 64))
(declare-fun temp25_9 () (_ BitVec 64))
(declare-fun temp25_10 () (_ BitVec 64))
(declare-fun temp25_11 () (_ BitVec 64))
(declare-fun temp25_12 () (_ BitVec 64))
(declare-fun temp25_13 () (_ BitVec 64))
(declare-fun temp25_14 () (_ BitVec 64))
(declare-fun temp25_15 () (_ BitVec 64))
(declare-fun temp25_16 () (_ BitVec 64))
(declare-fun temp25_17 () (_ BitVec 64))
(declare-fun temp25_18 () (_ BitVec 64))
(declare-fun temp25_19 () (_ BitVec 64))
(declare-fun temp25_20 () (_ BitVec 64))
(declare-fun temp25_21 () (_ BitVec 64))
(declare-fun temp25_22 () (_ BitVec 64))
(declare-fun temp25_23 () (_ BitVec 64))
(declare-fun temp25_24 () (_ BitVec 64))
(declare-fun temp25_25 () (_ BitVec 64))
(declare-fun temp25_26 () (_ BitVec 64))
(declare-fun temp25_27 () (_ BitVec 64))
(declare-fun temp25_28 () (_ BitVec 64))
(declare-fun temp25_29 () (_ BitVec 64))
(declare-fun temp25_30 () (_ BitVec 64))
(declare-fun temp25_31 () (_ BitVec 64))
(declare-fun temp25_32 () (_ BitVec 64))
(declare-fun temp25_33 () (_ BitVec 64))
(declare-fun temp25_34 () (_ BitVec 64))
(declare-fun temp25_35 () (_ BitVec 64))
(declare-fun temp25_36 () (_ BitVec 64))
(declare-fun temp25_37 () (_ BitVec 64))
(declare-fun temp25_38 () (_ BitVec 64))
(declare-fun temp25_39 () (_ BitVec 64))
(declare-fun temp25_40 () (_ BitVec 64))
(declare-fun temp25_41 () (_ BitVec 64))
(declare-fun temp25_42 () (_ BitVec 64))
(declare-fun temp25_43 () (_ BitVec 64))
(declare-fun temp25_44 () (_ BitVec 64))
(declare-fun temp25_45 () (_ BitVec 64))
(declare-fun temp25_46 () (_ BitVec 64))
(declare-fun temp25_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp25_48 () (_ BitVec 64))
(declare-fun temp25_49 () (_ BitVec 64))
(declare-fun temp25_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_51 () (_ BitVec 64))
(declare-fun temp25_52 () (_ BitVec 64))
(declare-fun temp25_53 () (_ BitVec 64))
(declare-fun temp25_54 () (_ BitVec 64))
(declare-fun temp25_55 () (_ BitVec 64))
(declare-fun temp25_56 () (_ BitVec 64))
(declare-fun temp25_57 () (_ BitVec 64))
(declare-fun temp25_58 () (_ BitVec 64))
(declare-fun temp25_59 () (_ BitVec 64))
(declare-fun temp25_60 () (_ BitVec 64))
(declare-fun temp25_61 () (_ BitVec 64))
(declare-fun temp25_62 () (_ BitVec 64))
(declare-fun temp25_63 () (_ BitVec 64))
(declare-fun temp25_64 () (_ BitVec 64))
(declare-fun temp25_65 () (_ BitVec 64))
(declare-fun temp25_66 () (_ BitVec 64))
(declare-fun temp25_67 () (_ BitVec 64))
(declare-fun temp25_68 () (_ BitVec 64))
(declare-fun temp25_69 () (_ BitVec 64))
(declare-fun temp25_70 () (_ BitVec 64))
(declare-fun temp25_71 () (_ BitVec 64))
(declare-fun temp25_72 () (_ BitVec 64))
(declare-fun temp25_73 () (_ BitVec 64))
(declare-fun temp25_74 () (_ BitVec 64))
(declare-fun temp25_75 () (_ BitVec 64))
(declare-fun temp25_76 () (_ BitVec 64))
(declare-fun temp25_77 () (_ BitVec 64))
(declare-fun temp25_78 () (_ BitVec 64))
(declare-fun temp25_79 () (_ BitVec 64))
(declare-fun temp25_80 () (_ BitVec 64))
(declare-fun temp25_81 () (_ BitVec 64))
(declare-fun temp25_82 () (_ BitVec 64))
(declare-fun temp25_83 () (_ BitVec 64))
(declare-fun temp25_84 () (_ BitVec 64))
(declare-fun temp25_85 () (_ BitVec 64))
(declare-fun temp25_86 () (_ BitVec 64))
(declare-fun temp25_87 () (_ BitVec 64))
(declare-fun temp25_88 () (_ BitVec 64))
(declare-fun temp25_89 () (_ BitVec 64))
(declare-fun temp25_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp25_91 () (_ BitVec 64))
(declare-fun temp25_92 () (_ BitVec 64))
(declare-fun temp25_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_94 () (_ BitVec 64))
(declare-fun temp25_95 () (_ BitVec 64))
(declare-fun temp25_96 () (_ BitVec 64))
(declare-fun temp25_97 () (_ BitVec 64))
(declare-fun temp25_98 () (_ BitVec 64))
(declare-fun temp25_99 () (_ BitVec 64))
(declare-fun temp25_100 () (_ BitVec 64))
(declare-fun temp25_101 () (_ BitVec 64))
(declare-fun temp25_102 () (_ BitVec 64))
(declare-fun temp25_103 () (_ BitVec 64))
(declare-fun temp25_104 () (_ BitVec 64))
(declare-fun temp25_105 () (_ BitVec 64))
(declare-fun temp25_106 () (_ BitVec 64))
(declare-fun temp25_107 () (_ BitVec 64))
(declare-fun temp25_108 () (_ BitVec 64))
(declare-fun temp25_109 () (_ BitVec 64))
(declare-fun temp25_110 () (_ BitVec 64))
(declare-fun temp25_111 () (_ BitVec 64))
(declare-fun temp25_112 () (_ BitVec 64))
(declare-fun temp25_113 () (_ BitVec 64))
(declare-fun temp25_114 () (_ BitVec 64))
(declare-fun temp25_115 () (_ BitVec 64))
(declare-fun temp25_116 () (_ BitVec 64))
(declare-fun temp25_117 () (_ BitVec 64))
(declare-fun temp25_118 () (_ BitVec 64))
(declare-fun temp25_119 () (_ BitVec 64))
(declare-fun temp25_120 () (_ BitVec 64))
(declare-fun temp25_121 () (_ BitVec 64))
(declare-fun temp25_122 () (_ BitVec 64))
(declare-fun temp25_123 () (_ BitVec 64))
(declare-fun temp25_124 () (_ BitVec 64))
(declare-fun temp25_125 () (_ BitVec 64))
(declare-fun temp25_126 () (_ BitVec 64))
(declare-fun temp25_127 () (_ BitVec 64))
(declare-fun temp25_128 () (_ BitVec 64))
(declare-fun temp25_129 () (_ BitVec 64))
(declare-fun temp25_130 () (_ BitVec 64))
(declare-fun temp25_131 () (_ BitVec 64))
(declare-fun temp25_132 () (_ BitVec 64))
(declare-fun temp25_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp25_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp25_135 () (_ BitVec 64))
(declare-fun temp25_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp25_137 () (_ BitVec 64))
(declare-fun temp25_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_139 () (_ BitVec 64))
(declare-fun temp25_140 () (_ BitVec 64))
(declare-fun temp25_141 () (_ BitVec 64))
(declare-fun temp25_142 () (_ BitVec 64))
(declare-fun temp25_143 () (_ BitVec 64))
(declare-fun temp25_144 () (_ BitVec 64))
(declare-fun temp25_145 () (_ BitVec 64))
(declare-fun temp25_146 () (_ BitVec 64))
(declare-fun temp25_147 () (_ BitVec 64))
(declare-fun temp25_148 () (_ BitVec 64))
(declare-fun temp25_149 () (_ BitVec 64))
(declare-fun temp25_150 () (_ BitVec 64))
(declare-fun temp25_151 () (_ BitVec 64))
(declare-fun temp25_152 () (_ BitVec 64))
(declare-fun temp25_153 () (_ BitVec 64))
(declare-fun temp25_154 () (_ BitVec 64))
(declare-fun temp25_156 () (_ BitVec 64))
(declare-fun temp25_157 () (_ BitVec 64))
(declare-fun temp25_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp25_158 () (_ BitVec 64))
(declare-fun temp25_159 () (_ BitVec 64))
(declare-fun temp25_161 () (_ BitVec 64))
(declare-fun temp25_162 () (_ BitVec 64))
(declare-fun temp25_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp25_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp25_164 () (_ BitVec 64))
(declare-fun temp25_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp25_166 () (_ BitVec 64))
(declare-fun temp25_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp25_168 () (_ BitVec 64))
(declare-fun temp25_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_170 () (_ BitVec 64))
(declare-fun temp25_171 () (_ BitVec 64))
(declare-fun temp25_172 () (_ BitVec 64))
(declare-fun temp25_173 () (_ BitVec 64))
(declare-fun temp25_174 () (_ BitVec 64))
(declare-fun temp25_175 () (_ BitVec 64))
(declare-fun temp25_176 () (_ BitVec 64))
(declare-fun temp25_177 () (_ BitVec 64))
(declare-fun temp25_178 () (_ BitVec 64))
(declare-fun temp25_179 () (_ BitVec 64))
(declare-fun temp25_180 () (_ BitVec 64))
(declare-fun temp25_181 () (_ BitVec 64))
(declare-fun temp25_182 () (_ BitVec 64))
(declare-fun temp25_183 () (_ BitVec 64))
(declare-fun temp25_184 () (_ BitVec 64))
(declare-fun temp25_185 () (_ BitVec 64))
(declare-fun temp25_186 () (_ BitVec 64))
(declare-fun temp25_187 () (_ BitVec 64))
(declare-fun temp25_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp25_189 () (_ BitVec 64))
(declare-fun temp25_191 () (_ BitVec 64))
(declare-fun temp25_192 () (_ BitVec 64))
(declare-fun temp25_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp25_193 () (_ BitVec 64))
(declare-fun temp25_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp25_195 () (_ BitVec 64))
(declare-fun temp25_196 () (_ BitVec 64))
(declare-fun temp25_197 () (_ BitVec 64))
(declare-fun temp25_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_199 () (_ BitVec 64))
(declare-fun temp25_200 () (_ BitVec 64))
(declare-fun temp25_201 () (_ BitVec 64))
(declare-fun temp25_202 () (_ BitVec 64))
(declare-fun temp25_203 () (_ BitVec 64))
(declare-fun temp25_204 () (_ BitVec 64))
(declare-fun temp25_205 () (_ BitVec 64))
(declare-fun temp25_206 () (_ BitVec 64))
(declare-fun temp25_207 () (_ BitVec 64))
(declare-fun temp25_208 () (_ BitVec 64))
(declare-fun temp25_209 () (_ BitVec 64))
(declare-fun temp25_210 () (_ BitVec 64))
(declare-fun temp25_211 () (_ BitVec 64))
(declare-fun temp25_212 () (_ BitVec 64))
(declare-fun temp25_213 () (_ BitVec 64))
(declare-fun temp25_214 () (_ BitVec 64))
(declare-fun temp25_215 () (_ BitVec 64))
(declare-fun temp25_216 () (_ BitVec 64))
(declare-fun temp25_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp25_218 () (_ BitVec 64))
(declare-fun temp25_220 () (_ BitVec 64))
(declare-fun temp25_221 () (_ BitVec 64))
(declare-fun temp25_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp25_222 () (_ BitVec 64))
(declare-fun temp25_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp25_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp25_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp25_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp25_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp25_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp25_229 () (_ BitVec 64))
(declare-fun temp25_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp25_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp25_232 () (_ BitVec 64))
(declare-fun temp25_233 () (_ BitVec 64))
(declare-fun temp25_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp25_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp25_236 () (_ BitVec 64))
(declare-fun temp25_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp25_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp25_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp25_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp25_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp25_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp25_243 () (_ BitVec 64))
(assert (= temp25_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp25_1)))
(assert (= temp25_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp25_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_3 #x0000000000000000))
(assert (= var79869 temp25_3))
(assert (= temp25_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp25_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_5 #x0000000000000000))
(assert (= var79914 temp25_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp25_6 #x0000000000000000))
(assert (= temp25_7 temp25_6))
(assert (= temp25_8 (select ARGNAME_padding_NAMEEND_VAL temp25_7)))
(assert (= temp25_9 #x0000000000000001))
(assert (= temp25_10 temp25_9))
(assert (= temp25_11 (select ARGNAME_padding_NAMEEND_VAL temp25_10)))
(assert (= temp25_12 #x0000000000000002))
(assert (= temp25_13 temp25_12))
(assert (= temp25_14 (select ARGNAME_padding_NAMEEND_VAL temp25_13)))
(assert (= temp25_15 #x0000000000000003))
(assert (= temp25_16 temp25_15))
(assert (= temp25_17 (select ARGNAME_padding_NAMEEND_VAL temp25_16)))
(assert (= temp25_18 #x0000000000000004))
(assert (= temp25_19 temp25_18))
(assert (= temp25_20 (select ARGNAME_padding_NAMEEND_VAL temp25_19)))
(assert (= temp25_21 #x0000000000000005))
(assert (= temp25_22 temp25_21))
(assert (= temp25_23 (select ARGNAME_padding_NAMEEND_VAL temp25_22)))
(assert (= temp25_24 #x0000000000000000))
(assert (= temp25_25 #x0000000000000000))
(assert (= temp25_26 temp25_25))
(assert (= temp25_27 (select ARGNAME_padding_NAMEEND_VAL temp25_26)))
(assert (= temp25_28 #x0000000000000000))
(assert (= temp25_29 #x0000000000000001))
(assert (= temp25_30 temp25_29))
(assert (= temp25_31 (select ARGNAME_padding_NAMEEND_VAL temp25_30)))
(assert (= temp25_32 #x0000000000000000))
(assert (= temp25_33 #x0000000000000002))
(assert (= temp25_34 temp25_33))
(assert (= temp25_35 (select ARGNAME_padding_NAMEEND_VAL temp25_34)))
(assert (= temp25_36 #x0000000000000000))
(assert (= temp25_37 #x0000000000000003))
(assert (= temp25_38 temp25_37))
(assert (= temp25_39 (select ARGNAME_padding_NAMEEND_VAL temp25_38)))
(assert (= temp25_40 #x0000000000000000))
(assert (= temp25_41 #x0000000000000004))
(assert (= temp25_42 temp25_41))
(assert (= temp25_43 (select ARGNAME_padding_NAMEEND_VAL temp25_42)))
(assert (= temp25_44 #x0000000000000000))
(assert (= temp25_45 #x0000000000000005))
(assert (= temp25_46 temp25_45))
(assert (= temp25_47 (select ARGNAME_padding_NAMEEND_VAL temp25_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp25_27 temp25_24)
             (bvslt temp25_31 temp25_28)
             (bvslt temp25_35 temp25_32)
             (bvslt temp25_39 temp25_36)
             (bvslt temp25_43 temp25_40)
             (bvslt temp25_47 temp25_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_48 #x0000000000000000))
(assert (= var1322786 temp25_48))
(assert (= temp25_49 #x0000000000000000))
(assert (= temp25_50 temp25_49))
(assert (= temp25_51 (select ARGNAME_output_padding_NAMEEND_VAL temp25_50)))
(assert (= temp25_52 #x0000000000000001))
(assert (= temp25_53 temp25_52))
(assert (= temp25_54 (select ARGNAME_output_padding_NAMEEND_VAL temp25_53)))
(assert (= temp25_55 #x0000000000000002))
(assert (= temp25_56 temp25_55))
(assert (= temp25_57 (select ARGNAME_output_padding_NAMEEND_VAL temp25_56)))
(assert (= temp25_58 #x0000000000000003))
(assert (= temp25_59 temp25_58))
(assert (= temp25_60 (select ARGNAME_output_padding_NAMEEND_VAL temp25_59)))
(assert (= temp25_61 #x0000000000000004))
(assert (= temp25_62 temp25_61))
(assert (= temp25_63 (select ARGNAME_output_padding_NAMEEND_VAL temp25_62)))
(assert (= temp25_64 #x0000000000000005))
(assert (= temp25_65 temp25_64))
(assert (= temp25_66 (select ARGNAME_output_padding_NAMEEND_VAL temp25_65)))
(assert (= temp25_67 #x0000000000000000))
(assert (= temp25_68 #x0000000000000000))
(assert (= temp25_69 temp25_68))
(assert (= temp25_70 (select ARGNAME_output_padding_NAMEEND_VAL temp25_69)))
(assert (= temp25_71 #x0000000000000000))
(assert (= temp25_72 #x0000000000000001))
(assert (= temp25_73 temp25_72))
(assert (= temp25_74 (select ARGNAME_output_padding_NAMEEND_VAL temp25_73)))
(assert (= temp25_75 #x0000000000000000))
(assert (= temp25_76 #x0000000000000002))
(assert (= temp25_77 temp25_76))
(assert (= temp25_78 (select ARGNAME_output_padding_NAMEEND_VAL temp25_77)))
(assert (= temp25_79 #x0000000000000000))
(assert (= temp25_80 #x0000000000000003))
(assert (= temp25_81 temp25_80))
(assert (= temp25_82 (select ARGNAME_output_padding_NAMEEND_VAL temp25_81)))
(assert (= temp25_83 #x0000000000000000))
(assert (= temp25_84 #x0000000000000004))
(assert (= temp25_85 temp25_84))
(assert (= temp25_86 (select ARGNAME_output_padding_NAMEEND_VAL temp25_85)))
(assert (= temp25_87 #x0000000000000000))
(assert (= temp25_88 #x0000000000000005))
(assert (= temp25_89 temp25_88))
(assert (= temp25_90 (select ARGNAME_output_padding_NAMEEND_VAL temp25_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp25_70 temp25_67)
             (bvslt temp25_74 temp25_71)
             (bvslt temp25_78 temp25_75)
             (bvslt temp25_82 temp25_79)
             (bvslt temp25_86 temp25_83)
             (bvslt temp25_90 temp25_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_91 #x0000000000000000))
(assert (= var1322797 temp25_91))
(assert (= temp25_92 #x0000000000000000))
(assert (= temp25_93 temp25_92))
(assert (= temp25_94 (select ARGNAME_stride_NAMEEND_VAL temp25_93)))
(assert (= temp25_95 #x0000000000000001))
(assert (= temp25_96 temp25_95))
(assert (= temp25_97 (select ARGNAME_stride_NAMEEND_VAL temp25_96)))
(assert (= temp25_98 #x0000000000000002))
(assert (= temp25_99 temp25_98))
(assert (= temp25_100 (select ARGNAME_stride_NAMEEND_VAL temp25_99)))
(assert (= temp25_101 #x0000000000000003))
(assert (= temp25_102 temp25_101))
(assert (= temp25_103 (select ARGNAME_stride_NAMEEND_VAL temp25_102)))
(assert (= temp25_104 #x0000000000000004))
(assert (= temp25_105 temp25_104))
(assert (= temp25_106 (select ARGNAME_stride_NAMEEND_VAL temp25_105)))
(assert (= temp25_107 #x0000000000000005))
(assert (= temp25_108 temp25_107))
(assert (= temp25_109 (select ARGNAME_stride_NAMEEND_VAL temp25_108)))
(assert (= temp25_110 #x0000000000000000))
(assert (= temp25_111 #x0000000000000000))
(assert (= temp25_112 temp25_111))
(assert (= temp25_113 (select ARGNAME_stride_NAMEEND_VAL temp25_112)))
(assert (= temp25_114 #x0000000000000000))
(assert (= temp25_115 #x0000000000000001))
(assert (= temp25_116 temp25_115))
(assert (= temp25_117 (select ARGNAME_stride_NAMEEND_VAL temp25_116)))
(assert (= temp25_118 #x0000000000000000))
(assert (= temp25_119 #x0000000000000002))
(assert (= temp25_120 temp25_119))
(assert (= temp25_121 (select ARGNAME_stride_NAMEEND_VAL temp25_120)))
(assert (= temp25_122 #x0000000000000000))
(assert (= temp25_123 #x0000000000000003))
(assert (= temp25_124 temp25_123))
(assert (= temp25_125 (select ARGNAME_stride_NAMEEND_VAL temp25_124)))
(assert (= temp25_126 #x0000000000000000))
(assert (= temp25_127 #x0000000000000004))
(assert (= temp25_128 temp25_127))
(assert (= temp25_129 (select ARGNAME_stride_NAMEEND_VAL temp25_128)))
(assert (= temp25_130 #x0000000000000000))
(assert (= temp25_131 #x0000000000000005))
(assert (= temp25_132 temp25_131))
(assert (= temp25_133 (select ARGNAME_stride_NAMEEND_VAL temp25_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp25_113 temp25_110)
             (bvsle temp25_117 temp25_114)
             (bvsle temp25_121 temp25_118)
             (bvsle temp25_125 temp25_122)
             (bvsle temp25_129 temp25_126)
             (bvsle temp25_133 temp25_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_134 #x0000000000000000))
(assert (= var1322807 temp25_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_135 #x0000000000000001))
(assert (= var1322819 temp25_135))
(assert (= temp25_136 #x0000000000000000))
(assert (= var1310898 temp25_136))
(assert (= temp25_137 #x0000000000000000))
(assert (= temp25_138 temp25_137))
(assert (= temp25_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_138)))
(assert (= temp25_140 #x0000000000000001))
(assert (= temp25_141 temp25_140))
(assert (= temp25_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_141)))
(assert (= temp25_143 #x0000000000000002))
(assert (= temp25_144 temp25_143))
(assert (= temp25_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_144)))
(assert (= temp25_146 #x0000000000000003))
(assert (= temp25_147 temp25_146))
(assert (= temp25_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_147)))
(assert (= temp25_149 #x0000000000000004))
(assert (= temp25_150 temp25_149))
(assert (= temp25_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_150)))
(assert (= temp25_152 #x0000000000000005))
(assert (= temp25_153 temp25_152))
(assert (= temp25_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_153)))
(assert (= temp25_156 var1310898))
(assert (= temp25_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_156)))
(assert (= temp25_155 temp25_157))
(assert (= var1322852
   (ite (bvslt temp25_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_158 #x0000000000000000))
(assert (= var1322852 temp25_158))
(assert (= temp25_159 #x0000000000000000))
(assert (= var1310898 temp25_159))
(assert (= temp25_161 var1310898))
(assert (= temp25_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_161)))
(assert (= temp25_160 temp25_162))
(assert (= var1322874 (bvsmod temp25_160 ARGNAME_groups_NAMEEND)))
(assert (= temp25_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp25_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_164 #x0000000000000001))
(assert (= var1322875 temp25_164))
(assert (= temp25_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp25_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_166 #x0000000000000001))
(assert (= var1322895 temp25_166))
(assert (= temp25_167 #x0000000000000001))
(assert (= var1311786 temp25_167))
(assert (= temp25_168 #x0000000000000000))
(assert (= temp25_169 temp25_168))
(assert (= temp25_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_169)))
(assert (= temp25_171 #x0000000000000001))
(assert (= temp25_172 temp25_171))
(assert (= temp25_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_172)))
(assert (= temp25_174 #x0000000000000002))
(assert (= temp25_175 temp25_174))
(assert (= temp25_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_175)))
(assert (= temp25_177 #x0000000000000003))
(assert (= temp25_178 temp25_177))
(assert (= temp25_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_178)))
(assert (= temp25_180 #x0000000000000004))
(assert (= temp25_181 temp25_180))
(assert (= temp25_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_181)))
(assert (= temp25_183 #x0000000000000005))
(assert (= temp25_184 temp25_183))
(assert (= temp25_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_184)))
(assert (= temp25_186 #x0000000000000000))
(assert (= temp25_187
   (ite (bvslt var1311786 temp25_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp25_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_187)))
(assert (= var1322903 temp25_188))
(assert (bvslt (ite (bvslt var1311786 temp25_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp25_189 #x0000000000000001))
(assert (= var1311786 temp25_189))
(assert (= temp25_191 var1311786))
(assert (= temp25_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_191)))
(assert (= temp25_190 temp25_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp25_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_193 #x0000000000000001))
(assert (= var1322908 temp25_193))
(assert (= temp25_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp25_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_195 #x0000000000000001))
(assert (= var1322975 temp25_195))
(assert (= temp25_196 #x0000000000000000))
(assert (= var1310898 temp25_196))
(assert (= temp25_197 #x0000000000000000))
(assert (= temp25_198 temp25_197))
(assert (= temp25_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp25_198)))
(assert (= temp25_200 #x0000000000000001))
(assert (= temp25_201 temp25_200))
(assert (= temp25_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp25_201)))
(assert (= temp25_203 #x0000000000000002))
(assert (= temp25_204 temp25_203))
(assert (= temp25_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp25_204)))
(assert (= temp25_206 #x0000000000000003))
(assert (= temp25_207 temp25_206))
(assert (= temp25_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp25_207)))
(assert (= temp25_209 #x0000000000000004))
(assert (= temp25_210 temp25_209))
(assert (= temp25_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp25_210)))
(assert (= temp25_212 #x0000000000000005))
(assert (= temp25_213 temp25_212))
(assert (= temp25_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp25_213)))
(assert (= temp25_215 #x0000000000000000))
(assert (= temp25_216
   (ite (bvslt var1310898 temp25_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp25_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp25_216)))
(assert (= var1322977 temp25_217))
(assert (bvslt (ite (bvslt var1310898 temp25_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp25_218 #x0000000000000000))
(assert (= var1310898 temp25_218))
(assert (= temp25_220 var1310898))
(assert (= temp25_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_220)))
(assert (= temp25_219 temp25_221))
(assert (= var1322980
   (ite (= var1322977 temp25_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_222 #x0000000000000001))
(assert (= var1322980 temp25_222))
(assert (= temp25_223 #x0000000000000002))
(assert (= var1848169 temp25_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp25_225 #x0000000000000001))
(assert (= var1323065 temp25_225))
(assert (= temp25_226 #x0000000000000001))
(assert (= var3486735 temp25_226))
(assert (= temp25_227 #x0000000000000001))
(assert (= var3814415 temp25_227))
(assert (= temp25_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp25_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_229 #x0000000000000001))
(assert (= var79986 temp25_229))
(assert (= temp25_230 #x0000000000000001))
(assert (= var80116 temp25_230))
(assert (= var4796905 var80116))
(assert (= temp25_231 #x0000000000000000))
(assert (= var4784306 temp25_231))
(assert (= temp25_232 #x0000000000000000))
(assert (= temp25_233
   (ite (bvslt var4784306 temp25_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp25_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_233)))
(assert (= var4796924 temp25_234))
(assert (bvslt (ite (bvslt var4784306 temp25_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp25_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp25_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_236 #x0000000000000001))
(assert (= var4796925 temp25_236))
(assert (= temp25_237 #x0000000000000000))
(assert (= var4996927 temp25_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp25_238 #x0000000000000002))
(assert (= var5125763 temp25_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_239 #x0000000000000000))
(assert (= var5191324 temp25_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp25_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp25_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp25_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp25_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp25_243 #x0000000000000001))
(assert (= var79986 temp25_243))
(model-add temp25_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp25_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp25_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






