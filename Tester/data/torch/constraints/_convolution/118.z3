(declare-fun temp156_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp156_2 () (_ BitVec 64))
(declare-fun temp156_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp156_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp156_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp156_6 () (_ BitVec 64))
(declare-fun temp156_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp156_8 () (_ BitVec 64))
(declare-fun temp156_9 () (_ BitVec 64))
(declare-fun temp156_10 () (_ BitVec 64))
(declare-fun temp156_11 () (_ BitVec 64))
(declare-fun temp156_12 () (_ BitVec 64))
(declare-fun temp156_13 () (_ BitVec 64))
(declare-fun temp156_14 () (_ BitVec 64))
(declare-fun temp156_15 () (_ BitVec 64))
(declare-fun temp156_16 () (_ BitVec 64))
(declare-fun temp156_17 () (_ BitVec 64))
(declare-fun temp156_18 () (_ BitVec 64))
(declare-fun temp156_19 () (_ BitVec 64))
(declare-fun temp156_20 () (_ BitVec 64))
(declare-fun temp156_21 () (_ BitVec 64))
(declare-fun temp156_22 () (_ BitVec 64))
(declare-fun temp156_23 () (_ BitVec 64))
(declare-fun temp156_24 () (_ BitVec 64))
(declare-fun temp156_25 () (_ BitVec 64))
(declare-fun temp156_26 () (_ BitVec 64))
(declare-fun temp156_27 () (_ BitVec 64))
(declare-fun temp156_28 () (_ BitVec 64))
(declare-fun temp156_29 () (_ BitVec 64))
(declare-fun temp156_30 () (_ BitVec 64))
(declare-fun temp156_31 () (_ BitVec 64))
(declare-fun temp156_32 () (_ BitVec 64))
(declare-fun temp156_33 () (_ BitVec 64))
(declare-fun temp156_34 () (_ BitVec 64))
(declare-fun temp156_35 () (_ BitVec 64))
(declare-fun temp156_36 () (_ BitVec 64))
(declare-fun temp156_37 () (_ BitVec 64))
(declare-fun temp156_38 () (_ BitVec 64))
(declare-fun temp156_39 () (_ BitVec 64))
(declare-fun temp156_40 () (_ BitVec 64))
(declare-fun temp156_41 () (_ BitVec 64))
(declare-fun temp156_42 () (_ BitVec 64))
(declare-fun temp156_43 () (_ BitVec 64))
(declare-fun temp156_44 () (_ BitVec 64))
(declare-fun temp156_45 () (_ BitVec 64))
(declare-fun temp156_46 () (_ BitVec 64))
(declare-fun temp156_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp156_48 () (_ BitVec 64))
(declare-fun temp156_49 () (_ BitVec 64))
(declare-fun temp156_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp156_51 () (_ BitVec 64))
(declare-fun temp156_52 () (_ BitVec 64))
(declare-fun temp156_53 () (_ BitVec 64))
(declare-fun temp156_54 () (_ BitVec 64))
(declare-fun temp156_55 () (_ BitVec 64))
(declare-fun temp156_56 () (_ BitVec 64))
(declare-fun temp156_57 () (_ BitVec 64))
(declare-fun temp156_58 () (_ BitVec 64))
(declare-fun temp156_59 () (_ BitVec 64))
(declare-fun temp156_60 () (_ BitVec 64))
(declare-fun temp156_61 () (_ BitVec 64))
(declare-fun temp156_62 () (_ BitVec 64))
(declare-fun temp156_63 () (_ BitVec 64))
(declare-fun temp156_64 () (_ BitVec 64))
(declare-fun temp156_65 () (_ BitVec 64))
(declare-fun temp156_66 () (_ BitVec 64))
(declare-fun temp156_67 () (_ BitVec 64))
(declare-fun temp156_68 () (_ BitVec 64))
(declare-fun temp156_69 () (_ BitVec 64))
(declare-fun temp156_70 () (_ BitVec 64))
(declare-fun temp156_71 () (_ BitVec 64))
(declare-fun temp156_72 () (_ BitVec 64))
(declare-fun temp156_73 () (_ BitVec 64))
(declare-fun temp156_74 () (_ BitVec 64))
(declare-fun temp156_75 () (_ BitVec 64))
(declare-fun temp156_76 () (_ BitVec 64))
(declare-fun temp156_77 () (_ BitVec 64))
(declare-fun temp156_78 () (_ BitVec 64))
(declare-fun temp156_79 () (_ BitVec 64))
(declare-fun temp156_80 () (_ BitVec 64))
(declare-fun temp156_81 () (_ BitVec 64))
(declare-fun temp156_82 () (_ BitVec 64))
(declare-fun temp156_83 () (_ BitVec 64))
(declare-fun temp156_84 () (_ BitVec 64))
(declare-fun temp156_85 () (_ BitVec 64))
(declare-fun temp156_86 () (_ BitVec 64))
(declare-fun temp156_87 () (_ BitVec 64))
(declare-fun temp156_88 () (_ BitVec 64))
(declare-fun temp156_89 () (_ BitVec 64))
(declare-fun temp156_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp156_91 () (_ BitVec 64))
(declare-fun temp156_92 () (_ BitVec 64))
(declare-fun temp156_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp156_94 () (_ BitVec 64))
(declare-fun temp156_95 () (_ BitVec 64))
(declare-fun temp156_96 () (_ BitVec 64))
(declare-fun temp156_97 () (_ BitVec 64))
(declare-fun temp156_98 () (_ BitVec 64))
(declare-fun temp156_99 () (_ BitVec 64))
(declare-fun temp156_100 () (_ BitVec 64))
(declare-fun temp156_101 () (_ BitVec 64))
(declare-fun temp156_102 () (_ BitVec 64))
(declare-fun temp156_103 () (_ BitVec 64))
(declare-fun temp156_104 () (_ BitVec 64))
(declare-fun temp156_105 () (_ BitVec 64))
(declare-fun temp156_106 () (_ BitVec 64))
(declare-fun temp156_107 () (_ BitVec 64))
(declare-fun temp156_108 () (_ BitVec 64))
(declare-fun temp156_109 () (_ BitVec 64))
(declare-fun temp156_110 () (_ BitVec 64))
(declare-fun temp156_111 () (_ BitVec 64))
(declare-fun temp156_112 () (_ BitVec 64))
(declare-fun temp156_113 () (_ BitVec 64))
(declare-fun temp156_114 () (_ BitVec 64))
(declare-fun temp156_115 () (_ BitVec 64))
(declare-fun temp156_116 () (_ BitVec 64))
(declare-fun temp156_117 () (_ BitVec 64))
(declare-fun temp156_118 () (_ BitVec 64))
(declare-fun temp156_119 () (_ BitVec 64))
(declare-fun temp156_120 () (_ BitVec 64))
(declare-fun temp156_121 () (_ BitVec 64))
(declare-fun temp156_122 () (_ BitVec 64))
(declare-fun temp156_123 () (_ BitVec 64))
(declare-fun temp156_124 () (_ BitVec 64))
(declare-fun temp156_125 () (_ BitVec 64))
(declare-fun temp156_126 () (_ BitVec 64))
(declare-fun temp156_127 () (_ BitVec 64))
(declare-fun temp156_128 () (_ BitVec 64))
(declare-fun temp156_129 () (_ BitVec 64))
(declare-fun temp156_130 () (_ BitVec 64))
(declare-fun temp156_131 () (_ BitVec 64))
(declare-fun temp156_132 () (_ BitVec 64))
(declare-fun temp156_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp156_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp156_135 () (_ BitVec 64))
(declare-fun temp156_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp156_137 () (_ BitVec 64))
(declare-fun temp156_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp156_139 () (_ BitVec 64))
(declare-fun temp156_140 () (_ BitVec 64))
(declare-fun temp156_141 () (_ BitVec 64))
(declare-fun temp156_142 () (_ BitVec 64))
(declare-fun temp156_143 () (_ BitVec 64))
(declare-fun temp156_144 () (_ BitVec 64))
(declare-fun temp156_145 () (_ BitVec 64))
(declare-fun temp156_146 () (_ BitVec 64))
(declare-fun temp156_147 () (_ BitVec 64))
(declare-fun temp156_148 () (_ BitVec 64))
(declare-fun temp156_149 () (_ BitVec 64))
(declare-fun temp156_150 () (_ BitVec 64))
(declare-fun temp156_151 () (_ BitVec 64))
(declare-fun temp156_152 () (_ BitVec 64))
(declare-fun temp156_153 () (_ BitVec 64))
(declare-fun temp156_154 () (_ BitVec 64))
(declare-fun temp156_156 () (_ BitVec 64))
(declare-fun temp156_157 () (_ BitVec 64))
(declare-fun temp156_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp156_158 () (_ BitVec 64))
(declare-fun temp156_159 () (_ BitVec 64))
(declare-fun temp156_161 () (_ BitVec 64))
(declare-fun temp156_162 () (_ BitVec 64))
(declare-fun temp156_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp156_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp156_164 () (_ BitVec 64))
(declare-fun temp156_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp156_166 () (_ BitVec 64))
(declare-fun temp156_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp156_168 () (_ BitVec 64))
(declare-fun temp156_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp156_170 () (_ BitVec 64))
(declare-fun temp156_171 () (_ BitVec 64))
(declare-fun temp156_172 () (_ BitVec 64))
(declare-fun temp156_173 () (_ BitVec 64))
(declare-fun temp156_174 () (_ BitVec 64))
(declare-fun temp156_175 () (_ BitVec 64))
(declare-fun temp156_176 () (_ BitVec 64))
(declare-fun temp156_177 () (_ BitVec 64))
(declare-fun temp156_178 () (_ BitVec 64))
(declare-fun temp156_179 () (_ BitVec 64))
(declare-fun temp156_180 () (_ BitVec 64))
(declare-fun temp156_181 () (_ BitVec 64))
(declare-fun temp156_182 () (_ BitVec 64))
(declare-fun temp156_183 () (_ BitVec 64))
(declare-fun temp156_184 () (_ BitVec 64))
(declare-fun temp156_185 () (_ BitVec 64))
(declare-fun temp156_186 () (_ BitVec 64))
(declare-fun temp156_187 () (_ BitVec 64))
(declare-fun temp156_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp156_189 () (_ BitVec 64))
(declare-fun temp156_191 () (_ BitVec 64))
(declare-fun temp156_192 () (_ BitVec 64))
(declare-fun temp156_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp156_193 () (_ BitVec 64))
(declare-fun temp156_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp156_195 () (_ BitVec 64))
(declare-fun temp156_196 () (_ BitVec 64))
(declare-fun temp156_197 () (_ BitVec 64))
(declare-fun temp156_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp156_199 () (_ BitVec 64))
(declare-fun temp156_200 () (_ BitVec 64))
(declare-fun temp156_201 () (_ BitVec 64))
(declare-fun temp156_202 () (_ BitVec 64))
(declare-fun temp156_203 () (_ BitVec 64))
(declare-fun temp156_204 () (_ BitVec 64))
(declare-fun temp156_205 () (_ BitVec 64))
(declare-fun temp156_206 () (_ BitVec 64))
(declare-fun temp156_207 () (_ BitVec 64))
(declare-fun temp156_208 () (_ BitVec 64))
(declare-fun temp156_209 () (_ BitVec 64))
(declare-fun temp156_210 () (_ BitVec 64))
(declare-fun temp156_211 () (_ BitVec 64))
(declare-fun temp156_212 () (_ BitVec 64))
(declare-fun temp156_213 () (_ BitVec 64))
(declare-fun temp156_214 () (_ BitVec 64))
(declare-fun temp156_215 () (_ BitVec 64))
(declare-fun temp156_216 () (_ BitVec 64))
(declare-fun temp156_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp156_218 () (_ BitVec 64))
(declare-fun temp156_220 () (_ BitVec 64))
(declare-fun temp156_221 () (_ BitVec 64))
(declare-fun temp156_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp156_222 () (_ BitVec 64))
(declare-fun temp156_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp156_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp156_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp156_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp156_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp156_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp156_229 () (_ BitVec 64))
(declare-fun temp156_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp156_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp156_232 () (_ BitVec 64))
(declare-fun temp156_233 () (_ BitVec 64))
(declare-fun temp156_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp156_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp156_236 () (_ BitVec 64))
(declare-fun temp156_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp156_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp156_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp156_241 () (_ BitVec 64))
(declare-fun temp156_240 () (_ BitVec 64))
(declare-fun temp156_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp156_243 () (_ BitVec 64))
(declare-fun temp156_244 () (_ BitVec 64))
(declare-fun temp156_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp156_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp156_247 () (_ BitVec 64))
(declare-fun temp156_248 () (_ BitVec 64))
(assert (= temp156_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp156_1)))
(assert (= temp156_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp156_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_3 #x0000000000000000))
(assert (= var79869 temp156_3))
(assert (= temp156_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp156_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_5 #x0000000000000000))
(assert (= var79914 temp156_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp156_6 #x0000000000000000))
(assert (= temp156_7 temp156_6))
(assert (= temp156_8 (select ARGNAME_padding_NAMEEND_VAL temp156_7)))
(assert (= temp156_9 #x0000000000000001))
(assert (= temp156_10 temp156_9))
(assert (= temp156_11 (select ARGNAME_padding_NAMEEND_VAL temp156_10)))
(assert (= temp156_12 #x0000000000000002))
(assert (= temp156_13 temp156_12))
(assert (= temp156_14 (select ARGNAME_padding_NAMEEND_VAL temp156_13)))
(assert (= temp156_15 #x0000000000000003))
(assert (= temp156_16 temp156_15))
(assert (= temp156_17 (select ARGNAME_padding_NAMEEND_VAL temp156_16)))
(assert (= temp156_18 #x0000000000000004))
(assert (= temp156_19 temp156_18))
(assert (= temp156_20 (select ARGNAME_padding_NAMEEND_VAL temp156_19)))
(assert (= temp156_21 #x0000000000000005))
(assert (= temp156_22 temp156_21))
(assert (= temp156_23 (select ARGNAME_padding_NAMEEND_VAL temp156_22)))
(assert (= temp156_24 #x0000000000000000))
(assert (= temp156_25 #x0000000000000000))
(assert (= temp156_26 temp156_25))
(assert (= temp156_27 (select ARGNAME_padding_NAMEEND_VAL temp156_26)))
(assert (= temp156_28 #x0000000000000000))
(assert (= temp156_29 #x0000000000000001))
(assert (= temp156_30 temp156_29))
(assert (= temp156_31 (select ARGNAME_padding_NAMEEND_VAL temp156_30)))
(assert (= temp156_32 #x0000000000000000))
(assert (= temp156_33 #x0000000000000002))
(assert (= temp156_34 temp156_33))
(assert (= temp156_35 (select ARGNAME_padding_NAMEEND_VAL temp156_34)))
(assert (= temp156_36 #x0000000000000000))
(assert (= temp156_37 #x0000000000000003))
(assert (= temp156_38 temp156_37))
(assert (= temp156_39 (select ARGNAME_padding_NAMEEND_VAL temp156_38)))
(assert (= temp156_40 #x0000000000000000))
(assert (= temp156_41 #x0000000000000004))
(assert (= temp156_42 temp156_41))
(assert (= temp156_43 (select ARGNAME_padding_NAMEEND_VAL temp156_42)))
(assert (= temp156_44 #x0000000000000000))
(assert (= temp156_45 #x0000000000000005))
(assert (= temp156_46 temp156_45))
(assert (= temp156_47 (select ARGNAME_padding_NAMEEND_VAL temp156_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp156_27 temp156_24)
             (bvslt temp156_31 temp156_28)
             (bvslt temp156_35 temp156_32)
             (bvslt temp156_39 temp156_36)
             (bvslt temp156_43 temp156_40)
             (bvslt temp156_47 temp156_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_48 #x0000000000000000))
(assert (= var1322786 temp156_48))
(assert (= temp156_49 #x0000000000000000))
(assert (= temp156_50 temp156_49))
(assert (= temp156_51 (select ARGNAME_output_padding_NAMEEND_VAL temp156_50)))
(assert (= temp156_52 #x0000000000000001))
(assert (= temp156_53 temp156_52))
(assert (= temp156_54 (select ARGNAME_output_padding_NAMEEND_VAL temp156_53)))
(assert (= temp156_55 #x0000000000000002))
(assert (= temp156_56 temp156_55))
(assert (= temp156_57 (select ARGNAME_output_padding_NAMEEND_VAL temp156_56)))
(assert (= temp156_58 #x0000000000000003))
(assert (= temp156_59 temp156_58))
(assert (= temp156_60 (select ARGNAME_output_padding_NAMEEND_VAL temp156_59)))
(assert (= temp156_61 #x0000000000000004))
(assert (= temp156_62 temp156_61))
(assert (= temp156_63 (select ARGNAME_output_padding_NAMEEND_VAL temp156_62)))
(assert (= temp156_64 #x0000000000000005))
(assert (= temp156_65 temp156_64))
(assert (= temp156_66 (select ARGNAME_output_padding_NAMEEND_VAL temp156_65)))
(assert (= temp156_67 #x0000000000000000))
(assert (= temp156_68 #x0000000000000000))
(assert (= temp156_69 temp156_68))
(assert (= temp156_70 (select ARGNAME_output_padding_NAMEEND_VAL temp156_69)))
(assert (= temp156_71 #x0000000000000000))
(assert (= temp156_72 #x0000000000000001))
(assert (= temp156_73 temp156_72))
(assert (= temp156_74 (select ARGNAME_output_padding_NAMEEND_VAL temp156_73)))
(assert (= temp156_75 #x0000000000000000))
(assert (= temp156_76 #x0000000000000002))
(assert (= temp156_77 temp156_76))
(assert (= temp156_78 (select ARGNAME_output_padding_NAMEEND_VAL temp156_77)))
(assert (= temp156_79 #x0000000000000000))
(assert (= temp156_80 #x0000000000000003))
(assert (= temp156_81 temp156_80))
(assert (= temp156_82 (select ARGNAME_output_padding_NAMEEND_VAL temp156_81)))
(assert (= temp156_83 #x0000000000000000))
(assert (= temp156_84 #x0000000000000004))
(assert (= temp156_85 temp156_84))
(assert (= temp156_86 (select ARGNAME_output_padding_NAMEEND_VAL temp156_85)))
(assert (= temp156_87 #x0000000000000000))
(assert (= temp156_88 #x0000000000000005))
(assert (= temp156_89 temp156_88))
(assert (= temp156_90 (select ARGNAME_output_padding_NAMEEND_VAL temp156_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp156_70 temp156_67)
             (bvslt temp156_74 temp156_71)
             (bvslt temp156_78 temp156_75)
             (bvslt temp156_82 temp156_79)
             (bvslt temp156_86 temp156_83)
             (bvslt temp156_90 temp156_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_91 #x0000000000000000))
(assert (= var1322797 temp156_91))
(assert (= temp156_92 #x0000000000000000))
(assert (= temp156_93 temp156_92))
(assert (= temp156_94 (select ARGNAME_stride_NAMEEND_VAL temp156_93)))
(assert (= temp156_95 #x0000000000000001))
(assert (= temp156_96 temp156_95))
(assert (= temp156_97 (select ARGNAME_stride_NAMEEND_VAL temp156_96)))
(assert (= temp156_98 #x0000000000000002))
(assert (= temp156_99 temp156_98))
(assert (= temp156_100 (select ARGNAME_stride_NAMEEND_VAL temp156_99)))
(assert (= temp156_101 #x0000000000000003))
(assert (= temp156_102 temp156_101))
(assert (= temp156_103 (select ARGNAME_stride_NAMEEND_VAL temp156_102)))
(assert (= temp156_104 #x0000000000000004))
(assert (= temp156_105 temp156_104))
(assert (= temp156_106 (select ARGNAME_stride_NAMEEND_VAL temp156_105)))
(assert (= temp156_107 #x0000000000000005))
(assert (= temp156_108 temp156_107))
(assert (= temp156_109 (select ARGNAME_stride_NAMEEND_VAL temp156_108)))
(assert (= temp156_110 #x0000000000000000))
(assert (= temp156_111 #x0000000000000000))
(assert (= temp156_112 temp156_111))
(assert (= temp156_113 (select ARGNAME_stride_NAMEEND_VAL temp156_112)))
(assert (= temp156_114 #x0000000000000000))
(assert (= temp156_115 #x0000000000000001))
(assert (= temp156_116 temp156_115))
(assert (= temp156_117 (select ARGNAME_stride_NAMEEND_VAL temp156_116)))
(assert (= temp156_118 #x0000000000000000))
(assert (= temp156_119 #x0000000000000002))
(assert (= temp156_120 temp156_119))
(assert (= temp156_121 (select ARGNAME_stride_NAMEEND_VAL temp156_120)))
(assert (= temp156_122 #x0000000000000000))
(assert (= temp156_123 #x0000000000000003))
(assert (= temp156_124 temp156_123))
(assert (= temp156_125 (select ARGNAME_stride_NAMEEND_VAL temp156_124)))
(assert (= temp156_126 #x0000000000000000))
(assert (= temp156_127 #x0000000000000004))
(assert (= temp156_128 temp156_127))
(assert (= temp156_129 (select ARGNAME_stride_NAMEEND_VAL temp156_128)))
(assert (= temp156_130 #x0000000000000000))
(assert (= temp156_131 #x0000000000000005))
(assert (= temp156_132 temp156_131))
(assert (= temp156_133 (select ARGNAME_stride_NAMEEND_VAL temp156_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp156_113 temp156_110)
             (bvsle temp156_117 temp156_114)
             (bvsle temp156_121 temp156_118)
             (bvsle temp156_125 temp156_122)
             (bvsle temp156_129 temp156_126)
             (bvsle temp156_133 temp156_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_134 #x0000000000000000))
(assert (= var1322807 temp156_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_135 #x0000000000000001))
(assert (= var1322819 temp156_135))
(assert (= temp156_136 #x0000000000000000))
(assert (= var1310898 temp156_136))
(assert (= temp156_137 #x0000000000000000))
(assert (= temp156_138 temp156_137))
(assert (= temp156_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_138)))
(assert (= temp156_140 #x0000000000000001))
(assert (= temp156_141 temp156_140))
(assert (= temp156_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_141)))
(assert (= temp156_143 #x0000000000000002))
(assert (= temp156_144 temp156_143))
(assert (= temp156_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_144)))
(assert (= temp156_146 #x0000000000000003))
(assert (= temp156_147 temp156_146))
(assert (= temp156_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_147)))
(assert (= temp156_149 #x0000000000000004))
(assert (= temp156_150 temp156_149))
(assert (= temp156_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_150)))
(assert (= temp156_152 #x0000000000000005))
(assert (= temp156_153 temp156_152))
(assert (= temp156_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_153)))
(assert (= temp156_156 var1310898))
(assert (= temp156_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_156)))
(assert (= temp156_155 temp156_157))
(assert (= var1322852
   (ite (bvslt temp156_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_158 #x0000000000000000))
(assert (= var1322852 temp156_158))
(assert (= temp156_159 #x0000000000000000))
(assert (= var1310898 temp156_159))
(assert (= temp156_161 var1310898))
(assert (= temp156_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_161)))
(assert (= temp156_160 temp156_162))
(assert (= var1322874 (bvsmod temp156_160 ARGNAME_groups_NAMEEND)))
(assert (= temp156_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp156_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp156_164 #x0000000000000001))
(assert (= var1322875 temp156_164))
(assert (= temp156_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp156_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_166 #x0000000000000001))
(assert (= var1322895 temp156_166))
(assert (= temp156_167 #x0000000000000001))
(assert (= var1311786 temp156_167))
(assert (= temp156_168 #x0000000000000000))
(assert (= temp156_169 temp156_168))
(assert (= temp156_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp156_169)))
(assert (= temp156_171 #x0000000000000001))
(assert (= temp156_172 temp156_171))
(assert (= temp156_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp156_172)))
(assert (= temp156_174 #x0000000000000002))
(assert (= temp156_175 temp156_174))
(assert (= temp156_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp156_175)))
(assert (= temp156_177 #x0000000000000003))
(assert (= temp156_178 temp156_177))
(assert (= temp156_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp156_178)))
(assert (= temp156_180 #x0000000000000004))
(assert (= temp156_181 temp156_180))
(assert (= temp156_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp156_181)))
(assert (= temp156_183 #x0000000000000005))
(assert (= temp156_184 temp156_183))
(assert (= temp156_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp156_184)))
(assert (= temp156_186 #x0000000000000000))
(assert (= temp156_187
   (ite (bvslt var1311786 temp156_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp156_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp156_187)))
(assert (= var1322903 temp156_188))
(assert (bvslt (ite (bvslt var1311786 temp156_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp156_189 #x0000000000000001))
(assert (= var1311786 temp156_189))
(assert (= temp156_191 var1311786))
(assert (= temp156_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_191)))
(assert (= temp156_190 temp156_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp156_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp156_193 #x0000000000000001))
(assert (= var1322908 temp156_193))
(assert (= temp156_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp156_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_195 #x0000000000000001))
(assert (= var1322975 temp156_195))
(assert (= temp156_196 #x0000000000000000))
(assert (= var1310898 temp156_196))
(assert (= temp156_197 #x0000000000000000))
(assert (= temp156_198 temp156_197))
(assert (= temp156_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp156_198)))
(assert (= temp156_200 #x0000000000000001))
(assert (= temp156_201 temp156_200))
(assert (= temp156_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp156_201)))
(assert (= temp156_203 #x0000000000000002))
(assert (= temp156_204 temp156_203))
(assert (= temp156_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp156_204)))
(assert (= temp156_206 #x0000000000000003))
(assert (= temp156_207 temp156_206))
(assert (= temp156_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp156_207)))
(assert (= temp156_209 #x0000000000000004))
(assert (= temp156_210 temp156_209))
(assert (= temp156_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp156_210)))
(assert (= temp156_212 #x0000000000000005))
(assert (= temp156_213 temp156_212))
(assert (= temp156_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp156_213)))
(assert (= temp156_215 #x0000000000000000))
(assert (= temp156_216
   (ite (bvslt var1310898 temp156_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp156_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp156_216)))
(assert (= var1322977 temp156_217))
(assert (bvslt (ite (bvslt var1310898 temp156_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp156_218 #x0000000000000000))
(assert (= var1310898 temp156_218))
(assert (= temp156_220 var1310898))
(assert (= temp156_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp156_220)))
(assert (= temp156_219 temp156_221))
(assert (= var1322980
   (ite (= var1322977 temp156_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp156_222 #x0000000000000001))
(assert (= var1322980 temp156_222))
(assert (= temp156_223 #x0000000000000002))
(assert (= var1848169 temp156_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp156_225 #x0000000000000001))
(assert (= var1323065 temp156_225))
(assert (= temp156_226 #x0000000000000001))
(assert (= var3486735 temp156_226))
(assert (= temp156_227 #x0000000000000001))
(assert (= var3814415 temp156_227))
(assert (= temp156_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp156_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_229 #x0000000000000001))
(assert (= var79986 temp156_229))
(assert (= temp156_230 #x0000000000000001))
(assert (= var80116 temp156_230))
(assert (= var4796905 var80116))
(assert (= temp156_231 #x0000000000000000))
(assert (= var4784306 temp156_231))
(assert (= temp156_232 #x0000000000000000))
(assert (= temp156_233
   (ite (bvslt var4784306 temp156_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp156_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp156_233)))
(assert (= var4796924 temp156_234))
(assert (bvslt (ite (bvslt var4784306 temp156_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp156_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp156_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp156_236 #x0000000000000001))
(assert (= var4796925 temp156_236))
(assert (= temp156_237 #x0000000000000000))
(assert (= var4996927 temp156_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp156_238 #x0000000000000002))
(assert (= var5125763 temp156_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp156_239 #x0000000000000000))
(assert (= var5191324 temp156_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp156_241 #xffffffffffffffff))
(assert (= temp156_240 temp156_241))
(assert (= temp156_242 #x0000000000000001))
(assert (= var66602 temp156_242))
(assert (= temp156_243 #x0000000000000000))
(assert (= temp156_244
   (ite (bvslt var66602 temp156_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp156_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp156_244)))
(assert (= var80523 temp156_245))
(assert (bvslt (ite (bvslt var66602 temp156_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp156_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp156_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp156_247 #x0000000000000000))
(assert (= var80524 temp156_247))
(assert (= temp156_248 #x0000000000000001))
(assert (= var79986 temp156_248))
(model-add temp156_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp156_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp156_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






