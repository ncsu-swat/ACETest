(declare-fun temp900_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp900_2 () (_ BitVec 64))
(declare-fun temp900_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp900_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp900_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp900_6 () (_ BitVec 64))
(declare-fun temp900_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp900_8 () (_ BitVec 64))
(declare-fun temp900_9 () (_ BitVec 64))
(declare-fun temp900_10 () (_ BitVec 64))
(declare-fun temp900_11 () (_ BitVec 64))
(declare-fun temp900_12 () (_ BitVec 64))
(declare-fun temp900_13 () (_ BitVec 64))
(declare-fun temp900_14 () (_ BitVec 64))
(declare-fun temp900_15 () (_ BitVec 64))
(declare-fun temp900_16 () (_ BitVec 64))
(declare-fun temp900_17 () (_ BitVec 64))
(declare-fun temp900_18 () (_ BitVec 64))
(declare-fun temp900_19 () (_ BitVec 64))
(declare-fun temp900_20 () (_ BitVec 64))
(declare-fun temp900_21 () (_ BitVec 64))
(declare-fun temp900_22 () (_ BitVec 64))
(declare-fun temp900_23 () (_ BitVec 64))
(declare-fun temp900_24 () (_ BitVec 64))
(declare-fun temp900_25 () (_ BitVec 64))
(declare-fun temp900_26 () (_ BitVec 64))
(declare-fun temp900_27 () (_ BitVec 64))
(declare-fun temp900_28 () (_ BitVec 64))
(declare-fun temp900_29 () (_ BitVec 64))
(declare-fun temp900_30 () (_ BitVec 64))
(declare-fun temp900_31 () (_ BitVec 64))
(declare-fun temp900_32 () (_ BitVec 64))
(declare-fun temp900_33 () (_ BitVec 64))
(declare-fun temp900_34 () (_ BitVec 64))
(declare-fun temp900_35 () (_ BitVec 64))
(declare-fun temp900_36 () (_ BitVec 64))
(declare-fun temp900_37 () (_ BitVec 64))
(declare-fun temp900_38 () (_ BitVec 64))
(declare-fun temp900_39 () (_ BitVec 64))
(declare-fun temp900_40 () (_ BitVec 64))
(declare-fun temp900_41 () (_ BitVec 64))
(declare-fun temp900_42 () (_ BitVec 64))
(declare-fun temp900_43 () (_ BitVec 64))
(declare-fun temp900_44 () (_ BitVec 64))
(declare-fun temp900_45 () (_ BitVec 64))
(declare-fun temp900_46 () (_ BitVec 64))
(declare-fun temp900_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp900_48 () (_ BitVec 64))
(declare-fun temp900_49 () (_ BitVec 64))
(declare-fun temp900_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp900_51 () (_ BitVec 64))
(declare-fun temp900_52 () (_ BitVec 64))
(declare-fun temp900_53 () (_ BitVec 64))
(declare-fun temp900_54 () (_ BitVec 64))
(declare-fun temp900_55 () (_ BitVec 64))
(declare-fun temp900_56 () (_ BitVec 64))
(declare-fun temp900_57 () (_ BitVec 64))
(declare-fun temp900_58 () (_ BitVec 64))
(declare-fun temp900_59 () (_ BitVec 64))
(declare-fun temp900_60 () (_ BitVec 64))
(declare-fun temp900_61 () (_ BitVec 64))
(declare-fun temp900_62 () (_ BitVec 64))
(declare-fun temp900_63 () (_ BitVec 64))
(declare-fun temp900_64 () (_ BitVec 64))
(declare-fun temp900_65 () (_ BitVec 64))
(declare-fun temp900_66 () (_ BitVec 64))
(declare-fun temp900_67 () (_ BitVec 64))
(declare-fun temp900_68 () (_ BitVec 64))
(declare-fun temp900_69 () (_ BitVec 64))
(declare-fun temp900_70 () (_ BitVec 64))
(declare-fun temp900_71 () (_ BitVec 64))
(declare-fun temp900_72 () (_ BitVec 64))
(declare-fun temp900_73 () (_ BitVec 64))
(declare-fun temp900_74 () (_ BitVec 64))
(declare-fun temp900_75 () (_ BitVec 64))
(declare-fun temp900_76 () (_ BitVec 64))
(declare-fun temp900_77 () (_ BitVec 64))
(declare-fun temp900_78 () (_ BitVec 64))
(declare-fun temp900_79 () (_ BitVec 64))
(declare-fun temp900_80 () (_ BitVec 64))
(declare-fun temp900_81 () (_ BitVec 64))
(declare-fun temp900_82 () (_ BitVec 64))
(declare-fun temp900_83 () (_ BitVec 64))
(declare-fun temp900_84 () (_ BitVec 64))
(declare-fun temp900_85 () (_ BitVec 64))
(declare-fun temp900_86 () (_ BitVec 64))
(declare-fun temp900_87 () (_ BitVec 64))
(declare-fun temp900_88 () (_ BitVec 64))
(declare-fun temp900_89 () (_ BitVec 64))
(declare-fun temp900_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp900_91 () (_ BitVec 64))
(declare-fun temp900_92 () (_ BitVec 64))
(declare-fun temp900_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp900_94 () (_ BitVec 64))
(declare-fun temp900_95 () (_ BitVec 64))
(declare-fun temp900_96 () (_ BitVec 64))
(declare-fun temp900_97 () (_ BitVec 64))
(declare-fun temp900_98 () (_ BitVec 64))
(declare-fun temp900_99 () (_ BitVec 64))
(declare-fun temp900_100 () (_ BitVec 64))
(declare-fun temp900_101 () (_ BitVec 64))
(declare-fun temp900_102 () (_ BitVec 64))
(declare-fun temp900_103 () (_ BitVec 64))
(declare-fun temp900_104 () (_ BitVec 64))
(declare-fun temp900_105 () (_ BitVec 64))
(declare-fun temp900_106 () (_ BitVec 64))
(declare-fun temp900_107 () (_ BitVec 64))
(declare-fun temp900_108 () (_ BitVec 64))
(declare-fun temp900_109 () (_ BitVec 64))
(declare-fun temp900_110 () (_ BitVec 64))
(declare-fun temp900_111 () (_ BitVec 64))
(declare-fun temp900_112 () (_ BitVec 64))
(declare-fun temp900_113 () (_ BitVec 64))
(declare-fun temp900_114 () (_ BitVec 64))
(declare-fun temp900_115 () (_ BitVec 64))
(declare-fun temp900_116 () (_ BitVec 64))
(declare-fun temp900_117 () (_ BitVec 64))
(declare-fun temp900_118 () (_ BitVec 64))
(declare-fun temp900_119 () (_ BitVec 64))
(declare-fun temp900_120 () (_ BitVec 64))
(declare-fun temp900_121 () (_ BitVec 64))
(declare-fun temp900_122 () (_ BitVec 64))
(declare-fun temp900_123 () (_ BitVec 64))
(declare-fun temp900_124 () (_ BitVec 64))
(declare-fun temp900_125 () (_ BitVec 64))
(declare-fun temp900_126 () (_ BitVec 64))
(declare-fun temp900_127 () (_ BitVec 64))
(declare-fun temp900_128 () (_ BitVec 64))
(declare-fun temp900_129 () (_ BitVec 64))
(declare-fun temp900_130 () (_ BitVec 64))
(declare-fun temp900_131 () (_ BitVec 64))
(declare-fun temp900_132 () (_ BitVec 64))
(declare-fun temp900_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp900_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp900_135 () (_ BitVec 64))
(declare-fun temp900_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp900_137 () (_ BitVec 64))
(declare-fun temp900_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp900_139 () (_ BitVec 64))
(declare-fun temp900_140 () (_ BitVec 64))
(declare-fun temp900_141 () (_ BitVec 64))
(declare-fun temp900_142 () (_ BitVec 64))
(declare-fun temp900_143 () (_ BitVec 64))
(declare-fun temp900_144 () (_ BitVec 64))
(declare-fun temp900_145 () (_ BitVec 64))
(declare-fun temp900_146 () (_ BitVec 64))
(declare-fun temp900_147 () (_ BitVec 64))
(declare-fun temp900_148 () (_ BitVec 64))
(declare-fun temp900_149 () (_ BitVec 64))
(declare-fun temp900_150 () (_ BitVec 64))
(declare-fun temp900_151 () (_ BitVec 64))
(declare-fun temp900_152 () (_ BitVec 64))
(declare-fun temp900_153 () (_ BitVec 64))
(declare-fun temp900_154 () (_ BitVec 64))
(declare-fun temp900_156 () (_ BitVec 64))
(declare-fun temp900_157 () (_ BitVec 64))
(declare-fun temp900_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp900_158 () (_ BitVec 64))
(declare-fun temp900_159 () (_ BitVec 64))
(declare-fun temp900_161 () (_ BitVec 64))
(declare-fun temp900_162 () (_ BitVec 64))
(declare-fun temp900_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp900_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp900_164 () (_ BitVec 64))
(declare-fun temp900_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp900_166 () (_ BitVec 64))
(declare-fun temp900_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp900_168 () (_ BitVec 64))
(declare-fun temp900_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp900_170 () (_ BitVec 64))
(declare-fun temp900_171 () (_ BitVec 64))
(declare-fun temp900_172 () (_ BitVec 64))
(declare-fun temp900_173 () (_ BitVec 64))
(declare-fun temp900_174 () (_ BitVec 64))
(declare-fun temp900_175 () (_ BitVec 64))
(declare-fun temp900_176 () (_ BitVec 64))
(declare-fun temp900_177 () (_ BitVec 64))
(declare-fun temp900_178 () (_ BitVec 64))
(declare-fun temp900_179 () (_ BitVec 64))
(declare-fun temp900_180 () (_ BitVec 64))
(declare-fun temp900_181 () (_ BitVec 64))
(declare-fun temp900_182 () (_ BitVec 64))
(declare-fun temp900_183 () (_ BitVec 64))
(declare-fun temp900_184 () (_ BitVec 64))
(declare-fun temp900_185 () (_ BitVec 64))
(declare-fun temp900_186 () (_ BitVec 64))
(declare-fun temp900_187 () (_ BitVec 64))
(declare-fun temp900_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp900_189 () (_ BitVec 64))
(declare-fun temp900_191 () (_ BitVec 64))
(declare-fun temp900_192 () (_ BitVec 64))
(declare-fun temp900_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp900_193 () (_ BitVec 64))
(declare-fun temp900_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp900_195 () (_ BitVec 64))
(declare-fun temp900_196 () (_ BitVec 64))
(declare-fun temp900_197 () (_ BitVec 64))
(declare-fun temp900_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp900_199 () (_ BitVec 64))
(declare-fun temp900_200 () (_ BitVec 64))
(declare-fun temp900_201 () (_ BitVec 64))
(declare-fun temp900_202 () (_ BitVec 64))
(declare-fun temp900_203 () (_ BitVec 64))
(declare-fun temp900_204 () (_ BitVec 64))
(declare-fun temp900_205 () (_ BitVec 64))
(declare-fun temp900_206 () (_ BitVec 64))
(declare-fun temp900_207 () (_ BitVec 64))
(declare-fun temp900_208 () (_ BitVec 64))
(declare-fun temp900_209 () (_ BitVec 64))
(declare-fun temp900_210 () (_ BitVec 64))
(declare-fun temp900_211 () (_ BitVec 64))
(declare-fun temp900_212 () (_ BitVec 64))
(declare-fun temp900_213 () (_ BitVec 64))
(declare-fun temp900_214 () (_ BitVec 64))
(declare-fun temp900_215 () (_ BitVec 64))
(declare-fun temp900_216 () (_ BitVec 64))
(declare-fun temp900_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp900_218 () (_ BitVec 64))
(declare-fun temp900_220 () (_ BitVec 64))
(declare-fun temp900_221 () (_ BitVec 64))
(declare-fun temp900_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp900_222 () (_ BitVec 64))
(declare-fun temp900_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp900_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp900_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp900_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp900_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp900_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp900_229 () (_ BitVec 64))
(declare-fun temp900_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp900_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp900_232 () (_ BitVec 64))
(declare-fun temp900_233 () (_ BitVec 64))
(declare-fun temp900_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp900_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp900_236 () (_ BitVec 64))
(declare-fun temp900_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp900_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp900_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp900_240 () (_ BitVec 64))
(declare-fun temp900_241 () (_ BitVec 64))
(declare-fun var6959892 () (_ BitVec 64))
(declare-fun var6959859 () (_ BitVec 64))
(declare-fun var6828423 () (_ BitVec 64))
(declare-fun var6828419 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp900_242 () (_ BitVec 64))
(assert (= temp900_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp900_1)))
(assert (= temp900_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp900_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_3 #x0000000000000000))
(assert (= var79869 temp900_3))
(assert (= temp900_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp900_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_5 #x0000000000000000))
(assert (= var79914 temp900_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp900_6 #x0000000000000000))
(assert (= temp900_7 temp900_6))
(assert (= temp900_8 (select ARGNAME_padding_NAMEEND_VAL temp900_7)))
(assert (= temp900_9 #x0000000000000001))
(assert (= temp900_10 temp900_9))
(assert (= temp900_11 (select ARGNAME_padding_NAMEEND_VAL temp900_10)))
(assert (= temp900_12 #x0000000000000002))
(assert (= temp900_13 temp900_12))
(assert (= temp900_14 (select ARGNAME_padding_NAMEEND_VAL temp900_13)))
(assert (= temp900_15 #x0000000000000003))
(assert (= temp900_16 temp900_15))
(assert (= temp900_17 (select ARGNAME_padding_NAMEEND_VAL temp900_16)))
(assert (= temp900_18 #x0000000000000004))
(assert (= temp900_19 temp900_18))
(assert (= temp900_20 (select ARGNAME_padding_NAMEEND_VAL temp900_19)))
(assert (= temp900_21 #x0000000000000005))
(assert (= temp900_22 temp900_21))
(assert (= temp900_23 (select ARGNAME_padding_NAMEEND_VAL temp900_22)))
(assert (= temp900_24 #x0000000000000000))
(assert (= temp900_25 #x0000000000000000))
(assert (= temp900_26 temp900_25))
(assert (= temp900_27 (select ARGNAME_padding_NAMEEND_VAL temp900_26)))
(assert (= temp900_28 #x0000000000000000))
(assert (= temp900_29 #x0000000000000001))
(assert (= temp900_30 temp900_29))
(assert (= temp900_31 (select ARGNAME_padding_NAMEEND_VAL temp900_30)))
(assert (= temp900_32 #x0000000000000000))
(assert (= temp900_33 #x0000000000000002))
(assert (= temp900_34 temp900_33))
(assert (= temp900_35 (select ARGNAME_padding_NAMEEND_VAL temp900_34)))
(assert (= temp900_36 #x0000000000000000))
(assert (= temp900_37 #x0000000000000003))
(assert (= temp900_38 temp900_37))
(assert (= temp900_39 (select ARGNAME_padding_NAMEEND_VAL temp900_38)))
(assert (= temp900_40 #x0000000000000000))
(assert (= temp900_41 #x0000000000000004))
(assert (= temp900_42 temp900_41))
(assert (= temp900_43 (select ARGNAME_padding_NAMEEND_VAL temp900_42)))
(assert (= temp900_44 #x0000000000000000))
(assert (= temp900_45 #x0000000000000005))
(assert (= temp900_46 temp900_45))
(assert (= temp900_47 (select ARGNAME_padding_NAMEEND_VAL temp900_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp900_27 temp900_24)
             (bvslt temp900_31 temp900_28)
             (bvslt temp900_35 temp900_32)
             (bvslt temp900_39 temp900_36)
             (bvslt temp900_43 temp900_40)
             (bvslt temp900_47 temp900_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_48 #x0000000000000000))
(assert (= var1322786 temp900_48))
(assert (= temp900_49 #x0000000000000000))
(assert (= temp900_50 temp900_49))
(assert (= temp900_51 (select ARGNAME_output_padding_NAMEEND_VAL temp900_50)))
(assert (= temp900_52 #x0000000000000001))
(assert (= temp900_53 temp900_52))
(assert (= temp900_54 (select ARGNAME_output_padding_NAMEEND_VAL temp900_53)))
(assert (= temp900_55 #x0000000000000002))
(assert (= temp900_56 temp900_55))
(assert (= temp900_57 (select ARGNAME_output_padding_NAMEEND_VAL temp900_56)))
(assert (= temp900_58 #x0000000000000003))
(assert (= temp900_59 temp900_58))
(assert (= temp900_60 (select ARGNAME_output_padding_NAMEEND_VAL temp900_59)))
(assert (= temp900_61 #x0000000000000004))
(assert (= temp900_62 temp900_61))
(assert (= temp900_63 (select ARGNAME_output_padding_NAMEEND_VAL temp900_62)))
(assert (= temp900_64 #x0000000000000005))
(assert (= temp900_65 temp900_64))
(assert (= temp900_66 (select ARGNAME_output_padding_NAMEEND_VAL temp900_65)))
(assert (= temp900_67 #x0000000000000000))
(assert (= temp900_68 #x0000000000000000))
(assert (= temp900_69 temp900_68))
(assert (= temp900_70 (select ARGNAME_output_padding_NAMEEND_VAL temp900_69)))
(assert (= temp900_71 #x0000000000000000))
(assert (= temp900_72 #x0000000000000001))
(assert (= temp900_73 temp900_72))
(assert (= temp900_74 (select ARGNAME_output_padding_NAMEEND_VAL temp900_73)))
(assert (= temp900_75 #x0000000000000000))
(assert (= temp900_76 #x0000000000000002))
(assert (= temp900_77 temp900_76))
(assert (= temp900_78 (select ARGNAME_output_padding_NAMEEND_VAL temp900_77)))
(assert (= temp900_79 #x0000000000000000))
(assert (= temp900_80 #x0000000000000003))
(assert (= temp900_81 temp900_80))
(assert (= temp900_82 (select ARGNAME_output_padding_NAMEEND_VAL temp900_81)))
(assert (= temp900_83 #x0000000000000000))
(assert (= temp900_84 #x0000000000000004))
(assert (= temp900_85 temp900_84))
(assert (= temp900_86 (select ARGNAME_output_padding_NAMEEND_VAL temp900_85)))
(assert (= temp900_87 #x0000000000000000))
(assert (= temp900_88 #x0000000000000005))
(assert (= temp900_89 temp900_88))
(assert (= temp900_90 (select ARGNAME_output_padding_NAMEEND_VAL temp900_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp900_70 temp900_67)
             (bvslt temp900_74 temp900_71)
             (bvslt temp900_78 temp900_75)
             (bvslt temp900_82 temp900_79)
             (bvslt temp900_86 temp900_83)
             (bvslt temp900_90 temp900_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_91 #x0000000000000000))
(assert (= var1322797 temp900_91))
(assert (= temp900_92 #x0000000000000000))
(assert (= temp900_93 temp900_92))
(assert (= temp900_94 (select ARGNAME_stride_NAMEEND_VAL temp900_93)))
(assert (= temp900_95 #x0000000000000001))
(assert (= temp900_96 temp900_95))
(assert (= temp900_97 (select ARGNAME_stride_NAMEEND_VAL temp900_96)))
(assert (= temp900_98 #x0000000000000002))
(assert (= temp900_99 temp900_98))
(assert (= temp900_100 (select ARGNAME_stride_NAMEEND_VAL temp900_99)))
(assert (= temp900_101 #x0000000000000003))
(assert (= temp900_102 temp900_101))
(assert (= temp900_103 (select ARGNAME_stride_NAMEEND_VAL temp900_102)))
(assert (= temp900_104 #x0000000000000004))
(assert (= temp900_105 temp900_104))
(assert (= temp900_106 (select ARGNAME_stride_NAMEEND_VAL temp900_105)))
(assert (= temp900_107 #x0000000000000005))
(assert (= temp900_108 temp900_107))
(assert (= temp900_109 (select ARGNAME_stride_NAMEEND_VAL temp900_108)))
(assert (= temp900_110 #x0000000000000000))
(assert (= temp900_111 #x0000000000000000))
(assert (= temp900_112 temp900_111))
(assert (= temp900_113 (select ARGNAME_stride_NAMEEND_VAL temp900_112)))
(assert (= temp900_114 #x0000000000000000))
(assert (= temp900_115 #x0000000000000001))
(assert (= temp900_116 temp900_115))
(assert (= temp900_117 (select ARGNAME_stride_NAMEEND_VAL temp900_116)))
(assert (= temp900_118 #x0000000000000000))
(assert (= temp900_119 #x0000000000000002))
(assert (= temp900_120 temp900_119))
(assert (= temp900_121 (select ARGNAME_stride_NAMEEND_VAL temp900_120)))
(assert (= temp900_122 #x0000000000000000))
(assert (= temp900_123 #x0000000000000003))
(assert (= temp900_124 temp900_123))
(assert (= temp900_125 (select ARGNAME_stride_NAMEEND_VAL temp900_124)))
(assert (= temp900_126 #x0000000000000000))
(assert (= temp900_127 #x0000000000000004))
(assert (= temp900_128 temp900_127))
(assert (= temp900_129 (select ARGNAME_stride_NAMEEND_VAL temp900_128)))
(assert (= temp900_130 #x0000000000000000))
(assert (= temp900_131 #x0000000000000005))
(assert (= temp900_132 temp900_131))
(assert (= temp900_133 (select ARGNAME_stride_NAMEEND_VAL temp900_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp900_113 temp900_110)
             (bvsle temp900_117 temp900_114)
             (bvsle temp900_121 temp900_118)
             (bvsle temp900_125 temp900_122)
             (bvsle temp900_129 temp900_126)
             (bvsle temp900_133 temp900_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_134 #x0000000000000000))
(assert (= var1322807 temp900_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_135 #x0000000000000001))
(assert (= var1322819 temp900_135))
(assert (= temp900_136 #x0000000000000000))
(assert (= var1310898 temp900_136))
(assert (= temp900_137 #x0000000000000000))
(assert (= temp900_138 temp900_137))
(assert (= temp900_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_138)))
(assert (= temp900_140 #x0000000000000001))
(assert (= temp900_141 temp900_140))
(assert (= temp900_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_141)))
(assert (= temp900_143 #x0000000000000002))
(assert (= temp900_144 temp900_143))
(assert (= temp900_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_144)))
(assert (= temp900_146 #x0000000000000003))
(assert (= temp900_147 temp900_146))
(assert (= temp900_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_147)))
(assert (= temp900_149 #x0000000000000004))
(assert (= temp900_150 temp900_149))
(assert (= temp900_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_150)))
(assert (= temp900_152 #x0000000000000005))
(assert (= temp900_153 temp900_152))
(assert (= temp900_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_153)))
(assert (= temp900_156 var1310898))
(assert (= temp900_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_156)))
(assert (= temp900_155 temp900_157))
(assert (= var1322852
   (ite (bvslt temp900_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_158 #x0000000000000000))
(assert (= var1322852 temp900_158))
(assert (= temp900_159 #x0000000000000000))
(assert (= var1310898 temp900_159))
(assert (= temp900_161 var1310898))
(assert (= temp900_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_161)))
(assert (= temp900_160 temp900_162))
(assert (= var1322874 (bvsmod temp900_160 ARGNAME_groups_NAMEEND)))
(assert (= temp900_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp900_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp900_164 #x0000000000000001))
(assert (= var1322875 temp900_164))
(assert (= temp900_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp900_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_166 #x0000000000000001))
(assert (= var1322895 temp900_166))
(assert (= temp900_167 #x0000000000000001))
(assert (= var1311786 temp900_167))
(assert (= temp900_168 #x0000000000000000))
(assert (= temp900_169 temp900_168))
(assert (= temp900_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_169)))
(assert (= temp900_171 #x0000000000000001))
(assert (= temp900_172 temp900_171))
(assert (= temp900_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_172)))
(assert (= temp900_174 #x0000000000000002))
(assert (= temp900_175 temp900_174))
(assert (= temp900_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_175)))
(assert (= temp900_177 #x0000000000000003))
(assert (= temp900_178 temp900_177))
(assert (= temp900_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_178)))
(assert (= temp900_180 #x0000000000000004))
(assert (= temp900_181 temp900_180))
(assert (= temp900_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_181)))
(assert (= temp900_183 #x0000000000000005))
(assert (= temp900_184 temp900_183))
(assert (= temp900_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_184)))
(assert (= temp900_186 #x0000000000000000))
(assert (= temp900_187
   (ite (bvslt var1311786 temp900_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp900_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_187)))
(assert (= var1322903 temp900_188))
(assert (bvslt (ite (bvslt var1311786 temp900_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp900_189 #x0000000000000001))
(assert (= var1311786 temp900_189))
(assert (= temp900_191 var1311786))
(assert (= temp900_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_191)))
(assert (= temp900_190 temp900_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp900_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp900_193 #x0000000000000001))
(assert (= var1322908 temp900_193))
(assert (= temp900_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp900_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_195 #x0000000000000001))
(assert (= var1322975 temp900_195))
(assert (= temp900_196 #x0000000000000000))
(assert (= var1310898 temp900_196))
(assert (= temp900_197 #x0000000000000000))
(assert (= temp900_198 temp900_197))
(assert (= temp900_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp900_198)))
(assert (= temp900_200 #x0000000000000001))
(assert (= temp900_201 temp900_200))
(assert (= temp900_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp900_201)))
(assert (= temp900_203 #x0000000000000002))
(assert (= temp900_204 temp900_203))
(assert (= temp900_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp900_204)))
(assert (= temp900_206 #x0000000000000003))
(assert (= temp900_207 temp900_206))
(assert (= temp900_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp900_207)))
(assert (= temp900_209 #x0000000000000004))
(assert (= temp900_210 temp900_209))
(assert (= temp900_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp900_210)))
(assert (= temp900_212 #x0000000000000005))
(assert (= temp900_213 temp900_212))
(assert (= temp900_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp900_213)))
(assert (= temp900_215 #x0000000000000000))
(assert (= temp900_216
   (ite (bvslt var1310898 temp900_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp900_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp900_216)))
(assert (= var1322977 temp900_217))
(assert (bvslt (ite (bvslt var1310898 temp900_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp900_218 #x0000000000000000))
(assert (= var1310898 temp900_218))
(assert (= temp900_220 var1310898))
(assert (= temp900_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp900_220)))
(assert (= temp900_219 temp900_221))
(assert (= var1322980
   (ite (= var1322977 temp900_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp900_222 #x0000000000000001))
(assert (= var1322980 temp900_222))
(assert (= temp900_223 #x0000000000000002))
(assert (= var1848169 temp900_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp900_225 #x0000000000000001))
(assert (= var1323065 temp900_225))
(assert (= temp900_226 #x0000000000000001))
(assert (= var3486735 temp900_226))
(assert (= temp900_227 #x0000000000000001))
(assert (= var3814415 temp900_227))
(assert (= temp900_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp900_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_229 #x0000000000000001))
(assert (= var79986 temp900_229))
(assert (= temp900_230 #x0000000000000001))
(assert (= var80116 temp900_230))
(assert (= var4796905 var80116))
(assert (= temp900_231 #x0000000000000000))
(assert (= var4784306 temp900_231))
(assert (= temp900_232 #x0000000000000000))
(assert (= temp900_233
   (ite (bvslt var4784306 temp900_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp900_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_233)))
(assert (= var4796924 temp900_234))
(assert (bvslt (ite (bvslt var4784306 temp900_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp900_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp900_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp900_236 #x0000000000000001))
(assert (= var4796925 temp900_236))
(assert (= temp900_237 #x0000000000000000))
(assert (= var4996927 temp900_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp900_238 #x0000000000000002))
(assert (= var5125763 temp900_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_239 #x0000000000000000))
(assert (= var5191324 temp900_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp900_240 #x0000000000000001))
(assert (= var79986 temp900_240))
(assert (= temp900_241 #x0000000000000000))
(assert (= var6959892 temp900_241))
(assert (= var6959859 var6959892))
(assert (= var6828423 var6959859))
(assert (= var6828419 var6828423))
(assert (= var81597 var6828419))
(assert (= temp900_242 #x0000000000000000))
(assert (= var81597 temp900_242))
(model-add temp900_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp900_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp900_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






