(declare-fun temp1102_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1102_2 () (_ BitVec 64))
(declare-fun temp1102_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1102_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1102_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1102_6 () (_ BitVec 64))
(declare-fun temp1102_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1102_8 () (_ BitVec 64))
(declare-fun temp1102_9 () (_ BitVec 64))
(declare-fun temp1102_10 () (_ BitVec 64))
(declare-fun temp1102_11 () (_ BitVec 64))
(declare-fun temp1102_12 () (_ BitVec 64))
(declare-fun temp1102_13 () (_ BitVec 64))
(declare-fun temp1102_14 () (_ BitVec 64))
(declare-fun temp1102_15 () (_ BitVec 64))
(declare-fun temp1102_16 () (_ BitVec 64))
(declare-fun temp1102_17 () (_ BitVec 64))
(declare-fun temp1102_18 () (_ BitVec 64))
(declare-fun temp1102_19 () (_ BitVec 64))
(declare-fun temp1102_20 () (_ BitVec 64))
(declare-fun temp1102_21 () (_ BitVec 64))
(declare-fun temp1102_22 () (_ BitVec 64))
(declare-fun temp1102_23 () (_ BitVec 64))
(declare-fun temp1102_24 () (_ BitVec 64))
(declare-fun temp1102_25 () (_ BitVec 64))
(declare-fun temp1102_26 () (_ BitVec 64))
(declare-fun temp1102_27 () (_ BitVec 64))
(declare-fun temp1102_28 () (_ BitVec 64))
(declare-fun temp1102_29 () (_ BitVec 64))
(declare-fun temp1102_30 () (_ BitVec 64))
(declare-fun temp1102_31 () (_ BitVec 64))
(declare-fun temp1102_32 () (_ BitVec 64))
(declare-fun temp1102_33 () (_ BitVec 64))
(declare-fun temp1102_34 () (_ BitVec 64))
(declare-fun temp1102_35 () (_ BitVec 64))
(declare-fun temp1102_36 () (_ BitVec 64))
(declare-fun temp1102_37 () (_ BitVec 64))
(declare-fun temp1102_38 () (_ BitVec 64))
(declare-fun temp1102_39 () (_ BitVec 64))
(declare-fun temp1102_40 () (_ BitVec 64))
(declare-fun temp1102_41 () (_ BitVec 64))
(declare-fun temp1102_42 () (_ BitVec 64))
(declare-fun temp1102_43 () (_ BitVec 64))
(declare-fun temp1102_44 () (_ BitVec 64))
(declare-fun temp1102_45 () (_ BitVec 64))
(declare-fun temp1102_46 () (_ BitVec 64))
(declare-fun temp1102_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1102_48 () (_ BitVec 64))
(declare-fun temp1102_49 () (_ BitVec 64))
(declare-fun temp1102_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1102_51 () (_ BitVec 64))
(declare-fun temp1102_52 () (_ BitVec 64))
(declare-fun temp1102_53 () (_ BitVec 64))
(declare-fun temp1102_54 () (_ BitVec 64))
(declare-fun temp1102_55 () (_ BitVec 64))
(declare-fun temp1102_56 () (_ BitVec 64))
(declare-fun temp1102_57 () (_ BitVec 64))
(declare-fun temp1102_58 () (_ BitVec 64))
(declare-fun temp1102_59 () (_ BitVec 64))
(declare-fun temp1102_60 () (_ BitVec 64))
(declare-fun temp1102_61 () (_ BitVec 64))
(declare-fun temp1102_62 () (_ BitVec 64))
(declare-fun temp1102_63 () (_ BitVec 64))
(declare-fun temp1102_64 () (_ BitVec 64))
(declare-fun temp1102_65 () (_ BitVec 64))
(declare-fun temp1102_66 () (_ BitVec 64))
(declare-fun temp1102_67 () (_ BitVec 64))
(declare-fun temp1102_68 () (_ BitVec 64))
(declare-fun temp1102_69 () (_ BitVec 64))
(declare-fun temp1102_70 () (_ BitVec 64))
(declare-fun temp1102_71 () (_ BitVec 64))
(declare-fun temp1102_72 () (_ BitVec 64))
(declare-fun temp1102_73 () (_ BitVec 64))
(declare-fun temp1102_74 () (_ BitVec 64))
(declare-fun temp1102_75 () (_ BitVec 64))
(declare-fun temp1102_76 () (_ BitVec 64))
(declare-fun temp1102_77 () (_ BitVec 64))
(declare-fun temp1102_78 () (_ BitVec 64))
(declare-fun temp1102_79 () (_ BitVec 64))
(declare-fun temp1102_80 () (_ BitVec 64))
(declare-fun temp1102_81 () (_ BitVec 64))
(declare-fun temp1102_82 () (_ BitVec 64))
(declare-fun temp1102_83 () (_ BitVec 64))
(declare-fun temp1102_84 () (_ BitVec 64))
(declare-fun temp1102_85 () (_ BitVec 64))
(declare-fun temp1102_86 () (_ BitVec 64))
(declare-fun temp1102_87 () (_ BitVec 64))
(declare-fun temp1102_88 () (_ BitVec 64))
(declare-fun temp1102_89 () (_ BitVec 64))
(declare-fun temp1102_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1102_91 () (_ BitVec 64))
(declare-fun temp1102_92 () (_ BitVec 64))
(declare-fun temp1102_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1102_94 () (_ BitVec 64))
(declare-fun temp1102_95 () (_ BitVec 64))
(declare-fun temp1102_96 () (_ BitVec 64))
(declare-fun temp1102_97 () (_ BitVec 64))
(declare-fun temp1102_98 () (_ BitVec 64))
(declare-fun temp1102_99 () (_ BitVec 64))
(declare-fun temp1102_100 () (_ BitVec 64))
(declare-fun temp1102_101 () (_ BitVec 64))
(declare-fun temp1102_102 () (_ BitVec 64))
(declare-fun temp1102_103 () (_ BitVec 64))
(declare-fun temp1102_104 () (_ BitVec 64))
(declare-fun temp1102_105 () (_ BitVec 64))
(declare-fun temp1102_106 () (_ BitVec 64))
(declare-fun temp1102_107 () (_ BitVec 64))
(declare-fun temp1102_108 () (_ BitVec 64))
(declare-fun temp1102_109 () (_ BitVec 64))
(declare-fun temp1102_110 () (_ BitVec 64))
(declare-fun temp1102_111 () (_ BitVec 64))
(declare-fun temp1102_112 () (_ BitVec 64))
(declare-fun temp1102_113 () (_ BitVec 64))
(declare-fun temp1102_114 () (_ BitVec 64))
(declare-fun temp1102_115 () (_ BitVec 64))
(declare-fun temp1102_116 () (_ BitVec 64))
(declare-fun temp1102_117 () (_ BitVec 64))
(declare-fun temp1102_118 () (_ BitVec 64))
(declare-fun temp1102_119 () (_ BitVec 64))
(declare-fun temp1102_120 () (_ BitVec 64))
(declare-fun temp1102_121 () (_ BitVec 64))
(declare-fun temp1102_122 () (_ BitVec 64))
(declare-fun temp1102_123 () (_ BitVec 64))
(declare-fun temp1102_124 () (_ BitVec 64))
(declare-fun temp1102_125 () (_ BitVec 64))
(declare-fun temp1102_126 () (_ BitVec 64))
(declare-fun temp1102_127 () (_ BitVec 64))
(declare-fun temp1102_128 () (_ BitVec 64))
(declare-fun temp1102_129 () (_ BitVec 64))
(declare-fun temp1102_130 () (_ BitVec 64))
(declare-fun temp1102_131 () (_ BitVec 64))
(declare-fun temp1102_132 () (_ BitVec 64))
(declare-fun temp1102_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1102_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1102_135 () (_ BitVec 64))
(declare-fun temp1102_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1102_137 () (_ BitVec 64))
(declare-fun temp1102_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1102_139 () (_ BitVec 64))
(declare-fun temp1102_140 () (_ BitVec 64))
(declare-fun temp1102_141 () (_ BitVec 64))
(declare-fun temp1102_142 () (_ BitVec 64))
(declare-fun temp1102_143 () (_ BitVec 64))
(declare-fun temp1102_144 () (_ BitVec 64))
(declare-fun temp1102_145 () (_ BitVec 64))
(declare-fun temp1102_146 () (_ BitVec 64))
(declare-fun temp1102_147 () (_ BitVec 64))
(declare-fun temp1102_148 () (_ BitVec 64))
(declare-fun temp1102_149 () (_ BitVec 64))
(declare-fun temp1102_150 () (_ BitVec 64))
(declare-fun temp1102_151 () (_ BitVec 64))
(declare-fun temp1102_152 () (_ BitVec 64))
(declare-fun temp1102_153 () (_ BitVec 64))
(declare-fun temp1102_154 () (_ BitVec 64))
(declare-fun temp1102_156 () (_ BitVec 64))
(declare-fun temp1102_157 () (_ BitVec 64))
(declare-fun temp1102_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1102_158 () (_ BitVec 64))
(declare-fun temp1102_159 () (_ BitVec 64))
(declare-fun temp1102_161 () (_ BitVec 64))
(declare-fun temp1102_162 () (_ BitVec 64))
(declare-fun temp1102_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1102_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1102_164 () (_ BitVec 64))
(declare-fun temp1102_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1102_166 () (_ BitVec 64))
(declare-fun temp1102_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1102_168 () (_ BitVec 64))
(declare-fun temp1102_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1102_170 () (_ BitVec 64))
(declare-fun temp1102_171 () (_ BitVec 64))
(declare-fun temp1102_172 () (_ BitVec 64))
(declare-fun temp1102_173 () (_ BitVec 64))
(declare-fun temp1102_174 () (_ BitVec 64))
(declare-fun temp1102_175 () (_ BitVec 64))
(declare-fun temp1102_176 () (_ BitVec 64))
(declare-fun temp1102_177 () (_ BitVec 64))
(declare-fun temp1102_178 () (_ BitVec 64))
(declare-fun temp1102_179 () (_ BitVec 64))
(declare-fun temp1102_180 () (_ BitVec 64))
(declare-fun temp1102_181 () (_ BitVec 64))
(declare-fun temp1102_182 () (_ BitVec 64))
(declare-fun temp1102_183 () (_ BitVec 64))
(declare-fun temp1102_184 () (_ BitVec 64))
(declare-fun temp1102_185 () (_ BitVec 64))
(declare-fun temp1102_186 () (_ BitVec 64))
(declare-fun temp1102_187 () (_ BitVec 64))
(declare-fun temp1102_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1102_189 () (_ BitVec 64))
(declare-fun temp1102_191 () (_ BitVec 64))
(declare-fun temp1102_192 () (_ BitVec 64))
(declare-fun temp1102_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1102_193 () (_ BitVec 64))
(declare-fun temp1102_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1102_195 () (_ BitVec 64))
(declare-fun temp1102_196 () (_ BitVec 64))
(declare-fun temp1102_197 () (_ BitVec 64))
(declare-fun temp1102_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1102_199 () (_ BitVec 64))
(declare-fun temp1102_200 () (_ BitVec 64))
(declare-fun temp1102_201 () (_ BitVec 64))
(declare-fun temp1102_202 () (_ BitVec 64))
(declare-fun temp1102_203 () (_ BitVec 64))
(declare-fun temp1102_204 () (_ BitVec 64))
(declare-fun temp1102_205 () (_ BitVec 64))
(declare-fun temp1102_206 () (_ BitVec 64))
(declare-fun temp1102_207 () (_ BitVec 64))
(declare-fun temp1102_208 () (_ BitVec 64))
(declare-fun temp1102_209 () (_ BitVec 64))
(declare-fun temp1102_210 () (_ BitVec 64))
(declare-fun temp1102_211 () (_ BitVec 64))
(declare-fun temp1102_212 () (_ BitVec 64))
(declare-fun temp1102_213 () (_ BitVec 64))
(declare-fun temp1102_214 () (_ BitVec 64))
(declare-fun temp1102_215 () (_ BitVec 64))
(declare-fun temp1102_216 () (_ BitVec 64))
(declare-fun temp1102_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1102_218 () (_ BitVec 64))
(declare-fun temp1102_220 () (_ BitVec 64))
(declare-fun temp1102_221 () (_ BitVec 64))
(declare-fun temp1102_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1102_222 () (_ BitVec 64))
(declare-fun temp1102_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1102_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1102_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1102_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1102_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1102_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1102_229 () (_ BitVec 64))
(declare-fun temp1102_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1102_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1102_232 () (_ BitVec 64))
(declare-fun temp1102_233 () (_ BitVec 64))
(declare-fun temp1102_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1102_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1102_236 () (_ BitVec 64))
(declare-fun temp1102_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1102_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1102_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1102_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1102_241 () (_ BitVec 64))
(declare-fun temp1102_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp1102_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp1102_244 () (_ BitVec 64))
(assert (= temp1102_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1102_1)))
(assert (= temp1102_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1102_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_3 #x0000000000000000))
(assert (= var79869 temp1102_3))
(assert (= temp1102_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1102_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_5 #x0000000000000000))
(assert (= var79914 temp1102_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1102_6 #x0000000000000000))
(assert (= temp1102_7 temp1102_6))
(assert (= temp1102_8 (select ARGNAME_padding_NAMEEND_VAL temp1102_7)))
(assert (= temp1102_9 #x0000000000000001))
(assert (= temp1102_10 temp1102_9))
(assert (= temp1102_11 (select ARGNAME_padding_NAMEEND_VAL temp1102_10)))
(assert (= temp1102_12 #x0000000000000002))
(assert (= temp1102_13 temp1102_12))
(assert (= temp1102_14 (select ARGNAME_padding_NAMEEND_VAL temp1102_13)))
(assert (= temp1102_15 #x0000000000000003))
(assert (= temp1102_16 temp1102_15))
(assert (= temp1102_17 (select ARGNAME_padding_NAMEEND_VAL temp1102_16)))
(assert (= temp1102_18 #x0000000000000004))
(assert (= temp1102_19 temp1102_18))
(assert (= temp1102_20 (select ARGNAME_padding_NAMEEND_VAL temp1102_19)))
(assert (= temp1102_21 #x0000000000000005))
(assert (= temp1102_22 temp1102_21))
(assert (= temp1102_23 (select ARGNAME_padding_NAMEEND_VAL temp1102_22)))
(assert (= temp1102_24 #x0000000000000000))
(assert (= temp1102_25 #x0000000000000000))
(assert (= temp1102_26 temp1102_25))
(assert (= temp1102_27 (select ARGNAME_padding_NAMEEND_VAL temp1102_26)))
(assert (= temp1102_28 #x0000000000000000))
(assert (= temp1102_29 #x0000000000000001))
(assert (= temp1102_30 temp1102_29))
(assert (= temp1102_31 (select ARGNAME_padding_NAMEEND_VAL temp1102_30)))
(assert (= temp1102_32 #x0000000000000000))
(assert (= temp1102_33 #x0000000000000002))
(assert (= temp1102_34 temp1102_33))
(assert (= temp1102_35 (select ARGNAME_padding_NAMEEND_VAL temp1102_34)))
(assert (= temp1102_36 #x0000000000000000))
(assert (= temp1102_37 #x0000000000000003))
(assert (= temp1102_38 temp1102_37))
(assert (= temp1102_39 (select ARGNAME_padding_NAMEEND_VAL temp1102_38)))
(assert (= temp1102_40 #x0000000000000000))
(assert (= temp1102_41 #x0000000000000004))
(assert (= temp1102_42 temp1102_41))
(assert (= temp1102_43 (select ARGNAME_padding_NAMEEND_VAL temp1102_42)))
(assert (= temp1102_44 #x0000000000000000))
(assert (= temp1102_45 #x0000000000000005))
(assert (= temp1102_46 temp1102_45))
(assert (= temp1102_47 (select ARGNAME_padding_NAMEEND_VAL temp1102_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1102_27 temp1102_24)
             (bvslt temp1102_31 temp1102_28)
             (bvslt temp1102_35 temp1102_32)
             (bvslt temp1102_39 temp1102_36)
             (bvslt temp1102_43 temp1102_40)
             (bvslt temp1102_47 temp1102_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_48 #x0000000000000000))
(assert (= var1322786 temp1102_48))
(assert (= temp1102_49 #x0000000000000000))
(assert (= temp1102_50 temp1102_49))
(assert (= temp1102_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_50)))
(assert (= temp1102_52 #x0000000000000001))
(assert (= temp1102_53 temp1102_52))
(assert (= temp1102_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_53)))
(assert (= temp1102_55 #x0000000000000002))
(assert (= temp1102_56 temp1102_55))
(assert (= temp1102_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_56)))
(assert (= temp1102_58 #x0000000000000003))
(assert (= temp1102_59 temp1102_58))
(assert (= temp1102_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_59)))
(assert (= temp1102_61 #x0000000000000004))
(assert (= temp1102_62 temp1102_61))
(assert (= temp1102_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_62)))
(assert (= temp1102_64 #x0000000000000005))
(assert (= temp1102_65 temp1102_64))
(assert (= temp1102_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_65)))
(assert (= temp1102_67 #x0000000000000000))
(assert (= temp1102_68 #x0000000000000000))
(assert (= temp1102_69 temp1102_68))
(assert (= temp1102_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_69)))
(assert (= temp1102_71 #x0000000000000000))
(assert (= temp1102_72 #x0000000000000001))
(assert (= temp1102_73 temp1102_72))
(assert (= temp1102_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_73)))
(assert (= temp1102_75 #x0000000000000000))
(assert (= temp1102_76 #x0000000000000002))
(assert (= temp1102_77 temp1102_76))
(assert (= temp1102_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_77)))
(assert (= temp1102_79 #x0000000000000000))
(assert (= temp1102_80 #x0000000000000003))
(assert (= temp1102_81 temp1102_80))
(assert (= temp1102_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_81)))
(assert (= temp1102_83 #x0000000000000000))
(assert (= temp1102_84 #x0000000000000004))
(assert (= temp1102_85 temp1102_84))
(assert (= temp1102_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_85)))
(assert (= temp1102_87 #x0000000000000000))
(assert (= temp1102_88 #x0000000000000005))
(assert (= temp1102_89 temp1102_88))
(assert (= temp1102_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1102_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1102_70 temp1102_67)
             (bvslt temp1102_74 temp1102_71)
             (bvslt temp1102_78 temp1102_75)
             (bvslt temp1102_82 temp1102_79)
             (bvslt temp1102_86 temp1102_83)
             (bvslt temp1102_90 temp1102_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_91 #x0000000000000000))
(assert (= var1322797 temp1102_91))
(assert (= temp1102_92 #x0000000000000000))
(assert (= temp1102_93 temp1102_92))
(assert (= temp1102_94 (select ARGNAME_stride_NAMEEND_VAL temp1102_93)))
(assert (= temp1102_95 #x0000000000000001))
(assert (= temp1102_96 temp1102_95))
(assert (= temp1102_97 (select ARGNAME_stride_NAMEEND_VAL temp1102_96)))
(assert (= temp1102_98 #x0000000000000002))
(assert (= temp1102_99 temp1102_98))
(assert (= temp1102_100 (select ARGNAME_stride_NAMEEND_VAL temp1102_99)))
(assert (= temp1102_101 #x0000000000000003))
(assert (= temp1102_102 temp1102_101))
(assert (= temp1102_103 (select ARGNAME_stride_NAMEEND_VAL temp1102_102)))
(assert (= temp1102_104 #x0000000000000004))
(assert (= temp1102_105 temp1102_104))
(assert (= temp1102_106 (select ARGNAME_stride_NAMEEND_VAL temp1102_105)))
(assert (= temp1102_107 #x0000000000000005))
(assert (= temp1102_108 temp1102_107))
(assert (= temp1102_109 (select ARGNAME_stride_NAMEEND_VAL temp1102_108)))
(assert (= temp1102_110 #x0000000000000000))
(assert (= temp1102_111 #x0000000000000000))
(assert (= temp1102_112 temp1102_111))
(assert (= temp1102_113 (select ARGNAME_stride_NAMEEND_VAL temp1102_112)))
(assert (= temp1102_114 #x0000000000000000))
(assert (= temp1102_115 #x0000000000000001))
(assert (= temp1102_116 temp1102_115))
(assert (= temp1102_117 (select ARGNAME_stride_NAMEEND_VAL temp1102_116)))
(assert (= temp1102_118 #x0000000000000000))
(assert (= temp1102_119 #x0000000000000002))
(assert (= temp1102_120 temp1102_119))
(assert (= temp1102_121 (select ARGNAME_stride_NAMEEND_VAL temp1102_120)))
(assert (= temp1102_122 #x0000000000000000))
(assert (= temp1102_123 #x0000000000000003))
(assert (= temp1102_124 temp1102_123))
(assert (= temp1102_125 (select ARGNAME_stride_NAMEEND_VAL temp1102_124)))
(assert (= temp1102_126 #x0000000000000000))
(assert (= temp1102_127 #x0000000000000004))
(assert (= temp1102_128 temp1102_127))
(assert (= temp1102_129 (select ARGNAME_stride_NAMEEND_VAL temp1102_128)))
(assert (= temp1102_130 #x0000000000000000))
(assert (= temp1102_131 #x0000000000000005))
(assert (= temp1102_132 temp1102_131))
(assert (= temp1102_133 (select ARGNAME_stride_NAMEEND_VAL temp1102_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1102_113 temp1102_110)
             (bvsle temp1102_117 temp1102_114)
             (bvsle temp1102_121 temp1102_118)
             (bvsle temp1102_125 temp1102_122)
             (bvsle temp1102_129 temp1102_126)
             (bvsle temp1102_133 temp1102_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_134 #x0000000000000000))
(assert (= var1322807 temp1102_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_135 #x0000000000000001))
(assert (= var1322819 temp1102_135))
(assert (= temp1102_136 #x0000000000000000))
(assert (= var1310898 temp1102_136))
(assert (= temp1102_137 #x0000000000000000))
(assert (= temp1102_138 temp1102_137))
(assert (= temp1102_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_138)))
(assert (= temp1102_140 #x0000000000000001))
(assert (= temp1102_141 temp1102_140))
(assert (= temp1102_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_141)))
(assert (= temp1102_143 #x0000000000000002))
(assert (= temp1102_144 temp1102_143))
(assert (= temp1102_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_144)))
(assert (= temp1102_146 #x0000000000000003))
(assert (= temp1102_147 temp1102_146))
(assert (= temp1102_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_147)))
(assert (= temp1102_149 #x0000000000000004))
(assert (= temp1102_150 temp1102_149))
(assert (= temp1102_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_150)))
(assert (= temp1102_152 #x0000000000000005))
(assert (= temp1102_153 temp1102_152))
(assert (= temp1102_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_153)))
(assert (= temp1102_156 var1310898))
(assert (= temp1102_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_156)))
(assert (= temp1102_155 temp1102_157))
(assert (= var1322852
   (ite (bvslt temp1102_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_158 #x0000000000000000))
(assert (= var1322852 temp1102_158))
(assert (= temp1102_159 #x0000000000000000))
(assert (= var1310898 temp1102_159))
(assert (= temp1102_161 var1310898))
(assert (= temp1102_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_161)))
(assert (= temp1102_160 temp1102_162))
(assert (= var1322874 (bvsmod temp1102_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1102_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1102_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1102_164 #x0000000000000001))
(assert (= var1322875 temp1102_164))
(assert (= temp1102_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1102_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_166 #x0000000000000001))
(assert (= var1322895 temp1102_166))
(assert (= temp1102_167 #x0000000000000001))
(assert (= var1311786 temp1102_167))
(assert (= temp1102_168 #x0000000000000000))
(assert (= temp1102_169 temp1102_168))
(assert (= temp1102_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1102_169)))
(assert (= temp1102_171 #x0000000000000001))
(assert (= temp1102_172 temp1102_171))
(assert (= temp1102_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1102_172)))
(assert (= temp1102_174 #x0000000000000002))
(assert (= temp1102_175 temp1102_174))
(assert (= temp1102_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1102_175)))
(assert (= temp1102_177 #x0000000000000003))
(assert (= temp1102_178 temp1102_177))
(assert (= temp1102_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1102_178)))
(assert (= temp1102_180 #x0000000000000004))
(assert (= temp1102_181 temp1102_180))
(assert (= temp1102_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1102_181)))
(assert (= temp1102_183 #x0000000000000005))
(assert (= temp1102_184 temp1102_183))
(assert (= temp1102_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1102_184)))
(assert (= temp1102_186 #x0000000000000000))
(assert (= temp1102_187
   (ite (bvslt var1311786 temp1102_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1102_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1102_187)))
(assert (= var1322903 temp1102_188))
(assert (bvslt (ite (bvslt var1311786 temp1102_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1102_189 #x0000000000000001))
(assert (= var1311786 temp1102_189))
(assert (= temp1102_191 var1311786))
(assert (= temp1102_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_191)))
(assert (= temp1102_190 temp1102_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1102_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1102_193 #x0000000000000001))
(assert (= var1322908 temp1102_193))
(assert (= temp1102_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1102_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_195 #x0000000000000001))
(assert (= var1322975 temp1102_195))
(assert (= temp1102_196 #x0000000000000000))
(assert (= var1310898 temp1102_196))
(assert (= temp1102_197 #x0000000000000000))
(assert (= temp1102_198 temp1102_197))
(assert (= temp1102_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1102_198)))
(assert (= temp1102_200 #x0000000000000001))
(assert (= temp1102_201 temp1102_200))
(assert (= temp1102_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1102_201)))
(assert (= temp1102_203 #x0000000000000002))
(assert (= temp1102_204 temp1102_203))
(assert (= temp1102_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1102_204)))
(assert (= temp1102_206 #x0000000000000003))
(assert (= temp1102_207 temp1102_206))
(assert (= temp1102_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1102_207)))
(assert (= temp1102_209 #x0000000000000004))
(assert (= temp1102_210 temp1102_209))
(assert (= temp1102_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1102_210)))
(assert (= temp1102_212 #x0000000000000005))
(assert (= temp1102_213 temp1102_212))
(assert (= temp1102_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1102_213)))
(assert (= temp1102_215 #x0000000000000000))
(assert (= temp1102_216
   (ite (bvslt var1310898 temp1102_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1102_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1102_216)))
(assert (= var1322977 temp1102_217))
(assert (bvslt (ite (bvslt var1310898 temp1102_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1102_218 #x0000000000000000))
(assert (= var1310898 temp1102_218))
(assert (= temp1102_220 var1310898))
(assert (= temp1102_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1102_220)))
(assert (= temp1102_219 temp1102_221))
(assert (= var1322980
   (ite (= var1322977 temp1102_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1102_222 #x0000000000000001))
(assert (= var1322980 temp1102_222))
(assert (= temp1102_223 #x0000000000000002))
(assert (= var1848169 temp1102_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1102_225 #x0000000000000001))
(assert (= var1323065 temp1102_225))
(assert (= temp1102_226 #x0000000000000001))
(assert (= var3486735 temp1102_226))
(assert (= temp1102_227 #x0000000000000001))
(assert (= var3814415 temp1102_227))
(assert (= temp1102_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1102_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_229 #x0000000000000001))
(assert (= var79986 temp1102_229))
(assert (= temp1102_230 #x0000000000000001))
(assert (= var80116 temp1102_230))
(assert (= var4796905 var80116))
(assert (= temp1102_231 #x0000000000000000))
(assert (= var4784306 temp1102_231))
(assert (= temp1102_232 #x0000000000000000))
(assert (= temp1102_233
   (ite (bvslt var4784306 temp1102_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1102_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1102_233)))
(assert (= var4796924 temp1102_234))
(assert (bvslt (ite (bvslt var4784306 temp1102_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1102_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1102_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1102_236 #x0000000000000001))
(assert (= var4796925 temp1102_236))
(assert (= temp1102_237 #x0000000000000000))
(assert (= var4996927 temp1102_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1102_238 #x0000000000000002))
(assert (= var5125763 temp1102_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_239 #x0000000000000000))
(assert (= var5191324 temp1102_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1102_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1102_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_241 #x0000000000000001))
(assert (= var81342 temp1102_241))
(assert (= temp1102_242 #x0000000000000002))
(assert (= var5977731 temp1102_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1102_243 #x0000000000000000))
(assert (= var6043292 temp1102_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp1102_244 #x0000000000000001))
(assert (= var79986 temp1102_244))
(model-add temp1102_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1102_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1102_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






