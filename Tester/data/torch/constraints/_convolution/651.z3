(declare-fun temp865_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp865_2 () (_ BitVec 64))
(declare-fun temp865_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp865_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp865_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp865_6 () (_ BitVec 64))
(declare-fun temp865_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_8 () (_ BitVec 64))
(declare-fun temp865_9 () (_ BitVec 64))
(declare-fun temp865_10 () (_ BitVec 64))
(declare-fun temp865_11 () (_ BitVec 64))
(declare-fun temp865_12 () (_ BitVec 64))
(declare-fun temp865_13 () (_ BitVec 64))
(declare-fun temp865_14 () (_ BitVec 64))
(declare-fun temp865_15 () (_ BitVec 64))
(declare-fun temp865_16 () (_ BitVec 64))
(declare-fun temp865_17 () (_ BitVec 64))
(declare-fun temp865_18 () (_ BitVec 64))
(declare-fun temp865_19 () (_ BitVec 64))
(declare-fun temp865_20 () (_ BitVec 64))
(declare-fun temp865_21 () (_ BitVec 64))
(declare-fun temp865_22 () (_ BitVec 64))
(declare-fun temp865_23 () (_ BitVec 64))
(declare-fun temp865_24 () (_ BitVec 64))
(declare-fun temp865_25 () (_ BitVec 64))
(declare-fun temp865_26 () (_ BitVec 64))
(declare-fun temp865_27 () (_ BitVec 64))
(declare-fun temp865_28 () (_ BitVec 64))
(declare-fun temp865_29 () (_ BitVec 64))
(declare-fun temp865_30 () (_ BitVec 64))
(declare-fun temp865_31 () (_ BitVec 64))
(declare-fun temp865_32 () (_ BitVec 64))
(declare-fun temp865_33 () (_ BitVec 64))
(declare-fun temp865_34 () (_ BitVec 64))
(declare-fun temp865_35 () (_ BitVec 64))
(declare-fun temp865_36 () (_ BitVec 64))
(declare-fun temp865_37 () (_ BitVec 64))
(declare-fun temp865_38 () (_ BitVec 64))
(declare-fun temp865_39 () (_ BitVec 64))
(declare-fun temp865_40 () (_ BitVec 64))
(declare-fun temp865_41 () (_ BitVec 64))
(declare-fun temp865_42 () (_ BitVec 64))
(declare-fun temp865_43 () (_ BitVec 64))
(declare-fun temp865_44 () (_ BitVec 64))
(declare-fun temp865_45 () (_ BitVec 64))
(declare-fun temp865_46 () (_ BitVec 64))
(declare-fun temp865_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp865_48 () (_ BitVec 64))
(declare-fun temp865_49 () (_ BitVec 64))
(declare-fun temp865_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_51 () (_ BitVec 64))
(declare-fun temp865_52 () (_ BitVec 64))
(declare-fun temp865_53 () (_ BitVec 64))
(declare-fun temp865_54 () (_ BitVec 64))
(declare-fun temp865_55 () (_ BitVec 64))
(declare-fun temp865_56 () (_ BitVec 64))
(declare-fun temp865_57 () (_ BitVec 64))
(declare-fun temp865_58 () (_ BitVec 64))
(declare-fun temp865_59 () (_ BitVec 64))
(declare-fun temp865_60 () (_ BitVec 64))
(declare-fun temp865_61 () (_ BitVec 64))
(declare-fun temp865_62 () (_ BitVec 64))
(declare-fun temp865_63 () (_ BitVec 64))
(declare-fun temp865_64 () (_ BitVec 64))
(declare-fun temp865_65 () (_ BitVec 64))
(declare-fun temp865_66 () (_ BitVec 64))
(declare-fun temp865_67 () (_ BitVec 64))
(declare-fun temp865_68 () (_ BitVec 64))
(declare-fun temp865_69 () (_ BitVec 64))
(declare-fun temp865_70 () (_ BitVec 64))
(declare-fun temp865_71 () (_ BitVec 64))
(declare-fun temp865_72 () (_ BitVec 64))
(declare-fun temp865_73 () (_ BitVec 64))
(declare-fun temp865_74 () (_ BitVec 64))
(declare-fun temp865_75 () (_ BitVec 64))
(declare-fun temp865_76 () (_ BitVec 64))
(declare-fun temp865_77 () (_ BitVec 64))
(declare-fun temp865_78 () (_ BitVec 64))
(declare-fun temp865_79 () (_ BitVec 64))
(declare-fun temp865_80 () (_ BitVec 64))
(declare-fun temp865_81 () (_ BitVec 64))
(declare-fun temp865_82 () (_ BitVec 64))
(declare-fun temp865_83 () (_ BitVec 64))
(declare-fun temp865_84 () (_ BitVec 64))
(declare-fun temp865_85 () (_ BitVec 64))
(declare-fun temp865_86 () (_ BitVec 64))
(declare-fun temp865_87 () (_ BitVec 64))
(declare-fun temp865_88 () (_ BitVec 64))
(declare-fun temp865_89 () (_ BitVec 64))
(declare-fun temp865_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp865_91 () (_ BitVec 64))
(declare-fun temp865_92 () (_ BitVec 64))
(declare-fun temp865_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_94 () (_ BitVec 64))
(declare-fun temp865_95 () (_ BitVec 64))
(declare-fun temp865_96 () (_ BitVec 64))
(declare-fun temp865_97 () (_ BitVec 64))
(declare-fun temp865_98 () (_ BitVec 64))
(declare-fun temp865_99 () (_ BitVec 64))
(declare-fun temp865_100 () (_ BitVec 64))
(declare-fun temp865_101 () (_ BitVec 64))
(declare-fun temp865_102 () (_ BitVec 64))
(declare-fun temp865_103 () (_ BitVec 64))
(declare-fun temp865_104 () (_ BitVec 64))
(declare-fun temp865_105 () (_ BitVec 64))
(declare-fun temp865_106 () (_ BitVec 64))
(declare-fun temp865_107 () (_ BitVec 64))
(declare-fun temp865_108 () (_ BitVec 64))
(declare-fun temp865_109 () (_ BitVec 64))
(declare-fun temp865_110 () (_ BitVec 64))
(declare-fun temp865_111 () (_ BitVec 64))
(declare-fun temp865_112 () (_ BitVec 64))
(declare-fun temp865_113 () (_ BitVec 64))
(declare-fun temp865_114 () (_ BitVec 64))
(declare-fun temp865_115 () (_ BitVec 64))
(declare-fun temp865_116 () (_ BitVec 64))
(declare-fun temp865_117 () (_ BitVec 64))
(declare-fun temp865_118 () (_ BitVec 64))
(declare-fun temp865_119 () (_ BitVec 64))
(declare-fun temp865_120 () (_ BitVec 64))
(declare-fun temp865_121 () (_ BitVec 64))
(declare-fun temp865_122 () (_ BitVec 64))
(declare-fun temp865_123 () (_ BitVec 64))
(declare-fun temp865_124 () (_ BitVec 64))
(declare-fun temp865_125 () (_ BitVec 64))
(declare-fun temp865_126 () (_ BitVec 64))
(declare-fun temp865_127 () (_ BitVec 64))
(declare-fun temp865_128 () (_ BitVec 64))
(declare-fun temp865_129 () (_ BitVec 64))
(declare-fun temp865_130 () (_ BitVec 64))
(declare-fun temp865_131 () (_ BitVec 64))
(declare-fun temp865_132 () (_ BitVec 64))
(declare-fun temp865_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp865_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp865_135 () (_ BitVec 64))
(declare-fun temp865_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp865_137 () (_ BitVec 64))
(declare-fun temp865_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_139 () (_ BitVec 64))
(declare-fun temp865_140 () (_ BitVec 64))
(declare-fun temp865_141 () (_ BitVec 64))
(declare-fun temp865_142 () (_ BitVec 64))
(declare-fun temp865_143 () (_ BitVec 64))
(declare-fun temp865_144 () (_ BitVec 64))
(declare-fun temp865_145 () (_ BitVec 64))
(declare-fun temp865_146 () (_ BitVec 64))
(declare-fun temp865_147 () (_ BitVec 64))
(declare-fun temp865_148 () (_ BitVec 64))
(declare-fun temp865_149 () (_ BitVec 64))
(declare-fun temp865_150 () (_ BitVec 64))
(declare-fun temp865_151 () (_ BitVec 64))
(declare-fun temp865_152 () (_ BitVec 64))
(declare-fun temp865_153 () (_ BitVec 64))
(declare-fun temp865_154 () (_ BitVec 64))
(declare-fun temp865_156 () (_ BitVec 64))
(declare-fun temp865_157 () (_ BitVec 64))
(declare-fun temp865_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp865_158 () (_ BitVec 64))
(declare-fun temp865_159 () (_ BitVec 64))
(declare-fun temp865_161 () (_ BitVec 64))
(declare-fun temp865_162 () (_ BitVec 64))
(declare-fun temp865_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp865_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp865_164 () (_ BitVec 64))
(declare-fun temp865_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp865_166 () (_ BitVec 64))
(declare-fun temp865_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp865_168 () (_ BitVec 64))
(declare-fun temp865_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_170 () (_ BitVec 64))
(declare-fun temp865_171 () (_ BitVec 64))
(declare-fun temp865_172 () (_ BitVec 64))
(declare-fun temp865_173 () (_ BitVec 64))
(declare-fun temp865_174 () (_ BitVec 64))
(declare-fun temp865_175 () (_ BitVec 64))
(declare-fun temp865_176 () (_ BitVec 64))
(declare-fun temp865_177 () (_ BitVec 64))
(declare-fun temp865_178 () (_ BitVec 64))
(declare-fun temp865_179 () (_ BitVec 64))
(declare-fun temp865_180 () (_ BitVec 64))
(declare-fun temp865_181 () (_ BitVec 64))
(declare-fun temp865_182 () (_ BitVec 64))
(declare-fun temp865_183 () (_ BitVec 64))
(declare-fun temp865_184 () (_ BitVec 64))
(declare-fun temp865_185 () (_ BitVec 64))
(declare-fun temp865_186 () (_ BitVec 64))
(declare-fun temp865_187 () (_ BitVec 64))
(declare-fun temp865_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp865_189 () (_ BitVec 64))
(declare-fun temp865_191 () (_ BitVec 64))
(declare-fun temp865_192 () (_ BitVec 64))
(declare-fun temp865_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp865_193 () (_ BitVec 64))
(declare-fun temp865_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp865_195 () (_ BitVec 64))
(declare-fun temp865_196 () (_ BitVec 64))
(declare-fun temp865_197 () (_ BitVec 64))
(declare-fun temp865_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_199 () (_ BitVec 64))
(declare-fun temp865_200 () (_ BitVec 64))
(declare-fun temp865_201 () (_ BitVec 64))
(declare-fun temp865_202 () (_ BitVec 64))
(declare-fun temp865_203 () (_ BitVec 64))
(declare-fun temp865_204 () (_ BitVec 64))
(declare-fun temp865_205 () (_ BitVec 64))
(declare-fun temp865_206 () (_ BitVec 64))
(declare-fun temp865_207 () (_ BitVec 64))
(declare-fun temp865_208 () (_ BitVec 64))
(declare-fun temp865_209 () (_ BitVec 64))
(declare-fun temp865_210 () (_ BitVec 64))
(declare-fun temp865_211 () (_ BitVec 64))
(declare-fun temp865_212 () (_ BitVec 64))
(declare-fun temp865_213 () (_ BitVec 64))
(declare-fun temp865_214 () (_ BitVec 64))
(declare-fun temp865_215 () (_ BitVec 64))
(declare-fun temp865_216 () (_ BitVec 64))
(declare-fun temp865_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp865_218 () (_ BitVec 64))
(declare-fun temp865_220 () (_ BitVec 64))
(declare-fun temp865_221 () (_ BitVec 64))
(declare-fun temp865_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp865_222 () (_ BitVec 64))
(declare-fun temp865_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp865_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp865_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp865_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp865_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp865_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp865_229 () (_ BitVec 64))
(declare-fun temp865_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp865_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp865_232 () (_ BitVec 64))
(declare-fun temp865_233 () (_ BitVec 64))
(declare-fun temp865_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp865_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp865_236 () (_ BitVec 64))
(declare-fun temp865_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp865_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp865_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun temp865_240 () (_ BitVec 64))
(assert (= temp865_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp865_1)))
(assert (= temp865_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp865_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_3 #x0000000000000000))
(assert (= var79869 temp865_3))
(assert (= temp865_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp865_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_5 #x0000000000000000))
(assert (= var79914 temp865_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp865_6 #x0000000000000000))
(assert (= temp865_7 temp865_6))
(assert (= temp865_8 (select ARGNAME_padding_NAMEEND_VAL temp865_7)))
(assert (= temp865_9 #x0000000000000001))
(assert (= temp865_10 temp865_9))
(assert (= temp865_11 (select ARGNAME_padding_NAMEEND_VAL temp865_10)))
(assert (= temp865_12 #x0000000000000002))
(assert (= temp865_13 temp865_12))
(assert (= temp865_14 (select ARGNAME_padding_NAMEEND_VAL temp865_13)))
(assert (= temp865_15 #x0000000000000003))
(assert (= temp865_16 temp865_15))
(assert (= temp865_17 (select ARGNAME_padding_NAMEEND_VAL temp865_16)))
(assert (= temp865_18 #x0000000000000004))
(assert (= temp865_19 temp865_18))
(assert (= temp865_20 (select ARGNAME_padding_NAMEEND_VAL temp865_19)))
(assert (= temp865_21 #x0000000000000005))
(assert (= temp865_22 temp865_21))
(assert (= temp865_23 (select ARGNAME_padding_NAMEEND_VAL temp865_22)))
(assert (= temp865_24 #x0000000000000000))
(assert (= temp865_25 #x0000000000000000))
(assert (= temp865_26 temp865_25))
(assert (= temp865_27 (select ARGNAME_padding_NAMEEND_VAL temp865_26)))
(assert (= temp865_28 #x0000000000000000))
(assert (= temp865_29 #x0000000000000001))
(assert (= temp865_30 temp865_29))
(assert (= temp865_31 (select ARGNAME_padding_NAMEEND_VAL temp865_30)))
(assert (= temp865_32 #x0000000000000000))
(assert (= temp865_33 #x0000000000000002))
(assert (= temp865_34 temp865_33))
(assert (= temp865_35 (select ARGNAME_padding_NAMEEND_VAL temp865_34)))
(assert (= temp865_36 #x0000000000000000))
(assert (= temp865_37 #x0000000000000003))
(assert (= temp865_38 temp865_37))
(assert (= temp865_39 (select ARGNAME_padding_NAMEEND_VAL temp865_38)))
(assert (= temp865_40 #x0000000000000000))
(assert (= temp865_41 #x0000000000000004))
(assert (= temp865_42 temp865_41))
(assert (= temp865_43 (select ARGNAME_padding_NAMEEND_VAL temp865_42)))
(assert (= temp865_44 #x0000000000000000))
(assert (= temp865_45 #x0000000000000005))
(assert (= temp865_46 temp865_45))
(assert (= temp865_47 (select ARGNAME_padding_NAMEEND_VAL temp865_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp865_27 temp865_24)
             (bvslt temp865_31 temp865_28)
             (bvslt temp865_35 temp865_32)
             (bvslt temp865_39 temp865_36)
             (bvslt temp865_43 temp865_40)
             (bvslt temp865_47 temp865_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_48 #x0000000000000000))
(assert (= var1322786 temp865_48))
(assert (= temp865_49 #x0000000000000000))
(assert (= temp865_50 temp865_49))
(assert (= temp865_51 (select ARGNAME_output_padding_NAMEEND_VAL temp865_50)))
(assert (= temp865_52 #x0000000000000001))
(assert (= temp865_53 temp865_52))
(assert (= temp865_54 (select ARGNAME_output_padding_NAMEEND_VAL temp865_53)))
(assert (= temp865_55 #x0000000000000002))
(assert (= temp865_56 temp865_55))
(assert (= temp865_57 (select ARGNAME_output_padding_NAMEEND_VAL temp865_56)))
(assert (= temp865_58 #x0000000000000003))
(assert (= temp865_59 temp865_58))
(assert (= temp865_60 (select ARGNAME_output_padding_NAMEEND_VAL temp865_59)))
(assert (= temp865_61 #x0000000000000004))
(assert (= temp865_62 temp865_61))
(assert (= temp865_63 (select ARGNAME_output_padding_NAMEEND_VAL temp865_62)))
(assert (= temp865_64 #x0000000000000005))
(assert (= temp865_65 temp865_64))
(assert (= temp865_66 (select ARGNAME_output_padding_NAMEEND_VAL temp865_65)))
(assert (= temp865_67 #x0000000000000000))
(assert (= temp865_68 #x0000000000000000))
(assert (= temp865_69 temp865_68))
(assert (= temp865_70 (select ARGNAME_output_padding_NAMEEND_VAL temp865_69)))
(assert (= temp865_71 #x0000000000000000))
(assert (= temp865_72 #x0000000000000001))
(assert (= temp865_73 temp865_72))
(assert (= temp865_74 (select ARGNAME_output_padding_NAMEEND_VAL temp865_73)))
(assert (= temp865_75 #x0000000000000000))
(assert (= temp865_76 #x0000000000000002))
(assert (= temp865_77 temp865_76))
(assert (= temp865_78 (select ARGNAME_output_padding_NAMEEND_VAL temp865_77)))
(assert (= temp865_79 #x0000000000000000))
(assert (= temp865_80 #x0000000000000003))
(assert (= temp865_81 temp865_80))
(assert (= temp865_82 (select ARGNAME_output_padding_NAMEEND_VAL temp865_81)))
(assert (= temp865_83 #x0000000000000000))
(assert (= temp865_84 #x0000000000000004))
(assert (= temp865_85 temp865_84))
(assert (= temp865_86 (select ARGNAME_output_padding_NAMEEND_VAL temp865_85)))
(assert (= temp865_87 #x0000000000000000))
(assert (= temp865_88 #x0000000000000005))
(assert (= temp865_89 temp865_88))
(assert (= temp865_90 (select ARGNAME_output_padding_NAMEEND_VAL temp865_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp865_70 temp865_67)
             (bvslt temp865_74 temp865_71)
             (bvslt temp865_78 temp865_75)
             (bvslt temp865_82 temp865_79)
             (bvslt temp865_86 temp865_83)
             (bvslt temp865_90 temp865_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_91 #x0000000000000000))
(assert (= var1322797 temp865_91))
(assert (= temp865_92 #x0000000000000000))
(assert (= temp865_93 temp865_92))
(assert (= temp865_94 (select ARGNAME_stride_NAMEEND_VAL temp865_93)))
(assert (= temp865_95 #x0000000000000001))
(assert (= temp865_96 temp865_95))
(assert (= temp865_97 (select ARGNAME_stride_NAMEEND_VAL temp865_96)))
(assert (= temp865_98 #x0000000000000002))
(assert (= temp865_99 temp865_98))
(assert (= temp865_100 (select ARGNAME_stride_NAMEEND_VAL temp865_99)))
(assert (= temp865_101 #x0000000000000003))
(assert (= temp865_102 temp865_101))
(assert (= temp865_103 (select ARGNAME_stride_NAMEEND_VAL temp865_102)))
(assert (= temp865_104 #x0000000000000004))
(assert (= temp865_105 temp865_104))
(assert (= temp865_106 (select ARGNAME_stride_NAMEEND_VAL temp865_105)))
(assert (= temp865_107 #x0000000000000005))
(assert (= temp865_108 temp865_107))
(assert (= temp865_109 (select ARGNAME_stride_NAMEEND_VAL temp865_108)))
(assert (= temp865_110 #x0000000000000000))
(assert (= temp865_111 #x0000000000000000))
(assert (= temp865_112 temp865_111))
(assert (= temp865_113 (select ARGNAME_stride_NAMEEND_VAL temp865_112)))
(assert (= temp865_114 #x0000000000000000))
(assert (= temp865_115 #x0000000000000001))
(assert (= temp865_116 temp865_115))
(assert (= temp865_117 (select ARGNAME_stride_NAMEEND_VAL temp865_116)))
(assert (= temp865_118 #x0000000000000000))
(assert (= temp865_119 #x0000000000000002))
(assert (= temp865_120 temp865_119))
(assert (= temp865_121 (select ARGNAME_stride_NAMEEND_VAL temp865_120)))
(assert (= temp865_122 #x0000000000000000))
(assert (= temp865_123 #x0000000000000003))
(assert (= temp865_124 temp865_123))
(assert (= temp865_125 (select ARGNAME_stride_NAMEEND_VAL temp865_124)))
(assert (= temp865_126 #x0000000000000000))
(assert (= temp865_127 #x0000000000000004))
(assert (= temp865_128 temp865_127))
(assert (= temp865_129 (select ARGNAME_stride_NAMEEND_VAL temp865_128)))
(assert (= temp865_130 #x0000000000000000))
(assert (= temp865_131 #x0000000000000005))
(assert (= temp865_132 temp865_131))
(assert (= temp865_133 (select ARGNAME_stride_NAMEEND_VAL temp865_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp865_113 temp865_110)
             (bvsle temp865_117 temp865_114)
             (bvsle temp865_121 temp865_118)
             (bvsle temp865_125 temp865_122)
             (bvsle temp865_129 temp865_126)
             (bvsle temp865_133 temp865_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_134 #x0000000000000000))
(assert (= var1322807 temp865_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_135 #x0000000000000001))
(assert (= var1322819 temp865_135))
(assert (= temp865_136 #x0000000000000000))
(assert (= var1310898 temp865_136))
(assert (= temp865_137 #x0000000000000000))
(assert (= temp865_138 temp865_137))
(assert (= temp865_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_138)))
(assert (= temp865_140 #x0000000000000001))
(assert (= temp865_141 temp865_140))
(assert (= temp865_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_141)))
(assert (= temp865_143 #x0000000000000002))
(assert (= temp865_144 temp865_143))
(assert (= temp865_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_144)))
(assert (= temp865_146 #x0000000000000003))
(assert (= temp865_147 temp865_146))
(assert (= temp865_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_147)))
(assert (= temp865_149 #x0000000000000004))
(assert (= temp865_150 temp865_149))
(assert (= temp865_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_150)))
(assert (= temp865_152 #x0000000000000005))
(assert (= temp865_153 temp865_152))
(assert (= temp865_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_153)))
(assert (= temp865_156 var1310898))
(assert (= temp865_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_156)))
(assert (= temp865_155 temp865_157))
(assert (= var1322852
   (ite (bvslt temp865_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_158 #x0000000000000000))
(assert (= var1322852 temp865_158))
(assert (= temp865_159 #x0000000000000000))
(assert (= var1310898 temp865_159))
(assert (= temp865_161 var1310898))
(assert (= temp865_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_161)))
(assert (= temp865_160 temp865_162))
(assert (= var1322874 (bvsmod temp865_160 ARGNAME_groups_NAMEEND)))
(assert (= temp865_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp865_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp865_164 #x0000000000000001))
(assert (= var1322875 temp865_164))
(assert (= temp865_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp865_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_166 #x0000000000000001))
(assert (= var1322895 temp865_166))
(assert (= temp865_167 #x0000000000000001))
(assert (= var1311786 temp865_167))
(assert (= temp865_168 #x0000000000000000))
(assert (= temp865_169 temp865_168))
(assert (= temp865_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_169)))
(assert (= temp865_171 #x0000000000000001))
(assert (= temp865_172 temp865_171))
(assert (= temp865_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_172)))
(assert (= temp865_174 #x0000000000000002))
(assert (= temp865_175 temp865_174))
(assert (= temp865_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_175)))
(assert (= temp865_177 #x0000000000000003))
(assert (= temp865_178 temp865_177))
(assert (= temp865_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_178)))
(assert (= temp865_180 #x0000000000000004))
(assert (= temp865_181 temp865_180))
(assert (= temp865_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_181)))
(assert (= temp865_183 #x0000000000000005))
(assert (= temp865_184 temp865_183))
(assert (= temp865_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_184)))
(assert (= temp865_186 #x0000000000000000))
(assert (= temp865_187
   (ite (bvslt var1311786 temp865_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp865_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_187)))
(assert (= var1322903 temp865_188))
(assert (bvslt (ite (bvslt var1311786 temp865_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp865_189 #x0000000000000001))
(assert (= var1311786 temp865_189))
(assert (= temp865_191 var1311786))
(assert (= temp865_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_191)))
(assert (= temp865_190 temp865_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp865_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp865_193 #x0000000000000001))
(assert (= var1322908 temp865_193))
(assert (= temp865_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp865_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_195 #x0000000000000001))
(assert (= var1322975 temp865_195))
(assert (= temp865_196 #x0000000000000000))
(assert (= var1310898 temp865_196))
(assert (= temp865_197 #x0000000000000000))
(assert (= temp865_198 temp865_197))
(assert (= temp865_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp865_198)))
(assert (= temp865_200 #x0000000000000001))
(assert (= temp865_201 temp865_200))
(assert (= temp865_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp865_201)))
(assert (= temp865_203 #x0000000000000002))
(assert (= temp865_204 temp865_203))
(assert (= temp865_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp865_204)))
(assert (= temp865_206 #x0000000000000003))
(assert (= temp865_207 temp865_206))
(assert (= temp865_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp865_207)))
(assert (= temp865_209 #x0000000000000004))
(assert (= temp865_210 temp865_209))
(assert (= temp865_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp865_210)))
(assert (= temp865_212 #x0000000000000005))
(assert (= temp865_213 temp865_212))
(assert (= temp865_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp865_213)))
(assert (= temp865_215 #x0000000000000000))
(assert (= temp865_216
   (ite (bvslt var1310898 temp865_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp865_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp865_216)))
(assert (= var1322977 temp865_217))
(assert (bvslt (ite (bvslt var1310898 temp865_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp865_218 #x0000000000000000))
(assert (= var1310898 temp865_218))
(assert (= temp865_220 var1310898))
(assert (= temp865_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_220)))
(assert (= temp865_219 temp865_221))
(assert (= var1322980
   (ite (= var1322977 temp865_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp865_222 #x0000000000000001))
(assert (= var1322980 temp865_222))
(assert (= temp865_223 #x0000000000000002))
(assert (= var1848169 temp865_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp865_225 #x0000000000000001))
(assert (= var1323065 temp865_225))
(assert (= temp865_226 #x0000000000000001))
(assert (= var3486735 temp865_226))
(assert (= temp865_227 #x0000000000000001))
(assert (= var3814415 temp865_227))
(assert (= temp865_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp865_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_229 #x0000000000000001))
(assert (= var79986 temp865_229))
(assert (= temp865_230 #x0000000000000001))
(assert (= var80116 temp865_230))
(assert (= var4796905 var80116))
(assert (= temp865_231 #x0000000000000000))
(assert (= var4784306 temp865_231))
(assert (= temp865_232 #x0000000000000000))
(assert (= temp865_233
   (ite (bvslt var4784306 temp865_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp865_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_233)))
(assert (= var4796924 temp865_234))
(assert (bvslt (ite (bvslt var4784306 temp865_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp865_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp865_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp865_236 #x0000000000000001))
(assert (= var4796925 temp865_236))
(assert (= temp865_237 #x0000000000000000))
(assert (= var4996927 temp865_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp865_238 #x0000000000000002))
(assert (= var5125763 temp865_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_239 #x0000000000000000))
(assert (= var5191324 temp865_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5976464 var80129))
(assert (= var6238608 var80129))
(assert (= temp865_240 #x0000000000000001))
(assert (= var79986 temp865_240))
(model-add temp865_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp865_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp865_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






