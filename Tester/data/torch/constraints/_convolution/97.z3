(declare-fun temp128_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp128_2 () (_ BitVec 64))
(declare-fun temp128_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp128_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp128_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp128_6 () (_ BitVec 64))
(declare-fun temp128_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp128_8 () (_ BitVec 64))
(declare-fun temp128_9 () (_ BitVec 64))
(declare-fun temp128_10 () (_ BitVec 64))
(declare-fun temp128_11 () (_ BitVec 64))
(declare-fun temp128_12 () (_ BitVec 64))
(declare-fun temp128_13 () (_ BitVec 64))
(declare-fun temp128_14 () (_ BitVec 64))
(declare-fun temp128_15 () (_ BitVec 64))
(declare-fun temp128_16 () (_ BitVec 64))
(declare-fun temp128_17 () (_ BitVec 64))
(declare-fun temp128_18 () (_ BitVec 64))
(declare-fun temp128_19 () (_ BitVec 64))
(declare-fun temp128_20 () (_ BitVec 64))
(declare-fun temp128_21 () (_ BitVec 64))
(declare-fun temp128_22 () (_ BitVec 64))
(declare-fun temp128_23 () (_ BitVec 64))
(declare-fun temp128_24 () (_ BitVec 64))
(declare-fun temp128_25 () (_ BitVec 64))
(declare-fun temp128_26 () (_ BitVec 64))
(declare-fun temp128_27 () (_ BitVec 64))
(declare-fun temp128_28 () (_ BitVec 64))
(declare-fun temp128_29 () (_ BitVec 64))
(declare-fun temp128_30 () (_ BitVec 64))
(declare-fun temp128_31 () (_ BitVec 64))
(declare-fun temp128_32 () (_ BitVec 64))
(declare-fun temp128_33 () (_ BitVec 64))
(declare-fun temp128_34 () (_ BitVec 64))
(declare-fun temp128_35 () (_ BitVec 64))
(declare-fun temp128_36 () (_ BitVec 64))
(declare-fun temp128_37 () (_ BitVec 64))
(declare-fun temp128_38 () (_ BitVec 64))
(declare-fun temp128_39 () (_ BitVec 64))
(declare-fun temp128_40 () (_ BitVec 64))
(declare-fun temp128_41 () (_ BitVec 64))
(declare-fun temp128_42 () (_ BitVec 64))
(declare-fun temp128_43 () (_ BitVec 64))
(declare-fun temp128_44 () (_ BitVec 64))
(declare-fun temp128_45 () (_ BitVec 64))
(declare-fun temp128_46 () (_ BitVec 64))
(declare-fun temp128_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp128_48 () (_ BitVec 64))
(declare-fun temp128_49 () (_ BitVec 64))
(declare-fun temp128_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp128_51 () (_ BitVec 64))
(declare-fun temp128_52 () (_ BitVec 64))
(declare-fun temp128_53 () (_ BitVec 64))
(declare-fun temp128_54 () (_ BitVec 64))
(declare-fun temp128_55 () (_ BitVec 64))
(declare-fun temp128_56 () (_ BitVec 64))
(declare-fun temp128_57 () (_ BitVec 64))
(declare-fun temp128_58 () (_ BitVec 64))
(declare-fun temp128_59 () (_ BitVec 64))
(declare-fun temp128_60 () (_ BitVec 64))
(declare-fun temp128_61 () (_ BitVec 64))
(declare-fun temp128_62 () (_ BitVec 64))
(declare-fun temp128_63 () (_ BitVec 64))
(declare-fun temp128_64 () (_ BitVec 64))
(declare-fun temp128_65 () (_ BitVec 64))
(declare-fun temp128_66 () (_ BitVec 64))
(declare-fun temp128_67 () (_ BitVec 64))
(declare-fun temp128_68 () (_ BitVec 64))
(declare-fun temp128_69 () (_ BitVec 64))
(declare-fun temp128_70 () (_ BitVec 64))
(declare-fun temp128_71 () (_ BitVec 64))
(declare-fun temp128_72 () (_ BitVec 64))
(declare-fun temp128_73 () (_ BitVec 64))
(declare-fun temp128_74 () (_ BitVec 64))
(declare-fun temp128_75 () (_ BitVec 64))
(declare-fun temp128_76 () (_ BitVec 64))
(declare-fun temp128_77 () (_ BitVec 64))
(declare-fun temp128_78 () (_ BitVec 64))
(declare-fun temp128_79 () (_ BitVec 64))
(declare-fun temp128_80 () (_ BitVec 64))
(declare-fun temp128_81 () (_ BitVec 64))
(declare-fun temp128_82 () (_ BitVec 64))
(declare-fun temp128_83 () (_ BitVec 64))
(declare-fun temp128_84 () (_ BitVec 64))
(declare-fun temp128_85 () (_ BitVec 64))
(declare-fun temp128_86 () (_ BitVec 64))
(declare-fun temp128_87 () (_ BitVec 64))
(declare-fun temp128_88 () (_ BitVec 64))
(declare-fun temp128_89 () (_ BitVec 64))
(declare-fun temp128_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp128_91 () (_ BitVec 64))
(declare-fun temp128_92 () (_ BitVec 64))
(declare-fun temp128_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp128_94 () (_ BitVec 64))
(declare-fun temp128_95 () (_ BitVec 64))
(declare-fun temp128_96 () (_ BitVec 64))
(declare-fun temp128_97 () (_ BitVec 64))
(declare-fun temp128_98 () (_ BitVec 64))
(declare-fun temp128_99 () (_ BitVec 64))
(declare-fun temp128_100 () (_ BitVec 64))
(declare-fun temp128_101 () (_ BitVec 64))
(declare-fun temp128_102 () (_ BitVec 64))
(declare-fun temp128_103 () (_ BitVec 64))
(declare-fun temp128_104 () (_ BitVec 64))
(declare-fun temp128_105 () (_ BitVec 64))
(declare-fun temp128_106 () (_ BitVec 64))
(declare-fun temp128_107 () (_ BitVec 64))
(declare-fun temp128_108 () (_ BitVec 64))
(declare-fun temp128_109 () (_ BitVec 64))
(declare-fun temp128_110 () (_ BitVec 64))
(declare-fun temp128_111 () (_ BitVec 64))
(declare-fun temp128_112 () (_ BitVec 64))
(declare-fun temp128_113 () (_ BitVec 64))
(declare-fun temp128_114 () (_ BitVec 64))
(declare-fun temp128_115 () (_ BitVec 64))
(declare-fun temp128_116 () (_ BitVec 64))
(declare-fun temp128_117 () (_ BitVec 64))
(declare-fun temp128_118 () (_ BitVec 64))
(declare-fun temp128_119 () (_ BitVec 64))
(declare-fun temp128_120 () (_ BitVec 64))
(declare-fun temp128_121 () (_ BitVec 64))
(declare-fun temp128_122 () (_ BitVec 64))
(declare-fun temp128_123 () (_ BitVec 64))
(declare-fun temp128_124 () (_ BitVec 64))
(declare-fun temp128_125 () (_ BitVec 64))
(declare-fun temp128_126 () (_ BitVec 64))
(declare-fun temp128_127 () (_ BitVec 64))
(declare-fun temp128_128 () (_ BitVec 64))
(declare-fun temp128_129 () (_ BitVec 64))
(declare-fun temp128_130 () (_ BitVec 64))
(declare-fun temp128_131 () (_ BitVec 64))
(declare-fun temp128_132 () (_ BitVec 64))
(declare-fun temp128_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp128_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp128_135 () (_ BitVec 64))
(declare-fun temp128_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp128_137 () (_ BitVec 64))
(declare-fun temp128_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp128_139 () (_ BitVec 64))
(declare-fun temp128_140 () (_ BitVec 64))
(declare-fun temp128_141 () (_ BitVec 64))
(declare-fun temp128_142 () (_ BitVec 64))
(declare-fun temp128_143 () (_ BitVec 64))
(declare-fun temp128_144 () (_ BitVec 64))
(declare-fun temp128_145 () (_ BitVec 64))
(declare-fun temp128_146 () (_ BitVec 64))
(declare-fun temp128_147 () (_ BitVec 64))
(declare-fun temp128_148 () (_ BitVec 64))
(declare-fun temp128_149 () (_ BitVec 64))
(declare-fun temp128_150 () (_ BitVec 64))
(declare-fun temp128_151 () (_ BitVec 64))
(declare-fun temp128_152 () (_ BitVec 64))
(declare-fun temp128_153 () (_ BitVec 64))
(declare-fun temp128_154 () (_ BitVec 64))
(declare-fun temp128_156 () (_ BitVec 64))
(declare-fun temp128_157 () (_ BitVec 64))
(declare-fun temp128_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp128_158 () (_ BitVec 64))
(declare-fun temp128_159 () (_ BitVec 64))
(declare-fun temp128_161 () (_ BitVec 64))
(declare-fun temp128_162 () (_ BitVec 64))
(declare-fun temp128_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp128_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp128_164 () (_ BitVec 64))
(declare-fun temp128_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp128_166 () (_ BitVec 64))
(declare-fun temp128_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp128_168 () (_ BitVec 64))
(declare-fun temp128_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp128_170 () (_ BitVec 64))
(declare-fun temp128_171 () (_ BitVec 64))
(declare-fun temp128_172 () (_ BitVec 64))
(declare-fun temp128_173 () (_ BitVec 64))
(declare-fun temp128_174 () (_ BitVec 64))
(declare-fun temp128_175 () (_ BitVec 64))
(declare-fun temp128_176 () (_ BitVec 64))
(declare-fun temp128_177 () (_ BitVec 64))
(declare-fun temp128_178 () (_ BitVec 64))
(declare-fun temp128_179 () (_ BitVec 64))
(declare-fun temp128_180 () (_ BitVec 64))
(declare-fun temp128_181 () (_ BitVec 64))
(declare-fun temp128_182 () (_ BitVec 64))
(declare-fun temp128_183 () (_ BitVec 64))
(declare-fun temp128_184 () (_ BitVec 64))
(declare-fun temp128_185 () (_ BitVec 64))
(declare-fun temp128_186 () (_ BitVec 64))
(declare-fun temp128_187 () (_ BitVec 64))
(declare-fun temp128_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp128_189 () (_ BitVec 64))
(declare-fun temp128_191 () (_ BitVec 64))
(declare-fun temp128_192 () (_ BitVec 64))
(declare-fun temp128_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp128_193 () (_ BitVec 64))
(declare-fun temp128_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp128_195 () (_ BitVec 64))
(declare-fun temp128_196 () (_ BitVec 64))
(declare-fun temp128_197 () (_ BitVec 64))
(declare-fun temp128_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp128_199 () (_ BitVec 64))
(declare-fun temp128_200 () (_ BitVec 64))
(declare-fun temp128_201 () (_ BitVec 64))
(declare-fun temp128_202 () (_ BitVec 64))
(declare-fun temp128_203 () (_ BitVec 64))
(declare-fun temp128_204 () (_ BitVec 64))
(declare-fun temp128_205 () (_ BitVec 64))
(declare-fun temp128_206 () (_ BitVec 64))
(declare-fun temp128_207 () (_ BitVec 64))
(declare-fun temp128_208 () (_ BitVec 64))
(declare-fun temp128_209 () (_ BitVec 64))
(declare-fun temp128_210 () (_ BitVec 64))
(declare-fun temp128_211 () (_ BitVec 64))
(declare-fun temp128_212 () (_ BitVec 64))
(declare-fun temp128_213 () (_ BitVec 64))
(declare-fun temp128_214 () (_ BitVec 64))
(declare-fun temp128_215 () (_ BitVec 64))
(declare-fun temp128_216 () (_ BitVec 64))
(declare-fun temp128_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp128_218 () (_ BitVec 64))
(declare-fun temp128_220 () (_ BitVec 64))
(declare-fun temp128_221 () (_ BitVec 64))
(declare-fun temp128_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp128_222 () (_ BitVec 64))
(declare-fun temp128_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp128_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp128_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp128_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp128_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp128_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp128_229 () (_ BitVec 64))
(declare-fun temp128_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp128_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp128_232 () (_ BitVec 64))
(declare-fun temp128_233 () (_ BitVec 64))
(declare-fun temp128_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp128_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp128_236 () (_ BitVec 64))
(declare-fun temp128_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp128_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp128_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp128_241 () (_ BitVec 64))
(declare-fun temp128_240 () (_ BitVec 64))
(declare-fun temp128_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp128_243 () (_ BitVec 64))
(declare-fun temp128_244 () (_ BitVec 64))
(declare-fun temp128_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp128_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp128_247 () (_ BitVec 64))
(declare-fun temp128_249 () (_ BitVec 64))
(declare-fun temp128_248 () (_ BitVec 64))
(declare-fun temp128_250 () (_ BitVec 64))
(declare-fun temp128_251 () (_ BitVec 64))
(declare-fun var6435604 () (_ BitVec 64))
(declare-fun var6435571 () (_ BitVec 64))
(declare-fun var6304135 () (_ BitVec 64))
(declare-fun var6304131 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp128_252 () (_ BitVec 64))
(assert (= temp128_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp128_1)))
(assert (= temp128_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp128_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_3 #x0000000000000000))
(assert (= var79869 temp128_3))
(assert (= temp128_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp128_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_5 #x0000000000000000))
(assert (= var79914 temp128_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp128_6 #x0000000000000000))
(assert (= temp128_7 temp128_6))
(assert (= temp128_8 (select ARGNAME_padding_NAMEEND_VAL temp128_7)))
(assert (= temp128_9 #x0000000000000001))
(assert (= temp128_10 temp128_9))
(assert (= temp128_11 (select ARGNAME_padding_NAMEEND_VAL temp128_10)))
(assert (= temp128_12 #x0000000000000002))
(assert (= temp128_13 temp128_12))
(assert (= temp128_14 (select ARGNAME_padding_NAMEEND_VAL temp128_13)))
(assert (= temp128_15 #x0000000000000003))
(assert (= temp128_16 temp128_15))
(assert (= temp128_17 (select ARGNAME_padding_NAMEEND_VAL temp128_16)))
(assert (= temp128_18 #x0000000000000004))
(assert (= temp128_19 temp128_18))
(assert (= temp128_20 (select ARGNAME_padding_NAMEEND_VAL temp128_19)))
(assert (= temp128_21 #x0000000000000005))
(assert (= temp128_22 temp128_21))
(assert (= temp128_23 (select ARGNAME_padding_NAMEEND_VAL temp128_22)))
(assert (= temp128_24 #x0000000000000000))
(assert (= temp128_25 #x0000000000000000))
(assert (= temp128_26 temp128_25))
(assert (= temp128_27 (select ARGNAME_padding_NAMEEND_VAL temp128_26)))
(assert (= temp128_28 #x0000000000000000))
(assert (= temp128_29 #x0000000000000001))
(assert (= temp128_30 temp128_29))
(assert (= temp128_31 (select ARGNAME_padding_NAMEEND_VAL temp128_30)))
(assert (= temp128_32 #x0000000000000000))
(assert (= temp128_33 #x0000000000000002))
(assert (= temp128_34 temp128_33))
(assert (= temp128_35 (select ARGNAME_padding_NAMEEND_VAL temp128_34)))
(assert (= temp128_36 #x0000000000000000))
(assert (= temp128_37 #x0000000000000003))
(assert (= temp128_38 temp128_37))
(assert (= temp128_39 (select ARGNAME_padding_NAMEEND_VAL temp128_38)))
(assert (= temp128_40 #x0000000000000000))
(assert (= temp128_41 #x0000000000000004))
(assert (= temp128_42 temp128_41))
(assert (= temp128_43 (select ARGNAME_padding_NAMEEND_VAL temp128_42)))
(assert (= temp128_44 #x0000000000000000))
(assert (= temp128_45 #x0000000000000005))
(assert (= temp128_46 temp128_45))
(assert (= temp128_47 (select ARGNAME_padding_NAMEEND_VAL temp128_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp128_27 temp128_24)
             (bvslt temp128_31 temp128_28)
             (bvslt temp128_35 temp128_32)
             (bvslt temp128_39 temp128_36)
             (bvslt temp128_43 temp128_40)
             (bvslt temp128_47 temp128_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_48 #x0000000000000000))
(assert (= var1322786 temp128_48))
(assert (= temp128_49 #x0000000000000000))
(assert (= temp128_50 temp128_49))
(assert (= temp128_51 (select ARGNAME_output_padding_NAMEEND_VAL temp128_50)))
(assert (= temp128_52 #x0000000000000001))
(assert (= temp128_53 temp128_52))
(assert (= temp128_54 (select ARGNAME_output_padding_NAMEEND_VAL temp128_53)))
(assert (= temp128_55 #x0000000000000002))
(assert (= temp128_56 temp128_55))
(assert (= temp128_57 (select ARGNAME_output_padding_NAMEEND_VAL temp128_56)))
(assert (= temp128_58 #x0000000000000003))
(assert (= temp128_59 temp128_58))
(assert (= temp128_60 (select ARGNAME_output_padding_NAMEEND_VAL temp128_59)))
(assert (= temp128_61 #x0000000000000004))
(assert (= temp128_62 temp128_61))
(assert (= temp128_63 (select ARGNAME_output_padding_NAMEEND_VAL temp128_62)))
(assert (= temp128_64 #x0000000000000005))
(assert (= temp128_65 temp128_64))
(assert (= temp128_66 (select ARGNAME_output_padding_NAMEEND_VAL temp128_65)))
(assert (= temp128_67 #x0000000000000000))
(assert (= temp128_68 #x0000000000000000))
(assert (= temp128_69 temp128_68))
(assert (= temp128_70 (select ARGNAME_output_padding_NAMEEND_VAL temp128_69)))
(assert (= temp128_71 #x0000000000000000))
(assert (= temp128_72 #x0000000000000001))
(assert (= temp128_73 temp128_72))
(assert (= temp128_74 (select ARGNAME_output_padding_NAMEEND_VAL temp128_73)))
(assert (= temp128_75 #x0000000000000000))
(assert (= temp128_76 #x0000000000000002))
(assert (= temp128_77 temp128_76))
(assert (= temp128_78 (select ARGNAME_output_padding_NAMEEND_VAL temp128_77)))
(assert (= temp128_79 #x0000000000000000))
(assert (= temp128_80 #x0000000000000003))
(assert (= temp128_81 temp128_80))
(assert (= temp128_82 (select ARGNAME_output_padding_NAMEEND_VAL temp128_81)))
(assert (= temp128_83 #x0000000000000000))
(assert (= temp128_84 #x0000000000000004))
(assert (= temp128_85 temp128_84))
(assert (= temp128_86 (select ARGNAME_output_padding_NAMEEND_VAL temp128_85)))
(assert (= temp128_87 #x0000000000000000))
(assert (= temp128_88 #x0000000000000005))
(assert (= temp128_89 temp128_88))
(assert (= temp128_90 (select ARGNAME_output_padding_NAMEEND_VAL temp128_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp128_70 temp128_67)
             (bvslt temp128_74 temp128_71)
             (bvslt temp128_78 temp128_75)
             (bvslt temp128_82 temp128_79)
             (bvslt temp128_86 temp128_83)
             (bvslt temp128_90 temp128_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_91 #x0000000000000000))
(assert (= var1322797 temp128_91))
(assert (= temp128_92 #x0000000000000000))
(assert (= temp128_93 temp128_92))
(assert (= temp128_94 (select ARGNAME_stride_NAMEEND_VAL temp128_93)))
(assert (= temp128_95 #x0000000000000001))
(assert (= temp128_96 temp128_95))
(assert (= temp128_97 (select ARGNAME_stride_NAMEEND_VAL temp128_96)))
(assert (= temp128_98 #x0000000000000002))
(assert (= temp128_99 temp128_98))
(assert (= temp128_100 (select ARGNAME_stride_NAMEEND_VAL temp128_99)))
(assert (= temp128_101 #x0000000000000003))
(assert (= temp128_102 temp128_101))
(assert (= temp128_103 (select ARGNAME_stride_NAMEEND_VAL temp128_102)))
(assert (= temp128_104 #x0000000000000004))
(assert (= temp128_105 temp128_104))
(assert (= temp128_106 (select ARGNAME_stride_NAMEEND_VAL temp128_105)))
(assert (= temp128_107 #x0000000000000005))
(assert (= temp128_108 temp128_107))
(assert (= temp128_109 (select ARGNAME_stride_NAMEEND_VAL temp128_108)))
(assert (= temp128_110 #x0000000000000000))
(assert (= temp128_111 #x0000000000000000))
(assert (= temp128_112 temp128_111))
(assert (= temp128_113 (select ARGNAME_stride_NAMEEND_VAL temp128_112)))
(assert (= temp128_114 #x0000000000000000))
(assert (= temp128_115 #x0000000000000001))
(assert (= temp128_116 temp128_115))
(assert (= temp128_117 (select ARGNAME_stride_NAMEEND_VAL temp128_116)))
(assert (= temp128_118 #x0000000000000000))
(assert (= temp128_119 #x0000000000000002))
(assert (= temp128_120 temp128_119))
(assert (= temp128_121 (select ARGNAME_stride_NAMEEND_VAL temp128_120)))
(assert (= temp128_122 #x0000000000000000))
(assert (= temp128_123 #x0000000000000003))
(assert (= temp128_124 temp128_123))
(assert (= temp128_125 (select ARGNAME_stride_NAMEEND_VAL temp128_124)))
(assert (= temp128_126 #x0000000000000000))
(assert (= temp128_127 #x0000000000000004))
(assert (= temp128_128 temp128_127))
(assert (= temp128_129 (select ARGNAME_stride_NAMEEND_VAL temp128_128)))
(assert (= temp128_130 #x0000000000000000))
(assert (= temp128_131 #x0000000000000005))
(assert (= temp128_132 temp128_131))
(assert (= temp128_133 (select ARGNAME_stride_NAMEEND_VAL temp128_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp128_113 temp128_110)
             (bvsle temp128_117 temp128_114)
             (bvsle temp128_121 temp128_118)
             (bvsle temp128_125 temp128_122)
             (bvsle temp128_129 temp128_126)
             (bvsle temp128_133 temp128_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_134 #x0000000000000000))
(assert (= var1322807 temp128_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_135 #x0000000000000001))
(assert (= var1322819 temp128_135))
(assert (= temp128_136 #x0000000000000000))
(assert (= var1310898 temp128_136))
(assert (= temp128_137 #x0000000000000000))
(assert (= temp128_138 temp128_137))
(assert (= temp128_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_138)))
(assert (= temp128_140 #x0000000000000001))
(assert (= temp128_141 temp128_140))
(assert (= temp128_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_141)))
(assert (= temp128_143 #x0000000000000002))
(assert (= temp128_144 temp128_143))
(assert (= temp128_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_144)))
(assert (= temp128_146 #x0000000000000003))
(assert (= temp128_147 temp128_146))
(assert (= temp128_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_147)))
(assert (= temp128_149 #x0000000000000004))
(assert (= temp128_150 temp128_149))
(assert (= temp128_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_150)))
(assert (= temp128_152 #x0000000000000005))
(assert (= temp128_153 temp128_152))
(assert (= temp128_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_153)))
(assert (= temp128_156 var1310898))
(assert (= temp128_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_156)))
(assert (= temp128_155 temp128_157))
(assert (= var1322852
   (ite (bvslt temp128_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_158 #x0000000000000000))
(assert (= var1322852 temp128_158))
(assert (= temp128_159 #x0000000000000000))
(assert (= var1310898 temp128_159))
(assert (= temp128_161 var1310898))
(assert (= temp128_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_161)))
(assert (= temp128_160 temp128_162))
(assert (= var1322874 (bvsmod temp128_160 ARGNAME_groups_NAMEEND)))
(assert (= temp128_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp128_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp128_164 #x0000000000000001))
(assert (= var1322875 temp128_164))
(assert (= temp128_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp128_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_166 #x0000000000000001))
(assert (= var1322895 temp128_166))
(assert (= temp128_167 #x0000000000000001))
(assert (= var1311786 temp128_167))
(assert (= temp128_168 #x0000000000000000))
(assert (= temp128_169 temp128_168))
(assert (= temp128_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp128_169)))
(assert (= temp128_171 #x0000000000000001))
(assert (= temp128_172 temp128_171))
(assert (= temp128_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp128_172)))
(assert (= temp128_174 #x0000000000000002))
(assert (= temp128_175 temp128_174))
(assert (= temp128_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp128_175)))
(assert (= temp128_177 #x0000000000000003))
(assert (= temp128_178 temp128_177))
(assert (= temp128_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp128_178)))
(assert (= temp128_180 #x0000000000000004))
(assert (= temp128_181 temp128_180))
(assert (= temp128_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp128_181)))
(assert (= temp128_183 #x0000000000000005))
(assert (= temp128_184 temp128_183))
(assert (= temp128_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp128_184)))
(assert (= temp128_186 #x0000000000000000))
(assert (= temp128_187
   (ite (bvslt var1311786 temp128_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp128_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp128_187)))
(assert (= var1322903 temp128_188))
(assert (bvslt (ite (bvslt var1311786 temp128_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp128_189 #x0000000000000001))
(assert (= var1311786 temp128_189))
(assert (= temp128_191 var1311786))
(assert (= temp128_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_191)))
(assert (= temp128_190 temp128_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp128_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp128_193 #x0000000000000001))
(assert (= var1322908 temp128_193))
(assert (= temp128_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp128_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_195 #x0000000000000001))
(assert (= var1322975 temp128_195))
(assert (= temp128_196 #x0000000000000000))
(assert (= var1310898 temp128_196))
(assert (= temp128_197 #x0000000000000000))
(assert (= temp128_198 temp128_197))
(assert (= temp128_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp128_198)))
(assert (= temp128_200 #x0000000000000001))
(assert (= temp128_201 temp128_200))
(assert (= temp128_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp128_201)))
(assert (= temp128_203 #x0000000000000002))
(assert (= temp128_204 temp128_203))
(assert (= temp128_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp128_204)))
(assert (= temp128_206 #x0000000000000003))
(assert (= temp128_207 temp128_206))
(assert (= temp128_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp128_207)))
(assert (= temp128_209 #x0000000000000004))
(assert (= temp128_210 temp128_209))
(assert (= temp128_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp128_210)))
(assert (= temp128_212 #x0000000000000005))
(assert (= temp128_213 temp128_212))
(assert (= temp128_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp128_213)))
(assert (= temp128_215 #x0000000000000000))
(assert (= temp128_216
   (ite (bvslt var1310898 temp128_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp128_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp128_216)))
(assert (= var1322977 temp128_217))
(assert (bvslt (ite (bvslt var1310898 temp128_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp128_218 #x0000000000000000))
(assert (= var1310898 temp128_218))
(assert (= temp128_220 var1310898))
(assert (= temp128_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp128_220)))
(assert (= temp128_219 temp128_221))
(assert (= var1322980
   (ite (= var1322977 temp128_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp128_222 #x0000000000000001))
(assert (= var1322980 temp128_222))
(assert (= temp128_223 #x0000000000000002))
(assert (= var1848169 temp128_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp128_225 #x0000000000000001))
(assert (= var1323065 temp128_225))
(assert (= temp128_226 #x0000000000000001))
(assert (= var3486735 temp128_226))
(assert (= temp128_227 #x0000000000000001))
(assert (= var3814415 temp128_227))
(assert (= temp128_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp128_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_229 #x0000000000000001))
(assert (= var79986 temp128_229))
(assert (= temp128_230 #x0000000000000001))
(assert (= var80116 temp128_230))
(assert (= var4796905 var80116))
(assert (= temp128_231 #x0000000000000000))
(assert (= var4784306 temp128_231))
(assert (= temp128_232 #x0000000000000000))
(assert (= temp128_233
   (ite (bvslt var4784306 temp128_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp128_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp128_233)))
(assert (= var4796924 temp128_234))
(assert (bvslt (ite (bvslt var4784306 temp128_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp128_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp128_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp128_236 #x0000000000000001))
(assert (= var4796925 temp128_236))
(assert (= temp128_237 #x0000000000000000))
(assert (= var4996927 temp128_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp128_238 #x0000000000000002))
(assert (= var5125763 temp128_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_239 #x0000000000000000))
(assert (= var5191324 temp128_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp128_241 #xffffffffffffffff))
(assert (= temp128_240 temp128_241))
(assert (= temp128_242 #x0000000000000001))
(assert (= var66602 temp128_242))
(assert (= temp128_243 #x0000000000000000))
(assert (= temp128_244
   (ite (bvslt var66602 temp128_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp128_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp128_244)))
(assert (= var80523 temp128_245))
(assert (bvslt (ite (bvslt var66602 temp128_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp128_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp128_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp128_247 #x0000000000000001))
(assert (= var80524 temp128_247))
(assert (= temp128_249 #xffffffffffffffff))
(assert (= temp128_248 temp128_249))
(assert (= temp128_250 #x0000000000000001))
(assert (= var79986 temp128_250))
(assert (= temp128_251 #x0000000000000000))
(assert (= var6435604 temp128_251))
(assert (= var6435571 var6435604))
(assert (= var6304135 var6435571))
(assert (= var6304131 var6304135))
(assert (= var81597 var6304131))
(assert (= temp128_252 #x0000000000000000))
(assert (= var81597 temp128_252))
(model-add temp128_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp128_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp128_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






