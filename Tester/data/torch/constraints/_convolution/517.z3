(declare-fun temp686_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp686_2 () (_ BitVec 64))
(declare-fun temp686_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp686_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp686_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp686_6 () (_ BitVec 64))
(declare-fun temp686_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_8 () (_ BitVec 64))
(declare-fun temp686_9 () (_ BitVec 64))
(declare-fun temp686_10 () (_ BitVec 64))
(declare-fun temp686_11 () (_ BitVec 64))
(declare-fun temp686_12 () (_ BitVec 64))
(declare-fun temp686_13 () (_ BitVec 64))
(declare-fun temp686_14 () (_ BitVec 64))
(declare-fun temp686_15 () (_ BitVec 64))
(declare-fun temp686_16 () (_ BitVec 64))
(declare-fun temp686_17 () (_ BitVec 64))
(declare-fun temp686_18 () (_ BitVec 64))
(declare-fun temp686_19 () (_ BitVec 64))
(declare-fun temp686_20 () (_ BitVec 64))
(declare-fun temp686_21 () (_ BitVec 64))
(declare-fun temp686_22 () (_ BitVec 64))
(declare-fun temp686_23 () (_ BitVec 64))
(declare-fun temp686_24 () (_ BitVec 64))
(declare-fun temp686_25 () (_ BitVec 64))
(declare-fun temp686_26 () (_ BitVec 64))
(declare-fun temp686_27 () (_ BitVec 64))
(declare-fun temp686_28 () (_ BitVec 64))
(declare-fun temp686_29 () (_ BitVec 64))
(declare-fun temp686_30 () (_ BitVec 64))
(declare-fun temp686_31 () (_ BitVec 64))
(declare-fun temp686_32 () (_ BitVec 64))
(declare-fun temp686_33 () (_ BitVec 64))
(declare-fun temp686_34 () (_ BitVec 64))
(declare-fun temp686_35 () (_ BitVec 64))
(declare-fun temp686_36 () (_ BitVec 64))
(declare-fun temp686_37 () (_ BitVec 64))
(declare-fun temp686_38 () (_ BitVec 64))
(declare-fun temp686_39 () (_ BitVec 64))
(declare-fun temp686_40 () (_ BitVec 64))
(declare-fun temp686_41 () (_ BitVec 64))
(declare-fun temp686_42 () (_ BitVec 64))
(declare-fun temp686_43 () (_ BitVec 64))
(declare-fun temp686_44 () (_ BitVec 64))
(declare-fun temp686_45 () (_ BitVec 64))
(declare-fun temp686_46 () (_ BitVec 64))
(declare-fun temp686_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp686_48 () (_ BitVec 64))
(declare-fun temp686_49 () (_ BitVec 64))
(declare-fun temp686_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_51 () (_ BitVec 64))
(declare-fun temp686_52 () (_ BitVec 64))
(declare-fun temp686_53 () (_ BitVec 64))
(declare-fun temp686_54 () (_ BitVec 64))
(declare-fun temp686_55 () (_ BitVec 64))
(declare-fun temp686_56 () (_ BitVec 64))
(declare-fun temp686_57 () (_ BitVec 64))
(declare-fun temp686_58 () (_ BitVec 64))
(declare-fun temp686_59 () (_ BitVec 64))
(declare-fun temp686_60 () (_ BitVec 64))
(declare-fun temp686_61 () (_ BitVec 64))
(declare-fun temp686_62 () (_ BitVec 64))
(declare-fun temp686_63 () (_ BitVec 64))
(declare-fun temp686_64 () (_ BitVec 64))
(declare-fun temp686_65 () (_ BitVec 64))
(declare-fun temp686_66 () (_ BitVec 64))
(declare-fun temp686_67 () (_ BitVec 64))
(declare-fun temp686_68 () (_ BitVec 64))
(declare-fun temp686_69 () (_ BitVec 64))
(declare-fun temp686_70 () (_ BitVec 64))
(declare-fun temp686_71 () (_ BitVec 64))
(declare-fun temp686_72 () (_ BitVec 64))
(declare-fun temp686_73 () (_ BitVec 64))
(declare-fun temp686_74 () (_ BitVec 64))
(declare-fun temp686_75 () (_ BitVec 64))
(declare-fun temp686_76 () (_ BitVec 64))
(declare-fun temp686_77 () (_ BitVec 64))
(declare-fun temp686_78 () (_ BitVec 64))
(declare-fun temp686_79 () (_ BitVec 64))
(declare-fun temp686_80 () (_ BitVec 64))
(declare-fun temp686_81 () (_ BitVec 64))
(declare-fun temp686_82 () (_ BitVec 64))
(declare-fun temp686_83 () (_ BitVec 64))
(declare-fun temp686_84 () (_ BitVec 64))
(declare-fun temp686_85 () (_ BitVec 64))
(declare-fun temp686_86 () (_ BitVec 64))
(declare-fun temp686_87 () (_ BitVec 64))
(declare-fun temp686_88 () (_ BitVec 64))
(declare-fun temp686_89 () (_ BitVec 64))
(declare-fun temp686_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp686_91 () (_ BitVec 64))
(declare-fun temp686_92 () (_ BitVec 64))
(declare-fun temp686_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_94 () (_ BitVec 64))
(declare-fun temp686_95 () (_ BitVec 64))
(declare-fun temp686_96 () (_ BitVec 64))
(declare-fun temp686_97 () (_ BitVec 64))
(declare-fun temp686_98 () (_ BitVec 64))
(declare-fun temp686_99 () (_ BitVec 64))
(declare-fun temp686_100 () (_ BitVec 64))
(declare-fun temp686_101 () (_ BitVec 64))
(declare-fun temp686_102 () (_ BitVec 64))
(declare-fun temp686_103 () (_ BitVec 64))
(declare-fun temp686_104 () (_ BitVec 64))
(declare-fun temp686_105 () (_ BitVec 64))
(declare-fun temp686_106 () (_ BitVec 64))
(declare-fun temp686_107 () (_ BitVec 64))
(declare-fun temp686_108 () (_ BitVec 64))
(declare-fun temp686_109 () (_ BitVec 64))
(declare-fun temp686_110 () (_ BitVec 64))
(declare-fun temp686_111 () (_ BitVec 64))
(declare-fun temp686_112 () (_ BitVec 64))
(declare-fun temp686_113 () (_ BitVec 64))
(declare-fun temp686_114 () (_ BitVec 64))
(declare-fun temp686_115 () (_ BitVec 64))
(declare-fun temp686_116 () (_ BitVec 64))
(declare-fun temp686_117 () (_ BitVec 64))
(declare-fun temp686_118 () (_ BitVec 64))
(declare-fun temp686_119 () (_ BitVec 64))
(declare-fun temp686_120 () (_ BitVec 64))
(declare-fun temp686_121 () (_ BitVec 64))
(declare-fun temp686_122 () (_ BitVec 64))
(declare-fun temp686_123 () (_ BitVec 64))
(declare-fun temp686_124 () (_ BitVec 64))
(declare-fun temp686_125 () (_ BitVec 64))
(declare-fun temp686_126 () (_ BitVec 64))
(declare-fun temp686_127 () (_ BitVec 64))
(declare-fun temp686_128 () (_ BitVec 64))
(declare-fun temp686_129 () (_ BitVec 64))
(declare-fun temp686_130 () (_ BitVec 64))
(declare-fun temp686_131 () (_ BitVec 64))
(declare-fun temp686_132 () (_ BitVec 64))
(declare-fun temp686_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp686_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp686_135 () (_ BitVec 64))
(declare-fun temp686_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp686_137 () (_ BitVec 64))
(declare-fun temp686_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_139 () (_ BitVec 64))
(declare-fun temp686_140 () (_ BitVec 64))
(declare-fun temp686_141 () (_ BitVec 64))
(declare-fun temp686_142 () (_ BitVec 64))
(declare-fun temp686_143 () (_ BitVec 64))
(declare-fun temp686_144 () (_ BitVec 64))
(declare-fun temp686_145 () (_ BitVec 64))
(declare-fun temp686_146 () (_ BitVec 64))
(declare-fun temp686_147 () (_ BitVec 64))
(declare-fun temp686_148 () (_ BitVec 64))
(declare-fun temp686_149 () (_ BitVec 64))
(declare-fun temp686_150 () (_ BitVec 64))
(declare-fun temp686_151 () (_ BitVec 64))
(declare-fun temp686_152 () (_ BitVec 64))
(declare-fun temp686_153 () (_ BitVec 64))
(declare-fun temp686_154 () (_ BitVec 64))
(declare-fun temp686_156 () (_ BitVec 64))
(declare-fun temp686_157 () (_ BitVec 64))
(declare-fun temp686_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp686_158 () (_ BitVec 64))
(declare-fun temp686_159 () (_ BitVec 64))
(declare-fun temp686_161 () (_ BitVec 64))
(declare-fun temp686_162 () (_ BitVec 64))
(declare-fun temp686_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp686_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp686_164 () (_ BitVec 64))
(declare-fun temp686_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp686_166 () (_ BitVec 64))
(declare-fun temp686_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp686_168 () (_ BitVec 64))
(declare-fun temp686_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_170 () (_ BitVec 64))
(declare-fun temp686_171 () (_ BitVec 64))
(declare-fun temp686_172 () (_ BitVec 64))
(declare-fun temp686_173 () (_ BitVec 64))
(declare-fun temp686_174 () (_ BitVec 64))
(declare-fun temp686_175 () (_ BitVec 64))
(declare-fun temp686_176 () (_ BitVec 64))
(declare-fun temp686_177 () (_ BitVec 64))
(declare-fun temp686_178 () (_ BitVec 64))
(declare-fun temp686_179 () (_ BitVec 64))
(declare-fun temp686_180 () (_ BitVec 64))
(declare-fun temp686_181 () (_ BitVec 64))
(declare-fun temp686_182 () (_ BitVec 64))
(declare-fun temp686_183 () (_ BitVec 64))
(declare-fun temp686_184 () (_ BitVec 64))
(declare-fun temp686_185 () (_ BitVec 64))
(declare-fun temp686_186 () (_ BitVec 64))
(declare-fun temp686_187 () (_ BitVec 64))
(declare-fun temp686_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp686_189 () (_ BitVec 64))
(declare-fun temp686_191 () (_ BitVec 64))
(declare-fun temp686_192 () (_ BitVec 64))
(declare-fun temp686_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp686_193 () (_ BitVec 64))
(declare-fun temp686_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp686_195 () (_ BitVec 64))
(declare-fun temp686_196 () (_ BitVec 64))
(declare-fun temp686_197 () (_ BitVec 64))
(declare-fun temp686_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_199 () (_ BitVec 64))
(declare-fun temp686_200 () (_ BitVec 64))
(declare-fun temp686_201 () (_ BitVec 64))
(declare-fun temp686_202 () (_ BitVec 64))
(declare-fun temp686_203 () (_ BitVec 64))
(declare-fun temp686_204 () (_ BitVec 64))
(declare-fun temp686_205 () (_ BitVec 64))
(declare-fun temp686_206 () (_ BitVec 64))
(declare-fun temp686_207 () (_ BitVec 64))
(declare-fun temp686_208 () (_ BitVec 64))
(declare-fun temp686_209 () (_ BitVec 64))
(declare-fun temp686_210 () (_ BitVec 64))
(declare-fun temp686_211 () (_ BitVec 64))
(declare-fun temp686_212 () (_ BitVec 64))
(declare-fun temp686_213 () (_ BitVec 64))
(declare-fun temp686_214 () (_ BitVec 64))
(declare-fun temp686_215 () (_ BitVec 64))
(declare-fun temp686_216 () (_ BitVec 64))
(declare-fun temp686_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp686_218 () (_ BitVec 64))
(declare-fun temp686_220 () (_ BitVec 64))
(declare-fun temp686_221 () (_ BitVec 64))
(declare-fun temp686_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp686_222 () (_ BitVec 64))
(declare-fun temp686_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp686_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp686_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp686_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp686_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp686_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp686_229 () (_ BitVec 64))
(declare-fun temp686_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp686_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp686_232 () (_ BitVec 64))
(declare-fun temp686_233 () (_ BitVec 64))
(declare-fun temp686_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp686_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp686_236 () (_ BitVec 64))
(declare-fun temp686_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp686_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp686_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp686_241 () (_ BitVec 64))
(declare-fun temp686_240 () (_ BitVec 64))
(declare-fun temp686_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp686_243 () (_ BitVec 64))
(declare-fun temp686_244 () (_ BitVec 64))
(declare-fun temp686_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp686_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp686_247 () (_ BitVec 64))
(declare-fun temp686_249 () (_ BitVec 64))
(declare-fun temp686_248 () (_ BitVec 64))
(declare-fun temp686_250 () (_ BitVec 64))
(assert (= temp686_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp686_1)))
(assert (= temp686_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp686_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_3 #x0000000000000000))
(assert (= var79869 temp686_3))
(assert (= temp686_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp686_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_5 #x0000000000000000))
(assert (= var79914 temp686_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp686_6 #x0000000000000000))
(assert (= temp686_7 temp686_6))
(assert (= temp686_8 (select ARGNAME_padding_NAMEEND_VAL temp686_7)))
(assert (= temp686_9 #x0000000000000001))
(assert (= temp686_10 temp686_9))
(assert (= temp686_11 (select ARGNAME_padding_NAMEEND_VAL temp686_10)))
(assert (= temp686_12 #x0000000000000002))
(assert (= temp686_13 temp686_12))
(assert (= temp686_14 (select ARGNAME_padding_NAMEEND_VAL temp686_13)))
(assert (= temp686_15 #x0000000000000003))
(assert (= temp686_16 temp686_15))
(assert (= temp686_17 (select ARGNAME_padding_NAMEEND_VAL temp686_16)))
(assert (= temp686_18 #x0000000000000004))
(assert (= temp686_19 temp686_18))
(assert (= temp686_20 (select ARGNAME_padding_NAMEEND_VAL temp686_19)))
(assert (= temp686_21 #x0000000000000005))
(assert (= temp686_22 temp686_21))
(assert (= temp686_23 (select ARGNAME_padding_NAMEEND_VAL temp686_22)))
(assert (= temp686_24 #x0000000000000000))
(assert (= temp686_25 #x0000000000000000))
(assert (= temp686_26 temp686_25))
(assert (= temp686_27 (select ARGNAME_padding_NAMEEND_VAL temp686_26)))
(assert (= temp686_28 #x0000000000000000))
(assert (= temp686_29 #x0000000000000001))
(assert (= temp686_30 temp686_29))
(assert (= temp686_31 (select ARGNAME_padding_NAMEEND_VAL temp686_30)))
(assert (= temp686_32 #x0000000000000000))
(assert (= temp686_33 #x0000000000000002))
(assert (= temp686_34 temp686_33))
(assert (= temp686_35 (select ARGNAME_padding_NAMEEND_VAL temp686_34)))
(assert (= temp686_36 #x0000000000000000))
(assert (= temp686_37 #x0000000000000003))
(assert (= temp686_38 temp686_37))
(assert (= temp686_39 (select ARGNAME_padding_NAMEEND_VAL temp686_38)))
(assert (= temp686_40 #x0000000000000000))
(assert (= temp686_41 #x0000000000000004))
(assert (= temp686_42 temp686_41))
(assert (= temp686_43 (select ARGNAME_padding_NAMEEND_VAL temp686_42)))
(assert (= temp686_44 #x0000000000000000))
(assert (= temp686_45 #x0000000000000005))
(assert (= temp686_46 temp686_45))
(assert (= temp686_47 (select ARGNAME_padding_NAMEEND_VAL temp686_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp686_27 temp686_24)
             (bvslt temp686_31 temp686_28)
             (bvslt temp686_35 temp686_32)
             (bvslt temp686_39 temp686_36)
             (bvslt temp686_43 temp686_40)
             (bvslt temp686_47 temp686_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_48 #x0000000000000000))
(assert (= var1322786 temp686_48))
(assert (= temp686_49 #x0000000000000000))
(assert (= temp686_50 temp686_49))
(assert (= temp686_51 (select ARGNAME_output_padding_NAMEEND_VAL temp686_50)))
(assert (= temp686_52 #x0000000000000001))
(assert (= temp686_53 temp686_52))
(assert (= temp686_54 (select ARGNAME_output_padding_NAMEEND_VAL temp686_53)))
(assert (= temp686_55 #x0000000000000002))
(assert (= temp686_56 temp686_55))
(assert (= temp686_57 (select ARGNAME_output_padding_NAMEEND_VAL temp686_56)))
(assert (= temp686_58 #x0000000000000003))
(assert (= temp686_59 temp686_58))
(assert (= temp686_60 (select ARGNAME_output_padding_NAMEEND_VAL temp686_59)))
(assert (= temp686_61 #x0000000000000004))
(assert (= temp686_62 temp686_61))
(assert (= temp686_63 (select ARGNAME_output_padding_NAMEEND_VAL temp686_62)))
(assert (= temp686_64 #x0000000000000005))
(assert (= temp686_65 temp686_64))
(assert (= temp686_66 (select ARGNAME_output_padding_NAMEEND_VAL temp686_65)))
(assert (= temp686_67 #x0000000000000000))
(assert (= temp686_68 #x0000000000000000))
(assert (= temp686_69 temp686_68))
(assert (= temp686_70 (select ARGNAME_output_padding_NAMEEND_VAL temp686_69)))
(assert (= temp686_71 #x0000000000000000))
(assert (= temp686_72 #x0000000000000001))
(assert (= temp686_73 temp686_72))
(assert (= temp686_74 (select ARGNAME_output_padding_NAMEEND_VAL temp686_73)))
(assert (= temp686_75 #x0000000000000000))
(assert (= temp686_76 #x0000000000000002))
(assert (= temp686_77 temp686_76))
(assert (= temp686_78 (select ARGNAME_output_padding_NAMEEND_VAL temp686_77)))
(assert (= temp686_79 #x0000000000000000))
(assert (= temp686_80 #x0000000000000003))
(assert (= temp686_81 temp686_80))
(assert (= temp686_82 (select ARGNAME_output_padding_NAMEEND_VAL temp686_81)))
(assert (= temp686_83 #x0000000000000000))
(assert (= temp686_84 #x0000000000000004))
(assert (= temp686_85 temp686_84))
(assert (= temp686_86 (select ARGNAME_output_padding_NAMEEND_VAL temp686_85)))
(assert (= temp686_87 #x0000000000000000))
(assert (= temp686_88 #x0000000000000005))
(assert (= temp686_89 temp686_88))
(assert (= temp686_90 (select ARGNAME_output_padding_NAMEEND_VAL temp686_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp686_70 temp686_67)
             (bvslt temp686_74 temp686_71)
             (bvslt temp686_78 temp686_75)
             (bvslt temp686_82 temp686_79)
             (bvslt temp686_86 temp686_83)
             (bvslt temp686_90 temp686_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_91 #x0000000000000000))
(assert (= var1322797 temp686_91))
(assert (= temp686_92 #x0000000000000000))
(assert (= temp686_93 temp686_92))
(assert (= temp686_94 (select ARGNAME_stride_NAMEEND_VAL temp686_93)))
(assert (= temp686_95 #x0000000000000001))
(assert (= temp686_96 temp686_95))
(assert (= temp686_97 (select ARGNAME_stride_NAMEEND_VAL temp686_96)))
(assert (= temp686_98 #x0000000000000002))
(assert (= temp686_99 temp686_98))
(assert (= temp686_100 (select ARGNAME_stride_NAMEEND_VAL temp686_99)))
(assert (= temp686_101 #x0000000000000003))
(assert (= temp686_102 temp686_101))
(assert (= temp686_103 (select ARGNAME_stride_NAMEEND_VAL temp686_102)))
(assert (= temp686_104 #x0000000000000004))
(assert (= temp686_105 temp686_104))
(assert (= temp686_106 (select ARGNAME_stride_NAMEEND_VAL temp686_105)))
(assert (= temp686_107 #x0000000000000005))
(assert (= temp686_108 temp686_107))
(assert (= temp686_109 (select ARGNAME_stride_NAMEEND_VAL temp686_108)))
(assert (= temp686_110 #x0000000000000000))
(assert (= temp686_111 #x0000000000000000))
(assert (= temp686_112 temp686_111))
(assert (= temp686_113 (select ARGNAME_stride_NAMEEND_VAL temp686_112)))
(assert (= temp686_114 #x0000000000000000))
(assert (= temp686_115 #x0000000000000001))
(assert (= temp686_116 temp686_115))
(assert (= temp686_117 (select ARGNAME_stride_NAMEEND_VAL temp686_116)))
(assert (= temp686_118 #x0000000000000000))
(assert (= temp686_119 #x0000000000000002))
(assert (= temp686_120 temp686_119))
(assert (= temp686_121 (select ARGNAME_stride_NAMEEND_VAL temp686_120)))
(assert (= temp686_122 #x0000000000000000))
(assert (= temp686_123 #x0000000000000003))
(assert (= temp686_124 temp686_123))
(assert (= temp686_125 (select ARGNAME_stride_NAMEEND_VAL temp686_124)))
(assert (= temp686_126 #x0000000000000000))
(assert (= temp686_127 #x0000000000000004))
(assert (= temp686_128 temp686_127))
(assert (= temp686_129 (select ARGNAME_stride_NAMEEND_VAL temp686_128)))
(assert (= temp686_130 #x0000000000000000))
(assert (= temp686_131 #x0000000000000005))
(assert (= temp686_132 temp686_131))
(assert (= temp686_133 (select ARGNAME_stride_NAMEEND_VAL temp686_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp686_113 temp686_110)
             (bvsle temp686_117 temp686_114)
             (bvsle temp686_121 temp686_118)
             (bvsle temp686_125 temp686_122)
             (bvsle temp686_129 temp686_126)
             (bvsle temp686_133 temp686_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_134 #x0000000000000000))
(assert (= var1322807 temp686_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_135 #x0000000000000001))
(assert (= var1322819 temp686_135))
(assert (= temp686_136 #x0000000000000000))
(assert (= var1310898 temp686_136))
(assert (= temp686_137 #x0000000000000000))
(assert (= temp686_138 temp686_137))
(assert (= temp686_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_138)))
(assert (= temp686_140 #x0000000000000001))
(assert (= temp686_141 temp686_140))
(assert (= temp686_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_141)))
(assert (= temp686_143 #x0000000000000002))
(assert (= temp686_144 temp686_143))
(assert (= temp686_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_144)))
(assert (= temp686_146 #x0000000000000003))
(assert (= temp686_147 temp686_146))
(assert (= temp686_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_147)))
(assert (= temp686_149 #x0000000000000004))
(assert (= temp686_150 temp686_149))
(assert (= temp686_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_150)))
(assert (= temp686_152 #x0000000000000005))
(assert (= temp686_153 temp686_152))
(assert (= temp686_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_153)))
(assert (= temp686_156 var1310898))
(assert (= temp686_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_156)))
(assert (= temp686_155 temp686_157))
(assert (= var1322852
   (ite (bvslt temp686_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_158 #x0000000000000000))
(assert (= var1322852 temp686_158))
(assert (= temp686_159 #x0000000000000000))
(assert (= var1310898 temp686_159))
(assert (= temp686_161 var1310898))
(assert (= temp686_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_161)))
(assert (= temp686_160 temp686_162))
(assert (= var1322874 (bvsmod temp686_160 ARGNAME_groups_NAMEEND)))
(assert (= temp686_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp686_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_164 #x0000000000000001))
(assert (= var1322875 temp686_164))
(assert (= temp686_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp686_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_166 #x0000000000000001))
(assert (= var1322895 temp686_166))
(assert (= temp686_167 #x0000000000000001))
(assert (= var1311786 temp686_167))
(assert (= temp686_168 #x0000000000000000))
(assert (= temp686_169 temp686_168))
(assert (= temp686_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_169)))
(assert (= temp686_171 #x0000000000000001))
(assert (= temp686_172 temp686_171))
(assert (= temp686_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_172)))
(assert (= temp686_174 #x0000000000000002))
(assert (= temp686_175 temp686_174))
(assert (= temp686_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_175)))
(assert (= temp686_177 #x0000000000000003))
(assert (= temp686_178 temp686_177))
(assert (= temp686_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_178)))
(assert (= temp686_180 #x0000000000000004))
(assert (= temp686_181 temp686_180))
(assert (= temp686_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_181)))
(assert (= temp686_183 #x0000000000000005))
(assert (= temp686_184 temp686_183))
(assert (= temp686_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_184)))
(assert (= temp686_186 #x0000000000000000))
(assert (= temp686_187
   (ite (bvslt var1311786 temp686_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp686_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_187)))
(assert (= var1322903 temp686_188))
(assert (bvslt (ite (bvslt var1311786 temp686_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp686_189 #x0000000000000001))
(assert (= var1311786 temp686_189))
(assert (= temp686_191 var1311786))
(assert (= temp686_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_191)))
(assert (= temp686_190 temp686_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp686_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_193 #x0000000000000001))
(assert (= var1322908 temp686_193))
(assert (= temp686_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp686_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_195 #x0000000000000001))
(assert (= var1322975 temp686_195))
(assert (= temp686_196 #x0000000000000000))
(assert (= var1310898 temp686_196))
(assert (= temp686_197 #x0000000000000000))
(assert (= temp686_198 temp686_197))
(assert (= temp686_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp686_198)))
(assert (= temp686_200 #x0000000000000001))
(assert (= temp686_201 temp686_200))
(assert (= temp686_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp686_201)))
(assert (= temp686_203 #x0000000000000002))
(assert (= temp686_204 temp686_203))
(assert (= temp686_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp686_204)))
(assert (= temp686_206 #x0000000000000003))
(assert (= temp686_207 temp686_206))
(assert (= temp686_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp686_207)))
(assert (= temp686_209 #x0000000000000004))
(assert (= temp686_210 temp686_209))
(assert (= temp686_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp686_210)))
(assert (= temp686_212 #x0000000000000005))
(assert (= temp686_213 temp686_212))
(assert (= temp686_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp686_213)))
(assert (= temp686_215 #x0000000000000000))
(assert (= temp686_216
   (ite (bvslt var1310898 temp686_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp686_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp686_216)))
(assert (= var1322977 temp686_217))
(assert (bvslt (ite (bvslt var1310898 temp686_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp686_218 #x0000000000000000))
(assert (= var1310898 temp686_218))
(assert (= temp686_220 var1310898))
(assert (= temp686_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_220)))
(assert (= temp686_219 temp686_221))
(assert (= var1322980
   (ite (= var1322977 temp686_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_222 #x0000000000000001))
(assert (= var1322980 temp686_222))
(assert (= temp686_223 #x0000000000000002))
(assert (= var1848169 temp686_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp686_225 #x0000000000000001))
(assert (= var1323065 temp686_225))
(assert (= temp686_226 #x0000000000000001))
(assert (= var3486735 temp686_226))
(assert (= temp686_227 #x0000000000000001))
(assert (= var3814415 temp686_227))
(assert (= temp686_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp686_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_229 #x0000000000000001))
(assert (= var79986 temp686_229))
(assert (= temp686_230 #x0000000000000001))
(assert (= var80116 temp686_230))
(assert (= var4796905 var80116))
(assert (= temp686_231 #x0000000000000000))
(assert (= var4784306 temp686_231))
(assert (= temp686_232 #x0000000000000000))
(assert (= temp686_233
   (ite (bvslt var4784306 temp686_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp686_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_233)))
(assert (= var4796924 temp686_234))
(assert (bvslt (ite (bvslt var4784306 temp686_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp686_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp686_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_236 #x0000000000000001))
(assert (= var4796925 temp686_236))
(assert (= temp686_237 #x0000000000000000))
(assert (= var4996927 temp686_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp686_238 #x0000000000000002))
(assert (= var5125763 temp686_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_239 #x0000000000000000))
(assert (= var5191324 temp686_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp686_241 #xffffffffffffffff))
(assert (= temp686_240 temp686_241))
(assert (= temp686_242 #x0000000000000001))
(assert (= var66602 temp686_242))
(assert (= temp686_243 #x0000000000000000))
(assert (= temp686_244
   (ite (bvslt var66602 temp686_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp686_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_244)))
(assert (= var80523 temp686_245))
(assert (bvslt (ite (bvslt var66602 temp686_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp686_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp686_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_247 #x0000000000000001))
(assert (= var80524 temp686_247))
(assert (= temp686_249 #xffffffffffffffff))
(assert (= temp686_248 temp686_249))
(assert (= temp686_250 #x0000000000000001))
(assert (= var79986 temp686_250))
(model-add temp686_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp686_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp686_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






