(declare-fun temp742_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp742_2 () (_ BitVec 64))
(declare-fun temp742_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp742_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp742_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp742_6 () (_ BitVec 64))
(declare-fun temp742_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp742_8 () (_ BitVec 64))
(declare-fun temp742_9 () (_ BitVec 64))
(declare-fun temp742_10 () (_ BitVec 64))
(declare-fun temp742_11 () (_ BitVec 64))
(declare-fun temp742_12 () (_ BitVec 64))
(declare-fun temp742_13 () (_ BitVec 64))
(declare-fun temp742_14 () (_ BitVec 64))
(declare-fun temp742_15 () (_ BitVec 64))
(declare-fun temp742_16 () (_ BitVec 64))
(declare-fun temp742_17 () (_ BitVec 64))
(declare-fun temp742_18 () (_ BitVec 64))
(declare-fun temp742_19 () (_ BitVec 64))
(declare-fun temp742_20 () (_ BitVec 64))
(declare-fun temp742_21 () (_ BitVec 64))
(declare-fun temp742_22 () (_ BitVec 64))
(declare-fun temp742_23 () (_ BitVec 64))
(declare-fun temp742_24 () (_ BitVec 64))
(declare-fun temp742_25 () (_ BitVec 64))
(declare-fun temp742_26 () (_ BitVec 64))
(declare-fun temp742_27 () (_ BitVec 64))
(declare-fun temp742_28 () (_ BitVec 64))
(declare-fun temp742_29 () (_ BitVec 64))
(declare-fun temp742_30 () (_ BitVec 64))
(declare-fun temp742_31 () (_ BitVec 64))
(declare-fun temp742_32 () (_ BitVec 64))
(declare-fun temp742_33 () (_ BitVec 64))
(declare-fun temp742_34 () (_ BitVec 64))
(declare-fun temp742_35 () (_ BitVec 64))
(declare-fun temp742_36 () (_ BitVec 64))
(declare-fun temp742_37 () (_ BitVec 64))
(declare-fun temp742_38 () (_ BitVec 64))
(declare-fun temp742_39 () (_ BitVec 64))
(declare-fun temp742_40 () (_ BitVec 64))
(declare-fun temp742_41 () (_ BitVec 64))
(declare-fun temp742_42 () (_ BitVec 64))
(declare-fun temp742_43 () (_ BitVec 64))
(declare-fun temp742_44 () (_ BitVec 64))
(declare-fun temp742_45 () (_ BitVec 64))
(declare-fun temp742_46 () (_ BitVec 64))
(declare-fun temp742_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp742_48 () (_ BitVec 64))
(declare-fun temp742_49 () (_ BitVec 64))
(declare-fun temp742_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp742_51 () (_ BitVec 64))
(declare-fun temp742_52 () (_ BitVec 64))
(declare-fun temp742_53 () (_ BitVec 64))
(declare-fun temp742_54 () (_ BitVec 64))
(declare-fun temp742_55 () (_ BitVec 64))
(declare-fun temp742_56 () (_ BitVec 64))
(declare-fun temp742_57 () (_ BitVec 64))
(declare-fun temp742_58 () (_ BitVec 64))
(declare-fun temp742_59 () (_ BitVec 64))
(declare-fun temp742_60 () (_ BitVec 64))
(declare-fun temp742_61 () (_ BitVec 64))
(declare-fun temp742_62 () (_ BitVec 64))
(declare-fun temp742_63 () (_ BitVec 64))
(declare-fun temp742_64 () (_ BitVec 64))
(declare-fun temp742_65 () (_ BitVec 64))
(declare-fun temp742_66 () (_ BitVec 64))
(declare-fun temp742_67 () (_ BitVec 64))
(declare-fun temp742_68 () (_ BitVec 64))
(declare-fun temp742_69 () (_ BitVec 64))
(declare-fun temp742_70 () (_ BitVec 64))
(declare-fun temp742_71 () (_ BitVec 64))
(declare-fun temp742_72 () (_ BitVec 64))
(declare-fun temp742_73 () (_ BitVec 64))
(declare-fun temp742_74 () (_ BitVec 64))
(declare-fun temp742_75 () (_ BitVec 64))
(declare-fun temp742_76 () (_ BitVec 64))
(declare-fun temp742_77 () (_ BitVec 64))
(declare-fun temp742_78 () (_ BitVec 64))
(declare-fun temp742_79 () (_ BitVec 64))
(declare-fun temp742_80 () (_ BitVec 64))
(declare-fun temp742_81 () (_ BitVec 64))
(declare-fun temp742_82 () (_ BitVec 64))
(declare-fun temp742_83 () (_ BitVec 64))
(declare-fun temp742_84 () (_ BitVec 64))
(declare-fun temp742_85 () (_ BitVec 64))
(declare-fun temp742_86 () (_ BitVec 64))
(declare-fun temp742_87 () (_ BitVec 64))
(declare-fun temp742_88 () (_ BitVec 64))
(declare-fun temp742_89 () (_ BitVec 64))
(declare-fun temp742_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp742_91 () (_ BitVec 64))
(declare-fun temp742_92 () (_ BitVec 64))
(declare-fun temp742_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp742_94 () (_ BitVec 64))
(declare-fun temp742_95 () (_ BitVec 64))
(declare-fun temp742_96 () (_ BitVec 64))
(declare-fun temp742_97 () (_ BitVec 64))
(declare-fun temp742_98 () (_ BitVec 64))
(declare-fun temp742_99 () (_ BitVec 64))
(declare-fun temp742_100 () (_ BitVec 64))
(declare-fun temp742_101 () (_ BitVec 64))
(declare-fun temp742_102 () (_ BitVec 64))
(declare-fun temp742_103 () (_ BitVec 64))
(declare-fun temp742_104 () (_ BitVec 64))
(declare-fun temp742_105 () (_ BitVec 64))
(declare-fun temp742_106 () (_ BitVec 64))
(declare-fun temp742_107 () (_ BitVec 64))
(declare-fun temp742_108 () (_ BitVec 64))
(declare-fun temp742_109 () (_ BitVec 64))
(declare-fun temp742_110 () (_ BitVec 64))
(declare-fun temp742_111 () (_ BitVec 64))
(declare-fun temp742_112 () (_ BitVec 64))
(declare-fun temp742_113 () (_ BitVec 64))
(declare-fun temp742_114 () (_ BitVec 64))
(declare-fun temp742_115 () (_ BitVec 64))
(declare-fun temp742_116 () (_ BitVec 64))
(declare-fun temp742_117 () (_ BitVec 64))
(declare-fun temp742_118 () (_ BitVec 64))
(declare-fun temp742_119 () (_ BitVec 64))
(declare-fun temp742_120 () (_ BitVec 64))
(declare-fun temp742_121 () (_ BitVec 64))
(declare-fun temp742_122 () (_ BitVec 64))
(declare-fun temp742_123 () (_ BitVec 64))
(declare-fun temp742_124 () (_ BitVec 64))
(declare-fun temp742_125 () (_ BitVec 64))
(declare-fun temp742_126 () (_ BitVec 64))
(declare-fun temp742_127 () (_ BitVec 64))
(declare-fun temp742_128 () (_ BitVec 64))
(declare-fun temp742_129 () (_ BitVec 64))
(declare-fun temp742_130 () (_ BitVec 64))
(declare-fun temp742_131 () (_ BitVec 64))
(declare-fun temp742_132 () (_ BitVec 64))
(declare-fun temp742_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp742_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp742_135 () (_ BitVec 64))
(declare-fun temp742_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp742_137 () (_ BitVec 64))
(declare-fun temp742_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp742_139 () (_ BitVec 64))
(declare-fun temp742_140 () (_ BitVec 64))
(declare-fun temp742_141 () (_ BitVec 64))
(declare-fun temp742_142 () (_ BitVec 64))
(declare-fun temp742_143 () (_ BitVec 64))
(declare-fun temp742_144 () (_ BitVec 64))
(declare-fun temp742_145 () (_ BitVec 64))
(declare-fun temp742_146 () (_ BitVec 64))
(declare-fun temp742_147 () (_ BitVec 64))
(declare-fun temp742_148 () (_ BitVec 64))
(declare-fun temp742_149 () (_ BitVec 64))
(declare-fun temp742_150 () (_ BitVec 64))
(declare-fun temp742_151 () (_ BitVec 64))
(declare-fun temp742_152 () (_ BitVec 64))
(declare-fun temp742_153 () (_ BitVec 64))
(declare-fun temp742_154 () (_ BitVec 64))
(declare-fun temp742_156 () (_ BitVec 64))
(declare-fun temp742_157 () (_ BitVec 64))
(declare-fun temp742_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp742_158 () (_ BitVec 64))
(declare-fun temp742_159 () (_ BitVec 64))
(declare-fun temp742_161 () (_ BitVec 64))
(declare-fun temp742_162 () (_ BitVec 64))
(declare-fun temp742_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp742_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp742_164 () (_ BitVec 64))
(declare-fun temp742_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp742_166 () (_ BitVec 64))
(declare-fun temp742_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp742_168 () (_ BitVec 64))
(declare-fun temp742_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp742_170 () (_ BitVec 64))
(declare-fun temp742_171 () (_ BitVec 64))
(declare-fun temp742_172 () (_ BitVec 64))
(declare-fun temp742_173 () (_ BitVec 64))
(declare-fun temp742_174 () (_ BitVec 64))
(declare-fun temp742_175 () (_ BitVec 64))
(declare-fun temp742_176 () (_ BitVec 64))
(declare-fun temp742_177 () (_ BitVec 64))
(declare-fun temp742_178 () (_ BitVec 64))
(declare-fun temp742_179 () (_ BitVec 64))
(declare-fun temp742_180 () (_ BitVec 64))
(declare-fun temp742_181 () (_ BitVec 64))
(declare-fun temp742_182 () (_ BitVec 64))
(declare-fun temp742_183 () (_ BitVec 64))
(declare-fun temp742_184 () (_ BitVec 64))
(declare-fun temp742_185 () (_ BitVec 64))
(declare-fun temp742_186 () (_ BitVec 64))
(declare-fun temp742_187 () (_ BitVec 64))
(declare-fun temp742_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp742_189 () (_ BitVec 64))
(declare-fun temp742_191 () (_ BitVec 64))
(declare-fun temp742_192 () (_ BitVec 64))
(declare-fun temp742_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp742_193 () (_ BitVec 64))
(declare-fun temp742_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp742_195 () (_ BitVec 64))
(declare-fun temp742_196 () (_ BitVec 64))
(declare-fun temp742_197 () (_ BitVec 64))
(declare-fun temp742_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp742_199 () (_ BitVec 64))
(declare-fun temp742_200 () (_ BitVec 64))
(declare-fun temp742_201 () (_ BitVec 64))
(declare-fun temp742_202 () (_ BitVec 64))
(declare-fun temp742_203 () (_ BitVec 64))
(declare-fun temp742_204 () (_ BitVec 64))
(declare-fun temp742_205 () (_ BitVec 64))
(declare-fun temp742_206 () (_ BitVec 64))
(declare-fun temp742_207 () (_ BitVec 64))
(declare-fun temp742_208 () (_ BitVec 64))
(declare-fun temp742_209 () (_ BitVec 64))
(declare-fun temp742_210 () (_ BitVec 64))
(declare-fun temp742_211 () (_ BitVec 64))
(declare-fun temp742_212 () (_ BitVec 64))
(declare-fun temp742_213 () (_ BitVec 64))
(declare-fun temp742_214 () (_ BitVec 64))
(declare-fun temp742_215 () (_ BitVec 64))
(declare-fun temp742_216 () (_ BitVec 64))
(declare-fun temp742_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp742_218 () (_ BitVec 64))
(declare-fun temp742_220 () (_ BitVec 64))
(declare-fun temp742_221 () (_ BitVec 64))
(declare-fun temp742_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp742_222 () (_ BitVec 64))
(declare-fun temp742_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp742_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp742_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp742_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp742_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp742_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp742_229 () (_ BitVec 64))
(declare-fun temp742_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp742_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp742_232 () (_ BitVec 64))
(declare-fun temp742_233 () (_ BitVec 64))
(declare-fun temp742_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp742_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp742_236 () (_ BitVec 64))
(declare-fun temp742_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp742_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp742_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp742_241 () (_ BitVec 64))
(declare-fun temp742_240 () (_ BitVec 64))
(declare-fun temp742_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp742_243 () (_ BitVec 64))
(declare-fun temp742_244 () (_ BitVec 64))
(declare-fun temp742_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp742_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp742_247 () (_ BitVec 64))
(declare-fun temp742_249 () (_ BitVec 64))
(declare-fun temp742_248 () (_ BitVec 64))
(declare-fun temp742_250 () (_ BitVec 64))
(assert (= temp742_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp742_1)))
(assert (= temp742_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp742_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_3 #x0000000000000000))
(assert (= var79869 temp742_3))
(assert (= temp742_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp742_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_5 #x0000000000000000))
(assert (= var79914 temp742_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp742_6 #x0000000000000000))
(assert (= temp742_7 temp742_6))
(assert (= temp742_8 (select ARGNAME_padding_NAMEEND_VAL temp742_7)))
(assert (= temp742_9 #x0000000000000001))
(assert (= temp742_10 temp742_9))
(assert (= temp742_11 (select ARGNAME_padding_NAMEEND_VAL temp742_10)))
(assert (= temp742_12 #x0000000000000002))
(assert (= temp742_13 temp742_12))
(assert (= temp742_14 (select ARGNAME_padding_NAMEEND_VAL temp742_13)))
(assert (= temp742_15 #x0000000000000003))
(assert (= temp742_16 temp742_15))
(assert (= temp742_17 (select ARGNAME_padding_NAMEEND_VAL temp742_16)))
(assert (= temp742_18 #x0000000000000004))
(assert (= temp742_19 temp742_18))
(assert (= temp742_20 (select ARGNAME_padding_NAMEEND_VAL temp742_19)))
(assert (= temp742_21 #x0000000000000005))
(assert (= temp742_22 temp742_21))
(assert (= temp742_23 (select ARGNAME_padding_NAMEEND_VAL temp742_22)))
(assert (= temp742_24 #x0000000000000000))
(assert (= temp742_25 #x0000000000000000))
(assert (= temp742_26 temp742_25))
(assert (= temp742_27 (select ARGNAME_padding_NAMEEND_VAL temp742_26)))
(assert (= temp742_28 #x0000000000000000))
(assert (= temp742_29 #x0000000000000001))
(assert (= temp742_30 temp742_29))
(assert (= temp742_31 (select ARGNAME_padding_NAMEEND_VAL temp742_30)))
(assert (= temp742_32 #x0000000000000000))
(assert (= temp742_33 #x0000000000000002))
(assert (= temp742_34 temp742_33))
(assert (= temp742_35 (select ARGNAME_padding_NAMEEND_VAL temp742_34)))
(assert (= temp742_36 #x0000000000000000))
(assert (= temp742_37 #x0000000000000003))
(assert (= temp742_38 temp742_37))
(assert (= temp742_39 (select ARGNAME_padding_NAMEEND_VAL temp742_38)))
(assert (= temp742_40 #x0000000000000000))
(assert (= temp742_41 #x0000000000000004))
(assert (= temp742_42 temp742_41))
(assert (= temp742_43 (select ARGNAME_padding_NAMEEND_VAL temp742_42)))
(assert (= temp742_44 #x0000000000000000))
(assert (= temp742_45 #x0000000000000005))
(assert (= temp742_46 temp742_45))
(assert (= temp742_47 (select ARGNAME_padding_NAMEEND_VAL temp742_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp742_27 temp742_24)
             (bvslt temp742_31 temp742_28)
             (bvslt temp742_35 temp742_32)
             (bvslt temp742_39 temp742_36)
             (bvslt temp742_43 temp742_40)
             (bvslt temp742_47 temp742_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_48 #x0000000000000000))
(assert (= var1322786 temp742_48))
(assert (= temp742_49 #x0000000000000000))
(assert (= temp742_50 temp742_49))
(assert (= temp742_51 (select ARGNAME_output_padding_NAMEEND_VAL temp742_50)))
(assert (= temp742_52 #x0000000000000001))
(assert (= temp742_53 temp742_52))
(assert (= temp742_54 (select ARGNAME_output_padding_NAMEEND_VAL temp742_53)))
(assert (= temp742_55 #x0000000000000002))
(assert (= temp742_56 temp742_55))
(assert (= temp742_57 (select ARGNAME_output_padding_NAMEEND_VAL temp742_56)))
(assert (= temp742_58 #x0000000000000003))
(assert (= temp742_59 temp742_58))
(assert (= temp742_60 (select ARGNAME_output_padding_NAMEEND_VAL temp742_59)))
(assert (= temp742_61 #x0000000000000004))
(assert (= temp742_62 temp742_61))
(assert (= temp742_63 (select ARGNAME_output_padding_NAMEEND_VAL temp742_62)))
(assert (= temp742_64 #x0000000000000005))
(assert (= temp742_65 temp742_64))
(assert (= temp742_66 (select ARGNAME_output_padding_NAMEEND_VAL temp742_65)))
(assert (= temp742_67 #x0000000000000000))
(assert (= temp742_68 #x0000000000000000))
(assert (= temp742_69 temp742_68))
(assert (= temp742_70 (select ARGNAME_output_padding_NAMEEND_VAL temp742_69)))
(assert (= temp742_71 #x0000000000000000))
(assert (= temp742_72 #x0000000000000001))
(assert (= temp742_73 temp742_72))
(assert (= temp742_74 (select ARGNAME_output_padding_NAMEEND_VAL temp742_73)))
(assert (= temp742_75 #x0000000000000000))
(assert (= temp742_76 #x0000000000000002))
(assert (= temp742_77 temp742_76))
(assert (= temp742_78 (select ARGNAME_output_padding_NAMEEND_VAL temp742_77)))
(assert (= temp742_79 #x0000000000000000))
(assert (= temp742_80 #x0000000000000003))
(assert (= temp742_81 temp742_80))
(assert (= temp742_82 (select ARGNAME_output_padding_NAMEEND_VAL temp742_81)))
(assert (= temp742_83 #x0000000000000000))
(assert (= temp742_84 #x0000000000000004))
(assert (= temp742_85 temp742_84))
(assert (= temp742_86 (select ARGNAME_output_padding_NAMEEND_VAL temp742_85)))
(assert (= temp742_87 #x0000000000000000))
(assert (= temp742_88 #x0000000000000005))
(assert (= temp742_89 temp742_88))
(assert (= temp742_90 (select ARGNAME_output_padding_NAMEEND_VAL temp742_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp742_70 temp742_67)
             (bvslt temp742_74 temp742_71)
             (bvslt temp742_78 temp742_75)
             (bvslt temp742_82 temp742_79)
             (bvslt temp742_86 temp742_83)
             (bvslt temp742_90 temp742_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_91 #x0000000000000000))
(assert (= var1322797 temp742_91))
(assert (= temp742_92 #x0000000000000000))
(assert (= temp742_93 temp742_92))
(assert (= temp742_94 (select ARGNAME_stride_NAMEEND_VAL temp742_93)))
(assert (= temp742_95 #x0000000000000001))
(assert (= temp742_96 temp742_95))
(assert (= temp742_97 (select ARGNAME_stride_NAMEEND_VAL temp742_96)))
(assert (= temp742_98 #x0000000000000002))
(assert (= temp742_99 temp742_98))
(assert (= temp742_100 (select ARGNAME_stride_NAMEEND_VAL temp742_99)))
(assert (= temp742_101 #x0000000000000003))
(assert (= temp742_102 temp742_101))
(assert (= temp742_103 (select ARGNAME_stride_NAMEEND_VAL temp742_102)))
(assert (= temp742_104 #x0000000000000004))
(assert (= temp742_105 temp742_104))
(assert (= temp742_106 (select ARGNAME_stride_NAMEEND_VAL temp742_105)))
(assert (= temp742_107 #x0000000000000005))
(assert (= temp742_108 temp742_107))
(assert (= temp742_109 (select ARGNAME_stride_NAMEEND_VAL temp742_108)))
(assert (= temp742_110 #x0000000000000000))
(assert (= temp742_111 #x0000000000000000))
(assert (= temp742_112 temp742_111))
(assert (= temp742_113 (select ARGNAME_stride_NAMEEND_VAL temp742_112)))
(assert (= temp742_114 #x0000000000000000))
(assert (= temp742_115 #x0000000000000001))
(assert (= temp742_116 temp742_115))
(assert (= temp742_117 (select ARGNAME_stride_NAMEEND_VAL temp742_116)))
(assert (= temp742_118 #x0000000000000000))
(assert (= temp742_119 #x0000000000000002))
(assert (= temp742_120 temp742_119))
(assert (= temp742_121 (select ARGNAME_stride_NAMEEND_VAL temp742_120)))
(assert (= temp742_122 #x0000000000000000))
(assert (= temp742_123 #x0000000000000003))
(assert (= temp742_124 temp742_123))
(assert (= temp742_125 (select ARGNAME_stride_NAMEEND_VAL temp742_124)))
(assert (= temp742_126 #x0000000000000000))
(assert (= temp742_127 #x0000000000000004))
(assert (= temp742_128 temp742_127))
(assert (= temp742_129 (select ARGNAME_stride_NAMEEND_VAL temp742_128)))
(assert (= temp742_130 #x0000000000000000))
(assert (= temp742_131 #x0000000000000005))
(assert (= temp742_132 temp742_131))
(assert (= temp742_133 (select ARGNAME_stride_NAMEEND_VAL temp742_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp742_113 temp742_110)
             (bvsle temp742_117 temp742_114)
             (bvsle temp742_121 temp742_118)
             (bvsle temp742_125 temp742_122)
             (bvsle temp742_129 temp742_126)
             (bvsle temp742_133 temp742_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_134 #x0000000000000000))
(assert (= var1322807 temp742_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_135 #x0000000000000001))
(assert (= var1322819 temp742_135))
(assert (= temp742_136 #x0000000000000000))
(assert (= var1310898 temp742_136))
(assert (= temp742_137 #x0000000000000000))
(assert (= temp742_138 temp742_137))
(assert (= temp742_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_138)))
(assert (= temp742_140 #x0000000000000001))
(assert (= temp742_141 temp742_140))
(assert (= temp742_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_141)))
(assert (= temp742_143 #x0000000000000002))
(assert (= temp742_144 temp742_143))
(assert (= temp742_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_144)))
(assert (= temp742_146 #x0000000000000003))
(assert (= temp742_147 temp742_146))
(assert (= temp742_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_147)))
(assert (= temp742_149 #x0000000000000004))
(assert (= temp742_150 temp742_149))
(assert (= temp742_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_150)))
(assert (= temp742_152 #x0000000000000005))
(assert (= temp742_153 temp742_152))
(assert (= temp742_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_153)))
(assert (= temp742_156 var1310898))
(assert (= temp742_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_156)))
(assert (= temp742_155 temp742_157))
(assert (= var1322852
   (ite (bvslt temp742_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_158 #x0000000000000000))
(assert (= var1322852 temp742_158))
(assert (= temp742_159 #x0000000000000000))
(assert (= var1310898 temp742_159))
(assert (= temp742_161 var1310898))
(assert (= temp742_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_161)))
(assert (= temp742_160 temp742_162))
(assert (= var1322874 (bvsmod temp742_160 ARGNAME_groups_NAMEEND)))
(assert (= temp742_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp742_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp742_164 #x0000000000000001))
(assert (= var1322875 temp742_164))
(assert (= temp742_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp742_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_166 #x0000000000000001))
(assert (= var1322895 temp742_166))
(assert (= temp742_167 #x0000000000000001))
(assert (= var1311786 temp742_167))
(assert (= temp742_168 #x0000000000000000))
(assert (= temp742_169 temp742_168))
(assert (= temp742_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp742_169)))
(assert (= temp742_171 #x0000000000000001))
(assert (= temp742_172 temp742_171))
(assert (= temp742_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp742_172)))
(assert (= temp742_174 #x0000000000000002))
(assert (= temp742_175 temp742_174))
(assert (= temp742_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp742_175)))
(assert (= temp742_177 #x0000000000000003))
(assert (= temp742_178 temp742_177))
(assert (= temp742_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp742_178)))
(assert (= temp742_180 #x0000000000000004))
(assert (= temp742_181 temp742_180))
(assert (= temp742_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp742_181)))
(assert (= temp742_183 #x0000000000000005))
(assert (= temp742_184 temp742_183))
(assert (= temp742_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp742_184)))
(assert (= temp742_186 #x0000000000000000))
(assert (= temp742_187
   (ite (bvslt var1311786 temp742_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp742_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp742_187)))
(assert (= var1322903 temp742_188))
(assert (bvslt (ite (bvslt var1311786 temp742_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp742_189 #x0000000000000001))
(assert (= var1311786 temp742_189))
(assert (= temp742_191 var1311786))
(assert (= temp742_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_191)))
(assert (= temp742_190 temp742_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp742_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp742_193 #x0000000000000001))
(assert (= var1322908 temp742_193))
(assert (= temp742_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp742_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_195 #x0000000000000001))
(assert (= var1322975 temp742_195))
(assert (= temp742_196 #x0000000000000000))
(assert (= var1310898 temp742_196))
(assert (= temp742_197 #x0000000000000000))
(assert (= temp742_198 temp742_197))
(assert (= temp742_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp742_198)))
(assert (= temp742_200 #x0000000000000001))
(assert (= temp742_201 temp742_200))
(assert (= temp742_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp742_201)))
(assert (= temp742_203 #x0000000000000002))
(assert (= temp742_204 temp742_203))
(assert (= temp742_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp742_204)))
(assert (= temp742_206 #x0000000000000003))
(assert (= temp742_207 temp742_206))
(assert (= temp742_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp742_207)))
(assert (= temp742_209 #x0000000000000004))
(assert (= temp742_210 temp742_209))
(assert (= temp742_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp742_210)))
(assert (= temp742_212 #x0000000000000005))
(assert (= temp742_213 temp742_212))
(assert (= temp742_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp742_213)))
(assert (= temp742_215 #x0000000000000000))
(assert (= temp742_216
   (ite (bvslt var1310898 temp742_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp742_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp742_216)))
(assert (= var1322977 temp742_217))
(assert (bvslt (ite (bvslt var1310898 temp742_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp742_218 #x0000000000000000))
(assert (= var1310898 temp742_218))
(assert (= temp742_220 var1310898))
(assert (= temp742_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_220)))
(assert (= temp742_219 temp742_221))
(assert (= var1322980
   (ite (= var1322977 temp742_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp742_222 #x0000000000000001))
(assert (= var1322980 temp742_222))
(assert (= temp742_223 #x0000000000000002))
(assert (= var1848169 temp742_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp742_225 #x0000000000000001))
(assert (= var1323065 temp742_225))
(assert (= temp742_226 #x0000000000000001))
(assert (= var3486735 temp742_226))
(assert (= temp742_227 #x0000000000000001))
(assert (= var3814415 temp742_227))
(assert (= temp742_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp742_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_229 #x0000000000000001))
(assert (= var79986 temp742_229))
(assert (= temp742_230 #x0000000000000001))
(assert (= var80116 temp742_230))
(assert (= var4796905 var80116))
(assert (= temp742_231 #x0000000000000000))
(assert (= var4784306 temp742_231))
(assert (= temp742_232 #x0000000000000000))
(assert (= temp742_233
   (ite (bvslt var4784306 temp742_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp742_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp742_233)))
(assert (= var4796924 temp742_234))
(assert (bvslt (ite (bvslt var4784306 temp742_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp742_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp742_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp742_236 #x0000000000000001))
(assert (= var4796925 temp742_236))
(assert (= temp742_237 #x0000000000000000))
(assert (= var4996927 temp742_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp742_238 #x0000000000000002))
(assert (= var5125763 temp742_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_239 #x0000000000000000))
(assert (= var5191324 temp742_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp742_241 #xffffffffffffffff))
(assert (= temp742_240 temp742_241))
(assert (= temp742_242 #x0000000000000001))
(assert (= var66602 temp742_242))
(assert (= temp742_243 #x0000000000000000))
(assert (= temp742_244
   (ite (bvslt var66602 temp742_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp742_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp742_244)))
(assert (= var80523 temp742_245))
(assert (bvslt (ite (bvslt var66602 temp742_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp742_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp742_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp742_247 #x0000000000000001))
(assert (= var80524 temp742_247))
(assert (= temp742_249 #xffffffffffffffff))
(assert (= temp742_248 temp742_249))
(assert (= temp742_250 #x0000000000000001))
(assert (= var79986 temp742_250))
(model-add temp742_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp742_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp742_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






