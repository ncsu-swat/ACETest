(declare-fun temp1089_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1089_2 () (_ BitVec 64))
(declare-fun temp1089_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1089_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1089_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1089_6 () (_ BitVec 64))
(declare-fun temp1089_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1089_8 () (_ BitVec 64))
(declare-fun temp1089_9 () (_ BitVec 64))
(declare-fun temp1089_10 () (_ BitVec 64))
(declare-fun temp1089_11 () (_ BitVec 64))
(declare-fun temp1089_12 () (_ BitVec 64))
(declare-fun temp1089_13 () (_ BitVec 64))
(declare-fun temp1089_14 () (_ BitVec 64))
(declare-fun temp1089_15 () (_ BitVec 64))
(declare-fun temp1089_16 () (_ BitVec 64))
(declare-fun temp1089_17 () (_ BitVec 64))
(declare-fun temp1089_18 () (_ BitVec 64))
(declare-fun temp1089_19 () (_ BitVec 64))
(declare-fun temp1089_20 () (_ BitVec 64))
(declare-fun temp1089_21 () (_ BitVec 64))
(declare-fun temp1089_22 () (_ BitVec 64))
(declare-fun temp1089_23 () (_ BitVec 64))
(declare-fun temp1089_24 () (_ BitVec 64))
(declare-fun temp1089_25 () (_ BitVec 64))
(declare-fun temp1089_26 () (_ BitVec 64))
(declare-fun temp1089_27 () (_ BitVec 64))
(declare-fun temp1089_28 () (_ BitVec 64))
(declare-fun temp1089_29 () (_ BitVec 64))
(declare-fun temp1089_30 () (_ BitVec 64))
(declare-fun temp1089_31 () (_ BitVec 64))
(declare-fun temp1089_32 () (_ BitVec 64))
(declare-fun temp1089_33 () (_ BitVec 64))
(declare-fun temp1089_34 () (_ BitVec 64))
(declare-fun temp1089_35 () (_ BitVec 64))
(declare-fun temp1089_36 () (_ BitVec 64))
(declare-fun temp1089_37 () (_ BitVec 64))
(declare-fun temp1089_38 () (_ BitVec 64))
(declare-fun temp1089_39 () (_ BitVec 64))
(declare-fun temp1089_40 () (_ BitVec 64))
(declare-fun temp1089_41 () (_ BitVec 64))
(declare-fun temp1089_42 () (_ BitVec 64))
(declare-fun temp1089_43 () (_ BitVec 64))
(declare-fun temp1089_44 () (_ BitVec 64))
(declare-fun temp1089_45 () (_ BitVec 64))
(declare-fun temp1089_46 () (_ BitVec 64))
(declare-fun temp1089_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1089_48 () (_ BitVec 64))
(declare-fun temp1089_49 () (_ BitVec 64))
(declare-fun temp1089_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1089_51 () (_ BitVec 64))
(declare-fun temp1089_52 () (_ BitVec 64))
(declare-fun temp1089_53 () (_ BitVec 64))
(declare-fun temp1089_54 () (_ BitVec 64))
(declare-fun temp1089_55 () (_ BitVec 64))
(declare-fun temp1089_56 () (_ BitVec 64))
(declare-fun temp1089_57 () (_ BitVec 64))
(declare-fun temp1089_58 () (_ BitVec 64))
(declare-fun temp1089_59 () (_ BitVec 64))
(declare-fun temp1089_60 () (_ BitVec 64))
(declare-fun temp1089_61 () (_ BitVec 64))
(declare-fun temp1089_62 () (_ BitVec 64))
(declare-fun temp1089_63 () (_ BitVec 64))
(declare-fun temp1089_64 () (_ BitVec 64))
(declare-fun temp1089_65 () (_ BitVec 64))
(declare-fun temp1089_66 () (_ BitVec 64))
(declare-fun temp1089_67 () (_ BitVec 64))
(declare-fun temp1089_68 () (_ BitVec 64))
(declare-fun temp1089_69 () (_ BitVec 64))
(declare-fun temp1089_70 () (_ BitVec 64))
(declare-fun temp1089_71 () (_ BitVec 64))
(declare-fun temp1089_72 () (_ BitVec 64))
(declare-fun temp1089_73 () (_ BitVec 64))
(declare-fun temp1089_74 () (_ BitVec 64))
(declare-fun temp1089_75 () (_ BitVec 64))
(declare-fun temp1089_76 () (_ BitVec 64))
(declare-fun temp1089_77 () (_ BitVec 64))
(declare-fun temp1089_78 () (_ BitVec 64))
(declare-fun temp1089_79 () (_ BitVec 64))
(declare-fun temp1089_80 () (_ BitVec 64))
(declare-fun temp1089_81 () (_ BitVec 64))
(declare-fun temp1089_82 () (_ BitVec 64))
(declare-fun temp1089_83 () (_ BitVec 64))
(declare-fun temp1089_84 () (_ BitVec 64))
(declare-fun temp1089_85 () (_ BitVec 64))
(declare-fun temp1089_86 () (_ BitVec 64))
(declare-fun temp1089_87 () (_ BitVec 64))
(declare-fun temp1089_88 () (_ BitVec 64))
(declare-fun temp1089_89 () (_ BitVec 64))
(declare-fun temp1089_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1089_91 () (_ BitVec 64))
(declare-fun temp1089_92 () (_ BitVec 64))
(declare-fun temp1089_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1089_94 () (_ BitVec 64))
(declare-fun temp1089_95 () (_ BitVec 64))
(declare-fun temp1089_96 () (_ BitVec 64))
(declare-fun temp1089_97 () (_ BitVec 64))
(declare-fun temp1089_98 () (_ BitVec 64))
(declare-fun temp1089_99 () (_ BitVec 64))
(declare-fun temp1089_100 () (_ BitVec 64))
(declare-fun temp1089_101 () (_ BitVec 64))
(declare-fun temp1089_102 () (_ BitVec 64))
(declare-fun temp1089_103 () (_ BitVec 64))
(declare-fun temp1089_104 () (_ BitVec 64))
(declare-fun temp1089_105 () (_ BitVec 64))
(declare-fun temp1089_106 () (_ BitVec 64))
(declare-fun temp1089_107 () (_ BitVec 64))
(declare-fun temp1089_108 () (_ BitVec 64))
(declare-fun temp1089_109 () (_ BitVec 64))
(declare-fun temp1089_110 () (_ BitVec 64))
(declare-fun temp1089_111 () (_ BitVec 64))
(declare-fun temp1089_112 () (_ BitVec 64))
(declare-fun temp1089_113 () (_ BitVec 64))
(declare-fun temp1089_114 () (_ BitVec 64))
(declare-fun temp1089_115 () (_ BitVec 64))
(declare-fun temp1089_116 () (_ BitVec 64))
(declare-fun temp1089_117 () (_ BitVec 64))
(declare-fun temp1089_118 () (_ BitVec 64))
(declare-fun temp1089_119 () (_ BitVec 64))
(declare-fun temp1089_120 () (_ BitVec 64))
(declare-fun temp1089_121 () (_ BitVec 64))
(declare-fun temp1089_122 () (_ BitVec 64))
(declare-fun temp1089_123 () (_ BitVec 64))
(declare-fun temp1089_124 () (_ BitVec 64))
(declare-fun temp1089_125 () (_ BitVec 64))
(declare-fun temp1089_126 () (_ BitVec 64))
(declare-fun temp1089_127 () (_ BitVec 64))
(declare-fun temp1089_128 () (_ BitVec 64))
(declare-fun temp1089_129 () (_ BitVec 64))
(declare-fun temp1089_130 () (_ BitVec 64))
(declare-fun temp1089_131 () (_ BitVec 64))
(declare-fun temp1089_132 () (_ BitVec 64))
(declare-fun temp1089_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1089_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1089_135 () (_ BitVec 64))
(declare-fun temp1089_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1089_137 () (_ BitVec 64))
(declare-fun temp1089_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1089_139 () (_ BitVec 64))
(declare-fun temp1089_140 () (_ BitVec 64))
(declare-fun temp1089_141 () (_ BitVec 64))
(declare-fun temp1089_142 () (_ BitVec 64))
(declare-fun temp1089_143 () (_ BitVec 64))
(declare-fun temp1089_144 () (_ BitVec 64))
(declare-fun temp1089_145 () (_ BitVec 64))
(declare-fun temp1089_146 () (_ BitVec 64))
(declare-fun temp1089_147 () (_ BitVec 64))
(declare-fun temp1089_148 () (_ BitVec 64))
(declare-fun temp1089_149 () (_ BitVec 64))
(declare-fun temp1089_150 () (_ BitVec 64))
(declare-fun temp1089_151 () (_ BitVec 64))
(declare-fun temp1089_152 () (_ BitVec 64))
(declare-fun temp1089_153 () (_ BitVec 64))
(declare-fun temp1089_154 () (_ BitVec 64))
(declare-fun temp1089_156 () (_ BitVec 64))
(declare-fun temp1089_157 () (_ BitVec 64))
(declare-fun temp1089_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1089_158 () (_ BitVec 64))
(declare-fun temp1089_159 () (_ BitVec 64))
(declare-fun temp1089_161 () (_ BitVec 64))
(declare-fun temp1089_162 () (_ BitVec 64))
(declare-fun temp1089_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1089_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1089_164 () (_ BitVec 64))
(declare-fun temp1089_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1089_166 () (_ BitVec 64))
(declare-fun temp1089_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1089_168 () (_ BitVec 64))
(declare-fun temp1089_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1089_170 () (_ BitVec 64))
(declare-fun temp1089_171 () (_ BitVec 64))
(declare-fun temp1089_172 () (_ BitVec 64))
(declare-fun temp1089_173 () (_ BitVec 64))
(declare-fun temp1089_174 () (_ BitVec 64))
(declare-fun temp1089_175 () (_ BitVec 64))
(declare-fun temp1089_176 () (_ BitVec 64))
(declare-fun temp1089_177 () (_ BitVec 64))
(declare-fun temp1089_178 () (_ BitVec 64))
(declare-fun temp1089_179 () (_ BitVec 64))
(declare-fun temp1089_180 () (_ BitVec 64))
(declare-fun temp1089_181 () (_ BitVec 64))
(declare-fun temp1089_182 () (_ BitVec 64))
(declare-fun temp1089_183 () (_ BitVec 64))
(declare-fun temp1089_184 () (_ BitVec 64))
(declare-fun temp1089_185 () (_ BitVec 64))
(declare-fun temp1089_186 () (_ BitVec 64))
(declare-fun temp1089_187 () (_ BitVec 64))
(declare-fun temp1089_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1089_189 () (_ BitVec 64))
(declare-fun temp1089_191 () (_ BitVec 64))
(declare-fun temp1089_192 () (_ BitVec 64))
(declare-fun temp1089_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1089_193 () (_ BitVec 64))
(declare-fun temp1089_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1089_195 () (_ BitVec 64))
(declare-fun temp1089_196 () (_ BitVec 64))
(declare-fun temp1089_197 () (_ BitVec 64))
(declare-fun temp1089_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1089_199 () (_ BitVec 64))
(declare-fun temp1089_200 () (_ BitVec 64))
(declare-fun temp1089_201 () (_ BitVec 64))
(declare-fun temp1089_202 () (_ BitVec 64))
(declare-fun temp1089_203 () (_ BitVec 64))
(declare-fun temp1089_204 () (_ BitVec 64))
(declare-fun temp1089_205 () (_ BitVec 64))
(declare-fun temp1089_206 () (_ BitVec 64))
(declare-fun temp1089_207 () (_ BitVec 64))
(declare-fun temp1089_208 () (_ BitVec 64))
(declare-fun temp1089_209 () (_ BitVec 64))
(declare-fun temp1089_210 () (_ BitVec 64))
(declare-fun temp1089_211 () (_ BitVec 64))
(declare-fun temp1089_212 () (_ BitVec 64))
(declare-fun temp1089_213 () (_ BitVec 64))
(declare-fun temp1089_214 () (_ BitVec 64))
(declare-fun temp1089_215 () (_ BitVec 64))
(declare-fun temp1089_216 () (_ BitVec 64))
(declare-fun temp1089_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1089_218 () (_ BitVec 64))
(declare-fun temp1089_220 () (_ BitVec 64))
(declare-fun temp1089_221 () (_ BitVec 64))
(declare-fun temp1089_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1089_222 () (_ BitVec 64))
(declare-fun temp1089_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1089_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1089_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1089_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1089_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1089_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1089_229 () (_ BitVec 64))
(declare-fun temp1089_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1089_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1089_232 () (_ BitVec 64))
(declare-fun temp1089_233 () (_ BitVec 64))
(declare-fun temp1089_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1089_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1089_236 () (_ BitVec 64))
(declare-fun temp1089_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1089_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1089_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1089_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1089_241 () (_ BitVec 64))
(declare-fun temp1089_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp1089_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp1089_244 () (_ BitVec 64))
(assert (= temp1089_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1089_1)))
(assert (= temp1089_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1089_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_3 #x0000000000000000))
(assert (= var79869 temp1089_3))
(assert (= temp1089_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1089_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_5 #x0000000000000000))
(assert (= var79914 temp1089_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1089_6 #x0000000000000000))
(assert (= temp1089_7 temp1089_6))
(assert (= temp1089_8 (select ARGNAME_padding_NAMEEND_VAL temp1089_7)))
(assert (= temp1089_9 #x0000000000000001))
(assert (= temp1089_10 temp1089_9))
(assert (= temp1089_11 (select ARGNAME_padding_NAMEEND_VAL temp1089_10)))
(assert (= temp1089_12 #x0000000000000002))
(assert (= temp1089_13 temp1089_12))
(assert (= temp1089_14 (select ARGNAME_padding_NAMEEND_VAL temp1089_13)))
(assert (= temp1089_15 #x0000000000000003))
(assert (= temp1089_16 temp1089_15))
(assert (= temp1089_17 (select ARGNAME_padding_NAMEEND_VAL temp1089_16)))
(assert (= temp1089_18 #x0000000000000004))
(assert (= temp1089_19 temp1089_18))
(assert (= temp1089_20 (select ARGNAME_padding_NAMEEND_VAL temp1089_19)))
(assert (= temp1089_21 #x0000000000000005))
(assert (= temp1089_22 temp1089_21))
(assert (= temp1089_23 (select ARGNAME_padding_NAMEEND_VAL temp1089_22)))
(assert (= temp1089_24 #x0000000000000000))
(assert (= temp1089_25 #x0000000000000000))
(assert (= temp1089_26 temp1089_25))
(assert (= temp1089_27 (select ARGNAME_padding_NAMEEND_VAL temp1089_26)))
(assert (= temp1089_28 #x0000000000000000))
(assert (= temp1089_29 #x0000000000000001))
(assert (= temp1089_30 temp1089_29))
(assert (= temp1089_31 (select ARGNAME_padding_NAMEEND_VAL temp1089_30)))
(assert (= temp1089_32 #x0000000000000000))
(assert (= temp1089_33 #x0000000000000002))
(assert (= temp1089_34 temp1089_33))
(assert (= temp1089_35 (select ARGNAME_padding_NAMEEND_VAL temp1089_34)))
(assert (= temp1089_36 #x0000000000000000))
(assert (= temp1089_37 #x0000000000000003))
(assert (= temp1089_38 temp1089_37))
(assert (= temp1089_39 (select ARGNAME_padding_NAMEEND_VAL temp1089_38)))
(assert (= temp1089_40 #x0000000000000000))
(assert (= temp1089_41 #x0000000000000004))
(assert (= temp1089_42 temp1089_41))
(assert (= temp1089_43 (select ARGNAME_padding_NAMEEND_VAL temp1089_42)))
(assert (= temp1089_44 #x0000000000000000))
(assert (= temp1089_45 #x0000000000000005))
(assert (= temp1089_46 temp1089_45))
(assert (= temp1089_47 (select ARGNAME_padding_NAMEEND_VAL temp1089_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1089_27 temp1089_24)
             (bvslt temp1089_31 temp1089_28)
             (bvslt temp1089_35 temp1089_32)
             (bvslt temp1089_39 temp1089_36)
             (bvslt temp1089_43 temp1089_40)
             (bvslt temp1089_47 temp1089_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_48 #x0000000000000000))
(assert (= var1322786 temp1089_48))
(assert (= temp1089_49 #x0000000000000000))
(assert (= temp1089_50 temp1089_49))
(assert (= temp1089_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_50)))
(assert (= temp1089_52 #x0000000000000001))
(assert (= temp1089_53 temp1089_52))
(assert (= temp1089_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_53)))
(assert (= temp1089_55 #x0000000000000002))
(assert (= temp1089_56 temp1089_55))
(assert (= temp1089_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_56)))
(assert (= temp1089_58 #x0000000000000003))
(assert (= temp1089_59 temp1089_58))
(assert (= temp1089_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_59)))
(assert (= temp1089_61 #x0000000000000004))
(assert (= temp1089_62 temp1089_61))
(assert (= temp1089_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_62)))
(assert (= temp1089_64 #x0000000000000005))
(assert (= temp1089_65 temp1089_64))
(assert (= temp1089_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_65)))
(assert (= temp1089_67 #x0000000000000000))
(assert (= temp1089_68 #x0000000000000000))
(assert (= temp1089_69 temp1089_68))
(assert (= temp1089_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_69)))
(assert (= temp1089_71 #x0000000000000000))
(assert (= temp1089_72 #x0000000000000001))
(assert (= temp1089_73 temp1089_72))
(assert (= temp1089_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_73)))
(assert (= temp1089_75 #x0000000000000000))
(assert (= temp1089_76 #x0000000000000002))
(assert (= temp1089_77 temp1089_76))
(assert (= temp1089_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_77)))
(assert (= temp1089_79 #x0000000000000000))
(assert (= temp1089_80 #x0000000000000003))
(assert (= temp1089_81 temp1089_80))
(assert (= temp1089_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_81)))
(assert (= temp1089_83 #x0000000000000000))
(assert (= temp1089_84 #x0000000000000004))
(assert (= temp1089_85 temp1089_84))
(assert (= temp1089_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_85)))
(assert (= temp1089_87 #x0000000000000000))
(assert (= temp1089_88 #x0000000000000005))
(assert (= temp1089_89 temp1089_88))
(assert (= temp1089_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1089_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1089_70 temp1089_67)
             (bvslt temp1089_74 temp1089_71)
             (bvslt temp1089_78 temp1089_75)
             (bvslt temp1089_82 temp1089_79)
             (bvslt temp1089_86 temp1089_83)
             (bvslt temp1089_90 temp1089_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_91 #x0000000000000000))
(assert (= var1322797 temp1089_91))
(assert (= temp1089_92 #x0000000000000000))
(assert (= temp1089_93 temp1089_92))
(assert (= temp1089_94 (select ARGNAME_stride_NAMEEND_VAL temp1089_93)))
(assert (= temp1089_95 #x0000000000000001))
(assert (= temp1089_96 temp1089_95))
(assert (= temp1089_97 (select ARGNAME_stride_NAMEEND_VAL temp1089_96)))
(assert (= temp1089_98 #x0000000000000002))
(assert (= temp1089_99 temp1089_98))
(assert (= temp1089_100 (select ARGNAME_stride_NAMEEND_VAL temp1089_99)))
(assert (= temp1089_101 #x0000000000000003))
(assert (= temp1089_102 temp1089_101))
(assert (= temp1089_103 (select ARGNAME_stride_NAMEEND_VAL temp1089_102)))
(assert (= temp1089_104 #x0000000000000004))
(assert (= temp1089_105 temp1089_104))
(assert (= temp1089_106 (select ARGNAME_stride_NAMEEND_VAL temp1089_105)))
(assert (= temp1089_107 #x0000000000000005))
(assert (= temp1089_108 temp1089_107))
(assert (= temp1089_109 (select ARGNAME_stride_NAMEEND_VAL temp1089_108)))
(assert (= temp1089_110 #x0000000000000000))
(assert (= temp1089_111 #x0000000000000000))
(assert (= temp1089_112 temp1089_111))
(assert (= temp1089_113 (select ARGNAME_stride_NAMEEND_VAL temp1089_112)))
(assert (= temp1089_114 #x0000000000000000))
(assert (= temp1089_115 #x0000000000000001))
(assert (= temp1089_116 temp1089_115))
(assert (= temp1089_117 (select ARGNAME_stride_NAMEEND_VAL temp1089_116)))
(assert (= temp1089_118 #x0000000000000000))
(assert (= temp1089_119 #x0000000000000002))
(assert (= temp1089_120 temp1089_119))
(assert (= temp1089_121 (select ARGNAME_stride_NAMEEND_VAL temp1089_120)))
(assert (= temp1089_122 #x0000000000000000))
(assert (= temp1089_123 #x0000000000000003))
(assert (= temp1089_124 temp1089_123))
(assert (= temp1089_125 (select ARGNAME_stride_NAMEEND_VAL temp1089_124)))
(assert (= temp1089_126 #x0000000000000000))
(assert (= temp1089_127 #x0000000000000004))
(assert (= temp1089_128 temp1089_127))
(assert (= temp1089_129 (select ARGNAME_stride_NAMEEND_VAL temp1089_128)))
(assert (= temp1089_130 #x0000000000000000))
(assert (= temp1089_131 #x0000000000000005))
(assert (= temp1089_132 temp1089_131))
(assert (= temp1089_133 (select ARGNAME_stride_NAMEEND_VAL temp1089_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1089_113 temp1089_110)
             (bvsle temp1089_117 temp1089_114)
             (bvsle temp1089_121 temp1089_118)
             (bvsle temp1089_125 temp1089_122)
             (bvsle temp1089_129 temp1089_126)
             (bvsle temp1089_133 temp1089_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_134 #x0000000000000000))
(assert (= var1322807 temp1089_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_135 #x0000000000000001))
(assert (= var1322819 temp1089_135))
(assert (= temp1089_136 #x0000000000000000))
(assert (= var1310898 temp1089_136))
(assert (= temp1089_137 #x0000000000000000))
(assert (= temp1089_138 temp1089_137))
(assert (= temp1089_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_138)))
(assert (= temp1089_140 #x0000000000000001))
(assert (= temp1089_141 temp1089_140))
(assert (= temp1089_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_141)))
(assert (= temp1089_143 #x0000000000000002))
(assert (= temp1089_144 temp1089_143))
(assert (= temp1089_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_144)))
(assert (= temp1089_146 #x0000000000000003))
(assert (= temp1089_147 temp1089_146))
(assert (= temp1089_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_147)))
(assert (= temp1089_149 #x0000000000000004))
(assert (= temp1089_150 temp1089_149))
(assert (= temp1089_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_150)))
(assert (= temp1089_152 #x0000000000000005))
(assert (= temp1089_153 temp1089_152))
(assert (= temp1089_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_153)))
(assert (= temp1089_156 var1310898))
(assert (= temp1089_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_156)))
(assert (= temp1089_155 temp1089_157))
(assert (= var1322852
   (ite (bvslt temp1089_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_158 #x0000000000000000))
(assert (= var1322852 temp1089_158))
(assert (= temp1089_159 #x0000000000000000))
(assert (= var1310898 temp1089_159))
(assert (= temp1089_161 var1310898))
(assert (= temp1089_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_161)))
(assert (= temp1089_160 temp1089_162))
(assert (= var1322874 (bvsmod temp1089_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1089_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1089_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1089_164 #x0000000000000001))
(assert (= var1322875 temp1089_164))
(assert (= temp1089_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1089_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_166 #x0000000000000001))
(assert (= var1322895 temp1089_166))
(assert (= temp1089_167 #x0000000000000001))
(assert (= var1311786 temp1089_167))
(assert (= temp1089_168 #x0000000000000000))
(assert (= temp1089_169 temp1089_168))
(assert (= temp1089_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1089_169)))
(assert (= temp1089_171 #x0000000000000001))
(assert (= temp1089_172 temp1089_171))
(assert (= temp1089_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1089_172)))
(assert (= temp1089_174 #x0000000000000002))
(assert (= temp1089_175 temp1089_174))
(assert (= temp1089_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1089_175)))
(assert (= temp1089_177 #x0000000000000003))
(assert (= temp1089_178 temp1089_177))
(assert (= temp1089_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1089_178)))
(assert (= temp1089_180 #x0000000000000004))
(assert (= temp1089_181 temp1089_180))
(assert (= temp1089_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1089_181)))
(assert (= temp1089_183 #x0000000000000005))
(assert (= temp1089_184 temp1089_183))
(assert (= temp1089_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1089_184)))
(assert (= temp1089_186 #x0000000000000000))
(assert (= temp1089_187
   (ite (bvslt var1311786 temp1089_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1089_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1089_187)))
(assert (= var1322903 temp1089_188))
(assert (bvslt (ite (bvslt var1311786 temp1089_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1089_189 #x0000000000000001))
(assert (= var1311786 temp1089_189))
(assert (= temp1089_191 var1311786))
(assert (= temp1089_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_191)))
(assert (= temp1089_190 temp1089_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1089_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1089_193 #x0000000000000001))
(assert (= var1322908 temp1089_193))
(assert (= temp1089_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1089_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_195 #x0000000000000001))
(assert (= var1322975 temp1089_195))
(assert (= temp1089_196 #x0000000000000000))
(assert (= var1310898 temp1089_196))
(assert (= temp1089_197 #x0000000000000000))
(assert (= temp1089_198 temp1089_197))
(assert (= temp1089_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1089_198)))
(assert (= temp1089_200 #x0000000000000001))
(assert (= temp1089_201 temp1089_200))
(assert (= temp1089_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1089_201)))
(assert (= temp1089_203 #x0000000000000002))
(assert (= temp1089_204 temp1089_203))
(assert (= temp1089_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1089_204)))
(assert (= temp1089_206 #x0000000000000003))
(assert (= temp1089_207 temp1089_206))
(assert (= temp1089_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1089_207)))
(assert (= temp1089_209 #x0000000000000004))
(assert (= temp1089_210 temp1089_209))
(assert (= temp1089_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1089_210)))
(assert (= temp1089_212 #x0000000000000005))
(assert (= temp1089_213 temp1089_212))
(assert (= temp1089_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1089_213)))
(assert (= temp1089_215 #x0000000000000000))
(assert (= temp1089_216
   (ite (bvslt var1310898 temp1089_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1089_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1089_216)))
(assert (= var1322977 temp1089_217))
(assert (bvslt (ite (bvslt var1310898 temp1089_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1089_218 #x0000000000000000))
(assert (= var1310898 temp1089_218))
(assert (= temp1089_220 var1310898))
(assert (= temp1089_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1089_220)))
(assert (= temp1089_219 temp1089_221))
(assert (= var1322980
   (ite (= var1322977 temp1089_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1089_222 #x0000000000000001))
(assert (= var1322980 temp1089_222))
(assert (= temp1089_223 #x0000000000000002))
(assert (= var1848169 temp1089_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1089_225 #x0000000000000001))
(assert (= var1323065 temp1089_225))
(assert (= temp1089_226 #x0000000000000001))
(assert (= var3486735 temp1089_226))
(assert (= temp1089_227 #x0000000000000001))
(assert (= var3814415 temp1089_227))
(assert (= temp1089_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1089_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_229 #x0000000000000001))
(assert (= var79986 temp1089_229))
(assert (= temp1089_230 #x0000000000000001))
(assert (= var80116 temp1089_230))
(assert (= var4796905 var80116))
(assert (= temp1089_231 #x0000000000000000))
(assert (= var4784306 temp1089_231))
(assert (= temp1089_232 #x0000000000000000))
(assert (= temp1089_233
   (ite (bvslt var4784306 temp1089_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1089_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1089_233)))
(assert (= var4796924 temp1089_234))
(assert (bvslt (ite (bvslt var4784306 temp1089_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1089_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1089_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1089_236 #x0000000000000001))
(assert (= var4796925 temp1089_236))
(assert (= temp1089_237 #x0000000000000000))
(assert (= var4996927 temp1089_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1089_238 #x0000000000000002))
(assert (= var5125763 temp1089_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_239 #x0000000000000000))
(assert (= var5191324 temp1089_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1089_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1089_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_241 #x0000000000000001))
(assert (= var81342 temp1089_241))
(assert (= temp1089_242 #x0000000000000002))
(assert (= var5977731 temp1089_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1089_243 #x0000000000000000))
(assert (= var6043292 temp1089_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp1089_244 #x0000000000000001))
(assert (= var79986 temp1089_244))
(model-add temp1089_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1089_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1089_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






