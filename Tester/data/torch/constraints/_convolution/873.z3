(declare-fun temp1161_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1161_2 () (_ BitVec 64))
(declare-fun temp1161_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1161_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1161_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1161_6 () (_ BitVec 64))
(declare-fun temp1161_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_8 () (_ BitVec 64))
(declare-fun temp1161_9 () (_ BitVec 64))
(declare-fun temp1161_10 () (_ BitVec 64))
(declare-fun temp1161_11 () (_ BitVec 64))
(declare-fun temp1161_12 () (_ BitVec 64))
(declare-fun temp1161_13 () (_ BitVec 64))
(declare-fun temp1161_14 () (_ BitVec 64))
(declare-fun temp1161_15 () (_ BitVec 64))
(declare-fun temp1161_16 () (_ BitVec 64))
(declare-fun temp1161_17 () (_ BitVec 64))
(declare-fun temp1161_18 () (_ BitVec 64))
(declare-fun temp1161_19 () (_ BitVec 64))
(declare-fun temp1161_20 () (_ BitVec 64))
(declare-fun temp1161_21 () (_ BitVec 64))
(declare-fun temp1161_22 () (_ BitVec 64))
(declare-fun temp1161_23 () (_ BitVec 64))
(declare-fun temp1161_24 () (_ BitVec 64))
(declare-fun temp1161_25 () (_ BitVec 64))
(declare-fun temp1161_26 () (_ BitVec 64))
(declare-fun temp1161_27 () (_ BitVec 64))
(declare-fun temp1161_28 () (_ BitVec 64))
(declare-fun temp1161_29 () (_ BitVec 64))
(declare-fun temp1161_30 () (_ BitVec 64))
(declare-fun temp1161_31 () (_ BitVec 64))
(declare-fun temp1161_32 () (_ BitVec 64))
(declare-fun temp1161_33 () (_ BitVec 64))
(declare-fun temp1161_34 () (_ BitVec 64))
(declare-fun temp1161_35 () (_ BitVec 64))
(declare-fun temp1161_36 () (_ BitVec 64))
(declare-fun temp1161_37 () (_ BitVec 64))
(declare-fun temp1161_38 () (_ BitVec 64))
(declare-fun temp1161_39 () (_ BitVec 64))
(declare-fun temp1161_40 () (_ BitVec 64))
(declare-fun temp1161_41 () (_ BitVec 64))
(declare-fun temp1161_42 () (_ BitVec 64))
(declare-fun temp1161_43 () (_ BitVec 64))
(declare-fun temp1161_44 () (_ BitVec 64))
(declare-fun temp1161_45 () (_ BitVec 64))
(declare-fun temp1161_46 () (_ BitVec 64))
(declare-fun temp1161_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1161_48 () (_ BitVec 64))
(declare-fun temp1161_49 () (_ BitVec 64))
(declare-fun temp1161_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_51 () (_ BitVec 64))
(declare-fun temp1161_52 () (_ BitVec 64))
(declare-fun temp1161_53 () (_ BitVec 64))
(declare-fun temp1161_54 () (_ BitVec 64))
(declare-fun temp1161_55 () (_ BitVec 64))
(declare-fun temp1161_56 () (_ BitVec 64))
(declare-fun temp1161_57 () (_ BitVec 64))
(declare-fun temp1161_58 () (_ BitVec 64))
(declare-fun temp1161_59 () (_ BitVec 64))
(declare-fun temp1161_60 () (_ BitVec 64))
(declare-fun temp1161_61 () (_ BitVec 64))
(declare-fun temp1161_62 () (_ BitVec 64))
(declare-fun temp1161_63 () (_ BitVec 64))
(declare-fun temp1161_64 () (_ BitVec 64))
(declare-fun temp1161_65 () (_ BitVec 64))
(declare-fun temp1161_66 () (_ BitVec 64))
(declare-fun temp1161_67 () (_ BitVec 64))
(declare-fun temp1161_68 () (_ BitVec 64))
(declare-fun temp1161_69 () (_ BitVec 64))
(declare-fun temp1161_70 () (_ BitVec 64))
(declare-fun temp1161_71 () (_ BitVec 64))
(declare-fun temp1161_72 () (_ BitVec 64))
(declare-fun temp1161_73 () (_ BitVec 64))
(declare-fun temp1161_74 () (_ BitVec 64))
(declare-fun temp1161_75 () (_ BitVec 64))
(declare-fun temp1161_76 () (_ BitVec 64))
(declare-fun temp1161_77 () (_ BitVec 64))
(declare-fun temp1161_78 () (_ BitVec 64))
(declare-fun temp1161_79 () (_ BitVec 64))
(declare-fun temp1161_80 () (_ BitVec 64))
(declare-fun temp1161_81 () (_ BitVec 64))
(declare-fun temp1161_82 () (_ BitVec 64))
(declare-fun temp1161_83 () (_ BitVec 64))
(declare-fun temp1161_84 () (_ BitVec 64))
(declare-fun temp1161_85 () (_ BitVec 64))
(declare-fun temp1161_86 () (_ BitVec 64))
(declare-fun temp1161_87 () (_ BitVec 64))
(declare-fun temp1161_88 () (_ BitVec 64))
(declare-fun temp1161_89 () (_ BitVec 64))
(declare-fun temp1161_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1161_91 () (_ BitVec 64))
(declare-fun temp1161_92 () (_ BitVec 64))
(declare-fun temp1161_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_94 () (_ BitVec 64))
(declare-fun temp1161_95 () (_ BitVec 64))
(declare-fun temp1161_96 () (_ BitVec 64))
(declare-fun temp1161_97 () (_ BitVec 64))
(declare-fun temp1161_98 () (_ BitVec 64))
(declare-fun temp1161_99 () (_ BitVec 64))
(declare-fun temp1161_100 () (_ BitVec 64))
(declare-fun temp1161_101 () (_ BitVec 64))
(declare-fun temp1161_102 () (_ BitVec 64))
(declare-fun temp1161_103 () (_ BitVec 64))
(declare-fun temp1161_104 () (_ BitVec 64))
(declare-fun temp1161_105 () (_ BitVec 64))
(declare-fun temp1161_106 () (_ BitVec 64))
(declare-fun temp1161_107 () (_ BitVec 64))
(declare-fun temp1161_108 () (_ BitVec 64))
(declare-fun temp1161_109 () (_ BitVec 64))
(declare-fun temp1161_110 () (_ BitVec 64))
(declare-fun temp1161_111 () (_ BitVec 64))
(declare-fun temp1161_112 () (_ BitVec 64))
(declare-fun temp1161_113 () (_ BitVec 64))
(declare-fun temp1161_114 () (_ BitVec 64))
(declare-fun temp1161_115 () (_ BitVec 64))
(declare-fun temp1161_116 () (_ BitVec 64))
(declare-fun temp1161_117 () (_ BitVec 64))
(declare-fun temp1161_118 () (_ BitVec 64))
(declare-fun temp1161_119 () (_ BitVec 64))
(declare-fun temp1161_120 () (_ BitVec 64))
(declare-fun temp1161_121 () (_ BitVec 64))
(declare-fun temp1161_122 () (_ BitVec 64))
(declare-fun temp1161_123 () (_ BitVec 64))
(declare-fun temp1161_124 () (_ BitVec 64))
(declare-fun temp1161_125 () (_ BitVec 64))
(declare-fun temp1161_126 () (_ BitVec 64))
(declare-fun temp1161_127 () (_ BitVec 64))
(declare-fun temp1161_128 () (_ BitVec 64))
(declare-fun temp1161_129 () (_ BitVec 64))
(declare-fun temp1161_130 () (_ BitVec 64))
(declare-fun temp1161_131 () (_ BitVec 64))
(declare-fun temp1161_132 () (_ BitVec 64))
(declare-fun temp1161_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1161_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1161_135 () (_ BitVec 64))
(declare-fun temp1161_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1161_137 () (_ BitVec 64))
(declare-fun temp1161_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_139 () (_ BitVec 64))
(declare-fun temp1161_140 () (_ BitVec 64))
(declare-fun temp1161_141 () (_ BitVec 64))
(declare-fun temp1161_142 () (_ BitVec 64))
(declare-fun temp1161_143 () (_ BitVec 64))
(declare-fun temp1161_144 () (_ BitVec 64))
(declare-fun temp1161_145 () (_ BitVec 64))
(declare-fun temp1161_146 () (_ BitVec 64))
(declare-fun temp1161_147 () (_ BitVec 64))
(declare-fun temp1161_148 () (_ BitVec 64))
(declare-fun temp1161_149 () (_ BitVec 64))
(declare-fun temp1161_150 () (_ BitVec 64))
(declare-fun temp1161_151 () (_ BitVec 64))
(declare-fun temp1161_152 () (_ BitVec 64))
(declare-fun temp1161_153 () (_ BitVec 64))
(declare-fun temp1161_154 () (_ BitVec 64))
(declare-fun temp1161_156 () (_ BitVec 64))
(declare-fun temp1161_157 () (_ BitVec 64))
(declare-fun temp1161_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1161_158 () (_ BitVec 64))
(declare-fun temp1161_159 () (_ BitVec 64))
(declare-fun temp1161_161 () (_ BitVec 64))
(declare-fun temp1161_162 () (_ BitVec 64))
(declare-fun temp1161_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1161_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1161_164 () (_ BitVec 64))
(declare-fun temp1161_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1161_166 () (_ BitVec 64))
(declare-fun temp1161_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1161_168 () (_ BitVec 64))
(declare-fun temp1161_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_170 () (_ BitVec 64))
(declare-fun temp1161_171 () (_ BitVec 64))
(declare-fun temp1161_172 () (_ BitVec 64))
(declare-fun temp1161_173 () (_ BitVec 64))
(declare-fun temp1161_174 () (_ BitVec 64))
(declare-fun temp1161_175 () (_ BitVec 64))
(declare-fun temp1161_176 () (_ BitVec 64))
(declare-fun temp1161_177 () (_ BitVec 64))
(declare-fun temp1161_178 () (_ BitVec 64))
(declare-fun temp1161_179 () (_ BitVec 64))
(declare-fun temp1161_180 () (_ BitVec 64))
(declare-fun temp1161_181 () (_ BitVec 64))
(declare-fun temp1161_182 () (_ BitVec 64))
(declare-fun temp1161_183 () (_ BitVec 64))
(declare-fun temp1161_184 () (_ BitVec 64))
(declare-fun temp1161_185 () (_ BitVec 64))
(declare-fun temp1161_186 () (_ BitVec 64))
(declare-fun temp1161_187 () (_ BitVec 64))
(declare-fun temp1161_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1161_189 () (_ BitVec 64))
(declare-fun temp1161_191 () (_ BitVec 64))
(declare-fun temp1161_192 () (_ BitVec 64))
(declare-fun temp1161_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1161_193 () (_ BitVec 64))
(declare-fun temp1161_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1161_195 () (_ BitVec 64))
(declare-fun temp1161_196 () (_ BitVec 64))
(declare-fun temp1161_197 () (_ BitVec 64))
(declare-fun temp1161_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_199 () (_ BitVec 64))
(declare-fun temp1161_200 () (_ BitVec 64))
(declare-fun temp1161_201 () (_ BitVec 64))
(declare-fun temp1161_202 () (_ BitVec 64))
(declare-fun temp1161_203 () (_ BitVec 64))
(declare-fun temp1161_204 () (_ BitVec 64))
(declare-fun temp1161_205 () (_ BitVec 64))
(declare-fun temp1161_206 () (_ BitVec 64))
(declare-fun temp1161_207 () (_ BitVec 64))
(declare-fun temp1161_208 () (_ BitVec 64))
(declare-fun temp1161_209 () (_ BitVec 64))
(declare-fun temp1161_210 () (_ BitVec 64))
(declare-fun temp1161_211 () (_ BitVec 64))
(declare-fun temp1161_212 () (_ BitVec 64))
(declare-fun temp1161_213 () (_ BitVec 64))
(declare-fun temp1161_214 () (_ BitVec 64))
(declare-fun temp1161_215 () (_ BitVec 64))
(declare-fun temp1161_216 () (_ BitVec 64))
(declare-fun temp1161_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1161_218 () (_ BitVec 64))
(declare-fun temp1161_220 () (_ BitVec 64))
(declare-fun temp1161_221 () (_ BitVec 64))
(declare-fun temp1161_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1161_222 () (_ BitVec 64))
(declare-fun temp1161_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1161_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1161_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1161_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1161_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1161_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1161_229 () (_ BitVec 64))
(declare-fun temp1161_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1161_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1161_232 () (_ BitVec 64))
(declare-fun temp1161_233 () (_ BitVec 64))
(declare-fun temp1161_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1161_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1161_236 () (_ BitVec 64))
(declare-fun temp1161_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1161_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1161_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1161_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1161_241 () (_ BitVec 64))
(declare-fun temp1161_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp1161_243 () (_ BitVec 64))
(assert (= temp1161_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1161_1)))
(assert (= temp1161_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1161_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_3 #x0000000000000000))
(assert (= var79869 temp1161_3))
(assert (= temp1161_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1161_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_5 #x0000000000000000))
(assert (= var79914 temp1161_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1161_6 #x0000000000000000))
(assert (= temp1161_7 temp1161_6))
(assert (= temp1161_8 (select ARGNAME_padding_NAMEEND_VAL temp1161_7)))
(assert (= temp1161_9 #x0000000000000001))
(assert (= temp1161_10 temp1161_9))
(assert (= temp1161_11 (select ARGNAME_padding_NAMEEND_VAL temp1161_10)))
(assert (= temp1161_12 #x0000000000000002))
(assert (= temp1161_13 temp1161_12))
(assert (= temp1161_14 (select ARGNAME_padding_NAMEEND_VAL temp1161_13)))
(assert (= temp1161_15 #x0000000000000003))
(assert (= temp1161_16 temp1161_15))
(assert (= temp1161_17 (select ARGNAME_padding_NAMEEND_VAL temp1161_16)))
(assert (= temp1161_18 #x0000000000000004))
(assert (= temp1161_19 temp1161_18))
(assert (= temp1161_20 (select ARGNAME_padding_NAMEEND_VAL temp1161_19)))
(assert (= temp1161_21 #x0000000000000005))
(assert (= temp1161_22 temp1161_21))
(assert (= temp1161_23 (select ARGNAME_padding_NAMEEND_VAL temp1161_22)))
(assert (= temp1161_24 #x0000000000000000))
(assert (= temp1161_25 #x0000000000000000))
(assert (= temp1161_26 temp1161_25))
(assert (= temp1161_27 (select ARGNAME_padding_NAMEEND_VAL temp1161_26)))
(assert (= temp1161_28 #x0000000000000000))
(assert (= temp1161_29 #x0000000000000001))
(assert (= temp1161_30 temp1161_29))
(assert (= temp1161_31 (select ARGNAME_padding_NAMEEND_VAL temp1161_30)))
(assert (= temp1161_32 #x0000000000000000))
(assert (= temp1161_33 #x0000000000000002))
(assert (= temp1161_34 temp1161_33))
(assert (= temp1161_35 (select ARGNAME_padding_NAMEEND_VAL temp1161_34)))
(assert (= temp1161_36 #x0000000000000000))
(assert (= temp1161_37 #x0000000000000003))
(assert (= temp1161_38 temp1161_37))
(assert (= temp1161_39 (select ARGNAME_padding_NAMEEND_VAL temp1161_38)))
(assert (= temp1161_40 #x0000000000000000))
(assert (= temp1161_41 #x0000000000000004))
(assert (= temp1161_42 temp1161_41))
(assert (= temp1161_43 (select ARGNAME_padding_NAMEEND_VAL temp1161_42)))
(assert (= temp1161_44 #x0000000000000000))
(assert (= temp1161_45 #x0000000000000005))
(assert (= temp1161_46 temp1161_45))
(assert (= temp1161_47 (select ARGNAME_padding_NAMEEND_VAL temp1161_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1161_27 temp1161_24)
             (bvslt temp1161_31 temp1161_28)
             (bvslt temp1161_35 temp1161_32)
             (bvslt temp1161_39 temp1161_36)
             (bvslt temp1161_43 temp1161_40)
             (bvslt temp1161_47 temp1161_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_48 #x0000000000000000))
(assert (= var1322786 temp1161_48))
(assert (= temp1161_49 #x0000000000000000))
(assert (= temp1161_50 temp1161_49))
(assert (= temp1161_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_50)))
(assert (= temp1161_52 #x0000000000000001))
(assert (= temp1161_53 temp1161_52))
(assert (= temp1161_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_53)))
(assert (= temp1161_55 #x0000000000000002))
(assert (= temp1161_56 temp1161_55))
(assert (= temp1161_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_56)))
(assert (= temp1161_58 #x0000000000000003))
(assert (= temp1161_59 temp1161_58))
(assert (= temp1161_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_59)))
(assert (= temp1161_61 #x0000000000000004))
(assert (= temp1161_62 temp1161_61))
(assert (= temp1161_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_62)))
(assert (= temp1161_64 #x0000000000000005))
(assert (= temp1161_65 temp1161_64))
(assert (= temp1161_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_65)))
(assert (= temp1161_67 #x0000000000000000))
(assert (= temp1161_68 #x0000000000000000))
(assert (= temp1161_69 temp1161_68))
(assert (= temp1161_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_69)))
(assert (= temp1161_71 #x0000000000000000))
(assert (= temp1161_72 #x0000000000000001))
(assert (= temp1161_73 temp1161_72))
(assert (= temp1161_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_73)))
(assert (= temp1161_75 #x0000000000000000))
(assert (= temp1161_76 #x0000000000000002))
(assert (= temp1161_77 temp1161_76))
(assert (= temp1161_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_77)))
(assert (= temp1161_79 #x0000000000000000))
(assert (= temp1161_80 #x0000000000000003))
(assert (= temp1161_81 temp1161_80))
(assert (= temp1161_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_81)))
(assert (= temp1161_83 #x0000000000000000))
(assert (= temp1161_84 #x0000000000000004))
(assert (= temp1161_85 temp1161_84))
(assert (= temp1161_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_85)))
(assert (= temp1161_87 #x0000000000000000))
(assert (= temp1161_88 #x0000000000000005))
(assert (= temp1161_89 temp1161_88))
(assert (= temp1161_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1161_70 temp1161_67)
             (bvslt temp1161_74 temp1161_71)
             (bvslt temp1161_78 temp1161_75)
             (bvslt temp1161_82 temp1161_79)
             (bvslt temp1161_86 temp1161_83)
             (bvslt temp1161_90 temp1161_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_91 #x0000000000000000))
(assert (= var1322797 temp1161_91))
(assert (= temp1161_92 #x0000000000000000))
(assert (= temp1161_93 temp1161_92))
(assert (= temp1161_94 (select ARGNAME_stride_NAMEEND_VAL temp1161_93)))
(assert (= temp1161_95 #x0000000000000001))
(assert (= temp1161_96 temp1161_95))
(assert (= temp1161_97 (select ARGNAME_stride_NAMEEND_VAL temp1161_96)))
(assert (= temp1161_98 #x0000000000000002))
(assert (= temp1161_99 temp1161_98))
(assert (= temp1161_100 (select ARGNAME_stride_NAMEEND_VAL temp1161_99)))
(assert (= temp1161_101 #x0000000000000003))
(assert (= temp1161_102 temp1161_101))
(assert (= temp1161_103 (select ARGNAME_stride_NAMEEND_VAL temp1161_102)))
(assert (= temp1161_104 #x0000000000000004))
(assert (= temp1161_105 temp1161_104))
(assert (= temp1161_106 (select ARGNAME_stride_NAMEEND_VAL temp1161_105)))
(assert (= temp1161_107 #x0000000000000005))
(assert (= temp1161_108 temp1161_107))
(assert (= temp1161_109 (select ARGNAME_stride_NAMEEND_VAL temp1161_108)))
(assert (= temp1161_110 #x0000000000000000))
(assert (= temp1161_111 #x0000000000000000))
(assert (= temp1161_112 temp1161_111))
(assert (= temp1161_113 (select ARGNAME_stride_NAMEEND_VAL temp1161_112)))
(assert (= temp1161_114 #x0000000000000000))
(assert (= temp1161_115 #x0000000000000001))
(assert (= temp1161_116 temp1161_115))
(assert (= temp1161_117 (select ARGNAME_stride_NAMEEND_VAL temp1161_116)))
(assert (= temp1161_118 #x0000000000000000))
(assert (= temp1161_119 #x0000000000000002))
(assert (= temp1161_120 temp1161_119))
(assert (= temp1161_121 (select ARGNAME_stride_NAMEEND_VAL temp1161_120)))
(assert (= temp1161_122 #x0000000000000000))
(assert (= temp1161_123 #x0000000000000003))
(assert (= temp1161_124 temp1161_123))
(assert (= temp1161_125 (select ARGNAME_stride_NAMEEND_VAL temp1161_124)))
(assert (= temp1161_126 #x0000000000000000))
(assert (= temp1161_127 #x0000000000000004))
(assert (= temp1161_128 temp1161_127))
(assert (= temp1161_129 (select ARGNAME_stride_NAMEEND_VAL temp1161_128)))
(assert (= temp1161_130 #x0000000000000000))
(assert (= temp1161_131 #x0000000000000005))
(assert (= temp1161_132 temp1161_131))
(assert (= temp1161_133 (select ARGNAME_stride_NAMEEND_VAL temp1161_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1161_113 temp1161_110)
             (bvsle temp1161_117 temp1161_114)
             (bvsle temp1161_121 temp1161_118)
             (bvsle temp1161_125 temp1161_122)
             (bvsle temp1161_129 temp1161_126)
             (bvsle temp1161_133 temp1161_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_134 #x0000000000000000))
(assert (= var1322807 temp1161_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_135 #x0000000000000001))
(assert (= var1322819 temp1161_135))
(assert (= temp1161_136 #x0000000000000000))
(assert (= var1310898 temp1161_136))
(assert (= temp1161_137 #x0000000000000000))
(assert (= temp1161_138 temp1161_137))
(assert (= temp1161_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_138)))
(assert (= temp1161_140 #x0000000000000001))
(assert (= temp1161_141 temp1161_140))
(assert (= temp1161_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_141)))
(assert (= temp1161_143 #x0000000000000002))
(assert (= temp1161_144 temp1161_143))
(assert (= temp1161_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_144)))
(assert (= temp1161_146 #x0000000000000003))
(assert (= temp1161_147 temp1161_146))
(assert (= temp1161_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_147)))
(assert (= temp1161_149 #x0000000000000004))
(assert (= temp1161_150 temp1161_149))
(assert (= temp1161_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_150)))
(assert (= temp1161_152 #x0000000000000005))
(assert (= temp1161_153 temp1161_152))
(assert (= temp1161_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_153)))
(assert (= temp1161_156 var1310898))
(assert (= temp1161_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_156)))
(assert (= temp1161_155 temp1161_157))
(assert (= var1322852
   (ite (bvslt temp1161_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_158 #x0000000000000000))
(assert (= var1322852 temp1161_158))
(assert (= temp1161_159 #x0000000000000000))
(assert (= var1310898 temp1161_159))
(assert (= temp1161_161 var1310898))
(assert (= temp1161_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_161)))
(assert (= temp1161_160 temp1161_162))
(assert (= var1322874 (bvsmod temp1161_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1161_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1161_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1161_164 #x0000000000000001))
(assert (= var1322875 temp1161_164))
(assert (= temp1161_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1161_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_166 #x0000000000000001))
(assert (= var1322895 temp1161_166))
(assert (= temp1161_167 #x0000000000000001))
(assert (= var1311786 temp1161_167))
(assert (= temp1161_168 #x0000000000000000))
(assert (= temp1161_169 temp1161_168))
(assert (= temp1161_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_169)))
(assert (= temp1161_171 #x0000000000000001))
(assert (= temp1161_172 temp1161_171))
(assert (= temp1161_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_172)))
(assert (= temp1161_174 #x0000000000000002))
(assert (= temp1161_175 temp1161_174))
(assert (= temp1161_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_175)))
(assert (= temp1161_177 #x0000000000000003))
(assert (= temp1161_178 temp1161_177))
(assert (= temp1161_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_178)))
(assert (= temp1161_180 #x0000000000000004))
(assert (= temp1161_181 temp1161_180))
(assert (= temp1161_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_181)))
(assert (= temp1161_183 #x0000000000000005))
(assert (= temp1161_184 temp1161_183))
(assert (= temp1161_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_184)))
(assert (= temp1161_186 #x0000000000000000))
(assert (= temp1161_187
   (ite (bvslt var1311786 temp1161_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1161_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_187)))
(assert (= var1322903 temp1161_188))
(assert (bvslt (ite (bvslt var1311786 temp1161_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1161_189 #x0000000000000001))
(assert (= var1311786 temp1161_189))
(assert (= temp1161_191 var1311786))
(assert (= temp1161_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_191)))
(assert (= temp1161_190 temp1161_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1161_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1161_193 #x0000000000000001))
(assert (= var1322908 temp1161_193))
(assert (= temp1161_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1161_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_195 #x0000000000000001))
(assert (= var1322975 temp1161_195))
(assert (= temp1161_196 #x0000000000000000))
(assert (= var1310898 temp1161_196))
(assert (= temp1161_197 #x0000000000000000))
(assert (= temp1161_198 temp1161_197))
(assert (= temp1161_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1161_198)))
(assert (= temp1161_200 #x0000000000000001))
(assert (= temp1161_201 temp1161_200))
(assert (= temp1161_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1161_201)))
(assert (= temp1161_203 #x0000000000000002))
(assert (= temp1161_204 temp1161_203))
(assert (= temp1161_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1161_204)))
(assert (= temp1161_206 #x0000000000000003))
(assert (= temp1161_207 temp1161_206))
(assert (= temp1161_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1161_207)))
(assert (= temp1161_209 #x0000000000000004))
(assert (= temp1161_210 temp1161_209))
(assert (= temp1161_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1161_210)))
(assert (= temp1161_212 #x0000000000000005))
(assert (= temp1161_213 temp1161_212))
(assert (= temp1161_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1161_213)))
(assert (= temp1161_215 #x0000000000000000))
(assert (= temp1161_216
   (ite (bvslt var1310898 temp1161_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1161_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1161_216)))
(assert (= var1322977 temp1161_217))
(assert (bvslt (ite (bvslt var1310898 temp1161_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1161_218 #x0000000000000000))
(assert (= var1310898 temp1161_218))
(assert (= temp1161_220 var1310898))
(assert (= temp1161_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_220)))
(assert (= temp1161_219 temp1161_221))
(assert (= var1322980
   (ite (= var1322977 temp1161_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1161_222 #x0000000000000001))
(assert (= var1322980 temp1161_222))
(assert (= temp1161_223 #x0000000000000002))
(assert (= var1848169 temp1161_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1161_225 #x0000000000000001))
(assert (= var1323065 temp1161_225))
(assert (= temp1161_226 #x0000000000000001))
(assert (= var3486735 temp1161_226))
(assert (= temp1161_227 #x0000000000000001))
(assert (= var3814415 temp1161_227))
(assert (= temp1161_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1161_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_229 #x0000000000000001))
(assert (= var79986 temp1161_229))
(assert (= temp1161_230 #x0000000000000001))
(assert (= var80116 temp1161_230))
(assert (= var4796905 var80116))
(assert (= temp1161_231 #x0000000000000000))
(assert (= var4784306 temp1161_231))
(assert (= temp1161_232 #x0000000000000000))
(assert (= temp1161_233
   (ite (bvslt var4784306 temp1161_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1161_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_233)))
(assert (= var4796924 temp1161_234))
(assert (bvslt (ite (bvslt var4784306 temp1161_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1161_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1161_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1161_236 #x0000000000000001))
(assert (= var4796925 temp1161_236))
(assert (= temp1161_237 #x0000000000000000))
(assert (= var4996927 temp1161_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1161_238 #x0000000000000002))
(assert (= var5125763 temp1161_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_239 #x0000000000000000))
(assert (= var5191324 temp1161_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1161_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1161_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_241 #x0000000000000000))
(assert (= var81342 temp1161_241))
(assert (= temp1161_242 #x0000000000000002))
(assert (= var5977731 temp1161_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp1161_243 #x0000000000000001))
(assert (= var79986 temp1161_243))
(model-add temp1161_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1161_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1161_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






