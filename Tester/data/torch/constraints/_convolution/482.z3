(declare-fun temp640_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp640_2 () (_ BitVec 64))
(declare-fun temp640_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp640_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp640_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp640_6 () (_ BitVec 64))
(declare-fun temp640_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_8 () (_ BitVec 64))
(declare-fun temp640_9 () (_ BitVec 64))
(declare-fun temp640_10 () (_ BitVec 64))
(declare-fun temp640_11 () (_ BitVec 64))
(declare-fun temp640_12 () (_ BitVec 64))
(declare-fun temp640_13 () (_ BitVec 64))
(declare-fun temp640_14 () (_ BitVec 64))
(declare-fun temp640_15 () (_ BitVec 64))
(declare-fun temp640_16 () (_ BitVec 64))
(declare-fun temp640_17 () (_ BitVec 64))
(declare-fun temp640_18 () (_ BitVec 64))
(declare-fun temp640_19 () (_ BitVec 64))
(declare-fun temp640_20 () (_ BitVec 64))
(declare-fun temp640_21 () (_ BitVec 64))
(declare-fun temp640_22 () (_ BitVec 64))
(declare-fun temp640_23 () (_ BitVec 64))
(declare-fun temp640_24 () (_ BitVec 64))
(declare-fun temp640_25 () (_ BitVec 64))
(declare-fun temp640_26 () (_ BitVec 64))
(declare-fun temp640_27 () (_ BitVec 64))
(declare-fun temp640_28 () (_ BitVec 64))
(declare-fun temp640_29 () (_ BitVec 64))
(declare-fun temp640_30 () (_ BitVec 64))
(declare-fun temp640_31 () (_ BitVec 64))
(declare-fun temp640_32 () (_ BitVec 64))
(declare-fun temp640_33 () (_ BitVec 64))
(declare-fun temp640_34 () (_ BitVec 64))
(declare-fun temp640_35 () (_ BitVec 64))
(declare-fun temp640_36 () (_ BitVec 64))
(declare-fun temp640_37 () (_ BitVec 64))
(declare-fun temp640_38 () (_ BitVec 64))
(declare-fun temp640_39 () (_ BitVec 64))
(declare-fun temp640_40 () (_ BitVec 64))
(declare-fun temp640_41 () (_ BitVec 64))
(declare-fun temp640_42 () (_ BitVec 64))
(declare-fun temp640_43 () (_ BitVec 64))
(declare-fun temp640_44 () (_ BitVec 64))
(declare-fun temp640_45 () (_ BitVec 64))
(declare-fun temp640_46 () (_ BitVec 64))
(declare-fun temp640_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp640_48 () (_ BitVec 64))
(declare-fun temp640_49 () (_ BitVec 64))
(declare-fun temp640_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_51 () (_ BitVec 64))
(declare-fun temp640_52 () (_ BitVec 64))
(declare-fun temp640_53 () (_ BitVec 64))
(declare-fun temp640_54 () (_ BitVec 64))
(declare-fun temp640_55 () (_ BitVec 64))
(declare-fun temp640_56 () (_ BitVec 64))
(declare-fun temp640_57 () (_ BitVec 64))
(declare-fun temp640_58 () (_ BitVec 64))
(declare-fun temp640_59 () (_ BitVec 64))
(declare-fun temp640_60 () (_ BitVec 64))
(declare-fun temp640_61 () (_ BitVec 64))
(declare-fun temp640_62 () (_ BitVec 64))
(declare-fun temp640_63 () (_ BitVec 64))
(declare-fun temp640_64 () (_ BitVec 64))
(declare-fun temp640_65 () (_ BitVec 64))
(declare-fun temp640_66 () (_ BitVec 64))
(declare-fun temp640_67 () (_ BitVec 64))
(declare-fun temp640_68 () (_ BitVec 64))
(declare-fun temp640_69 () (_ BitVec 64))
(declare-fun temp640_70 () (_ BitVec 64))
(declare-fun temp640_71 () (_ BitVec 64))
(declare-fun temp640_72 () (_ BitVec 64))
(declare-fun temp640_73 () (_ BitVec 64))
(declare-fun temp640_74 () (_ BitVec 64))
(declare-fun temp640_75 () (_ BitVec 64))
(declare-fun temp640_76 () (_ BitVec 64))
(declare-fun temp640_77 () (_ BitVec 64))
(declare-fun temp640_78 () (_ BitVec 64))
(declare-fun temp640_79 () (_ BitVec 64))
(declare-fun temp640_80 () (_ BitVec 64))
(declare-fun temp640_81 () (_ BitVec 64))
(declare-fun temp640_82 () (_ BitVec 64))
(declare-fun temp640_83 () (_ BitVec 64))
(declare-fun temp640_84 () (_ BitVec 64))
(declare-fun temp640_85 () (_ BitVec 64))
(declare-fun temp640_86 () (_ BitVec 64))
(declare-fun temp640_87 () (_ BitVec 64))
(declare-fun temp640_88 () (_ BitVec 64))
(declare-fun temp640_89 () (_ BitVec 64))
(declare-fun temp640_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp640_91 () (_ BitVec 64))
(declare-fun temp640_92 () (_ BitVec 64))
(declare-fun temp640_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_94 () (_ BitVec 64))
(declare-fun temp640_95 () (_ BitVec 64))
(declare-fun temp640_96 () (_ BitVec 64))
(declare-fun temp640_97 () (_ BitVec 64))
(declare-fun temp640_98 () (_ BitVec 64))
(declare-fun temp640_99 () (_ BitVec 64))
(declare-fun temp640_100 () (_ BitVec 64))
(declare-fun temp640_101 () (_ BitVec 64))
(declare-fun temp640_102 () (_ BitVec 64))
(declare-fun temp640_103 () (_ BitVec 64))
(declare-fun temp640_104 () (_ BitVec 64))
(declare-fun temp640_105 () (_ BitVec 64))
(declare-fun temp640_106 () (_ BitVec 64))
(declare-fun temp640_107 () (_ BitVec 64))
(declare-fun temp640_108 () (_ BitVec 64))
(declare-fun temp640_109 () (_ BitVec 64))
(declare-fun temp640_110 () (_ BitVec 64))
(declare-fun temp640_111 () (_ BitVec 64))
(declare-fun temp640_112 () (_ BitVec 64))
(declare-fun temp640_113 () (_ BitVec 64))
(declare-fun temp640_114 () (_ BitVec 64))
(declare-fun temp640_115 () (_ BitVec 64))
(declare-fun temp640_116 () (_ BitVec 64))
(declare-fun temp640_117 () (_ BitVec 64))
(declare-fun temp640_118 () (_ BitVec 64))
(declare-fun temp640_119 () (_ BitVec 64))
(declare-fun temp640_120 () (_ BitVec 64))
(declare-fun temp640_121 () (_ BitVec 64))
(declare-fun temp640_122 () (_ BitVec 64))
(declare-fun temp640_123 () (_ BitVec 64))
(declare-fun temp640_124 () (_ BitVec 64))
(declare-fun temp640_125 () (_ BitVec 64))
(declare-fun temp640_126 () (_ BitVec 64))
(declare-fun temp640_127 () (_ BitVec 64))
(declare-fun temp640_128 () (_ BitVec 64))
(declare-fun temp640_129 () (_ BitVec 64))
(declare-fun temp640_130 () (_ BitVec 64))
(declare-fun temp640_131 () (_ BitVec 64))
(declare-fun temp640_132 () (_ BitVec 64))
(declare-fun temp640_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp640_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp640_135 () (_ BitVec 64))
(declare-fun temp640_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp640_137 () (_ BitVec 64))
(declare-fun temp640_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_139 () (_ BitVec 64))
(declare-fun temp640_140 () (_ BitVec 64))
(declare-fun temp640_141 () (_ BitVec 64))
(declare-fun temp640_142 () (_ BitVec 64))
(declare-fun temp640_143 () (_ BitVec 64))
(declare-fun temp640_144 () (_ BitVec 64))
(declare-fun temp640_145 () (_ BitVec 64))
(declare-fun temp640_146 () (_ BitVec 64))
(declare-fun temp640_147 () (_ BitVec 64))
(declare-fun temp640_148 () (_ BitVec 64))
(declare-fun temp640_149 () (_ BitVec 64))
(declare-fun temp640_150 () (_ BitVec 64))
(declare-fun temp640_151 () (_ BitVec 64))
(declare-fun temp640_152 () (_ BitVec 64))
(declare-fun temp640_153 () (_ BitVec 64))
(declare-fun temp640_154 () (_ BitVec 64))
(declare-fun temp640_156 () (_ BitVec 64))
(declare-fun temp640_157 () (_ BitVec 64))
(declare-fun temp640_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp640_158 () (_ BitVec 64))
(declare-fun temp640_159 () (_ BitVec 64))
(declare-fun temp640_161 () (_ BitVec 64))
(declare-fun temp640_162 () (_ BitVec 64))
(declare-fun temp640_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp640_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp640_164 () (_ BitVec 64))
(declare-fun temp640_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp640_166 () (_ BitVec 64))
(declare-fun temp640_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp640_168 () (_ BitVec 64))
(declare-fun temp640_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_170 () (_ BitVec 64))
(declare-fun temp640_171 () (_ BitVec 64))
(declare-fun temp640_172 () (_ BitVec 64))
(declare-fun temp640_173 () (_ BitVec 64))
(declare-fun temp640_174 () (_ BitVec 64))
(declare-fun temp640_175 () (_ BitVec 64))
(declare-fun temp640_176 () (_ BitVec 64))
(declare-fun temp640_177 () (_ BitVec 64))
(declare-fun temp640_178 () (_ BitVec 64))
(declare-fun temp640_179 () (_ BitVec 64))
(declare-fun temp640_180 () (_ BitVec 64))
(declare-fun temp640_181 () (_ BitVec 64))
(declare-fun temp640_182 () (_ BitVec 64))
(declare-fun temp640_183 () (_ BitVec 64))
(declare-fun temp640_184 () (_ BitVec 64))
(declare-fun temp640_185 () (_ BitVec 64))
(declare-fun temp640_186 () (_ BitVec 64))
(declare-fun temp640_187 () (_ BitVec 64))
(declare-fun temp640_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp640_189 () (_ BitVec 64))
(declare-fun temp640_191 () (_ BitVec 64))
(declare-fun temp640_192 () (_ BitVec 64))
(declare-fun temp640_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp640_193 () (_ BitVec 64))
(declare-fun temp640_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp640_195 () (_ BitVec 64))
(declare-fun temp640_196 () (_ BitVec 64))
(declare-fun temp640_197 () (_ BitVec 64))
(declare-fun temp640_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_199 () (_ BitVec 64))
(declare-fun temp640_200 () (_ BitVec 64))
(declare-fun temp640_201 () (_ BitVec 64))
(declare-fun temp640_202 () (_ BitVec 64))
(declare-fun temp640_203 () (_ BitVec 64))
(declare-fun temp640_204 () (_ BitVec 64))
(declare-fun temp640_205 () (_ BitVec 64))
(declare-fun temp640_206 () (_ BitVec 64))
(declare-fun temp640_207 () (_ BitVec 64))
(declare-fun temp640_208 () (_ BitVec 64))
(declare-fun temp640_209 () (_ BitVec 64))
(declare-fun temp640_210 () (_ BitVec 64))
(declare-fun temp640_211 () (_ BitVec 64))
(declare-fun temp640_212 () (_ BitVec 64))
(declare-fun temp640_213 () (_ BitVec 64))
(declare-fun temp640_214 () (_ BitVec 64))
(declare-fun temp640_215 () (_ BitVec 64))
(declare-fun temp640_216 () (_ BitVec 64))
(declare-fun temp640_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp640_218 () (_ BitVec 64))
(declare-fun temp640_220 () (_ BitVec 64))
(declare-fun temp640_221 () (_ BitVec 64))
(declare-fun temp640_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp640_222 () (_ BitVec 64))
(declare-fun temp640_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp640_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp640_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp640_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp640_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp640_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp640_229 () (_ BitVec 64))
(declare-fun temp640_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp640_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp640_232 () (_ BitVec 64))
(declare-fun temp640_233 () (_ BitVec 64))
(declare-fun temp640_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp640_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp640_236 () (_ BitVec 64))
(declare-fun temp640_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp640_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp640_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp640_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp640_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp640_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6635340 () (_ BitVec 64))
(declare-fun var6635341 () (_ BitVec 64))
(declare-fun var6635342 () (_ BitVec 64))
(declare-fun temp640_244 () (_ BitVec 64))
(declare-fun temp640_243 () (_ BitVec 64))
(declare-fun temp640_245 () (_ BitVec 64))
(declare-fun var7933418 () (_ BitVec 64))
(declare-fun temp640_247 () (_ BitVec 64))
(declare-fun temp640_246 () (_ BitVec 64))
(declare-fun temp640_248 () (_ BitVec 64))
(assert (= temp640_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp640_1)))
(assert (= temp640_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp640_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_3 #x0000000000000000))
(assert (= var79869 temp640_3))
(assert (= temp640_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp640_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_5 #x0000000000000000))
(assert (= var79914 temp640_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp640_6 #x0000000000000000))
(assert (= temp640_7 temp640_6))
(assert (= temp640_8 (select ARGNAME_padding_NAMEEND_VAL temp640_7)))
(assert (= temp640_9 #x0000000000000001))
(assert (= temp640_10 temp640_9))
(assert (= temp640_11 (select ARGNAME_padding_NAMEEND_VAL temp640_10)))
(assert (= temp640_12 #x0000000000000002))
(assert (= temp640_13 temp640_12))
(assert (= temp640_14 (select ARGNAME_padding_NAMEEND_VAL temp640_13)))
(assert (= temp640_15 #x0000000000000003))
(assert (= temp640_16 temp640_15))
(assert (= temp640_17 (select ARGNAME_padding_NAMEEND_VAL temp640_16)))
(assert (= temp640_18 #x0000000000000004))
(assert (= temp640_19 temp640_18))
(assert (= temp640_20 (select ARGNAME_padding_NAMEEND_VAL temp640_19)))
(assert (= temp640_21 #x0000000000000005))
(assert (= temp640_22 temp640_21))
(assert (= temp640_23 (select ARGNAME_padding_NAMEEND_VAL temp640_22)))
(assert (= temp640_24 #x0000000000000000))
(assert (= temp640_25 #x0000000000000000))
(assert (= temp640_26 temp640_25))
(assert (= temp640_27 (select ARGNAME_padding_NAMEEND_VAL temp640_26)))
(assert (= temp640_28 #x0000000000000000))
(assert (= temp640_29 #x0000000000000001))
(assert (= temp640_30 temp640_29))
(assert (= temp640_31 (select ARGNAME_padding_NAMEEND_VAL temp640_30)))
(assert (= temp640_32 #x0000000000000000))
(assert (= temp640_33 #x0000000000000002))
(assert (= temp640_34 temp640_33))
(assert (= temp640_35 (select ARGNAME_padding_NAMEEND_VAL temp640_34)))
(assert (= temp640_36 #x0000000000000000))
(assert (= temp640_37 #x0000000000000003))
(assert (= temp640_38 temp640_37))
(assert (= temp640_39 (select ARGNAME_padding_NAMEEND_VAL temp640_38)))
(assert (= temp640_40 #x0000000000000000))
(assert (= temp640_41 #x0000000000000004))
(assert (= temp640_42 temp640_41))
(assert (= temp640_43 (select ARGNAME_padding_NAMEEND_VAL temp640_42)))
(assert (= temp640_44 #x0000000000000000))
(assert (= temp640_45 #x0000000000000005))
(assert (= temp640_46 temp640_45))
(assert (= temp640_47 (select ARGNAME_padding_NAMEEND_VAL temp640_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp640_27 temp640_24)
             (bvslt temp640_31 temp640_28)
             (bvslt temp640_35 temp640_32)
             (bvslt temp640_39 temp640_36)
             (bvslt temp640_43 temp640_40)
             (bvslt temp640_47 temp640_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_48 #x0000000000000000))
(assert (= var1322786 temp640_48))
(assert (= temp640_49 #x0000000000000000))
(assert (= temp640_50 temp640_49))
(assert (= temp640_51 (select ARGNAME_output_padding_NAMEEND_VAL temp640_50)))
(assert (= temp640_52 #x0000000000000001))
(assert (= temp640_53 temp640_52))
(assert (= temp640_54 (select ARGNAME_output_padding_NAMEEND_VAL temp640_53)))
(assert (= temp640_55 #x0000000000000002))
(assert (= temp640_56 temp640_55))
(assert (= temp640_57 (select ARGNAME_output_padding_NAMEEND_VAL temp640_56)))
(assert (= temp640_58 #x0000000000000003))
(assert (= temp640_59 temp640_58))
(assert (= temp640_60 (select ARGNAME_output_padding_NAMEEND_VAL temp640_59)))
(assert (= temp640_61 #x0000000000000004))
(assert (= temp640_62 temp640_61))
(assert (= temp640_63 (select ARGNAME_output_padding_NAMEEND_VAL temp640_62)))
(assert (= temp640_64 #x0000000000000005))
(assert (= temp640_65 temp640_64))
(assert (= temp640_66 (select ARGNAME_output_padding_NAMEEND_VAL temp640_65)))
(assert (= temp640_67 #x0000000000000000))
(assert (= temp640_68 #x0000000000000000))
(assert (= temp640_69 temp640_68))
(assert (= temp640_70 (select ARGNAME_output_padding_NAMEEND_VAL temp640_69)))
(assert (= temp640_71 #x0000000000000000))
(assert (= temp640_72 #x0000000000000001))
(assert (= temp640_73 temp640_72))
(assert (= temp640_74 (select ARGNAME_output_padding_NAMEEND_VAL temp640_73)))
(assert (= temp640_75 #x0000000000000000))
(assert (= temp640_76 #x0000000000000002))
(assert (= temp640_77 temp640_76))
(assert (= temp640_78 (select ARGNAME_output_padding_NAMEEND_VAL temp640_77)))
(assert (= temp640_79 #x0000000000000000))
(assert (= temp640_80 #x0000000000000003))
(assert (= temp640_81 temp640_80))
(assert (= temp640_82 (select ARGNAME_output_padding_NAMEEND_VAL temp640_81)))
(assert (= temp640_83 #x0000000000000000))
(assert (= temp640_84 #x0000000000000004))
(assert (= temp640_85 temp640_84))
(assert (= temp640_86 (select ARGNAME_output_padding_NAMEEND_VAL temp640_85)))
(assert (= temp640_87 #x0000000000000000))
(assert (= temp640_88 #x0000000000000005))
(assert (= temp640_89 temp640_88))
(assert (= temp640_90 (select ARGNAME_output_padding_NAMEEND_VAL temp640_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp640_70 temp640_67)
             (bvslt temp640_74 temp640_71)
             (bvslt temp640_78 temp640_75)
             (bvslt temp640_82 temp640_79)
             (bvslt temp640_86 temp640_83)
             (bvslt temp640_90 temp640_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_91 #x0000000000000000))
(assert (= var1322797 temp640_91))
(assert (= temp640_92 #x0000000000000000))
(assert (= temp640_93 temp640_92))
(assert (= temp640_94 (select ARGNAME_stride_NAMEEND_VAL temp640_93)))
(assert (= temp640_95 #x0000000000000001))
(assert (= temp640_96 temp640_95))
(assert (= temp640_97 (select ARGNAME_stride_NAMEEND_VAL temp640_96)))
(assert (= temp640_98 #x0000000000000002))
(assert (= temp640_99 temp640_98))
(assert (= temp640_100 (select ARGNAME_stride_NAMEEND_VAL temp640_99)))
(assert (= temp640_101 #x0000000000000003))
(assert (= temp640_102 temp640_101))
(assert (= temp640_103 (select ARGNAME_stride_NAMEEND_VAL temp640_102)))
(assert (= temp640_104 #x0000000000000004))
(assert (= temp640_105 temp640_104))
(assert (= temp640_106 (select ARGNAME_stride_NAMEEND_VAL temp640_105)))
(assert (= temp640_107 #x0000000000000005))
(assert (= temp640_108 temp640_107))
(assert (= temp640_109 (select ARGNAME_stride_NAMEEND_VAL temp640_108)))
(assert (= temp640_110 #x0000000000000000))
(assert (= temp640_111 #x0000000000000000))
(assert (= temp640_112 temp640_111))
(assert (= temp640_113 (select ARGNAME_stride_NAMEEND_VAL temp640_112)))
(assert (= temp640_114 #x0000000000000000))
(assert (= temp640_115 #x0000000000000001))
(assert (= temp640_116 temp640_115))
(assert (= temp640_117 (select ARGNAME_stride_NAMEEND_VAL temp640_116)))
(assert (= temp640_118 #x0000000000000000))
(assert (= temp640_119 #x0000000000000002))
(assert (= temp640_120 temp640_119))
(assert (= temp640_121 (select ARGNAME_stride_NAMEEND_VAL temp640_120)))
(assert (= temp640_122 #x0000000000000000))
(assert (= temp640_123 #x0000000000000003))
(assert (= temp640_124 temp640_123))
(assert (= temp640_125 (select ARGNAME_stride_NAMEEND_VAL temp640_124)))
(assert (= temp640_126 #x0000000000000000))
(assert (= temp640_127 #x0000000000000004))
(assert (= temp640_128 temp640_127))
(assert (= temp640_129 (select ARGNAME_stride_NAMEEND_VAL temp640_128)))
(assert (= temp640_130 #x0000000000000000))
(assert (= temp640_131 #x0000000000000005))
(assert (= temp640_132 temp640_131))
(assert (= temp640_133 (select ARGNAME_stride_NAMEEND_VAL temp640_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp640_113 temp640_110)
             (bvsle temp640_117 temp640_114)
             (bvsle temp640_121 temp640_118)
             (bvsle temp640_125 temp640_122)
             (bvsle temp640_129 temp640_126)
             (bvsle temp640_133 temp640_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_134 #x0000000000000000))
(assert (= var1322807 temp640_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_135 #x0000000000000001))
(assert (= var1322819 temp640_135))
(assert (= temp640_136 #x0000000000000000))
(assert (= var1310898 temp640_136))
(assert (= temp640_137 #x0000000000000000))
(assert (= temp640_138 temp640_137))
(assert (= temp640_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_138)))
(assert (= temp640_140 #x0000000000000001))
(assert (= temp640_141 temp640_140))
(assert (= temp640_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_141)))
(assert (= temp640_143 #x0000000000000002))
(assert (= temp640_144 temp640_143))
(assert (= temp640_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_144)))
(assert (= temp640_146 #x0000000000000003))
(assert (= temp640_147 temp640_146))
(assert (= temp640_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_147)))
(assert (= temp640_149 #x0000000000000004))
(assert (= temp640_150 temp640_149))
(assert (= temp640_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_150)))
(assert (= temp640_152 #x0000000000000005))
(assert (= temp640_153 temp640_152))
(assert (= temp640_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_153)))
(assert (= temp640_156 var1310898))
(assert (= temp640_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_156)))
(assert (= temp640_155 temp640_157))
(assert (= var1322852
   (ite (bvslt temp640_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_158 #x0000000000000000))
(assert (= var1322852 temp640_158))
(assert (= temp640_159 #x0000000000000000))
(assert (= var1310898 temp640_159))
(assert (= temp640_161 var1310898))
(assert (= temp640_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_161)))
(assert (= temp640_160 temp640_162))
(assert (= var1322874 (bvsmod temp640_160 ARGNAME_groups_NAMEEND)))
(assert (= temp640_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp640_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_164 #x0000000000000001))
(assert (= var1322875 temp640_164))
(assert (= temp640_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp640_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_166 #x0000000000000001))
(assert (= var1322895 temp640_166))
(assert (= temp640_167 #x0000000000000001))
(assert (= var1311786 temp640_167))
(assert (= temp640_168 #x0000000000000000))
(assert (= temp640_169 temp640_168))
(assert (= temp640_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_169)))
(assert (= temp640_171 #x0000000000000001))
(assert (= temp640_172 temp640_171))
(assert (= temp640_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_172)))
(assert (= temp640_174 #x0000000000000002))
(assert (= temp640_175 temp640_174))
(assert (= temp640_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_175)))
(assert (= temp640_177 #x0000000000000003))
(assert (= temp640_178 temp640_177))
(assert (= temp640_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_178)))
(assert (= temp640_180 #x0000000000000004))
(assert (= temp640_181 temp640_180))
(assert (= temp640_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_181)))
(assert (= temp640_183 #x0000000000000005))
(assert (= temp640_184 temp640_183))
(assert (= temp640_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_184)))
(assert (= temp640_186 #x0000000000000000))
(assert (= temp640_187
   (ite (bvslt var1311786 temp640_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp640_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_187)))
(assert (= var1322903 temp640_188))
(assert (bvslt (ite (bvslt var1311786 temp640_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp640_189 #x0000000000000001))
(assert (= var1311786 temp640_189))
(assert (= temp640_191 var1311786))
(assert (= temp640_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_191)))
(assert (= temp640_190 temp640_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp640_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_193 #x0000000000000001))
(assert (= var1322908 temp640_193))
(assert (= temp640_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp640_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_195 #x0000000000000001))
(assert (= var1322975 temp640_195))
(assert (= temp640_196 #x0000000000000000))
(assert (= var1310898 temp640_196))
(assert (= temp640_197 #x0000000000000000))
(assert (= temp640_198 temp640_197))
(assert (= temp640_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp640_198)))
(assert (= temp640_200 #x0000000000000001))
(assert (= temp640_201 temp640_200))
(assert (= temp640_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp640_201)))
(assert (= temp640_203 #x0000000000000002))
(assert (= temp640_204 temp640_203))
(assert (= temp640_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp640_204)))
(assert (= temp640_206 #x0000000000000003))
(assert (= temp640_207 temp640_206))
(assert (= temp640_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp640_207)))
(assert (= temp640_209 #x0000000000000004))
(assert (= temp640_210 temp640_209))
(assert (= temp640_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp640_210)))
(assert (= temp640_212 #x0000000000000005))
(assert (= temp640_213 temp640_212))
(assert (= temp640_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp640_213)))
(assert (= temp640_215 #x0000000000000000))
(assert (= temp640_216
   (ite (bvslt var1310898 temp640_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp640_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp640_216)))
(assert (= var1322977 temp640_217))
(assert (bvslt (ite (bvslt var1310898 temp640_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp640_218 #x0000000000000000))
(assert (= var1310898 temp640_218))
(assert (= temp640_220 var1310898))
(assert (= temp640_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_220)))
(assert (= temp640_219 temp640_221))
(assert (= var1322980
   (ite (= var1322977 temp640_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_222 #x0000000000000001))
(assert (= var1322980 temp640_222))
(assert (= temp640_223 #x0000000000000002))
(assert (= var1848169 temp640_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp640_225 #x0000000000000001))
(assert (= var1323065 temp640_225))
(assert (= temp640_226 #x0000000000000001))
(assert (= var3486735 temp640_226))
(assert (= temp640_227 #x0000000000000001))
(assert (= var3814415 temp640_227))
(assert (= temp640_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp640_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_229 #x0000000000000001))
(assert (= var79986 temp640_229))
(assert (= temp640_230 #x0000000000000001))
(assert (= var80116 temp640_230))
(assert (= var4796905 var80116))
(assert (= temp640_231 #x0000000000000000))
(assert (= var4784306 temp640_231))
(assert (= temp640_232 #x0000000000000000))
(assert (= temp640_233
   (ite (bvslt var4784306 temp640_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp640_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_233)))
(assert (= var4796924 temp640_234))
(assert (bvslt (ite (bvslt var4784306 temp640_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp640_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp640_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_236 #x0000000000000001))
(assert (= var4796925 temp640_236))
(assert (= temp640_237 #x0000000000000000))
(assert (= var4996927 temp640_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp640_238 #x0000000000000002))
(assert (= var5125763 temp640_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_239 #x0000000000000000))
(assert (= var5191324 temp640_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp640_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp640_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp640_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp640_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6635340 var80315))
(assert (= var6635341 var80317))
(assert (= var6635342 var80319))
(assert (= temp640_244 #x0000000000000001))
(assert (= temp640_243 temp640_244))
(assert (= temp640_245 #x0000000000000001))
(assert (= var7933418 temp640_245))
(assert (= temp640_247 #xffffffffffffffff))
(assert (= temp640_246 temp640_247))
(assert (= temp640_248 #x0000000000000001))
(assert (= var79986 temp640_248))
(model-add temp640_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp640_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp640_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






