(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun temp1_34 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(declare-fun temp1_42 () (_ BitVec 64))
(declare-fun temp1_43 () (_ BitVec 64))
(declare-fun temp1_44 () (_ BitVec 64))
(declare-fun temp1_45 () (_ BitVec 64))
(declare-fun temp1_46 () (_ BitVec 64))
(declare-fun temp1_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1_48 () (_ BitVec 64))
(declare-fun temp1_49 () (_ BitVec 64))
(declare-fun temp1_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_51 () (_ BitVec 64))
(declare-fun temp1_52 () (_ BitVec 64))
(declare-fun temp1_53 () (_ BitVec 64))
(declare-fun temp1_54 () (_ BitVec 64))
(declare-fun temp1_55 () (_ BitVec 64))
(declare-fun temp1_56 () (_ BitVec 64))
(declare-fun temp1_57 () (_ BitVec 64))
(declare-fun temp1_58 () (_ BitVec 64))
(declare-fun temp1_59 () (_ BitVec 64))
(declare-fun temp1_60 () (_ BitVec 64))
(declare-fun temp1_61 () (_ BitVec 64))
(declare-fun temp1_62 () (_ BitVec 64))
(declare-fun temp1_63 () (_ BitVec 64))
(declare-fun temp1_64 () (_ BitVec 64))
(declare-fun temp1_65 () (_ BitVec 64))
(declare-fun temp1_66 () (_ BitVec 64))
(declare-fun temp1_67 () (_ BitVec 64))
(declare-fun temp1_68 () (_ BitVec 64))
(declare-fun temp1_69 () (_ BitVec 64))
(declare-fun temp1_70 () (_ BitVec 64))
(declare-fun temp1_71 () (_ BitVec 64))
(declare-fun temp1_72 () (_ BitVec 64))
(declare-fun temp1_73 () (_ BitVec 64))
(declare-fun temp1_74 () (_ BitVec 64))
(declare-fun temp1_75 () (_ BitVec 64))
(declare-fun temp1_76 () (_ BitVec 64))
(declare-fun temp1_77 () (_ BitVec 64))
(declare-fun temp1_78 () (_ BitVec 64))
(declare-fun temp1_79 () (_ BitVec 64))
(declare-fun temp1_80 () (_ BitVec 64))
(declare-fun temp1_81 () (_ BitVec 64))
(declare-fun temp1_82 () (_ BitVec 64))
(declare-fun temp1_83 () (_ BitVec 64))
(declare-fun temp1_84 () (_ BitVec 64))
(declare-fun temp1_85 () (_ BitVec 64))
(declare-fun temp1_86 () (_ BitVec 64))
(declare-fun temp1_87 () (_ BitVec 64))
(declare-fun temp1_88 () (_ BitVec 64))
(declare-fun temp1_89 () (_ BitVec 64))
(declare-fun temp1_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1_91 () (_ BitVec 64))
(declare-fun temp1_92 () (_ BitVec 64))
(declare-fun temp1_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_94 () (_ BitVec 64))
(declare-fun temp1_95 () (_ BitVec 64))
(declare-fun temp1_96 () (_ BitVec 64))
(declare-fun temp1_97 () (_ BitVec 64))
(declare-fun temp1_98 () (_ BitVec 64))
(declare-fun temp1_99 () (_ BitVec 64))
(declare-fun temp1_100 () (_ BitVec 64))
(declare-fun temp1_101 () (_ BitVec 64))
(declare-fun temp1_102 () (_ BitVec 64))
(declare-fun temp1_103 () (_ BitVec 64))
(declare-fun temp1_104 () (_ BitVec 64))
(declare-fun temp1_105 () (_ BitVec 64))
(declare-fun temp1_106 () (_ BitVec 64))
(declare-fun temp1_107 () (_ BitVec 64))
(declare-fun temp1_108 () (_ BitVec 64))
(declare-fun temp1_109 () (_ BitVec 64))
(declare-fun temp1_110 () (_ BitVec 64))
(declare-fun temp1_111 () (_ BitVec 64))
(declare-fun temp1_112 () (_ BitVec 64))
(declare-fun temp1_113 () (_ BitVec 64))
(declare-fun temp1_114 () (_ BitVec 64))
(declare-fun temp1_115 () (_ BitVec 64))
(declare-fun temp1_116 () (_ BitVec 64))
(declare-fun temp1_117 () (_ BitVec 64))
(declare-fun temp1_118 () (_ BitVec 64))
(declare-fun temp1_119 () (_ BitVec 64))
(declare-fun temp1_120 () (_ BitVec 64))
(declare-fun temp1_121 () (_ BitVec 64))
(declare-fun temp1_122 () (_ BitVec 64))
(declare-fun temp1_123 () (_ BitVec 64))
(declare-fun temp1_124 () (_ BitVec 64))
(declare-fun temp1_125 () (_ BitVec 64))
(declare-fun temp1_126 () (_ BitVec 64))
(declare-fun temp1_127 () (_ BitVec 64))
(declare-fun temp1_128 () (_ BitVec 64))
(declare-fun temp1_129 () (_ BitVec 64))
(declare-fun temp1_130 () (_ BitVec 64))
(declare-fun temp1_131 () (_ BitVec 64))
(declare-fun temp1_132 () (_ BitVec 64))
(declare-fun temp1_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1_135 () (_ BitVec 64))
(declare-fun temp1_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1_137 () (_ BitVec 64))
(declare-fun temp1_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_139 () (_ BitVec 64))
(declare-fun temp1_140 () (_ BitVec 64))
(declare-fun temp1_141 () (_ BitVec 64))
(declare-fun temp1_142 () (_ BitVec 64))
(declare-fun temp1_143 () (_ BitVec 64))
(declare-fun temp1_144 () (_ BitVec 64))
(declare-fun temp1_145 () (_ BitVec 64))
(declare-fun temp1_146 () (_ BitVec 64))
(declare-fun temp1_147 () (_ BitVec 64))
(declare-fun temp1_148 () (_ BitVec 64))
(declare-fun temp1_149 () (_ BitVec 64))
(declare-fun temp1_150 () (_ BitVec 64))
(declare-fun temp1_151 () (_ BitVec 64))
(declare-fun temp1_152 () (_ BitVec 64))
(declare-fun temp1_153 () (_ BitVec 64))
(declare-fun temp1_154 () (_ BitVec 64))
(declare-fun temp1_156 () (_ BitVec 64))
(declare-fun temp1_157 () (_ BitVec 64))
(declare-fun temp1_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1_158 () (_ BitVec 64))
(declare-fun temp1_159 () (_ BitVec 64))
(declare-fun temp1_161 () (_ BitVec 64))
(declare-fun temp1_162 () (_ BitVec 64))
(declare-fun temp1_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1_164 () (_ BitVec 64))
(declare-fun temp1_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1_166 () (_ BitVec 64))
(declare-fun temp1_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1_168 () (_ BitVec 64))
(declare-fun temp1_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_170 () (_ BitVec 64))
(declare-fun temp1_171 () (_ BitVec 64))
(declare-fun temp1_172 () (_ BitVec 64))
(declare-fun temp1_173 () (_ BitVec 64))
(declare-fun temp1_174 () (_ BitVec 64))
(declare-fun temp1_175 () (_ BitVec 64))
(declare-fun temp1_176 () (_ BitVec 64))
(declare-fun temp1_177 () (_ BitVec 64))
(declare-fun temp1_178 () (_ BitVec 64))
(declare-fun temp1_179 () (_ BitVec 64))
(declare-fun temp1_180 () (_ BitVec 64))
(declare-fun temp1_181 () (_ BitVec 64))
(declare-fun temp1_182 () (_ BitVec 64))
(declare-fun temp1_183 () (_ BitVec 64))
(declare-fun temp1_184 () (_ BitVec 64))
(declare-fun temp1_185 () (_ BitVec 64))
(declare-fun temp1_186 () (_ BitVec 64))
(declare-fun temp1_187 () (_ BitVec 64))
(declare-fun temp1_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1_189 () (_ BitVec 64))
(declare-fun temp1_191 () (_ BitVec 64))
(declare-fun temp1_192 () (_ BitVec 64))
(declare-fun temp1_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1_193 () (_ BitVec 64))
(declare-fun temp1_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1_195 () (_ BitVec 64))
(declare-fun temp1_196 () (_ BitVec 64))
(declare-fun temp1_197 () (_ BitVec 64))
(declare-fun temp1_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_199 () (_ BitVec 64))
(declare-fun temp1_200 () (_ BitVec 64))
(declare-fun temp1_201 () (_ BitVec 64))
(declare-fun temp1_202 () (_ BitVec 64))
(declare-fun temp1_203 () (_ BitVec 64))
(declare-fun temp1_204 () (_ BitVec 64))
(declare-fun temp1_205 () (_ BitVec 64))
(declare-fun temp1_206 () (_ BitVec 64))
(declare-fun temp1_207 () (_ BitVec 64))
(declare-fun temp1_208 () (_ BitVec 64))
(declare-fun temp1_209 () (_ BitVec 64))
(declare-fun temp1_210 () (_ BitVec 64))
(declare-fun temp1_211 () (_ BitVec 64))
(declare-fun temp1_212 () (_ BitVec 64))
(declare-fun temp1_213 () (_ BitVec 64))
(declare-fun temp1_214 () (_ BitVec 64))
(declare-fun temp1_215 () (_ BitVec 64))
(declare-fun temp1_216 () (_ BitVec 64))
(declare-fun temp1_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1_218 () (_ BitVec 64))
(declare-fun temp1_220 () (_ BitVec 64))
(declare-fun temp1_221 () (_ BitVec 64))
(declare-fun temp1_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1_222 () (_ BitVec 64))
(declare-fun temp1_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1_229 () (_ BitVec 64))
(declare-fun temp1_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1_232 () (_ BitVec 64))
(declare-fun temp1_233 () (_ BitVec 64))
(declare-fun temp1_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1_236 () (_ BitVec 64))
(declare-fun temp1_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1_240 () (_ BitVec 64))
(assert (= temp1_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1_1)))
(assert (= temp1_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_3 #x0000000000000000))
(assert (= var79869 temp1_3))
(assert (= temp1_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_5 #x0000000000000000))
(assert (= var79914 temp1_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1_6 #x0000000000000000))
(assert (= temp1_7 temp1_6))
(assert (= temp1_8 (select ARGNAME_padding_NAMEEND_VAL temp1_7)))
(assert (= temp1_9 #x0000000000000001))
(assert (= temp1_10 temp1_9))
(assert (= temp1_11 (select ARGNAME_padding_NAMEEND_VAL temp1_10)))
(assert (= temp1_12 #x0000000000000002))
(assert (= temp1_13 temp1_12))
(assert (= temp1_14 (select ARGNAME_padding_NAMEEND_VAL temp1_13)))
(assert (= temp1_15 #x0000000000000003))
(assert (= temp1_16 temp1_15))
(assert (= temp1_17 (select ARGNAME_padding_NAMEEND_VAL temp1_16)))
(assert (= temp1_18 #x0000000000000004))
(assert (= temp1_19 temp1_18))
(assert (= temp1_20 (select ARGNAME_padding_NAMEEND_VAL temp1_19)))
(assert (= temp1_21 #x0000000000000005))
(assert (= temp1_22 temp1_21))
(assert (= temp1_23 (select ARGNAME_padding_NAMEEND_VAL temp1_22)))
(assert (= temp1_24 #x0000000000000000))
(assert (= temp1_25 #x0000000000000000))
(assert (= temp1_26 temp1_25))
(assert (= temp1_27 (select ARGNAME_padding_NAMEEND_VAL temp1_26)))
(assert (= temp1_28 #x0000000000000000))
(assert (= temp1_29 #x0000000000000001))
(assert (= temp1_30 temp1_29))
(assert (= temp1_31 (select ARGNAME_padding_NAMEEND_VAL temp1_30)))
(assert (= temp1_32 #x0000000000000000))
(assert (= temp1_33 #x0000000000000002))
(assert (= temp1_34 temp1_33))
(assert (= temp1_35 (select ARGNAME_padding_NAMEEND_VAL temp1_34)))
(assert (= temp1_36 #x0000000000000000))
(assert (= temp1_37 #x0000000000000003))
(assert (= temp1_38 temp1_37))
(assert (= temp1_39 (select ARGNAME_padding_NAMEEND_VAL temp1_38)))
(assert (= temp1_40 #x0000000000000000))
(assert (= temp1_41 #x0000000000000004))
(assert (= temp1_42 temp1_41))
(assert (= temp1_43 (select ARGNAME_padding_NAMEEND_VAL temp1_42)))
(assert (= temp1_44 #x0000000000000000))
(assert (= temp1_45 #x0000000000000005))
(assert (= temp1_46 temp1_45))
(assert (= temp1_47 (select ARGNAME_padding_NAMEEND_VAL temp1_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1_27 temp1_24)
             (bvslt temp1_31 temp1_28)
             (bvslt temp1_35 temp1_32)
             (bvslt temp1_39 temp1_36)
             (bvslt temp1_43 temp1_40)
             (bvslt temp1_47 temp1_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_48 #x0000000000000000))
(assert (= var1322786 temp1_48))
(assert (= temp1_49 #x0000000000000000))
(assert (= temp1_50 temp1_49))
(assert (= temp1_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1_50)))
(assert (= temp1_52 #x0000000000000001))
(assert (= temp1_53 temp1_52))
(assert (= temp1_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1_53)))
(assert (= temp1_55 #x0000000000000002))
(assert (= temp1_56 temp1_55))
(assert (= temp1_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1_56)))
(assert (= temp1_58 #x0000000000000003))
(assert (= temp1_59 temp1_58))
(assert (= temp1_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1_59)))
(assert (= temp1_61 #x0000000000000004))
(assert (= temp1_62 temp1_61))
(assert (= temp1_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1_62)))
(assert (= temp1_64 #x0000000000000005))
(assert (= temp1_65 temp1_64))
(assert (= temp1_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1_65)))
(assert (= temp1_67 #x0000000000000000))
(assert (= temp1_68 #x0000000000000000))
(assert (= temp1_69 temp1_68))
(assert (= temp1_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1_69)))
(assert (= temp1_71 #x0000000000000000))
(assert (= temp1_72 #x0000000000000001))
(assert (= temp1_73 temp1_72))
(assert (= temp1_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1_73)))
(assert (= temp1_75 #x0000000000000000))
(assert (= temp1_76 #x0000000000000002))
(assert (= temp1_77 temp1_76))
(assert (= temp1_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1_77)))
(assert (= temp1_79 #x0000000000000000))
(assert (= temp1_80 #x0000000000000003))
(assert (= temp1_81 temp1_80))
(assert (= temp1_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1_81)))
(assert (= temp1_83 #x0000000000000000))
(assert (= temp1_84 #x0000000000000004))
(assert (= temp1_85 temp1_84))
(assert (= temp1_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1_85)))
(assert (= temp1_87 #x0000000000000000))
(assert (= temp1_88 #x0000000000000005))
(assert (= temp1_89 temp1_88))
(assert (= temp1_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1_70 temp1_67)
             (bvslt temp1_74 temp1_71)
             (bvslt temp1_78 temp1_75)
             (bvslt temp1_82 temp1_79)
             (bvslt temp1_86 temp1_83)
             (bvslt temp1_90 temp1_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_91 #x0000000000000000))
(assert (= var1322797 temp1_91))
(assert (= temp1_92 #x0000000000000000))
(assert (= temp1_93 temp1_92))
(assert (= temp1_94 (select ARGNAME_stride_NAMEEND_VAL temp1_93)))
(assert (= temp1_95 #x0000000000000001))
(assert (= temp1_96 temp1_95))
(assert (= temp1_97 (select ARGNAME_stride_NAMEEND_VAL temp1_96)))
(assert (= temp1_98 #x0000000000000002))
(assert (= temp1_99 temp1_98))
(assert (= temp1_100 (select ARGNAME_stride_NAMEEND_VAL temp1_99)))
(assert (= temp1_101 #x0000000000000003))
(assert (= temp1_102 temp1_101))
(assert (= temp1_103 (select ARGNAME_stride_NAMEEND_VAL temp1_102)))
(assert (= temp1_104 #x0000000000000004))
(assert (= temp1_105 temp1_104))
(assert (= temp1_106 (select ARGNAME_stride_NAMEEND_VAL temp1_105)))
(assert (= temp1_107 #x0000000000000005))
(assert (= temp1_108 temp1_107))
(assert (= temp1_109 (select ARGNAME_stride_NAMEEND_VAL temp1_108)))
(assert (= temp1_110 #x0000000000000000))
(assert (= temp1_111 #x0000000000000000))
(assert (= temp1_112 temp1_111))
(assert (= temp1_113 (select ARGNAME_stride_NAMEEND_VAL temp1_112)))
(assert (= temp1_114 #x0000000000000000))
(assert (= temp1_115 #x0000000000000001))
(assert (= temp1_116 temp1_115))
(assert (= temp1_117 (select ARGNAME_stride_NAMEEND_VAL temp1_116)))
(assert (= temp1_118 #x0000000000000000))
(assert (= temp1_119 #x0000000000000002))
(assert (= temp1_120 temp1_119))
(assert (= temp1_121 (select ARGNAME_stride_NAMEEND_VAL temp1_120)))
(assert (= temp1_122 #x0000000000000000))
(assert (= temp1_123 #x0000000000000003))
(assert (= temp1_124 temp1_123))
(assert (= temp1_125 (select ARGNAME_stride_NAMEEND_VAL temp1_124)))
(assert (= temp1_126 #x0000000000000000))
(assert (= temp1_127 #x0000000000000004))
(assert (= temp1_128 temp1_127))
(assert (= temp1_129 (select ARGNAME_stride_NAMEEND_VAL temp1_128)))
(assert (= temp1_130 #x0000000000000000))
(assert (= temp1_131 #x0000000000000005))
(assert (= temp1_132 temp1_131))
(assert (= temp1_133 (select ARGNAME_stride_NAMEEND_VAL temp1_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1_113 temp1_110)
             (bvsle temp1_117 temp1_114)
             (bvsle temp1_121 temp1_118)
             (bvsle temp1_125 temp1_122)
             (bvsle temp1_129 temp1_126)
             (bvsle temp1_133 temp1_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_134 #x0000000000000000))
(assert (= var1322807 temp1_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_135 #x0000000000000001))
(assert (= var1322819 temp1_135))
(assert (= temp1_136 #x0000000000000000))
(assert (= var1310898 temp1_136))
(assert (= temp1_137 #x0000000000000000))
(assert (= temp1_138 temp1_137))
(assert (= temp1_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_138)))
(assert (= temp1_140 #x0000000000000001))
(assert (= temp1_141 temp1_140))
(assert (= temp1_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_141)))
(assert (= temp1_143 #x0000000000000002))
(assert (= temp1_144 temp1_143))
(assert (= temp1_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_144)))
(assert (= temp1_146 #x0000000000000003))
(assert (= temp1_147 temp1_146))
(assert (= temp1_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_147)))
(assert (= temp1_149 #x0000000000000004))
(assert (= temp1_150 temp1_149))
(assert (= temp1_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_150)))
(assert (= temp1_152 #x0000000000000005))
(assert (= temp1_153 temp1_152))
(assert (= temp1_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_153)))
(assert (= temp1_156 var1310898))
(assert (= temp1_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_156)))
(assert (= temp1_155 temp1_157))
(assert (= var1322852
   (ite (bvslt temp1_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_158 #x0000000000000000))
(assert (= var1322852 temp1_158))
(assert (= temp1_159 #x0000000000000000))
(assert (= var1310898 temp1_159))
(assert (= temp1_161 var1310898))
(assert (= temp1_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_161)))
(assert (= temp1_160 temp1_162))
(assert (= var1322874 (bvsmod temp1_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_164 #x0000000000000001))
(assert (= var1322875 temp1_164))
(assert (= temp1_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_166 #x0000000000000001))
(assert (= var1322895 temp1_166))
(assert (= temp1_167 #x0000000000000001))
(assert (= var1311786 temp1_167))
(assert (= temp1_168 #x0000000000000000))
(assert (= temp1_169 temp1_168))
(assert (= temp1_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_169)))
(assert (= temp1_171 #x0000000000000001))
(assert (= temp1_172 temp1_171))
(assert (= temp1_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_172)))
(assert (= temp1_174 #x0000000000000002))
(assert (= temp1_175 temp1_174))
(assert (= temp1_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_175)))
(assert (= temp1_177 #x0000000000000003))
(assert (= temp1_178 temp1_177))
(assert (= temp1_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_178)))
(assert (= temp1_180 #x0000000000000004))
(assert (= temp1_181 temp1_180))
(assert (= temp1_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_181)))
(assert (= temp1_183 #x0000000000000005))
(assert (= temp1_184 temp1_183))
(assert (= temp1_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_184)))
(assert (= temp1_186 #x0000000000000000))
(assert (= temp1_187
   (ite (bvslt var1311786 temp1_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_187)))
(assert (= var1322903 temp1_188))
(assert (bvslt (ite (bvslt var1311786 temp1_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1_189 #x0000000000000001))
(assert (= var1311786 temp1_189))
(assert (= temp1_191 var1311786))
(assert (= temp1_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_191)))
(assert (= temp1_190 temp1_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_193 #x0000000000000001))
(assert (= var1322908 temp1_193))
(assert (= temp1_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_195 #x0000000000000001))
(assert (= var1322975 temp1_195))
(assert (= temp1_196 #x0000000000000000))
(assert (= var1310898 temp1_196))
(assert (= temp1_197 #x0000000000000000))
(assert (= temp1_198 temp1_197))
(assert (= temp1_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1_198)))
(assert (= temp1_200 #x0000000000000001))
(assert (= temp1_201 temp1_200))
(assert (= temp1_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1_201)))
(assert (= temp1_203 #x0000000000000002))
(assert (= temp1_204 temp1_203))
(assert (= temp1_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1_204)))
(assert (= temp1_206 #x0000000000000003))
(assert (= temp1_207 temp1_206))
(assert (= temp1_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1_207)))
(assert (= temp1_209 #x0000000000000004))
(assert (= temp1_210 temp1_209))
(assert (= temp1_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1_210)))
(assert (= temp1_212 #x0000000000000005))
(assert (= temp1_213 temp1_212))
(assert (= temp1_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1_213)))
(assert (= temp1_215 #x0000000000000000))
(assert (= temp1_216
   (ite (bvslt var1310898 temp1_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1_216)))
(assert (= var1322977 temp1_217))
(assert (bvslt (ite (bvslt var1310898 temp1_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1_218 #x0000000000000000))
(assert (= var1310898 temp1_218))
(assert (= temp1_220 var1310898))
(assert (= temp1_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_220)))
(assert (= temp1_219 temp1_221))
(assert (= var1322980
   (ite (= var1322977 temp1_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_222 #x0000000000000001))
(assert (= var1322980 temp1_222))
(assert (= temp1_223 #x0000000000000002))
(assert (= var1848169 temp1_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1_225 #x0000000000000001))
(assert (= var1323065 temp1_225))
(assert (= temp1_226 #x0000000000000001))
(assert (= var3486735 temp1_226))
(assert (= temp1_227 #x0000000000000001))
(assert (= var3814415 temp1_227))
(assert (= temp1_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_229 #x0000000000000001))
(assert (= var79986 temp1_229))
(assert (= temp1_230 #x0000000000000001))
(assert (= var80116 temp1_230))
(assert (= var4796905 var80116))
(assert (= temp1_231 #x0000000000000000))
(assert (= var4784306 temp1_231))
(assert (= temp1_232 #x0000000000000000))
(assert (= temp1_233
   (ite (bvslt var4784306 temp1_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_233)))
(assert (= var4796924 temp1_234))
(assert (bvslt (ite (bvslt var4784306 temp1_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_236 #x0000000000000001))
(assert (= var4796925 temp1_236))
(assert (= temp1_237 #x0000000000000000))
(assert (= var4996927 temp1_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1_238 #x0000000000000002))
(assert (= var5125763 temp1_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_239 #x0000000000000000))
(assert (= var5191324 temp1_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1_240 #x0000000000000001))
(assert (= var79986 temp1_240))
(model-add temp1_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






