(declare-fun temp986_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp986_2 () (_ BitVec 64))
(declare-fun temp986_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp986_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp986_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp986_6 () (_ BitVec 64))
(declare-fun temp986_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_8 () (_ BitVec 64))
(declare-fun temp986_9 () (_ BitVec 64))
(declare-fun temp986_10 () (_ BitVec 64))
(declare-fun temp986_11 () (_ BitVec 64))
(declare-fun temp986_12 () (_ BitVec 64))
(declare-fun temp986_13 () (_ BitVec 64))
(declare-fun temp986_14 () (_ BitVec 64))
(declare-fun temp986_15 () (_ BitVec 64))
(declare-fun temp986_16 () (_ BitVec 64))
(declare-fun temp986_17 () (_ BitVec 64))
(declare-fun temp986_18 () (_ BitVec 64))
(declare-fun temp986_19 () (_ BitVec 64))
(declare-fun temp986_20 () (_ BitVec 64))
(declare-fun temp986_21 () (_ BitVec 64))
(declare-fun temp986_22 () (_ BitVec 64))
(declare-fun temp986_23 () (_ BitVec 64))
(declare-fun temp986_24 () (_ BitVec 64))
(declare-fun temp986_25 () (_ BitVec 64))
(declare-fun temp986_26 () (_ BitVec 64))
(declare-fun temp986_27 () (_ BitVec 64))
(declare-fun temp986_28 () (_ BitVec 64))
(declare-fun temp986_29 () (_ BitVec 64))
(declare-fun temp986_30 () (_ BitVec 64))
(declare-fun temp986_31 () (_ BitVec 64))
(declare-fun temp986_32 () (_ BitVec 64))
(declare-fun temp986_33 () (_ BitVec 64))
(declare-fun temp986_34 () (_ BitVec 64))
(declare-fun temp986_35 () (_ BitVec 64))
(declare-fun temp986_36 () (_ BitVec 64))
(declare-fun temp986_37 () (_ BitVec 64))
(declare-fun temp986_38 () (_ BitVec 64))
(declare-fun temp986_39 () (_ BitVec 64))
(declare-fun temp986_40 () (_ BitVec 64))
(declare-fun temp986_41 () (_ BitVec 64))
(declare-fun temp986_42 () (_ BitVec 64))
(declare-fun temp986_43 () (_ BitVec 64))
(declare-fun temp986_44 () (_ BitVec 64))
(declare-fun temp986_45 () (_ BitVec 64))
(declare-fun temp986_46 () (_ BitVec 64))
(declare-fun temp986_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp986_48 () (_ BitVec 64))
(declare-fun temp986_49 () (_ BitVec 64))
(declare-fun temp986_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_51 () (_ BitVec 64))
(declare-fun temp986_52 () (_ BitVec 64))
(declare-fun temp986_53 () (_ BitVec 64))
(declare-fun temp986_54 () (_ BitVec 64))
(declare-fun temp986_55 () (_ BitVec 64))
(declare-fun temp986_56 () (_ BitVec 64))
(declare-fun temp986_57 () (_ BitVec 64))
(declare-fun temp986_58 () (_ BitVec 64))
(declare-fun temp986_59 () (_ BitVec 64))
(declare-fun temp986_60 () (_ BitVec 64))
(declare-fun temp986_61 () (_ BitVec 64))
(declare-fun temp986_62 () (_ BitVec 64))
(declare-fun temp986_63 () (_ BitVec 64))
(declare-fun temp986_64 () (_ BitVec 64))
(declare-fun temp986_65 () (_ BitVec 64))
(declare-fun temp986_66 () (_ BitVec 64))
(declare-fun temp986_67 () (_ BitVec 64))
(declare-fun temp986_68 () (_ BitVec 64))
(declare-fun temp986_69 () (_ BitVec 64))
(declare-fun temp986_70 () (_ BitVec 64))
(declare-fun temp986_71 () (_ BitVec 64))
(declare-fun temp986_72 () (_ BitVec 64))
(declare-fun temp986_73 () (_ BitVec 64))
(declare-fun temp986_74 () (_ BitVec 64))
(declare-fun temp986_75 () (_ BitVec 64))
(declare-fun temp986_76 () (_ BitVec 64))
(declare-fun temp986_77 () (_ BitVec 64))
(declare-fun temp986_78 () (_ BitVec 64))
(declare-fun temp986_79 () (_ BitVec 64))
(declare-fun temp986_80 () (_ BitVec 64))
(declare-fun temp986_81 () (_ BitVec 64))
(declare-fun temp986_82 () (_ BitVec 64))
(declare-fun temp986_83 () (_ BitVec 64))
(declare-fun temp986_84 () (_ BitVec 64))
(declare-fun temp986_85 () (_ BitVec 64))
(declare-fun temp986_86 () (_ BitVec 64))
(declare-fun temp986_87 () (_ BitVec 64))
(declare-fun temp986_88 () (_ BitVec 64))
(declare-fun temp986_89 () (_ BitVec 64))
(declare-fun temp986_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp986_91 () (_ BitVec 64))
(declare-fun temp986_92 () (_ BitVec 64))
(declare-fun temp986_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_94 () (_ BitVec 64))
(declare-fun temp986_95 () (_ BitVec 64))
(declare-fun temp986_96 () (_ BitVec 64))
(declare-fun temp986_97 () (_ BitVec 64))
(declare-fun temp986_98 () (_ BitVec 64))
(declare-fun temp986_99 () (_ BitVec 64))
(declare-fun temp986_100 () (_ BitVec 64))
(declare-fun temp986_101 () (_ BitVec 64))
(declare-fun temp986_102 () (_ BitVec 64))
(declare-fun temp986_103 () (_ BitVec 64))
(declare-fun temp986_104 () (_ BitVec 64))
(declare-fun temp986_105 () (_ BitVec 64))
(declare-fun temp986_106 () (_ BitVec 64))
(declare-fun temp986_107 () (_ BitVec 64))
(declare-fun temp986_108 () (_ BitVec 64))
(declare-fun temp986_109 () (_ BitVec 64))
(declare-fun temp986_110 () (_ BitVec 64))
(declare-fun temp986_111 () (_ BitVec 64))
(declare-fun temp986_112 () (_ BitVec 64))
(declare-fun temp986_113 () (_ BitVec 64))
(declare-fun temp986_114 () (_ BitVec 64))
(declare-fun temp986_115 () (_ BitVec 64))
(declare-fun temp986_116 () (_ BitVec 64))
(declare-fun temp986_117 () (_ BitVec 64))
(declare-fun temp986_118 () (_ BitVec 64))
(declare-fun temp986_119 () (_ BitVec 64))
(declare-fun temp986_120 () (_ BitVec 64))
(declare-fun temp986_121 () (_ BitVec 64))
(declare-fun temp986_122 () (_ BitVec 64))
(declare-fun temp986_123 () (_ BitVec 64))
(declare-fun temp986_124 () (_ BitVec 64))
(declare-fun temp986_125 () (_ BitVec 64))
(declare-fun temp986_126 () (_ BitVec 64))
(declare-fun temp986_127 () (_ BitVec 64))
(declare-fun temp986_128 () (_ BitVec 64))
(declare-fun temp986_129 () (_ BitVec 64))
(declare-fun temp986_130 () (_ BitVec 64))
(declare-fun temp986_131 () (_ BitVec 64))
(declare-fun temp986_132 () (_ BitVec 64))
(declare-fun temp986_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp986_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp986_135 () (_ BitVec 64))
(declare-fun temp986_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp986_137 () (_ BitVec 64))
(declare-fun temp986_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_139 () (_ BitVec 64))
(declare-fun temp986_140 () (_ BitVec 64))
(declare-fun temp986_141 () (_ BitVec 64))
(declare-fun temp986_142 () (_ BitVec 64))
(declare-fun temp986_143 () (_ BitVec 64))
(declare-fun temp986_144 () (_ BitVec 64))
(declare-fun temp986_145 () (_ BitVec 64))
(declare-fun temp986_146 () (_ BitVec 64))
(declare-fun temp986_147 () (_ BitVec 64))
(declare-fun temp986_148 () (_ BitVec 64))
(declare-fun temp986_149 () (_ BitVec 64))
(declare-fun temp986_150 () (_ BitVec 64))
(declare-fun temp986_151 () (_ BitVec 64))
(declare-fun temp986_152 () (_ BitVec 64))
(declare-fun temp986_153 () (_ BitVec 64))
(declare-fun temp986_154 () (_ BitVec 64))
(declare-fun temp986_156 () (_ BitVec 64))
(declare-fun temp986_157 () (_ BitVec 64))
(declare-fun temp986_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp986_158 () (_ BitVec 64))
(declare-fun temp986_159 () (_ BitVec 64))
(declare-fun temp986_161 () (_ BitVec 64))
(declare-fun temp986_162 () (_ BitVec 64))
(declare-fun temp986_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp986_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp986_164 () (_ BitVec 64))
(declare-fun temp986_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp986_166 () (_ BitVec 64))
(declare-fun temp986_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp986_168 () (_ BitVec 64))
(declare-fun temp986_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_170 () (_ BitVec 64))
(declare-fun temp986_171 () (_ BitVec 64))
(declare-fun temp986_172 () (_ BitVec 64))
(declare-fun temp986_173 () (_ BitVec 64))
(declare-fun temp986_174 () (_ BitVec 64))
(declare-fun temp986_175 () (_ BitVec 64))
(declare-fun temp986_176 () (_ BitVec 64))
(declare-fun temp986_177 () (_ BitVec 64))
(declare-fun temp986_178 () (_ BitVec 64))
(declare-fun temp986_179 () (_ BitVec 64))
(declare-fun temp986_180 () (_ BitVec 64))
(declare-fun temp986_181 () (_ BitVec 64))
(declare-fun temp986_182 () (_ BitVec 64))
(declare-fun temp986_183 () (_ BitVec 64))
(declare-fun temp986_184 () (_ BitVec 64))
(declare-fun temp986_185 () (_ BitVec 64))
(declare-fun temp986_186 () (_ BitVec 64))
(declare-fun temp986_187 () (_ BitVec 64))
(declare-fun temp986_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp986_189 () (_ BitVec 64))
(declare-fun temp986_191 () (_ BitVec 64))
(declare-fun temp986_192 () (_ BitVec 64))
(declare-fun temp986_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp986_193 () (_ BitVec 64))
(declare-fun temp986_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp986_195 () (_ BitVec 64))
(declare-fun temp986_196 () (_ BitVec 64))
(declare-fun temp986_197 () (_ BitVec 64))
(declare-fun temp986_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_199 () (_ BitVec 64))
(declare-fun temp986_200 () (_ BitVec 64))
(declare-fun temp986_201 () (_ BitVec 64))
(declare-fun temp986_202 () (_ BitVec 64))
(declare-fun temp986_203 () (_ BitVec 64))
(declare-fun temp986_204 () (_ BitVec 64))
(declare-fun temp986_205 () (_ BitVec 64))
(declare-fun temp986_206 () (_ BitVec 64))
(declare-fun temp986_207 () (_ BitVec 64))
(declare-fun temp986_208 () (_ BitVec 64))
(declare-fun temp986_209 () (_ BitVec 64))
(declare-fun temp986_210 () (_ BitVec 64))
(declare-fun temp986_211 () (_ BitVec 64))
(declare-fun temp986_212 () (_ BitVec 64))
(declare-fun temp986_213 () (_ BitVec 64))
(declare-fun temp986_214 () (_ BitVec 64))
(declare-fun temp986_215 () (_ BitVec 64))
(declare-fun temp986_216 () (_ BitVec 64))
(declare-fun temp986_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp986_218 () (_ BitVec 64))
(declare-fun temp986_220 () (_ BitVec 64))
(declare-fun temp986_221 () (_ BitVec 64))
(declare-fun temp986_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp986_222 () (_ BitVec 64))
(declare-fun temp986_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp986_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp986_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp986_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp986_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp986_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp986_229 () (_ BitVec 64))
(declare-fun temp986_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp986_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp986_232 () (_ BitVec 64))
(declare-fun temp986_233 () (_ BitVec 64))
(declare-fun temp986_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp986_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp986_236 () (_ BitVec 64))
(declare-fun temp986_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp986_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp986_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp986_240 () (_ BitVec 64))
(assert (= temp986_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp986_1)))
(assert (= temp986_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp986_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_3 #x0000000000000000))
(assert (= var79869 temp986_3))
(assert (= temp986_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp986_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_5 #x0000000000000000))
(assert (= var79914 temp986_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp986_6 #x0000000000000000))
(assert (= temp986_7 temp986_6))
(assert (= temp986_8 (select ARGNAME_padding_NAMEEND_VAL temp986_7)))
(assert (= temp986_9 #x0000000000000001))
(assert (= temp986_10 temp986_9))
(assert (= temp986_11 (select ARGNAME_padding_NAMEEND_VAL temp986_10)))
(assert (= temp986_12 #x0000000000000002))
(assert (= temp986_13 temp986_12))
(assert (= temp986_14 (select ARGNAME_padding_NAMEEND_VAL temp986_13)))
(assert (= temp986_15 #x0000000000000003))
(assert (= temp986_16 temp986_15))
(assert (= temp986_17 (select ARGNAME_padding_NAMEEND_VAL temp986_16)))
(assert (= temp986_18 #x0000000000000004))
(assert (= temp986_19 temp986_18))
(assert (= temp986_20 (select ARGNAME_padding_NAMEEND_VAL temp986_19)))
(assert (= temp986_21 #x0000000000000005))
(assert (= temp986_22 temp986_21))
(assert (= temp986_23 (select ARGNAME_padding_NAMEEND_VAL temp986_22)))
(assert (= temp986_24 #x0000000000000000))
(assert (= temp986_25 #x0000000000000000))
(assert (= temp986_26 temp986_25))
(assert (= temp986_27 (select ARGNAME_padding_NAMEEND_VAL temp986_26)))
(assert (= temp986_28 #x0000000000000000))
(assert (= temp986_29 #x0000000000000001))
(assert (= temp986_30 temp986_29))
(assert (= temp986_31 (select ARGNAME_padding_NAMEEND_VAL temp986_30)))
(assert (= temp986_32 #x0000000000000000))
(assert (= temp986_33 #x0000000000000002))
(assert (= temp986_34 temp986_33))
(assert (= temp986_35 (select ARGNAME_padding_NAMEEND_VAL temp986_34)))
(assert (= temp986_36 #x0000000000000000))
(assert (= temp986_37 #x0000000000000003))
(assert (= temp986_38 temp986_37))
(assert (= temp986_39 (select ARGNAME_padding_NAMEEND_VAL temp986_38)))
(assert (= temp986_40 #x0000000000000000))
(assert (= temp986_41 #x0000000000000004))
(assert (= temp986_42 temp986_41))
(assert (= temp986_43 (select ARGNAME_padding_NAMEEND_VAL temp986_42)))
(assert (= temp986_44 #x0000000000000000))
(assert (= temp986_45 #x0000000000000005))
(assert (= temp986_46 temp986_45))
(assert (= temp986_47 (select ARGNAME_padding_NAMEEND_VAL temp986_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp986_27 temp986_24)
             (bvslt temp986_31 temp986_28)
             (bvslt temp986_35 temp986_32)
             (bvslt temp986_39 temp986_36)
             (bvslt temp986_43 temp986_40)
             (bvslt temp986_47 temp986_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_48 #x0000000000000000))
(assert (= var1322786 temp986_48))
(assert (= temp986_49 #x0000000000000000))
(assert (= temp986_50 temp986_49))
(assert (= temp986_51 (select ARGNAME_output_padding_NAMEEND_VAL temp986_50)))
(assert (= temp986_52 #x0000000000000001))
(assert (= temp986_53 temp986_52))
(assert (= temp986_54 (select ARGNAME_output_padding_NAMEEND_VAL temp986_53)))
(assert (= temp986_55 #x0000000000000002))
(assert (= temp986_56 temp986_55))
(assert (= temp986_57 (select ARGNAME_output_padding_NAMEEND_VAL temp986_56)))
(assert (= temp986_58 #x0000000000000003))
(assert (= temp986_59 temp986_58))
(assert (= temp986_60 (select ARGNAME_output_padding_NAMEEND_VAL temp986_59)))
(assert (= temp986_61 #x0000000000000004))
(assert (= temp986_62 temp986_61))
(assert (= temp986_63 (select ARGNAME_output_padding_NAMEEND_VAL temp986_62)))
(assert (= temp986_64 #x0000000000000005))
(assert (= temp986_65 temp986_64))
(assert (= temp986_66 (select ARGNAME_output_padding_NAMEEND_VAL temp986_65)))
(assert (= temp986_67 #x0000000000000000))
(assert (= temp986_68 #x0000000000000000))
(assert (= temp986_69 temp986_68))
(assert (= temp986_70 (select ARGNAME_output_padding_NAMEEND_VAL temp986_69)))
(assert (= temp986_71 #x0000000000000000))
(assert (= temp986_72 #x0000000000000001))
(assert (= temp986_73 temp986_72))
(assert (= temp986_74 (select ARGNAME_output_padding_NAMEEND_VAL temp986_73)))
(assert (= temp986_75 #x0000000000000000))
(assert (= temp986_76 #x0000000000000002))
(assert (= temp986_77 temp986_76))
(assert (= temp986_78 (select ARGNAME_output_padding_NAMEEND_VAL temp986_77)))
(assert (= temp986_79 #x0000000000000000))
(assert (= temp986_80 #x0000000000000003))
(assert (= temp986_81 temp986_80))
(assert (= temp986_82 (select ARGNAME_output_padding_NAMEEND_VAL temp986_81)))
(assert (= temp986_83 #x0000000000000000))
(assert (= temp986_84 #x0000000000000004))
(assert (= temp986_85 temp986_84))
(assert (= temp986_86 (select ARGNAME_output_padding_NAMEEND_VAL temp986_85)))
(assert (= temp986_87 #x0000000000000000))
(assert (= temp986_88 #x0000000000000005))
(assert (= temp986_89 temp986_88))
(assert (= temp986_90 (select ARGNAME_output_padding_NAMEEND_VAL temp986_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp986_70 temp986_67)
             (bvslt temp986_74 temp986_71)
             (bvslt temp986_78 temp986_75)
             (bvslt temp986_82 temp986_79)
             (bvslt temp986_86 temp986_83)
             (bvslt temp986_90 temp986_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_91 #x0000000000000000))
(assert (= var1322797 temp986_91))
(assert (= temp986_92 #x0000000000000000))
(assert (= temp986_93 temp986_92))
(assert (= temp986_94 (select ARGNAME_stride_NAMEEND_VAL temp986_93)))
(assert (= temp986_95 #x0000000000000001))
(assert (= temp986_96 temp986_95))
(assert (= temp986_97 (select ARGNAME_stride_NAMEEND_VAL temp986_96)))
(assert (= temp986_98 #x0000000000000002))
(assert (= temp986_99 temp986_98))
(assert (= temp986_100 (select ARGNAME_stride_NAMEEND_VAL temp986_99)))
(assert (= temp986_101 #x0000000000000003))
(assert (= temp986_102 temp986_101))
(assert (= temp986_103 (select ARGNAME_stride_NAMEEND_VAL temp986_102)))
(assert (= temp986_104 #x0000000000000004))
(assert (= temp986_105 temp986_104))
(assert (= temp986_106 (select ARGNAME_stride_NAMEEND_VAL temp986_105)))
(assert (= temp986_107 #x0000000000000005))
(assert (= temp986_108 temp986_107))
(assert (= temp986_109 (select ARGNAME_stride_NAMEEND_VAL temp986_108)))
(assert (= temp986_110 #x0000000000000000))
(assert (= temp986_111 #x0000000000000000))
(assert (= temp986_112 temp986_111))
(assert (= temp986_113 (select ARGNAME_stride_NAMEEND_VAL temp986_112)))
(assert (= temp986_114 #x0000000000000000))
(assert (= temp986_115 #x0000000000000001))
(assert (= temp986_116 temp986_115))
(assert (= temp986_117 (select ARGNAME_stride_NAMEEND_VAL temp986_116)))
(assert (= temp986_118 #x0000000000000000))
(assert (= temp986_119 #x0000000000000002))
(assert (= temp986_120 temp986_119))
(assert (= temp986_121 (select ARGNAME_stride_NAMEEND_VAL temp986_120)))
(assert (= temp986_122 #x0000000000000000))
(assert (= temp986_123 #x0000000000000003))
(assert (= temp986_124 temp986_123))
(assert (= temp986_125 (select ARGNAME_stride_NAMEEND_VAL temp986_124)))
(assert (= temp986_126 #x0000000000000000))
(assert (= temp986_127 #x0000000000000004))
(assert (= temp986_128 temp986_127))
(assert (= temp986_129 (select ARGNAME_stride_NAMEEND_VAL temp986_128)))
(assert (= temp986_130 #x0000000000000000))
(assert (= temp986_131 #x0000000000000005))
(assert (= temp986_132 temp986_131))
(assert (= temp986_133 (select ARGNAME_stride_NAMEEND_VAL temp986_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp986_113 temp986_110)
             (bvsle temp986_117 temp986_114)
             (bvsle temp986_121 temp986_118)
             (bvsle temp986_125 temp986_122)
             (bvsle temp986_129 temp986_126)
             (bvsle temp986_133 temp986_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_134 #x0000000000000000))
(assert (= var1322807 temp986_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_135 #x0000000000000001))
(assert (= var1322819 temp986_135))
(assert (= temp986_136 #x0000000000000000))
(assert (= var1310898 temp986_136))
(assert (= temp986_137 #x0000000000000000))
(assert (= temp986_138 temp986_137))
(assert (= temp986_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_138)))
(assert (= temp986_140 #x0000000000000001))
(assert (= temp986_141 temp986_140))
(assert (= temp986_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_141)))
(assert (= temp986_143 #x0000000000000002))
(assert (= temp986_144 temp986_143))
(assert (= temp986_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_144)))
(assert (= temp986_146 #x0000000000000003))
(assert (= temp986_147 temp986_146))
(assert (= temp986_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_147)))
(assert (= temp986_149 #x0000000000000004))
(assert (= temp986_150 temp986_149))
(assert (= temp986_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_150)))
(assert (= temp986_152 #x0000000000000005))
(assert (= temp986_153 temp986_152))
(assert (= temp986_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_153)))
(assert (= temp986_156 var1310898))
(assert (= temp986_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_156)))
(assert (= temp986_155 temp986_157))
(assert (= var1322852
   (ite (bvslt temp986_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_158 #x0000000000000000))
(assert (= var1322852 temp986_158))
(assert (= temp986_159 #x0000000000000000))
(assert (= var1310898 temp986_159))
(assert (= temp986_161 var1310898))
(assert (= temp986_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_161)))
(assert (= temp986_160 temp986_162))
(assert (= var1322874 (bvsmod temp986_160 ARGNAME_groups_NAMEEND)))
(assert (= temp986_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp986_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_164 #x0000000000000001))
(assert (= var1322875 temp986_164))
(assert (= temp986_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp986_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_166 #x0000000000000001))
(assert (= var1322895 temp986_166))
(assert (= temp986_167 #x0000000000000001))
(assert (= var1311786 temp986_167))
(assert (= temp986_168 #x0000000000000000))
(assert (= temp986_169 temp986_168))
(assert (= temp986_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_169)))
(assert (= temp986_171 #x0000000000000001))
(assert (= temp986_172 temp986_171))
(assert (= temp986_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_172)))
(assert (= temp986_174 #x0000000000000002))
(assert (= temp986_175 temp986_174))
(assert (= temp986_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_175)))
(assert (= temp986_177 #x0000000000000003))
(assert (= temp986_178 temp986_177))
(assert (= temp986_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_178)))
(assert (= temp986_180 #x0000000000000004))
(assert (= temp986_181 temp986_180))
(assert (= temp986_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_181)))
(assert (= temp986_183 #x0000000000000005))
(assert (= temp986_184 temp986_183))
(assert (= temp986_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_184)))
(assert (= temp986_186 #x0000000000000000))
(assert (= temp986_187
   (ite (bvslt var1311786 temp986_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp986_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_187)))
(assert (= var1322903 temp986_188))
(assert (bvslt (ite (bvslt var1311786 temp986_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp986_189 #x0000000000000001))
(assert (= var1311786 temp986_189))
(assert (= temp986_191 var1311786))
(assert (= temp986_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_191)))
(assert (= temp986_190 temp986_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp986_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_193 #x0000000000000001))
(assert (= var1322908 temp986_193))
(assert (= temp986_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp986_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_195 #x0000000000000001))
(assert (= var1322975 temp986_195))
(assert (= temp986_196 #x0000000000000000))
(assert (= var1310898 temp986_196))
(assert (= temp986_197 #x0000000000000000))
(assert (= temp986_198 temp986_197))
(assert (= temp986_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp986_198)))
(assert (= temp986_200 #x0000000000000001))
(assert (= temp986_201 temp986_200))
(assert (= temp986_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp986_201)))
(assert (= temp986_203 #x0000000000000002))
(assert (= temp986_204 temp986_203))
(assert (= temp986_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp986_204)))
(assert (= temp986_206 #x0000000000000003))
(assert (= temp986_207 temp986_206))
(assert (= temp986_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp986_207)))
(assert (= temp986_209 #x0000000000000004))
(assert (= temp986_210 temp986_209))
(assert (= temp986_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp986_210)))
(assert (= temp986_212 #x0000000000000005))
(assert (= temp986_213 temp986_212))
(assert (= temp986_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp986_213)))
(assert (= temp986_215 #x0000000000000000))
(assert (= temp986_216
   (ite (bvslt var1310898 temp986_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp986_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp986_216)))
(assert (= var1322977 temp986_217))
(assert (bvslt (ite (bvslt var1310898 temp986_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp986_218 #x0000000000000000))
(assert (= var1310898 temp986_218))
(assert (= temp986_220 var1310898))
(assert (= temp986_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_220)))
(assert (= temp986_219 temp986_221))
(assert (= var1322980
   (ite (= var1322977 temp986_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_222 #x0000000000000001))
(assert (= var1322980 temp986_222))
(assert (= temp986_223 #x0000000000000002))
(assert (= var1848169 temp986_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp986_225 #x0000000000000001))
(assert (= var1323065 temp986_225))
(assert (= temp986_226 #x0000000000000001))
(assert (= var3486735 temp986_226))
(assert (= temp986_227 #x0000000000000001))
(assert (= var3814415 temp986_227))
(assert (= temp986_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp986_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_229 #x0000000000000001))
(assert (= var79986 temp986_229))
(assert (= temp986_230 #x0000000000000001))
(assert (= var80116 temp986_230))
(assert (= var4796905 var80116))
(assert (= temp986_231 #x0000000000000000))
(assert (= var4784306 temp986_231))
(assert (= temp986_232 #x0000000000000000))
(assert (= temp986_233
   (ite (bvslt var4784306 temp986_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp986_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_233)))
(assert (= var4796924 temp986_234))
(assert (bvslt (ite (bvslt var4784306 temp986_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp986_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp986_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_236 #x0000000000000001))
(assert (= var4796925 temp986_236))
(assert (= temp986_237 #x0000000000000000))
(assert (= var4996927 temp986_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp986_238 #x0000000000000002))
(assert (= var5125763 temp986_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_239 #x0000000000000000))
(assert (= var5191324 temp986_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp986_240 #x0000000000000001))
(assert (= var79986 temp986_240))
(model-add temp986_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp986_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp986_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






