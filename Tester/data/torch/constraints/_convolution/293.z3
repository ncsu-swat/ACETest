(declare-fun temp389_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp389_2 () (_ BitVec 64))
(declare-fun temp389_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp389_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp389_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp389_6 () (_ BitVec 64))
(declare-fun temp389_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_8 () (_ BitVec 64))
(declare-fun temp389_9 () (_ BitVec 64))
(declare-fun temp389_10 () (_ BitVec 64))
(declare-fun temp389_11 () (_ BitVec 64))
(declare-fun temp389_12 () (_ BitVec 64))
(declare-fun temp389_13 () (_ BitVec 64))
(declare-fun temp389_14 () (_ BitVec 64))
(declare-fun temp389_15 () (_ BitVec 64))
(declare-fun temp389_16 () (_ BitVec 64))
(declare-fun temp389_17 () (_ BitVec 64))
(declare-fun temp389_18 () (_ BitVec 64))
(declare-fun temp389_19 () (_ BitVec 64))
(declare-fun temp389_20 () (_ BitVec 64))
(declare-fun temp389_21 () (_ BitVec 64))
(declare-fun temp389_22 () (_ BitVec 64))
(declare-fun temp389_23 () (_ BitVec 64))
(declare-fun temp389_24 () (_ BitVec 64))
(declare-fun temp389_25 () (_ BitVec 64))
(declare-fun temp389_26 () (_ BitVec 64))
(declare-fun temp389_27 () (_ BitVec 64))
(declare-fun temp389_28 () (_ BitVec 64))
(declare-fun temp389_29 () (_ BitVec 64))
(declare-fun temp389_30 () (_ BitVec 64))
(declare-fun temp389_31 () (_ BitVec 64))
(declare-fun temp389_32 () (_ BitVec 64))
(declare-fun temp389_33 () (_ BitVec 64))
(declare-fun temp389_34 () (_ BitVec 64))
(declare-fun temp389_35 () (_ BitVec 64))
(declare-fun temp389_36 () (_ BitVec 64))
(declare-fun temp389_37 () (_ BitVec 64))
(declare-fun temp389_38 () (_ BitVec 64))
(declare-fun temp389_39 () (_ BitVec 64))
(declare-fun temp389_40 () (_ BitVec 64))
(declare-fun temp389_41 () (_ BitVec 64))
(declare-fun temp389_42 () (_ BitVec 64))
(declare-fun temp389_43 () (_ BitVec 64))
(declare-fun temp389_44 () (_ BitVec 64))
(declare-fun temp389_45 () (_ BitVec 64))
(declare-fun temp389_46 () (_ BitVec 64))
(declare-fun temp389_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp389_48 () (_ BitVec 64))
(declare-fun temp389_49 () (_ BitVec 64))
(declare-fun temp389_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_51 () (_ BitVec 64))
(declare-fun temp389_52 () (_ BitVec 64))
(declare-fun temp389_53 () (_ BitVec 64))
(declare-fun temp389_54 () (_ BitVec 64))
(declare-fun temp389_55 () (_ BitVec 64))
(declare-fun temp389_56 () (_ BitVec 64))
(declare-fun temp389_57 () (_ BitVec 64))
(declare-fun temp389_58 () (_ BitVec 64))
(declare-fun temp389_59 () (_ BitVec 64))
(declare-fun temp389_60 () (_ BitVec 64))
(declare-fun temp389_61 () (_ BitVec 64))
(declare-fun temp389_62 () (_ BitVec 64))
(declare-fun temp389_63 () (_ BitVec 64))
(declare-fun temp389_64 () (_ BitVec 64))
(declare-fun temp389_65 () (_ BitVec 64))
(declare-fun temp389_66 () (_ BitVec 64))
(declare-fun temp389_67 () (_ BitVec 64))
(declare-fun temp389_68 () (_ BitVec 64))
(declare-fun temp389_69 () (_ BitVec 64))
(declare-fun temp389_70 () (_ BitVec 64))
(declare-fun temp389_71 () (_ BitVec 64))
(declare-fun temp389_72 () (_ BitVec 64))
(declare-fun temp389_73 () (_ BitVec 64))
(declare-fun temp389_74 () (_ BitVec 64))
(declare-fun temp389_75 () (_ BitVec 64))
(declare-fun temp389_76 () (_ BitVec 64))
(declare-fun temp389_77 () (_ BitVec 64))
(declare-fun temp389_78 () (_ BitVec 64))
(declare-fun temp389_79 () (_ BitVec 64))
(declare-fun temp389_80 () (_ BitVec 64))
(declare-fun temp389_81 () (_ BitVec 64))
(declare-fun temp389_82 () (_ BitVec 64))
(declare-fun temp389_83 () (_ BitVec 64))
(declare-fun temp389_84 () (_ BitVec 64))
(declare-fun temp389_85 () (_ BitVec 64))
(declare-fun temp389_86 () (_ BitVec 64))
(declare-fun temp389_87 () (_ BitVec 64))
(declare-fun temp389_88 () (_ BitVec 64))
(declare-fun temp389_89 () (_ BitVec 64))
(declare-fun temp389_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp389_91 () (_ BitVec 64))
(declare-fun temp389_92 () (_ BitVec 64))
(declare-fun temp389_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_94 () (_ BitVec 64))
(declare-fun temp389_95 () (_ BitVec 64))
(declare-fun temp389_96 () (_ BitVec 64))
(declare-fun temp389_97 () (_ BitVec 64))
(declare-fun temp389_98 () (_ BitVec 64))
(declare-fun temp389_99 () (_ BitVec 64))
(declare-fun temp389_100 () (_ BitVec 64))
(declare-fun temp389_101 () (_ BitVec 64))
(declare-fun temp389_102 () (_ BitVec 64))
(declare-fun temp389_103 () (_ BitVec 64))
(declare-fun temp389_104 () (_ BitVec 64))
(declare-fun temp389_105 () (_ BitVec 64))
(declare-fun temp389_106 () (_ BitVec 64))
(declare-fun temp389_107 () (_ BitVec 64))
(declare-fun temp389_108 () (_ BitVec 64))
(declare-fun temp389_109 () (_ BitVec 64))
(declare-fun temp389_110 () (_ BitVec 64))
(declare-fun temp389_111 () (_ BitVec 64))
(declare-fun temp389_112 () (_ BitVec 64))
(declare-fun temp389_113 () (_ BitVec 64))
(declare-fun temp389_114 () (_ BitVec 64))
(declare-fun temp389_115 () (_ BitVec 64))
(declare-fun temp389_116 () (_ BitVec 64))
(declare-fun temp389_117 () (_ BitVec 64))
(declare-fun temp389_118 () (_ BitVec 64))
(declare-fun temp389_119 () (_ BitVec 64))
(declare-fun temp389_120 () (_ BitVec 64))
(declare-fun temp389_121 () (_ BitVec 64))
(declare-fun temp389_122 () (_ BitVec 64))
(declare-fun temp389_123 () (_ BitVec 64))
(declare-fun temp389_124 () (_ BitVec 64))
(declare-fun temp389_125 () (_ BitVec 64))
(declare-fun temp389_126 () (_ BitVec 64))
(declare-fun temp389_127 () (_ BitVec 64))
(declare-fun temp389_128 () (_ BitVec 64))
(declare-fun temp389_129 () (_ BitVec 64))
(declare-fun temp389_130 () (_ BitVec 64))
(declare-fun temp389_131 () (_ BitVec 64))
(declare-fun temp389_132 () (_ BitVec 64))
(declare-fun temp389_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp389_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp389_135 () (_ BitVec 64))
(declare-fun temp389_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp389_137 () (_ BitVec 64))
(declare-fun temp389_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_139 () (_ BitVec 64))
(declare-fun temp389_140 () (_ BitVec 64))
(declare-fun temp389_141 () (_ BitVec 64))
(declare-fun temp389_142 () (_ BitVec 64))
(declare-fun temp389_143 () (_ BitVec 64))
(declare-fun temp389_144 () (_ BitVec 64))
(declare-fun temp389_145 () (_ BitVec 64))
(declare-fun temp389_146 () (_ BitVec 64))
(declare-fun temp389_147 () (_ BitVec 64))
(declare-fun temp389_148 () (_ BitVec 64))
(declare-fun temp389_149 () (_ BitVec 64))
(declare-fun temp389_150 () (_ BitVec 64))
(declare-fun temp389_151 () (_ BitVec 64))
(declare-fun temp389_152 () (_ BitVec 64))
(declare-fun temp389_153 () (_ BitVec 64))
(declare-fun temp389_154 () (_ BitVec 64))
(declare-fun temp389_156 () (_ BitVec 64))
(declare-fun temp389_157 () (_ BitVec 64))
(declare-fun temp389_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp389_158 () (_ BitVec 64))
(declare-fun temp389_159 () (_ BitVec 64))
(declare-fun temp389_161 () (_ BitVec 64))
(declare-fun temp389_162 () (_ BitVec 64))
(declare-fun temp389_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp389_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp389_164 () (_ BitVec 64))
(declare-fun temp389_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp389_166 () (_ BitVec 64))
(declare-fun temp389_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp389_168 () (_ BitVec 64))
(declare-fun temp389_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_170 () (_ BitVec 64))
(declare-fun temp389_171 () (_ BitVec 64))
(declare-fun temp389_172 () (_ BitVec 64))
(declare-fun temp389_173 () (_ BitVec 64))
(declare-fun temp389_174 () (_ BitVec 64))
(declare-fun temp389_175 () (_ BitVec 64))
(declare-fun temp389_176 () (_ BitVec 64))
(declare-fun temp389_177 () (_ BitVec 64))
(declare-fun temp389_178 () (_ BitVec 64))
(declare-fun temp389_179 () (_ BitVec 64))
(declare-fun temp389_180 () (_ BitVec 64))
(declare-fun temp389_181 () (_ BitVec 64))
(declare-fun temp389_182 () (_ BitVec 64))
(declare-fun temp389_183 () (_ BitVec 64))
(declare-fun temp389_184 () (_ BitVec 64))
(declare-fun temp389_185 () (_ BitVec 64))
(declare-fun temp389_186 () (_ BitVec 64))
(declare-fun temp389_187 () (_ BitVec 64))
(declare-fun temp389_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp389_189 () (_ BitVec 64))
(declare-fun temp389_191 () (_ BitVec 64))
(declare-fun temp389_192 () (_ BitVec 64))
(declare-fun temp389_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp389_193 () (_ BitVec 64))
(declare-fun temp389_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp389_195 () (_ BitVec 64))
(declare-fun temp389_196 () (_ BitVec 64))
(declare-fun temp389_197 () (_ BitVec 64))
(declare-fun temp389_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_199 () (_ BitVec 64))
(declare-fun temp389_200 () (_ BitVec 64))
(declare-fun temp389_201 () (_ BitVec 64))
(declare-fun temp389_202 () (_ BitVec 64))
(declare-fun temp389_203 () (_ BitVec 64))
(declare-fun temp389_204 () (_ BitVec 64))
(declare-fun temp389_205 () (_ BitVec 64))
(declare-fun temp389_206 () (_ BitVec 64))
(declare-fun temp389_207 () (_ BitVec 64))
(declare-fun temp389_208 () (_ BitVec 64))
(declare-fun temp389_209 () (_ BitVec 64))
(declare-fun temp389_210 () (_ BitVec 64))
(declare-fun temp389_211 () (_ BitVec 64))
(declare-fun temp389_212 () (_ BitVec 64))
(declare-fun temp389_213 () (_ BitVec 64))
(declare-fun temp389_214 () (_ BitVec 64))
(declare-fun temp389_215 () (_ BitVec 64))
(declare-fun temp389_216 () (_ BitVec 64))
(declare-fun temp389_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp389_218 () (_ BitVec 64))
(declare-fun temp389_220 () (_ BitVec 64))
(declare-fun temp389_221 () (_ BitVec 64))
(declare-fun temp389_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp389_222 () (_ BitVec 64))
(declare-fun temp389_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp389_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp389_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp389_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp389_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp389_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp389_229 () (_ BitVec 64))
(declare-fun temp389_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp389_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp389_232 () (_ BitVec 64))
(declare-fun temp389_233 () (_ BitVec 64))
(declare-fun temp389_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp389_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp389_236 () (_ BitVec 64))
(declare-fun temp389_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp389_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp389_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp389_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp389_241 () (_ BitVec 64))
(assert (= temp389_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp389_1)))
(assert (= temp389_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp389_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_3 #x0000000000000000))
(assert (= var79869 temp389_3))
(assert (= temp389_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp389_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_5 #x0000000000000000))
(assert (= var79914 temp389_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp389_6 #x0000000000000000))
(assert (= temp389_7 temp389_6))
(assert (= temp389_8 (select ARGNAME_padding_NAMEEND_VAL temp389_7)))
(assert (= temp389_9 #x0000000000000001))
(assert (= temp389_10 temp389_9))
(assert (= temp389_11 (select ARGNAME_padding_NAMEEND_VAL temp389_10)))
(assert (= temp389_12 #x0000000000000002))
(assert (= temp389_13 temp389_12))
(assert (= temp389_14 (select ARGNAME_padding_NAMEEND_VAL temp389_13)))
(assert (= temp389_15 #x0000000000000003))
(assert (= temp389_16 temp389_15))
(assert (= temp389_17 (select ARGNAME_padding_NAMEEND_VAL temp389_16)))
(assert (= temp389_18 #x0000000000000004))
(assert (= temp389_19 temp389_18))
(assert (= temp389_20 (select ARGNAME_padding_NAMEEND_VAL temp389_19)))
(assert (= temp389_21 #x0000000000000005))
(assert (= temp389_22 temp389_21))
(assert (= temp389_23 (select ARGNAME_padding_NAMEEND_VAL temp389_22)))
(assert (= temp389_24 #x0000000000000000))
(assert (= temp389_25 #x0000000000000000))
(assert (= temp389_26 temp389_25))
(assert (= temp389_27 (select ARGNAME_padding_NAMEEND_VAL temp389_26)))
(assert (= temp389_28 #x0000000000000000))
(assert (= temp389_29 #x0000000000000001))
(assert (= temp389_30 temp389_29))
(assert (= temp389_31 (select ARGNAME_padding_NAMEEND_VAL temp389_30)))
(assert (= temp389_32 #x0000000000000000))
(assert (= temp389_33 #x0000000000000002))
(assert (= temp389_34 temp389_33))
(assert (= temp389_35 (select ARGNAME_padding_NAMEEND_VAL temp389_34)))
(assert (= temp389_36 #x0000000000000000))
(assert (= temp389_37 #x0000000000000003))
(assert (= temp389_38 temp389_37))
(assert (= temp389_39 (select ARGNAME_padding_NAMEEND_VAL temp389_38)))
(assert (= temp389_40 #x0000000000000000))
(assert (= temp389_41 #x0000000000000004))
(assert (= temp389_42 temp389_41))
(assert (= temp389_43 (select ARGNAME_padding_NAMEEND_VAL temp389_42)))
(assert (= temp389_44 #x0000000000000000))
(assert (= temp389_45 #x0000000000000005))
(assert (= temp389_46 temp389_45))
(assert (= temp389_47 (select ARGNAME_padding_NAMEEND_VAL temp389_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp389_27 temp389_24)
             (bvslt temp389_31 temp389_28)
             (bvslt temp389_35 temp389_32)
             (bvslt temp389_39 temp389_36)
             (bvslt temp389_43 temp389_40)
             (bvslt temp389_47 temp389_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_48 #x0000000000000000))
(assert (= var1322786 temp389_48))
(assert (= temp389_49 #x0000000000000000))
(assert (= temp389_50 temp389_49))
(assert (= temp389_51 (select ARGNAME_output_padding_NAMEEND_VAL temp389_50)))
(assert (= temp389_52 #x0000000000000001))
(assert (= temp389_53 temp389_52))
(assert (= temp389_54 (select ARGNAME_output_padding_NAMEEND_VAL temp389_53)))
(assert (= temp389_55 #x0000000000000002))
(assert (= temp389_56 temp389_55))
(assert (= temp389_57 (select ARGNAME_output_padding_NAMEEND_VAL temp389_56)))
(assert (= temp389_58 #x0000000000000003))
(assert (= temp389_59 temp389_58))
(assert (= temp389_60 (select ARGNAME_output_padding_NAMEEND_VAL temp389_59)))
(assert (= temp389_61 #x0000000000000004))
(assert (= temp389_62 temp389_61))
(assert (= temp389_63 (select ARGNAME_output_padding_NAMEEND_VAL temp389_62)))
(assert (= temp389_64 #x0000000000000005))
(assert (= temp389_65 temp389_64))
(assert (= temp389_66 (select ARGNAME_output_padding_NAMEEND_VAL temp389_65)))
(assert (= temp389_67 #x0000000000000000))
(assert (= temp389_68 #x0000000000000000))
(assert (= temp389_69 temp389_68))
(assert (= temp389_70 (select ARGNAME_output_padding_NAMEEND_VAL temp389_69)))
(assert (= temp389_71 #x0000000000000000))
(assert (= temp389_72 #x0000000000000001))
(assert (= temp389_73 temp389_72))
(assert (= temp389_74 (select ARGNAME_output_padding_NAMEEND_VAL temp389_73)))
(assert (= temp389_75 #x0000000000000000))
(assert (= temp389_76 #x0000000000000002))
(assert (= temp389_77 temp389_76))
(assert (= temp389_78 (select ARGNAME_output_padding_NAMEEND_VAL temp389_77)))
(assert (= temp389_79 #x0000000000000000))
(assert (= temp389_80 #x0000000000000003))
(assert (= temp389_81 temp389_80))
(assert (= temp389_82 (select ARGNAME_output_padding_NAMEEND_VAL temp389_81)))
(assert (= temp389_83 #x0000000000000000))
(assert (= temp389_84 #x0000000000000004))
(assert (= temp389_85 temp389_84))
(assert (= temp389_86 (select ARGNAME_output_padding_NAMEEND_VAL temp389_85)))
(assert (= temp389_87 #x0000000000000000))
(assert (= temp389_88 #x0000000000000005))
(assert (= temp389_89 temp389_88))
(assert (= temp389_90 (select ARGNAME_output_padding_NAMEEND_VAL temp389_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp389_70 temp389_67)
             (bvslt temp389_74 temp389_71)
             (bvslt temp389_78 temp389_75)
             (bvslt temp389_82 temp389_79)
             (bvslt temp389_86 temp389_83)
             (bvslt temp389_90 temp389_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_91 #x0000000000000000))
(assert (= var1322797 temp389_91))
(assert (= temp389_92 #x0000000000000000))
(assert (= temp389_93 temp389_92))
(assert (= temp389_94 (select ARGNAME_stride_NAMEEND_VAL temp389_93)))
(assert (= temp389_95 #x0000000000000001))
(assert (= temp389_96 temp389_95))
(assert (= temp389_97 (select ARGNAME_stride_NAMEEND_VAL temp389_96)))
(assert (= temp389_98 #x0000000000000002))
(assert (= temp389_99 temp389_98))
(assert (= temp389_100 (select ARGNAME_stride_NAMEEND_VAL temp389_99)))
(assert (= temp389_101 #x0000000000000003))
(assert (= temp389_102 temp389_101))
(assert (= temp389_103 (select ARGNAME_stride_NAMEEND_VAL temp389_102)))
(assert (= temp389_104 #x0000000000000004))
(assert (= temp389_105 temp389_104))
(assert (= temp389_106 (select ARGNAME_stride_NAMEEND_VAL temp389_105)))
(assert (= temp389_107 #x0000000000000005))
(assert (= temp389_108 temp389_107))
(assert (= temp389_109 (select ARGNAME_stride_NAMEEND_VAL temp389_108)))
(assert (= temp389_110 #x0000000000000000))
(assert (= temp389_111 #x0000000000000000))
(assert (= temp389_112 temp389_111))
(assert (= temp389_113 (select ARGNAME_stride_NAMEEND_VAL temp389_112)))
(assert (= temp389_114 #x0000000000000000))
(assert (= temp389_115 #x0000000000000001))
(assert (= temp389_116 temp389_115))
(assert (= temp389_117 (select ARGNAME_stride_NAMEEND_VAL temp389_116)))
(assert (= temp389_118 #x0000000000000000))
(assert (= temp389_119 #x0000000000000002))
(assert (= temp389_120 temp389_119))
(assert (= temp389_121 (select ARGNAME_stride_NAMEEND_VAL temp389_120)))
(assert (= temp389_122 #x0000000000000000))
(assert (= temp389_123 #x0000000000000003))
(assert (= temp389_124 temp389_123))
(assert (= temp389_125 (select ARGNAME_stride_NAMEEND_VAL temp389_124)))
(assert (= temp389_126 #x0000000000000000))
(assert (= temp389_127 #x0000000000000004))
(assert (= temp389_128 temp389_127))
(assert (= temp389_129 (select ARGNAME_stride_NAMEEND_VAL temp389_128)))
(assert (= temp389_130 #x0000000000000000))
(assert (= temp389_131 #x0000000000000005))
(assert (= temp389_132 temp389_131))
(assert (= temp389_133 (select ARGNAME_stride_NAMEEND_VAL temp389_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp389_113 temp389_110)
             (bvsle temp389_117 temp389_114)
             (bvsle temp389_121 temp389_118)
             (bvsle temp389_125 temp389_122)
             (bvsle temp389_129 temp389_126)
             (bvsle temp389_133 temp389_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_134 #x0000000000000000))
(assert (= var1322807 temp389_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_135 #x0000000000000001))
(assert (= var1322819 temp389_135))
(assert (= temp389_136 #x0000000000000000))
(assert (= var1310898 temp389_136))
(assert (= temp389_137 #x0000000000000000))
(assert (= temp389_138 temp389_137))
(assert (= temp389_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_138)))
(assert (= temp389_140 #x0000000000000001))
(assert (= temp389_141 temp389_140))
(assert (= temp389_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_141)))
(assert (= temp389_143 #x0000000000000002))
(assert (= temp389_144 temp389_143))
(assert (= temp389_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_144)))
(assert (= temp389_146 #x0000000000000003))
(assert (= temp389_147 temp389_146))
(assert (= temp389_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_147)))
(assert (= temp389_149 #x0000000000000004))
(assert (= temp389_150 temp389_149))
(assert (= temp389_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_150)))
(assert (= temp389_152 #x0000000000000005))
(assert (= temp389_153 temp389_152))
(assert (= temp389_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_153)))
(assert (= temp389_156 var1310898))
(assert (= temp389_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_156)))
(assert (= temp389_155 temp389_157))
(assert (= var1322852
   (ite (bvslt temp389_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_158 #x0000000000000000))
(assert (= var1322852 temp389_158))
(assert (= temp389_159 #x0000000000000000))
(assert (= var1310898 temp389_159))
(assert (= temp389_161 var1310898))
(assert (= temp389_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_161)))
(assert (= temp389_160 temp389_162))
(assert (= var1322874 (bvsmod temp389_160 ARGNAME_groups_NAMEEND)))
(assert (= temp389_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp389_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_164 #x0000000000000001))
(assert (= var1322875 temp389_164))
(assert (= temp389_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp389_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_166 #x0000000000000001))
(assert (= var1322895 temp389_166))
(assert (= temp389_167 #x0000000000000001))
(assert (= var1311786 temp389_167))
(assert (= temp389_168 #x0000000000000000))
(assert (= temp389_169 temp389_168))
(assert (= temp389_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_169)))
(assert (= temp389_171 #x0000000000000001))
(assert (= temp389_172 temp389_171))
(assert (= temp389_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_172)))
(assert (= temp389_174 #x0000000000000002))
(assert (= temp389_175 temp389_174))
(assert (= temp389_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_175)))
(assert (= temp389_177 #x0000000000000003))
(assert (= temp389_178 temp389_177))
(assert (= temp389_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_178)))
(assert (= temp389_180 #x0000000000000004))
(assert (= temp389_181 temp389_180))
(assert (= temp389_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_181)))
(assert (= temp389_183 #x0000000000000005))
(assert (= temp389_184 temp389_183))
(assert (= temp389_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_184)))
(assert (= temp389_186 #x0000000000000000))
(assert (= temp389_187
   (ite (bvslt var1311786 temp389_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp389_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_187)))
(assert (= var1322903 temp389_188))
(assert (bvslt (ite (bvslt var1311786 temp389_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp389_189 #x0000000000000001))
(assert (= var1311786 temp389_189))
(assert (= temp389_191 var1311786))
(assert (= temp389_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_191)))
(assert (= temp389_190 temp389_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp389_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_193 #x0000000000000001))
(assert (= var1322908 temp389_193))
(assert (= temp389_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp389_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_195 #x0000000000000001))
(assert (= var1322975 temp389_195))
(assert (= temp389_196 #x0000000000000000))
(assert (= var1310898 temp389_196))
(assert (= temp389_197 #x0000000000000000))
(assert (= temp389_198 temp389_197))
(assert (= temp389_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp389_198)))
(assert (= temp389_200 #x0000000000000001))
(assert (= temp389_201 temp389_200))
(assert (= temp389_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp389_201)))
(assert (= temp389_203 #x0000000000000002))
(assert (= temp389_204 temp389_203))
(assert (= temp389_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp389_204)))
(assert (= temp389_206 #x0000000000000003))
(assert (= temp389_207 temp389_206))
(assert (= temp389_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp389_207)))
(assert (= temp389_209 #x0000000000000004))
(assert (= temp389_210 temp389_209))
(assert (= temp389_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp389_210)))
(assert (= temp389_212 #x0000000000000005))
(assert (= temp389_213 temp389_212))
(assert (= temp389_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp389_213)))
(assert (= temp389_215 #x0000000000000000))
(assert (= temp389_216
   (ite (bvslt var1310898 temp389_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp389_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp389_216)))
(assert (= var1322977 temp389_217))
(assert (bvslt (ite (bvslt var1310898 temp389_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp389_218 #x0000000000000000))
(assert (= var1310898 temp389_218))
(assert (= temp389_220 var1310898))
(assert (= temp389_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_220)))
(assert (= temp389_219 temp389_221))
(assert (= var1322980
   (ite (= var1322977 temp389_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_222 #x0000000000000001))
(assert (= var1322980 temp389_222))
(assert (= temp389_223 #x0000000000000002))
(assert (= var1848169 temp389_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp389_225 #x0000000000000001))
(assert (= var1323065 temp389_225))
(assert (= temp389_226 #x0000000000000001))
(assert (= var3486735 temp389_226))
(assert (= temp389_227 #x0000000000000001))
(assert (= var3814415 temp389_227))
(assert (= temp389_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp389_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_229 #x0000000000000001))
(assert (= var79986 temp389_229))
(assert (= temp389_230 #x0000000000000001))
(assert (= var80116 temp389_230))
(assert (= var4796905 var80116))
(assert (= temp389_231 #x0000000000000000))
(assert (= var4784306 temp389_231))
(assert (= temp389_232 #x0000000000000000))
(assert (= temp389_233
   (ite (bvslt var4784306 temp389_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp389_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_233)))
(assert (= var4796924 temp389_234))
(assert (bvslt (ite (bvslt var4784306 temp389_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp389_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp389_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_236 #x0000000000000001))
(assert (= var4796925 temp389_236))
(assert (= temp389_237 #x0000000000000000))
(assert (= var4996927 temp389_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp389_238 #x0000000000000002))
(assert (= var5125763 temp389_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_239 #x0000000000000000))
(assert (= var5191324 temp389_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp389_240 #x0000000000000000))
(assert (= var6631824 temp389_240))
(assert (= temp389_241 #x0000000000000001))
(assert (= var79986 temp389_241))
(model-add temp389_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp389_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp389_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






