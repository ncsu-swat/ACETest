(declare-fun temp205_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp205_2 () (_ BitVec 64))
(declare-fun temp205_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp205_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp205_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp205_6 () (_ BitVec 64))
(declare-fun temp205_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp205_8 () (_ BitVec 64))
(declare-fun temp205_9 () (_ BitVec 64))
(declare-fun temp205_10 () (_ BitVec 64))
(declare-fun temp205_11 () (_ BitVec 64))
(declare-fun temp205_12 () (_ BitVec 64))
(declare-fun temp205_13 () (_ BitVec 64))
(declare-fun temp205_14 () (_ BitVec 64))
(declare-fun temp205_15 () (_ BitVec 64))
(declare-fun temp205_16 () (_ BitVec 64))
(declare-fun temp205_17 () (_ BitVec 64))
(declare-fun temp205_18 () (_ BitVec 64))
(declare-fun temp205_19 () (_ BitVec 64))
(declare-fun temp205_20 () (_ BitVec 64))
(declare-fun temp205_21 () (_ BitVec 64))
(declare-fun temp205_22 () (_ BitVec 64))
(declare-fun temp205_23 () (_ BitVec 64))
(declare-fun temp205_24 () (_ BitVec 64))
(declare-fun temp205_25 () (_ BitVec 64))
(declare-fun temp205_26 () (_ BitVec 64))
(declare-fun temp205_27 () (_ BitVec 64))
(declare-fun temp205_28 () (_ BitVec 64))
(declare-fun temp205_29 () (_ BitVec 64))
(declare-fun temp205_30 () (_ BitVec 64))
(declare-fun temp205_31 () (_ BitVec 64))
(declare-fun temp205_32 () (_ BitVec 64))
(declare-fun temp205_33 () (_ BitVec 64))
(declare-fun temp205_34 () (_ BitVec 64))
(declare-fun temp205_35 () (_ BitVec 64))
(declare-fun temp205_36 () (_ BitVec 64))
(declare-fun temp205_37 () (_ BitVec 64))
(declare-fun temp205_38 () (_ BitVec 64))
(declare-fun temp205_39 () (_ BitVec 64))
(declare-fun temp205_40 () (_ BitVec 64))
(declare-fun temp205_41 () (_ BitVec 64))
(declare-fun temp205_42 () (_ BitVec 64))
(declare-fun temp205_43 () (_ BitVec 64))
(declare-fun temp205_44 () (_ BitVec 64))
(declare-fun temp205_45 () (_ BitVec 64))
(declare-fun temp205_46 () (_ BitVec 64))
(declare-fun temp205_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp205_48 () (_ BitVec 64))
(declare-fun temp205_49 () (_ BitVec 64))
(declare-fun temp205_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp205_51 () (_ BitVec 64))
(declare-fun temp205_52 () (_ BitVec 64))
(declare-fun temp205_53 () (_ BitVec 64))
(declare-fun temp205_54 () (_ BitVec 64))
(declare-fun temp205_55 () (_ BitVec 64))
(declare-fun temp205_56 () (_ BitVec 64))
(declare-fun temp205_57 () (_ BitVec 64))
(declare-fun temp205_58 () (_ BitVec 64))
(declare-fun temp205_59 () (_ BitVec 64))
(declare-fun temp205_60 () (_ BitVec 64))
(declare-fun temp205_61 () (_ BitVec 64))
(declare-fun temp205_62 () (_ BitVec 64))
(declare-fun temp205_63 () (_ BitVec 64))
(declare-fun temp205_64 () (_ BitVec 64))
(declare-fun temp205_65 () (_ BitVec 64))
(declare-fun temp205_66 () (_ BitVec 64))
(declare-fun temp205_67 () (_ BitVec 64))
(declare-fun temp205_68 () (_ BitVec 64))
(declare-fun temp205_69 () (_ BitVec 64))
(declare-fun temp205_70 () (_ BitVec 64))
(declare-fun temp205_71 () (_ BitVec 64))
(declare-fun temp205_72 () (_ BitVec 64))
(declare-fun temp205_73 () (_ BitVec 64))
(declare-fun temp205_74 () (_ BitVec 64))
(declare-fun temp205_75 () (_ BitVec 64))
(declare-fun temp205_76 () (_ BitVec 64))
(declare-fun temp205_77 () (_ BitVec 64))
(declare-fun temp205_78 () (_ BitVec 64))
(declare-fun temp205_79 () (_ BitVec 64))
(declare-fun temp205_80 () (_ BitVec 64))
(declare-fun temp205_81 () (_ BitVec 64))
(declare-fun temp205_82 () (_ BitVec 64))
(declare-fun temp205_83 () (_ BitVec 64))
(declare-fun temp205_84 () (_ BitVec 64))
(declare-fun temp205_85 () (_ BitVec 64))
(declare-fun temp205_86 () (_ BitVec 64))
(declare-fun temp205_87 () (_ BitVec 64))
(declare-fun temp205_88 () (_ BitVec 64))
(declare-fun temp205_89 () (_ BitVec 64))
(declare-fun temp205_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp205_91 () (_ BitVec 64))
(declare-fun temp205_92 () (_ BitVec 64))
(declare-fun temp205_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp205_94 () (_ BitVec 64))
(declare-fun temp205_95 () (_ BitVec 64))
(declare-fun temp205_96 () (_ BitVec 64))
(declare-fun temp205_97 () (_ BitVec 64))
(declare-fun temp205_98 () (_ BitVec 64))
(declare-fun temp205_99 () (_ BitVec 64))
(declare-fun temp205_100 () (_ BitVec 64))
(declare-fun temp205_101 () (_ BitVec 64))
(declare-fun temp205_102 () (_ BitVec 64))
(declare-fun temp205_103 () (_ BitVec 64))
(declare-fun temp205_104 () (_ BitVec 64))
(declare-fun temp205_105 () (_ BitVec 64))
(declare-fun temp205_106 () (_ BitVec 64))
(declare-fun temp205_107 () (_ BitVec 64))
(declare-fun temp205_108 () (_ BitVec 64))
(declare-fun temp205_109 () (_ BitVec 64))
(declare-fun temp205_110 () (_ BitVec 64))
(declare-fun temp205_111 () (_ BitVec 64))
(declare-fun temp205_112 () (_ BitVec 64))
(declare-fun temp205_113 () (_ BitVec 64))
(declare-fun temp205_114 () (_ BitVec 64))
(declare-fun temp205_115 () (_ BitVec 64))
(declare-fun temp205_116 () (_ BitVec 64))
(declare-fun temp205_117 () (_ BitVec 64))
(declare-fun temp205_118 () (_ BitVec 64))
(declare-fun temp205_119 () (_ BitVec 64))
(declare-fun temp205_120 () (_ BitVec 64))
(declare-fun temp205_121 () (_ BitVec 64))
(declare-fun temp205_122 () (_ BitVec 64))
(declare-fun temp205_123 () (_ BitVec 64))
(declare-fun temp205_124 () (_ BitVec 64))
(declare-fun temp205_125 () (_ BitVec 64))
(declare-fun temp205_126 () (_ BitVec 64))
(declare-fun temp205_127 () (_ BitVec 64))
(declare-fun temp205_128 () (_ BitVec 64))
(declare-fun temp205_129 () (_ BitVec 64))
(declare-fun temp205_130 () (_ BitVec 64))
(declare-fun temp205_131 () (_ BitVec 64))
(declare-fun temp205_132 () (_ BitVec 64))
(declare-fun temp205_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp205_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp205_135 () (_ BitVec 64))
(declare-fun temp205_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp205_137 () (_ BitVec 64))
(declare-fun temp205_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp205_139 () (_ BitVec 64))
(declare-fun temp205_140 () (_ BitVec 64))
(declare-fun temp205_141 () (_ BitVec 64))
(declare-fun temp205_142 () (_ BitVec 64))
(declare-fun temp205_143 () (_ BitVec 64))
(declare-fun temp205_144 () (_ BitVec 64))
(declare-fun temp205_145 () (_ BitVec 64))
(declare-fun temp205_146 () (_ BitVec 64))
(declare-fun temp205_147 () (_ BitVec 64))
(declare-fun temp205_148 () (_ BitVec 64))
(declare-fun temp205_149 () (_ BitVec 64))
(declare-fun temp205_150 () (_ BitVec 64))
(declare-fun temp205_151 () (_ BitVec 64))
(declare-fun temp205_152 () (_ BitVec 64))
(declare-fun temp205_153 () (_ BitVec 64))
(declare-fun temp205_154 () (_ BitVec 64))
(declare-fun temp205_156 () (_ BitVec 64))
(declare-fun temp205_157 () (_ BitVec 64))
(declare-fun temp205_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp205_158 () (_ BitVec 64))
(declare-fun temp205_159 () (_ BitVec 64))
(declare-fun temp205_161 () (_ BitVec 64))
(declare-fun temp205_162 () (_ BitVec 64))
(declare-fun temp205_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp205_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp205_164 () (_ BitVec 64))
(declare-fun temp205_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp205_166 () (_ BitVec 64))
(declare-fun temp205_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp205_168 () (_ BitVec 64))
(declare-fun temp205_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp205_170 () (_ BitVec 64))
(declare-fun temp205_171 () (_ BitVec 64))
(declare-fun temp205_172 () (_ BitVec 64))
(declare-fun temp205_173 () (_ BitVec 64))
(declare-fun temp205_174 () (_ BitVec 64))
(declare-fun temp205_175 () (_ BitVec 64))
(declare-fun temp205_176 () (_ BitVec 64))
(declare-fun temp205_177 () (_ BitVec 64))
(declare-fun temp205_178 () (_ BitVec 64))
(declare-fun temp205_179 () (_ BitVec 64))
(declare-fun temp205_180 () (_ BitVec 64))
(declare-fun temp205_181 () (_ BitVec 64))
(declare-fun temp205_182 () (_ BitVec 64))
(declare-fun temp205_183 () (_ BitVec 64))
(declare-fun temp205_184 () (_ BitVec 64))
(declare-fun temp205_185 () (_ BitVec 64))
(declare-fun temp205_186 () (_ BitVec 64))
(declare-fun temp205_187 () (_ BitVec 64))
(declare-fun temp205_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp205_189 () (_ BitVec 64))
(declare-fun temp205_191 () (_ BitVec 64))
(declare-fun temp205_192 () (_ BitVec 64))
(declare-fun temp205_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp205_193 () (_ BitVec 64))
(declare-fun temp205_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp205_195 () (_ BitVec 64))
(declare-fun temp205_196 () (_ BitVec 64))
(declare-fun temp205_197 () (_ BitVec 64))
(declare-fun temp205_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp205_199 () (_ BitVec 64))
(declare-fun temp205_200 () (_ BitVec 64))
(declare-fun temp205_201 () (_ BitVec 64))
(declare-fun temp205_202 () (_ BitVec 64))
(declare-fun temp205_203 () (_ BitVec 64))
(declare-fun temp205_204 () (_ BitVec 64))
(declare-fun temp205_205 () (_ BitVec 64))
(declare-fun temp205_206 () (_ BitVec 64))
(declare-fun temp205_207 () (_ BitVec 64))
(declare-fun temp205_208 () (_ BitVec 64))
(declare-fun temp205_209 () (_ BitVec 64))
(declare-fun temp205_210 () (_ BitVec 64))
(declare-fun temp205_211 () (_ BitVec 64))
(declare-fun temp205_212 () (_ BitVec 64))
(declare-fun temp205_213 () (_ BitVec 64))
(declare-fun temp205_214 () (_ BitVec 64))
(declare-fun temp205_215 () (_ BitVec 64))
(declare-fun temp205_216 () (_ BitVec 64))
(declare-fun temp205_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp205_218 () (_ BitVec 64))
(declare-fun temp205_220 () (_ BitVec 64))
(declare-fun temp205_221 () (_ BitVec 64))
(declare-fun temp205_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp205_222 () (_ BitVec 64))
(declare-fun temp205_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp205_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp205_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp205_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp205_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp205_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp205_229 () (_ BitVec 64))
(declare-fun temp205_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp205_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp205_232 () (_ BitVec 64))
(declare-fun temp205_233 () (_ BitVec 64))
(declare-fun temp205_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp205_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp205_236 () (_ BitVec 64))
(declare-fun temp205_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp205_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp205_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp205_241 () (_ BitVec 64))
(declare-fun temp205_240 () (_ BitVec 64))
(declare-fun temp205_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp205_243 () (_ BitVec 64))
(declare-fun temp205_244 () (_ BitVec 64))
(declare-fun temp205_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp205_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp205_247 () (_ BitVec 64))
(declare-fun temp205_248 () (_ BitVec 64))
(assert (= temp205_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp205_1)))
(assert (= temp205_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp205_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_3 #x0000000000000000))
(assert (= var79869 temp205_3))
(assert (= temp205_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp205_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_5 #x0000000000000000))
(assert (= var79914 temp205_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp205_6 #x0000000000000000))
(assert (= temp205_7 temp205_6))
(assert (= temp205_8 (select ARGNAME_padding_NAMEEND_VAL temp205_7)))
(assert (= temp205_9 #x0000000000000001))
(assert (= temp205_10 temp205_9))
(assert (= temp205_11 (select ARGNAME_padding_NAMEEND_VAL temp205_10)))
(assert (= temp205_12 #x0000000000000002))
(assert (= temp205_13 temp205_12))
(assert (= temp205_14 (select ARGNAME_padding_NAMEEND_VAL temp205_13)))
(assert (= temp205_15 #x0000000000000003))
(assert (= temp205_16 temp205_15))
(assert (= temp205_17 (select ARGNAME_padding_NAMEEND_VAL temp205_16)))
(assert (= temp205_18 #x0000000000000004))
(assert (= temp205_19 temp205_18))
(assert (= temp205_20 (select ARGNAME_padding_NAMEEND_VAL temp205_19)))
(assert (= temp205_21 #x0000000000000005))
(assert (= temp205_22 temp205_21))
(assert (= temp205_23 (select ARGNAME_padding_NAMEEND_VAL temp205_22)))
(assert (= temp205_24 #x0000000000000000))
(assert (= temp205_25 #x0000000000000000))
(assert (= temp205_26 temp205_25))
(assert (= temp205_27 (select ARGNAME_padding_NAMEEND_VAL temp205_26)))
(assert (= temp205_28 #x0000000000000000))
(assert (= temp205_29 #x0000000000000001))
(assert (= temp205_30 temp205_29))
(assert (= temp205_31 (select ARGNAME_padding_NAMEEND_VAL temp205_30)))
(assert (= temp205_32 #x0000000000000000))
(assert (= temp205_33 #x0000000000000002))
(assert (= temp205_34 temp205_33))
(assert (= temp205_35 (select ARGNAME_padding_NAMEEND_VAL temp205_34)))
(assert (= temp205_36 #x0000000000000000))
(assert (= temp205_37 #x0000000000000003))
(assert (= temp205_38 temp205_37))
(assert (= temp205_39 (select ARGNAME_padding_NAMEEND_VAL temp205_38)))
(assert (= temp205_40 #x0000000000000000))
(assert (= temp205_41 #x0000000000000004))
(assert (= temp205_42 temp205_41))
(assert (= temp205_43 (select ARGNAME_padding_NAMEEND_VAL temp205_42)))
(assert (= temp205_44 #x0000000000000000))
(assert (= temp205_45 #x0000000000000005))
(assert (= temp205_46 temp205_45))
(assert (= temp205_47 (select ARGNAME_padding_NAMEEND_VAL temp205_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp205_27 temp205_24)
             (bvslt temp205_31 temp205_28)
             (bvslt temp205_35 temp205_32)
             (bvslt temp205_39 temp205_36)
             (bvslt temp205_43 temp205_40)
             (bvslt temp205_47 temp205_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_48 #x0000000000000000))
(assert (= var1322786 temp205_48))
(assert (= temp205_49 #x0000000000000000))
(assert (= temp205_50 temp205_49))
(assert (= temp205_51 (select ARGNAME_output_padding_NAMEEND_VAL temp205_50)))
(assert (= temp205_52 #x0000000000000001))
(assert (= temp205_53 temp205_52))
(assert (= temp205_54 (select ARGNAME_output_padding_NAMEEND_VAL temp205_53)))
(assert (= temp205_55 #x0000000000000002))
(assert (= temp205_56 temp205_55))
(assert (= temp205_57 (select ARGNAME_output_padding_NAMEEND_VAL temp205_56)))
(assert (= temp205_58 #x0000000000000003))
(assert (= temp205_59 temp205_58))
(assert (= temp205_60 (select ARGNAME_output_padding_NAMEEND_VAL temp205_59)))
(assert (= temp205_61 #x0000000000000004))
(assert (= temp205_62 temp205_61))
(assert (= temp205_63 (select ARGNAME_output_padding_NAMEEND_VAL temp205_62)))
(assert (= temp205_64 #x0000000000000005))
(assert (= temp205_65 temp205_64))
(assert (= temp205_66 (select ARGNAME_output_padding_NAMEEND_VAL temp205_65)))
(assert (= temp205_67 #x0000000000000000))
(assert (= temp205_68 #x0000000000000000))
(assert (= temp205_69 temp205_68))
(assert (= temp205_70 (select ARGNAME_output_padding_NAMEEND_VAL temp205_69)))
(assert (= temp205_71 #x0000000000000000))
(assert (= temp205_72 #x0000000000000001))
(assert (= temp205_73 temp205_72))
(assert (= temp205_74 (select ARGNAME_output_padding_NAMEEND_VAL temp205_73)))
(assert (= temp205_75 #x0000000000000000))
(assert (= temp205_76 #x0000000000000002))
(assert (= temp205_77 temp205_76))
(assert (= temp205_78 (select ARGNAME_output_padding_NAMEEND_VAL temp205_77)))
(assert (= temp205_79 #x0000000000000000))
(assert (= temp205_80 #x0000000000000003))
(assert (= temp205_81 temp205_80))
(assert (= temp205_82 (select ARGNAME_output_padding_NAMEEND_VAL temp205_81)))
(assert (= temp205_83 #x0000000000000000))
(assert (= temp205_84 #x0000000000000004))
(assert (= temp205_85 temp205_84))
(assert (= temp205_86 (select ARGNAME_output_padding_NAMEEND_VAL temp205_85)))
(assert (= temp205_87 #x0000000000000000))
(assert (= temp205_88 #x0000000000000005))
(assert (= temp205_89 temp205_88))
(assert (= temp205_90 (select ARGNAME_output_padding_NAMEEND_VAL temp205_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp205_70 temp205_67)
             (bvslt temp205_74 temp205_71)
             (bvslt temp205_78 temp205_75)
             (bvslt temp205_82 temp205_79)
             (bvslt temp205_86 temp205_83)
             (bvslt temp205_90 temp205_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_91 #x0000000000000000))
(assert (= var1322797 temp205_91))
(assert (= temp205_92 #x0000000000000000))
(assert (= temp205_93 temp205_92))
(assert (= temp205_94 (select ARGNAME_stride_NAMEEND_VAL temp205_93)))
(assert (= temp205_95 #x0000000000000001))
(assert (= temp205_96 temp205_95))
(assert (= temp205_97 (select ARGNAME_stride_NAMEEND_VAL temp205_96)))
(assert (= temp205_98 #x0000000000000002))
(assert (= temp205_99 temp205_98))
(assert (= temp205_100 (select ARGNAME_stride_NAMEEND_VAL temp205_99)))
(assert (= temp205_101 #x0000000000000003))
(assert (= temp205_102 temp205_101))
(assert (= temp205_103 (select ARGNAME_stride_NAMEEND_VAL temp205_102)))
(assert (= temp205_104 #x0000000000000004))
(assert (= temp205_105 temp205_104))
(assert (= temp205_106 (select ARGNAME_stride_NAMEEND_VAL temp205_105)))
(assert (= temp205_107 #x0000000000000005))
(assert (= temp205_108 temp205_107))
(assert (= temp205_109 (select ARGNAME_stride_NAMEEND_VAL temp205_108)))
(assert (= temp205_110 #x0000000000000000))
(assert (= temp205_111 #x0000000000000000))
(assert (= temp205_112 temp205_111))
(assert (= temp205_113 (select ARGNAME_stride_NAMEEND_VAL temp205_112)))
(assert (= temp205_114 #x0000000000000000))
(assert (= temp205_115 #x0000000000000001))
(assert (= temp205_116 temp205_115))
(assert (= temp205_117 (select ARGNAME_stride_NAMEEND_VAL temp205_116)))
(assert (= temp205_118 #x0000000000000000))
(assert (= temp205_119 #x0000000000000002))
(assert (= temp205_120 temp205_119))
(assert (= temp205_121 (select ARGNAME_stride_NAMEEND_VAL temp205_120)))
(assert (= temp205_122 #x0000000000000000))
(assert (= temp205_123 #x0000000000000003))
(assert (= temp205_124 temp205_123))
(assert (= temp205_125 (select ARGNAME_stride_NAMEEND_VAL temp205_124)))
(assert (= temp205_126 #x0000000000000000))
(assert (= temp205_127 #x0000000000000004))
(assert (= temp205_128 temp205_127))
(assert (= temp205_129 (select ARGNAME_stride_NAMEEND_VAL temp205_128)))
(assert (= temp205_130 #x0000000000000000))
(assert (= temp205_131 #x0000000000000005))
(assert (= temp205_132 temp205_131))
(assert (= temp205_133 (select ARGNAME_stride_NAMEEND_VAL temp205_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp205_113 temp205_110)
             (bvsle temp205_117 temp205_114)
             (bvsle temp205_121 temp205_118)
             (bvsle temp205_125 temp205_122)
             (bvsle temp205_129 temp205_126)
             (bvsle temp205_133 temp205_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_134 #x0000000000000000))
(assert (= var1322807 temp205_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_135 #x0000000000000001))
(assert (= var1322819 temp205_135))
(assert (= temp205_136 #x0000000000000000))
(assert (= var1310898 temp205_136))
(assert (= temp205_137 #x0000000000000000))
(assert (= temp205_138 temp205_137))
(assert (= temp205_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_138)))
(assert (= temp205_140 #x0000000000000001))
(assert (= temp205_141 temp205_140))
(assert (= temp205_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_141)))
(assert (= temp205_143 #x0000000000000002))
(assert (= temp205_144 temp205_143))
(assert (= temp205_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_144)))
(assert (= temp205_146 #x0000000000000003))
(assert (= temp205_147 temp205_146))
(assert (= temp205_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_147)))
(assert (= temp205_149 #x0000000000000004))
(assert (= temp205_150 temp205_149))
(assert (= temp205_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_150)))
(assert (= temp205_152 #x0000000000000005))
(assert (= temp205_153 temp205_152))
(assert (= temp205_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_153)))
(assert (= temp205_156 var1310898))
(assert (= temp205_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_156)))
(assert (= temp205_155 temp205_157))
(assert (= var1322852
   (ite (bvslt temp205_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_158 #x0000000000000000))
(assert (= var1322852 temp205_158))
(assert (= temp205_159 #x0000000000000000))
(assert (= var1310898 temp205_159))
(assert (= temp205_161 var1310898))
(assert (= temp205_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_161)))
(assert (= temp205_160 temp205_162))
(assert (= var1322874 (bvsmod temp205_160 ARGNAME_groups_NAMEEND)))
(assert (= temp205_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp205_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp205_164 #x0000000000000001))
(assert (= var1322875 temp205_164))
(assert (= temp205_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp205_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_166 #x0000000000000001))
(assert (= var1322895 temp205_166))
(assert (= temp205_167 #x0000000000000001))
(assert (= var1311786 temp205_167))
(assert (= temp205_168 #x0000000000000000))
(assert (= temp205_169 temp205_168))
(assert (= temp205_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp205_169)))
(assert (= temp205_171 #x0000000000000001))
(assert (= temp205_172 temp205_171))
(assert (= temp205_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp205_172)))
(assert (= temp205_174 #x0000000000000002))
(assert (= temp205_175 temp205_174))
(assert (= temp205_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp205_175)))
(assert (= temp205_177 #x0000000000000003))
(assert (= temp205_178 temp205_177))
(assert (= temp205_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp205_178)))
(assert (= temp205_180 #x0000000000000004))
(assert (= temp205_181 temp205_180))
(assert (= temp205_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp205_181)))
(assert (= temp205_183 #x0000000000000005))
(assert (= temp205_184 temp205_183))
(assert (= temp205_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp205_184)))
(assert (= temp205_186 #x0000000000000000))
(assert (= temp205_187
   (ite (bvslt var1311786 temp205_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp205_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp205_187)))
(assert (= var1322903 temp205_188))
(assert (bvslt (ite (bvslt var1311786 temp205_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp205_189 #x0000000000000001))
(assert (= var1311786 temp205_189))
(assert (= temp205_191 var1311786))
(assert (= temp205_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_191)))
(assert (= temp205_190 temp205_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp205_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp205_193 #x0000000000000001))
(assert (= var1322908 temp205_193))
(assert (= temp205_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp205_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_195 #x0000000000000001))
(assert (= var1322975 temp205_195))
(assert (= temp205_196 #x0000000000000000))
(assert (= var1310898 temp205_196))
(assert (= temp205_197 #x0000000000000000))
(assert (= temp205_198 temp205_197))
(assert (= temp205_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp205_198)))
(assert (= temp205_200 #x0000000000000001))
(assert (= temp205_201 temp205_200))
(assert (= temp205_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp205_201)))
(assert (= temp205_203 #x0000000000000002))
(assert (= temp205_204 temp205_203))
(assert (= temp205_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp205_204)))
(assert (= temp205_206 #x0000000000000003))
(assert (= temp205_207 temp205_206))
(assert (= temp205_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp205_207)))
(assert (= temp205_209 #x0000000000000004))
(assert (= temp205_210 temp205_209))
(assert (= temp205_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp205_210)))
(assert (= temp205_212 #x0000000000000005))
(assert (= temp205_213 temp205_212))
(assert (= temp205_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp205_213)))
(assert (= temp205_215 #x0000000000000000))
(assert (= temp205_216
   (ite (bvslt var1310898 temp205_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp205_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp205_216)))
(assert (= var1322977 temp205_217))
(assert (bvslt (ite (bvslt var1310898 temp205_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp205_218 #x0000000000000000))
(assert (= var1310898 temp205_218))
(assert (= temp205_220 var1310898))
(assert (= temp205_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp205_220)))
(assert (= temp205_219 temp205_221))
(assert (= var1322980
   (ite (= var1322977 temp205_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp205_222 #x0000000000000001))
(assert (= var1322980 temp205_222))
(assert (= temp205_223 #x0000000000000002))
(assert (= var1848169 temp205_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp205_225 #x0000000000000001))
(assert (= var1323065 temp205_225))
(assert (= temp205_226 #x0000000000000001))
(assert (= var3486735 temp205_226))
(assert (= temp205_227 #x0000000000000001))
(assert (= var3814415 temp205_227))
(assert (= temp205_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp205_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_229 #x0000000000000001))
(assert (= var79986 temp205_229))
(assert (= temp205_230 #x0000000000000001))
(assert (= var80116 temp205_230))
(assert (= var4796905 var80116))
(assert (= temp205_231 #x0000000000000000))
(assert (= var4784306 temp205_231))
(assert (= temp205_232 #x0000000000000000))
(assert (= temp205_233
   (ite (bvslt var4784306 temp205_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp205_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp205_233)))
(assert (= var4796924 temp205_234))
(assert (bvslt (ite (bvslt var4784306 temp205_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp205_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp205_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp205_236 #x0000000000000001))
(assert (= var4796925 temp205_236))
(assert (= temp205_237 #x0000000000000000))
(assert (= var4996927 temp205_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp205_238 #x0000000000000002))
(assert (= var5125763 temp205_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp205_239 #x0000000000000000))
(assert (= var5191324 temp205_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp205_241 #xffffffffffffffff))
(assert (= temp205_240 temp205_241))
(assert (= temp205_242 #x0000000000000001))
(assert (= var66602 temp205_242))
(assert (= temp205_243 #x0000000000000000))
(assert (= temp205_244
   (ite (bvslt var66602 temp205_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp205_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp205_244)))
(assert (= var80523 temp205_245))
(assert (bvslt (ite (bvslt var66602 temp205_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp205_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp205_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp205_247 #x0000000000000000))
(assert (= var80524 temp205_247))
(assert (= temp205_248 #x0000000000000001))
(assert (= var79986 temp205_248))
(model-add temp205_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp205_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp205_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






