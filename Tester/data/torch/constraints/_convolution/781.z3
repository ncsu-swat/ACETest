(declare-fun temp1038_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1038_2 () (_ BitVec 64))
(declare-fun temp1038_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1038_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1038_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1038_6 () (_ BitVec 64))
(declare-fun temp1038_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_8 () (_ BitVec 64))
(declare-fun temp1038_9 () (_ BitVec 64))
(declare-fun temp1038_10 () (_ BitVec 64))
(declare-fun temp1038_11 () (_ BitVec 64))
(declare-fun temp1038_12 () (_ BitVec 64))
(declare-fun temp1038_13 () (_ BitVec 64))
(declare-fun temp1038_14 () (_ BitVec 64))
(declare-fun temp1038_15 () (_ BitVec 64))
(declare-fun temp1038_16 () (_ BitVec 64))
(declare-fun temp1038_17 () (_ BitVec 64))
(declare-fun temp1038_18 () (_ BitVec 64))
(declare-fun temp1038_19 () (_ BitVec 64))
(declare-fun temp1038_20 () (_ BitVec 64))
(declare-fun temp1038_21 () (_ BitVec 64))
(declare-fun temp1038_22 () (_ BitVec 64))
(declare-fun temp1038_23 () (_ BitVec 64))
(declare-fun temp1038_24 () (_ BitVec 64))
(declare-fun temp1038_25 () (_ BitVec 64))
(declare-fun temp1038_26 () (_ BitVec 64))
(declare-fun temp1038_27 () (_ BitVec 64))
(declare-fun temp1038_28 () (_ BitVec 64))
(declare-fun temp1038_29 () (_ BitVec 64))
(declare-fun temp1038_30 () (_ BitVec 64))
(declare-fun temp1038_31 () (_ BitVec 64))
(declare-fun temp1038_32 () (_ BitVec 64))
(declare-fun temp1038_33 () (_ BitVec 64))
(declare-fun temp1038_34 () (_ BitVec 64))
(declare-fun temp1038_35 () (_ BitVec 64))
(declare-fun temp1038_36 () (_ BitVec 64))
(declare-fun temp1038_37 () (_ BitVec 64))
(declare-fun temp1038_38 () (_ BitVec 64))
(declare-fun temp1038_39 () (_ BitVec 64))
(declare-fun temp1038_40 () (_ BitVec 64))
(declare-fun temp1038_41 () (_ BitVec 64))
(declare-fun temp1038_42 () (_ BitVec 64))
(declare-fun temp1038_43 () (_ BitVec 64))
(declare-fun temp1038_44 () (_ BitVec 64))
(declare-fun temp1038_45 () (_ BitVec 64))
(declare-fun temp1038_46 () (_ BitVec 64))
(declare-fun temp1038_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1038_48 () (_ BitVec 64))
(declare-fun temp1038_49 () (_ BitVec 64))
(declare-fun temp1038_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_51 () (_ BitVec 64))
(declare-fun temp1038_52 () (_ BitVec 64))
(declare-fun temp1038_53 () (_ BitVec 64))
(declare-fun temp1038_54 () (_ BitVec 64))
(declare-fun temp1038_55 () (_ BitVec 64))
(declare-fun temp1038_56 () (_ BitVec 64))
(declare-fun temp1038_57 () (_ BitVec 64))
(declare-fun temp1038_58 () (_ BitVec 64))
(declare-fun temp1038_59 () (_ BitVec 64))
(declare-fun temp1038_60 () (_ BitVec 64))
(declare-fun temp1038_61 () (_ BitVec 64))
(declare-fun temp1038_62 () (_ BitVec 64))
(declare-fun temp1038_63 () (_ BitVec 64))
(declare-fun temp1038_64 () (_ BitVec 64))
(declare-fun temp1038_65 () (_ BitVec 64))
(declare-fun temp1038_66 () (_ BitVec 64))
(declare-fun temp1038_67 () (_ BitVec 64))
(declare-fun temp1038_68 () (_ BitVec 64))
(declare-fun temp1038_69 () (_ BitVec 64))
(declare-fun temp1038_70 () (_ BitVec 64))
(declare-fun temp1038_71 () (_ BitVec 64))
(declare-fun temp1038_72 () (_ BitVec 64))
(declare-fun temp1038_73 () (_ BitVec 64))
(declare-fun temp1038_74 () (_ BitVec 64))
(declare-fun temp1038_75 () (_ BitVec 64))
(declare-fun temp1038_76 () (_ BitVec 64))
(declare-fun temp1038_77 () (_ BitVec 64))
(declare-fun temp1038_78 () (_ BitVec 64))
(declare-fun temp1038_79 () (_ BitVec 64))
(declare-fun temp1038_80 () (_ BitVec 64))
(declare-fun temp1038_81 () (_ BitVec 64))
(declare-fun temp1038_82 () (_ BitVec 64))
(declare-fun temp1038_83 () (_ BitVec 64))
(declare-fun temp1038_84 () (_ BitVec 64))
(declare-fun temp1038_85 () (_ BitVec 64))
(declare-fun temp1038_86 () (_ BitVec 64))
(declare-fun temp1038_87 () (_ BitVec 64))
(declare-fun temp1038_88 () (_ BitVec 64))
(declare-fun temp1038_89 () (_ BitVec 64))
(declare-fun temp1038_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1038_91 () (_ BitVec 64))
(declare-fun temp1038_92 () (_ BitVec 64))
(declare-fun temp1038_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_94 () (_ BitVec 64))
(declare-fun temp1038_95 () (_ BitVec 64))
(declare-fun temp1038_96 () (_ BitVec 64))
(declare-fun temp1038_97 () (_ BitVec 64))
(declare-fun temp1038_98 () (_ BitVec 64))
(declare-fun temp1038_99 () (_ BitVec 64))
(declare-fun temp1038_100 () (_ BitVec 64))
(declare-fun temp1038_101 () (_ BitVec 64))
(declare-fun temp1038_102 () (_ BitVec 64))
(declare-fun temp1038_103 () (_ BitVec 64))
(declare-fun temp1038_104 () (_ BitVec 64))
(declare-fun temp1038_105 () (_ BitVec 64))
(declare-fun temp1038_106 () (_ BitVec 64))
(declare-fun temp1038_107 () (_ BitVec 64))
(declare-fun temp1038_108 () (_ BitVec 64))
(declare-fun temp1038_109 () (_ BitVec 64))
(declare-fun temp1038_110 () (_ BitVec 64))
(declare-fun temp1038_111 () (_ BitVec 64))
(declare-fun temp1038_112 () (_ BitVec 64))
(declare-fun temp1038_113 () (_ BitVec 64))
(declare-fun temp1038_114 () (_ BitVec 64))
(declare-fun temp1038_115 () (_ BitVec 64))
(declare-fun temp1038_116 () (_ BitVec 64))
(declare-fun temp1038_117 () (_ BitVec 64))
(declare-fun temp1038_118 () (_ BitVec 64))
(declare-fun temp1038_119 () (_ BitVec 64))
(declare-fun temp1038_120 () (_ BitVec 64))
(declare-fun temp1038_121 () (_ BitVec 64))
(declare-fun temp1038_122 () (_ BitVec 64))
(declare-fun temp1038_123 () (_ BitVec 64))
(declare-fun temp1038_124 () (_ BitVec 64))
(declare-fun temp1038_125 () (_ BitVec 64))
(declare-fun temp1038_126 () (_ BitVec 64))
(declare-fun temp1038_127 () (_ BitVec 64))
(declare-fun temp1038_128 () (_ BitVec 64))
(declare-fun temp1038_129 () (_ BitVec 64))
(declare-fun temp1038_130 () (_ BitVec 64))
(declare-fun temp1038_131 () (_ BitVec 64))
(declare-fun temp1038_132 () (_ BitVec 64))
(declare-fun temp1038_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1038_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1038_135 () (_ BitVec 64))
(declare-fun temp1038_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1038_137 () (_ BitVec 64))
(declare-fun temp1038_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_139 () (_ BitVec 64))
(declare-fun temp1038_140 () (_ BitVec 64))
(declare-fun temp1038_141 () (_ BitVec 64))
(declare-fun temp1038_142 () (_ BitVec 64))
(declare-fun temp1038_143 () (_ BitVec 64))
(declare-fun temp1038_144 () (_ BitVec 64))
(declare-fun temp1038_145 () (_ BitVec 64))
(declare-fun temp1038_146 () (_ BitVec 64))
(declare-fun temp1038_147 () (_ BitVec 64))
(declare-fun temp1038_148 () (_ BitVec 64))
(declare-fun temp1038_149 () (_ BitVec 64))
(declare-fun temp1038_150 () (_ BitVec 64))
(declare-fun temp1038_151 () (_ BitVec 64))
(declare-fun temp1038_152 () (_ BitVec 64))
(declare-fun temp1038_153 () (_ BitVec 64))
(declare-fun temp1038_154 () (_ BitVec 64))
(declare-fun temp1038_156 () (_ BitVec 64))
(declare-fun temp1038_157 () (_ BitVec 64))
(declare-fun temp1038_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1038_158 () (_ BitVec 64))
(declare-fun temp1038_159 () (_ BitVec 64))
(declare-fun temp1038_161 () (_ BitVec 64))
(declare-fun temp1038_162 () (_ BitVec 64))
(declare-fun temp1038_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1038_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1038_164 () (_ BitVec 64))
(declare-fun temp1038_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1038_166 () (_ BitVec 64))
(declare-fun temp1038_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1038_168 () (_ BitVec 64))
(declare-fun temp1038_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_170 () (_ BitVec 64))
(declare-fun temp1038_171 () (_ BitVec 64))
(declare-fun temp1038_172 () (_ BitVec 64))
(declare-fun temp1038_173 () (_ BitVec 64))
(declare-fun temp1038_174 () (_ BitVec 64))
(declare-fun temp1038_175 () (_ BitVec 64))
(declare-fun temp1038_176 () (_ BitVec 64))
(declare-fun temp1038_177 () (_ BitVec 64))
(declare-fun temp1038_178 () (_ BitVec 64))
(declare-fun temp1038_179 () (_ BitVec 64))
(declare-fun temp1038_180 () (_ BitVec 64))
(declare-fun temp1038_181 () (_ BitVec 64))
(declare-fun temp1038_182 () (_ BitVec 64))
(declare-fun temp1038_183 () (_ BitVec 64))
(declare-fun temp1038_184 () (_ BitVec 64))
(declare-fun temp1038_185 () (_ BitVec 64))
(declare-fun temp1038_186 () (_ BitVec 64))
(declare-fun temp1038_187 () (_ BitVec 64))
(declare-fun temp1038_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1038_189 () (_ BitVec 64))
(declare-fun temp1038_191 () (_ BitVec 64))
(declare-fun temp1038_192 () (_ BitVec 64))
(declare-fun temp1038_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1038_193 () (_ BitVec 64))
(declare-fun temp1038_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1038_195 () (_ BitVec 64))
(declare-fun temp1038_196 () (_ BitVec 64))
(declare-fun temp1038_197 () (_ BitVec 64))
(declare-fun temp1038_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_199 () (_ BitVec 64))
(declare-fun temp1038_200 () (_ BitVec 64))
(declare-fun temp1038_201 () (_ BitVec 64))
(declare-fun temp1038_202 () (_ BitVec 64))
(declare-fun temp1038_203 () (_ BitVec 64))
(declare-fun temp1038_204 () (_ BitVec 64))
(declare-fun temp1038_205 () (_ BitVec 64))
(declare-fun temp1038_206 () (_ BitVec 64))
(declare-fun temp1038_207 () (_ BitVec 64))
(declare-fun temp1038_208 () (_ BitVec 64))
(declare-fun temp1038_209 () (_ BitVec 64))
(declare-fun temp1038_210 () (_ BitVec 64))
(declare-fun temp1038_211 () (_ BitVec 64))
(declare-fun temp1038_212 () (_ BitVec 64))
(declare-fun temp1038_213 () (_ BitVec 64))
(declare-fun temp1038_214 () (_ BitVec 64))
(declare-fun temp1038_215 () (_ BitVec 64))
(declare-fun temp1038_216 () (_ BitVec 64))
(declare-fun temp1038_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1038_218 () (_ BitVec 64))
(declare-fun temp1038_220 () (_ BitVec 64))
(declare-fun temp1038_221 () (_ BitVec 64))
(declare-fun temp1038_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1038_222 () (_ BitVec 64))
(declare-fun temp1038_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1038_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1038_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1038_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1038_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1038_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1038_229 () (_ BitVec 64))
(declare-fun temp1038_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1038_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1038_232 () (_ BitVec 64))
(declare-fun temp1038_233 () (_ BitVec 64))
(declare-fun temp1038_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1038_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1038_236 () (_ BitVec 64))
(declare-fun temp1038_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1038_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1038_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun var6107536 () (_ BitVec 64))
(declare-fun temp1038_240 () (_ BitVec 64))
(assert (= temp1038_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1038_1)))
(assert (= temp1038_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1038_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_3 #x0000000000000000))
(assert (= var79869 temp1038_3))
(assert (= temp1038_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1038_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_5 #x0000000000000000))
(assert (= var79914 temp1038_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1038_6 #x0000000000000000))
(assert (= temp1038_7 temp1038_6))
(assert (= temp1038_8 (select ARGNAME_padding_NAMEEND_VAL temp1038_7)))
(assert (= temp1038_9 #x0000000000000001))
(assert (= temp1038_10 temp1038_9))
(assert (= temp1038_11 (select ARGNAME_padding_NAMEEND_VAL temp1038_10)))
(assert (= temp1038_12 #x0000000000000002))
(assert (= temp1038_13 temp1038_12))
(assert (= temp1038_14 (select ARGNAME_padding_NAMEEND_VAL temp1038_13)))
(assert (= temp1038_15 #x0000000000000003))
(assert (= temp1038_16 temp1038_15))
(assert (= temp1038_17 (select ARGNAME_padding_NAMEEND_VAL temp1038_16)))
(assert (= temp1038_18 #x0000000000000004))
(assert (= temp1038_19 temp1038_18))
(assert (= temp1038_20 (select ARGNAME_padding_NAMEEND_VAL temp1038_19)))
(assert (= temp1038_21 #x0000000000000005))
(assert (= temp1038_22 temp1038_21))
(assert (= temp1038_23 (select ARGNAME_padding_NAMEEND_VAL temp1038_22)))
(assert (= temp1038_24 #x0000000000000000))
(assert (= temp1038_25 #x0000000000000000))
(assert (= temp1038_26 temp1038_25))
(assert (= temp1038_27 (select ARGNAME_padding_NAMEEND_VAL temp1038_26)))
(assert (= temp1038_28 #x0000000000000000))
(assert (= temp1038_29 #x0000000000000001))
(assert (= temp1038_30 temp1038_29))
(assert (= temp1038_31 (select ARGNAME_padding_NAMEEND_VAL temp1038_30)))
(assert (= temp1038_32 #x0000000000000000))
(assert (= temp1038_33 #x0000000000000002))
(assert (= temp1038_34 temp1038_33))
(assert (= temp1038_35 (select ARGNAME_padding_NAMEEND_VAL temp1038_34)))
(assert (= temp1038_36 #x0000000000000000))
(assert (= temp1038_37 #x0000000000000003))
(assert (= temp1038_38 temp1038_37))
(assert (= temp1038_39 (select ARGNAME_padding_NAMEEND_VAL temp1038_38)))
(assert (= temp1038_40 #x0000000000000000))
(assert (= temp1038_41 #x0000000000000004))
(assert (= temp1038_42 temp1038_41))
(assert (= temp1038_43 (select ARGNAME_padding_NAMEEND_VAL temp1038_42)))
(assert (= temp1038_44 #x0000000000000000))
(assert (= temp1038_45 #x0000000000000005))
(assert (= temp1038_46 temp1038_45))
(assert (= temp1038_47 (select ARGNAME_padding_NAMEEND_VAL temp1038_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1038_27 temp1038_24)
             (bvslt temp1038_31 temp1038_28)
             (bvslt temp1038_35 temp1038_32)
             (bvslt temp1038_39 temp1038_36)
             (bvslt temp1038_43 temp1038_40)
             (bvslt temp1038_47 temp1038_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_48 #x0000000000000000))
(assert (= var1322786 temp1038_48))
(assert (= temp1038_49 #x0000000000000000))
(assert (= temp1038_50 temp1038_49))
(assert (= temp1038_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_50)))
(assert (= temp1038_52 #x0000000000000001))
(assert (= temp1038_53 temp1038_52))
(assert (= temp1038_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_53)))
(assert (= temp1038_55 #x0000000000000002))
(assert (= temp1038_56 temp1038_55))
(assert (= temp1038_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_56)))
(assert (= temp1038_58 #x0000000000000003))
(assert (= temp1038_59 temp1038_58))
(assert (= temp1038_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_59)))
(assert (= temp1038_61 #x0000000000000004))
(assert (= temp1038_62 temp1038_61))
(assert (= temp1038_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_62)))
(assert (= temp1038_64 #x0000000000000005))
(assert (= temp1038_65 temp1038_64))
(assert (= temp1038_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_65)))
(assert (= temp1038_67 #x0000000000000000))
(assert (= temp1038_68 #x0000000000000000))
(assert (= temp1038_69 temp1038_68))
(assert (= temp1038_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_69)))
(assert (= temp1038_71 #x0000000000000000))
(assert (= temp1038_72 #x0000000000000001))
(assert (= temp1038_73 temp1038_72))
(assert (= temp1038_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_73)))
(assert (= temp1038_75 #x0000000000000000))
(assert (= temp1038_76 #x0000000000000002))
(assert (= temp1038_77 temp1038_76))
(assert (= temp1038_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_77)))
(assert (= temp1038_79 #x0000000000000000))
(assert (= temp1038_80 #x0000000000000003))
(assert (= temp1038_81 temp1038_80))
(assert (= temp1038_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_81)))
(assert (= temp1038_83 #x0000000000000000))
(assert (= temp1038_84 #x0000000000000004))
(assert (= temp1038_85 temp1038_84))
(assert (= temp1038_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_85)))
(assert (= temp1038_87 #x0000000000000000))
(assert (= temp1038_88 #x0000000000000005))
(assert (= temp1038_89 temp1038_88))
(assert (= temp1038_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1038_70 temp1038_67)
             (bvslt temp1038_74 temp1038_71)
             (bvslt temp1038_78 temp1038_75)
             (bvslt temp1038_82 temp1038_79)
             (bvslt temp1038_86 temp1038_83)
             (bvslt temp1038_90 temp1038_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_91 #x0000000000000000))
(assert (= var1322797 temp1038_91))
(assert (= temp1038_92 #x0000000000000000))
(assert (= temp1038_93 temp1038_92))
(assert (= temp1038_94 (select ARGNAME_stride_NAMEEND_VAL temp1038_93)))
(assert (= temp1038_95 #x0000000000000001))
(assert (= temp1038_96 temp1038_95))
(assert (= temp1038_97 (select ARGNAME_stride_NAMEEND_VAL temp1038_96)))
(assert (= temp1038_98 #x0000000000000002))
(assert (= temp1038_99 temp1038_98))
(assert (= temp1038_100 (select ARGNAME_stride_NAMEEND_VAL temp1038_99)))
(assert (= temp1038_101 #x0000000000000003))
(assert (= temp1038_102 temp1038_101))
(assert (= temp1038_103 (select ARGNAME_stride_NAMEEND_VAL temp1038_102)))
(assert (= temp1038_104 #x0000000000000004))
(assert (= temp1038_105 temp1038_104))
(assert (= temp1038_106 (select ARGNAME_stride_NAMEEND_VAL temp1038_105)))
(assert (= temp1038_107 #x0000000000000005))
(assert (= temp1038_108 temp1038_107))
(assert (= temp1038_109 (select ARGNAME_stride_NAMEEND_VAL temp1038_108)))
(assert (= temp1038_110 #x0000000000000000))
(assert (= temp1038_111 #x0000000000000000))
(assert (= temp1038_112 temp1038_111))
(assert (= temp1038_113 (select ARGNAME_stride_NAMEEND_VAL temp1038_112)))
(assert (= temp1038_114 #x0000000000000000))
(assert (= temp1038_115 #x0000000000000001))
(assert (= temp1038_116 temp1038_115))
(assert (= temp1038_117 (select ARGNAME_stride_NAMEEND_VAL temp1038_116)))
(assert (= temp1038_118 #x0000000000000000))
(assert (= temp1038_119 #x0000000000000002))
(assert (= temp1038_120 temp1038_119))
(assert (= temp1038_121 (select ARGNAME_stride_NAMEEND_VAL temp1038_120)))
(assert (= temp1038_122 #x0000000000000000))
(assert (= temp1038_123 #x0000000000000003))
(assert (= temp1038_124 temp1038_123))
(assert (= temp1038_125 (select ARGNAME_stride_NAMEEND_VAL temp1038_124)))
(assert (= temp1038_126 #x0000000000000000))
(assert (= temp1038_127 #x0000000000000004))
(assert (= temp1038_128 temp1038_127))
(assert (= temp1038_129 (select ARGNAME_stride_NAMEEND_VAL temp1038_128)))
(assert (= temp1038_130 #x0000000000000000))
(assert (= temp1038_131 #x0000000000000005))
(assert (= temp1038_132 temp1038_131))
(assert (= temp1038_133 (select ARGNAME_stride_NAMEEND_VAL temp1038_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1038_113 temp1038_110)
             (bvsle temp1038_117 temp1038_114)
             (bvsle temp1038_121 temp1038_118)
             (bvsle temp1038_125 temp1038_122)
             (bvsle temp1038_129 temp1038_126)
             (bvsle temp1038_133 temp1038_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_134 #x0000000000000000))
(assert (= var1322807 temp1038_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_135 #x0000000000000001))
(assert (= var1322819 temp1038_135))
(assert (= temp1038_136 #x0000000000000000))
(assert (= var1310898 temp1038_136))
(assert (= temp1038_137 #x0000000000000000))
(assert (= temp1038_138 temp1038_137))
(assert (= temp1038_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_138)))
(assert (= temp1038_140 #x0000000000000001))
(assert (= temp1038_141 temp1038_140))
(assert (= temp1038_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_141)))
(assert (= temp1038_143 #x0000000000000002))
(assert (= temp1038_144 temp1038_143))
(assert (= temp1038_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_144)))
(assert (= temp1038_146 #x0000000000000003))
(assert (= temp1038_147 temp1038_146))
(assert (= temp1038_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_147)))
(assert (= temp1038_149 #x0000000000000004))
(assert (= temp1038_150 temp1038_149))
(assert (= temp1038_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_150)))
(assert (= temp1038_152 #x0000000000000005))
(assert (= temp1038_153 temp1038_152))
(assert (= temp1038_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_153)))
(assert (= temp1038_156 var1310898))
(assert (= temp1038_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_156)))
(assert (= temp1038_155 temp1038_157))
(assert (= var1322852
   (ite (bvslt temp1038_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_158 #x0000000000000000))
(assert (= var1322852 temp1038_158))
(assert (= temp1038_159 #x0000000000000000))
(assert (= var1310898 temp1038_159))
(assert (= temp1038_161 var1310898))
(assert (= temp1038_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_161)))
(assert (= temp1038_160 temp1038_162))
(assert (= var1322874 (bvsmod temp1038_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1038_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1038_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1038_164 #x0000000000000001))
(assert (= var1322875 temp1038_164))
(assert (= temp1038_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1038_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_166 #x0000000000000001))
(assert (= var1322895 temp1038_166))
(assert (= temp1038_167 #x0000000000000001))
(assert (= var1311786 temp1038_167))
(assert (= temp1038_168 #x0000000000000000))
(assert (= temp1038_169 temp1038_168))
(assert (= temp1038_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_169)))
(assert (= temp1038_171 #x0000000000000001))
(assert (= temp1038_172 temp1038_171))
(assert (= temp1038_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_172)))
(assert (= temp1038_174 #x0000000000000002))
(assert (= temp1038_175 temp1038_174))
(assert (= temp1038_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_175)))
(assert (= temp1038_177 #x0000000000000003))
(assert (= temp1038_178 temp1038_177))
(assert (= temp1038_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_178)))
(assert (= temp1038_180 #x0000000000000004))
(assert (= temp1038_181 temp1038_180))
(assert (= temp1038_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_181)))
(assert (= temp1038_183 #x0000000000000005))
(assert (= temp1038_184 temp1038_183))
(assert (= temp1038_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_184)))
(assert (= temp1038_186 #x0000000000000000))
(assert (= temp1038_187
   (ite (bvslt var1311786 temp1038_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1038_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_187)))
(assert (= var1322903 temp1038_188))
(assert (bvslt (ite (bvslt var1311786 temp1038_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1038_189 #x0000000000000001))
(assert (= var1311786 temp1038_189))
(assert (= temp1038_191 var1311786))
(assert (= temp1038_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_191)))
(assert (= temp1038_190 temp1038_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1038_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1038_193 #x0000000000000001))
(assert (= var1322908 temp1038_193))
(assert (= temp1038_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1038_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_195 #x0000000000000001))
(assert (= var1322975 temp1038_195))
(assert (= temp1038_196 #x0000000000000000))
(assert (= var1310898 temp1038_196))
(assert (= temp1038_197 #x0000000000000000))
(assert (= temp1038_198 temp1038_197))
(assert (= temp1038_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1038_198)))
(assert (= temp1038_200 #x0000000000000001))
(assert (= temp1038_201 temp1038_200))
(assert (= temp1038_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1038_201)))
(assert (= temp1038_203 #x0000000000000002))
(assert (= temp1038_204 temp1038_203))
(assert (= temp1038_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1038_204)))
(assert (= temp1038_206 #x0000000000000003))
(assert (= temp1038_207 temp1038_206))
(assert (= temp1038_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1038_207)))
(assert (= temp1038_209 #x0000000000000004))
(assert (= temp1038_210 temp1038_209))
(assert (= temp1038_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1038_210)))
(assert (= temp1038_212 #x0000000000000005))
(assert (= temp1038_213 temp1038_212))
(assert (= temp1038_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1038_213)))
(assert (= temp1038_215 #x0000000000000000))
(assert (= temp1038_216
   (ite (bvslt var1310898 temp1038_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1038_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1038_216)))
(assert (= var1322977 temp1038_217))
(assert (bvslt (ite (bvslt var1310898 temp1038_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1038_218 #x0000000000000000))
(assert (= var1310898 temp1038_218))
(assert (= temp1038_220 var1310898))
(assert (= temp1038_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_220)))
(assert (= temp1038_219 temp1038_221))
(assert (= var1322980
   (ite (= var1322977 temp1038_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1038_222 #x0000000000000001))
(assert (= var1322980 temp1038_222))
(assert (= temp1038_223 #x0000000000000002))
(assert (= var1848169 temp1038_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1038_225 #x0000000000000001))
(assert (= var1323065 temp1038_225))
(assert (= temp1038_226 #x0000000000000001))
(assert (= var3486735 temp1038_226))
(assert (= temp1038_227 #x0000000000000001))
(assert (= var3814415 temp1038_227))
(assert (= temp1038_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1038_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_229 #x0000000000000001))
(assert (= var79986 temp1038_229))
(assert (= temp1038_230 #x0000000000000001))
(assert (= var80116 temp1038_230))
(assert (= var4796905 var80116))
(assert (= temp1038_231 #x0000000000000000))
(assert (= var4784306 temp1038_231))
(assert (= temp1038_232 #x0000000000000000))
(assert (= temp1038_233
   (ite (bvslt var4784306 temp1038_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1038_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_233)))
(assert (= var4796924 temp1038_234))
(assert (bvslt (ite (bvslt var4784306 temp1038_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1038_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1038_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1038_236 #x0000000000000001))
(assert (= var4796925 temp1038_236))
(assert (= temp1038_237 #x0000000000000000))
(assert (= var4996927 temp1038_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1038_238 #x0000000000000002))
(assert (= var5125763 temp1038_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_239 #x0000000000000000))
(assert (= var5191324 temp1038_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5845392 var80129))
(assert (= var6107536 var80129))
(assert (= temp1038_240 #x0000000000000001))
(assert (= var79986 temp1038_240))
(model-add temp1038_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1038_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1038_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






