(declare-fun temp1053_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1053_2 () (_ BitVec 64))
(declare-fun temp1053_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1053_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1053_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1053_6 () (_ BitVec 64))
(declare-fun temp1053_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1053_8 () (_ BitVec 64))
(declare-fun temp1053_9 () (_ BitVec 64))
(declare-fun temp1053_10 () (_ BitVec 64))
(declare-fun temp1053_11 () (_ BitVec 64))
(declare-fun temp1053_12 () (_ BitVec 64))
(declare-fun temp1053_13 () (_ BitVec 64))
(declare-fun temp1053_14 () (_ BitVec 64))
(declare-fun temp1053_15 () (_ BitVec 64))
(declare-fun temp1053_16 () (_ BitVec 64))
(declare-fun temp1053_17 () (_ BitVec 64))
(declare-fun temp1053_18 () (_ BitVec 64))
(declare-fun temp1053_19 () (_ BitVec 64))
(declare-fun temp1053_20 () (_ BitVec 64))
(declare-fun temp1053_21 () (_ BitVec 64))
(declare-fun temp1053_22 () (_ BitVec 64))
(declare-fun temp1053_23 () (_ BitVec 64))
(declare-fun temp1053_24 () (_ BitVec 64))
(declare-fun temp1053_25 () (_ BitVec 64))
(declare-fun temp1053_26 () (_ BitVec 64))
(declare-fun temp1053_27 () (_ BitVec 64))
(declare-fun temp1053_28 () (_ BitVec 64))
(declare-fun temp1053_29 () (_ BitVec 64))
(declare-fun temp1053_30 () (_ BitVec 64))
(declare-fun temp1053_31 () (_ BitVec 64))
(declare-fun temp1053_32 () (_ BitVec 64))
(declare-fun temp1053_33 () (_ BitVec 64))
(declare-fun temp1053_34 () (_ BitVec 64))
(declare-fun temp1053_35 () (_ BitVec 64))
(declare-fun temp1053_36 () (_ BitVec 64))
(declare-fun temp1053_37 () (_ BitVec 64))
(declare-fun temp1053_38 () (_ BitVec 64))
(declare-fun temp1053_39 () (_ BitVec 64))
(declare-fun temp1053_40 () (_ BitVec 64))
(declare-fun temp1053_41 () (_ BitVec 64))
(declare-fun temp1053_42 () (_ BitVec 64))
(declare-fun temp1053_43 () (_ BitVec 64))
(declare-fun temp1053_44 () (_ BitVec 64))
(declare-fun temp1053_45 () (_ BitVec 64))
(declare-fun temp1053_46 () (_ BitVec 64))
(declare-fun temp1053_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1053_48 () (_ BitVec 64))
(declare-fun temp1053_49 () (_ BitVec 64))
(declare-fun temp1053_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1053_51 () (_ BitVec 64))
(declare-fun temp1053_52 () (_ BitVec 64))
(declare-fun temp1053_53 () (_ BitVec 64))
(declare-fun temp1053_54 () (_ BitVec 64))
(declare-fun temp1053_55 () (_ BitVec 64))
(declare-fun temp1053_56 () (_ BitVec 64))
(declare-fun temp1053_57 () (_ BitVec 64))
(declare-fun temp1053_58 () (_ BitVec 64))
(declare-fun temp1053_59 () (_ BitVec 64))
(declare-fun temp1053_60 () (_ BitVec 64))
(declare-fun temp1053_61 () (_ BitVec 64))
(declare-fun temp1053_62 () (_ BitVec 64))
(declare-fun temp1053_63 () (_ BitVec 64))
(declare-fun temp1053_64 () (_ BitVec 64))
(declare-fun temp1053_65 () (_ BitVec 64))
(declare-fun temp1053_66 () (_ BitVec 64))
(declare-fun temp1053_67 () (_ BitVec 64))
(declare-fun temp1053_68 () (_ BitVec 64))
(declare-fun temp1053_69 () (_ BitVec 64))
(declare-fun temp1053_70 () (_ BitVec 64))
(declare-fun temp1053_71 () (_ BitVec 64))
(declare-fun temp1053_72 () (_ BitVec 64))
(declare-fun temp1053_73 () (_ BitVec 64))
(declare-fun temp1053_74 () (_ BitVec 64))
(declare-fun temp1053_75 () (_ BitVec 64))
(declare-fun temp1053_76 () (_ BitVec 64))
(declare-fun temp1053_77 () (_ BitVec 64))
(declare-fun temp1053_78 () (_ BitVec 64))
(declare-fun temp1053_79 () (_ BitVec 64))
(declare-fun temp1053_80 () (_ BitVec 64))
(declare-fun temp1053_81 () (_ BitVec 64))
(declare-fun temp1053_82 () (_ BitVec 64))
(declare-fun temp1053_83 () (_ BitVec 64))
(declare-fun temp1053_84 () (_ BitVec 64))
(declare-fun temp1053_85 () (_ BitVec 64))
(declare-fun temp1053_86 () (_ BitVec 64))
(declare-fun temp1053_87 () (_ BitVec 64))
(declare-fun temp1053_88 () (_ BitVec 64))
(declare-fun temp1053_89 () (_ BitVec 64))
(declare-fun temp1053_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1053_91 () (_ BitVec 64))
(declare-fun temp1053_92 () (_ BitVec 64))
(declare-fun temp1053_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1053_94 () (_ BitVec 64))
(declare-fun temp1053_95 () (_ BitVec 64))
(declare-fun temp1053_96 () (_ BitVec 64))
(declare-fun temp1053_97 () (_ BitVec 64))
(declare-fun temp1053_98 () (_ BitVec 64))
(declare-fun temp1053_99 () (_ BitVec 64))
(declare-fun temp1053_100 () (_ BitVec 64))
(declare-fun temp1053_101 () (_ BitVec 64))
(declare-fun temp1053_102 () (_ BitVec 64))
(declare-fun temp1053_103 () (_ BitVec 64))
(declare-fun temp1053_104 () (_ BitVec 64))
(declare-fun temp1053_105 () (_ BitVec 64))
(declare-fun temp1053_106 () (_ BitVec 64))
(declare-fun temp1053_107 () (_ BitVec 64))
(declare-fun temp1053_108 () (_ BitVec 64))
(declare-fun temp1053_109 () (_ BitVec 64))
(declare-fun temp1053_110 () (_ BitVec 64))
(declare-fun temp1053_111 () (_ BitVec 64))
(declare-fun temp1053_112 () (_ BitVec 64))
(declare-fun temp1053_113 () (_ BitVec 64))
(declare-fun temp1053_114 () (_ BitVec 64))
(declare-fun temp1053_115 () (_ BitVec 64))
(declare-fun temp1053_116 () (_ BitVec 64))
(declare-fun temp1053_117 () (_ BitVec 64))
(declare-fun temp1053_118 () (_ BitVec 64))
(declare-fun temp1053_119 () (_ BitVec 64))
(declare-fun temp1053_120 () (_ BitVec 64))
(declare-fun temp1053_121 () (_ BitVec 64))
(declare-fun temp1053_122 () (_ BitVec 64))
(declare-fun temp1053_123 () (_ BitVec 64))
(declare-fun temp1053_124 () (_ BitVec 64))
(declare-fun temp1053_125 () (_ BitVec 64))
(declare-fun temp1053_126 () (_ BitVec 64))
(declare-fun temp1053_127 () (_ BitVec 64))
(declare-fun temp1053_128 () (_ BitVec 64))
(declare-fun temp1053_129 () (_ BitVec 64))
(declare-fun temp1053_130 () (_ BitVec 64))
(declare-fun temp1053_131 () (_ BitVec 64))
(declare-fun temp1053_132 () (_ BitVec 64))
(declare-fun temp1053_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1053_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1053_135 () (_ BitVec 64))
(declare-fun temp1053_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1053_137 () (_ BitVec 64))
(declare-fun temp1053_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1053_139 () (_ BitVec 64))
(declare-fun temp1053_140 () (_ BitVec 64))
(declare-fun temp1053_141 () (_ BitVec 64))
(declare-fun temp1053_142 () (_ BitVec 64))
(declare-fun temp1053_143 () (_ BitVec 64))
(declare-fun temp1053_144 () (_ BitVec 64))
(declare-fun temp1053_145 () (_ BitVec 64))
(declare-fun temp1053_146 () (_ BitVec 64))
(declare-fun temp1053_147 () (_ BitVec 64))
(declare-fun temp1053_148 () (_ BitVec 64))
(declare-fun temp1053_149 () (_ BitVec 64))
(declare-fun temp1053_150 () (_ BitVec 64))
(declare-fun temp1053_151 () (_ BitVec 64))
(declare-fun temp1053_152 () (_ BitVec 64))
(declare-fun temp1053_153 () (_ BitVec 64))
(declare-fun temp1053_154 () (_ BitVec 64))
(declare-fun temp1053_156 () (_ BitVec 64))
(declare-fun temp1053_157 () (_ BitVec 64))
(declare-fun temp1053_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1053_158 () (_ BitVec 64))
(declare-fun temp1053_159 () (_ BitVec 64))
(declare-fun temp1053_161 () (_ BitVec 64))
(declare-fun temp1053_162 () (_ BitVec 64))
(declare-fun temp1053_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1053_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1053_164 () (_ BitVec 64))
(declare-fun temp1053_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1053_166 () (_ BitVec 64))
(declare-fun temp1053_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1053_168 () (_ BitVec 64))
(declare-fun temp1053_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1053_170 () (_ BitVec 64))
(declare-fun temp1053_171 () (_ BitVec 64))
(declare-fun temp1053_172 () (_ BitVec 64))
(declare-fun temp1053_173 () (_ BitVec 64))
(declare-fun temp1053_174 () (_ BitVec 64))
(declare-fun temp1053_175 () (_ BitVec 64))
(declare-fun temp1053_176 () (_ BitVec 64))
(declare-fun temp1053_177 () (_ BitVec 64))
(declare-fun temp1053_178 () (_ BitVec 64))
(declare-fun temp1053_179 () (_ BitVec 64))
(declare-fun temp1053_180 () (_ BitVec 64))
(declare-fun temp1053_181 () (_ BitVec 64))
(declare-fun temp1053_182 () (_ BitVec 64))
(declare-fun temp1053_183 () (_ BitVec 64))
(declare-fun temp1053_184 () (_ BitVec 64))
(declare-fun temp1053_185 () (_ BitVec 64))
(declare-fun temp1053_186 () (_ BitVec 64))
(declare-fun temp1053_187 () (_ BitVec 64))
(declare-fun temp1053_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1053_189 () (_ BitVec 64))
(declare-fun temp1053_191 () (_ BitVec 64))
(declare-fun temp1053_192 () (_ BitVec 64))
(declare-fun temp1053_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1053_193 () (_ BitVec 64))
(declare-fun temp1053_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1053_195 () (_ BitVec 64))
(declare-fun temp1053_196 () (_ BitVec 64))
(declare-fun temp1053_197 () (_ BitVec 64))
(declare-fun temp1053_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1053_199 () (_ BitVec 64))
(declare-fun temp1053_200 () (_ BitVec 64))
(declare-fun temp1053_201 () (_ BitVec 64))
(declare-fun temp1053_202 () (_ BitVec 64))
(declare-fun temp1053_203 () (_ BitVec 64))
(declare-fun temp1053_204 () (_ BitVec 64))
(declare-fun temp1053_205 () (_ BitVec 64))
(declare-fun temp1053_206 () (_ BitVec 64))
(declare-fun temp1053_207 () (_ BitVec 64))
(declare-fun temp1053_208 () (_ BitVec 64))
(declare-fun temp1053_209 () (_ BitVec 64))
(declare-fun temp1053_210 () (_ BitVec 64))
(declare-fun temp1053_211 () (_ BitVec 64))
(declare-fun temp1053_212 () (_ BitVec 64))
(declare-fun temp1053_213 () (_ BitVec 64))
(declare-fun temp1053_214 () (_ BitVec 64))
(declare-fun temp1053_215 () (_ BitVec 64))
(declare-fun temp1053_216 () (_ BitVec 64))
(declare-fun temp1053_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1053_218 () (_ BitVec 64))
(declare-fun temp1053_220 () (_ BitVec 64))
(declare-fun temp1053_221 () (_ BitVec 64))
(declare-fun temp1053_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1053_222 () (_ BitVec 64))
(declare-fun temp1053_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1053_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1053_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1053_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1053_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1053_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1053_229 () (_ BitVec 64))
(declare-fun temp1053_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1053_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1053_232 () (_ BitVec 64))
(declare-fun temp1053_233 () (_ BitVec 64))
(declare-fun temp1053_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1053_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1053_236 () (_ BitVec 64))
(declare-fun temp1053_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1053_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1053_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1053_240 () (_ BitVec 64))
(assert (= temp1053_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1053_1)))
(assert (= temp1053_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1053_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_3 #x0000000000000000))
(assert (= var79869 temp1053_3))
(assert (= temp1053_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1053_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_5 #x0000000000000000))
(assert (= var79914 temp1053_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1053_6 #x0000000000000000))
(assert (= temp1053_7 temp1053_6))
(assert (= temp1053_8 (select ARGNAME_padding_NAMEEND_VAL temp1053_7)))
(assert (= temp1053_9 #x0000000000000001))
(assert (= temp1053_10 temp1053_9))
(assert (= temp1053_11 (select ARGNAME_padding_NAMEEND_VAL temp1053_10)))
(assert (= temp1053_12 #x0000000000000002))
(assert (= temp1053_13 temp1053_12))
(assert (= temp1053_14 (select ARGNAME_padding_NAMEEND_VAL temp1053_13)))
(assert (= temp1053_15 #x0000000000000003))
(assert (= temp1053_16 temp1053_15))
(assert (= temp1053_17 (select ARGNAME_padding_NAMEEND_VAL temp1053_16)))
(assert (= temp1053_18 #x0000000000000004))
(assert (= temp1053_19 temp1053_18))
(assert (= temp1053_20 (select ARGNAME_padding_NAMEEND_VAL temp1053_19)))
(assert (= temp1053_21 #x0000000000000005))
(assert (= temp1053_22 temp1053_21))
(assert (= temp1053_23 (select ARGNAME_padding_NAMEEND_VAL temp1053_22)))
(assert (= temp1053_24 #x0000000000000000))
(assert (= temp1053_25 #x0000000000000000))
(assert (= temp1053_26 temp1053_25))
(assert (= temp1053_27 (select ARGNAME_padding_NAMEEND_VAL temp1053_26)))
(assert (= temp1053_28 #x0000000000000000))
(assert (= temp1053_29 #x0000000000000001))
(assert (= temp1053_30 temp1053_29))
(assert (= temp1053_31 (select ARGNAME_padding_NAMEEND_VAL temp1053_30)))
(assert (= temp1053_32 #x0000000000000000))
(assert (= temp1053_33 #x0000000000000002))
(assert (= temp1053_34 temp1053_33))
(assert (= temp1053_35 (select ARGNAME_padding_NAMEEND_VAL temp1053_34)))
(assert (= temp1053_36 #x0000000000000000))
(assert (= temp1053_37 #x0000000000000003))
(assert (= temp1053_38 temp1053_37))
(assert (= temp1053_39 (select ARGNAME_padding_NAMEEND_VAL temp1053_38)))
(assert (= temp1053_40 #x0000000000000000))
(assert (= temp1053_41 #x0000000000000004))
(assert (= temp1053_42 temp1053_41))
(assert (= temp1053_43 (select ARGNAME_padding_NAMEEND_VAL temp1053_42)))
(assert (= temp1053_44 #x0000000000000000))
(assert (= temp1053_45 #x0000000000000005))
(assert (= temp1053_46 temp1053_45))
(assert (= temp1053_47 (select ARGNAME_padding_NAMEEND_VAL temp1053_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1053_27 temp1053_24)
             (bvslt temp1053_31 temp1053_28)
             (bvslt temp1053_35 temp1053_32)
             (bvslt temp1053_39 temp1053_36)
             (bvslt temp1053_43 temp1053_40)
             (bvslt temp1053_47 temp1053_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_48 #x0000000000000000))
(assert (= var1322786 temp1053_48))
(assert (= temp1053_49 #x0000000000000000))
(assert (= temp1053_50 temp1053_49))
(assert (= temp1053_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_50)))
(assert (= temp1053_52 #x0000000000000001))
(assert (= temp1053_53 temp1053_52))
(assert (= temp1053_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_53)))
(assert (= temp1053_55 #x0000000000000002))
(assert (= temp1053_56 temp1053_55))
(assert (= temp1053_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_56)))
(assert (= temp1053_58 #x0000000000000003))
(assert (= temp1053_59 temp1053_58))
(assert (= temp1053_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_59)))
(assert (= temp1053_61 #x0000000000000004))
(assert (= temp1053_62 temp1053_61))
(assert (= temp1053_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_62)))
(assert (= temp1053_64 #x0000000000000005))
(assert (= temp1053_65 temp1053_64))
(assert (= temp1053_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_65)))
(assert (= temp1053_67 #x0000000000000000))
(assert (= temp1053_68 #x0000000000000000))
(assert (= temp1053_69 temp1053_68))
(assert (= temp1053_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_69)))
(assert (= temp1053_71 #x0000000000000000))
(assert (= temp1053_72 #x0000000000000001))
(assert (= temp1053_73 temp1053_72))
(assert (= temp1053_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_73)))
(assert (= temp1053_75 #x0000000000000000))
(assert (= temp1053_76 #x0000000000000002))
(assert (= temp1053_77 temp1053_76))
(assert (= temp1053_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_77)))
(assert (= temp1053_79 #x0000000000000000))
(assert (= temp1053_80 #x0000000000000003))
(assert (= temp1053_81 temp1053_80))
(assert (= temp1053_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_81)))
(assert (= temp1053_83 #x0000000000000000))
(assert (= temp1053_84 #x0000000000000004))
(assert (= temp1053_85 temp1053_84))
(assert (= temp1053_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_85)))
(assert (= temp1053_87 #x0000000000000000))
(assert (= temp1053_88 #x0000000000000005))
(assert (= temp1053_89 temp1053_88))
(assert (= temp1053_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1053_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1053_70 temp1053_67)
             (bvslt temp1053_74 temp1053_71)
             (bvslt temp1053_78 temp1053_75)
             (bvslt temp1053_82 temp1053_79)
             (bvslt temp1053_86 temp1053_83)
             (bvslt temp1053_90 temp1053_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_91 #x0000000000000000))
(assert (= var1322797 temp1053_91))
(assert (= temp1053_92 #x0000000000000000))
(assert (= temp1053_93 temp1053_92))
(assert (= temp1053_94 (select ARGNAME_stride_NAMEEND_VAL temp1053_93)))
(assert (= temp1053_95 #x0000000000000001))
(assert (= temp1053_96 temp1053_95))
(assert (= temp1053_97 (select ARGNAME_stride_NAMEEND_VAL temp1053_96)))
(assert (= temp1053_98 #x0000000000000002))
(assert (= temp1053_99 temp1053_98))
(assert (= temp1053_100 (select ARGNAME_stride_NAMEEND_VAL temp1053_99)))
(assert (= temp1053_101 #x0000000000000003))
(assert (= temp1053_102 temp1053_101))
(assert (= temp1053_103 (select ARGNAME_stride_NAMEEND_VAL temp1053_102)))
(assert (= temp1053_104 #x0000000000000004))
(assert (= temp1053_105 temp1053_104))
(assert (= temp1053_106 (select ARGNAME_stride_NAMEEND_VAL temp1053_105)))
(assert (= temp1053_107 #x0000000000000005))
(assert (= temp1053_108 temp1053_107))
(assert (= temp1053_109 (select ARGNAME_stride_NAMEEND_VAL temp1053_108)))
(assert (= temp1053_110 #x0000000000000000))
(assert (= temp1053_111 #x0000000000000000))
(assert (= temp1053_112 temp1053_111))
(assert (= temp1053_113 (select ARGNAME_stride_NAMEEND_VAL temp1053_112)))
(assert (= temp1053_114 #x0000000000000000))
(assert (= temp1053_115 #x0000000000000001))
(assert (= temp1053_116 temp1053_115))
(assert (= temp1053_117 (select ARGNAME_stride_NAMEEND_VAL temp1053_116)))
(assert (= temp1053_118 #x0000000000000000))
(assert (= temp1053_119 #x0000000000000002))
(assert (= temp1053_120 temp1053_119))
(assert (= temp1053_121 (select ARGNAME_stride_NAMEEND_VAL temp1053_120)))
(assert (= temp1053_122 #x0000000000000000))
(assert (= temp1053_123 #x0000000000000003))
(assert (= temp1053_124 temp1053_123))
(assert (= temp1053_125 (select ARGNAME_stride_NAMEEND_VAL temp1053_124)))
(assert (= temp1053_126 #x0000000000000000))
(assert (= temp1053_127 #x0000000000000004))
(assert (= temp1053_128 temp1053_127))
(assert (= temp1053_129 (select ARGNAME_stride_NAMEEND_VAL temp1053_128)))
(assert (= temp1053_130 #x0000000000000000))
(assert (= temp1053_131 #x0000000000000005))
(assert (= temp1053_132 temp1053_131))
(assert (= temp1053_133 (select ARGNAME_stride_NAMEEND_VAL temp1053_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1053_113 temp1053_110)
             (bvsle temp1053_117 temp1053_114)
             (bvsle temp1053_121 temp1053_118)
             (bvsle temp1053_125 temp1053_122)
             (bvsle temp1053_129 temp1053_126)
             (bvsle temp1053_133 temp1053_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_134 #x0000000000000000))
(assert (= var1322807 temp1053_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_135 #x0000000000000001))
(assert (= var1322819 temp1053_135))
(assert (= temp1053_136 #x0000000000000000))
(assert (= var1310898 temp1053_136))
(assert (= temp1053_137 #x0000000000000000))
(assert (= temp1053_138 temp1053_137))
(assert (= temp1053_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_138)))
(assert (= temp1053_140 #x0000000000000001))
(assert (= temp1053_141 temp1053_140))
(assert (= temp1053_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_141)))
(assert (= temp1053_143 #x0000000000000002))
(assert (= temp1053_144 temp1053_143))
(assert (= temp1053_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_144)))
(assert (= temp1053_146 #x0000000000000003))
(assert (= temp1053_147 temp1053_146))
(assert (= temp1053_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_147)))
(assert (= temp1053_149 #x0000000000000004))
(assert (= temp1053_150 temp1053_149))
(assert (= temp1053_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_150)))
(assert (= temp1053_152 #x0000000000000005))
(assert (= temp1053_153 temp1053_152))
(assert (= temp1053_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_153)))
(assert (= temp1053_156 var1310898))
(assert (= temp1053_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_156)))
(assert (= temp1053_155 temp1053_157))
(assert (= var1322852
   (ite (bvslt temp1053_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_158 #x0000000000000000))
(assert (= var1322852 temp1053_158))
(assert (= temp1053_159 #x0000000000000000))
(assert (= var1310898 temp1053_159))
(assert (= temp1053_161 var1310898))
(assert (= temp1053_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_161)))
(assert (= temp1053_160 temp1053_162))
(assert (= var1322874 (bvsmod temp1053_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1053_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1053_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1053_164 #x0000000000000001))
(assert (= var1322875 temp1053_164))
(assert (= temp1053_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1053_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_166 #x0000000000000001))
(assert (= var1322895 temp1053_166))
(assert (= temp1053_167 #x0000000000000001))
(assert (= var1311786 temp1053_167))
(assert (= temp1053_168 #x0000000000000000))
(assert (= temp1053_169 temp1053_168))
(assert (= temp1053_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1053_169)))
(assert (= temp1053_171 #x0000000000000001))
(assert (= temp1053_172 temp1053_171))
(assert (= temp1053_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1053_172)))
(assert (= temp1053_174 #x0000000000000002))
(assert (= temp1053_175 temp1053_174))
(assert (= temp1053_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1053_175)))
(assert (= temp1053_177 #x0000000000000003))
(assert (= temp1053_178 temp1053_177))
(assert (= temp1053_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1053_178)))
(assert (= temp1053_180 #x0000000000000004))
(assert (= temp1053_181 temp1053_180))
(assert (= temp1053_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1053_181)))
(assert (= temp1053_183 #x0000000000000005))
(assert (= temp1053_184 temp1053_183))
(assert (= temp1053_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1053_184)))
(assert (= temp1053_186 #x0000000000000000))
(assert (= temp1053_187
   (ite (bvslt var1311786 temp1053_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1053_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1053_187)))
(assert (= var1322903 temp1053_188))
(assert (bvslt (ite (bvslt var1311786 temp1053_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1053_189 #x0000000000000001))
(assert (= var1311786 temp1053_189))
(assert (= temp1053_191 var1311786))
(assert (= temp1053_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_191)))
(assert (= temp1053_190 temp1053_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1053_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1053_193 #x0000000000000001))
(assert (= var1322908 temp1053_193))
(assert (= temp1053_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1053_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_195 #x0000000000000001))
(assert (= var1322975 temp1053_195))
(assert (= temp1053_196 #x0000000000000000))
(assert (= var1310898 temp1053_196))
(assert (= temp1053_197 #x0000000000000000))
(assert (= temp1053_198 temp1053_197))
(assert (= temp1053_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1053_198)))
(assert (= temp1053_200 #x0000000000000001))
(assert (= temp1053_201 temp1053_200))
(assert (= temp1053_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1053_201)))
(assert (= temp1053_203 #x0000000000000002))
(assert (= temp1053_204 temp1053_203))
(assert (= temp1053_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1053_204)))
(assert (= temp1053_206 #x0000000000000003))
(assert (= temp1053_207 temp1053_206))
(assert (= temp1053_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1053_207)))
(assert (= temp1053_209 #x0000000000000004))
(assert (= temp1053_210 temp1053_209))
(assert (= temp1053_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1053_210)))
(assert (= temp1053_212 #x0000000000000005))
(assert (= temp1053_213 temp1053_212))
(assert (= temp1053_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1053_213)))
(assert (= temp1053_215 #x0000000000000000))
(assert (= temp1053_216
   (ite (bvslt var1310898 temp1053_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1053_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1053_216)))
(assert (= var1322977 temp1053_217))
(assert (bvslt (ite (bvslt var1310898 temp1053_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1053_218 #x0000000000000000))
(assert (= var1310898 temp1053_218))
(assert (= temp1053_220 var1310898))
(assert (= temp1053_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1053_220)))
(assert (= temp1053_219 temp1053_221))
(assert (= var1322980
   (ite (= var1322977 temp1053_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1053_222 #x0000000000000001))
(assert (= var1322980 temp1053_222))
(assert (= temp1053_223 #x0000000000000002))
(assert (= var1848169 temp1053_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1053_225 #x0000000000000001))
(assert (= var1323065 temp1053_225))
(assert (= temp1053_226 #x0000000000000001))
(assert (= var3486735 temp1053_226))
(assert (= temp1053_227 #x0000000000000001))
(assert (= var3814415 temp1053_227))
(assert (= temp1053_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1053_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_229 #x0000000000000001))
(assert (= var79986 temp1053_229))
(assert (= temp1053_230 #x0000000000000001))
(assert (= var80116 temp1053_230))
(assert (= var4796905 var80116))
(assert (= temp1053_231 #x0000000000000000))
(assert (= var4784306 temp1053_231))
(assert (= temp1053_232 #x0000000000000000))
(assert (= temp1053_233
   (ite (bvslt var4784306 temp1053_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1053_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1053_233)))
(assert (= var4796924 temp1053_234))
(assert (bvslt (ite (bvslt var4784306 temp1053_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1053_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1053_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1053_236 #x0000000000000001))
(assert (= var4796925 temp1053_236))
(assert (= temp1053_237 #x0000000000000000))
(assert (= var4996927 temp1053_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1053_238 #x0000000000000002))
(assert (= var5125763 temp1053_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1053_239 #x0000000000000000))
(assert (= var5191324 temp1053_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1053_240 #x0000000000000001))
(assert (= var79986 temp1053_240))
(model-add temp1053_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1053_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1053_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






