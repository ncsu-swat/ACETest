(declare-fun temp393_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp393_2 () (_ BitVec 64))
(declare-fun temp393_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp393_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp393_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp393_6 () (_ BitVec 64))
(declare-fun temp393_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_8 () (_ BitVec 64))
(declare-fun temp393_9 () (_ BitVec 64))
(declare-fun temp393_10 () (_ BitVec 64))
(declare-fun temp393_11 () (_ BitVec 64))
(declare-fun temp393_12 () (_ BitVec 64))
(declare-fun temp393_13 () (_ BitVec 64))
(declare-fun temp393_14 () (_ BitVec 64))
(declare-fun temp393_15 () (_ BitVec 64))
(declare-fun temp393_16 () (_ BitVec 64))
(declare-fun temp393_17 () (_ BitVec 64))
(declare-fun temp393_18 () (_ BitVec 64))
(declare-fun temp393_19 () (_ BitVec 64))
(declare-fun temp393_20 () (_ BitVec 64))
(declare-fun temp393_21 () (_ BitVec 64))
(declare-fun temp393_22 () (_ BitVec 64))
(declare-fun temp393_23 () (_ BitVec 64))
(declare-fun temp393_24 () (_ BitVec 64))
(declare-fun temp393_25 () (_ BitVec 64))
(declare-fun temp393_26 () (_ BitVec 64))
(declare-fun temp393_27 () (_ BitVec 64))
(declare-fun temp393_28 () (_ BitVec 64))
(declare-fun temp393_29 () (_ BitVec 64))
(declare-fun temp393_30 () (_ BitVec 64))
(declare-fun temp393_31 () (_ BitVec 64))
(declare-fun temp393_32 () (_ BitVec 64))
(declare-fun temp393_33 () (_ BitVec 64))
(declare-fun temp393_34 () (_ BitVec 64))
(declare-fun temp393_35 () (_ BitVec 64))
(declare-fun temp393_36 () (_ BitVec 64))
(declare-fun temp393_37 () (_ BitVec 64))
(declare-fun temp393_38 () (_ BitVec 64))
(declare-fun temp393_39 () (_ BitVec 64))
(declare-fun temp393_40 () (_ BitVec 64))
(declare-fun temp393_41 () (_ BitVec 64))
(declare-fun temp393_42 () (_ BitVec 64))
(declare-fun temp393_43 () (_ BitVec 64))
(declare-fun temp393_44 () (_ BitVec 64))
(declare-fun temp393_45 () (_ BitVec 64))
(declare-fun temp393_46 () (_ BitVec 64))
(declare-fun temp393_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp393_48 () (_ BitVec 64))
(declare-fun temp393_49 () (_ BitVec 64))
(declare-fun temp393_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_51 () (_ BitVec 64))
(declare-fun temp393_52 () (_ BitVec 64))
(declare-fun temp393_53 () (_ BitVec 64))
(declare-fun temp393_54 () (_ BitVec 64))
(declare-fun temp393_55 () (_ BitVec 64))
(declare-fun temp393_56 () (_ BitVec 64))
(declare-fun temp393_57 () (_ BitVec 64))
(declare-fun temp393_58 () (_ BitVec 64))
(declare-fun temp393_59 () (_ BitVec 64))
(declare-fun temp393_60 () (_ BitVec 64))
(declare-fun temp393_61 () (_ BitVec 64))
(declare-fun temp393_62 () (_ BitVec 64))
(declare-fun temp393_63 () (_ BitVec 64))
(declare-fun temp393_64 () (_ BitVec 64))
(declare-fun temp393_65 () (_ BitVec 64))
(declare-fun temp393_66 () (_ BitVec 64))
(declare-fun temp393_67 () (_ BitVec 64))
(declare-fun temp393_68 () (_ BitVec 64))
(declare-fun temp393_69 () (_ BitVec 64))
(declare-fun temp393_70 () (_ BitVec 64))
(declare-fun temp393_71 () (_ BitVec 64))
(declare-fun temp393_72 () (_ BitVec 64))
(declare-fun temp393_73 () (_ BitVec 64))
(declare-fun temp393_74 () (_ BitVec 64))
(declare-fun temp393_75 () (_ BitVec 64))
(declare-fun temp393_76 () (_ BitVec 64))
(declare-fun temp393_77 () (_ BitVec 64))
(declare-fun temp393_78 () (_ BitVec 64))
(declare-fun temp393_79 () (_ BitVec 64))
(declare-fun temp393_80 () (_ BitVec 64))
(declare-fun temp393_81 () (_ BitVec 64))
(declare-fun temp393_82 () (_ BitVec 64))
(declare-fun temp393_83 () (_ BitVec 64))
(declare-fun temp393_84 () (_ BitVec 64))
(declare-fun temp393_85 () (_ BitVec 64))
(declare-fun temp393_86 () (_ BitVec 64))
(declare-fun temp393_87 () (_ BitVec 64))
(declare-fun temp393_88 () (_ BitVec 64))
(declare-fun temp393_89 () (_ BitVec 64))
(declare-fun temp393_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp393_91 () (_ BitVec 64))
(declare-fun temp393_92 () (_ BitVec 64))
(declare-fun temp393_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_94 () (_ BitVec 64))
(declare-fun temp393_95 () (_ BitVec 64))
(declare-fun temp393_96 () (_ BitVec 64))
(declare-fun temp393_97 () (_ BitVec 64))
(declare-fun temp393_98 () (_ BitVec 64))
(declare-fun temp393_99 () (_ BitVec 64))
(declare-fun temp393_100 () (_ BitVec 64))
(declare-fun temp393_101 () (_ BitVec 64))
(declare-fun temp393_102 () (_ BitVec 64))
(declare-fun temp393_103 () (_ BitVec 64))
(declare-fun temp393_104 () (_ BitVec 64))
(declare-fun temp393_105 () (_ BitVec 64))
(declare-fun temp393_106 () (_ BitVec 64))
(declare-fun temp393_107 () (_ BitVec 64))
(declare-fun temp393_108 () (_ BitVec 64))
(declare-fun temp393_109 () (_ BitVec 64))
(declare-fun temp393_110 () (_ BitVec 64))
(declare-fun temp393_111 () (_ BitVec 64))
(declare-fun temp393_112 () (_ BitVec 64))
(declare-fun temp393_113 () (_ BitVec 64))
(declare-fun temp393_114 () (_ BitVec 64))
(declare-fun temp393_115 () (_ BitVec 64))
(declare-fun temp393_116 () (_ BitVec 64))
(declare-fun temp393_117 () (_ BitVec 64))
(declare-fun temp393_118 () (_ BitVec 64))
(declare-fun temp393_119 () (_ BitVec 64))
(declare-fun temp393_120 () (_ BitVec 64))
(declare-fun temp393_121 () (_ BitVec 64))
(declare-fun temp393_122 () (_ BitVec 64))
(declare-fun temp393_123 () (_ BitVec 64))
(declare-fun temp393_124 () (_ BitVec 64))
(declare-fun temp393_125 () (_ BitVec 64))
(declare-fun temp393_126 () (_ BitVec 64))
(declare-fun temp393_127 () (_ BitVec 64))
(declare-fun temp393_128 () (_ BitVec 64))
(declare-fun temp393_129 () (_ BitVec 64))
(declare-fun temp393_130 () (_ BitVec 64))
(declare-fun temp393_131 () (_ BitVec 64))
(declare-fun temp393_132 () (_ BitVec 64))
(declare-fun temp393_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp393_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp393_135 () (_ BitVec 64))
(declare-fun temp393_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp393_137 () (_ BitVec 64))
(declare-fun temp393_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_139 () (_ BitVec 64))
(declare-fun temp393_140 () (_ BitVec 64))
(declare-fun temp393_141 () (_ BitVec 64))
(declare-fun temp393_142 () (_ BitVec 64))
(declare-fun temp393_143 () (_ BitVec 64))
(declare-fun temp393_144 () (_ BitVec 64))
(declare-fun temp393_145 () (_ BitVec 64))
(declare-fun temp393_146 () (_ BitVec 64))
(declare-fun temp393_147 () (_ BitVec 64))
(declare-fun temp393_148 () (_ BitVec 64))
(declare-fun temp393_149 () (_ BitVec 64))
(declare-fun temp393_150 () (_ BitVec 64))
(declare-fun temp393_151 () (_ BitVec 64))
(declare-fun temp393_152 () (_ BitVec 64))
(declare-fun temp393_153 () (_ BitVec 64))
(declare-fun temp393_154 () (_ BitVec 64))
(declare-fun temp393_156 () (_ BitVec 64))
(declare-fun temp393_157 () (_ BitVec 64))
(declare-fun temp393_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp393_158 () (_ BitVec 64))
(declare-fun temp393_159 () (_ BitVec 64))
(declare-fun temp393_161 () (_ BitVec 64))
(declare-fun temp393_162 () (_ BitVec 64))
(declare-fun temp393_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp393_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp393_164 () (_ BitVec 64))
(declare-fun temp393_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp393_166 () (_ BitVec 64))
(declare-fun temp393_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp393_168 () (_ BitVec 64))
(declare-fun temp393_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_170 () (_ BitVec 64))
(declare-fun temp393_171 () (_ BitVec 64))
(declare-fun temp393_172 () (_ BitVec 64))
(declare-fun temp393_173 () (_ BitVec 64))
(declare-fun temp393_174 () (_ BitVec 64))
(declare-fun temp393_175 () (_ BitVec 64))
(declare-fun temp393_176 () (_ BitVec 64))
(declare-fun temp393_177 () (_ BitVec 64))
(declare-fun temp393_178 () (_ BitVec 64))
(declare-fun temp393_179 () (_ BitVec 64))
(declare-fun temp393_180 () (_ BitVec 64))
(declare-fun temp393_181 () (_ BitVec 64))
(declare-fun temp393_182 () (_ BitVec 64))
(declare-fun temp393_183 () (_ BitVec 64))
(declare-fun temp393_184 () (_ BitVec 64))
(declare-fun temp393_185 () (_ BitVec 64))
(declare-fun temp393_186 () (_ BitVec 64))
(declare-fun temp393_187 () (_ BitVec 64))
(declare-fun temp393_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp393_189 () (_ BitVec 64))
(declare-fun temp393_191 () (_ BitVec 64))
(declare-fun temp393_192 () (_ BitVec 64))
(declare-fun temp393_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp393_193 () (_ BitVec 64))
(declare-fun temp393_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp393_195 () (_ BitVec 64))
(declare-fun temp393_196 () (_ BitVec 64))
(declare-fun temp393_197 () (_ BitVec 64))
(declare-fun temp393_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_199 () (_ BitVec 64))
(declare-fun temp393_200 () (_ BitVec 64))
(declare-fun temp393_201 () (_ BitVec 64))
(declare-fun temp393_202 () (_ BitVec 64))
(declare-fun temp393_203 () (_ BitVec 64))
(declare-fun temp393_204 () (_ BitVec 64))
(declare-fun temp393_205 () (_ BitVec 64))
(declare-fun temp393_206 () (_ BitVec 64))
(declare-fun temp393_207 () (_ BitVec 64))
(declare-fun temp393_208 () (_ BitVec 64))
(declare-fun temp393_209 () (_ BitVec 64))
(declare-fun temp393_210 () (_ BitVec 64))
(declare-fun temp393_211 () (_ BitVec 64))
(declare-fun temp393_212 () (_ BitVec 64))
(declare-fun temp393_213 () (_ BitVec 64))
(declare-fun temp393_214 () (_ BitVec 64))
(declare-fun temp393_215 () (_ BitVec 64))
(declare-fun temp393_216 () (_ BitVec 64))
(declare-fun temp393_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp393_218 () (_ BitVec 64))
(declare-fun temp393_220 () (_ BitVec 64))
(declare-fun temp393_221 () (_ BitVec 64))
(declare-fun temp393_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp393_222 () (_ BitVec 64))
(declare-fun temp393_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp393_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp393_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp393_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp393_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp393_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp393_229 () (_ BitVec 64))
(declare-fun temp393_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp393_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp393_232 () (_ BitVec 64))
(declare-fun temp393_233 () (_ BitVec 64))
(declare-fun temp393_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp393_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp393_236 () (_ BitVec 64))
(declare-fun temp393_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp393_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp393_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp393_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp393_241 () (_ BitVec 64))
(assert (= temp393_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp393_1)))
(assert (= temp393_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp393_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_3 #x0000000000000000))
(assert (= var79869 temp393_3))
(assert (= temp393_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp393_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_5 #x0000000000000000))
(assert (= var79914 temp393_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp393_6 #x0000000000000000))
(assert (= temp393_7 temp393_6))
(assert (= temp393_8 (select ARGNAME_padding_NAMEEND_VAL temp393_7)))
(assert (= temp393_9 #x0000000000000001))
(assert (= temp393_10 temp393_9))
(assert (= temp393_11 (select ARGNAME_padding_NAMEEND_VAL temp393_10)))
(assert (= temp393_12 #x0000000000000002))
(assert (= temp393_13 temp393_12))
(assert (= temp393_14 (select ARGNAME_padding_NAMEEND_VAL temp393_13)))
(assert (= temp393_15 #x0000000000000003))
(assert (= temp393_16 temp393_15))
(assert (= temp393_17 (select ARGNAME_padding_NAMEEND_VAL temp393_16)))
(assert (= temp393_18 #x0000000000000004))
(assert (= temp393_19 temp393_18))
(assert (= temp393_20 (select ARGNAME_padding_NAMEEND_VAL temp393_19)))
(assert (= temp393_21 #x0000000000000005))
(assert (= temp393_22 temp393_21))
(assert (= temp393_23 (select ARGNAME_padding_NAMEEND_VAL temp393_22)))
(assert (= temp393_24 #x0000000000000000))
(assert (= temp393_25 #x0000000000000000))
(assert (= temp393_26 temp393_25))
(assert (= temp393_27 (select ARGNAME_padding_NAMEEND_VAL temp393_26)))
(assert (= temp393_28 #x0000000000000000))
(assert (= temp393_29 #x0000000000000001))
(assert (= temp393_30 temp393_29))
(assert (= temp393_31 (select ARGNAME_padding_NAMEEND_VAL temp393_30)))
(assert (= temp393_32 #x0000000000000000))
(assert (= temp393_33 #x0000000000000002))
(assert (= temp393_34 temp393_33))
(assert (= temp393_35 (select ARGNAME_padding_NAMEEND_VAL temp393_34)))
(assert (= temp393_36 #x0000000000000000))
(assert (= temp393_37 #x0000000000000003))
(assert (= temp393_38 temp393_37))
(assert (= temp393_39 (select ARGNAME_padding_NAMEEND_VAL temp393_38)))
(assert (= temp393_40 #x0000000000000000))
(assert (= temp393_41 #x0000000000000004))
(assert (= temp393_42 temp393_41))
(assert (= temp393_43 (select ARGNAME_padding_NAMEEND_VAL temp393_42)))
(assert (= temp393_44 #x0000000000000000))
(assert (= temp393_45 #x0000000000000005))
(assert (= temp393_46 temp393_45))
(assert (= temp393_47 (select ARGNAME_padding_NAMEEND_VAL temp393_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp393_27 temp393_24)
             (bvslt temp393_31 temp393_28)
             (bvslt temp393_35 temp393_32)
             (bvslt temp393_39 temp393_36)
             (bvslt temp393_43 temp393_40)
             (bvslt temp393_47 temp393_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_48 #x0000000000000000))
(assert (= var1322786 temp393_48))
(assert (= temp393_49 #x0000000000000000))
(assert (= temp393_50 temp393_49))
(assert (= temp393_51 (select ARGNAME_output_padding_NAMEEND_VAL temp393_50)))
(assert (= temp393_52 #x0000000000000001))
(assert (= temp393_53 temp393_52))
(assert (= temp393_54 (select ARGNAME_output_padding_NAMEEND_VAL temp393_53)))
(assert (= temp393_55 #x0000000000000002))
(assert (= temp393_56 temp393_55))
(assert (= temp393_57 (select ARGNAME_output_padding_NAMEEND_VAL temp393_56)))
(assert (= temp393_58 #x0000000000000003))
(assert (= temp393_59 temp393_58))
(assert (= temp393_60 (select ARGNAME_output_padding_NAMEEND_VAL temp393_59)))
(assert (= temp393_61 #x0000000000000004))
(assert (= temp393_62 temp393_61))
(assert (= temp393_63 (select ARGNAME_output_padding_NAMEEND_VAL temp393_62)))
(assert (= temp393_64 #x0000000000000005))
(assert (= temp393_65 temp393_64))
(assert (= temp393_66 (select ARGNAME_output_padding_NAMEEND_VAL temp393_65)))
(assert (= temp393_67 #x0000000000000000))
(assert (= temp393_68 #x0000000000000000))
(assert (= temp393_69 temp393_68))
(assert (= temp393_70 (select ARGNAME_output_padding_NAMEEND_VAL temp393_69)))
(assert (= temp393_71 #x0000000000000000))
(assert (= temp393_72 #x0000000000000001))
(assert (= temp393_73 temp393_72))
(assert (= temp393_74 (select ARGNAME_output_padding_NAMEEND_VAL temp393_73)))
(assert (= temp393_75 #x0000000000000000))
(assert (= temp393_76 #x0000000000000002))
(assert (= temp393_77 temp393_76))
(assert (= temp393_78 (select ARGNAME_output_padding_NAMEEND_VAL temp393_77)))
(assert (= temp393_79 #x0000000000000000))
(assert (= temp393_80 #x0000000000000003))
(assert (= temp393_81 temp393_80))
(assert (= temp393_82 (select ARGNAME_output_padding_NAMEEND_VAL temp393_81)))
(assert (= temp393_83 #x0000000000000000))
(assert (= temp393_84 #x0000000000000004))
(assert (= temp393_85 temp393_84))
(assert (= temp393_86 (select ARGNAME_output_padding_NAMEEND_VAL temp393_85)))
(assert (= temp393_87 #x0000000000000000))
(assert (= temp393_88 #x0000000000000005))
(assert (= temp393_89 temp393_88))
(assert (= temp393_90 (select ARGNAME_output_padding_NAMEEND_VAL temp393_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp393_70 temp393_67)
             (bvslt temp393_74 temp393_71)
             (bvslt temp393_78 temp393_75)
             (bvslt temp393_82 temp393_79)
             (bvslt temp393_86 temp393_83)
             (bvslt temp393_90 temp393_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_91 #x0000000000000000))
(assert (= var1322797 temp393_91))
(assert (= temp393_92 #x0000000000000000))
(assert (= temp393_93 temp393_92))
(assert (= temp393_94 (select ARGNAME_stride_NAMEEND_VAL temp393_93)))
(assert (= temp393_95 #x0000000000000001))
(assert (= temp393_96 temp393_95))
(assert (= temp393_97 (select ARGNAME_stride_NAMEEND_VAL temp393_96)))
(assert (= temp393_98 #x0000000000000002))
(assert (= temp393_99 temp393_98))
(assert (= temp393_100 (select ARGNAME_stride_NAMEEND_VAL temp393_99)))
(assert (= temp393_101 #x0000000000000003))
(assert (= temp393_102 temp393_101))
(assert (= temp393_103 (select ARGNAME_stride_NAMEEND_VAL temp393_102)))
(assert (= temp393_104 #x0000000000000004))
(assert (= temp393_105 temp393_104))
(assert (= temp393_106 (select ARGNAME_stride_NAMEEND_VAL temp393_105)))
(assert (= temp393_107 #x0000000000000005))
(assert (= temp393_108 temp393_107))
(assert (= temp393_109 (select ARGNAME_stride_NAMEEND_VAL temp393_108)))
(assert (= temp393_110 #x0000000000000000))
(assert (= temp393_111 #x0000000000000000))
(assert (= temp393_112 temp393_111))
(assert (= temp393_113 (select ARGNAME_stride_NAMEEND_VAL temp393_112)))
(assert (= temp393_114 #x0000000000000000))
(assert (= temp393_115 #x0000000000000001))
(assert (= temp393_116 temp393_115))
(assert (= temp393_117 (select ARGNAME_stride_NAMEEND_VAL temp393_116)))
(assert (= temp393_118 #x0000000000000000))
(assert (= temp393_119 #x0000000000000002))
(assert (= temp393_120 temp393_119))
(assert (= temp393_121 (select ARGNAME_stride_NAMEEND_VAL temp393_120)))
(assert (= temp393_122 #x0000000000000000))
(assert (= temp393_123 #x0000000000000003))
(assert (= temp393_124 temp393_123))
(assert (= temp393_125 (select ARGNAME_stride_NAMEEND_VAL temp393_124)))
(assert (= temp393_126 #x0000000000000000))
(assert (= temp393_127 #x0000000000000004))
(assert (= temp393_128 temp393_127))
(assert (= temp393_129 (select ARGNAME_stride_NAMEEND_VAL temp393_128)))
(assert (= temp393_130 #x0000000000000000))
(assert (= temp393_131 #x0000000000000005))
(assert (= temp393_132 temp393_131))
(assert (= temp393_133 (select ARGNAME_stride_NAMEEND_VAL temp393_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp393_113 temp393_110)
             (bvsle temp393_117 temp393_114)
             (bvsle temp393_121 temp393_118)
             (bvsle temp393_125 temp393_122)
             (bvsle temp393_129 temp393_126)
             (bvsle temp393_133 temp393_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_134 #x0000000000000000))
(assert (= var1322807 temp393_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_135 #x0000000000000001))
(assert (= var1322819 temp393_135))
(assert (= temp393_136 #x0000000000000000))
(assert (= var1310898 temp393_136))
(assert (= temp393_137 #x0000000000000000))
(assert (= temp393_138 temp393_137))
(assert (= temp393_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_138)))
(assert (= temp393_140 #x0000000000000001))
(assert (= temp393_141 temp393_140))
(assert (= temp393_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_141)))
(assert (= temp393_143 #x0000000000000002))
(assert (= temp393_144 temp393_143))
(assert (= temp393_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_144)))
(assert (= temp393_146 #x0000000000000003))
(assert (= temp393_147 temp393_146))
(assert (= temp393_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_147)))
(assert (= temp393_149 #x0000000000000004))
(assert (= temp393_150 temp393_149))
(assert (= temp393_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_150)))
(assert (= temp393_152 #x0000000000000005))
(assert (= temp393_153 temp393_152))
(assert (= temp393_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_153)))
(assert (= temp393_156 var1310898))
(assert (= temp393_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_156)))
(assert (= temp393_155 temp393_157))
(assert (= var1322852
   (ite (bvslt temp393_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_158 #x0000000000000000))
(assert (= var1322852 temp393_158))
(assert (= temp393_159 #x0000000000000000))
(assert (= var1310898 temp393_159))
(assert (= temp393_161 var1310898))
(assert (= temp393_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_161)))
(assert (= temp393_160 temp393_162))
(assert (= var1322874 (bvsmod temp393_160 ARGNAME_groups_NAMEEND)))
(assert (= temp393_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp393_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp393_164 #x0000000000000001))
(assert (= var1322875 temp393_164))
(assert (= temp393_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp393_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_166 #x0000000000000001))
(assert (= var1322895 temp393_166))
(assert (= temp393_167 #x0000000000000001))
(assert (= var1311786 temp393_167))
(assert (= temp393_168 #x0000000000000000))
(assert (= temp393_169 temp393_168))
(assert (= temp393_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_169)))
(assert (= temp393_171 #x0000000000000001))
(assert (= temp393_172 temp393_171))
(assert (= temp393_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_172)))
(assert (= temp393_174 #x0000000000000002))
(assert (= temp393_175 temp393_174))
(assert (= temp393_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_175)))
(assert (= temp393_177 #x0000000000000003))
(assert (= temp393_178 temp393_177))
(assert (= temp393_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_178)))
(assert (= temp393_180 #x0000000000000004))
(assert (= temp393_181 temp393_180))
(assert (= temp393_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_181)))
(assert (= temp393_183 #x0000000000000005))
(assert (= temp393_184 temp393_183))
(assert (= temp393_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_184)))
(assert (= temp393_186 #x0000000000000000))
(assert (= temp393_187
   (ite (bvslt var1311786 temp393_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp393_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_187)))
(assert (= var1322903 temp393_188))
(assert (bvslt (ite (bvslt var1311786 temp393_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp393_189 #x0000000000000001))
(assert (= var1311786 temp393_189))
(assert (= temp393_191 var1311786))
(assert (= temp393_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_191)))
(assert (= temp393_190 temp393_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp393_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp393_193 #x0000000000000001))
(assert (= var1322908 temp393_193))
(assert (= temp393_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp393_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_195 #x0000000000000001))
(assert (= var1322975 temp393_195))
(assert (= temp393_196 #x0000000000000000))
(assert (= var1310898 temp393_196))
(assert (= temp393_197 #x0000000000000000))
(assert (= temp393_198 temp393_197))
(assert (= temp393_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp393_198)))
(assert (= temp393_200 #x0000000000000001))
(assert (= temp393_201 temp393_200))
(assert (= temp393_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp393_201)))
(assert (= temp393_203 #x0000000000000002))
(assert (= temp393_204 temp393_203))
(assert (= temp393_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp393_204)))
(assert (= temp393_206 #x0000000000000003))
(assert (= temp393_207 temp393_206))
(assert (= temp393_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp393_207)))
(assert (= temp393_209 #x0000000000000004))
(assert (= temp393_210 temp393_209))
(assert (= temp393_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp393_210)))
(assert (= temp393_212 #x0000000000000005))
(assert (= temp393_213 temp393_212))
(assert (= temp393_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp393_213)))
(assert (= temp393_215 #x0000000000000000))
(assert (= temp393_216
   (ite (bvslt var1310898 temp393_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp393_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp393_216)))
(assert (= var1322977 temp393_217))
(assert (bvslt (ite (bvslt var1310898 temp393_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp393_218 #x0000000000000000))
(assert (= var1310898 temp393_218))
(assert (= temp393_220 var1310898))
(assert (= temp393_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_220)))
(assert (= temp393_219 temp393_221))
(assert (= var1322980
   (ite (= var1322977 temp393_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp393_222 #x0000000000000001))
(assert (= var1322980 temp393_222))
(assert (= temp393_223 #x0000000000000002))
(assert (= var1848169 temp393_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp393_225 #x0000000000000001))
(assert (= var1323065 temp393_225))
(assert (= temp393_226 #x0000000000000001))
(assert (= var3486735 temp393_226))
(assert (= temp393_227 #x0000000000000001))
(assert (= var3814415 temp393_227))
(assert (= temp393_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp393_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_229 #x0000000000000001))
(assert (= var79986 temp393_229))
(assert (= temp393_230 #x0000000000000001))
(assert (= var80116 temp393_230))
(assert (= var4796905 var80116))
(assert (= temp393_231 #x0000000000000000))
(assert (= var4784306 temp393_231))
(assert (= temp393_232 #x0000000000000000))
(assert (= temp393_233
   (ite (bvslt var4784306 temp393_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp393_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_233)))
(assert (= var4796924 temp393_234))
(assert (bvslt (ite (bvslt var4784306 temp393_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp393_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp393_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp393_236 #x0000000000000001))
(assert (= var4796925 temp393_236))
(assert (= temp393_237 #x0000000000000000))
(assert (= var4996927 temp393_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp393_238 #x0000000000000002))
(assert (= var5125763 temp393_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_239 #x0000000000000000))
(assert (= var5191324 temp393_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp393_240 #x0000000000000000))
(assert (= var6631824 temp393_240))
(assert (= temp393_241 #x0000000000000001))
(assert (= var79986 temp393_241))
(model-add temp393_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp393_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp393_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






