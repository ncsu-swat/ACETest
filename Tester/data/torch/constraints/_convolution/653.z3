(declare-fun temp868_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp868_2 () (_ BitVec 64))
(declare-fun temp868_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp868_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp868_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp868_6 () (_ BitVec 64))
(declare-fun temp868_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_8 () (_ BitVec 64))
(declare-fun temp868_9 () (_ BitVec 64))
(declare-fun temp868_10 () (_ BitVec 64))
(declare-fun temp868_11 () (_ BitVec 64))
(declare-fun temp868_12 () (_ BitVec 64))
(declare-fun temp868_13 () (_ BitVec 64))
(declare-fun temp868_14 () (_ BitVec 64))
(declare-fun temp868_15 () (_ BitVec 64))
(declare-fun temp868_16 () (_ BitVec 64))
(declare-fun temp868_17 () (_ BitVec 64))
(declare-fun temp868_18 () (_ BitVec 64))
(declare-fun temp868_19 () (_ BitVec 64))
(declare-fun temp868_20 () (_ BitVec 64))
(declare-fun temp868_21 () (_ BitVec 64))
(declare-fun temp868_22 () (_ BitVec 64))
(declare-fun temp868_23 () (_ BitVec 64))
(declare-fun temp868_24 () (_ BitVec 64))
(declare-fun temp868_25 () (_ BitVec 64))
(declare-fun temp868_26 () (_ BitVec 64))
(declare-fun temp868_27 () (_ BitVec 64))
(declare-fun temp868_28 () (_ BitVec 64))
(declare-fun temp868_29 () (_ BitVec 64))
(declare-fun temp868_30 () (_ BitVec 64))
(declare-fun temp868_31 () (_ BitVec 64))
(declare-fun temp868_32 () (_ BitVec 64))
(declare-fun temp868_33 () (_ BitVec 64))
(declare-fun temp868_34 () (_ BitVec 64))
(declare-fun temp868_35 () (_ BitVec 64))
(declare-fun temp868_36 () (_ BitVec 64))
(declare-fun temp868_37 () (_ BitVec 64))
(declare-fun temp868_38 () (_ BitVec 64))
(declare-fun temp868_39 () (_ BitVec 64))
(declare-fun temp868_40 () (_ BitVec 64))
(declare-fun temp868_41 () (_ BitVec 64))
(declare-fun temp868_42 () (_ BitVec 64))
(declare-fun temp868_43 () (_ BitVec 64))
(declare-fun temp868_44 () (_ BitVec 64))
(declare-fun temp868_45 () (_ BitVec 64))
(declare-fun temp868_46 () (_ BitVec 64))
(declare-fun temp868_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp868_48 () (_ BitVec 64))
(declare-fun temp868_49 () (_ BitVec 64))
(declare-fun temp868_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_51 () (_ BitVec 64))
(declare-fun temp868_52 () (_ BitVec 64))
(declare-fun temp868_53 () (_ BitVec 64))
(declare-fun temp868_54 () (_ BitVec 64))
(declare-fun temp868_55 () (_ BitVec 64))
(declare-fun temp868_56 () (_ BitVec 64))
(declare-fun temp868_57 () (_ BitVec 64))
(declare-fun temp868_58 () (_ BitVec 64))
(declare-fun temp868_59 () (_ BitVec 64))
(declare-fun temp868_60 () (_ BitVec 64))
(declare-fun temp868_61 () (_ BitVec 64))
(declare-fun temp868_62 () (_ BitVec 64))
(declare-fun temp868_63 () (_ BitVec 64))
(declare-fun temp868_64 () (_ BitVec 64))
(declare-fun temp868_65 () (_ BitVec 64))
(declare-fun temp868_66 () (_ BitVec 64))
(declare-fun temp868_67 () (_ BitVec 64))
(declare-fun temp868_68 () (_ BitVec 64))
(declare-fun temp868_69 () (_ BitVec 64))
(declare-fun temp868_70 () (_ BitVec 64))
(declare-fun temp868_71 () (_ BitVec 64))
(declare-fun temp868_72 () (_ BitVec 64))
(declare-fun temp868_73 () (_ BitVec 64))
(declare-fun temp868_74 () (_ BitVec 64))
(declare-fun temp868_75 () (_ BitVec 64))
(declare-fun temp868_76 () (_ BitVec 64))
(declare-fun temp868_77 () (_ BitVec 64))
(declare-fun temp868_78 () (_ BitVec 64))
(declare-fun temp868_79 () (_ BitVec 64))
(declare-fun temp868_80 () (_ BitVec 64))
(declare-fun temp868_81 () (_ BitVec 64))
(declare-fun temp868_82 () (_ BitVec 64))
(declare-fun temp868_83 () (_ BitVec 64))
(declare-fun temp868_84 () (_ BitVec 64))
(declare-fun temp868_85 () (_ BitVec 64))
(declare-fun temp868_86 () (_ BitVec 64))
(declare-fun temp868_87 () (_ BitVec 64))
(declare-fun temp868_88 () (_ BitVec 64))
(declare-fun temp868_89 () (_ BitVec 64))
(declare-fun temp868_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp868_91 () (_ BitVec 64))
(declare-fun temp868_92 () (_ BitVec 64))
(declare-fun temp868_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_94 () (_ BitVec 64))
(declare-fun temp868_95 () (_ BitVec 64))
(declare-fun temp868_96 () (_ BitVec 64))
(declare-fun temp868_97 () (_ BitVec 64))
(declare-fun temp868_98 () (_ BitVec 64))
(declare-fun temp868_99 () (_ BitVec 64))
(declare-fun temp868_100 () (_ BitVec 64))
(declare-fun temp868_101 () (_ BitVec 64))
(declare-fun temp868_102 () (_ BitVec 64))
(declare-fun temp868_103 () (_ BitVec 64))
(declare-fun temp868_104 () (_ BitVec 64))
(declare-fun temp868_105 () (_ BitVec 64))
(declare-fun temp868_106 () (_ BitVec 64))
(declare-fun temp868_107 () (_ BitVec 64))
(declare-fun temp868_108 () (_ BitVec 64))
(declare-fun temp868_109 () (_ BitVec 64))
(declare-fun temp868_110 () (_ BitVec 64))
(declare-fun temp868_111 () (_ BitVec 64))
(declare-fun temp868_112 () (_ BitVec 64))
(declare-fun temp868_113 () (_ BitVec 64))
(declare-fun temp868_114 () (_ BitVec 64))
(declare-fun temp868_115 () (_ BitVec 64))
(declare-fun temp868_116 () (_ BitVec 64))
(declare-fun temp868_117 () (_ BitVec 64))
(declare-fun temp868_118 () (_ BitVec 64))
(declare-fun temp868_119 () (_ BitVec 64))
(declare-fun temp868_120 () (_ BitVec 64))
(declare-fun temp868_121 () (_ BitVec 64))
(declare-fun temp868_122 () (_ BitVec 64))
(declare-fun temp868_123 () (_ BitVec 64))
(declare-fun temp868_124 () (_ BitVec 64))
(declare-fun temp868_125 () (_ BitVec 64))
(declare-fun temp868_126 () (_ BitVec 64))
(declare-fun temp868_127 () (_ BitVec 64))
(declare-fun temp868_128 () (_ BitVec 64))
(declare-fun temp868_129 () (_ BitVec 64))
(declare-fun temp868_130 () (_ BitVec 64))
(declare-fun temp868_131 () (_ BitVec 64))
(declare-fun temp868_132 () (_ BitVec 64))
(declare-fun temp868_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp868_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp868_135 () (_ BitVec 64))
(declare-fun temp868_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp868_137 () (_ BitVec 64))
(declare-fun temp868_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_139 () (_ BitVec 64))
(declare-fun temp868_140 () (_ BitVec 64))
(declare-fun temp868_141 () (_ BitVec 64))
(declare-fun temp868_142 () (_ BitVec 64))
(declare-fun temp868_143 () (_ BitVec 64))
(declare-fun temp868_144 () (_ BitVec 64))
(declare-fun temp868_145 () (_ BitVec 64))
(declare-fun temp868_146 () (_ BitVec 64))
(declare-fun temp868_147 () (_ BitVec 64))
(declare-fun temp868_148 () (_ BitVec 64))
(declare-fun temp868_149 () (_ BitVec 64))
(declare-fun temp868_150 () (_ BitVec 64))
(declare-fun temp868_151 () (_ BitVec 64))
(declare-fun temp868_152 () (_ BitVec 64))
(declare-fun temp868_153 () (_ BitVec 64))
(declare-fun temp868_154 () (_ BitVec 64))
(declare-fun temp868_156 () (_ BitVec 64))
(declare-fun temp868_157 () (_ BitVec 64))
(declare-fun temp868_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp868_158 () (_ BitVec 64))
(declare-fun temp868_159 () (_ BitVec 64))
(declare-fun temp868_161 () (_ BitVec 64))
(declare-fun temp868_162 () (_ BitVec 64))
(declare-fun temp868_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp868_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp868_164 () (_ BitVec 64))
(declare-fun temp868_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp868_166 () (_ BitVec 64))
(declare-fun temp868_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp868_168 () (_ BitVec 64))
(declare-fun temp868_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_170 () (_ BitVec 64))
(declare-fun temp868_171 () (_ BitVec 64))
(declare-fun temp868_172 () (_ BitVec 64))
(declare-fun temp868_173 () (_ BitVec 64))
(declare-fun temp868_174 () (_ BitVec 64))
(declare-fun temp868_175 () (_ BitVec 64))
(declare-fun temp868_176 () (_ BitVec 64))
(declare-fun temp868_177 () (_ BitVec 64))
(declare-fun temp868_178 () (_ BitVec 64))
(declare-fun temp868_179 () (_ BitVec 64))
(declare-fun temp868_180 () (_ BitVec 64))
(declare-fun temp868_181 () (_ BitVec 64))
(declare-fun temp868_182 () (_ BitVec 64))
(declare-fun temp868_183 () (_ BitVec 64))
(declare-fun temp868_184 () (_ BitVec 64))
(declare-fun temp868_185 () (_ BitVec 64))
(declare-fun temp868_186 () (_ BitVec 64))
(declare-fun temp868_187 () (_ BitVec 64))
(declare-fun temp868_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp868_189 () (_ BitVec 64))
(declare-fun temp868_191 () (_ BitVec 64))
(declare-fun temp868_192 () (_ BitVec 64))
(declare-fun temp868_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp868_193 () (_ BitVec 64))
(declare-fun temp868_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp868_195 () (_ BitVec 64))
(declare-fun temp868_196 () (_ BitVec 64))
(declare-fun temp868_197 () (_ BitVec 64))
(declare-fun temp868_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_199 () (_ BitVec 64))
(declare-fun temp868_200 () (_ BitVec 64))
(declare-fun temp868_201 () (_ BitVec 64))
(declare-fun temp868_202 () (_ BitVec 64))
(declare-fun temp868_203 () (_ BitVec 64))
(declare-fun temp868_204 () (_ BitVec 64))
(declare-fun temp868_205 () (_ BitVec 64))
(declare-fun temp868_206 () (_ BitVec 64))
(declare-fun temp868_207 () (_ BitVec 64))
(declare-fun temp868_208 () (_ BitVec 64))
(declare-fun temp868_209 () (_ BitVec 64))
(declare-fun temp868_210 () (_ BitVec 64))
(declare-fun temp868_211 () (_ BitVec 64))
(declare-fun temp868_212 () (_ BitVec 64))
(declare-fun temp868_213 () (_ BitVec 64))
(declare-fun temp868_214 () (_ BitVec 64))
(declare-fun temp868_215 () (_ BitVec 64))
(declare-fun temp868_216 () (_ BitVec 64))
(declare-fun temp868_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp868_218 () (_ BitVec 64))
(declare-fun temp868_220 () (_ BitVec 64))
(declare-fun temp868_221 () (_ BitVec 64))
(declare-fun temp868_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp868_222 () (_ BitVec 64))
(declare-fun temp868_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp868_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp868_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp868_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp868_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp868_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp868_229 () (_ BitVec 64))
(declare-fun temp868_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp868_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp868_232 () (_ BitVec 64))
(declare-fun temp868_233 () (_ BitVec 64))
(declare-fun temp868_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp868_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp868_236 () (_ BitVec 64))
(declare-fun temp868_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp868_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp868_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun temp868_240 () (_ BitVec 64))
(declare-fun temp868_241 () (_ BitVec 64))
(declare-fun var7877396 () (_ BitVec 64))
(declare-fun var7877363 () (_ BitVec 64))
(declare-fun var7745927 () (_ BitVec 64))
(declare-fun var7745923 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp868_242 () (_ BitVec 64))
(assert (= temp868_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp868_1)))
(assert (= temp868_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp868_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_3 #x0000000000000000))
(assert (= var79869 temp868_3))
(assert (= temp868_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp868_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_5 #x0000000000000000))
(assert (= var79914 temp868_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp868_6 #x0000000000000000))
(assert (= temp868_7 temp868_6))
(assert (= temp868_8 (select ARGNAME_padding_NAMEEND_VAL temp868_7)))
(assert (= temp868_9 #x0000000000000001))
(assert (= temp868_10 temp868_9))
(assert (= temp868_11 (select ARGNAME_padding_NAMEEND_VAL temp868_10)))
(assert (= temp868_12 #x0000000000000002))
(assert (= temp868_13 temp868_12))
(assert (= temp868_14 (select ARGNAME_padding_NAMEEND_VAL temp868_13)))
(assert (= temp868_15 #x0000000000000003))
(assert (= temp868_16 temp868_15))
(assert (= temp868_17 (select ARGNAME_padding_NAMEEND_VAL temp868_16)))
(assert (= temp868_18 #x0000000000000004))
(assert (= temp868_19 temp868_18))
(assert (= temp868_20 (select ARGNAME_padding_NAMEEND_VAL temp868_19)))
(assert (= temp868_21 #x0000000000000005))
(assert (= temp868_22 temp868_21))
(assert (= temp868_23 (select ARGNAME_padding_NAMEEND_VAL temp868_22)))
(assert (= temp868_24 #x0000000000000000))
(assert (= temp868_25 #x0000000000000000))
(assert (= temp868_26 temp868_25))
(assert (= temp868_27 (select ARGNAME_padding_NAMEEND_VAL temp868_26)))
(assert (= temp868_28 #x0000000000000000))
(assert (= temp868_29 #x0000000000000001))
(assert (= temp868_30 temp868_29))
(assert (= temp868_31 (select ARGNAME_padding_NAMEEND_VAL temp868_30)))
(assert (= temp868_32 #x0000000000000000))
(assert (= temp868_33 #x0000000000000002))
(assert (= temp868_34 temp868_33))
(assert (= temp868_35 (select ARGNAME_padding_NAMEEND_VAL temp868_34)))
(assert (= temp868_36 #x0000000000000000))
(assert (= temp868_37 #x0000000000000003))
(assert (= temp868_38 temp868_37))
(assert (= temp868_39 (select ARGNAME_padding_NAMEEND_VAL temp868_38)))
(assert (= temp868_40 #x0000000000000000))
(assert (= temp868_41 #x0000000000000004))
(assert (= temp868_42 temp868_41))
(assert (= temp868_43 (select ARGNAME_padding_NAMEEND_VAL temp868_42)))
(assert (= temp868_44 #x0000000000000000))
(assert (= temp868_45 #x0000000000000005))
(assert (= temp868_46 temp868_45))
(assert (= temp868_47 (select ARGNAME_padding_NAMEEND_VAL temp868_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp868_27 temp868_24)
             (bvslt temp868_31 temp868_28)
             (bvslt temp868_35 temp868_32)
             (bvslt temp868_39 temp868_36)
             (bvslt temp868_43 temp868_40)
             (bvslt temp868_47 temp868_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_48 #x0000000000000000))
(assert (= var1322786 temp868_48))
(assert (= temp868_49 #x0000000000000000))
(assert (= temp868_50 temp868_49))
(assert (= temp868_51 (select ARGNAME_output_padding_NAMEEND_VAL temp868_50)))
(assert (= temp868_52 #x0000000000000001))
(assert (= temp868_53 temp868_52))
(assert (= temp868_54 (select ARGNAME_output_padding_NAMEEND_VAL temp868_53)))
(assert (= temp868_55 #x0000000000000002))
(assert (= temp868_56 temp868_55))
(assert (= temp868_57 (select ARGNAME_output_padding_NAMEEND_VAL temp868_56)))
(assert (= temp868_58 #x0000000000000003))
(assert (= temp868_59 temp868_58))
(assert (= temp868_60 (select ARGNAME_output_padding_NAMEEND_VAL temp868_59)))
(assert (= temp868_61 #x0000000000000004))
(assert (= temp868_62 temp868_61))
(assert (= temp868_63 (select ARGNAME_output_padding_NAMEEND_VAL temp868_62)))
(assert (= temp868_64 #x0000000000000005))
(assert (= temp868_65 temp868_64))
(assert (= temp868_66 (select ARGNAME_output_padding_NAMEEND_VAL temp868_65)))
(assert (= temp868_67 #x0000000000000000))
(assert (= temp868_68 #x0000000000000000))
(assert (= temp868_69 temp868_68))
(assert (= temp868_70 (select ARGNAME_output_padding_NAMEEND_VAL temp868_69)))
(assert (= temp868_71 #x0000000000000000))
(assert (= temp868_72 #x0000000000000001))
(assert (= temp868_73 temp868_72))
(assert (= temp868_74 (select ARGNAME_output_padding_NAMEEND_VAL temp868_73)))
(assert (= temp868_75 #x0000000000000000))
(assert (= temp868_76 #x0000000000000002))
(assert (= temp868_77 temp868_76))
(assert (= temp868_78 (select ARGNAME_output_padding_NAMEEND_VAL temp868_77)))
(assert (= temp868_79 #x0000000000000000))
(assert (= temp868_80 #x0000000000000003))
(assert (= temp868_81 temp868_80))
(assert (= temp868_82 (select ARGNAME_output_padding_NAMEEND_VAL temp868_81)))
(assert (= temp868_83 #x0000000000000000))
(assert (= temp868_84 #x0000000000000004))
(assert (= temp868_85 temp868_84))
(assert (= temp868_86 (select ARGNAME_output_padding_NAMEEND_VAL temp868_85)))
(assert (= temp868_87 #x0000000000000000))
(assert (= temp868_88 #x0000000000000005))
(assert (= temp868_89 temp868_88))
(assert (= temp868_90 (select ARGNAME_output_padding_NAMEEND_VAL temp868_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp868_70 temp868_67)
             (bvslt temp868_74 temp868_71)
             (bvslt temp868_78 temp868_75)
             (bvslt temp868_82 temp868_79)
             (bvslt temp868_86 temp868_83)
             (bvslt temp868_90 temp868_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_91 #x0000000000000000))
(assert (= var1322797 temp868_91))
(assert (= temp868_92 #x0000000000000000))
(assert (= temp868_93 temp868_92))
(assert (= temp868_94 (select ARGNAME_stride_NAMEEND_VAL temp868_93)))
(assert (= temp868_95 #x0000000000000001))
(assert (= temp868_96 temp868_95))
(assert (= temp868_97 (select ARGNAME_stride_NAMEEND_VAL temp868_96)))
(assert (= temp868_98 #x0000000000000002))
(assert (= temp868_99 temp868_98))
(assert (= temp868_100 (select ARGNAME_stride_NAMEEND_VAL temp868_99)))
(assert (= temp868_101 #x0000000000000003))
(assert (= temp868_102 temp868_101))
(assert (= temp868_103 (select ARGNAME_stride_NAMEEND_VAL temp868_102)))
(assert (= temp868_104 #x0000000000000004))
(assert (= temp868_105 temp868_104))
(assert (= temp868_106 (select ARGNAME_stride_NAMEEND_VAL temp868_105)))
(assert (= temp868_107 #x0000000000000005))
(assert (= temp868_108 temp868_107))
(assert (= temp868_109 (select ARGNAME_stride_NAMEEND_VAL temp868_108)))
(assert (= temp868_110 #x0000000000000000))
(assert (= temp868_111 #x0000000000000000))
(assert (= temp868_112 temp868_111))
(assert (= temp868_113 (select ARGNAME_stride_NAMEEND_VAL temp868_112)))
(assert (= temp868_114 #x0000000000000000))
(assert (= temp868_115 #x0000000000000001))
(assert (= temp868_116 temp868_115))
(assert (= temp868_117 (select ARGNAME_stride_NAMEEND_VAL temp868_116)))
(assert (= temp868_118 #x0000000000000000))
(assert (= temp868_119 #x0000000000000002))
(assert (= temp868_120 temp868_119))
(assert (= temp868_121 (select ARGNAME_stride_NAMEEND_VAL temp868_120)))
(assert (= temp868_122 #x0000000000000000))
(assert (= temp868_123 #x0000000000000003))
(assert (= temp868_124 temp868_123))
(assert (= temp868_125 (select ARGNAME_stride_NAMEEND_VAL temp868_124)))
(assert (= temp868_126 #x0000000000000000))
(assert (= temp868_127 #x0000000000000004))
(assert (= temp868_128 temp868_127))
(assert (= temp868_129 (select ARGNAME_stride_NAMEEND_VAL temp868_128)))
(assert (= temp868_130 #x0000000000000000))
(assert (= temp868_131 #x0000000000000005))
(assert (= temp868_132 temp868_131))
(assert (= temp868_133 (select ARGNAME_stride_NAMEEND_VAL temp868_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp868_113 temp868_110)
             (bvsle temp868_117 temp868_114)
             (bvsle temp868_121 temp868_118)
             (bvsle temp868_125 temp868_122)
             (bvsle temp868_129 temp868_126)
             (bvsle temp868_133 temp868_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_134 #x0000000000000000))
(assert (= var1322807 temp868_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_135 #x0000000000000001))
(assert (= var1322819 temp868_135))
(assert (= temp868_136 #x0000000000000000))
(assert (= var1310898 temp868_136))
(assert (= temp868_137 #x0000000000000000))
(assert (= temp868_138 temp868_137))
(assert (= temp868_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_138)))
(assert (= temp868_140 #x0000000000000001))
(assert (= temp868_141 temp868_140))
(assert (= temp868_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_141)))
(assert (= temp868_143 #x0000000000000002))
(assert (= temp868_144 temp868_143))
(assert (= temp868_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_144)))
(assert (= temp868_146 #x0000000000000003))
(assert (= temp868_147 temp868_146))
(assert (= temp868_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_147)))
(assert (= temp868_149 #x0000000000000004))
(assert (= temp868_150 temp868_149))
(assert (= temp868_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_150)))
(assert (= temp868_152 #x0000000000000005))
(assert (= temp868_153 temp868_152))
(assert (= temp868_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_153)))
(assert (= temp868_156 var1310898))
(assert (= temp868_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_156)))
(assert (= temp868_155 temp868_157))
(assert (= var1322852
   (ite (bvslt temp868_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_158 #x0000000000000000))
(assert (= var1322852 temp868_158))
(assert (= temp868_159 #x0000000000000000))
(assert (= var1310898 temp868_159))
(assert (= temp868_161 var1310898))
(assert (= temp868_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_161)))
(assert (= temp868_160 temp868_162))
(assert (= var1322874 (bvsmod temp868_160 ARGNAME_groups_NAMEEND)))
(assert (= temp868_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp868_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_164 #x0000000000000001))
(assert (= var1322875 temp868_164))
(assert (= temp868_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp868_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_166 #x0000000000000001))
(assert (= var1322895 temp868_166))
(assert (= temp868_167 #x0000000000000001))
(assert (= var1311786 temp868_167))
(assert (= temp868_168 #x0000000000000000))
(assert (= temp868_169 temp868_168))
(assert (= temp868_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_169)))
(assert (= temp868_171 #x0000000000000001))
(assert (= temp868_172 temp868_171))
(assert (= temp868_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_172)))
(assert (= temp868_174 #x0000000000000002))
(assert (= temp868_175 temp868_174))
(assert (= temp868_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_175)))
(assert (= temp868_177 #x0000000000000003))
(assert (= temp868_178 temp868_177))
(assert (= temp868_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_178)))
(assert (= temp868_180 #x0000000000000004))
(assert (= temp868_181 temp868_180))
(assert (= temp868_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_181)))
(assert (= temp868_183 #x0000000000000005))
(assert (= temp868_184 temp868_183))
(assert (= temp868_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_184)))
(assert (= temp868_186 #x0000000000000000))
(assert (= temp868_187
   (ite (bvslt var1311786 temp868_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp868_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_187)))
(assert (= var1322903 temp868_188))
(assert (bvslt (ite (bvslt var1311786 temp868_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp868_189 #x0000000000000001))
(assert (= var1311786 temp868_189))
(assert (= temp868_191 var1311786))
(assert (= temp868_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_191)))
(assert (= temp868_190 temp868_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp868_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_193 #x0000000000000001))
(assert (= var1322908 temp868_193))
(assert (= temp868_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp868_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_195 #x0000000000000001))
(assert (= var1322975 temp868_195))
(assert (= temp868_196 #x0000000000000000))
(assert (= var1310898 temp868_196))
(assert (= temp868_197 #x0000000000000000))
(assert (= temp868_198 temp868_197))
(assert (= temp868_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp868_198)))
(assert (= temp868_200 #x0000000000000001))
(assert (= temp868_201 temp868_200))
(assert (= temp868_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp868_201)))
(assert (= temp868_203 #x0000000000000002))
(assert (= temp868_204 temp868_203))
(assert (= temp868_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp868_204)))
(assert (= temp868_206 #x0000000000000003))
(assert (= temp868_207 temp868_206))
(assert (= temp868_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp868_207)))
(assert (= temp868_209 #x0000000000000004))
(assert (= temp868_210 temp868_209))
(assert (= temp868_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp868_210)))
(assert (= temp868_212 #x0000000000000005))
(assert (= temp868_213 temp868_212))
(assert (= temp868_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp868_213)))
(assert (= temp868_215 #x0000000000000000))
(assert (= temp868_216
   (ite (bvslt var1310898 temp868_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp868_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp868_216)))
(assert (= var1322977 temp868_217))
(assert (bvslt (ite (bvslt var1310898 temp868_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp868_218 #x0000000000000000))
(assert (= var1310898 temp868_218))
(assert (= temp868_220 var1310898))
(assert (= temp868_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_220)))
(assert (= temp868_219 temp868_221))
(assert (= var1322980
   (ite (= var1322977 temp868_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_222 #x0000000000000001))
(assert (= var1322980 temp868_222))
(assert (= temp868_223 #x0000000000000002))
(assert (= var1848169 temp868_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp868_225 #x0000000000000001))
(assert (= var1323065 temp868_225))
(assert (= temp868_226 #x0000000000000001))
(assert (= var3486735 temp868_226))
(assert (= temp868_227 #x0000000000000001))
(assert (= var3814415 temp868_227))
(assert (= temp868_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp868_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_229 #x0000000000000001))
(assert (= var79986 temp868_229))
(assert (= temp868_230 #x0000000000000001))
(assert (= var80116 temp868_230))
(assert (= var4796905 var80116))
(assert (= temp868_231 #x0000000000000000))
(assert (= var4784306 temp868_231))
(assert (= temp868_232 #x0000000000000000))
(assert (= temp868_233
   (ite (bvslt var4784306 temp868_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp868_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_233)))
(assert (= var4796924 temp868_234))
(assert (bvslt (ite (bvslt var4784306 temp868_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp868_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp868_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_236 #x0000000000000001))
(assert (= var4796925 temp868_236))
(assert (= temp868_237 #x0000000000000000))
(assert (= var4996927 temp868_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp868_238 #x0000000000000002))
(assert (= var5125763 temp868_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_239 #x0000000000000000))
(assert (= var5191324 temp868_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5976464 var80129))
(assert (= var6238608 var80129))
(assert (= temp868_240 #x0000000000000001))
(assert (= var79986 temp868_240))
(assert (= temp868_241 #x0000000000000000))
(assert (= var7877396 temp868_241))
(assert (= var7877363 var7877396))
(assert (= var7745927 var7877363))
(assert (= var7745923 var7745927))
(assert (= var81597 var7745923))
(assert (= temp868_242 #x0000000000000000))
(assert (= var81597 temp868_242))
(model-add temp868_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp868_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp868_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






