(declare-fun temp42_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp42_2 () (_ BitVec 64))
(declare-fun temp42_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp42_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp42_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp42_6 () (_ BitVec 64))
(declare-fun temp42_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_8 () (_ BitVec 64))
(declare-fun temp42_9 () (_ BitVec 64))
(declare-fun temp42_10 () (_ BitVec 64))
(declare-fun temp42_11 () (_ BitVec 64))
(declare-fun temp42_12 () (_ BitVec 64))
(declare-fun temp42_13 () (_ BitVec 64))
(declare-fun temp42_14 () (_ BitVec 64))
(declare-fun temp42_15 () (_ BitVec 64))
(declare-fun temp42_16 () (_ BitVec 64))
(declare-fun temp42_17 () (_ BitVec 64))
(declare-fun temp42_18 () (_ BitVec 64))
(declare-fun temp42_19 () (_ BitVec 64))
(declare-fun temp42_20 () (_ BitVec 64))
(declare-fun temp42_21 () (_ BitVec 64))
(declare-fun temp42_22 () (_ BitVec 64))
(declare-fun temp42_23 () (_ BitVec 64))
(declare-fun temp42_24 () (_ BitVec 64))
(declare-fun temp42_25 () (_ BitVec 64))
(declare-fun temp42_26 () (_ BitVec 64))
(declare-fun temp42_27 () (_ BitVec 64))
(declare-fun temp42_28 () (_ BitVec 64))
(declare-fun temp42_29 () (_ BitVec 64))
(declare-fun temp42_30 () (_ BitVec 64))
(declare-fun temp42_31 () (_ BitVec 64))
(declare-fun temp42_32 () (_ BitVec 64))
(declare-fun temp42_33 () (_ BitVec 64))
(declare-fun temp42_34 () (_ BitVec 64))
(declare-fun temp42_35 () (_ BitVec 64))
(declare-fun temp42_36 () (_ BitVec 64))
(declare-fun temp42_37 () (_ BitVec 64))
(declare-fun temp42_38 () (_ BitVec 64))
(declare-fun temp42_39 () (_ BitVec 64))
(declare-fun temp42_40 () (_ BitVec 64))
(declare-fun temp42_41 () (_ BitVec 64))
(declare-fun temp42_42 () (_ BitVec 64))
(declare-fun temp42_43 () (_ BitVec 64))
(declare-fun temp42_44 () (_ BitVec 64))
(declare-fun temp42_45 () (_ BitVec 64))
(declare-fun temp42_46 () (_ BitVec 64))
(declare-fun temp42_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp42_48 () (_ BitVec 64))
(declare-fun temp42_49 () (_ BitVec 64))
(declare-fun temp42_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_51 () (_ BitVec 64))
(declare-fun temp42_52 () (_ BitVec 64))
(declare-fun temp42_53 () (_ BitVec 64))
(declare-fun temp42_54 () (_ BitVec 64))
(declare-fun temp42_55 () (_ BitVec 64))
(declare-fun temp42_56 () (_ BitVec 64))
(declare-fun temp42_57 () (_ BitVec 64))
(declare-fun temp42_58 () (_ BitVec 64))
(declare-fun temp42_59 () (_ BitVec 64))
(declare-fun temp42_60 () (_ BitVec 64))
(declare-fun temp42_61 () (_ BitVec 64))
(declare-fun temp42_62 () (_ BitVec 64))
(declare-fun temp42_63 () (_ BitVec 64))
(declare-fun temp42_64 () (_ BitVec 64))
(declare-fun temp42_65 () (_ BitVec 64))
(declare-fun temp42_66 () (_ BitVec 64))
(declare-fun temp42_67 () (_ BitVec 64))
(declare-fun temp42_68 () (_ BitVec 64))
(declare-fun temp42_69 () (_ BitVec 64))
(declare-fun temp42_70 () (_ BitVec 64))
(declare-fun temp42_71 () (_ BitVec 64))
(declare-fun temp42_72 () (_ BitVec 64))
(declare-fun temp42_73 () (_ BitVec 64))
(declare-fun temp42_74 () (_ BitVec 64))
(declare-fun temp42_75 () (_ BitVec 64))
(declare-fun temp42_76 () (_ BitVec 64))
(declare-fun temp42_77 () (_ BitVec 64))
(declare-fun temp42_78 () (_ BitVec 64))
(declare-fun temp42_79 () (_ BitVec 64))
(declare-fun temp42_80 () (_ BitVec 64))
(declare-fun temp42_81 () (_ BitVec 64))
(declare-fun temp42_82 () (_ BitVec 64))
(declare-fun temp42_83 () (_ BitVec 64))
(declare-fun temp42_84 () (_ BitVec 64))
(declare-fun temp42_85 () (_ BitVec 64))
(declare-fun temp42_86 () (_ BitVec 64))
(declare-fun temp42_87 () (_ BitVec 64))
(declare-fun temp42_88 () (_ BitVec 64))
(declare-fun temp42_89 () (_ BitVec 64))
(declare-fun temp42_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp42_91 () (_ BitVec 64))
(declare-fun temp42_92 () (_ BitVec 64))
(declare-fun temp42_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_94 () (_ BitVec 64))
(declare-fun temp42_95 () (_ BitVec 64))
(declare-fun temp42_96 () (_ BitVec 64))
(declare-fun temp42_97 () (_ BitVec 64))
(declare-fun temp42_98 () (_ BitVec 64))
(declare-fun temp42_99 () (_ BitVec 64))
(declare-fun temp42_100 () (_ BitVec 64))
(declare-fun temp42_101 () (_ BitVec 64))
(declare-fun temp42_102 () (_ BitVec 64))
(declare-fun temp42_103 () (_ BitVec 64))
(declare-fun temp42_104 () (_ BitVec 64))
(declare-fun temp42_105 () (_ BitVec 64))
(declare-fun temp42_106 () (_ BitVec 64))
(declare-fun temp42_107 () (_ BitVec 64))
(declare-fun temp42_108 () (_ BitVec 64))
(declare-fun temp42_109 () (_ BitVec 64))
(declare-fun temp42_110 () (_ BitVec 64))
(declare-fun temp42_111 () (_ BitVec 64))
(declare-fun temp42_112 () (_ BitVec 64))
(declare-fun temp42_113 () (_ BitVec 64))
(declare-fun temp42_114 () (_ BitVec 64))
(declare-fun temp42_115 () (_ BitVec 64))
(declare-fun temp42_116 () (_ BitVec 64))
(declare-fun temp42_117 () (_ BitVec 64))
(declare-fun temp42_118 () (_ BitVec 64))
(declare-fun temp42_119 () (_ BitVec 64))
(declare-fun temp42_120 () (_ BitVec 64))
(declare-fun temp42_121 () (_ BitVec 64))
(declare-fun temp42_122 () (_ BitVec 64))
(declare-fun temp42_123 () (_ BitVec 64))
(declare-fun temp42_124 () (_ BitVec 64))
(declare-fun temp42_125 () (_ BitVec 64))
(declare-fun temp42_126 () (_ BitVec 64))
(declare-fun temp42_127 () (_ BitVec 64))
(declare-fun temp42_128 () (_ BitVec 64))
(declare-fun temp42_129 () (_ BitVec 64))
(declare-fun temp42_130 () (_ BitVec 64))
(declare-fun temp42_131 () (_ BitVec 64))
(declare-fun temp42_132 () (_ BitVec 64))
(declare-fun temp42_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp42_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp42_135 () (_ BitVec 64))
(declare-fun temp42_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp42_137 () (_ BitVec 64))
(declare-fun temp42_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_139 () (_ BitVec 64))
(declare-fun temp42_140 () (_ BitVec 64))
(declare-fun temp42_141 () (_ BitVec 64))
(declare-fun temp42_142 () (_ BitVec 64))
(declare-fun temp42_143 () (_ BitVec 64))
(declare-fun temp42_144 () (_ BitVec 64))
(declare-fun temp42_145 () (_ BitVec 64))
(declare-fun temp42_146 () (_ BitVec 64))
(declare-fun temp42_147 () (_ BitVec 64))
(declare-fun temp42_148 () (_ BitVec 64))
(declare-fun temp42_149 () (_ BitVec 64))
(declare-fun temp42_150 () (_ BitVec 64))
(declare-fun temp42_151 () (_ BitVec 64))
(declare-fun temp42_152 () (_ BitVec 64))
(declare-fun temp42_153 () (_ BitVec 64))
(declare-fun temp42_154 () (_ BitVec 64))
(declare-fun temp42_156 () (_ BitVec 64))
(declare-fun temp42_157 () (_ BitVec 64))
(declare-fun temp42_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp42_158 () (_ BitVec 64))
(declare-fun temp42_159 () (_ BitVec 64))
(declare-fun temp42_161 () (_ BitVec 64))
(declare-fun temp42_162 () (_ BitVec 64))
(declare-fun temp42_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp42_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp42_164 () (_ BitVec 64))
(declare-fun temp42_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp42_166 () (_ BitVec 64))
(declare-fun temp42_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp42_168 () (_ BitVec 64))
(declare-fun temp42_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_170 () (_ BitVec 64))
(declare-fun temp42_171 () (_ BitVec 64))
(declare-fun temp42_172 () (_ BitVec 64))
(declare-fun temp42_173 () (_ BitVec 64))
(declare-fun temp42_174 () (_ BitVec 64))
(declare-fun temp42_175 () (_ BitVec 64))
(declare-fun temp42_176 () (_ BitVec 64))
(declare-fun temp42_177 () (_ BitVec 64))
(declare-fun temp42_178 () (_ BitVec 64))
(declare-fun temp42_179 () (_ BitVec 64))
(declare-fun temp42_180 () (_ BitVec 64))
(declare-fun temp42_181 () (_ BitVec 64))
(declare-fun temp42_182 () (_ BitVec 64))
(declare-fun temp42_183 () (_ BitVec 64))
(declare-fun temp42_184 () (_ BitVec 64))
(declare-fun temp42_185 () (_ BitVec 64))
(declare-fun temp42_186 () (_ BitVec 64))
(declare-fun temp42_187 () (_ BitVec 64))
(declare-fun temp42_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp42_189 () (_ BitVec 64))
(declare-fun temp42_191 () (_ BitVec 64))
(declare-fun temp42_192 () (_ BitVec 64))
(declare-fun temp42_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp42_193 () (_ BitVec 64))
(declare-fun temp42_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp42_195 () (_ BitVec 64))
(declare-fun temp42_196 () (_ BitVec 64))
(declare-fun temp42_197 () (_ BitVec 64))
(declare-fun temp42_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_199 () (_ BitVec 64))
(declare-fun temp42_200 () (_ BitVec 64))
(declare-fun temp42_201 () (_ BitVec 64))
(declare-fun temp42_202 () (_ BitVec 64))
(declare-fun temp42_203 () (_ BitVec 64))
(declare-fun temp42_204 () (_ BitVec 64))
(declare-fun temp42_205 () (_ BitVec 64))
(declare-fun temp42_206 () (_ BitVec 64))
(declare-fun temp42_207 () (_ BitVec 64))
(declare-fun temp42_208 () (_ BitVec 64))
(declare-fun temp42_209 () (_ BitVec 64))
(declare-fun temp42_210 () (_ BitVec 64))
(declare-fun temp42_211 () (_ BitVec 64))
(declare-fun temp42_212 () (_ BitVec 64))
(declare-fun temp42_213 () (_ BitVec 64))
(declare-fun temp42_214 () (_ BitVec 64))
(declare-fun temp42_215 () (_ BitVec 64))
(declare-fun temp42_216 () (_ BitVec 64))
(declare-fun temp42_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp42_218 () (_ BitVec 64))
(declare-fun temp42_220 () (_ BitVec 64))
(declare-fun temp42_221 () (_ BitVec 64))
(declare-fun temp42_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp42_222 () (_ BitVec 64))
(declare-fun temp42_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp42_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp42_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp42_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp42_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp42_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp42_229 () (_ BitVec 64))
(declare-fun temp42_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp42_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp42_232 () (_ BitVec 64))
(declare-fun temp42_233 () (_ BitVec 64))
(declare-fun temp42_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp42_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp42_236 () (_ BitVec 64))
(declare-fun temp42_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp42_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp42_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp42_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp42_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp42_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6635340 () (_ BitVec 64))
(declare-fun var6635341 () (_ BitVec 64))
(declare-fun var6635342 () (_ BitVec 64))
(declare-fun temp42_243 () (_ BitVec 64))
(assert (= temp42_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp42_1)))
(assert (= temp42_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp42_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_3 #x0000000000000000))
(assert (= var79869 temp42_3))
(assert (= temp42_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp42_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_5 #x0000000000000000))
(assert (= var79914 temp42_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp42_6 #x0000000000000000))
(assert (= temp42_7 temp42_6))
(assert (= temp42_8 (select ARGNAME_padding_NAMEEND_VAL temp42_7)))
(assert (= temp42_9 #x0000000000000001))
(assert (= temp42_10 temp42_9))
(assert (= temp42_11 (select ARGNAME_padding_NAMEEND_VAL temp42_10)))
(assert (= temp42_12 #x0000000000000002))
(assert (= temp42_13 temp42_12))
(assert (= temp42_14 (select ARGNAME_padding_NAMEEND_VAL temp42_13)))
(assert (= temp42_15 #x0000000000000003))
(assert (= temp42_16 temp42_15))
(assert (= temp42_17 (select ARGNAME_padding_NAMEEND_VAL temp42_16)))
(assert (= temp42_18 #x0000000000000004))
(assert (= temp42_19 temp42_18))
(assert (= temp42_20 (select ARGNAME_padding_NAMEEND_VAL temp42_19)))
(assert (= temp42_21 #x0000000000000005))
(assert (= temp42_22 temp42_21))
(assert (= temp42_23 (select ARGNAME_padding_NAMEEND_VAL temp42_22)))
(assert (= temp42_24 #x0000000000000000))
(assert (= temp42_25 #x0000000000000000))
(assert (= temp42_26 temp42_25))
(assert (= temp42_27 (select ARGNAME_padding_NAMEEND_VAL temp42_26)))
(assert (= temp42_28 #x0000000000000000))
(assert (= temp42_29 #x0000000000000001))
(assert (= temp42_30 temp42_29))
(assert (= temp42_31 (select ARGNAME_padding_NAMEEND_VAL temp42_30)))
(assert (= temp42_32 #x0000000000000000))
(assert (= temp42_33 #x0000000000000002))
(assert (= temp42_34 temp42_33))
(assert (= temp42_35 (select ARGNAME_padding_NAMEEND_VAL temp42_34)))
(assert (= temp42_36 #x0000000000000000))
(assert (= temp42_37 #x0000000000000003))
(assert (= temp42_38 temp42_37))
(assert (= temp42_39 (select ARGNAME_padding_NAMEEND_VAL temp42_38)))
(assert (= temp42_40 #x0000000000000000))
(assert (= temp42_41 #x0000000000000004))
(assert (= temp42_42 temp42_41))
(assert (= temp42_43 (select ARGNAME_padding_NAMEEND_VAL temp42_42)))
(assert (= temp42_44 #x0000000000000000))
(assert (= temp42_45 #x0000000000000005))
(assert (= temp42_46 temp42_45))
(assert (= temp42_47 (select ARGNAME_padding_NAMEEND_VAL temp42_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp42_27 temp42_24)
             (bvslt temp42_31 temp42_28)
             (bvslt temp42_35 temp42_32)
             (bvslt temp42_39 temp42_36)
             (bvslt temp42_43 temp42_40)
             (bvslt temp42_47 temp42_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_48 #x0000000000000000))
(assert (= var1322786 temp42_48))
(assert (= temp42_49 #x0000000000000000))
(assert (= temp42_50 temp42_49))
(assert (= temp42_51 (select ARGNAME_output_padding_NAMEEND_VAL temp42_50)))
(assert (= temp42_52 #x0000000000000001))
(assert (= temp42_53 temp42_52))
(assert (= temp42_54 (select ARGNAME_output_padding_NAMEEND_VAL temp42_53)))
(assert (= temp42_55 #x0000000000000002))
(assert (= temp42_56 temp42_55))
(assert (= temp42_57 (select ARGNAME_output_padding_NAMEEND_VAL temp42_56)))
(assert (= temp42_58 #x0000000000000003))
(assert (= temp42_59 temp42_58))
(assert (= temp42_60 (select ARGNAME_output_padding_NAMEEND_VAL temp42_59)))
(assert (= temp42_61 #x0000000000000004))
(assert (= temp42_62 temp42_61))
(assert (= temp42_63 (select ARGNAME_output_padding_NAMEEND_VAL temp42_62)))
(assert (= temp42_64 #x0000000000000005))
(assert (= temp42_65 temp42_64))
(assert (= temp42_66 (select ARGNAME_output_padding_NAMEEND_VAL temp42_65)))
(assert (= temp42_67 #x0000000000000000))
(assert (= temp42_68 #x0000000000000000))
(assert (= temp42_69 temp42_68))
(assert (= temp42_70 (select ARGNAME_output_padding_NAMEEND_VAL temp42_69)))
(assert (= temp42_71 #x0000000000000000))
(assert (= temp42_72 #x0000000000000001))
(assert (= temp42_73 temp42_72))
(assert (= temp42_74 (select ARGNAME_output_padding_NAMEEND_VAL temp42_73)))
(assert (= temp42_75 #x0000000000000000))
(assert (= temp42_76 #x0000000000000002))
(assert (= temp42_77 temp42_76))
(assert (= temp42_78 (select ARGNAME_output_padding_NAMEEND_VAL temp42_77)))
(assert (= temp42_79 #x0000000000000000))
(assert (= temp42_80 #x0000000000000003))
(assert (= temp42_81 temp42_80))
(assert (= temp42_82 (select ARGNAME_output_padding_NAMEEND_VAL temp42_81)))
(assert (= temp42_83 #x0000000000000000))
(assert (= temp42_84 #x0000000000000004))
(assert (= temp42_85 temp42_84))
(assert (= temp42_86 (select ARGNAME_output_padding_NAMEEND_VAL temp42_85)))
(assert (= temp42_87 #x0000000000000000))
(assert (= temp42_88 #x0000000000000005))
(assert (= temp42_89 temp42_88))
(assert (= temp42_90 (select ARGNAME_output_padding_NAMEEND_VAL temp42_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp42_70 temp42_67)
             (bvslt temp42_74 temp42_71)
             (bvslt temp42_78 temp42_75)
             (bvslt temp42_82 temp42_79)
             (bvslt temp42_86 temp42_83)
             (bvslt temp42_90 temp42_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_91 #x0000000000000000))
(assert (= var1322797 temp42_91))
(assert (= temp42_92 #x0000000000000000))
(assert (= temp42_93 temp42_92))
(assert (= temp42_94 (select ARGNAME_stride_NAMEEND_VAL temp42_93)))
(assert (= temp42_95 #x0000000000000001))
(assert (= temp42_96 temp42_95))
(assert (= temp42_97 (select ARGNAME_stride_NAMEEND_VAL temp42_96)))
(assert (= temp42_98 #x0000000000000002))
(assert (= temp42_99 temp42_98))
(assert (= temp42_100 (select ARGNAME_stride_NAMEEND_VAL temp42_99)))
(assert (= temp42_101 #x0000000000000003))
(assert (= temp42_102 temp42_101))
(assert (= temp42_103 (select ARGNAME_stride_NAMEEND_VAL temp42_102)))
(assert (= temp42_104 #x0000000000000004))
(assert (= temp42_105 temp42_104))
(assert (= temp42_106 (select ARGNAME_stride_NAMEEND_VAL temp42_105)))
(assert (= temp42_107 #x0000000000000005))
(assert (= temp42_108 temp42_107))
(assert (= temp42_109 (select ARGNAME_stride_NAMEEND_VAL temp42_108)))
(assert (= temp42_110 #x0000000000000000))
(assert (= temp42_111 #x0000000000000000))
(assert (= temp42_112 temp42_111))
(assert (= temp42_113 (select ARGNAME_stride_NAMEEND_VAL temp42_112)))
(assert (= temp42_114 #x0000000000000000))
(assert (= temp42_115 #x0000000000000001))
(assert (= temp42_116 temp42_115))
(assert (= temp42_117 (select ARGNAME_stride_NAMEEND_VAL temp42_116)))
(assert (= temp42_118 #x0000000000000000))
(assert (= temp42_119 #x0000000000000002))
(assert (= temp42_120 temp42_119))
(assert (= temp42_121 (select ARGNAME_stride_NAMEEND_VAL temp42_120)))
(assert (= temp42_122 #x0000000000000000))
(assert (= temp42_123 #x0000000000000003))
(assert (= temp42_124 temp42_123))
(assert (= temp42_125 (select ARGNAME_stride_NAMEEND_VAL temp42_124)))
(assert (= temp42_126 #x0000000000000000))
(assert (= temp42_127 #x0000000000000004))
(assert (= temp42_128 temp42_127))
(assert (= temp42_129 (select ARGNAME_stride_NAMEEND_VAL temp42_128)))
(assert (= temp42_130 #x0000000000000000))
(assert (= temp42_131 #x0000000000000005))
(assert (= temp42_132 temp42_131))
(assert (= temp42_133 (select ARGNAME_stride_NAMEEND_VAL temp42_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp42_113 temp42_110)
             (bvsle temp42_117 temp42_114)
             (bvsle temp42_121 temp42_118)
             (bvsle temp42_125 temp42_122)
             (bvsle temp42_129 temp42_126)
             (bvsle temp42_133 temp42_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_134 #x0000000000000000))
(assert (= var1322807 temp42_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_135 #x0000000000000001))
(assert (= var1322819 temp42_135))
(assert (= temp42_136 #x0000000000000000))
(assert (= var1310898 temp42_136))
(assert (= temp42_137 #x0000000000000000))
(assert (= temp42_138 temp42_137))
(assert (= temp42_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_138)))
(assert (= temp42_140 #x0000000000000001))
(assert (= temp42_141 temp42_140))
(assert (= temp42_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_141)))
(assert (= temp42_143 #x0000000000000002))
(assert (= temp42_144 temp42_143))
(assert (= temp42_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_144)))
(assert (= temp42_146 #x0000000000000003))
(assert (= temp42_147 temp42_146))
(assert (= temp42_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_147)))
(assert (= temp42_149 #x0000000000000004))
(assert (= temp42_150 temp42_149))
(assert (= temp42_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_150)))
(assert (= temp42_152 #x0000000000000005))
(assert (= temp42_153 temp42_152))
(assert (= temp42_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_153)))
(assert (= temp42_156 var1310898))
(assert (= temp42_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_156)))
(assert (= temp42_155 temp42_157))
(assert (= var1322852
   (ite (bvslt temp42_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_158 #x0000000000000000))
(assert (= var1322852 temp42_158))
(assert (= temp42_159 #x0000000000000000))
(assert (= var1310898 temp42_159))
(assert (= temp42_161 var1310898))
(assert (= temp42_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_161)))
(assert (= temp42_160 temp42_162))
(assert (= var1322874 (bvsmod temp42_160 ARGNAME_groups_NAMEEND)))
(assert (= temp42_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp42_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_164 #x0000000000000001))
(assert (= var1322875 temp42_164))
(assert (= temp42_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp42_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_166 #x0000000000000001))
(assert (= var1322895 temp42_166))
(assert (= temp42_167 #x0000000000000001))
(assert (= var1311786 temp42_167))
(assert (= temp42_168 #x0000000000000000))
(assert (= temp42_169 temp42_168))
(assert (= temp42_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_169)))
(assert (= temp42_171 #x0000000000000001))
(assert (= temp42_172 temp42_171))
(assert (= temp42_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_172)))
(assert (= temp42_174 #x0000000000000002))
(assert (= temp42_175 temp42_174))
(assert (= temp42_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_175)))
(assert (= temp42_177 #x0000000000000003))
(assert (= temp42_178 temp42_177))
(assert (= temp42_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_178)))
(assert (= temp42_180 #x0000000000000004))
(assert (= temp42_181 temp42_180))
(assert (= temp42_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_181)))
(assert (= temp42_183 #x0000000000000005))
(assert (= temp42_184 temp42_183))
(assert (= temp42_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_184)))
(assert (= temp42_186 #x0000000000000000))
(assert (= temp42_187
   (ite (bvslt var1311786 temp42_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp42_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_187)))
(assert (= var1322903 temp42_188))
(assert (bvslt (ite (bvslt var1311786 temp42_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp42_189 #x0000000000000001))
(assert (= var1311786 temp42_189))
(assert (= temp42_191 var1311786))
(assert (= temp42_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_191)))
(assert (= temp42_190 temp42_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp42_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_193 #x0000000000000001))
(assert (= var1322908 temp42_193))
(assert (= temp42_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp42_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_195 #x0000000000000001))
(assert (= var1322975 temp42_195))
(assert (= temp42_196 #x0000000000000000))
(assert (= var1310898 temp42_196))
(assert (= temp42_197 #x0000000000000000))
(assert (= temp42_198 temp42_197))
(assert (= temp42_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp42_198)))
(assert (= temp42_200 #x0000000000000001))
(assert (= temp42_201 temp42_200))
(assert (= temp42_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp42_201)))
(assert (= temp42_203 #x0000000000000002))
(assert (= temp42_204 temp42_203))
(assert (= temp42_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp42_204)))
(assert (= temp42_206 #x0000000000000003))
(assert (= temp42_207 temp42_206))
(assert (= temp42_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp42_207)))
(assert (= temp42_209 #x0000000000000004))
(assert (= temp42_210 temp42_209))
(assert (= temp42_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp42_210)))
(assert (= temp42_212 #x0000000000000005))
(assert (= temp42_213 temp42_212))
(assert (= temp42_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp42_213)))
(assert (= temp42_215 #x0000000000000000))
(assert (= temp42_216
   (ite (bvslt var1310898 temp42_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp42_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp42_216)))
(assert (= var1322977 temp42_217))
(assert (bvslt (ite (bvslt var1310898 temp42_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp42_218 #x0000000000000000))
(assert (= var1310898 temp42_218))
(assert (= temp42_220 var1310898))
(assert (= temp42_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_220)))
(assert (= temp42_219 temp42_221))
(assert (= var1322980
   (ite (= var1322977 temp42_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_222 #x0000000000000001))
(assert (= var1322980 temp42_222))
(assert (= temp42_223 #x0000000000000002))
(assert (= var1848169 temp42_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp42_225 #x0000000000000001))
(assert (= var1323065 temp42_225))
(assert (= temp42_226 #x0000000000000001))
(assert (= var3486735 temp42_226))
(assert (= temp42_227 #x0000000000000001))
(assert (= var3814415 temp42_227))
(assert (= temp42_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp42_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_229 #x0000000000000001))
(assert (= var79986 temp42_229))
(assert (= temp42_230 #x0000000000000001))
(assert (= var80116 temp42_230))
(assert (= var4796905 var80116))
(assert (= temp42_231 #x0000000000000000))
(assert (= var4784306 temp42_231))
(assert (= temp42_232 #x0000000000000000))
(assert (= temp42_233
   (ite (bvslt var4784306 temp42_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp42_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_233)))
(assert (= var4796924 temp42_234))
(assert (bvslt (ite (bvslt var4784306 temp42_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp42_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp42_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_236 #x0000000000000001))
(assert (= var4796925 temp42_236))
(assert (= temp42_237 #x0000000000000000))
(assert (= var4996927 temp42_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp42_238 #x0000000000000002))
(assert (= var5125763 temp42_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_239 #x0000000000000000))
(assert (= var5191324 temp42_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp42_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp42_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp42_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp42_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6635340 var80315))
(assert (= var6635341 var80317))
(assert (= var6635342 var80319))
(assert (= temp42_243 #x0000000000000001))
(assert (= var79986 temp42_243))
(model-add temp42_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp42_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp42_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






