(declare-fun temp785_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp785_2 () (_ BitVec 64))
(declare-fun temp785_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp785_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp785_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp785_6 () (_ BitVec 64))
(declare-fun temp785_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_8 () (_ BitVec 64))
(declare-fun temp785_9 () (_ BitVec 64))
(declare-fun temp785_10 () (_ BitVec 64))
(declare-fun temp785_11 () (_ BitVec 64))
(declare-fun temp785_12 () (_ BitVec 64))
(declare-fun temp785_13 () (_ BitVec 64))
(declare-fun temp785_14 () (_ BitVec 64))
(declare-fun temp785_15 () (_ BitVec 64))
(declare-fun temp785_16 () (_ BitVec 64))
(declare-fun temp785_17 () (_ BitVec 64))
(declare-fun temp785_18 () (_ BitVec 64))
(declare-fun temp785_19 () (_ BitVec 64))
(declare-fun temp785_20 () (_ BitVec 64))
(declare-fun temp785_21 () (_ BitVec 64))
(declare-fun temp785_22 () (_ BitVec 64))
(declare-fun temp785_23 () (_ BitVec 64))
(declare-fun temp785_24 () (_ BitVec 64))
(declare-fun temp785_25 () (_ BitVec 64))
(declare-fun temp785_26 () (_ BitVec 64))
(declare-fun temp785_27 () (_ BitVec 64))
(declare-fun temp785_28 () (_ BitVec 64))
(declare-fun temp785_29 () (_ BitVec 64))
(declare-fun temp785_30 () (_ BitVec 64))
(declare-fun temp785_31 () (_ BitVec 64))
(declare-fun temp785_32 () (_ BitVec 64))
(declare-fun temp785_33 () (_ BitVec 64))
(declare-fun temp785_34 () (_ BitVec 64))
(declare-fun temp785_35 () (_ BitVec 64))
(declare-fun temp785_36 () (_ BitVec 64))
(declare-fun temp785_37 () (_ BitVec 64))
(declare-fun temp785_38 () (_ BitVec 64))
(declare-fun temp785_39 () (_ BitVec 64))
(declare-fun temp785_40 () (_ BitVec 64))
(declare-fun temp785_41 () (_ BitVec 64))
(declare-fun temp785_42 () (_ BitVec 64))
(declare-fun temp785_43 () (_ BitVec 64))
(declare-fun temp785_44 () (_ BitVec 64))
(declare-fun temp785_45 () (_ BitVec 64))
(declare-fun temp785_46 () (_ BitVec 64))
(declare-fun temp785_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp785_48 () (_ BitVec 64))
(declare-fun temp785_49 () (_ BitVec 64))
(declare-fun temp785_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_51 () (_ BitVec 64))
(declare-fun temp785_52 () (_ BitVec 64))
(declare-fun temp785_53 () (_ BitVec 64))
(declare-fun temp785_54 () (_ BitVec 64))
(declare-fun temp785_55 () (_ BitVec 64))
(declare-fun temp785_56 () (_ BitVec 64))
(declare-fun temp785_57 () (_ BitVec 64))
(declare-fun temp785_58 () (_ BitVec 64))
(declare-fun temp785_59 () (_ BitVec 64))
(declare-fun temp785_60 () (_ BitVec 64))
(declare-fun temp785_61 () (_ BitVec 64))
(declare-fun temp785_62 () (_ BitVec 64))
(declare-fun temp785_63 () (_ BitVec 64))
(declare-fun temp785_64 () (_ BitVec 64))
(declare-fun temp785_65 () (_ BitVec 64))
(declare-fun temp785_66 () (_ BitVec 64))
(declare-fun temp785_67 () (_ BitVec 64))
(declare-fun temp785_68 () (_ BitVec 64))
(declare-fun temp785_69 () (_ BitVec 64))
(declare-fun temp785_70 () (_ BitVec 64))
(declare-fun temp785_71 () (_ BitVec 64))
(declare-fun temp785_72 () (_ BitVec 64))
(declare-fun temp785_73 () (_ BitVec 64))
(declare-fun temp785_74 () (_ BitVec 64))
(declare-fun temp785_75 () (_ BitVec 64))
(declare-fun temp785_76 () (_ BitVec 64))
(declare-fun temp785_77 () (_ BitVec 64))
(declare-fun temp785_78 () (_ BitVec 64))
(declare-fun temp785_79 () (_ BitVec 64))
(declare-fun temp785_80 () (_ BitVec 64))
(declare-fun temp785_81 () (_ BitVec 64))
(declare-fun temp785_82 () (_ BitVec 64))
(declare-fun temp785_83 () (_ BitVec 64))
(declare-fun temp785_84 () (_ BitVec 64))
(declare-fun temp785_85 () (_ BitVec 64))
(declare-fun temp785_86 () (_ BitVec 64))
(declare-fun temp785_87 () (_ BitVec 64))
(declare-fun temp785_88 () (_ BitVec 64))
(declare-fun temp785_89 () (_ BitVec 64))
(declare-fun temp785_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp785_91 () (_ BitVec 64))
(declare-fun temp785_92 () (_ BitVec 64))
(declare-fun temp785_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_94 () (_ BitVec 64))
(declare-fun temp785_95 () (_ BitVec 64))
(declare-fun temp785_96 () (_ BitVec 64))
(declare-fun temp785_97 () (_ BitVec 64))
(declare-fun temp785_98 () (_ BitVec 64))
(declare-fun temp785_99 () (_ BitVec 64))
(declare-fun temp785_100 () (_ BitVec 64))
(declare-fun temp785_101 () (_ BitVec 64))
(declare-fun temp785_102 () (_ BitVec 64))
(declare-fun temp785_103 () (_ BitVec 64))
(declare-fun temp785_104 () (_ BitVec 64))
(declare-fun temp785_105 () (_ BitVec 64))
(declare-fun temp785_106 () (_ BitVec 64))
(declare-fun temp785_107 () (_ BitVec 64))
(declare-fun temp785_108 () (_ BitVec 64))
(declare-fun temp785_109 () (_ BitVec 64))
(declare-fun temp785_110 () (_ BitVec 64))
(declare-fun temp785_111 () (_ BitVec 64))
(declare-fun temp785_112 () (_ BitVec 64))
(declare-fun temp785_113 () (_ BitVec 64))
(declare-fun temp785_114 () (_ BitVec 64))
(declare-fun temp785_115 () (_ BitVec 64))
(declare-fun temp785_116 () (_ BitVec 64))
(declare-fun temp785_117 () (_ BitVec 64))
(declare-fun temp785_118 () (_ BitVec 64))
(declare-fun temp785_119 () (_ BitVec 64))
(declare-fun temp785_120 () (_ BitVec 64))
(declare-fun temp785_121 () (_ BitVec 64))
(declare-fun temp785_122 () (_ BitVec 64))
(declare-fun temp785_123 () (_ BitVec 64))
(declare-fun temp785_124 () (_ BitVec 64))
(declare-fun temp785_125 () (_ BitVec 64))
(declare-fun temp785_126 () (_ BitVec 64))
(declare-fun temp785_127 () (_ BitVec 64))
(declare-fun temp785_128 () (_ BitVec 64))
(declare-fun temp785_129 () (_ BitVec 64))
(declare-fun temp785_130 () (_ BitVec 64))
(declare-fun temp785_131 () (_ BitVec 64))
(declare-fun temp785_132 () (_ BitVec 64))
(declare-fun temp785_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp785_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp785_135 () (_ BitVec 64))
(declare-fun temp785_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp785_137 () (_ BitVec 64))
(declare-fun temp785_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_139 () (_ BitVec 64))
(declare-fun temp785_140 () (_ BitVec 64))
(declare-fun temp785_141 () (_ BitVec 64))
(declare-fun temp785_142 () (_ BitVec 64))
(declare-fun temp785_143 () (_ BitVec 64))
(declare-fun temp785_144 () (_ BitVec 64))
(declare-fun temp785_145 () (_ BitVec 64))
(declare-fun temp785_146 () (_ BitVec 64))
(declare-fun temp785_147 () (_ BitVec 64))
(declare-fun temp785_148 () (_ BitVec 64))
(declare-fun temp785_149 () (_ BitVec 64))
(declare-fun temp785_150 () (_ BitVec 64))
(declare-fun temp785_151 () (_ BitVec 64))
(declare-fun temp785_152 () (_ BitVec 64))
(declare-fun temp785_153 () (_ BitVec 64))
(declare-fun temp785_154 () (_ BitVec 64))
(declare-fun temp785_156 () (_ BitVec 64))
(declare-fun temp785_157 () (_ BitVec 64))
(declare-fun temp785_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp785_158 () (_ BitVec 64))
(declare-fun temp785_159 () (_ BitVec 64))
(declare-fun temp785_161 () (_ BitVec 64))
(declare-fun temp785_162 () (_ BitVec 64))
(declare-fun temp785_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp785_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp785_164 () (_ BitVec 64))
(declare-fun temp785_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp785_166 () (_ BitVec 64))
(declare-fun temp785_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp785_168 () (_ BitVec 64))
(declare-fun temp785_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_170 () (_ BitVec 64))
(declare-fun temp785_171 () (_ BitVec 64))
(declare-fun temp785_172 () (_ BitVec 64))
(declare-fun temp785_173 () (_ BitVec 64))
(declare-fun temp785_174 () (_ BitVec 64))
(declare-fun temp785_175 () (_ BitVec 64))
(declare-fun temp785_176 () (_ BitVec 64))
(declare-fun temp785_177 () (_ BitVec 64))
(declare-fun temp785_178 () (_ BitVec 64))
(declare-fun temp785_179 () (_ BitVec 64))
(declare-fun temp785_180 () (_ BitVec 64))
(declare-fun temp785_181 () (_ BitVec 64))
(declare-fun temp785_182 () (_ BitVec 64))
(declare-fun temp785_183 () (_ BitVec 64))
(declare-fun temp785_184 () (_ BitVec 64))
(declare-fun temp785_185 () (_ BitVec 64))
(declare-fun temp785_186 () (_ BitVec 64))
(declare-fun temp785_187 () (_ BitVec 64))
(declare-fun temp785_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp785_189 () (_ BitVec 64))
(declare-fun temp785_191 () (_ BitVec 64))
(declare-fun temp785_192 () (_ BitVec 64))
(declare-fun temp785_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp785_193 () (_ BitVec 64))
(declare-fun temp785_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp785_195 () (_ BitVec 64))
(declare-fun temp785_196 () (_ BitVec 64))
(declare-fun temp785_197 () (_ BitVec 64))
(declare-fun temp785_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_199 () (_ BitVec 64))
(declare-fun temp785_200 () (_ BitVec 64))
(declare-fun temp785_201 () (_ BitVec 64))
(declare-fun temp785_202 () (_ BitVec 64))
(declare-fun temp785_203 () (_ BitVec 64))
(declare-fun temp785_204 () (_ BitVec 64))
(declare-fun temp785_205 () (_ BitVec 64))
(declare-fun temp785_206 () (_ BitVec 64))
(declare-fun temp785_207 () (_ BitVec 64))
(declare-fun temp785_208 () (_ BitVec 64))
(declare-fun temp785_209 () (_ BitVec 64))
(declare-fun temp785_210 () (_ BitVec 64))
(declare-fun temp785_211 () (_ BitVec 64))
(declare-fun temp785_212 () (_ BitVec 64))
(declare-fun temp785_213 () (_ BitVec 64))
(declare-fun temp785_214 () (_ BitVec 64))
(declare-fun temp785_215 () (_ BitVec 64))
(declare-fun temp785_216 () (_ BitVec 64))
(declare-fun temp785_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp785_218 () (_ BitVec 64))
(declare-fun temp785_220 () (_ BitVec 64))
(declare-fun temp785_221 () (_ BitVec 64))
(declare-fun temp785_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp785_222 () (_ BitVec 64))
(declare-fun temp785_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp785_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp785_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp785_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp785_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp785_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp785_229 () (_ BitVec 64))
(declare-fun temp785_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp785_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp785_232 () (_ BitVec 64))
(declare-fun temp785_233 () (_ BitVec 64))
(declare-fun temp785_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp785_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp785_236 () (_ BitVec 64))
(declare-fun temp785_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp785_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp785_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp785_241 () (_ BitVec 64))
(declare-fun temp785_240 () (_ BitVec 64))
(declare-fun temp785_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp785_243 () (_ BitVec 64))
(declare-fun temp785_244 () (_ BitVec 64))
(declare-fun temp785_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp785_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp785_247 () (_ BitVec 64))
(declare-fun temp785_248 () (_ BitVec 64))
(assert (= temp785_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp785_1)))
(assert (= temp785_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp785_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_3 #x0000000000000000))
(assert (= var79869 temp785_3))
(assert (= temp785_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp785_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_5 #x0000000000000000))
(assert (= var79914 temp785_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp785_6 #x0000000000000000))
(assert (= temp785_7 temp785_6))
(assert (= temp785_8 (select ARGNAME_padding_NAMEEND_VAL temp785_7)))
(assert (= temp785_9 #x0000000000000001))
(assert (= temp785_10 temp785_9))
(assert (= temp785_11 (select ARGNAME_padding_NAMEEND_VAL temp785_10)))
(assert (= temp785_12 #x0000000000000002))
(assert (= temp785_13 temp785_12))
(assert (= temp785_14 (select ARGNAME_padding_NAMEEND_VAL temp785_13)))
(assert (= temp785_15 #x0000000000000003))
(assert (= temp785_16 temp785_15))
(assert (= temp785_17 (select ARGNAME_padding_NAMEEND_VAL temp785_16)))
(assert (= temp785_18 #x0000000000000004))
(assert (= temp785_19 temp785_18))
(assert (= temp785_20 (select ARGNAME_padding_NAMEEND_VAL temp785_19)))
(assert (= temp785_21 #x0000000000000005))
(assert (= temp785_22 temp785_21))
(assert (= temp785_23 (select ARGNAME_padding_NAMEEND_VAL temp785_22)))
(assert (= temp785_24 #x0000000000000000))
(assert (= temp785_25 #x0000000000000000))
(assert (= temp785_26 temp785_25))
(assert (= temp785_27 (select ARGNAME_padding_NAMEEND_VAL temp785_26)))
(assert (= temp785_28 #x0000000000000000))
(assert (= temp785_29 #x0000000000000001))
(assert (= temp785_30 temp785_29))
(assert (= temp785_31 (select ARGNAME_padding_NAMEEND_VAL temp785_30)))
(assert (= temp785_32 #x0000000000000000))
(assert (= temp785_33 #x0000000000000002))
(assert (= temp785_34 temp785_33))
(assert (= temp785_35 (select ARGNAME_padding_NAMEEND_VAL temp785_34)))
(assert (= temp785_36 #x0000000000000000))
(assert (= temp785_37 #x0000000000000003))
(assert (= temp785_38 temp785_37))
(assert (= temp785_39 (select ARGNAME_padding_NAMEEND_VAL temp785_38)))
(assert (= temp785_40 #x0000000000000000))
(assert (= temp785_41 #x0000000000000004))
(assert (= temp785_42 temp785_41))
(assert (= temp785_43 (select ARGNAME_padding_NAMEEND_VAL temp785_42)))
(assert (= temp785_44 #x0000000000000000))
(assert (= temp785_45 #x0000000000000005))
(assert (= temp785_46 temp785_45))
(assert (= temp785_47 (select ARGNAME_padding_NAMEEND_VAL temp785_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp785_27 temp785_24)
             (bvslt temp785_31 temp785_28)
             (bvslt temp785_35 temp785_32)
             (bvslt temp785_39 temp785_36)
             (bvslt temp785_43 temp785_40)
             (bvslt temp785_47 temp785_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_48 #x0000000000000000))
(assert (= var1322786 temp785_48))
(assert (= temp785_49 #x0000000000000000))
(assert (= temp785_50 temp785_49))
(assert (= temp785_51 (select ARGNAME_output_padding_NAMEEND_VAL temp785_50)))
(assert (= temp785_52 #x0000000000000001))
(assert (= temp785_53 temp785_52))
(assert (= temp785_54 (select ARGNAME_output_padding_NAMEEND_VAL temp785_53)))
(assert (= temp785_55 #x0000000000000002))
(assert (= temp785_56 temp785_55))
(assert (= temp785_57 (select ARGNAME_output_padding_NAMEEND_VAL temp785_56)))
(assert (= temp785_58 #x0000000000000003))
(assert (= temp785_59 temp785_58))
(assert (= temp785_60 (select ARGNAME_output_padding_NAMEEND_VAL temp785_59)))
(assert (= temp785_61 #x0000000000000004))
(assert (= temp785_62 temp785_61))
(assert (= temp785_63 (select ARGNAME_output_padding_NAMEEND_VAL temp785_62)))
(assert (= temp785_64 #x0000000000000005))
(assert (= temp785_65 temp785_64))
(assert (= temp785_66 (select ARGNAME_output_padding_NAMEEND_VAL temp785_65)))
(assert (= temp785_67 #x0000000000000000))
(assert (= temp785_68 #x0000000000000000))
(assert (= temp785_69 temp785_68))
(assert (= temp785_70 (select ARGNAME_output_padding_NAMEEND_VAL temp785_69)))
(assert (= temp785_71 #x0000000000000000))
(assert (= temp785_72 #x0000000000000001))
(assert (= temp785_73 temp785_72))
(assert (= temp785_74 (select ARGNAME_output_padding_NAMEEND_VAL temp785_73)))
(assert (= temp785_75 #x0000000000000000))
(assert (= temp785_76 #x0000000000000002))
(assert (= temp785_77 temp785_76))
(assert (= temp785_78 (select ARGNAME_output_padding_NAMEEND_VAL temp785_77)))
(assert (= temp785_79 #x0000000000000000))
(assert (= temp785_80 #x0000000000000003))
(assert (= temp785_81 temp785_80))
(assert (= temp785_82 (select ARGNAME_output_padding_NAMEEND_VAL temp785_81)))
(assert (= temp785_83 #x0000000000000000))
(assert (= temp785_84 #x0000000000000004))
(assert (= temp785_85 temp785_84))
(assert (= temp785_86 (select ARGNAME_output_padding_NAMEEND_VAL temp785_85)))
(assert (= temp785_87 #x0000000000000000))
(assert (= temp785_88 #x0000000000000005))
(assert (= temp785_89 temp785_88))
(assert (= temp785_90 (select ARGNAME_output_padding_NAMEEND_VAL temp785_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp785_70 temp785_67)
             (bvslt temp785_74 temp785_71)
             (bvslt temp785_78 temp785_75)
             (bvslt temp785_82 temp785_79)
             (bvslt temp785_86 temp785_83)
             (bvslt temp785_90 temp785_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_91 #x0000000000000000))
(assert (= var1322797 temp785_91))
(assert (= temp785_92 #x0000000000000000))
(assert (= temp785_93 temp785_92))
(assert (= temp785_94 (select ARGNAME_stride_NAMEEND_VAL temp785_93)))
(assert (= temp785_95 #x0000000000000001))
(assert (= temp785_96 temp785_95))
(assert (= temp785_97 (select ARGNAME_stride_NAMEEND_VAL temp785_96)))
(assert (= temp785_98 #x0000000000000002))
(assert (= temp785_99 temp785_98))
(assert (= temp785_100 (select ARGNAME_stride_NAMEEND_VAL temp785_99)))
(assert (= temp785_101 #x0000000000000003))
(assert (= temp785_102 temp785_101))
(assert (= temp785_103 (select ARGNAME_stride_NAMEEND_VAL temp785_102)))
(assert (= temp785_104 #x0000000000000004))
(assert (= temp785_105 temp785_104))
(assert (= temp785_106 (select ARGNAME_stride_NAMEEND_VAL temp785_105)))
(assert (= temp785_107 #x0000000000000005))
(assert (= temp785_108 temp785_107))
(assert (= temp785_109 (select ARGNAME_stride_NAMEEND_VAL temp785_108)))
(assert (= temp785_110 #x0000000000000000))
(assert (= temp785_111 #x0000000000000000))
(assert (= temp785_112 temp785_111))
(assert (= temp785_113 (select ARGNAME_stride_NAMEEND_VAL temp785_112)))
(assert (= temp785_114 #x0000000000000000))
(assert (= temp785_115 #x0000000000000001))
(assert (= temp785_116 temp785_115))
(assert (= temp785_117 (select ARGNAME_stride_NAMEEND_VAL temp785_116)))
(assert (= temp785_118 #x0000000000000000))
(assert (= temp785_119 #x0000000000000002))
(assert (= temp785_120 temp785_119))
(assert (= temp785_121 (select ARGNAME_stride_NAMEEND_VAL temp785_120)))
(assert (= temp785_122 #x0000000000000000))
(assert (= temp785_123 #x0000000000000003))
(assert (= temp785_124 temp785_123))
(assert (= temp785_125 (select ARGNAME_stride_NAMEEND_VAL temp785_124)))
(assert (= temp785_126 #x0000000000000000))
(assert (= temp785_127 #x0000000000000004))
(assert (= temp785_128 temp785_127))
(assert (= temp785_129 (select ARGNAME_stride_NAMEEND_VAL temp785_128)))
(assert (= temp785_130 #x0000000000000000))
(assert (= temp785_131 #x0000000000000005))
(assert (= temp785_132 temp785_131))
(assert (= temp785_133 (select ARGNAME_stride_NAMEEND_VAL temp785_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp785_113 temp785_110)
             (bvsle temp785_117 temp785_114)
             (bvsle temp785_121 temp785_118)
             (bvsle temp785_125 temp785_122)
             (bvsle temp785_129 temp785_126)
             (bvsle temp785_133 temp785_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_134 #x0000000000000000))
(assert (= var1322807 temp785_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_135 #x0000000000000001))
(assert (= var1322819 temp785_135))
(assert (= temp785_136 #x0000000000000000))
(assert (= var1310898 temp785_136))
(assert (= temp785_137 #x0000000000000000))
(assert (= temp785_138 temp785_137))
(assert (= temp785_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_138)))
(assert (= temp785_140 #x0000000000000001))
(assert (= temp785_141 temp785_140))
(assert (= temp785_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_141)))
(assert (= temp785_143 #x0000000000000002))
(assert (= temp785_144 temp785_143))
(assert (= temp785_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_144)))
(assert (= temp785_146 #x0000000000000003))
(assert (= temp785_147 temp785_146))
(assert (= temp785_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_147)))
(assert (= temp785_149 #x0000000000000004))
(assert (= temp785_150 temp785_149))
(assert (= temp785_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_150)))
(assert (= temp785_152 #x0000000000000005))
(assert (= temp785_153 temp785_152))
(assert (= temp785_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_153)))
(assert (= temp785_156 var1310898))
(assert (= temp785_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_156)))
(assert (= temp785_155 temp785_157))
(assert (= var1322852
   (ite (bvslt temp785_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_158 #x0000000000000000))
(assert (= var1322852 temp785_158))
(assert (= temp785_159 #x0000000000000000))
(assert (= var1310898 temp785_159))
(assert (= temp785_161 var1310898))
(assert (= temp785_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_161)))
(assert (= temp785_160 temp785_162))
(assert (= var1322874 (bvsmod temp785_160 ARGNAME_groups_NAMEEND)))
(assert (= temp785_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp785_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_164 #x0000000000000001))
(assert (= var1322875 temp785_164))
(assert (= temp785_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp785_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_166 #x0000000000000001))
(assert (= var1322895 temp785_166))
(assert (= temp785_167 #x0000000000000001))
(assert (= var1311786 temp785_167))
(assert (= temp785_168 #x0000000000000000))
(assert (= temp785_169 temp785_168))
(assert (= temp785_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_169)))
(assert (= temp785_171 #x0000000000000001))
(assert (= temp785_172 temp785_171))
(assert (= temp785_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_172)))
(assert (= temp785_174 #x0000000000000002))
(assert (= temp785_175 temp785_174))
(assert (= temp785_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_175)))
(assert (= temp785_177 #x0000000000000003))
(assert (= temp785_178 temp785_177))
(assert (= temp785_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_178)))
(assert (= temp785_180 #x0000000000000004))
(assert (= temp785_181 temp785_180))
(assert (= temp785_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_181)))
(assert (= temp785_183 #x0000000000000005))
(assert (= temp785_184 temp785_183))
(assert (= temp785_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_184)))
(assert (= temp785_186 #x0000000000000000))
(assert (= temp785_187
   (ite (bvslt var1311786 temp785_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp785_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_187)))
(assert (= var1322903 temp785_188))
(assert (bvslt (ite (bvslt var1311786 temp785_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp785_189 #x0000000000000001))
(assert (= var1311786 temp785_189))
(assert (= temp785_191 var1311786))
(assert (= temp785_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_191)))
(assert (= temp785_190 temp785_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp785_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_193 #x0000000000000001))
(assert (= var1322908 temp785_193))
(assert (= temp785_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp785_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_195 #x0000000000000001))
(assert (= var1322975 temp785_195))
(assert (= temp785_196 #x0000000000000000))
(assert (= var1310898 temp785_196))
(assert (= temp785_197 #x0000000000000000))
(assert (= temp785_198 temp785_197))
(assert (= temp785_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp785_198)))
(assert (= temp785_200 #x0000000000000001))
(assert (= temp785_201 temp785_200))
(assert (= temp785_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp785_201)))
(assert (= temp785_203 #x0000000000000002))
(assert (= temp785_204 temp785_203))
(assert (= temp785_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp785_204)))
(assert (= temp785_206 #x0000000000000003))
(assert (= temp785_207 temp785_206))
(assert (= temp785_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp785_207)))
(assert (= temp785_209 #x0000000000000004))
(assert (= temp785_210 temp785_209))
(assert (= temp785_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp785_210)))
(assert (= temp785_212 #x0000000000000005))
(assert (= temp785_213 temp785_212))
(assert (= temp785_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp785_213)))
(assert (= temp785_215 #x0000000000000000))
(assert (= temp785_216
   (ite (bvslt var1310898 temp785_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp785_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp785_216)))
(assert (= var1322977 temp785_217))
(assert (bvslt (ite (bvslt var1310898 temp785_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp785_218 #x0000000000000000))
(assert (= var1310898 temp785_218))
(assert (= temp785_220 var1310898))
(assert (= temp785_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_220)))
(assert (= temp785_219 temp785_221))
(assert (= var1322980
   (ite (= var1322977 temp785_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_222 #x0000000000000001))
(assert (= var1322980 temp785_222))
(assert (= temp785_223 #x0000000000000002))
(assert (= var1848169 temp785_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp785_225 #x0000000000000001))
(assert (= var1323065 temp785_225))
(assert (= temp785_226 #x0000000000000001))
(assert (= var3486735 temp785_226))
(assert (= temp785_227 #x0000000000000001))
(assert (= var3814415 temp785_227))
(assert (= temp785_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp785_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_229 #x0000000000000001))
(assert (= var79986 temp785_229))
(assert (= temp785_230 #x0000000000000001))
(assert (= var80116 temp785_230))
(assert (= var4796905 var80116))
(assert (= temp785_231 #x0000000000000000))
(assert (= var4784306 temp785_231))
(assert (= temp785_232 #x0000000000000000))
(assert (= temp785_233
   (ite (bvslt var4784306 temp785_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp785_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_233)))
(assert (= var4796924 temp785_234))
(assert (bvslt (ite (bvslt var4784306 temp785_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp785_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp785_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_236 #x0000000000000001))
(assert (= var4796925 temp785_236))
(assert (= temp785_237 #x0000000000000000))
(assert (= var4996927 temp785_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp785_238 #x0000000000000002))
(assert (= var5125763 temp785_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_239 #x0000000000000000))
(assert (= var5191324 temp785_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp785_241 #xffffffffffffffff))
(assert (= temp785_240 temp785_241))
(assert (= temp785_242 #x0000000000000001))
(assert (= var66602 temp785_242))
(assert (= temp785_243 #x0000000000000000))
(assert (= temp785_244
   (ite (bvslt var66602 temp785_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp785_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_244)))
(assert (= var80523 temp785_245))
(assert (bvslt (ite (bvslt var66602 temp785_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp785_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp785_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_247 #x0000000000000000))
(assert (= var80524 temp785_247))
(assert (= temp785_248 #x0000000000000001))
(assert (= var79986 temp785_248))
(model-add temp785_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp785_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp785_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






