(declare-fun temp210_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp210_2 () (_ BitVec 64))
(declare-fun temp210_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp210_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp210_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp210_6 () (_ BitVec 64))
(declare-fun temp210_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp210_8 () (_ BitVec 64))
(declare-fun temp210_9 () (_ BitVec 64))
(declare-fun temp210_10 () (_ BitVec 64))
(declare-fun temp210_11 () (_ BitVec 64))
(declare-fun temp210_12 () (_ BitVec 64))
(declare-fun temp210_13 () (_ BitVec 64))
(declare-fun temp210_14 () (_ BitVec 64))
(declare-fun temp210_15 () (_ BitVec 64))
(declare-fun temp210_16 () (_ BitVec 64))
(declare-fun temp210_17 () (_ BitVec 64))
(declare-fun temp210_18 () (_ BitVec 64))
(declare-fun temp210_19 () (_ BitVec 64))
(declare-fun temp210_20 () (_ BitVec 64))
(declare-fun temp210_21 () (_ BitVec 64))
(declare-fun temp210_22 () (_ BitVec 64))
(declare-fun temp210_23 () (_ BitVec 64))
(declare-fun temp210_24 () (_ BitVec 64))
(declare-fun temp210_25 () (_ BitVec 64))
(declare-fun temp210_26 () (_ BitVec 64))
(declare-fun temp210_27 () (_ BitVec 64))
(declare-fun temp210_28 () (_ BitVec 64))
(declare-fun temp210_29 () (_ BitVec 64))
(declare-fun temp210_30 () (_ BitVec 64))
(declare-fun temp210_31 () (_ BitVec 64))
(declare-fun temp210_32 () (_ BitVec 64))
(declare-fun temp210_33 () (_ BitVec 64))
(declare-fun temp210_34 () (_ BitVec 64))
(declare-fun temp210_35 () (_ BitVec 64))
(declare-fun temp210_36 () (_ BitVec 64))
(declare-fun temp210_37 () (_ BitVec 64))
(declare-fun temp210_38 () (_ BitVec 64))
(declare-fun temp210_39 () (_ BitVec 64))
(declare-fun temp210_40 () (_ BitVec 64))
(declare-fun temp210_41 () (_ BitVec 64))
(declare-fun temp210_42 () (_ BitVec 64))
(declare-fun temp210_43 () (_ BitVec 64))
(declare-fun temp210_44 () (_ BitVec 64))
(declare-fun temp210_45 () (_ BitVec 64))
(declare-fun temp210_46 () (_ BitVec 64))
(declare-fun temp210_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp210_48 () (_ BitVec 64))
(declare-fun temp210_49 () (_ BitVec 64))
(declare-fun temp210_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp210_51 () (_ BitVec 64))
(declare-fun temp210_52 () (_ BitVec 64))
(declare-fun temp210_53 () (_ BitVec 64))
(declare-fun temp210_54 () (_ BitVec 64))
(declare-fun temp210_55 () (_ BitVec 64))
(declare-fun temp210_56 () (_ BitVec 64))
(declare-fun temp210_57 () (_ BitVec 64))
(declare-fun temp210_58 () (_ BitVec 64))
(declare-fun temp210_59 () (_ BitVec 64))
(declare-fun temp210_60 () (_ BitVec 64))
(declare-fun temp210_61 () (_ BitVec 64))
(declare-fun temp210_62 () (_ BitVec 64))
(declare-fun temp210_63 () (_ BitVec 64))
(declare-fun temp210_64 () (_ BitVec 64))
(declare-fun temp210_65 () (_ BitVec 64))
(declare-fun temp210_66 () (_ BitVec 64))
(declare-fun temp210_67 () (_ BitVec 64))
(declare-fun temp210_68 () (_ BitVec 64))
(declare-fun temp210_69 () (_ BitVec 64))
(declare-fun temp210_70 () (_ BitVec 64))
(declare-fun temp210_71 () (_ BitVec 64))
(declare-fun temp210_72 () (_ BitVec 64))
(declare-fun temp210_73 () (_ BitVec 64))
(declare-fun temp210_74 () (_ BitVec 64))
(declare-fun temp210_75 () (_ BitVec 64))
(declare-fun temp210_76 () (_ BitVec 64))
(declare-fun temp210_77 () (_ BitVec 64))
(declare-fun temp210_78 () (_ BitVec 64))
(declare-fun temp210_79 () (_ BitVec 64))
(declare-fun temp210_80 () (_ BitVec 64))
(declare-fun temp210_81 () (_ BitVec 64))
(declare-fun temp210_82 () (_ BitVec 64))
(declare-fun temp210_83 () (_ BitVec 64))
(declare-fun temp210_84 () (_ BitVec 64))
(declare-fun temp210_85 () (_ BitVec 64))
(declare-fun temp210_86 () (_ BitVec 64))
(declare-fun temp210_87 () (_ BitVec 64))
(declare-fun temp210_88 () (_ BitVec 64))
(declare-fun temp210_89 () (_ BitVec 64))
(declare-fun temp210_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp210_91 () (_ BitVec 64))
(declare-fun temp210_92 () (_ BitVec 64))
(declare-fun temp210_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp210_94 () (_ BitVec 64))
(declare-fun temp210_95 () (_ BitVec 64))
(declare-fun temp210_96 () (_ BitVec 64))
(declare-fun temp210_97 () (_ BitVec 64))
(declare-fun temp210_98 () (_ BitVec 64))
(declare-fun temp210_99 () (_ BitVec 64))
(declare-fun temp210_100 () (_ BitVec 64))
(declare-fun temp210_101 () (_ BitVec 64))
(declare-fun temp210_102 () (_ BitVec 64))
(declare-fun temp210_103 () (_ BitVec 64))
(declare-fun temp210_104 () (_ BitVec 64))
(declare-fun temp210_105 () (_ BitVec 64))
(declare-fun temp210_106 () (_ BitVec 64))
(declare-fun temp210_107 () (_ BitVec 64))
(declare-fun temp210_108 () (_ BitVec 64))
(declare-fun temp210_109 () (_ BitVec 64))
(declare-fun temp210_110 () (_ BitVec 64))
(declare-fun temp210_111 () (_ BitVec 64))
(declare-fun temp210_112 () (_ BitVec 64))
(declare-fun temp210_113 () (_ BitVec 64))
(declare-fun temp210_114 () (_ BitVec 64))
(declare-fun temp210_115 () (_ BitVec 64))
(declare-fun temp210_116 () (_ BitVec 64))
(declare-fun temp210_117 () (_ BitVec 64))
(declare-fun temp210_118 () (_ BitVec 64))
(declare-fun temp210_119 () (_ BitVec 64))
(declare-fun temp210_120 () (_ BitVec 64))
(declare-fun temp210_121 () (_ BitVec 64))
(declare-fun temp210_122 () (_ BitVec 64))
(declare-fun temp210_123 () (_ BitVec 64))
(declare-fun temp210_124 () (_ BitVec 64))
(declare-fun temp210_125 () (_ BitVec 64))
(declare-fun temp210_126 () (_ BitVec 64))
(declare-fun temp210_127 () (_ BitVec 64))
(declare-fun temp210_128 () (_ BitVec 64))
(declare-fun temp210_129 () (_ BitVec 64))
(declare-fun temp210_130 () (_ BitVec 64))
(declare-fun temp210_131 () (_ BitVec 64))
(declare-fun temp210_132 () (_ BitVec 64))
(declare-fun temp210_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp210_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp210_135 () (_ BitVec 64))
(declare-fun temp210_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp210_137 () (_ BitVec 64))
(declare-fun temp210_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp210_139 () (_ BitVec 64))
(declare-fun temp210_140 () (_ BitVec 64))
(declare-fun temp210_141 () (_ BitVec 64))
(declare-fun temp210_142 () (_ BitVec 64))
(declare-fun temp210_143 () (_ BitVec 64))
(declare-fun temp210_144 () (_ BitVec 64))
(declare-fun temp210_145 () (_ BitVec 64))
(declare-fun temp210_146 () (_ BitVec 64))
(declare-fun temp210_147 () (_ BitVec 64))
(declare-fun temp210_148 () (_ BitVec 64))
(declare-fun temp210_149 () (_ BitVec 64))
(declare-fun temp210_150 () (_ BitVec 64))
(declare-fun temp210_151 () (_ BitVec 64))
(declare-fun temp210_152 () (_ BitVec 64))
(declare-fun temp210_153 () (_ BitVec 64))
(declare-fun temp210_154 () (_ BitVec 64))
(declare-fun temp210_156 () (_ BitVec 64))
(declare-fun temp210_157 () (_ BitVec 64))
(declare-fun temp210_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp210_158 () (_ BitVec 64))
(declare-fun temp210_159 () (_ BitVec 64))
(declare-fun temp210_161 () (_ BitVec 64))
(declare-fun temp210_162 () (_ BitVec 64))
(declare-fun temp210_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp210_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp210_164 () (_ BitVec 64))
(declare-fun temp210_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp210_166 () (_ BitVec 64))
(declare-fun temp210_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp210_168 () (_ BitVec 64))
(declare-fun temp210_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp210_170 () (_ BitVec 64))
(declare-fun temp210_171 () (_ BitVec 64))
(declare-fun temp210_172 () (_ BitVec 64))
(declare-fun temp210_173 () (_ BitVec 64))
(declare-fun temp210_174 () (_ BitVec 64))
(declare-fun temp210_175 () (_ BitVec 64))
(declare-fun temp210_176 () (_ BitVec 64))
(declare-fun temp210_177 () (_ BitVec 64))
(declare-fun temp210_178 () (_ BitVec 64))
(declare-fun temp210_179 () (_ BitVec 64))
(declare-fun temp210_180 () (_ BitVec 64))
(declare-fun temp210_181 () (_ BitVec 64))
(declare-fun temp210_182 () (_ BitVec 64))
(declare-fun temp210_183 () (_ BitVec 64))
(declare-fun temp210_184 () (_ BitVec 64))
(declare-fun temp210_185 () (_ BitVec 64))
(declare-fun temp210_186 () (_ BitVec 64))
(declare-fun temp210_187 () (_ BitVec 64))
(declare-fun temp210_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp210_189 () (_ BitVec 64))
(declare-fun temp210_191 () (_ BitVec 64))
(declare-fun temp210_192 () (_ BitVec 64))
(declare-fun temp210_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp210_193 () (_ BitVec 64))
(declare-fun temp210_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp210_195 () (_ BitVec 64))
(declare-fun temp210_196 () (_ BitVec 64))
(declare-fun temp210_197 () (_ BitVec 64))
(declare-fun temp210_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp210_199 () (_ BitVec 64))
(declare-fun temp210_200 () (_ BitVec 64))
(declare-fun temp210_201 () (_ BitVec 64))
(declare-fun temp210_202 () (_ BitVec 64))
(declare-fun temp210_203 () (_ BitVec 64))
(declare-fun temp210_204 () (_ BitVec 64))
(declare-fun temp210_205 () (_ BitVec 64))
(declare-fun temp210_206 () (_ BitVec 64))
(declare-fun temp210_207 () (_ BitVec 64))
(declare-fun temp210_208 () (_ BitVec 64))
(declare-fun temp210_209 () (_ BitVec 64))
(declare-fun temp210_210 () (_ BitVec 64))
(declare-fun temp210_211 () (_ BitVec 64))
(declare-fun temp210_212 () (_ BitVec 64))
(declare-fun temp210_213 () (_ BitVec 64))
(declare-fun temp210_214 () (_ BitVec 64))
(declare-fun temp210_215 () (_ BitVec 64))
(declare-fun temp210_216 () (_ BitVec 64))
(declare-fun temp210_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp210_218 () (_ BitVec 64))
(declare-fun temp210_220 () (_ BitVec 64))
(declare-fun temp210_221 () (_ BitVec 64))
(declare-fun temp210_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp210_222 () (_ BitVec 64))
(declare-fun temp210_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp210_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp210_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp210_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp210_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp210_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp210_229 () (_ BitVec 64))
(declare-fun temp210_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp210_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp210_232 () (_ BitVec 64))
(declare-fun temp210_233 () (_ BitVec 64))
(declare-fun temp210_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp210_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp210_236 () (_ BitVec 64))
(declare-fun temp210_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp210_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp210_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp210_241 () (_ BitVec 64))
(declare-fun temp210_240 () (_ BitVec 64))
(declare-fun temp210_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp210_243 () (_ BitVec 64))
(declare-fun temp210_244 () (_ BitVec 64))
(declare-fun temp210_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp210_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp210_247 () (_ BitVec 64))
(declare-fun temp210_248 () (_ BitVec 64))
(assert (= temp210_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp210_1)))
(assert (= temp210_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp210_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_3 #x0000000000000000))
(assert (= var79869 temp210_3))
(assert (= temp210_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp210_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_5 #x0000000000000000))
(assert (= var79914 temp210_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp210_6 #x0000000000000000))
(assert (= temp210_7 temp210_6))
(assert (= temp210_8 (select ARGNAME_padding_NAMEEND_VAL temp210_7)))
(assert (= temp210_9 #x0000000000000001))
(assert (= temp210_10 temp210_9))
(assert (= temp210_11 (select ARGNAME_padding_NAMEEND_VAL temp210_10)))
(assert (= temp210_12 #x0000000000000002))
(assert (= temp210_13 temp210_12))
(assert (= temp210_14 (select ARGNAME_padding_NAMEEND_VAL temp210_13)))
(assert (= temp210_15 #x0000000000000003))
(assert (= temp210_16 temp210_15))
(assert (= temp210_17 (select ARGNAME_padding_NAMEEND_VAL temp210_16)))
(assert (= temp210_18 #x0000000000000004))
(assert (= temp210_19 temp210_18))
(assert (= temp210_20 (select ARGNAME_padding_NAMEEND_VAL temp210_19)))
(assert (= temp210_21 #x0000000000000005))
(assert (= temp210_22 temp210_21))
(assert (= temp210_23 (select ARGNAME_padding_NAMEEND_VAL temp210_22)))
(assert (= temp210_24 #x0000000000000000))
(assert (= temp210_25 #x0000000000000000))
(assert (= temp210_26 temp210_25))
(assert (= temp210_27 (select ARGNAME_padding_NAMEEND_VAL temp210_26)))
(assert (= temp210_28 #x0000000000000000))
(assert (= temp210_29 #x0000000000000001))
(assert (= temp210_30 temp210_29))
(assert (= temp210_31 (select ARGNAME_padding_NAMEEND_VAL temp210_30)))
(assert (= temp210_32 #x0000000000000000))
(assert (= temp210_33 #x0000000000000002))
(assert (= temp210_34 temp210_33))
(assert (= temp210_35 (select ARGNAME_padding_NAMEEND_VAL temp210_34)))
(assert (= temp210_36 #x0000000000000000))
(assert (= temp210_37 #x0000000000000003))
(assert (= temp210_38 temp210_37))
(assert (= temp210_39 (select ARGNAME_padding_NAMEEND_VAL temp210_38)))
(assert (= temp210_40 #x0000000000000000))
(assert (= temp210_41 #x0000000000000004))
(assert (= temp210_42 temp210_41))
(assert (= temp210_43 (select ARGNAME_padding_NAMEEND_VAL temp210_42)))
(assert (= temp210_44 #x0000000000000000))
(assert (= temp210_45 #x0000000000000005))
(assert (= temp210_46 temp210_45))
(assert (= temp210_47 (select ARGNAME_padding_NAMEEND_VAL temp210_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp210_27 temp210_24)
             (bvslt temp210_31 temp210_28)
             (bvslt temp210_35 temp210_32)
             (bvslt temp210_39 temp210_36)
             (bvslt temp210_43 temp210_40)
             (bvslt temp210_47 temp210_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_48 #x0000000000000000))
(assert (= var1322786 temp210_48))
(assert (= temp210_49 #x0000000000000000))
(assert (= temp210_50 temp210_49))
(assert (= temp210_51 (select ARGNAME_output_padding_NAMEEND_VAL temp210_50)))
(assert (= temp210_52 #x0000000000000001))
(assert (= temp210_53 temp210_52))
(assert (= temp210_54 (select ARGNAME_output_padding_NAMEEND_VAL temp210_53)))
(assert (= temp210_55 #x0000000000000002))
(assert (= temp210_56 temp210_55))
(assert (= temp210_57 (select ARGNAME_output_padding_NAMEEND_VAL temp210_56)))
(assert (= temp210_58 #x0000000000000003))
(assert (= temp210_59 temp210_58))
(assert (= temp210_60 (select ARGNAME_output_padding_NAMEEND_VAL temp210_59)))
(assert (= temp210_61 #x0000000000000004))
(assert (= temp210_62 temp210_61))
(assert (= temp210_63 (select ARGNAME_output_padding_NAMEEND_VAL temp210_62)))
(assert (= temp210_64 #x0000000000000005))
(assert (= temp210_65 temp210_64))
(assert (= temp210_66 (select ARGNAME_output_padding_NAMEEND_VAL temp210_65)))
(assert (= temp210_67 #x0000000000000000))
(assert (= temp210_68 #x0000000000000000))
(assert (= temp210_69 temp210_68))
(assert (= temp210_70 (select ARGNAME_output_padding_NAMEEND_VAL temp210_69)))
(assert (= temp210_71 #x0000000000000000))
(assert (= temp210_72 #x0000000000000001))
(assert (= temp210_73 temp210_72))
(assert (= temp210_74 (select ARGNAME_output_padding_NAMEEND_VAL temp210_73)))
(assert (= temp210_75 #x0000000000000000))
(assert (= temp210_76 #x0000000000000002))
(assert (= temp210_77 temp210_76))
(assert (= temp210_78 (select ARGNAME_output_padding_NAMEEND_VAL temp210_77)))
(assert (= temp210_79 #x0000000000000000))
(assert (= temp210_80 #x0000000000000003))
(assert (= temp210_81 temp210_80))
(assert (= temp210_82 (select ARGNAME_output_padding_NAMEEND_VAL temp210_81)))
(assert (= temp210_83 #x0000000000000000))
(assert (= temp210_84 #x0000000000000004))
(assert (= temp210_85 temp210_84))
(assert (= temp210_86 (select ARGNAME_output_padding_NAMEEND_VAL temp210_85)))
(assert (= temp210_87 #x0000000000000000))
(assert (= temp210_88 #x0000000000000005))
(assert (= temp210_89 temp210_88))
(assert (= temp210_90 (select ARGNAME_output_padding_NAMEEND_VAL temp210_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp210_70 temp210_67)
             (bvslt temp210_74 temp210_71)
             (bvslt temp210_78 temp210_75)
             (bvslt temp210_82 temp210_79)
             (bvslt temp210_86 temp210_83)
             (bvslt temp210_90 temp210_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_91 #x0000000000000000))
(assert (= var1322797 temp210_91))
(assert (= temp210_92 #x0000000000000000))
(assert (= temp210_93 temp210_92))
(assert (= temp210_94 (select ARGNAME_stride_NAMEEND_VAL temp210_93)))
(assert (= temp210_95 #x0000000000000001))
(assert (= temp210_96 temp210_95))
(assert (= temp210_97 (select ARGNAME_stride_NAMEEND_VAL temp210_96)))
(assert (= temp210_98 #x0000000000000002))
(assert (= temp210_99 temp210_98))
(assert (= temp210_100 (select ARGNAME_stride_NAMEEND_VAL temp210_99)))
(assert (= temp210_101 #x0000000000000003))
(assert (= temp210_102 temp210_101))
(assert (= temp210_103 (select ARGNAME_stride_NAMEEND_VAL temp210_102)))
(assert (= temp210_104 #x0000000000000004))
(assert (= temp210_105 temp210_104))
(assert (= temp210_106 (select ARGNAME_stride_NAMEEND_VAL temp210_105)))
(assert (= temp210_107 #x0000000000000005))
(assert (= temp210_108 temp210_107))
(assert (= temp210_109 (select ARGNAME_stride_NAMEEND_VAL temp210_108)))
(assert (= temp210_110 #x0000000000000000))
(assert (= temp210_111 #x0000000000000000))
(assert (= temp210_112 temp210_111))
(assert (= temp210_113 (select ARGNAME_stride_NAMEEND_VAL temp210_112)))
(assert (= temp210_114 #x0000000000000000))
(assert (= temp210_115 #x0000000000000001))
(assert (= temp210_116 temp210_115))
(assert (= temp210_117 (select ARGNAME_stride_NAMEEND_VAL temp210_116)))
(assert (= temp210_118 #x0000000000000000))
(assert (= temp210_119 #x0000000000000002))
(assert (= temp210_120 temp210_119))
(assert (= temp210_121 (select ARGNAME_stride_NAMEEND_VAL temp210_120)))
(assert (= temp210_122 #x0000000000000000))
(assert (= temp210_123 #x0000000000000003))
(assert (= temp210_124 temp210_123))
(assert (= temp210_125 (select ARGNAME_stride_NAMEEND_VAL temp210_124)))
(assert (= temp210_126 #x0000000000000000))
(assert (= temp210_127 #x0000000000000004))
(assert (= temp210_128 temp210_127))
(assert (= temp210_129 (select ARGNAME_stride_NAMEEND_VAL temp210_128)))
(assert (= temp210_130 #x0000000000000000))
(assert (= temp210_131 #x0000000000000005))
(assert (= temp210_132 temp210_131))
(assert (= temp210_133 (select ARGNAME_stride_NAMEEND_VAL temp210_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp210_113 temp210_110)
             (bvsle temp210_117 temp210_114)
             (bvsle temp210_121 temp210_118)
             (bvsle temp210_125 temp210_122)
             (bvsle temp210_129 temp210_126)
             (bvsle temp210_133 temp210_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_134 #x0000000000000000))
(assert (= var1322807 temp210_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_135 #x0000000000000001))
(assert (= var1322819 temp210_135))
(assert (= temp210_136 #x0000000000000000))
(assert (= var1310898 temp210_136))
(assert (= temp210_137 #x0000000000000000))
(assert (= temp210_138 temp210_137))
(assert (= temp210_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_138)))
(assert (= temp210_140 #x0000000000000001))
(assert (= temp210_141 temp210_140))
(assert (= temp210_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_141)))
(assert (= temp210_143 #x0000000000000002))
(assert (= temp210_144 temp210_143))
(assert (= temp210_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_144)))
(assert (= temp210_146 #x0000000000000003))
(assert (= temp210_147 temp210_146))
(assert (= temp210_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_147)))
(assert (= temp210_149 #x0000000000000004))
(assert (= temp210_150 temp210_149))
(assert (= temp210_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_150)))
(assert (= temp210_152 #x0000000000000005))
(assert (= temp210_153 temp210_152))
(assert (= temp210_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_153)))
(assert (= temp210_156 var1310898))
(assert (= temp210_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_156)))
(assert (= temp210_155 temp210_157))
(assert (= var1322852
   (ite (bvslt temp210_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_158 #x0000000000000000))
(assert (= var1322852 temp210_158))
(assert (= temp210_159 #x0000000000000000))
(assert (= var1310898 temp210_159))
(assert (= temp210_161 var1310898))
(assert (= temp210_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_161)))
(assert (= temp210_160 temp210_162))
(assert (= var1322874 (bvsmod temp210_160 ARGNAME_groups_NAMEEND)))
(assert (= temp210_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp210_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp210_164 #x0000000000000001))
(assert (= var1322875 temp210_164))
(assert (= temp210_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp210_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_166 #x0000000000000001))
(assert (= var1322895 temp210_166))
(assert (= temp210_167 #x0000000000000001))
(assert (= var1311786 temp210_167))
(assert (= temp210_168 #x0000000000000000))
(assert (= temp210_169 temp210_168))
(assert (= temp210_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp210_169)))
(assert (= temp210_171 #x0000000000000001))
(assert (= temp210_172 temp210_171))
(assert (= temp210_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp210_172)))
(assert (= temp210_174 #x0000000000000002))
(assert (= temp210_175 temp210_174))
(assert (= temp210_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp210_175)))
(assert (= temp210_177 #x0000000000000003))
(assert (= temp210_178 temp210_177))
(assert (= temp210_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp210_178)))
(assert (= temp210_180 #x0000000000000004))
(assert (= temp210_181 temp210_180))
(assert (= temp210_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp210_181)))
(assert (= temp210_183 #x0000000000000005))
(assert (= temp210_184 temp210_183))
(assert (= temp210_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp210_184)))
(assert (= temp210_186 #x0000000000000000))
(assert (= temp210_187
   (ite (bvslt var1311786 temp210_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp210_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp210_187)))
(assert (= var1322903 temp210_188))
(assert (bvslt (ite (bvslt var1311786 temp210_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp210_189 #x0000000000000001))
(assert (= var1311786 temp210_189))
(assert (= temp210_191 var1311786))
(assert (= temp210_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_191)))
(assert (= temp210_190 temp210_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp210_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp210_193 #x0000000000000001))
(assert (= var1322908 temp210_193))
(assert (= temp210_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp210_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_195 #x0000000000000001))
(assert (= var1322975 temp210_195))
(assert (= temp210_196 #x0000000000000000))
(assert (= var1310898 temp210_196))
(assert (= temp210_197 #x0000000000000000))
(assert (= temp210_198 temp210_197))
(assert (= temp210_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp210_198)))
(assert (= temp210_200 #x0000000000000001))
(assert (= temp210_201 temp210_200))
(assert (= temp210_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp210_201)))
(assert (= temp210_203 #x0000000000000002))
(assert (= temp210_204 temp210_203))
(assert (= temp210_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp210_204)))
(assert (= temp210_206 #x0000000000000003))
(assert (= temp210_207 temp210_206))
(assert (= temp210_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp210_207)))
(assert (= temp210_209 #x0000000000000004))
(assert (= temp210_210 temp210_209))
(assert (= temp210_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp210_210)))
(assert (= temp210_212 #x0000000000000005))
(assert (= temp210_213 temp210_212))
(assert (= temp210_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp210_213)))
(assert (= temp210_215 #x0000000000000000))
(assert (= temp210_216
   (ite (bvslt var1310898 temp210_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp210_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp210_216)))
(assert (= var1322977 temp210_217))
(assert (bvslt (ite (bvslt var1310898 temp210_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp210_218 #x0000000000000000))
(assert (= var1310898 temp210_218))
(assert (= temp210_220 var1310898))
(assert (= temp210_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp210_220)))
(assert (= temp210_219 temp210_221))
(assert (= var1322980
   (ite (= var1322977 temp210_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp210_222 #x0000000000000001))
(assert (= var1322980 temp210_222))
(assert (= temp210_223 #x0000000000000002))
(assert (= var1848169 temp210_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp210_225 #x0000000000000001))
(assert (= var1323065 temp210_225))
(assert (= temp210_226 #x0000000000000001))
(assert (= var3486735 temp210_226))
(assert (= temp210_227 #x0000000000000001))
(assert (= var3814415 temp210_227))
(assert (= temp210_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp210_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_229 #x0000000000000001))
(assert (= var79986 temp210_229))
(assert (= temp210_230 #x0000000000000001))
(assert (= var80116 temp210_230))
(assert (= var4796905 var80116))
(assert (= temp210_231 #x0000000000000000))
(assert (= var4784306 temp210_231))
(assert (= temp210_232 #x0000000000000000))
(assert (= temp210_233
   (ite (bvslt var4784306 temp210_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp210_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp210_233)))
(assert (= var4796924 temp210_234))
(assert (bvslt (ite (bvslt var4784306 temp210_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp210_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp210_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp210_236 #x0000000000000001))
(assert (= var4796925 temp210_236))
(assert (= temp210_237 #x0000000000000000))
(assert (= var4996927 temp210_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp210_238 #x0000000000000002))
(assert (= var5125763 temp210_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp210_239 #x0000000000000000))
(assert (= var5191324 temp210_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp210_241 #xffffffffffffffff))
(assert (= temp210_240 temp210_241))
(assert (= temp210_242 #x0000000000000001))
(assert (= var66602 temp210_242))
(assert (= temp210_243 #x0000000000000000))
(assert (= temp210_244
   (ite (bvslt var66602 temp210_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp210_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp210_244)))
(assert (= var80523 temp210_245))
(assert (bvslt (ite (bvslt var66602 temp210_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp210_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp210_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp210_247 #x0000000000000000))
(assert (= var80524 temp210_247))
(assert (= temp210_248 #x0000000000000001))
(assert (= var79986 temp210_248))
(model-add temp210_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp210_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp210_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






