(declare-fun temp650_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp650_2 () (_ BitVec 64))
(declare-fun temp650_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp650_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp650_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp650_6 () (_ BitVec 64))
(declare-fun temp650_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp650_8 () (_ BitVec 64))
(declare-fun temp650_9 () (_ BitVec 64))
(declare-fun temp650_10 () (_ BitVec 64))
(declare-fun temp650_11 () (_ BitVec 64))
(declare-fun temp650_12 () (_ BitVec 64))
(declare-fun temp650_13 () (_ BitVec 64))
(declare-fun temp650_14 () (_ BitVec 64))
(declare-fun temp650_15 () (_ BitVec 64))
(declare-fun temp650_16 () (_ BitVec 64))
(declare-fun temp650_17 () (_ BitVec 64))
(declare-fun temp650_18 () (_ BitVec 64))
(declare-fun temp650_19 () (_ BitVec 64))
(declare-fun temp650_20 () (_ BitVec 64))
(declare-fun temp650_21 () (_ BitVec 64))
(declare-fun temp650_22 () (_ BitVec 64))
(declare-fun temp650_23 () (_ BitVec 64))
(declare-fun temp650_24 () (_ BitVec 64))
(declare-fun temp650_25 () (_ BitVec 64))
(declare-fun temp650_26 () (_ BitVec 64))
(declare-fun temp650_27 () (_ BitVec 64))
(declare-fun temp650_28 () (_ BitVec 64))
(declare-fun temp650_29 () (_ BitVec 64))
(declare-fun temp650_30 () (_ BitVec 64))
(declare-fun temp650_31 () (_ BitVec 64))
(declare-fun temp650_32 () (_ BitVec 64))
(declare-fun temp650_33 () (_ BitVec 64))
(declare-fun temp650_34 () (_ BitVec 64))
(declare-fun temp650_35 () (_ BitVec 64))
(declare-fun temp650_36 () (_ BitVec 64))
(declare-fun temp650_37 () (_ BitVec 64))
(declare-fun temp650_38 () (_ BitVec 64))
(declare-fun temp650_39 () (_ BitVec 64))
(declare-fun temp650_40 () (_ BitVec 64))
(declare-fun temp650_41 () (_ BitVec 64))
(declare-fun temp650_42 () (_ BitVec 64))
(declare-fun temp650_43 () (_ BitVec 64))
(declare-fun temp650_44 () (_ BitVec 64))
(declare-fun temp650_45 () (_ BitVec 64))
(declare-fun temp650_46 () (_ BitVec 64))
(declare-fun temp650_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp650_48 () (_ BitVec 64))
(declare-fun temp650_49 () (_ BitVec 64))
(declare-fun temp650_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp650_51 () (_ BitVec 64))
(declare-fun temp650_52 () (_ BitVec 64))
(declare-fun temp650_53 () (_ BitVec 64))
(declare-fun temp650_54 () (_ BitVec 64))
(declare-fun temp650_55 () (_ BitVec 64))
(declare-fun temp650_56 () (_ BitVec 64))
(declare-fun temp650_57 () (_ BitVec 64))
(declare-fun temp650_58 () (_ BitVec 64))
(declare-fun temp650_59 () (_ BitVec 64))
(declare-fun temp650_60 () (_ BitVec 64))
(declare-fun temp650_61 () (_ BitVec 64))
(declare-fun temp650_62 () (_ BitVec 64))
(declare-fun temp650_63 () (_ BitVec 64))
(declare-fun temp650_64 () (_ BitVec 64))
(declare-fun temp650_65 () (_ BitVec 64))
(declare-fun temp650_66 () (_ BitVec 64))
(declare-fun temp650_67 () (_ BitVec 64))
(declare-fun temp650_68 () (_ BitVec 64))
(declare-fun temp650_69 () (_ BitVec 64))
(declare-fun temp650_70 () (_ BitVec 64))
(declare-fun temp650_71 () (_ BitVec 64))
(declare-fun temp650_72 () (_ BitVec 64))
(declare-fun temp650_73 () (_ BitVec 64))
(declare-fun temp650_74 () (_ BitVec 64))
(declare-fun temp650_75 () (_ BitVec 64))
(declare-fun temp650_76 () (_ BitVec 64))
(declare-fun temp650_77 () (_ BitVec 64))
(declare-fun temp650_78 () (_ BitVec 64))
(declare-fun temp650_79 () (_ BitVec 64))
(declare-fun temp650_80 () (_ BitVec 64))
(declare-fun temp650_81 () (_ BitVec 64))
(declare-fun temp650_82 () (_ BitVec 64))
(declare-fun temp650_83 () (_ BitVec 64))
(declare-fun temp650_84 () (_ BitVec 64))
(declare-fun temp650_85 () (_ BitVec 64))
(declare-fun temp650_86 () (_ BitVec 64))
(declare-fun temp650_87 () (_ BitVec 64))
(declare-fun temp650_88 () (_ BitVec 64))
(declare-fun temp650_89 () (_ BitVec 64))
(declare-fun temp650_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp650_91 () (_ BitVec 64))
(declare-fun temp650_92 () (_ BitVec 64))
(declare-fun temp650_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp650_94 () (_ BitVec 64))
(declare-fun temp650_95 () (_ BitVec 64))
(declare-fun temp650_96 () (_ BitVec 64))
(declare-fun temp650_97 () (_ BitVec 64))
(declare-fun temp650_98 () (_ BitVec 64))
(declare-fun temp650_99 () (_ BitVec 64))
(declare-fun temp650_100 () (_ BitVec 64))
(declare-fun temp650_101 () (_ BitVec 64))
(declare-fun temp650_102 () (_ BitVec 64))
(declare-fun temp650_103 () (_ BitVec 64))
(declare-fun temp650_104 () (_ BitVec 64))
(declare-fun temp650_105 () (_ BitVec 64))
(declare-fun temp650_106 () (_ BitVec 64))
(declare-fun temp650_107 () (_ BitVec 64))
(declare-fun temp650_108 () (_ BitVec 64))
(declare-fun temp650_109 () (_ BitVec 64))
(declare-fun temp650_110 () (_ BitVec 64))
(declare-fun temp650_111 () (_ BitVec 64))
(declare-fun temp650_112 () (_ BitVec 64))
(declare-fun temp650_113 () (_ BitVec 64))
(declare-fun temp650_114 () (_ BitVec 64))
(declare-fun temp650_115 () (_ BitVec 64))
(declare-fun temp650_116 () (_ BitVec 64))
(declare-fun temp650_117 () (_ BitVec 64))
(declare-fun temp650_118 () (_ BitVec 64))
(declare-fun temp650_119 () (_ BitVec 64))
(declare-fun temp650_120 () (_ BitVec 64))
(declare-fun temp650_121 () (_ BitVec 64))
(declare-fun temp650_122 () (_ BitVec 64))
(declare-fun temp650_123 () (_ BitVec 64))
(declare-fun temp650_124 () (_ BitVec 64))
(declare-fun temp650_125 () (_ BitVec 64))
(declare-fun temp650_126 () (_ BitVec 64))
(declare-fun temp650_127 () (_ BitVec 64))
(declare-fun temp650_128 () (_ BitVec 64))
(declare-fun temp650_129 () (_ BitVec 64))
(declare-fun temp650_130 () (_ BitVec 64))
(declare-fun temp650_131 () (_ BitVec 64))
(declare-fun temp650_132 () (_ BitVec 64))
(declare-fun temp650_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp650_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp650_135 () (_ BitVec 64))
(declare-fun temp650_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp650_137 () (_ BitVec 64))
(declare-fun temp650_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp650_139 () (_ BitVec 64))
(declare-fun temp650_140 () (_ BitVec 64))
(declare-fun temp650_141 () (_ BitVec 64))
(declare-fun temp650_142 () (_ BitVec 64))
(declare-fun temp650_143 () (_ BitVec 64))
(declare-fun temp650_144 () (_ BitVec 64))
(declare-fun temp650_145 () (_ BitVec 64))
(declare-fun temp650_146 () (_ BitVec 64))
(declare-fun temp650_147 () (_ BitVec 64))
(declare-fun temp650_148 () (_ BitVec 64))
(declare-fun temp650_149 () (_ BitVec 64))
(declare-fun temp650_150 () (_ BitVec 64))
(declare-fun temp650_151 () (_ BitVec 64))
(declare-fun temp650_152 () (_ BitVec 64))
(declare-fun temp650_153 () (_ BitVec 64))
(declare-fun temp650_154 () (_ BitVec 64))
(declare-fun temp650_156 () (_ BitVec 64))
(declare-fun temp650_157 () (_ BitVec 64))
(declare-fun temp650_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp650_158 () (_ BitVec 64))
(declare-fun temp650_159 () (_ BitVec 64))
(declare-fun temp650_161 () (_ BitVec 64))
(declare-fun temp650_162 () (_ BitVec 64))
(declare-fun temp650_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp650_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp650_164 () (_ BitVec 64))
(declare-fun temp650_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp650_166 () (_ BitVec 64))
(declare-fun temp650_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp650_168 () (_ BitVec 64))
(declare-fun temp650_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp650_170 () (_ BitVec 64))
(declare-fun temp650_171 () (_ BitVec 64))
(declare-fun temp650_172 () (_ BitVec 64))
(declare-fun temp650_173 () (_ BitVec 64))
(declare-fun temp650_174 () (_ BitVec 64))
(declare-fun temp650_175 () (_ BitVec 64))
(declare-fun temp650_176 () (_ BitVec 64))
(declare-fun temp650_177 () (_ BitVec 64))
(declare-fun temp650_178 () (_ BitVec 64))
(declare-fun temp650_179 () (_ BitVec 64))
(declare-fun temp650_180 () (_ BitVec 64))
(declare-fun temp650_181 () (_ BitVec 64))
(declare-fun temp650_182 () (_ BitVec 64))
(declare-fun temp650_183 () (_ BitVec 64))
(declare-fun temp650_184 () (_ BitVec 64))
(declare-fun temp650_185 () (_ BitVec 64))
(declare-fun temp650_186 () (_ BitVec 64))
(declare-fun temp650_187 () (_ BitVec 64))
(declare-fun temp650_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp650_189 () (_ BitVec 64))
(declare-fun temp650_191 () (_ BitVec 64))
(declare-fun temp650_192 () (_ BitVec 64))
(declare-fun temp650_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp650_193 () (_ BitVec 64))
(declare-fun temp650_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp650_195 () (_ BitVec 64))
(declare-fun temp650_196 () (_ BitVec 64))
(declare-fun temp650_197 () (_ BitVec 64))
(declare-fun temp650_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp650_199 () (_ BitVec 64))
(declare-fun temp650_200 () (_ BitVec 64))
(declare-fun temp650_201 () (_ BitVec 64))
(declare-fun temp650_202 () (_ BitVec 64))
(declare-fun temp650_203 () (_ BitVec 64))
(declare-fun temp650_204 () (_ BitVec 64))
(declare-fun temp650_205 () (_ BitVec 64))
(declare-fun temp650_206 () (_ BitVec 64))
(declare-fun temp650_207 () (_ BitVec 64))
(declare-fun temp650_208 () (_ BitVec 64))
(declare-fun temp650_209 () (_ BitVec 64))
(declare-fun temp650_210 () (_ BitVec 64))
(declare-fun temp650_211 () (_ BitVec 64))
(declare-fun temp650_212 () (_ BitVec 64))
(declare-fun temp650_213 () (_ BitVec 64))
(declare-fun temp650_214 () (_ BitVec 64))
(declare-fun temp650_215 () (_ BitVec 64))
(declare-fun temp650_216 () (_ BitVec 64))
(declare-fun temp650_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp650_218 () (_ BitVec 64))
(declare-fun temp650_220 () (_ BitVec 64))
(declare-fun temp650_221 () (_ BitVec 64))
(declare-fun temp650_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp650_222 () (_ BitVec 64))
(declare-fun temp650_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp650_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp650_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp650_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp650_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp650_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp650_229 () (_ BitVec 64))
(declare-fun temp650_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp650_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp650_232 () (_ BitVec 64))
(declare-fun temp650_233 () (_ BitVec 64))
(declare-fun temp650_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp650_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp650_236 () (_ BitVec 64))
(declare-fun temp650_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp650_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp650_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp650_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp650_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp650_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp650_243 () (_ BitVec 64))
(declare-fun temp650_244 () (_ BitVec 64))
(declare-fun var7549716 () (_ BitVec 64))
(declare-fun var7549683 () (_ BitVec 64))
(declare-fun var7418247 () (_ BitVec 64))
(declare-fun var7418243 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp650_245 () (_ BitVec 64))
(assert (= temp650_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp650_1)))
(assert (= temp650_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp650_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_3 #x0000000000000000))
(assert (= var79869 temp650_3))
(assert (= temp650_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp650_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_5 #x0000000000000000))
(assert (= var79914 temp650_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp650_6 #x0000000000000000))
(assert (= temp650_7 temp650_6))
(assert (= temp650_8 (select ARGNAME_padding_NAMEEND_VAL temp650_7)))
(assert (= temp650_9 #x0000000000000001))
(assert (= temp650_10 temp650_9))
(assert (= temp650_11 (select ARGNAME_padding_NAMEEND_VAL temp650_10)))
(assert (= temp650_12 #x0000000000000002))
(assert (= temp650_13 temp650_12))
(assert (= temp650_14 (select ARGNAME_padding_NAMEEND_VAL temp650_13)))
(assert (= temp650_15 #x0000000000000003))
(assert (= temp650_16 temp650_15))
(assert (= temp650_17 (select ARGNAME_padding_NAMEEND_VAL temp650_16)))
(assert (= temp650_18 #x0000000000000004))
(assert (= temp650_19 temp650_18))
(assert (= temp650_20 (select ARGNAME_padding_NAMEEND_VAL temp650_19)))
(assert (= temp650_21 #x0000000000000005))
(assert (= temp650_22 temp650_21))
(assert (= temp650_23 (select ARGNAME_padding_NAMEEND_VAL temp650_22)))
(assert (= temp650_24 #x0000000000000000))
(assert (= temp650_25 #x0000000000000000))
(assert (= temp650_26 temp650_25))
(assert (= temp650_27 (select ARGNAME_padding_NAMEEND_VAL temp650_26)))
(assert (= temp650_28 #x0000000000000000))
(assert (= temp650_29 #x0000000000000001))
(assert (= temp650_30 temp650_29))
(assert (= temp650_31 (select ARGNAME_padding_NAMEEND_VAL temp650_30)))
(assert (= temp650_32 #x0000000000000000))
(assert (= temp650_33 #x0000000000000002))
(assert (= temp650_34 temp650_33))
(assert (= temp650_35 (select ARGNAME_padding_NAMEEND_VAL temp650_34)))
(assert (= temp650_36 #x0000000000000000))
(assert (= temp650_37 #x0000000000000003))
(assert (= temp650_38 temp650_37))
(assert (= temp650_39 (select ARGNAME_padding_NAMEEND_VAL temp650_38)))
(assert (= temp650_40 #x0000000000000000))
(assert (= temp650_41 #x0000000000000004))
(assert (= temp650_42 temp650_41))
(assert (= temp650_43 (select ARGNAME_padding_NAMEEND_VAL temp650_42)))
(assert (= temp650_44 #x0000000000000000))
(assert (= temp650_45 #x0000000000000005))
(assert (= temp650_46 temp650_45))
(assert (= temp650_47 (select ARGNAME_padding_NAMEEND_VAL temp650_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp650_27 temp650_24)
             (bvslt temp650_31 temp650_28)
             (bvslt temp650_35 temp650_32)
             (bvslt temp650_39 temp650_36)
             (bvslt temp650_43 temp650_40)
             (bvslt temp650_47 temp650_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_48 #x0000000000000000))
(assert (= var1322786 temp650_48))
(assert (= temp650_49 #x0000000000000000))
(assert (= temp650_50 temp650_49))
(assert (= temp650_51 (select ARGNAME_output_padding_NAMEEND_VAL temp650_50)))
(assert (= temp650_52 #x0000000000000001))
(assert (= temp650_53 temp650_52))
(assert (= temp650_54 (select ARGNAME_output_padding_NAMEEND_VAL temp650_53)))
(assert (= temp650_55 #x0000000000000002))
(assert (= temp650_56 temp650_55))
(assert (= temp650_57 (select ARGNAME_output_padding_NAMEEND_VAL temp650_56)))
(assert (= temp650_58 #x0000000000000003))
(assert (= temp650_59 temp650_58))
(assert (= temp650_60 (select ARGNAME_output_padding_NAMEEND_VAL temp650_59)))
(assert (= temp650_61 #x0000000000000004))
(assert (= temp650_62 temp650_61))
(assert (= temp650_63 (select ARGNAME_output_padding_NAMEEND_VAL temp650_62)))
(assert (= temp650_64 #x0000000000000005))
(assert (= temp650_65 temp650_64))
(assert (= temp650_66 (select ARGNAME_output_padding_NAMEEND_VAL temp650_65)))
(assert (= temp650_67 #x0000000000000000))
(assert (= temp650_68 #x0000000000000000))
(assert (= temp650_69 temp650_68))
(assert (= temp650_70 (select ARGNAME_output_padding_NAMEEND_VAL temp650_69)))
(assert (= temp650_71 #x0000000000000000))
(assert (= temp650_72 #x0000000000000001))
(assert (= temp650_73 temp650_72))
(assert (= temp650_74 (select ARGNAME_output_padding_NAMEEND_VAL temp650_73)))
(assert (= temp650_75 #x0000000000000000))
(assert (= temp650_76 #x0000000000000002))
(assert (= temp650_77 temp650_76))
(assert (= temp650_78 (select ARGNAME_output_padding_NAMEEND_VAL temp650_77)))
(assert (= temp650_79 #x0000000000000000))
(assert (= temp650_80 #x0000000000000003))
(assert (= temp650_81 temp650_80))
(assert (= temp650_82 (select ARGNAME_output_padding_NAMEEND_VAL temp650_81)))
(assert (= temp650_83 #x0000000000000000))
(assert (= temp650_84 #x0000000000000004))
(assert (= temp650_85 temp650_84))
(assert (= temp650_86 (select ARGNAME_output_padding_NAMEEND_VAL temp650_85)))
(assert (= temp650_87 #x0000000000000000))
(assert (= temp650_88 #x0000000000000005))
(assert (= temp650_89 temp650_88))
(assert (= temp650_90 (select ARGNAME_output_padding_NAMEEND_VAL temp650_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp650_70 temp650_67)
             (bvslt temp650_74 temp650_71)
             (bvslt temp650_78 temp650_75)
             (bvslt temp650_82 temp650_79)
             (bvslt temp650_86 temp650_83)
             (bvslt temp650_90 temp650_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_91 #x0000000000000000))
(assert (= var1322797 temp650_91))
(assert (= temp650_92 #x0000000000000000))
(assert (= temp650_93 temp650_92))
(assert (= temp650_94 (select ARGNAME_stride_NAMEEND_VAL temp650_93)))
(assert (= temp650_95 #x0000000000000001))
(assert (= temp650_96 temp650_95))
(assert (= temp650_97 (select ARGNAME_stride_NAMEEND_VAL temp650_96)))
(assert (= temp650_98 #x0000000000000002))
(assert (= temp650_99 temp650_98))
(assert (= temp650_100 (select ARGNAME_stride_NAMEEND_VAL temp650_99)))
(assert (= temp650_101 #x0000000000000003))
(assert (= temp650_102 temp650_101))
(assert (= temp650_103 (select ARGNAME_stride_NAMEEND_VAL temp650_102)))
(assert (= temp650_104 #x0000000000000004))
(assert (= temp650_105 temp650_104))
(assert (= temp650_106 (select ARGNAME_stride_NAMEEND_VAL temp650_105)))
(assert (= temp650_107 #x0000000000000005))
(assert (= temp650_108 temp650_107))
(assert (= temp650_109 (select ARGNAME_stride_NAMEEND_VAL temp650_108)))
(assert (= temp650_110 #x0000000000000000))
(assert (= temp650_111 #x0000000000000000))
(assert (= temp650_112 temp650_111))
(assert (= temp650_113 (select ARGNAME_stride_NAMEEND_VAL temp650_112)))
(assert (= temp650_114 #x0000000000000000))
(assert (= temp650_115 #x0000000000000001))
(assert (= temp650_116 temp650_115))
(assert (= temp650_117 (select ARGNAME_stride_NAMEEND_VAL temp650_116)))
(assert (= temp650_118 #x0000000000000000))
(assert (= temp650_119 #x0000000000000002))
(assert (= temp650_120 temp650_119))
(assert (= temp650_121 (select ARGNAME_stride_NAMEEND_VAL temp650_120)))
(assert (= temp650_122 #x0000000000000000))
(assert (= temp650_123 #x0000000000000003))
(assert (= temp650_124 temp650_123))
(assert (= temp650_125 (select ARGNAME_stride_NAMEEND_VAL temp650_124)))
(assert (= temp650_126 #x0000000000000000))
(assert (= temp650_127 #x0000000000000004))
(assert (= temp650_128 temp650_127))
(assert (= temp650_129 (select ARGNAME_stride_NAMEEND_VAL temp650_128)))
(assert (= temp650_130 #x0000000000000000))
(assert (= temp650_131 #x0000000000000005))
(assert (= temp650_132 temp650_131))
(assert (= temp650_133 (select ARGNAME_stride_NAMEEND_VAL temp650_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp650_113 temp650_110)
             (bvsle temp650_117 temp650_114)
             (bvsle temp650_121 temp650_118)
             (bvsle temp650_125 temp650_122)
             (bvsle temp650_129 temp650_126)
             (bvsle temp650_133 temp650_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_134 #x0000000000000000))
(assert (= var1322807 temp650_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_135 #x0000000000000001))
(assert (= var1322819 temp650_135))
(assert (= temp650_136 #x0000000000000000))
(assert (= var1310898 temp650_136))
(assert (= temp650_137 #x0000000000000000))
(assert (= temp650_138 temp650_137))
(assert (= temp650_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_138)))
(assert (= temp650_140 #x0000000000000001))
(assert (= temp650_141 temp650_140))
(assert (= temp650_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_141)))
(assert (= temp650_143 #x0000000000000002))
(assert (= temp650_144 temp650_143))
(assert (= temp650_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_144)))
(assert (= temp650_146 #x0000000000000003))
(assert (= temp650_147 temp650_146))
(assert (= temp650_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_147)))
(assert (= temp650_149 #x0000000000000004))
(assert (= temp650_150 temp650_149))
(assert (= temp650_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_150)))
(assert (= temp650_152 #x0000000000000005))
(assert (= temp650_153 temp650_152))
(assert (= temp650_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_153)))
(assert (= temp650_156 var1310898))
(assert (= temp650_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_156)))
(assert (= temp650_155 temp650_157))
(assert (= var1322852
   (ite (bvslt temp650_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_158 #x0000000000000000))
(assert (= var1322852 temp650_158))
(assert (= temp650_159 #x0000000000000000))
(assert (= var1310898 temp650_159))
(assert (= temp650_161 var1310898))
(assert (= temp650_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_161)))
(assert (= temp650_160 temp650_162))
(assert (= var1322874 (bvsmod temp650_160 ARGNAME_groups_NAMEEND)))
(assert (= temp650_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp650_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp650_164 #x0000000000000001))
(assert (= var1322875 temp650_164))
(assert (= temp650_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp650_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_166 #x0000000000000001))
(assert (= var1322895 temp650_166))
(assert (= temp650_167 #x0000000000000001))
(assert (= var1311786 temp650_167))
(assert (= temp650_168 #x0000000000000000))
(assert (= temp650_169 temp650_168))
(assert (= temp650_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp650_169)))
(assert (= temp650_171 #x0000000000000001))
(assert (= temp650_172 temp650_171))
(assert (= temp650_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp650_172)))
(assert (= temp650_174 #x0000000000000002))
(assert (= temp650_175 temp650_174))
(assert (= temp650_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp650_175)))
(assert (= temp650_177 #x0000000000000003))
(assert (= temp650_178 temp650_177))
(assert (= temp650_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp650_178)))
(assert (= temp650_180 #x0000000000000004))
(assert (= temp650_181 temp650_180))
(assert (= temp650_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp650_181)))
(assert (= temp650_183 #x0000000000000005))
(assert (= temp650_184 temp650_183))
(assert (= temp650_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp650_184)))
(assert (= temp650_186 #x0000000000000000))
(assert (= temp650_187
   (ite (bvslt var1311786 temp650_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp650_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp650_187)))
(assert (= var1322903 temp650_188))
(assert (bvslt (ite (bvslt var1311786 temp650_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp650_189 #x0000000000000001))
(assert (= var1311786 temp650_189))
(assert (= temp650_191 var1311786))
(assert (= temp650_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_191)))
(assert (= temp650_190 temp650_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp650_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp650_193 #x0000000000000001))
(assert (= var1322908 temp650_193))
(assert (= temp650_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp650_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_195 #x0000000000000001))
(assert (= var1322975 temp650_195))
(assert (= temp650_196 #x0000000000000000))
(assert (= var1310898 temp650_196))
(assert (= temp650_197 #x0000000000000000))
(assert (= temp650_198 temp650_197))
(assert (= temp650_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp650_198)))
(assert (= temp650_200 #x0000000000000001))
(assert (= temp650_201 temp650_200))
(assert (= temp650_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp650_201)))
(assert (= temp650_203 #x0000000000000002))
(assert (= temp650_204 temp650_203))
(assert (= temp650_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp650_204)))
(assert (= temp650_206 #x0000000000000003))
(assert (= temp650_207 temp650_206))
(assert (= temp650_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp650_207)))
(assert (= temp650_209 #x0000000000000004))
(assert (= temp650_210 temp650_209))
(assert (= temp650_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp650_210)))
(assert (= temp650_212 #x0000000000000005))
(assert (= temp650_213 temp650_212))
(assert (= temp650_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp650_213)))
(assert (= temp650_215 #x0000000000000000))
(assert (= temp650_216
   (ite (bvslt var1310898 temp650_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp650_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp650_216)))
(assert (= var1322977 temp650_217))
(assert (bvslt (ite (bvslt var1310898 temp650_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp650_218 #x0000000000000000))
(assert (= var1310898 temp650_218))
(assert (= temp650_220 var1310898))
(assert (= temp650_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp650_220)))
(assert (= temp650_219 temp650_221))
(assert (= var1322980
   (ite (= var1322977 temp650_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp650_222 #x0000000000000001))
(assert (= var1322980 temp650_222))
(assert (= temp650_223 #x0000000000000002))
(assert (= var1848169 temp650_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp650_225 #x0000000000000001))
(assert (= var1323065 temp650_225))
(assert (= temp650_226 #x0000000000000001))
(assert (= var3486735 temp650_226))
(assert (= temp650_227 #x0000000000000001))
(assert (= var3814415 temp650_227))
(assert (= temp650_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp650_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_229 #x0000000000000001))
(assert (= var79986 temp650_229))
(assert (= temp650_230 #x0000000000000001))
(assert (= var80116 temp650_230))
(assert (= var4796905 var80116))
(assert (= temp650_231 #x0000000000000000))
(assert (= var4784306 temp650_231))
(assert (= temp650_232 #x0000000000000000))
(assert (= temp650_233
   (ite (bvslt var4784306 temp650_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp650_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp650_233)))
(assert (= var4796924 temp650_234))
(assert (bvslt (ite (bvslt var4784306 temp650_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp650_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp650_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp650_236 #x0000000000000001))
(assert (= var4796925 temp650_236))
(assert (= temp650_237 #x0000000000000000))
(assert (= var4996927 temp650_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp650_238 #x0000000000000002))
(assert (= var5125763 temp650_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_239 #x0000000000000000))
(assert (= var5191324 temp650_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp650_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp650_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp650_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp650_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp650_243 #x0000000000000001))
(assert (= var79986 temp650_243))
(assert (= temp650_244 #x0000000000000000))
(assert (= var7549716 temp650_244))
(assert (= var7549683 var7549716))
(assert (= var7418247 var7549683))
(assert (= var7418243 var7418247))
(assert (= var81597 var7418243))
(assert (= temp650_245 #x0000000000000000))
(assert (= var81597 temp650_245))
(model-add temp650_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp650_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp650_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






