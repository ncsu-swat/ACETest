(declare-fun temp802_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp802_2 () (_ BitVec 64))
(declare-fun temp802_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp802_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp802_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp802_6 () (_ BitVec 64))
(declare-fun temp802_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_8 () (_ BitVec 64))
(declare-fun temp802_9 () (_ BitVec 64))
(declare-fun temp802_10 () (_ BitVec 64))
(declare-fun temp802_11 () (_ BitVec 64))
(declare-fun temp802_12 () (_ BitVec 64))
(declare-fun temp802_13 () (_ BitVec 64))
(declare-fun temp802_14 () (_ BitVec 64))
(declare-fun temp802_15 () (_ BitVec 64))
(declare-fun temp802_16 () (_ BitVec 64))
(declare-fun temp802_17 () (_ BitVec 64))
(declare-fun temp802_18 () (_ BitVec 64))
(declare-fun temp802_19 () (_ BitVec 64))
(declare-fun temp802_20 () (_ BitVec 64))
(declare-fun temp802_21 () (_ BitVec 64))
(declare-fun temp802_22 () (_ BitVec 64))
(declare-fun temp802_23 () (_ BitVec 64))
(declare-fun temp802_24 () (_ BitVec 64))
(declare-fun temp802_25 () (_ BitVec 64))
(declare-fun temp802_26 () (_ BitVec 64))
(declare-fun temp802_27 () (_ BitVec 64))
(declare-fun temp802_28 () (_ BitVec 64))
(declare-fun temp802_29 () (_ BitVec 64))
(declare-fun temp802_30 () (_ BitVec 64))
(declare-fun temp802_31 () (_ BitVec 64))
(declare-fun temp802_32 () (_ BitVec 64))
(declare-fun temp802_33 () (_ BitVec 64))
(declare-fun temp802_34 () (_ BitVec 64))
(declare-fun temp802_35 () (_ BitVec 64))
(declare-fun temp802_36 () (_ BitVec 64))
(declare-fun temp802_37 () (_ BitVec 64))
(declare-fun temp802_38 () (_ BitVec 64))
(declare-fun temp802_39 () (_ BitVec 64))
(declare-fun temp802_40 () (_ BitVec 64))
(declare-fun temp802_41 () (_ BitVec 64))
(declare-fun temp802_42 () (_ BitVec 64))
(declare-fun temp802_43 () (_ BitVec 64))
(declare-fun temp802_44 () (_ BitVec 64))
(declare-fun temp802_45 () (_ BitVec 64))
(declare-fun temp802_46 () (_ BitVec 64))
(declare-fun temp802_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp802_48 () (_ BitVec 64))
(declare-fun temp802_49 () (_ BitVec 64))
(declare-fun temp802_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_51 () (_ BitVec 64))
(declare-fun temp802_52 () (_ BitVec 64))
(declare-fun temp802_53 () (_ BitVec 64))
(declare-fun temp802_54 () (_ BitVec 64))
(declare-fun temp802_55 () (_ BitVec 64))
(declare-fun temp802_56 () (_ BitVec 64))
(declare-fun temp802_57 () (_ BitVec 64))
(declare-fun temp802_58 () (_ BitVec 64))
(declare-fun temp802_59 () (_ BitVec 64))
(declare-fun temp802_60 () (_ BitVec 64))
(declare-fun temp802_61 () (_ BitVec 64))
(declare-fun temp802_62 () (_ BitVec 64))
(declare-fun temp802_63 () (_ BitVec 64))
(declare-fun temp802_64 () (_ BitVec 64))
(declare-fun temp802_65 () (_ BitVec 64))
(declare-fun temp802_66 () (_ BitVec 64))
(declare-fun temp802_67 () (_ BitVec 64))
(declare-fun temp802_68 () (_ BitVec 64))
(declare-fun temp802_69 () (_ BitVec 64))
(declare-fun temp802_70 () (_ BitVec 64))
(declare-fun temp802_71 () (_ BitVec 64))
(declare-fun temp802_72 () (_ BitVec 64))
(declare-fun temp802_73 () (_ BitVec 64))
(declare-fun temp802_74 () (_ BitVec 64))
(declare-fun temp802_75 () (_ BitVec 64))
(declare-fun temp802_76 () (_ BitVec 64))
(declare-fun temp802_77 () (_ BitVec 64))
(declare-fun temp802_78 () (_ BitVec 64))
(declare-fun temp802_79 () (_ BitVec 64))
(declare-fun temp802_80 () (_ BitVec 64))
(declare-fun temp802_81 () (_ BitVec 64))
(declare-fun temp802_82 () (_ BitVec 64))
(declare-fun temp802_83 () (_ BitVec 64))
(declare-fun temp802_84 () (_ BitVec 64))
(declare-fun temp802_85 () (_ BitVec 64))
(declare-fun temp802_86 () (_ BitVec 64))
(declare-fun temp802_87 () (_ BitVec 64))
(declare-fun temp802_88 () (_ BitVec 64))
(declare-fun temp802_89 () (_ BitVec 64))
(declare-fun temp802_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp802_91 () (_ BitVec 64))
(declare-fun temp802_92 () (_ BitVec 64))
(declare-fun temp802_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_94 () (_ BitVec 64))
(declare-fun temp802_95 () (_ BitVec 64))
(declare-fun temp802_96 () (_ BitVec 64))
(declare-fun temp802_97 () (_ BitVec 64))
(declare-fun temp802_98 () (_ BitVec 64))
(declare-fun temp802_99 () (_ BitVec 64))
(declare-fun temp802_100 () (_ BitVec 64))
(declare-fun temp802_101 () (_ BitVec 64))
(declare-fun temp802_102 () (_ BitVec 64))
(declare-fun temp802_103 () (_ BitVec 64))
(declare-fun temp802_104 () (_ BitVec 64))
(declare-fun temp802_105 () (_ BitVec 64))
(declare-fun temp802_106 () (_ BitVec 64))
(declare-fun temp802_107 () (_ BitVec 64))
(declare-fun temp802_108 () (_ BitVec 64))
(declare-fun temp802_109 () (_ BitVec 64))
(declare-fun temp802_110 () (_ BitVec 64))
(declare-fun temp802_111 () (_ BitVec 64))
(declare-fun temp802_112 () (_ BitVec 64))
(declare-fun temp802_113 () (_ BitVec 64))
(declare-fun temp802_114 () (_ BitVec 64))
(declare-fun temp802_115 () (_ BitVec 64))
(declare-fun temp802_116 () (_ BitVec 64))
(declare-fun temp802_117 () (_ BitVec 64))
(declare-fun temp802_118 () (_ BitVec 64))
(declare-fun temp802_119 () (_ BitVec 64))
(declare-fun temp802_120 () (_ BitVec 64))
(declare-fun temp802_121 () (_ BitVec 64))
(declare-fun temp802_122 () (_ BitVec 64))
(declare-fun temp802_123 () (_ BitVec 64))
(declare-fun temp802_124 () (_ BitVec 64))
(declare-fun temp802_125 () (_ BitVec 64))
(declare-fun temp802_126 () (_ BitVec 64))
(declare-fun temp802_127 () (_ BitVec 64))
(declare-fun temp802_128 () (_ BitVec 64))
(declare-fun temp802_129 () (_ BitVec 64))
(declare-fun temp802_130 () (_ BitVec 64))
(declare-fun temp802_131 () (_ BitVec 64))
(declare-fun temp802_132 () (_ BitVec 64))
(declare-fun temp802_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp802_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp802_135 () (_ BitVec 64))
(declare-fun temp802_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp802_137 () (_ BitVec 64))
(declare-fun temp802_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_139 () (_ BitVec 64))
(declare-fun temp802_140 () (_ BitVec 64))
(declare-fun temp802_141 () (_ BitVec 64))
(declare-fun temp802_142 () (_ BitVec 64))
(declare-fun temp802_143 () (_ BitVec 64))
(declare-fun temp802_144 () (_ BitVec 64))
(declare-fun temp802_145 () (_ BitVec 64))
(declare-fun temp802_146 () (_ BitVec 64))
(declare-fun temp802_147 () (_ BitVec 64))
(declare-fun temp802_148 () (_ BitVec 64))
(declare-fun temp802_149 () (_ BitVec 64))
(declare-fun temp802_150 () (_ BitVec 64))
(declare-fun temp802_151 () (_ BitVec 64))
(declare-fun temp802_152 () (_ BitVec 64))
(declare-fun temp802_153 () (_ BitVec 64))
(declare-fun temp802_154 () (_ BitVec 64))
(declare-fun temp802_156 () (_ BitVec 64))
(declare-fun temp802_157 () (_ BitVec 64))
(declare-fun temp802_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp802_158 () (_ BitVec 64))
(declare-fun temp802_159 () (_ BitVec 64))
(declare-fun temp802_161 () (_ BitVec 64))
(declare-fun temp802_162 () (_ BitVec 64))
(declare-fun temp802_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp802_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp802_164 () (_ BitVec 64))
(declare-fun temp802_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp802_166 () (_ BitVec 64))
(declare-fun temp802_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp802_168 () (_ BitVec 64))
(declare-fun temp802_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_170 () (_ BitVec 64))
(declare-fun temp802_171 () (_ BitVec 64))
(declare-fun temp802_172 () (_ BitVec 64))
(declare-fun temp802_173 () (_ BitVec 64))
(declare-fun temp802_174 () (_ BitVec 64))
(declare-fun temp802_175 () (_ BitVec 64))
(declare-fun temp802_176 () (_ BitVec 64))
(declare-fun temp802_177 () (_ BitVec 64))
(declare-fun temp802_178 () (_ BitVec 64))
(declare-fun temp802_179 () (_ BitVec 64))
(declare-fun temp802_180 () (_ BitVec 64))
(declare-fun temp802_181 () (_ BitVec 64))
(declare-fun temp802_182 () (_ BitVec 64))
(declare-fun temp802_183 () (_ BitVec 64))
(declare-fun temp802_184 () (_ BitVec 64))
(declare-fun temp802_185 () (_ BitVec 64))
(declare-fun temp802_186 () (_ BitVec 64))
(declare-fun temp802_187 () (_ BitVec 64))
(declare-fun temp802_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp802_189 () (_ BitVec 64))
(declare-fun temp802_191 () (_ BitVec 64))
(declare-fun temp802_192 () (_ BitVec 64))
(declare-fun temp802_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp802_193 () (_ BitVec 64))
(declare-fun temp802_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp802_195 () (_ BitVec 64))
(declare-fun temp802_196 () (_ BitVec 64))
(declare-fun temp802_197 () (_ BitVec 64))
(declare-fun temp802_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_199 () (_ BitVec 64))
(declare-fun temp802_200 () (_ BitVec 64))
(declare-fun temp802_201 () (_ BitVec 64))
(declare-fun temp802_202 () (_ BitVec 64))
(declare-fun temp802_203 () (_ BitVec 64))
(declare-fun temp802_204 () (_ BitVec 64))
(declare-fun temp802_205 () (_ BitVec 64))
(declare-fun temp802_206 () (_ BitVec 64))
(declare-fun temp802_207 () (_ BitVec 64))
(declare-fun temp802_208 () (_ BitVec 64))
(declare-fun temp802_209 () (_ BitVec 64))
(declare-fun temp802_210 () (_ BitVec 64))
(declare-fun temp802_211 () (_ BitVec 64))
(declare-fun temp802_212 () (_ BitVec 64))
(declare-fun temp802_213 () (_ BitVec 64))
(declare-fun temp802_214 () (_ BitVec 64))
(declare-fun temp802_215 () (_ BitVec 64))
(declare-fun temp802_216 () (_ BitVec 64))
(declare-fun temp802_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp802_218 () (_ BitVec 64))
(declare-fun temp802_220 () (_ BitVec 64))
(declare-fun temp802_221 () (_ BitVec 64))
(declare-fun temp802_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp802_222 () (_ BitVec 64))
(declare-fun temp802_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp802_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp802_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp802_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp802_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp802_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp802_229 () (_ BitVec 64))
(declare-fun temp802_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp802_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp802_232 () (_ BitVec 64))
(declare-fun temp802_233 () (_ BitVec 64))
(declare-fun temp802_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp802_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp802_236 () (_ BitVec 64))
(declare-fun temp802_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp802_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp802_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp802_241 () (_ BitVec 64))
(declare-fun temp802_240 () (_ BitVec 64))
(declare-fun temp802_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp802_243 () (_ BitVec 64))
(declare-fun temp802_244 () (_ BitVec 64))
(declare-fun temp802_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp802_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp802_247 () (_ BitVec 64))
(declare-fun temp802_248 () (_ BitVec 64))
(assert (= temp802_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp802_1)))
(assert (= temp802_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp802_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_3 #x0000000000000000))
(assert (= var79869 temp802_3))
(assert (= temp802_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp802_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_5 #x0000000000000000))
(assert (= var79914 temp802_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp802_6 #x0000000000000000))
(assert (= temp802_7 temp802_6))
(assert (= temp802_8 (select ARGNAME_padding_NAMEEND_VAL temp802_7)))
(assert (= temp802_9 #x0000000000000001))
(assert (= temp802_10 temp802_9))
(assert (= temp802_11 (select ARGNAME_padding_NAMEEND_VAL temp802_10)))
(assert (= temp802_12 #x0000000000000002))
(assert (= temp802_13 temp802_12))
(assert (= temp802_14 (select ARGNAME_padding_NAMEEND_VAL temp802_13)))
(assert (= temp802_15 #x0000000000000003))
(assert (= temp802_16 temp802_15))
(assert (= temp802_17 (select ARGNAME_padding_NAMEEND_VAL temp802_16)))
(assert (= temp802_18 #x0000000000000004))
(assert (= temp802_19 temp802_18))
(assert (= temp802_20 (select ARGNAME_padding_NAMEEND_VAL temp802_19)))
(assert (= temp802_21 #x0000000000000005))
(assert (= temp802_22 temp802_21))
(assert (= temp802_23 (select ARGNAME_padding_NAMEEND_VAL temp802_22)))
(assert (= temp802_24 #x0000000000000000))
(assert (= temp802_25 #x0000000000000000))
(assert (= temp802_26 temp802_25))
(assert (= temp802_27 (select ARGNAME_padding_NAMEEND_VAL temp802_26)))
(assert (= temp802_28 #x0000000000000000))
(assert (= temp802_29 #x0000000000000001))
(assert (= temp802_30 temp802_29))
(assert (= temp802_31 (select ARGNAME_padding_NAMEEND_VAL temp802_30)))
(assert (= temp802_32 #x0000000000000000))
(assert (= temp802_33 #x0000000000000002))
(assert (= temp802_34 temp802_33))
(assert (= temp802_35 (select ARGNAME_padding_NAMEEND_VAL temp802_34)))
(assert (= temp802_36 #x0000000000000000))
(assert (= temp802_37 #x0000000000000003))
(assert (= temp802_38 temp802_37))
(assert (= temp802_39 (select ARGNAME_padding_NAMEEND_VAL temp802_38)))
(assert (= temp802_40 #x0000000000000000))
(assert (= temp802_41 #x0000000000000004))
(assert (= temp802_42 temp802_41))
(assert (= temp802_43 (select ARGNAME_padding_NAMEEND_VAL temp802_42)))
(assert (= temp802_44 #x0000000000000000))
(assert (= temp802_45 #x0000000000000005))
(assert (= temp802_46 temp802_45))
(assert (= temp802_47 (select ARGNAME_padding_NAMEEND_VAL temp802_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp802_27 temp802_24)
             (bvslt temp802_31 temp802_28)
             (bvslt temp802_35 temp802_32)
             (bvslt temp802_39 temp802_36)
             (bvslt temp802_43 temp802_40)
             (bvslt temp802_47 temp802_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_48 #x0000000000000000))
(assert (= var1322786 temp802_48))
(assert (= temp802_49 #x0000000000000000))
(assert (= temp802_50 temp802_49))
(assert (= temp802_51 (select ARGNAME_output_padding_NAMEEND_VAL temp802_50)))
(assert (= temp802_52 #x0000000000000001))
(assert (= temp802_53 temp802_52))
(assert (= temp802_54 (select ARGNAME_output_padding_NAMEEND_VAL temp802_53)))
(assert (= temp802_55 #x0000000000000002))
(assert (= temp802_56 temp802_55))
(assert (= temp802_57 (select ARGNAME_output_padding_NAMEEND_VAL temp802_56)))
(assert (= temp802_58 #x0000000000000003))
(assert (= temp802_59 temp802_58))
(assert (= temp802_60 (select ARGNAME_output_padding_NAMEEND_VAL temp802_59)))
(assert (= temp802_61 #x0000000000000004))
(assert (= temp802_62 temp802_61))
(assert (= temp802_63 (select ARGNAME_output_padding_NAMEEND_VAL temp802_62)))
(assert (= temp802_64 #x0000000000000005))
(assert (= temp802_65 temp802_64))
(assert (= temp802_66 (select ARGNAME_output_padding_NAMEEND_VAL temp802_65)))
(assert (= temp802_67 #x0000000000000000))
(assert (= temp802_68 #x0000000000000000))
(assert (= temp802_69 temp802_68))
(assert (= temp802_70 (select ARGNAME_output_padding_NAMEEND_VAL temp802_69)))
(assert (= temp802_71 #x0000000000000000))
(assert (= temp802_72 #x0000000000000001))
(assert (= temp802_73 temp802_72))
(assert (= temp802_74 (select ARGNAME_output_padding_NAMEEND_VAL temp802_73)))
(assert (= temp802_75 #x0000000000000000))
(assert (= temp802_76 #x0000000000000002))
(assert (= temp802_77 temp802_76))
(assert (= temp802_78 (select ARGNAME_output_padding_NAMEEND_VAL temp802_77)))
(assert (= temp802_79 #x0000000000000000))
(assert (= temp802_80 #x0000000000000003))
(assert (= temp802_81 temp802_80))
(assert (= temp802_82 (select ARGNAME_output_padding_NAMEEND_VAL temp802_81)))
(assert (= temp802_83 #x0000000000000000))
(assert (= temp802_84 #x0000000000000004))
(assert (= temp802_85 temp802_84))
(assert (= temp802_86 (select ARGNAME_output_padding_NAMEEND_VAL temp802_85)))
(assert (= temp802_87 #x0000000000000000))
(assert (= temp802_88 #x0000000000000005))
(assert (= temp802_89 temp802_88))
(assert (= temp802_90 (select ARGNAME_output_padding_NAMEEND_VAL temp802_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp802_70 temp802_67)
             (bvslt temp802_74 temp802_71)
             (bvslt temp802_78 temp802_75)
             (bvslt temp802_82 temp802_79)
             (bvslt temp802_86 temp802_83)
             (bvslt temp802_90 temp802_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_91 #x0000000000000000))
(assert (= var1322797 temp802_91))
(assert (= temp802_92 #x0000000000000000))
(assert (= temp802_93 temp802_92))
(assert (= temp802_94 (select ARGNAME_stride_NAMEEND_VAL temp802_93)))
(assert (= temp802_95 #x0000000000000001))
(assert (= temp802_96 temp802_95))
(assert (= temp802_97 (select ARGNAME_stride_NAMEEND_VAL temp802_96)))
(assert (= temp802_98 #x0000000000000002))
(assert (= temp802_99 temp802_98))
(assert (= temp802_100 (select ARGNAME_stride_NAMEEND_VAL temp802_99)))
(assert (= temp802_101 #x0000000000000003))
(assert (= temp802_102 temp802_101))
(assert (= temp802_103 (select ARGNAME_stride_NAMEEND_VAL temp802_102)))
(assert (= temp802_104 #x0000000000000004))
(assert (= temp802_105 temp802_104))
(assert (= temp802_106 (select ARGNAME_stride_NAMEEND_VAL temp802_105)))
(assert (= temp802_107 #x0000000000000005))
(assert (= temp802_108 temp802_107))
(assert (= temp802_109 (select ARGNAME_stride_NAMEEND_VAL temp802_108)))
(assert (= temp802_110 #x0000000000000000))
(assert (= temp802_111 #x0000000000000000))
(assert (= temp802_112 temp802_111))
(assert (= temp802_113 (select ARGNAME_stride_NAMEEND_VAL temp802_112)))
(assert (= temp802_114 #x0000000000000000))
(assert (= temp802_115 #x0000000000000001))
(assert (= temp802_116 temp802_115))
(assert (= temp802_117 (select ARGNAME_stride_NAMEEND_VAL temp802_116)))
(assert (= temp802_118 #x0000000000000000))
(assert (= temp802_119 #x0000000000000002))
(assert (= temp802_120 temp802_119))
(assert (= temp802_121 (select ARGNAME_stride_NAMEEND_VAL temp802_120)))
(assert (= temp802_122 #x0000000000000000))
(assert (= temp802_123 #x0000000000000003))
(assert (= temp802_124 temp802_123))
(assert (= temp802_125 (select ARGNAME_stride_NAMEEND_VAL temp802_124)))
(assert (= temp802_126 #x0000000000000000))
(assert (= temp802_127 #x0000000000000004))
(assert (= temp802_128 temp802_127))
(assert (= temp802_129 (select ARGNAME_stride_NAMEEND_VAL temp802_128)))
(assert (= temp802_130 #x0000000000000000))
(assert (= temp802_131 #x0000000000000005))
(assert (= temp802_132 temp802_131))
(assert (= temp802_133 (select ARGNAME_stride_NAMEEND_VAL temp802_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp802_113 temp802_110)
             (bvsle temp802_117 temp802_114)
             (bvsle temp802_121 temp802_118)
             (bvsle temp802_125 temp802_122)
             (bvsle temp802_129 temp802_126)
             (bvsle temp802_133 temp802_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_134 #x0000000000000000))
(assert (= var1322807 temp802_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_135 #x0000000000000001))
(assert (= var1322819 temp802_135))
(assert (= temp802_136 #x0000000000000000))
(assert (= var1310898 temp802_136))
(assert (= temp802_137 #x0000000000000000))
(assert (= temp802_138 temp802_137))
(assert (= temp802_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_138)))
(assert (= temp802_140 #x0000000000000001))
(assert (= temp802_141 temp802_140))
(assert (= temp802_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_141)))
(assert (= temp802_143 #x0000000000000002))
(assert (= temp802_144 temp802_143))
(assert (= temp802_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_144)))
(assert (= temp802_146 #x0000000000000003))
(assert (= temp802_147 temp802_146))
(assert (= temp802_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_147)))
(assert (= temp802_149 #x0000000000000004))
(assert (= temp802_150 temp802_149))
(assert (= temp802_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_150)))
(assert (= temp802_152 #x0000000000000005))
(assert (= temp802_153 temp802_152))
(assert (= temp802_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_153)))
(assert (= temp802_156 var1310898))
(assert (= temp802_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_156)))
(assert (= temp802_155 temp802_157))
(assert (= var1322852
   (ite (bvslt temp802_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_158 #x0000000000000000))
(assert (= var1322852 temp802_158))
(assert (= temp802_159 #x0000000000000000))
(assert (= var1310898 temp802_159))
(assert (= temp802_161 var1310898))
(assert (= temp802_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_161)))
(assert (= temp802_160 temp802_162))
(assert (= var1322874 (bvsmod temp802_160 ARGNAME_groups_NAMEEND)))
(assert (= temp802_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp802_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp802_164 #x0000000000000001))
(assert (= var1322875 temp802_164))
(assert (= temp802_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp802_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_166 #x0000000000000001))
(assert (= var1322895 temp802_166))
(assert (= temp802_167 #x0000000000000001))
(assert (= var1311786 temp802_167))
(assert (= temp802_168 #x0000000000000000))
(assert (= temp802_169 temp802_168))
(assert (= temp802_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_169)))
(assert (= temp802_171 #x0000000000000001))
(assert (= temp802_172 temp802_171))
(assert (= temp802_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_172)))
(assert (= temp802_174 #x0000000000000002))
(assert (= temp802_175 temp802_174))
(assert (= temp802_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_175)))
(assert (= temp802_177 #x0000000000000003))
(assert (= temp802_178 temp802_177))
(assert (= temp802_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_178)))
(assert (= temp802_180 #x0000000000000004))
(assert (= temp802_181 temp802_180))
(assert (= temp802_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_181)))
(assert (= temp802_183 #x0000000000000005))
(assert (= temp802_184 temp802_183))
(assert (= temp802_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_184)))
(assert (= temp802_186 #x0000000000000000))
(assert (= temp802_187
   (ite (bvslt var1311786 temp802_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp802_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_187)))
(assert (= var1322903 temp802_188))
(assert (bvslt (ite (bvslt var1311786 temp802_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp802_189 #x0000000000000001))
(assert (= var1311786 temp802_189))
(assert (= temp802_191 var1311786))
(assert (= temp802_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_191)))
(assert (= temp802_190 temp802_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp802_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp802_193 #x0000000000000001))
(assert (= var1322908 temp802_193))
(assert (= temp802_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp802_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_195 #x0000000000000001))
(assert (= var1322975 temp802_195))
(assert (= temp802_196 #x0000000000000000))
(assert (= var1310898 temp802_196))
(assert (= temp802_197 #x0000000000000000))
(assert (= temp802_198 temp802_197))
(assert (= temp802_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp802_198)))
(assert (= temp802_200 #x0000000000000001))
(assert (= temp802_201 temp802_200))
(assert (= temp802_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp802_201)))
(assert (= temp802_203 #x0000000000000002))
(assert (= temp802_204 temp802_203))
(assert (= temp802_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp802_204)))
(assert (= temp802_206 #x0000000000000003))
(assert (= temp802_207 temp802_206))
(assert (= temp802_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp802_207)))
(assert (= temp802_209 #x0000000000000004))
(assert (= temp802_210 temp802_209))
(assert (= temp802_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp802_210)))
(assert (= temp802_212 #x0000000000000005))
(assert (= temp802_213 temp802_212))
(assert (= temp802_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp802_213)))
(assert (= temp802_215 #x0000000000000000))
(assert (= temp802_216
   (ite (bvslt var1310898 temp802_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp802_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp802_216)))
(assert (= var1322977 temp802_217))
(assert (bvslt (ite (bvslt var1310898 temp802_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp802_218 #x0000000000000000))
(assert (= var1310898 temp802_218))
(assert (= temp802_220 var1310898))
(assert (= temp802_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_220)))
(assert (= temp802_219 temp802_221))
(assert (= var1322980
   (ite (= var1322977 temp802_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp802_222 #x0000000000000001))
(assert (= var1322980 temp802_222))
(assert (= temp802_223 #x0000000000000002))
(assert (= var1848169 temp802_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp802_225 #x0000000000000001))
(assert (= var1323065 temp802_225))
(assert (= temp802_226 #x0000000000000001))
(assert (= var3486735 temp802_226))
(assert (= temp802_227 #x0000000000000001))
(assert (= var3814415 temp802_227))
(assert (= temp802_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp802_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_229 #x0000000000000001))
(assert (= var79986 temp802_229))
(assert (= temp802_230 #x0000000000000001))
(assert (= var80116 temp802_230))
(assert (= var4796905 var80116))
(assert (= temp802_231 #x0000000000000000))
(assert (= var4784306 temp802_231))
(assert (= temp802_232 #x0000000000000000))
(assert (= temp802_233
   (ite (bvslt var4784306 temp802_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp802_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_233)))
(assert (= var4796924 temp802_234))
(assert (bvslt (ite (bvslt var4784306 temp802_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp802_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp802_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp802_236 #x0000000000000001))
(assert (= var4796925 temp802_236))
(assert (= temp802_237 #x0000000000000000))
(assert (= var4996927 temp802_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp802_238 #x0000000000000002))
(assert (= var5125763 temp802_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_239 #x0000000000000000))
(assert (= var5191324 temp802_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp802_241 #xffffffffffffffff))
(assert (= temp802_240 temp802_241))
(assert (= temp802_242 #x0000000000000001))
(assert (= var66602 temp802_242))
(assert (= temp802_243 #x0000000000000000))
(assert (= temp802_244
   (ite (bvslt var66602 temp802_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp802_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_244)))
(assert (= var80523 temp802_245))
(assert (bvslt (ite (bvslt var66602 temp802_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp802_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp802_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp802_247 #x0000000000000000))
(assert (= var80524 temp802_247))
(assert (= temp802_248 #x0000000000000001))
(assert (= var79986 temp802_248))
(model-add temp802_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp802_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp802_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






