(declare-fun temp806_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp806_2 () (_ BitVec 64))
(declare-fun temp806_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp806_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp806_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp806_6 () (_ BitVec 64))
(declare-fun temp806_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_8 () (_ BitVec 64))
(declare-fun temp806_9 () (_ BitVec 64))
(declare-fun temp806_10 () (_ BitVec 64))
(declare-fun temp806_11 () (_ BitVec 64))
(declare-fun temp806_12 () (_ BitVec 64))
(declare-fun temp806_13 () (_ BitVec 64))
(declare-fun temp806_14 () (_ BitVec 64))
(declare-fun temp806_15 () (_ BitVec 64))
(declare-fun temp806_16 () (_ BitVec 64))
(declare-fun temp806_17 () (_ BitVec 64))
(declare-fun temp806_18 () (_ BitVec 64))
(declare-fun temp806_19 () (_ BitVec 64))
(declare-fun temp806_20 () (_ BitVec 64))
(declare-fun temp806_21 () (_ BitVec 64))
(declare-fun temp806_22 () (_ BitVec 64))
(declare-fun temp806_23 () (_ BitVec 64))
(declare-fun temp806_24 () (_ BitVec 64))
(declare-fun temp806_25 () (_ BitVec 64))
(declare-fun temp806_26 () (_ BitVec 64))
(declare-fun temp806_27 () (_ BitVec 64))
(declare-fun temp806_28 () (_ BitVec 64))
(declare-fun temp806_29 () (_ BitVec 64))
(declare-fun temp806_30 () (_ BitVec 64))
(declare-fun temp806_31 () (_ BitVec 64))
(declare-fun temp806_32 () (_ BitVec 64))
(declare-fun temp806_33 () (_ BitVec 64))
(declare-fun temp806_34 () (_ BitVec 64))
(declare-fun temp806_35 () (_ BitVec 64))
(declare-fun temp806_36 () (_ BitVec 64))
(declare-fun temp806_37 () (_ BitVec 64))
(declare-fun temp806_38 () (_ BitVec 64))
(declare-fun temp806_39 () (_ BitVec 64))
(declare-fun temp806_40 () (_ BitVec 64))
(declare-fun temp806_41 () (_ BitVec 64))
(declare-fun temp806_42 () (_ BitVec 64))
(declare-fun temp806_43 () (_ BitVec 64))
(declare-fun temp806_44 () (_ BitVec 64))
(declare-fun temp806_45 () (_ BitVec 64))
(declare-fun temp806_46 () (_ BitVec 64))
(declare-fun temp806_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp806_48 () (_ BitVec 64))
(declare-fun temp806_49 () (_ BitVec 64))
(declare-fun temp806_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_51 () (_ BitVec 64))
(declare-fun temp806_52 () (_ BitVec 64))
(declare-fun temp806_53 () (_ BitVec 64))
(declare-fun temp806_54 () (_ BitVec 64))
(declare-fun temp806_55 () (_ BitVec 64))
(declare-fun temp806_56 () (_ BitVec 64))
(declare-fun temp806_57 () (_ BitVec 64))
(declare-fun temp806_58 () (_ BitVec 64))
(declare-fun temp806_59 () (_ BitVec 64))
(declare-fun temp806_60 () (_ BitVec 64))
(declare-fun temp806_61 () (_ BitVec 64))
(declare-fun temp806_62 () (_ BitVec 64))
(declare-fun temp806_63 () (_ BitVec 64))
(declare-fun temp806_64 () (_ BitVec 64))
(declare-fun temp806_65 () (_ BitVec 64))
(declare-fun temp806_66 () (_ BitVec 64))
(declare-fun temp806_67 () (_ BitVec 64))
(declare-fun temp806_68 () (_ BitVec 64))
(declare-fun temp806_69 () (_ BitVec 64))
(declare-fun temp806_70 () (_ BitVec 64))
(declare-fun temp806_71 () (_ BitVec 64))
(declare-fun temp806_72 () (_ BitVec 64))
(declare-fun temp806_73 () (_ BitVec 64))
(declare-fun temp806_74 () (_ BitVec 64))
(declare-fun temp806_75 () (_ BitVec 64))
(declare-fun temp806_76 () (_ BitVec 64))
(declare-fun temp806_77 () (_ BitVec 64))
(declare-fun temp806_78 () (_ BitVec 64))
(declare-fun temp806_79 () (_ BitVec 64))
(declare-fun temp806_80 () (_ BitVec 64))
(declare-fun temp806_81 () (_ BitVec 64))
(declare-fun temp806_82 () (_ BitVec 64))
(declare-fun temp806_83 () (_ BitVec 64))
(declare-fun temp806_84 () (_ BitVec 64))
(declare-fun temp806_85 () (_ BitVec 64))
(declare-fun temp806_86 () (_ BitVec 64))
(declare-fun temp806_87 () (_ BitVec 64))
(declare-fun temp806_88 () (_ BitVec 64))
(declare-fun temp806_89 () (_ BitVec 64))
(declare-fun temp806_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp806_91 () (_ BitVec 64))
(declare-fun temp806_92 () (_ BitVec 64))
(declare-fun temp806_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_94 () (_ BitVec 64))
(declare-fun temp806_95 () (_ BitVec 64))
(declare-fun temp806_96 () (_ BitVec 64))
(declare-fun temp806_97 () (_ BitVec 64))
(declare-fun temp806_98 () (_ BitVec 64))
(declare-fun temp806_99 () (_ BitVec 64))
(declare-fun temp806_100 () (_ BitVec 64))
(declare-fun temp806_101 () (_ BitVec 64))
(declare-fun temp806_102 () (_ BitVec 64))
(declare-fun temp806_103 () (_ BitVec 64))
(declare-fun temp806_104 () (_ BitVec 64))
(declare-fun temp806_105 () (_ BitVec 64))
(declare-fun temp806_106 () (_ BitVec 64))
(declare-fun temp806_107 () (_ BitVec 64))
(declare-fun temp806_108 () (_ BitVec 64))
(declare-fun temp806_109 () (_ BitVec 64))
(declare-fun temp806_110 () (_ BitVec 64))
(declare-fun temp806_111 () (_ BitVec 64))
(declare-fun temp806_112 () (_ BitVec 64))
(declare-fun temp806_113 () (_ BitVec 64))
(declare-fun temp806_114 () (_ BitVec 64))
(declare-fun temp806_115 () (_ BitVec 64))
(declare-fun temp806_116 () (_ BitVec 64))
(declare-fun temp806_117 () (_ BitVec 64))
(declare-fun temp806_118 () (_ BitVec 64))
(declare-fun temp806_119 () (_ BitVec 64))
(declare-fun temp806_120 () (_ BitVec 64))
(declare-fun temp806_121 () (_ BitVec 64))
(declare-fun temp806_122 () (_ BitVec 64))
(declare-fun temp806_123 () (_ BitVec 64))
(declare-fun temp806_124 () (_ BitVec 64))
(declare-fun temp806_125 () (_ BitVec 64))
(declare-fun temp806_126 () (_ BitVec 64))
(declare-fun temp806_127 () (_ BitVec 64))
(declare-fun temp806_128 () (_ BitVec 64))
(declare-fun temp806_129 () (_ BitVec 64))
(declare-fun temp806_130 () (_ BitVec 64))
(declare-fun temp806_131 () (_ BitVec 64))
(declare-fun temp806_132 () (_ BitVec 64))
(declare-fun temp806_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp806_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp806_135 () (_ BitVec 64))
(declare-fun temp806_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp806_137 () (_ BitVec 64))
(declare-fun temp806_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_139 () (_ BitVec 64))
(declare-fun temp806_140 () (_ BitVec 64))
(declare-fun temp806_141 () (_ BitVec 64))
(declare-fun temp806_142 () (_ BitVec 64))
(declare-fun temp806_143 () (_ BitVec 64))
(declare-fun temp806_144 () (_ BitVec 64))
(declare-fun temp806_145 () (_ BitVec 64))
(declare-fun temp806_146 () (_ BitVec 64))
(declare-fun temp806_147 () (_ BitVec 64))
(declare-fun temp806_148 () (_ BitVec 64))
(declare-fun temp806_149 () (_ BitVec 64))
(declare-fun temp806_150 () (_ BitVec 64))
(declare-fun temp806_151 () (_ BitVec 64))
(declare-fun temp806_152 () (_ BitVec 64))
(declare-fun temp806_153 () (_ BitVec 64))
(declare-fun temp806_154 () (_ BitVec 64))
(declare-fun temp806_156 () (_ BitVec 64))
(declare-fun temp806_157 () (_ BitVec 64))
(declare-fun temp806_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp806_158 () (_ BitVec 64))
(declare-fun temp806_159 () (_ BitVec 64))
(declare-fun temp806_161 () (_ BitVec 64))
(declare-fun temp806_162 () (_ BitVec 64))
(declare-fun temp806_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp806_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp806_164 () (_ BitVec 64))
(declare-fun temp806_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp806_166 () (_ BitVec 64))
(declare-fun temp806_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp806_168 () (_ BitVec 64))
(declare-fun temp806_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_170 () (_ BitVec 64))
(declare-fun temp806_171 () (_ BitVec 64))
(declare-fun temp806_172 () (_ BitVec 64))
(declare-fun temp806_173 () (_ BitVec 64))
(declare-fun temp806_174 () (_ BitVec 64))
(declare-fun temp806_175 () (_ BitVec 64))
(declare-fun temp806_176 () (_ BitVec 64))
(declare-fun temp806_177 () (_ BitVec 64))
(declare-fun temp806_178 () (_ BitVec 64))
(declare-fun temp806_179 () (_ BitVec 64))
(declare-fun temp806_180 () (_ BitVec 64))
(declare-fun temp806_181 () (_ BitVec 64))
(declare-fun temp806_182 () (_ BitVec 64))
(declare-fun temp806_183 () (_ BitVec 64))
(declare-fun temp806_184 () (_ BitVec 64))
(declare-fun temp806_185 () (_ BitVec 64))
(declare-fun temp806_186 () (_ BitVec 64))
(declare-fun temp806_187 () (_ BitVec 64))
(declare-fun temp806_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp806_189 () (_ BitVec 64))
(declare-fun temp806_191 () (_ BitVec 64))
(declare-fun temp806_192 () (_ BitVec 64))
(declare-fun temp806_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp806_193 () (_ BitVec 64))
(declare-fun temp806_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp806_195 () (_ BitVec 64))
(declare-fun temp806_196 () (_ BitVec 64))
(declare-fun temp806_197 () (_ BitVec 64))
(declare-fun temp806_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_199 () (_ BitVec 64))
(declare-fun temp806_200 () (_ BitVec 64))
(declare-fun temp806_201 () (_ BitVec 64))
(declare-fun temp806_202 () (_ BitVec 64))
(declare-fun temp806_203 () (_ BitVec 64))
(declare-fun temp806_204 () (_ BitVec 64))
(declare-fun temp806_205 () (_ BitVec 64))
(declare-fun temp806_206 () (_ BitVec 64))
(declare-fun temp806_207 () (_ BitVec 64))
(declare-fun temp806_208 () (_ BitVec 64))
(declare-fun temp806_209 () (_ BitVec 64))
(declare-fun temp806_210 () (_ BitVec 64))
(declare-fun temp806_211 () (_ BitVec 64))
(declare-fun temp806_212 () (_ BitVec 64))
(declare-fun temp806_213 () (_ BitVec 64))
(declare-fun temp806_214 () (_ BitVec 64))
(declare-fun temp806_215 () (_ BitVec 64))
(declare-fun temp806_216 () (_ BitVec 64))
(declare-fun temp806_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp806_218 () (_ BitVec 64))
(declare-fun temp806_220 () (_ BitVec 64))
(declare-fun temp806_221 () (_ BitVec 64))
(declare-fun temp806_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp806_222 () (_ BitVec 64))
(declare-fun temp806_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp806_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp806_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp806_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp806_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp806_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp806_229 () (_ BitVec 64))
(declare-fun temp806_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp806_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp806_232 () (_ BitVec 64))
(declare-fun temp806_233 () (_ BitVec 64))
(declare-fun temp806_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp806_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp806_236 () (_ BitVec 64))
(declare-fun temp806_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp806_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp806_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp806_241 () (_ BitVec 64))
(declare-fun temp806_240 () (_ BitVec 64))
(declare-fun temp806_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp806_243 () (_ BitVec 64))
(declare-fun temp806_244 () (_ BitVec 64))
(declare-fun temp806_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp806_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp806_247 () (_ BitVec 64))
(declare-fun temp806_248 () (_ BitVec 64))
(assert (= temp806_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp806_1)))
(assert (= temp806_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp806_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_3 #x0000000000000000))
(assert (= var79869 temp806_3))
(assert (= temp806_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp806_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_5 #x0000000000000000))
(assert (= var79914 temp806_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp806_6 #x0000000000000000))
(assert (= temp806_7 temp806_6))
(assert (= temp806_8 (select ARGNAME_padding_NAMEEND_VAL temp806_7)))
(assert (= temp806_9 #x0000000000000001))
(assert (= temp806_10 temp806_9))
(assert (= temp806_11 (select ARGNAME_padding_NAMEEND_VAL temp806_10)))
(assert (= temp806_12 #x0000000000000002))
(assert (= temp806_13 temp806_12))
(assert (= temp806_14 (select ARGNAME_padding_NAMEEND_VAL temp806_13)))
(assert (= temp806_15 #x0000000000000003))
(assert (= temp806_16 temp806_15))
(assert (= temp806_17 (select ARGNAME_padding_NAMEEND_VAL temp806_16)))
(assert (= temp806_18 #x0000000000000004))
(assert (= temp806_19 temp806_18))
(assert (= temp806_20 (select ARGNAME_padding_NAMEEND_VAL temp806_19)))
(assert (= temp806_21 #x0000000000000005))
(assert (= temp806_22 temp806_21))
(assert (= temp806_23 (select ARGNAME_padding_NAMEEND_VAL temp806_22)))
(assert (= temp806_24 #x0000000000000000))
(assert (= temp806_25 #x0000000000000000))
(assert (= temp806_26 temp806_25))
(assert (= temp806_27 (select ARGNAME_padding_NAMEEND_VAL temp806_26)))
(assert (= temp806_28 #x0000000000000000))
(assert (= temp806_29 #x0000000000000001))
(assert (= temp806_30 temp806_29))
(assert (= temp806_31 (select ARGNAME_padding_NAMEEND_VAL temp806_30)))
(assert (= temp806_32 #x0000000000000000))
(assert (= temp806_33 #x0000000000000002))
(assert (= temp806_34 temp806_33))
(assert (= temp806_35 (select ARGNAME_padding_NAMEEND_VAL temp806_34)))
(assert (= temp806_36 #x0000000000000000))
(assert (= temp806_37 #x0000000000000003))
(assert (= temp806_38 temp806_37))
(assert (= temp806_39 (select ARGNAME_padding_NAMEEND_VAL temp806_38)))
(assert (= temp806_40 #x0000000000000000))
(assert (= temp806_41 #x0000000000000004))
(assert (= temp806_42 temp806_41))
(assert (= temp806_43 (select ARGNAME_padding_NAMEEND_VAL temp806_42)))
(assert (= temp806_44 #x0000000000000000))
(assert (= temp806_45 #x0000000000000005))
(assert (= temp806_46 temp806_45))
(assert (= temp806_47 (select ARGNAME_padding_NAMEEND_VAL temp806_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp806_27 temp806_24)
             (bvslt temp806_31 temp806_28)
             (bvslt temp806_35 temp806_32)
             (bvslt temp806_39 temp806_36)
             (bvslt temp806_43 temp806_40)
             (bvslt temp806_47 temp806_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_48 #x0000000000000000))
(assert (= var1322786 temp806_48))
(assert (= temp806_49 #x0000000000000000))
(assert (= temp806_50 temp806_49))
(assert (= temp806_51 (select ARGNAME_output_padding_NAMEEND_VAL temp806_50)))
(assert (= temp806_52 #x0000000000000001))
(assert (= temp806_53 temp806_52))
(assert (= temp806_54 (select ARGNAME_output_padding_NAMEEND_VAL temp806_53)))
(assert (= temp806_55 #x0000000000000002))
(assert (= temp806_56 temp806_55))
(assert (= temp806_57 (select ARGNAME_output_padding_NAMEEND_VAL temp806_56)))
(assert (= temp806_58 #x0000000000000003))
(assert (= temp806_59 temp806_58))
(assert (= temp806_60 (select ARGNAME_output_padding_NAMEEND_VAL temp806_59)))
(assert (= temp806_61 #x0000000000000004))
(assert (= temp806_62 temp806_61))
(assert (= temp806_63 (select ARGNAME_output_padding_NAMEEND_VAL temp806_62)))
(assert (= temp806_64 #x0000000000000005))
(assert (= temp806_65 temp806_64))
(assert (= temp806_66 (select ARGNAME_output_padding_NAMEEND_VAL temp806_65)))
(assert (= temp806_67 #x0000000000000000))
(assert (= temp806_68 #x0000000000000000))
(assert (= temp806_69 temp806_68))
(assert (= temp806_70 (select ARGNAME_output_padding_NAMEEND_VAL temp806_69)))
(assert (= temp806_71 #x0000000000000000))
(assert (= temp806_72 #x0000000000000001))
(assert (= temp806_73 temp806_72))
(assert (= temp806_74 (select ARGNAME_output_padding_NAMEEND_VAL temp806_73)))
(assert (= temp806_75 #x0000000000000000))
(assert (= temp806_76 #x0000000000000002))
(assert (= temp806_77 temp806_76))
(assert (= temp806_78 (select ARGNAME_output_padding_NAMEEND_VAL temp806_77)))
(assert (= temp806_79 #x0000000000000000))
(assert (= temp806_80 #x0000000000000003))
(assert (= temp806_81 temp806_80))
(assert (= temp806_82 (select ARGNAME_output_padding_NAMEEND_VAL temp806_81)))
(assert (= temp806_83 #x0000000000000000))
(assert (= temp806_84 #x0000000000000004))
(assert (= temp806_85 temp806_84))
(assert (= temp806_86 (select ARGNAME_output_padding_NAMEEND_VAL temp806_85)))
(assert (= temp806_87 #x0000000000000000))
(assert (= temp806_88 #x0000000000000005))
(assert (= temp806_89 temp806_88))
(assert (= temp806_90 (select ARGNAME_output_padding_NAMEEND_VAL temp806_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp806_70 temp806_67)
             (bvslt temp806_74 temp806_71)
             (bvslt temp806_78 temp806_75)
             (bvslt temp806_82 temp806_79)
             (bvslt temp806_86 temp806_83)
             (bvslt temp806_90 temp806_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_91 #x0000000000000000))
(assert (= var1322797 temp806_91))
(assert (= temp806_92 #x0000000000000000))
(assert (= temp806_93 temp806_92))
(assert (= temp806_94 (select ARGNAME_stride_NAMEEND_VAL temp806_93)))
(assert (= temp806_95 #x0000000000000001))
(assert (= temp806_96 temp806_95))
(assert (= temp806_97 (select ARGNAME_stride_NAMEEND_VAL temp806_96)))
(assert (= temp806_98 #x0000000000000002))
(assert (= temp806_99 temp806_98))
(assert (= temp806_100 (select ARGNAME_stride_NAMEEND_VAL temp806_99)))
(assert (= temp806_101 #x0000000000000003))
(assert (= temp806_102 temp806_101))
(assert (= temp806_103 (select ARGNAME_stride_NAMEEND_VAL temp806_102)))
(assert (= temp806_104 #x0000000000000004))
(assert (= temp806_105 temp806_104))
(assert (= temp806_106 (select ARGNAME_stride_NAMEEND_VAL temp806_105)))
(assert (= temp806_107 #x0000000000000005))
(assert (= temp806_108 temp806_107))
(assert (= temp806_109 (select ARGNAME_stride_NAMEEND_VAL temp806_108)))
(assert (= temp806_110 #x0000000000000000))
(assert (= temp806_111 #x0000000000000000))
(assert (= temp806_112 temp806_111))
(assert (= temp806_113 (select ARGNAME_stride_NAMEEND_VAL temp806_112)))
(assert (= temp806_114 #x0000000000000000))
(assert (= temp806_115 #x0000000000000001))
(assert (= temp806_116 temp806_115))
(assert (= temp806_117 (select ARGNAME_stride_NAMEEND_VAL temp806_116)))
(assert (= temp806_118 #x0000000000000000))
(assert (= temp806_119 #x0000000000000002))
(assert (= temp806_120 temp806_119))
(assert (= temp806_121 (select ARGNAME_stride_NAMEEND_VAL temp806_120)))
(assert (= temp806_122 #x0000000000000000))
(assert (= temp806_123 #x0000000000000003))
(assert (= temp806_124 temp806_123))
(assert (= temp806_125 (select ARGNAME_stride_NAMEEND_VAL temp806_124)))
(assert (= temp806_126 #x0000000000000000))
(assert (= temp806_127 #x0000000000000004))
(assert (= temp806_128 temp806_127))
(assert (= temp806_129 (select ARGNAME_stride_NAMEEND_VAL temp806_128)))
(assert (= temp806_130 #x0000000000000000))
(assert (= temp806_131 #x0000000000000005))
(assert (= temp806_132 temp806_131))
(assert (= temp806_133 (select ARGNAME_stride_NAMEEND_VAL temp806_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp806_113 temp806_110)
             (bvsle temp806_117 temp806_114)
             (bvsle temp806_121 temp806_118)
             (bvsle temp806_125 temp806_122)
             (bvsle temp806_129 temp806_126)
             (bvsle temp806_133 temp806_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_134 #x0000000000000000))
(assert (= var1322807 temp806_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_135 #x0000000000000001))
(assert (= var1322819 temp806_135))
(assert (= temp806_136 #x0000000000000000))
(assert (= var1310898 temp806_136))
(assert (= temp806_137 #x0000000000000000))
(assert (= temp806_138 temp806_137))
(assert (= temp806_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_138)))
(assert (= temp806_140 #x0000000000000001))
(assert (= temp806_141 temp806_140))
(assert (= temp806_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_141)))
(assert (= temp806_143 #x0000000000000002))
(assert (= temp806_144 temp806_143))
(assert (= temp806_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_144)))
(assert (= temp806_146 #x0000000000000003))
(assert (= temp806_147 temp806_146))
(assert (= temp806_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_147)))
(assert (= temp806_149 #x0000000000000004))
(assert (= temp806_150 temp806_149))
(assert (= temp806_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_150)))
(assert (= temp806_152 #x0000000000000005))
(assert (= temp806_153 temp806_152))
(assert (= temp806_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_153)))
(assert (= temp806_156 var1310898))
(assert (= temp806_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_156)))
(assert (= temp806_155 temp806_157))
(assert (= var1322852
   (ite (bvslt temp806_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_158 #x0000000000000000))
(assert (= var1322852 temp806_158))
(assert (= temp806_159 #x0000000000000000))
(assert (= var1310898 temp806_159))
(assert (= temp806_161 var1310898))
(assert (= temp806_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_161)))
(assert (= temp806_160 temp806_162))
(assert (= var1322874 (bvsmod temp806_160 ARGNAME_groups_NAMEEND)))
(assert (= temp806_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp806_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp806_164 #x0000000000000001))
(assert (= var1322875 temp806_164))
(assert (= temp806_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp806_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_166 #x0000000000000001))
(assert (= var1322895 temp806_166))
(assert (= temp806_167 #x0000000000000001))
(assert (= var1311786 temp806_167))
(assert (= temp806_168 #x0000000000000000))
(assert (= temp806_169 temp806_168))
(assert (= temp806_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_169)))
(assert (= temp806_171 #x0000000000000001))
(assert (= temp806_172 temp806_171))
(assert (= temp806_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_172)))
(assert (= temp806_174 #x0000000000000002))
(assert (= temp806_175 temp806_174))
(assert (= temp806_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_175)))
(assert (= temp806_177 #x0000000000000003))
(assert (= temp806_178 temp806_177))
(assert (= temp806_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_178)))
(assert (= temp806_180 #x0000000000000004))
(assert (= temp806_181 temp806_180))
(assert (= temp806_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_181)))
(assert (= temp806_183 #x0000000000000005))
(assert (= temp806_184 temp806_183))
(assert (= temp806_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_184)))
(assert (= temp806_186 #x0000000000000000))
(assert (= temp806_187
   (ite (bvslt var1311786 temp806_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp806_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_187)))
(assert (= var1322903 temp806_188))
(assert (bvslt (ite (bvslt var1311786 temp806_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp806_189 #x0000000000000001))
(assert (= var1311786 temp806_189))
(assert (= temp806_191 var1311786))
(assert (= temp806_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_191)))
(assert (= temp806_190 temp806_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp806_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp806_193 #x0000000000000001))
(assert (= var1322908 temp806_193))
(assert (= temp806_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp806_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_195 #x0000000000000001))
(assert (= var1322975 temp806_195))
(assert (= temp806_196 #x0000000000000000))
(assert (= var1310898 temp806_196))
(assert (= temp806_197 #x0000000000000000))
(assert (= temp806_198 temp806_197))
(assert (= temp806_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp806_198)))
(assert (= temp806_200 #x0000000000000001))
(assert (= temp806_201 temp806_200))
(assert (= temp806_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp806_201)))
(assert (= temp806_203 #x0000000000000002))
(assert (= temp806_204 temp806_203))
(assert (= temp806_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp806_204)))
(assert (= temp806_206 #x0000000000000003))
(assert (= temp806_207 temp806_206))
(assert (= temp806_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp806_207)))
(assert (= temp806_209 #x0000000000000004))
(assert (= temp806_210 temp806_209))
(assert (= temp806_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp806_210)))
(assert (= temp806_212 #x0000000000000005))
(assert (= temp806_213 temp806_212))
(assert (= temp806_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp806_213)))
(assert (= temp806_215 #x0000000000000000))
(assert (= temp806_216
   (ite (bvslt var1310898 temp806_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp806_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp806_216)))
(assert (= var1322977 temp806_217))
(assert (bvslt (ite (bvslt var1310898 temp806_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp806_218 #x0000000000000000))
(assert (= var1310898 temp806_218))
(assert (= temp806_220 var1310898))
(assert (= temp806_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_220)))
(assert (= temp806_219 temp806_221))
(assert (= var1322980
   (ite (= var1322977 temp806_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp806_222 #x0000000000000001))
(assert (= var1322980 temp806_222))
(assert (= temp806_223 #x0000000000000002))
(assert (= var1848169 temp806_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp806_225 #x0000000000000001))
(assert (= var1323065 temp806_225))
(assert (= temp806_226 #x0000000000000001))
(assert (= var3486735 temp806_226))
(assert (= temp806_227 #x0000000000000001))
(assert (= var3814415 temp806_227))
(assert (= temp806_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp806_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_229 #x0000000000000001))
(assert (= var79986 temp806_229))
(assert (= temp806_230 #x0000000000000001))
(assert (= var80116 temp806_230))
(assert (= var4796905 var80116))
(assert (= temp806_231 #x0000000000000000))
(assert (= var4784306 temp806_231))
(assert (= temp806_232 #x0000000000000000))
(assert (= temp806_233
   (ite (bvslt var4784306 temp806_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp806_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_233)))
(assert (= var4796924 temp806_234))
(assert (bvslt (ite (bvslt var4784306 temp806_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp806_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp806_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp806_236 #x0000000000000001))
(assert (= var4796925 temp806_236))
(assert (= temp806_237 #x0000000000000000))
(assert (= var4996927 temp806_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp806_238 #x0000000000000002))
(assert (= var5125763 temp806_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_239 #x0000000000000000))
(assert (= var5191324 temp806_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp806_241 #xffffffffffffffff))
(assert (= temp806_240 temp806_241))
(assert (= temp806_242 #x0000000000000001))
(assert (= var66602 temp806_242))
(assert (= temp806_243 #x0000000000000000))
(assert (= temp806_244
   (ite (bvslt var66602 temp806_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp806_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_244)))
(assert (= var80523 temp806_245))
(assert (bvslt (ite (bvslt var66602 temp806_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp806_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp806_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp806_247 #x0000000000000000))
(assert (= var80524 temp806_247))
(assert (= temp806_248 #x0000000000000001))
(assert (= var79986 temp806_248))
(model-add temp806_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp806_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp806_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






