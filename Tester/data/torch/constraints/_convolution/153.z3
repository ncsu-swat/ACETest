(declare-fun temp202_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp202_2 () (_ BitVec 64))
(declare-fun temp202_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp202_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp202_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp202_6 () (_ BitVec 64))
(declare-fun temp202_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp202_8 () (_ BitVec 64))
(declare-fun temp202_9 () (_ BitVec 64))
(declare-fun temp202_10 () (_ BitVec 64))
(declare-fun temp202_11 () (_ BitVec 64))
(declare-fun temp202_12 () (_ BitVec 64))
(declare-fun temp202_13 () (_ BitVec 64))
(declare-fun temp202_14 () (_ BitVec 64))
(declare-fun temp202_15 () (_ BitVec 64))
(declare-fun temp202_16 () (_ BitVec 64))
(declare-fun temp202_17 () (_ BitVec 64))
(declare-fun temp202_18 () (_ BitVec 64))
(declare-fun temp202_19 () (_ BitVec 64))
(declare-fun temp202_20 () (_ BitVec 64))
(declare-fun temp202_21 () (_ BitVec 64))
(declare-fun temp202_22 () (_ BitVec 64))
(declare-fun temp202_23 () (_ BitVec 64))
(declare-fun temp202_24 () (_ BitVec 64))
(declare-fun temp202_25 () (_ BitVec 64))
(declare-fun temp202_26 () (_ BitVec 64))
(declare-fun temp202_27 () (_ BitVec 64))
(declare-fun temp202_28 () (_ BitVec 64))
(declare-fun temp202_29 () (_ BitVec 64))
(declare-fun temp202_30 () (_ BitVec 64))
(declare-fun temp202_31 () (_ BitVec 64))
(declare-fun temp202_32 () (_ BitVec 64))
(declare-fun temp202_33 () (_ BitVec 64))
(declare-fun temp202_34 () (_ BitVec 64))
(declare-fun temp202_35 () (_ BitVec 64))
(declare-fun temp202_36 () (_ BitVec 64))
(declare-fun temp202_37 () (_ BitVec 64))
(declare-fun temp202_38 () (_ BitVec 64))
(declare-fun temp202_39 () (_ BitVec 64))
(declare-fun temp202_40 () (_ BitVec 64))
(declare-fun temp202_41 () (_ BitVec 64))
(declare-fun temp202_42 () (_ BitVec 64))
(declare-fun temp202_43 () (_ BitVec 64))
(declare-fun temp202_44 () (_ BitVec 64))
(declare-fun temp202_45 () (_ BitVec 64))
(declare-fun temp202_46 () (_ BitVec 64))
(declare-fun temp202_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp202_48 () (_ BitVec 64))
(declare-fun temp202_49 () (_ BitVec 64))
(declare-fun temp202_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp202_51 () (_ BitVec 64))
(declare-fun temp202_52 () (_ BitVec 64))
(declare-fun temp202_53 () (_ BitVec 64))
(declare-fun temp202_54 () (_ BitVec 64))
(declare-fun temp202_55 () (_ BitVec 64))
(declare-fun temp202_56 () (_ BitVec 64))
(declare-fun temp202_57 () (_ BitVec 64))
(declare-fun temp202_58 () (_ BitVec 64))
(declare-fun temp202_59 () (_ BitVec 64))
(declare-fun temp202_60 () (_ BitVec 64))
(declare-fun temp202_61 () (_ BitVec 64))
(declare-fun temp202_62 () (_ BitVec 64))
(declare-fun temp202_63 () (_ BitVec 64))
(declare-fun temp202_64 () (_ BitVec 64))
(declare-fun temp202_65 () (_ BitVec 64))
(declare-fun temp202_66 () (_ BitVec 64))
(declare-fun temp202_67 () (_ BitVec 64))
(declare-fun temp202_68 () (_ BitVec 64))
(declare-fun temp202_69 () (_ BitVec 64))
(declare-fun temp202_70 () (_ BitVec 64))
(declare-fun temp202_71 () (_ BitVec 64))
(declare-fun temp202_72 () (_ BitVec 64))
(declare-fun temp202_73 () (_ BitVec 64))
(declare-fun temp202_74 () (_ BitVec 64))
(declare-fun temp202_75 () (_ BitVec 64))
(declare-fun temp202_76 () (_ BitVec 64))
(declare-fun temp202_77 () (_ BitVec 64))
(declare-fun temp202_78 () (_ BitVec 64))
(declare-fun temp202_79 () (_ BitVec 64))
(declare-fun temp202_80 () (_ BitVec 64))
(declare-fun temp202_81 () (_ BitVec 64))
(declare-fun temp202_82 () (_ BitVec 64))
(declare-fun temp202_83 () (_ BitVec 64))
(declare-fun temp202_84 () (_ BitVec 64))
(declare-fun temp202_85 () (_ BitVec 64))
(declare-fun temp202_86 () (_ BitVec 64))
(declare-fun temp202_87 () (_ BitVec 64))
(declare-fun temp202_88 () (_ BitVec 64))
(declare-fun temp202_89 () (_ BitVec 64))
(declare-fun temp202_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp202_91 () (_ BitVec 64))
(declare-fun temp202_92 () (_ BitVec 64))
(declare-fun temp202_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp202_94 () (_ BitVec 64))
(declare-fun temp202_95 () (_ BitVec 64))
(declare-fun temp202_96 () (_ BitVec 64))
(declare-fun temp202_97 () (_ BitVec 64))
(declare-fun temp202_98 () (_ BitVec 64))
(declare-fun temp202_99 () (_ BitVec 64))
(declare-fun temp202_100 () (_ BitVec 64))
(declare-fun temp202_101 () (_ BitVec 64))
(declare-fun temp202_102 () (_ BitVec 64))
(declare-fun temp202_103 () (_ BitVec 64))
(declare-fun temp202_104 () (_ BitVec 64))
(declare-fun temp202_105 () (_ BitVec 64))
(declare-fun temp202_106 () (_ BitVec 64))
(declare-fun temp202_107 () (_ BitVec 64))
(declare-fun temp202_108 () (_ BitVec 64))
(declare-fun temp202_109 () (_ BitVec 64))
(declare-fun temp202_110 () (_ BitVec 64))
(declare-fun temp202_111 () (_ BitVec 64))
(declare-fun temp202_112 () (_ BitVec 64))
(declare-fun temp202_113 () (_ BitVec 64))
(declare-fun temp202_114 () (_ BitVec 64))
(declare-fun temp202_115 () (_ BitVec 64))
(declare-fun temp202_116 () (_ BitVec 64))
(declare-fun temp202_117 () (_ BitVec 64))
(declare-fun temp202_118 () (_ BitVec 64))
(declare-fun temp202_119 () (_ BitVec 64))
(declare-fun temp202_120 () (_ BitVec 64))
(declare-fun temp202_121 () (_ BitVec 64))
(declare-fun temp202_122 () (_ BitVec 64))
(declare-fun temp202_123 () (_ BitVec 64))
(declare-fun temp202_124 () (_ BitVec 64))
(declare-fun temp202_125 () (_ BitVec 64))
(declare-fun temp202_126 () (_ BitVec 64))
(declare-fun temp202_127 () (_ BitVec 64))
(declare-fun temp202_128 () (_ BitVec 64))
(declare-fun temp202_129 () (_ BitVec 64))
(declare-fun temp202_130 () (_ BitVec 64))
(declare-fun temp202_131 () (_ BitVec 64))
(declare-fun temp202_132 () (_ BitVec 64))
(declare-fun temp202_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp202_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp202_135 () (_ BitVec 64))
(declare-fun temp202_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp202_137 () (_ BitVec 64))
(declare-fun temp202_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp202_139 () (_ BitVec 64))
(declare-fun temp202_140 () (_ BitVec 64))
(declare-fun temp202_141 () (_ BitVec 64))
(declare-fun temp202_142 () (_ BitVec 64))
(declare-fun temp202_143 () (_ BitVec 64))
(declare-fun temp202_144 () (_ BitVec 64))
(declare-fun temp202_145 () (_ BitVec 64))
(declare-fun temp202_146 () (_ BitVec 64))
(declare-fun temp202_147 () (_ BitVec 64))
(declare-fun temp202_148 () (_ BitVec 64))
(declare-fun temp202_149 () (_ BitVec 64))
(declare-fun temp202_150 () (_ BitVec 64))
(declare-fun temp202_151 () (_ BitVec 64))
(declare-fun temp202_152 () (_ BitVec 64))
(declare-fun temp202_153 () (_ BitVec 64))
(declare-fun temp202_154 () (_ BitVec 64))
(declare-fun temp202_156 () (_ BitVec 64))
(declare-fun temp202_157 () (_ BitVec 64))
(declare-fun temp202_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp202_158 () (_ BitVec 64))
(declare-fun temp202_159 () (_ BitVec 64))
(declare-fun temp202_161 () (_ BitVec 64))
(declare-fun temp202_162 () (_ BitVec 64))
(declare-fun temp202_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp202_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp202_164 () (_ BitVec 64))
(declare-fun temp202_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp202_166 () (_ BitVec 64))
(declare-fun temp202_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp202_168 () (_ BitVec 64))
(declare-fun temp202_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp202_170 () (_ BitVec 64))
(declare-fun temp202_171 () (_ BitVec 64))
(declare-fun temp202_172 () (_ BitVec 64))
(declare-fun temp202_173 () (_ BitVec 64))
(declare-fun temp202_174 () (_ BitVec 64))
(declare-fun temp202_175 () (_ BitVec 64))
(declare-fun temp202_176 () (_ BitVec 64))
(declare-fun temp202_177 () (_ BitVec 64))
(declare-fun temp202_178 () (_ BitVec 64))
(declare-fun temp202_179 () (_ BitVec 64))
(declare-fun temp202_180 () (_ BitVec 64))
(declare-fun temp202_181 () (_ BitVec 64))
(declare-fun temp202_182 () (_ BitVec 64))
(declare-fun temp202_183 () (_ BitVec 64))
(declare-fun temp202_184 () (_ BitVec 64))
(declare-fun temp202_185 () (_ BitVec 64))
(declare-fun temp202_186 () (_ BitVec 64))
(declare-fun temp202_187 () (_ BitVec 64))
(declare-fun temp202_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp202_189 () (_ BitVec 64))
(declare-fun temp202_191 () (_ BitVec 64))
(declare-fun temp202_192 () (_ BitVec 64))
(declare-fun temp202_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp202_193 () (_ BitVec 64))
(declare-fun temp202_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp202_195 () (_ BitVec 64))
(declare-fun temp202_196 () (_ BitVec 64))
(declare-fun temp202_197 () (_ BitVec 64))
(declare-fun temp202_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp202_199 () (_ BitVec 64))
(declare-fun temp202_200 () (_ BitVec 64))
(declare-fun temp202_201 () (_ BitVec 64))
(declare-fun temp202_202 () (_ BitVec 64))
(declare-fun temp202_203 () (_ BitVec 64))
(declare-fun temp202_204 () (_ BitVec 64))
(declare-fun temp202_205 () (_ BitVec 64))
(declare-fun temp202_206 () (_ BitVec 64))
(declare-fun temp202_207 () (_ BitVec 64))
(declare-fun temp202_208 () (_ BitVec 64))
(declare-fun temp202_209 () (_ BitVec 64))
(declare-fun temp202_210 () (_ BitVec 64))
(declare-fun temp202_211 () (_ BitVec 64))
(declare-fun temp202_212 () (_ BitVec 64))
(declare-fun temp202_213 () (_ BitVec 64))
(declare-fun temp202_214 () (_ BitVec 64))
(declare-fun temp202_215 () (_ BitVec 64))
(declare-fun temp202_216 () (_ BitVec 64))
(declare-fun temp202_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp202_218 () (_ BitVec 64))
(declare-fun temp202_220 () (_ BitVec 64))
(declare-fun temp202_221 () (_ BitVec 64))
(declare-fun temp202_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp202_222 () (_ BitVec 64))
(declare-fun temp202_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp202_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp202_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp202_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp202_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp202_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp202_229 () (_ BitVec 64))
(declare-fun temp202_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp202_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp202_232 () (_ BitVec 64))
(declare-fun temp202_233 () (_ BitVec 64))
(declare-fun temp202_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp202_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp202_236 () (_ BitVec 64))
(declare-fun temp202_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp202_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp202_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp202_241 () (_ BitVec 64))
(declare-fun temp202_240 () (_ BitVec 64))
(declare-fun temp202_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp202_243 () (_ BitVec 64))
(declare-fun temp202_244 () (_ BitVec 64))
(declare-fun temp202_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp202_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp202_247 () (_ BitVec 64))
(declare-fun temp202_248 () (_ BitVec 64))
(assert (= temp202_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp202_1)))
(assert (= temp202_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp202_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_3 #x0000000000000000))
(assert (= var79869 temp202_3))
(assert (= temp202_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp202_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_5 #x0000000000000000))
(assert (= var79914 temp202_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp202_6 #x0000000000000000))
(assert (= temp202_7 temp202_6))
(assert (= temp202_8 (select ARGNAME_padding_NAMEEND_VAL temp202_7)))
(assert (= temp202_9 #x0000000000000001))
(assert (= temp202_10 temp202_9))
(assert (= temp202_11 (select ARGNAME_padding_NAMEEND_VAL temp202_10)))
(assert (= temp202_12 #x0000000000000002))
(assert (= temp202_13 temp202_12))
(assert (= temp202_14 (select ARGNAME_padding_NAMEEND_VAL temp202_13)))
(assert (= temp202_15 #x0000000000000003))
(assert (= temp202_16 temp202_15))
(assert (= temp202_17 (select ARGNAME_padding_NAMEEND_VAL temp202_16)))
(assert (= temp202_18 #x0000000000000004))
(assert (= temp202_19 temp202_18))
(assert (= temp202_20 (select ARGNAME_padding_NAMEEND_VAL temp202_19)))
(assert (= temp202_21 #x0000000000000005))
(assert (= temp202_22 temp202_21))
(assert (= temp202_23 (select ARGNAME_padding_NAMEEND_VAL temp202_22)))
(assert (= temp202_24 #x0000000000000000))
(assert (= temp202_25 #x0000000000000000))
(assert (= temp202_26 temp202_25))
(assert (= temp202_27 (select ARGNAME_padding_NAMEEND_VAL temp202_26)))
(assert (= temp202_28 #x0000000000000000))
(assert (= temp202_29 #x0000000000000001))
(assert (= temp202_30 temp202_29))
(assert (= temp202_31 (select ARGNAME_padding_NAMEEND_VAL temp202_30)))
(assert (= temp202_32 #x0000000000000000))
(assert (= temp202_33 #x0000000000000002))
(assert (= temp202_34 temp202_33))
(assert (= temp202_35 (select ARGNAME_padding_NAMEEND_VAL temp202_34)))
(assert (= temp202_36 #x0000000000000000))
(assert (= temp202_37 #x0000000000000003))
(assert (= temp202_38 temp202_37))
(assert (= temp202_39 (select ARGNAME_padding_NAMEEND_VAL temp202_38)))
(assert (= temp202_40 #x0000000000000000))
(assert (= temp202_41 #x0000000000000004))
(assert (= temp202_42 temp202_41))
(assert (= temp202_43 (select ARGNAME_padding_NAMEEND_VAL temp202_42)))
(assert (= temp202_44 #x0000000000000000))
(assert (= temp202_45 #x0000000000000005))
(assert (= temp202_46 temp202_45))
(assert (= temp202_47 (select ARGNAME_padding_NAMEEND_VAL temp202_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp202_27 temp202_24)
             (bvslt temp202_31 temp202_28)
             (bvslt temp202_35 temp202_32)
             (bvslt temp202_39 temp202_36)
             (bvslt temp202_43 temp202_40)
             (bvslt temp202_47 temp202_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_48 #x0000000000000000))
(assert (= var1322786 temp202_48))
(assert (= temp202_49 #x0000000000000000))
(assert (= temp202_50 temp202_49))
(assert (= temp202_51 (select ARGNAME_output_padding_NAMEEND_VAL temp202_50)))
(assert (= temp202_52 #x0000000000000001))
(assert (= temp202_53 temp202_52))
(assert (= temp202_54 (select ARGNAME_output_padding_NAMEEND_VAL temp202_53)))
(assert (= temp202_55 #x0000000000000002))
(assert (= temp202_56 temp202_55))
(assert (= temp202_57 (select ARGNAME_output_padding_NAMEEND_VAL temp202_56)))
(assert (= temp202_58 #x0000000000000003))
(assert (= temp202_59 temp202_58))
(assert (= temp202_60 (select ARGNAME_output_padding_NAMEEND_VAL temp202_59)))
(assert (= temp202_61 #x0000000000000004))
(assert (= temp202_62 temp202_61))
(assert (= temp202_63 (select ARGNAME_output_padding_NAMEEND_VAL temp202_62)))
(assert (= temp202_64 #x0000000000000005))
(assert (= temp202_65 temp202_64))
(assert (= temp202_66 (select ARGNAME_output_padding_NAMEEND_VAL temp202_65)))
(assert (= temp202_67 #x0000000000000000))
(assert (= temp202_68 #x0000000000000000))
(assert (= temp202_69 temp202_68))
(assert (= temp202_70 (select ARGNAME_output_padding_NAMEEND_VAL temp202_69)))
(assert (= temp202_71 #x0000000000000000))
(assert (= temp202_72 #x0000000000000001))
(assert (= temp202_73 temp202_72))
(assert (= temp202_74 (select ARGNAME_output_padding_NAMEEND_VAL temp202_73)))
(assert (= temp202_75 #x0000000000000000))
(assert (= temp202_76 #x0000000000000002))
(assert (= temp202_77 temp202_76))
(assert (= temp202_78 (select ARGNAME_output_padding_NAMEEND_VAL temp202_77)))
(assert (= temp202_79 #x0000000000000000))
(assert (= temp202_80 #x0000000000000003))
(assert (= temp202_81 temp202_80))
(assert (= temp202_82 (select ARGNAME_output_padding_NAMEEND_VAL temp202_81)))
(assert (= temp202_83 #x0000000000000000))
(assert (= temp202_84 #x0000000000000004))
(assert (= temp202_85 temp202_84))
(assert (= temp202_86 (select ARGNAME_output_padding_NAMEEND_VAL temp202_85)))
(assert (= temp202_87 #x0000000000000000))
(assert (= temp202_88 #x0000000000000005))
(assert (= temp202_89 temp202_88))
(assert (= temp202_90 (select ARGNAME_output_padding_NAMEEND_VAL temp202_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp202_70 temp202_67)
             (bvslt temp202_74 temp202_71)
             (bvslt temp202_78 temp202_75)
             (bvslt temp202_82 temp202_79)
             (bvslt temp202_86 temp202_83)
             (bvslt temp202_90 temp202_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_91 #x0000000000000000))
(assert (= var1322797 temp202_91))
(assert (= temp202_92 #x0000000000000000))
(assert (= temp202_93 temp202_92))
(assert (= temp202_94 (select ARGNAME_stride_NAMEEND_VAL temp202_93)))
(assert (= temp202_95 #x0000000000000001))
(assert (= temp202_96 temp202_95))
(assert (= temp202_97 (select ARGNAME_stride_NAMEEND_VAL temp202_96)))
(assert (= temp202_98 #x0000000000000002))
(assert (= temp202_99 temp202_98))
(assert (= temp202_100 (select ARGNAME_stride_NAMEEND_VAL temp202_99)))
(assert (= temp202_101 #x0000000000000003))
(assert (= temp202_102 temp202_101))
(assert (= temp202_103 (select ARGNAME_stride_NAMEEND_VAL temp202_102)))
(assert (= temp202_104 #x0000000000000004))
(assert (= temp202_105 temp202_104))
(assert (= temp202_106 (select ARGNAME_stride_NAMEEND_VAL temp202_105)))
(assert (= temp202_107 #x0000000000000005))
(assert (= temp202_108 temp202_107))
(assert (= temp202_109 (select ARGNAME_stride_NAMEEND_VAL temp202_108)))
(assert (= temp202_110 #x0000000000000000))
(assert (= temp202_111 #x0000000000000000))
(assert (= temp202_112 temp202_111))
(assert (= temp202_113 (select ARGNAME_stride_NAMEEND_VAL temp202_112)))
(assert (= temp202_114 #x0000000000000000))
(assert (= temp202_115 #x0000000000000001))
(assert (= temp202_116 temp202_115))
(assert (= temp202_117 (select ARGNAME_stride_NAMEEND_VAL temp202_116)))
(assert (= temp202_118 #x0000000000000000))
(assert (= temp202_119 #x0000000000000002))
(assert (= temp202_120 temp202_119))
(assert (= temp202_121 (select ARGNAME_stride_NAMEEND_VAL temp202_120)))
(assert (= temp202_122 #x0000000000000000))
(assert (= temp202_123 #x0000000000000003))
(assert (= temp202_124 temp202_123))
(assert (= temp202_125 (select ARGNAME_stride_NAMEEND_VAL temp202_124)))
(assert (= temp202_126 #x0000000000000000))
(assert (= temp202_127 #x0000000000000004))
(assert (= temp202_128 temp202_127))
(assert (= temp202_129 (select ARGNAME_stride_NAMEEND_VAL temp202_128)))
(assert (= temp202_130 #x0000000000000000))
(assert (= temp202_131 #x0000000000000005))
(assert (= temp202_132 temp202_131))
(assert (= temp202_133 (select ARGNAME_stride_NAMEEND_VAL temp202_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp202_113 temp202_110)
             (bvsle temp202_117 temp202_114)
             (bvsle temp202_121 temp202_118)
             (bvsle temp202_125 temp202_122)
             (bvsle temp202_129 temp202_126)
             (bvsle temp202_133 temp202_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_134 #x0000000000000000))
(assert (= var1322807 temp202_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_135 #x0000000000000001))
(assert (= var1322819 temp202_135))
(assert (= temp202_136 #x0000000000000000))
(assert (= var1310898 temp202_136))
(assert (= temp202_137 #x0000000000000000))
(assert (= temp202_138 temp202_137))
(assert (= temp202_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_138)))
(assert (= temp202_140 #x0000000000000001))
(assert (= temp202_141 temp202_140))
(assert (= temp202_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_141)))
(assert (= temp202_143 #x0000000000000002))
(assert (= temp202_144 temp202_143))
(assert (= temp202_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_144)))
(assert (= temp202_146 #x0000000000000003))
(assert (= temp202_147 temp202_146))
(assert (= temp202_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_147)))
(assert (= temp202_149 #x0000000000000004))
(assert (= temp202_150 temp202_149))
(assert (= temp202_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_150)))
(assert (= temp202_152 #x0000000000000005))
(assert (= temp202_153 temp202_152))
(assert (= temp202_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_153)))
(assert (= temp202_156 var1310898))
(assert (= temp202_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_156)))
(assert (= temp202_155 temp202_157))
(assert (= var1322852
   (ite (bvslt temp202_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_158 #x0000000000000000))
(assert (= var1322852 temp202_158))
(assert (= temp202_159 #x0000000000000000))
(assert (= var1310898 temp202_159))
(assert (= temp202_161 var1310898))
(assert (= temp202_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_161)))
(assert (= temp202_160 temp202_162))
(assert (= var1322874 (bvsmod temp202_160 ARGNAME_groups_NAMEEND)))
(assert (= temp202_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp202_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp202_164 #x0000000000000001))
(assert (= var1322875 temp202_164))
(assert (= temp202_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp202_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_166 #x0000000000000001))
(assert (= var1322895 temp202_166))
(assert (= temp202_167 #x0000000000000001))
(assert (= var1311786 temp202_167))
(assert (= temp202_168 #x0000000000000000))
(assert (= temp202_169 temp202_168))
(assert (= temp202_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp202_169)))
(assert (= temp202_171 #x0000000000000001))
(assert (= temp202_172 temp202_171))
(assert (= temp202_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp202_172)))
(assert (= temp202_174 #x0000000000000002))
(assert (= temp202_175 temp202_174))
(assert (= temp202_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp202_175)))
(assert (= temp202_177 #x0000000000000003))
(assert (= temp202_178 temp202_177))
(assert (= temp202_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp202_178)))
(assert (= temp202_180 #x0000000000000004))
(assert (= temp202_181 temp202_180))
(assert (= temp202_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp202_181)))
(assert (= temp202_183 #x0000000000000005))
(assert (= temp202_184 temp202_183))
(assert (= temp202_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp202_184)))
(assert (= temp202_186 #x0000000000000000))
(assert (= temp202_187
   (ite (bvslt var1311786 temp202_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp202_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp202_187)))
(assert (= var1322903 temp202_188))
(assert (bvslt (ite (bvslt var1311786 temp202_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp202_189 #x0000000000000001))
(assert (= var1311786 temp202_189))
(assert (= temp202_191 var1311786))
(assert (= temp202_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_191)))
(assert (= temp202_190 temp202_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp202_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp202_193 #x0000000000000001))
(assert (= var1322908 temp202_193))
(assert (= temp202_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp202_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_195 #x0000000000000001))
(assert (= var1322975 temp202_195))
(assert (= temp202_196 #x0000000000000000))
(assert (= var1310898 temp202_196))
(assert (= temp202_197 #x0000000000000000))
(assert (= temp202_198 temp202_197))
(assert (= temp202_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp202_198)))
(assert (= temp202_200 #x0000000000000001))
(assert (= temp202_201 temp202_200))
(assert (= temp202_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp202_201)))
(assert (= temp202_203 #x0000000000000002))
(assert (= temp202_204 temp202_203))
(assert (= temp202_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp202_204)))
(assert (= temp202_206 #x0000000000000003))
(assert (= temp202_207 temp202_206))
(assert (= temp202_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp202_207)))
(assert (= temp202_209 #x0000000000000004))
(assert (= temp202_210 temp202_209))
(assert (= temp202_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp202_210)))
(assert (= temp202_212 #x0000000000000005))
(assert (= temp202_213 temp202_212))
(assert (= temp202_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp202_213)))
(assert (= temp202_215 #x0000000000000000))
(assert (= temp202_216
   (ite (bvslt var1310898 temp202_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp202_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp202_216)))
(assert (= var1322977 temp202_217))
(assert (bvslt (ite (bvslt var1310898 temp202_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp202_218 #x0000000000000000))
(assert (= var1310898 temp202_218))
(assert (= temp202_220 var1310898))
(assert (= temp202_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp202_220)))
(assert (= temp202_219 temp202_221))
(assert (= var1322980
   (ite (= var1322977 temp202_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp202_222 #x0000000000000001))
(assert (= var1322980 temp202_222))
(assert (= temp202_223 #x0000000000000002))
(assert (= var1848169 temp202_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp202_225 #x0000000000000001))
(assert (= var1323065 temp202_225))
(assert (= temp202_226 #x0000000000000001))
(assert (= var3486735 temp202_226))
(assert (= temp202_227 #x0000000000000001))
(assert (= var3814415 temp202_227))
(assert (= temp202_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp202_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_229 #x0000000000000001))
(assert (= var79986 temp202_229))
(assert (= temp202_230 #x0000000000000001))
(assert (= var80116 temp202_230))
(assert (= var4796905 var80116))
(assert (= temp202_231 #x0000000000000000))
(assert (= var4784306 temp202_231))
(assert (= temp202_232 #x0000000000000000))
(assert (= temp202_233
   (ite (bvslt var4784306 temp202_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp202_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp202_233)))
(assert (= var4796924 temp202_234))
(assert (bvslt (ite (bvslt var4784306 temp202_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp202_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp202_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp202_236 #x0000000000000001))
(assert (= var4796925 temp202_236))
(assert (= temp202_237 #x0000000000000000))
(assert (= var4996927 temp202_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp202_238 #x0000000000000002))
(assert (= var5125763 temp202_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp202_239 #x0000000000000000))
(assert (= var5191324 temp202_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp202_241 #xffffffffffffffff))
(assert (= temp202_240 temp202_241))
(assert (= temp202_242 #x0000000000000001))
(assert (= var66602 temp202_242))
(assert (= temp202_243 #x0000000000000000))
(assert (= temp202_244
   (ite (bvslt var66602 temp202_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp202_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp202_244)))
(assert (= var80523 temp202_245))
(assert (bvslt (ite (bvslt var66602 temp202_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp202_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp202_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp202_247 #x0000000000000000))
(assert (= var80524 temp202_247))
(assert (= temp202_248 #x0000000000000001))
(assert (= var79986 temp202_248))
(model-add temp202_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp202_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp202_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






