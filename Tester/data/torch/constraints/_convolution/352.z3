(declare-fun temp468_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp468_2 () (_ BitVec 64))
(declare-fun temp468_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp468_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp468_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp468_6 () (_ BitVec 64))
(declare-fun temp468_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_8 () (_ BitVec 64))
(declare-fun temp468_9 () (_ BitVec 64))
(declare-fun temp468_10 () (_ BitVec 64))
(declare-fun temp468_11 () (_ BitVec 64))
(declare-fun temp468_12 () (_ BitVec 64))
(declare-fun temp468_13 () (_ BitVec 64))
(declare-fun temp468_14 () (_ BitVec 64))
(declare-fun temp468_15 () (_ BitVec 64))
(declare-fun temp468_16 () (_ BitVec 64))
(declare-fun temp468_17 () (_ BitVec 64))
(declare-fun temp468_18 () (_ BitVec 64))
(declare-fun temp468_19 () (_ BitVec 64))
(declare-fun temp468_20 () (_ BitVec 64))
(declare-fun temp468_21 () (_ BitVec 64))
(declare-fun temp468_22 () (_ BitVec 64))
(declare-fun temp468_23 () (_ BitVec 64))
(declare-fun temp468_24 () (_ BitVec 64))
(declare-fun temp468_25 () (_ BitVec 64))
(declare-fun temp468_26 () (_ BitVec 64))
(declare-fun temp468_27 () (_ BitVec 64))
(declare-fun temp468_28 () (_ BitVec 64))
(declare-fun temp468_29 () (_ BitVec 64))
(declare-fun temp468_30 () (_ BitVec 64))
(declare-fun temp468_31 () (_ BitVec 64))
(declare-fun temp468_32 () (_ BitVec 64))
(declare-fun temp468_33 () (_ BitVec 64))
(declare-fun temp468_34 () (_ BitVec 64))
(declare-fun temp468_35 () (_ BitVec 64))
(declare-fun temp468_36 () (_ BitVec 64))
(declare-fun temp468_37 () (_ BitVec 64))
(declare-fun temp468_38 () (_ BitVec 64))
(declare-fun temp468_39 () (_ BitVec 64))
(declare-fun temp468_40 () (_ BitVec 64))
(declare-fun temp468_41 () (_ BitVec 64))
(declare-fun temp468_42 () (_ BitVec 64))
(declare-fun temp468_43 () (_ BitVec 64))
(declare-fun temp468_44 () (_ BitVec 64))
(declare-fun temp468_45 () (_ BitVec 64))
(declare-fun temp468_46 () (_ BitVec 64))
(declare-fun temp468_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp468_48 () (_ BitVec 64))
(declare-fun temp468_49 () (_ BitVec 64))
(declare-fun temp468_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_51 () (_ BitVec 64))
(declare-fun temp468_52 () (_ BitVec 64))
(declare-fun temp468_53 () (_ BitVec 64))
(declare-fun temp468_54 () (_ BitVec 64))
(declare-fun temp468_55 () (_ BitVec 64))
(declare-fun temp468_56 () (_ BitVec 64))
(declare-fun temp468_57 () (_ BitVec 64))
(declare-fun temp468_58 () (_ BitVec 64))
(declare-fun temp468_59 () (_ BitVec 64))
(declare-fun temp468_60 () (_ BitVec 64))
(declare-fun temp468_61 () (_ BitVec 64))
(declare-fun temp468_62 () (_ BitVec 64))
(declare-fun temp468_63 () (_ BitVec 64))
(declare-fun temp468_64 () (_ BitVec 64))
(declare-fun temp468_65 () (_ BitVec 64))
(declare-fun temp468_66 () (_ BitVec 64))
(declare-fun temp468_67 () (_ BitVec 64))
(declare-fun temp468_68 () (_ BitVec 64))
(declare-fun temp468_69 () (_ BitVec 64))
(declare-fun temp468_70 () (_ BitVec 64))
(declare-fun temp468_71 () (_ BitVec 64))
(declare-fun temp468_72 () (_ BitVec 64))
(declare-fun temp468_73 () (_ BitVec 64))
(declare-fun temp468_74 () (_ BitVec 64))
(declare-fun temp468_75 () (_ BitVec 64))
(declare-fun temp468_76 () (_ BitVec 64))
(declare-fun temp468_77 () (_ BitVec 64))
(declare-fun temp468_78 () (_ BitVec 64))
(declare-fun temp468_79 () (_ BitVec 64))
(declare-fun temp468_80 () (_ BitVec 64))
(declare-fun temp468_81 () (_ BitVec 64))
(declare-fun temp468_82 () (_ BitVec 64))
(declare-fun temp468_83 () (_ BitVec 64))
(declare-fun temp468_84 () (_ BitVec 64))
(declare-fun temp468_85 () (_ BitVec 64))
(declare-fun temp468_86 () (_ BitVec 64))
(declare-fun temp468_87 () (_ BitVec 64))
(declare-fun temp468_88 () (_ BitVec 64))
(declare-fun temp468_89 () (_ BitVec 64))
(declare-fun temp468_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp468_91 () (_ BitVec 64))
(declare-fun temp468_92 () (_ BitVec 64))
(declare-fun temp468_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_94 () (_ BitVec 64))
(declare-fun temp468_95 () (_ BitVec 64))
(declare-fun temp468_96 () (_ BitVec 64))
(declare-fun temp468_97 () (_ BitVec 64))
(declare-fun temp468_98 () (_ BitVec 64))
(declare-fun temp468_99 () (_ BitVec 64))
(declare-fun temp468_100 () (_ BitVec 64))
(declare-fun temp468_101 () (_ BitVec 64))
(declare-fun temp468_102 () (_ BitVec 64))
(declare-fun temp468_103 () (_ BitVec 64))
(declare-fun temp468_104 () (_ BitVec 64))
(declare-fun temp468_105 () (_ BitVec 64))
(declare-fun temp468_106 () (_ BitVec 64))
(declare-fun temp468_107 () (_ BitVec 64))
(declare-fun temp468_108 () (_ BitVec 64))
(declare-fun temp468_109 () (_ BitVec 64))
(declare-fun temp468_110 () (_ BitVec 64))
(declare-fun temp468_111 () (_ BitVec 64))
(declare-fun temp468_112 () (_ BitVec 64))
(declare-fun temp468_113 () (_ BitVec 64))
(declare-fun temp468_114 () (_ BitVec 64))
(declare-fun temp468_115 () (_ BitVec 64))
(declare-fun temp468_116 () (_ BitVec 64))
(declare-fun temp468_117 () (_ BitVec 64))
(declare-fun temp468_118 () (_ BitVec 64))
(declare-fun temp468_119 () (_ BitVec 64))
(declare-fun temp468_120 () (_ BitVec 64))
(declare-fun temp468_121 () (_ BitVec 64))
(declare-fun temp468_122 () (_ BitVec 64))
(declare-fun temp468_123 () (_ BitVec 64))
(declare-fun temp468_124 () (_ BitVec 64))
(declare-fun temp468_125 () (_ BitVec 64))
(declare-fun temp468_126 () (_ BitVec 64))
(declare-fun temp468_127 () (_ BitVec 64))
(declare-fun temp468_128 () (_ BitVec 64))
(declare-fun temp468_129 () (_ BitVec 64))
(declare-fun temp468_130 () (_ BitVec 64))
(declare-fun temp468_131 () (_ BitVec 64))
(declare-fun temp468_132 () (_ BitVec 64))
(declare-fun temp468_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp468_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp468_135 () (_ BitVec 64))
(declare-fun temp468_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp468_137 () (_ BitVec 64))
(declare-fun temp468_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_139 () (_ BitVec 64))
(declare-fun temp468_140 () (_ BitVec 64))
(declare-fun temp468_141 () (_ BitVec 64))
(declare-fun temp468_142 () (_ BitVec 64))
(declare-fun temp468_143 () (_ BitVec 64))
(declare-fun temp468_144 () (_ BitVec 64))
(declare-fun temp468_145 () (_ BitVec 64))
(declare-fun temp468_146 () (_ BitVec 64))
(declare-fun temp468_147 () (_ BitVec 64))
(declare-fun temp468_148 () (_ BitVec 64))
(declare-fun temp468_149 () (_ BitVec 64))
(declare-fun temp468_150 () (_ BitVec 64))
(declare-fun temp468_151 () (_ BitVec 64))
(declare-fun temp468_152 () (_ BitVec 64))
(declare-fun temp468_153 () (_ BitVec 64))
(declare-fun temp468_154 () (_ BitVec 64))
(declare-fun temp468_156 () (_ BitVec 64))
(declare-fun temp468_157 () (_ BitVec 64))
(declare-fun temp468_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp468_158 () (_ BitVec 64))
(declare-fun temp468_159 () (_ BitVec 64))
(declare-fun temp468_161 () (_ BitVec 64))
(declare-fun temp468_162 () (_ BitVec 64))
(declare-fun temp468_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp468_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp468_164 () (_ BitVec 64))
(declare-fun temp468_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp468_166 () (_ BitVec 64))
(declare-fun temp468_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp468_168 () (_ BitVec 64))
(declare-fun temp468_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_170 () (_ BitVec 64))
(declare-fun temp468_171 () (_ BitVec 64))
(declare-fun temp468_172 () (_ BitVec 64))
(declare-fun temp468_173 () (_ BitVec 64))
(declare-fun temp468_174 () (_ BitVec 64))
(declare-fun temp468_175 () (_ BitVec 64))
(declare-fun temp468_176 () (_ BitVec 64))
(declare-fun temp468_177 () (_ BitVec 64))
(declare-fun temp468_178 () (_ BitVec 64))
(declare-fun temp468_179 () (_ BitVec 64))
(declare-fun temp468_180 () (_ BitVec 64))
(declare-fun temp468_181 () (_ BitVec 64))
(declare-fun temp468_182 () (_ BitVec 64))
(declare-fun temp468_183 () (_ BitVec 64))
(declare-fun temp468_184 () (_ BitVec 64))
(declare-fun temp468_185 () (_ BitVec 64))
(declare-fun temp468_186 () (_ BitVec 64))
(declare-fun temp468_187 () (_ BitVec 64))
(declare-fun temp468_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp468_189 () (_ BitVec 64))
(declare-fun temp468_191 () (_ BitVec 64))
(declare-fun temp468_192 () (_ BitVec 64))
(declare-fun temp468_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp468_193 () (_ BitVec 64))
(declare-fun temp468_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp468_195 () (_ BitVec 64))
(declare-fun temp468_196 () (_ BitVec 64))
(declare-fun temp468_197 () (_ BitVec 64))
(declare-fun temp468_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_199 () (_ BitVec 64))
(declare-fun temp468_200 () (_ BitVec 64))
(declare-fun temp468_201 () (_ BitVec 64))
(declare-fun temp468_202 () (_ BitVec 64))
(declare-fun temp468_203 () (_ BitVec 64))
(declare-fun temp468_204 () (_ BitVec 64))
(declare-fun temp468_205 () (_ BitVec 64))
(declare-fun temp468_206 () (_ BitVec 64))
(declare-fun temp468_207 () (_ BitVec 64))
(declare-fun temp468_208 () (_ BitVec 64))
(declare-fun temp468_209 () (_ BitVec 64))
(declare-fun temp468_210 () (_ BitVec 64))
(declare-fun temp468_211 () (_ BitVec 64))
(declare-fun temp468_212 () (_ BitVec 64))
(declare-fun temp468_213 () (_ BitVec 64))
(declare-fun temp468_214 () (_ BitVec 64))
(declare-fun temp468_215 () (_ BitVec 64))
(declare-fun temp468_216 () (_ BitVec 64))
(declare-fun temp468_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp468_218 () (_ BitVec 64))
(declare-fun temp468_220 () (_ BitVec 64))
(declare-fun temp468_221 () (_ BitVec 64))
(declare-fun temp468_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp468_222 () (_ BitVec 64))
(declare-fun temp468_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp468_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp468_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp468_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp468_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp468_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp468_229 () (_ BitVec 64))
(declare-fun temp468_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp468_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp468_232 () (_ BitVec 64))
(declare-fun temp468_233 () (_ BitVec 64))
(declare-fun temp468_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp468_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp468_236 () (_ BitVec 64))
(declare-fun temp468_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp468_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp468_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp468_240 () (_ BitVec 64))
(assert (= temp468_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp468_1)))
(assert (= temp468_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp468_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_3 #x0000000000000000))
(assert (= var79869 temp468_3))
(assert (= temp468_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp468_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_5 #x0000000000000000))
(assert (= var79914 temp468_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp468_6 #x0000000000000000))
(assert (= temp468_7 temp468_6))
(assert (= temp468_8 (select ARGNAME_padding_NAMEEND_VAL temp468_7)))
(assert (= temp468_9 #x0000000000000001))
(assert (= temp468_10 temp468_9))
(assert (= temp468_11 (select ARGNAME_padding_NAMEEND_VAL temp468_10)))
(assert (= temp468_12 #x0000000000000002))
(assert (= temp468_13 temp468_12))
(assert (= temp468_14 (select ARGNAME_padding_NAMEEND_VAL temp468_13)))
(assert (= temp468_15 #x0000000000000003))
(assert (= temp468_16 temp468_15))
(assert (= temp468_17 (select ARGNAME_padding_NAMEEND_VAL temp468_16)))
(assert (= temp468_18 #x0000000000000004))
(assert (= temp468_19 temp468_18))
(assert (= temp468_20 (select ARGNAME_padding_NAMEEND_VAL temp468_19)))
(assert (= temp468_21 #x0000000000000005))
(assert (= temp468_22 temp468_21))
(assert (= temp468_23 (select ARGNAME_padding_NAMEEND_VAL temp468_22)))
(assert (= temp468_24 #x0000000000000000))
(assert (= temp468_25 #x0000000000000000))
(assert (= temp468_26 temp468_25))
(assert (= temp468_27 (select ARGNAME_padding_NAMEEND_VAL temp468_26)))
(assert (= temp468_28 #x0000000000000000))
(assert (= temp468_29 #x0000000000000001))
(assert (= temp468_30 temp468_29))
(assert (= temp468_31 (select ARGNAME_padding_NAMEEND_VAL temp468_30)))
(assert (= temp468_32 #x0000000000000000))
(assert (= temp468_33 #x0000000000000002))
(assert (= temp468_34 temp468_33))
(assert (= temp468_35 (select ARGNAME_padding_NAMEEND_VAL temp468_34)))
(assert (= temp468_36 #x0000000000000000))
(assert (= temp468_37 #x0000000000000003))
(assert (= temp468_38 temp468_37))
(assert (= temp468_39 (select ARGNAME_padding_NAMEEND_VAL temp468_38)))
(assert (= temp468_40 #x0000000000000000))
(assert (= temp468_41 #x0000000000000004))
(assert (= temp468_42 temp468_41))
(assert (= temp468_43 (select ARGNAME_padding_NAMEEND_VAL temp468_42)))
(assert (= temp468_44 #x0000000000000000))
(assert (= temp468_45 #x0000000000000005))
(assert (= temp468_46 temp468_45))
(assert (= temp468_47 (select ARGNAME_padding_NAMEEND_VAL temp468_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp468_27 temp468_24)
             (bvslt temp468_31 temp468_28)
             (bvslt temp468_35 temp468_32)
             (bvslt temp468_39 temp468_36)
             (bvslt temp468_43 temp468_40)
             (bvslt temp468_47 temp468_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_48 #x0000000000000000))
(assert (= var1322786 temp468_48))
(assert (= temp468_49 #x0000000000000000))
(assert (= temp468_50 temp468_49))
(assert (= temp468_51 (select ARGNAME_output_padding_NAMEEND_VAL temp468_50)))
(assert (= temp468_52 #x0000000000000001))
(assert (= temp468_53 temp468_52))
(assert (= temp468_54 (select ARGNAME_output_padding_NAMEEND_VAL temp468_53)))
(assert (= temp468_55 #x0000000000000002))
(assert (= temp468_56 temp468_55))
(assert (= temp468_57 (select ARGNAME_output_padding_NAMEEND_VAL temp468_56)))
(assert (= temp468_58 #x0000000000000003))
(assert (= temp468_59 temp468_58))
(assert (= temp468_60 (select ARGNAME_output_padding_NAMEEND_VAL temp468_59)))
(assert (= temp468_61 #x0000000000000004))
(assert (= temp468_62 temp468_61))
(assert (= temp468_63 (select ARGNAME_output_padding_NAMEEND_VAL temp468_62)))
(assert (= temp468_64 #x0000000000000005))
(assert (= temp468_65 temp468_64))
(assert (= temp468_66 (select ARGNAME_output_padding_NAMEEND_VAL temp468_65)))
(assert (= temp468_67 #x0000000000000000))
(assert (= temp468_68 #x0000000000000000))
(assert (= temp468_69 temp468_68))
(assert (= temp468_70 (select ARGNAME_output_padding_NAMEEND_VAL temp468_69)))
(assert (= temp468_71 #x0000000000000000))
(assert (= temp468_72 #x0000000000000001))
(assert (= temp468_73 temp468_72))
(assert (= temp468_74 (select ARGNAME_output_padding_NAMEEND_VAL temp468_73)))
(assert (= temp468_75 #x0000000000000000))
(assert (= temp468_76 #x0000000000000002))
(assert (= temp468_77 temp468_76))
(assert (= temp468_78 (select ARGNAME_output_padding_NAMEEND_VAL temp468_77)))
(assert (= temp468_79 #x0000000000000000))
(assert (= temp468_80 #x0000000000000003))
(assert (= temp468_81 temp468_80))
(assert (= temp468_82 (select ARGNAME_output_padding_NAMEEND_VAL temp468_81)))
(assert (= temp468_83 #x0000000000000000))
(assert (= temp468_84 #x0000000000000004))
(assert (= temp468_85 temp468_84))
(assert (= temp468_86 (select ARGNAME_output_padding_NAMEEND_VAL temp468_85)))
(assert (= temp468_87 #x0000000000000000))
(assert (= temp468_88 #x0000000000000005))
(assert (= temp468_89 temp468_88))
(assert (= temp468_90 (select ARGNAME_output_padding_NAMEEND_VAL temp468_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp468_70 temp468_67)
             (bvslt temp468_74 temp468_71)
             (bvslt temp468_78 temp468_75)
             (bvslt temp468_82 temp468_79)
             (bvslt temp468_86 temp468_83)
             (bvslt temp468_90 temp468_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_91 #x0000000000000000))
(assert (= var1322797 temp468_91))
(assert (= temp468_92 #x0000000000000000))
(assert (= temp468_93 temp468_92))
(assert (= temp468_94 (select ARGNAME_stride_NAMEEND_VAL temp468_93)))
(assert (= temp468_95 #x0000000000000001))
(assert (= temp468_96 temp468_95))
(assert (= temp468_97 (select ARGNAME_stride_NAMEEND_VAL temp468_96)))
(assert (= temp468_98 #x0000000000000002))
(assert (= temp468_99 temp468_98))
(assert (= temp468_100 (select ARGNAME_stride_NAMEEND_VAL temp468_99)))
(assert (= temp468_101 #x0000000000000003))
(assert (= temp468_102 temp468_101))
(assert (= temp468_103 (select ARGNAME_stride_NAMEEND_VAL temp468_102)))
(assert (= temp468_104 #x0000000000000004))
(assert (= temp468_105 temp468_104))
(assert (= temp468_106 (select ARGNAME_stride_NAMEEND_VAL temp468_105)))
(assert (= temp468_107 #x0000000000000005))
(assert (= temp468_108 temp468_107))
(assert (= temp468_109 (select ARGNAME_stride_NAMEEND_VAL temp468_108)))
(assert (= temp468_110 #x0000000000000000))
(assert (= temp468_111 #x0000000000000000))
(assert (= temp468_112 temp468_111))
(assert (= temp468_113 (select ARGNAME_stride_NAMEEND_VAL temp468_112)))
(assert (= temp468_114 #x0000000000000000))
(assert (= temp468_115 #x0000000000000001))
(assert (= temp468_116 temp468_115))
(assert (= temp468_117 (select ARGNAME_stride_NAMEEND_VAL temp468_116)))
(assert (= temp468_118 #x0000000000000000))
(assert (= temp468_119 #x0000000000000002))
(assert (= temp468_120 temp468_119))
(assert (= temp468_121 (select ARGNAME_stride_NAMEEND_VAL temp468_120)))
(assert (= temp468_122 #x0000000000000000))
(assert (= temp468_123 #x0000000000000003))
(assert (= temp468_124 temp468_123))
(assert (= temp468_125 (select ARGNAME_stride_NAMEEND_VAL temp468_124)))
(assert (= temp468_126 #x0000000000000000))
(assert (= temp468_127 #x0000000000000004))
(assert (= temp468_128 temp468_127))
(assert (= temp468_129 (select ARGNAME_stride_NAMEEND_VAL temp468_128)))
(assert (= temp468_130 #x0000000000000000))
(assert (= temp468_131 #x0000000000000005))
(assert (= temp468_132 temp468_131))
(assert (= temp468_133 (select ARGNAME_stride_NAMEEND_VAL temp468_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp468_113 temp468_110)
             (bvsle temp468_117 temp468_114)
             (bvsle temp468_121 temp468_118)
             (bvsle temp468_125 temp468_122)
             (bvsle temp468_129 temp468_126)
             (bvsle temp468_133 temp468_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_134 #x0000000000000000))
(assert (= var1322807 temp468_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_135 #x0000000000000001))
(assert (= var1322819 temp468_135))
(assert (= temp468_136 #x0000000000000000))
(assert (= var1310898 temp468_136))
(assert (= temp468_137 #x0000000000000000))
(assert (= temp468_138 temp468_137))
(assert (= temp468_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_138)))
(assert (= temp468_140 #x0000000000000001))
(assert (= temp468_141 temp468_140))
(assert (= temp468_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_141)))
(assert (= temp468_143 #x0000000000000002))
(assert (= temp468_144 temp468_143))
(assert (= temp468_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_144)))
(assert (= temp468_146 #x0000000000000003))
(assert (= temp468_147 temp468_146))
(assert (= temp468_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_147)))
(assert (= temp468_149 #x0000000000000004))
(assert (= temp468_150 temp468_149))
(assert (= temp468_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_150)))
(assert (= temp468_152 #x0000000000000005))
(assert (= temp468_153 temp468_152))
(assert (= temp468_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_153)))
(assert (= temp468_156 var1310898))
(assert (= temp468_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_156)))
(assert (= temp468_155 temp468_157))
(assert (= var1322852
   (ite (bvslt temp468_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_158 #x0000000000000000))
(assert (= var1322852 temp468_158))
(assert (= temp468_159 #x0000000000000000))
(assert (= var1310898 temp468_159))
(assert (= temp468_161 var1310898))
(assert (= temp468_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_161)))
(assert (= temp468_160 temp468_162))
(assert (= var1322874 (bvsmod temp468_160 ARGNAME_groups_NAMEEND)))
(assert (= temp468_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp468_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_164 #x0000000000000001))
(assert (= var1322875 temp468_164))
(assert (= temp468_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp468_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_166 #x0000000000000001))
(assert (= var1322895 temp468_166))
(assert (= temp468_167 #x0000000000000001))
(assert (= var1311786 temp468_167))
(assert (= temp468_168 #x0000000000000000))
(assert (= temp468_169 temp468_168))
(assert (= temp468_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_169)))
(assert (= temp468_171 #x0000000000000001))
(assert (= temp468_172 temp468_171))
(assert (= temp468_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_172)))
(assert (= temp468_174 #x0000000000000002))
(assert (= temp468_175 temp468_174))
(assert (= temp468_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_175)))
(assert (= temp468_177 #x0000000000000003))
(assert (= temp468_178 temp468_177))
(assert (= temp468_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_178)))
(assert (= temp468_180 #x0000000000000004))
(assert (= temp468_181 temp468_180))
(assert (= temp468_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_181)))
(assert (= temp468_183 #x0000000000000005))
(assert (= temp468_184 temp468_183))
(assert (= temp468_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_184)))
(assert (= temp468_186 #x0000000000000000))
(assert (= temp468_187
   (ite (bvslt var1311786 temp468_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp468_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_187)))
(assert (= var1322903 temp468_188))
(assert (bvslt (ite (bvslt var1311786 temp468_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp468_189 #x0000000000000001))
(assert (= var1311786 temp468_189))
(assert (= temp468_191 var1311786))
(assert (= temp468_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_191)))
(assert (= temp468_190 temp468_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp468_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_193 #x0000000000000001))
(assert (= var1322908 temp468_193))
(assert (= temp468_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp468_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_195 #x0000000000000001))
(assert (= var1322975 temp468_195))
(assert (= temp468_196 #x0000000000000000))
(assert (= var1310898 temp468_196))
(assert (= temp468_197 #x0000000000000000))
(assert (= temp468_198 temp468_197))
(assert (= temp468_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp468_198)))
(assert (= temp468_200 #x0000000000000001))
(assert (= temp468_201 temp468_200))
(assert (= temp468_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp468_201)))
(assert (= temp468_203 #x0000000000000002))
(assert (= temp468_204 temp468_203))
(assert (= temp468_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp468_204)))
(assert (= temp468_206 #x0000000000000003))
(assert (= temp468_207 temp468_206))
(assert (= temp468_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp468_207)))
(assert (= temp468_209 #x0000000000000004))
(assert (= temp468_210 temp468_209))
(assert (= temp468_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp468_210)))
(assert (= temp468_212 #x0000000000000005))
(assert (= temp468_213 temp468_212))
(assert (= temp468_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp468_213)))
(assert (= temp468_215 #x0000000000000000))
(assert (= temp468_216
   (ite (bvslt var1310898 temp468_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp468_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp468_216)))
(assert (= var1322977 temp468_217))
(assert (bvslt (ite (bvslt var1310898 temp468_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp468_218 #x0000000000000000))
(assert (= var1310898 temp468_218))
(assert (= temp468_220 var1310898))
(assert (= temp468_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_220)))
(assert (= temp468_219 temp468_221))
(assert (= var1322980
   (ite (= var1322977 temp468_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_222 #x0000000000000001))
(assert (= var1322980 temp468_222))
(assert (= temp468_223 #x0000000000000002))
(assert (= var1848169 temp468_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp468_225 #x0000000000000001))
(assert (= var1323065 temp468_225))
(assert (= temp468_226 #x0000000000000001))
(assert (= var3486735 temp468_226))
(assert (= temp468_227 #x0000000000000001))
(assert (= var3814415 temp468_227))
(assert (= temp468_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp468_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_229 #x0000000000000001))
(assert (= var79986 temp468_229))
(assert (= temp468_230 #x0000000000000001))
(assert (= var80116 temp468_230))
(assert (= var4796905 var80116))
(assert (= temp468_231 #x0000000000000000))
(assert (= var4784306 temp468_231))
(assert (= temp468_232 #x0000000000000000))
(assert (= temp468_233
   (ite (bvslt var4784306 temp468_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp468_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_233)))
(assert (= var4796924 temp468_234))
(assert (bvslt (ite (bvslt var4784306 temp468_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp468_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp468_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_236 #x0000000000000001))
(assert (= var4796925 temp468_236))
(assert (= temp468_237 #x0000000000000000))
(assert (= var4996927 temp468_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp468_238 #x0000000000000002))
(assert (= var5125763 temp468_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_239 #x0000000000000000))
(assert (= var5191324 temp468_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp468_240 #x0000000000000001))
(assert (= var79986 temp468_240))
(model-add temp468_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp468_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp468_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






