(declare-fun temp560_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp560_2 () (_ BitVec 64))
(declare-fun temp560_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp560_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp560_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp560_6 () (_ BitVec 64))
(declare-fun temp560_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp560_8 () (_ BitVec 64))
(declare-fun temp560_9 () (_ BitVec 64))
(declare-fun temp560_10 () (_ BitVec 64))
(declare-fun temp560_11 () (_ BitVec 64))
(declare-fun temp560_12 () (_ BitVec 64))
(declare-fun temp560_13 () (_ BitVec 64))
(declare-fun temp560_14 () (_ BitVec 64))
(declare-fun temp560_15 () (_ BitVec 64))
(declare-fun temp560_16 () (_ BitVec 64))
(declare-fun temp560_17 () (_ BitVec 64))
(declare-fun temp560_18 () (_ BitVec 64))
(declare-fun temp560_19 () (_ BitVec 64))
(declare-fun temp560_20 () (_ BitVec 64))
(declare-fun temp560_21 () (_ BitVec 64))
(declare-fun temp560_22 () (_ BitVec 64))
(declare-fun temp560_23 () (_ BitVec 64))
(declare-fun temp560_24 () (_ BitVec 64))
(declare-fun temp560_25 () (_ BitVec 64))
(declare-fun temp560_26 () (_ BitVec 64))
(declare-fun temp560_27 () (_ BitVec 64))
(declare-fun temp560_28 () (_ BitVec 64))
(declare-fun temp560_29 () (_ BitVec 64))
(declare-fun temp560_30 () (_ BitVec 64))
(declare-fun temp560_31 () (_ BitVec 64))
(declare-fun temp560_32 () (_ BitVec 64))
(declare-fun temp560_33 () (_ BitVec 64))
(declare-fun temp560_34 () (_ BitVec 64))
(declare-fun temp560_35 () (_ BitVec 64))
(declare-fun temp560_36 () (_ BitVec 64))
(declare-fun temp560_37 () (_ BitVec 64))
(declare-fun temp560_38 () (_ BitVec 64))
(declare-fun temp560_39 () (_ BitVec 64))
(declare-fun temp560_40 () (_ BitVec 64))
(declare-fun temp560_41 () (_ BitVec 64))
(declare-fun temp560_42 () (_ BitVec 64))
(declare-fun temp560_43 () (_ BitVec 64))
(declare-fun temp560_44 () (_ BitVec 64))
(declare-fun temp560_45 () (_ BitVec 64))
(declare-fun temp560_46 () (_ BitVec 64))
(declare-fun temp560_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp560_48 () (_ BitVec 64))
(declare-fun temp560_49 () (_ BitVec 64))
(declare-fun temp560_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp560_51 () (_ BitVec 64))
(declare-fun temp560_52 () (_ BitVec 64))
(declare-fun temp560_53 () (_ BitVec 64))
(declare-fun temp560_54 () (_ BitVec 64))
(declare-fun temp560_55 () (_ BitVec 64))
(declare-fun temp560_56 () (_ BitVec 64))
(declare-fun temp560_57 () (_ BitVec 64))
(declare-fun temp560_58 () (_ BitVec 64))
(declare-fun temp560_59 () (_ BitVec 64))
(declare-fun temp560_60 () (_ BitVec 64))
(declare-fun temp560_61 () (_ BitVec 64))
(declare-fun temp560_62 () (_ BitVec 64))
(declare-fun temp560_63 () (_ BitVec 64))
(declare-fun temp560_64 () (_ BitVec 64))
(declare-fun temp560_65 () (_ BitVec 64))
(declare-fun temp560_66 () (_ BitVec 64))
(declare-fun temp560_67 () (_ BitVec 64))
(declare-fun temp560_68 () (_ BitVec 64))
(declare-fun temp560_69 () (_ BitVec 64))
(declare-fun temp560_70 () (_ BitVec 64))
(declare-fun temp560_71 () (_ BitVec 64))
(declare-fun temp560_72 () (_ BitVec 64))
(declare-fun temp560_73 () (_ BitVec 64))
(declare-fun temp560_74 () (_ BitVec 64))
(declare-fun temp560_75 () (_ BitVec 64))
(declare-fun temp560_76 () (_ BitVec 64))
(declare-fun temp560_77 () (_ BitVec 64))
(declare-fun temp560_78 () (_ BitVec 64))
(declare-fun temp560_79 () (_ BitVec 64))
(declare-fun temp560_80 () (_ BitVec 64))
(declare-fun temp560_81 () (_ BitVec 64))
(declare-fun temp560_82 () (_ BitVec 64))
(declare-fun temp560_83 () (_ BitVec 64))
(declare-fun temp560_84 () (_ BitVec 64))
(declare-fun temp560_85 () (_ BitVec 64))
(declare-fun temp560_86 () (_ BitVec 64))
(declare-fun temp560_87 () (_ BitVec 64))
(declare-fun temp560_88 () (_ BitVec 64))
(declare-fun temp560_89 () (_ BitVec 64))
(declare-fun temp560_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp560_91 () (_ BitVec 64))
(declare-fun temp560_92 () (_ BitVec 64))
(declare-fun temp560_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp560_94 () (_ BitVec 64))
(declare-fun temp560_95 () (_ BitVec 64))
(declare-fun temp560_96 () (_ BitVec 64))
(declare-fun temp560_97 () (_ BitVec 64))
(declare-fun temp560_98 () (_ BitVec 64))
(declare-fun temp560_99 () (_ BitVec 64))
(declare-fun temp560_100 () (_ BitVec 64))
(declare-fun temp560_101 () (_ BitVec 64))
(declare-fun temp560_102 () (_ BitVec 64))
(declare-fun temp560_103 () (_ BitVec 64))
(declare-fun temp560_104 () (_ BitVec 64))
(declare-fun temp560_105 () (_ BitVec 64))
(declare-fun temp560_106 () (_ BitVec 64))
(declare-fun temp560_107 () (_ BitVec 64))
(declare-fun temp560_108 () (_ BitVec 64))
(declare-fun temp560_109 () (_ BitVec 64))
(declare-fun temp560_110 () (_ BitVec 64))
(declare-fun temp560_111 () (_ BitVec 64))
(declare-fun temp560_112 () (_ BitVec 64))
(declare-fun temp560_113 () (_ BitVec 64))
(declare-fun temp560_114 () (_ BitVec 64))
(declare-fun temp560_115 () (_ BitVec 64))
(declare-fun temp560_116 () (_ BitVec 64))
(declare-fun temp560_117 () (_ BitVec 64))
(declare-fun temp560_118 () (_ BitVec 64))
(declare-fun temp560_119 () (_ BitVec 64))
(declare-fun temp560_120 () (_ BitVec 64))
(declare-fun temp560_121 () (_ BitVec 64))
(declare-fun temp560_122 () (_ BitVec 64))
(declare-fun temp560_123 () (_ BitVec 64))
(declare-fun temp560_124 () (_ BitVec 64))
(declare-fun temp560_125 () (_ BitVec 64))
(declare-fun temp560_126 () (_ BitVec 64))
(declare-fun temp560_127 () (_ BitVec 64))
(declare-fun temp560_128 () (_ BitVec 64))
(declare-fun temp560_129 () (_ BitVec 64))
(declare-fun temp560_130 () (_ BitVec 64))
(declare-fun temp560_131 () (_ BitVec 64))
(declare-fun temp560_132 () (_ BitVec 64))
(declare-fun temp560_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp560_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp560_135 () (_ BitVec 64))
(declare-fun temp560_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp560_137 () (_ BitVec 64))
(declare-fun temp560_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp560_139 () (_ BitVec 64))
(declare-fun temp560_140 () (_ BitVec 64))
(declare-fun temp560_141 () (_ BitVec 64))
(declare-fun temp560_142 () (_ BitVec 64))
(declare-fun temp560_143 () (_ BitVec 64))
(declare-fun temp560_144 () (_ BitVec 64))
(declare-fun temp560_145 () (_ BitVec 64))
(declare-fun temp560_146 () (_ BitVec 64))
(declare-fun temp560_147 () (_ BitVec 64))
(declare-fun temp560_148 () (_ BitVec 64))
(declare-fun temp560_149 () (_ BitVec 64))
(declare-fun temp560_150 () (_ BitVec 64))
(declare-fun temp560_151 () (_ BitVec 64))
(declare-fun temp560_152 () (_ BitVec 64))
(declare-fun temp560_153 () (_ BitVec 64))
(declare-fun temp560_154 () (_ BitVec 64))
(declare-fun temp560_156 () (_ BitVec 64))
(declare-fun temp560_157 () (_ BitVec 64))
(declare-fun temp560_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp560_158 () (_ BitVec 64))
(declare-fun temp560_159 () (_ BitVec 64))
(declare-fun temp560_161 () (_ BitVec 64))
(declare-fun temp560_162 () (_ BitVec 64))
(declare-fun temp560_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp560_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp560_164 () (_ BitVec 64))
(declare-fun temp560_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp560_166 () (_ BitVec 64))
(declare-fun temp560_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp560_168 () (_ BitVec 64))
(declare-fun temp560_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp560_170 () (_ BitVec 64))
(declare-fun temp560_171 () (_ BitVec 64))
(declare-fun temp560_172 () (_ BitVec 64))
(declare-fun temp560_173 () (_ BitVec 64))
(declare-fun temp560_174 () (_ BitVec 64))
(declare-fun temp560_175 () (_ BitVec 64))
(declare-fun temp560_176 () (_ BitVec 64))
(declare-fun temp560_177 () (_ BitVec 64))
(declare-fun temp560_178 () (_ BitVec 64))
(declare-fun temp560_179 () (_ BitVec 64))
(declare-fun temp560_180 () (_ BitVec 64))
(declare-fun temp560_181 () (_ BitVec 64))
(declare-fun temp560_182 () (_ BitVec 64))
(declare-fun temp560_183 () (_ BitVec 64))
(declare-fun temp560_184 () (_ BitVec 64))
(declare-fun temp560_185 () (_ BitVec 64))
(declare-fun temp560_186 () (_ BitVec 64))
(declare-fun temp560_187 () (_ BitVec 64))
(declare-fun temp560_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp560_189 () (_ BitVec 64))
(declare-fun temp560_191 () (_ BitVec 64))
(declare-fun temp560_192 () (_ BitVec 64))
(declare-fun temp560_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp560_193 () (_ BitVec 64))
(declare-fun temp560_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp560_195 () (_ BitVec 64))
(declare-fun temp560_196 () (_ BitVec 64))
(declare-fun temp560_197 () (_ BitVec 64))
(declare-fun temp560_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp560_199 () (_ BitVec 64))
(declare-fun temp560_200 () (_ BitVec 64))
(declare-fun temp560_201 () (_ BitVec 64))
(declare-fun temp560_202 () (_ BitVec 64))
(declare-fun temp560_203 () (_ BitVec 64))
(declare-fun temp560_204 () (_ BitVec 64))
(declare-fun temp560_205 () (_ BitVec 64))
(declare-fun temp560_206 () (_ BitVec 64))
(declare-fun temp560_207 () (_ BitVec 64))
(declare-fun temp560_208 () (_ BitVec 64))
(declare-fun temp560_209 () (_ BitVec 64))
(declare-fun temp560_210 () (_ BitVec 64))
(declare-fun temp560_211 () (_ BitVec 64))
(declare-fun temp560_212 () (_ BitVec 64))
(declare-fun temp560_213 () (_ BitVec 64))
(declare-fun temp560_214 () (_ BitVec 64))
(declare-fun temp560_215 () (_ BitVec 64))
(declare-fun temp560_216 () (_ BitVec 64))
(declare-fun temp560_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp560_218 () (_ BitVec 64))
(declare-fun temp560_220 () (_ BitVec 64))
(declare-fun temp560_221 () (_ BitVec 64))
(declare-fun temp560_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp560_222 () (_ BitVec 64))
(declare-fun temp560_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp560_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp560_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp560_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp560_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp560_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp560_229 () (_ BitVec 64))
(declare-fun temp560_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp560_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp560_232 () (_ BitVec 64))
(declare-fun temp560_233 () (_ BitVec 64))
(declare-fun temp560_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp560_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp560_236 () (_ BitVec 64))
(declare-fun temp560_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp560_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp560_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp560_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp560_241 () (_ BitVec 64))
(declare-fun temp560_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp560_243 () (_ BitVec 64))
(declare-fun temp560_244 () (_ BitVec 64))
(declare-fun var7746324 () (_ BitVec 64))
(declare-fun var7746291 () (_ BitVec 64))
(declare-fun var7614855 () (_ BitVec 64))
(declare-fun var7614851 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp560_245 () (_ BitVec 64))
(assert (= temp560_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp560_1)))
(assert (= temp560_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp560_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_3 #x0000000000000000))
(assert (= var79869 temp560_3))
(assert (= temp560_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp560_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_5 #x0000000000000000))
(assert (= var79914 temp560_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp560_6 #x0000000000000000))
(assert (= temp560_7 temp560_6))
(assert (= temp560_8 (select ARGNAME_padding_NAMEEND_VAL temp560_7)))
(assert (= temp560_9 #x0000000000000001))
(assert (= temp560_10 temp560_9))
(assert (= temp560_11 (select ARGNAME_padding_NAMEEND_VAL temp560_10)))
(assert (= temp560_12 #x0000000000000002))
(assert (= temp560_13 temp560_12))
(assert (= temp560_14 (select ARGNAME_padding_NAMEEND_VAL temp560_13)))
(assert (= temp560_15 #x0000000000000003))
(assert (= temp560_16 temp560_15))
(assert (= temp560_17 (select ARGNAME_padding_NAMEEND_VAL temp560_16)))
(assert (= temp560_18 #x0000000000000004))
(assert (= temp560_19 temp560_18))
(assert (= temp560_20 (select ARGNAME_padding_NAMEEND_VAL temp560_19)))
(assert (= temp560_21 #x0000000000000005))
(assert (= temp560_22 temp560_21))
(assert (= temp560_23 (select ARGNAME_padding_NAMEEND_VAL temp560_22)))
(assert (= temp560_24 #x0000000000000000))
(assert (= temp560_25 #x0000000000000000))
(assert (= temp560_26 temp560_25))
(assert (= temp560_27 (select ARGNAME_padding_NAMEEND_VAL temp560_26)))
(assert (= temp560_28 #x0000000000000000))
(assert (= temp560_29 #x0000000000000001))
(assert (= temp560_30 temp560_29))
(assert (= temp560_31 (select ARGNAME_padding_NAMEEND_VAL temp560_30)))
(assert (= temp560_32 #x0000000000000000))
(assert (= temp560_33 #x0000000000000002))
(assert (= temp560_34 temp560_33))
(assert (= temp560_35 (select ARGNAME_padding_NAMEEND_VAL temp560_34)))
(assert (= temp560_36 #x0000000000000000))
(assert (= temp560_37 #x0000000000000003))
(assert (= temp560_38 temp560_37))
(assert (= temp560_39 (select ARGNAME_padding_NAMEEND_VAL temp560_38)))
(assert (= temp560_40 #x0000000000000000))
(assert (= temp560_41 #x0000000000000004))
(assert (= temp560_42 temp560_41))
(assert (= temp560_43 (select ARGNAME_padding_NAMEEND_VAL temp560_42)))
(assert (= temp560_44 #x0000000000000000))
(assert (= temp560_45 #x0000000000000005))
(assert (= temp560_46 temp560_45))
(assert (= temp560_47 (select ARGNAME_padding_NAMEEND_VAL temp560_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp560_27 temp560_24)
             (bvslt temp560_31 temp560_28)
             (bvslt temp560_35 temp560_32)
             (bvslt temp560_39 temp560_36)
             (bvslt temp560_43 temp560_40)
             (bvslt temp560_47 temp560_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_48 #x0000000000000000))
(assert (= var1322786 temp560_48))
(assert (= temp560_49 #x0000000000000000))
(assert (= temp560_50 temp560_49))
(assert (= temp560_51 (select ARGNAME_output_padding_NAMEEND_VAL temp560_50)))
(assert (= temp560_52 #x0000000000000001))
(assert (= temp560_53 temp560_52))
(assert (= temp560_54 (select ARGNAME_output_padding_NAMEEND_VAL temp560_53)))
(assert (= temp560_55 #x0000000000000002))
(assert (= temp560_56 temp560_55))
(assert (= temp560_57 (select ARGNAME_output_padding_NAMEEND_VAL temp560_56)))
(assert (= temp560_58 #x0000000000000003))
(assert (= temp560_59 temp560_58))
(assert (= temp560_60 (select ARGNAME_output_padding_NAMEEND_VAL temp560_59)))
(assert (= temp560_61 #x0000000000000004))
(assert (= temp560_62 temp560_61))
(assert (= temp560_63 (select ARGNAME_output_padding_NAMEEND_VAL temp560_62)))
(assert (= temp560_64 #x0000000000000005))
(assert (= temp560_65 temp560_64))
(assert (= temp560_66 (select ARGNAME_output_padding_NAMEEND_VAL temp560_65)))
(assert (= temp560_67 #x0000000000000000))
(assert (= temp560_68 #x0000000000000000))
(assert (= temp560_69 temp560_68))
(assert (= temp560_70 (select ARGNAME_output_padding_NAMEEND_VAL temp560_69)))
(assert (= temp560_71 #x0000000000000000))
(assert (= temp560_72 #x0000000000000001))
(assert (= temp560_73 temp560_72))
(assert (= temp560_74 (select ARGNAME_output_padding_NAMEEND_VAL temp560_73)))
(assert (= temp560_75 #x0000000000000000))
(assert (= temp560_76 #x0000000000000002))
(assert (= temp560_77 temp560_76))
(assert (= temp560_78 (select ARGNAME_output_padding_NAMEEND_VAL temp560_77)))
(assert (= temp560_79 #x0000000000000000))
(assert (= temp560_80 #x0000000000000003))
(assert (= temp560_81 temp560_80))
(assert (= temp560_82 (select ARGNAME_output_padding_NAMEEND_VAL temp560_81)))
(assert (= temp560_83 #x0000000000000000))
(assert (= temp560_84 #x0000000000000004))
(assert (= temp560_85 temp560_84))
(assert (= temp560_86 (select ARGNAME_output_padding_NAMEEND_VAL temp560_85)))
(assert (= temp560_87 #x0000000000000000))
(assert (= temp560_88 #x0000000000000005))
(assert (= temp560_89 temp560_88))
(assert (= temp560_90 (select ARGNAME_output_padding_NAMEEND_VAL temp560_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp560_70 temp560_67)
             (bvslt temp560_74 temp560_71)
             (bvslt temp560_78 temp560_75)
             (bvslt temp560_82 temp560_79)
             (bvslt temp560_86 temp560_83)
             (bvslt temp560_90 temp560_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_91 #x0000000000000000))
(assert (= var1322797 temp560_91))
(assert (= temp560_92 #x0000000000000000))
(assert (= temp560_93 temp560_92))
(assert (= temp560_94 (select ARGNAME_stride_NAMEEND_VAL temp560_93)))
(assert (= temp560_95 #x0000000000000001))
(assert (= temp560_96 temp560_95))
(assert (= temp560_97 (select ARGNAME_stride_NAMEEND_VAL temp560_96)))
(assert (= temp560_98 #x0000000000000002))
(assert (= temp560_99 temp560_98))
(assert (= temp560_100 (select ARGNAME_stride_NAMEEND_VAL temp560_99)))
(assert (= temp560_101 #x0000000000000003))
(assert (= temp560_102 temp560_101))
(assert (= temp560_103 (select ARGNAME_stride_NAMEEND_VAL temp560_102)))
(assert (= temp560_104 #x0000000000000004))
(assert (= temp560_105 temp560_104))
(assert (= temp560_106 (select ARGNAME_stride_NAMEEND_VAL temp560_105)))
(assert (= temp560_107 #x0000000000000005))
(assert (= temp560_108 temp560_107))
(assert (= temp560_109 (select ARGNAME_stride_NAMEEND_VAL temp560_108)))
(assert (= temp560_110 #x0000000000000000))
(assert (= temp560_111 #x0000000000000000))
(assert (= temp560_112 temp560_111))
(assert (= temp560_113 (select ARGNAME_stride_NAMEEND_VAL temp560_112)))
(assert (= temp560_114 #x0000000000000000))
(assert (= temp560_115 #x0000000000000001))
(assert (= temp560_116 temp560_115))
(assert (= temp560_117 (select ARGNAME_stride_NAMEEND_VAL temp560_116)))
(assert (= temp560_118 #x0000000000000000))
(assert (= temp560_119 #x0000000000000002))
(assert (= temp560_120 temp560_119))
(assert (= temp560_121 (select ARGNAME_stride_NAMEEND_VAL temp560_120)))
(assert (= temp560_122 #x0000000000000000))
(assert (= temp560_123 #x0000000000000003))
(assert (= temp560_124 temp560_123))
(assert (= temp560_125 (select ARGNAME_stride_NAMEEND_VAL temp560_124)))
(assert (= temp560_126 #x0000000000000000))
(assert (= temp560_127 #x0000000000000004))
(assert (= temp560_128 temp560_127))
(assert (= temp560_129 (select ARGNAME_stride_NAMEEND_VAL temp560_128)))
(assert (= temp560_130 #x0000000000000000))
(assert (= temp560_131 #x0000000000000005))
(assert (= temp560_132 temp560_131))
(assert (= temp560_133 (select ARGNAME_stride_NAMEEND_VAL temp560_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp560_113 temp560_110)
             (bvsle temp560_117 temp560_114)
             (bvsle temp560_121 temp560_118)
             (bvsle temp560_125 temp560_122)
             (bvsle temp560_129 temp560_126)
             (bvsle temp560_133 temp560_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_134 #x0000000000000000))
(assert (= var1322807 temp560_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_135 #x0000000000000001))
(assert (= var1322819 temp560_135))
(assert (= temp560_136 #x0000000000000000))
(assert (= var1310898 temp560_136))
(assert (= temp560_137 #x0000000000000000))
(assert (= temp560_138 temp560_137))
(assert (= temp560_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_138)))
(assert (= temp560_140 #x0000000000000001))
(assert (= temp560_141 temp560_140))
(assert (= temp560_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_141)))
(assert (= temp560_143 #x0000000000000002))
(assert (= temp560_144 temp560_143))
(assert (= temp560_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_144)))
(assert (= temp560_146 #x0000000000000003))
(assert (= temp560_147 temp560_146))
(assert (= temp560_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_147)))
(assert (= temp560_149 #x0000000000000004))
(assert (= temp560_150 temp560_149))
(assert (= temp560_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_150)))
(assert (= temp560_152 #x0000000000000005))
(assert (= temp560_153 temp560_152))
(assert (= temp560_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_153)))
(assert (= temp560_156 var1310898))
(assert (= temp560_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_156)))
(assert (= temp560_155 temp560_157))
(assert (= var1322852
   (ite (bvslt temp560_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_158 #x0000000000000000))
(assert (= var1322852 temp560_158))
(assert (= temp560_159 #x0000000000000000))
(assert (= var1310898 temp560_159))
(assert (= temp560_161 var1310898))
(assert (= temp560_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_161)))
(assert (= temp560_160 temp560_162))
(assert (= var1322874 (bvsmod temp560_160 ARGNAME_groups_NAMEEND)))
(assert (= temp560_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp560_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp560_164 #x0000000000000001))
(assert (= var1322875 temp560_164))
(assert (= temp560_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp560_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_166 #x0000000000000001))
(assert (= var1322895 temp560_166))
(assert (= temp560_167 #x0000000000000001))
(assert (= var1311786 temp560_167))
(assert (= temp560_168 #x0000000000000000))
(assert (= temp560_169 temp560_168))
(assert (= temp560_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp560_169)))
(assert (= temp560_171 #x0000000000000001))
(assert (= temp560_172 temp560_171))
(assert (= temp560_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp560_172)))
(assert (= temp560_174 #x0000000000000002))
(assert (= temp560_175 temp560_174))
(assert (= temp560_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp560_175)))
(assert (= temp560_177 #x0000000000000003))
(assert (= temp560_178 temp560_177))
(assert (= temp560_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp560_178)))
(assert (= temp560_180 #x0000000000000004))
(assert (= temp560_181 temp560_180))
(assert (= temp560_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp560_181)))
(assert (= temp560_183 #x0000000000000005))
(assert (= temp560_184 temp560_183))
(assert (= temp560_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp560_184)))
(assert (= temp560_186 #x0000000000000000))
(assert (= temp560_187
   (ite (bvslt var1311786 temp560_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp560_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp560_187)))
(assert (= var1322903 temp560_188))
(assert (bvslt (ite (bvslt var1311786 temp560_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp560_189 #x0000000000000001))
(assert (= var1311786 temp560_189))
(assert (= temp560_191 var1311786))
(assert (= temp560_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_191)))
(assert (= temp560_190 temp560_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp560_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp560_193 #x0000000000000001))
(assert (= var1322908 temp560_193))
(assert (= temp560_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp560_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_195 #x0000000000000001))
(assert (= var1322975 temp560_195))
(assert (= temp560_196 #x0000000000000000))
(assert (= var1310898 temp560_196))
(assert (= temp560_197 #x0000000000000000))
(assert (= temp560_198 temp560_197))
(assert (= temp560_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp560_198)))
(assert (= temp560_200 #x0000000000000001))
(assert (= temp560_201 temp560_200))
(assert (= temp560_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp560_201)))
(assert (= temp560_203 #x0000000000000002))
(assert (= temp560_204 temp560_203))
(assert (= temp560_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp560_204)))
(assert (= temp560_206 #x0000000000000003))
(assert (= temp560_207 temp560_206))
(assert (= temp560_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp560_207)))
(assert (= temp560_209 #x0000000000000004))
(assert (= temp560_210 temp560_209))
(assert (= temp560_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp560_210)))
(assert (= temp560_212 #x0000000000000005))
(assert (= temp560_213 temp560_212))
(assert (= temp560_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp560_213)))
(assert (= temp560_215 #x0000000000000000))
(assert (= temp560_216
   (ite (bvslt var1310898 temp560_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp560_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp560_216)))
(assert (= var1322977 temp560_217))
(assert (bvslt (ite (bvslt var1310898 temp560_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp560_218 #x0000000000000000))
(assert (= var1310898 temp560_218))
(assert (= temp560_220 var1310898))
(assert (= temp560_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp560_220)))
(assert (= temp560_219 temp560_221))
(assert (= var1322980
   (ite (= var1322977 temp560_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp560_222 #x0000000000000001))
(assert (= var1322980 temp560_222))
(assert (= temp560_223 #x0000000000000002))
(assert (= var1848169 temp560_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp560_225 #x0000000000000001))
(assert (= var1323065 temp560_225))
(assert (= temp560_226 #x0000000000000001))
(assert (= var3486735 temp560_226))
(assert (= temp560_227 #x0000000000000001))
(assert (= var3814415 temp560_227))
(assert (= temp560_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp560_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_229 #x0000000000000001))
(assert (= var79986 temp560_229))
(assert (= temp560_230 #x0000000000000001))
(assert (= var80116 temp560_230))
(assert (= var4796905 var80116))
(assert (= temp560_231 #x0000000000000000))
(assert (= var4784306 temp560_231))
(assert (= temp560_232 #x0000000000000000))
(assert (= temp560_233
   (ite (bvslt var4784306 temp560_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp560_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp560_233)))
(assert (= var4796924 temp560_234))
(assert (bvslt (ite (bvslt var4784306 temp560_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp560_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp560_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp560_236 #x0000000000000001))
(assert (= var4796925 temp560_236))
(assert (= temp560_237 #x0000000000000000))
(assert (= var4996927 temp560_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp560_238 #x0000000000000002))
(assert (= var5125763 temp560_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_239 #x0000000000000000))
(assert (= var5191324 temp560_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp560_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp560_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp560_241 #x0000000000000000))
(assert (= var81342 temp560_241))
(assert (= temp560_242 #x0000000000000002))
(assert (= var5977731 temp560_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp560_243 #x0000000000000001))
(assert (= var79986 temp560_243))
(assert (= temp560_244 #x0000000000000000))
(assert (= var7746324 temp560_244))
(assert (= var7746291 var7746324))
(assert (= var7614855 var7746291))
(assert (= var7614851 var7614855))
(assert (= var81597 var7614851))
(assert (= temp560_245 #x0000000000000000))
(assert (= var81597 temp560_245))
(model-add temp560_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp560_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp560_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






