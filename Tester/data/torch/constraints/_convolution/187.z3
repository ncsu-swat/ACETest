(declare-fun temp248_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp248_2 () (_ BitVec 64))
(declare-fun temp248_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp248_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp248_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp248_6 () (_ BitVec 64))
(declare-fun temp248_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_8 () (_ BitVec 64))
(declare-fun temp248_9 () (_ BitVec 64))
(declare-fun temp248_10 () (_ BitVec 64))
(declare-fun temp248_11 () (_ BitVec 64))
(declare-fun temp248_12 () (_ BitVec 64))
(declare-fun temp248_13 () (_ BitVec 64))
(declare-fun temp248_14 () (_ BitVec 64))
(declare-fun temp248_15 () (_ BitVec 64))
(declare-fun temp248_16 () (_ BitVec 64))
(declare-fun temp248_17 () (_ BitVec 64))
(declare-fun temp248_18 () (_ BitVec 64))
(declare-fun temp248_19 () (_ BitVec 64))
(declare-fun temp248_20 () (_ BitVec 64))
(declare-fun temp248_21 () (_ BitVec 64))
(declare-fun temp248_22 () (_ BitVec 64))
(declare-fun temp248_23 () (_ BitVec 64))
(declare-fun temp248_24 () (_ BitVec 64))
(declare-fun temp248_25 () (_ BitVec 64))
(declare-fun temp248_26 () (_ BitVec 64))
(declare-fun temp248_27 () (_ BitVec 64))
(declare-fun temp248_28 () (_ BitVec 64))
(declare-fun temp248_29 () (_ BitVec 64))
(declare-fun temp248_30 () (_ BitVec 64))
(declare-fun temp248_31 () (_ BitVec 64))
(declare-fun temp248_32 () (_ BitVec 64))
(declare-fun temp248_33 () (_ BitVec 64))
(declare-fun temp248_34 () (_ BitVec 64))
(declare-fun temp248_35 () (_ BitVec 64))
(declare-fun temp248_36 () (_ BitVec 64))
(declare-fun temp248_37 () (_ BitVec 64))
(declare-fun temp248_38 () (_ BitVec 64))
(declare-fun temp248_39 () (_ BitVec 64))
(declare-fun temp248_40 () (_ BitVec 64))
(declare-fun temp248_41 () (_ BitVec 64))
(declare-fun temp248_42 () (_ BitVec 64))
(declare-fun temp248_43 () (_ BitVec 64))
(declare-fun temp248_44 () (_ BitVec 64))
(declare-fun temp248_45 () (_ BitVec 64))
(declare-fun temp248_46 () (_ BitVec 64))
(declare-fun temp248_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp248_48 () (_ BitVec 64))
(declare-fun temp248_49 () (_ BitVec 64))
(declare-fun temp248_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_51 () (_ BitVec 64))
(declare-fun temp248_52 () (_ BitVec 64))
(declare-fun temp248_53 () (_ BitVec 64))
(declare-fun temp248_54 () (_ BitVec 64))
(declare-fun temp248_55 () (_ BitVec 64))
(declare-fun temp248_56 () (_ BitVec 64))
(declare-fun temp248_57 () (_ BitVec 64))
(declare-fun temp248_58 () (_ BitVec 64))
(declare-fun temp248_59 () (_ BitVec 64))
(declare-fun temp248_60 () (_ BitVec 64))
(declare-fun temp248_61 () (_ BitVec 64))
(declare-fun temp248_62 () (_ BitVec 64))
(declare-fun temp248_63 () (_ BitVec 64))
(declare-fun temp248_64 () (_ BitVec 64))
(declare-fun temp248_65 () (_ BitVec 64))
(declare-fun temp248_66 () (_ BitVec 64))
(declare-fun temp248_67 () (_ BitVec 64))
(declare-fun temp248_68 () (_ BitVec 64))
(declare-fun temp248_69 () (_ BitVec 64))
(declare-fun temp248_70 () (_ BitVec 64))
(declare-fun temp248_71 () (_ BitVec 64))
(declare-fun temp248_72 () (_ BitVec 64))
(declare-fun temp248_73 () (_ BitVec 64))
(declare-fun temp248_74 () (_ BitVec 64))
(declare-fun temp248_75 () (_ BitVec 64))
(declare-fun temp248_76 () (_ BitVec 64))
(declare-fun temp248_77 () (_ BitVec 64))
(declare-fun temp248_78 () (_ BitVec 64))
(declare-fun temp248_79 () (_ BitVec 64))
(declare-fun temp248_80 () (_ BitVec 64))
(declare-fun temp248_81 () (_ BitVec 64))
(declare-fun temp248_82 () (_ BitVec 64))
(declare-fun temp248_83 () (_ BitVec 64))
(declare-fun temp248_84 () (_ BitVec 64))
(declare-fun temp248_85 () (_ BitVec 64))
(declare-fun temp248_86 () (_ BitVec 64))
(declare-fun temp248_87 () (_ BitVec 64))
(declare-fun temp248_88 () (_ BitVec 64))
(declare-fun temp248_89 () (_ BitVec 64))
(declare-fun temp248_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp248_91 () (_ BitVec 64))
(declare-fun temp248_92 () (_ BitVec 64))
(declare-fun temp248_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_94 () (_ BitVec 64))
(declare-fun temp248_95 () (_ BitVec 64))
(declare-fun temp248_96 () (_ BitVec 64))
(declare-fun temp248_97 () (_ BitVec 64))
(declare-fun temp248_98 () (_ BitVec 64))
(declare-fun temp248_99 () (_ BitVec 64))
(declare-fun temp248_100 () (_ BitVec 64))
(declare-fun temp248_101 () (_ BitVec 64))
(declare-fun temp248_102 () (_ BitVec 64))
(declare-fun temp248_103 () (_ BitVec 64))
(declare-fun temp248_104 () (_ BitVec 64))
(declare-fun temp248_105 () (_ BitVec 64))
(declare-fun temp248_106 () (_ BitVec 64))
(declare-fun temp248_107 () (_ BitVec 64))
(declare-fun temp248_108 () (_ BitVec 64))
(declare-fun temp248_109 () (_ BitVec 64))
(declare-fun temp248_110 () (_ BitVec 64))
(declare-fun temp248_111 () (_ BitVec 64))
(declare-fun temp248_112 () (_ BitVec 64))
(declare-fun temp248_113 () (_ BitVec 64))
(declare-fun temp248_114 () (_ BitVec 64))
(declare-fun temp248_115 () (_ BitVec 64))
(declare-fun temp248_116 () (_ BitVec 64))
(declare-fun temp248_117 () (_ BitVec 64))
(declare-fun temp248_118 () (_ BitVec 64))
(declare-fun temp248_119 () (_ BitVec 64))
(declare-fun temp248_120 () (_ BitVec 64))
(declare-fun temp248_121 () (_ BitVec 64))
(declare-fun temp248_122 () (_ BitVec 64))
(declare-fun temp248_123 () (_ BitVec 64))
(declare-fun temp248_124 () (_ BitVec 64))
(declare-fun temp248_125 () (_ BitVec 64))
(declare-fun temp248_126 () (_ BitVec 64))
(declare-fun temp248_127 () (_ BitVec 64))
(declare-fun temp248_128 () (_ BitVec 64))
(declare-fun temp248_129 () (_ BitVec 64))
(declare-fun temp248_130 () (_ BitVec 64))
(declare-fun temp248_131 () (_ BitVec 64))
(declare-fun temp248_132 () (_ BitVec 64))
(declare-fun temp248_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp248_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp248_135 () (_ BitVec 64))
(declare-fun temp248_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp248_137 () (_ BitVec 64))
(declare-fun temp248_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_139 () (_ BitVec 64))
(declare-fun temp248_140 () (_ BitVec 64))
(declare-fun temp248_141 () (_ BitVec 64))
(declare-fun temp248_142 () (_ BitVec 64))
(declare-fun temp248_143 () (_ BitVec 64))
(declare-fun temp248_144 () (_ BitVec 64))
(declare-fun temp248_145 () (_ BitVec 64))
(declare-fun temp248_146 () (_ BitVec 64))
(declare-fun temp248_147 () (_ BitVec 64))
(declare-fun temp248_148 () (_ BitVec 64))
(declare-fun temp248_149 () (_ BitVec 64))
(declare-fun temp248_150 () (_ BitVec 64))
(declare-fun temp248_151 () (_ BitVec 64))
(declare-fun temp248_152 () (_ BitVec 64))
(declare-fun temp248_153 () (_ BitVec 64))
(declare-fun temp248_154 () (_ BitVec 64))
(declare-fun temp248_156 () (_ BitVec 64))
(declare-fun temp248_157 () (_ BitVec 64))
(declare-fun temp248_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp248_158 () (_ BitVec 64))
(declare-fun temp248_159 () (_ BitVec 64))
(declare-fun temp248_161 () (_ BitVec 64))
(declare-fun temp248_162 () (_ BitVec 64))
(declare-fun temp248_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp248_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp248_164 () (_ BitVec 64))
(declare-fun temp248_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp248_166 () (_ BitVec 64))
(declare-fun temp248_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp248_168 () (_ BitVec 64))
(declare-fun temp248_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_170 () (_ BitVec 64))
(declare-fun temp248_171 () (_ BitVec 64))
(declare-fun temp248_172 () (_ BitVec 64))
(declare-fun temp248_173 () (_ BitVec 64))
(declare-fun temp248_174 () (_ BitVec 64))
(declare-fun temp248_175 () (_ BitVec 64))
(declare-fun temp248_176 () (_ BitVec 64))
(declare-fun temp248_177 () (_ BitVec 64))
(declare-fun temp248_178 () (_ BitVec 64))
(declare-fun temp248_179 () (_ BitVec 64))
(declare-fun temp248_180 () (_ BitVec 64))
(declare-fun temp248_181 () (_ BitVec 64))
(declare-fun temp248_182 () (_ BitVec 64))
(declare-fun temp248_183 () (_ BitVec 64))
(declare-fun temp248_184 () (_ BitVec 64))
(declare-fun temp248_185 () (_ BitVec 64))
(declare-fun temp248_186 () (_ BitVec 64))
(declare-fun temp248_187 () (_ BitVec 64))
(declare-fun temp248_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp248_189 () (_ BitVec 64))
(declare-fun temp248_191 () (_ BitVec 64))
(declare-fun temp248_192 () (_ BitVec 64))
(declare-fun temp248_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp248_193 () (_ BitVec 64))
(declare-fun temp248_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp248_195 () (_ BitVec 64))
(declare-fun temp248_196 () (_ BitVec 64))
(declare-fun temp248_197 () (_ BitVec 64))
(declare-fun temp248_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_199 () (_ BitVec 64))
(declare-fun temp248_200 () (_ BitVec 64))
(declare-fun temp248_201 () (_ BitVec 64))
(declare-fun temp248_202 () (_ BitVec 64))
(declare-fun temp248_203 () (_ BitVec 64))
(declare-fun temp248_204 () (_ BitVec 64))
(declare-fun temp248_205 () (_ BitVec 64))
(declare-fun temp248_206 () (_ BitVec 64))
(declare-fun temp248_207 () (_ BitVec 64))
(declare-fun temp248_208 () (_ BitVec 64))
(declare-fun temp248_209 () (_ BitVec 64))
(declare-fun temp248_210 () (_ BitVec 64))
(declare-fun temp248_211 () (_ BitVec 64))
(declare-fun temp248_212 () (_ BitVec 64))
(declare-fun temp248_213 () (_ BitVec 64))
(declare-fun temp248_214 () (_ BitVec 64))
(declare-fun temp248_215 () (_ BitVec 64))
(declare-fun temp248_216 () (_ BitVec 64))
(declare-fun temp248_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp248_218 () (_ BitVec 64))
(declare-fun temp248_220 () (_ BitVec 64))
(declare-fun temp248_221 () (_ BitVec 64))
(declare-fun temp248_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp248_222 () (_ BitVec 64))
(declare-fun temp248_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp248_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp248_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp248_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp248_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp248_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp248_229 () (_ BitVec 64))
(declare-fun temp248_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp248_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp248_232 () (_ BitVec 64))
(declare-fun temp248_233 () (_ BitVec 64))
(declare-fun temp248_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp248_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp248_236 () (_ BitVec 64))
(declare-fun temp248_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp248_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp248_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp248_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80889 () (_ BitVec 64))
(declare-fun temp248_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80891 () (_ BitVec 64))
(declare-fun temp248_242 () (_ BitVec 64))
(declare-fun temp248_243 () (_ BitVec 64))
(declare-fun var7549716 () (_ BitVec 64))
(declare-fun var7549683 () (_ BitVec 64))
(declare-fun var7418247 () (_ BitVec 64))
(declare-fun var7418243 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp248_244 () (_ BitVec 64))
(assert (= temp248_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp248_1)))
(assert (= temp248_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp248_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_3 #x0000000000000000))
(assert (= var79869 temp248_3))
(assert (= temp248_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp248_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_5 #x0000000000000000))
(assert (= var79914 temp248_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp248_6 #x0000000000000000))
(assert (= temp248_7 temp248_6))
(assert (= temp248_8 (select ARGNAME_padding_NAMEEND_VAL temp248_7)))
(assert (= temp248_9 #x0000000000000001))
(assert (= temp248_10 temp248_9))
(assert (= temp248_11 (select ARGNAME_padding_NAMEEND_VAL temp248_10)))
(assert (= temp248_12 #x0000000000000002))
(assert (= temp248_13 temp248_12))
(assert (= temp248_14 (select ARGNAME_padding_NAMEEND_VAL temp248_13)))
(assert (= temp248_15 #x0000000000000003))
(assert (= temp248_16 temp248_15))
(assert (= temp248_17 (select ARGNAME_padding_NAMEEND_VAL temp248_16)))
(assert (= temp248_18 #x0000000000000004))
(assert (= temp248_19 temp248_18))
(assert (= temp248_20 (select ARGNAME_padding_NAMEEND_VAL temp248_19)))
(assert (= temp248_21 #x0000000000000005))
(assert (= temp248_22 temp248_21))
(assert (= temp248_23 (select ARGNAME_padding_NAMEEND_VAL temp248_22)))
(assert (= temp248_24 #x0000000000000000))
(assert (= temp248_25 #x0000000000000000))
(assert (= temp248_26 temp248_25))
(assert (= temp248_27 (select ARGNAME_padding_NAMEEND_VAL temp248_26)))
(assert (= temp248_28 #x0000000000000000))
(assert (= temp248_29 #x0000000000000001))
(assert (= temp248_30 temp248_29))
(assert (= temp248_31 (select ARGNAME_padding_NAMEEND_VAL temp248_30)))
(assert (= temp248_32 #x0000000000000000))
(assert (= temp248_33 #x0000000000000002))
(assert (= temp248_34 temp248_33))
(assert (= temp248_35 (select ARGNAME_padding_NAMEEND_VAL temp248_34)))
(assert (= temp248_36 #x0000000000000000))
(assert (= temp248_37 #x0000000000000003))
(assert (= temp248_38 temp248_37))
(assert (= temp248_39 (select ARGNAME_padding_NAMEEND_VAL temp248_38)))
(assert (= temp248_40 #x0000000000000000))
(assert (= temp248_41 #x0000000000000004))
(assert (= temp248_42 temp248_41))
(assert (= temp248_43 (select ARGNAME_padding_NAMEEND_VAL temp248_42)))
(assert (= temp248_44 #x0000000000000000))
(assert (= temp248_45 #x0000000000000005))
(assert (= temp248_46 temp248_45))
(assert (= temp248_47 (select ARGNAME_padding_NAMEEND_VAL temp248_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp248_27 temp248_24)
             (bvslt temp248_31 temp248_28)
             (bvslt temp248_35 temp248_32)
             (bvslt temp248_39 temp248_36)
             (bvslt temp248_43 temp248_40)
             (bvslt temp248_47 temp248_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_48 #x0000000000000000))
(assert (= var1322786 temp248_48))
(assert (= temp248_49 #x0000000000000000))
(assert (= temp248_50 temp248_49))
(assert (= temp248_51 (select ARGNAME_output_padding_NAMEEND_VAL temp248_50)))
(assert (= temp248_52 #x0000000000000001))
(assert (= temp248_53 temp248_52))
(assert (= temp248_54 (select ARGNAME_output_padding_NAMEEND_VAL temp248_53)))
(assert (= temp248_55 #x0000000000000002))
(assert (= temp248_56 temp248_55))
(assert (= temp248_57 (select ARGNAME_output_padding_NAMEEND_VAL temp248_56)))
(assert (= temp248_58 #x0000000000000003))
(assert (= temp248_59 temp248_58))
(assert (= temp248_60 (select ARGNAME_output_padding_NAMEEND_VAL temp248_59)))
(assert (= temp248_61 #x0000000000000004))
(assert (= temp248_62 temp248_61))
(assert (= temp248_63 (select ARGNAME_output_padding_NAMEEND_VAL temp248_62)))
(assert (= temp248_64 #x0000000000000005))
(assert (= temp248_65 temp248_64))
(assert (= temp248_66 (select ARGNAME_output_padding_NAMEEND_VAL temp248_65)))
(assert (= temp248_67 #x0000000000000000))
(assert (= temp248_68 #x0000000000000000))
(assert (= temp248_69 temp248_68))
(assert (= temp248_70 (select ARGNAME_output_padding_NAMEEND_VAL temp248_69)))
(assert (= temp248_71 #x0000000000000000))
(assert (= temp248_72 #x0000000000000001))
(assert (= temp248_73 temp248_72))
(assert (= temp248_74 (select ARGNAME_output_padding_NAMEEND_VAL temp248_73)))
(assert (= temp248_75 #x0000000000000000))
(assert (= temp248_76 #x0000000000000002))
(assert (= temp248_77 temp248_76))
(assert (= temp248_78 (select ARGNAME_output_padding_NAMEEND_VAL temp248_77)))
(assert (= temp248_79 #x0000000000000000))
(assert (= temp248_80 #x0000000000000003))
(assert (= temp248_81 temp248_80))
(assert (= temp248_82 (select ARGNAME_output_padding_NAMEEND_VAL temp248_81)))
(assert (= temp248_83 #x0000000000000000))
(assert (= temp248_84 #x0000000000000004))
(assert (= temp248_85 temp248_84))
(assert (= temp248_86 (select ARGNAME_output_padding_NAMEEND_VAL temp248_85)))
(assert (= temp248_87 #x0000000000000000))
(assert (= temp248_88 #x0000000000000005))
(assert (= temp248_89 temp248_88))
(assert (= temp248_90 (select ARGNAME_output_padding_NAMEEND_VAL temp248_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp248_70 temp248_67)
             (bvslt temp248_74 temp248_71)
             (bvslt temp248_78 temp248_75)
             (bvslt temp248_82 temp248_79)
             (bvslt temp248_86 temp248_83)
             (bvslt temp248_90 temp248_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_91 #x0000000000000000))
(assert (= var1322797 temp248_91))
(assert (= temp248_92 #x0000000000000000))
(assert (= temp248_93 temp248_92))
(assert (= temp248_94 (select ARGNAME_stride_NAMEEND_VAL temp248_93)))
(assert (= temp248_95 #x0000000000000001))
(assert (= temp248_96 temp248_95))
(assert (= temp248_97 (select ARGNAME_stride_NAMEEND_VAL temp248_96)))
(assert (= temp248_98 #x0000000000000002))
(assert (= temp248_99 temp248_98))
(assert (= temp248_100 (select ARGNAME_stride_NAMEEND_VAL temp248_99)))
(assert (= temp248_101 #x0000000000000003))
(assert (= temp248_102 temp248_101))
(assert (= temp248_103 (select ARGNAME_stride_NAMEEND_VAL temp248_102)))
(assert (= temp248_104 #x0000000000000004))
(assert (= temp248_105 temp248_104))
(assert (= temp248_106 (select ARGNAME_stride_NAMEEND_VAL temp248_105)))
(assert (= temp248_107 #x0000000000000005))
(assert (= temp248_108 temp248_107))
(assert (= temp248_109 (select ARGNAME_stride_NAMEEND_VAL temp248_108)))
(assert (= temp248_110 #x0000000000000000))
(assert (= temp248_111 #x0000000000000000))
(assert (= temp248_112 temp248_111))
(assert (= temp248_113 (select ARGNAME_stride_NAMEEND_VAL temp248_112)))
(assert (= temp248_114 #x0000000000000000))
(assert (= temp248_115 #x0000000000000001))
(assert (= temp248_116 temp248_115))
(assert (= temp248_117 (select ARGNAME_stride_NAMEEND_VAL temp248_116)))
(assert (= temp248_118 #x0000000000000000))
(assert (= temp248_119 #x0000000000000002))
(assert (= temp248_120 temp248_119))
(assert (= temp248_121 (select ARGNAME_stride_NAMEEND_VAL temp248_120)))
(assert (= temp248_122 #x0000000000000000))
(assert (= temp248_123 #x0000000000000003))
(assert (= temp248_124 temp248_123))
(assert (= temp248_125 (select ARGNAME_stride_NAMEEND_VAL temp248_124)))
(assert (= temp248_126 #x0000000000000000))
(assert (= temp248_127 #x0000000000000004))
(assert (= temp248_128 temp248_127))
(assert (= temp248_129 (select ARGNAME_stride_NAMEEND_VAL temp248_128)))
(assert (= temp248_130 #x0000000000000000))
(assert (= temp248_131 #x0000000000000005))
(assert (= temp248_132 temp248_131))
(assert (= temp248_133 (select ARGNAME_stride_NAMEEND_VAL temp248_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp248_113 temp248_110)
             (bvsle temp248_117 temp248_114)
             (bvsle temp248_121 temp248_118)
             (bvsle temp248_125 temp248_122)
             (bvsle temp248_129 temp248_126)
             (bvsle temp248_133 temp248_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_134 #x0000000000000000))
(assert (= var1322807 temp248_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_135 #x0000000000000001))
(assert (= var1322819 temp248_135))
(assert (= temp248_136 #x0000000000000000))
(assert (= var1310898 temp248_136))
(assert (= temp248_137 #x0000000000000000))
(assert (= temp248_138 temp248_137))
(assert (= temp248_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_138)))
(assert (= temp248_140 #x0000000000000001))
(assert (= temp248_141 temp248_140))
(assert (= temp248_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_141)))
(assert (= temp248_143 #x0000000000000002))
(assert (= temp248_144 temp248_143))
(assert (= temp248_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_144)))
(assert (= temp248_146 #x0000000000000003))
(assert (= temp248_147 temp248_146))
(assert (= temp248_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_147)))
(assert (= temp248_149 #x0000000000000004))
(assert (= temp248_150 temp248_149))
(assert (= temp248_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_150)))
(assert (= temp248_152 #x0000000000000005))
(assert (= temp248_153 temp248_152))
(assert (= temp248_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_153)))
(assert (= temp248_156 var1310898))
(assert (= temp248_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_156)))
(assert (= temp248_155 temp248_157))
(assert (= var1322852
   (ite (bvslt temp248_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_158 #x0000000000000000))
(assert (= var1322852 temp248_158))
(assert (= temp248_159 #x0000000000000000))
(assert (= var1310898 temp248_159))
(assert (= temp248_161 var1310898))
(assert (= temp248_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_161)))
(assert (= temp248_160 temp248_162))
(assert (= var1322874 (bvsmod temp248_160 ARGNAME_groups_NAMEEND)))
(assert (= temp248_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp248_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp248_164 #x0000000000000001))
(assert (= var1322875 temp248_164))
(assert (= temp248_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp248_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_166 #x0000000000000001))
(assert (= var1322895 temp248_166))
(assert (= temp248_167 #x0000000000000001))
(assert (= var1311786 temp248_167))
(assert (= temp248_168 #x0000000000000000))
(assert (= temp248_169 temp248_168))
(assert (= temp248_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_169)))
(assert (= temp248_171 #x0000000000000001))
(assert (= temp248_172 temp248_171))
(assert (= temp248_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_172)))
(assert (= temp248_174 #x0000000000000002))
(assert (= temp248_175 temp248_174))
(assert (= temp248_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_175)))
(assert (= temp248_177 #x0000000000000003))
(assert (= temp248_178 temp248_177))
(assert (= temp248_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_178)))
(assert (= temp248_180 #x0000000000000004))
(assert (= temp248_181 temp248_180))
(assert (= temp248_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_181)))
(assert (= temp248_183 #x0000000000000005))
(assert (= temp248_184 temp248_183))
(assert (= temp248_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_184)))
(assert (= temp248_186 #x0000000000000000))
(assert (= temp248_187
   (ite (bvslt var1311786 temp248_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp248_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_187)))
(assert (= var1322903 temp248_188))
(assert (bvslt (ite (bvslt var1311786 temp248_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp248_189 #x0000000000000001))
(assert (= var1311786 temp248_189))
(assert (= temp248_191 var1311786))
(assert (= temp248_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_191)))
(assert (= temp248_190 temp248_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp248_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp248_193 #x0000000000000001))
(assert (= var1322908 temp248_193))
(assert (= temp248_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp248_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_195 #x0000000000000001))
(assert (= var1322975 temp248_195))
(assert (= temp248_196 #x0000000000000000))
(assert (= var1310898 temp248_196))
(assert (= temp248_197 #x0000000000000000))
(assert (= temp248_198 temp248_197))
(assert (= temp248_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp248_198)))
(assert (= temp248_200 #x0000000000000001))
(assert (= temp248_201 temp248_200))
(assert (= temp248_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp248_201)))
(assert (= temp248_203 #x0000000000000002))
(assert (= temp248_204 temp248_203))
(assert (= temp248_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp248_204)))
(assert (= temp248_206 #x0000000000000003))
(assert (= temp248_207 temp248_206))
(assert (= temp248_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp248_207)))
(assert (= temp248_209 #x0000000000000004))
(assert (= temp248_210 temp248_209))
(assert (= temp248_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp248_210)))
(assert (= temp248_212 #x0000000000000005))
(assert (= temp248_213 temp248_212))
(assert (= temp248_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp248_213)))
(assert (= temp248_215 #x0000000000000000))
(assert (= temp248_216
   (ite (bvslt var1310898 temp248_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp248_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp248_216)))
(assert (= var1322977 temp248_217))
(assert (bvslt (ite (bvslt var1310898 temp248_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp248_218 #x0000000000000000))
(assert (= var1310898 temp248_218))
(assert (= temp248_220 var1310898))
(assert (= temp248_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_220)))
(assert (= temp248_219 temp248_221))
(assert (= var1322980
   (ite (= var1322977 temp248_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp248_222 #x0000000000000001))
(assert (= var1322980 temp248_222))
(assert (= temp248_223 #x0000000000000002))
(assert (= var1848169 temp248_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp248_225 #x0000000000000001))
(assert (= var1323065 temp248_225))
(assert (= temp248_226 #x0000000000000001))
(assert (= var3486735 temp248_226))
(assert (= temp248_227 #x0000000000000001))
(assert (= var3814415 temp248_227))
(assert (= temp248_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp248_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_229 #x0000000000000001))
(assert (= var79986 temp248_229))
(assert (= temp248_230 #x0000000000000001))
(assert (= var80116 temp248_230))
(assert (= var4796905 var80116))
(assert (= temp248_231 #x0000000000000000))
(assert (= var4784306 temp248_231))
(assert (= temp248_232 #x0000000000000000))
(assert (= temp248_233
   (ite (bvslt var4784306 temp248_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp248_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_233)))
(assert (= var4796924 temp248_234))
(assert (bvslt (ite (bvslt var4784306 temp248_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp248_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp248_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp248_236 #x0000000000000001))
(assert (= var4796925 temp248_236))
(assert (= temp248_237 #x0000000000000000))
(assert (= var4996927 temp248_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp248_238 #x0000000000000002))
(assert (= var5125763 temp248_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_239 #x0000000000000000))
(assert (= var5191324 temp248_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp248_240 #x0000000000000000))
(assert (= var80889
   (ite (distinct ARGNAME_benchmark_NAMEEND temp248_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_241 #x0000000000000000))
(assert (= var80891
   (ite (distinct ARGNAME_deterministic_NAMEEND temp248_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_242 #x0000000000000001))
(assert (= var79986 temp248_242))
(assert (= temp248_243 #x0000000000000000))
(assert (= var7549716 temp248_243))
(assert (= var7549683 var7549716))
(assert (= var7418247 var7549683))
(assert (= var7418243 var7418247))
(assert (= var81597 var7418243))
(assert (= temp248_244 #x0000000000000000))
(assert (= var81597 temp248_244))
(model-add temp248_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp248_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp248_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






