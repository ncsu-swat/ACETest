(declare-fun temp348_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp348_2 () (_ BitVec 64))
(declare-fun temp348_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp348_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp348_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp348_6 () (_ BitVec 64))
(declare-fun temp348_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp348_8 () (_ BitVec 64))
(declare-fun temp348_9 () (_ BitVec 64))
(declare-fun temp348_10 () (_ BitVec 64))
(declare-fun temp348_11 () (_ BitVec 64))
(declare-fun temp348_12 () (_ BitVec 64))
(declare-fun temp348_13 () (_ BitVec 64))
(declare-fun temp348_14 () (_ BitVec 64))
(declare-fun temp348_15 () (_ BitVec 64))
(declare-fun temp348_16 () (_ BitVec 64))
(declare-fun temp348_17 () (_ BitVec 64))
(declare-fun temp348_18 () (_ BitVec 64))
(declare-fun temp348_19 () (_ BitVec 64))
(declare-fun temp348_20 () (_ BitVec 64))
(declare-fun temp348_21 () (_ BitVec 64))
(declare-fun temp348_22 () (_ BitVec 64))
(declare-fun temp348_23 () (_ BitVec 64))
(declare-fun temp348_24 () (_ BitVec 64))
(declare-fun temp348_25 () (_ BitVec 64))
(declare-fun temp348_26 () (_ BitVec 64))
(declare-fun temp348_27 () (_ BitVec 64))
(declare-fun temp348_28 () (_ BitVec 64))
(declare-fun temp348_29 () (_ BitVec 64))
(declare-fun temp348_30 () (_ BitVec 64))
(declare-fun temp348_31 () (_ BitVec 64))
(declare-fun temp348_32 () (_ BitVec 64))
(declare-fun temp348_33 () (_ BitVec 64))
(declare-fun temp348_34 () (_ BitVec 64))
(declare-fun temp348_35 () (_ BitVec 64))
(declare-fun temp348_36 () (_ BitVec 64))
(declare-fun temp348_37 () (_ BitVec 64))
(declare-fun temp348_38 () (_ BitVec 64))
(declare-fun temp348_39 () (_ BitVec 64))
(declare-fun temp348_40 () (_ BitVec 64))
(declare-fun temp348_41 () (_ BitVec 64))
(declare-fun temp348_42 () (_ BitVec 64))
(declare-fun temp348_43 () (_ BitVec 64))
(declare-fun temp348_44 () (_ BitVec 64))
(declare-fun temp348_45 () (_ BitVec 64))
(declare-fun temp348_46 () (_ BitVec 64))
(declare-fun temp348_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp348_48 () (_ BitVec 64))
(declare-fun temp348_49 () (_ BitVec 64))
(declare-fun temp348_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp348_51 () (_ BitVec 64))
(declare-fun temp348_52 () (_ BitVec 64))
(declare-fun temp348_53 () (_ BitVec 64))
(declare-fun temp348_54 () (_ BitVec 64))
(declare-fun temp348_55 () (_ BitVec 64))
(declare-fun temp348_56 () (_ BitVec 64))
(declare-fun temp348_57 () (_ BitVec 64))
(declare-fun temp348_58 () (_ BitVec 64))
(declare-fun temp348_59 () (_ BitVec 64))
(declare-fun temp348_60 () (_ BitVec 64))
(declare-fun temp348_61 () (_ BitVec 64))
(declare-fun temp348_62 () (_ BitVec 64))
(declare-fun temp348_63 () (_ BitVec 64))
(declare-fun temp348_64 () (_ BitVec 64))
(declare-fun temp348_65 () (_ BitVec 64))
(declare-fun temp348_66 () (_ BitVec 64))
(declare-fun temp348_67 () (_ BitVec 64))
(declare-fun temp348_68 () (_ BitVec 64))
(declare-fun temp348_69 () (_ BitVec 64))
(declare-fun temp348_70 () (_ BitVec 64))
(declare-fun temp348_71 () (_ BitVec 64))
(declare-fun temp348_72 () (_ BitVec 64))
(declare-fun temp348_73 () (_ BitVec 64))
(declare-fun temp348_74 () (_ BitVec 64))
(declare-fun temp348_75 () (_ BitVec 64))
(declare-fun temp348_76 () (_ BitVec 64))
(declare-fun temp348_77 () (_ BitVec 64))
(declare-fun temp348_78 () (_ BitVec 64))
(declare-fun temp348_79 () (_ BitVec 64))
(declare-fun temp348_80 () (_ BitVec 64))
(declare-fun temp348_81 () (_ BitVec 64))
(declare-fun temp348_82 () (_ BitVec 64))
(declare-fun temp348_83 () (_ BitVec 64))
(declare-fun temp348_84 () (_ BitVec 64))
(declare-fun temp348_85 () (_ BitVec 64))
(declare-fun temp348_86 () (_ BitVec 64))
(declare-fun temp348_87 () (_ BitVec 64))
(declare-fun temp348_88 () (_ BitVec 64))
(declare-fun temp348_89 () (_ BitVec 64))
(declare-fun temp348_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp348_91 () (_ BitVec 64))
(declare-fun temp348_92 () (_ BitVec 64))
(declare-fun temp348_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp348_94 () (_ BitVec 64))
(declare-fun temp348_95 () (_ BitVec 64))
(declare-fun temp348_96 () (_ BitVec 64))
(declare-fun temp348_97 () (_ BitVec 64))
(declare-fun temp348_98 () (_ BitVec 64))
(declare-fun temp348_99 () (_ BitVec 64))
(declare-fun temp348_100 () (_ BitVec 64))
(declare-fun temp348_101 () (_ BitVec 64))
(declare-fun temp348_102 () (_ BitVec 64))
(declare-fun temp348_103 () (_ BitVec 64))
(declare-fun temp348_104 () (_ BitVec 64))
(declare-fun temp348_105 () (_ BitVec 64))
(declare-fun temp348_106 () (_ BitVec 64))
(declare-fun temp348_107 () (_ BitVec 64))
(declare-fun temp348_108 () (_ BitVec 64))
(declare-fun temp348_109 () (_ BitVec 64))
(declare-fun temp348_110 () (_ BitVec 64))
(declare-fun temp348_111 () (_ BitVec 64))
(declare-fun temp348_112 () (_ BitVec 64))
(declare-fun temp348_113 () (_ BitVec 64))
(declare-fun temp348_114 () (_ BitVec 64))
(declare-fun temp348_115 () (_ BitVec 64))
(declare-fun temp348_116 () (_ BitVec 64))
(declare-fun temp348_117 () (_ BitVec 64))
(declare-fun temp348_118 () (_ BitVec 64))
(declare-fun temp348_119 () (_ BitVec 64))
(declare-fun temp348_120 () (_ BitVec 64))
(declare-fun temp348_121 () (_ BitVec 64))
(declare-fun temp348_122 () (_ BitVec 64))
(declare-fun temp348_123 () (_ BitVec 64))
(declare-fun temp348_124 () (_ BitVec 64))
(declare-fun temp348_125 () (_ BitVec 64))
(declare-fun temp348_126 () (_ BitVec 64))
(declare-fun temp348_127 () (_ BitVec 64))
(declare-fun temp348_128 () (_ BitVec 64))
(declare-fun temp348_129 () (_ BitVec 64))
(declare-fun temp348_130 () (_ BitVec 64))
(declare-fun temp348_131 () (_ BitVec 64))
(declare-fun temp348_132 () (_ BitVec 64))
(declare-fun temp348_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp348_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp348_135 () (_ BitVec 64))
(declare-fun temp348_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp348_137 () (_ BitVec 64))
(declare-fun temp348_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp348_139 () (_ BitVec 64))
(declare-fun temp348_140 () (_ BitVec 64))
(declare-fun temp348_141 () (_ BitVec 64))
(declare-fun temp348_142 () (_ BitVec 64))
(declare-fun temp348_143 () (_ BitVec 64))
(declare-fun temp348_144 () (_ BitVec 64))
(declare-fun temp348_145 () (_ BitVec 64))
(declare-fun temp348_146 () (_ BitVec 64))
(declare-fun temp348_147 () (_ BitVec 64))
(declare-fun temp348_148 () (_ BitVec 64))
(declare-fun temp348_149 () (_ BitVec 64))
(declare-fun temp348_150 () (_ BitVec 64))
(declare-fun temp348_151 () (_ BitVec 64))
(declare-fun temp348_152 () (_ BitVec 64))
(declare-fun temp348_153 () (_ BitVec 64))
(declare-fun temp348_154 () (_ BitVec 64))
(declare-fun temp348_156 () (_ BitVec 64))
(declare-fun temp348_157 () (_ BitVec 64))
(declare-fun temp348_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp348_158 () (_ BitVec 64))
(declare-fun temp348_159 () (_ BitVec 64))
(declare-fun temp348_161 () (_ BitVec 64))
(declare-fun temp348_162 () (_ BitVec 64))
(declare-fun temp348_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp348_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp348_164 () (_ BitVec 64))
(declare-fun temp348_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp348_166 () (_ BitVec 64))
(declare-fun temp348_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp348_168 () (_ BitVec 64))
(declare-fun temp348_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp348_170 () (_ BitVec 64))
(declare-fun temp348_171 () (_ BitVec 64))
(declare-fun temp348_172 () (_ BitVec 64))
(declare-fun temp348_173 () (_ BitVec 64))
(declare-fun temp348_174 () (_ BitVec 64))
(declare-fun temp348_175 () (_ BitVec 64))
(declare-fun temp348_176 () (_ BitVec 64))
(declare-fun temp348_177 () (_ BitVec 64))
(declare-fun temp348_178 () (_ BitVec 64))
(declare-fun temp348_179 () (_ BitVec 64))
(declare-fun temp348_180 () (_ BitVec 64))
(declare-fun temp348_181 () (_ BitVec 64))
(declare-fun temp348_182 () (_ BitVec 64))
(declare-fun temp348_183 () (_ BitVec 64))
(declare-fun temp348_184 () (_ BitVec 64))
(declare-fun temp348_185 () (_ BitVec 64))
(declare-fun temp348_186 () (_ BitVec 64))
(declare-fun temp348_187 () (_ BitVec 64))
(declare-fun temp348_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp348_189 () (_ BitVec 64))
(declare-fun temp348_191 () (_ BitVec 64))
(declare-fun temp348_192 () (_ BitVec 64))
(declare-fun temp348_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp348_193 () (_ BitVec 64))
(declare-fun temp348_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp348_195 () (_ BitVec 64))
(declare-fun temp348_196 () (_ BitVec 64))
(declare-fun temp348_197 () (_ BitVec 64))
(declare-fun temp348_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp348_199 () (_ BitVec 64))
(declare-fun temp348_200 () (_ BitVec 64))
(declare-fun temp348_201 () (_ BitVec 64))
(declare-fun temp348_202 () (_ BitVec 64))
(declare-fun temp348_203 () (_ BitVec 64))
(declare-fun temp348_204 () (_ BitVec 64))
(declare-fun temp348_205 () (_ BitVec 64))
(declare-fun temp348_206 () (_ BitVec 64))
(declare-fun temp348_207 () (_ BitVec 64))
(declare-fun temp348_208 () (_ BitVec 64))
(declare-fun temp348_209 () (_ BitVec 64))
(declare-fun temp348_210 () (_ BitVec 64))
(declare-fun temp348_211 () (_ BitVec 64))
(declare-fun temp348_212 () (_ BitVec 64))
(declare-fun temp348_213 () (_ BitVec 64))
(declare-fun temp348_214 () (_ BitVec 64))
(declare-fun temp348_215 () (_ BitVec 64))
(declare-fun temp348_216 () (_ BitVec 64))
(declare-fun temp348_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp348_218 () (_ BitVec 64))
(declare-fun temp348_220 () (_ BitVec 64))
(declare-fun temp348_221 () (_ BitVec 64))
(declare-fun temp348_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp348_222 () (_ BitVec 64))
(declare-fun temp348_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp348_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp348_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp348_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp348_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp348_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp348_229 () (_ BitVec 64))
(declare-fun temp348_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp348_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp348_232 () (_ BitVec 64))
(declare-fun temp348_233 () (_ BitVec 64))
(declare-fun temp348_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp348_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp348_236 () (_ BitVec 64))
(declare-fun temp348_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp348_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp348_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun temp348_240 () (_ BitVec 64))
(assert (= temp348_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp348_1)))
(assert (= temp348_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp348_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_3 #x0000000000000000))
(assert (= var79869 temp348_3))
(assert (= temp348_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp348_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_5 #x0000000000000000))
(assert (= var79914 temp348_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp348_6 #x0000000000000000))
(assert (= temp348_7 temp348_6))
(assert (= temp348_8 (select ARGNAME_padding_NAMEEND_VAL temp348_7)))
(assert (= temp348_9 #x0000000000000001))
(assert (= temp348_10 temp348_9))
(assert (= temp348_11 (select ARGNAME_padding_NAMEEND_VAL temp348_10)))
(assert (= temp348_12 #x0000000000000002))
(assert (= temp348_13 temp348_12))
(assert (= temp348_14 (select ARGNAME_padding_NAMEEND_VAL temp348_13)))
(assert (= temp348_15 #x0000000000000003))
(assert (= temp348_16 temp348_15))
(assert (= temp348_17 (select ARGNAME_padding_NAMEEND_VAL temp348_16)))
(assert (= temp348_18 #x0000000000000004))
(assert (= temp348_19 temp348_18))
(assert (= temp348_20 (select ARGNAME_padding_NAMEEND_VAL temp348_19)))
(assert (= temp348_21 #x0000000000000005))
(assert (= temp348_22 temp348_21))
(assert (= temp348_23 (select ARGNAME_padding_NAMEEND_VAL temp348_22)))
(assert (= temp348_24 #x0000000000000000))
(assert (= temp348_25 #x0000000000000000))
(assert (= temp348_26 temp348_25))
(assert (= temp348_27 (select ARGNAME_padding_NAMEEND_VAL temp348_26)))
(assert (= temp348_28 #x0000000000000000))
(assert (= temp348_29 #x0000000000000001))
(assert (= temp348_30 temp348_29))
(assert (= temp348_31 (select ARGNAME_padding_NAMEEND_VAL temp348_30)))
(assert (= temp348_32 #x0000000000000000))
(assert (= temp348_33 #x0000000000000002))
(assert (= temp348_34 temp348_33))
(assert (= temp348_35 (select ARGNAME_padding_NAMEEND_VAL temp348_34)))
(assert (= temp348_36 #x0000000000000000))
(assert (= temp348_37 #x0000000000000003))
(assert (= temp348_38 temp348_37))
(assert (= temp348_39 (select ARGNAME_padding_NAMEEND_VAL temp348_38)))
(assert (= temp348_40 #x0000000000000000))
(assert (= temp348_41 #x0000000000000004))
(assert (= temp348_42 temp348_41))
(assert (= temp348_43 (select ARGNAME_padding_NAMEEND_VAL temp348_42)))
(assert (= temp348_44 #x0000000000000000))
(assert (= temp348_45 #x0000000000000005))
(assert (= temp348_46 temp348_45))
(assert (= temp348_47 (select ARGNAME_padding_NAMEEND_VAL temp348_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp348_27 temp348_24)
             (bvslt temp348_31 temp348_28)
             (bvslt temp348_35 temp348_32)
             (bvslt temp348_39 temp348_36)
             (bvslt temp348_43 temp348_40)
             (bvslt temp348_47 temp348_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_48 #x0000000000000000))
(assert (= var1322786 temp348_48))
(assert (= temp348_49 #x0000000000000000))
(assert (= temp348_50 temp348_49))
(assert (= temp348_51 (select ARGNAME_output_padding_NAMEEND_VAL temp348_50)))
(assert (= temp348_52 #x0000000000000001))
(assert (= temp348_53 temp348_52))
(assert (= temp348_54 (select ARGNAME_output_padding_NAMEEND_VAL temp348_53)))
(assert (= temp348_55 #x0000000000000002))
(assert (= temp348_56 temp348_55))
(assert (= temp348_57 (select ARGNAME_output_padding_NAMEEND_VAL temp348_56)))
(assert (= temp348_58 #x0000000000000003))
(assert (= temp348_59 temp348_58))
(assert (= temp348_60 (select ARGNAME_output_padding_NAMEEND_VAL temp348_59)))
(assert (= temp348_61 #x0000000000000004))
(assert (= temp348_62 temp348_61))
(assert (= temp348_63 (select ARGNAME_output_padding_NAMEEND_VAL temp348_62)))
(assert (= temp348_64 #x0000000000000005))
(assert (= temp348_65 temp348_64))
(assert (= temp348_66 (select ARGNAME_output_padding_NAMEEND_VAL temp348_65)))
(assert (= temp348_67 #x0000000000000000))
(assert (= temp348_68 #x0000000000000000))
(assert (= temp348_69 temp348_68))
(assert (= temp348_70 (select ARGNAME_output_padding_NAMEEND_VAL temp348_69)))
(assert (= temp348_71 #x0000000000000000))
(assert (= temp348_72 #x0000000000000001))
(assert (= temp348_73 temp348_72))
(assert (= temp348_74 (select ARGNAME_output_padding_NAMEEND_VAL temp348_73)))
(assert (= temp348_75 #x0000000000000000))
(assert (= temp348_76 #x0000000000000002))
(assert (= temp348_77 temp348_76))
(assert (= temp348_78 (select ARGNAME_output_padding_NAMEEND_VAL temp348_77)))
(assert (= temp348_79 #x0000000000000000))
(assert (= temp348_80 #x0000000000000003))
(assert (= temp348_81 temp348_80))
(assert (= temp348_82 (select ARGNAME_output_padding_NAMEEND_VAL temp348_81)))
(assert (= temp348_83 #x0000000000000000))
(assert (= temp348_84 #x0000000000000004))
(assert (= temp348_85 temp348_84))
(assert (= temp348_86 (select ARGNAME_output_padding_NAMEEND_VAL temp348_85)))
(assert (= temp348_87 #x0000000000000000))
(assert (= temp348_88 #x0000000000000005))
(assert (= temp348_89 temp348_88))
(assert (= temp348_90 (select ARGNAME_output_padding_NAMEEND_VAL temp348_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp348_70 temp348_67)
             (bvslt temp348_74 temp348_71)
             (bvslt temp348_78 temp348_75)
             (bvslt temp348_82 temp348_79)
             (bvslt temp348_86 temp348_83)
             (bvslt temp348_90 temp348_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_91 #x0000000000000000))
(assert (= var1322797 temp348_91))
(assert (= temp348_92 #x0000000000000000))
(assert (= temp348_93 temp348_92))
(assert (= temp348_94 (select ARGNAME_stride_NAMEEND_VAL temp348_93)))
(assert (= temp348_95 #x0000000000000001))
(assert (= temp348_96 temp348_95))
(assert (= temp348_97 (select ARGNAME_stride_NAMEEND_VAL temp348_96)))
(assert (= temp348_98 #x0000000000000002))
(assert (= temp348_99 temp348_98))
(assert (= temp348_100 (select ARGNAME_stride_NAMEEND_VAL temp348_99)))
(assert (= temp348_101 #x0000000000000003))
(assert (= temp348_102 temp348_101))
(assert (= temp348_103 (select ARGNAME_stride_NAMEEND_VAL temp348_102)))
(assert (= temp348_104 #x0000000000000004))
(assert (= temp348_105 temp348_104))
(assert (= temp348_106 (select ARGNAME_stride_NAMEEND_VAL temp348_105)))
(assert (= temp348_107 #x0000000000000005))
(assert (= temp348_108 temp348_107))
(assert (= temp348_109 (select ARGNAME_stride_NAMEEND_VAL temp348_108)))
(assert (= temp348_110 #x0000000000000000))
(assert (= temp348_111 #x0000000000000000))
(assert (= temp348_112 temp348_111))
(assert (= temp348_113 (select ARGNAME_stride_NAMEEND_VAL temp348_112)))
(assert (= temp348_114 #x0000000000000000))
(assert (= temp348_115 #x0000000000000001))
(assert (= temp348_116 temp348_115))
(assert (= temp348_117 (select ARGNAME_stride_NAMEEND_VAL temp348_116)))
(assert (= temp348_118 #x0000000000000000))
(assert (= temp348_119 #x0000000000000002))
(assert (= temp348_120 temp348_119))
(assert (= temp348_121 (select ARGNAME_stride_NAMEEND_VAL temp348_120)))
(assert (= temp348_122 #x0000000000000000))
(assert (= temp348_123 #x0000000000000003))
(assert (= temp348_124 temp348_123))
(assert (= temp348_125 (select ARGNAME_stride_NAMEEND_VAL temp348_124)))
(assert (= temp348_126 #x0000000000000000))
(assert (= temp348_127 #x0000000000000004))
(assert (= temp348_128 temp348_127))
(assert (= temp348_129 (select ARGNAME_stride_NAMEEND_VAL temp348_128)))
(assert (= temp348_130 #x0000000000000000))
(assert (= temp348_131 #x0000000000000005))
(assert (= temp348_132 temp348_131))
(assert (= temp348_133 (select ARGNAME_stride_NAMEEND_VAL temp348_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp348_113 temp348_110)
             (bvsle temp348_117 temp348_114)
             (bvsle temp348_121 temp348_118)
             (bvsle temp348_125 temp348_122)
             (bvsle temp348_129 temp348_126)
             (bvsle temp348_133 temp348_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_134 #x0000000000000000))
(assert (= var1322807 temp348_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_135 #x0000000000000001))
(assert (= var1322819 temp348_135))
(assert (= temp348_136 #x0000000000000000))
(assert (= var1310898 temp348_136))
(assert (= temp348_137 #x0000000000000000))
(assert (= temp348_138 temp348_137))
(assert (= temp348_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_138)))
(assert (= temp348_140 #x0000000000000001))
(assert (= temp348_141 temp348_140))
(assert (= temp348_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_141)))
(assert (= temp348_143 #x0000000000000002))
(assert (= temp348_144 temp348_143))
(assert (= temp348_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_144)))
(assert (= temp348_146 #x0000000000000003))
(assert (= temp348_147 temp348_146))
(assert (= temp348_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_147)))
(assert (= temp348_149 #x0000000000000004))
(assert (= temp348_150 temp348_149))
(assert (= temp348_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_150)))
(assert (= temp348_152 #x0000000000000005))
(assert (= temp348_153 temp348_152))
(assert (= temp348_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_153)))
(assert (= temp348_156 var1310898))
(assert (= temp348_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_156)))
(assert (= temp348_155 temp348_157))
(assert (= var1322852
   (ite (bvslt temp348_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_158 #x0000000000000000))
(assert (= var1322852 temp348_158))
(assert (= temp348_159 #x0000000000000000))
(assert (= var1310898 temp348_159))
(assert (= temp348_161 var1310898))
(assert (= temp348_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_161)))
(assert (= temp348_160 temp348_162))
(assert (= var1322874 (bvsmod temp348_160 ARGNAME_groups_NAMEEND)))
(assert (= temp348_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp348_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp348_164 #x0000000000000001))
(assert (= var1322875 temp348_164))
(assert (= temp348_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp348_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_166 #x0000000000000001))
(assert (= var1322895 temp348_166))
(assert (= temp348_167 #x0000000000000001))
(assert (= var1311786 temp348_167))
(assert (= temp348_168 #x0000000000000000))
(assert (= temp348_169 temp348_168))
(assert (= temp348_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp348_169)))
(assert (= temp348_171 #x0000000000000001))
(assert (= temp348_172 temp348_171))
(assert (= temp348_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp348_172)))
(assert (= temp348_174 #x0000000000000002))
(assert (= temp348_175 temp348_174))
(assert (= temp348_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp348_175)))
(assert (= temp348_177 #x0000000000000003))
(assert (= temp348_178 temp348_177))
(assert (= temp348_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp348_178)))
(assert (= temp348_180 #x0000000000000004))
(assert (= temp348_181 temp348_180))
(assert (= temp348_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp348_181)))
(assert (= temp348_183 #x0000000000000005))
(assert (= temp348_184 temp348_183))
(assert (= temp348_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp348_184)))
(assert (= temp348_186 #x0000000000000000))
(assert (= temp348_187
   (ite (bvslt var1311786 temp348_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp348_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp348_187)))
(assert (= var1322903 temp348_188))
(assert (bvslt (ite (bvslt var1311786 temp348_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp348_189 #x0000000000000001))
(assert (= var1311786 temp348_189))
(assert (= temp348_191 var1311786))
(assert (= temp348_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_191)))
(assert (= temp348_190 temp348_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp348_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp348_193 #x0000000000000001))
(assert (= var1322908 temp348_193))
(assert (= temp348_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp348_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_195 #x0000000000000001))
(assert (= var1322975 temp348_195))
(assert (= temp348_196 #x0000000000000000))
(assert (= var1310898 temp348_196))
(assert (= temp348_197 #x0000000000000000))
(assert (= temp348_198 temp348_197))
(assert (= temp348_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp348_198)))
(assert (= temp348_200 #x0000000000000001))
(assert (= temp348_201 temp348_200))
(assert (= temp348_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp348_201)))
(assert (= temp348_203 #x0000000000000002))
(assert (= temp348_204 temp348_203))
(assert (= temp348_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp348_204)))
(assert (= temp348_206 #x0000000000000003))
(assert (= temp348_207 temp348_206))
(assert (= temp348_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp348_207)))
(assert (= temp348_209 #x0000000000000004))
(assert (= temp348_210 temp348_209))
(assert (= temp348_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp348_210)))
(assert (= temp348_212 #x0000000000000005))
(assert (= temp348_213 temp348_212))
(assert (= temp348_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp348_213)))
(assert (= temp348_215 #x0000000000000000))
(assert (= temp348_216
   (ite (bvslt var1310898 temp348_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp348_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp348_216)))
(assert (= var1322977 temp348_217))
(assert (bvslt (ite (bvslt var1310898 temp348_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp348_218 #x0000000000000000))
(assert (= var1310898 temp348_218))
(assert (= temp348_220 var1310898))
(assert (= temp348_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_220)))
(assert (= temp348_219 temp348_221))
(assert (= var1322980
   (ite (= var1322977 temp348_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp348_222 #x0000000000000001))
(assert (= var1322980 temp348_222))
(assert (= temp348_223 #x0000000000000002))
(assert (= var1848169 temp348_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp348_225 #x0000000000000001))
(assert (= var1323065 temp348_225))
(assert (= temp348_226 #x0000000000000001))
(assert (= var3486735 temp348_226))
(assert (= temp348_227 #x0000000000000001))
(assert (= var3814415 temp348_227))
(assert (= temp348_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp348_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_229 #x0000000000000001))
(assert (= var79986 temp348_229))
(assert (= temp348_230 #x0000000000000001))
(assert (= var80116 temp348_230))
(assert (= var4796905 var80116))
(assert (= temp348_231 #x0000000000000000))
(assert (= var4784306 temp348_231))
(assert (= temp348_232 #x0000000000000000))
(assert (= temp348_233
   (ite (bvslt var4784306 temp348_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp348_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp348_233)))
(assert (= var4796924 temp348_234))
(assert (bvslt (ite (bvslt var4784306 temp348_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp348_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp348_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp348_236 #x0000000000000001))
(assert (= var4796925 temp348_236))
(assert (= temp348_237 #x0000000000000000))
(assert (= var4996927 temp348_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp348_238 #x0000000000000002))
(assert (= var5125763 temp348_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_239 #x0000000000000000))
(assert (= var5191324 temp348_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6238608 var80129))
(assert (= var6500752 var80129))
(assert (= temp348_240 #x0000000000000001))
(assert (= var79986 temp348_240))
(model-add temp348_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp348_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp348_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






