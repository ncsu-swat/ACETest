(declare-fun temp356_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp356_2 () (_ BitVec 64))
(declare-fun temp356_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp356_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp356_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp356_6 () (_ BitVec 64))
(declare-fun temp356_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp356_8 () (_ BitVec 64))
(declare-fun temp356_9 () (_ BitVec 64))
(declare-fun temp356_10 () (_ BitVec 64))
(declare-fun temp356_11 () (_ BitVec 64))
(declare-fun temp356_12 () (_ BitVec 64))
(declare-fun temp356_13 () (_ BitVec 64))
(declare-fun temp356_14 () (_ BitVec 64))
(declare-fun temp356_15 () (_ BitVec 64))
(declare-fun temp356_16 () (_ BitVec 64))
(declare-fun temp356_17 () (_ BitVec 64))
(declare-fun temp356_18 () (_ BitVec 64))
(declare-fun temp356_19 () (_ BitVec 64))
(declare-fun temp356_20 () (_ BitVec 64))
(declare-fun temp356_21 () (_ BitVec 64))
(declare-fun temp356_22 () (_ BitVec 64))
(declare-fun temp356_23 () (_ BitVec 64))
(declare-fun temp356_24 () (_ BitVec 64))
(declare-fun temp356_25 () (_ BitVec 64))
(declare-fun temp356_26 () (_ BitVec 64))
(declare-fun temp356_27 () (_ BitVec 64))
(declare-fun temp356_28 () (_ BitVec 64))
(declare-fun temp356_29 () (_ BitVec 64))
(declare-fun temp356_30 () (_ BitVec 64))
(declare-fun temp356_31 () (_ BitVec 64))
(declare-fun temp356_32 () (_ BitVec 64))
(declare-fun temp356_33 () (_ BitVec 64))
(declare-fun temp356_34 () (_ BitVec 64))
(declare-fun temp356_35 () (_ BitVec 64))
(declare-fun temp356_36 () (_ BitVec 64))
(declare-fun temp356_37 () (_ BitVec 64))
(declare-fun temp356_38 () (_ BitVec 64))
(declare-fun temp356_39 () (_ BitVec 64))
(declare-fun temp356_40 () (_ BitVec 64))
(declare-fun temp356_41 () (_ BitVec 64))
(declare-fun temp356_42 () (_ BitVec 64))
(declare-fun temp356_43 () (_ BitVec 64))
(declare-fun temp356_44 () (_ BitVec 64))
(declare-fun temp356_45 () (_ BitVec 64))
(declare-fun temp356_46 () (_ BitVec 64))
(declare-fun temp356_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp356_48 () (_ BitVec 64))
(declare-fun temp356_49 () (_ BitVec 64))
(declare-fun temp356_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp356_51 () (_ BitVec 64))
(declare-fun temp356_52 () (_ BitVec 64))
(declare-fun temp356_53 () (_ BitVec 64))
(declare-fun temp356_54 () (_ BitVec 64))
(declare-fun temp356_55 () (_ BitVec 64))
(declare-fun temp356_56 () (_ BitVec 64))
(declare-fun temp356_57 () (_ BitVec 64))
(declare-fun temp356_58 () (_ BitVec 64))
(declare-fun temp356_59 () (_ BitVec 64))
(declare-fun temp356_60 () (_ BitVec 64))
(declare-fun temp356_61 () (_ BitVec 64))
(declare-fun temp356_62 () (_ BitVec 64))
(declare-fun temp356_63 () (_ BitVec 64))
(declare-fun temp356_64 () (_ BitVec 64))
(declare-fun temp356_65 () (_ BitVec 64))
(declare-fun temp356_66 () (_ BitVec 64))
(declare-fun temp356_67 () (_ BitVec 64))
(declare-fun temp356_68 () (_ BitVec 64))
(declare-fun temp356_69 () (_ BitVec 64))
(declare-fun temp356_70 () (_ BitVec 64))
(declare-fun temp356_71 () (_ BitVec 64))
(declare-fun temp356_72 () (_ BitVec 64))
(declare-fun temp356_73 () (_ BitVec 64))
(declare-fun temp356_74 () (_ BitVec 64))
(declare-fun temp356_75 () (_ BitVec 64))
(declare-fun temp356_76 () (_ BitVec 64))
(declare-fun temp356_77 () (_ BitVec 64))
(declare-fun temp356_78 () (_ BitVec 64))
(declare-fun temp356_79 () (_ BitVec 64))
(declare-fun temp356_80 () (_ BitVec 64))
(declare-fun temp356_81 () (_ BitVec 64))
(declare-fun temp356_82 () (_ BitVec 64))
(declare-fun temp356_83 () (_ BitVec 64))
(declare-fun temp356_84 () (_ BitVec 64))
(declare-fun temp356_85 () (_ BitVec 64))
(declare-fun temp356_86 () (_ BitVec 64))
(declare-fun temp356_87 () (_ BitVec 64))
(declare-fun temp356_88 () (_ BitVec 64))
(declare-fun temp356_89 () (_ BitVec 64))
(declare-fun temp356_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp356_91 () (_ BitVec 64))
(declare-fun temp356_92 () (_ BitVec 64))
(declare-fun temp356_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp356_94 () (_ BitVec 64))
(declare-fun temp356_95 () (_ BitVec 64))
(declare-fun temp356_96 () (_ BitVec 64))
(declare-fun temp356_97 () (_ BitVec 64))
(declare-fun temp356_98 () (_ BitVec 64))
(declare-fun temp356_99 () (_ BitVec 64))
(declare-fun temp356_100 () (_ BitVec 64))
(declare-fun temp356_101 () (_ BitVec 64))
(declare-fun temp356_102 () (_ BitVec 64))
(declare-fun temp356_103 () (_ BitVec 64))
(declare-fun temp356_104 () (_ BitVec 64))
(declare-fun temp356_105 () (_ BitVec 64))
(declare-fun temp356_106 () (_ BitVec 64))
(declare-fun temp356_107 () (_ BitVec 64))
(declare-fun temp356_108 () (_ BitVec 64))
(declare-fun temp356_109 () (_ BitVec 64))
(declare-fun temp356_110 () (_ BitVec 64))
(declare-fun temp356_111 () (_ BitVec 64))
(declare-fun temp356_112 () (_ BitVec 64))
(declare-fun temp356_113 () (_ BitVec 64))
(declare-fun temp356_114 () (_ BitVec 64))
(declare-fun temp356_115 () (_ BitVec 64))
(declare-fun temp356_116 () (_ BitVec 64))
(declare-fun temp356_117 () (_ BitVec 64))
(declare-fun temp356_118 () (_ BitVec 64))
(declare-fun temp356_119 () (_ BitVec 64))
(declare-fun temp356_120 () (_ BitVec 64))
(declare-fun temp356_121 () (_ BitVec 64))
(declare-fun temp356_122 () (_ BitVec 64))
(declare-fun temp356_123 () (_ BitVec 64))
(declare-fun temp356_124 () (_ BitVec 64))
(declare-fun temp356_125 () (_ BitVec 64))
(declare-fun temp356_126 () (_ BitVec 64))
(declare-fun temp356_127 () (_ BitVec 64))
(declare-fun temp356_128 () (_ BitVec 64))
(declare-fun temp356_129 () (_ BitVec 64))
(declare-fun temp356_130 () (_ BitVec 64))
(declare-fun temp356_131 () (_ BitVec 64))
(declare-fun temp356_132 () (_ BitVec 64))
(declare-fun temp356_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp356_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp356_135 () (_ BitVec 64))
(declare-fun temp356_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp356_137 () (_ BitVec 64))
(declare-fun temp356_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp356_139 () (_ BitVec 64))
(declare-fun temp356_140 () (_ BitVec 64))
(declare-fun temp356_141 () (_ BitVec 64))
(declare-fun temp356_142 () (_ BitVec 64))
(declare-fun temp356_143 () (_ BitVec 64))
(declare-fun temp356_144 () (_ BitVec 64))
(declare-fun temp356_145 () (_ BitVec 64))
(declare-fun temp356_146 () (_ BitVec 64))
(declare-fun temp356_147 () (_ BitVec 64))
(declare-fun temp356_148 () (_ BitVec 64))
(declare-fun temp356_149 () (_ BitVec 64))
(declare-fun temp356_150 () (_ BitVec 64))
(declare-fun temp356_151 () (_ BitVec 64))
(declare-fun temp356_152 () (_ BitVec 64))
(declare-fun temp356_153 () (_ BitVec 64))
(declare-fun temp356_154 () (_ BitVec 64))
(declare-fun temp356_156 () (_ BitVec 64))
(declare-fun temp356_157 () (_ BitVec 64))
(declare-fun temp356_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp356_158 () (_ BitVec 64))
(declare-fun temp356_159 () (_ BitVec 64))
(declare-fun temp356_161 () (_ BitVec 64))
(declare-fun temp356_162 () (_ BitVec 64))
(declare-fun temp356_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp356_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp356_164 () (_ BitVec 64))
(declare-fun temp356_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp356_166 () (_ BitVec 64))
(declare-fun temp356_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp356_168 () (_ BitVec 64))
(declare-fun temp356_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp356_170 () (_ BitVec 64))
(declare-fun temp356_171 () (_ BitVec 64))
(declare-fun temp356_172 () (_ BitVec 64))
(declare-fun temp356_173 () (_ BitVec 64))
(declare-fun temp356_174 () (_ BitVec 64))
(declare-fun temp356_175 () (_ BitVec 64))
(declare-fun temp356_176 () (_ BitVec 64))
(declare-fun temp356_177 () (_ BitVec 64))
(declare-fun temp356_178 () (_ BitVec 64))
(declare-fun temp356_179 () (_ BitVec 64))
(declare-fun temp356_180 () (_ BitVec 64))
(declare-fun temp356_181 () (_ BitVec 64))
(declare-fun temp356_182 () (_ BitVec 64))
(declare-fun temp356_183 () (_ BitVec 64))
(declare-fun temp356_184 () (_ BitVec 64))
(declare-fun temp356_185 () (_ BitVec 64))
(declare-fun temp356_186 () (_ BitVec 64))
(declare-fun temp356_187 () (_ BitVec 64))
(declare-fun temp356_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp356_189 () (_ BitVec 64))
(declare-fun temp356_191 () (_ BitVec 64))
(declare-fun temp356_192 () (_ BitVec 64))
(declare-fun temp356_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp356_193 () (_ BitVec 64))
(declare-fun temp356_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp356_195 () (_ BitVec 64))
(declare-fun temp356_196 () (_ BitVec 64))
(declare-fun temp356_197 () (_ BitVec 64))
(declare-fun temp356_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp356_199 () (_ BitVec 64))
(declare-fun temp356_200 () (_ BitVec 64))
(declare-fun temp356_201 () (_ BitVec 64))
(declare-fun temp356_202 () (_ BitVec 64))
(declare-fun temp356_203 () (_ BitVec 64))
(declare-fun temp356_204 () (_ BitVec 64))
(declare-fun temp356_205 () (_ BitVec 64))
(declare-fun temp356_206 () (_ BitVec 64))
(declare-fun temp356_207 () (_ BitVec 64))
(declare-fun temp356_208 () (_ BitVec 64))
(declare-fun temp356_209 () (_ BitVec 64))
(declare-fun temp356_210 () (_ BitVec 64))
(declare-fun temp356_211 () (_ BitVec 64))
(declare-fun temp356_212 () (_ BitVec 64))
(declare-fun temp356_213 () (_ BitVec 64))
(declare-fun temp356_214 () (_ BitVec 64))
(declare-fun temp356_215 () (_ BitVec 64))
(declare-fun temp356_216 () (_ BitVec 64))
(declare-fun temp356_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp356_218 () (_ BitVec 64))
(declare-fun temp356_220 () (_ BitVec 64))
(declare-fun temp356_221 () (_ BitVec 64))
(declare-fun temp356_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp356_222 () (_ BitVec 64))
(declare-fun temp356_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp356_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp356_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp356_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp356_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp356_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp356_229 () (_ BitVec 64))
(declare-fun temp356_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp356_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp356_232 () (_ BitVec 64))
(declare-fun temp356_233 () (_ BitVec 64))
(declare-fun temp356_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp356_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp356_236 () (_ BitVec 64))
(declare-fun temp356_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp356_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp356_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp356_240 () (_ BitVec 64))
(assert (= temp356_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp356_1)))
(assert (= temp356_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp356_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_3 #x0000000000000000))
(assert (= var79869 temp356_3))
(assert (= temp356_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp356_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_5 #x0000000000000000))
(assert (= var79914 temp356_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp356_6 #x0000000000000000))
(assert (= temp356_7 temp356_6))
(assert (= temp356_8 (select ARGNAME_padding_NAMEEND_VAL temp356_7)))
(assert (= temp356_9 #x0000000000000001))
(assert (= temp356_10 temp356_9))
(assert (= temp356_11 (select ARGNAME_padding_NAMEEND_VAL temp356_10)))
(assert (= temp356_12 #x0000000000000002))
(assert (= temp356_13 temp356_12))
(assert (= temp356_14 (select ARGNAME_padding_NAMEEND_VAL temp356_13)))
(assert (= temp356_15 #x0000000000000003))
(assert (= temp356_16 temp356_15))
(assert (= temp356_17 (select ARGNAME_padding_NAMEEND_VAL temp356_16)))
(assert (= temp356_18 #x0000000000000004))
(assert (= temp356_19 temp356_18))
(assert (= temp356_20 (select ARGNAME_padding_NAMEEND_VAL temp356_19)))
(assert (= temp356_21 #x0000000000000005))
(assert (= temp356_22 temp356_21))
(assert (= temp356_23 (select ARGNAME_padding_NAMEEND_VAL temp356_22)))
(assert (= temp356_24 #x0000000000000000))
(assert (= temp356_25 #x0000000000000000))
(assert (= temp356_26 temp356_25))
(assert (= temp356_27 (select ARGNAME_padding_NAMEEND_VAL temp356_26)))
(assert (= temp356_28 #x0000000000000000))
(assert (= temp356_29 #x0000000000000001))
(assert (= temp356_30 temp356_29))
(assert (= temp356_31 (select ARGNAME_padding_NAMEEND_VAL temp356_30)))
(assert (= temp356_32 #x0000000000000000))
(assert (= temp356_33 #x0000000000000002))
(assert (= temp356_34 temp356_33))
(assert (= temp356_35 (select ARGNAME_padding_NAMEEND_VAL temp356_34)))
(assert (= temp356_36 #x0000000000000000))
(assert (= temp356_37 #x0000000000000003))
(assert (= temp356_38 temp356_37))
(assert (= temp356_39 (select ARGNAME_padding_NAMEEND_VAL temp356_38)))
(assert (= temp356_40 #x0000000000000000))
(assert (= temp356_41 #x0000000000000004))
(assert (= temp356_42 temp356_41))
(assert (= temp356_43 (select ARGNAME_padding_NAMEEND_VAL temp356_42)))
(assert (= temp356_44 #x0000000000000000))
(assert (= temp356_45 #x0000000000000005))
(assert (= temp356_46 temp356_45))
(assert (= temp356_47 (select ARGNAME_padding_NAMEEND_VAL temp356_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp356_27 temp356_24)
             (bvslt temp356_31 temp356_28)
             (bvslt temp356_35 temp356_32)
             (bvslt temp356_39 temp356_36)
             (bvslt temp356_43 temp356_40)
             (bvslt temp356_47 temp356_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_48 #x0000000000000000))
(assert (= var1322786 temp356_48))
(assert (= temp356_49 #x0000000000000000))
(assert (= temp356_50 temp356_49))
(assert (= temp356_51 (select ARGNAME_output_padding_NAMEEND_VAL temp356_50)))
(assert (= temp356_52 #x0000000000000001))
(assert (= temp356_53 temp356_52))
(assert (= temp356_54 (select ARGNAME_output_padding_NAMEEND_VAL temp356_53)))
(assert (= temp356_55 #x0000000000000002))
(assert (= temp356_56 temp356_55))
(assert (= temp356_57 (select ARGNAME_output_padding_NAMEEND_VAL temp356_56)))
(assert (= temp356_58 #x0000000000000003))
(assert (= temp356_59 temp356_58))
(assert (= temp356_60 (select ARGNAME_output_padding_NAMEEND_VAL temp356_59)))
(assert (= temp356_61 #x0000000000000004))
(assert (= temp356_62 temp356_61))
(assert (= temp356_63 (select ARGNAME_output_padding_NAMEEND_VAL temp356_62)))
(assert (= temp356_64 #x0000000000000005))
(assert (= temp356_65 temp356_64))
(assert (= temp356_66 (select ARGNAME_output_padding_NAMEEND_VAL temp356_65)))
(assert (= temp356_67 #x0000000000000000))
(assert (= temp356_68 #x0000000000000000))
(assert (= temp356_69 temp356_68))
(assert (= temp356_70 (select ARGNAME_output_padding_NAMEEND_VAL temp356_69)))
(assert (= temp356_71 #x0000000000000000))
(assert (= temp356_72 #x0000000000000001))
(assert (= temp356_73 temp356_72))
(assert (= temp356_74 (select ARGNAME_output_padding_NAMEEND_VAL temp356_73)))
(assert (= temp356_75 #x0000000000000000))
(assert (= temp356_76 #x0000000000000002))
(assert (= temp356_77 temp356_76))
(assert (= temp356_78 (select ARGNAME_output_padding_NAMEEND_VAL temp356_77)))
(assert (= temp356_79 #x0000000000000000))
(assert (= temp356_80 #x0000000000000003))
(assert (= temp356_81 temp356_80))
(assert (= temp356_82 (select ARGNAME_output_padding_NAMEEND_VAL temp356_81)))
(assert (= temp356_83 #x0000000000000000))
(assert (= temp356_84 #x0000000000000004))
(assert (= temp356_85 temp356_84))
(assert (= temp356_86 (select ARGNAME_output_padding_NAMEEND_VAL temp356_85)))
(assert (= temp356_87 #x0000000000000000))
(assert (= temp356_88 #x0000000000000005))
(assert (= temp356_89 temp356_88))
(assert (= temp356_90 (select ARGNAME_output_padding_NAMEEND_VAL temp356_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp356_70 temp356_67)
             (bvslt temp356_74 temp356_71)
             (bvslt temp356_78 temp356_75)
             (bvslt temp356_82 temp356_79)
             (bvslt temp356_86 temp356_83)
             (bvslt temp356_90 temp356_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_91 #x0000000000000000))
(assert (= var1322797 temp356_91))
(assert (= temp356_92 #x0000000000000000))
(assert (= temp356_93 temp356_92))
(assert (= temp356_94 (select ARGNAME_stride_NAMEEND_VAL temp356_93)))
(assert (= temp356_95 #x0000000000000001))
(assert (= temp356_96 temp356_95))
(assert (= temp356_97 (select ARGNAME_stride_NAMEEND_VAL temp356_96)))
(assert (= temp356_98 #x0000000000000002))
(assert (= temp356_99 temp356_98))
(assert (= temp356_100 (select ARGNAME_stride_NAMEEND_VAL temp356_99)))
(assert (= temp356_101 #x0000000000000003))
(assert (= temp356_102 temp356_101))
(assert (= temp356_103 (select ARGNAME_stride_NAMEEND_VAL temp356_102)))
(assert (= temp356_104 #x0000000000000004))
(assert (= temp356_105 temp356_104))
(assert (= temp356_106 (select ARGNAME_stride_NAMEEND_VAL temp356_105)))
(assert (= temp356_107 #x0000000000000005))
(assert (= temp356_108 temp356_107))
(assert (= temp356_109 (select ARGNAME_stride_NAMEEND_VAL temp356_108)))
(assert (= temp356_110 #x0000000000000000))
(assert (= temp356_111 #x0000000000000000))
(assert (= temp356_112 temp356_111))
(assert (= temp356_113 (select ARGNAME_stride_NAMEEND_VAL temp356_112)))
(assert (= temp356_114 #x0000000000000000))
(assert (= temp356_115 #x0000000000000001))
(assert (= temp356_116 temp356_115))
(assert (= temp356_117 (select ARGNAME_stride_NAMEEND_VAL temp356_116)))
(assert (= temp356_118 #x0000000000000000))
(assert (= temp356_119 #x0000000000000002))
(assert (= temp356_120 temp356_119))
(assert (= temp356_121 (select ARGNAME_stride_NAMEEND_VAL temp356_120)))
(assert (= temp356_122 #x0000000000000000))
(assert (= temp356_123 #x0000000000000003))
(assert (= temp356_124 temp356_123))
(assert (= temp356_125 (select ARGNAME_stride_NAMEEND_VAL temp356_124)))
(assert (= temp356_126 #x0000000000000000))
(assert (= temp356_127 #x0000000000000004))
(assert (= temp356_128 temp356_127))
(assert (= temp356_129 (select ARGNAME_stride_NAMEEND_VAL temp356_128)))
(assert (= temp356_130 #x0000000000000000))
(assert (= temp356_131 #x0000000000000005))
(assert (= temp356_132 temp356_131))
(assert (= temp356_133 (select ARGNAME_stride_NAMEEND_VAL temp356_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp356_113 temp356_110)
             (bvsle temp356_117 temp356_114)
             (bvsle temp356_121 temp356_118)
             (bvsle temp356_125 temp356_122)
             (bvsle temp356_129 temp356_126)
             (bvsle temp356_133 temp356_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_134 #x0000000000000000))
(assert (= var1322807 temp356_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_135 #x0000000000000001))
(assert (= var1322819 temp356_135))
(assert (= temp356_136 #x0000000000000000))
(assert (= var1310898 temp356_136))
(assert (= temp356_137 #x0000000000000000))
(assert (= temp356_138 temp356_137))
(assert (= temp356_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_138)))
(assert (= temp356_140 #x0000000000000001))
(assert (= temp356_141 temp356_140))
(assert (= temp356_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_141)))
(assert (= temp356_143 #x0000000000000002))
(assert (= temp356_144 temp356_143))
(assert (= temp356_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_144)))
(assert (= temp356_146 #x0000000000000003))
(assert (= temp356_147 temp356_146))
(assert (= temp356_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_147)))
(assert (= temp356_149 #x0000000000000004))
(assert (= temp356_150 temp356_149))
(assert (= temp356_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_150)))
(assert (= temp356_152 #x0000000000000005))
(assert (= temp356_153 temp356_152))
(assert (= temp356_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_153)))
(assert (= temp356_156 var1310898))
(assert (= temp356_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_156)))
(assert (= temp356_155 temp356_157))
(assert (= var1322852
   (ite (bvslt temp356_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_158 #x0000000000000000))
(assert (= var1322852 temp356_158))
(assert (= temp356_159 #x0000000000000000))
(assert (= var1310898 temp356_159))
(assert (= temp356_161 var1310898))
(assert (= temp356_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_161)))
(assert (= temp356_160 temp356_162))
(assert (= var1322874 (bvsmod temp356_160 ARGNAME_groups_NAMEEND)))
(assert (= temp356_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp356_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp356_164 #x0000000000000001))
(assert (= var1322875 temp356_164))
(assert (= temp356_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp356_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_166 #x0000000000000001))
(assert (= var1322895 temp356_166))
(assert (= temp356_167 #x0000000000000001))
(assert (= var1311786 temp356_167))
(assert (= temp356_168 #x0000000000000000))
(assert (= temp356_169 temp356_168))
(assert (= temp356_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp356_169)))
(assert (= temp356_171 #x0000000000000001))
(assert (= temp356_172 temp356_171))
(assert (= temp356_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp356_172)))
(assert (= temp356_174 #x0000000000000002))
(assert (= temp356_175 temp356_174))
(assert (= temp356_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp356_175)))
(assert (= temp356_177 #x0000000000000003))
(assert (= temp356_178 temp356_177))
(assert (= temp356_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp356_178)))
(assert (= temp356_180 #x0000000000000004))
(assert (= temp356_181 temp356_180))
(assert (= temp356_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp356_181)))
(assert (= temp356_183 #x0000000000000005))
(assert (= temp356_184 temp356_183))
(assert (= temp356_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp356_184)))
(assert (= temp356_186 #x0000000000000000))
(assert (= temp356_187
   (ite (bvslt var1311786 temp356_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp356_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp356_187)))
(assert (= var1322903 temp356_188))
(assert (bvslt (ite (bvslt var1311786 temp356_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp356_189 #x0000000000000001))
(assert (= var1311786 temp356_189))
(assert (= temp356_191 var1311786))
(assert (= temp356_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_191)))
(assert (= temp356_190 temp356_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp356_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp356_193 #x0000000000000001))
(assert (= var1322908 temp356_193))
(assert (= temp356_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp356_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_195 #x0000000000000001))
(assert (= var1322975 temp356_195))
(assert (= temp356_196 #x0000000000000000))
(assert (= var1310898 temp356_196))
(assert (= temp356_197 #x0000000000000000))
(assert (= temp356_198 temp356_197))
(assert (= temp356_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp356_198)))
(assert (= temp356_200 #x0000000000000001))
(assert (= temp356_201 temp356_200))
(assert (= temp356_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp356_201)))
(assert (= temp356_203 #x0000000000000002))
(assert (= temp356_204 temp356_203))
(assert (= temp356_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp356_204)))
(assert (= temp356_206 #x0000000000000003))
(assert (= temp356_207 temp356_206))
(assert (= temp356_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp356_207)))
(assert (= temp356_209 #x0000000000000004))
(assert (= temp356_210 temp356_209))
(assert (= temp356_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp356_210)))
(assert (= temp356_212 #x0000000000000005))
(assert (= temp356_213 temp356_212))
(assert (= temp356_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp356_213)))
(assert (= temp356_215 #x0000000000000000))
(assert (= temp356_216
   (ite (bvslt var1310898 temp356_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp356_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp356_216)))
(assert (= var1322977 temp356_217))
(assert (bvslt (ite (bvslt var1310898 temp356_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp356_218 #x0000000000000000))
(assert (= var1310898 temp356_218))
(assert (= temp356_220 var1310898))
(assert (= temp356_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp356_220)))
(assert (= temp356_219 temp356_221))
(assert (= var1322980
   (ite (= var1322977 temp356_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp356_222 #x0000000000000001))
(assert (= var1322980 temp356_222))
(assert (= temp356_223 #x0000000000000002))
(assert (= var1848169 temp356_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp356_225 #x0000000000000001))
(assert (= var1323065 temp356_225))
(assert (= temp356_226 #x0000000000000001))
(assert (= var3486735 temp356_226))
(assert (= temp356_227 #x0000000000000001))
(assert (= var3814415 temp356_227))
(assert (= temp356_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp356_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_229 #x0000000000000001))
(assert (= var79986 temp356_229))
(assert (= temp356_230 #x0000000000000001))
(assert (= var80116 temp356_230))
(assert (= var4796905 var80116))
(assert (= temp356_231 #x0000000000000000))
(assert (= var4784306 temp356_231))
(assert (= temp356_232 #x0000000000000000))
(assert (= temp356_233
   (ite (bvslt var4784306 temp356_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp356_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp356_233)))
(assert (= var4796924 temp356_234))
(assert (bvslt (ite (bvslt var4784306 temp356_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp356_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp356_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp356_236 #x0000000000000001))
(assert (= var4796925 temp356_236))
(assert (= temp356_237 #x0000000000000000))
(assert (= var4996927 temp356_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp356_238 #x0000000000000002))
(assert (= var5125763 temp356_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp356_239 #x0000000000000000))
(assert (= var5191324 temp356_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp356_240 #x0000000000000001))
(assert (= var79986 temp356_240))
(model-add temp356_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp356_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp356_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






