(declare-fun temp642_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp642_2 () (_ BitVec 64))
(declare-fun temp642_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp642_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp642_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp642_6 () (_ BitVec 64))
(declare-fun temp642_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_8 () (_ BitVec 64))
(declare-fun temp642_9 () (_ BitVec 64))
(declare-fun temp642_10 () (_ BitVec 64))
(declare-fun temp642_11 () (_ BitVec 64))
(declare-fun temp642_12 () (_ BitVec 64))
(declare-fun temp642_13 () (_ BitVec 64))
(declare-fun temp642_14 () (_ BitVec 64))
(declare-fun temp642_15 () (_ BitVec 64))
(declare-fun temp642_16 () (_ BitVec 64))
(declare-fun temp642_17 () (_ BitVec 64))
(declare-fun temp642_18 () (_ BitVec 64))
(declare-fun temp642_19 () (_ BitVec 64))
(declare-fun temp642_20 () (_ BitVec 64))
(declare-fun temp642_21 () (_ BitVec 64))
(declare-fun temp642_22 () (_ BitVec 64))
(declare-fun temp642_23 () (_ BitVec 64))
(declare-fun temp642_24 () (_ BitVec 64))
(declare-fun temp642_25 () (_ BitVec 64))
(declare-fun temp642_26 () (_ BitVec 64))
(declare-fun temp642_27 () (_ BitVec 64))
(declare-fun temp642_28 () (_ BitVec 64))
(declare-fun temp642_29 () (_ BitVec 64))
(declare-fun temp642_30 () (_ BitVec 64))
(declare-fun temp642_31 () (_ BitVec 64))
(declare-fun temp642_32 () (_ BitVec 64))
(declare-fun temp642_33 () (_ BitVec 64))
(declare-fun temp642_34 () (_ BitVec 64))
(declare-fun temp642_35 () (_ BitVec 64))
(declare-fun temp642_36 () (_ BitVec 64))
(declare-fun temp642_37 () (_ BitVec 64))
(declare-fun temp642_38 () (_ BitVec 64))
(declare-fun temp642_39 () (_ BitVec 64))
(declare-fun temp642_40 () (_ BitVec 64))
(declare-fun temp642_41 () (_ BitVec 64))
(declare-fun temp642_42 () (_ BitVec 64))
(declare-fun temp642_43 () (_ BitVec 64))
(declare-fun temp642_44 () (_ BitVec 64))
(declare-fun temp642_45 () (_ BitVec 64))
(declare-fun temp642_46 () (_ BitVec 64))
(declare-fun temp642_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp642_48 () (_ BitVec 64))
(declare-fun temp642_49 () (_ BitVec 64))
(declare-fun temp642_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_51 () (_ BitVec 64))
(declare-fun temp642_52 () (_ BitVec 64))
(declare-fun temp642_53 () (_ BitVec 64))
(declare-fun temp642_54 () (_ BitVec 64))
(declare-fun temp642_55 () (_ BitVec 64))
(declare-fun temp642_56 () (_ BitVec 64))
(declare-fun temp642_57 () (_ BitVec 64))
(declare-fun temp642_58 () (_ BitVec 64))
(declare-fun temp642_59 () (_ BitVec 64))
(declare-fun temp642_60 () (_ BitVec 64))
(declare-fun temp642_61 () (_ BitVec 64))
(declare-fun temp642_62 () (_ BitVec 64))
(declare-fun temp642_63 () (_ BitVec 64))
(declare-fun temp642_64 () (_ BitVec 64))
(declare-fun temp642_65 () (_ BitVec 64))
(declare-fun temp642_66 () (_ BitVec 64))
(declare-fun temp642_67 () (_ BitVec 64))
(declare-fun temp642_68 () (_ BitVec 64))
(declare-fun temp642_69 () (_ BitVec 64))
(declare-fun temp642_70 () (_ BitVec 64))
(declare-fun temp642_71 () (_ BitVec 64))
(declare-fun temp642_72 () (_ BitVec 64))
(declare-fun temp642_73 () (_ BitVec 64))
(declare-fun temp642_74 () (_ BitVec 64))
(declare-fun temp642_75 () (_ BitVec 64))
(declare-fun temp642_76 () (_ BitVec 64))
(declare-fun temp642_77 () (_ BitVec 64))
(declare-fun temp642_78 () (_ BitVec 64))
(declare-fun temp642_79 () (_ BitVec 64))
(declare-fun temp642_80 () (_ BitVec 64))
(declare-fun temp642_81 () (_ BitVec 64))
(declare-fun temp642_82 () (_ BitVec 64))
(declare-fun temp642_83 () (_ BitVec 64))
(declare-fun temp642_84 () (_ BitVec 64))
(declare-fun temp642_85 () (_ BitVec 64))
(declare-fun temp642_86 () (_ BitVec 64))
(declare-fun temp642_87 () (_ BitVec 64))
(declare-fun temp642_88 () (_ BitVec 64))
(declare-fun temp642_89 () (_ BitVec 64))
(declare-fun temp642_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp642_91 () (_ BitVec 64))
(declare-fun temp642_92 () (_ BitVec 64))
(declare-fun temp642_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_94 () (_ BitVec 64))
(declare-fun temp642_95 () (_ BitVec 64))
(declare-fun temp642_96 () (_ BitVec 64))
(declare-fun temp642_97 () (_ BitVec 64))
(declare-fun temp642_98 () (_ BitVec 64))
(declare-fun temp642_99 () (_ BitVec 64))
(declare-fun temp642_100 () (_ BitVec 64))
(declare-fun temp642_101 () (_ BitVec 64))
(declare-fun temp642_102 () (_ BitVec 64))
(declare-fun temp642_103 () (_ BitVec 64))
(declare-fun temp642_104 () (_ BitVec 64))
(declare-fun temp642_105 () (_ BitVec 64))
(declare-fun temp642_106 () (_ BitVec 64))
(declare-fun temp642_107 () (_ BitVec 64))
(declare-fun temp642_108 () (_ BitVec 64))
(declare-fun temp642_109 () (_ BitVec 64))
(declare-fun temp642_110 () (_ BitVec 64))
(declare-fun temp642_111 () (_ BitVec 64))
(declare-fun temp642_112 () (_ BitVec 64))
(declare-fun temp642_113 () (_ BitVec 64))
(declare-fun temp642_114 () (_ BitVec 64))
(declare-fun temp642_115 () (_ BitVec 64))
(declare-fun temp642_116 () (_ BitVec 64))
(declare-fun temp642_117 () (_ BitVec 64))
(declare-fun temp642_118 () (_ BitVec 64))
(declare-fun temp642_119 () (_ BitVec 64))
(declare-fun temp642_120 () (_ BitVec 64))
(declare-fun temp642_121 () (_ BitVec 64))
(declare-fun temp642_122 () (_ BitVec 64))
(declare-fun temp642_123 () (_ BitVec 64))
(declare-fun temp642_124 () (_ BitVec 64))
(declare-fun temp642_125 () (_ BitVec 64))
(declare-fun temp642_126 () (_ BitVec 64))
(declare-fun temp642_127 () (_ BitVec 64))
(declare-fun temp642_128 () (_ BitVec 64))
(declare-fun temp642_129 () (_ BitVec 64))
(declare-fun temp642_130 () (_ BitVec 64))
(declare-fun temp642_131 () (_ BitVec 64))
(declare-fun temp642_132 () (_ BitVec 64))
(declare-fun temp642_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp642_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp642_135 () (_ BitVec 64))
(declare-fun temp642_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp642_137 () (_ BitVec 64))
(declare-fun temp642_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_139 () (_ BitVec 64))
(declare-fun temp642_140 () (_ BitVec 64))
(declare-fun temp642_141 () (_ BitVec 64))
(declare-fun temp642_142 () (_ BitVec 64))
(declare-fun temp642_143 () (_ BitVec 64))
(declare-fun temp642_144 () (_ BitVec 64))
(declare-fun temp642_145 () (_ BitVec 64))
(declare-fun temp642_146 () (_ BitVec 64))
(declare-fun temp642_147 () (_ BitVec 64))
(declare-fun temp642_148 () (_ BitVec 64))
(declare-fun temp642_149 () (_ BitVec 64))
(declare-fun temp642_150 () (_ BitVec 64))
(declare-fun temp642_151 () (_ BitVec 64))
(declare-fun temp642_152 () (_ BitVec 64))
(declare-fun temp642_153 () (_ BitVec 64))
(declare-fun temp642_154 () (_ BitVec 64))
(declare-fun temp642_156 () (_ BitVec 64))
(declare-fun temp642_157 () (_ BitVec 64))
(declare-fun temp642_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp642_158 () (_ BitVec 64))
(declare-fun temp642_159 () (_ BitVec 64))
(declare-fun temp642_161 () (_ BitVec 64))
(declare-fun temp642_162 () (_ BitVec 64))
(declare-fun temp642_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp642_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp642_164 () (_ BitVec 64))
(declare-fun temp642_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp642_166 () (_ BitVec 64))
(declare-fun temp642_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp642_168 () (_ BitVec 64))
(declare-fun temp642_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_170 () (_ BitVec 64))
(declare-fun temp642_171 () (_ BitVec 64))
(declare-fun temp642_172 () (_ BitVec 64))
(declare-fun temp642_173 () (_ BitVec 64))
(declare-fun temp642_174 () (_ BitVec 64))
(declare-fun temp642_175 () (_ BitVec 64))
(declare-fun temp642_176 () (_ BitVec 64))
(declare-fun temp642_177 () (_ BitVec 64))
(declare-fun temp642_178 () (_ BitVec 64))
(declare-fun temp642_179 () (_ BitVec 64))
(declare-fun temp642_180 () (_ BitVec 64))
(declare-fun temp642_181 () (_ BitVec 64))
(declare-fun temp642_182 () (_ BitVec 64))
(declare-fun temp642_183 () (_ BitVec 64))
(declare-fun temp642_184 () (_ BitVec 64))
(declare-fun temp642_185 () (_ BitVec 64))
(declare-fun temp642_186 () (_ BitVec 64))
(declare-fun temp642_187 () (_ BitVec 64))
(declare-fun temp642_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp642_189 () (_ BitVec 64))
(declare-fun temp642_191 () (_ BitVec 64))
(declare-fun temp642_192 () (_ BitVec 64))
(declare-fun temp642_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp642_193 () (_ BitVec 64))
(declare-fun temp642_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp642_195 () (_ BitVec 64))
(declare-fun temp642_196 () (_ BitVec 64))
(declare-fun temp642_197 () (_ BitVec 64))
(declare-fun temp642_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_199 () (_ BitVec 64))
(declare-fun temp642_200 () (_ BitVec 64))
(declare-fun temp642_201 () (_ BitVec 64))
(declare-fun temp642_202 () (_ BitVec 64))
(declare-fun temp642_203 () (_ BitVec 64))
(declare-fun temp642_204 () (_ BitVec 64))
(declare-fun temp642_205 () (_ BitVec 64))
(declare-fun temp642_206 () (_ BitVec 64))
(declare-fun temp642_207 () (_ BitVec 64))
(declare-fun temp642_208 () (_ BitVec 64))
(declare-fun temp642_209 () (_ BitVec 64))
(declare-fun temp642_210 () (_ BitVec 64))
(declare-fun temp642_211 () (_ BitVec 64))
(declare-fun temp642_212 () (_ BitVec 64))
(declare-fun temp642_213 () (_ BitVec 64))
(declare-fun temp642_214 () (_ BitVec 64))
(declare-fun temp642_215 () (_ BitVec 64))
(declare-fun temp642_216 () (_ BitVec 64))
(declare-fun temp642_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp642_218 () (_ BitVec 64))
(declare-fun temp642_220 () (_ BitVec 64))
(declare-fun temp642_221 () (_ BitVec 64))
(declare-fun temp642_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp642_222 () (_ BitVec 64))
(declare-fun temp642_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp642_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp642_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp642_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp642_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp642_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp642_229 () (_ BitVec 64))
(declare-fun temp642_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp642_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp642_232 () (_ BitVec 64))
(declare-fun temp642_233 () (_ BitVec 64))
(declare-fun temp642_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp642_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp642_236 () (_ BitVec 64))
(declare-fun temp642_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp642_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp642_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp642_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp642_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp642_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6635340 () (_ BitVec 64))
(declare-fun var6635341 () (_ BitVec 64))
(declare-fun var6635342 () (_ BitVec 64))
(declare-fun temp642_244 () (_ BitVec 64))
(declare-fun temp642_243 () (_ BitVec 64))
(declare-fun temp642_245 () (_ BitVec 64))
(declare-fun var7933418 () (_ BitVec 64))
(declare-fun temp642_247 () (_ BitVec 64))
(declare-fun temp642_246 () (_ BitVec 64))
(declare-fun temp642_248 () (_ BitVec 64))
(declare-fun temp642_249 () (_ BitVec 64))
(declare-fun var8729364 () (_ BitVec 64))
(declare-fun var8729331 () (_ BitVec 64))
(declare-fun var8597895 () (_ BitVec 64))
(declare-fun var8597891 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp642_250 () (_ BitVec 64))
(assert (= temp642_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp642_1)))
(assert (= temp642_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp642_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_3 #x0000000000000000))
(assert (= var79869 temp642_3))
(assert (= temp642_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp642_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_5 #x0000000000000000))
(assert (= var79914 temp642_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp642_6 #x0000000000000000))
(assert (= temp642_7 temp642_6))
(assert (= temp642_8 (select ARGNAME_padding_NAMEEND_VAL temp642_7)))
(assert (= temp642_9 #x0000000000000001))
(assert (= temp642_10 temp642_9))
(assert (= temp642_11 (select ARGNAME_padding_NAMEEND_VAL temp642_10)))
(assert (= temp642_12 #x0000000000000002))
(assert (= temp642_13 temp642_12))
(assert (= temp642_14 (select ARGNAME_padding_NAMEEND_VAL temp642_13)))
(assert (= temp642_15 #x0000000000000003))
(assert (= temp642_16 temp642_15))
(assert (= temp642_17 (select ARGNAME_padding_NAMEEND_VAL temp642_16)))
(assert (= temp642_18 #x0000000000000004))
(assert (= temp642_19 temp642_18))
(assert (= temp642_20 (select ARGNAME_padding_NAMEEND_VAL temp642_19)))
(assert (= temp642_21 #x0000000000000005))
(assert (= temp642_22 temp642_21))
(assert (= temp642_23 (select ARGNAME_padding_NAMEEND_VAL temp642_22)))
(assert (= temp642_24 #x0000000000000000))
(assert (= temp642_25 #x0000000000000000))
(assert (= temp642_26 temp642_25))
(assert (= temp642_27 (select ARGNAME_padding_NAMEEND_VAL temp642_26)))
(assert (= temp642_28 #x0000000000000000))
(assert (= temp642_29 #x0000000000000001))
(assert (= temp642_30 temp642_29))
(assert (= temp642_31 (select ARGNAME_padding_NAMEEND_VAL temp642_30)))
(assert (= temp642_32 #x0000000000000000))
(assert (= temp642_33 #x0000000000000002))
(assert (= temp642_34 temp642_33))
(assert (= temp642_35 (select ARGNAME_padding_NAMEEND_VAL temp642_34)))
(assert (= temp642_36 #x0000000000000000))
(assert (= temp642_37 #x0000000000000003))
(assert (= temp642_38 temp642_37))
(assert (= temp642_39 (select ARGNAME_padding_NAMEEND_VAL temp642_38)))
(assert (= temp642_40 #x0000000000000000))
(assert (= temp642_41 #x0000000000000004))
(assert (= temp642_42 temp642_41))
(assert (= temp642_43 (select ARGNAME_padding_NAMEEND_VAL temp642_42)))
(assert (= temp642_44 #x0000000000000000))
(assert (= temp642_45 #x0000000000000005))
(assert (= temp642_46 temp642_45))
(assert (= temp642_47 (select ARGNAME_padding_NAMEEND_VAL temp642_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp642_27 temp642_24)
             (bvslt temp642_31 temp642_28)
             (bvslt temp642_35 temp642_32)
             (bvslt temp642_39 temp642_36)
             (bvslt temp642_43 temp642_40)
             (bvslt temp642_47 temp642_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_48 #x0000000000000000))
(assert (= var1322786 temp642_48))
(assert (= temp642_49 #x0000000000000000))
(assert (= temp642_50 temp642_49))
(assert (= temp642_51 (select ARGNAME_output_padding_NAMEEND_VAL temp642_50)))
(assert (= temp642_52 #x0000000000000001))
(assert (= temp642_53 temp642_52))
(assert (= temp642_54 (select ARGNAME_output_padding_NAMEEND_VAL temp642_53)))
(assert (= temp642_55 #x0000000000000002))
(assert (= temp642_56 temp642_55))
(assert (= temp642_57 (select ARGNAME_output_padding_NAMEEND_VAL temp642_56)))
(assert (= temp642_58 #x0000000000000003))
(assert (= temp642_59 temp642_58))
(assert (= temp642_60 (select ARGNAME_output_padding_NAMEEND_VAL temp642_59)))
(assert (= temp642_61 #x0000000000000004))
(assert (= temp642_62 temp642_61))
(assert (= temp642_63 (select ARGNAME_output_padding_NAMEEND_VAL temp642_62)))
(assert (= temp642_64 #x0000000000000005))
(assert (= temp642_65 temp642_64))
(assert (= temp642_66 (select ARGNAME_output_padding_NAMEEND_VAL temp642_65)))
(assert (= temp642_67 #x0000000000000000))
(assert (= temp642_68 #x0000000000000000))
(assert (= temp642_69 temp642_68))
(assert (= temp642_70 (select ARGNAME_output_padding_NAMEEND_VAL temp642_69)))
(assert (= temp642_71 #x0000000000000000))
(assert (= temp642_72 #x0000000000000001))
(assert (= temp642_73 temp642_72))
(assert (= temp642_74 (select ARGNAME_output_padding_NAMEEND_VAL temp642_73)))
(assert (= temp642_75 #x0000000000000000))
(assert (= temp642_76 #x0000000000000002))
(assert (= temp642_77 temp642_76))
(assert (= temp642_78 (select ARGNAME_output_padding_NAMEEND_VAL temp642_77)))
(assert (= temp642_79 #x0000000000000000))
(assert (= temp642_80 #x0000000000000003))
(assert (= temp642_81 temp642_80))
(assert (= temp642_82 (select ARGNAME_output_padding_NAMEEND_VAL temp642_81)))
(assert (= temp642_83 #x0000000000000000))
(assert (= temp642_84 #x0000000000000004))
(assert (= temp642_85 temp642_84))
(assert (= temp642_86 (select ARGNAME_output_padding_NAMEEND_VAL temp642_85)))
(assert (= temp642_87 #x0000000000000000))
(assert (= temp642_88 #x0000000000000005))
(assert (= temp642_89 temp642_88))
(assert (= temp642_90 (select ARGNAME_output_padding_NAMEEND_VAL temp642_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp642_70 temp642_67)
             (bvslt temp642_74 temp642_71)
             (bvslt temp642_78 temp642_75)
             (bvslt temp642_82 temp642_79)
             (bvslt temp642_86 temp642_83)
             (bvslt temp642_90 temp642_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_91 #x0000000000000000))
(assert (= var1322797 temp642_91))
(assert (= temp642_92 #x0000000000000000))
(assert (= temp642_93 temp642_92))
(assert (= temp642_94 (select ARGNAME_stride_NAMEEND_VAL temp642_93)))
(assert (= temp642_95 #x0000000000000001))
(assert (= temp642_96 temp642_95))
(assert (= temp642_97 (select ARGNAME_stride_NAMEEND_VAL temp642_96)))
(assert (= temp642_98 #x0000000000000002))
(assert (= temp642_99 temp642_98))
(assert (= temp642_100 (select ARGNAME_stride_NAMEEND_VAL temp642_99)))
(assert (= temp642_101 #x0000000000000003))
(assert (= temp642_102 temp642_101))
(assert (= temp642_103 (select ARGNAME_stride_NAMEEND_VAL temp642_102)))
(assert (= temp642_104 #x0000000000000004))
(assert (= temp642_105 temp642_104))
(assert (= temp642_106 (select ARGNAME_stride_NAMEEND_VAL temp642_105)))
(assert (= temp642_107 #x0000000000000005))
(assert (= temp642_108 temp642_107))
(assert (= temp642_109 (select ARGNAME_stride_NAMEEND_VAL temp642_108)))
(assert (= temp642_110 #x0000000000000000))
(assert (= temp642_111 #x0000000000000000))
(assert (= temp642_112 temp642_111))
(assert (= temp642_113 (select ARGNAME_stride_NAMEEND_VAL temp642_112)))
(assert (= temp642_114 #x0000000000000000))
(assert (= temp642_115 #x0000000000000001))
(assert (= temp642_116 temp642_115))
(assert (= temp642_117 (select ARGNAME_stride_NAMEEND_VAL temp642_116)))
(assert (= temp642_118 #x0000000000000000))
(assert (= temp642_119 #x0000000000000002))
(assert (= temp642_120 temp642_119))
(assert (= temp642_121 (select ARGNAME_stride_NAMEEND_VAL temp642_120)))
(assert (= temp642_122 #x0000000000000000))
(assert (= temp642_123 #x0000000000000003))
(assert (= temp642_124 temp642_123))
(assert (= temp642_125 (select ARGNAME_stride_NAMEEND_VAL temp642_124)))
(assert (= temp642_126 #x0000000000000000))
(assert (= temp642_127 #x0000000000000004))
(assert (= temp642_128 temp642_127))
(assert (= temp642_129 (select ARGNAME_stride_NAMEEND_VAL temp642_128)))
(assert (= temp642_130 #x0000000000000000))
(assert (= temp642_131 #x0000000000000005))
(assert (= temp642_132 temp642_131))
(assert (= temp642_133 (select ARGNAME_stride_NAMEEND_VAL temp642_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp642_113 temp642_110)
             (bvsle temp642_117 temp642_114)
             (bvsle temp642_121 temp642_118)
             (bvsle temp642_125 temp642_122)
             (bvsle temp642_129 temp642_126)
             (bvsle temp642_133 temp642_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_134 #x0000000000000000))
(assert (= var1322807 temp642_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_135 #x0000000000000001))
(assert (= var1322819 temp642_135))
(assert (= temp642_136 #x0000000000000000))
(assert (= var1310898 temp642_136))
(assert (= temp642_137 #x0000000000000000))
(assert (= temp642_138 temp642_137))
(assert (= temp642_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_138)))
(assert (= temp642_140 #x0000000000000001))
(assert (= temp642_141 temp642_140))
(assert (= temp642_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_141)))
(assert (= temp642_143 #x0000000000000002))
(assert (= temp642_144 temp642_143))
(assert (= temp642_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_144)))
(assert (= temp642_146 #x0000000000000003))
(assert (= temp642_147 temp642_146))
(assert (= temp642_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_147)))
(assert (= temp642_149 #x0000000000000004))
(assert (= temp642_150 temp642_149))
(assert (= temp642_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_150)))
(assert (= temp642_152 #x0000000000000005))
(assert (= temp642_153 temp642_152))
(assert (= temp642_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_153)))
(assert (= temp642_156 var1310898))
(assert (= temp642_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_156)))
(assert (= temp642_155 temp642_157))
(assert (= var1322852
   (ite (bvslt temp642_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_158 #x0000000000000000))
(assert (= var1322852 temp642_158))
(assert (= temp642_159 #x0000000000000000))
(assert (= var1310898 temp642_159))
(assert (= temp642_161 var1310898))
(assert (= temp642_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_161)))
(assert (= temp642_160 temp642_162))
(assert (= var1322874 (bvsmod temp642_160 ARGNAME_groups_NAMEEND)))
(assert (= temp642_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp642_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_164 #x0000000000000001))
(assert (= var1322875 temp642_164))
(assert (= temp642_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp642_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_166 #x0000000000000001))
(assert (= var1322895 temp642_166))
(assert (= temp642_167 #x0000000000000001))
(assert (= var1311786 temp642_167))
(assert (= temp642_168 #x0000000000000000))
(assert (= temp642_169 temp642_168))
(assert (= temp642_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_169)))
(assert (= temp642_171 #x0000000000000001))
(assert (= temp642_172 temp642_171))
(assert (= temp642_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_172)))
(assert (= temp642_174 #x0000000000000002))
(assert (= temp642_175 temp642_174))
(assert (= temp642_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_175)))
(assert (= temp642_177 #x0000000000000003))
(assert (= temp642_178 temp642_177))
(assert (= temp642_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_178)))
(assert (= temp642_180 #x0000000000000004))
(assert (= temp642_181 temp642_180))
(assert (= temp642_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_181)))
(assert (= temp642_183 #x0000000000000005))
(assert (= temp642_184 temp642_183))
(assert (= temp642_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_184)))
(assert (= temp642_186 #x0000000000000000))
(assert (= temp642_187
   (ite (bvslt var1311786 temp642_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp642_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_187)))
(assert (= var1322903 temp642_188))
(assert (bvslt (ite (bvslt var1311786 temp642_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp642_189 #x0000000000000001))
(assert (= var1311786 temp642_189))
(assert (= temp642_191 var1311786))
(assert (= temp642_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_191)))
(assert (= temp642_190 temp642_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp642_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_193 #x0000000000000001))
(assert (= var1322908 temp642_193))
(assert (= temp642_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp642_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_195 #x0000000000000001))
(assert (= var1322975 temp642_195))
(assert (= temp642_196 #x0000000000000000))
(assert (= var1310898 temp642_196))
(assert (= temp642_197 #x0000000000000000))
(assert (= temp642_198 temp642_197))
(assert (= temp642_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp642_198)))
(assert (= temp642_200 #x0000000000000001))
(assert (= temp642_201 temp642_200))
(assert (= temp642_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp642_201)))
(assert (= temp642_203 #x0000000000000002))
(assert (= temp642_204 temp642_203))
(assert (= temp642_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp642_204)))
(assert (= temp642_206 #x0000000000000003))
(assert (= temp642_207 temp642_206))
(assert (= temp642_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp642_207)))
(assert (= temp642_209 #x0000000000000004))
(assert (= temp642_210 temp642_209))
(assert (= temp642_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp642_210)))
(assert (= temp642_212 #x0000000000000005))
(assert (= temp642_213 temp642_212))
(assert (= temp642_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp642_213)))
(assert (= temp642_215 #x0000000000000000))
(assert (= temp642_216
   (ite (bvslt var1310898 temp642_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp642_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp642_216)))
(assert (= var1322977 temp642_217))
(assert (bvslt (ite (bvslt var1310898 temp642_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp642_218 #x0000000000000000))
(assert (= var1310898 temp642_218))
(assert (= temp642_220 var1310898))
(assert (= temp642_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_220)))
(assert (= temp642_219 temp642_221))
(assert (= var1322980
   (ite (= var1322977 temp642_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_222 #x0000000000000001))
(assert (= var1322980 temp642_222))
(assert (= temp642_223 #x0000000000000002))
(assert (= var1848169 temp642_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp642_225 #x0000000000000001))
(assert (= var1323065 temp642_225))
(assert (= temp642_226 #x0000000000000001))
(assert (= var3486735 temp642_226))
(assert (= temp642_227 #x0000000000000001))
(assert (= var3814415 temp642_227))
(assert (= temp642_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp642_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_229 #x0000000000000001))
(assert (= var79986 temp642_229))
(assert (= temp642_230 #x0000000000000001))
(assert (= var80116 temp642_230))
(assert (= var4796905 var80116))
(assert (= temp642_231 #x0000000000000000))
(assert (= var4784306 temp642_231))
(assert (= temp642_232 #x0000000000000000))
(assert (= temp642_233
   (ite (bvslt var4784306 temp642_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp642_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_233)))
(assert (= var4796924 temp642_234))
(assert (bvslt (ite (bvslt var4784306 temp642_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp642_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp642_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_236 #x0000000000000001))
(assert (= var4796925 temp642_236))
(assert (= temp642_237 #x0000000000000000))
(assert (= var4996927 temp642_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp642_238 #x0000000000000002))
(assert (= var5125763 temp642_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_239 #x0000000000000000))
(assert (= var5191324 temp642_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp642_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp642_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp642_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp642_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6635340 var80315))
(assert (= var6635341 var80317))
(assert (= var6635342 var80319))
(assert (= temp642_244 #x0000000000000001))
(assert (= temp642_243 temp642_244))
(assert (= temp642_245 #x0000000000000001))
(assert (= var7933418 temp642_245))
(assert (= temp642_247 #xffffffffffffffff))
(assert (= temp642_246 temp642_247))
(assert (= temp642_248 #x0000000000000001))
(assert (= var79986 temp642_248))
(assert (= temp642_249 #x0000000000000000))
(assert (= var8729364 temp642_249))
(assert (= var8729331 var8729364))
(assert (= var8597895 var8729331))
(assert (= var8597891 var8597895))
(assert (= var81597 var8597891))
(assert (= temp642_250 #x0000000000000000))
(assert (= var81597 temp642_250))
(model-add temp642_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp642_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp642_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






