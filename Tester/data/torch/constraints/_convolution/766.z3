(declare-fun temp1018_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1018_2 () (_ BitVec 64))
(declare-fun temp1018_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1018_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1018_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1018_6 () (_ BitVec 64))
(declare-fun temp1018_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1018_8 () (_ BitVec 64))
(declare-fun temp1018_9 () (_ BitVec 64))
(declare-fun temp1018_10 () (_ BitVec 64))
(declare-fun temp1018_11 () (_ BitVec 64))
(declare-fun temp1018_12 () (_ BitVec 64))
(declare-fun temp1018_13 () (_ BitVec 64))
(declare-fun temp1018_14 () (_ BitVec 64))
(declare-fun temp1018_15 () (_ BitVec 64))
(declare-fun temp1018_16 () (_ BitVec 64))
(declare-fun temp1018_17 () (_ BitVec 64))
(declare-fun temp1018_18 () (_ BitVec 64))
(declare-fun temp1018_19 () (_ BitVec 64))
(declare-fun temp1018_20 () (_ BitVec 64))
(declare-fun temp1018_21 () (_ BitVec 64))
(declare-fun temp1018_22 () (_ BitVec 64))
(declare-fun temp1018_23 () (_ BitVec 64))
(declare-fun temp1018_24 () (_ BitVec 64))
(declare-fun temp1018_25 () (_ BitVec 64))
(declare-fun temp1018_26 () (_ BitVec 64))
(declare-fun temp1018_27 () (_ BitVec 64))
(declare-fun temp1018_28 () (_ BitVec 64))
(declare-fun temp1018_29 () (_ BitVec 64))
(declare-fun temp1018_30 () (_ BitVec 64))
(declare-fun temp1018_31 () (_ BitVec 64))
(declare-fun temp1018_32 () (_ BitVec 64))
(declare-fun temp1018_33 () (_ BitVec 64))
(declare-fun temp1018_34 () (_ BitVec 64))
(declare-fun temp1018_35 () (_ BitVec 64))
(declare-fun temp1018_36 () (_ BitVec 64))
(declare-fun temp1018_37 () (_ BitVec 64))
(declare-fun temp1018_38 () (_ BitVec 64))
(declare-fun temp1018_39 () (_ BitVec 64))
(declare-fun temp1018_40 () (_ BitVec 64))
(declare-fun temp1018_41 () (_ BitVec 64))
(declare-fun temp1018_42 () (_ BitVec 64))
(declare-fun temp1018_43 () (_ BitVec 64))
(declare-fun temp1018_44 () (_ BitVec 64))
(declare-fun temp1018_45 () (_ BitVec 64))
(declare-fun temp1018_46 () (_ BitVec 64))
(declare-fun temp1018_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1018_48 () (_ BitVec 64))
(declare-fun temp1018_49 () (_ BitVec 64))
(declare-fun temp1018_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1018_51 () (_ BitVec 64))
(declare-fun temp1018_52 () (_ BitVec 64))
(declare-fun temp1018_53 () (_ BitVec 64))
(declare-fun temp1018_54 () (_ BitVec 64))
(declare-fun temp1018_55 () (_ BitVec 64))
(declare-fun temp1018_56 () (_ BitVec 64))
(declare-fun temp1018_57 () (_ BitVec 64))
(declare-fun temp1018_58 () (_ BitVec 64))
(declare-fun temp1018_59 () (_ BitVec 64))
(declare-fun temp1018_60 () (_ BitVec 64))
(declare-fun temp1018_61 () (_ BitVec 64))
(declare-fun temp1018_62 () (_ BitVec 64))
(declare-fun temp1018_63 () (_ BitVec 64))
(declare-fun temp1018_64 () (_ BitVec 64))
(declare-fun temp1018_65 () (_ BitVec 64))
(declare-fun temp1018_66 () (_ BitVec 64))
(declare-fun temp1018_67 () (_ BitVec 64))
(declare-fun temp1018_68 () (_ BitVec 64))
(declare-fun temp1018_69 () (_ BitVec 64))
(declare-fun temp1018_70 () (_ BitVec 64))
(declare-fun temp1018_71 () (_ BitVec 64))
(declare-fun temp1018_72 () (_ BitVec 64))
(declare-fun temp1018_73 () (_ BitVec 64))
(declare-fun temp1018_74 () (_ BitVec 64))
(declare-fun temp1018_75 () (_ BitVec 64))
(declare-fun temp1018_76 () (_ BitVec 64))
(declare-fun temp1018_77 () (_ BitVec 64))
(declare-fun temp1018_78 () (_ BitVec 64))
(declare-fun temp1018_79 () (_ BitVec 64))
(declare-fun temp1018_80 () (_ BitVec 64))
(declare-fun temp1018_81 () (_ BitVec 64))
(declare-fun temp1018_82 () (_ BitVec 64))
(declare-fun temp1018_83 () (_ BitVec 64))
(declare-fun temp1018_84 () (_ BitVec 64))
(declare-fun temp1018_85 () (_ BitVec 64))
(declare-fun temp1018_86 () (_ BitVec 64))
(declare-fun temp1018_87 () (_ BitVec 64))
(declare-fun temp1018_88 () (_ BitVec 64))
(declare-fun temp1018_89 () (_ BitVec 64))
(declare-fun temp1018_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1018_91 () (_ BitVec 64))
(declare-fun temp1018_92 () (_ BitVec 64))
(declare-fun temp1018_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1018_94 () (_ BitVec 64))
(declare-fun temp1018_95 () (_ BitVec 64))
(declare-fun temp1018_96 () (_ BitVec 64))
(declare-fun temp1018_97 () (_ BitVec 64))
(declare-fun temp1018_98 () (_ BitVec 64))
(declare-fun temp1018_99 () (_ BitVec 64))
(declare-fun temp1018_100 () (_ BitVec 64))
(declare-fun temp1018_101 () (_ BitVec 64))
(declare-fun temp1018_102 () (_ BitVec 64))
(declare-fun temp1018_103 () (_ BitVec 64))
(declare-fun temp1018_104 () (_ BitVec 64))
(declare-fun temp1018_105 () (_ BitVec 64))
(declare-fun temp1018_106 () (_ BitVec 64))
(declare-fun temp1018_107 () (_ BitVec 64))
(declare-fun temp1018_108 () (_ BitVec 64))
(declare-fun temp1018_109 () (_ BitVec 64))
(declare-fun temp1018_110 () (_ BitVec 64))
(declare-fun temp1018_111 () (_ BitVec 64))
(declare-fun temp1018_112 () (_ BitVec 64))
(declare-fun temp1018_113 () (_ BitVec 64))
(declare-fun temp1018_114 () (_ BitVec 64))
(declare-fun temp1018_115 () (_ BitVec 64))
(declare-fun temp1018_116 () (_ BitVec 64))
(declare-fun temp1018_117 () (_ BitVec 64))
(declare-fun temp1018_118 () (_ BitVec 64))
(declare-fun temp1018_119 () (_ BitVec 64))
(declare-fun temp1018_120 () (_ BitVec 64))
(declare-fun temp1018_121 () (_ BitVec 64))
(declare-fun temp1018_122 () (_ BitVec 64))
(declare-fun temp1018_123 () (_ BitVec 64))
(declare-fun temp1018_124 () (_ BitVec 64))
(declare-fun temp1018_125 () (_ BitVec 64))
(declare-fun temp1018_126 () (_ BitVec 64))
(declare-fun temp1018_127 () (_ BitVec 64))
(declare-fun temp1018_128 () (_ BitVec 64))
(declare-fun temp1018_129 () (_ BitVec 64))
(declare-fun temp1018_130 () (_ BitVec 64))
(declare-fun temp1018_131 () (_ BitVec 64))
(declare-fun temp1018_132 () (_ BitVec 64))
(declare-fun temp1018_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1018_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1018_135 () (_ BitVec 64))
(declare-fun temp1018_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1018_137 () (_ BitVec 64))
(declare-fun temp1018_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1018_139 () (_ BitVec 64))
(declare-fun temp1018_140 () (_ BitVec 64))
(declare-fun temp1018_141 () (_ BitVec 64))
(declare-fun temp1018_142 () (_ BitVec 64))
(declare-fun temp1018_143 () (_ BitVec 64))
(declare-fun temp1018_144 () (_ BitVec 64))
(declare-fun temp1018_145 () (_ BitVec 64))
(declare-fun temp1018_146 () (_ BitVec 64))
(declare-fun temp1018_147 () (_ BitVec 64))
(declare-fun temp1018_148 () (_ BitVec 64))
(declare-fun temp1018_149 () (_ BitVec 64))
(declare-fun temp1018_150 () (_ BitVec 64))
(declare-fun temp1018_151 () (_ BitVec 64))
(declare-fun temp1018_152 () (_ BitVec 64))
(declare-fun temp1018_153 () (_ BitVec 64))
(declare-fun temp1018_154 () (_ BitVec 64))
(declare-fun temp1018_156 () (_ BitVec 64))
(declare-fun temp1018_157 () (_ BitVec 64))
(declare-fun temp1018_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1018_158 () (_ BitVec 64))
(declare-fun temp1018_159 () (_ BitVec 64))
(declare-fun temp1018_161 () (_ BitVec 64))
(declare-fun temp1018_162 () (_ BitVec 64))
(declare-fun temp1018_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1018_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1018_164 () (_ BitVec 64))
(declare-fun temp1018_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1018_166 () (_ BitVec 64))
(declare-fun temp1018_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1018_168 () (_ BitVec 64))
(declare-fun temp1018_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1018_170 () (_ BitVec 64))
(declare-fun temp1018_171 () (_ BitVec 64))
(declare-fun temp1018_172 () (_ BitVec 64))
(declare-fun temp1018_173 () (_ BitVec 64))
(declare-fun temp1018_174 () (_ BitVec 64))
(declare-fun temp1018_175 () (_ BitVec 64))
(declare-fun temp1018_176 () (_ BitVec 64))
(declare-fun temp1018_177 () (_ BitVec 64))
(declare-fun temp1018_178 () (_ BitVec 64))
(declare-fun temp1018_179 () (_ BitVec 64))
(declare-fun temp1018_180 () (_ BitVec 64))
(declare-fun temp1018_181 () (_ BitVec 64))
(declare-fun temp1018_182 () (_ BitVec 64))
(declare-fun temp1018_183 () (_ BitVec 64))
(declare-fun temp1018_184 () (_ BitVec 64))
(declare-fun temp1018_185 () (_ BitVec 64))
(declare-fun temp1018_186 () (_ BitVec 64))
(declare-fun temp1018_187 () (_ BitVec 64))
(declare-fun temp1018_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1018_189 () (_ BitVec 64))
(declare-fun temp1018_191 () (_ BitVec 64))
(declare-fun temp1018_192 () (_ BitVec 64))
(declare-fun temp1018_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1018_193 () (_ BitVec 64))
(declare-fun temp1018_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1018_195 () (_ BitVec 64))
(declare-fun temp1018_196 () (_ BitVec 64))
(declare-fun temp1018_197 () (_ BitVec 64))
(declare-fun temp1018_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1018_199 () (_ BitVec 64))
(declare-fun temp1018_200 () (_ BitVec 64))
(declare-fun temp1018_201 () (_ BitVec 64))
(declare-fun temp1018_202 () (_ BitVec 64))
(declare-fun temp1018_203 () (_ BitVec 64))
(declare-fun temp1018_204 () (_ BitVec 64))
(declare-fun temp1018_205 () (_ BitVec 64))
(declare-fun temp1018_206 () (_ BitVec 64))
(declare-fun temp1018_207 () (_ BitVec 64))
(declare-fun temp1018_208 () (_ BitVec 64))
(declare-fun temp1018_209 () (_ BitVec 64))
(declare-fun temp1018_210 () (_ BitVec 64))
(declare-fun temp1018_211 () (_ BitVec 64))
(declare-fun temp1018_212 () (_ BitVec 64))
(declare-fun temp1018_213 () (_ BitVec 64))
(declare-fun temp1018_214 () (_ BitVec 64))
(declare-fun temp1018_215 () (_ BitVec 64))
(declare-fun temp1018_216 () (_ BitVec 64))
(declare-fun temp1018_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1018_218 () (_ BitVec 64))
(declare-fun temp1018_220 () (_ BitVec 64))
(declare-fun temp1018_221 () (_ BitVec 64))
(declare-fun temp1018_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1018_222 () (_ BitVec 64))
(declare-fun temp1018_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1018_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1018_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1018_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1018_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1018_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1018_229 () (_ BitVec 64))
(declare-fun temp1018_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1018_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1018_232 () (_ BitVec 64))
(declare-fun temp1018_233 () (_ BitVec 64))
(declare-fun temp1018_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1018_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1018_236 () (_ BitVec 64))
(declare-fun temp1018_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1018_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1018_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1018_240 () (_ BitVec 64))
(assert (= temp1018_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1018_1)))
(assert (= temp1018_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1018_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_3 #x0000000000000000))
(assert (= var79869 temp1018_3))
(assert (= temp1018_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1018_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_5 #x0000000000000000))
(assert (= var79914 temp1018_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1018_6 #x0000000000000000))
(assert (= temp1018_7 temp1018_6))
(assert (= temp1018_8 (select ARGNAME_padding_NAMEEND_VAL temp1018_7)))
(assert (= temp1018_9 #x0000000000000001))
(assert (= temp1018_10 temp1018_9))
(assert (= temp1018_11 (select ARGNAME_padding_NAMEEND_VAL temp1018_10)))
(assert (= temp1018_12 #x0000000000000002))
(assert (= temp1018_13 temp1018_12))
(assert (= temp1018_14 (select ARGNAME_padding_NAMEEND_VAL temp1018_13)))
(assert (= temp1018_15 #x0000000000000003))
(assert (= temp1018_16 temp1018_15))
(assert (= temp1018_17 (select ARGNAME_padding_NAMEEND_VAL temp1018_16)))
(assert (= temp1018_18 #x0000000000000004))
(assert (= temp1018_19 temp1018_18))
(assert (= temp1018_20 (select ARGNAME_padding_NAMEEND_VAL temp1018_19)))
(assert (= temp1018_21 #x0000000000000005))
(assert (= temp1018_22 temp1018_21))
(assert (= temp1018_23 (select ARGNAME_padding_NAMEEND_VAL temp1018_22)))
(assert (= temp1018_24 #x0000000000000000))
(assert (= temp1018_25 #x0000000000000000))
(assert (= temp1018_26 temp1018_25))
(assert (= temp1018_27 (select ARGNAME_padding_NAMEEND_VAL temp1018_26)))
(assert (= temp1018_28 #x0000000000000000))
(assert (= temp1018_29 #x0000000000000001))
(assert (= temp1018_30 temp1018_29))
(assert (= temp1018_31 (select ARGNAME_padding_NAMEEND_VAL temp1018_30)))
(assert (= temp1018_32 #x0000000000000000))
(assert (= temp1018_33 #x0000000000000002))
(assert (= temp1018_34 temp1018_33))
(assert (= temp1018_35 (select ARGNAME_padding_NAMEEND_VAL temp1018_34)))
(assert (= temp1018_36 #x0000000000000000))
(assert (= temp1018_37 #x0000000000000003))
(assert (= temp1018_38 temp1018_37))
(assert (= temp1018_39 (select ARGNAME_padding_NAMEEND_VAL temp1018_38)))
(assert (= temp1018_40 #x0000000000000000))
(assert (= temp1018_41 #x0000000000000004))
(assert (= temp1018_42 temp1018_41))
(assert (= temp1018_43 (select ARGNAME_padding_NAMEEND_VAL temp1018_42)))
(assert (= temp1018_44 #x0000000000000000))
(assert (= temp1018_45 #x0000000000000005))
(assert (= temp1018_46 temp1018_45))
(assert (= temp1018_47 (select ARGNAME_padding_NAMEEND_VAL temp1018_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1018_27 temp1018_24)
             (bvslt temp1018_31 temp1018_28)
             (bvslt temp1018_35 temp1018_32)
             (bvslt temp1018_39 temp1018_36)
             (bvslt temp1018_43 temp1018_40)
             (bvslt temp1018_47 temp1018_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_48 #x0000000000000000))
(assert (= var1322786 temp1018_48))
(assert (= temp1018_49 #x0000000000000000))
(assert (= temp1018_50 temp1018_49))
(assert (= temp1018_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_50)))
(assert (= temp1018_52 #x0000000000000001))
(assert (= temp1018_53 temp1018_52))
(assert (= temp1018_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_53)))
(assert (= temp1018_55 #x0000000000000002))
(assert (= temp1018_56 temp1018_55))
(assert (= temp1018_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_56)))
(assert (= temp1018_58 #x0000000000000003))
(assert (= temp1018_59 temp1018_58))
(assert (= temp1018_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_59)))
(assert (= temp1018_61 #x0000000000000004))
(assert (= temp1018_62 temp1018_61))
(assert (= temp1018_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_62)))
(assert (= temp1018_64 #x0000000000000005))
(assert (= temp1018_65 temp1018_64))
(assert (= temp1018_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_65)))
(assert (= temp1018_67 #x0000000000000000))
(assert (= temp1018_68 #x0000000000000000))
(assert (= temp1018_69 temp1018_68))
(assert (= temp1018_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_69)))
(assert (= temp1018_71 #x0000000000000000))
(assert (= temp1018_72 #x0000000000000001))
(assert (= temp1018_73 temp1018_72))
(assert (= temp1018_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_73)))
(assert (= temp1018_75 #x0000000000000000))
(assert (= temp1018_76 #x0000000000000002))
(assert (= temp1018_77 temp1018_76))
(assert (= temp1018_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_77)))
(assert (= temp1018_79 #x0000000000000000))
(assert (= temp1018_80 #x0000000000000003))
(assert (= temp1018_81 temp1018_80))
(assert (= temp1018_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_81)))
(assert (= temp1018_83 #x0000000000000000))
(assert (= temp1018_84 #x0000000000000004))
(assert (= temp1018_85 temp1018_84))
(assert (= temp1018_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_85)))
(assert (= temp1018_87 #x0000000000000000))
(assert (= temp1018_88 #x0000000000000005))
(assert (= temp1018_89 temp1018_88))
(assert (= temp1018_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1018_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1018_70 temp1018_67)
             (bvslt temp1018_74 temp1018_71)
             (bvslt temp1018_78 temp1018_75)
             (bvslt temp1018_82 temp1018_79)
             (bvslt temp1018_86 temp1018_83)
             (bvslt temp1018_90 temp1018_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_91 #x0000000000000000))
(assert (= var1322797 temp1018_91))
(assert (= temp1018_92 #x0000000000000000))
(assert (= temp1018_93 temp1018_92))
(assert (= temp1018_94 (select ARGNAME_stride_NAMEEND_VAL temp1018_93)))
(assert (= temp1018_95 #x0000000000000001))
(assert (= temp1018_96 temp1018_95))
(assert (= temp1018_97 (select ARGNAME_stride_NAMEEND_VAL temp1018_96)))
(assert (= temp1018_98 #x0000000000000002))
(assert (= temp1018_99 temp1018_98))
(assert (= temp1018_100 (select ARGNAME_stride_NAMEEND_VAL temp1018_99)))
(assert (= temp1018_101 #x0000000000000003))
(assert (= temp1018_102 temp1018_101))
(assert (= temp1018_103 (select ARGNAME_stride_NAMEEND_VAL temp1018_102)))
(assert (= temp1018_104 #x0000000000000004))
(assert (= temp1018_105 temp1018_104))
(assert (= temp1018_106 (select ARGNAME_stride_NAMEEND_VAL temp1018_105)))
(assert (= temp1018_107 #x0000000000000005))
(assert (= temp1018_108 temp1018_107))
(assert (= temp1018_109 (select ARGNAME_stride_NAMEEND_VAL temp1018_108)))
(assert (= temp1018_110 #x0000000000000000))
(assert (= temp1018_111 #x0000000000000000))
(assert (= temp1018_112 temp1018_111))
(assert (= temp1018_113 (select ARGNAME_stride_NAMEEND_VAL temp1018_112)))
(assert (= temp1018_114 #x0000000000000000))
(assert (= temp1018_115 #x0000000000000001))
(assert (= temp1018_116 temp1018_115))
(assert (= temp1018_117 (select ARGNAME_stride_NAMEEND_VAL temp1018_116)))
(assert (= temp1018_118 #x0000000000000000))
(assert (= temp1018_119 #x0000000000000002))
(assert (= temp1018_120 temp1018_119))
(assert (= temp1018_121 (select ARGNAME_stride_NAMEEND_VAL temp1018_120)))
(assert (= temp1018_122 #x0000000000000000))
(assert (= temp1018_123 #x0000000000000003))
(assert (= temp1018_124 temp1018_123))
(assert (= temp1018_125 (select ARGNAME_stride_NAMEEND_VAL temp1018_124)))
(assert (= temp1018_126 #x0000000000000000))
(assert (= temp1018_127 #x0000000000000004))
(assert (= temp1018_128 temp1018_127))
(assert (= temp1018_129 (select ARGNAME_stride_NAMEEND_VAL temp1018_128)))
(assert (= temp1018_130 #x0000000000000000))
(assert (= temp1018_131 #x0000000000000005))
(assert (= temp1018_132 temp1018_131))
(assert (= temp1018_133 (select ARGNAME_stride_NAMEEND_VAL temp1018_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1018_113 temp1018_110)
             (bvsle temp1018_117 temp1018_114)
             (bvsle temp1018_121 temp1018_118)
             (bvsle temp1018_125 temp1018_122)
             (bvsle temp1018_129 temp1018_126)
             (bvsle temp1018_133 temp1018_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_134 #x0000000000000000))
(assert (= var1322807 temp1018_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_135 #x0000000000000001))
(assert (= var1322819 temp1018_135))
(assert (= temp1018_136 #x0000000000000000))
(assert (= var1310898 temp1018_136))
(assert (= temp1018_137 #x0000000000000000))
(assert (= temp1018_138 temp1018_137))
(assert (= temp1018_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_138)))
(assert (= temp1018_140 #x0000000000000001))
(assert (= temp1018_141 temp1018_140))
(assert (= temp1018_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_141)))
(assert (= temp1018_143 #x0000000000000002))
(assert (= temp1018_144 temp1018_143))
(assert (= temp1018_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_144)))
(assert (= temp1018_146 #x0000000000000003))
(assert (= temp1018_147 temp1018_146))
(assert (= temp1018_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_147)))
(assert (= temp1018_149 #x0000000000000004))
(assert (= temp1018_150 temp1018_149))
(assert (= temp1018_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_150)))
(assert (= temp1018_152 #x0000000000000005))
(assert (= temp1018_153 temp1018_152))
(assert (= temp1018_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_153)))
(assert (= temp1018_156 var1310898))
(assert (= temp1018_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_156)))
(assert (= temp1018_155 temp1018_157))
(assert (= var1322852
   (ite (bvslt temp1018_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_158 #x0000000000000000))
(assert (= var1322852 temp1018_158))
(assert (= temp1018_159 #x0000000000000000))
(assert (= var1310898 temp1018_159))
(assert (= temp1018_161 var1310898))
(assert (= temp1018_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_161)))
(assert (= temp1018_160 temp1018_162))
(assert (= var1322874 (bvsmod temp1018_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1018_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1018_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1018_164 #x0000000000000001))
(assert (= var1322875 temp1018_164))
(assert (= temp1018_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1018_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_166 #x0000000000000001))
(assert (= var1322895 temp1018_166))
(assert (= temp1018_167 #x0000000000000001))
(assert (= var1311786 temp1018_167))
(assert (= temp1018_168 #x0000000000000000))
(assert (= temp1018_169 temp1018_168))
(assert (= temp1018_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1018_169)))
(assert (= temp1018_171 #x0000000000000001))
(assert (= temp1018_172 temp1018_171))
(assert (= temp1018_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1018_172)))
(assert (= temp1018_174 #x0000000000000002))
(assert (= temp1018_175 temp1018_174))
(assert (= temp1018_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1018_175)))
(assert (= temp1018_177 #x0000000000000003))
(assert (= temp1018_178 temp1018_177))
(assert (= temp1018_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1018_178)))
(assert (= temp1018_180 #x0000000000000004))
(assert (= temp1018_181 temp1018_180))
(assert (= temp1018_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1018_181)))
(assert (= temp1018_183 #x0000000000000005))
(assert (= temp1018_184 temp1018_183))
(assert (= temp1018_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1018_184)))
(assert (= temp1018_186 #x0000000000000000))
(assert (= temp1018_187
   (ite (bvslt var1311786 temp1018_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1018_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1018_187)))
(assert (= var1322903 temp1018_188))
(assert (bvslt (ite (bvslt var1311786 temp1018_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1018_189 #x0000000000000001))
(assert (= var1311786 temp1018_189))
(assert (= temp1018_191 var1311786))
(assert (= temp1018_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_191)))
(assert (= temp1018_190 temp1018_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1018_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1018_193 #x0000000000000001))
(assert (= var1322908 temp1018_193))
(assert (= temp1018_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1018_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_195 #x0000000000000001))
(assert (= var1322975 temp1018_195))
(assert (= temp1018_196 #x0000000000000000))
(assert (= var1310898 temp1018_196))
(assert (= temp1018_197 #x0000000000000000))
(assert (= temp1018_198 temp1018_197))
(assert (= temp1018_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1018_198)))
(assert (= temp1018_200 #x0000000000000001))
(assert (= temp1018_201 temp1018_200))
(assert (= temp1018_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1018_201)))
(assert (= temp1018_203 #x0000000000000002))
(assert (= temp1018_204 temp1018_203))
(assert (= temp1018_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1018_204)))
(assert (= temp1018_206 #x0000000000000003))
(assert (= temp1018_207 temp1018_206))
(assert (= temp1018_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1018_207)))
(assert (= temp1018_209 #x0000000000000004))
(assert (= temp1018_210 temp1018_209))
(assert (= temp1018_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1018_210)))
(assert (= temp1018_212 #x0000000000000005))
(assert (= temp1018_213 temp1018_212))
(assert (= temp1018_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1018_213)))
(assert (= temp1018_215 #x0000000000000000))
(assert (= temp1018_216
   (ite (bvslt var1310898 temp1018_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1018_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1018_216)))
(assert (= var1322977 temp1018_217))
(assert (bvslt (ite (bvslt var1310898 temp1018_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1018_218 #x0000000000000000))
(assert (= var1310898 temp1018_218))
(assert (= temp1018_220 var1310898))
(assert (= temp1018_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1018_220)))
(assert (= temp1018_219 temp1018_221))
(assert (= var1322980
   (ite (= var1322977 temp1018_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1018_222 #x0000000000000001))
(assert (= var1322980 temp1018_222))
(assert (= temp1018_223 #x0000000000000002))
(assert (= var1848169 temp1018_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1018_225 #x0000000000000001))
(assert (= var1323065 temp1018_225))
(assert (= temp1018_226 #x0000000000000001))
(assert (= var3486735 temp1018_226))
(assert (= temp1018_227 #x0000000000000001))
(assert (= var3814415 temp1018_227))
(assert (= temp1018_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1018_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_229 #x0000000000000001))
(assert (= var79986 temp1018_229))
(assert (= temp1018_230 #x0000000000000001))
(assert (= var80116 temp1018_230))
(assert (= var4796905 var80116))
(assert (= temp1018_231 #x0000000000000000))
(assert (= var4784306 temp1018_231))
(assert (= temp1018_232 #x0000000000000000))
(assert (= temp1018_233
   (ite (bvslt var4784306 temp1018_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1018_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1018_233)))
(assert (= var4796924 temp1018_234))
(assert (bvslt (ite (bvslt var4784306 temp1018_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1018_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1018_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1018_236 #x0000000000000001))
(assert (= var4796925 temp1018_236))
(assert (= temp1018_237 #x0000000000000000))
(assert (= var4996927 temp1018_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1018_238 #x0000000000000002))
(assert (= var5125763 temp1018_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1018_239 #x0000000000000000))
(assert (= var5191324 temp1018_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1018_240 #x0000000000000001))
(assert (= var79986 temp1018_240))
(model-add temp1018_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1018_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1018_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






