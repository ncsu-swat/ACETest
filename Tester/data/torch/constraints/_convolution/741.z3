(declare-fun temp985_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp985_2 () (_ BitVec 64))
(declare-fun temp985_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp985_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp985_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp985_6 () (_ BitVec 64))
(declare-fun temp985_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_8 () (_ BitVec 64))
(declare-fun temp985_9 () (_ BitVec 64))
(declare-fun temp985_10 () (_ BitVec 64))
(declare-fun temp985_11 () (_ BitVec 64))
(declare-fun temp985_12 () (_ BitVec 64))
(declare-fun temp985_13 () (_ BitVec 64))
(declare-fun temp985_14 () (_ BitVec 64))
(declare-fun temp985_15 () (_ BitVec 64))
(declare-fun temp985_16 () (_ BitVec 64))
(declare-fun temp985_17 () (_ BitVec 64))
(declare-fun temp985_18 () (_ BitVec 64))
(declare-fun temp985_19 () (_ BitVec 64))
(declare-fun temp985_20 () (_ BitVec 64))
(declare-fun temp985_21 () (_ BitVec 64))
(declare-fun temp985_22 () (_ BitVec 64))
(declare-fun temp985_23 () (_ BitVec 64))
(declare-fun temp985_24 () (_ BitVec 64))
(declare-fun temp985_25 () (_ BitVec 64))
(declare-fun temp985_26 () (_ BitVec 64))
(declare-fun temp985_27 () (_ BitVec 64))
(declare-fun temp985_28 () (_ BitVec 64))
(declare-fun temp985_29 () (_ BitVec 64))
(declare-fun temp985_30 () (_ BitVec 64))
(declare-fun temp985_31 () (_ BitVec 64))
(declare-fun temp985_32 () (_ BitVec 64))
(declare-fun temp985_33 () (_ BitVec 64))
(declare-fun temp985_34 () (_ BitVec 64))
(declare-fun temp985_35 () (_ BitVec 64))
(declare-fun temp985_36 () (_ BitVec 64))
(declare-fun temp985_37 () (_ BitVec 64))
(declare-fun temp985_38 () (_ BitVec 64))
(declare-fun temp985_39 () (_ BitVec 64))
(declare-fun temp985_40 () (_ BitVec 64))
(declare-fun temp985_41 () (_ BitVec 64))
(declare-fun temp985_42 () (_ BitVec 64))
(declare-fun temp985_43 () (_ BitVec 64))
(declare-fun temp985_44 () (_ BitVec 64))
(declare-fun temp985_45 () (_ BitVec 64))
(declare-fun temp985_46 () (_ BitVec 64))
(declare-fun temp985_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp985_48 () (_ BitVec 64))
(declare-fun temp985_49 () (_ BitVec 64))
(declare-fun temp985_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_51 () (_ BitVec 64))
(declare-fun temp985_52 () (_ BitVec 64))
(declare-fun temp985_53 () (_ BitVec 64))
(declare-fun temp985_54 () (_ BitVec 64))
(declare-fun temp985_55 () (_ BitVec 64))
(declare-fun temp985_56 () (_ BitVec 64))
(declare-fun temp985_57 () (_ BitVec 64))
(declare-fun temp985_58 () (_ BitVec 64))
(declare-fun temp985_59 () (_ BitVec 64))
(declare-fun temp985_60 () (_ BitVec 64))
(declare-fun temp985_61 () (_ BitVec 64))
(declare-fun temp985_62 () (_ BitVec 64))
(declare-fun temp985_63 () (_ BitVec 64))
(declare-fun temp985_64 () (_ BitVec 64))
(declare-fun temp985_65 () (_ BitVec 64))
(declare-fun temp985_66 () (_ BitVec 64))
(declare-fun temp985_67 () (_ BitVec 64))
(declare-fun temp985_68 () (_ BitVec 64))
(declare-fun temp985_69 () (_ BitVec 64))
(declare-fun temp985_70 () (_ BitVec 64))
(declare-fun temp985_71 () (_ BitVec 64))
(declare-fun temp985_72 () (_ BitVec 64))
(declare-fun temp985_73 () (_ BitVec 64))
(declare-fun temp985_74 () (_ BitVec 64))
(declare-fun temp985_75 () (_ BitVec 64))
(declare-fun temp985_76 () (_ BitVec 64))
(declare-fun temp985_77 () (_ BitVec 64))
(declare-fun temp985_78 () (_ BitVec 64))
(declare-fun temp985_79 () (_ BitVec 64))
(declare-fun temp985_80 () (_ BitVec 64))
(declare-fun temp985_81 () (_ BitVec 64))
(declare-fun temp985_82 () (_ BitVec 64))
(declare-fun temp985_83 () (_ BitVec 64))
(declare-fun temp985_84 () (_ BitVec 64))
(declare-fun temp985_85 () (_ BitVec 64))
(declare-fun temp985_86 () (_ BitVec 64))
(declare-fun temp985_87 () (_ BitVec 64))
(declare-fun temp985_88 () (_ BitVec 64))
(declare-fun temp985_89 () (_ BitVec 64))
(declare-fun temp985_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp985_91 () (_ BitVec 64))
(declare-fun temp985_92 () (_ BitVec 64))
(declare-fun temp985_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_94 () (_ BitVec 64))
(declare-fun temp985_95 () (_ BitVec 64))
(declare-fun temp985_96 () (_ BitVec 64))
(declare-fun temp985_97 () (_ BitVec 64))
(declare-fun temp985_98 () (_ BitVec 64))
(declare-fun temp985_99 () (_ BitVec 64))
(declare-fun temp985_100 () (_ BitVec 64))
(declare-fun temp985_101 () (_ BitVec 64))
(declare-fun temp985_102 () (_ BitVec 64))
(declare-fun temp985_103 () (_ BitVec 64))
(declare-fun temp985_104 () (_ BitVec 64))
(declare-fun temp985_105 () (_ BitVec 64))
(declare-fun temp985_106 () (_ BitVec 64))
(declare-fun temp985_107 () (_ BitVec 64))
(declare-fun temp985_108 () (_ BitVec 64))
(declare-fun temp985_109 () (_ BitVec 64))
(declare-fun temp985_110 () (_ BitVec 64))
(declare-fun temp985_111 () (_ BitVec 64))
(declare-fun temp985_112 () (_ BitVec 64))
(declare-fun temp985_113 () (_ BitVec 64))
(declare-fun temp985_114 () (_ BitVec 64))
(declare-fun temp985_115 () (_ BitVec 64))
(declare-fun temp985_116 () (_ BitVec 64))
(declare-fun temp985_117 () (_ BitVec 64))
(declare-fun temp985_118 () (_ BitVec 64))
(declare-fun temp985_119 () (_ BitVec 64))
(declare-fun temp985_120 () (_ BitVec 64))
(declare-fun temp985_121 () (_ BitVec 64))
(declare-fun temp985_122 () (_ BitVec 64))
(declare-fun temp985_123 () (_ BitVec 64))
(declare-fun temp985_124 () (_ BitVec 64))
(declare-fun temp985_125 () (_ BitVec 64))
(declare-fun temp985_126 () (_ BitVec 64))
(declare-fun temp985_127 () (_ BitVec 64))
(declare-fun temp985_128 () (_ BitVec 64))
(declare-fun temp985_129 () (_ BitVec 64))
(declare-fun temp985_130 () (_ BitVec 64))
(declare-fun temp985_131 () (_ BitVec 64))
(declare-fun temp985_132 () (_ BitVec 64))
(declare-fun temp985_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp985_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp985_135 () (_ BitVec 64))
(declare-fun temp985_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp985_137 () (_ BitVec 64))
(declare-fun temp985_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_139 () (_ BitVec 64))
(declare-fun temp985_140 () (_ BitVec 64))
(declare-fun temp985_141 () (_ BitVec 64))
(declare-fun temp985_142 () (_ BitVec 64))
(declare-fun temp985_143 () (_ BitVec 64))
(declare-fun temp985_144 () (_ BitVec 64))
(declare-fun temp985_145 () (_ BitVec 64))
(declare-fun temp985_146 () (_ BitVec 64))
(declare-fun temp985_147 () (_ BitVec 64))
(declare-fun temp985_148 () (_ BitVec 64))
(declare-fun temp985_149 () (_ BitVec 64))
(declare-fun temp985_150 () (_ BitVec 64))
(declare-fun temp985_151 () (_ BitVec 64))
(declare-fun temp985_152 () (_ BitVec 64))
(declare-fun temp985_153 () (_ BitVec 64))
(declare-fun temp985_154 () (_ BitVec 64))
(declare-fun temp985_156 () (_ BitVec 64))
(declare-fun temp985_157 () (_ BitVec 64))
(declare-fun temp985_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp985_158 () (_ BitVec 64))
(declare-fun temp985_159 () (_ BitVec 64))
(declare-fun temp985_161 () (_ BitVec 64))
(declare-fun temp985_162 () (_ BitVec 64))
(declare-fun temp985_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp985_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp985_164 () (_ BitVec 64))
(declare-fun temp985_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp985_166 () (_ BitVec 64))
(declare-fun temp985_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp985_168 () (_ BitVec 64))
(declare-fun temp985_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_170 () (_ BitVec 64))
(declare-fun temp985_171 () (_ BitVec 64))
(declare-fun temp985_172 () (_ BitVec 64))
(declare-fun temp985_173 () (_ BitVec 64))
(declare-fun temp985_174 () (_ BitVec 64))
(declare-fun temp985_175 () (_ BitVec 64))
(declare-fun temp985_176 () (_ BitVec 64))
(declare-fun temp985_177 () (_ BitVec 64))
(declare-fun temp985_178 () (_ BitVec 64))
(declare-fun temp985_179 () (_ BitVec 64))
(declare-fun temp985_180 () (_ BitVec 64))
(declare-fun temp985_181 () (_ BitVec 64))
(declare-fun temp985_182 () (_ BitVec 64))
(declare-fun temp985_183 () (_ BitVec 64))
(declare-fun temp985_184 () (_ BitVec 64))
(declare-fun temp985_185 () (_ BitVec 64))
(declare-fun temp985_186 () (_ BitVec 64))
(declare-fun temp985_187 () (_ BitVec 64))
(declare-fun temp985_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp985_189 () (_ BitVec 64))
(declare-fun temp985_191 () (_ BitVec 64))
(declare-fun temp985_192 () (_ BitVec 64))
(declare-fun temp985_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp985_193 () (_ BitVec 64))
(declare-fun temp985_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp985_195 () (_ BitVec 64))
(declare-fun temp985_196 () (_ BitVec 64))
(declare-fun temp985_197 () (_ BitVec 64))
(declare-fun temp985_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_199 () (_ BitVec 64))
(declare-fun temp985_200 () (_ BitVec 64))
(declare-fun temp985_201 () (_ BitVec 64))
(declare-fun temp985_202 () (_ BitVec 64))
(declare-fun temp985_203 () (_ BitVec 64))
(declare-fun temp985_204 () (_ BitVec 64))
(declare-fun temp985_205 () (_ BitVec 64))
(declare-fun temp985_206 () (_ BitVec 64))
(declare-fun temp985_207 () (_ BitVec 64))
(declare-fun temp985_208 () (_ BitVec 64))
(declare-fun temp985_209 () (_ BitVec 64))
(declare-fun temp985_210 () (_ BitVec 64))
(declare-fun temp985_211 () (_ BitVec 64))
(declare-fun temp985_212 () (_ BitVec 64))
(declare-fun temp985_213 () (_ BitVec 64))
(declare-fun temp985_214 () (_ BitVec 64))
(declare-fun temp985_215 () (_ BitVec 64))
(declare-fun temp985_216 () (_ BitVec 64))
(declare-fun temp985_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp985_218 () (_ BitVec 64))
(declare-fun temp985_220 () (_ BitVec 64))
(declare-fun temp985_221 () (_ BitVec 64))
(declare-fun temp985_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp985_222 () (_ BitVec 64))
(declare-fun temp985_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp985_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp985_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp985_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp985_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp985_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp985_229 () (_ BitVec 64))
(declare-fun temp985_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp985_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp985_232 () (_ BitVec 64))
(declare-fun temp985_233 () (_ BitVec 64))
(declare-fun temp985_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp985_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp985_236 () (_ BitVec 64))
(declare-fun temp985_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp985_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp985_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp985_240 () (_ BitVec 64))
(assert (= temp985_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp985_1)))
(assert (= temp985_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp985_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_3 #x0000000000000000))
(assert (= var79869 temp985_3))
(assert (= temp985_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp985_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_5 #x0000000000000000))
(assert (= var79914 temp985_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp985_6 #x0000000000000000))
(assert (= temp985_7 temp985_6))
(assert (= temp985_8 (select ARGNAME_padding_NAMEEND_VAL temp985_7)))
(assert (= temp985_9 #x0000000000000001))
(assert (= temp985_10 temp985_9))
(assert (= temp985_11 (select ARGNAME_padding_NAMEEND_VAL temp985_10)))
(assert (= temp985_12 #x0000000000000002))
(assert (= temp985_13 temp985_12))
(assert (= temp985_14 (select ARGNAME_padding_NAMEEND_VAL temp985_13)))
(assert (= temp985_15 #x0000000000000003))
(assert (= temp985_16 temp985_15))
(assert (= temp985_17 (select ARGNAME_padding_NAMEEND_VAL temp985_16)))
(assert (= temp985_18 #x0000000000000004))
(assert (= temp985_19 temp985_18))
(assert (= temp985_20 (select ARGNAME_padding_NAMEEND_VAL temp985_19)))
(assert (= temp985_21 #x0000000000000005))
(assert (= temp985_22 temp985_21))
(assert (= temp985_23 (select ARGNAME_padding_NAMEEND_VAL temp985_22)))
(assert (= temp985_24 #x0000000000000000))
(assert (= temp985_25 #x0000000000000000))
(assert (= temp985_26 temp985_25))
(assert (= temp985_27 (select ARGNAME_padding_NAMEEND_VAL temp985_26)))
(assert (= temp985_28 #x0000000000000000))
(assert (= temp985_29 #x0000000000000001))
(assert (= temp985_30 temp985_29))
(assert (= temp985_31 (select ARGNAME_padding_NAMEEND_VAL temp985_30)))
(assert (= temp985_32 #x0000000000000000))
(assert (= temp985_33 #x0000000000000002))
(assert (= temp985_34 temp985_33))
(assert (= temp985_35 (select ARGNAME_padding_NAMEEND_VAL temp985_34)))
(assert (= temp985_36 #x0000000000000000))
(assert (= temp985_37 #x0000000000000003))
(assert (= temp985_38 temp985_37))
(assert (= temp985_39 (select ARGNAME_padding_NAMEEND_VAL temp985_38)))
(assert (= temp985_40 #x0000000000000000))
(assert (= temp985_41 #x0000000000000004))
(assert (= temp985_42 temp985_41))
(assert (= temp985_43 (select ARGNAME_padding_NAMEEND_VAL temp985_42)))
(assert (= temp985_44 #x0000000000000000))
(assert (= temp985_45 #x0000000000000005))
(assert (= temp985_46 temp985_45))
(assert (= temp985_47 (select ARGNAME_padding_NAMEEND_VAL temp985_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp985_27 temp985_24)
             (bvslt temp985_31 temp985_28)
             (bvslt temp985_35 temp985_32)
             (bvslt temp985_39 temp985_36)
             (bvslt temp985_43 temp985_40)
             (bvslt temp985_47 temp985_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_48 #x0000000000000000))
(assert (= var1322786 temp985_48))
(assert (= temp985_49 #x0000000000000000))
(assert (= temp985_50 temp985_49))
(assert (= temp985_51 (select ARGNAME_output_padding_NAMEEND_VAL temp985_50)))
(assert (= temp985_52 #x0000000000000001))
(assert (= temp985_53 temp985_52))
(assert (= temp985_54 (select ARGNAME_output_padding_NAMEEND_VAL temp985_53)))
(assert (= temp985_55 #x0000000000000002))
(assert (= temp985_56 temp985_55))
(assert (= temp985_57 (select ARGNAME_output_padding_NAMEEND_VAL temp985_56)))
(assert (= temp985_58 #x0000000000000003))
(assert (= temp985_59 temp985_58))
(assert (= temp985_60 (select ARGNAME_output_padding_NAMEEND_VAL temp985_59)))
(assert (= temp985_61 #x0000000000000004))
(assert (= temp985_62 temp985_61))
(assert (= temp985_63 (select ARGNAME_output_padding_NAMEEND_VAL temp985_62)))
(assert (= temp985_64 #x0000000000000005))
(assert (= temp985_65 temp985_64))
(assert (= temp985_66 (select ARGNAME_output_padding_NAMEEND_VAL temp985_65)))
(assert (= temp985_67 #x0000000000000000))
(assert (= temp985_68 #x0000000000000000))
(assert (= temp985_69 temp985_68))
(assert (= temp985_70 (select ARGNAME_output_padding_NAMEEND_VAL temp985_69)))
(assert (= temp985_71 #x0000000000000000))
(assert (= temp985_72 #x0000000000000001))
(assert (= temp985_73 temp985_72))
(assert (= temp985_74 (select ARGNAME_output_padding_NAMEEND_VAL temp985_73)))
(assert (= temp985_75 #x0000000000000000))
(assert (= temp985_76 #x0000000000000002))
(assert (= temp985_77 temp985_76))
(assert (= temp985_78 (select ARGNAME_output_padding_NAMEEND_VAL temp985_77)))
(assert (= temp985_79 #x0000000000000000))
(assert (= temp985_80 #x0000000000000003))
(assert (= temp985_81 temp985_80))
(assert (= temp985_82 (select ARGNAME_output_padding_NAMEEND_VAL temp985_81)))
(assert (= temp985_83 #x0000000000000000))
(assert (= temp985_84 #x0000000000000004))
(assert (= temp985_85 temp985_84))
(assert (= temp985_86 (select ARGNAME_output_padding_NAMEEND_VAL temp985_85)))
(assert (= temp985_87 #x0000000000000000))
(assert (= temp985_88 #x0000000000000005))
(assert (= temp985_89 temp985_88))
(assert (= temp985_90 (select ARGNAME_output_padding_NAMEEND_VAL temp985_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp985_70 temp985_67)
             (bvslt temp985_74 temp985_71)
             (bvslt temp985_78 temp985_75)
             (bvslt temp985_82 temp985_79)
             (bvslt temp985_86 temp985_83)
             (bvslt temp985_90 temp985_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_91 #x0000000000000000))
(assert (= var1322797 temp985_91))
(assert (= temp985_92 #x0000000000000000))
(assert (= temp985_93 temp985_92))
(assert (= temp985_94 (select ARGNAME_stride_NAMEEND_VAL temp985_93)))
(assert (= temp985_95 #x0000000000000001))
(assert (= temp985_96 temp985_95))
(assert (= temp985_97 (select ARGNAME_stride_NAMEEND_VAL temp985_96)))
(assert (= temp985_98 #x0000000000000002))
(assert (= temp985_99 temp985_98))
(assert (= temp985_100 (select ARGNAME_stride_NAMEEND_VAL temp985_99)))
(assert (= temp985_101 #x0000000000000003))
(assert (= temp985_102 temp985_101))
(assert (= temp985_103 (select ARGNAME_stride_NAMEEND_VAL temp985_102)))
(assert (= temp985_104 #x0000000000000004))
(assert (= temp985_105 temp985_104))
(assert (= temp985_106 (select ARGNAME_stride_NAMEEND_VAL temp985_105)))
(assert (= temp985_107 #x0000000000000005))
(assert (= temp985_108 temp985_107))
(assert (= temp985_109 (select ARGNAME_stride_NAMEEND_VAL temp985_108)))
(assert (= temp985_110 #x0000000000000000))
(assert (= temp985_111 #x0000000000000000))
(assert (= temp985_112 temp985_111))
(assert (= temp985_113 (select ARGNAME_stride_NAMEEND_VAL temp985_112)))
(assert (= temp985_114 #x0000000000000000))
(assert (= temp985_115 #x0000000000000001))
(assert (= temp985_116 temp985_115))
(assert (= temp985_117 (select ARGNAME_stride_NAMEEND_VAL temp985_116)))
(assert (= temp985_118 #x0000000000000000))
(assert (= temp985_119 #x0000000000000002))
(assert (= temp985_120 temp985_119))
(assert (= temp985_121 (select ARGNAME_stride_NAMEEND_VAL temp985_120)))
(assert (= temp985_122 #x0000000000000000))
(assert (= temp985_123 #x0000000000000003))
(assert (= temp985_124 temp985_123))
(assert (= temp985_125 (select ARGNAME_stride_NAMEEND_VAL temp985_124)))
(assert (= temp985_126 #x0000000000000000))
(assert (= temp985_127 #x0000000000000004))
(assert (= temp985_128 temp985_127))
(assert (= temp985_129 (select ARGNAME_stride_NAMEEND_VAL temp985_128)))
(assert (= temp985_130 #x0000000000000000))
(assert (= temp985_131 #x0000000000000005))
(assert (= temp985_132 temp985_131))
(assert (= temp985_133 (select ARGNAME_stride_NAMEEND_VAL temp985_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp985_113 temp985_110)
             (bvsle temp985_117 temp985_114)
             (bvsle temp985_121 temp985_118)
             (bvsle temp985_125 temp985_122)
             (bvsle temp985_129 temp985_126)
             (bvsle temp985_133 temp985_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_134 #x0000000000000000))
(assert (= var1322807 temp985_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_135 #x0000000000000001))
(assert (= var1322819 temp985_135))
(assert (= temp985_136 #x0000000000000000))
(assert (= var1310898 temp985_136))
(assert (= temp985_137 #x0000000000000000))
(assert (= temp985_138 temp985_137))
(assert (= temp985_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_138)))
(assert (= temp985_140 #x0000000000000001))
(assert (= temp985_141 temp985_140))
(assert (= temp985_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_141)))
(assert (= temp985_143 #x0000000000000002))
(assert (= temp985_144 temp985_143))
(assert (= temp985_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_144)))
(assert (= temp985_146 #x0000000000000003))
(assert (= temp985_147 temp985_146))
(assert (= temp985_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_147)))
(assert (= temp985_149 #x0000000000000004))
(assert (= temp985_150 temp985_149))
(assert (= temp985_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_150)))
(assert (= temp985_152 #x0000000000000005))
(assert (= temp985_153 temp985_152))
(assert (= temp985_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_153)))
(assert (= temp985_156 var1310898))
(assert (= temp985_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_156)))
(assert (= temp985_155 temp985_157))
(assert (= var1322852
   (ite (bvslt temp985_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_158 #x0000000000000000))
(assert (= var1322852 temp985_158))
(assert (= temp985_159 #x0000000000000000))
(assert (= var1310898 temp985_159))
(assert (= temp985_161 var1310898))
(assert (= temp985_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_161)))
(assert (= temp985_160 temp985_162))
(assert (= var1322874 (bvsmod temp985_160 ARGNAME_groups_NAMEEND)))
(assert (= temp985_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp985_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp985_164 #x0000000000000001))
(assert (= var1322875 temp985_164))
(assert (= temp985_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp985_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_166 #x0000000000000001))
(assert (= var1322895 temp985_166))
(assert (= temp985_167 #x0000000000000001))
(assert (= var1311786 temp985_167))
(assert (= temp985_168 #x0000000000000000))
(assert (= temp985_169 temp985_168))
(assert (= temp985_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_169)))
(assert (= temp985_171 #x0000000000000001))
(assert (= temp985_172 temp985_171))
(assert (= temp985_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_172)))
(assert (= temp985_174 #x0000000000000002))
(assert (= temp985_175 temp985_174))
(assert (= temp985_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_175)))
(assert (= temp985_177 #x0000000000000003))
(assert (= temp985_178 temp985_177))
(assert (= temp985_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_178)))
(assert (= temp985_180 #x0000000000000004))
(assert (= temp985_181 temp985_180))
(assert (= temp985_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_181)))
(assert (= temp985_183 #x0000000000000005))
(assert (= temp985_184 temp985_183))
(assert (= temp985_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_184)))
(assert (= temp985_186 #x0000000000000000))
(assert (= temp985_187
   (ite (bvslt var1311786 temp985_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp985_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_187)))
(assert (= var1322903 temp985_188))
(assert (bvslt (ite (bvslt var1311786 temp985_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp985_189 #x0000000000000001))
(assert (= var1311786 temp985_189))
(assert (= temp985_191 var1311786))
(assert (= temp985_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_191)))
(assert (= temp985_190 temp985_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp985_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp985_193 #x0000000000000001))
(assert (= var1322908 temp985_193))
(assert (= temp985_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp985_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_195 #x0000000000000001))
(assert (= var1322975 temp985_195))
(assert (= temp985_196 #x0000000000000000))
(assert (= var1310898 temp985_196))
(assert (= temp985_197 #x0000000000000000))
(assert (= temp985_198 temp985_197))
(assert (= temp985_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp985_198)))
(assert (= temp985_200 #x0000000000000001))
(assert (= temp985_201 temp985_200))
(assert (= temp985_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp985_201)))
(assert (= temp985_203 #x0000000000000002))
(assert (= temp985_204 temp985_203))
(assert (= temp985_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp985_204)))
(assert (= temp985_206 #x0000000000000003))
(assert (= temp985_207 temp985_206))
(assert (= temp985_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp985_207)))
(assert (= temp985_209 #x0000000000000004))
(assert (= temp985_210 temp985_209))
(assert (= temp985_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp985_210)))
(assert (= temp985_212 #x0000000000000005))
(assert (= temp985_213 temp985_212))
(assert (= temp985_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp985_213)))
(assert (= temp985_215 #x0000000000000000))
(assert (= temp985_216
   (ite (bvslt var1310898 temp985_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp985_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp985_216)))
(assert (= var1322977 temp985_217))
(assert (bvslt (ite (bvslt var1310898 temp985_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp985_218 #x0000000000000000))
(assert (= var1310898 temp985_218))
(assert (= temp985_220 var1310898))
(assert (= temp985_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_220)))
(assert (= temp985_219 temp985_221))
(assert (= var1322980
   (ite (= var1322977 temp985_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp985_222 #x0000000000000001))
(assert (= var1322980 temp985_222))
(assert (= temp985_223 #x0000000000000002))
(assert (= var1848169 temp985_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp985_225 #x0000000000000001))
(assert (= var1323065 temp985_225))
(assert (= temp985_226 #x0000000000000001))
(assert (= var3486735 temp985_226))
(assert (= temp985_227 #x0000000000000001))
(assert (= var3814415 temp985_227))
(assert (= temp985_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp985_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_229 #x0000000000000001))
(assert (= var79986 temp985_229))
(assert (= temp985_230 #x0000000000000001))
(assert (= var80116 temp985_230))
(assert (= var4796905 var80116))
(assert (= temp985_231 #x0000000000000000))
(assert (= var4784306 temp985_231))
(assert (= temp985_232 #x0000000000000000))
(assert (= temp985_233
   (ite (bvslt var4784306 temp985_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp985_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_233)))
(assert (= var4796924 temp985_234))
(assert (bvslt (ite (bvslt var4784306 temp985_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp985_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp985_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp985_236 #x0000000000000001))
(assert (= var4796925 temp985_236))
(assert (= temp985_237 #x0000000000000000))
(assert (= var4996927 temp985_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp985_238 #x0000000000000002))
(assert (= var5125763 temp985_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_239 #x0000000000000000))
(assert (= var5191324 temp985_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp985_240 #x0000000000000001))
(assert (= var79986 temp985_240))
(model-add temp985_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp985_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp985_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






