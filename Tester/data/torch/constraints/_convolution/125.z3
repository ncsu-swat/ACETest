(declare-fun temp165_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp165_2 () (_ BitVec 64))
(declare-fun temp165_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp165_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp165_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp165_6 () (_ BitVec 64))
(declare-fun temp165_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp165_8 () (_ BitVec 64))
(declare-fun temp165_9 () (_ BitVec 64))
(declare-fun temp165_10 () (_ BitVec 64))
(declare-fun temp165_11 () (_ BitVec 64))
(declare-fun temp165_12 () (_ BitVec 64))
(declare-fun temp165_13 () (_ BitVec 64))
(declare-fun temp165_14 () (_ BitVec 64))
(declare-fun temp165_15 () (_ BitVec 64))
(declare-fun temp165_16 () (_ BitVec 64))
(declare-fun temp165_17 () (_ BitVec 64))
(declare-fun temp165_18 () (_ BitVec 64))
(declare-fun temp165_19 () (_ BitVec 64))
(declare-fun temp165_20 () (_ BitVec 64))
(declare-fun temp165_21 () (_ BitVec 64))
(declare-fun temp165_22 () (_ BitVec 64))
(declare-fun temp165_23 () (_ BitVec 64))
(declare-fun temp165_24 () (_ BitVec 64))
(declare-fun temp165_25 () (_ BitVec 64))
(declare-fun temp165_26 () (_ BitVec 64))
(declare-fun temp165_27 () (_ BitVec 64))
(declare-fun temp165_28 () (_ BitVec 64))
(declare-fun temp165_29 () (_ BitVec 64))
(declare-fun temp165_30 () (_ BitVec 64))
(declare-fun temp165_31 () (_ BitVec 64))
(declare-fun temp165_32 () (_ BitVec 64))
(declare-fun temp165_33 () (_ BitVec 64))
(declare-fun temp165_34 () (_ BitVec 64))
(declare-fun temp165_35 () (_ BitVec 64))
(declare-fun temp165_36 () (_ BitVec 64))
(declare-fun temp165_37 () (_ BitVec 64))
(declare-fun temp165_38 () (_ BitVec 64))
(declare-fun temp165_39 () (_ BitVec 64))
(declare-fun temp165_40 () (_ BitVec 64))
(declare-fun temp165_41 () (_ BitVec 64))
(declare-fun temp165_42 () (_ BitVec 64))
(declare-fun temp165_43 () (_ BitVec 64))
(declare-fun temp165_44 () (_ BitVec 64))
(declare-fun temp165_45 () (_ BitVec 64))
(declare-fun temp165_46 () (_ BitVec 64))
(declare-fun temp165_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp165_48 () (_ BitVec 64))
(declare-fun temp165_49 () (_ BitVec 64))
(declare-fun temp165_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp165_51 () (_ BitVec 64))
(declare-fun temp165_52 () (_ BitVec 64))
(declare-fun temp165_53 () (_ BitVec 64))
(declare-fun temp165_54 () (_ BitVec 64))
(declare-fun temp165_55 () (_ BitVec 64))
(declare-fun temp165_56 () (_ BitVec 64))
(declare-fun temp165_57 () (_ BitVec 64))
(declare-fun temp165_58 () (_ BitVec 64))
(declare-fun temp165_59 () (_ BitVec 64))
(declare-fun temp165_60 () (_ BitVec 64))
(declare-fun temp165_61 () (_ BitVec 64))
(declare-fun temp165_62 () (_ BitVec 64))
(declare-fun temp165_63 () (_ BitVec 64))
(declare-fun temp165_64 () (_ BitVec 64))
(declare-fun temp165_65 () (_ BitVec 64))
(declare-fun temp165_66 () (_ BitVec 64))
(declare-fun temp165_67 () (_ BitVec 64))
(declare-fun temp165_68 () (_ BitVec 64))
(declare-fun temp165_69 () (_ BitVec 64))
(declare-fun temp165_70 () (_ BitVec 64))
(declare-fun temp165_71 () (_ BitVec 64))
(declare-fun temp165_72 () (_ BitVec 64))
(declare-fun temp165_73 () (_ BitVec 64))
(declare-fun temp165_74 () (_ BitVec 64))
(declare-fun temp165_75 () (_ BitVec 64))
(declare-fun temp165_76 () (_ BitVec 64))
(declare-fun temp165_77 () (_ BitVec 64))
(declare-fun temp165_78 () (_ BitVec 64))
(declare-fun temp165_79 () (_ BitVec 64))
(declare-fun temp165_80 () (_ BitVec 64))
(declare-fun temp165_81 () (_ BitVec 64))
(declare-fun temp165_82 () (_ BitVec 64))
(declare-fun temp165_83 () (_ BitVec 64))
(declare-fun temp165_84 () (_ BitVec 64))
(declare-fun temp165_85 () (_ BitVec 64))
(declare-fun temp165_86 () (_ BitVec 64))
(declare-fun temp165_87 () (_ BitVec 64))
(declare-fun temp165_88 () (_ BitVec 64))
(declare-fun temp165_89 () (_ BitVec 64))
(declare-fun temp165_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp165_91 () (_ BitVec 64))
(declare-fun temp165_92 () (_ BitVec 64))
(declare-fun temp165_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp165_94 () (_ BitVec 64))
(declare-fun temp165_95 () (_ BitVec 64))
(declare-fun temp165_96 () (_ BitVec 64))
(declare-fun temp165_97 () (_ BitVec 64))
(declare-fun temp165_98 () (_ BitVec 64))
(declare-fun temp165_99 () (_ BitVec 64))
(declare-fun temp165_100 () (_ BitVec 64))
(declare-fun temp165_101 () (_ BitVec 64))
(declare-fun temp165_102 () (_ BitVec 64))
(declare-fun temp165_103 () (_ BitVec 64))
(declare-fun temp165_104 () (_ BitVec 64))
(declare-fun temp165_105 () (_ BitVec 64))
(declare-fun temp165_106 () (_ BitVec 64))
(declare-fun temp165_107 () (_ BitVec 64))
(declare-fun temp165_108 () (_ BitVec 64))
(declare-fun temp165_109 () (_ BitVec 64))
(declare-fun temp165_110 () (_ BitVec 64))
(declare-fun temp165_111 () (_ BitVec 64))
(declare-fun temp165_112 () (_ BitVec 64))
(declare-fun temp165_113 () (_ BitVec 64))
(declare-fun temp165_114 () (_ BitVec 64))
(declare-fun temp165_115 () (_ BitVec 64))
(declare-fun temp165_116 () (_ BitVec 64))
(declare-fun temp165_117 () (_ BitVec 64))
(declare-fun temp165_118 () (_ BitVec 64))
(declare-fun temp165_119 () (_ BitVec 64))
(declare-fun temp165_120 () (_ BitVec 64))
(declare-fun temp165_121 () (_ BitVec 64))
(declare-fun temp165_122 () (_ BitVec 64))
(declare-fun temp165_123 () (_ BitVec 64))
(declare-fun temp165_124 () (_ BitVec 64))
(declare-fun temp165_125 () (_ BitVec 64))
(declare-fun temp165_126 () (_ BitVec 64))
(declare-fun temp165_127 () (_ BitVec 64))
(declare-fun temp165_128 () (_ BitVec 64))
(declare-fun temp165_129 () (_ BitVec 64))
(declare-fun temp165_130 () (_ BitVec 64))
(declare-fun temp165_131 () (_ BitVec 64))
(declare-fun temp165_132 () (_ BitVec 64))
(declare-fun temp165_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp165_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp165_135 () (_ BitVec 64))
(declare-fun temp165_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp165_137 () (_ BitVec 64))
(declare-fun temp165_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp165_139 () (_ BitVec 64))
(declare-fun temp165_140 () (_ BitVec 64))
(declare-fun temp165_141 () (_ BitVec 64))
(declare-fun temp165_142 () (_ BitVec 64))
(declare-fun temp165_143 () (_ BitVec 64))
(declare-fun temp165_144 () (_ BitVec 64))
(declare-fun temp165_145 () (_ BitVec 64))
(declare-fun temp165_146 () (_ BitVec 64))
(declare-fun temp165_147 () (_ BitVec 64))
(declare-fun temp165_148 () (_ BitVec 64))
(declare-fun temp165_149 () (_ BitVec 64))
(declare-fun temp165_150 () (_ BitVec 64))
(declare-fun temp165_151 () (_ BitVec 64))
(declare-fun temp165_152 () (_ BitVec 64))
(declare-fun temp165_153 () (_ BitVec 64))
(declare-fun temp165_154 () (_ BitVec 64))
(declare-fun temp165_156 () (_ BitVec 64))
(declare-fun temp165_157 () (_ BitVec 64))
(declare-fun temp165_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp165_158 () (_ BitVec 64))
(declare-fun temp165_159 () (_ BitVec 64))
(declare-fun temp165_161 () (_ BitVec 64))
(declare-fun temp165_162 () (_ BitVec 64))
(declare-fun temp165_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp165_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp165_164 () (_ BitVec 64))
(declare-fun temp165_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp165_166 () (_ BitVec 64))
(declare-fun temp165_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp165_168 () (_ BitVec 64))
(declare-fun temp165_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp165_170 () (_ BitVec 64))
(declare-fun temp165_171 () (_ BitVec 64))
(declare-fun temp165_172 () (_ BitVec 64))
(declare-fun temp165_173 () (_ BitVec 64))
(declare-fun temp165_174 () (_ BitVec 64))
(declare-fun temp165_175 () (_ BitVec 64))
(declare-fun temp165_176 () (_ BitVec 64))
(declare-fun temp165_177 () (_ BitVec 64))
(declare-fun temp165_178 () (_ BitVec 64))
(declare-fun temp165_179 () (_ BitVec 64))
(declare-fun temp165_180 () (_ BitVec 64))
(declare-fun temp165_181 () (_ BitVec 64))
(declare-fun temp165_182 () (_ BitVec 64))
(declare-fun temp165_183 () (_ BitVec 64))
(declare-fun temp165_184 () (_ BitVec 64))
(declare-fun temp165_185 () (_ BitVec 64))
(declare-fun temp165_186 () (_ BitVec 64))
(declare-fun temp165_187 () (_ BitVec 64))
(declare-fun temp165_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp165_189 () (_ BitVec 64))
(declare-fun temp165_191 () (_ BitVec 64))
(declare-fun temp165_192 () (_ BitVec 64))
(declare-fun temp165_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp165_193 () (_ BitVec 64))
(declare-fun temp165_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp165_195 () (_ BitVec 64))
(declare-fun temp165_196 () (_ BitVec 64))
(declare-fun temp165_197 () (_ BitVec 64))
(declare-fun temp165_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp165_199 () (_ BitVec 64))
(declare-fun temp165_200 () (_ BitVec 64))
(declare-fun temp165_201 () (_ BitVec 64))
(declare-fun temp165_202 () (_ BitVec 64))
(declare-fun temp165_203 () (_ BitVec 64))
(declare-fun temp165_204 () (_ BitVec 64))
(declare-fun temp165_205 () (_ BitVec 64))
(declare-fun temp165_206 () (_ BitVec 64))
(declare-fun temp165_207 () (_ BitVec 64))
(declare-fun temp165_208 () (_ BitVec 64))
(declare-fun temp165_209 () (_ BitVec 64))
(declare-fun temp165_210 () (_ BitVec 64))
(declare-fun temp165_211 () (_ BitVec 64))
(declare-fun temp165_212 () (_ BitVec 64))
(declare-fun temp165_213 () (_ BitVec 64))
(declare-fun temp165_214 () (_ BitVec 64))
(declare-fun temp165_215 () (_ BitVec 64))
(declare-fun temp165_216 () (_ BitVec 64))
(declare-fun temp165_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp165_218 () (_ BitVec 64))
(declare-fun temp165_220 () (_ BitVec 64))
(declare-fun temp165_221 () (_ BitVec 64))
(declare-fun temp165_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp165_222 () (_ BitVec 64))
(declare-fun temp165_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp165_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp165_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp165_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp165_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp165_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp165_229 () (_ BitVec 64))
(declare-fun temp165_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp165_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp165_232 () (_ BitVec 64))
(declare-fun temp165_233 () (_ BitVec 64))
(declare-fun temp165_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp165_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp165_236 () (_ BitVec 64))
(declare-fun temp165_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp165_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp165_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp165_241 () (_ BitVec 64))
(declare-fun temp165_240 () (_ BitVec 64))
(declare-fun temp165_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp165_243 () (_ BitVec 64))
(declare-fun temp165_244 () (_ BitVec 64))
(declare-fun temp165_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp165_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp165_247 () (_ BitVec 64))
(declare-fun temp165_248 () (_ BitVec 64))
(assert (= temp165_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp165_1)))
(assert (= temp165_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp165_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_3 #x0000000000000000))
(assert (= var79869 temp165_3))
(assert (= temp165_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp165_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_5 #x0000000000000000))
(assert (= var79914 temp165_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp165_6 #x0000000000000000))
(assert (= temp165_7 temp165_6))
(assert (= temp165_8 (select ARGNAME_padding_NAMEEND_VAL temp165_7)))
(assert (= temp165_9 #x0000000000000001))
(assert (= temp165_10 temp165_9))
(assert (= temp165_11 (select ARGNAME_padding_NAMEEND_VAL temp165_10)))
(assert (= temp165_12 #x0000000000000002))
(assert (= temp165_13 temp165_12))
(assert (= temp165_14 (select ARGNAME_padding_NAMEEND_VAL temp165_13)))
(assert (= temp165_15 #x0000000000000003))
(assert (= temp165_16 temp165_15))
(assert (= temp165_17 (select ARGNAME_padding_NAMEEND_VAL temp165_16)))
(assert (= temp165_18 #x0000000000000004))
(assert (= temp165_19 temp165_18))
(assert (= temp165_20 (select ARGNAME_padding_NAMEEND_VAL temp165_19)))
(assert (= temp165_21 #x0000000000000005))
(assert (= temp165_22 temp165_21))
(assert (= temp165_23 (select ARGNAME_padding_NAMEEND_VAL temp165_22)))
(assert (= temp165_24 #x0000000000000000))
(assert (= temp165_25 #x0000000000000000))
(assert (= temp165_26 temp165_25))
(assert (= temp165_27 (select ARGNAME_padding_NAMEEND_VAL temp165_26)))
(assert (= temp165_28 #x0000000000000000))
(assert (= temp165_29 #x0000000000000001))
(assert (= temp165_30 temp165_29))
(assert (= temp165_31 (select ARGNAME_padding_NAMEEND_VAL temp165_30)))
(assert (= temp165_32 #x0000000000000000))
(assert (= temp165_33 #x0000000000000002))
(assert (= temp165_34 temp165_33))
(assert (= temp165_35 (select ARGNAME_padding_NAMEEND_VAL temp165_34)))
(assert (= temp165_36 #x0000000000000000))
(assert (= temp165_37 #x0000000000000003))
(assert (= temp165_38 temp165_37))
(assert (= temp165_39 (select ARGNAME_padding_NAMEEND_VAL temp165_38)))
(assert (= temp165_40 #x0000000000000000))
(assert (= temp165_41 #x0000000000000004))
(assert (= temp165_42 temp165_41))
(assert (= temp165_43 (select ARGNAME_padding_NAMEEND_VAL temp165_42)))
(assert (= temp165_44 #x0000000000000000))
(assert (= temp165_45 #x0000000000000005))
(assert (= temp165_46 temp165_45))
(assert (= temp165_47 (select ARGNAME_padding_NAMEEND_VAL temp165_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp165_27 temp165_24)
             (bvslt temp165_31 temp165_28)
             (bvslt temp165_35 temp165_32)
             (bvslt temp165_39 temp165_36)
             (bvslt temp165_43 temp165_40)
             (bvslt temp165_47 temp165_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_48 #x0000000000000000))
(assert (= var1322786 temp165_48))
(assert (= temp165_49 #x0000000000000000))
(assert (= temp165_50 temp165_49))
(assert (= temp165_51 (select ARGNAME_output_padding_NAMEEND_VAL temp165_50)))
(assert (= temp165_52 #x0000000000000001))
(assert (= temp165_53 temp165_52))
(assert (= temp165_54 (select ARGNAME_output_padding_NAMEEND_VAL temp165_53)))
(assert (= temp165_55 #x0000000000000002))
(assert (= temp165_56 temp165_55))
(assert (= temp165_57 (select ARGNAME_output_padding_NAMEEND_VAL temp165_56)))
(assert (= temp165_58 #x0000000000000003))
(assert (= temp165_59 temp165_58))
(assert (= temp165_60 (select ARGNAME_output_padding_NAMEEND_VAL temp165_59)))
(assert (= temp165_61 #x0000000000000004))
(assert (= temp165_62 temp165_61))
(assert (= temp165_63 (select ARGNAME_output_padding_NAMEEND_VAL temp165_62)))
(assert (= temp165_64 #x0000000000000005))
(assert (= temp165_65 temp165_64))
(assert (= temp165_66 (select ARGNAME_output_padding_NAMEEND_VAL temp165_65)))
(assert (= temp165_67 #x0000000000000000))
(assert (= temp165_68 #x0000000000000000))
(assert (= temp165_69 temp165_68))
(assert (= temp165_70 (select ARGNAME_output_padding_NAMEEND_VAL temp165_69)))
(assert (= temp165_71 #x0000000000000000))
(assert (= temp165_72 #x0000000000000001))
(assert (= temp165_73 temp165_72))
(assert (= temp165_74 (select ARGNAME_output_padding_NAMEEND_VAL temp165_73)))
(assert (= temp165_75 #x0000000000000000))
(assert (= temp165_76 #x0000000000000002))
(assert (= temp165_77 temp165_76))
(assert (= temp165_78 (select ARGNAME_output_padding_NAMEEND_VAL temp165_77)))
(assert (= temp165_79 #x0000000000000000))
(assert (= temp165_80 #x0000000000000003))
(assert (= temp165_81 temp165_80))
(assert (= temp165_82 (select ARGNAME_output_padding_NAMEEND_VAL temp165_81)))
(assert (= temp165_83 #x0000000000000000))
(assert (= temp165_84 #x0000000000000004))
(assert (= temp165_85 temp165_84))
(assert (= temp165_86 (select ARGNAME_output_padding_NAMEEND_VAL temp165_85)))
(assert (= temp165_87 #x0000000000000000))
(assert (= temp165_88 #x0000000000000005))
(assert (= temp165_89 temp165_88))
(assert (= temp165_90 (select ARGNAME_output_padding_NAMEEND_VAL temp165_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp165_70 temp165_67)
             (bvslt temp165_74 temp165_71)
             (bvslt temp165_78 temp165_75)
             (bvslt temp165_82 temp165_79)
             (bvslt temp165_86 temp165_83)
             (bvslt temp165_90 temp165_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_91 #x0000000000000000))
(assert (= var1322797 temp165_91))
(assert (= temp165_92 #x0000000000000000))
(assert (= temp165_93 temp165_92))
(assert (= temp165_94 (select ARGNAME_stride_NAMEEND_VAL temp165_93)))
(assert (= temp165_95 #x0000000000000001))
(assert (= temp165_96 temp165_95))
(assert (= temp165_97 (select ARGNAME_stride_NAMEEND_VAL temp165_96)))
(assert (= temp165_98 #x0000000000000002))
(assert (= temp165_99 temp165_98))
(assert (= temp165_100 (select ARGNAME_stride_NAMEEND_VAL temp165_99)))
(assert (= temp165_101 #x0000000000000003))
(assert (= temp165_102 temp165_101))
(assert (= temp165_103 (select ARGNAME_stride_NAMEEND_VAL temp165_102)))
(assert (= temp165_104 #x0000000000000004))
(assert (= temp165_105 temp165_104))
(assert (= temp165_106 (select ARGNAME_stride_NAMEEND_VAL temp165_105)))
(assert (= temp165_107 #x0000000000000005))
(assert (= temp165_108 temp165_107))
(assert (= temp165_109 (select ARGNAME_stride_NAMEEND_VAL temp165_108)))
(assert (= temp165_110 #x0000000000000000))
(assert (= temp165_111 #x0000000000000000))
(assert (= temp165_112 temp165_111))
(assert (= temp165_113 (select ARGNAME_stride_NAMEEND_VAL temp165_112)))
(assert (= temp165_114 #x0000000000000000))
(assert (= temp165_115 #x0000000000000001))
(assert (= temp165_116 temp165_115))
(assert (= temp165_117 (select ARGNAME_stride_NAMEEND_VAL temp165_116)))
(assert (= temp165_118 #x0000000000000000))
(assert (= temp165_119 #x0000000000000002))
(assert (= temp165_120 temp165_119))
(assert (= temp165_121 (select ARGNAME_stride_NAMEEND_VAL temp165_120)))
(assert (= temp165_122 #x0000000000000000))
(assert (= temp165_123 #x0000000000000003))
(assert (= temp165_124 temp165_123))
(assert (= temp165_125 (select ARGNAME_stride_NAMEEND_VAL temp165_124)))
(assert (= temp165_126 #x0000000000000000))
(assert (= temp165_127 #x0000000000000004))
(assert (= temp165_128 temp165_127))
(assert (= temp165_129 (select ARGNAME_stride_NAMEEND_VAL temp165_128)))
(assert (= temp165_130 #x0000000000000000))
(assert (= temp165_131 #x0000000000000005))
(assert (= temp165_132 temp165_131))
(assert (= temp165_133 (select ARGNAME_stride_NAMEEND_VAL temp165_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp165_113 temp165_110)
             (bvsle temp165_117 temp165_114)
             (bvsle temp165_121 temp165_118)
             (bvsle temp165_125 temp165_122)
             (bvsle temp165_129 temp165_126)
             (bvsle temp165_133 temp165_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_134 #x0000000000000000))
(assert (= var1322807 temp165_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_135 #x0000000000000001))
(assert (= var1322819 temp165_135))
(assert (= temp165_136 #x0000000000000000))
(assert (= var1310898 temp165_136))
(assert (= temp165_137 #x0000000000000000))
(assert (= temp165_138 temp165_137))
(assert (= temp165_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_138)))
(assert (= temp165_140 #x0000000000000001))
(assert (= temp165_141 temp165_140))
(assert (= temp165_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_141)))
(assert (= temp165_143 #x0000000000000002))
(assert (= temp165_144 temp165_143))
(assert (= temp165_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_144)))
(assert (= temp165_146 #x0000000000000003))
(assert (= temp165_147 temp165_146))
(assert (= temp165_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_147)))
(assert (= temp165_149 #x0000000000000004))
(assert (= temp165_150 temp165_149))
(assert (= temp165_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_150)))
(assert (= temp165_152 #x0000000000000005))
(assert (= temp165_153 temp165_152))
(assert (= temp165_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_153)))
(assert (= temp165_156 var1310898))
(assert (= temp165_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_156)))
(assert (= temp165_155 temp165_157))
(assert (= var1322852
   (ite (bvslt temp165_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_158 #x0000000000000000))
(assert (= var1322852 temp165_158))
(assert (= temp165_159 #x0000000000000000))
(assert (= var1310898 temp165_159))
(assert (= temp165_161 var1310898))
(assert (= temp165_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_161)))
(assert (= temp165_160 temp165_162))
(assert (= var1322874 (bvsmod temp165_160 ARGNAME_groups_NAMEEND)))
(assert (= temp165_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp165_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp165_164 #x0000000000000001))
(assert (= var1322875 temp165_164))
(assert (= temp165_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp165_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_166 #x0000000000000001))
(assert (= var1322895 temp165_166))
(assert (= temp165_167 #x0000000000000001))
(assert (= var1311786 temp165_167))
(assert (= temp165_168 #x0000000000000000))
(assert (= temp165_169 temp165_168))
(assert (= temp165_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp165_169)))
(assert (= temp165_171 #x0000000000000001))
(assert (= temp165_172 temp165_171))
(assert (= temp165_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp165_172)))
(assert (= temp165_174 #x0000000000000002))
(assert (= temp165_175 temp165_174))
(assert (= temp165_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp165_175)))
(assert (= temp165_177 #x0000000000000003))
(assert (= temp165_178 temp165_177))
(assert (= temp165_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp165_178)))
(assert (= temp165_180 #x0000000000000004))
(assert (= temp165_181 temp165_180))
(assert (= temp165_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp165_181)))
(assert (= temp165_183 #x0000000000000005))
(assert (= temp165_184 temp165_183))
(assert (= temp165_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp165_184)))
(assert (= temp165_186 #x0000000000000000))
(assert (= temp165_187
   (ite (bvslt var1311786 temp165_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp165_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp165_187)))
(assert (= var1322903 temp165_188))
(assert (bvslt (ite (bvslt var1311786 temp165_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp165_189 #x0000000000000001))
(assert (= var1311786 temp165_189))
(assert (= temp165_191 var1311786))
(assert (= temp165_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_191)))
(assert (= temp165_190 temp165_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp165_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp165_193 #x0000000000000001))
(assert (= var1322908 temp165_193))
(assert (= temp165_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp165_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_195 #x0000000000000001))
(assert (= var1322975 temp165_195))
(assert (= temp165_196 #x0000000000000000))
(assert (= var1310898 temp165_196))
(assert (= temp165_197 #x0000000000000000))
(assert (= temp165_198 temp165_197))
(assert (= temp165_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp165_198)))
(assert (= temp165_200 #x0000000000000001))
(assert (= temp165_201 temp165_200))
(assert (= temp165_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp165_201)))
(assert (= temp165_203 #x0000000000000002))
(assert (= temp165_204 temp165_203))
(assert (= temp165_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp165_204)))
(assert (= temp165_206 #x0000000000000003))
(assert (= temp165_207 temp165_206))
(assert (= temp165_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp165_207)))
(assert (= temp165_209 #x0000000000000004))
(assert (= temp165_210 temp165_209))
(assert (= temp165_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp165_210)))
(assert (= temp165_212 #x0000000000000005))
(assert (= temp165_213 temp165_212))
(assert (= temp165_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp165_213)))
(assert (= temp165_215 #x0000000000000000))
(assert (= temp165_216
   (ite (bvslt var1310898 temp165_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp165_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp165_216)))
(assert (= var1322977 temp165_217))
(assert (bvslt (ite (bvslt var1310898 temp165_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp165_218 #x0000000000000000))
(assert (= var1310898 temp165_218))
(assert (= temp165_220 var1310898))
(assert (= temp165_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp165_220)))
(assert (= temp165_219 temp165_221))
(assert (= var1322980
   (ite (= var1322977 temp165_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp165_222 #x0000000000000001))
(assert (= var1322980 temp165_222))
(assert (= temp165_223 #x0000000000000002))
(assert (= var1848169 temp165_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp165_225 #x0000000000000001))
(assert (= var1323065 temp165_225))
(assert (= temp165_226 #x0000000000000001))
(assert (= var3486735 temp165_226))
(assert (= temp165_227 #x0000000000000001))
(assert (= var3814415 temp165_227))
(assert (= temp165_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp165_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_229 #x0000000000000001))
(assert (= var79986 temp165_229))
(assert (= temp165_230 #x0000000000000001))
(assert (= var80116 temp165_230))
(assert (= var4796905 var80116))
(assert (= temp165_231 #x0000000000000000))
(assert (= var4784306 temp165_231))
(assert (= temp165_232 #x0000000000000000))
(assert (= temp165_233
   (ite (bvslt var4784306 temp165_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp165_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp165_233)))
(assert (= var4796924 temp165_234))
(assert (bvslt (ite (bvslt var4784306 temp165_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp165_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp165_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp165_236 #x0000000000000001))
(assert (= var4796925 temp165_236))
(assert (= temp165_237 #x0000000000000000))
(assert (= var4996927 temp165_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp165_238 #x0000000000000002))
(assert (= var5125763 temp165_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp165_239 #x0000000000000000))
(assert (= var5191324 temp165_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp165_241 #xffffffffffffffff))
(assert (= temp165_240 temp165_241))
(assert (= temp165_242 #x0000000000000001))
(assert (= var66602 temp165_242))
(assert (= temp165_243 #x0000000000000000))
(assert (= temp165_244
   (ite (bvslt var66602 temp165_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp165_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp165_244)))
(assert (= var80523 temp165_245))
(assert (bvslt (ite (bvslt var66602 temp165_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp165_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp165_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp165_247 #x0000000000000000))
(assert (= var80524 temp165_247))
(assert (= temp165_248 #x0000000000000001))
(assert (= var79986 temp165_248))
(model-add temp165_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp165_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp165_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






