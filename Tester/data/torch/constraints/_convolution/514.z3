(declare-fun temp682_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp682_2 () (_ BitVec 64))
(declare-fun temp682_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp682_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp682_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp682_6 () (_ BitVec 64))
(declare-fun temp682_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_8 () (_ BitVec 64))
(declare-fun temp682_9 () (_ BitVec 64))
(declare-fun temp682_10 () (_ BitVec 64))
(declare-fun temp682_11 () (_ BitVec 64))
(declare-fun temp682_12 () (_ BitVec 64))
(declare-fun temp682_13 () (_ BitVec 64))
(declare-fun temp682_14 () (_ BitVec 64))
(declare-fun temp682_15 () (_ BitVec 64))
(declare-fun temp682_16 () (_ BitVec 64))
(declare-fun temp682_17 () (_ BitVec 64))
(declare-fun temp682_18 () (_ BitVec 64))
(declare-fun temp682_19 () (_ BitVec 64))
(declare-fun temp682_20 () (_ BitVec 64))
(declare-fun temp682_21 () (_ BitVec 64))
(declare-fun temp682_22 () (_ BitVec 64))
(declare-fun temp682_23 () (_ BitVec 64))
(declare-fun temp682_24 () (_ BitVec 64))
(declare-fun temp682_25 () (_ BitVec 64))
(declare-fun temp682_26 () (_ BitVec 64))
(declare-fun temp682_27 () (_ BitVec 64))
(declare-fun temp682_28 () (_ BitVec 64))
(declare-fun temp682_29 () (_ BitVec 64))
(declare-fun temp682_30 () (_ BitVec 64))
(declare-fun temp682_31 () (_ BitVec 64))
(declare-fun temp682_32 () (_ BitVec 64))
(declare-fun temp682_33 () (_ BitVec 64))
(declare-fun temp682_34 () (_ BitVec 64))
(declare-fun temp682_35 () (_ BitVec 64))
(declare-fun temp682_36 () (_ BitVec 64))
(declare-fun temp682_37 () (_ BitVec 64))
(declare-fun temp682_38 () (_ BitVec 64))
(declare-fun temp682_39 () (_ BitVec 64))
(declare-fun temp682_40 () (_ BitVec 64))
(declare-fun temp682_41 () (_ BitVec 64))
(declare-fun temp682_42 () (_ BitVec 64))
(declare-fun temp682_43 () (_ BitVec 64))
(declare-fun temp682_44 () (_ BitVec 64))
(declare-fun temp682_45 () (_ BitVec 64))
(declare-fun temp682_46 () (_ BitVec 64))
(declare-fun temp682_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp682_48 () (_ BitVec 64))
(declare-fun temp682_49 () (_ BitVec 64))
(declare-fun temp682_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_51 () (_ BitVec 64))
(declare-fun temp682_52 () (_ BitVec 64))
(declare-fun temp682_53 () (_ BitVec 64))
(declare-fun temp682_54 () (_ BitVec 64))
(declare-fun temp682_55 () (_ BitVec 64))
(declare-fun temp682_56 () (_ BitVec 64))
(declare-fun temp682_57 () (_ BitVec 64))
(declare-fun temp682_58 () (_ BitVec 64))
(declare-fun temp682_59 () (_ BitVec 64))
(declare-fun temp682_60 () (_ BitVec 64))
(declare-fun temp682_61 () (_ BitVec 64))
(declare-fun temp682_62 () (_ BitVec 64))
(declare-fun temp682_63 () (_ BitVec 64))
(declare-fun temp682_64 () (_ BitVec 64))
(declare-fun temp682_65 () (_ BitVec 64))
(declare-fun temp682_66 () (_ BitVec 64))
(declare-fun temp682_67 () (_ BitVec 64))
(declare-fun temp682_68 () (_ BitVec 64))
(declare-fun temp682_69 () (_ BitVec 64))
(declare-fun temp682_70 () (_ BitVec 64))
(declare-fun temp682_71 () (_ BitVec 64))
(declare-fun temp682_72 () (_ BitVec 64))
(declare-fun temp682_73 () (_ BitVec 64))
(declare-fun temp682_74 () (_ BitVec 64))
(declare-fun temp682_75 () (_ BitVec 64))
(declare-fun temp682_76 () (_ BitVec 64))
(declare-fun temp682_77 () (_ BitVec 64))
(declare-fun temp682_78 () (_ BitVec 64))
(declare-fun temp682_79 () (_ BitVec 64))
(declare-fun temp682_80 () (_ BitVec 64))
(declare-fun temp682_81 () (_ BitVec 64))
(declare-fun temp682_82 () (_ BitVec 64))
(declare-fun temp682_83 () (_ BitVec 64))
(declare-fun temp682_84 () (_ BitVec 64))
(declare-fun temp682_85 () (_ BitVec 64))
(declare-fun temp682_86 () (_ BitVec 64))
(declare-fun temp682_87 () (_ BitVec 64))
(declare-fun temp682_88 () (_ BitVec 64))
(declare-fun temp682_89 () (_ BitVec 64))
(declare-fun temp682_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp682_91 () (_ BitVec 64))
(declare-fun temp682_92 () (_ BitVec 64))
(declare-fun temp682_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_94 () (_ BitVec 64))
(declare-fun temp682_95 () (_ BitVec 64))
(declare-fun temp682_96 () (_ BitVec 64))
(declare-fun temp682_97 () (_ BitVec 64))
(declare-fun temp682_98 () (_ BitVec 64))
(declare-fun temp682_99 () (_ BitVec 64))
(declare-fun temp682_100 () (_ BitVec 64))
(declare-fun temp682_101 () (_ BitVec 64))
(declare-fun temp682_102 () (_ BitVec 64))
(declare-fun temp682_103 () (_ BitVec 64))
(declare-fun temp682_104 () (_ BitVec 64))
(declare-fun temp682_105 () (_ BitVec 64))
(declare-fun temp682_106 () (_ BitVec 64))
(declare-fun temp682_107 () (_ BitVec 64))
(declare-fun temp682_108 () (_ BitVec 64))
(declare-fun temp682_109 () (_ BitVec 64))
(declare-fun temp682_110 () (_ BitVec 64))
(declare-fun temp682_111 () (_ BitVec 64))
(declare-fun temp682_112 () (_ BitVec 64))
(declare-fun temp682_113 () (_ BitVec 64))
(declare-fun temp682_114 () (_ BitVec 64))
(declare-fun temp682_115 () (_ BitVec 64))
(declare-fun temp682_116 () (_ BitVec 64))
(declare-fun temp682_117 () (_ BitVec 64))
(declare-fun temp682_118 () (_ BitVec 64))
(declare-fun temp682_119 () (_ BitVec 64))
(declare-fun temp682_120 () (_ BitVec 64))
(declare-fun temp682_121 () (_ BitVec 64))
(declare-fun temp682_122 () (_ BitVec 64))
(declare-fun temp682_123 () (_ BitVec 64))
(declare-fun temp682_124 () (_ BitVec 64))
(declare-fun temp682_125 () (_ BitVec 64))
(declare-fun temp682_126 () (_ BitVec 64))
(declare-fun temp682_127 () (_ BitVec 64))
(declare-fun temp682_128 () (_ BitVec 64))
(declare-fun temp682_129 () (_ BitVec 64))
(declare-fun temp682_130 () (_ BitVec 64))
(declare-fun temp682_131 () (_ BitVec 64))
(declare-fun temp682_132 () (_ BitVec 64))
(declare-fun temp682_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp682_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp682_135 () (_ BitVec 64))
(declare-fun temp682_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp682_137 () (_ BitVec 64))
(declare-fun temp682_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_139 () (_ BitVec 64))
(declare-fun temp682_140 () (_ BitVec 64))
(declare-fun temp682_141 () (_ BitVec 64))
(declare-fun temp682_142 () (_ BitVec 64))
(declare-fun temp682_143 () (_ BitVec 64))
(declare-fun temp682_144 () (_ BitVec 64))
(declare-fun temp682_145 () (_ BitVec 64))
(declare-fun temp682_146 () (_ BitVec 64))
(declare-fun temp682_147 () (_ BitVec 64))
(declare-fun temp682_148 () (_ BitVec 64))
(declare-fun temp682_149 () (_ BitVec 64))
(declare-fun temp682_150 () (_ BitVec 64))
(declare-fun temp682_151 () (_ BitVec 64))
(declare-fun temp682_152 () (_ BitVec 64))
(declare-fun temp682_153 () (_ BitVec 64))
(declare-fun temp682_154 () (_ BitVec 64))
(declare-fun temp682_156 () (_ BitVec 64))
(declare-fun temp682_157 () (_ BitVec 64))
(declare-fun temp682_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp682_158 () (_ BitVec 64))
(declare-fun temp682_159 () (_ BitVec 64))
(declare-fun temp682_161 () (_ BitVec 64))
(declare-fun temp682_162 () (_ BitVec 64))
(declare-fun temp682_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp682_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp682_164 () (_ BitVec 64))
(declare-fun temp682_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp682_166 () (_ BitVec 64))
(declare-fun temp682_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp682_168 () (_ BitVec 64))
(declare-fun temp682_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_170 () (_ BitVec 64))
(declare-fun temp682_171 () (_ BitVec 64))
(declare-fun temp682_172 () (_ BitVec 64))
(declare-fun temp682_173 () (_ BitVec 64))
(declare-fun temp682_174 () (_ BitVec 64))
(declare-fun temp682_175 () (_ BitVec 64))
(declare-fun temp682_176 () (_ BitVec 64))
(declare-fun temp682_177 () (_ BitVec 64))
(declare-fun temp682_178 () (_ BitVec 64))
(declare-fun temp682_179 () (_ BitVec 64))
(declare-fun temp682_180 () (_ BitVec 64))
(declare-fun temp682_181 () (_ BitVec 64))
(declare-fun temp682_182 () (_ BitVec 64))
(declare-fun temp682_183 () (_ BitVec 64))
(declare-fun temp682_184 () (_ BitVec 64))
(declare-fun temp682_185 () (_ BitVec 64))
(declare-fun temp682_186 () (_ BitVec 64))
(declare-fun temp682_187 () (_ BitVec 64))
(declare-fun temp682_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp682_189 () (_ BitVec 64))
(declare-fun temp682_191 () (_ BitVec 64))
(declare-fun temp682_192 () (_ BitVec 64))
(declare-fun temp682_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp682_193 () (_ BitVec 64))
(declare-fun temp682_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp682_195 () (_ BitVec 64))
(declare-fun temp682_196 () (_ BitVec 64))
(declare-fun temp682_197 () (_ BitVec 64))
(declare-fun temp682_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_199 () (_ BitVec 64))
(declare-fun temp682_200 () (_ BitVec 64))
(declare-fun temp682_201 () (_ BitVec 64))
(declare-fun temp682_202 () (_ BitVec 64))
(declare-fun temp682_203 () (_ BitVec 64))
(declare-fun temp682_204 () (_ BitVec 64))
(declare-fun temp682_205 () (_ BitVec 64))
(declare-fun temp682_206 () (_ BitVec 64))
(declare-fun temp682_207 () (_ BitVec 64))
(declare-fun temp682_208 () (_ BitVec 64))
(declare-fun temp682_209 () (_ BitVec 64))
(declare-fun temp682_210 () (_ BitVec 64))
(declare-fun temp682_211 () (_ BitVec 64))
(declare-fun temp682_212 () (_ BitVec 64))
(declare-fun temp682_213 () (_ BitVec 64))
(declare-fun temp682_214 () (_ BitVec 64))
(declare-fun temp682_215 () (_ BitVec 64))
(declare-fun temp682_216 () (_ BitVec 64))
(declare-fun temp682_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp682_218 () (_ BitVec 64))
(declare-fun temp682_220 () (_ BitVec 64))
(declare-fun temp682_221 () (_ BitVec 64))
(declare-fun temp682_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp682_222 () (_ BitVec 64))
(declare-fun temp682_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp682_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp682_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp682_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp682_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp682_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp682_229 () (_ BitVec 64))
(declare-fun temp682_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp682_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp682_232 () (_ BitVec 64))
(declare-fun temp682_233 () (_ BitVec 64))
(declare-fun temp682_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp682_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp682_236 () (_ BitVec 64))
(declare-fun temp682_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp682_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp682_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp682_241 () (_ BitVec 64))
(declare-fun temp682_240 () (_ BitVec 64))
(declare-fun temp682_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp682_243 () (_ BitVec 64))
(declare-fun temp682_244 () (_ BitVec 64))
(declare-fun temp682_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp682_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp682_247 () (_ BitVec 64))
(declare-fun temp682_249 () (_ BitVec 64))
(declare-fun temp682_248 () (_ BitVec 64))
(declare-fun temp682_250 () (_ BitVec 64))
(assert (= temp682_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp682_1)))
(assert (= temp682_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp682_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_3 #x0000000000000000))
(assert (= var79869 temp682_3))
(assert (= temp682_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp682_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_5 #x0000000000000000))
(assert (= var79914 temp682_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp682_6 #x0000000000000000))
(assert (= temp682_7 temp682_6))
(assert (= temp682_8 (select ARGNAME_padding_NAMEEND_VAL temp682_7)))
(assert (= temp682_9 #x0000000000000001))
(assert (= temp682_10 temp682_9))
(assert (= temp682_11 (select ARGNAME_padding_NAMEEND_VAL temp682_10)))
(assert (= temp682_12 #x0000000000000002))
(assert (= temp682_13 temp682_12))
(assert (= temp682_14 (select ARGNAME_padding_NAMEEND_VAL temp682_13)))
(assert (= temp682_15 #x0000000000000003))
(assert (= temp682_16 temp682_15))
(assert (= temp682_17 (select ARGNAME_padding_NAMEEND_VAL temp682_16)))
(assert (= temp682_18 #x0000000000000004))
(assert (= temp682_19 temp682_18))
(assert (= temp682_20 (select ARGNAME_padding_NAMEEND_VAL temp682_19)))
(assert (= temp682_21 #x0000000000000005))
(assert (= temp682_22 temp682_21))
(assert (= temp682_23 (select ARGNAME_padding_NAMEEND_VAL temp682_22)))
(assert (= temp682_24 #x0000000000000000))
(assert (= temp682_25 #x0000000000000000))
(assert (= temp682_26 temp682_25))
(assert (= temp682_27 (select ARGNAME_padding_NAMEEND_VAL temp682_26)))
(assert (= temp682_28 #x0000000000000000))
(assert (= temp682_29 #x0000000000000001))
(assert (= temp682_30 temp682_29))
(assert (= temp682_31 (select ARGNAME_padding_NAMEEND_VAL temp682_30)))
(assert (= temp682_32 #x0000000000000000))
(assert (= temp682_33 #x0000000000000002))
(assert (= temp682_34 temp682_33))
(assert (= temp682_35 (select ARGNAME_padding_NAMEEND_VAL temp682_34)))
(assert (= temp682_36 #x0000000000000000))
(assert (= temp682_37 #x0000000000000003))
(assert (= temp682_38 temp682_37))
(assert (= temp682_39 (select ARGNAME_padding_NAMEEND_VAL temp682_38)))
(assert (= temp682_40 #x0000000000000000))
(assert (= temp682_41 #x0000000000000004))
(assert (= temp682_42 temp682_41))
(assert (= temp682_43 (select ARGNAME_padding_NAMEEND_VAL temp682_42)))
(assert (= temp682_44 #x0000000000000000))
(assert (= temp682_45 #x0000000000000005))
(assert (= temp682_46 temp682_45))
(assert (= temp682_47 (select ARGNAME_padding_NAMEEND_VAL temp682_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp682_27 temp682_24)
             (bvslt temp682_31 temp682_28)
             (bvslt temp682_35 temp682_32)
             (bvslt temp682_39 temp682_36)
             (bvslt temp682_43 temp682_40)
             (bvslt temp682_47 temp682_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_48 #x0000000000000000))
(assert (= var1322786 temp682_48))
(assert (= temp682_49 #x0000000000000000))
(assert (= temp682_50 temp682_49))
(assert (= temp682_51 (select ARGNAME_output_padding_NAMEEND_VAL temp682_50)))
(assert (= temp682_52 #x0000000000000001))
(assert (= temp682_53 temp682_52))
(assert (= temp682_54 (select ARGNAME_output_padding_NAMEEND_VAL temp682_53)))
(assert (= temp682_55 #x0000000000000002))
(assert (= temp682_56 temp682_55))
(assert (= temp682_57 (select ARGNAME_output_padding_NAMEEND_VAL temp682_56)))
(assert (= temp682_58 #x0000000000000003))
(assert (= temp682_59 temp682_58))
(assert (= temp682_60 (select ARGNAME_output_padding_NAMEEND_VAL temp682_59)))
(assert (= temp682_61 #x0000000000000004))
(assert (= temp682_62 temp682_61))
(assert (= temp682_63 (select ARGNAME_output_padding_NAMEEND_VAL temp682_62)))
(assert (= temp682_64 #x0000000000000005))
(assert (= temp682_65 temp682_64))
(assert (= temp682_66 (select ARGNAME_output_padding_NAMEEND_VAL temp682_65)))
(assert (= temp682_67 #x0000000000000000))
(assert (= temp682_68 #x0000000000000000))
(assert (= temp682_69 temp682_68))
(assert (= temp682_70 (select ARGNAME_output_padding_NAMEEND_VAL temp682_69)))
(assert (= temp682_71 #x0000000000000000))
(assert (= temp682_72 #x0000000000000001))
(assert (= temp682_73 temp682_72))
(assert (= temp682_74 (select ARGNAME_output_padding_NAMEEND_VAL temp682_73)))
(assert (= temp682_75 #x0000000000000000))
(assert (= temp682_76 #x0000000000000002))
(assert (= temp682_77 temp682_76))
(assert (= temp682_78 (select ARGNAME_output_padding_NAMEEND_VAL temp682_77)))
(assert (= temp682_79 #x0000000000000000))
(assert (= temp682_80 #x0000000000000003))
(assert (= temp682_81 temp682_80))
(assert (= temp682_82 (select ARGNAME_output_padding_NAMEEND_VAL temp682_81)))
(assert (= temp682_83 #x0000000000000000))
(assert (= temp682_84 #x0000000000000004))
(assert (= temp682_85 temp682_84))
(assert (= temp682_86 (select ARGNAME_output_padding_NAMEEND_VAL temp682_85)))
(assert (= temp682_87 #x0000000000000000))
(assert (= temp682_88 #x0000000000000005))
(assert (= temp682_89 temp682_88))
(assert (= temp682_90 (select ARGNAME_output_padding_NAMEEND_VAL temp682_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp682_70 temp682_67)
             (bvslt temp682_74 temp682_71)
             (bvslt temp682_78 temp682_75)
             (bvslt temp682_82 temp682_79)
             (bvslt temp682_86 temp682_83)
             (bvslt temp682_90 temp682_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_91 #x0000000000000000))
(assert (= var1322797 temp682_91))
(assert (= temp682_92 #x0000000000000000))
(assert (= temp682_93 temp682_92))
(assert (= temp682_94 (select ARGNAME_stride_NAMEEND_VAL temp682_93)))
(assert (= temp682_95 #x0000000000000001))
(assert (= temp682_96 temp682_95))
(assert (= temp682_97 (select ARGNAME_stride_NAMEEND_VAL temp682_96)))
(assert (= temp682_98 #x0000000000000002))
(assert (= temp682_99 temp682_98))
(assert (= temp682_100 (select ARGNAME_stride_NAMEEND_VAL temp682_99)))
(assert (= temp682_101 #x0000000000000003))
(assert (= temp682_102 temp682_101))
(assert (= temp682_103 (select ARGNAME_stride_NAMEEND_VAL temp682_102)))
(assert (= temp682_104 #x0000000000000004))
(assert (= temp682_105 temp682_104))
(assert (= temp682_106 (select ARGNAME_stride_NAMEEND_VAL temp682_105)))
(assert (= temp682_107 #x0000000000000005))
(assert (= temp682_108 temp682_107))
(assert (= temp682_109 (select ARGNAME_stride_NAMEEND_VAL temp682_108)))
(assert (= temp682_110 #x0000000000000000))
(assert (= temp682_111 #x0000000000000000))
(assert (= temp682_112 temp682_111))
(assert (= temp682_113 (select ARGNAME_stride_NAMEEND_VAL temp682_112)))
(assert (= temp682_114 #x0000000000000000))
(assert (= temp682_115 #x0000000000000001))
(assert (= temp682_116 temp682_115))
(assert (= temp682_117 (select ARGNAME_stride_NAMEEND_VAL temp682_116)))
(assert (= temp682_118 #x0000000000000000))
(assert (= temp682_119 #x0000000000000002))
(assert (= temp682_120 temp682_119))
(assert (= temp682_121 (select ARGNAME_stride_NAMEEND_VAL temp682_120)))
(assert (= temp682_122 #x0000000000000000))
(assert (= temp682_123 #x0000000000000003))
(assert (= temp682_124 temp682_123))
(assert (= temp682_125 (select ARGNAME_stride_NAMEEND_VAL temp682_124)))
(assert (= temp682_126 #x0000000000000000))
(assert (= temp682_127 #x0000000000000004))
(assert (= temp682_128 temp682_127))
(assert (= temp682_129 (select ARGNAME_stride_NAMEEND_VAL temp682_128)))
(assert (= temp682_130 #x0000000000000000))
(assert (= temp682_131 #x0000000000000005))
(assert (= temp682_132 temp682_131))
(assert (= temp682_133 (select ARGNAME_stride_NAMEEND_VAL temp682_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp682_113 temp682_110)
             (bvsle temp682_117 temp682_114)
             (bvsle temp682_121 temp682_118)
             (bvsle temp682_125 temp682_122)
             (bvsle temp682_129 temp682_126)
             (bvsle temp682_133 temp682_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_134 #x0000000000000000))
(assert (= var1322807 temp682_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_135 #x0000000000000001))
(assert (= var1322819 temp682_135))
(assert (= temp682_136 #x0000000000000000))
(assert (= var1310898 temp682_136))
(assert (= temp682_137 #x0000000000000000))
(assert (= temp682_138 temp682_137))
(assert (= temp682_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_138)))
(assert (= temp682_140 #x0000000000000001))
(assert (= temp682_141 temp682_140))
(assert (= temp682_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_141)))
(assert (= temp682_143 #x0000000000000002))
(assert (= temp682_144 temp682_143))
(assert (= temp682_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_144)))
(assert (= temp682_146 #x0000000000000003))
(assert (= temp682_147 temp682_146))
(assert (= temp682_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_147)))
(assert (= temp682_149 #x0000000000000004))
(assert (= temp682_150 temp682_149))
(assert (= temp682_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_150)))
(assert (= temp682_152 #x0000000000000005))
(assert (= temp682_153 temp682_152))
(assert (= temp682_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_153)))
(assert (= temp682_156 var1310898))
(assert (= temp682_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_156)))
(assert (= temp682_155 temp682_157))
(assert (= var1322852
   (ite (bvslt temp682_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_158 #x0000000000000000))
(assert (= var1322852 temp682_158))
(assert (= temp682_159 #x0000000000000000))
(assert (= var1310898 temp682_159))
(assert (= temp682_161 var1310898))
(assert (= temp682_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_161)))
(assert (= temp682_160 temp682_162))
(assert (= var1322874 (bvsmod temp682_160 ARGNAME_groups_NAMEEND)))
(assert (= temp682_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp682_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_164 #x0000000000000001))
(assert (= var1322875 temp682_164))
(assert (= temp682_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp682_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_166 #x0000000000000001))
(assert (= var1322895 temp682_166))
(assert (= temp682_167 #x0000000000000001))
(assert (= var1311786 temp682_167))
(assert (= temp682_168 #x0000000000000000))
(assert (= temp682_169 temp682_168))
(assert (= temp682_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_169)))
(assert (= temp682_171 #x0000000000000001))
(assert (= temp682_172 temp682_171))
(assert (= temp682_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_172)))
(assert (= temp682_174 #x0000000000000002))
(assert (= temp682_175 temp682_174))
(assert (= temp682_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_175)))
(assert (= temp682_177 #x0000000000000003))
(assert (= temp682_178 temp682_177))
(assert (= temp682_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_178)))
(assert (= temp682_180 #x0000000000000004))
(assert (= temp682_181 temp682_180))
(assert (= temp682_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_181)))
(assert (= temp682_183 #x0000000000000005))
(assert (= temp682_184 temp682_183))
(assert (= temp682_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_184)))
(assert (= temp682_186 #x0000000000000000))
(assert (= temp682_187
   (ite (bvslt var1311786 temp682_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp682_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_187)))
(assert (= var1322903 temp682_188))
(assert (bvslt (ite (bvslt var1311786 temp682_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp682_189 #x0000000000000001))
(assert (= var1311786 temp682_189))
(assert (= temp682_191 var1311786))
(assert (= temp682_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_191)))
(assert (= temp682_190 temp682_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp682_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_193 #x0000000000000001))
(assert (= var1322908 temp682_193))
(assert (= temp682_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp682_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_195 #x0000000000000001))
(assert (= var1322975 temp682_195))
(assert (= temp682_196 #x0000000000000000))
(assert (= var1310898 temp682_196))
(assert (= temp682_197 #x0000000000000000))
(assert (= temp682_198 temp682_197))
(assert (= temp682_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp682_198)))
(assert (= temp682_200 #x0000000000000001))
(assert (= temp682_201 temp682_200))
(assert (= temp682_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp682_201)))
(assert (= temp682_203 #x0000000000000002))
(assert (= temp682_204 temp682_203))
(assert (= temp682_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp682_204)))
(assert (= temp682_206 #x0000000000000003))
(assert (= temp682_207 temp682_206))
(assert (= temp682_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp682_207)))
(assert (= temp682_209 #x0000000000000004))
(assert (= temp682_210 temp682_209))
(assert (= temp682_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp682_210)))
(assert (= temp682_212 #x0000000000000005))
(assert (= temp682_213 temp682_212))
(assert (= temp682_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp682_213)))
(assert (= temp682_215 #x0000000000000000))
(assert (= temp682_216
   (ite (bvslt var1310898 temp682_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp682_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp682_216)))
(assert (= var1322977 temp682_217))
(assert (bvslt (ite (bvslt var1310898 temp682_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp682_218 #x0000000000000000))
(assert (= var1310898 temp682_218))
(assert (= temp682_220 var1310898))
(assert (= temp682_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_220)))
(assert (= temp682_219 temp682_221))
(assert (= var1322980
   (ite (= var1322977 temp682_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_222 #x0000000000000001))
(assert (= var1322980 temp682_222))
(assert (= temp682_223 #x0000000000000002))
(assert (= var1848169 temp682_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp682_225 #x0000000000000001))
(assert (= var1323065 temp682_225))
(assert (= temp682_226 #x0000000000000001))
(assert (= var3486735 temp682_226))
(assert (= temp682_227 #x0000000000000001))
(assert (= var3814415 temp682_227))
(assert (= temp682_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp682_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_229 #x0000000000000001))
(assert (= var79986 temp682_229))
(assert (= temp682_230 #x0000000000000001))
(assert (= var80116 temp682_230))
(assert (= var4796905 var80116))
(assert (= temp682_231 #x0000000000000000))
(assert (= var4784306 temp682_231))
(assert (= temp682_232 #x0000000000000000))
(assert (= temp682_233
   (ite (bvslt var4784306 temp682_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp682_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_233)))
(assert (= var4796924 temp682_234))
(assert (bvslt (ite (bvslt var4784306 temp682_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp682_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp682_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_236 #x0000000000000001))
(assert (= var4796925 temp682_236))
(assert (= temp682_237 #x0000000000000000))
(assert (= var4996927 temp682_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp682_238 #x0000000000000002))
(assert (= var5125763 temp682_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_239 #x0000000000000000))
(assert (= var5191324 temp682_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp682_241 #xffffffffffffffff))
(assert (= temp682_240 temp682_241))
(assert (= temp682_242 #x0000000000000001))
(assert (= var66602 temp682_242))
(assert (= temp682_243 #x0000000000000000))
(assert (= temp682_244
   (ite (bvslt var66602 temp682_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp682_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_244)))
(assert (= var80523 temp682_245))
(assert (bvslt (ite (bvslt var66602 temp682_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp682_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp682_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_247 #x0000000000000001))
(assert (= var80524 temp682_247))
(assert (= temp682_249 #xffffffffffffffff))
(assert (= temp682_248 temp682_249))
(assert (= temp682_250 #x0000000000000001))
(assert (= var79986 temp682_250))
(model-add temp682_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp682_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp682_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






