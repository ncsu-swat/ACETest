(declare-fun temp45_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp45_2 () (_ BitVec 64))
(declare-fun temp45_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp45_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp45_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp45_6 () (_ BitVec 64))
(declare-fun temp45_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_8 () (_ BitVec 64))
(declare-fun temp45_9 () (_ BitVec 64))
(declare-fun temp45_10 () (_ BitVec 64))
(declare-fun temp45_11 () (_ BitVec 64))
(declare-fun temp45_12 () (_ BitVec 64))
(declare-fun temp45_13 () (_ BitVec 64))
(declare-fun temp45_14 () (_ BitVec 64))
(declare-fun temp45_15 () (_ BitVec 64))
(declare-fun temp45_16 () (_ BitVec 64))
(declare-fun temp45_17 () (_ BitVec 64))
(declare-fun temp45_18 () (_ BitVec 64))
(declare-fun temp45_19 () (_ BitVec 64))
(declare-fun temp45_20 () (_ BitVec 64))
(declare-fun temp45_21 () (_ BitVec 64))
(declare-fun temp45_22 () (_ BitVec 64))
(declare-fun temp45_23 () (_ BitVec 64))
(declare-fun temp45_24 () (_ BitVec 64))
(declare-fun temp45_25 () (_ BitVec 64))
(declare-fun temp45_26 () (_ BitVec 64))
(declare-fun temp45_27 () (_ BitVec 64))
(declare-fun temp45_28 () (_ BitVec 64))
(declare-fun temp45_29 () (_ BitVec 64))
(declare-fun temp45_30 () (_ BitVec 64))
(declare-fun temp45_31 () (_ BitVec 64))
(declare-fun temp45_32 () (_ BitVec 64))
(declare-fun temp45_33 () (_ BitVec 64))
(declare-fun temp45_34 () (_ BitVec 64))
(declare-fun temp45_35 () (_ BitVec 64))
(declare-fun temp45_36 () (_ BitVec 64))
(declare-fun temp45_37 () (_ BitVec 64))
(declare-fun temp45_38 () (_ BitVec 64))
(declare-fun temp45_39 () (_ BitVec 64))
(declare-fun temp45_40 () (_ BitVec 64))
(declare-fun temp45_41 () (_ BitVec 64))
(declare-fun temp45_42 () (_ BitVec 64))
(declare-fun temp45_43 () (_ BitVec 64))
(declare-fun temp45_44 () (_ BitVec 64))
(declare-fun temp45_45 () (_ BitVec 64))
(declare-fun temp45_46 () (_ BitVec 64))
(declare-fun temp45_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp45_48 () (_ BitVec 64))
(declare-fun temp45_49 () (_ BitVec 64))
(declare-fun temp45_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_51 () (_ BitVec 64))
(declare-fun temp45_52 () (_ BitVec 64))
(declare-fun temp45_53 () (_ BitVec 64))
(declare-fun temp45_54 () (_ BitVec 64))
(declare-fun temp45_55 () (_ BitVec 64))
(declare-fun temp45_56 () (_ BitVec 64))
(declare-fun temp45_57 () (_ BitVec 64))
(declare-fun temp45_58 () (_ BitVec 64))
(declare-fun temp45_59 () (_ BitVec 64))
(declare-fun temp45_60 () (_ BitVec 64))
(declare-fun temp45_61 () (_ BitVec 64))
(declare-fun temp45_62 () (_ BitVec 64))
(declare-fun temp45_63 () (_ BitVec 64))
(declare-fun temp45_64 () (_ BitVec 64))
(declare-fun temp45_65 () (_ BitVec 64))
(declare-fun temp45_66 () (_ BitVec 64))
(declare-fun temp45_67 () (_ BitVec 64))
(declare-fun temp45_68 () (_ BitVec 64))
(declare-fun temp45_69 () (_ BitVec 64))
(declare-fun temp45_70 () (_ BitVec 64))
(declare-fun temp45_71 () (_ BitVec 64))
(declare-fun temp45_72 () (_ BitVec 64))
(declare-fun temp45_73 () (_ BitVec 64))
(declare-fun temp45_74 () (_ BitVec 64))
(declare-fun temp45_75 () (_ BitVec 64))
(declare-fun temp45_76 () (_ BitVec 64))
(declare-fun temp45_77 () (_ BitVec 64))
(declare-fun temp45_78 () (_ BitVec 64))
(declare-fun temp45_79 () (_ BitVec 64))
(declare-fun temp45_80 () (_ BitVec 64))
(declare-fun temp45_81 () (_ BitVec 64))
(declare-fun temp45_82 () (_ BitVec 64))
(declare-fun temp45_83 () (_ BitVec 64))
(declare-fun temp45_84 () (_ BitVec 64))
(declare-fun temp45_85 () (_ BitVec 64))
(declare-fun temp45_86 () (_ BitVec 64))
(declare-fun temp45_87 () (_ BitVec 64))
(declare-fun temp45_88 () (_ BitVec 64))
(declare-fun temp45_89 () (_ BitVec 64))
(declare-fun temp45_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp45_91 () (_ BitVec 64))
(declare-fun temp45_92 () (_ BitVec 64))
(declare-fun temp45_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_94 () (_ BitVec 64))
(declare-fun temp45_95 () (_ BitVec 64))
(declare-fun temp45_96 () (_ BitVec 64))
(declare-fun temp45_97 () (_ BitVec 64))
(declare-fun temp45_98 () (_ BitVec 64))
(declare-fun temp45_99 () (_ BitVec 64))
(declare-fun temp45_100 () (_ BitVec 64))
(declare-fun temp45_101 () (_ BitVec 64))
(declare-fun temp45_102 () (_ BitVec 64))
(declare-fun temp45_103 () (_ BitVec 64))
(declare-fun temp45_104 () (_ BitVec 64))
(declare-fun temp45_105 () (_ BitVec 64))
(declare-fun temp45_106 () (_ BitVec 64))
(declare-fun temp45_107 () (_ BitVec 64))
(declare-fun temp45_108 () (_ BitVec 64))
(declare-fun temp45_109 () (_ BitVec 64))
(declare-fun temp45_110 () (_ BitVec 64))
(declare-fun temp45_111 () (_ BitVec 64))
(declare-fun temp45_112 () (_ BitVec 64))
(declare-fun temp45_113 () (_ BitVec 64))
(declare-fun temp45_114 () (_ BitVec 64))
(declare-fun temp45_115 () (_ BitVec 64))
(declare-fun temp45_116 () (_ BitVec 64))
(declare-fun temp45_117 () (_ BitVec 64))
(declare-fun temp45_118 () (_ BitVec 64))
(declare-fun temp45_119 () (_ BitVec 64))
(declare-fun temp45_120 () (_ BitVec 64))
(declare-fun temp45_121 () (_ BitVec 64))
(declare-fun temp45_122 () (_ BitVec 64))
(declare-fun temp45_123 () (_ BitVec 64))
(declare-fun temp45_124 () (_ BitVec 64))
(declare-fun temp45_125 () (_ BitVec 64))
(declare-fun temp45_126 () (_ BitVec 64))
(declare-fun temp45_127 () (_ BitVec 64))
(declare-fun temp45_128 () (_ BitVec 64))
(declare-fun temp45_129 () (_ BitVec 64))
(declare-fun temp45_130 () (_ BitVec 64))
(declare-fun temp45_131 () (_ BitVec 64))
(declare-fun temp45_132 () (_ BitVec 64))
(declare-fun temp45_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp45_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp45_135 () (_ BitVec 64))
(declare-fun temp45_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp45_137 () (_ BitVec 64))
(declare-fun temp45_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_139 () (_ BitVec 64))
(declare-fun temp45_140 () (_ BitVec 64))
(declare-fun temp45_141 () (_ BitVec 64))
(declare-fun temp45_142 () (_ BitVec 64))
(declare-fun temp45_143 () (_ BitVec 64))
(declare-fun temp45_144 () (_ BitVec 64))
(declare-fun temp45_145 () (_ BitVec 64))
(declare-fun temp45_146 () (_ BitVec 64))
(declare-fun temp45_147 () (_ BitVec 64))
(declare-fun temp45_148 () (_ BitVec 64))
(declare-fun temp45_149 () (_ BitVec 64))
(declare-fun temp45_150 () (_ BitVec 64))
(declare-fun temp45_151 () (_ BitVec 64))
(declare-fun temp45_152 () (_ BitVec 64))
(declare-fun temp45_153 () (_ BitVec 64))
(declare-fun temp45_154 () (_ BitVec 64))
(declare-fun temp45_156 () (_ BitVec 64))
(declare-fun temp45_157 () (_ BitVec 64))
(declare-fun temp45_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp45_158 () (_ BitVec 64))
(declare-fun temp45_159 () (_ BitVec 64))
(declare-fun temp45_161 () (_ BitVec 64))
(declare-fun temp45_162 () (_ BitVec 64))
(declare-fun temp45_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp45_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp45_164 () (_ BitVec 64))
(declare-fun temp45_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp45_166 () (_ BitVec 64))
(declare-fun temp45_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp45_168 () (_ BitVec 64))
(declare-fun temp45_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_170 () (_ BitVec 64))
(declare-fun temp45_171 () (_ BitVec 64))
(declare-fun temp45_172 () (_ BitVec 64))
(declare-fun temp45_173 () (_ BitVec 64))
(declare-fun temp45_174 () (_ BitVec 64))
(declare-fun temp45_175 () (_ BitVec 64))
(declare-fun temp45_176 () (_ BitVec 64))
(declare-fun temp45_177 () (_ BitVec 64))
(declare-fun temp45_178 () (_ BitVec 64))
(declare-fun temp45_179 () (_ BitVec 64))
(declare-fun temp45_180 () (_ BitVec 64))
(declare-fun temp45_181 () (_ BitVec 64))
(declare-fun temp45_182 () (_ BitVec 64))
(declare-fun temp45_183 () (_ BitVec 64))
(declare-fun temp45_184 () (_ BitVec 64))
(declare-fun temp45_185 () (_ BitVec 64))
(declare-fun temp45_186 () (_ BitVec 64))
(declare-fun temp45_187 () (_ BitVec 64))
(declare-fun temp45_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp45_189 () (_ BitVec 64))
(declare-fun temp45_191 () (_ BitVec 64))
(declare-fun temp45_192 () (_ BitVec 64))
(declare-fun temp45_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp45_193 () (_ BitVec 64))
(declare-fun temp45_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp45_195 () (_ BitVec 64))
(declare-fun temp45_196 () (_ BitVec 64))
(declare-fun temp45_197 () (_ BitVec 64))
(declare-fun temp45_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_199 () (_ BitVec 64))
(declare-fun temp45_200 () (_ BitVec 64))
(declare-fun temp45_201 () (_ BitVec 64))
(declare-fun temp45_202 () (_ BitVec 64))
(declare-fun temp45_203 () (_ BitVec 64))
(declare-fun temp45_204 () (_ BitVec 64))
(declare-fun temp45_205 () (_ BitVec 64))
(declare-fun temp45_206 () (_ BitVec 64))
(declare-fun temp45_207 () (_ BitVec 64))
(declare-fun temp45_208 () (_ BitVec 64))
(declare-fun temp45_209 () (_ BitVec 64))
(declare-fun temp45_210 () (_ BitVec 64))
(declare-fun temp45_211 () (_ BitVec 64))
(declare-fun temp45_212 () (_ BitVec 64))
(declare-fun temp45_213 () (_ BitVec 64))
(declare-fun temp45_214 () (_ BitVec 64))
(declare-fun temp45_215 () (_ BitVec 64))
(declare-fun temp45_216 () (_ BitVec 64))
(declare-fun temp45_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp45_218 () (_ BitVec 64))
(declare-fun temp45_220 () (_ BitVec 64))
(declare-fun temp45_221 () (_ BitVec 64))
(declare-fun temp45_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp45_222 () (_ BitVec 64))
(declare-fun temp45_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp45_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp45_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp45_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp45_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp45_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp45_229 () (_ BitVec 64))
(declare-fun temp45_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp45_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp45_232 () (_ BitVec 64))
(declare-fun temp45_233 () (_ BitVec 64))
(declare-fun temp45_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp45_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp45_236 () (_ BitVec 64))
(declare-fun temp45_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp45_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp45_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp45_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp45_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp45_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6635340 () (_ BitVec 64))
(declare-fun var6635341 () (_ BitVec 64))
(declare-fun var6635342 () (_ BitVec 64))
(declare-fun temp45_243 () (_ BitVec 64))
(declare-fun temp45_244 () (_ BitVec 64))
(declare-fun var7156500 () (_ BitVec 64))
(declare-fun var7156467 () (_ BitVec 64))
(declare-fun var7025031 () (_ BitVec 64))
(declare-fun var7025027 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp45_245 () (_ BitVec 64))
(assert (= temp45_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp45_1)))
(assert (= temp45_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp45_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_3 #x0000000000000000))
(assert (= var79869 temp45_3))
(assert (= temp45_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp45_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_5 #x0000000000000000))
(assert (= var79914 temp45_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp45_6 #x0000000000000000))
(assert (= temp45_7 temp45_6))
(assert (= temp45_8 (select ARGNAME_padding_NAMEEND_VAL temp45_7)))
(assert (= temp45_9 #x0000000000000001))
(assert (= temp45_10 temp45_9))
(assert (= temp45_11 (select ARGNAME_padding_NAMEEND_VAL temp45_10)))
(assert (= temp45_12 #x0000000000000002))
(assert (= temp45_13 temp45_12))
(assert (= temp45_14 (select ARGNAME_padding_NAMEEND_VAL temp45_13)))
(assert (= temp45_15 #x0000000000000003))
(assert (= temp45_16 temp45_15))
(assert (= temp45_17 (select ARGNAME_padding_NAMEEND_VAL temp45_16)))
(assert (= temp45_18 #x0000000000000004))
(assert (= temp45_19 temp45_18))
(assert (= temp45_20 (select ARGNAME_padding_NAMEEND_VAL temp45_19)))
(assert (= temp45_21 #x0000000000000005))
(assert (= temp45_22 temp45_21))
(assert (= temp45_23 (select ARGNAME_padding_NAMEEND_VAL temp45_22)))
(assert (= temp45_24 #x0000000000000000))
(assert (= temp45_25 #x0000000000000000))
(assert (= temp45_26 temp45_25))
(assert (= temp45_27 (select ARGNAME_padding_NAMEEND_VAL temp45_26)))
(assert (= temp45_28 #x0000000000000000))
(assert (= temp45_29 #x0000000000000001))
(assert (= temp45_30 temp45_29))
(assert (= temp45_31 (select ARGNAME_padding_NAMEEND_VAL temp45_30)))
(assert (= temp45_32 #x0000000000000000))
(assert (= temp45_33 #x0000000000000002))
(assert (= temp45_34 temp45_33))
(assert (= temp45_35 (select ARGNAME_padding_NAMEEND_VAL temp45_34)))
(assert (= temp45_36 #x0000000000000000))
(assert (= temp45_37 #x0000000000000003))
(assert (= temp45_38 temp45_37))
(assert (= temp45_39 (select ARGNAME_padding_NAMEEND_VAL temp45_38)))
(assert (= temp45_40 #x0000000000000000))
(assert (= temp45_41 #x0000000000000004))
(assert (= temp45_42 temp45_41))
(assert (= temp45_43 (select ARGNAME_padding_NAMEEND_VAL temp45_42)))
(assert (= temp45_44 #x0000000000000000))
(assert (= temp45_45 #x0000000000000005))
(assert (= temp45_46 temp45_45))
(assert (= temp45_47 (select ARGNAME_padding_NAMEEND_VAL temp45_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp45_27 temp45_24)
             (bvslt temp45_31 temp45_28)
             (bvslt temp45_35 temp45_32)
             (bvslt temp45_39 temp45_36)
             (bvslt temp45_43 temp45_40)
             (bvslt temp45_47 temp45_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_48 #x0000000000000000))
(assert (= var1322786 temp45_48))
(assert (= temp45_49 #x0000000000000000))
(assert (= temp45_50 temp45_49))
(assert (= temp45_51 (select ARGNAME_output_padding_NAMEEND_VAL temp45_50)))
(assert (= temp45_52 #x0000000000000001))
(assert (= temp45_53 temp45_52))
(assert (= temp45_54 (select ARGNAME_output_padding_NAMEEND_VAL temp45_53)))
(assert (= temp45_55 #x0000000000000002))
(assert (= temp45_56 temp45_55))
(assert (= temp45_57 (select ARGNAME_output_padding_NAMEEND_VAL temp45_56)))
(assert (= temp45_58 #x0000000000000003))
(assert (= temp45_59 temp45_58))
(assert (= temp45_60 (select ARGNAME_output_padding_NAMEEND_VAL temp45_59)))
(assert (= temp45_61 #x0000000000000004))
(assert (= temp45_62 temp45_61))
(assert (= temp45_63 (select ARGNAME_output_padding_NAMEEND_VAL temp45_62)))
(assert (= temp45_64 #x0000000000000005))
(assert (= temp45_65 temp45_64))
(assert (= temp45_66 (select ARGNAME_output_padding_NAMEEND_VAL temp45_65)))
(assert (= temp45_67 #x0000000000000000))
(assert (= temp45_68 #x0000000000000000))
(assert (= temp45_69 temp45_68))
(assert (= temp45_70 (select ARGNAME_output_padding_NAMEEND_VAL temp45_69)))
(assert (= temp45_71 #x0000000000000000))
(assert (= temp45_72 #x0000000000000001))
(assert (= temp45_73 temp45_72))
(assert (= temp45_74 (select ARGNAME_output_padding_NAMEEND_VAL temp45_73)))
(assert (= temp45_75 #x0000000000000000))
(assert (= temp45_76 #x0000000000000002))
(assert (= temp45_77 temp45_76))
(assert (= temp45_78 (select ARGNAME_output_padding_NAMEEND_VAL temp45_77)))
(assert (= temp45_79 #x0000000000000000))
(assert (= temp45_80 #x0000000000000003))
(assert (= temp45_81 temp45_80))
(assert (= temp45_82 (select ARGNAME_output_padding_NAMEEND_VAL temp45_81)))
(assert (= temp45_83 #x0000000000000000))
(assert (= temp45_84 #x0000000000000004))
(assert (= temp45_85 temp45_84))
(assert (= temp45_86 (select ARGNAME_output_padding_NAMEEND_VAL temp45_85)))
(assert (= temp45_87 #x0000000000000000))
(assert (= temp45_88 #x0000000000000005))
(assert (= temp45_89 temp45_88))
(assert (= temp45_90 (select ARGNAME_output_padding_NAMEEND_VAL temp45_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp45_70 temp45_67)
             (bvslt temp45_74 temp45_71)
             (bvslt temp45_78 temp45_75)
             (bvslt temp45_82 temp45_79)
             (bvslt temp45_86 temp45_83)
             (bvslt temp45_90 temp45_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_91 #x0000000000000000))
(assert (= var1322797 temp45_91))
(assert (= temp45_92 #x0000000000000000))
(assert (= temp45_93 temp45_92))
(assert (= temp45_94 (select ARGNAME_stride_NAMEEND_VAL temp45_93)))
(assert (= temp45_95 #x0000000000000001))
(assert (= temp45_96 temp45_95))
(assert (= temp45_97 (select ARGNAME_stride_NAMEEND_VAL temp45_96)))
(assert (= temp45_98 #x0000000000000002))
(assert (= temp45_99 temp45_98))
(assert (= temp45_100 (select ARGNAME_stride_NAMEEND_VAL temp45_99)))
(assert (= temp45_101 #x0000000000000003))
(assert (= temp45_102 temp45_101))
(assert (= temp45_103 (select ARGNAME_stride_NAMEEND_VAL temp45_102)))
(assert (= temp45_104 #x0000000000000004))
(assert (= temp45_105 temp45_104))
(assert (= temp45_106 (select ARGNAME_stride_NAMEEND_VAL temp45_105)))
(assert (= temp45_107 #x0000000000000005))
(assert (= temp45_108 temp45_107))
(assert (= temp45_109 (select ARGNAME_stride_NAMEEND_VAL temp45_108)))
(assert (= temp45_110 #x0000000000000000))
(assert (= temp45_111 #x0000000000000000))
(assert (= temp45_112 temp45_111))
(assert (= temp45_113 (select ARGNAME_stride_NAMEEND_VAL temp45_112)))
(assert (= temp45_114 #x0000000000000000))
(assert (= temp45_115 #x0000000000000001))
(assert (= temp45_116 temp45_115))
(assert (= temp45_117 (select ARGNAME_stride_NAMEEND_VAL temp45_116)))
(assert (= temp45_118 #x0000000000000000))
(assert (= temp45_119 #x0000000000000002))
(assert (= temp45_120 temp45_119))
(assert (= temp45_121 (select ARGNAME_stride_NAMEEND_VAL temp45_120)))
(assert (= temp45_122 #x0000000000000000))
(assert (= temp45_123 #x0000000000000003))
(assert (= temp45_124 temp45_123))
(assert (= temp45_125 (select ARGNAME_stride_NAMEEND_VAL temp45_124)))
(assert (= temp45_126 #x0000000000000000))
(assert (= temp45_127 #x0000000000000004))
(assert (= temp45_128 temp45_127))
(assert (= temp45_129 (select ARGNAME_stride_NAMEEND_VAL temp45_128)))
(assert (= temp45_130 #x0000000000000000))
(assert (= temp45_131 #x0000000000000005))
(assert (= temp45_132 temp45_131))
(assert (= temp45_133 (select ARGNAME_stride_NAMEEND_VAL temp45_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp45_113 temp45_110)
             (bvsle temp45_117 temp45_114)
             (bvsle temp45_121 temp45_118)
             (bvsle temp45_125 temp45_122)
             (bvsle temp45_129 temp45_126)
             (bvsle temp45_133 temp45_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_134 #x0000000000000000))
(assert (= var1322807 temp45_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_135 #x0000000000000001))
(assert (= var1322819 temp45_135))
(assert (= temp45_136 #x0000000000000000))
(assert (= var1310898 temp45_136))
(assert (= temp45_137 #x0000000000000000))
(assert (= temp45_138 temp45_137))
(assert (= temp45_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_138)))
(assert (= temp45_140 #x0000000000000001))
(assert (= temp45_141 temp45_140))
(assert (= temp45_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_141)))
(assert (= temp45_143 #x0000000000000002))
(assert (= temp45_144 temp45_143))
(assert (= temp45_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_144)))
(assert (= temp45_146 #x0000000000000003))
(assert (= temp45_147 temp45_146))
(assert (= temp45_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_147)))
(assert (= temp45_149 #x0000000000000004))
(assert (= temp45_150 temp45_149))
(assert (= temp45_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_150)))
(assert (= temp45_152 #x0000000000000005))
(assert (= temp45_153 temp45_152))
(assert (= temp45_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_153)))
(assert (= temp45_156 var1310898))
(assert (= temp45_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_156)))
(assert (= temp45_155 temp45_157))
(assert (= var1322852
   (ite (bvslt temp45_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_158 #x0000000000000000))
(assert (= var1322852 temp45_158))
(assert (= temp45_159 #x0000000000000000))
(assert (= var1310898 temp45_159))
(assert (= temp45_161 var1310898))
(assert (= temp45_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_161)))
(assert (= temp45_160 temp45_162))
(assert (= var1322874 (bvsmod temp45_160 ARGNAME_groups_NAMEEND)))
(assert (= temp45_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp45_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp45_164 #x0000000000000001))
(assert (= var1322875 temp45_164))
(assert (= temp45_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp45_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_166 #x0000000000000001))
(assert (= var1322895 temp45_166))
(assert (= temp45_167 #x0000000000000001))
(assert (= var1311786 temp45_167))
(assert (= temp45_168 #x0000000000000000))
(assert (= temp45_169 temp45_168))
(assert (= temp45_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_169)))
(assert (= temp45_171 #x0000000000000001))
(assert (= temp45_172 temp45_171))
(assert (= temp45_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_172)))
(assert (= temp45_174 #x0000000000000002))
(assert (= temp45_175 temp45_174))
(assert (= temp45_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_175)))
(assert (= temp45_177 #x0000000000000003))
(assert (= temp45_178 temp45_177))
(assert (= temp45_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_178)))
(assert (= temp45_180 #x0000000000000004))
(assert (= temp45_181 temp45_180))
(assert (= temp45_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_181)))
(assert (= temp45_183 #x0000000000000005))
(assert (= temp45_184 temp45_183))
(assert (= temp45_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_184)))
(assert (= temp45_186 #x0000000000000000))
(assert (= temp45_187
   (ite (bvslt var1311786 temp45_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp45_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_187)))
(assert (= var1322903 temp45_188))
(assert (bvslt (ite (bvslt var1311786 temp45_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp45_189 #x0000000000000001))
(assert (= var1311786 temp45_189))
(assert (= temp45_191 var1311786))
(assert (= temp45_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_191)))
(assert (= temp45_190 temp45_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp45_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp45_193 #x0000000000000001))
(assert (= var1322908 temp45_193))
(assert (= temp45_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp45_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_195 #x0000000000000001))
(assert (= var1322975 temp45_195))
(assert (= temp45_196 #x0000000000000000))
(assert (= var1310898 temp45_196))
(assert (= temp45_197 #x0000000000000000))
(assert (= temp45_198 temp45_197))
(assert (= temp45_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp45_198)))
(assert (= temp45_200 #x0000000000000001))
(assert (= temp45_201 temp45_200))
(assert (= temp45_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp45_201)))
(assert (= temp45_203 #x0000000000000002))
(assert (= temp45_204 temp45_203))
(assert (= temp45_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp45_204)))
(assert (= temp45_206 #x0000000000000003))
(assert (= temp45_207 temp45_206))
(assert (= temp45_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp45_207)))
(assert (= temp45_209 #x0000000000000004))
(assert (= temp45_210 temp45_209))
(assert (= temp45_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp45_210)))
(assert (= temp45_212 #x0000000000000005))
(assert (= temp45_213 temp45_212))
(assert (= temp45_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp45_213)))
(assert (= temp45_215 #x0000000000000000))
(assert (= temp45_216
   (ite (bvslt var1310898 temp45_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp45_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp45_216)))
(assert (= var1322977 temp45_217))
(assert (bvslt (ite (bvslt var1310898 temp45_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp45_218 #x0000000000000000))
(assert (= var1310898 temp45_218))
(assert (= temp45_220 var1310898))
(assert (= temp45_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_220)))
(assert (= temp45_219 temp45_221))
(assert (= var1322980
   (ite (= var1322977 temp45_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp45_222 #x0000000000000001))
(assert (= var1322980 temp45_222))
(assert (= temp45_223 #x0000000000000002))
(assert (= var1848169 temp45_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp45_225 #x0000000000000001))
(assert (= var1323065 temp45_225))
(assert (= temp45_226 #x0000000000000001))
(assert (= var3486735 temp45_226))
(assert (= temp45_227 #x0000000000000001))
(assert (= var3814415 temp45_227))
(assert (= temp45_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp45_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_229 #x0000000000000001))
(assert (= var79986 temp45_229))
(assert (= temp45_230 #x0000000000000001))
(assert (= var80116 temp45_230))
(assert (= var4796905 var80116))
(assert (= temp45_231 #x0000000000000000))
(assert (= var4784306 temp45_231))
(assert (= temp45_232 #x0000000000000000))
(assert (= temp45_233
   (ite (bvslt var4784306 temp45_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp45_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_233)))
(assert (= var4796924 temp45_234))
(assert (bvslt (ite (bvslt var4784306 temp45_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp45_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp45_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp45_236 #x0000000000000001))
(assert (= var4796925 temp45_236))
(assert (= temp45_237 #x0000000000000000))
(assert (= var4996927 temp45_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp45_238 #x0000000000000002))
(assert (= var5125763 temp45_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_239 #x0000000000000000))
(assert (= var5191324 temp45_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp45_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp45_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp45_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp45_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6635340 var80315))
(assert (= var6635341 var80317))
(assert (= var6635342 var80319))
(assert (= temp45_243 #x0000000000000001))
(assert (= var79986 temp45_243))
(assert (= temp45_244 #x0000000000000000))
(assert (= var7156500 temp45_244))
(assert (= var7156467 var7156500))
(assert (= var7025031 var7156467))
(assert (= var7025027 var7025031))
(assert (= var81597 var7025027))
(assert (= temp45_245 #x0000000000000000))
(assert (= var81597 temp45_245))
(model-add temp45_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp45_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp45_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






