(declare-fun temp161_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp161_2 () (_ BitVec 64))
(declare-fun temp161_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp161_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp161_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp161_6 () (_ BitVec 64))
(declare-fun temp161_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp161_8 () (_ BitVec 64))
(declare-fun temp161_9 () (_ BitVec 64))
(declare-fun temp161_10 () (_ BitVec 64))
(declare-fun temp161_11 () (_ BitVec 64))
(declare-fun temp161_12 () (_ BitVec 64))
(declare-fun temp161_13 () (_ BitVec 64))
(declare-fun temp161_14 () (_ BitVec 64))
(declare-fun temp161_15 () (_ BitVec 64))
(declare-fun temp161_16 () (_ BitVec 64))
(declare-fun temp161_17 () (_ BitVec 64))
(declare-fun temp161_18 () (_ BitVec 64))
(declare-fun temp161_19 () (_ BitVec 64))
(declare-fun temp161_20 () (_ BitVec 64))
(declare-fun temp161_21 () (_ BitVec 64))
(declare-fun temp161_22 () (_ BitVec 64))
(declare-fun temp161_23 () (_ BitVec 64))
(declare-fun temp161_24 () (_ BitVec 64))
(declare-fun temp161_25 () (_ BitVec 64))
(declare-fun temp161_26 () (_ BitVec 64))
(declare-fun temp161_27 () (_ BitVec 64))
(declare-fun temp161_28 () (_ BitVec 64))
(declare-fun temp161_29 () (_ BitVec 64))
(declare-fun temp161_30 () (_ BitVec 64))
(declare-fun temp161_31 () (_ BitVec 64))
(declare-fun temp161_32 () (_ BitVec 64))
(declare-fun temp161_33 () (_ BitVec 64))
(declare-fun temp161_34 () (_ BitVec 64))
(declare-fun temp161_35 () (_ BitVec 64))
(declare-fun temp161_36 () (_ BitVec 64))
(declare-fun temp161_37 () (_ BitVec 64))
(declare-fun temp161_38 () (_ BitVec 64))
(declare-fun temp161_39 () (_ BitVec 64))
(declare-fun temp161_40 () (_ BitVec 64))
(declare-fun temp161_41 () (_ BitVec 64))
(declare-fun temp161_42 () (_ BitVec 64))
(declare-fun temp161_43 () (_ BitVec 64))
(declare-fun temp161_44 () (_ BitVec 64))
(declare-fun temp161_45 () (_ BitVec 64))
(declare-fun temp161_46 () (_ BitVec 64))
(declare-fun temp161_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp161_48 () (_ BitVec 64))
(declare-fun temp161_49 () (_ BitVec 64))
(declare-fun temp161_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp161_51 () (_ BitVec 64))
(declare-fun temp161_52 () (_ BitVec 64))
(declare-fun temp161_53 () (_ BitVec 64))
(declare-fun temp161_54 () (_ BitVec 64))
(declare-fun temp161_55 () (_ BitVec 64))
(declare-fun temp161_56 () (_ BitVec 64))
(declare-fun temp161_57 () (_ BitVec 64))
(declare-fun temp161_58 () (_ BitVec 64))
(declare-fun temp161_59 () (_ BitVec 64))
(declare-fun temp161_60 () (_ BitVec 64))
(declare-fun temp161_61 () (_ BitVec 64))
(declare-fun temp161_62 () (_ BitVec 64))
(declare-fun temp161_63 () (_ BitVec 64))
(declare-fun temp161_64 () (_ BitVec 64))
(declare-fun temp161_65 () (_ BitVec 64))
(declare-fun temp161_66 () (_ BitVec 64))
(declare-fun temp161_67 () (_ BitVec 64))
(declare-fun temp161_68 () (_ BitVec 64))
(declare-fun temp161_69 () (_ BitVec 64))
(declare-fun temp161_70 () (_ BitVec 64))
(declare-fun temp161_71 () (_ BitVec 64))
(declare-fun temp161_72 () (_ BitVec 64))
(declare-fun temp161_73 () (_ BitVec 64))
(declare-fun temp161_74 () (_ BitVec 64))
(declare-fun temp161_75 () (_ BitVec 64))
(declare-fun temp161_76 () (_ BitVec 64))
(declare-fun temp161_77 () (_ BitVec 64))
(declare-fun temp161_78 () (_ BitVec 64))
(declare-fun temp161_79 () (_ BitVec 64))
(declare-fun temp161_80 () (_ BitVec 64))
(declare-fun temp161_81 () (_ BitVec 64))
(declare-fun temp161_82 () (_ BitVec 64))
(declare-fun temp161_83 () (_ BitVec 64))
(declare-fun temp161_84 () (_ BitVec 64))
(declare-fun temp161_85 () (_ BitVec 64))
(declare-fun temp161_86 () (_ BitVec 64))
(declare-fun temp161_87 () (_ BitVec 64))
(declare-fun temp161_88 () (_ BitVec 64))
(declare-fun temp161_89 () (_ BitVec 64))
(declare-fun temp161_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp161_91 () (_ BitVec 64))
(declare-fun temp161_92 () (_ BitVec 64))
(declare-fun temp161_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp161_94 () (_ BitVec 64))
(declare-fun temp161_95 () (_ BitVec 64))
(declare-fun temp161_96 () (_ BitVec 64))
(declare-fun temp161_97 () (_ BitVec 64))
(declare-fun temp161_98 () (_ BitVec 64))
(declare-fun temp161_99 () (_ BitVec 64))
(declare-fun temp161_100 () (_ BitVec 64))
(declare-fun temp161_101 () (_ BitVec 64))
(declare-fun temp161_102 () (_ BitVec 64))
(declare-fun temp161_103 () (_ BitVec 64))
(declare-fun temp161_104 () (_ BitVec 64))
(declare-fun temp161_105 () (_ BitVec 64))
(declare-fun temp161_106 () (_ BitVec 64))
(declare-fun temp161_107 () (_ BitVec 64))
(declare-fun temp161_108 () (_ BitVec 64))
(declare-fun temp161_109 () (_ BitVec 64))
(declare-fun temp161_110 () (_ BitVec 64))
(declare-fun temp161_111 () (_ BitVec 64))
(declare-fun temp161_112 () (_ BitVec 64))
(declare-fun temp161_113 () (_ BitVec 64))
(declare-fun temp161_114 () (_ BitVec 64))
(declare-fun temp161_115 () (_ BitVec 64))
(declare-fun temp161_116 () (_ BitVec 64))
(declare-fun temp161_117 () (_ BitVec 64))
(declare-fun temp161_118 () (_ BitVec 64))
(declare-fun temp161_119 () (_ BitVec 64))
(declare-fun temp161_120 () (_ BitVec 64))
(declare-fun temp161_121 () (_ BitVec 64))
(declare-fun temp161_122 () (_ BitVec 64))
(declare-fun temp161_123 () (_ BitVec 64))
(declare-fun temp161_124 () (_ BitVec 64))
(declare-fun temp161_125 () (_ BitVec 64))
(declare-fun temp161_126 () (_ BitVec 64))
(declare-fun temp161_127 () (_ BitVec 64))
(declare-fun temp161_128 () (_ BitVec 64))
(declare-fun temp161_129 () (_ BitVec 64))
(declare-fun temp161_130 () (_ BitVec 64))
(declare-fun temp161_131 () (_ BitVec 64))
(declare-fun temp161_132 () (_ BitVec 64))
(declare-fun temp161_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp161_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp161_135 () (_ BitVec 64))
(declare-fun temp161_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp161_137 () (_ BitVec 64))
(declare-fun temp161_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp161_139 () (_ BitVec 64))
(declare-fun temp161_140 () (_ BitVec 64))
(declare-fun temp161_141 () (_ BitVec 64))
(declare-fun temp161_142 () (_ BitVec 64))
(declare-fun temp161_143 () (_ BitVec 64))
(declare-fun temp161_144 () (_ BitVec 64))
(declare-fun temp161_145 () (_ BitVec 64))
(declare-fun temp161_146 () (_ BitVec 64))
(declare-fun temp161_147 () (_ BitVec 64))
(declare-fun temp161_148 () (_ BitVec 64))
(declare-fun temp161_149 () (_ BitVec 64))
(declare-fun temp161_150 () (_ BitVec 64))
(declare-fun temp161_151 () (_ BitVec 64))
(declare-fun temp161_152 () (_ BitVec 64))
(declare-fun temp161_153 () (_ BitVec 64))
(declare-fun temp161_154 () (_ BitVec 64))
(declare-fun temp161_156 () (_ BitVec 64))
(declare-fun temp161_157 () (_ BitVec 64))
(declare-fun temp161_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp161_158 () (_ BitVec 64))
(declare-fun temp161_159 () (_ BitVec 64))
(declare-fun temp161_161 () (_ BitVec 64))
(declare-fun temp161_162 () (_ BitVec 64))
(declare-fun temp161_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp161_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp161_164 () (_ BitVec 64))
(declare-fun temp161_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp161_166 () (_ BitVec 64))
(declare-fun temp161_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp161_168 () (_ BitVec 64))
(declare-fun temp161_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp161_170 () (_ BitVec 64))
(declare-fun temp161_171 () (_ BitVec 64))
(declare-fun temp161_172 () (_ BitVec 64))
(declare-fun temp161_173 () (_ BitVec 64))
(declare-fun temp161_174 () (_ BitVec 64))
(declare-fun temp161_175 () (_ BitVec 64))
(declare-fun temp161_176 () (_ BitVec 64))
(declare-fun temp161_177 () (_ BitVec 64))
(declare-fun temp161_178 () (_ BitVec 64))
(declare-fun temp161_179 () (_ BitVec 64))
(declare-fun temp161_180 () (_ BitVec 64))
(declare-fun temp161_181 () (_ BitVec 64))
(declare-fun temp161_182 () (_ BitVec 64))
(declare-fun temp161_183 () (_ BitVec 64))
(declare-fun temp161_184 () (_ BitVec 64))
(declare-fun temp161_185 () (_ BitVec 64))
(declare-fun temp161_186 () (_ BitVec 64))
(declare-fun temp161_187 () (_ BitVec 64))
(declare-fun temp161_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp161_189 () (_ BitVec 64))
(declare-fun temp161_191 () (_ BitVec 64))
(declare-fun temp161_192 () (_ BitVec 64))
(declare-fun temp161_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp161_193 () (_ BitVec 64))
(declare-fun temp161_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp161_195 () (_ BitVec 64))
(declare-fun temp161_196 () (_ BitVec 64))
(declare-fun temp161_197 () (_ BitVec 64))
(declare-fun temp161_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp161_199 () (_ BitVec 64))
(declare-fun temp161_200 () (_ BitVec 64))
(declare-fun temp161_201 () (_ BitVec 64))
(declare-fun temp161_202 () (_ BitVec 64))
(declare-fun temp161_203 () (_ BitVec 64))
(declare-fun temp161_204 () (_ BitVec 64))
(declare-fun temp161_205 () (_ BitVec 64))
(declare-fun temp161_206 () (_ BitVec 64))
(declare-fun temp161_207 () (_ BitVec 64))
(declare-fun temp161_208 () (_ BitVec 64))
(declare-fun temp161_209 () (_ BitVec 64))
(declare-fun temp161_210 () (_ BitVec 64))
(declare-fun temp161_211 () (_ BitVec 64))
(declare-fun temp161_212 () (_ BitVec 64))
(declare-fun temp161_213 () (_ BitVec 64))
(declare-fun temp161_214 () (_ BitVec 64))
(declare-fun temp161_215 () (_ BitVec 64))
(declare-fun temp161_216 () (_ BitVec 64))
(declare-fun temp161_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp161_218 () (_ BitVec 64))
(declare-fun temp161_220 () (_ BitVec 64))
(declare-fun temp161_221 () (_ BitVec 64))
(declare-fun temp161_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp161_222 () (_ BitVec 64))
(declare-fun temp161_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp161_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp161_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp161_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp161_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp161_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp161_229 () (_ BitVec 64))
(declare-fun temp161_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp161_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp161_232 () (_ BitVec 64))
(declare-fun temp161_233 () (_ BitVec 64))
(declare-fun temp161_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp161_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp161_236 () (_ BitVec 64))
(declare-fun temp161_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp161_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp161_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp161_241 () (_ BitVec 64))
(declare-fun temp161_240 () (_ BitVec 64))
(declare-fun temp161_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp161_243 () (_ BitVec 64))
(declare-fun temp161_244 () (_ BitVec 64))
(declare-fun temp161_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp161_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp161_247 () (_ BitVec 64))
(declare-fun temp161_248 () (_ BitVec 64))
(assert (= temp161_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp161_1)))
(assert (= temp161_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp161_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_3 #x0000000000000000))
(assert (= var79869 temp161_3))
(assert (= temp161_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp161_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_5 #x0000000000000000))
(assert (= var79914 temp161_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp161_6 #x0000000000000000))
(assert (= temp161_7 temp161_6))
(assert (= temp161_8 (select ARGNAME_padding_NAMEEND_VAL temp161_7)))
(assert (= temp161_9 #x0000000000000001))
(assert (= temp161_10 temp161_9))
(assert (= temp161_11 (select ARGNAME_padding_NAMEEND_VAL temp161_10)))
(assert (= temp161_12 #x0000000000000002))
(assert (= temp161_13 temp161_12))
(assert (= temp161_14 (select ARGNAME_padding_NAMEEND_VAL temp161_13)))
(assert (= temp161_15 #x0000000000000003))
(assert (= temp161_16 temp161_15))
(assert (= temp161_17 (select ARGNAME_padding_NAMEEND_VAL temp161_16)))
(assert (= temp161_18 #x0000000000000004))
(assert (= temp161_19 temp161_18))
(assert (= temp161_20 (select ARGNAME_padding_NAMEEND_VAL temp161_19)))
(assert (= temp161_21 #x0000000000000005))
(assert (= temp161_22 temp161_21))
(assert (= temp161_23 (select ARGNAME_padding_NAMEEND_VAL temp161_22)))
(assert (= temp161_24 #x0000000000000000))
(assert (= temp161_25 #x0000000000000000))
(assert (= temp161_26 temp161_25))
(assert (= temp161_27 (select ARGNAME_padding_NAMEEND_VAL temp161_26)))
(assert (= temp161_28 #x0000000000000000))
(assert (= temp161_29 #x0000000000000001))
(assert (= temp161_30 temp161_29))
(assert (= temp161_31 (select ARGNAME_padding_NAMEEND_VAL temp161_30)))
(assert (= temp161_32 #x0000000000000000))
(assert (= temp161_33 #x0000000000000002))
(assert (= temp161_34 temp161_33))
(assert (= temp161_35 (select ARGNAME_padding_NAMEEND_VAL temp161_34)))
(assert (= temp161_36 #x0000000000000000))
(assert (= temp161_37 #x0000000000000003))
(assert (= temp161_38 temp161_37))
(assert (= temp161_39 (select ARGNAME_padding_NAMEEND_VAL temp161_38)))
(assert (= temp161_40 #x0000000000000000))
(assert (= temp161_41 #x0000000000000004))
(assert (= temp161_42 temp161_41))
(assert (= temp161_43 (select ARGNAME_padding_NAMEEND_VAL temp161_42)))
(assert (= temp161_44 #x0000000000000000))
(assert (= temp161_45 #x0000000000000005))
(assert (= temp161_46 temp161_45))
(assert (= temp161_47 (select ARGNAME_padding_NAMEEND_VAL temp161_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp161_27 temp161_24)
             (bvslt temp161_31 temp161_28)
             (bvslt temp161_35 temp161_32)
             (bvslt temp161_39 temp161_36)
             (bvslt temp161_43 temp161_40)
             (bvslt temp161_47 temp161_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_48 #x0000000000000000))
(assert (= var1322786 temp161_48))
(assert (= temp161_49 #x0000000000000000))
(assert (= temp161_50 temp161_49))
(assert (= temp161_51 (select ARGNAME_output_padding_NAMEEND_VAL temp161_50)))
(assert (= temp161_52 #x0000000000000001))
(assert (= temp161_53 temp161_52))
(assert (= temp161_54 (select ARGNAME_output_padding_NAMEEND_VAL temp161_53)))
(assert (= temp161_55 #x0000000000000002))
(assert (= temp161_56 temp161_55))
(assert (= temp161_57 (select ARGNAME_output_padding_NAMEEND_VAL temp161_56)))
(assert (= temp161_58 #x0000000000000003))
(assert (= temp161_59 temp161_58))
(assert (= temp161_60 (select ARGNAME_output_padding_NAMEEND_VAL temp161_59)))
(assert (= temp161_61 #x0000000000000004))
(assert (= temp161_62 temp161_61))
(assert (= temp161_63 (select ARGNAME_output_padding_NAMEEND_VAL temp161_62)))
(assert (= temp161_64 #x0000000000000005))
(assert (= temp161_65 temp161_64))
(assert (= temp161_66 (select ARGNAME_output_padding_NAMEEND_VAL temp161_65)))
(assert (= temp161_67 #x0000000000000000))
(assert (= temp161_68 #x0000000000000000))
(assert (= temp161_69 temp161_68))
(assert (= temp161_70 (select ARGNAME_output_padding_NAMEEND_VAL temp161_69)))
(assert (= temp161_71 #x0000000000000000))
(assert (= temp161_72 #x0000000000000001))
(assert (= temp161_73 temp161_72))
(assert (= temp161_74 (select ARGNAME_output_padding_NAMEEND_VAL temp161_73)))
(assert (= temp161_75 #x0000000000000000))
(assert (= temp161_76 #x0000000000000002))
(assert (= temp161_77 temp161_76))
(assert (= temp161_78 (select ARGNAME_output_padding_NAMEEND_VAL temp161_77)))
(assert (= temp161_79 #x0000000000000000))
(assert (= temp161_80 #x0000000000000003))
(assert (= temp161_81 temp161_80))
(assert (= temp161_82 (select ARGNAME_output_padding_NAMEEND_VAL temp161_81)))
(assert (= temp161_83 #x0000000000000000))
(assert (= temp161_84 #x0000000000000004))
(assert (= temp161_85 temp161_84))
(assert (= temp161_86 (select ARGNAME_output_padding_NAMEEND_VAL temp161_85)))
(assert (= temp161_87 #x0000000000000000))
(assert (= temp161_88 #x0000000000000005))
(assert (= temp161_89 temp161_88))
(assert (= temp161_90 (select ARGNAME_output_padding_NAMEEND_VAL temp161_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp161_70 temp161_67)
             (bvslt temp161_74 temp161_71)
             (bvslt temp161_78 temp161_75)
             (bvslt temp161_82 temp161_79)
             (bvslt temp161_86 temp161_83)
             (bvslt temp161_90 temp161_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_91 #x0000000000000000))
(assert (= var1322797 temp161_91))
(assert (= temp161_92 #x0000000000000000))
(assert (= temp161_93 temp161_92))
(assert (= temp161_94 (select ARGNAME_stride_NAMEEND_VAL temp161_93)))
(assert (= temp161_95 #x0000000000000001))
(assert (= temp161_96 temp161_95))
(assert (= temp161_97 (select ARGNAME_stride_NAMEEND_VAL temp161_96)))
(assert (= temp161_98 #x0000000000000002))
(assert (= temp161_99 temp161_98))
(assert (= temp161_100 (select ARGNAME_stride_NAMEEND_VAL temp161_99)))
(assert (= temp161_101 #x0000000000000003))
(assert (= temp161_102 temp161_101))
(assert (= temp161_103 (select ARGNAME_stride_NAMEEND_VAL temp161_102)))
(assert (= temp161_104 #x0000000000000004))
(assert (= temp161_105 temp161_104))
(assert (= temp161_106 (select ARGNAME_stride_NAMEEND_VAL temp161_105)))
(assert (= temp161_107 #x0000000000000005))
(assert (= temp161_108 temp161_107))
(assert (= temp161_109 (select ARGNAME_stride_NAMEEND_VAL temp161_108)))
(assert (= temp161_110 #x0000000000000000))
(assert (= temp161_111 #x0000000000000000))
(assert (= temp161_112 temp161_111))
(assert (= temp161_113 (select ARGNAME_stride_NAMEEND_VAL temp161_112)))
(assert (= temp161_114 #x0000000000000000))
(assert (= temp161_115 #x0000000000000001))
(assert (= temp161_116 temp161_115))
(assert (= temp161_117 (select ARGNAME_stride_NAMEEND_VAL temp161_116)))
(assert (= temp161_118 #x0000000000000000))
(assert (= temp161_119 #x0000000000000002))
(assert (= temp161_120 temp161_119))
(assert (= temp161_121 (select ARGNAME_stride_NAMEEND_VAL temp161_120)))
(assert (= temp161_122 #x0000000000000000))
(assert (= temp161_123 #x0000000000000003))
(assert (= temp161_124 temp161_123))
(assert (= temp161_125 (select ARGNAME_stride_NAMEEND_VAL temp161_124)))
(assert (= temp161_126 #x0000000000000000))
(assert (= temp161_127 #x0000000000000004))
(assert (= temp161_128 temp161_127))
(assert (= temp161_129 (select ARGNAME_stride_NAMEEND_VAL temp161_128)))
(assert (= temp161_130 #x0000000000000000))
(assert (= temp161_131 #x0000000000000005))
(assert (= temp161_132 temp161_131))
(assert (= temp161_133 (select ARGNAME_stride_NAMEEND_VAL temp161_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp161_113 temp161_110)
             (bvsle temp161_117 temp161_114)
             (bvsle temp161_121 temp161_118)
             (bvsle temp161_125 temp161_122)
             (bvsle temp161_129 temp161_126)
             (bvsle temp161_133 temp161_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_134 #x0000000000000000))
(assert (= var1322807 temp161_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_135 #x0000000000000001))
(assert (= var1322819 temp161_135))
(assert (= temp161_136 #x0000000000000000))
(assert (= var1310898 temp161_136))
(assert (= temp161_137 #x0000000000000000))
(assert (= temp161_138 temp161_137))
(assert (= temp161_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_138)))
(assert (= temp161_140 #x0000000000000001))
(assert (= temp161_141 temp161_140))
(assert (= temp161_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_141)))
(assert (= temp161_143 #x0000000000000002))
(assert (= temp161_144 temp161_143))
(assert (= temp161_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_144)))
(assert (= temp161_146 #x0000000000000003))
(assert (= temp161_147 temp161_146))
(assert (= temp161_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_147)))
(assert (= temp161_149 #x0000000000000004))
(assert (= temp161_150 temp161_149))
(assert (= temp161_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_150)))
(assert (= temp161_152 #x0000000000000005))
(assert (= temp161_153 temp161_152))
(assert (= temp161_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_153)))
(assert (= temp161_156 var1310898))
(assert (= temp161_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_156)))
(assert (= temp161_155 temp161_157))
(assert (= var1322852
   (ite (bvslt temp161_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_158 #x0000000000000000))
(assert (= var1322852 temp161_158))
(assert (= temp161_159 #x0000000000000000))
(assert (= var1310898 temp161_159))
(assert (= temp161_161 var1310898))
(assert (= temp161_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_161)))
(assert (= temp161_160 temp161_162))
(assert (= var1322874 (bvsmod temp161_160 ARGNAME_groups_NAMEEND)))
(assert (= temp161_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp161_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp161_164 #x0000000000000001))
(assert (= var1322875 temp161_164))
(assert (= temp161_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp161_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_166 #x0000000000000001))
(assert (= var1322895 temp161_166))
(assert (= temp161_167 #x0000000000000001))
(assert (= var1311786 temp161_167))
(assert (= temp161_168 #x0000000000000000))
(assert (= temp161_169 temp161_168))
(assert (= temp161_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp161_169)))
(assert (= temp161_171 #x0000000000000001))
(assert (= temp161_172 temp161_171))
(assert (= temp161_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp161_172)))
(assert (= temp161_174 #x0000000000000002))
(assert (= temp161_175 temp161_174))
(assert (= temp161_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp161_175)))
(assert (= temp161_177 #x0000000000000003))
(assert (= temp161_178 temp161_177))
(assert (= temp161_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp161_178)))
(assert (= temp161_180 #x0000000000000004))
(assert (= temp161_181 temp161_180))
(assert (= temp161_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp161_181)))
(assert (= temp161_183 #x0000000000000005))
(assert (= temp161_184 temp161_183))
(assert (= temp161_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp161_184)))
(assert (= temp161_186 #x0000000000000000))
(assert (= temp161_187
   (ite (bvslt var1311786 temp161_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp161_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp161_187)))
(assert (= var1322903 temp161_188))
(assert (bvslt (ite (bvslt var1311786 temp161_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp161_189 #x0000000000000001))
(assert (= var1311786 temp161_189))
(assert (= temp161_191 var1311786))
(assert (= temp161_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_191)))
(assert (= temp161_190 temp161_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp161_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp161_193 #x0000000000000001))
(assert (= var1322908 temp161_193))
(assert (= temp161_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp161_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_195 #x0000000000000001))
(assert (= var1322975 temp161_195))
(assert (= temp161_196 #x0000000000000000))
(assert (= var1310898 temp161_196))
(assert (= temp161_197 #x0000000000000000))
(assert (= temp161_198 temp161_197))
(assert (= temp161_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp161_198)))
(assert (= temp161_200 #x0000000000000001))
(assert (= temp161_201 temp161_200))
(assert (= temp161_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp161_201)))
(assert (= temp161_203 #x0000000000000002))
(assert (= temp161_204 temp161_203))
(assert (= temp161_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp161_204)))
(assert (= temp161_206 #x0000000000000003))
(assert (= temp161_207 temp161_206))
(assert (= temp161_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp161_207)))
(assert (= temp161_209 #x0000000000000004))
(assert (= temp161_210 temp161_209))
(assert (= temp161_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp161_210)))
(assert (= temp161_212 #x0000000000000005))
(assert (= temp161_213 temp161_212))
(assert (= temp161_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp161_213)))
(assert (= temp161_215 #x0000000000000000))
(assert (= temp161_216
   (ite (bvslt var1310898 temp161_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp161_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp161_216)))
(assert (= var1322977 temp161_217))
(assert (bvslt (ite (bvslt var1310898 temp161_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp161_218 #x0000000000000000))
(assert (= var1310898 temp161_218))
(assert (= temp161_220 var1310898))
(assert (= temp161_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp161_220)))
(assert (= temp161_219 temp161_221))
(assert (= var1322980
   (ite (= var1322977 temp161_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp161_222 #x0000000000000001))
(assert (= var1322980 temp161_222))
(assert (= temp161_223 #x0000000000000002))
(assert (= var1848169 temp161_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp161_225 #x0000000000000001))
(assert (= var1323065 temp161_225))
(assert (= temp161_226 #x0000000000000001))
(assert (= var3486735 temp161_226))
(assert (= temp161_227 #x0000000000000001))
(assert (= var3814415 temp161_227))
(assert (= temp161_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp161_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_229 #x0000000000000001))
(assert (= var79986 temp161_229))
(assert (= temp161_230 #x0000000000000001))
(assert (= var80116 temp161_230))
(assert (= var4796905 var80116))
(assert (= temp161_231 #x0000000000000000))
(assert (= var4784306 temp161_231))
(assert (= temp161_232 #x0000000000000000))
(assert (= temp161_233
   (ite (bvslt var4784306 temp161_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp161_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp161_233)))
(assert (= var4796924 temp161_234))
(assert (bvslt (ite (bvslt var4784306 temp161_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp161_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp161_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp161_236 #x0000000000000001))
(assert (= var4796925 temp161_236))
(assert (= temp161_237 #x0000000000000000))
(assert (= var4996927 temp161_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp161_238 #x0000000000000002))
(assert (= var5125763 temp161_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_239 #x0000000000000000))
(assert (= var5191324 temp161_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp161_241 #xffffffffffffffff))
(assert (= temp161_240 temp161_241))
(assert (= temp161_242 #x0000000000000001))
(assert (= var66602 temp161_242))
(assert (= temp161_243 #x0000000000000000))
(assert (= temp161_244
   (ite (bvslt var66602 temp161_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp161_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp161_244)))
(assert (= var80523 temp161_245))
(assert (bvslt (ite (bvslt var66602 temp161_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp161_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp161_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp161_247 #x0000000000000000))
(assert (= var80524 temp161_247))
(assert (= temp161_248 #x0000000000000001))
(assert (= var79986 temp161_248))
(model-add temp161_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp161_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp161_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






