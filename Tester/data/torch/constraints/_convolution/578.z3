(declare-fun temp768_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp768_2 () (_ BitVec 64))
(declare-fun temp768_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp768_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp768_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp768_6 () (_ BitVec 64))
(declare-fun temp768_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp768_8 () (_ BitVec 64))
(declare-fun temp768_9 () (_ BitVec 64))
(declare-fun temp768_10 () (_ BitVec 64))
(declare-fun temp768_11 () (_ BitVec 64))
(declare-fun temp768_12 () (_ BitVec 64))
(declare-fun temp768_13 () (_ BitVec 64))
(declare-fun temp768_14 () (_ BitVec 64))
(declare-fun temp768_15 () (_ BitVec 64))
(declare-fun temp768_16 () (_ BitVec 64))
(declare-fun temp768_17 () (_ BitVec 64))
(declare-fun temp768_18 () (_ BitVec 64))
(declare-fun temp768_19 () (_ BitVec 64))
(declare-fun temp768_20 () (_ BitVec 64))
(declare-fun temp768_21 () (_ BitVec 64))
(declare-fun temp768_22 () (_ BitVec 64))
(declare-fun temp768_23 () (_ BitVec 64))
(declare-fun temp768_24 () (_ BitVec 64))
(declare-fun temp768_25 () (_ BitVec 64))
(declare-fun temp768_26 () (_ BitVec 64))
(declare-fun temp768_27 () (_ BitVec 64))
(declare-fun temp768_28 () (_ BitVec 64))
(declare-fun temp768_29 () (_ BitVec 64))
(declare-fun temp768_30 () (_ BitVec 64))
(declare-fun temp768_31 () (_ BitVec 64))
(declare-fun temp768_32 () (_ BitVec 64))
(declare-fun temp768_33 () (_ BitVec 64))
(declare-fun temp768_34 () (_ BitVec 64))
(declare-fun temp768_35 () (_ BitVec 64))
(declare-fun temp768_36 () (_ BitVec 64))
(declare-fun temp768_37 () (_ BitVec 64))
(declare-fun temp768_38 () (_ BitVec 64))
(declare-fun temp768_39 () (_ BitVec 64))
(declare-fun temp768_40 () (_ BitVec 64))
(declare-fun temp768_41 () (_ BitVec 64))
(declare-fun temp768_42 () (_ BitVec 64))
(declare-fun temp768_43 () (_ BitVec 64))
(declare-fun temp768_44 () (_ BitVec 64))
(declare-fun temp768_45 () (_ BitVec 64))
(declare-fun temp768_46 () (_ BitVec 64))
(declare-fun temp768_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp768_48 () (_ BitVec 64))
(declare-fun temp768_49 () (_ BitVec 64))
(declare-fun temp768_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp768_51 () (_ BitVec 64))
(declare-fun temp768_52 () (_ BitVec 64))
(declare-fun temp768_53 () (_ BitVec 64))
(declare-fun temp768_54 () (_ BitVec 64))
(declare-fun temp768_55 () (_ BitVec 64))
(declare-fun temp768_56 () (_ BitVec 64))
(declare-fun temp768_57 () (_ BitVec 64))
(declare-fun temp768_58 () (_ BitVec 64))
(declare-fun temp768_59 () (_ BitVec 64))
(declare-fun temp768_60 () (_ BitVec 64))
(declare-fun temp768_61 () (_ BitVec 64))
(declare-fun temp768_62 () (_ BitVec 64))
(declare-fun temp768_63 () (_ BitVec 64))
(declare-fun temp768_64 () (_ BitVec 64))
(declare-fun temp768_65 () (_ BitVec 64))
(declare-fun temp768_66 () (_ BitVec 64))
(declare-fun temp768_67 () (_ BitVec 64))
(declare-fun temp768_68 () (_ BitVec 64))
(declare-fun temp768_69 () (_ BitVec 64))
(declare-fun temp768_70 () (_ BitVec 64))
(declare-fun temp768_71 () (_ BitVec 64))
(declare-fun temp768_72 () (_ BitVec 64))
(declare-fun temp768_73 () (_ BitVec 64))
(declare-fun temp768_74 () (_ BitVec 64))
(declare-fun temp768_75 () (_ BitVec 64))
(declare-fun temp768_76 () (_ BitVec 64))
(declare-fun temp768_77 () (_ BitVec 64))
(declare-fun temp768_78 () (_ BitVec 64))
(declare-fun temp768_79 () (_ BitVec 64))
(declare-fun temp768_80 () (_ BitVec 64))
(declare-fun temp768_81 () (_ BitVec 64))
(declare-fun temp768_82 () (_ BitVec 64))
(declare-fun temp768_83 () (_ BitVec 64))
(declare-fun temp768_84 () (_ BitVec 64))
(declare-fun temp768_85 () (_ BitVec 64))
(declare-fun temp768_86 () (_ BitVec 64))
(declare-fun temp768_87 () (_ BitVec 64))
(declare-fun temp768_88 () (_ BitVec 64))
(declare-fun temp768_89 () (_ BitVec 64))
(declare-fun temp768_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp768_91 () (_ BitVec 64))
(declare-fun temp768_92 () (_ BitVec 64))
(declare-fun temp768_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp768_94 () (_ BitVec 64))
(declare-fun temp768_95 () (_ BitVec 64))
(declare-fun temp768_96 () (_ BitVec 64))
(declare-fun temp768_97 () (_ BitVec 64))
(declare-fun temp768_98 () (_ BitVec 64))
(declare-fun temp768_99 () (_ BitVec 64))
(declare-fun temp768_100 () (_ BitVec 64))
(declare-fun temp768_101 () (_ BitVec 64))
(declare-fun temp768_102 () (_ BitVec 64))
(declare-fun temp768_103 () (_ BitVec 64))
(declare-fun temp768_104 () (_ BitVec 64))
(declare-fun temp768_105 () (_ BitVec 64))
(declare-fun temp768_106 () (_ BitVec 64))
(declare-fun temp768_107 () (_ BitVec 64))
(declare-fun temp768_108 () (_ BitVec 64))
(declare-fun temp768_109 () (_ BitVec 64))
(declare-fun temp768_110 () (_ BitVec 64))
(declare-fun temp768_111 () (_ BitVec 64))
(declare-fun temp768_112 () (_ BitVec 64))
(declare-fun temp768_113 () (_ BitVec 64))
(declare-fun temp768_114 () (_ BitVec 64))
(declare-fun temp768_115 () (_ BitVec 64))
(declare-fun temp768_116 () (_ BitVec 64))
(declare-fun temp768_117 () (_ BitVec 64))
(declare-fun temp768_118 () (_ BitVec 64))
(declare-fun temp768_119 () (_ BitVec 64))
(declare-fun temp768_120 () (_ BitVec 64))
(declare-fun temp768_121 () (_ BitVec 64))
(declare-fun temp768_122 () (_ BitVec 64))
(declare-fun temp768_123 () (_ BitVec 64))
(declare-fun temp768_124 () (_ BitVec 64))
(declare-fun temp768_125 () (_ BitVec 64))
(declare-fun temp768_126 () (_ BitVec 64))
(declare-fun temp768_127 () (_ BitVec 64))
(declare-fun temp768_128 () (_ BitVec 64))
(declare-fun temp768_129 () (_ BitVec 64))
(declare-fun temp768_130 () (_ BitVec 64))
(declare-fun temp768_131 () (_ BitVec 64))
(declare-fun temp768_132 () (_ BitVec 64))
(declare-fun temp768_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp768_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp768_135 () (_ BitVec 64))
(declare-fun temp768_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp768_137 () (_ BitVec 64))
(declare-fun temp768_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp768_139 () (_ BitVec 64))
(declare-fun temp768_140 () (_ BitVec 64))
(declare-fun temp768_141 () (_ BitVec 64))
(declare-fun temp768_142 () (_ BitVec 64))
(declare-fun temp768_143 () (_ BitVec 64))
(declare-fun temp768_144 () (_ BitVec 64))
(declare-fun temp768_145 () (_ BitVec 64))
(declare-fun temp768_146 () (_ BitVec 64))
(declare-fun temp768_147 () (_ BitVec 64))
(declare-fun temp768_148 () (_ BitVec 64))
(declare-fun temp768_149 () (_ BitVec 64))
(declare-fun temp768_150 () (_ BitVec 64))
(declare-fun temp768_151 () (_ BitVec 64))
(declare-fun temp768_152 () (_ BitVec 64))
(declare-fun temp768_153 () (_ BitVec 64))
(declare-fun temp768_154 () (_ BitVec 64))
(declare-fun temp768_156 () (_ BitVec 64))
(declare-fun temp768_157 () (_ BitVec 64))
(declare-fun temp768_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp768_158 () (_ BitVec 64))
(declare-fun temp768_159 () (_ BitVec 64))
(declare-fun temp768_161 () (_ BitVec 64))
(declare-fun temp768_162 () (_ BitVec 64))
(declare-fun temp768_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp768_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp768_164 () (_ BitVec 64))
(declare-fun temp768_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp768_166 () (_ BitVec 64))
(declare-fun temp768_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp768_168 () (_ BitVec 64))
(declare-fun temp768_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp768_170 () (_ BitVec 64))
(declare-fun temp768_171 () (_ BitVec 64))
(declare-fun temp768_172 () (_ BitVec 64))
(declare-fun temp768_173 () (_ BitVec 64))
(declare-fun temp768_174 () (_ BitVec 64))
(declare-fun temp768_175 () (_ BitVec 64))
(declare-fun temp768_176 () (_ BitVec 64))
(declare-fun temp768_177 () (_ BitVec 64))
(declare-fun temp768_178 () (_ BitVec 64))
(declare-fun temp768_179 () (_ BitVec 64))
(declare-fun temp768_180 () (_ BitVec 64))
(declare-fun temp768_181 () (_ BitVec 64))
(declare-fun temp768_182 () (_ BitVec 64))
(declare-fun temp768_183 () (_ BitVec 64))
(declare-fun temp768_184 () (_ BitVec 64))
(declare-fun temp768_185 () (_ BitVec 64))
(declare-fun temp768_186 () (_ BitVec 64))
(declare-fun temp768_187 () (_ BitVec 64))
(declare-fun temp768_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp768_189 () (_ BitVec 64))
(declare-fun temp768_191 () (_ BitVec 64))
(declare-fun temp768_192 () (_ BitVec 64))
(declare-fun temp768_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp768_193 () (_ BitVec 64))
(declare-fun temp768_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp768_195 () (_ BitVec 64))
(declare-fun temp768_196 () (_ BitVec 64))
(declare-fun temp768_197 () (_ BitVec 64))
(declare-fun temp768_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp768_199 () (_ BitVec 64))
(declare-fun temp768_200 () (_ BitVec 64))
(declare-fun temp768_201 () (_ BitVec 64))
(declare-fun temp768_202 () (_ BitVec 64))
(declare-fun temp768_203 () (_ BitVec 64))
(declare-fun temp768_204 () (_ BitVec 64))
(declare-fun temp768_205 () (_ BitVec 64))
(declare-fun temp768_206 () (_ BitVec 64))
(declare-fun temp768_207 () (_ BitVec 64))
(declare-fun temp768_208 () (_ BitVec 64))
(declare-fun temp768_209 () (_ BitVec 64))
(declare-fun temp768_210 () (_ BitVec 64))
(declare-fun temp768_211 () (_ BitVec 64))
(declare-fun temp768_212 () (_ BitVec 64))
(declare-fun temp768_213 () (_ BitVec 64))
(declare-fun temp768_214 () (_ BitVec 64))
(declare-fun temp768_215 () (_ BitVec 64))
(declare-fun temp768_216 () (_ BitVec 64))
(declare-fun temp768_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp768_218 () (_ BitVec 64))
(declare-fun temp768_220 () (_ BitVec 64))
(declare-fun temp768_221 () (_ BitVec 64))
(declare-fun temp768_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp768_222 () (_ BitVec 64))
(declare-fun temp768_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp768_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp768_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp768_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp768_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp768_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp768_229 () (_ BitVec 64))
(declare-fun temp768_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp768_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp768_232 () (_ BitVec 64))
(declare-fun temp768_233 () (_ BitVec 64))
(declare-fun temp768_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp768_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp768_236 () (_ BitVec 64))
(declare-fun temp768_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp768_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp768_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp768_241 () (_ BitVec 64))
(declare-fun temp768_240 () (_ BitVec 64))
(declare-fun temp768_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp768_243 () (_ BitVec 64))
(declare-fun temp768_244 () (_ BitVec 64))
(declare-fun temp768_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp768_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp768_247 () (_ BitVec 64))
(declare-fun temp768_248 () (_ BitVec 64))
(assert (= temp768_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp768_1)))
(assert (= temp768_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp768_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_3 #x0000000000000000))
(assert (= var79869 temp768_3))
(assert (= temp768_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp768_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_5 #x0000000000000000))
(assert (= var79914 temp768_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp768_6 #x0000000000000000))
(assert (= temp768_7 temp768_6))
(assert (= temp768_8 (select ARGNAME_padding_NAMEEND_VAL temp768_7)))
(assert (= temp768_9 #x0000000000000001))
(assert (= temp768_10 temp768_9))
(assert (= temp768_11 (select ARGNAME_padding_NAMEEND_VAL temp768_10)))
(assert (= temp768_12 #x0000000000000002))
(assert (= temp768_13 temp768_12))
(assert (= temp768_14 (select ARGNAME_padding_NAMEEND_VAL temp768_13)))
(assert (= temp768_15 #x0000000000000003))
(assert (= temp768_16 temp768_15))
(assert (= temp768_17 (select ARGNAME_padding_NAMEEND_VAL temp768_16)))
(assert (= temp768_18 #x0000000000000004))
(assert (= temp768_19 temp768_18))
(assert (= temp768_20 (select ARGNAME_padding_NAMEEND_VAL temp768_19)))
(assert (= temp768_21 #x0000000000000005))
(assert (= temp768_22 temp768_21))
(assert (= temp768_23 (select ARGNAME_padding_NAMEEND_VAL temp768_22)))
(assert (= temp768_24 #x0000000000000000))
(assert (= temp768_25 #x0000000000000000))
(assert (= temp768_26 temp768_25))
(assert (= temp768_27 (select ARGNAME_padding_NAMEEND_VAL temp768_26)))
(assert (= temp768_28 #x0000000000000000))
(assert (= temp768_29 #x0000000000000001))
(assert (= temp768_30 temp768_29))
(assert (= temp768_31 (select ARGNAME_padding_NAMEEND_VAL temp768_30)))
(assert (= temp768_32 #x0000000000000000))
(assert (= temp768_33 #x0000000000000002))
(assert (= temp768_34 temp768_33))
(assert (= temp768_35 (select ARGNAME_padding_NAMEEND_VAL temp768_34)))
(assert (= temp768_36 #x0000000000000000))
(assert (= temp768_37 #x0000000000000003))
(assert (= temp768_38 temp768_37))
(assert (= temp768_39 (select ARGNAME_padding_NAMEEND_VAL temp768_38)))
(assert (= temp768_40 #x0000000000000000))
(assert (= temp768_41 #x0000000000000004))
(assert (= temp768_42 temp768_41))
(assert (= temp768_43 (select ARGNAME_padding_NAMEEND_VAL temp768_42)))
(assert (= temp768_44 #x0000000000000000))
(assert (= temp768_45 #x0000000000000005))
(assert (= temp768_46 temp768_45))
(assert (= temp768_47 (select ARGNAME_padding_NAMEEND_VAL temp768_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp768_27 temp768_24)
             (bvslt temp768_31 temp768_28)
             (bvslt temp768_35 temp768_32)
             (bvslt temp768_39 temp768_36)
             (bvslt temp768_43 temp768_40)
             (bvslt temp768_47 temp768_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_48 #x0000000000000000))
(assert (= var1322786 temp768_48))
(assert (= temp768_49 #x0000000000000000))
(assert (= temp768_50 temp768_49))
(assert (= temp768_51 (select ARGNAME_output_padding_NAMEEND_VAL temp768_50)))
(assert (= temp768_52 #x0000000000000001))
(assert (= temp768_53 temp768_52))
(assert (= temp768_54 (select ARGNAME_output_padding_NAMEEND_VAL temp768_53)))
(assert (= temp768_55 #x0000000000000002))
(assert (= temp768_56 temp768_55))
(assert (= temp768_57 (select ARGNAME_output_padding_NAMEEND_VAL temp768_56)))
(assert (= temp768_58 #x0000000000000003))
(assert (= temp768_59 temp768_58))
(assert (= temp768_60 (select ARGNAME_output_padding_NAMEEND_VAL temp768_59)))
(assert (= temp768_61 #x0000000000000004))
(assert (= temp768_62 temp768_61))
(assert (= temp768_63 (select ARGNAME_output_padding_NAMEEND_VAL temp768_62)))
(assert (= temp768_64 #x0000000000000005))
(assert (= temp768_65 temp768_64))
(assert (= temp768_66 (select ARGNAME_output_padding_NAMEEND_VAL temp768_65)))
(assert (= temp768_67 #x0000000000000000))
(assert (= temp768_68 #x0000000000000000))
(assert (= temp768_69 temp768_68))
(assert (= temp768_70 (select ARGNAME_output_padding_NAMEEND_VAL temp768_69)))
(assert (= temp768_71 #x0000000000000000))
(assert (= temp768_72 #x0000000000000001))
(assert (= temp768_73 temp768_72))
(assert (= temp768_74 (select ARGNAME_output_padding_NAMEEND_VAL temp768_73)))
(assert (= temp768_75 #x0000000000000000))
(assert (= temp768_76 #x0000000000000002))
(assert (= temp768_77 temp768_76))
(assert (= temp768_78 (select ARGNAME_output_padding_NAMEEND_VAL temp768_77)))
(assert (= temp768_79 #x0000000000000000))
(assert (= temp768_80 #x0000000000000003))
(assert (= temp768_81 temp768_80))
(assert (= temp768_82 (select ARGNAME_output_padding_NAMEEND_VAL temp768_81)))
(assert (= temp768_83 #x0000000000000000))
(assert (= temp768_84 #x0000000000000004))
(assert (= temp768_85 temp768_84))
(assert (= temp768_86 (select ARGNAME_output_padding_NAMEEND_VAL temp768_85)))
(assert (= temp768_87 #x0000000000000000))
(assert (= temp768_88 #x0000000000000005))
(assert (= temp768_89 temp768_88))
(assert (= temp768_90 (select ARGNAME_output_padding_NAMEEND_VAL temp768_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp768_70 temp768_67)
             (bvslt temp768_74 temp768_71)
             (bvslt temp768_78 temp768_75)
             (bvslt temp768_82 temp768_79)
             (bvslt temp768_86 temp768_83)
             (bvslt temp768_90 temp768_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_91 #x0000000000000000))
(assert (= var1322797 temp768_91))
(assert (= temp768_92 #x0000000000000000))
(assert (= temp768_93 temp768_92))
(assert (= temp768_94 (select ARGNAME_stride_NAMEEND_VAL temp768_93)))
(assert (= temp768_95 #x0000000000000001))
(assert (= temp768_96 temp768_95))
(assert (= temp768_97 (select ARGNAME_stride_NAMEEND_VAL temp768_96)))
(assert (= temp768_98 #x0000000000000002))
(assert (= temp768_99 temp768_98))
(assert (= temp768_100 (select ARGNAME_stride_NAMEEND_VAL temp768_99)))
(assert (= temp768_101 #x0000000000000003))
(assert (= temp768_102 temp768_101))
(assert (= temp768_103 (select ARGNAME_stride_NAMEEND_VAL temp768_102)))
(assert (= temp768_104 #x0000000000000004))
(assert (= temp768_105 temp768_104))
(assert (= temp768_106 (select ARGNAME_stride_NAMEEND_VAL temp768_105)))
(assert (= temp768_107 #x0000000000000005))
(assert (= temp768_108 temp768_107))
(assert (= temp768_109 (select ARGNAME_stride_NAMEEND_VAL temp768_108)))
(assert (= temp768_110 #x0000000000000000))
(assert (= temp768_111 #x0000000000000000))
(assert (= temp768_112 temp768_111))
(assert (= temp768_113 (select ARGNAME_stride_NAMEEND_VAL temp768_112)))
(assert (= temp768_114 #x0000000000000000))
(assert (= temp768_115 #x0000000000000001))
(assert (= temp768_116 temp768_115))
(assert (= temp768_117 (select ARGNAME_stride_NAMEEND_VAL temp768_116)))
(assert (= temp768_118 #x0000000000000000))
(assert (= temp768_119 #x0000000000000002))
(assert (= temp768_120 temp768_119))
(assert (= temp768_121 (select ARGNAME_stride_NAMEEND_VAL temp768_120)))
(assert (= temp768_122 #x0000000000000000))
(assert (= temp768_123 #x0000000000000003))
(assert (= temp768_124 temp768_123))
(assert (= temp768_125 (select ARGNAME_stride_NAMEEND_VAL temp768_124)))
(assert (= temp768_126 #x0000000000000000))
(assert (= temp768_127 #x0000000000000004))
(assert (= temp768_128 temp768_127))
(assert (= temp768_129 (select ARGNAME_stride_NAMEEND_VAL temp768_128)))
(assert (= temp768_130 #x0000000000000000))
(assert (= temp768_131 #x0000000000000005))
(assert (= temp768_132 temp768_131))
(assert (= temp768_133 (select ARGNAME_stride_NAMEEND_VAL temp768_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp768_113 temp768_110)
             (bvsle temp768_117 temp768_114)
             (bvsle temp768_121 temp768_118)
             (bvsle temp768_125 temp768_122)
             (bvsle temp768_129 temp768_126)
             (bvsle temp768_133 temp768_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_134 #x0000000000000000))
(assert (= var1322807 temp768_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_135 #x0000000000000001))
(assert (= var1322819 temp768_135))
(assert (= temp768_136 #x0000000000000000))
(assert (= var1310898 temp768_136))
(assert (= temp768_137 #x0000000000000000))
(assert (= temp768_138 temp768_137))
(assert (= temp768_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_138)))
(assert (= temp768_140 #x0000000000000001))
(assert (= temp768_141 temp768_140))
(assert (= temp768_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_141)))
(assert (= temp768_143 #x0000000000000002))
(assert (= temp768_144 temp768_143))
(assert (= temp768_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_144)))
(assert (= temp768_146 #x0000000000000003))
(assert (= temp768_147 temp768_146))
(assert (= temp768_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_147)))
(assert (= temp768_149 #x0000000000000004))
(assert (= temp768_150 temp768_149))
(assert (= temp768_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_150)))
(assert (= temp768_152 #x0000000000000005))
(assert (= temp768_153 temp768_152))
(assert (= temp768_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_153)))
(assert (= temp768_156 var1310898))
(assert (= temp768_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_156)))
(assert (= temp768_155 temp768_157))
(assert (= var1322852
   (ite (bvslt temp768_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_158 #x0000000000000000))
(assert (= var1322852 temp768_158))
(assert (= temp768_159 #x0000000000000000))
(assert (= var1310898 temp768_159))
(assert (= temp768_161 var1310898))
(assert (= temp768_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_161)))
(assert (= temp768_160 temp768_162))
(assert (= var1322874 (bvsmod temp768_160 ARGNAME_groups_NAMEEND)))
(assert (= temp768_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp768_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp768_164 #x0000000000000001))
(assert (= var1322875 temp768_164))
(assert (= temp768_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp768_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_166 #x0000000000000001))
(assert (= var1322895 temp768_166))
(assert (= temp768_167 #x0000000000000001))
(assert (= var1311786 temp768_167))
(assert (= temp768_168 #x0000000000000000))
(assert (= temp768_169 temp768_168))
(assert (= temp768_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp768_169)))
(assert (= temp768_171 #x0000000000000001))
(assert (= temp768_172 temp768_171))
(assert (= temp768_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp768_172)))
(assert (= temp768_174 #x0000000000000002))
(assert (= temp768_175 temp768_174))
(assert (= temp768_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp768_175)))
(assert (= temp768_177 #x0000000000000003))
(assert (= temp768_178 temp768_177))
(assert (= temp768_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp768_178)))
(assert (= temp768_180 #x0000000000000004))
(assert (= temp768_181 temp768_180))
(assert (= temp768_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp768_181)))
(assert (= temp768_183 #x0000000000000005))
(assert (= temp768_184 temp768_183))
(assert (= temp768_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp768_184)))
(assert (= temp768_186 #x0000000000000000))
(assert (= temp768_187
   (ite (bvslt var1311786 temp768_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp768_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp768_187)))
(assert (= var1322903 temp768_188))
(assert (bvslt (ite (bvslt var1311786 temp768_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp768_189 #x0000000000000001))
(assert (= var1311786 temp768_189))
(assert (= temp768_191 var1311786))
(assert (= temp768_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_191)))
(assert (= temp768_190 temp768_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp768_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp768_193 #x0000000000000001))
(assert (= var1322908 temp768_193))
(assert (= temp768_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp768_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_195 #x0000000000000001))
(assert (= var1322975 temp768_195))
(assert (= temp768_196 #x0000000000000000))
(assert (= var1310898 temp768_196))
(assert (= temp768_197 #x0000000000000000))
(assert (= temp768_198 temp768_197))
(assert (= temp768_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp768_198)))
(assert (= temp768_200 #x0000000000000001))
(assert (= temp768_201 temp768_200))
(assert (= temp768_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp768_201)))
(assert (= temp768_203 #x0000000000000002))
(assert (= temp768_204 temp768_203))
(assert (= temp768_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp768_204)))
(assert (= temp768_206 #x0000000000000003))
(assert (= temp768_207 temp768_206))
(assert (= temp768_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp768_207)))
(assert (= temp768_209 #x0000000000000004))
(assert (= temp768_210 temp768_209))
(assert (= temp768_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp768_210)))
(assert (= temp768_212 #x0000000000000005))
(assert (= temp768_213 temp768_212))
(assert (= temp768_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp768_213)))
(assert (= temp768_215 #x0000000000000000))
(assert (= temp768_216
   (ite (bvslt var1310898 temp768_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp768_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp768_216)))
(assert (= var1322977 temp768_217))
(assert (bvslt (ite (bvslt var1310898 temp768_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp768_218 #x0000000000000000))
(assert (= var1310898 temp768_218))
(assert (= temp768_220 var1310898))
(assert (= temp768_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp768_220)))
(assert (= temp768_219 temp768_221))
(assert (= var1322980
   (ite (= var1322977 temp768_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp768_222 #x0000000000000001))
(assert (= var1322980 temp768_222))
(assert (= temp768_223 #x0000000000000002))
(assert (= var1848169 temp768_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp768_225 #x0000000000000001))
(assert (= var1323065 temp768_225))
(assert (= temp768_226 #x0000000000000001))
(assert (= var3486735 temp768_226))
(assert (= temp768_227 #x0000000000000001))
(assert (= var3814415 temp768_227))
(assert (= temp768_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp768_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_229 #x0000000000000001))
(assert (= var79986 temp768_229))
(assert (= temp768_230 #x0000000000000001))
(assert (= var80116 temp768_230))
(assert (= var4796905 var80116))
(assert (= temp768_231 #x0000000000000000))
(assert (= var4784306 temp768_231))
(assert (= temp768_232 #x0000000000000000))
(assert (= temp768_233
   (ite (bvslt var4784306 temp768_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp768_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp768_233)))
(assert (= var4796924 temp768_234))
(assert (bvslt (ite (bvslt var4784306 temp768_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp768_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp768_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp768_236 #x0000000000000001))
(assert (= var4796925 temp768_236))
(assert (= temp768_237 #x0000000000000000))
(assert (= var4996927 temp768_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp768_238 #x0000000000000002))
(assert (= var5125763 temp768_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp768_239 #x0000000000000000))
(assert (= var5191324 temp768_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp768_241 #xffffffffffffffff))
(assert (= temp768_240 temp768_241))
(assert (= temp768_242 #x0000000000000001))
(assert (= var66602 temp768_242))
(assert (= temp768_243 #x0000000000000000))
(assert (= temp768_244
   (ite (bvslt var66602 temp768_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp768_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp768_244)))
(assert (= var80523 temp768_245))
(assert (bvslt (ite (bvslt var66602 temp768_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp768_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp768_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp768_247 #x0000000000000000))
(assert (= var80524 temp768_247))
(assert (= temp768_248 #x0000000000000001))
(assert (= var79986 temp768_248))
(model-add temp768_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp768_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp768_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






