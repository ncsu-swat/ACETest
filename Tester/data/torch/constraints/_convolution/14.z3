(declare-fun temp18_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp18_2 () (_ BitVec 64))
(declare-fun temp18_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp18_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp18_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp18_6 () (_ BitVec 64))
(declare-fun temp18_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_8 () (_ BitVec 64))
(declare-fun temp18_9 () (_ BitVec 64))
(declare-fun temp18_10 () (_ BitVec 64))
(declare-fun temp18_11 () (_ BitVec 64))
(declare-fun temp18_12 () (_ BitVec 64))
(declare-fun temp18_13 () (_ BitVec 64))
(declare-fun temp18_14 () (_ BitVec 64))
(declare-fun temp18_15 () (_ BitVec 64))
(declare-fun temp18_16 () (_ BitVec 64))
(declare-fun temp18_17 () (_ BitVec 64))
(declare-fun temp18_18 () (_ BitVec 64))
(declare-fun temp18_19 () (_ BitVec 64))
(declare-fun temp18_20 () (_ BitVec 64))
(declare-fun temp18_21 () (_ BitVec 64))
(declare-fun temp18_22 () (_ BitVec 64))
(declare-fun temp18_23 () (_ BitVec 64))
(declare-fun temp18_24 () (_ BitVec 64))
(declare-fun temp18_25 () (_ BitVec 64))
(declare-fun temp18_26 () (_ BitVec 64))
(declare-fun temp18_27 () (_ BitVec 64))
(declare-fun temp18_28 () (_ BitVec 64))
(declare-fun temp18_29 () (_ BitVec 64))
(declare-fun temp18_30 () (_ BitVec 64))
(declare-fun temp18_31 () (_ BitVec 64))
(declare-fun temp18_32 () (_ BitVec 64))
(declare-fun temp18_33 () (_ BitVec 64))
(declare-fun temp18_34 () (_ BitVec 64))
(declare-fun temp18_35 () (_ BitVec 64))
(declare-fun temp18_36 () (_ BitVec 64))
(declare-fun temp18_37 () (_ BitVec 64))
(declare-fun temp18_38 () (_ BitVec 64))
(declare-fun temp18_39 () (_ BitVec 64))
(declare-fun temp18_40 () (_ BitVec 64))
(declare-fun temp18_41 () (_ BitVec 64))
(declare-fun temp18_42 () (_ BitVec 64))
(declare-fun temp18_43 () (_ BitVec 64))
(declare-fun temp18_44 () (_ BitVec 64))
(declare-fun temp18_45 () (_ BitVec 64))
(declare-fun temp18_46 () (_ BitVec 64))
(declare-fun temp18_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp18_48 () (_ BitVec 64))
(declare-fun temp18_49 () (_ BitVec 64))
(declare-fun temp18_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_51 () (_ BitVec 64))
(declare-fun temp18_52 () (_ BitVec 64))
(declare-fun temp18_53 () (_ BitVec 64))
(declare-fun temp18_54 () (_ BitVec 64))
(declare-fun temp18_55 () (_ BitVec 64))
(declare-fun temp18_56 () (_ BitVec 64))
(declare-fun temp18_57 () (_ BitVec 64))
(declare-fun temp18_58 () (_ BitVec 64))
(declare-fun temp18_59 () (_ BitVec 64))
(declare-fun temp18_60 () (_ BitVec 64))
(declare-fun temp18_61 () (_ BitVec 64))
(declare-fun temp18_62 () (_ BitVec 64))
(declare-fun temp18_63 () (_ BitVec 64))
(declare-fun temp18_64 () (_ BitVec 64))
(declare-fun temp18_65 () (_ BitVec 64))
(declare-fun temp18_66 () (_ BitVec 64))
(declare-fun temp18_67 () (_ BitVec 64))
(declare-fun temp18_68 () (_ BitVec 64))
(declare-fun temp18_69 () (_ BitVec 64))
(declare-fun temp18_70 () (_ BitVec 64))
(declare-fun temp18_71 () (_ BitVec 64))
(declare-fun temp18_72 () (_ BitVec 64))
(declare-fun temp18_73 () (_ BitVec 64))
(declare-fun temp18_74 () (_ BitVec 64))
(declare-fun temp18_75 () (_ BitVec 64))
(declare-fun temp18_76 () (_ BitVec 64))
(declare-fun temp18_77 () (_ BitVec 64))
(declare-fun temp18_78 () (_ BitVec 64))
(declare-fun temp18_79 () (_ BitVec 64))
(declare-fun temp18_80 () (_ BitVec 64))
(declare-fun temp18_81 () (_ BitVec 64))
(declare-fun temp18_82 () (_ BitVec 64))
(declare-fun temp18_83 () (_ BitVec 64))
(declare-fun temp18_84 () (_ BitVec 64))
(declare-fun temp18_85 () (_ BitVec 64))
(declare-fun temp18_86 () (_ BitVec 64))
(declare-fun temp18_87 () (_ BitVec 64))
(declare-fun temp18_88 () (_ BitVec 64))
(declare-fun temp18_89 () (_ BitVec 64))
(declare-fun temp18_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp18_91 () (_ BitVec 64))
(declare-fun temp18_92 () (_ BitVec 64))
(declare-fun temp18_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_94 () (_ BitVec 64))
(declare-fun temp18_95 () (_ BitVec 64))
(declare-fun temp18_96 () (_ BitVec 64))
(declare-fun temp18_97 () (_ BitVec 64))
(declare-fun temp18_98 () (_ BitVec 64))
(declare-fun temp18_99 () (_ BitVec 64))
(declare-fun temp18_100 () (_ BitVec 64))
(declare-fun temp18_101 () (_ BitVec 64))
(declare-fun temp18_102 () (_ BitVec 64))
(declare-fun temp18_103 () (_ BitVec 64))
(declare-fun temp18_104 () (_ BitVec 64))
(declare-fun temp18_105 () (_ BitVec 64))
(declare-fun temp18_106 () (_ BitVec 64))
(declare-fun temp18_107 () (_ BitVec 64))
(declare-fun temp18_108 () (_ BitVec 64))
(declare-fun temp18_109 () (_ BitVec 64))
(declare-fun temp18_110 () (_ BitVec 64))
(declare-fun temp18_111 () (_ BitVec 64))
(declare-fun temp18_112 () (_ BitVec 64))
(declare-fun temp18_113 () (_ BitVec 64))
(declare-fun temp18_114 () (_ BitVec 64))
(declare-fun temp18_115 () (_ BitVec 64))
(declare-fun temp18_116 () (_ BitVec 64))
(declare-fun temp18_117 () (_ BitVec 64))
(declare-fun temp18_118 () (_ BitVec 64))
(declare-fun temp18_119 () (_ BitVec 64))
(declare-fun temp18_120 () (_ BitVec 64))
(declare-fun temp18_121 () (_ BitVec 64))
(declare-fun temp18_122 () (_ BitVec 64))
(declare-fun temp18_123 () (_ BitVec 64))
(declare-fun temp18_124 () (_ BitVec 64))
(declare-fun temp18_125 () (_ BitVec 64))
(declare-fun temp18_126 () (_ BitVec 64))
(declare-fun temp18_127 () (_ BitVec 64))
(declare-fun temp18_128 () (_ BitVec 64))
(declare-fun temp18_129 () (_ BitVec 64))
(declare-fun temp18_130 () (_ BitVec 64))
(declare-fun temp18_131 () (_ BitVec 64))
(declare-fun temp18_132 () (_ BitVec 64))
(declare-fun temp18_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp18_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp18_135 () (_ BitVec 64))
(declare-fun temp18_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp18_137 () (_ BitVec 64))
(declare-fun temp18_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_139 () (_ BitVec 64))
(declare-fun temp18_140 () (_ BitVec 64))
(declare-fun temp18_141 () (_ BitVec 64))
(declare-fun temp18_142 () (_ BitVec 64))
(declare-fun temp18_143 () (_ BitVec 64))
(declare-fun temp18_144 () (_ BitVec 64))
(declare-fun temp18_145 () (_ BitVec 64))
(declare-fun temp18_146 () (_ BitVec 64))
(declare-fun temp18_147 () (_ BitVec 64))
(declare-fun temp18_148 () (_ BitVec 64))
(declare-fun temp18_149 () (_ BitVec 64))
(declare-fun temp18_150 () (_ BitVec 64))
(declare-fun temp18_151 () (_ BitVec 64))
(declare-fun temp18_152 () (_ BitVec 64))
(declare-fun temp18_153 () (_ BitVec 64))
(declare-fun temp18_154 () (_ BitVec 64))
(declare-fun temp18_156 () (_ BitVec 64))
(declare-fun temp18_157 () (_ BitVec 64))
(declare-fun temp18_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp18_158 () (_ BitVec 64))
(declare-fun temp18_159 () (_ BitVec 64))
(declare-fun temp18_161 () (_ BitVec 64))
(declare-fun temp18_162 () (_ BitVec 64))
(declare-fun temp18_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp18_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp18_164 () (_ BitVec 64))
(declare-fun temp18_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp18_166 () (_ BitVec 64))
(declare-fun temp18_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp18_168 () (_ BitVec 64))
(declare-fun temp18_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_170 () (_ BitVec 64))
(declare-fun temp18_171 () (_ BitVec 64))
(declare-fun temp18_172 () (_ BitVec 64))
(declare-fun temp18_173 () (_ BitVec 64))
(declare-fun temp18_174 () (_ BitVec 64))
(declare-fun temp18_175 () (_ BitVec 64))
(declare-fun temp18_176 () (_ BitVec 64))
(declare-fun temp18_177 () (_ BitVec 64))
(declare-fun temp18_178 () (_ BitVec 64))
(declare-fun temp18_179 () (_ BitVec 64))
(declare-fun temp18_180 () (_ BitVec 64))
(declare-fun temp18_181 () (_ BitVec 64))
(declare-fun temp18_182 () (_ BitVec 64))
(declare-fun temp18_183 () (_ BitVec 64))
(declare-fun temp18_184 () (_ BitVec 64))
(declare-fun temp18_185 () (_ BitVec 64))
(declare-fun temp18_186 () (_ BitVec 64))
(declare-fun temp18_187 () (_ BitVec 64))
(declare-fun temp18_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp18_189 () (_ BitVec 64))
(declare-fun temp18_191 () (_ BitVec 64))
(declare-fun temp18_192 () (_ BitVec 64))
(declare-fun temp18_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp18_193 () (_ BitVec 64))
(declare-fun temp18_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp18_195 () (_ BitVec 64))
(declare-fun temp18_196 () (_ BitVec 64))
(declare-fun temp18_197 () (_ BitVec 64))
(declare-fun temp18_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_199 () (_ BitVec 64))
(declare-fun temp18_200 () (_ BitVec 64))
(declare-fun temp18_201 () (_ BitVec 64))
(declare-fun temp18_202 () (_ BitVec 64))
(declare-fun temp18_203 () (_ BitVec 64))
(declare-fun temp18_204 () (_ BitVec 64))
(declare-fun temp18_205 () (_ BitVec 64))
(declare-fun temp18_206 () (_ BitVec 64))
(declare-fun temp18_207 () (_ BitVec 64))
(declare-fun temp18_208 () (_ BitVec 64))
(declare-fun temp18_209 () (_ BitVec 64))
(declare-fun temp18_210 () (_ BitVec 64))
(declare-fun temp18_211 () (_ BitVec 64))
(declare-fun temp18_212 () (_ BitVec 64))
(declare-fun temp18_213 () (_ BitVec 64))
(declare-fun temp18_214 () (_ BitVec 64))
(declare-fun temp18_215 () (_ BitVec 64))
(declare-fun temp18_216 () (_ BitVec 64))
(declare-fun temp18_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp18_218 () (_ BitVec 64))
(declare-fun temp18_220 () (_ BitVec 64))
(declare-fun temp18_221 () (_ BitVec 64))
(declare-fun temp18_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp18_222 () (_ BitVec 64))
(declare-fun temp18_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp18_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp18_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp18_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp18_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp18_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp18_229 () (_ BitVec 64))
(declare-fun temp18_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp18_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp18_232 () (_ BitVec 64))
(declare-fun temp18_233 () (_ BitVec 64))
(declare-fun temp18_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp18_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp18_236 () (_ BitVec 64))
(declare-fun temp18_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp18_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp18_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp18_240 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp18_241 () (_ BitVec 64))
(assert (= temp18_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp18_1)))
(assert (= temp18_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp18_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_3 #x0000000000000000))
(assert (= var79869 temp18_3))
(assert (= temp18_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp18_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_5 #x0000000000000000))
(assert (= var79914 temp18_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp18_6 #x0000000000000000))
(assert (= temp18_7 temp18_6))
(assert (= temp18_8 (select ARGNAME_padding_NAMEEND_VAL temp18_7)))
(assert (= temp18_9 #x0000000000000001))
(assert (= temp18_10 temp18_9))
(assert (= temp18_11 (select ARGNAME_padding_NAMEEND_VAL temp18_10)))
(assert (= temp18_12 #x0000000000000002))
(assert (= temp18_13 temp18_12))
(assert (= temp18_14 (select ARGNAME_padding_NAMEEND_VAL temp18_13)))
(assert (= temp18_15 #x0000000000000003))
(assert (= temp18_16 temp18_15))
(assert (= temp18_17 (select ARGNAME_padding_NAMEEND_VAL temp18_16)))
(assert (= temp18_18 #x0000000000000004))
(assert (= temp18_19 temp18_18))
(assert (= temp18_20 (select ARGNAME_padding_NAMEEND_VAL temp18_19)))
(assert (= temp18_21 #x0000000000000005))
(assert (= temp18_22 temp18_21))
(assert (= temp18_23 (select ARGNAME_padding_NAMEEND_VAL temp18_22)))
(assert (= temp18_24 #x0000000000000000))
(assert (= temp18_25 #x0000000000000000))
(assert (= temp18_26 temp18_25))
(assert (= temp18_27 (select ARGNAME_padding_NAMEEND_VAL temp18_26)))
(assert (= temp18_28 #x0000000000000000))
(assert (= temp18_29 #x0000000000000001))
(assert (= temp18_30 temp18_29))
(assert (= temp18_31 (select ARGNAME_padding_NAMEEND_VAL temp18_30)))
(assert (= temp18_32 #x0000000000000000))
(assert (= temp18_33 #x0000000000000002))
(assert (= temp18_34 temp18_33))
(assert (= temp18_35 (select ARGNAME_padding_NAMEEND_VAL temp18_34)))
(assert (= temp18_36 #x0000000000000000))
(assert (= temp18_37 #x0000000000000003))
(assert (= temp18_38 temp18_37))
(assert (= temp18_39 (select ARGNAME_padding_NAMEEND_VAL temp18_38)))
(assert (= temp18_40 #x0000000000000000))
(assert (= temp18_41 #x0000000000000004))
(assert (= temp18_42 temp18_41))
(assert (= temp18_43 (select ARGNAME_padding_NAMEEND_VAL temp18_42)))
(assert (= temp18_44 #x0000000000000000))
(assert (= temp18_45 #x0000000000000005))
(assert (= temp18_46 temp18_45))
(assert (= temp18_47 (select ARGNAME_padding_NAMEEND_VAL temp18_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp18_27 temp18_24)
             (bvslt temp18_31 temp18_28)
             (bvslt temp18_35 temp18_32)
             (bvslt temp18_39 temp18_36)
             (bvslt temp18_43 temp18_40)
             (bvslt temp18_47 temp18_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_48 #x0000000000000000))
(assert (= var1322786 temp18_48))
(assert (= temp18_49 #x0000000000000000))
(assert (= temp18_50 temp18_49))
(assert (= temp18_51 (select ARGNAME_output_padding_NAMEEND_VAL temp18_50)))
(assert (= temp18_52 #x0000000000000001))
(assert (= temp18_53 temp18_52))
(assert (= temp18_54 (select ARGNAME_output_padding_NAMEEND_VAL temp18_53)))
(assert (= temp18_55 #x0000000000000002))
(assert (= temp18_56 temp18_55))
(assert (= temp18_57 (select ARGNAME_output_padding_NAMEEND_VAL temp18_56)))
(assert (= temp18_58 #x0000000000000003))
(assert (= temp18_59 temp18_58))
(assert (= temp18_60 (select ARGNAME_output_padding_NAMEEND_VAL temp18_59)))
(assert (= temp18_61 #x0000000000000004))
(assert (= temp18_62 temp18_61))
(assert (= temp18_63 (select ARGNAME_output_padding_NAMEEND_VAL temp18_62)))
(assert (= temp18_64 #x0000000000000005))
(assert (= temp18_65 temp18_64))
(assert (= temp18_66 (select ARGNAME_output_padding_NAMEEND_VAL temp18_65)))
(assert (= temp18_67 #x0000000000000000))
(assert (= temp18_68 #x0000000000000000))
(assert (= temp18_69 temp18_68))
(assert (= temp18_70 (select ARGNAME_output_padding_NAMEEND_VAL temp18_69)))
(assert (= temp18_71 #x0000000000000000))
(assert (= temp18_72 #x0000000000000001))
(assert (= temp18_73 temp18_72))
(assert (= temp18_74 (select ARGNAME_output_padding_NAMEEND_VAL temp18_73)))
(assert (= temp18_75 #x0000000000000000))
(assert (= temp18_76 #x0000000000000002))
(assert (= temp18_77 temp18_76))
(assert (= temp18_78 (select ARGNAME_output_padding_NAMEEND_VAL temp18_77)))
(assert (= temp18_79 #x0000000000000000))
(assert (= temp18_80 #x0000000000000003))
(assert (= temp18_81 temp18_80))
(assert (= temp18_82 (select ARGNAME_output_padding_NAMEEND_VAL temp18_81)))
(assert (= temp18_83 #x0000000000000000))
(assert (= temp18_84 #x0000000000000004))
(assert (= temp18_85 temp18_84))
(assert (= temp18_86 (select ARGNAME_output_padding_NAMEEND_VAL temp18_85)))
(assert (= temp18_87 #x0000000000000000))
(assert (= temp18_88 #x0000000000000005))
(assert (= temp18_89 temp18_88))
(assert (= temp18_90 (select ARGNAME_output_padding_NAMEEND_VAL temp18_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp18_70 temp18_67)
             (bvslt temp18_74 temp18_71)
             (bvslt temp18_78 temp18_75)
             (bvslt temp18_82 temp18_79)
             (bvslt temp18_86 temp18_83)
             (bvslt temp18_90 temp18_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_91 #x0000000000000000))
(assert (= var1322797 temp18_91))
(assert (= temp18_92 #x0000000000000000))
(assert (= temp18_93 temp18_92))
(assert (= temp18_94 (select ARGNAME_stride_NAMEEND_VAL temp18_93)))
(assert (= temp18_95 #x0000000000000001))
(assert (= temp18_96 temp18_95))
(assert (= temp18_97 (select ARGNAME_stride_NAMEEND_VAL temp18_96)))
(assert (= temp18_98 #x0000000000000002))
(assert (= temp18_99 temp18_98))
(assert (= temp18_100 (select ARGNAME_stride_NAMEEND_VAL temp18_99)))
(assert (= temp18_101 #x0000000000000003))
(assert (= temp18_102 temp18_101))
(assert (= temp18_103 (select ARGNAME_stride_NAMEEND_VAL temp18_102)))
(assert (= temp18_104 #x0000000000000004))
(assert (= temp18_105 temp18_104))
(assert (= temp18_106 (select ARGNAME_stride_NAMEEND_VAL temp18_105)))
(assert (= temp18_107 #x0000000000000005))
(assert (= temp18_108 temp18_107))
(assert (= temp18_109 (select ARGNAME_stride_NAMEEND_VAL temp18_108)))
(assert (= temp18_110 #x0000000000000000))
(assert (= temp18_111 #x0000000000000000))
(assert (= temp18_112 temp18_111))
(assert (= temp18_113 (select ARGNAME_stride_NAMEEND_VAL temp18_112)))
(assert (= temp18_114 #x0000000000000000))
(assert (= temp18_115 #x0000000000000001))
(assert (= temp18_116 temp18_115))
(assert (= temp18_117 (select ARGNAME_stride_NAMEEND_VAL temp18_116)))
(assert (= temp18_118 #x0000000000000000))
(assert (= temp18_119 #x0000000000000002))
(assert (= temp18_120 temp18_119))
(assert (= temp18_121 (select ARGNAME_stride_NAMEEND_VAL temp18_120)))
(assert (= temp18_122 #x0000000000000000))
(assert (= temp18_123 #x0000000000000003))
(assert (= temp18_124 temp18_123))
(assert (= temp18_125 (select ARGNAME_stride_NAMEEND_VAL temp18_124)))
(assert (= temp18_126 #x0000000000000000))
(assert (= temp18_127 #x0000000000000004))
(assert (= temp18_128 temp18_127))
(assert (= temp18_129 (select ARGNAME_stride_NAMEEND_VAL temp18_128)))
(assert (= temp18_130 #x0000000000000000))
(assert (= temp18_131 #x0000000000000005))
(assert (= temp18_132 temp18_131))
(assert (= temp18_133 (select ARGNAME_stride_NAMEEND_VAL temp18_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp18_113 temp18_110)
             (bvsle temp18_117 temp18_114)
             (bvsle temp18_121 temp18_118)
             (bvsle temp18_125 temp18_122)
             (bvsle temp18_129 temp18_126)
             (bvsle temp18_133 temp18_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_134 #x0000000000000000))
(assert (= var1322807 temp18_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_135 #x0000000000000001))
(assert (= var1322819 temp18_135))
(assert (= temp18_136 #x0000000000000000))
(assert (= var1310898 temp18_136))
(assert (= temp18_137 #x0000000000000000))
(assert (= temp18_138 temp18_137))
(assert (= temp18_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_138)))
(assert (= temp18_140 #x0000000000000001))
(assert (= temp18_141 temp18_140))
(assert (= temp18_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_141)))
(assert (= temp18_143 #x0000000000000002))
(assert (= temp18_144 temp18_143))
(assert (= temp18_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_144)))
(assert (= temp18_146 #x0000000000000003))
(assert (= temp18_147 temp18_146))
(assert (= temp18_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_147)))
(assert (= temp18_149 #x0000000000000004))
(assert (= temp18_150 temp18_149))
(assert (= temp18_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_150)))
(assert (= temp18_152 #x0000000000000005))
(assert (= temp18_153 temp18_152))
(assert (= temp18_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_153)))
(assert (= temp18_156 var1310898))
(assert (= temp18_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_156)))
(assert (= temp18_155 temp18_157))
(assert (= var1322852
   (ite (bvslt temp18_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_158 #x0000000000000000))
(assert (= var1322852 temp18_158))
(assert (= temp18_159 #x0000000000000000))
(assert (= var1310898 temp18_159))
(assert (= temp18_161 var1310898))
(assert (= temp18_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_161)))
(assert (= temp18_160 temp18_162))
(assert (= var1322874 (bvsmod temp18_160 ARGNAME_groups_NAMEEND)))
(assert (= temp18_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp18_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_164 #x0000000000000001))
(assert (= var1322875 temp18_164))
(assert (= temp18_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp18_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_166 #x0000000000000001))
(assert (= var1322895 temp18_166))
(assert (= temp18_167 #x0000000000000001))
(assert (= var1311786 temp18_167))
(assert (= temp18_168 #x0000000000000000))
(assert (= temp18_169 temp18_168))
(assert (= temp18_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_169)))
(assert (= temp18_171 #x0000000000000001))
(assert (= temp18_172 temp18_171))
(assert (= temp18_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_172)))
(assert (= temp18_174 #x0000000000000002))
(assert (= temp18_175 temp18_174))
(assert (= temp18_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_175)))
(assert (= temp18_177 #x0000000000000003))
(assert (= temp18_178 temp18_177))
(assert (= temp18_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_178)))
(assert (= temp18_180 #x0000000000000004))
(assert (= temp18_181 temp18_180))
(assert (= temp18_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_181)))
(assert (= temp18_183 #x0000000000000005))
(assert (= temp18_184 temp18_183))
(assert (= temp18_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_184)))
(assert (= temp18_186 #x0000000000000000))
(assert (= temp18_187
   (ite (bvslt var1311786 temp18_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp18_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_187)))
(assert (= var1322903 temp18_188))
(assert (bvslt (ite (bvslt var1311786 temp18_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp18_189 #x0000000000000001))
(assert (= var1311786 temp18_189))
(assert (= temp18_191 var1311786))
(assert (= temp18_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_191)))
(assert (= temp18_190 temp18_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp18_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_193 #x0000000000000001))
(assert (= var1322908 temp18_193))
(assert (= temp18_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp18_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_195 #x0000000000000001))
(assert (= var1322975 temp18_195))
(assert (= temp18_196 #x0000000000000000))
(assert (= var1310898 temp18_196))
(assert (= temp18_197 #x0000000000000000))
(assert (= temp18_198 temp18_197))
(assert (= temp18_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp18_198)))
(assert (= temp18_200 #x0000000000000001))
(assert (= temp18_201 temp18_200))
(assert (= temp18_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp18_201)))
(assert (= temp18_203 #x0000000000000002))
(assert (= temp18_204 temp18_203))
(assert (= temp18_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp18_204)))
(assert (= temp18_206 #x0000000000000003))
(assert (= temp18_207 temp18_206))
(assert (= temp18_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp18_207)))
(assert (= temp18_209 #x0000000000000004))
(assert (= temp18_210 temp18_209))
(assert (= temp18_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp18_210)))
(assert (= temp18_212 #x0000000000000005))
(assert (= temp18_213 temp18_212))
(assert (= temp18_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp18_213)))
(assert (= temp18_215 #x0000000000000000))
(assert (= temp18_216
   (ite (bvslt var1310898 temp18_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp18_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp18_216)))
(assert (= var1322977 temp18_217))
(assert (bvslt (ite (bvslt var1310898 temp18_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp18_218 #x0000000000000000))
(assert (= var1310898 temp18_218))
(assert (= temp18_220 var1310898))
(assert (= temp18_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp18_220)))
(assert (= temp18_219 temp18_221))
(assert (= var1322980
   (ite (= var1322977 temp18_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_222 #x0000000000000001))
(assert (= var1322980 temp18_222))
(assert (= temp18_223 #x0000000000000002))
(assert (= var1848169 temp18_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp18_225 #x0000000000000001))
(assert (= var1323065 temp18_225))
(assert (= temp18_226 #x0000000000000001))
(assert (= var3486735 temp18_226))
(assert (= temp18_227 #x0000000000000001))
(assert (= var3814415 temp18_227))
(assert (= temp18_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp18_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_229 #x0000000000000001))
(assert (= var79986 temp18_229))
(assert (= temp18_230 #x0000000000000001))
(assert (= var80116 temp18_230))
(assert (= var4796905 var80116))
(assert (= temp18_231 #x0000000000000000))
(assert (= var4784306 temp18_231))
(assert (= temp18_232 #x0000000000000000))
(assert (= temp18_233
   (ite (bvslt var4784306 temp18_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp18_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_233)))
(assert (= var4796924 temp18_234))
(assert (bvslt (ite (bvslt var4784306 temp18_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp18_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp18_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_236 #x0000000000000001))
(assert (= var4796925 temp18_236))
(assert (= temp18_237 #x0000000000000000))
(assert (= var4996927 temp18_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp18_238 #x0000000000000002))
(assert (= var5125763 temp18_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_239 #x0000000000000000))
(assert (= var5191324 temp18_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp18_240 #x0000000000000000))
(assert (= var5386640 temp18_240))
(assert (= temp18_241 #x0000000000000001))
(assert (= var79986 temp18_241))
(model-add temp18_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp18_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp18_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






