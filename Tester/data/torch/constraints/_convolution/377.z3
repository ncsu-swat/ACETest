(declare-fun temp501_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp501_2 () (_ BitVec 64))
(declare-fun temp501_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp501_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp501_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp501_6 () (_ BitVec 64))
(declare-fun temp501_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_8 () (_ BitVec 64))
(declare-fun temp501_9 () (_ BitVec 64))
(declare-fun temp501_10 () (_ BitVec 64))
(declare-fun temp501_11 () (_ BitVec 64))
(declare-fun temp501_12 () (_ BitVec 64))
(declare-fun temp501_13 () (_ BitVec 64))
(declare-fun temp501_14 () (_ BitVec 64))
(declare-fun temp501_15 () (_ BitVec 64))
(declare-fun temp501_16 () (_ BitVec 64))
(declare-fun temp501_17 () (_ BitVec 64))
(declare-fun temp501_18 () (_ BitVec 64))
(declare-fun temp501_19 () (_ BitVec 64))
(declare-fun temp501_20 () (_ BitVec 64))
(declare-fun temp501_21 () (_ BitVec 64))
(declare-fun temp501_22 () (_ BitVec 64))
(declare-fun temp501_23 () (_ BitVec 64))
(declare-fun temp501_24 () (_ BitVec 64))
(declare-fun temp501_25 () (_ BitVec 64))
(declare-fun temp501_26 () (_ BitVec 64))
(declare-fun temp501_27 () (_ BitVec 64))
(declare-fun temp501_28 () (_ BitVec 64))
(declare-fun temp501_29 () (_ BitVec 64))
(declare-fun temp501_30 () (_ BitVec 64))
(declare-fun temp501_31 () (_ BitVec 64))
(declare-fun temp501_32 () (_ BitVec 64))
(declare-fun temp501_33 () (_ BitVec 64))
(declare-fun temp501_34 () (_ BitVec 64))
(declare-fun temp501_35 () (_ BitVec 64))
(declare-fun temp501_36 () (_ BitVec 64))
(declare-fun temp501_37 () (_ BitVec 64))
(declare-fun temp501_38 () (_ BitVec 64))
(declare-fun temp501_39 () (_ BitVec 64))
(declare-fun temp501_40 () (_ BitVec 64))
(declare-fun temp501_41 () (_ BitVec 64))
(declare-fun temp501_42 () (_ BitVec 64))
(declare-fun temp501_43 () (_ BitVec 64))
(declare-fun temp501_44 () (_ BitVec 64))
(declare-fun temp501_45 () (_ BitVec 64))
(declare-fun temp501_46 () (_ BitVec 64))
(declare-fun temp501_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp501_48 () (_ BitVec 64))
(declare-fun temp501_49 () (_ BitVec 64))
(declare-fun temp501_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_51 () (_ BitVec 64))
(declare-fun temp501_52 () (_ BitVec 64))
(declare-fun temp501_53 () (_ BitVec 64))
(declare-fun temp501_54 () (_ BitVec 64))
(declare-fun temp501_55 () (_ BitVec 64))
(declare-fun temp501_56 () (_ BitVec 64))
(declare-fun temp501_57 () (_ BitVec 64))
(declare-fun temp501_58 () (_ BitVec 64))
(declare-fun temp501_59 () (_ BitVec 64))
(declare-fun temp501_60 () (_ BitVec 64))
(declare-fun temp501_61 () (_ BitVec 64))
(declare-fun temp501_62 () (_ BitVec 64))
(declare-fun temp501_63 () (_ BitVec 64))
(declare-fun temp501_64 () (_ BitVec 64))
(declare-fun temp501_65 () (_ BitVec 64))
(declare-fun temp501_66 () (_ BitVec 64))
(declare-fun temp501_67 () (_ BitVec 64))
(declare-fun temp501_68 () (_ BitVec 64))
(declare-fun temp501_69 () (_ BitVec 64))
(declare-fun temp501_70 () (_ BitVec 64))
(declare-fun temp501_71 () (_ BitVec 64))
(declare-fun temp501_72 () (_ BitVec 64))
(declare-fun temp501_73 () (_ BitVec 64))
(declare-fun temp501_74 () (_ BitVec 64))
(declare-fun temp501_75 () (_ BitVec 64))
(declare-fun temp501_76 () (_ BitVec 64))
(declare-fun temp501_77 () (_ BitVec 64))
(declare-fun temp501_78 () (_ BitVec 64))
(declare-fun temp501_79 () (_ BitVec 64))
(declare-fun temp501_80 () (_ BitVec 64))
(declare-fun temp501_81 () (_ BitVec 64))
(declare-fun temp501_82 () (_ BitVec 64))
(declare-fun temp501_83 () (_ BitVec 64))
(declare-fun temp501_84 () (_ BitVec 64))
(declare-fun temp501_85 () (_ BitVec 64))
(declare-fun temp501_86 () (_ BitVec 64))
(declare-fun temp501_87 () (_ BitVec 64))
(declare-fun temp501_88 () (_ BitVec 64))
(declare-fun temp501_89 () (_ BitVec 64))
(declare-fun temp501_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp501_91 () (_ BitVec 64))
(declare-fun temp501_92 () (_ BitVec 64))
(declare-fun temp501_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_94 () (_ BitVec 64))
(declare-fun temp501_95 () (_ BitVec 64))
(declare-fun temp501_96 () (_ BitVec 64))
(declare-fun temp501_97 () (_ BitVec 64))
(declare-fun temp501_98 () (_ BitVec 64))
(declare-fun temp501_99 () (_ BitVec 64))
(declare-fun temp501_100 () (_ BitVec 64))
(declare-fun temp501_101 () (_ BitVec 64))
(declare-fun temp501_102 () (_ BitVec 64))
(declare-fun temp501_103 () (_ BitVec 64))
(declare-fun temp501_104 () (_ BitVec 64))
(declare-fun temp501_105 () (_ BitVec 64))
(declare-fun temp501_106 () (_ BitVec 64))
(declare-fun temp501_107 () (_ BitVec 64))
(declare-fun temp501_108 () (_ BitVec 64))
(declare-fun temp501_109 () (_ BitVec 64))
(declare-fun temp501_110 () (_ BitVec 64))
(declare-fun temp501_111 () (_ BitVec 64))
(declare-fun temp501_112 () (_ BitVec 64))
(declare-fun temp501_113 () (_ BitVec 64))
(declare-fun temp501_114 () (_ BitVec 64))
(declare-fun temp501_115 () (_ BitVec 64))
(declare-fun temp501_116 () (_ BitVec 64))
(declare-fun temp501_117 () (_ BitVec 64))
(declare-fun temp501_118 () (_ BitVec 64))
(declare-fun temp501_119 () (_ BitVec 64))
(declare-fun temp501_120 () (_ BitVec 64))
(declare-fun temp501_121 () (_ BitVec 64))
(declare-fun temp501_122 () (_ BitVec 64))
(declare-fun temp501_123 () (_ BitVec 64))
(declare-fun temp501_124 () (_ BitVec 64))
(declare-fun temp501_125 () (_ BitVec 64))
(declare-fun temp501_126 () (_ BitVec 64))
(declare-fun temp501_127 () (_ BitVec 64))
(declare-fun temp501_128 () (_ BitVec 64))
(declare-fun temp501_129 () (_ BitVec 64))
(declare-fun temp501_130 () (_ BitVec 64))
(declare-fun temp501_131 () (_ BitVec 64))
(declare-fun temp501_132 () (_ BitVec 64))
(declare-fun temp501_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp501_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp501_135 () (_ BitVec 64))
(declare-fun temp501_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp501_137 () (_ BitVec 64))
(declare-fun temp501_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_139 () (_ BitVec 64))
(declare-fun temp501_140 () (_ BitVec 64))
(declare-fun temp501_141 () (_ BitVec 64))
(declare-fun temp501_142 () (_ BitVec 64))
(declare-fun temp501_143 () (_ BitVec 64))
(declare-fun temp501_144 () (_ BitVec 64))
(declare-fun temp501_145 () (_ BitVec 64))
(declare-fun temp501_146 () (_ BitVec 64))
(declare-fun temp501_147 () (_ BitVec 64))
(declare-fun temp501_148 () (_ BitVec 64))
(declare-fun temp501_149 () (_ BitVec 64))
(declare-fun temp501_150 () (_ BitVec 64))
(declare-fun temp501_151 () (_ BitVec 64))
(declare-fun temp501_152 () (_ BitVec 64))
(declare-fun temp501_153 () (_ BitVec 64))
(declare-fun temp501_154 () (_ BitVec 64))
(declare-fun temp501_156 () (_ BitVec 64))
(declare-fun temp501_157 () (_ BitVec 64))
(declare-fun temp501_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp501_158 () (_ BitVec 64))
(declare-fun temp501_159 () (_ BitVec 64))
(declare-fun temp501_161 () (_ BitVec 64))
(declare-fun temp501_162 () (_ BitVec 64))
(declare-fun temp501_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp501_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp501_164 () (_ BitVec 64))
(declare-fun temp501_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp501_166 () (_ BitVec 64))
(declare-fun temp501_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp501_168 () (_ BitVec 64))
(declare-fun temp501_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_170 () (_ BitVec 64))
(declare-fun temp501_171 () (_ BitVec 64))
(declare-fun temp501_172 () (_ BitVec 64))
(declare-fun temp501_173 () (_ BitVec 64))
(declare-fun temp501_174 () (_ BitVec 64))
(declare-fun temp501_175 () (_ BitVec 64))
(declare-fun temp501_176 () (_ BitVec 64))
(declare-fun temp501_177 () (_ BitVec 64))
(declare-fun temp501_178 () (_ BitVec 64))
(declare-fun temp501_179 () (_ BitVec 64))
(declare-fun temp501_180 () (_ BitVec 64))
(declare-fun temp501_181 () (_ BitVec 64))
(declare-fun temp501_182 () (_ BitVec 64))
(declare-fun temp501_183 () (_ BitVec 64))
(declare-fun temp501_184 () (_ BitVec 64))
(declare-fun temp501_185 () (_ BitVec 64))
(declare-fun temp501_186 () (_ BitVec 64))
(declare-fun temp501_187 () (_ BitVec 64))
(declare-fun temp501_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp501_189 () (_ BitVec 64))
(declare-fun temp501_191 () (_ BitVec 64))
(declare-fun temp501_192 () (_ BitVec 64))
(declare-fun temp501_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp501_193 () (_ BitVec 64))
(declare-fun temp501_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp501_195 () (_ BitVec 64))
(declare-fun temp501_196 () (_ BitVec 64))
(declare-fun temp501_197 () (_ BitVec 64))
(declare-fun temp501_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_199 () (_ BitVec 64))
(declare-fun temp501_200 () (_ BitVec 64))
(declare-fun temp501_201 () (_ BitVec 64))
(declare-fun temp501_202 () (_ BitVec 64))
(declare-fun temp501_203 () (_ BitVec 64))
(declare-fun temp501_204 () (_ BitVec 64))
(declare-fun temp501_205 () (_ BitVec 64))
(declare-fun temp501_206 () (_ BitVec 64))
(declare-fun temp501_207 () (_ BitVec 64))
(declare-fun temp501_208 () (_ BitVec 64))
(declare-fun temp501_209 () (_ BitVec 64))
(declare-fun temp501_210 () (_ BitVec 64))
(declare-fun temp501_211 () (_ BitVec 64))
(declare-fun temp501_212 () (_ BitVec 64))
(declare-fun temp501_213 () (_ BitVec 64))
(declare-fun temp501_214 () (_ BitVec 64))
(declare-fun temp501_215 () (_ BitVec 64))
(declare-fun temp501_216 () (_ BitVec 64))
(declare-fun temp501_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp501_218 () (_ BitVec 64))
(declare-fun temp501_220 () (_ BitVec 64))
(declare-fun temp501_221 () (_ BitVec 64))
(declare-fun temp501_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp501_222 () (_ BitVec 64))
(declare-fun temp501_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp501_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp501_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp501_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp501_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp501_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp501_229 () (_ BitVec 64))
(declare-fun temp501_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp501_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp501_232 () (_ BitVec 64))
(declare-fun temp501_233 () (_ BitVec 64))
(declare-fun temp501_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp501_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp501_236 () (_ BitVec 64))
(declare-fun temp501_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp501_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp501_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp501_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp501_241 () (_ BitVec 64))
(declare-fun temp501_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp501_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp501_244 () (_ BitVec 64))
(assert (= temp501_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp501_1)))
(assert (= temp501_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp501_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_3 #x0000000000000000))
(assert (= var79869 temp501_3))
(assert (= temp501_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp501_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_5 #x0000000000000000))
(assert (= var79914 temp501_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp501_6 #x0000000000000000))
(assert (= temp501_7 temp501_6))
(assert (= temp501_8 (select ARGNAME_padding_NAMEEND_VAL temp501_7)))
(assert (= temp501_9 #x0000000000000001))
(assert (= temp501_10 temp501_9))
(assert (= temp501_11 (select ARGNAME_padding_NAMEEND_VAL temp501_10)))
(assert (= temp501_12 #x0000000000000002))
(assert (= temp501_13 temp501_12))
(assert (= temp501_14 (select ARGNAME_padding_NAMEEND_VAL temp501_13)))
(assert (= temp501_15 #x0000000000000003))
(assert (= temp501_16 temp501_15))
(assert (= temp501_17 (select ARGNAME_padding_NAMEEND_VAL temp501_16)))
(assert (= temp501_18 #x0000000000000004))
(assert (= temp501_19 temp501_18))
(assert (= temp501_20 (select ARGNAME_padding_NAMEEND_VAL temp501_19)))
(assert (= temp501_21 #x0000000000000005))
(assert (= temp501_22 temp501_21))
(assert (= temp501_23 (select ARGNAME_padding_NAMEEND_VAL temp501_22)))
(assert (= temp501_24 #x0000000000000000))
(assert (= temp501_25 #x0000000000000000))
(assert (= temp501_26 temp501_25))
(assert (= temp501_27 (select ARGNAME_padding_NAMEEND_VAL temp501_26)))
(assert (= temp501_28 #x0000000000000000))
(assert (= temp501_29 #x0000000000000001))
(assert (= temp501_30 temp501_29))
(assert (= temp501_31 (select ARGNAME_padding_NAMEEND_VAL temp501_30)))
(assert (= temp501_32 #x0000000000000000))
(assert (= temp501_33 #x0000000000000002))
(assert (= temp501_34 temp501_33))
(assert (= temp501_35 (select ARGNAME_padding_NAMEEND_VAL temp501_34)))
(assert (= temp501_36 #x0000000000000000))
(assert (= temp501_37 #x0000000000000003))
(assert (= temp501_38 temp501_37))
(assert (= temp501_39 (select ARGNAME_padding_NAMEEND_VAL temp501_38)))
(assert (= temp501_40 #x0000000000000000))
(assert (= temp501_41 #x0000000000000004))
(assert (= temp501_42 temp501_41))
(assert (= temp501_43 (select ARGNAME_padding_NAMEEND_VAL temp501_42)))
(assert (= temp501_44 #x0000000000000000))
(assert (= temp501_45 #x0000000000000005))
(assert (= temp501_46 temp501_45))
(assert (= temp501_47 (select ARGNAME_padding_NAMEEND_VAL temp501_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp501_27 temp501_24)
             (bvslt temp501_31 temp501_28)
             (bvslt temp501_35 temp501_32)
             (bvslt temp501_39 temp501_36)
             (bvslt temp501_43 temp501_40)
             (bvslt temp501_47 temp501_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_48 #x0000000000000000))
(assert (= var1322786 temp501_48))
(assert (= temp501_49 #x0000000000000000))
(assert (= temp501_50 temp501_49))
(assert (= temp501_51 (select ARGNAME_output_padding_NAMEEND_VAL temp501_50)))
(assert (= temp501_52 #x0000000000000001))
(assert (= temp501_53 temp501_52))
(assert (= temp501_54 (select ARGNAME_output_padding_NAMEEND_VAL temp501_53)))
(assert (= temp501_55 #x0000000000000002))
(assert (= temp501_56 temp501_55))
(assert (= temp501_57 (select ARGNAME_output_padding_NAMEEND_VAL temp501_56)))
(assert (= temp501_58 #x0000000000000003))
(assert (= temp501_59 temp501_58))
(assert (= temp501_60 (select ARGNAME_output_padding_NAMEEND_VAL temp501_59)))
(assert (= temp501_61 #x0000000000000004))
(assert (= temp501_62 temp501_61))
(assert (= temp501_63 (select ARGNAME_output_padding_NAMEEND_VAL temp501_62)))
(assert (= temp501_64 #x0000000000000005))
(assert (= temp501_65 temp501_64))
(assert (= temp501_66 (select ARGNAME_output_padding_NAMEEND_VAL temp501_65)))
(assert (= temp501_67 #x0000000000000000))
(assert (= temp501_68 #x0000000000000000))
(assert (= temp501_69 temp501_68))
(assert (= temp501_70 (select ARGNAME_output_padding_NAMEEND_VAL temp501_69)))
(assert (= temp501_71 #x0000000000000000))
(assert (= temp501_72 #x0000000000000001))
(assert (= temp501_73 temp501_72))
(assert (= temp501_74 (select ARGNAME_output_padding_NAMEEND_VAL temp501_73)))
(assert (= temp501_75 #x0000000000000000))
(assert (= temp501_76 #x0000000000000002))
(assert (= temp501_77 temp501_76))
(assert (= temp501_78 (select ARGNAME_output_padding_NAMEEND_VAL temp501_77)))
(assert (= temp501_79 #x0000000000000000))
(assert (= temp501_80 #x0000000000000003))
(assert (= temp501_81 temp501_80))
(assert (= temp501_82 (select ARGNAME_output_padding_NAMEEND_VAL temp501_81)))
(assert (= temp501_83 #x0000000000000000))
(assert (= temp501_84 #x0000000000000004))
(assert (= temp501_85 temp501_84))
(assert (= temp501_86 (select ARGNAME_output_padding_NAMEEND_VAL temp501_85)))
(assert (= temp501_87 #x0000000000000000))
(assert (= temp501_88 #x0000000000000005))
(assert (= temp501_89 temp501_88))
(assert (= temp501_90 (select ARGNAME_output_padding_NAMEEND_VAL temp501_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp501_70 temp501_67)
             (bvslt temp501_74 temp501_71)
             (bvslt temp501_78 temp501_75)
             (bvslt temp501_82 temp501_79)
             (bvslt temp501_86 temp501_83)
             (bvslt temp501_90 temp501_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_91 #x0000000000000000))
(assert (= var1322797 temp501_91))
(assert (= temp501_92 #x0000000000000000))
(assert (= temp501_93 temp501_92))
(assert (= temp501_94 (select ARGNAME_stride_NAMEEND_VAL temp501_93)))
(assert (= temp501_95 #x0000000000000001))
(assert (= temp501_96 temp501_95))
(assert (= temp501_97 (select ARGNAME_stride_NAMEEND_VAL temp501_96)))
(assert (= temp501_98 #x0000000000000002))
(assert (= temp501_99 temp501_98))
(assert (= temp501_100 (select ARGNAME_stride_NAMEEND_VAL temp501_99)))
(assert (= temp501_101 #x0000000000000003))
(assert (= temp501_102 temp501_101))
(assert (= temp501_103 (select ARGNAME_stride_NAMEEND_VAL temp501_102)))
(assert (= temp501_104 #x0000000000000004))
(assert (= temp501_105 temp501_104))
(assert (= temp501_106 (select ARGNAME_stride_NAMEEND_VAL temp501_105)))
(assert (= temp501_107 #x0000000000000005))
(assert (= temp501_108 temp501_107))
(assert (= temp501_109 (select ARGNAME_stride_NAMEEND_VAL temp501_108)))
(assert (= temp501_110 #x0000000000000000))
(assert (= temp501_111 #x0000000000000000))
(assert (= temp501_112 temp501_111))
(assert (= temp501_113 (select ARGNAME_stride_NAMEEND_VAL temp501_112)))
(assert (= temp501_114 #x0000000000000000))
(assert (= temp501_115 #x0000000000000001))
(assert (= temp501_116 temp501_115))
(assert (= temp501_117 (select ARGNAME_stride_NAMEEND_VAL temp501_116)))
(assert (= temp501_118 #x0000000000000000))
(assert (= temp501_119 #x0000000000000002))
(assert (= temp501_120 temp501_119))
(assert (= temp501_121 (select ARGNAME_stride_NAMEEND_VAL temp501_120)))
(assert (= temp501_122 #x0000000000000000))
(assert (= temp501_123 #x0000000000000003))
(assert (= temp501_124 temp501_123))
(assert (= temp501_125 (select ARGNAME_stride_NAMEEND_VAL temp501_124)))
(assert (= temp501_126 #x0000000000000000))
(assert (= temp501_127 #x0000000000000004))
(assert (= temp501_128 temp501_127))
(assert (= temp501_129 (select ARGNAME_stride_NAMEEND_VAL temp501_128)))
(assert (= temp501_130 #x0000000000000000))
(assert (= temp501_131 #x0000000000000005))
(assert (= temp501_132 temp501_131))
(assert (= temp501_133 (select ARGNAME_stride_NAMEEND_VAL temp501_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp501_113 temp501_110)
             (bvsle temp501_117 temp501_114)
             (bvsle temp501_121 temp501_118)
             (bvsle temp501_125 temp501_122)
             (bvsle temp501_129 temp501_126)
             (bvsle temp501_133 temp501_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_134 #x0000000000000000))
(assert (= var1322807 temp501_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_135 #x0000000000000001))
(assert (= var1322819 temp501_135))
(assert (= temp501_136 #x0000000000000000))
(assert (= var1310898 temp501_136))
(assert (= temp501_137 #x0000000000000000))
(assert (= temp501_138 temp501_137))
(assert (= temp501_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_138)))
(assert (= temp501_140 #x0000000000000001))
(assert (= temp501_141 temp501_140))
(assert (= temp501_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_141)))
(assert (= temp501_143 #x0000000000000002))
(assert (= temp501_144 temp501_143))
(assert (= temp501_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_144)))
(assert (= temp501_146 #x0000000000000003))
(assert (= temp501_147 temp501_146))
(assert (= temp501_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_147)))
(assert (= temp501_149 #x0000000000000004))
(assert (= temp501_150 temp501_149))
(assert (= temp501_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_150)))
(assert (= temp501_152 #x0000000000000005))
(assert (= temp501_153 temp501_152))
(assert (= temp501_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_153)))
(assert (= temp501_156 var1310898))
(assert (= temp501_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_156)))
(assert (= temp501_155 temp501_157))
(assert (= var1322852
   (ite (bvslt temp501_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_158 #x0000000000000000))
(assert (= var1322852 temp501_158))
(assert (= temp501_159 #x0000000000000000))
(assert (= var1310898 temp501_159))
(assert (= temp501_161 var1310898))
(assert (= temp501_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_161)))
(assert (= temp501_160 temp501_162))
(assert (= var1322874 (bvsmod temp501_160 ARGNAME_groups_NAMEEND)))
(assert (= temp501_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp501_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp501_164 #x0000000000000001))
(assert (= var1322875 temp501_164))
(assert (= temp501_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp501_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_166 #x0000000000000001))
(assert (= var1322895 temp501_166))
(assert (= temp501_167 #x0000000000000001))
(assert (= var1311786 temp501_167))
(assert (= temp501_168 #x0000000000000000))
(assert (= temp501_169 temp501_168))
(assert (= temp501_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_169)))
(assert (= temp501_171 #x0000000000000001))
(assert (= temp501_172 temp501_171))
(assert (= temp501_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_172)))
(assert (= temp501_174 #x0000000000000002))
(assert (= temp501_175 temp501_174))
(assert (= temp501_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_175)))
(assert (= temp501_177 #x0000000000000003))
(assert (= temp501_178 temp501_177))
(assert (= temp501_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_178)))
(assert (= temp501_180 #x0000000000000004))
(assert (= temp501_181 temp501_180))
(assert (= temp501_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_181)))
(assert (= temp501_183 #x0000000000000005))
(assert (= temp501_184 temp501_183))
(assert (= temp501_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_184)))
(assert (= temp501_186 #x0000000000000000))
(assert (= temp501_187
   (ite (bvslt var1311786 temp501_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp501_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_187)))
(assert (= var1322903 temp501_188))
(assert (bvslt (ite (bvslt var1311786 temp501_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp501_189 #x0000000000000001))
(assert (= var1311786 temp501_189))
(assert (= temp501_191 var1311786))
(assert (= temp501_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_191)))
(assert (= temp501_190 temp501_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp501_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp501_193 #x0000000000000001))
(assert (= var1322908 temp501_193))
(assert (= temp501_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp501_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_195 #x0000000000000001))
(assert (= var1322975 temp501_195))
(assert (= temp501_196 #x0000000000000000))
(assert (= var1310898 temp501_196))
(assert (= temp501_197 #x0000000000000000))
(assert (= temp501_198 temp501_197))
(assert (= temp501_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp501_198)))
(assert (= temp501_200 #x0000000000000001))
(assert (= temp501_201 temp501_200))
(assert (= temp501_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp501_201)))
(assert (= temp501_203 #x0000000000000002))
(assert (= temp501_204 temp501_203))
(assert (= temp501_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp501_204)))
(assert (= temp501_206 #x0000000000000003))
(assert (= temp501_207 temp501_206))
(assert (= temp501_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp501_207)))
(assert (= temp501_209 #x0000000000000004))
(assert (= temp501_210 temp501_209))
(assert (= temp501_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp501_210)))
(assert (= temp501_212 #x0000000000000005))
(assert (= temp501_213 temp501_212))
(assert (= temp501_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp501_213)))
(assert (= temp501_215 #x0000000000000000))
(assert (= temp501_216
   (ite (bvslt var1310898 temp501_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp501_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp501_216)))
(assert (= var1322977 temp501_217))
(assert (bvslt (ite (bvslt var1310898 temp501_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp501_218 #x0000000000000000))
(assert (= var1310898 temp501_218))
(assert (= temp501_220 var1310898))
(assert (= temp501_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_220)))
(assert (= temp501_219 temp501_221))
(assert (= var1322980
   (ite (= var1322977 temp501_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp501_222 #x0000000000000001))
(assert (= var1322980 temp501_222))
(assert (= temp501_223 #x0000000000000002))
(assert (= var1848169 temp501_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp501_225 #x0000000000000001))
(assert (= var1323065 temp501_225))
(assert (= temp501_226 #x0000000000000001))
(assert (= var3486735 temp501_226))
(assert (= temp501_227 #x0000000000000001))
(assert (= var3814415 temp501_227))
(assert (= temp501_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp501_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_229 #x0000000000000001))
(assert (= var79986 temp501_229))
(assert (= temp501_230 #x0000000000000001))
(assert (= var80116 temp501_230))
(assert (= var4796905 var80116))
(assert (= temp501_231 #x0000000000000000))
(assert (= var4784306 temp501_231))
(assert (= temp501_232 #x0000000000000000))
(assert (= temp501_233
   (ite (bvslt var4784306 temp501_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp501_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_233)))
(assert (= var4796924 temp501_234))
(assert (bvslt (ite (bvslt var4784306 temp501_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp501_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp501_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp501_236 #x0000000000000001))
(assert (= var4796925 temp501_236))
(assert (= temp501_237 #x0000000000000000))
(assert (= var4996927 temp501_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp501_238 #x0000000000000002))
(assert (= var5125763 temp501_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_239 #x0000000000000000))
(assert (= var5191324 temp501_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp501_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp501_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_241 #x0000000000000001))
(assert (= var81342 temp501_241))
(assert (= temp501_242 #x0000000000000002))
(assert (= var5977731 temp501_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_243 #x0000000000000000))
(assert (= var6043292 temp501_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp501_244 #x0000000000000001))
(assert (= var79986 temp501_244))
(model-add temp501_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp501_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp501_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






