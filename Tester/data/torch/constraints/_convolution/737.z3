(declare-fun temp980_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp980_2 () (_ BitVec 64))
(declare-fun temp980_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp980_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp980_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp980_6 () (_ BitVec 64))
(declare-fun temp980_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_8 () (_ BitVec 64))
(declare-fun temp980_9 () (_ BitVec 64))
(declare-fun temp980_10 () (_ BitVec 64))
(declare-fun temp980_11 () (_ BitVec 64))
(declare-fun temp980_12 () (_ BitVec 64))
(declare-fun temp980_13 () (_ BitVec 64))
(declare-fun temp980_14 () (_ BitVec 64))
(declare-fun temp980_15 () (_ BitVec 64))
(declare-fun temp980_16 () (_ BitVec 64))
(declare-fun temp980_17 () (_ BitVec 64))
(declare-fun temp980_18 () (_ BitVec 64))
(declare-fun temp980_19 () (_ BitVec 64))
(declare-fun temp980_20 () (_ BitVec 64))
(declare-fun temp980_21 () (_ BitVec 64))
(declare-fun temp980_22 () (_ BitVec 64))
(declare-fun temp980_23 () (_ BitVec 64))
(declare-fun temp980_24 () (_ BitVec 64))
(declare-fun temp980_25 () (_ BitVec 64))
(declare-fun temp980_26 () (_ BitVec 64))
(declare-fun temp980_27 () (_ BitVec 64))
(declare-fun temp980_28 () (_ BitVec 64))
(declare-fun temp980_29 () (_ BitVec 64))
(declare-fun temp980_30 () (_ BitVec 64))
(declare-fun temp980_31 () (_ BitVec 64))
(declare-fun temp980_32 () (_ BitVec 64))
(declare-fun temp980_33 () (_ BitVec 64))
(declare-fun temp980_34 () (_ BitVec 64))
(declare-fun temp980_35 () (_ BitVec 64))
(declare-fun temp980_36 () (_ BitVec 64))
(declare-fun temp980_37 () (_ BitVec 64))
(declare-fun temp980_38 () (_ BitVec 64))
(declare-fun temp980_39 () (_ BitVec 64))
(declare-fun temp980_40 () (_ BitVec 64))
(declare-fun temp980_41 () (_ BitVec 64))
(declare-fun temp980_42 () (_ BitVec 64))
(declare-fun temp980_43 () (_ BitVec 64))
(declare-fun temp980_44 () (_ BitVec 64))
(declare-fun temp980_45 () (_ BitVec 64))
(declare-fun temp980_46 () (_ BitVec 64))
(declare-fun temp980_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp980_48 () (_ BitVec 64))
(declare-fun temp980_49 () (_ BitVec 64))
(declare-fun temp980_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_51 () (_ BitVec 64))
(declare-fun temp980_52 () (_ BitVec 64))
(declare-fun temp980_53 () (_ BitVec 64))
(declare-fun temp980_54 () (_ BitVec 64))
(declare-fun temp980_55 () (_ BitVec 64))
(declare-fun temp980_56 () (_ BitVec 64))
(declare-fun temp980_57 () (_ BitVec 64))
(declare-fun temp980_58 () (_ BitVec 64))
(declare-fun temp980_59 () (_ BitVec 64))
(declare-fun temp980_60 () (_ BitVec 64))
(declare-fun temp980_61 () (_ BitVec 64))
(declare-fun temp980_62 () (_ BitVec 64))
(declare-fun temp980_63 () (_ BitVec 64))
(declare-fun temp980_64 () (_ BitVec 64))
(declare-fun temp980_65 () (_ BitVec 64))
(declare-fun temp980_66 () (_ BitVec 64))
(declare-fun temp980_67 () (_ BitVec 64))
(declare-fun temp980_68 () (_ BitVec 64))
(declare-fun temp980_69 () (_ BitVec 64))
(declare-fun temp980_70 () (_ BitVec 64))
(declare-fun temp980_71 () (_ BitVec 64))
(declare-fun temp980_72 () (_ BitVec 64))
(declare-fun temp980_73 () (_ BitVec 64))
(declare-fun temp980_74 () (_ BitVec 64))
(declare-fun temp980_75 () (_ BitVec 64))
(declare-fun temp980_76 () (_ BitVec 64))
(declare-fun temp980_77 () (_ BitVec 64))
(declare-fun temp980_78 () (_ BitVec 64))
(declare-fun temp980_79 () (_ BitVec 64))
(declare-fun temp980_80 () (_ BitVec 64))
(declare-fun temp980_81 () (_ BitVec 64))
(declare-fun temp980_82 () (_ BitVec 64))
(declare-fun temp980_83 () (_ BitVec 64))
(declare-fun temp980_84 () (_ BitVec 64))
(declare-fun temp980_85 () (_ BitVec 64))
(declare-fun temp980_86 () (_ BitVec 64))
(declare-fun temp980_87 () (_ BitVec 64))
(declare-fun temp980_88 () (_ BitVec 64))
(declare-fun temp980_89 () (_ BitVec 64))
(declare-fun temp980_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp980_91 () (_ BitVec 64))
(declare-fun temp980_92 () (_ BitVec 64))
(declare-fun temp980_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_94 () (_ BitVec 64))
(declare-fun temp980_95 () (_ BitVec 64))
(declare-fun temp980_96 () (_ BitVec 64))
(declare-fun temp980_97 () (_ BitVec 64))
(declare-fun temp980_98 () (_ BitVec 64))
(declare-fun temp980_99 () (_ BitVec 64))
(declare-fun temp980_100 () (_ BitVec 64))
(declare-fun temp980_101 () (_ BitVec 64))
(declare-fun temp980_102 () (_ BitVec 64))
(declare-fun temp980_103 () (_ BitVec 64))
(declare-fun temp980_104 () (_ BitVec 64))
(declare-fun temp980_105 () (_ BitVec 64))
(declare-fun temp980_106 () (_ BitVec 64))
(declare-fun temp980_107 () (_ BitVec 64))
(declare-fun temp980_108 () (_ BitVec 64))
(declare-fun temp980_109 () (_ BitVec 64))
(declare-fun temp980_110 () (_ BitVec 64))
(declare-fun temp980_111 () (_ BitVec 64))
(declare-fun temp980_112 () (_ BitVec 64))
(declare-fun temp980_113 () (_ BitVec 64))
(declare-fun temp980_114 () (_ BitVec 64))
(declare-fun temp980_115 () (_ BitVec 64))
(declare-fun temp980_116 () (_ BitVec 64))
(declare-fun temp980_117 () (_ BitVec 64))
(declare-fun temp980_118 () (_ BitVec 64))
(declare-fun temp980_119 () (_ BitVec 64))
(declare-fun temp980_120 () (_ BitVec 64))
(declare-fun temp980_121 () (_ BitVec 64))
(declare-fun temp980_122 () (_ BitVec 64))
(declare-fun temp980_123 () (_ BitVec 64))
(declare-fun temp980_124 () (_ BitVec 64))
(declare-fun temp980_125 () (_ BitVec 64))
(declare-fun temp980_126 () (_ BitVec 64))
(declare-fun temp980_127 () (_ BitVec 64))
(declare-fun temp980_128 () (_ BitVec 64))
(declare-fun temp980_129 () (_ BitVec 64))
(declare-fun temp980_130 () (_ BitVec 64))
(declare-fun temp980_131 () (_ BitVec 64))
(declare-fun temp980_132 () (_ BitVec 64))
(declare-fun temp980_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp980_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp980_135 () (_ BitVec 64))
(declare-fun temp980_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp980_137 () (_ BitVec 64))
(declare-fun temp980_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_139 () (_ BitVec 64))
(declare-fun temp980_140 () (_ BitVec 64))
(declare-fun temp980_141 () (_ BitVec 64))
(declare-fun temp980_142 () (_ BitVec 64))
(declare-fun temp980_143 () (_ BitVec 64))
(declare-fun temp980_144 () (_ BitVec 64))
(declare-fun temp980_145 () (_ BitVec 64))
(declare-fun temp980_146 () (_ BitVec 64))
(declare-fun temp980_147 () (_ BitVec 64))
(declare-fun temp980_148 () (_ BitVec 64))
(declare-fun temp980_149 () (_ BitVec 64))
(declare-fun temp980_150 () (_ BitVec 64))
(declare-fun temp980_151 () (_ BitVec 64))
(declare-fun temp980_152 () (_ BitVec 64))
(declare-fun temp980_153 () (_ BitVec 64))
(declare-fun temp980_154 () (_ BitVec 64))
(declare-fun temp980_156 () (_ BitVec 64))
(declare-fun temp980_157 () (_ BitVec 64))
(declare-fun temp980_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp980_158 () (_ BitVec 64))
(declare-fun temp980_159 () (_ BitVec 64))
(declare-fun temp980_161 () (_ BitVec 64))
(declare-fun temp980_162 () (_ BitVec 64))
(declare-fun temp980_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp980_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp980_164 () (_ BitVec 64))
(declare-fun temp980_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp980_166 () (_ BitVec 64))
(declare-fun temp980_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp980_168 () (_ BitVec 64))
(declare-fun temp980_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_170 () (_ BitVec 64))
(declare-fun temp980_171 () (_ BitVec 64))
(declare-fun temp980_172 () (_ BitVec 64))
(declare-fun temp980_173 () (_ BitVec 64))
(declare-fun temp980_174 () (_ BitVec 64))
(declare-fun temp980_175 () (_ BitVec 64))
(declare-fun temp980_176 () (_ BitVec 64))
(declare-fun temp980_177 () (_ BitVec 64))
(declare-fun temp980_178 () (_ BitVec 64))
(declare-fun temp980_179 () (_ BitVec 64))
(declare-fun temp980_180 () (_ BitVec 64))
(declare-fun temp980_181 () (_ BitVec 64))
(declare-fun temp980_182 () (_ BitVec 64))
(declare-fun temp980_183 () (_ BitVec 64))
(declare-fun temp980_184 () (_ BitVec 64))
(declare-fun temp980_185 () (_ BitVec 64))
(declare-fun temp980_186 () (_ BitVec 64))
(declare-fun temp980_187 () (_ BitVec 64))
(declare-fun temp980_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp980_189 () (_ BitVec 64))
(declare-fun temp980_191 () (_ BitVec 64))
(declare-fun temp980_192 () (_ BitVec 64))
(declare-fun temp980_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp980_193 () (_ BitVec 64))
(declare-fun temp980_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp980_195 () (_ BitVec 64))
(declare-fun temp980_196 () (_ BitVec 64))
(declare-fun temp980_197 () (_ BitVec 64))
(declare-fun temp980_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_199 () (_ BitVec 64))
(declare-fun temp980_200 () (_ BitVec 64))
(declare-fun temp980_201 () (_ BitVec 64))
(declare-fun temp980_202 () (_ BitVec 64))
(declare-fun temp980_203 () (_ BitVec 64))
(declare-fun temp980_204 () (_ BitVec 64))
(declare-fun temp980_205 () (_ BitVec 64))
(declare-fun temp980_206 () (_ BitVec 64))
(declare-fun temp980_207 () (_ BitVec 64))
(declare-fun temp980_208 () (_ BitVec 64))
(declare-fun temp980_209 () (_ BitVec 64))
(declare-fun temp980_210 () (_ BitVec 64))
(declare-fun temp980_211 () (_ BitVec 64))
(declare-fun temp980_212 () (_ BitVec 64))
(declare-fun temp980_213 () (_ BitVec 64))
(declare-fun temp980_214 () (_ BitVec 64))
(declare-fun temp980_215 () (_ BitVec 64))
(declare-fun temp980_216 () (_ BitVec 64))
(declare-fun temp980_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp980_218 () (_ BitVec 64))
(declare-fun temp980_220 () (_ BitVec 64))
(declare-fun temp980_221 () (_ BitVec 64))
(declare-fun temp980_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp980_222 () (_ BitVec 64))
(declare-fun temp980_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp980_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp980_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp980_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp980_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp980_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp980_229 () (_ BitVec 64))
(declare-fun temp980_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp980_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp980_232 () (_ BitVec 64))
(declare-fun temp980_233 () (_ BitVec 64))
(declare-fun temp980_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp980_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp980_236 () (_ BitVec 64))
(declare-fun temp980_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp980_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp980_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp980_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp980_241 () (_ BitVec 64))
(declare-fun temp980_242 () (_ BitVec 64))
(declare-fun var8074004 () (_ BitVec 64))
(declare-fun var8073971 () (_ BitVec 64))
(declare-fun var7942535 () (_ BitVec 64))
(declare-fun var7942531 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp980_243 () (_ BitVec 64))
(assert (= temp980_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp980_1)))
(assert (= temp980_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp980_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_3 #x0000000000000000))
(assert (= var79869 temp980_3))
(assert (= temp980_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp980_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_5 #x0000000000000000))
(assert (= var79914 temp980_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp980_6 #x0000000000000000))
(assert (= temp980_7 temp980_6))
(assert (= temp980_8 (select ARGNAME_padding_NAMEEND_VAL temp980_7)))
(assert (= temp980_9 #x0000000000000001))
(assert (= temp980_10 temp980_9))
(assert (= temp980_11 (select ARGNAME_padding_NAMEEND_VAL temp980_10)))
(assert (= temp980_12 #x0000000000000002))
(assert (= temp980_13 temp980_12))
(assert (= temp980_14 (select ARGNAME_padding_NAMEEND_VAL temp980_13)))
(assert (= temp980_15 #x0000000000000003))
(assert (= temp980_16 temp980_15))
(assert (= temp980_17 (select ARGNAME_padding_NAMEEND_VAL temp980_16)))
(assert (= temp980_18 #x0000000000000004))
(assert (= temp980_19 temp980_18))
(assert (= temp980_20 (select ARGNAME_padding_NAMEEND_VAL temp980_19)))
(assert (= temp980_21 #x0000000000000005))
(assert (= temp980_22 temp980_21))
(assert (= temp980_23 (select ARGNAME_padding_NAMEEND_VAL temp980_22)))
(assert (= temp980_24 #x0000000000000000))
(assert (= temp980_25 #x0000000000000000))
(assert (= temp980_26 temp980_25))
(assert (= temp980_27 (select ARGNAME_padding_NAMEEND_VAL temp980_26)))
(assert (= temp980_28 #x0000000000000000))
(assert (= temp980_29 #x0000000000000001))
(assert (= temp980_30 temp980_29))
(assert (= temp980_31 (select ARGNAME_padding_NAMEEND_VAL temp980_30)))
(assert (= temp980_32 #x0000000000000000))
(assert (= temp980_33 #x0000000000000002))
(assert (= temp980_34 temp980_33))
(assert (= temp980_35 (select ARGNAME_padding_NAMEEND_VAL temp980_34)))
(assert (= temp980_36 #x0000000000000000))
(assert (= temp980_37 #x0000000000000003))
(assert (= temp980_38 temp980_37))
(assert (= temp980_39 (select ARGNAME_padding_NAMEEND_VAL temp980_38)))
(assert (= temp980_40 #x0000000000000000))
(assert (= temp980_41 #x0000000000000004))
(assert (= temp980_42 temp980_41))
(assert (= temp980_43 (select ARGNAME_padding_NAMEEND_VAL temp980_42)))
(assert (= temp980_44 #x0000000000000000))
(assert (= temp980_45 #x0000000000000005))
(assert (= temp980_46 temp980_45))
(assert (= temp980_47 (select ARGNAME_padding_NAMEEND_VAL temp980_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp980_27 temp980_24)
             (bvslt temp980_31 temp980_28)
             (bvslt temp980_35 temp980_32)
             (bvslt temp980_39 temp980_36)
             (bvslt temp980_43 temp980_40)
             (bvslt temp980_47 temp980_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_48 #x0000000000000000))
(assert (= var1322786 temp980_48))
(assert (= temp980_49 #x0000000000000000))
(assert (= temp980_50 temp980_49))
(assert (= temp980_51 (select ARGNAME_output_padding_NAMEEND_VAL temp980_50)))
(assert (= temp980_52 #x0000000000000001))
(assert (= temp980_53 temp980_52))
(assert (= temp980_54 (select ARGNAME_output_padding_NAMEEND_VAL temp980_53)))
(assert (= temp980_55 #x0000000000000002))
(assert (= temp980_56 temp980_55))
(assert (= temp980_57 (select ARGNAME_output_padding_NAMEEND_VAL temp980_56)))
(assert (= temp980_58 #x0000000000000003))
(assert (= temp980_59 temp980_58))
(assert (= temp980_60 (select ARGNAME_output_padding_NAMEEND_VAL temp980_59)))
(assert (= temp980_61 #x0000000000000004))
(assert (= temp980_62 temp980_61))
(assert (= temp980_63 (select ARGNAME_output_padding_NAMEEND_VAL temp980_62)))
(assert (= temp980_64 #x0000000000000005))
(assert (= temp980_65 temp980_64))
(assert (= temp980_66 (select ARGNAME_output_padding_NAMEEND_VAL temp980_65)))
(assert (= temp980_67 #x0000000000000000))
(assert (= temp980_68 #x0000000000000000))
(assert (= temp980_69 temp980_68))
(assert (= temp980_70 (select ARGNAME_output_padding_NAMEEND_VAL temp980_69)))
(assert (= temp980_71 #x0000000000000000))
(assert (= temp980_72 #x0000000000000001))
(assert (= temp980_73 temp980_72))
(assert (= temp980_74 (select ARGNAME_output_padding_NAMEEND_VAL temp980_73)))
(assert (= temp980_75 #x0000000000000000))
(assert (= temp980_76 #x0000000000000002))
(assert (= temp980_77 temp980_76))
(assert (= temp980_78 (select ARGNAME_output_padding_NAMEEND_VAL temp980_77)))
(assert (= temp980_79 #x0000000000000000))
(assert (= temp980_80 #x0000000000000003))
(assert (= temp980_81 temp980_80))
(assert (= temp980_82 (select ARGNAME_output_padding_NAMEEND_VAL temp980_81)))
(assert (= temp980_83 #x0000000000000000))
(assert (= temp980_84 #x0000000000000004))
(assert (= temp980_85 temp980_84))
(assert (= temp980_86 (select ARGNAME_output_padding_NAMEEND_VAL temp980_85)))
(assert (= temp980_87 #x0000000000000000))
(assert (= temp980_88 #x0000000000000005))
(assert (= temp980_89 temp980_88))
(assert (= temp980_90 (select ARGNAME_output_padding_NAMEEND_VAL temp980_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp980_70 temp980_67)
             (bvslt temp980_74 temp980_71)
             (bvslt temp980_78 temp980_75)
             (bvslt temp980_82 temp980_79)
             (bvslt temp980_86 temp980_83)
             (bvslt temp980_90 temp980_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_91 #x0000000000000000))
(assert (= var1322797 temp980_91))
(assert (= temp980_92 #x0000000000000000))
(assert (= temp980_93 temp980_92))
(assert (= temp980_94 (select ARGNAME_stride_NAMEEND_VAL temp980_93)))
(assert (= temp980_95 #x0000000000000001))
(assert (= temp980_96 temp980_95))
(assert (= temp980_97 (select ARGNAME_stride_NAMEEND_VAL temp980_96)))
(assert (= temp980_98 #x0000000000000002))
(assert (= temp980_99 temp980_98))
(assert (= temp980_100 (select ARGNAME_stride_NAMEEND_VAL temp980_99)))
(assert (= temp980_101 #x0000000000000003))
(assert (= temp980_102 temp980_101))
(assert (= temp980_103 (select ARGNAME_stride_NAMEEND_VAL temp980_102)))
(assert (= temp980_104 #x0000000000000004))
(assert (= temp980_105 temp980_104))
(assert (= temp980_106 (select ARGNAME_stride_NAMEEND_VAL temp980_105)))
(assert (= temp980_107 #x0000000000000005))
(assert (= temp980_108 temp980_107))
(assert (= temp980_109 (select ARGNAME_stride_NAMEEND_VAL temp980_108)))
(assert (= temp980_110 #x0000000000000000))
(assert (= temp980_111 #x0000000000000000))
(assert (= temp980_112 temp980_111))
(assert (= temp980_113 (select ARGNAME_stride_NAMEEND_VAL temp980_112)))
(assert (= temp980_114 #x0000000000000000))
(assert (= temp980_115 #x0000000000000001))
(assert (= temp980_116 temp980_115))
(assert (= temp980_117 (select ARGNAME_stride_NAMEEND_VAL temp980_116)))
(assert (= temp980_118 #x0000000000000000))
(assert (= temp980_119 #x0000000000000002))
(assert (= temp980_120 temp980_119))
(assert (= temp980_121 (select ARGNAME_stride_NAMEEND_VAL temp980_120)))
(assert (= temp980_122 #x0000000000000000))
(assert (= temp980_123 #x0000000000000003))
(assert (= temp980_124 temp980_123))
(assert (= temp980_125 (select ARGNAME_stride_NAMEEND_VAL temp980_124)))
(assert (= temp980_126 #x0000000000000000))
(assert (= temp980_127 #x0000000000000004))
(assert (= temp980_128 temp980_127))
(assert (= temp980_129 (select ARGNAME_stride_NAMEEND_VAL temp980_128)))
(assert (= temp980_130 #x0000000000000000))
(assert (= temp980_131 #x0000000000000005))
(assert (= temp980_132 temp980_131))
(assert (= temp980_133 (select ARGNAME_stride_NAMEEND_VAL temp980_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp980_113 temp980_110)
             (bvsle temp980_117 temp980_114)
             (bvsle temp980_121 temp980_118)
             (bvsle temp980_125 temp980_122)
             (bvsle temp980_129 temp980_126)
             (bvsle temp980_133 temp980_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_134 #x0000000000000000))
(assert (= var1322807 temp980_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_135 #x0000000000000001))
(assert (= var1322819 temp980_135))
(assert (= temp980_136 #x0000000000000000))
(assert (= var1310898 temp980_136))
(assert (= temp980_137 #x0000000000000000))
(assert (= temp980_138 temp980_137))
(assert (= temp980_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_138)))
(assert (= temp980_140 #x0000000000000001))
(assert (= temp980_141 temp980_140))
(assert (= temp980_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_141)))
(assert (= temp980_143 #x0000000000000002))
(assert (= temp980_144 temp980_143))
(assert (= temp980_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_144)))
(assert (= temp980_146 #x0000000000000003))
(assert (= temp980_147 temp980_146))
(assert (= temp980_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_147)))
(assert (= temp980_149 #x0000000000000004))
(assert (= temp980_150 temp980_149))
(assert (= temp980_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_150)))
(assert (= temp980_152 #x0000000000000005))
(assert (= temp980_153 temp980_152))
(assert (= temp980_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_153)))
(assert (= temp980_156 var1310898))
(assert (= temp980_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_156)))
(assert (= temp980_155 temp980_157))
(assert (= var1322852
   (ite (bvslt temp980_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_158 #x0000000000000000))
(assert (= var1322852 temp980_158))
(assert (= temp980_159 #x0000000000000000))
(assert (= var1310898 temp980_159))
(assert (= temp980_161 var1310898))
(assert (= temp980_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_161)))
(assert (= temp980_160 temp980_162))
(assert (= var1322874 (bvsmod temp980_160 ARGNAME_groups_NAMEEND)))
(assert (= temp980_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp980_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_164 #x0000000000000001))
(assert (= var1322875 temp980_164))
(assert (= temp980_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp980_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_166 #x0000000000000001))
(assert (= var1322895 temp980_166))
(assert (= temp980_167 #x0000000000000001))
(assert (= var1311786 temp980_167))
(assert (= temp980_168 #x0000000000000000))
(assert (= temp980_169 temp980_168))
(assert (= temp980_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_169)))
(assert (= temp980_171 #x0000000000000001))
(assert (= temp980_172 temp980_171))
(assert (= temp980_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_172)))
(assert (= temp980_174 #x0000000000000002))
(assert (= temp980_175 temp980_174))
(assert (= temp980_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_175)))
(assert (= temp980_177 #x0000000000000003))
(assert (= temp980_178 temp980_177))
(assert (= temp980_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_178)))
(assert (= temp980_180 #x0000000000000004))
(assert (= temp980_181 temp980_180))
(assert (= temp980_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_181)))
(assert (= temp980_183 #x0000000000000005))
(assert (= temp980_184 temp980_183))
(assert (= temp980_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_184)))
(assert (= temp980_186 #x0000000000000000))
(assert (= temp980_187
   (ite (bvslt var1311786 temp980_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp980_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_187)))
(assert (= var1322903 temp980_188))
(assert (bvslt (ite (bvslt var1311786 temp980_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp980_189 #x0000000000000001))
(assert (= var1311786 temp980_189))
(assert (= temp980_191 var1311786))
(assert (= temp980_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_191)))
(assert (= temp980_190 temp980_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp980_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_193 #x0000000000000001))
(assert (= var1322908 temp980_193))
(assert (= temp980_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp980_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_195 #x0000000000000001))
(assert (= var1322975 temp980_195))
(assert (= temp980_196 #x0000000000000000))
(assert (= var1310898 temp980_196))
(assert (= temp980_197 #x0000000000000000))
(assert (= temp980_198 temp980_197))
(assert (= temp980_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp980_198)))
(assert (= temp980_200 #x0000000000000001))
(assert (= temp980_201 temp980_200))
(assert (= temp980_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp980_201)))
(assert (= temp980_203 #x0000000000000002))
(assert (= temp980_204 temp980_203))
(assert (= temp980_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp980_204)))
(assert (= temp980_206 #x0000000000000003))
(assert (= temp980_207 temp980_206))
(assert (= temp980_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp980_207)))
(assert (= temp980_209 #x0000000000000004))
(assert (= temp980_210 temp980_209))
(assert (= temp980_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp980_210)))
(assert (= temp980_212 #x0000000000000005))
(assert (= temp980_213 temp980_212))
(assert (= temp980_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp980_213)))
(assert (= temp980_215 #x0000000000000000))
(assert (= temp980_216
   (ite (bvslt var1310898 temp980_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp980_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp980_216)))
(assert (= var1322977 temp980_217))
(assert (bvslt (ite (bvslt var1310898 temp980_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp980_218 #x0000000000000000))
(assert (= var1310898 temp980_218))
(assert (= temp980_220 var1310898))
(assert (= temp980_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_220)))
(assert (= temp980_219 temp980_221))
(assert (= var1322980
   (ite (= var1322977 temp980_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_222 #x0000000000000001))
(assert (= var1322980 temp980_222))
(assert (= temp980_223 #x0000000000000002))
(assert (= var1848169 temp980_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp980_225 #x0000000000000001))
(assert (= var1323065 temp980_225))
(assert (= temp980_226 #x0000000000000001))
(assert (= var3486735 temp980_226))
(assert (= temp980_227 #x0000000000000001))
(assert (= var3814415 temp980_227))
(assert (= temp980_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp980_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_229 #x0000000000000001))
(assert (= var79986 temp980_229))
(assert (= temp980_230 #x0000000000000001))
(assert (= var80116 temp980_230))
(assert (= var4796905 var80116))
(assert (= temp980_231 #x0000000000000000))
(assert (= var4784306 temp980_231))
(assert (= temp980_232 #x0000000000000000))
(assert (= temp980_233
   (ite (bvslt var4784306 temp980_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp980_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_233)))
(assert (= var4796924 temp980_234))
(assert (bvslt (ite (bvslt var4784306 temp980_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp980_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp980_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_236 #x0000000000000001))
(assert (= var4796925 temp980_236))
(assert (= temp980_237 #x0000000000000000))
(assert (= var4996927 temp980_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp980_238 #x0000000000000002))
(assert (= var5125763 temp980_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_239 #x0000000000000000))
(assert (= var5191324 temp980_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp980_240 #x0000000000000000))
(assert (= var6631824 temp980_240))
(assert (= temp980_241 #x0000000000000001))
(assert (= var79986 temp980_241))
(assert (= temp980_242 #x0000000000000000))
(assert (= var8074004 temp980_242))
(assert (= var8073971 var8074004))
(assert (= var7942535 var8073971))
(assert (= var7942531 var7942535))
(assert (= var81597 var7942531))
(assert (= temp980_243 #x0000000000000000))
(assert (= var81597 temp980_243))
(model-add temp980_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp980_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp980_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






