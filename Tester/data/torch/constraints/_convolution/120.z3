(declare-fun temp158_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp158_2 () (_ BitVec 64))
(declare-fun temp158_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp158_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp158_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp158_6 () (_ BitVec 64))
(declare-fun temp158_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_8 () (_ BitVec 64))
(declare-fun temp158_9 () (_ BitVec 64))
(declare-fun temp158_10 () (_ BitVec 64))
(declare-fun temp158_11 () (_ BitVec 64))
(declare-fun temp158_12 () (_ BitVec 64))
(declare-fun temp158_13 () (_ BitVec 64))
(declare-fun temp158_14 () (_ BitVec 64))
(declare-fun temp158_15 () (_ BitVec 64))
(declare-fun temp158_16 () (_ BitVec 64))
(declare-fun temp158_17 () (_ BitVec 64))
(declare-fun temp158_18 () (_ BitVec 64))
(declare-fun temp158_19 () (_ BitVec 64))
(declare-fun temp158_20 () (_ BitVec 64))
(declare-fun temp158_21 () (_ BitVec 64))
(declare-fun temp158_22 () (_ BitVec 64))
(declare-fun temp158_23 () (_ BitVec 64))
(declare-fun temp158_24 () (_ BitVec 64))
(declare-fun temp158_25 () (_ BitVec 64))
(declare-fun temp158_26 () (_ BitVec 64))
(declare-fun temp158_27 () (_ BitVec 64))
(declare-fun temp158_28 () (_ BitVec 64))
(declare-fun temp158_29 () (_ BitVec 64))
(declare-fun temp158_30 () (_ BitVec 64))
(declare-fun temp158_31 () (_ BitVec 64))
(declare-fun temp158_32 () (_ BitVec 64))
(declare-fun temp158_33 () (_ BitVec 64))
(declare-fun temp158_34 () (_ BitVec 64))
(declare-fun temp158_35 () (_ BitVec 64))
(declare-fun temp158_36 () (_ BitVec 64))
(declare-fun temp158_37 () (_ BitVec 64))
(declare-fun temp158_38 () (_ BitVec 64))
(declare-fun temp158_39 () (_ BitVec 64))
(declare-fun temp158_40 () (_ BitVec 64))
(declare-fun temp158_41 () (_ BitVec 64))
(declare-fun temp158_42 () (_ BitVec 64))
(declare-fun temp158_43 () (_ BitVec 64))
(declare-fun temp158_44 () (_ BitVec 64))
(declare-fun temp158_45 () (_ BitVec 64))
(declare-fun temp158_46 () (_ BitVec 64))
(declare-fun temp158_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp158_48 () (_ BitVec 64))
(declare-fun temp158_49 () (_ BitVec 64))
(declare-fun temp158_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_51 () (_ BitVec 64))
(declare-fun temp158_52 () (_ BitVec 64))
(declare-fun temp158_53 () (_ BitVec 64))
(declare-fun temp158_54 () (_ BitVec 64))
(declare-fun temp158_55 () (_ BitVec 64))
(declare-fun temp158_56 () (_ BitVec 64))
(declare-fun temp158_57 () (_ BitVec 64))
(declare-fun temp158_58 () (_ BitVec 64))
(declare-fun temp158_59 () (_ BitVec 64))
(declare-fun temp158_60 () (_ BitVec 64))
(declare-fun temp158_61 () (_ BitVec 64))
(declare-fun temp158_62 () (_ BitVec 64))
(declare-fun temp158_63 () (_ BitVec 64))
(declare-fun temp158_64 () (_ BitVec 64))
(declare-fun temp158_65 () (_ BitVec 64))
(declare-fun temp158_66 () (_ BitVec 64))
(declare-fun temp158_67 () (_ BitVec 64))
(declare-fun temp158_68 () (_ BitVec 64))
(declare-fun temp158_69 () (_ BitVec 64))
(declare-fun temp158_70 () (_ BitVec 64))
(declare-fun temp158_71 () (_ BitVec 64))
(declare-fun temp158_72 () (_ BitVec 64))
(declare-fun temp158_73 () (_ BitVec 64))
(declare-fun temp158_74 () (_ BitVec 64))
(declare-fun temp158_75 () (_ BitVec 64))
(declare-fun temp158_76 () (_ BitVec 64))
(declare-fun temp158_77 () (_ BitVec 64))
(declare-fun temp158_78 () (_ BitVec 64))
(declare-fun temp158_79 () (_ BitVec 64))
(declare-fun temp158_80 () (_ BitVec 64))
(declare-fun temp158_81 () (_ BitVec 64))
(declare-fun temp158_82 () (_ BitVec 64))
(declare-fun temp158_83 () (_ BitVec 64))
(declare-fun temp158_84 () (_ BitVec 64))
(declare-fun temp158_85 () (_ BitVec 64))
(declare-fun temp158_86 () (_ BitVec 64))
(declare-fun temp158_87 () (_ BitVec 64))
(declare-fun temp158_88 () (_ BitVec 64))
(declare-fun temp158_89 () (_ BitVec 64))
(declare-fun temp158_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp158_91 () (_ BitVec 64))
(declare-fun temp158_92 () (_ BitVec 64))
(declare-fun temp158_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_94 () (_ BitVec 64))
(declare-fun temp158_95 () (_ BitVec 64))
(declare-fun temp158_96 () (_ BitVec 64))
(declare-fun temp158_97 () (_ BitVec 64))
(declare-fun temp158_98 () (_ BitVec 64))
(declare-fun temp158_99 () (_ BitVec 64))
(declare-fun temp158_100 () (_ BitVec 64))
(declare-fun temp158_101 () (_ BitVec 64))
(declare-fun temp158_102 () (_ BitVec 64))
(declare-fun temp158_103 () (_ BitVec 64))
(declare-fun temp158_104 () (_ BitVec 64))
(declare-fun temp158_105 () (_ BitVec 64))
(declare-fun temp158_106 () (_ BitVec 64))
(declare-fun temp158_107 () (_ BitVec 64))
(declare-fun temp158_108 () (_ BitVec 64))
(declare-fun temp158_109 () (_ BitVec 64))
(declare-fun temp158_110 () (_ BitVec 64))
(declare-fun temp158_111 () (_ BitVec 64))
(declare-fun temp158_112 () (_ BitVec 64))
(declare-fun temp158_113 () (_ BitVec 64))
(declare-fun temp158_114 () (_ BitVec 64))
(declare-fun temp158_115 () (_ BitVec 64))
(declare-fun temp158_116 () (_ BitVec 64))
(declare-fun temp158_117 () (_ BitVec 64))
(declare-fun temp158_118 () (_ BitVec 64))
(declare-fun temp158_119 () (_ BitVec 64))
(declare-fun temp158_120 () (_ BitVec 64))
(declare-fun temp158_121 () (_ BitVec 64))
(declare-fun temp158_122 () (_ BitVec 64))
(declare-fun temp158_123 () (_ BitVec 64))
(declare-fun temp158_124 () (_ BitVec 64))
(declare-fun temp158_125 () (_ BitVec 64))
(declare-fun temp158_126 () (_ BitVec 64))
(declare-fun temp158_127 () (_ BitVec 64))
(declare-fun temp158_128 () (_ BitVec 64))
(declare-fun temp158_129 () (_ BitVec 64))
(declare-fun temp158_130 () (_ BitVec 64))
(declare-fun temp158_131 () (_ BitVec 64))
(declare-fun temp158_132 () (_ BitVec 64))
(declare-fun temp158_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp158_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp158_135 () (_ BitVec 64))
(declare-fun temp158_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp158_137 () (_ BitVec 64))
(declare-fun temp158_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_139 () (_ BitVec 64))
(declare-fun temp158_140 () (_ BitVec 64))
(declare-fun temp158_141 () (_ BitVec 64))
(declare-fun temp158_142 () (_ BitVec 64))
(declare-fun temp158_143 () (_ BitVec 64))
(declare-fun temp158_144 () (_ BitVec 64))
(declare-fun temp158_145 () (_ BitVec 64))
(declare-fun temp158_146 () (_ BitVec 64))
(declare-fun temp158_147 () (_ BitVec 64))
(declare-fun temp158_148 () (_ BitVec 64))
(declare-fun temp158_149 () (_ BitVec 64))
(declare-fun temp158_150 () (_ BitVec 64))
(declare-fun temp158_151 () (_ BitVec 64))
(declare-fun temp158_152 () (_ BitVec 64))
(declare-fun temp158_153 () (_ BitVec 64))
(declare-fun temp158_154 () (_ BitVec 64))
(declare-fun temp158_156 () (_ BitVec 64))
(declare-fun temp158_157 () (_ BitVec 64))
(declare-fun temp158_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp158_158 () (_ BitVec 64))
(declare-fun temp158_159 () (_ BitVec 64))
(declare-fun temp158_161 () (_ BitVec 64))
(declare-fun temp158_162 () (_ BitVec 64))
(declare-fun temp158_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp158_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp158_164 () (_ BitVec 64))
(declare-fun temp158_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp158_166 () (_ BitVec 64))
(declare-fun temp158_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp158_168 () (_ BitVec 64))
(declare-fun temp158_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_170 () (_ BitVec 64))
(declare-fun temp158_171 () (_ BitVec 64))
(declare-fun temp158_172 () (_ BitVec 64))
(declare-fun temp158_173 () (_ BitVec 64))
(declare-fun temp158_174 () (_ BitVec 64))
(declare-fun temp158_175 () (_ BitVec 64))
(declare-fun temp158_176 () (_ BitVec 64))
(declare-fun temp158_177 () (_ BitVec 64))
(declare-fun temp158_178 () (_ BitVec 64))
(declare-fun temp158_179 () (_ BitVec 64))
(declare-fun temp158_180 () (_ BitVec 64))
(declare-fun temp158_181 () (_ BitVec 64))
(declare-fun temp158_182 () (_ BitVec 64))
(declare-fun temp158_183 () (_ BitVec 64))
(declare-fun temp158_184 () (_ BitVec 64))
(declare-fun temp158_185 () (_ BitVec 64))
(declare-fun temp158_186 () (_ BitVec 64))
(declare-fun temp158_187 () (_ BitVec 64))
(declare-fun temp158_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp158_189 () (_ BitVec 64))
(declare-fun temp158_191 () (_ BitVec 64))
(declare-fun temp158_192 () (_ BitVec 64))
(declare-fun temp158_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp158_193 () (_ BitVec 64))
(declare-fun temp158_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp158_195 () (_ BitVec 64))
(declare-fun temp158_196 () (_ BitVec 64))
(declare-fun temp158_197 () (_ BitVec 64))
(declare-fun temp158_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_199 () (_ BitVec 64))
(declare-fun temp158_200 () (_ BitVec 64))
(declare-fun temp158_201 () (_ BitVec 64))
(declare-fun temp158_202 () (_ BitVec 64))
(declare-fun temp158_203 () (_ BitVec 64))
(declare-fun temp158_204 () (_ BitVec 64))
(declare-fun temp158_205 () (_ BitVec 64))
(declare-fun temp158_206 () (_ BitVec 64))
(declare-fun temp158_207 () (_ BitVec 64))
(declare-fun temp158_208 () (_ BitVec 64))
(declare-fun temp158_209 () (_ BitVec 64))
(declare-fun temp158_210 () (_ BitVec 64))
(declare-fun temp158_211 () (_ BitVec 64))
(declare-fun temp158_212 () (_ BitVec 64))
(declare-fun temp158_213 () (_ BitVec 64))
(declare-fun temp158_214 () (_ BitVec 64))
(declare-fun temp158_215 () (_ BitVec 64))
(declare-fun temp158_216 () (_ BitVec 64))
(declare-fun temp158_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp158_218 () (_ BitVec 64))
(declare-fun temp158_220 () (_ BitVec 64))
(declare-fun temp158_221 () (_ BitVec 64))
(declare-fun temp158_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp158_222 () (_ BitVec 64))
(declare-fun temp158_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp158_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp158_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp158_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp158_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp158_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp158_229 () (_ BitVec 64))
(declare-fun temp158_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp158_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp158_232 () (_ BitVec 64))
(declare-fun temp158_233 () (_ BitVec 64))
(declare-fun temp158_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp158_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp158_236 () (_ BitVec 64))
(declare-fun temp158_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp158_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp158_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp158_241 () (_ BitVec 64))
(declare-fun temp158_240 () (_ BitVec 64))
(declare-fun temp158_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp158_243 () (_ BitVec 64))
(declare-fun temp158_244 () (_ BitVec 64))
(declare-fun temp158_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp158_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp158_247 () (_ BitVec 64))
(declare-fun temp158_248 () (_ BitVec 64))
(assert (= temp158_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp158_1)))
(assert (= temp158_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp158_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_3 #x0000000000000000))
(assert (= var79869 temp158_3))
(assert (= temp158_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp158_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_5 #x0000000000000000))
(assert (= var79914 temp158_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp158_6 #x0000000000000000))
(assert (= temp158_7 temp158_6))
(assert (= temp158_8 (select ARGNAME_padding_NAMEEND_VAL temp158_7)))
(assert (= temp158_9 #x0000000000000001))
(assert (= temp158_10 temp158_9))
(assert (= temp158_11 (select ARGNAME_padding_NAMEEND_VAL temp158_10)))
(assert (= temp158_12 #x0000000000000002))
(assert (= temp158_13 temp158_12))
(assert (= temp158_14 (select ARGNAME_padding_NAMEEND_VAL temp158_13)))
(assert (= temp158_15 #x0000000000000003))
(assert (= temp158_16 temp158_15))
(assert (= temp158_17 (select ARGNAME_padding_NAMEEND_VAL temp158_16)))
(assert (= temp158_18 #x0000000000000004))
(assert (= temp158_19 temp158_18))
(assert (= temp158_20 (select ARGNAME_padding_NAMEEND_VAL temp158_19)))
(assert (= temp158_21 #x0000000000000005))
(assert (= temp158_22 temp158_21))
(assert (= temp158_23 (select ARGNAME_padding_NAMEEND_VAL temp158_22)))
(assert (= temp158_24 #x0000000000000000))
(assert (= temp158_25 #x0000000000000000))
(assert (= temp158_26 temp158_25))
(assert (= temp158_27 (select ARGNAME_padding_NAMEEND_VAL temp158_26)))
(assert (= temp158_28 #x0000000000000000))
(assert (= temp158_29 #x0000000000000001))
(assert (= temp158_30 temp158_29))
(assert (= temp158_31 (select ARGNAME_padding_NAMEEND_VAL temp158_30)))
(assert (= temp158_32 #x0000000000000000))
(assert (= temp158_33 #x0000000000000002))
(assert (= temp158_34 temp158_33))
(assert (= temp158_35 (select ARGNAME_padding_NAMEEND_VAL temp158_34)))
(assert (= temp158_36 #x0000000000000000))
(assert (= temp158_37 #x0000000000000003))
(assert (= temp158_38 temp158_37))
(assert (= temp158_39 (select ARGNAME_padding_NAMEEND_VAL temp158_38)))
(assert (= temp158_40 #x0000000000000000))
(assert (= temp158_41 #x0000000000000004))
(assert (= temp158_42 temp158_41))
(assert (= temp158_43 (select ARGNAME_padding_NAMEEND_VAL temp158_42)))
(assert (= temp158_44 #x0000000000000000))
(assert (= temp158_45 #x0000000000000005))
(assert (= temp158_46 temp158_45))
(assert (= temp158_47 (select ARGNAME_padding_NAMEEND_VAL temp158_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp158_27 temp158_24)
             (bvslt temp158_31 temp158_28)
             (bvslt temp158_35 temp158_32)
             (bvslt temp158_39 temp158_36)
             (bvslt temp158_43 temp158_40)
             (bvslt temp158_47 temp158_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_48 #x0000000000000000))
(assert (= var1322786 temp158_48))
(assert (= temp158_49 #x0000000000000000))
(assert (= temp158_50 temp158_49))
(assert (= temp158_51 (select ARGNAME_output_padding_NAMEEND_VAL temp158_50)))
(assert (= temp158_52 #x0000000000000001))
(assert (= temp158_53 temp158_52))
(assert (= temp158_54 (select ARGNAME_output_padding_NAMEEND_VAL temp158_53)))
(assert (= temp158_55 #x0000000000000002))
(assert (= temp158_56 temp158_55))
(assert (= temp158_57 (select ARGNAME_output_padding_NAMEEND_VAL temp158_56)))
(assert (= temp158_58 #x0000000000000003))
(assert (= temp158_59 temp158_58))
(assert (= temp158_60 (select ARGNAME_output_padding_NAMEEND_VAL temp158_59)))
(assert (= temp158_61 #x0000000000000004))
(assert (= temp158_62 temp158_61))
(assert (= temp158_63 (select ARGNAME_output_padding_NAMEEND_VAL temp158_62)))
(assert (= temp158_64 #x0000000000000005))
(assert (= temp158_65 temp158_64))
(assert (= temp158_66 (select ARGNAME_output_padding_NAMEEND_VAL temp158_65)))
(assert (= temp158_67 #x0000000000000000))
(assert (= temp158_68 #x0000000000000000))
(assert (= temp158_69 temp158_68))
(assert (= temp158_70 (select ARGNAME_output_padding_NAMEEND_VAL temp158_69)))
(assert (= temp158_71 #x0000000000000000))
(assert (= temp158_72 #x0000000000000001))
(assert (= temp158_73 temp158_72))
(assert (= temp158_74 (select ARGNAME_output_padding_NAMEEND_VAL temp158_73)))
(assert (= temp158_75 #x0000000000000000))
(assert (= temp158_76 #x0000000000000002))
(assert (= temp158_77 temp158_76))
(assert (= temp158_78 (select ARGNAME_output_padding_NAMEEND_VAL temp158_77)))
(assert (= temp158_79 #x0000000000000000))
(assert (= temp158_80 #x0000000000000003))
(assert (= temp158_81 temp158_80))
(assert (= temp158_82 (select ARGNAME_output_padding_NAMEEND_VAL temp158_81)))
(assert (= temp158_83 #x0000000000000000))
(assert (= temp158_84 #x0000000000000004))
(assert (= temp158_85 temp158_84))
(assert (= temp158_86 (select ARGNAME_output_padding_NAMEEND_VAL temp158_85)))
(assert (= temp158_87 #x0000000000000000))
(assert (= temp158_88 #x0000000000000005))
(assert (= temp158_89 temp158_88))
(assert (= temp158_90 (select ARGNAME_output_padding_NAMEEND_VAL temp158_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp158_70 temp158_67)
             (bvslt temp158_74 temp158_71)
             (bvslt temp158_78 temp158_75)
             (bvslt temp158_82 temp158_79)
             (bvslt temp158_86 temp158_83)
             (bvslt temp158_90 temp158_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_91 #x0000000000000000))
(assert (= var1322797 temp158_91))
(assert (= temp158_92 #x0000000000000000))
(assert (= temp158_93 temp158_92))
(assert (= temp158_94 (select ARGNAME_stride_NAMEEND_VAL temp158_93)))
(assert (= temp158_95 #x0000000000000001))
(assert (= temp158_96 temp158_95))
(assert (= temp158_97 (select ARGNAME_stride_NAMEEND_VAL temp158_96)))
(assert (= temp158_98 #x0000000000000002))
(assert (= temp158_99 temp158_98))
(assert (= temp158_100 (select ARGNAME_stride_NAMEEND_VAL temp158_99)))
(assert (= temp158_101 #x0000000000000003))
(assert (= temp158_102 temp158_101))
(assert (= temp158_103 (select ARGNAME_stride_NAMEEND_VAL temp158_102)))
(assert (= temp158_104 #x0000000000000004))
(assert (= temp158_105 temp158_104))
(assert (= temp158_106 (select ARGNAME_stride_NAMEEND_VAL temp158_105)))
(assert (= temp158_107 #x0000000000000005))
(assert (= temp158_108 temp158_107))
(assert (= temp158_109 (select ARGNAME_stride_NAMEEND_VAL temp158_108)))
(assert (= temp158_110 #x0000000000000000))
(assert (= temp158_111 #x0000000000000000))
(assert (= temp158_112 temp158_111))
(assert (= temp158_113 (select ARGNAME_stride_NAMEEND_VAL temp158_112)))
(assert (= temp158_114 #x0000000000000000))
(assert (= temp158_115 #x0000000000000001))
(assert (= temp158_116 temp158_115))
(assert (= temp158_117 (select ARGNAME_stride_NAMEEND_VAL temp158_116)))
(assert (= temp158_118 #x0000000000000000))
(assert (= temp158_119 #x0000000000000002))
(assert (= temp158_120 temp158_119))
(assert (= temp158_121 (select ARGNAME_stride_NAMEEND_VAL temp158_120)))
(assert (= temp158_122 #x0000000000000000))
(assert (= temp158_123 #x0000000000000003))
(assert (= temp158_124 temp158_123))
(assert (= temp158_125 (select ARGNAME_stride_NAMEEND_VAL temp158_124)))
(assert (= temp158_126 #x0000000000000000))
(assert (= temp158_127 #x0000000000000004))
(assert (= temp158_128 temp158_127))
(assert (= temp158_129 (select ARGNAME_stride_NAMEEND_VAL temp158_128)))
(assert (= temp158_130 #x0000000000000000))
(assert (= temp158_131 #x0000000000000005))
(assert (= temp158_132 temp158_131))
(assert (= temp158_133 (select ARGNAME_stride_NAMEEND_VAL temp158_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp158_113 temp158_110)
             (bvsle temp158_117 temp158_114)
             (bvsle temp158_121 temp158_118)
             (bvsle temp158_125 temp158_122)
             (bvsle temp158_129 temp158_126)
             (bvsle temp158_133 temp158_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_134 #x0000000000000000))
(assert (= var1322807 temp158_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_135 #x0000000000000001))
(assert (= var1322819 temp158_135))
(assert (= temp158_136 #x0000000000000000))
(assert (= var1310898 temp158_136))
(assert (= temp158_137 #x0000000000000000))
(assert (= temp158_138 temp158_137))
(assert (= temp158_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_138)))
(assert (= temp158_140 #x0000000000000001))
(assert (= temp158_141 temp158_140))
(assert (= temp158_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_141)))
(assert (= temp158_143 #x0000000000000002))
(assert (= temp158_144 temp158_143))
(assert (= temp158_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_144)))
(assert (= temp158_146 #x0000000000000003))
(assert (= temp158_147 temp158_146))
(assert (= temp158_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_147)))
(assert (= temp158_149 #x0000000000000004))
(assert (= temp158_150 temp158_149))
(assert (= temp158_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_150)))
(assert (= temp158_152 #x0000000000000005))
(assert (= temp158_153 temp158_152))
(assert (= temp158_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_153)))
(assert (= temp158_156 var1310898))
(assert (= temp158_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_156)))
(assert (= temp158_155 temp158_157))
(assert (= var1322852
   (ite (bvslt temp158_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_158 #x0000000000000000))
(assert (= var1322852 temp158_158))
(assert (= temp158_159 #x0000000000000000))
(assert (= var1310898 temp158_159))
(assert (= temp158_161 var1310898))
(assert (= temp158_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_161)))
(assert (= temp158_160 temp158_162))
(assert (= var1322874 (bvsmod temp158_160 ARGNAME_groups_NAMEEND)))
(assert (= temp158_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp158_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_164 #x0000000000000001))
(assert (= var1322875 temp158_164))
(assert (= temp158_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp158_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_166 #x0000000000000001))
(assert (= var1322895 temp158_166))
(assert (= temp158_167 #x0000000000000001))
(assert (= var1311786 temp158_167))
(assert (= temp158_168 #x0000000000000000))
(assert (= temp158_169 temp158_168))
(assert (= temp158_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_169)))
(assert (= temp158_171 #x0000000000000001))
(assert (= temp158_172 temp158_171))
(assert (= temp158_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_172)))
(assert (= temp158_174 #x0000000000000002))
(assert (= temp158_175 temp158_174))
(assert (= temp158_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_175)))
(assert (= temp158_177 #x0000000000000003))
(assert (= temp158_178 temp158_177))
(assert (= temp158_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_178)))
(assert (= temp158_180 #x0000000000000004))
(assert (= temp158_181 temp158_180))
(assert (= temp158_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_181)))
(assert (= temp158_183 #x0000000000000005))
(assert (= temp158_184 temp158_183))
(assert (= temp158_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_184)))
(assert (= temp158_186 #x0000000000000000))
(assert (= temp158_187
   (ite (bvslt var1311786 temp158_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp158_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_187)))
(assert (= var1322903 temp158_188))
(assert (bvslt (ite (bvslt var1311786 temp158_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp158_189 #x0000000000000001))
(assert (= var1311786 temp158_189))
(assert (= temp158_191 var1311786))
(assert (= temp158_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_191)))
(assert (= temp158_190 temp158_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp158_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_193 #x0000000000000001))
(assert (= var1322908 temp158_193))
(assert (= temp158_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp158_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_195 #x0000000000000001))
(assert (= var1322975 temp158_195))
(assert (= temp158_196 #x0000000000000000))
(assert (= var1310898 temp158_196))
(assert (= temp158_197 #x0000000000000000))
(assert (= temp158_198 temp158_197))
(assert (= temp158_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp158_198)))
(assert (= temp158_200 #x0000000000000001))
(assert (= temp158_201 temp158_200))
(assert (= temp158_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp158_201)))
(assert (= temp158_203 #x0000000000000002))
(assert (= temp158_204 temp158_203))
(assert (= temp158_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp158_204)))
(assert (= temp158_206 #x0000000000000003))
(assert (= temp158_207 temp158_206))
(assert (= temp158_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp158_207)))
(assert (= temp158_209 #x0000000000000004))
(assert (= temp158_210 temp158_209))
(assert (= temp158_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp158_210)))
(assert (= temp158_212 #x0000000000000005))
(assert (= temp158_213 temp158_212))
(assert (= temp158_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp158_213)))
(assert (= temp158_215 #x0000000000000000))
(assert (= temp158_216
   (ite (bvslt var1310898 temp158_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp158_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp158_216)))
(assert (= var1322977 temp158_217))
(assert (bvslt (ite (bvslt var1310898 temp158_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp158_218 #x0000000000000000))
(assert (= var1310898 temp158_218))
(assert (= temp158_220 var1310898))
(assert (= temp158_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_220)))
(assert (= temp158_219 temp158_221))
(assert (= var1322980
   (ite (= var1322977 temp158_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_222 #x0000000000000001))
(assert (= var1322980 temp158_222))
(assert (= temp158_223 #x0000000000000002))
(assert (= var1848169 temp158_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp158_225 #x0000000000000001))
(assert (= var1323065 temp158_225))
(assert (= temp158_226 #x0000000000000001))
(assert (= var3486735 temp158_226))
(assert (= temp158_227 #x0000000000000001))
(assert (= var3814415 temp158_227))
(assert (= temp158_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp158_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_229 #x0000000000000001))
(assert (= var79986 temp158_229))
(assert (= temp158_230 #x0000000000000001))
(assert (= var80116 temp158_230))
(assert (= var4796905 var80116))
(assert (= temp158_231 #x0000000000000000))
(assert (= var4784306 temp158_231))
(assert (= temp158_232 #x0000000000000000))
(assert (= temp158_233
   (ite (bvslt var4784306 temp158_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp158_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_233)))
(assert (= var4796924 temp158_234))
(assert (bvslt (ite (bvslt var4784306 temp158_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp158_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp158_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_236 #x0000000000000001))
(assert (= var4796925 temp158_236))
(assert (= temp158_237 #x0000000000000000))
(assert (= var4996927 temp158_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp158_238 #x0000000000000002))
(assert (= var5125763 temp158_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_239 #x0000000000000000))
(assert (= var5191324 temp158_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp158_241 #xffffffffffffffff))
(assert (= temp158_240 temp158_241))
(assert (= temp158_242 #x0000000000000001))
(assert (= var66602 temp158_242))
(assert (= temp158_243 #x0000000000000000))
(assert (= temp158_244
   (ite (bvslt var66602 temp158_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp158_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_244)))
(assert (= var80523 temp158_245))
(assert (bvslt (ite (bvslt var66602 temp158_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp158_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp158_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_247 #x0000000000000000))
(assert (= var80524 temp158_247))
(assert (= temp158_248 #x0000000000000001))
(assert (= var79986 temp158_248))
(model-add temp158_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp158_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp158_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






