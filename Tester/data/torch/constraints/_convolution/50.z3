(declare-fun temp66_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp66_2 () (_ BitVec 64))
(declare-fun temp66_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp66_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp66_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp66_6 () (_ BitVec 64))
(declare-fun temp66_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_8 () (_ BitVec 64))
(declare-fun temp66_9 () (_ BitVec 64))
(declare-fun temp66_10 () (_ BitVec 64))
(declare-fun temp66_11 () (_ BitVec 64))
(declare-fun temp66_12 () (_ BitVec 64))
(declare-fun temp66_13 () (_ BitVec 64))
(declare-fun temp66_14 () (_ BitVec 64))
(declare-fun temp66_15 () (_ BitVec 64))
(declare-fun temp66_16 () (_ BitVec 64))
(declare-fun temp66_17 () (_ BitVec 64))
(declare-fun temp66_18 () (_ BitVec 64))
(declare-fun temp66_19 () (_ BitVec 64))
(declare-fun temp66_20 () (_ BitVec 64))
(declare-fun temp66_21 () (_ BitVec 64))
(declare-fun temp66_22 () (_ BitVec 64))
(declare-fun temp66_23 () (_ BitVec 64))
(declare-fun temp66_24 () (_ BitVec 64))
(declare-fun temp66_25 () (_ BitVec 64))
(declare-fun temp66_26 () (_ BitVec 64))
(declare-fun temp66_27 () (_ BitVec 64))
(declare-fun temp66_28 () (_ BitVec 64))
(declare-fun temp66_29 () (_ BitVec 64))
(declare-fun temp66_30 () (_ BitVec 64))
(declare-fun temp66_31 () (_ BitVec 64))
(declare-fun temp66_32 () (_ BitVec 64))
(declare-fun temp66_33 () (_ BitVec 64))
(declare-fun temp66_34 () (_ BitVec 64))
(declare-fun temp66_35 () (_ BitVec 64))
(declare-fun temp66_36 () (_ BitVec 64))
(declare-fun temp66_37 () (_ BitVec 64))
(declare-fun temp66_38 () (_ BitVec 64))
(declare-fun temp66_39 () (_ BitVec 64))
(declare-fun temp66_40 () (_ BitVec 64))
(declare-fun temp66_41 () (_ BitVec 64))
(declare-fun temp66_42 () (_ BitVec 64))
(declare-fun temp66_43 () (_ BitVec 64))
(declare-fun temp66_44 () (_ BitVec 64))
(declare-fun temp66_45 () (_ BitVec 64))
(declare-fun temp66_46 () (_ BitVec 64))
(declare-fun temp66_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp66_48 () (_ BitVec 64))
(declare-fun temp66_49 () (_ BitVec 64))
(declare-fun temp66_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_51 () (_ BitVec 64))
(declare-fun temp66_52 () (_ BitVec 64))
(declare-fun temp66_53 () (_ BitVec 64))
(declare-fun temp66_54 () (_ BitVec 64))
(declare-fun temp66_55 () (_ BitVec 64))
(declare-fun temp66_56 () (_ BitVec 64))
(declare-fun temp66_57 () (_ BitVec 64))
(declare-fun temp66_58 () (_ BitVec 64))
(declare-fun temp66_59 () (_ BitVec 64))
(declare-fun temp66_60 () (_ BitVec 64))
(declare-fun temp66_61 () (_ BitVec 64))
(declare-fun temp66_62 () (_ BitVec 64))
(declare-fun temp66_63 () (_ BitVec 64))
(declare-fun temp66_64 () (_ BitVec 64))
(declare-fun temp66_65 () (_ BitVec 64))
(declare-fun temp66_66 () (_ BitVec 64))
(declare-fun temp66_67 () (_ BitVec 64))
(declare-fun temp66_68 () (_ BitVec 64))
(declare-fun temp66_69 () (_ BitVec 64))
(declare-fun temp66_70 () (_ BitVec 64))
(declare-fun temp66_71 () (_ BitVec 64))
(declare-fun temp66_72 () (_ BitVec 64))
(declare-fun temp66_73 () (_ BitVec 64))
(declare-fun temp66_74 () (_ BitVec 64))
(declare-fun temp66_75 () (_ BitVec 64))
(declare-fun temp66_76 () (_ BitVec 64))
(declare-fun temp66_77 () (_ BitVec 64))
(declare-fun temp66_78 () (_ BitVec 64))
(declare-fun temp66_79 () (_ BitVec 64))
(declare-fun temp66_80 () (_ BitVec 64))
(declare-fun temp66_81 () (_ BitVec 64))
(declare-fun temp66_82 () (_ BitVec 64))
(declare-fun temp66_83 () (_ BitVec 64))
(declare-fun temp66_84 () (_ BitVec 64))
(declare-fun temp66_85 () (_ BitVec 64))
(declare-fun temp66_86 () (_ BitVec 64))
(declare-fun temp66_87 () (_ BitVec 64))
(declare-fun temp66_88 () (_ BitVec 64))
(declare-fun temp66_89 () (_ BitVec 64))
(declare-fun temp66_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp66_91 () (_ BitVec 64))
(declare-fun temp66_92 () (_ BitVec 64))
(declare-fun temp66_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_94 () (_ BitVec 64))
(declare-fun temp66_95 () (_ BitVec 64))
(declare-fun temp66_96 () (_ BitVec 64))
(declare-fun temp66_97 () (_ BitVec 64))
(declare-fun temp66_98 () (_ BitVec 64))
(declare-fun temp66_99 () (_ BitVec 64))
(declare-fun temp66_100 () (_ BitVec 64))
(declare-fun temp66_101 () (_ BitVec 64))
(declare-fun temp66_102 () (_ BitVec 64))
(declare-fun temp66_103 () (_ BitVec 64))
(declare-fun temp66_104 () (_ BitVec 64))
(declare-fun temp66_105 () (_ BitVec 64))
(declare-fun temp66_106 () (_ BitVec 64))
(declare-fun temp66_107 () (_ BitVec 64))
(declare-fun temp66_108 () (_ BitVec 64))
(declare-fun temp66_109 () (_ BitVec 64))
(declare-fun temp66_110 () (_ BitVec 64))
(declare-fun temp66_111 () (_ BitVec 64))
(declare-fun temp66_112 () (_ BitVec 64))
(declare-fun temp66_113 () (_ BitVec 64))
(declare-fun temp66_114 () (_ BitVec 64))
(declare-fun temp66_115 () (_ BitVec 64))
(declare-fun temp66_116 () (_ BitVec 64))
(declare-fun temp66_117 () (_ BitVec 64))
(declare-fun temp66_118 () (_ BitVec 64))
(declare-fun temp66_119 () (_ BitVec 64))
(declare-fun temp66_120 () (_ BitVec 64))
(declare-fun temp66_121 () (_ BitVec 64))
(declare-fun temp66_122 () (_ BitVec 64))
(declare-fun temp66_123 () (_ BitVec 64))
(declare-fun temp66_124 () (_ BitVec 64))
(declare-fun temp66_125 () (_ BitVec 64))
(declare-fun temp66_126 () (_ BitVec 64))
(declare-fun temp66_127 () (_ BitVec 64))
(declare-fun temp66_128 () (_ BitVec 64))
(declare-fun temp66_129 () (_ BitVec 64))
(declare-fun temp66_130 () (_ BitVec 64))
(declare-fun temp66_131 () (_ BitVec 64))
(declare-fun temp66_132 () (_ BitVec 64))
(declare-fun temp66_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp66_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp66_135 () (_ BitVec 64))
(declare-fun temp66_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp66_137 () (_ BitVec 64))
(declare-fun temp66_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_139 () (_ BitVec 64))
(declare-fun temp66_140 () (_ BitVec 64))
(declare-fun temp66_141 () (_ BitVec 64))
(declare-fun temp66_142 () (_ BitVec 64))
(declare-fun temp66_143 () (_ BitVec 64))
(declare-fun temp66_144 () (_ BitVec 64))
(declare-fun temp66_145 () (_ BitVec 64))
(declare-fun temp66_146 () (_ BitVec 64))
(declare-fun temp66_147 () (_ BitVec 64))
(declare-fun temp66_148 () (_ BitVec 64))
(declare-fun temp66_149 () (_ BitVec 64))
(declare-fun temp66_150 () (_ BitVec 64))
(declare-fun temp66_151 () (_ BitVec 64))
(declare-fun temp66_152 () (_ BitVec 64))
(declare-fun temp66_153 () (_ BitVec 64))
(declare-fun temp66_154 () (_ BitVec 64))
(declare-fun temp66_156 () (_ BitVec 64))
(declare-fun temp66_157 () (_ BitVec 64))
(declare-fun temp66_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp66_158 () (_ BitVec 64))
(declare-fun temp66_159 () (_ BitVec 64))
(declare-fun temp66_161 () (_ BitVec 64))
(declare-fun temp66_162 () (_ BitVec 64))
(declare-fun temp66_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp66_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp66_164 () (_ BitVec 64))
(declare-fun temp66_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp66_166 () (_ BitVec 64))
(declare-fun temp66_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp66_168 () (_ BitVec 64))
(declare-fun temp66_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_170 () (_ BitVec 64))
(declare-fun temp66_171 () (_ BitVec 64))
(declare-fun temp66_172 () (_ BitVec 64))
(declare-fun temp66_173 () (_ BitVec 64))
(declare-fun temp66_174 () (_ BitVec 64))
(declare-fun temp66_175 () (_ BitVec 64))
(declare-fun temp66_176 () (_ BitVec 64))
(declare-fun temp66_177 () (_ BitVec 64))
(declare-fun temp66_178 () (_ BitVec 64))
(declare-fun temp66_179 () (_ BitVec 64))
(declare-fun temp66_180 () (_ BitVec 64))
(declare-fun temp66_181 () (_ BitVec 64))
(declare-fun temp66_182 () (_ BitVec 64))
(declare-fun temp66_183 () (_ BitVec 64))
(declare-fun temp66_184 () (_ BitVec 64))
(declare-fun temp66_185 () (_ BitVec 64))
(declare-fun temp66_186 () (_ BitVec 64))
(declare-fun temp66_187 () (_ BitVec 64))
(declare-fun temp66_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp66_189 () (_ BitVec 64))
(declare-fun temp66_191 () (_ BitVec 64))
(declare-fun temp66_192 () (_ BitVec 64))
(declare-fun temp66_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp66_193 () (_ BitVec 64))
(declare-fun temp66_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp66_195 () (_ BitVec 64))
(declare-fun temp66_196 () (_ BitVec 64))
(declare-fun temp66_197 () (_ BitVec 64))
(declare-fun temp66_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_199 () (_ BitVec 64))
(declare-fun temp66_200 () (_ BitVec 64))
(declare-fun temp66_201 () (_ BitVec 64))
(declare-fun temp66_202 () (_ BitVec 64))
(declare-fun temp66_203 () (_ BitVec 64))
(declare-fun temp66_204 () (_ BitVec 64))
(declare-fun temp66_205 () (_ BitVec 64))
(declare-fun temp66_206 () (_ BitVec 64))
(declare-fun temp66_207 () (_ BitVec 64))
(declare-fun temp66_208 () (_ BitVec 64))
(declare-fun temp66_209 () (_ BitVec 64))
(declare-fun temp66_210 () (_ BitVec 64))
(declare-fun temp66_211 () (_ BitVec 64))
(declare-fun temp66_212 () (_ BitVec 64))
(declare-fun temp66_213 () (_ BitVec 64))
(declare-fun temp66_214 () (_ BitVec 64))
(declare-fun temp66_215 () (_ BitVec 64))
(declare-fun temp66_216 () (_ BitVec 64))
(declare-fun temp66_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp66_218 () (_ BitVec 64))
(declare-fun temp66_220 () (_ BitVec 64))
(declare-fun temp66_221 () (_ BitVec 64))
(declare-fun temp66_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp66_222 () (_ BitVec 64))
(declare-fun temp66_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp66_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp66_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp66_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp66_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp66_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp66_229 () (_ BitVec 64))
(declare-fun temp66_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp66_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp66_232 () (_ BitVec 64))
(declare-fun temp66_233 () (_ BitVec 64))
(declare-fun temp66_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp66_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp66_236 () (_ BitVec 64))
(declare-fun temp66_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp66_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp66_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp66_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp66_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp66_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp66_244 () (_ BitVec 64))
(declare-fun temp66_243 () (_ BitVec 64))
(assert (= temp66_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp66_1)))
(assert (= temp66_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp66_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_3 #x0000000000000000))
(assert (= var79869 temp66_3))
(assert (= temp66_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp66_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_5 #x0000000000000000))
(assert (= var79914 temp66_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp66_6 #x0000000000000000))
(assert (= temp66_7 temp66_6))
(assert (= temp66_8 (select ARGNAME_padding_NAMEEND_VAL temp66_7)))
(assert (= temp66_9 #x0000000000000001))
(assert (= temp66_10 temp66_9))
(assert (= temp66_11 (select ARGNAME_padding_NAMEEND_VAL temp66_10)))
(assert (= temp66_12 #x0000000000000002))
(assert (= temp66_13 temp66_12))
(assert (= temp66_14 (select ARGNAME_padding_NAMEEND_VAL temp66_13)))
(assert (= temp66_15 #x0000000000000003))
(assert (= temp66_16 temp66_15))
(assert (= temp66_17 (select ARGNAME_padding_NAMEEND_VAL temp66_16)))
(assert (= temp66_18 #x0000000000000004))
(assert (= temp66_19 temp66_18))
(assert (= temp66_20 (select ARGNAME_padding_NAMEEND_VAL temp66_19)))
(assert (= temp66_21 #x0000000000000005))
(assert (= temp66_22 temp66_21))
(assert (= temp66_23 (select ARGNAME_padding_NAMEEND_VAL temp66_22)))
(assert (= temp66_24 #x0000000000000000))
(assert (= temp66_25 #x0000000000000000))
(assert (= temp66_26 temp66_25))
(assert (= temp66_27 (select ARGNAME_padding_NAMEEND_VAL temp66_26)))
(assert (= temp66_28 #x0000000000000000))
(assert (= temp66_29 #x0000000000000001))
(assert (= temp66_30 temp66_29))
(assert (= temp66_31 (select ARGNAME_padding_NAMEEND_VAL temp66_30)))
(assert (= temp66_32 #x0000000000000000))
(assert (= temp66_33 #x0000000000000002))
(assert (= temp66_34 temp66_33))
(assert (= temp66_35 (select ARGNAME_padding_NAMEEND_VAL temp66_34)))
(assert (= temp66_36 #x0000000000000000))
(assert (= temp66_37 #x0000000000000003))
(assert (= temp66_38 temp66_37))
(assert (= temp66_39 (select ARGNAME_padding_NAMEEND_VAL temp66_38)))
(assert (= temp66_40 #x0000000000000000))
(assert (= temp66_41 #x0000000000000004))
(assert (= temp66_42 temp66_41))
(assert (= temp66_43 (select ARGNAME_padding_NAMEEND_VAL temp66_42)))
(assert (= temp66_44 #x0000000000000000))
(assert (= temp66_45 #x0000000000000005))
(assert (= temp66_46 temp66_45))
(assert (= temp66_47 (select ARGNAME_padding_NAMEEND_VAL temp66_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp66_27 temp66_24)
             (bvslt temp66_31 temp66_28)
             (bvslt temp66_35 temp66_32)
             (bvslt temp66_39 temp66_36)
             (bvslt temp66_43 temp66_40)
             (bvslt temp66_47 temp66_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_48 #x0000000000000000))
(assert (= var1322786 temp66_48))
(assert (= temp66_49 #x0000000000000000))
(assert (= temp66_50 temp66_49))
(assert (= temp66_51 (select ARGNAME_output_padding_NAMEEND_VAL temp66_50)))
(assert (= temp66_52 #x0000000000000001))
(assert (= temp66_53 temp66_52))
(assert (= temp66_54 (select ARGNAME_output_padding_NAMEEND_VAL temp66_53)))
(assert (= temp66_55 #x0000000000000002))
(assert (= temp66_56 temp66_55))
(assert (= temp66_57 (select ARGNAME_output_padding_NAMEEND_VAL temp66_56)))
(assert (= temp66_58 #x0000000000000003))
(assert (= temp66_59 temp66_58))
(assert (= temp66_60 (select ARGNAME_output_padding_NAMEEND_VAL temp66_59)))
(assert (= temp66_61 #x0000000000000004))
(assert (= temp66_62 temp66_61))
(assert (= temp66_63 (select ARGNAME_output_padding_NAMEEND_VAL temp66_62)))
(assert (= temp66_64 #x0000000000000005))
(assert (= temp66_65 temp66_64))
(assert (= temp66_66 (select ARGNAME_output_padding_NAMEEND_VAL temp66_65)))
(assert (= temp66_67 #x0000000000000000))
(assert (= temp66_68 #x0000000000000000))
(assert (= temp66_69 temp66_68))
(assert (= temp66_70 (select ARGNAME_output_padding_NAMEEND_VAL temp66_69)))
(assert (= temp66_71 #x0000000000000000))
(assert (= temp66_72 #x0000000000000001))
(assert (= temp66_73 temp66_72))
(assert (= temp66_74 (select ARGNAME_output_padding_NAMEEND_VAL temp66_73)))
(assert (= temp66_75 #x0000000000000000))
(assert (= temp66_76 #x0000000000000002))
(assert (= temp66_77 temp66_76))
(assert (= temp66_78 (select ARGNAME_output_padding_NAMEEND_VAL temp66_77)))
(assert (= temp66_79 #x0000000000000000))
(assert (= temp66_80 #x0000000000000003))
(assert (= temp66_81 temp66_80))
(assert (= temp66_82 (select ARGNAME_output_padding_NAMEEND_VAL temp66_81)))
(assert (= temp66_83 #x0000000000000000))
(assert (= temp66_84 #x0000000000000004))
(assert (= temp66_85 temp66_84))
(assert (= temp66_86 (select ARGNAME_output_padding_NAMEEND_VAL temp66_85)))
(assert (= temp66_87 #x0000000000000000))
(assert (= temp66_88 #x0000000000000005))
(assert (= temp66_89 temp66_88))
(assert (= temp66_90 (select ARGNAME_output_padding_NAMEEND_VAL temp66_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp66_70 temp66_67)
             (bvslt temp66_74 temp66_71)
             (bvslt temp66_78 temp66_75)
             (bvslt temp66_82 temp66_79)
             (bvslt temp66_86 temp66_83)
             (bvslt temp66_90 temp66_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_91 #x0000000000000000))
(assert (= var1322797 temp66_91))
(assert (= temp66_92 #x0000000000000000))
(assert (= temp66_93 temp66_92))
(assert (= temp66_94 (select ARGNAME_stride_NAMEEND_VAL temp66_93)))
(assert (= temp66_95 #x0000000000000001))
(assert (= temp66_96 temp66_95))
(assert (= temp66_97 (select ARGNAME_stride_NAMEEND_VAL temp66_96)))
(assert (= temp66_98 #x0000000000000002))
(assert (= temp66_99 temp66_98))
(assert (= temp66_100 (select ARGNAME_stride_NAMEEND_VAL temp66_99)))
(assert (= temp66_101 #x0000000000000003))
(assert (= temp66_102 temp66_101))
(assert (= temp66_103 (select ARGNAME_stride_NAMEEND_VAL temp66_102)))
(assert (= temp66_104 #x0000000000000004))
(assert (= temp66_105 temp66_104))
(assert (= temp66_106 (select ARGNAME_stride_NAMEEND_VAL temp66_105)))
(assert (= temp66_107 #x0000000000000005))
(assert (= temp66_108 temp66_107))
(assert (= temp66_109 (select ARGNAME_stride_NAMEEND_VAL temp66_108)))
(assert (= temp66_110 #x0000000000000000))
(assert (= temp66_111 #x0000000000000000))
(assert (= temp66_112 temp66_111))
(assert (= temp66_113 (select ARGNAME_stride_NAMEEND_VAL temp66_112)))
(assert (= temp66_114 #x0000000000000000))
(assert (= temp66_115 #x0000000000000001))
(assert (= temp66_116 temp66_115))
(assert (= temp66_117 (select ARGNAME_stride_NAMEEND_VAL temp66_116)))
(assert (= temp66_118 #x0000000000000000))
(assert (= temp66_119 #x0000000000000002))
(assert (= temp66_120 temp66_119))
(assert (= temp66_121 (select ARGNAME_stride_NAMEEND_VAL temp66_120)))
(assert (= temp66_122 #x0000000000000000))
(assert (= temp66_123 #x0000000000000003))
(assert (= temp66_124 temp66_123))
(assert (= temp66_125 (select ARGNAME_stride_NAMEEND_VAL temp66_124)))
(assert (= temp66_126 #x0000000000000000))
(assert (= temp66_127 #x0000000000000004))
(assert (= temp66_128 temp66_127))
(assert (= temp66_129 (select ARGNAME_stride_NAMEEND_VAL temp66_128)))
(assert (= temp66_130 #x0000000000000000))
(assert (= temp66_131 #x0000000000000005))
(assert (= temp66_132 temp66_131))
(assert (= temp66_133 (select ARGNAME_stride_NAMEEND_VAL temp66_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp66_113 temp66_110)
             (bvsle temp66_117 temp66_114)
             (bvsle temp66_121 temp66_118)
             (bvsle temp66_125 temp66_122)
             (bvsle temp66_129 temp66_126)
             (bvsle temp66_133 temp66_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_134 #x0000000000000000))
(assert (= var1322807 temp66_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_135 #x0000000000000001))
(assert (= var1322819 temp66_135))
(assert (= temp66_136 #x0000000000000000))
(assert (= var1310898 temp66_136))
(assert (= temp66_137 #x0000000000000000))
(assert (= temp66_138 temp66_137))
(assert (= temp66_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_138)))
(assert (= temp66_140 #x0000000000000001))
(assert (= temp66_141 temp66_140))
(assert (= temp66_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_141)))
(assert (= temp66_143 #x0000000000000002))
(assert (= temp66_144 temp66_143))
(assert (= temp66_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_144)))
(assert (= temp66_146 #x0000000000000003))
(assert (= temp66_147 temp66_146))
(assert (= temp66_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_147)))
(assert (= temp66_149 #x0000000000000004))
(assert (= temp66_150 temp66_149))
(assert (= temp66_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_150)))
(assert (= temp66_152 #x0000000000000005))
(assert (= temp66_153 temp66_152))
(assert (= temp66_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_153)))
(assert (= temp66_156 var1310898))
(assert (= temp66_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_156)))
(assert (= temp66_155 temp66_157))
(assert (= var1322852
   (ite (bvslt temp66_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_158 #x0000000000000000))
(assert (= var1322852 temp66_158))
(assert (= temp66_159 #x0000000000000000))
(assert (= var1310898 temp66_159))
(assert (= temp66_161 var1310898))
(assert (= temp66_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_161)))
(assert (= temp66_160 temp66_162))
(assert (= var1322874 (bvsmod temp66_160 ARGNAME_groups_NAMEEND)))
(assert (= temp66_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp66_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_164 #x0000000000000001))
(assert (= var1322875 temp66_164))
(assert (= temp66_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp66_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_166 #x0000000000000001))
(assert (= var1322895 temp66_166))
(assert (= temp66_167 #x0000000000000001))
(assert (= var1311786 temp66_167))
(assert (= temp66_168 #x0000000000000000))
(assert (= temp66_169 temp66_168))
(assert (= temp66_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_169)))
(assert (= temp66_171 #x0000000000000001))
(assert (= temp66_172 temp66_171))
(assert (= temp66_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_172)))
(assert (= temp66_174 #x0000000000000002))
(assert (= temp66_175 temp66_174))
(assert (= temp66_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_175)))
(assert (= temp66_177 #x0000000000000003))
(assert (= temp66_178 temp66_177))
(assert (= temp66_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_178)))
(assert (= temp66_180 #x0000000000000004))
(assert (= temp66_181 temp66_180))
(assert (= temp66_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_181)))
(assert (= temp66_183 #x0000000000000005))
(assert (= temp66_184 temp66_183))
(assert (= temp66_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_184)))
(assert (= temp66_186 #x0000000000000000))
(assert (= temp66_187
   (ite (bvslt var1311786 temp66_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp66_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_187)))
(assert (= var1322903 temp66_188))
(assert (bvslt (ite (bvslt var1311786 temp66_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp66_189 #x0000000000000001))
(assert (= var1311786 temp66_189))
(assert (= temp66_191 var1311786))
(assert (= temp66_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_191)))
(assert (= temp66_190 temp66_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp66_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_193 #x0000000000000001))
(assert (= var1322908 temp66_193))
(assert (= temp66_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp66_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_195 #x0000000000000001))
(assert (= var1322975 temp66_195))
(assert (= temp66_196 #x0000000000000000))
(assert (= var1310898 temp66_196))
(assert (= temp66_197 #x0000000000000000))
(assert (= temp66_198 temp66_197))
(assert (= temp66_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp66_198)))
(assert (= temp66_200 #x0000000000000001))
(assert (= temp66_201 temp66_200))
(assert (= temp66_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp66_201)))
(assert (= temp66_203 #x0000000000000002))
(assert (= temp66_204 temp66_203))
(assert (= temp66_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp66_204)))
(assert (= temp66_206 #x0000000000000003))
(assert (= temp66_207 temp66_206))
(assert (= temp66_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp66_207)))
(assert (= temp66_209 #x0000000000000004))
(assert (= temp66_210 temp66_209))
(assert (= temp66_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp66_210)))
(assert (= temp66_212 #x0000000000000005))
(assert (= temp66_213 temp66_212))
(assert (= temp66_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp66_213)))
(assert (= temp66_215 #x0000000000000000))
(assert (= temp66_216
   (ite (bvslt var1310898 temp66_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp66_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp66_216)))
(assert (= var1322977 temp66_217))
(assert (bvslt (ite (bvslt var1310898 temp66_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp66_218 #x0000000000000000))
(assert (= var1310898 temp66_218))
(assert (= temp66_220 var1310898))
(assert (= temp66_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_220)))
(assert (= temp66_219 temp66_221))
(assert (= var1322980
   (ite (= var1322977 temp66_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_222 #x0000000000000001))
(assert (= var1322980 temp66_222))
(assert (= temp66_223 #x0000000000000002))
(assert (= var1848169 temp66_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp66_225 #x0000000000000001))
(assert (= var1323065 temp66_225))
(assert (= temp66_226 #x0000000000000001))
(assert (= var3486735 temp66_226))
(assert (= temp66_227 #x0000000000000001))
(assert (= var3814415 temp66_227))
(assert (= temp66_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp66_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_229 #x0000000000000001))
(assert (= var79986 temp66_229))
(assert (= temp66_230 #x0000000000000001))
(assert (= var80116 temp66_230))
(assert (= var4796905 var80116))
(assert (= temp66_231 #x0000000000000000))
(assert (= var4784306 temp66_231))
(assert (= temp66_232 #x0000000000000000))
(assert (= temp66_233
   (ite (bvslt var4784306 temp66_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp66_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_233)))
(assert (= var4796924 temp66_234))
(assert (bvslt (ite (bvslt var4784306 temp66_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp66_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp66_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_236 #x0000000000000001))
(assert (= var4796925 temp66_236))
(assert (= temp66_237 #x0000000000000000))
(assert (= var4996927 temp66_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp66_238 #x0000000000000002))
(assert (= var5125763 temp66_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_239 #x0000000000000000))
(assert (= var5191324 temp66_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp66_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp66_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp66_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp66_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_244 #x0000000000000001))
(assert (= temp66_243 temp66_244))
(model-add temp66_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp66_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp66_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






