(declare-fun temp1020_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1020_2 () (_ BitVec 64))
(declare-fun temp1020_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1020_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1020_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1020_6 () (_ BitVec 64))
(declare-fun temp1020_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_8 () (_ BitVec 64))
(declare-fun temp1020_9 () (_ BitVec 64))
(declare-fun temp1020_10 () (_ BitVec 64))
(declare-fun temp1020_11 () (_ BitVec 64))
(declare-fun temp1020_12 () (_ BitVec 64))
(declare-fun temp1020_13 () (_ BitVec 64))
(declare-fun temp1020_14 () (_ BitVec 64))
(declare-fun temp1020_15 () (_ BitVec 64))
(declare-fun temp1020_16 () (_ BitVec 64))
(declare-fun temp1020_17 () (_ BitVec 64))
(declare-fun temp1020_18 () (_ BitVec 64))
(declare-fun temp1020_19 () (_ BitVec 64))
(declare-fun temp1020_20 () (_ BitVec 64))
(declare-fun temp1020_21 () (_ BitVec 64))
(declare-fun temp1020_22 () (_ BitVec 64))
(declare-fun temp1020_23 () (_ BitVec 64))
(declare-fun temp1020_24 () (_ BitVec 64))
(declare-fun temp1020_25 () (_ BitVec 64))
(declare-fun temp1020_26 () (_ BitVec 64))
(declare-fun temp1020_27 () (_ BitVec 64))
(declare-fun temp1020_28 () (_ BitVec 64))
(declare-fun temp1020_29 () (_ BitVec 64))
(declare-fun temp1020_30 () (_ BitVec 64))
(declare-fun temp1020_31 () (_ BitVec 64))
(declare-fun temp1020_32 () (_ BitVec 64))
(declare-fun temp1020_33 () (_ BitVec 64))
(declare-fun temp1020_34 () (_ BitVec 64))
(declare-fun temp1020_35 () (_ BitVec 64))
(declare-fun temp1020_36 () (_ BitVec 64))
(declare-fun temp1020_37 () (_ BitVec 64))
(declare-fun temp1020_38 () (_ BitVec 64))
(declare-fun temp1020_39 () (_ BitVec 64))
(declare-fun temp1020_40 () (_ BitVec 64))
(declare-fun temp1020_41 () (_ BitVec 64))
(declare-fun temp1020_42 () (_ BitVec 64))
(declare-fun temp1020_43 () (_ BitVec 64))
(declare-fun temp1020_44 () (_ BitVec 64))
(declare-fun temp1020_45 () (_ BitVec 64))
(declare-fun temp1020_46 () (_ BitVec 64))
(declare-fun temp1020_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1020_48 () (_ BitVec 64))
(declare-fun temp1020_49 () (_ BitVec 64))
(declare-fun temp1020_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_51 () (_ BitVec 64))
(declare-fun temp1020_52 () (_ BitVec 64))
(declare-fun temp1020_53 () (_ BitVec 64))
(declare-fun temp1020_54 () (_ BitVec 64))
(declare-fun temp1020_55 () (_ BitVec 64))
(declare-fun temp1020_56 () (_ BitVec 64))
(declare-fun temp1020_57 () (_ BitVec 64))
(declare-fun temp1020_58 () (_ BitVec 64))
(declare-fun temp1020_59 () (_ BitVec 64))
(declare-fun temp1020_60 () (_ BitVec 64))
(declare-fun temp1020_61 () (_ BitVec 64))
(declare-fun temp1020_62 () (_ BitVec 64))
(declare-fun temp1020_63 () (_ BitVec 64))
(declare-fun temp1020_64 () (_ BitVec 64))
(declare-fun temp1020_65 () (_ BitVec 64))
(declare-fun temp1020_66 () (_ BitVec 64))
(declare-fun temp1020_67 () (_ BitVec 64))
(declare-fun temp1020_68 () (_ BitVec 64))
(declare-fun temp1020_69 () (_ BitVec 64))
(declare-fun temp1020_70 () (_ BitVec 64))
(declare-fun temp1020_71 () (_ BitVec 64))
(declare-fun temp1020_72 () (_ BitVec 64))
(declare-fun temp1020_73 () (_ BitVec 64))
(declare-fun temp1020_74 () (_ BitVec 64))
(declare-fun temp1020_75 () (_ BitVec 64))
(declare-fun temp1020_76 () (_ BitVec 64))
(declare-fun temp1020_77 () (_ BitVec 64))
(declare-fun temp1020_78 () (_ BitVec 64))
(declare-fun temp1020_79 () (_ BitVec 64))
(declare-fun temp1020_80 () (_ BitVec 64))
(declare-fun temp1020_81 () (_ BitVec 64))
(declare-fun temp1020_82 () (_ BitVec 64))
(declare-fun temp1020_83 () (_ BitVec 64))
(declare-fun temp1020_84 () (_ BitVec 64))
(declare-fun temp1020_85 () (_ BitVec 64))
(declare-fun temp1020_86 () (_ BitVec 64))
(declare-fun temp1020_87 () (_ BitVec 64))
(declare-fun temp1020_88 () (_ BitVec 64))
(declare-fun temp1020_89 () (_ BitVec 64))
(declare-fun temp1020_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1020_91 () (_ BitVec 64))
(declare-fun temp1020_92 () (_ BitVec 64))
(declare-fun temp1020_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_94 () (_ BitVec 64))
(declare-fun temp1020_95 () (_ BitVec 64))
(declare-fun temp1020_96 () (_ BitVec 64))
(declare-fun temp1020_97 () (_ BitVec 64))
(declare-fun temp1020_98 () (_ BitVec 64))
(declare-fun temp1020_99 () (_ BitVec 64))
(declare-fun temp1020_100 () (_ BitVec 64))
(declare-fun temp1020_101 () (_ BitVec 64))
(declare-fun temp1020_102 () (_ BitVec 64))
(declare-fun temp1020_103 () (_ BitVec 64))
(declare-fun temp1020_104 () (_ BitVec 64))
(declare-fun temp1020_105 () (_ BitVec 64))
(declare-fun temp1020_106 () (_ BitVec 64))
(declare-fun temp1020_107 () (_ BitVec 64))
(declare-fun temp1020_108 () (_ BitVec 64))
(declare-fun temp1020_109 () (_ BitVec 64))
(declare-fun temp1020_110 () (_ BitVec 64))
(declare-fun temp1020_111 () (_ BitVec 64))
(declare-fun temp1020_112 () (_ BitVec 64))
(declare-fun temp1020_113 () (_ BitVec 64))
(declare-fun temp1020_114 () (_ BitVec 64))
(declare-fun temp1020_115 () (_ BitVec 64))
(declare-fun temp1020_116 () (_ BitVec 64))
(declare-fun temp1020_117 () (_ BitVec 64))
(declare-fun temp1020_118 () (_ BitVec 64))
(declare-fun temp1020_119 () (_ BitVec 64))
(declare-fun temp1020_120 () (_ BitVec 64))
(declare-fun temp1020_121 () (_ BitVec 64))
(declare-fun temp1020_122 () (_ BitVec 64))
(declare-fun temp1020_123 () (_ BitVec 64))
(declare-fun temp1020_124 () (_ BitVec 64))
(declare-fun temp1020_125 () (_ BitVec 64))
(declare-fun temp1020_126 () (_ BitVec 64))
(declare-fun temp1020_127 () (_ BitVec 64))
(declare-fun temp1020_128 () (_ BitVec 64))
(declare-fun temp1020_129 () (_ BitVec 64))
(declare-fun temp1020_130 () (_ BitVec 64))
(declare-fun temp1020_131 () (_ BitVec 64))
(declare-fun temp1020_132 () (_ BitVec 64))
(declare-fun temp1020_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1020_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1020_135 () (_ BitVec 64))
(declare-fun temp1020_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1020_137 () (_ BitVec 64))
(declare-fun temp1020_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_139 () (_ BitVec 64))
(declare-fun temp1020_140 () (_ BitVec 64))
(declare-fun temp1020_141 () (_ BitVec 64))
(declare-fun temp1020_142 () (_ BitVec 64))
(declare-fun temp1020_143 () (_ BitVec 64))
(declare-fun temp1020_144 () (_ BitVec 64))
(declare-fun temp1020_145 () (_ BitVec 64))
(declare-fun temp1020_146 () (_ BitVec 64))
(declare-fun temp1020_147 () (_ BitVec 64))
(declare-fun temp1020_148 () (_ BitVec 64))
(declare-fun temp1020_149 () (_ BitVec 64))
(declare-fun temp1020_150 () (_ BitVec 64))
(declare-fun temp1020_151 () (_ BitVec 64))
(declare-fun temp1020_152 () (_ BitVec 64))
(declare-fun temp1020_153 () (_ BitVec 64))
(declare-fun temp1020_154 () (_ BitVec 64))
(declare-fun temp1020_156 () (_ BitVec 64))
(declare-fun temp1020_157 () (_ BitVec 64))
(declare-fun temp1020_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1020_158 () (_ BitVec 64))
(declare-fun temp1020_159 () (_ BitVec 64))
(declare-fun temp1020_161 () (_ BitVec 64))
(declare-fun temp1020_162 () (_ BitVec 64))
(declare-fun temp1020_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1020_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1020_164 () (_ BitVec 64))
(declare-fun temp1020_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1020_166 () (_ BitVec 64))
(declare-fun temp1020_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1020_168 () (_ BitVec 64))
(declare-fun temp1020_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_170 () (_ BitVec 64))
(declare-fun temp1020_171 () (_ BitVec 64))
(declare-fun temp1020_172 () (_ BitVec 64))
(declare-fun temp1020_173 () (_ BitVec 64))
(declare-fun temp1020_174 () (_ BitVec 64))
(declare-fun temp1020_175 () (_ BitVec 64))
(declare-fun temp1020_176 () (_ BitVec 64))
(declare-fun temp1020_177 () (_ BitVec 64))
(declare-fun temp1020_178 () (_ BitVec 64))
(declare-fun temp1020_179 () (_ BitVec 64))
(declare-fun temp1020_180 () (_ BitVec 64))
(declare-fun temp1020_181 () (_ BitVec 64))
(declare-fun temp1020_182 () (_ BitVec 64))
(declare-fun temp1020_183 () (_ BitVec 64))
(declare-fun temp1020_184 () (_ BitVec 64))
(declare-fun temp1020_185 () (_ BitVec 64))
(declare-fun temp1020_186 () (_ BitVec 64))
(declare-fun temp1020_187 () (_ BitVec 64))
(declare-fun temp1020_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1020_189 () (_ BitVec 64))
(declare-fun temp1020_191 () (_ BitVec 64))
(declare-fun temp1020_192 () (_ BitVec 64))
(declare-fun temp1020_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1020_193 () (_ BitVec 64))
(declare-fun temp1020_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1020_195 () (_ BitVec 64))
(declare-fun temp1020_196 () (_ BitVec 64))
(declare-fun temp1020_197 () (_ BitVec 64))
(declare-fun temp1020_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_199 () (_ BitVec 64))
(declare-fun temp1020_200 () (_ BitVec 64))
(declare-fun temp1020_201 () (_ BitVec 64))
(declare-fun temp1020_202 () (_ BitVec 64))
(declare-fun temp1020_203 () (_ BitVec 64))
(declare-fun temp1020_204 () (_ BitVec 64))
(declare-fun temp1020_205 () (_ BitVec 64))
(declare-fun temp1020_206 () (_ BitVec 64))
(declare-fun temp1020_207 () (_ BitVec 64))
(declare-fun temp1020_208 () (_ BitVec 64))
(declare-fun temp1020_209 () (_ BitVec 64))
(declare-fun temp1020_210 () (_ BitVec 64))
(declare-fun temp1020_211 () (_ BitVec 64))
(declare-fun temp1020_212 () (_ BitVec 64))
(declare-fun temp1020_213 () (_ BitVec 64))
(declare-fun temp1020_214 () (_ BitVec 64))
(declare-fun temp1020_215 () (_ BitVec 64))
(declare-fun temp1020_216 () (_ BitVec 64))
(declare-fun temp1020_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1020_218 () (_ BitVec 64))
(declare-fun temp1020_220 () (_ BitVec 64))
(declare-fun temp1020_221 () (_ BitVec 64))
(declare-fun temp1020_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1020_222 () (_ BitVec 64))
(declare-fun temp1020_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1020_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1020_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1020_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1020_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1020_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1020_229 () (_ BitVec 64))
(declare-fun temp1020_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1020_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1020_232 () (_ BitVec 64))
(declare-fun temp1020_233 () (_ BitVec 64))
(declare-fun temp1020_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1020_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1020_236 () (_ BitVec 64))
(declare-fun temp1020_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1020_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1020_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1020_240 () (_ BitVec 64))
(declare-fun temp1020_241 () (_ BitVec 64))
(declare-fun var7025428 () (_ BitVec 64))
(declare-fun var7025395 () (_ BitVec 64))
(declare-fun var6893959 () (_ BitVec 64))
(declare-fun var6893955 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1020_242 () (_ BitVec 64))
(assert (= temp1020_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1020_1)))
(assert (= temp1020_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1020_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_3 #x0000000000000000))
(assert (= var79869 temp1020_3))
(assert (= temp1020_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1020_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_5 #x0000000000000000))
(assert (= var79914 temp1020_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1020_6 #x0000000000000000))
(assert (= temp1020_7 temp1020_6))
(assert (= temp1020_8 (select ARGNAME_padding_NAMEEND_VAL temp1020_7)))
(assert (= temp1020_9 #x0000000000000001))
(assert (= temp1020_10 temp1020_9))
(assert (= temp1020_11 (select ARGNAME_padding_NAMEEND_VAL temp1020_10)))
(assert (= temp1020_12 #x0000000000000002))
(assert (= temp1020_13 temp1020_12))
(assert (= temp1020_14 (select ARGNAME_padding_NAMEEND_VAL temp1020_13)))
(assert (= temp1020_15 #x0000000000000003))
(assert (= temp1020_16 temp1020_15))
(assert (= temp1020_17 (select ARGNAME_padding_NAMEEND_VAL temp1020_16)))
(assert (= temp1020_18 #x0000000000000004))
(assert (= temp1020_19 temp1020_18))
(assert (= temp1020_20 (select ARGNAME_padding_NAMEEND_VAL temp1020_19)))
(assert (= temp1020_21 #x0000000000000005))
(assert (= temp1020_22 temp1020_21))
(assert (= temp1020_23 (select ARGNAME_padding_NAMEEND_VAL temp1020_22)))
(assert (= temp1020_24 #x0000000000000000))
(assert (= temp1020_25 #x0000000000000000))
(assert (= temp1020_26 temp1020_25))
(assert (= temp1020_27 (select ARGNAME_padding_NAMEEND_VAL temp1020_26)))
(assert (= temp1020_28 #x0000000000000000))
(assert (= temp1020_29 #x0000000000000001))
(assert (= temp1020_30 temp1020_29))
(assert (= temp1020_31 (select ARGNAME_padding_NAMEEND_VAL temp1020_30)))
(assert (= temp1020_32 #x0000000000000000))
(assert (= temp1020_33 #x0000000000000002))
(assert (= temp1020_34 temp1020_33))
(assert (= temp1020_35 (select ARGNAME_padding_NAMEEND_VAL temp1020_34)))
(assert (= temp1020_36 #x0000000000000000))
(assert (= temp1020_37 #x0000000000000003))
(assert (= temp1020_38 temp1020_37))
(assert (= temp1020_39 (select ARGNAME_padding_NAMEEND_VAL temp1020_38)))
(assert (= temp1020_40 #x0000000000000000))
(assert (= temp1020_41 #x0000000000000004))
(assert (= temp1020_42 temp1020_41))
(assert (= temp1020_43 (select ARGNAME_padding_NAMEEND_VAL temp1020_42)))
(assert (= temp1020_44 #x0000000000000000))
(assert (= temp1020_45 #x0000000000000005))
(assert (= temp1020_46 temp1020_45))
(assert (= temp1020_47 (select ARGNAME_padding_NAMEEND_VAL temp1020_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1020_27 temp1020_24)
             (bvslt temp1020_31 temp1020_28)
             (bvslt temp1020_35 temp1020_32)
             (bvslt temp1020_39 temp1020_36)
             (bvslt temp1020_43 temp1020_40)
             (bvslt temp1020_47 temp1020_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_48 #x0000000000000000))
(assert (= var1322786 temp1020_48))
(assert (= temp1020_49 #x0000000000000000))
(assert (= temp1020_50 temp1020_49))
(assert (= temp1020_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_50)))
(assert (= temp1020_52 #x0000000000000001))
(assert (= temp1020_53 temp1020_52))
(assert (= temp1020_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_53)))
(assert (= temp1020_55 #x0000000000000002))
(assert (= temp1020_56 temp1020_55))
(assert (= temp1020_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_56)))
(assert (= temp1020_58 #x0000000000000003))
(assert (= temp1020_59 temp1020_58))
(assert (= temp1020_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_59)))
(assert (= temp1020_61 #x0000000000000004))
(assert (= temp1020_62 temp1020_61))
(assert (= temp1020_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_62)))
(assert (= temp1020_64 #x0000000000000005))
(assert (= temp1020_65 temp1020_64))
(assert (= temp1020_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_65)))
(assert (= temp1020_67 #x0000000000000000))
(assert (= temp1020_68 #x0000000000000000))
(assert (= temp1020_69 temp1020_68))
(assert (= temp1020_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_69)))
(assert (= temp1020_71 #x0000000000000000))
(assert (= temp1020_72 #x0000000000000001))
(assert (= temp1020_73 temp1020_72))
(assert (= temp1020_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_73)))
(assert (= temp1020_75 #x0000000000000000))
(assert (= temp1020_76 #x0000000000000002))
(assert (= temp1020_77 temp1020_76))
(assert (= temp1020_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_77)))
(assert (= temp1020_79 #x0000000000000000))
(assert (= temp1020_80 #x0000000000000003))
(assert (= temp1020_81 temp1020_80))
(assert (= temp1020_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_81)))
(assert (= temp1020_83 #x0000000000000000))
(assert (= temp1020_84 #x0000000000000004))
(assert (= temp1020_85 temp1020_84))
(assert (= temp1020_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_85)))
(assert (= temp1020_87 #x0000000000000000))
(assert (= temp1020_88 #x0000000000000005))
(assert (= temp1020_89 temp1020_88))
(assert (= temp1020_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1020_70 temp1020_67)
             (bvslt temp1020_74 temp1020_71)
             (bvslt temp1020_78 temp1020_75)
             (bvslt temp1020_82 temp1020_79)
             (bvslt temp1020_86 temp1020_83)
             (bvslt temp1020_90 temp1020_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_91 #x0000000000000000))
(assert (= var1322797 temp1020_91))
(assert (= temp1020_92 #x0000000000000000))
(assert (= temp1020_93 temp1020_92))
(assert (= temp1020_94 (select ARGNAME_stride_NAMEEND_VAL temp1020_93)))
(assert (= temp1020_95 #x0000000000000001))
(assert (= temp1020_96 temp1020_95))
(assert (= temp1020_97 (select ARGNAME_stride_NAMEEND_VAL temp1020_96)))
(assert (= temp1020_98 #x0000000000000002))
(assert (= temp1020_99 temp1020_98))
(assert (= temp1020_100 (select ARGNAME_stride_NAMEEND_VAL temp1020_99)))
(assert (= temp1020_101 #x0000000000000003))
(assert (= temp1020_102 temp1020_101))
(assert (= temp1020_103 (select ARGNAME_stride_NAMEEND_VAL temp1020_102)))
(assert (= temp1020_104 #x0000000000000004))
(assert (= temp1020_105 temp1020_104))
(assert (= temp1020_106 (select ARGNAME_stride_NAMEEND_VAL temp1020_105)))
(assert (= temp1020_107 #x0000000000000005))
(assert (= temp1020_108 temp1020_107))
(assert (= temp1020_109 (select ARGNAME_stride_NAMEEND_VAL temp1020_108)))
(assert (= temp1020_110 #x0000000000000000))
(assert (= temp1020_111 #x0000000000000000))
(assert (= temp1020_112 temp1020_111))
(assert (= temp1020_113 (select ARGNAME_stride_NAMEEND_VAL temp1020_112)))
(assert (= temp1020_114 #x0000000000000000))
(assert (= temp1020_115 #x0000000000000001))
(assert (= temp1020_116 temp1020_115))
(assert (= temp1020_117 (select ARGNAME_stride_NAMEEND_VAL temp1020_116)))
(assert (= temp1020_118 #x0000000000000000))
(assert (= temp1020_119 #x0000000000000002))
(assert (= temp1020_120 temp1020_119))
(assert (= temp1020_121 (select ARGNAME_stride_NAMEEND_VAL temp1020_120)))
(assert (= temp1020_122 #x0000000000000000))
(assert (= temp1020_123 #x0000000000000003))
(assert (= temp1020_124 temp1020_123))
(assert (= temp1020_125 (select ARGNAME_stride_NAMEEND_VAL temp1020_124)))
(assert (= temp1020_126 #x0000000000000000))
(assert (= temp1020_127 #x0000000000000004))
(assert (= temp1020_128 temp1020_127))
(assert (= temp1020_129 (select ARGNAME_stride_NAMEEND_VAL temp1020_128)))
(assert (= temp1020_130 #x0000000000000000))
(assert (= temp1020_131 #x0000000000000005))
(assert (= temp1020_132 temp1020_131))
(assert (= temp1020_133 (select ARGNAME_stride_NAMEEND_VAL temp1020_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1020_113 temp1020_110)
             (bvsle temp1020_117 temp1020_114)
             (bvsle temp1020_121 temp1020_118)
             (bvsle temp1020_125 temp1020_122)
             (bvsle temp1020_129 temp1020_126)
             (bvsle temp1020_133 temp1020_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_134 #x0000000000000000))
(assert (= var1322807 temp1020_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_135 #x0000000000000001))
(assert (= var1322819 temp1020_135))
(assert (= temp1020_136 #x0000000000000000))
(assert (= var1310898 temp1020_136))
(assert (= temp1020_137 #x0000000000000000))
(assert (= temp1020_138 temp1020_137))
(assert (= temp1020_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_138)))
(assert (= temp1020_140 #x0000000000000001))
(assert (= temp1020_141 temp1020_140))
(assert (= temp1020_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_141)))
(assert (= temp1020_143 #x0000000000000002))
(assert (= temp1020_144 temp1020_143))
(assert (= temp1020_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_144)))
(assert (= temp1020_146 #x0000000000000003))
(assert (= temp1020_147 temp1020_146))
(assert (= temp1020_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_147)))
(assert (= temp1020_149 #x0000000000000004))
(assert (= temp1020_150 temp1020_149))
(assert (= temp1020_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_150)))
(assert (= temp1020_152 #x0000000000000005))
(assert (= temp1020_153 temp1020_152))
(assert (= temp1020_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_153)))
(assert (= temp1020_156 var1310898))
(assert (= temp1020_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_156)))
(assert (= temp1020_155 temp1020_157))
(assert (= var1322852
   (ite (bvslt temp1020_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_158 #x0000000000000000))
(assert (= var1322852 temp1020_158))
(assert (= temp1020_159 #x0000000000000000))
(assert (= var1310898 temp1020_159))
(assert (= temp1020_161 var1310898))
(assert (= temp1020_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_161)))
(assert (= temp1020_160 temp1020_162))
(assert (= var1322874 (bvsmod temp1020_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1020_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1020_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1020_164 #x0000000000000001))
(assert (= var1322875 temp1020_164))
(assert (= temp1020_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1020_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_166 #x0000000000000001))
(assert (= var1322895 temp1020_166))
(assert (= temp1020_167 #x0000000000000001))
(assert (= var1311786 temp1020_167))
(assert (= temp1020_168 #x0000000000000000))
(assert (= temp1020_169 temp1020_168))
(assert (= temp1020_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_169)))
(assert (= temp1020_171 #x0000000000000001))
(assert (= temp1020_172 temp1020_171))
(assert (= temp1020_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_172)))
(assert (= temp1020_174 #x0000000000000002))
(assert (= temp1020_175 temp1020_174))
(assert (= temp1020_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_175)))
(assert (= temp1020_177 #x0000000000000003))
(assert (= temp1020_178 temp1020_177))
(assert (= temp1020_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_178)))
(assert (= temp1020_180 #x0000000000000004))
(assert (= temp1020_181 temp1020_180))
(assert (= temp1020_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_181)))
(assert (= temp1020_183 #x0000000000000005))
(assert (= temp1020_184 temp1020_183))
(assert (= temp1020_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_184)))
(assert (= temp1020_186 #x0000000000000000))
(assert (= temp1020_187
   (ite (bvslt var1311786 temp1020_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1020_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_187)))
(assert (= var1322903 temp1020_188))
(assert (bvslt (ite (bvslt var1311786 temp1020_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1020_189 #x0000000000000001))
(assert (= var1311786 temp1020_189))
(assert (= temp1020_191 var1311786))
(assert (= temp1020_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_191)))
(assert (= temp1020_190 temp1020_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1020_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1020_193 #x0000000000000001))
(assert (= var1322908 temp1020_193))
(assert (= temp1020_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1020_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_195 #x0000000000000001))
(assert (= var1322975 temp1020_195))
(assert (= temp1020_196 #x0000000000000000))
(assert (= var1310898 temp1020_196))
(assert (= temp1020_197 #x0000000000000000))
(assert (= temp1020_198 temp1020_197))
(assert (= temp1020_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1020_198)))
(assert (= temp1020_200 #x0000000000000001))
(assert (= temp1020_201 temp1020_200))
(assert (= temp1020_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1020_201)))
(assert (= temp1020_203 #x0000000000000002))
(assert (= temp1020_204 temp1020_203))
(assert (= temp1020_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1020_204)))
(assert (= temp1020_206 #x0000000000000003))
(assert (= temp1020_207 temp1020_206))
(assert (= temp1020_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1020_207)))
(assert (= temp1020_209 #x0000000000000004))
(assert (= temp1020_210 temp1020_209))
(assert (= temp1020_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1020_210)))
(assert (= temp1020_212 #x0000000000000005))
(assert (= temp1020_213 temp1020_212))
(assert (= temp1020_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1020_213)))
(assert (= temp1020_215 #x0000000000000000))
(assert (= temp1020_216
   (ite (bvslt var1310898 temp1020_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1020_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1020_216)))
(assert (= var1322977 temp1020_217))
(assert (bvslt (ite (bvslt var1310898 temp1020_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1020_218 #x0000000000000000))
(assert (= var1310898 temp1020_218))
(assert (= temp1020_220 var1310898))
(assert (= temp1020_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_220)))
(assert (= temp1020_219 temp1020_221))
(assert (= var1322980
   (ite (= var1322977 temp1020_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1020_222 #x0000000000000001))
(assert (= var1322980 temp1020_222))
(assert (= temp1020_223 #x0000000000000002))
(assert (= var1848169 temp1020_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1020_225 #x0000000000000001))
(assert (= var1323065 temp1020_225))
(assert (= temp1020_226 #x0000000000000001))
(assert (= var3486735 temp1020_226))
(assert (= temp1020_227 #x0000000000000001))
(assert (= var3814415 temp1020_227))
(assert (= temp1020_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1020_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_229 #x0000000000000001))
(assert (= var79986 temp1020_229))
(assert (= temp1020_230 #x0000000000000001))
(assert (= var80116 temp1020_230))
(assert (= var4796905 var80116))
(assert (= temp1020_231 #x0000000000000000))
(assert (= var4784306 temp1020_231))
(assert (= temp1020_232 #x0000000000000000))
(assert (= temp1020_233
   (ite (bvslt var4784306 temp1020_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1020_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_233)))
(assert (= var4796924 temp1020_234))
(assert (bvslt (ite (bvslt var4784306 temp1020_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1020_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1020_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1020_236 #x0000000000000001))
(assert (= var4796925 temp1020_236))
(assert (= temp1020_237 #x0000000000000000))
(assert (= var4996927 temp1020_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1020_238 #x0000000000000002))
(assert (= var5125763 temp1020_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_239 #x0000000000000000))
(assert (= var5191324 temp1020_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1020_240 #x0000000000000001))
(assert (= var79986 temp1020_240))
(assert (= temp1020_241 #x0000000000000000))
(assert (= var7025428 temp1020_241))
(assert (= var7025395 var7025428))
(assert (= var6893959 var7025395))
(assert (= var6893955 var6893959))
(assert (= var81597 var6893955))
(assert (= temp1020_242 #x0000000000000000))
(assert (= var81597 temp1020_242))
(model-add temp1020_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1020_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1020_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






