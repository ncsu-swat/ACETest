(declare-fun temp358_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp358_2 () (_ BitVec 64))
(declare-fun temp358_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp358_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp358_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp358_6 () (_ BitVec 64))
(declare-fun temp358_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_8 () (_ BitVec 64))
(declare-fun temp358_9 () (_ BitVec 64))
(declare-fun temp358_10 () (_ BitVec 64))
(declare-fun temp358_11 () (_ BitVec 64))
(declare-fun temp358_12 () (_ BitVec 64))
(declare-fun temp358_13 () (_ BitVec 64))
(declare-fun temp358_14 () (_ BitVec 64))
(declare-fun temp358_15 () (_ BitVec 64))
(declare-fun temp358_16 () (_ BitVec 64))
(declare-fun temp358_17 () (_ BitVec 64))
(declare-fun temp358_18 () (_ BitVec 64))
(declare-fun temp358_19 () (_ BitVec 64))
(declare-fun temp358_20 () (_ BitVec 64))
(declare-fun temp358_21 () (_ BitVec 64))
(declare-fun temp358_22 () (_ BitVec 64))
(declare-fun temp358_23 () (_ BitVec 64))
(declare-fun temp358_24 () (_ BitVec 64))
(declare-fun temp358_25 () (_ BitVec 64))
(declare-fun temp358_26 () (_ BitVec 64))
(declare-fun temp358_27 () (_ BitVec 64))
(declare-fun temp358_28 () (_ BitVec 64))
(declare-fun temp358_29 () (_ BitVec 64))
(declare-fun temp358_30 () (_ BitVec 64))
(declare-fun temp358_31 () (_ BitVec 64))
(declare-fun temp358_32 () (_ BitVec 64))
(declare-fun temp358_33 () (_ BitVec 64))
(declare-fun temp358_34 () (_ BitVec 64))
(declare-fun temp358_35 () (_ BitVec 64))
(declare-fun temp358_36 () (_ BitVec 64))
(declare-fun temp358_37 () (_ BitVec 64))
(declare-fun temp358_38 () (_ BitVec 64))
(declare-fun temp358_39 () (_ BitVec 64))
(declare-fun temp358_40 () (_ BitVec 64))
(declare-fun temp358_41 () (_ BitVec 64))
(declare-fun temp358_42 () (_ BitVec 64))
(declare-fun temp358_43 () (_ BitVec 64))
(declare-fun temp358_44 () (_ BitVec 64))
(declare-fun temp358_45 () (_ BitVec 64))
(declare-fun temp358_46 () (_ BitVec 64))
(declare-fun temp358_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp358_48 () (_ BitVec 64))
(declare-fun temp358_49 () (_ BitVec 64))
(declare-fun temp358_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_51 () (_ BitVec 64))
(declare-fun temp358_52 () (_ BitVec 64))
(declare-fun temp358_53 () (_ BitVec 64))
(declare-fun temp358_54 () (_ BitVec 64))
(declare-fun temp358_55 () (_ BitVec 64))
(declare-fun temp358_56 () (_ BitVec 64))
(declare-fun temp358_57 () (_ BitVec 64))
(declare-fun temp358_58 () (_ BitVec 64))
(declare-fun temp358_59 () (_ BitVec 64))
(declare-fun temp358_60 () (_ BitVec 64))
(declare-fun temp358_61 () (_ BitVec 64))
(declare-fun temp358_62 () (_ BitVec 64))
(declare-fun temp358_63 () (_ BitVec 64))
(declare-fun temp358_64 () (_ BitVec 64))
(declare-fun temp358_65 () (_ BitVec 64))
(declare-fun temp358_66 () (_ BitVec 64))
(declare-fun temp358_67 () (_ BitVec 64))
(declare-fun temp358_68 () (_ BitVec 64))
(declare-fun temp358_69 () (_ BitVec 64))
(declare-fun temp358_70 () (_ BitVec 64))
(declare-fun temp358_71 () (_ BitVec 64))
(declare-fun temp358_72 () (_ BitVec 64))
(declare-fun temp358_73 () (_ BitVec 64))
(declare-fun temp358_74 () (_ BitVec 64))
(declare-fun temp358_75 () (_ BitVec 64))
(declare-fun temp358_76 () (_ BitVec 64))
(declare-fun temp358_77 () (_ BitVec 64))
(declare-fun temp358_78 () (_ BitVec 64))
(declare-fun temp358_79 () (_ BitVec 64))
(declare-fun temp358_80 () (_ BitVec 64))
(declare-fun temp358_81 () (_ BitVec 64))
(declare-fun temp358_82 () (_ BitVec 64))
(declare-fun temp358_83 () (_ BitVec 64))
(declare-fun temp358_84 () (_ BitVec 64))
(declare-fun temp358_85 () (_ BitVec 64))
(declare-fun temp358_86 () (_ BitVec 64))
(declare-fun temp358_87 () (_ BitVec 64))
(declare-fun temp358_88 () (_ BitVec 64))
(declare-fun temp358_89 () (_ BitVec 64))
(declare-fun temp358_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp358_91 () (_ BitVec 64))
(declare-fun temp358_92 () (_ BitVec 64))
(declare-fun temp358_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_94 () (_ BitVec 64))
(declare-fun temp358_95 () (_ BitVec 64))
(declare-fun temp358_96 () (_ BitVec 64))
(declare-fun temp358_97 () (_ BitVec 64))
(declare-fun temp358_98 () (_ BitVec 64))
(declare-fun temp358_99 () (_ BitVec 64))
(declare-fun temp358_100 () (_ BitVec 64))
(declare-fun temp358_101 () (_ BitVec 64))
(declare-fun temp358_102 () (_ BitVec 64))
(declare-fun temp358_103 () (_ BitVec 64))
(declare-fun temp358_104 () (_ BitVec 64))
(declare-fun temp358_105 () (_ BitVec 64))
(declare-fun temp358_106 () (_ BitVec 64))
(declare-fun temp358_107 () (_ BitVec 64))
(declare-fun temp358_108 () (_ BitVec 64))
(declare-fun temp358_109 () (_ BitVec 64))
(declare-fun temp358_110 () (_ BitVec 64))
(declare-fun temp358_111 () (_ BitVec 64))
(declare-fun temp358_112 () (_ BitVec 64))
(declare-fun temp358_113 () (_ BitVec 64))
(declare-fun temp358_114 () (_ BitVec 64))
(declare-fun temp358_115 () (_ BitVec 64))
(declare-fun temp358_116 () (_ BitVec 64))
(declare-fun temp358_117 () (_ BitVec 64))
(declare-fun temp358_118 () (_ BitVec 64))
(declare-fun temp358_119 () (_ BitVec 64))
(declare-fun temp358_120 () (_ BitVec 64))
(declare-fun temp358_121 () (_ BitVec 64))
(declare-fun temp358_122 () (_ BitVec 64))
(declare-fun temp358_123 () (_ BitVec 64))
(declare-fun temp358_124 () (_ BitVec 64))
(declare-fun temp358_125 () (_ BitVec 64))
(declare-fun temp358_126 () (_ BitVec 64))
(declare-fun temp358_127 () (_ BitVec 64))
(declare-fun temp358_128 () (_ BitVec 64))
(declare-fun temp358_129 () (_ BitVec 64))
(declare-fun temp358_130 () (_ BitVec 64))
(declare-fun temp358_131 () (_ BitVec 64))
(declare-fun temp358_132 () (_ BitVec 64))
(declare-fun temp358_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp358_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp358_135 () (_ BitVec 64))
(declare-fun temp358_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp358_137 () (_ BitVec 64))
(declare-fun temp358_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_139 () (_ BitVec 64))
(declare-fun temp358_140 () (_ BitVec 64))
(declare-fun temp358_141 () (_ BitVec 64))
(declare-fun temp358_142 () (_ BitVec 64))
(declare-fun temp358_143 () (_ BitVec 64))
(declare-fun temp358_144 () (_ BitVec 64))
(declare-fun temp358_145 () (_ BitVec 64))
(declare-fun temp358_146 () (_ BitVec 64))
(declare-fun temp358_147 () (_ BitVec 64))
(declare-fun temp358_148 () (_ BitVec 64))
(declare-fun temp358_149 () (_ BitVec 64))
(declare-fun temp358_150 () (_ BitVec 64))
(declare-fun temp358_151 () (_ BitVec 64))
(declare-fun temp358_152 () (_ BitVec 64))
(declare-fun temp358_153 () (_ BitVec 64))
(declare-fun temp358_154 () (_ BitVec 64))
(declare-fun temp358_156 () (_ BitVec 64))
(declare-fun temp358_157 () (_ BitVec 64))
(declare-fun temp358_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp358_158 () (_ BitVec 64))
(declare-fun temp358_159 () (_ BitVec 64))
(declare-fun temp358_161 () (_ BitVec 64))
(declare-fun temp358_162 () (_ BitVec 64))
(declare-fun temp358_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp358_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp358_164 () (_ BitVec 64))
(declare-fun temp358_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp358_166 () (_ BitVec 64))
(declare-fun temp358_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp358_168 () (_ BitVec 64))
(declare-fun temp358_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_170 () (_ BitVec 64))
(declare-fun temp358_171 () (_ BitVec 64))
(declare-fun temp358_172 () (_ BitVec 64))
(declare-fun temp358_173 () (_ BitVec 64))
(declare-fun temp358_174 () (_ BitVec 64))
(declare-fun temp358_175 () (_ BitVec 64))
(declare-fun temp358_176 () (_ BitVec 64))
(declare-fun temp358_177 () (_ BitVec 64))
(declare-fun temp358_178 () (_ BitVec 64))
(declare-fun temp358_179 () (_ BitVec 64))
(declare-fun temp358_180 () (_ BitVec 64))
(declare-fun temp358_181 () (_ BitVec 64))
(declare-fun temp358_182 () (_ BitVec 64))
(declare-fun temp358_183 () (_ BitVec 64))
(declare-fun temp358_184 () (_ BitVec 64))
(declare-fun temp358_185 () (_ BitVec 64))
(declare-fun temp358_186 () (_ BitVec 64))
(declare-fun temp358_187 () (_ BitVec 64))
(declare-fun temp358_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp358_189 () (_ BitVec 64))
(declare-fun temp358_191 () (_ BitVec 64))
(declare-fun temp358_192 () (_ BitVec 64))
(declare-fun temp358_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp358_193 () (_ BitVec 64))
(declare-fun temp358_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp358_195 () (_ BitVec 64))
(declare-fun temp358_196 () (_ BitVec 64))
(declare-fun temp358_197 () (_ BitVec 64))
(declare-fun temp358_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_199 () (_ BitVec 64))
(declare-fun temp358_200 () (_ BitVec 64))
(declare-fun temp358_201 () (_ BitVec 64))
(declare-fun temp358_202 () (_ BitVec 64))
(declare-fun temp358_203 () (_ BitVec 64))
(declare-fun temp358_204 () (_ BitVec 64))
(declare-fun temp358_205 () (_ BitVec 64))
(declare-fun temp358_206 () (_ BitVec 64))
(declare-fun temp358_207 () (_ BitVec 64))
(declare-fun temp358_208 () (_ BitVec 64))
(declare-fun temp358_209 () (_ BitVec 64))
(declare-fun temp358_210 () (_ BitVec 64))
(declare-fun temp358_211 () (_ BitVec 64))
(declare-fun temp358_212 () (_ BitVec 64))
(declare-fun temp358_213 () (_ BitVec 64))
(declare-fun temp358_214 () (_ BitVec 64))
(declare-fun temp358_215 () (_ BitVec 64))
(declare-fun temp358_216 () (_ BitVec 64))
(declare-fun temp358_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp358_218 () (_ BitVec 64))
(declare-fun temp358_220 () (_ BitVec 64))
(declare-fun temp358_221 () (_ BitVec 64))
(declare-fun temp358_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp358_222 () (_ BitVec 64))
(declare-fun temp358_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp358_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp358_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp358_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp358_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp358_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp358_229 () (_ BitVec 64))
(declare-fun temp358_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp358_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp358_232 () (_ BitVec 64))
(declare-fun temp358_233 () (_ BitVec 64))
(declare-fun temp358_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp358_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp358_236 () (_ BitVec 64))
(declare-fun temp358_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp358_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp358_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp358_240 () (_ BitVec 64))
(assert (= temp358_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp358_1)))
(assert (= temp358_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp358_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_3 #x0000000000000000))
(assert (= var79869 temp358_3))
(assert (= temp358_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp358_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_5 #x0000000000000000))
(assert (= var79914 temp358_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp358_6 #x0000000000000000))
(assert (= temp358_7 temp358_6))
(assert (= temp358_8 (select ARGNAME_padding_NAMEEND_VAL temp358_7)))
(assert (= temp358_9 #x0000000000000001))
(assert (= temp358_10 temp358_9))
(assert (= temp358_11 (select ARGNAME_padding_NAMEEND_VAL temp358_10)))
(assert (= temp358_12 #x0000000000000002))
(assert (= temp358_13 temp358_12))
(assert (= temp358_14 (select ARGNAME_padding_NAMEEND_VAL temp358_13)))
(assert (= temp358_15 #x0000000000000003))
(assert (= temp358_16 temp358_15))
(assert (= temp358_17 (select ARGNAME_padding_NAMEEND_VAL temp358_16)))
(assert (= temp358_18 #x0000000000000004))
(assert (= temp358_19 temp358_18))
(assert (= temp358_20 (select ARGNAME_padding_NAMEEND_VAL temp358_19)))
(assert (= temp358_21 #x0000000000000005))
(assert (= temp358_22 temp358_21))
(assert (= temp358_23 (select ARGNAME_padding_NAMEEND_VAL temp358_22)))
(assert (= temp358_24 #x0000000000000000))
(assert (= temp358_25 #x0000000000000000))
(assert (= temp358_26 temp358_25))
(assert (= temp358_27 (select ARGNAME_padding_NAMEEND_VAL temp358_26)))
(assert (= temp358_28 #x0000000000000000))
(assert (= temp358_29 #x0000000000000001))
(assert (= temp358_30 temp358_29))
(assert (= temp358_31 (select ARGNAME_padding_NAMEEND_VAL temp358_30)))
(assert (= temp358_32 #x0000000000000000))
(assert (= temp358_33 #x0000000000000002))
(assert (= temp358_34 temp358_33))
(assert (= temp358_35 (select ARGNAME_padding_NAMEEND_VAL temp358_34)))
(assert (= temp358_36 #x0000000000000000))
(assert (= temp358_37 #x0000000000000003))
(assert (= temp358_38 temp358_37))
(assert (= temp358_39 (select ARGNAME_padding_NAMEEND_VAL temp358_38)))
(assert (= temp358_40 #x0000000000000000))
(assert (= temp358_41 #x0000000000000004))
(assert (= temp358_42 temp358_41))
(assert (= temp358_43 (select ARGNAME_padding_NAMEEND_VAL temp358_42)))
(assert (= temp358_44 #x0000000000000000))
(assert (= temp358_45 #x0000000000000005))
(assert (= temp358_46 temp358_45))
(assert (= temp358_47 (select ARGNAME_padding_NAMEEND_VAL temp358_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp358_27 temp358_24)
             (bvslt temp358_31 temp358_28)
             (bvslt temp358_35 temp358_32)
             (bvslt temp358_39 temp358_36)
             (bvslt temp358_43 temp358_40)
             (bvslt temp358_47 temp358_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_48 #x0000000000000000))
(assert (= var1322786 temp358_48))
(assert (= temp358_49 #x0000000000000000))
(assert (= temp358_50 temp358_49))
(assert (= temp358_51 (select ARGNAME_output_padding_NAMEEND_VAL temp358_50)))
(assert (= temp358_52 #x0000000000000001))
(assert (= temp358_53 temp358_52))
(assert (= temp358_54 (select ARGNAME_output_padding_NAMEEND_VAL temp358_53)))
(assert (= temp358_55 #x0000000000000002))
(assert (= temp358_56 temp358_55))
(assert (= temp358_57 (select ARGNAME_output_padding_NAMEEND_VAL temp358_56)))
(assert (= temp358_58 #x0000000000000003))
(assert (= temp358_59 temp358_58))
(assert (= temp358_60 (select ARGNAME_output_padding_NAMEEND_VAL temp358_59)))
(assert (= temp358_61 #x0000000000000004))
(assert (= temp358_62 temp358_61))
(assert (= temp358_63 (select ARGNAME_output_padding_NAMEEND_VAL temp358_62)))
(assert (= temp358_64 #x0000000000000005))
(assert (= temp358_65 temp358_64))
(assert (= temp358_66 (select ARGNAME_output_padding_NAMEEND_VAL temp358_65)))
(assert (= temp358_67 #x0000000000000000))
(assert (= temp358_68 #x0000000000000000))
(assert (= temp358_69 temp358_68))
(assert (= temp358_70 (select ARGNAME_output_padding_NAMEEND_VAL temp358_69)))
(assert (= temp358_71 #x0000000000000000))
(assert (= temp358_72 #x0000000000000001))
(assert (= temp358_73 temp358_72))
(assert (= temp358_74 (select ARGNAME_output_padding_NAMEEND_VAL temp358_73)))
(assert (= temp358_75 #x0000000000000000))
(assert (= temp358_76 #x0000000000000002))
(assert (= temp358_77 temp358_76))
(assert (= temp358_78 (select ARGNAME_output_padding_NAMEEND_VAL temp358_77)))
(assert (= temp358_79 #x0000000000000000))
(assert (= temp358_80 #x0000000000000003))
(assert (= temp358_81 temp358_80))
(assert (= temp358_82 (select ARGNAME_output_padding_NAMEEND_VAL temp358_81)))
(assert (= temp358_83 #x0000000000000000))
(assert (= temp358_84 #x0000000000000004))
(assert (= temp358_85 temp358_84))
(assert (= temp358_86 (select ARGNAME_output_padding_NAMEEND_VAL temp358_85)))
(assert (= temp358_87 #x0000000000000000))
(assert (= temp358_88 #x0000000000000005))
(assert (= temp358_89 temp358_88))
(assert (= temp358_90 (select ARGNAME_output_padding_NAMEEND_VAL temp358_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp358_70 temp358_67)
             (bvslt temp358_74 temp358_71)
             (bvslt temp358_78 temp358_75)
             (bvslt temp358_82 temp358_79)
             (bvslt temp358_86 temp358_83)
             (bvslt temp358_90 temp358_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_91 #x0000000000000000))
(assert (= var1322797 temp358_91))
(assert (= temp358_92 #x0000000000000000))
(assert (= temp358_93 temp358_92))
(assert (= temp358_94 (select ARGNAME_stride_NAMEEND_VAL temp358_93)))
(assert (= temp358_95 #x0000000000000001))
(assert (= temp358_96 temp358_95))
(assert (= temp358_97 (select ARGNAME_stride_NAMEEND_VAL temp358_96)))
(assert (= temp358_98 #x0000000000000002))
(assert (= temp358_99 temp358_98))
(assert (= temp358_100 (select ARGNAME_stride_NAMEEND_VAL temp358_99)))
(assert (= temp358_101 #x0000000000000003))
(assert (= temp358_102 temp358_101))
(assert (= temp358_103 (select ARGNAME_stride_NAMEEND_VAL temp358_102)))
(assert (= temp358_104 #x0000000000000004))
(assert (= temp358_105 temp358_104))
(assert (= temp358_106 (select ARGNAME_stride_NAMEEND_VAL temp358_105)))
(assert (= temp358_107 #x0000000000000005))
(assert (= temp358_108 temp358_107))
(assert (= temp358_109 (select ARGNAME_stride_NAMEEND_VAL temp358_108)))
(assert (= temp358_110 #x0000000000000000))
(assert (= temp358_111 #x0000000000000000))
(assert (= temp358_112 temp358_111))
(assert (= temp358_113 (select ARGNAME_stride_NAMEEND_VAL temp358_112)))
(assert (= temp358_114 #x0000000000000000))
(assert (= temp358_115 #x0000000000000001))
(assert (= temp358_116 temp358_115))
(assert (= temp358_117 (select ARGNAME_stride_NAMEEND_VAL temp358_116)))
(assert (= temp358_118 #x0000000000000000))
(assert (= temp358_119 #x0000000000000002))
(assert (= temp358_120 temp358_119))
(assert (= temp358_121 (select ARGNAME_stride_NAMEEND_VAL temp358_120)))
(assert (= temp358_122 #x0000000000000000))
(assert (= temp358_123 #x0000000000000003))
(assert (= temp358_124 temp358_123))
(assert (= temp358_125 (select ARGNAME_stride_NAMEEND_VAL temp358_124)))
(assert (= temp358_126 #x0000000000000000))
(assert (= temp358_127 #x0000000000000004))
(assert (= temp358_128 temp358_127))
(assert (= temp358_129 (select ARGNAME_stride_NAMEEND_VAL temp358_128)))
(assert (= temp358_130 #x0000000000000000))
(assert (= temp358_131 #x0000000000000005))
(assert (= temp358_132 temp358_131))
(assert (= temp358_133 (select ARGNAME_stride_NAMEEND_VAL temp358_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp358_113 temp358_110)
             (bvsle temp358_117 temp358_114)
             (bvsle temp358_121 temp358_118)
             (bvsle temp358_125 temp358_122)
             (bvsle temp358_129 temp358_126)
             (bvsle temp358_133 temp358_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_134 #x0000000000000000))
(assert (= var1322807 temp358_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_135 #x0000000000000001))
(assert (= var1322819 temp358_135))
(assert (= temp358_136 #x0000000000000000))
(assert (= var1310898 temp358_136))
(assert (= temp358_137 #x0000000000000000))
(assert (= temp358_138 temp358_137))
(assert (= temp358_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_138)))
(assert (= temp358_140 #x0000000000000001))
(assert (= temp358_141 temp358_140))
(assert (= temp358_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_141)))
(assert (= temp358_143 #x0000000000000002))
(assert (= temp358_144 temp358_143))
(assert (= temp358_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_144)))
(assert (= temp358_146 #x0000000000000003))
(assert (= temp358_147 temp358_146))
(assert (= temp358_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_147)))
(assert (= temp358_149 #x0000000000000004))
(assert (= temp358_150 temp358_149))
(assert (= temp358_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_150)))
(assert (= temp358_152 #x0000000000000005))
(assert (= temp358_153 temp358_152))
(assert (= temp358_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_153)))
(assert (= temp358_156 var1310898))
(assert (= temp358_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_156)))
(assert (= temp358_155 temp358_157))
(assert (= var1322852
   (ite (bvslt temp358_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_158 #x0000000000000000))
(assert (= var1322852 temp358_158))
(assert (= temp358_159 #x0000000000000000))
(assert (= var1310898 temp358_159))
(assert (= temp358_161 var1310898))
(assert (= temp358_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_161)))
(assert (= temp358_160 temp358_162))
(assert (= var1322874 (bvsmod temp358_160 ARGNAME_groups_NAMEEND)))
(assert (= temp358_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp358_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_164 #x0000000000000001))
(assert (= var1322875 temp358_164))
(assert (= temp358_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp358_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_166 #x0000000000000001))
(assert (= var1322895 temp358_166))
(assert (= temp358_167 #x0000000000000001))
(assert (= var1311786 temp358_167))
(assert (= temp358_168 #x0000000000000000))
(assert (= temp358_169 temp358_168))
(assert (= temp358_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_169)))
(assert (= temp358_171 #x0000000000000001))
(assert (= temp358_172 temp358_171))
(assert (= temp358_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_172)))
(assert (= temp358_174 #x0000000000000002))
(assert (= temp358_175 temp358_174))
(assert (= temp358_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_175)))
(assert (= temp358_177 #x0000000000000003))
(assert (= temp358_178 temp358_177))
(assert (= temp358_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_178)))
(assert (= temp358_180 #x0000000000000004))
(assert (= temp358_181 temp358_180))
(assert (= temp358_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_181)))
(assert (= temp358_183 #x0000000000000005))
(assert (= temp358_184 temp358_183))
(assert (= temp358_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_184)))
(assert (= temp358_186 #x0000000000000000))
(assert (= temp358_187
   (ite (bvslt var1311786 temp358_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp358_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_187)))
(assert (= var1322903 temp358_188))
(assert (bvslt (ite (bvslt var1311786 temp358_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp358_189 #x0000000000000001))
(assert (= var1311786 temp358_189))
(assert (= temp358_191 var1311786))
(assert (= temp358_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_191)))
(assert (= temp358_190 temp358_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp358_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_193 #x0000000000000001))
(assert (= var1322908 temp358_193))
(assert (= temp358_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp358_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_195 #x0000000000000001))
(assert (= var1322975 temp358_195))
(assert (= temp358_196 #x0000000000000000))
(assert (= var1310898 temp358_196))
(assert (= temp358_197 #x0000000000000000))
(assert (= temp358_198 temp358_197))
(assert (= temp358_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp358_198)))
(assert (= temp358_200 #x0000000000000001))
(assert (= temp358_201 temp358_200))
(assert (= temp358_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp358_201)))
(assert (= temp358_203 #x0000000000000002))
(assert (= temp358_204 temp358_203))
(assert (= temp358_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp358_204)))
(assert (= temp358_206 #x0000000000000003))
(assert (= temp358_207 temp358_206))
(assert (= temp358_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp358_207)))
(assert (= temp358_209 #x0000000000000004))
(assert (= temp358_210 temp358_209))
(assert (= temp358_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp358_210)))
(assert (= temp358_212 #x0000000000000005))
(assert (= temp358_213 temp358_212))
(assert (= temp358_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp358_213)))
(assert (= temp358_215 #x0000000000000000))
(assert (= temp358_216
   (ite (bvslt var1310898 temp358_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp358_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp358_216)))
(assert (= var1322977 temp358_217))
(assert (bvslt (ite (bvslt var1310898 temp358_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp358_218 #x0000000000000000))
(assert (= var1310898 temp358_218))
(assert (= temp358_220 var1310898))
(assert (= temp358_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_220)))
(assert (= temp358_219 temp358_221))
(assert (= var1322980
   (ite (= var1322977 temp358_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_222 #x0000000000000001))
(assert (= var1322980 temp358_222))
(assert (= temp358_223 #x0000000000000002))
(assert (= var1848169 temp358_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp358_225 #x0000000000000001))
(assert (= var1323065 temp358_225))
(assert (= temp358_226 #x0000000000000001))
(assert (= var3486735 temp358_226))
(assert (= temp358_227 #x0000000000000001))
(assert (= var3814415 temp358_227))
(assert (= temp358_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp358_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_229 #x0000000000000001))
(assert (= var79986 temp358_229))
(assert (= temp358_230 #x0000000000000001))
(assert (= var80116 temp358_230))
(assert (= var4796905 var80116))
(assert (= temp358_231 #x0000000000000000))
(assert (= var4784306 temp358_231))
(assert (= temp358_232 #x0000000000000000))
(assert (= temp358_233
   (ite (bvslt var4784306 temp358_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp358_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_233)))
(assert (= var4796924 temp358_234))
(assert (bvslt (ite (bvslt var4784306 temp358_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp358_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp358_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_236 #x0000000000000001))
(assert (= var4796925 temp358_236))
(assert (= temp358_237 #x0000000000000000))
(assert (= var4996927 temp358_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp358_238 #x0000000000000002))
(assert (= var5125763 temp358_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_239 #x0000000000000000))
(assert (= var5191324 temp358_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp358_240 #x0000000000000001))
(assert (= var79986 temp358_240))
(model-add temp358_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp358_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp358_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






