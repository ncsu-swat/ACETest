(declare-fun temp836_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp836_2 () (_ BitVec 64))
(declare-fun temp836_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp836_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp836_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp836_6 () (_ BitVec 64))
(declare-fun temp836_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp836_8 () (_ BitVec 64))
(declare-fun temp836_9 () (_ BitVec 64))
(declare-fun temp836_10 () (_ BitVec 64))
(declare-fun temp836_11 () (_ BitVec 64))
(declare-fun temp836_12 () (_ BitVec 64))
(declare-fun temp836_13 () (_ BitVec 64))
(declare-fun temp836_14 () (_ BitVec 64))
(declare-fun temp836_15 () (_ BitVec 64))
(declare-fun temp836_16 () (_ BitVec 64))
(declare-fun temp836_17 () (_ BitVec 64))
(declare-fun temp836_18 () (_ BitVec 64))
(declare-fun temp836_19 () (_ BitVec 64))
(declare-fun temp836_20 () (_ BitVec 64))
(declare-fun temp836_21 () (_ BitVec 64))
(declare-fun temp836_22 () (_ BitVec 64))
(declare-fun temp836_23 () (_ BitVec 64))
(declare-fun temp836_24 () (_ BitVec 64))
(declare-fun temp836_25 () (_ BitVec 64))
(declare-fun temp836_26 () (_ BitVec 64))
(declare-fun temp836_27 () (_ BitVec 64))
(declare-fun temp836_28 () (_ BitVec 64))
(declare-fun temp836_29 () (_ BitVec 64))
(declare-fun temp836_30 () (_ BitVec 64))
(declare-fun temp836_31 () (_ BitVec 64))
(declare-fun temp836_32 () (_ BitVec 64))
(declare-fun temp836_33 () (_ BitVec 64))
(declare-fun temp836_34 () (_ BitVec 64))
(declare-fun temp836_35 () (_ BitVec 64))
(declare-fun temp836_36 () (_ BitVec 64))
(declare-fun temp836_37 () (_ BitVec 64))
(declare-fun temp836_38 () (_ BitVec 64))
(declare-fun temp836_39 () (_ BitVec 64))
(declare-fun temp836_40 () (_ BitVec 64))
(declare-fun temp836_41 () (_ BitVec 64))
(declare-fun temp836_42 () (_ BitVec 64))
(declare-fun temp836_43 () (_ BitVec 64))
(declare-fun temp836_44 () (_ BitVec 64))
(declare-fun temp836_45 () (_ BitVec 64))
(declare-fun temp836_46 () (_ BitVec 64))
(declare-fun temp836_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp836_48 () (_ BitVec 64))
(declare-fun temp836_49 () (_ BitVec 64))
(declare-fun temp836_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp836_51 () (_ BitVec 64))
(declare-fun temp836_52 () (_ BitVec 64))
(declare-fun temp836_53 () (_ BitVec 64))
(declare-fun temp836_54 () (_ BitVec 64))
(declare-fun temp836_55 () (_ BitVec 64))
(declare-fun temp836_56 () (_ BitVec 64))
(declare-fun temp836_57 () (_ BitVec 64))
(declare-fun temp836_58 () (_ BitVec 64))
(declare-fun temp836_59 () (_ BitVec 64))
(declare-fun temp836_60 () (_ BitVec 64))
(declare-fun temp836_61 () (_ BitVec 64))
(declare-fun temp836_62 () (_ BitVec 64))
(declare-fun temp836_63 () (_ BitVec 64))
(declare-fun temp836_64 () (_ BitVec 64))
(declare-fun temp836_65 () (_ BitVec 64))
(declare-fun temp836_66 () (_ BitVec 64))
(declare-fun temp836_67 () (_ BitVec 64))
(declare-fun temp836_68 () (_ BitVec 64))
(declare-fun temp836_69 () (_ BitVec 64))
(declare-fun temp836_70 () (_ BitVec 64))
(declare-fun temp836_71 () (_ BitVec 64))
(declare-fun temp836_72 () (_ BitVec 64))
(declare-fun temp836_73 () (_ BitVec 64))
(declare-fun temp836_74 () (_ BitVec 64))
(declare-fun temp836_75 () (_ BitVec 64))
(declare-fun temp836_76 () (_ BitVec 64))
(declare-fun temp836_77 () (_ BitVec 64))
(declare-fun temp836_78 () (_ BitVec 64))
(declare-fun temp836_79 () (_ BitVec 64))
(declare-fun temp836_80 () (_ BitVec 64))
(declare-fun temp836_81 () (_ BitVec 64))
(declare-fun temp836_82 () (_ BitVec 64))
(declare-fun temp836_83 () (_ BitVec 64))
(declare-fun temp836_84 () (_ BitVec 64))
(declare-fun temp836_85 () (_ BitVec 64))
(declare-fun temp836_86 () (_ BitVec 64))
(declare-fun temp836_87 () (_ BitVec 64))
(declare-fun temp836_88 () (_ BitVec 64))
(declare-fun temp836_89 () (_ BitVec 64))
(declare-fun temp836_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp836_91 () (_ BitVec 64))
(declare-fun temp836_92 () (_ BitVec 64))
(declare-fun temp836_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp836_94 () (_ BitVec 64))
(declare-fun temp836_95 () (_ BitVec 64))
(declare-fun temp836_96 () (_ BitVec 64))
(declare-fun temp836_97 () (_ BitVec 64))
(declare-fun temp836_98 () (_ BitVec 64))
(declare-fun temp836_99 () (_ BitVec 64))
(declare-fun temp836_100 () (_ BitVec 64))
(declare-fun temp836_101 () (_ BitVec 64))
(declare-fun temp836_102 () (_ BitVec 64))
(declare-fun temp836_103 () (_ BitVec 64))
(declare-fun temp836_104 () (_ BitVec 64))
(declare-fun temp836_105 () (_ BitVec 64))
(declare-fun temp836_106 () (_ BitVec 64))
(declare-fun temp836_107 () (_ BitVec 64))
(declare-fun temp836_108 () (_ BitVec 64))
(declare-fun temp836_109 () (_ BitVec 64))
(declare-fun temp836_110 () (_ BitVec 64))
(declare-fun temp836_111 () (_ BitVec 64))
(declare-fun temp836_112 () (_ BitVec 64))
(declare-fun temp836_113 () (_ BitVec 64))
(declare-fun temp836_114 () (_ BitVec 64))
(declare-fun temp836_115 () (_ BitVec 64))
(declare-fun temp836_116 () (_ BitVec 64))
(declare-fun temp836_117 () (_ BitVec 64))
(declare-fun temp836_118 () (_ BitVec 64))
(declare-fun temp836_119 () (_ BitVec 64))
(declare-fun temp836_120 () (_ BitVec 64))
(declare-fun temp836_121 () (_ BitVec 64))
(declare-fun temp836_122 () (_ BitVec 64))
(declare-fun temp836_123 () (_ BitVec 64))
(declare-fun temp836_124 () (_ BitVec 64))
(declare-fun temp836_125 () (_ BitVec 64))
(declare-fun temp836_126 () (_ BitVec 64))
(declare-fun temp836_127 () (_ BitVec 64))
(declare-fun temp836_128 () (_ BitVec 64))
(declare-fun temp836_129 () (_ BitVec 64))
(declare-fun temp836_130 () (_ BitVec 64))
(declare-fun temp836_131 () (_ BitVec 64))
(declare-fun temp836_132 () (_ BitVec 64))
(declare-fun temp836_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp836_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp836_135 () (_ BitVec 64))
(declare-fun temp836_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp836_137 () (_ BitVec 64))
(declare-fun temp836_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp836_139 () (_ BitVec 64))
(declare-fun temp836_140 () (_ BitVec 64))
(declare-fun temp836_141 () (_ BitVec 64))
(declare-fun temp836_142 () (_ BitVec 64))
(declare-fun temp836_143 () (_ BitVec 64))
(declare-fun temp836_144 () (_ BitVec 64))
(declare-fun temp836_145 () (_ BitVec 64))
(declare-fun temp836_146 () (_ BitVec 64))
(declare-fun temp836_147 () (_ BitVec 64))
(declare-fun temp836_148 () (_ BitVec 64))
(declare-fun temp836_149 () (_ BitVec 64))
(declare-fun temp836_150 () (_ BitVec 64))
(declare-fun temp836_151 () (_ BitVec 64))
(declare-fun temp836_152 () (_ BitVec 64))
(declare-fun temp836_153 () (_ BitVec 64))
(declare-fun temp836_154 () (_ BitVec 64))
(declare-fun temp836_156 () (_ BitVec 64))
(declare-fun temp836_157 () (_ BitVec 64))
(declare-fun temp836_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp836_158 () (_ BitVec 64))
(declare-fun temp836_159 () (_ BitVec 64))
(declare-fun temp836_161 () (_ BitVec 64))
(declare-fun temp836_162 () (_ BitVec 64))
(declare-fun temp836_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp836_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp836_164 () (_ BitVec 64))
(declare-fun temp836_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp836_166 () (_ BitVec 64))
(declare-fun temp836_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp836_168 () (_ BitVec 64))
(declare-fun temp836_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp836_170 () (_ BitVec 64))
(declare-fun temp836_171 () (_ BitVec 64))
(declare-fun temp836_172 () (_ BitVec 64))
(declare-fun temp836_173 () (_ BitVec 64))
(declare-fun temp836_174 () (_ BitVec 64))
(declare-fun temp836_175 () (_ BitVec 64))
(declare-fun temp836_176 () (_ BitVec 64))
(declare-fun temp836_177 () (_ BitVec 64))
(declare-fun temp836_178 () (_ BitVec 64))
(declare-fun temp836_179 () (_ BitVec 64))
(declare-fun temp836_180 () (_ BitVec 64))
(declare-fun temp836_181 () (_ BitVec 64))
(declare-fun temp836_182 () (_ BitVec 64))
(declare-fun temp836_183 () (_ BitVec 64))
(declare-fun temp836_184 () (_ BitVec 64))
(declare-fun temp836_185 () (_ BitVec 64))
(declare-fun temp836_186 () (_ BitVec 64))
(declare-fun temp836_187 () (_ BitVec 64))
(declare-fun temp836_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp836_189 () (_ BitVec 64))
(declare-fun temp836_191 () (_ BitVec 64))
(declare-fun temp836_192 () (_ BitVec 64))
(declare-fun temp836_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp836_193 () (_ BitVec 64))
(declare-fun temp836_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp836_195 () (_ BitVec 64))
(declare-fun temp836_196 () (_ BitVec 64))
(declare-fun temp836_197 () (_ BitVec 64))
(declare-fun temp836_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp836_199 () (_ BitVec 64))
(declare-fun temp836_200 () (_ BitVec 64))
(declare-fun temp836_201 () (_ BitVec 64))
(declare-fun temp836_202 () (_ BitVec 64))
(declare-fun temp836_203 () (_ BitVec 64))
(declare-fun temp836_204 () (_ BitVec 64))
(declare-fun temp836_205 () (_ BitVec 64))
(declare-fun temp836_206 () (_ BitVec 64))
(declare-fun temp836_207 () (_ BitVec 64))
(declare-fun temp836_208 () (_ BitVec 64))
(declare-fun temp836_209 () (_ BitVec 64))
(declare-fun temp836_210 () (_ BitVec 64))
(declare-fun temp836_211 () (_ BitVec 64))
(declare-fun temp836_212 () (_ BitVec 64))
(declare-fun temp836_213 () (_ BitVec 64))
(declare-fun temp836_214 () (_ BitVec 64))
(declare-fun temp836_215 () (_ BitVec 64))
(declare-fun temp836_216 () (_ BitVec 64))
(declare-fun temp836_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp836_218 () (_ BitVec 64))
(declare-fun temp836_220 () (_ BitVec 64))
(declare-fun temp836_221 () (_ BitVec 64))
(declare-fun temp836_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp836_222 () (_ BitVec 64))
(declare-fun temp836_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp836_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp836_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp836_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp836_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp836_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp836_229 () (_ BitVec 64))
(declare-fun temp836_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp836_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp836_232 () (_ BitVec 64))
(declare-fun temp836_233 () (_ BitVec 64))
(declare-fun temp836_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp836_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp836_236 () (_ BitVec 64))
(declare-fun temp836_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp836_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp836_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp836_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80889 () (_ BitVec 64))
(declare-fun temp836_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80891 () (_ BitVec 64))
(declare-fun temp836_242 () (_ BitVec 64))
(declare-fun temp836_243 () (_ BitVec 64))
(declare-fun var7549716 () (_ BitVec 64))
(declare-fun var7549683 () (_ BitVec 64))
(declare-fun var7418247 () (_ BitVec 64))
(declare-fun var7418243 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp836_244 () (_ BitVec 64))
(assert (= temp836_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp836_1)))
(assert (= temp836_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp836_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_3 #x0000000000000000))
(assert (= var79869 temp836_3))
(assert (= temp836_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp836_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_5 #x0000000000000000))
(assert (= var79914 temp836_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp836_6 #x0000000000000000))
(assert (= temp836_7 temp836_6))
(assert (= temp836_8 (select ARGNAME_padding_NAMEEND_VAL temp836_7)))
(assert (= temp836_9 #x0000000000000001))
(assert (= temp836_10 temp836_9))
(assert (= temp836_11 (select ARGNAME_padding_NAMEEND_VAL temp836_10)))
(assert (= temp836_12 #x0000000000000002))
(assert (= temp836_13 temp836_12))
(assert (= temp836_14 (select ARGNAME_padding_NAMEEND_VAL temp836_13)))
(assert (= temp836_15 #x0000000000000003))
(assert (= temp836_16 temp836_15))
(assert (= temp836_17 (select ARGNAME_padding_NAMEEND_VAL temp836_16)))
(assert (= temp836_18 #x0000000000000004))
(assert (= temp836_19 temp836_18))
(assert (= temp836_20 (select ARGNAME_padding_NAMEEND_VAL temp836_19)))
(assert (= temp836_21 #x0000000000000005))
(assert (= temp836_22 temp836_21))
(assert (= temp836_23 (select ARGNAME_padding_NAMEEND_VAL temp836_22)))
(assert (= temp836_24 #x0000000000000000))
(assert (= temp836_25 #x0000000000000000))
(assert (= temp836_26 temp836_25))
(assert (= temp836_27 (select ARGNAME_padding_NAMEEND_VAL temp836_26)))
(assert (= temp836_28 #x0000000000000000))
(assert (= temp836_29 #x0000000000000001))
(assert (= temp836_30 temp836_29))
(assert (= temp836_31 (select ARGNAME_padding_NAMEEND_VAL temp836_30)))
(assert (= temp836_32 #x0000000000000000))
(assert (= temp836_33 #x0000000000000002))
(assert (= temp836_34 temp836_33))
(assert (= temp836_35 (select ARGNAME_padding_NAMEEND_VAL temp836_34)))
(assert (= temp836_36 #x0000000000000000))
(assert (= temp836_37 #x0000000000000003))
(assert (= temp836_38 temp836_37))
(assert (= temp836_39 (select ARGNAME_padding_NAMEEND_VAL temp836_38)))
(assert (= temp836_40 #x0000000000000000))
(assert (= temp836_41 #x0000000000000004))
(assert (= temp836_42 temp836_41))
(assert (= temp836_43 (select ARGNAME_padding_NAMEEND_VAL temp836_42)))
(assert (= temp836_44 #x0000000000000000))
(assert (= temp836_45 #x0000000000000005))
(assert (= temp836_46 temp836_45))
(assert (= temp836_47 (select ARGNAME_padding_NAMEEND_VAL temp836_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp836_27 temp836_24)
             (bvslt temp836_31 temp836_28)
             (bvslt temp836_35 temp836_32)
             (bvslt temp836_39 temp836_36)
             (bvslt temp836_43 temp836_40)
             (bvslt temp836_47 temp836_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_48 #x0000000000000000))
(assert (= var1322786 temp836_48))
(assert (= temp836_49 #x0000000000000000))
(assert (= temp836_50 temp836_49))
(assert (= temp836_51 (select ARGNAME_output_padding_NAMEEND_VAL temp836_50)))
(assert (= temp836_52 #x0000000000000001))
(assert (= temp836_53 temp836_52))
(assert (= temp836_54 (select ARGNAME_output_padding_NAMEEND_VAL temp836_53)))
(assert (= temp836_55 #x0000000000000002))
(assert (= temp836_56 temp836_55))
(assert (= temp836_57 (select ARGNAME_output_padding_NAMEEND_VAL temp836_56)))
(assert (= temp836_58 #x0000000000000003))
(assert (= temp836_59 temp836_58))
(assert (= temp836_60 (select ARGNAME_output_padding_NAMEEND_VAL temp836_59)))
(assert (= temp836_61 #x0000000000000004))
(assert (= temp836_62 temp836_61))
(assert (= temp836_63 (select ARGNAME_output_padding_NAMEEND_VAL temp836_62)))
(assert (= temp836_64 #x0000000000000005))
(assert (= temp836_65 temp836_64))
(assert (= temp836_66 (select ARGNAME_output_padding_NAMEEND_VAL temp836_65)))
(assert (= temp836_67 #x0000000000000000))
(assert (= temp836_68 #x0000000000000000))
(assert (= temp836_69 temp836_68))
(assert (= temp836_70 (select ARGNAME_output_padding_NAMEEND_VAL temp836_69)))
(assert (= temp836_71 #x0000000000000000))
(assert (= temp836_72 #x0000000000000001))
(assert (= temp836_73 temp836_72))
(assert (= temp836_74 (select ARGNAME_output_padding_NAMEEND_VAL temp836_73)))
(assert (= temp836_75 #x0000000000000000))
(assert (= temp836_76 #x0000000000000002))
(assert (= temp836_77 temp836_76))
(assert (= temp836_78 (select ARGNAME_output_padding_NAMEEND_VAL temp836_77)))
(assert (= temp836_79 #x0000000000000000))
(assert (= temp836_80 #x0000000000000003))
(assert (= temp836_81 temp836_80))
(assert (= temp836_82 (select ARGNAME_output_padding_NAMEEND_VAL temp836_81)))
(assert (= temp836_83 #x0000000000000000))
(assert (= temp836_84 #x0000000000000004))
(assert (= temp836_85 temp836_84))
(assert (= temp836_86 (select ARGNAME_output_padding_NAMEEND_VAL temp836_85)))
(assert (= temp836_87 #x0000000000000000))
(assert (= temp836_88 #x0000000000000005))
(assert (= temp836_89 temp836_88))
(assert (= temp836_90 (select ARGNAME_output_padding_NAMEEND_VAL temp836_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp836_70 temp836_67)
             (bvslt temp836_74 temp836_71)
             (bvslt temp836_78 temp836_75)
             (bvslt temp836_82 temp836_79)
             (bvslt temp836_86 temp836_83)
             (bvslt temp836_90 temp836_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_91 #x0000000000000000))
(assert (= var1322797 temp836_91))
(assert (= temp836_92 #x0000000000000000))
(assert (= temp836_93 temp836_92))
(assert (= temp836_94 (select ARGNAME_stride_NAMEEND_VAL temp836_93)))
(assert (= temp836_95 #x0000000000000001))
(assert (= temp836_96 temp836_95))
(assert (= temp836_97 (select ARGNAME_stride_NAMEEND_VAL temp836_96)))
(assert (= temp836_98 #x0000000000000002))
(assert (= temp836_99 temp836_98))
(assert (= temp836_100 (select ARGNAME_stride_NAMEEND_VAL temp836_99)))
(assert (= temp836_101 #x0000000000000003))
(assert (= temp836_102 temp836_101))
(assert (= temp836_103 (select ARGNAME_stride_NAMEEND_VAL temp836_102)))
(assert (= temp836_104 #x0000000000000004))
(assert (= temp836_105 temp836_104))
(assert (= temp836_106 (select ARGNAME_stride_NAMEEND_VAL temp836_105)))
(assert (= temp836_107 #x0000000000000005))
(assert (= temp836_108 temp836_107))
(assert (= temp836_109 (select ARGNAME_stride_NAMEEND_VAL temp836_108)))
(assert (= temp836_110 #x0000000000000000))
(assert (= temp836_111 #x0000000000000000))
(assert (= temp836_112 temp836_111))
(assert (= temp836_113 (select ARGNAME_stride_NAMEEND_VAL temp836_112)))
(assert (= temp836_114 #x0000000000000000))
(assert (= temp836_115 #x0000000000000001))
(assert (= temp836_116 temp836_115))
(assert (= temp836_117 (select ARGNAME_stride_NAMEEND_VAL temp836_116)))
(assert (= temp836_118 #x0000000000000000))
(assert (= temp836_119 #x0000000000000002))
(assert (= temp836_120 temp836_119))
(assert (= temp836_121 (select ARGNAME_stride_NAMEEND_VAL temp836_120)))
(assert (= temp836_122 #x0000000000000000))
(assert (= temp836_123 #x0000000000000003))
(assert (= temp836_124 temp836_123))
(assert (= temp836_125 (select ARGNAME_stride_NAMEEND_VAL temp836_124)))
(assert (= temp836_126 #x0000000000000000))
(assert (= temp836_127 #x0000000000000004))
(assert (= temp836_128 temp836_127))
(assert (= temp836_129 (select ARGNAME_stride_NAMEEND_VAL temp836_128)))
(assert (= temp836_130 #x0000000000000000))
(assert (= temp836_131 #x0000000000000005))
(assert (= temp836_132 temp836_131))
(assert (= temp836_133 (select ARGNAME_stride_NAMEEND_VAL temp836_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp836_113 temp836_110)
             (bvsle temp836_117 temp836_114)
             (bvsle temp836_121 temp836_118)
             (bvsle temp836_125 temp836_122)
             (bvsle temp836_129 temp836_126)
             (bvsle temp836_133 temp836_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_134 #x0000000000000000))
(assert (= var1322807 temp836_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_135 #x0000000000000001))
(assert (= var1322819 temp836_135))
(assert (= temp836_136 #x0000000000000000))
(assert (= var1310898 temp836_136))
(assert (= temp836_137 #x0000000000000000))
(assert (= temp836_138 temp836_137))
(assert (= temp836_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_138)))
(assert (= temp836_140 #x0000000000000001))
(assert (= temp836_141 temp836_140))
(assert (= temp836_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_141)))
(assert (= temp836_143 #x0000000000000002))
(assert (= temp836_144 temp836_143))
(assert (= temp836_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_144)))
(assert (= temp836_146 #x0000000000000003))
(assert (= temp836_147 temp836_146))
(assert (= temp836_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_147)))
(assert (= temp836_149 #x0000000000000004))
(assert (= temp836_150 temp836_149))
(assert (= temp836_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_150)))
(assert (= temp836_152 #x0000000000000005))
(assert (= temp836_153 temp836_152))
(assert (= temp836_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_153)))
(assert (= temp836_156 var1310898))
(assert (= temp836_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_156)))
(assert (= temp836_155 temp836_157))
(assert (= var1322852
   (ite (bvslt temp836_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_158 #x0000000000000000))
(assert (= var1322852 temp836_158))
(assert (= temp836_159 #x0000000000000000))
(assert (= var1310898 temp836_159))
(assert (= temp836_161 var1310898))
(assert (= temp836_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_161)))
(assert (= temp836_160 temp836_162))
(assert (= var1322874 (bvsmod temp836_160 ARGNAME_groups_NAMEEND)))
(assert (= temp836_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp836_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp836_164 #x0000000000000001))
(assert (= var1322875 temp836_164))
(assert (= temp836_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp836_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_166 #x0000000000000001))
(assert (= var1322895 temp836_166))
(assert (= temp836_167 #x0000000000000001))
(assert (= var1311786 temp836_167))
(assert (= temp836_168 #x0000000000000000))
(assert (= temp836_169 temp836_168))
(assert (= temp836_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_169)))
(assert (= temp836_171 #x0000000000000001))
(assert (= temp836_172 temp836_171))
(assert (= temp836_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_172)))
(assert (= temp836_174 #x0000000000000002))
(assert (= temp836_175 temp836_174))
(assert (= temp836_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_175)))
(assert (= temp836_177 #x0000000000000003))
(assert (= temp836_178 temp836_177))
(assert (= temp836_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_178)))
(assert (= temp836_180 #x0000000000000004))
(assert (= temp836_181 temp836_180))
(assert (= temp836_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_181)))
(assert (= temp836_183 #x0000000000000005))
(assert (= temp836_184 temp836_183))
(assert (= temp836_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_184)))
(assert (= temp836_186 #x0000000000000000))
(assert (= temp836_187
   (ite (bvslt var1311786 temp836_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp836_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_187)))
(assert (= var1322903 temp836_188))
(assert (bvslt (ite (bvslt var1311786 temp836_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp836_189 #x0000000000000001))
(assert (= var1311786 temp836_189))
(assert (= temp836_191 var1311786))
(assert (= temp836_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_191)))
(assert (= temp836_190 temp836_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp836_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp836_193 #x0000000000000001))
(assert (= var1322908 temp836_193))
(assert (= temp836_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp836_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_195 #x0000000000000001))
(assert (= var1322975 temp836_195))
(assert (= temp836_196 #x0000000000000000))
(assert (= var1310898 temp836_196))
(assert (= temp836_197 #x0000000000000000))
(assert (= temp836_198 temp836_197))
(assert (= temp836_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp836_198)))
(assert (= temp836_200 #x0000000000000001))
(assert (= temp836_201 temp836_200))
(assert (= temp836_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp836_201)))
(assert (= temp836_203 #x0000000000000002))
(assert (= temp836_204 temp836_203))
(assert (= temp836_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp836_204)))
(assert (= temp836_206 #x0000000000000003))
(assert (= temp836_207 temp836_206))
(assert (= temp836_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp836_207)))
(assert (= temp836_209 #x0000000000000004))
(assert (= temp836_210 temp836_209))
(assert (= temp836_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp836_210)))
(assert (= temp836_212 #x0000000000000005))
(assert (= temp836_213 temp836_212))
(assert (= temp836_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp836_213)))
(assert (= temp836_215 #x0000000000000000))
(assert (= temp836_216
   (ite (bvslt var1310898 temp836_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp836_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp836_216)))
(assert (= var1322977 temp836_217))
(assert (bvslt (ite (bvslt var1310898 temp836_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp836_218 #x0000000000000000))
(assert (= var1310898 temp836_218))
(assert (= temp836_220 var1310898))
(assert (= temp836_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp836_220)))
(assert (= temp836_219 temp836_221))
(assert (= var1322980
   (ite (= var1322977 temp836_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp836_222 #x0000000000000001))
(assert (= var1322980 temp836_222))
(assert (= temp836_223 #x0000000000000002))
(assert (= var1848169 temp836_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp836_225 #x0000000000000001))
(assert (= var1323065 temp836_225))
(assert (= temp836_226 #x0000000000000001))
(assert (= var3486735 temp836_226))
(assert (= temp836_227 #x0000000000000001))
(assert (= var3814415 temp836_227))
(assert (= temp836_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp836_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_229 #x0000000000000001))
(assert (= var79986 temp836_229))
(assert (= temp836_230 #x0000000000000001))
(assert (= var80116 temp836_230))
(assert (= var4796905 var80116))
(assert (= temp836_231 #x0000000000000000))
(assert (= var4784306 temp836_231))
(assert (= temp836_232 #x0000000000000000))
(assert (= temp836_233
   (ite (bvslt var4784306 temp836_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp836_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_233)))
(assert (= var4796924 temp836_234))
(assert (bvslt (ite (bvslt var4784306 temp836_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp836_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp836_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp836_236 #x0000000000000001))
(assert (= var4796925 temp836_236))
(assert (= temp836_237 #x0000000000000000))
(assert (= var4996927 temp836_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp836_238 #x0000000000000002))
(assert (= var5125763 temp836_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_239 #x0000000000000000))
(assert (= var5191324 temp836_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp836_240 #x0000000000000000))
(assert (= var80889
   (ite (distinct ARGNAME_benchmark_NAMEEND temp836_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_241 #x0000000000000000))
(assert (= var80891
   (ite (distinct ARGNAME_deterministic_NAMEEND temp836_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_242 #x0000000000000001))
(assert (= var79986 temp836_242))
(assert (= temp836_243 #x0000000000000000))
(assert (= var7549716 temp836_243))
(assert (= var7549683 var7549716))
(assert (= var7418247 var7549683))
(assert (= var7418243 var7418247))
(assert (= var81597 var7418243))
(assert (= temp836_244 #x0000000000000000))
(assert (= var81597 temp836_244))
(model-add temp836_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp836_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp836_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






