(declare-fun temp181_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp181_2 () (_ BitVec 64))
(declare-fun temp181_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp181_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp181_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp181_6 () (_ BitVec 64))
(declare-fun temp181_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp181_8 () (_ BitVec 64))
(declare-fun temp181_9 () (_ BitVec 64))
(declare-fun temp181_10 () (_ BitVec 64))
(declare-fun temp181_11 () (_ BitVec 64))
(declare-fun temp181_12 () (_ BitVec 64))
(declare-fun temp181_13 () (_ BitVec 64))
(declare-fun temp181_14 () (_ BitVec 64))
(declare-fun temp181_15 () (_ BitVec 64))
(declare-fun temp181_16 () (_ BitVec 64))
(declare-fun temp181_17 () (_ BitVec 64))
(declare-fun temp181_18 () (_ BitVec 64))
(declare-fun temp181_19 () (_ BitVec 64))
(declare-fun temp181_20 () (_ BitVec 64))
(declare-fun temp181_21 () (_ BitVec 64))
(declare-fun temp181_22 () (_ BitVec 64))
(declare-fun temp181_23 () (_ BitVec 64))
(declare-fun temp181_24 () (_ BitVec 64))
(declare-fun temp181_25 () (_ BitVec 64))
(declare-fun temp181_26 () (_ BitVec 64))
(declare-fun temp181_27 () (_ BitVec 64))
(declare-fun temp181_28 () (_ BitVec 64))
(declare-fun temp181_29 () (_ BitVec 64))
(declare-fun temp181_30 () (_ BitVec 64))
(declare-fun temp181_31 () (_ BitVec 64))
(declare-fun temp181_32 () (_ BitVec 64))
(declare-fun temp181_33 () (_ BitVec 64))
(declare-fun temp181_34 () (_ BitVec 64))
(declare-fun temp181_35 () (_ BitVec 64))
(declare-fun temp181_36 () (_ BitVec 64))
(declare-fun temp181_37 () (_ BitVec 64))
(declare-fun temp181_38 () (_ BitVec 64))
(declare-fun temp181_39 () (_ BitVec 64))
(declare-fun temp181_40 () (_ BitVec 64))
(declare-fun temp181_41 () (_ BitVec 64))
(declare-fun temp181_42 () (_ BitVec 64))
(declare-fun temp181_43 () (_ BitVec 64))
(declare-fun temp181_44 () (_ BitVec 64))
(declare-fun temp181_45 () (_ BitVec 64))
(declare-fun temp181_46 () (_ BitVec 64))
(declare-fun temp181_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp181_48 () (_ BitVec 64))
(declare-fun temp181_49 () (_ BitVec 64))
(declare-fun temp181_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp181_51 () (_ BitVec 64))
(declare-fun temp181_52 () (_ BitVec 64))
(declare-fun temp181_53 () (_ BitVec 64))
(declare-fun temp181_54 () (_ BitVec 64))
(declare-fun temp181_55 () (_ BitVec 64))
(declare-fun temp181_56 () (_ BitVec 64))
(declare-fun temp181_57 () (_ BitVec 64))
(declare-fun temp181_58 () (_ BitVec 64))
(declare-fun temp181_59 () (_ BitVec 64))
(declare-fun temp181_60 () (_ BitVec 64))
(declare-fun temp181_61 () (_ BitVec 64))
(declare-fun temp181_62 () (_ BitVec 64))
(declare-fun temp181_63 () (_ BitVec 64))
(declare-fun temp181_64 () (_ BitVec 64))
(declare-fun temp181_65 () (_ BitVec 64))
(declare-fun temp181_66 () (_ BitVec 64))
(declare-fun temp181_67 () (_ BitVec 64))
(declare-fun temp181_68 () (_ BitVec 64))
(declare-fun temp181_69 () (_ BitVec 64))
(declare-fun temp181_70 () (_ BitVec 64))
(declare-fun temp181_71 () (_ BitVec 64))
(declare-fun temp181_72 () (_ BitVec 64))
(declare-fun temp181_73 () (_ BitVec 64))
(declare-fun temp181_74 () (_ BitVec 64))
(declare-fun temp181_75 () (_ BitVec 64))
(declare-fun temp181_76 () (_ BitVec 64))
(declare-fun temp181_77 () (_ BitVec 64))
(declare-fun temp181_78 () (_ BitVec 64))
(declare-fun temp181_79 () (_ BitVec 64))
(declare-fun temp181_80 () (_ BitVec 64))
(declare-fun temp181_81 () (_ BitVec 64))
(declare-fun temp181_82 () (_ BitVec 64))
(declare-fun temp181_83 () (_ BitVec 64))
(declare-fun temp181_84 () (_ BitVec 64))
(declare-fun temp181_85 () (_ BitVec 64))
(declare-fun temp181_86 () (_ BitVec 64))
(declare-fun temp181_87 () (_ BitVec 64))
(declare-fun temp181_88 () (_ BitVec 64))
(declare-fun temp181_89 () (_ BitVec 64))
(declare-fun temp181_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp181_91 () (_ BitVec 64))
(declare-fun temp181_92 () (_ BitVec 64))
(declare-fun temp181_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp181_94 () (_ BitVec 64))
(declare-fun temp181_95 () (_ BitVec 64))
(declare-fun temp181_96 () (_ BitVec 64))
(declare-fun temp181_97 () (_ BitVec 64))
(declare-fun temp181_98 () (_ BitVec 64))
(declare-fun temp181_99 () (_ BitVec 64))
(declare-fun temp181_100 () (_ BitVec 64))
(declare-fun temp181_101 () (_ BitVec 64))
(declare-fun temp181_102 () (_ BitVec 64))
(declare-fun temp181_103 () (_ BitVec 64))
(declare-fun temp181_104 () (_ BitVec 64))
(declare-fun temp181_105 () (_ BitVec 64))
(declare-fun temp181_106 () (_ BitVec 64))
(declare-fun temp181_107 () (_ BitVec 64))
(declare-fun temp181_108 () (_ BitVec 64))
(declare-fun temp181_109 () (_ BitVec 64))
(declare-fun temp181_110 () (_ BitVec 64))
(declare-fun temp181_111 () (_ BitVec 64))
(declare-fun temp181_112 () (_ BitVec 64))
(declare-fun temp181_113 () (_ BitVec 64))
(declare-fun temp181_114 () (_ BitVec 64))
(declare-fun temp181_115 () (_ BitVec 64))
(declare-fun temp181_116 () (_ BitVec 64))
(declare-fun temp181_117 () (_ BitVec 64))
(declare-fun temp181_118 () (_ BitVec 64))
(declare-fun temp181_119 () (_ BitVec 64))
(declare-fun temp181_120 () (_ BitVec 64))
(declare-fun temp181_121 () (_ BitVec 64))
(declare-fun temp181_122 () (_ BitVec 64))
(declare-fun temp181_123 () (_ BitVec 64))
(declare-fun temp181_124 () (_ BitVec 64))
(declare-fun temp181_125 () (_ BitVec 64))
(declare-fun temp181_126 () (_ BitVec 64))
(declare-fun temp181_127 () (_ BitVec 64))
(declare-fun temp181_128 () (_ BitVec 64))
(declare-fun temp181_129 () (_ BitVec 64))
(declare-fun temp181_130 () (_ BitVec 64))
(declare-fun temp181_131 () (_ BitVec 64))
(declare-fun temp181_132 () (_ BitVec 64))
(declare-fun temp181_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp181_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp181_135 () (_ BitVec 64))
(declare-fun temp181_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp181_137 () (_ BitVec 64))
(declare-fun temp181_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp181_139 () (_ BitVec 64))
(declare-fun temp181_140 () (_ BitVec 64))
(declare-fun temp181_141 () (_ BitVec 64))
(declare-fun temp181_142 () (_ BitVec 64))
(declare-fun temp181_143 () (_ BitVec 64))
(declare-fun temp181_144 () (_ BitVec 64))
(declare-fun temp181_145 () (_ BitVec 64))
(declare-fun temp181_146 () (_ BitVec 64))
(declare-fun temp181_147 () (_ BitVec 64))
(declare-fun temp181_148 () (_ BitVec 64))
(declare-fun temp181_149 () (_ BitVec 64))
(declare-fun temp181_150 () (_ BitVec 64))
(declare-fun temp181_151 () (_ BitVec 64))
(declare-fun temp181_152 () (_ BitVec 64))
(declare-fun temp181_153 () (_ BitVec 64))
(declare-fun temp181_154 () (_ BitVec 64))
(declare-fun temp181_156 () (_ BitVec 64))
(declare-fun temp181_157 () (_ BitVec 64))
(declare-fun temp181_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp181_158 () (_ BitVec 64))
(declare-fun temp181_159 () (_ BitVec 64))
(declare-fun temp181_161 () (_ BitVec 64))
(declare-fun temp181_162 () (_ BitVec 64))
(declare-fun temp181_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp181_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp181_164 () (_ BitVec 64))
(declare-fun temp181_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp181_166 () (_ BitVec 64))
(declare-fun temp181_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp181_168 () (_ BitVec 64))
(declare-fun temp181_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp181_170 () (_ BitVec 64))
(declare-fun temp181_171 () (_ BitVec 64))
(declare-fun temp181_172 () (_ BitVec 64))
(declare-fun temp181_173 () (_ BitVec 64))
(declare-fun temp181_174 () (_ BitVec 64))
(declare-fun temp181_175 () (_ BitVec 64))
(declare-fun temp181_176 () (_ BitVec 64))
(declare-fun temp181_177 () (_ BitVec 64))
(declare-fun temp181_178 () (_ BitVec 64))
(declare-fun temp181_179 () (_ BitVec 64))
(declare-fun temp181_180 () (_ BitVec 64))
(declare-fun temp181_181 () (_ BitVec 64))
(declare-fun temp181_182 () (_ BitVec 64))
(declare-fun temp181_183 () (_ BitVec 64))
(declare-fun temp181_184 () (_ BitVec 64))
(declare-fun temp181_185 () (_ BitVec 64))
(declare-fun temp181_186 () (_ BitVec 64))
(declare-fun temp181_187 () (_ BitVec 64))
(declare-fun temp181_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp181_189 () (_ BitVec 64))
(declare-fun temp181_191 () (_ BitVec 64))
(declare-fun temp181_192 () (_ BitVec 64))
(declare-fun temp181_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp181_193 () (_ BitVec 64))
(declare-fun temp181_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp181_195 () (_ BitVec 64))
(declare-fun temp181_196 () (_ BitVec 64))
(declare-fun temp181_197 () (_ BitVec 64))
(declare-fun temp181_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp181_199 () (_ BitVec 64))
(declare-fun temp181_200 () (_ BitVec 64))
(declare-fun temp181_201 () (_ BitVec 64))
(declare-fun temp181_202 () (_ BitVec 64))
(declare-fun temp181_203 () (_ BitVec 64))
(declare-fun temp181_204 () (_ BitVec 64))
(declare-fun temp181_205 () (_ BitVec 64))
(declare-fun temp181_206 () (_ BitVec 64))
(declare-fun temp181_207 () (_ BitVec 64))
(declare-fun temp181_208 () (_ BitVec 64))
(declare-fun temp181_209 () (_ BitVec 64))
(declare-fun temp181_210 () (_ BitVec 64))
(declare-fun temp181_211 () (_ BitVec 64))
(declare-fun temp181_212 () (_ BitVec 64))
(declare-fun temp181_213 () (_ BitVec 64))
(declare-fun temp181_214 () (_ BitVec 64))
(declare-fun temp181_215 () (_ BitVec 64))
(declare-fun temp181_216 () (_ BitVec 64))
(declare-fun temp181_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp181_218 () (_ BitVec 64))
(declare-fun temp181_220 () (_ BitVec 64))
(declare-fun temp181_221 () (_ BitVec 64))
(declare-fun temp181_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp181_222 () (_ BitVec 64))
(declare-fun temp181_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp181_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp181_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp181_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp181_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp181_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp181_229 () (_ BitVec 64))
(declare-fun temp181_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp181_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp181_232 () (_ BitVec 64))
(declare-fun temp181_233 () (_ BitVec 64))
(declare-fun temp181_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp181_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp181_236 () (_ BitVec 64))
(declare-fun temp181_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp181_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp181_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp181_241 () (_ BitVec 64))
(declare-fun temp181_240 () (_ BitVec 64))
(declare-fun temp181_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp181_243 () (_ BitVec 64))
(declare-fun temp181_244 () (_ BitVec 64))
(declare-fun temp181_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp181_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp181_247 () (_ BitVec 64))
(declare-fun temp181_248 () (_ BitVec 64))
(assert (= temp181_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp181_1)))
(assert (= temp181_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp181_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_3 #x0000000000000000))
(assert (= var79869 temp181_3))
(assert (= temp181_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp181_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_5 #x0000000000000000))
(assert (= var79914 temp181_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp181_6 #x0000000000000000))
(assert (= temp181_7 temp181_6))
(assert (= temp181_8 (select ARGNAME_padding_NAMEEND_VAL temp181_7)))
(assert (= temp181_9 #x0000000000000001))
(assert (= temp181_10 temp181_9))
(assert (= temp181_11 (select ARGNAME_padding_NAMEEND_VAL temp181_10)))
(assert (= temp181_12 #x0000000000000002))
(assert (= temp181_13 temp181_12))
(assert (= temp181_14 (select ARGNAME_padding_NAMEEND_VAL temp181_13)))
(assert (= temp181_15 #x0000000000000003))
(assert (= temp181_16 temp181_15))
(assert (= temp181_17 (select ARGNAME_padding_NAMEEND_VAL temp181_16)))
(assert (= temp181_18 #x0000000000000004))
(assert (= temp181_19 temp181_18))
(assert (= temp181_20 (select ARGNAME_padding_NAMEEND_VAL temp181_19)))
(assert (= temp181_21 #x0000000000000005))
(assert (= temp181_22 temp181_21))
(assert (= temp181_23 (select ARGNAME_padding_NAMEEND_VAL temp181_22)))
(assert (= temp181_24 #x0000000000000000))
(assert (= temp181_25 #x0000000000000000))
(assert (= temp181_26 temp181_25))
(assert (= temp181_27 (select ARGNAME_padding_NAMEEND_VAL temp181_26)))
(assert (= temp181_28 #x0000000000000000))
(assert (= temp181_29 #x0000000000000001))
(assert (= temp181_30 temp181_29))
(assert (= temp181_31 (select ARGNAME_padding_NAMEEND_VAL temp181_30)))
(assert (= temp181_32 #x0000000000000000))
(assert (= temp181_33 #x0000000000000002))
(assert (= temp181_34 temp181_33))
(assert (= temp181_35 (select ARGNAME_padding_NAMEEND_VAL temp181_34)))
(assert (= temp181_36 #x0000000000000000))
(assert (= temp181_37 #x0000000000000003))
(assert (= temp181_38 temp181_37))
(assert (= temp181_39 (select ARGNAME_padding_NAMEEND_VAL temp181_38)))
(assert (= temp181_40 #x0000000000000000))
(assert (= temp181_41 #x0000000000000004))
(assert (= temp181_42 temp181_41))
(assert (= temp181_43 (select ARGNAME_padding_NAMEEND_VAL temp181_42)))
(assert (= temp181_44 #x0000000000000000))
(assert (= temp181_45 #x0000000000000005))
(assert (= temp181_46 temp181_45))
(assert (= temp181_47 (select ARGNAME_padding_NAMEEND_VAL temp181_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp181_27 temp181_24)
             (bvslt temp181_31 temp181_28)
             (bvslt temp181_35 temp181_32)
             (bvslt temp181_39 temp181_36)
             (bvslt temp181_43 temp181_40)
             (bvslt temp181_47 temp181_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_48 #x0000000000000000))
(assert (= var1322786 temp181_48))
(assert (= temp181_49 #x0000000000000000))
(assert (= temp181_50 temp181_49))
(assert (= temp181_51 (select ARGNAME_output_padding_NAMEEND_VAL temp181_50)))
(assert (= temp181_52 #x0000000000000001))
(assert (= temp181_53 temp181_52))
(assert (= temp181_54 (select ARGNAME_output_padding_NAMEEND_VAL temp181_53)))
(assert (= temp181_55 #x0000000000000002))
(assert (= temp181_56 temp181_55))
(assert (= temp181_57 (select ARGNAME_output_padding_NAMEEND_VAL temp181_56)))
(assert (= temp181_58 #x0000000000000003))
(assert (= temp181_59 temp181_58))
(assert (= temp181_60 (select ARGNAME_output_padding_NAMEEND_VAL temp181_59)))
(assert (= temp181_61 #x0000000000000004))
(assert (= temp181_62 temp181_61))
(assert (= temp181_63 (select ARGNAME_output_padding_NAMEEND_VAL temp181_62)))
(assert (= temp181_64 #x0000000000000005))
(assert (= temp181_65 temp181_64))
(assert (= temp181_66 (select ARGNAME_output_padding_NAMEEND_VAL temp181_65)))
(assert (= temp181_67 #x0000000000000000))
(assert (= temp181_68 #x0000000000000000))
(assert (= temp181_69 temp181_68))
(assert (= temp181_70 (select ARGNAME_output_padding_NAMEEND_VAL temp181_69)))
(assert (= temp181_71 #x0000000000000000))
(assert (= temp181_72 #x0000000000000001))
(assert (= temp181_73 temp181_72))
(assert (= temp181_74 (select ARGNAME_output_padding_NAMEEND_VAL temp181_73)))
(assert (= temp181_75 #x0000000000000000))
(assert (= temp181_76 #x0000000000000002))
(assert (= temp181_77 temp181_76))
(assert (= temp181_78 (select ARGNAME_output_padding_NAMEEND_VAL temp181_77)))
(assert (= temp181_79 #x0000000000000000))
(assert (= temp181_80 #x0000000000000003))
(assert (= temp181_81 temp181_80))
(assert (= temp181_82 (select ARGNAME_output_padding_NAMEEND_VAL temp181_81)))
(assert (= temp181_83 #x0000000000000000))
(assert (= temp181_84 #x0000000000000004))
(assert (= temp181_85 temp181_84))
(assert (= temp181_86 (select ARGNAME_output_padding_NAMEEND_VAL temp181_85)))
(assert (= temp181_87 #x0000000000000000))
(assert (= temp181_88 #x0000000000000005))
(assert (= temp181_89 temp181_88))
(assert (= temp181_90 (select ARGNAME_output_padding_NAMEEND_VAL temp181_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp181_70 temp181_67)
             (bvslt temp181_74 temp181_71)
             (bvslt temp181_78 temp181_75)
             (bvslt temp181_82 temp181_79)
             (bvslt temp181_86 temp181_83)
             (bvslt temp181_90 temp181_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_91 #x0000000000000000))
(assert (= var1322797 temp181_91))
(assert (= temp181_92 #x0000000000000000))
(assert (= temp181_93 temp181_92))
(assert (= temp181_94 (select ARGNAME_stride_NAMEEND_VAL temp181_93)))
(assert (= temp181_95 #x0000000000000001))
(assert (= temp181_96 temp181_95))
(assert (= temp181_97 (select ARGNAME_stride_NAMEEND_VAL temp181_96)))
(assert (= temp181_98 #x0000000000000002))
(assert (= temp181_99 temp181_98))
(assert (= temp181_100 (select ARGNAME_stride_NAMEEND_VAL temp181_99)))
(assert (= temp181_101 #x0000000000000003))
(assert (= temp181_102 temp181_101))
(assert (= temp181_103 (select ARGNAME_stride_NAMEEND_VAL temp181_102)))
(assert (= temp181_104 #x0000000000000004))
(assert (= temp181_105 temp181_104))
(assert (= temp181_106 (select ARGNAME_stride_NAMEEND_VAL temp181_105)))
(assert (= temp181_107 #x0000000000000005))
(assert (= temp181_108 temp181_107))
(assert (= temp181_109 (select ARGNAME_stride_NAMEEND_VAL temp181_108)))
(assert (= temp181_110 #x0000000000000000))
(assert (= temp181_111 #x0000000000000000))
(assert (= temp181_112 temp181_111))
(assert (= temp181_113 (select ARGNAME_stride_NAMEEND_VAL temp181_112)))
(assert (= temp181_114 #x0000000000000000))
(assert (= temp181_115 #x0000000000000001))
(assert (= temp181_116 temp181_115))
(assert (= temp181_117 (select ARGNAME_stride_NAMEEND_VAL temp181_116)))
(assert (= temp181_118 #x0000000000000000))
(assert (= temp181_119 #x0000000000000002))
(assert (= temp181_120 temp181_119))
(assert (= temp181_121 (select ARGNAME_stride_NAMEEND_VAL temp181_120)))
(assert (= temp181_122 #x0000000000000000))
(assert (= temp181_123 #x0000000000000003))
(assert (= temp181_124 temp181_123))
(assert (= temp181_125 (select ARGNAME_stride_NAMEEND_VAL temp181_124)))
(assert (= temp181_126 #x0000000000000000))
(assert (= temp181_127 #x0000000000000004))
(assert (= temp181_128 temp181_127))
(assert (= temp181_129 (select ARGNAME_stride_NAMEEND_VAL temp181_128)))
(assert (= temp181_130 #x0000000000000000))
(assert (= temp181_131 #x0000000000000005))
(assert (= temp181_132 temp181_131))
(assert (= temp181_133 (select ARGNAME_stride_NAMEEND_VAL temp181_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp181_113 temp181_110)
             (bvsle temp181_117 temp181_114)
             (bvsle temp181_121 temp181_118)
             (bvsle temp181_125 temp181_122)
             (bvsle temp181_129 temp181_126)
             (bvsle temp181_133 temp181_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_134 #x0000000000000000))
(assert (= var1322807 temp181_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_135 #x0000000000000001))
(assert (= var1322819 temp181_135))
(assert (= temp181_136 #x0000000000000000))
(assert (= var1310898 temp181_136))
(assert (= temp181_137 #x0000000000000000))
(assert (= temp181_138 temp181_137))
(assert (= temp181_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_138)))
(assert (= temp181_140 #x0000000000000001))
(assert (= temp181_141 temp181_140))
(assert (= temp181_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_141)))
(assert (= temp181_143 #x0000000000000002))
(assert (= temp181_144 temp181_143))
(assert (= temp181_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_144)))
(assert (= temp181_146 #x0000000000000003))
(assert (= temp181_147 temp181_146))
(assert (= temp181_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_147)))
(assert (= temp181_149 #x0000000000000004))
(assert (= temp181_150 temp181_149))
(assert (= temp181_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_150)))
(assert (= temp181_152 #x0000000000000005))
(assert (= temp181_153 temp181_152))
(assert (= temp181_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_153)))
(assert (= temp181_156 var1310898))
(assert (= temp181_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_156)))
(assert (= temp181_155 temp181_157))
(assert (= var1322852
   (ite (bvslt temp181_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_158 #x0000000000000000))
(assert (= var1322852 temp181_158))
(assert (= temp181_159 #x0000000000000000))
(assert (= var1310898 temp181_159))
(assert (= temp181_161 var1310898))
(assert (= temp181_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_161)))
(assert (= temp181_160 temp181_162))
(assert (= var1322874 (bvsmod temp181_160 ARGNAME_groups_NAMEEND)))
(assert (= temp181_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp181_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp181_164 #x0000000000000001))
(assert (= var1322875 temp181_164))
(assert (= temp181_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp181_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_166 #x0000000000000001))
(assert (= var1322895 temp181_166))
(assert (= temp181_167 #x0000000000000001))
(assert (= var1311786 temp181_167))
(assert (= temp181_168 #x0000000000000000))
(assert (= temp181_169 temp181_168))
(assert (= temp181_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp181_169)))
(assert (= temp181_171 #x0000000000000001))
(assert (= temp181_172 temp181_171))
(assert (= temp181_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp181_172)))
(assert (= temp181_174 #x0000000000000002))
(assert (= temp181_175 temp181_174))
(assert (= temp181_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp181_175)))
(assert (= temp181_177 #x0000000000000003))
(assert (= temp181_178 temp181_177))
(assert (= temp181_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp181_178)))
(assert (= temp181_180 #x0000000000000004))
(assert (= temp181_181 temp181_180))
(assert (= temp181_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp181_181)))
(assert (= temp181_183 #x0000000000000005))
(assert (= temp181_184 temp181_183))
(assert (= temp181_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp181_184)))
(assert (= temp181_186 #x0000000000000000))
(assert (= temp181_187
   (ite (bvslt var1311786 temp181_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp181_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp181_187)))
(assert (= var1322903 temp181_188))
(assert (bvslt (ite (bvslt var1311786 temp181_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp181_189 #x0000000000000001))
(assert (= var1311786 temp181_189))
(assert (= temp181_191 var1311786))
(assert (= temp181_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_191)))
(assert (= temp181_190 temp181_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp181_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp181_193 #x0000000000000001))
(assert (= var1322908 temp181_193))
(assert (= temp181_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp181_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_195 #x0000000000000001))
(assert (= var1322975 temp181_195))
(assert (= temp181_196 #x0000000000000000))
(assert (= var1310898 temp181_196))
(assert (= temp181_197 #x0000000000000000))
(assert (= temp181_198 temp181_197))
(assert (= temp181_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp181_198)))
(assert (= temp181_200 #x0000000000000001))
(assert (= temp181_201 temp181_200))
(assert (= temp181_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp181_201)))
(assert (= temp181_203 #x0000000000000002))
(assert (= temp181_204 temp181_203))
(assert (= temp181_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp181_204)))
(assert (= temp181_206 #x0000000000000003))
(assert (= temp181_207 temp181_206))
(assert (= temp181_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp181_207)))
(assert (= temp181_209 #x0000000000000004))
(assert (= temp181_210 temp181_209))
(assert (= temp181_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp181_210)))
(assert (= temp181_212 #x0000000000000005))
(assert (= temp181_213 temp181_212))
(assert (= temp181_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp181_213)))
(assert (= temp181_215 #x0000000000000000))
(assert (= temp181_216
   (ite (bvslt var1310898 temp181_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp181_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp181_216)))
(assert (= var1322977 temp181_217))
(assert (bvslt (ite (bvslt var1310898 temp181_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp181_218 #x0000000000000000))
(assert (= var1310898 temp181_218))
(assert (= temp181_220 var1310898))
(assert (= temp181_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp181_220)))
(assert (= temp181_219 temp181_221))
(assert (= var1322980
   (ite (= var1322977 temp181_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp181_222 #x0000000000000001))
(assert (= var1322980 temp181_222))
(assert (= temp181_223 #x0000000000000002))
(assert (= var1848169 temp181_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp181_225 #x0000000000000001))
(assert (= var1323065 temp181_225))
(assert (= temp181_226 #x0000000000000001))
(assert (= var3486735 temp181_226))
(assert (= temp181_227 #x0000000000000001))
(assert (= var3814415 temp181_227))
(assert (= temp181_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp181_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_229 #x0000000000000001))
(assert (= var79986 temp181_229))
(assert (= temp181_230 #x0000000000000001))
(assert (= var80116 temp181_230))
(assert (= var4796905 var80116))
(assert (= temp181_231 #x0000000000000000))
(assert (= var4784306 temp181_231))
(assert (= temp181_232 #x0000000000000000))
(assert (= temp181_233
   (ite (bvslt var4784306 temp181_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp181_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp181_233)))
(assert (= var4796924 temp181_234))
(assert (bvslt (ite (bvslt var4784306 temp181_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp181_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp181_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp181_236 #x0000000000000001))
(assert (= var4796925 temp181_236))
(assert (= temp181_237 #x0000000000000000))
(assert (= var4996927 temp181_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp181_238 #x0000000000000002))
(assert (= var5125763 temp181_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp181_239 #x0000000000000000))
(assert (= var5191324 temp181_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp181_241 #xffffffffffffffff))
(assert (= temp181_240 temp181_241))
(assert (= temp181_242 #x0000000000000001))
(assert (= var66602 temp181_242))
(assert (= temp181_243 #x0000000000000000))
(assert (= temp181_244
   (ite (bvslt var66602 temp181_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp181_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp181_244)))
(assert (= var80523 temp181_245))
(assert (bvslt (ite (bvslt var66602 temp181_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp181_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp181_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp181_247 #x0000000000000000))
(assert (= var80524 temp181_247))
(assert (= temp181_248 #x0000000000000001))
(assert (= var79986 temp181_248))
(model-add temp181_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp181_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp181_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






