(declare-fun temp566_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp566_2 () (_ BitVec 64))
(declare-fun temp566_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp566_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp566_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp566_6 () (_ BitVec 64))
(declare-fun temp566_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_8 () (_ BitVec 64))
(declare-fun temp566_9 () (_ BitVec 64))
(declare-fun temp566_10 () (_ BitVec 64))
(declare-fun temp566_11 () (_ BitVec 64))
(declare-fun temp566_12 () (_ BitVec 64))
(declare-fun temp566_13 () (_ BitVec 64))
(declare-fun temp566_14 () (_ BitVec 64))
(declare-fun temp566_15 () (_ BitVec 64))
(declare-fun temp566_16 () (_ BitVec 64))
(declare-fun temp566_17 () (_ BitVec 64))
(declare-fun temp566_18 () (_ BitVec 64))
(declare-fun temp566_19 () (_ BitVec 64))
(declare-fun temp566_20 () (_ BitVec 64))
(declare-fun temp566_21 () (_ BitVec 64))
(declare-fun temp566_22 () (_ BitVec 64))
(declare-fun temp566_23 () (_ BitVec 64))
(declare-fun temp566_24 () (_ BitVec 64))
(declare-fun temp566_25 () (_ BitVec 64))
(declare-fun temp566_26 () (_ BitVec 64))
(declare-fun temp566_27 () (_ BitVec 64))
(declare-fun temp566_28 () (_ BitVec 64))
(declare-fun temp566_29 () (_ BitVec 64))
(declare-fun temp566_30 () (_ BitVec 64))
(declare-fun temp566_31 () (_ BitVec 64))
(declare-fun temp566_32 () (_ BitVec 64))
(declare-fun temp566_33 () (_ BitVec 64))
(declare-fun temp566_34 () (_ BitVec 64))
(declare-fun temp566_35 () (_ BitVec 64))
(declare-fun temp566_36 () (_ BitVec 64))
(declare-fun temp566_37 () (_ BitVec 64))
(declare-fun temp566_38 () (_ BitVec 64))
(declare-fun temp566_39 () (_ BitVec 64))
(declare-fun temp566_40 () (_ BitVec 64))
(declare-fun temp566_41 () (_ BitVec 64))
(declare-fun temp566_42 () (_ BitVec 64))
(declare-fun temp566_43 () (_ BitVec 64))
(declare-fun temp566_44 () (_ BitVec 64))
(declare-fun temp566_45 () (_ BitVec 64))
(declare-fun temp566_46 () (_ BitVec 64))
(declare-fun temp566_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp566_48 () (_ BitVec 64))
(declare-fun temp566_49 () (_ BitVec 64))
(declare-fun temp566_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_51 () (_ BitVec 64))
(declare-fun temp566_52 () (_ BitVec 64))
(declare-fun temp566_53 () (_ BitVec 64))
(declare-fun temp566_54 () (_ BitVec 64))
(declare-fun temp566_55 () (_ BitVec 64))
(declare-fun temp566_56 () (_ BitVec 64))
(declare-fun temp566_57 () (_ BitVec 64))
(declare-fun temp566_58 () (_ BitVec 64))
(declare-fun temp566_59 () (_ BitVec 64))
(declare-fun temp566_60 () (_ BitVec 64))
(declare-fun temp566_61 () (_ BitVec 64))
(declare-fun temp566_62 () (_ BitVec 64))
(declare-fun temp566_63 () (_ BitVec 64))
(declare-fun temp566_64 () (_ BitVec 64))
(declare-fun temp566_65 () (_ BitVec 64))
(declare-fun temp566_66 () (_ BitVec 64))
(declare-fun temp566_67 () (_ BitVec 64))
(declare-fun temp566_68 () (_ BitVec 64))
(declare-fun temp566_69 () (_ BitVec 64))
(declare-fun temp566_70 () (_ BitVec 64))
(declare-fun temp566_71 () (_ BitVec 64))
(declare-fun temp566_72 () (_ BitVec 64))
(declare-fun temp566_73 () (_ BitVec 64))
(declare-fun temp566_74 () (_ BitVec 64))
(declare-fun temp566_75 () (_ BitVec 64))
(declare-fun temp566_76 () (_ BitVec 64))
(declare-fun temp566_77 () (_ BitVec 64))
(declare-fun temp566_78 () (_ BitVec 64))
(declare-fun temp566_79 () (_ BitVec 64))
(declare-fun temp566_80 () (_ BitVec 64))
(declare-fun temp566_81 () (_ BitVec 64))
(declare-fun temp566_82 () (_ BitVec 64))
(declare-fun temp566_83 () (_ BitVec 64))
(declare-fun temp566_84 () (_ BitVec 64))
(declare-fun temp566_85 () (_ BitVec 64))
(declare-fun temp566_86 () (_ BitVec 64))
(declare-fun temp566_87 () (_ BitVec 64))
(declare-fun temp566_88 () (_ BitVec 64))
(declare-fun temp566_89 () (_ BitVec 64))
(declare-fun temp566_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp566_91 () (_ BitVec 64))
(declare-fun temp566_92 () (_ BitVec 64))
(declare-fun temp566_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_94 () (_ BitVec 64))
(declare-fun temp566_95 () (_ BitVec 64))
(declare-fun temp566_96 () (_ BitVec 64))
(declare-fun temp566_97 () (_ BitVec 64))
(declare-fun temp566_98 () (_ BitVec 64))
(declare-fun temp566_99 () (_ BitVec 64))
(declare-fun temp566_100 () (_ BitVec 64))
(declare-fun temp566_101 () (_ BitVec 64))
(declare-fun temp566_102 () (_ BitVec 64))
(declare-fun temp566_103 () (_ BitVec 64))
(declare-fun temp566_104 () (_ BitVec 64))
(declare-fun temp566_105 () (_ BitVec 64))
(declare-fun temp566_106 () (_ BitVec 64))
(declare-fun temp566_107 () (_ BitVec 64))
(declare-fun temp566_108 () (_ BitVec 64))
(declare-fun temp566_109 () (_ BitVec 64))
(declare-fun temp566_110 () (_ BitVec 64))
(declare-fun temp566_111 () (_ BitVec 64))
(declare-fun temp566_112 () (_ BitVec 64))
(declare-fun temp566_113 () (_ BitVec 64))
(declare-fun temp566_114 () (_ BitVec 64))
(declare-fun temp566_115 () (_ BitVec 64))
(declare-fun temp566_116 () (_ BitVec 64))
(declare-fun temp566_117 () (_ BitVec 64))
(declare-fun temp566_118 () (_ BitVec 64))
(declare-fun temp566_119 () (_ BitVec 64))
(declare-fun temp566_120 () (_ BitVec 64))
(declare-fun temp566_121 () (_ BitVec 64))
(declare-fun temp566_122 () (_ BitVec 64))
(declare-fun temp566_123 () (_ BitVec 64))
(declare-fun temp566_124 () (_ BitVec 64))
(declare-fun temp566_125 () (_ BitVec 64))
(declare-fun temp566_126 () (_ BitVec 64))
(declare-fun temp566_127 () (_ BitVec 64))
(declare-fun temp566_128 () (_ BitVec 64))
(declare-fun temp566_129 () (_ BitVec 64))
(declare-fun temp566_130 () (_ BitVec 64))
(declare-fun temp566_131 () (_ BitVec 64))
(declare-fun temp566_132 () (_ BitVec 64))
(declare-fun temp566_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp566_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp566_135 () (_ BitVec 64))
(declare-fun temp566_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp566_137 () (_ BitVec 64))
(declare-fun temp566_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_139 () (_ BitVec 64))
(declare-fun temp566_140 () (_ BitVec 64))
(declare-fun temp566_141 () (_ BitVec 64))
(declare-fun temp566_142 () (_ BitVec 64))
(declare-fun temp566_143 () (_ BitVec 64))
(declare-fun temp566_144 () (_ BitVec 64))
(declare-fun temp566_145 () (_ BitVec 64))
(declare-fun temp566_146 () (_ BitVec 64))
(declare-fun temp566_147 () (_ BitVec 64))
(declare-fun temp566_148 () (_ BitVec 64))
(declare-fun temp566_149 () (_ BitVec 64))
(declare-fun temp566_150 () (_ BitVec 64))
(declare-fun temp566_151 () (_ BitVec 64))
(declare-fun temp566_152 () (_ BitVec 64))
(declare-fun temp566_153 () (_ BitVec 64))
(declare-fun temp566_154 () (_ BitVec 64))
(declare-fun temp566_156 () (_ BitVec 64))
(declare-fun temp566_157 () (_ BitVec 64))
(declare-fun temp566_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp566_158 () (_ BitVec 64))
(declare-fun temp566_159 () (_ BitVec 64))
(declare-fun temp566_161 () (_ BitVec 64))
(declare-fun temp566_162 () (_ BitVec 64))
(declare-fun temp566_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp566_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp566_164 () (_ BitVec 64))
(declare-fun temp566_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp566_166 () (_ BitVec 64))
(declare-fun temp566_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp566_168 () (_ BitVec 64))
(declare-fun temp566_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_170 () (_ BitVec 64))
(declare-fun temp566_171 () (_ BitVec 64))
(declare-fun temp566_172 () (_ BitVec 64))
(declare-fun temp566_173 () (_ BitVec 64))
(declare-fun temp566_174 () (_ BitVec 64))
(declare-fun temp566_175 () (_ BitVec 64))
(declare-fun temp566_176 () (_ BitVec 64))
(declare-fun temp566_177 () (_ BitVec 64))
(declare-fun temp566_178 () (_ BitVec 64))
(declare-fun temp566_179 () (_ BitVec 64))
(declare-fun temp566_180 () (_ BitVec 64))
(declare-fun temp566_181 () (_ BitVec 64))
(declare-fun temp566_182 () (_ BitVec 64))
(declare-fun temp566_183 () (_ BitVec 64))
(declare-fun temp566_184 () (_ BitVec 64))
(declare-fun temp566_185 () (_ BitVec 64))
(declare-fun temp566_186 () (_ BitVec 64))
(declare-fun temp566_187 () (_ BitVec 64))
(declare-fun temp566_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp566_189 () (_ BitVec 64))
(declare-fun temp566_191 () (_ BitVec 64))
(declare-fun temp566_192 () (_ BitVec 64))
(declare-fun temp566_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp566_193 () (_ BitVec 64))
(declare-fun temp566_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp566_195 () (_ BitVec 64))
(declare-fun temp566_196 () (_ BitVec 64))
(declare-fun temp566_197 () (_ BitVec 64))
(declare-fun temp566_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_199 () (_ BitVec 64))
(declare-fun temp566_200 () (_ BitVec 64))
(declare-fun temp566_201 () (_ BitVec 64))
(declare-fun temp566_202 () (_ BitVec 64))
(declare-fun temp566_203 () (_ BitVec 64))
(declare-fun temp566_204 () (_ BitVec 64))
(declare-fun temp566_205 () (_ BitVec 64))
(declare-fun temp566_206 () (_ BitVec 64))
(declare-fun temp566_207 () (_ BitVec 64))
(declare-fun temp566_208 () (_ BitVec 64))
(declare-fun temp566_209 () (_ BitVec 64))
(declare-fun temp566_210 () (_ BitVec 64))
(declare-fun temp566_211 () (_ BitVec 64))
(declare-fun temp566_212 () (_ BitVec 64))
(declare-fun temp566_213 () (_ BitVec 64))
(declare-fun temp566_214 () (_ BitVec 64))
(declare-fun temp566_215 () (_ BitVec 64))
(declare-fun temp566_216 () (_ BitVec 64))
(declare-fun temp566_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp566_218 () (_ BitVec 64))
(declare-fun temp566_220 () (_ BitVec 64))
(declare-fun temp566_221 () (_ BitVec 64))
(declare-fun temp566_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp566_222 () (_ BitVec 64))
(declare-fun temp566_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp566_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp566_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp566_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp566_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp566_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp566_229 () (_ BitVec 64))
(declare-fun temp566_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp566_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp566_232 () (_ BitVec 64))
(declare-fun temp566_233 () (_ BitVec 64))
(declare-fun temp566_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp566_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp566_236 () (_ BitVec 64))
(declare-fun temp566_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp566_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp566_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp566_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp566_241 () (_ BitVec 64))
(declare-fun temp566_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp566_243 () (_ BitVec 64))
(assert (= temp566_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp566_1)))
(assert (= temp566_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp566_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_3 #x0000000000000000))
(assert (= var79869 temp566_3))
(assert (= temp566_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp566_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_5 #x0000000000000000))
(assert (= var79914 temp566_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp566_6 #x0000000000000000))
(assert (= temp566_7 temp566_6))
(assert (= temp566_8 (select ARGNAME_padding_NAMEEND_VAL temp566_7)))
(assert (= temp566_9 #x0000000000000001))
(assert (= temp566_10 temp566_9))
(assert (= temp566_11 (select ARGNAME_padding_NAMEEND_VAL temp566_10)))
(assert (= temp566_12 #x0000000000000002))
(assert (= temp566_13 temp566_12))
(assert (= temp566_14 (select ARGNAME_padding_NAMEEND_VAL temp566_13)))
(assert (= temp566_15 #x0000000000000003))
(assert (= temp566_16 temp566_15))
(assert (= temp566_17 (select ARGNAME_padding_NAMEEND_VAL temp566_16)))
(assert (= temp566_18 #x0000000000000004))
(assert (= temp566_19 temp566_18))
(assert (= temp566_20 (select ARGNAME_padding_NAMEEND_VAL temp566_19)))
(assert (= temp566_21 #x0000000000000005))
(assert (= temp566_22 temp566_21))
(assert (= temp566_23 (select ARGNAME_padding_NAMEEND_VAL temp566_22)))
(assert (= temp566_24 #x0000000000000000))
(assert (= temp566_25 #x0000000000000000))
(assert (= temp566_26 temp566_25))
(assert (= temp566_27 (select ARGNAME_padding_NAMEEND_VAL temp566_26)))
(assert (= temp566_28 #x0000000000000000))
(assert (= temp566_29 #x0000000000000001))
(assert (= temp566_30 temp566_29))
(assert (= temp566_31 (select ARGNAME_padding_NAMEEND_VAL temp566_30)))
(assert (= temp566_32 #x0000000000000000))
(assert (= temp566_33 #x0000000000000002))
(assert (= temp566_34 temp566_33))
(assert (= temp566_35 (select ARGNAME_padding_NAMEEND_VAL temp566_34)))
(assert (= temp566_36 #x0000000000000000))
(assert (= temp566_37 #x0000000000000003))
(assert (= temp566_38 temp566_37))
(assert (= temp566_39 (select ARGNAME_padding_NAMEEND_VAL temp566_38)))
(assert (= temp566_40 #x0000000000000000))
(assert (= temp566_41 #x0000000000000004))
(assert (= temp566_42 temp566_41))
(assert (= temp566_43 (select ARGNAME_padding_NAMEEND_VAL temp566_42)))
(assert (= temp566_44 #x0000000000000000))
(assert (= temp566_45 #x0000000000000005))
(assert (= temp566_46 temp566_45))
(assert (= temp566_47 (select ARGNAME_padding_NAMEEND_VAL temp566_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp566_27 temp566_24)
             (bvslt temp566_31 temp566_28)
             (bvslt temp566_35 temp566_32)
             (bvslt temp566_39 temp566_36)
             (bvslt temp566_43 temp566_40)
             (bvslt temp566_47 temp566_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_48 #x0000000000000000))
(assert (= var1322786 temp566_48))
(assert (= temp566_49 #x0000000000000000))
(assert (= temp566_50 temp566_49))
(assert (= temp566_51 (select ARGNAME_output_padding_NAMEEND_VAL temp566_50)))
(assert (= temp566_52 #x0000000000000001))
(assert (= temp566_53 temp566_52))
(assert (= temp566_54 (select ARGNAME_output_padding_NAMEEND_VAL temp566_53)))
(assert (= temp566_55 #x0000000000000002))
(assert (= temp566_56 temp566_55))
(assert (= temp566_57 (select ARGNAME_output_padding_NAMEEND_VAL temp566_56)))
(assert (= temp566_58 #x0000000000000003))
(assert (= temp566_59 temp566_58))
(assert (= temp566_60 (select ARGNAME_output_padding_NAMEEND_VAL temp566_59)))
(assert (= temp566_61 #x0000000000000004))
(assert (= temp566_62 temp566_61))
(assert (= temp566_63 (select ARGNAME_output_padding_NAMEEND_VAL temp566_62)))
(assert (= temp566_64 #x0000000000000005))
(assert (= temp566_65 temp566_64))
(assert (= temp566_66 (select ARGNAME_output_padding_NAMEEND_VAL temp566_65)))
(assert (= temp566_67 #x0000000000000000))
(assert (= temp566_68 #x0000000000000000))
(assert (= temp566_69 temp566_68))
(assert (= temp566_70 (select ARGNAME_output_padding_NAMEEND_VAL temp566_69)))
(assert (= temp566_71 #x0000000000000000))
(assert (= temp566_72 #x0000000000000001))
(assert (= temp566_73 temp566_72))
(assert (= temp566_74 (select ARGNAME_output_padding_NAMEEND_VAL temp566_73)))
(assert (= temp566_75 #x0000000000000000))
(assert (= temp566_76 #x0000000000000002))
(assert (= temp566_77 temp566_76))
(assert (= temp566_78 (select ARGNAME_output_padding_NAMEEND_VAL temp566_77)))
(assert (= temp566_79 #x0000000000000000))
(assert (= temp566_80 #x0000000000000003))
(assert (= temp566_81 temp566_80))
(assert (= temp566_82 (select ARGNAME_output_padding_NAMEEND_VAL temp566_81)))
(assert (= temp566_83 #x0000000000000000))
(assert (= temp566_84 #x0000000000000004))
(assert (= temp566_85 temp566_84))
(assert (= temp566_86 (select ARGNAME_output_padding_NAMEEND_VAL temp566_85)))
(assert (= temp566_87 #x0000000000000000))
(assert (= temp566_88 #x0000000000000005))
(assert (= temp566_89 temp566_88))
(assert (= temp566_90 (select ARGNAME_output_padding_NAMEEND_VAL temp566_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp566_70 temp566_67)
             (bvslt temp566_74 temp566_71)
             (bvslt temp566_78 temp566_75)
             (bvslt temp566_82 temp566_79)
             (bvslt temp566_86 temp566_83)
             (bvslt temp566_90 temp566_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_91 #x0000000000000000))
(assert (= var1322797 temp566_91))
(assert (= temp566_92 #x0000000000000000))
(assert (= temp566_93 temp566_92))
(assert (= temp566_94 (select ARGNAME_stride_NAMEEND_VAL temp566_93)))
(assert (= temp566_95 #x0000000000000001))
(assert (= temp566_96 temp566_95))
(assert (= temp566_97 (select ARGNAME_stride_NAMEEND_VAL temp566_96)))
(assert (= temp566_98 #x0000000000000002))
(assert (= temp566_99 temp566_98))
(assert (= temp566_100 (select ARGNAME_stride_NAMEEND_VAL temp566_99)))
(assert (= temp566_101 #x0000000000000003))
(assert (= temp566_102 temp566_101))
(assert (= temp566_103 (select ARGNAME_stride_NAMEEND_VAL temp566_102)))
(assert (= temp566_104 #x0000000000000004))
(assert (= temp566_105 temp566_104))
(assert (= temp566_106 (select ARGNAME_stride_NAMEEND_VAL temp566_105)))
(assert (= temp566_107 #x0000000000000005))
(assert (= temp566_108 temp566_107))
(assert (= temp566_109 (select ARGNAME_stride_NAMEEND_VAL temp566_108)))
(assert (= temp566_110 #x0000000000000000))
(assert (= temp566_111 #x0000000000000000))
(assert (= temp566_112 temp566_111))
(assert (= temp566_113 (select ARGNAME_stride_NAMEEND_VAL temp566_112)))
(assert (= temp566_114 #x0000000000000000))
(assert (= temp566_115 #x0000000000000001))
(assert (= temp566_116 temp566_115))
(assert (= temp566_117 (select ARGNAME_stride_NAMEEND_VAL temp566_116)))
(assert (= temp566_118 #x0000000000000000))
(assert (= temp566_119 #x0000000000000002))
(assert (= temp566_120 temp566_119))
(assert (= temp566_121 (select ARGNAME_stride_NAMEEND_VAL temp566_120)))
(assert (= temp566_122 #x0000000000000000))
(assert (= temp566_123 #x0000000000000003))
(assert (= temp566_124 temp566_123))
(assert (= temp566_125 (select ARGNAME_stride_NAMEEND_VAL temp566_124)))
(assert (= temp566_126 #x0000000000000000))
(assert (= temp566_127 #x0000000000000004))
(assert (= temp566_128 temp566_127))
(assert (= temp566_129 (select ARGNAME_stride_NAMEEND_VAL temp566_128)))
(assert (= temp566_130 #x0000000000000000))
(assert (= temp566_131 #x0000000000000005))
(assert (= temp566_132 temp566_131))
(assert (= temp566_133 (select ARGNAME_stride_NAMEEND_VAL temp566_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp566_113 temp566_110)
             (bvsle temp566_117 temp566_114)
             (bvsle temp566_121 temp566_118)
             (bvsle temp566_125 temp566_122)
             (bvsle temp566_129 temp566_126)
             (bvsle temp566_133 temp566_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_134 #x0000000000000000))
(assert (= var1322807 temp566_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_135 #x0000000000000001))
(assert (= var1322819 temp566_135))
(assert (= temp566_136 #x0000000000000000))
(assert (= var1310898 temp566_136))
(assert (= temp566_137 #x0000000000000000))
(assert (= temp566_138 temp566_137))
(assert (= temp566_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_138)))
(assert (= temp566_140 #x0000000000000001))
(assert (= temp566_141 temp566_140))
(assert (= temp566_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_141)))
(assert (= temp566_143 #x0000000000000002))
(assert (= temp566_144 temp566_143))
(assert (= temp566_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_144)))
(assert (= temp566_146 #x0000000000000003))
(assert (= temp566_147 temp566_146))
(assert (= temp566_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_147)))
(assert (= temp566_149 #x0000000000000004))
(assert (= temp566_150 temp566_149))
(assert (= temp566_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_150)))
(assert (= temp566_152 #x0000000000000005))
(assert (= temp566_153 temp566_152))
(assert (= temp566_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_153)))
(assert (= temp566_156 var1310898))
(assert (= temp566_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_156)))
(assert (= temp566_155 temp566_157))
(assert (= var1322852
   (ite (bvslt temp566_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_158 #x0000000000000000))
(assert (= var1322852 temp566_158))
(assert (= temp566_159 #x0000000000000000))
(assert (= var1310898 temp566_159))
(assert (= temp566_161 var1310898))
(assert (= temp566_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_161)))
(assert (= temp566_160 temp566_162))
(assert (= var1322874 (bvsmod temp566_160 ARGNAME_groups_NAMEEND)))
(assert (= temp566_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp566_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_164 #x0000000000000001))
(assert (= var1322875 temp566_164))
(assert (= temp566_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp566_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_166 #x0000000000000001))
(assert (= var1322895 temp566_166))
(assert (= temp566_167 #x0000000000000001))
(assert (= var1311786 temp566_167))
(assert (= temp566_168 #x0000000000000000))
(assert (= temp566_169 temp566_168))
(assert (= temp566_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_169)))
(assert (= temp566_171 #x0000000000000001))
(assert (= temp566_172 temp566_171))
(assert (= temp566_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_172)))
(assert (= temp566_174 #x0000000000000002))
(assert (= temp566_175 temp566_174))
(assert (= temp566_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_175)))
(assert (= temp566_177 #x0000000000000003))
(assert (= temp566_178 temp566_177))
(assert (= temp566_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_178)))
(assert (= temp566_180 #x0000000000000004))
(assert (= temp566_181 temp566_180))
(assert (= temp566_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_181)))
(assert (= temp566_183 #x0000000000000005))
(assert (= temp566_184 temp566_183))
(assert (= temp566_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_184)))
(assert (= temp566_186 #x0000000000000000))
(assert (= temp566_187
   (ite (bvslt var1311786 temp566_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp566_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_187)))
(assert (= var1322903 temp566_188))
(assert (bvslt (ite (bvslt var1311786 temp566_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp566_189 #x0000000000000001))
(assert (= var1311786 temp566_189))
(assert (= temp566_191 var1311786))
(assert (= temp566_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_191)))
(assert (= temp566_190 temp566_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp566_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_193 #x0000000000000001))
(assert (= var1322908 temp566_193))
(assert (= temp566_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp566_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_195 #x0000000000000001))
(assert (= var1322975 temp566_195))
(assert (= temp566_196 #x0000000000000000))
(assert (= var1310898 temp566_196))
(assert (= temp566_197 #x0000000000000000))
(assert (= temp566_198 temp566_197))
(assert (= temp566_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp566_198)))
(assert (= temp566_200 #x0000000000000001))
(assert (= temp566_201 temp566_200))
(assert (= temp566_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp566_201)))
(assert (= temp566_203 #x0000000000000002))
(assert (= temp566_204 temp566_203))
(assert (= temp566_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp566_204)))
(assert (= temp566_206 #x0000000000000003))
(assert (= temp566_207 temp566_206))
(assert (= temp566_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp566_207)))
(assert (= temp566_209 #x0000000000000004))
(assert (= temp566_210 temp566_209))
(assert (= temp566_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp566_210)))
(assert (= temp566_212 #x0000000000000005))
(assert (= temp566_213 temp566_212))
(assert (= temp566_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp566_213)))
(assert (= temp566_215 #x0000000000000000))
(assert (= temp566_216
   (ite (bvslt var1310898 temp566_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp566_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp566_216)))
(assert (= var1322977 temp566_217))
(assert (bvslt (ite (bvslt var1310898 temp566_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp566_218 #x0000000000000000))
(assert (= var1310898 temp566_218))
(assert (= temp566_220 var1310898))
(assert (= temp566_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_220)))
(assert (= temp566_219 temp566_221))
(assert (= var1322980
   (ite (= var1322977 temp566_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_222 #x0000000000000001))
(assert (= var1322980 temp566_222))
(assert (= temp566_223 #x0000000000000002))
(assert (= var1848169 temp566_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp566_225 #x0000000000000001))
(assert (= var1323065 temp566_225))
(assert (= temp566_226 #x0000000000000001))
(assert (= var3486735 temp566_226))
(assert (= temp566_227 #x0000000000000001))
(assert (= var3814415 temp566_227))
(assert (= temp566_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp566_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_229 #x0000000000000001))
(assert (= var79986 temp566_229))
(assert (= temp566_230 #x0000000000000001))
(assert (= var80116 temp566_230))
(assert (= var4796905 var80116))
(assert (= temp566_231 #x0000000000000000))
(assert (= var4784306 temp566_231))
(assert (= temp566_232 #x0000000000000000))
(assert (= temp566_233
   (ite (bvslt var4784306 temp566_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp566_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_233)))
(assert (= var4796924 temp566_234))
(assert (bvslt (ite (bvslt var4784306 temp566_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp566_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp566_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_236 #x0000000000000001))
(assert (= var4796925 temp566_236))
(assert (= temp566_237 #x0000000000000000))
(assert (= var4996927 temp566_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp566_238 #x0000000000000002))
(assert (= var5125763 temp566_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_239 #x0000000000000000))
(assert (= var5191324 temp566_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp566_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp566_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_241 #x0000000000000000))
(assert (= var81342 temp566_241))
(assert (= temp566_242 #x0000000000000002))
(assert (= var5977731 temp566_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp566_243 #x0000000000000001))
(assert (= var79986 temp566_243))
(model-add temp566_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp566_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp566_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






