(declare-fun temp401_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp401_2 () (_ BitVec 64))
(declare-fun temp401_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp401_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp401_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp401_6 () (_ BitVec 64))
(declare-fun temp401_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp401_8 () (_ BitVec 64))
(declare-fun temp401_9 () (_ BitVec 64))
(declare-fun temp401_10 () (_ BitVec 64))
(declare-fun temp401_11 () (_ BitVec 64))
(declare-fun temp401_12 () (_ BitVec 64))
(declare-fun temp401_13 () (_ BitVec 64))
(declare-fun temp401_14 () (_ BitVec 64))
(declare-fun temp401_15 () (_ BitVec 64))
(declare-fun temp401_16 () (_ BitVec 64))
(declare-fun temp401_17 () (_ BitVec 64))
(declare-fun temp401_18 () (_ BitVec 64))
(declare-fun temp401_19 () (_ BitVec 64))
(declare-fun temp401_20 () (_ BitVec 64))
(declare-fun temp401_21 () (_ BitVec 64))
(declare-fun temp401_22 () (_ BitVec 64))
(declare-fun temp401_23 () (_ BitVec 64))
(declare-fun temp401_24 () (_ BitVec 64))
(declare-fun temp401_25 () (_ BitVec 64))
(declare-fun temp401_26 () (_ BitVec 64))
(declare-fun temp401_27 () (_ BitVec 64))
(declare-fun temp401_28 () (_ BitVec 64))
(declare-fun temp401_29 () (_ BitVec 64))
(declare-fun temp401_30 () (_ BitVec 64))
(declare-fun temp401_31 () (_ BitVec 64))
(declare-fun temp401_32 () (_ BitVec 64))
(declare-fun temp401_33 () (_ BitVec 64))
(declare-fun temp401_34 () (_ BitVec 64))
(declare-fun temp401_35 () (_ BitVec 64))
(declare-fun temp401_36 () (_ BitVec 64))
(declare-fun temp401_37 () (_ BitVec 64))
(declare-fun temp401_38 () (_ BitVec 64))
(declare-fun temp401_39 () (_ BitVec 64))
(declare-fun temp401_40 () (_ BitVec 64))
(declare-fun temp401_41 () (_ BitVec 64))
(declare-fun temp401_42 () (_ BitVec 64))
(declare-fun temp401_43 () (_ BitVec 64))
(declare-fun temp401_44 () (_ BitVec 64))
(declare-fun temp401_45 () (_ BitVec 64))
(declare-fun temp401_46 () (_ BitVec 64))
(declare-fun temp401_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp401_48 () (_ BitVec 64))
(declare-fun temp401_49 () (_ BitVec 64))
(declare-fun temp401_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp401_51 () (_ BitVec 64))
(declare-fun temp401_52 () (_ BitVec 64))
(declare-fun temp401_53 () (_ BitVec 64))
(declare-fun temp401_54 () (_ BitVec 64))
(declare-fun temp401_55 () (_ BitVec 64))
(declare-fun temp401_56 () (_ BitVec 64))
(declare-fun temp401_57 () (_ BitVec 64))
(declare-fun temp401_58 () (_ BitVec 64))
(declare-fun temp401_59 () (_ BitVec 64))
(declare-fun temp401_60 () (_ BitVec 64))
(declare-fun temp401_61 () (_ BitVec 64))
(declare-fun temp401_62 () (_ BitVec 64))
(declare-fun temp401_63 () (_ BitVec 64))
(declare-fun temp401_64 () (_ BitVec 64))
(declare-fun temp401_65 () (_ BitVec 64))
(declare-fun temp401_66 () (_ BitVec 64))
(declare-fun temp401_67 () (_ BitVec 64))
(declare-fun temp401_68 () (_ BitVec 64))
(declare-fun temp401_69 () (_ BitVec 64))
(declare-fun temp401_70 () (_ BitVec 64))
(declare-fun temp401_71 () (_ BitVec 64))
(declare-fun temp401_72 () (_ BitVec 64))
(declare-fun temp401_73 () (_ BitVec 64))
(declare-fun temp401_74 () (_ BitVec 64))
(declare-fun temp401_75 () (_ BitVec 64))
(declare-fun temp401_76 () (_ BitVec 64))
(declare-fun temp401_77 () (_ BitVec 64))
(declare-fun temp401_78 () (_ BitVec 64))
(declare-fun temp401_79 () (_ BitVec 64))
(declare-fun temp401_80 () (_ BitVec 64))
(declare-fun temp401_81 () (_ BitVec 64))
(declare-fun temp401_82 () (_ BitVec 64))
(declare-fun temp401_83 () (_ BitVec 64))
(declare-fun temp401_84 () (_ BitVec 64))
(declare-fun temp401_85 () (_ BitVec 64))
(declare-fun temp401_86 () (_ BitVec 64))
(declare-fun temp401_87 () (_ BitVec 64))
(declare-fun temp401_88 () (_ BitVec 64))
(declare-fun temp401_89 () (_ BitVec 64))
(declare-fun temp401_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp401_91 () (_ BitVec 64))
(declare-fun temp401_92 () (_ BitVec 64))
(declare-fun temp401_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp401_94 () (_ BitVec 64))
(declare-fun temp401_95 () (_ BitVec 64))
(declare-fun temp401_96 () (_ BitVec 64))
(declare-fun temp401_97 () (_ BitVec 64))
(declare-fun temp401_98 () (_ BitVec 64))
(declare-fun temp401_99 () (_ BitVec 64))
(declare-fun temp401_100 () (_ BitVec 64))
(declare-fun temp401_101 () (_ BitVec 64))
(declare-fun temp401_102 () (_ BitVec 64))
(declare-fun temp401_103 () (_ BitVec 64))
(declare-fun temp401_104 () (_ BitVec 64))
(declare-fun temp401_105 () (_ BitVec 64))
(declare-fun temp401_106 () (_ BitVec 64))
(declare-fun temp401_107 () (_ BitVec 64))
(declare-fun temp401_108 () (_ BitVec 64))
(declare-fun temp401_109 () (_ BitVec 64))
(declare-fun temp401_110 () (_ BitVec 64))
(declare-fun temp401_111 () (_ BitVec 64))
(declare-fun temp401_112 () (_ BitVec 64))
(declare-fun temp401_113 () (_ BitVec 64))
(declare-fun temp401_114 () (_ BitVec 64))
(declare-fun temp401_115 () (_ BitVec 64))
(declare-fun temp401_116 () (_ BitVec 64))
(declare-fun temp401_117 () (_ BitVec 64))
(declare-fun temp401_118 () (_ BitVec 64))
(declare-fun temp401_119 () (_ BitVec 64))
(declare-fun temp401_120 () (_ BitVec 64))
(declare-fun temp401_121 () (_ BitVec 64))
(declare-fun temp401_122 () (_ BitVec 64))
(declare-fun temp401_123 () (_ BitVec 64))
(declare-fun temp401_124 () (_ BitVec 64))
(declare-fun temp401_125 () (_ BitVec 64))
(declare-fun temp401_126 () (_ BitVec 64))
(declare-fun temp401_127 () (_ BitVec 64))
(declare-fun temp401_128 () (_ BitVec 64))
(declare-fun temp401_129 () (_ BitVec 64))
(declare-fun temp401_130 () (_ BitVec 64))
(declare-fun temp401_131 () (_ BitVec 64))
(declare-fun temp401_132 () (_ BitVec 64))
(declare-fun temp401_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp401_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp401_135 () (_ BitVec 64))
(declare-fun temp401_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp401_137 () (_ BitVec 64))
(declare-fun temp401_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp401_139 () (_ BitVec 64))
(declare-fun temp401_140 () (_ BitVec 64))
(declare-fun temp401_141 () (_ BitVec 64))
(declare-fun temp401_142 () (_ BitVec 64))
(declare-fun temp401_143 () (_ BitVec 64))
(declare-fun temp401_144 () (_ BitVec 64))
(declare-fun temp401_145 () (_ BitVec 64))
(declare-fun temp401_146 () (_ BitVec 64))
(declare-fun temp401_147 () (_ BitVec 64))
(declare-fun temp401_148 () (_ BitVec 64))
(declare-fun temp401_149 () (_ BitVec 64))
(declare-fun temp401_150 () (_ BitVec 64))
(declare-fun temp401_151 () (_ BitVec 64))
(declare-fun temp401_152 () (_ BitVec 64))
(declare-fun temp401_153 () (_ BitVec 64))
(declare-fun temp401_154 () (_ BitVec 64))
(declare-fun temp401_156 () (_ BitVec 64))
(declare-fun temp401_157 () (_ BitVec 64))
(declare-fun temp401_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp401_158 () (_ BitVec 64))
(declare-fun temp401_159 () (_ BitVec 64))
(declare-fun temp401_161 () (_ BitVec 64))
(declare-fun temp401_162 () (_ BitVec 64))
(declare-fun temp401_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp401_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp401_164 () (_ BitVec 64))
(declare-fun temp401_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp401_166 () (_ BitVec 64))
(declare-fun temp401_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp401_168 () (_ BitVec 64))
(declare-fun temp401_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp401_170 () (_ BitVec 64))
(declare-fun temp401_171 () (_ BitVec 64))
(declare-fun temp401_172 () (_ BitVec 64))
(declare-fun temp401_173 () (_ BitVec 64))
(declare-fun temp401_174 () (_ BitVec 64))
(declare-fun temp401_175 () (_ BitVec 64))
(declare-fun temp401_176 () (_ BitVec 64))
(declare-fun temp401_177 () (_ BitVec 64))
(declare-fun temp401_178 () (_ BitVec 64))
(declare-fun temp401_179 () (_ BitVec 64))
(declare-fun temp401_180 () (_ BitVec 64))
(declare-fun temp401_181 () (_ BitVec 64))
(declare-fun temp401_182 () (_ BitVec 64))
(declare-fun temp401_183 () (_ BitVec 64))
(declare-fun temp401_184 () (_ BitVec 64))
(declare-fun temp401_185 () (_ BitVec 64))
(declare-fun temp401_186 () (_ BitVec 64))
(declare-fun temp401_187 () (_ BitVec 64))
(declare-fun temp401_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp401_189 () (_ BitVec 64))
(declare-fun temp401_191 () (_ BitVec 64))
(declare-fun temp401_192 () (_ BitVec 64))
(declare-fun temp401_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp401_193 () (_ BitVec 64))
(declare-fun temp401_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp401_195 () (_ BitVec 64))
(declare-fun temp401_196 () (_ BitVec 64))
(declare-fun temp401_197 () (_ BitVec 64))
(declare-fun temp401_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp401_199 () (_ BitVec 64))
(declare-fun temp401_200 () (_ BitVec 64))
(declare-fun temp401_201 () (_ BitVec 64))
(declare-fun temp401_202 () (_ BitVec 64))
(declare-fun temp401_203 () (_ BitVec 64))
(declare-fun temp401_204 () (_ BitVec 64))
(declare-fun temp401_205 () (_ BitVec 64))
(declare-fun temp401_206 () (_ BitVec 64))
(declare-fun temp401_207 () (_ BitVec 64))
(declare-fun temp401_208 () (_ BitVec 64))
(declare-fun temp401_209 () (_ BitVec 64))
(declare-fun temp401_210 () (_ BitVec 64))
(declare-fun temp401_211 () (_ BitVec 64))
(declare-fun temp401_212 () (_ BitVec 64))
(declare-fun temp401_213 () (_ BitVec 64))
(declare-fun temp401_214 () (_ BitVec 64))
(declare-fun temp401_215 () (_ BitVec 64))
(declare-fun temp401_216 () (_ BitVec 64))
(declare-fun temp401_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp401_218 () (_ BitVec 64))
(declare-fun temp401_220 () (_ BitVec 64))
(declare-fun temp401_221 () (_ BitVec 64))
(declare-fun temp401_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp401_222 () (_ BitVec 64))
(declare-fun temp401_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp401_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp401_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp401_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp401_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp401_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp401_229 () (_ BitVec 64))
(declare-fun temp401_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp401_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp401_232 () (_ BitVec 64))
(declare-fun temp401_233 () (_ BitVec 64))
(declare-fun temp401_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp401_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp401_236 () (_ BitVec 64))
(declare-fun temp401_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp401_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp401_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp401_240 () (_ BitVec 64))
(assert (= temp401_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp401_1)))
(assert (= temp401_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp401_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_3 #x0000000000000000))
(assert (= var79869 temp401_3))
(assert (= temp401_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp401_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_5 #x0000000000000000))
(assert (= var79914 temp401_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp401_6 #x0000000000000000))
(assert (= temp401_7 temp401_6))
(assert (= temp401_8 (select ARGNAME_padding_NAMEEND_VAL temp401_7)))
(assert (= temp401_9 #x0000000000000001))
(assert (= temp401_10 temp401_9))
(assert (= temp401_11 (select ARGNAME_padding_NAMEEND_VAL temp401_10)))
(assert (= temp401_12 #x0000000000000002))
(assert (= temp401_13 temp401_12))
(assert (= temp401_14 (select ARGNAME_padding_NAMEEND_VAL temp401_13)))
(assert (= temp401_15 #x0000000000000003))
(assert (= temp401_16 temp401_15))
(assert (= temp401_17 (select ARGNAME_padding_NAMEEND_VAL temp401_16)))
(assert (= temp401_18 #x0000000000000004))
(assert (= temp401_19 temp401_18))
(assert (= temp401_20 (select ARGNAME_padding_NAMEEND_VAL temp401_19)))
(assert (= temp401_21 #x0000000000000005))
(assert (= temp401_22 temp401_21))
(assert (= temp401_23 (select ARGNAME_padding_NAMEEND_VAL temp401_22)))
(assert (= temp401_24 #x0000000000000000))
(assert (= temp401_25 #x0000000000000000))
(assert (= temp401_26 temp401_25))
(assert (= temp401_27 (select ARGNAME_padding_NAMEEND_VAL temp401_26)))
(assert (= temp401_28 #x0000000000000000))
(assert (= temp401_29 #x0000000000000001))
(assert (= temp401_30 temp401_29))
(assert (= temp401_31 (select ARGNAME_padding_NAMEEND_VAL temp401_30)))
(assert (= temp401_32 #x0000000000000000))
(assert (= temp401_33 #x0000000000000002))
(assert (= temp401_34 temp401_33))
(assert (= temp401_35 (select ARGNAME_padding_NAMEEND_VAL temp401_34)))
(assert (= temp401_36 #x0000000000000000))
(assert (= temp401_37 #x0000000000000003))
(assert (= temp401_38 temp401_37))
(assert (= temp401_39 (select ARGNAME_padding_NAMEEND_VAL temp401_38)))
(assert (= temp401_40 #x0000000000000000))
(assert (= temp401_41 #x0000000000000004))
(assert (= temp401_42 temp401_41))
(assert (= temp401_43 (select ARGNAME_padding_NAMEEND_VAL temp401_42)))
(assert (= temp401_44 #x0000000000000000))
(assert (= temp401_45 #x0000000000000005))
(assert (= temp401_46 temp401_45))
(assert (= temp401_47 (select ARGNAME_padding_NAMEEND_VAL temp401_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp401_27 temp401_24)
             (bvslt temp401_31 temp401_28)
             (bvslt temp401_35 temp401_32)
             (bvslt temp401_39 temp401_36)
             (bvslt temp401_43 temp401_40)
             (bvslt temp401_47 temp401_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_48 #x0000000000000000))
(assert (= var1322786 temp401_48))
(assert (= temp401_49 #x0000000000000000))
(assert (= temp401_50 temp401_49))
(assert (= temp401_51 (select ARGNAME_output_padding_NAMEEND_VAL temp401_50)))
(assert (= temp401_52 #x0000000000000001))
(assert (= temp401_53 temp401_52))
(assert (= temp401_54 (select ARGNAME_output_padding_NAMEEND_VAL temp401_53)))
(assert (= temp401_55 #x0000000000000002))
(assert (= temp401_56 temp401_55))
(assert (= temp401_57 (select ARGNAME_output_padding_NAMEEND_VAL temp401_56)))
(assert (= temp401_58 #x0000000000000003))
(assert (= temp401_59 temp401_58))
(assert (= temp401_60 (select ARGNAME_output_padding_NAMEEND_VAL temp401_59)))
(assert (= temp401_61 #x0000000000000004))
(assert (= temp401_62 temp401_61))
(assert (= temp401_63 (select ARGNAME_output_padding_NAMEEND_VAL temp401_62)))
(assert (= temp401_64 #x0000000000000005))
(assert (= temp401_65 temp401_64))
(assert (= temp401_66 (select ARGNAME_output_padding_NAMEEND_VAL temp401_65)))
(assert (= temp401_67 #x0000000000000000))
(assert (= temp401_68 #x0000000000000000))
(assert (= temp401_69 temp401_68))
(assert (= temp401_70 (select ARGNAME_output_padding_NAMEEND_VAL temp401_69)))
(assert (= temp401_71 #x0000000000000000))
(assert (= temp401_72 #x0000000000000001))
(assert (= temp401_73 temp401_72))
(assert (= temp401_74 (select ARGNAME_output_padding_NAMEEND_VAL temp401_73)))
(assert (= temp401_75 #x0000000000000000))
(assert (= temp401_76 #x0000000000000002))
(assert (= temp401_77 temp401_76))
(assert (= temp401_78 (select ARGNAME_output_padding_NAMEEND_VAL temp401_77)))
(assert (= temp401_79 #x0000000000000000))
(assert (= temp401_80 #x0000000000000003))
(assert (= temp401_81 temp401_80))
(assert (= temp401_82 (select ARGNAME_output_padding_NAMEEND_VAL temp401_81)))
(assert (= temp401_83 #x0000000000000000))
(assert (= temp401_84 #x0000000000000004))
(assert (= temp401_85 temp401_84))
(assert (= temp401_86 (select ARGNAME_output_padding_NAMEEND_VAL temp401_85)))
(assert (= temp401_87 #x0000000000000000))
(assert (= temp401_88 #x0000000000000005))
(assert (= temp401_89 temp401_88))
(assert (= temp401_90 (select ARGNAME_output_padding_NAMEEND_VAL temp401_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp401_70 temp401_67)
             (bvslt temp401_74 temp401_71)
             (bvslt temp401_78 temp401_75)
             (bvslt temp401_82 temp401_79)
             (bvslt temp401_86 temp401_83)
             (bvslt temp401_90 temp401_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_91 #x0000000000000000))
(assert (= var1322797 temp401_91))
(assert (= temp401_92 #x0000000000000000))
(assert (= temp401_93 temp401_92))
(assert (= temp401_94 (select ARGNAME_stride_NAMEEND_VAL temp401_93)))
(assert (= temp401_95 #x0000000000000001))
(assert (= temp401_96 temp401_95))
(assert (= temp401_97 (select ARGNAME_stride_NAMEEND_VAL temp401_96)))
(assert (= temp401_98 #x0000000000000002))
(assert (= temp401_99 temp401_98))
(assert (= temp401_100 (select ARGNAME_stride_NAMEEND_VAL temp401_99)))
(assert (= temp401_101 #x0000000000000003))
(assert (= temp401_102 temp401_101))
(assert (= temp401_103 (select ARGNAME_stride_NAMEEND_VAL temp401_102)))
(assert (= temp401_104 #x0000000000000004))
(assert (= temp401_105 temp401_104))
(assert (= temp401_106 (select ARGNAME_stride_NAMEEND_VAL temp401_105)))
(assert (= temp401_107 #x0000000000000005))
(assert (= temp401_108 temp401_107))
(assert (= temp401_109 (select ARGNAME_stride_NAMEEND_VAL temp401_108)))
(assert (= temp401_110 #x0000000000000000))
(assert (= temp401_111 #x0000000000000000))
(assert (= temp401_112 temp401_111))
(assert (= temp401_113 (select ARGNAME_stride_NAMEEND_VAL temp401_112)))
(assert (= temp401_114 #x0000000000000000))
(assert (= temp401_115 #x0000000000000001))
(assert (= temp401_116 temp401_115))
(assert (= temp401_117 (select ARGNAME_stride_NAMEEND_VAL temp401_116)))
(assert (= temp401_118 #x0000000000000000))
(assert (= temp401_119 #x0000000000000002))
(assert (= temp401_120 temp401_119))
(assert (= temp401_121 (select ARGNAME_stride_NAMEEND_VAL temp401_120)))
(assert (= temp401_122 #x0000000000000000))
(assert (= temp401_123 #x0000000000000003))
(assert (= temp401_124 temp401_123))
(assert (= temp401_125 (select ARGNAME_stride_NAMEEND_VAL temp401_124)))
(assert (= temp401_126 #x0000000000000000))
(assert (= temp401_127 #x0000000000000004))
(assert (= temp401_128 temp401_127))
(assert (= temp401_129 (select ARGNAME_stride_NAMEEND_VAL temp401_128)))
(assert (= temp401_130 #x0000000000000000))
(assert (= temp401_131 #x0000000000000005))
(assert (= temp401_132 temp401_131))
(assert (= temp401_133 (select ARGNAME_stride_NAMEEND_VAL temp401_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp401_113 temp401_110)
             (bvsle temp401_117 temp401_114)
             (bvsle temp401_121 temp401_118)
             (bvsle temp401_125 temp401_122)
             (bvsle temp401_129 temp401_126)
             (bvsle temp401_133 temp401_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_134 #x0000000000000000))
(assert (= var1322807 temp401_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_135 #x0000000000000001))
(assert (= var1322819 temp401_135))
(assert (= temp401_136 #x0000000000000000))
(assert (= var1310898 temp401_136))
(assert (= temp401_137 #x0000000000000000))
(assert (= temp401_138 temp401_137))
(assert (= temp401_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_138)))
(assert (= temp401_140 #x0000000000000001))
(assert (= temp401_141 temp401_140))
(assert (= temp401_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_141)))
(assert (= temp401_143 #x0000000000000002))
(assert (= temp401_144 temp401_143))
(assert (= temp401_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_144)))
(assert (= temp401_146 #x0000000000000003))
(assert (= temp401_147 temp401_146))
(assert (= temp401_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_147)))
(assert (= temp401_149 #x0000000000000004))
(assert (= temp401_150 temp401_149))
(assert (= temp401_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_150)))
(assert (= temp401_152 #x0000000000000005))
(assert (= temp401_153 temp401_152))
(assert (= temp401_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_153)))
(assert (= temp401_156 var1310898))
(assert (= temp401_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_156)))
(assert (= temp401_155 temp401_157))
(assert (= var1322852
   (ite (bvslt temp401_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_158 #x0000000000000000))
(assert (= var1322852 temp401_158))
(assert (= temp401_159 #x0000000000000000))
(assert (= var1310898 temp401_159))
(assert (= temp401_161 var1310898))
(assert (= temp401_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_161)))
(assert (= temp401_160 temp401_162))
(assert (= var1322874 (bvsmod temp401_160 ARGNAME_groups_NAMEEND)))
(assert (= temp401_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp401_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp401_164 #x0000000000000001))
(assert (= var1322875 temp401_164))
(assert (= temp401_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp401_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_166 #x0000000000000001))
(assert (= var1322895 temp401_166))
(assert (= temp401_167 #x0000000000000001))
(assert (= var1311786 temp401_167))
(assert (= temp401_168 #x0000000000000000))
(assert (= temp401_169 temp401_168))
(assert (= temp401_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp401_169)))
(assert (= temp401_171 #x0000000000000001))
(assert (= temp401_172 temp401_171))
(assert (= temp401_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp401_172)))
(assert (= temp401_174 #x0000000000000002))
(assert (= temp401_175 temp401_174))
(assert (= temp401_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp401_175)))
(assert (= temp401_177 #x0000000000000003))
(assert (= temp401_178 temp401_177))
(assert (= temp401_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp401_178)))
(assert (= temp401_180 #x0000000000000004))
(assert (= temp401_181 temp401_180))
(assert (= temp401_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp401_181)))
(assert (= temp401_183 #x0000000000000005))
(assert (= temp401_184 temp401_183))
(assert (= temp401_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp401_184)))
(assert (= temp401_186 #x0000000000000000))
(assert (= temp401_187
   (ite (bvslt var1311786 temp401_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp401_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp401_187)))
(assert (= var1322903 temp401_188))
(assert (bvslt (ite (bvslt var1311786 temp401_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp401_189 #x0000000000000001))
(assert (= var1311786 temp401_189))
(assert (= temp401_191 var1311786))
(assert (= temp401_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_191)))
(assert (= temp401_190 temp401_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp401_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp401_193 #x0000000000000001))
(assert (= var1322908 temp401_193))
(assert (= temp401_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp401_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_195 #x0000000000000001))
(assert (= var1322975 temp401_195))
(assert (= temp401_196 #x0000000000000000))
(assert (= var1310898 temp401_196))
(assert (= temp401_197 #x0000000000000000))
(assert (= temp401_198 temp401_197))
(assert (= temp401_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp401_198)))
(assert (= temp401_200 #x0000000000000001))
(assert (= temp401_201 temp401_200))
(assert (= temp401_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp401_201)))
(assert (= temp401_203 #x0000000000000002))
(assert (= temp401_204 temp401_203))
(assert (= temp401_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp401_204)))
(assert (= temp401_206 #x0000000000000003))
(assert (= temp401_207 temp401_206))
(assert (= temp401_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp401_207)))
(assert (= temp401_209 #x0000000000000004))
(assert (= temp401_210 temp401_209))
(assert (= temp401_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp401_210)))
(assert (= temp401_212 #x0000000000000005))
(assert (= temp401_213 temp401_212))
(assert (= temp401_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp401_213)))
(assert (= temp401_215 #x0000000000000000))
(assert (= temp401_216
   (ite (bvslt var1310898 temp401_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp401_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp401_216)))
(assert (= var1322977 temp401_217))
(assert (bvslt (ite (bvslt var1310898 temp401_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp401_218 #x0000000000000000))
(assert (= var1310898 temp401_218))
(assert (= temp401_220 var1310898))
(assert (= temp401_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp401_220)))
(assert (= temp401_219 temp401_221))
(assert (= var1322980
   (ite (= var1322977 temp401_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp401_222 #x0000000000000001))
(assert (= var1322980 temp401_222))
(assert (= temp401_223 #x0000000000000002))
(assert (= var1848169 temp401_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp401_225 #x0000000000000001))
(assert (= var1323065 temp401_225))
(assert (= temp401_226 #x0000000000000001))
(assert (= var3486735 temp401_226))
(assert (= temp401_227 #x0000000000000001))
(assert (= var3814415 temp401_227))
(assert (= temp401_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp401_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_229 #x0000000000000001))
(assert (= var79986 temp401_229))
(assert (= temp401_230 #x0000000000000001))
(assert (= var80116 temp401_230))
(assert (= var4796905 var80116))
(assert (= temp401_231 #x0000000000000000))
(assert (= var4784306 temp401_231))
(assert (= temp401_232 #x0000000000000000))
(assert (= temp401_233
   (ite (bvslt var4784306 temp401_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp401_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp401_233)))
(assert (= var4796924 temp401_234))
(assert (bvslt (ite (bvslt var4784306 temp401_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp401_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp401_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp401_236 #x0000000000000001))
(assert (= var4796925 temp401_236))
(assert (= temp401_237 #x0000000000000000))
(assert (= var4996927 temp401_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp401_238 #x0000000000000002))
(assert (= var5125763 temp401_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp401_239 #x0000000000000000))
(assert (= var5191324 temp401_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp401_240 #x0000000000000001))
(assert (= var79986 temp401_240))
(model-add temp401_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp401_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp401_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






