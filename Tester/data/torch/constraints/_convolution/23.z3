(declare-fun temp30_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp30_2 () (_ BitVec 64))
(declare-fun temp30_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp30_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp30_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp30_6 () (_ BitVec 64))
(declare-fun temp30_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_8 () (_ BitVec 64))
(declare-fun temp30_9 () (_ BitVec 64))
(declare-fun temp30_10 () (_ BitVec 64))
(declare-fun temp30_11 () (_ BitVec 64))
(declare-fun temp30_12 () (_ BitVec 64))
(declare-fun temp30_13 () (_ BitVec 64))
(declare-fun temp30_14 () (_ BitVec 64))
(declare-fun temp30_15 () (_ BitVec 64))
(declare-fun temp30_16 () (_ BitVec 64))
(declare-fun temp30_17 () (_ BitVec 64))
(declare-fun temp30_18 () (_ BitVec 64))
(declare-fun temp30_19 () (_ BitVec 64))
(declare-fun temp30_20 () (_ BitVec 64))
(declare-fun temp30_21 () (_ BitVec 64))
(declare-fun temp30_22 () (_ BitVec 64))
(declare-fun temp30_23 () (_ BitVec 64))
(declare-fun temp30_24 () (_ BitVec 64))
(declare-fun temp30_25 () (_ BitVec 64))
(declare-fun temp30_26 () (_ BitVec 64))
(declare-fun temp30_27 () (_ BitVec 64))
(declare-fun temp30_28 () (_ BitVec 64))
(declare-fun temp30_29 () (_ BitVec 64))
(declare-fun temp30_30 () (_ BitVec 64))
(declare-fun temp30_31 () (_ BitVec 64))
(declare-fun temp30_32 () (_ BitVec 64))
(declare-fun temp30_33 () (_ BitVec 64))
(declare-fun temp30_34 () (_ BitVec 64))
(declare-fun temp30_35 () (_ BitVec 64))
(declare-fun temp30_36 () (_ BitVec 64))
(declare-fun temp30_37 () (_ BitVec 64))
(declare-fun temp30_38 () (_ BitVec 64))
(declare-fun temp30_39 () (_ BitVec 64))
(declare-fun temp30_40 () (_ BitVec 64))
(declare-fun temp30_41 () (_ BitVec 64))
(declare-fun temp30_42 () (_ BitVec 64))
(declare-fun temp30_43 () (_ BitVec 64))
(declare-fun temp30_44 () (_ BitVec 64))
(declare-fun temp30_45 () (_ BitVec 64))
(declare-fun temp30_46 () (_ BitVec 64))
(declare-fun temp30_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp30_48 () (_ BitVec 64))
(declare-fun temp30_49 () (_ BitVec 64))
(declare-fun temp30_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_51 () (_ BitVec 64))
(declare-fun temp30_52 () (_ BitVec 64))
(declare-fun temp30_53 () (_ BitVec 64))
(declare-fun temp30_54 () (_ BitVec 64))
(declare-fun temp30_55 () (_ BitVec 64))
(declare-fun temp30_56 () (_ BitVec 64))
(declare-fun temp30_57 () (_ BitVec 64))
(declare-fun temp30_58 () (_ BitVec 64))
(declare-fun temp30_59 () (_ BitVec 64))
(declare-fun temp30_60 () (_ BitVec 64))
(declare-fun temp30_61 () (_ BitVec 64))
(declare-fun temp30_62 () (_ BitVec 64))
(declare-fun temp30_63 () (_ BitVec 64))
(declare-fun temp30_64 () (_ BitVec 64))
(declare-fun temp30_65 () (_ BitVec 64))
(declare-fun temp30_66 () (_ BitVec 64))
(declare-fun temp30_67 () (_ BitVec 64))
(declare-fun temp30_68 () (_ BitVec 64))
(declare-fun temp30_69 () (_ BitVec 64))
(declare-fun temp30_70 () (_ BitVec 64))
(declare-fun temp30_71 () (_ BitVec 64))
(declare-fun temp30_72 () (_ BitVec 64))
(declare-fun temp30_73 () (_ BitVec 64))
(declare-fun temp30_74 () (_ BitVec 64))
(declare-fun temp30_75 () (_ BitVec 64))
(declare-fun temp30_76 () (_ BitVec 64))
(declare-fun temp30_77 () (_ BitVec 64))
(declare-fun temp30_78 () (_ BitVec 64))
(declare-fun temp30_79 () (_ BitVec 64))
(declare-fun temp30_80 () (_ BitVec 64))
(declare-fun temp30_81 () (_ BitVec 64))
(declare-fun temp30_82 () (_ BitVec 64))
(declare-fun temp30_83 () (_ BitVec 64))
(declare-fun temp30_84 () (_ BitVec 64))
(declare-fun temp30_85 () (_ BitVec 64))
(declare-fun temp30_86 () (_ BitVec 64))
(declare-fun temp30_87 () (_ BitVec 64))
(declare-fun temp30_88 () (_ BitVec 64))
(declare-fun temp30_89 () (_ BitVec 64))
(declare-fun temp30_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp30_91 () (_ BitVec 64))
(declare-fun temp30_92 () (_ BitVec 64))
(declare-fun temp30_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_94 () (_ BitVec 64))
(declare-fun temp30_95 () (_ BitVec 64))
(declare-fun temp30_96 () (_ BitVec 64))
(declare-fun temp30_97 () (_ BitVec 64))
(declare-fun temp30_98 () (_ BitVec 64))
(declare-fun temp30_99 () (_ BitVec 64))
(declare-fun temp30_100 () (_ BitVec 64))
(declare-fun temp30_101 () (_ BitVec 64))
(declare-fun temp30_102 () (_ BitVec 64))
(declare-fun temp30_103 () (_ BitVec 64))
(declare-fun temp30_104 () (_ BitVec 64))
(declare-fun temp30_105 () (_ BitVec 64))
(declare-fun temp30_106 () (_ BitVec 64))
(declare-fun temp30_107 () (_ BitVec 64))
(declare-fun temp30_108 () (_ BitVec 64))
(declare-fun temp30_109 () (_ BitVec 64))
(declare-fun temp30_110 () (_ BitVec 64))
(declare-fun temp30_111 () (_ BitVec 64))
(declare-fun temp30_112 () (_ BitVec 64))
(declare-fun temp30_113 () (_ BitVec 64))
(declare-fun temp30_114 () (_ BitVec 64))
(declare-fun temp30_115 () (_ BitVec 64))
(declare-fun temp30_116 () (_ BitVec 64))
(declare-fun temp30_117 () (_ BitVec 64))
(declare-fun temp30_118 () (_ BitVec 64))
(declare-fun temp30_119 () (_ BitVec 64))
(declare-fun temp30_120 () (_ BitVec 64))
(declare-fun temp30_121 () (_ BitVec 64))
(declare-fun temp30_122 () (_ BitVec 64))
(declare-fun temp30_123 () (_ BitVec 64))
(declare-fun temp30_124 () (_ BitVec 64))
(declare-fun temp30_125 () (_ BitVec 64))
(declare-fun temp30_126 () (_ BitVec 64))
(declare-fun temp30_127 () (_ BitVec 64))
(declare-fun temp30_128 () (_ BitVec 64))
(declare-fun temp30_129 () (_ BitVec 64))
(declare-fun temp30_130 () (_ BitVec 64))
(declare-fun temp30_131 () (_ BitVec 64))
(declare-fun temp30_132 () (_ BitVec 64))
(declare-fun temp30_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp30_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp30_135 () (_ BitVec 64))
(declare-fun temp30_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp30_137 () (_ BitVec 64))
(declare-fun temp30_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_139 () (_ BitVec 64))
(declare-fun temp30_140 () (_ BitVec 64))
(declare-fun temp30_141 () (_ BitVec 64))
(declare-fun temp30_142 () (_ BitVec 64))
(declare-fun temp30_143 () (_ BitVec 64))
(declare-fun temp30_144 () (_ BitVec 64))
(declare-fun temp30_145 () (_ BitVec 64))
(declare-fun temp30_146 () (_ BitVec 64))
(declare-fun temp30_147 () (_ BitVec 64))
(declare-fun temp30_148 () (_ BitVec 64))
(declare-fun temp30_149 () (_ BitVec 64))
(declare-fun temp30_150 () (_ BitVec 64))
(declare-fun temp30_151 () (_ BitVec 64))
(declare-fun temp30_152 () (_ BitVec 64))
(declare-fun temp30_153 () (_ BitVec 64))
(declare-fun temp30_154 () (_ BitVec 64))
(declare-fun temp30_156 () (_ BitVec 64))
(declare-fun temp30_157 () (_ BitVec 64))
(declare-fun temp30_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp30_158 () (_ BitVec 64))
(declare-fun temp30_159 () (_ BitVec 64))
(declare-fun temp30_161 () (_ BitVec 64))
(declare-fun temp30_162 () (_ BitVec 64))
(declare-fun temp30_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp30_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp30_164 () (_ BitVec 64))
(declare-fun temp30_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp30_166 () (_ BitVec 64))
(declare-fun temp30_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp30_168 () (_ BitVec 64))
(declare-fun temp30_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_170 () (_ BitVec 64))
(declare-fun temp30_171 () (_ BitVec 64))
(declare-fun temp30_172 () (_ BitVec 64))
(declare-fun temp30_173 () (_ BitVec 64))
(declare-fun temp30_174 () (_ BitVec 64))
(declare-fun temp30_175 () (_ BitVec 64))
(declare-fun temp30_176 () (_ BitVec 64))
(declare-fun temp30_177 () (_ BitVec 64))
(declare-fun temp30_178 () (_ BitVec 64))
(declare-fun temp30_179 () (_ BitVec 64))
(declare-fun temp30_180 () (_ BitVec 64))
(declare-fun temp30_181 () (_ BitVec 64))
(declare-fun temp30_182 () (_ BitVec 64))
(declare-fun temp30_183 () (_ BitVec 64))
(declare-fun temp30_184 () (_ BitVec 64))
(declare-fun temp30_185 () (_ BitVec 64))
(declare-fun temp30_186 () (_ BitVec 64))
(declare-fun temp30_187 () (_ BitVec 64))
(declare-fun temp30_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp30_189 () (_ BitVec 64))
(declare-fun temp30_191 () (_ BitVec 64))
(declare-fun temp30_192 () (_ BitVec 64))
(declare-fun temp30_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp30_193 () (_ BitVec 64))
(declare-fun temp30_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp30_195 () (_ BitVec 64))
(declare-fun temp30_196 () (_ BitVec 64))
(declare-fun temp30_197 () (_ BitVec 64))
(declare-fun temp30_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_199 () (_ BitVec 64))
(declare-fun temp30_200 () (_ BitVec 64))
(declare-fun temp30_201 () (_ BitVec 64))
(declare-fun temp30_202 () (_ BitVec 64))
(declare-fun temp30_203 () (_ BitVec 64))
(declare-fun temp30_204 () (_ BitVec 64))
(declare-fun temp30_205 () (_ BitVec 64))
(declare-fun temp30_206 () (_ BitVec 64))
(declare-fun temp30_207 () (_ BitVec 64))
(declare-fun temp30_208 () (_ BitVec 64))
(declare-fun temp30_209 () (_ BitVec 64))
(declare-fun temp30_210 () (_ BitVec 64))
(declare-fun temp30_211 () (_ BitVec 64))
(declare-fun temp30_212 () (_ BitVec 64))
(declare-fun temp30_213 () (_ BitVec 64))
(declare-fun temp30_214 () (_ BitVec 64))
(declare-fun temp30_215 () (_ BitVec 64))
(declare-fun temp30_216 () (_ BitVec 64))
(declare-fun temp30_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp30_218 () (_ BitVec 64))
(declare-fun temp30_220 () (_ BitVec 64))
(declare-fun temp30_221 () (_ BitVec 64))
(declare-fun temp30_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp30_222 () (_ BitVec 64))
(declare-fun temp30_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp30_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp30_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp30_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp30_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp30_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp30_229 () (_ BitVec 64))
(declare-fun temp30_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp30_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp30_232 () (_ BitVec 64))
(declare-fun temp30_233 () (_ BitVec 64))
(declare-fun temp30_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp30_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp30_236 () (_ BitVec 64))
(declare-fun temp30_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp30_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp30_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp30_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp30_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp30_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp30_243 () (_ BitVec 64))
(assert (= temp30_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp30_1)))
(assert (= temp30_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp30_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_3 #x0000000000000000))
(assert (= var79869 temp30_3))
(assert (= temp30_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp30_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_5 #x0000000000000000))
(assert (= var79914 temp30_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp30_6 #x0000000000000000))
(assert (= temp30_7 temp30_6))
(assert (= temp30_8 (select ARGNAME_padding_NAMEEND_VAL temp30_7)))
(assert (= temp30_9 #x0000000000000001))
(assert (= temp30_10 temp30_9))
(assert (= temp30_11 (select ARGNAME_padding_NAMEEND_VAL temp30_10)))
(assert (= temp30_12 #x0000000000000002))
(assert (= temp30_13 temp30_12))
(assert (= temp30_14 (select ARGNAME_padding_NAMEEND_VAL temp30_13)))
(assert (= temp30_15 #x0000000000000003))
(assert (= temp30_16 temp30_15))
(assert (= temp30_17 (select ARGNAME_padding_NAMEEND_VAL temp30_16)))
(assert (= temp30_18 #x0000000000000004))
(assert (= temp30_19 temp30_18))
(assert (= temp30_20 (select ARGNAME_padding_NAMEEND_VAL temp30_19)))
(assert (= temp30_21 #x0000000000000005))
(assert (= temp30_22 temp30_21))
(assert (= temp30_23 (select ARGNAME_padding_NAMEEND_VAL temp30_22)))
(assert (= temp30_24 #x0000000000000000))
(assert (= temp30_25 #x0000000000000000))
(assert (= temp30_26 temp30_25))
(assert (= temp30_27 (select ARGNAME_padding_NAMEEND_VAL temp30_26)))
(assert (= temp30_28 #x0000000000000000))
(assert (= temp30_29 #x0000000000000001))
(assert (= temp30_30 temp30_29))
(assert (= temp30_31 (select ARGNAME_padding_NAMEEND_VAL temp30_30)))
(assert (= temp30_32 #x0000000000000000))
(assert (= temp30_33 #x0000000000000002))
(assert (= temp30_34 temp30_33))
(assert (= temp30_35 (select ARGNAME_padding_NAMEEND_VAL temp30_34)))
(assert (= temp30_36 #x0000000000000000))
(assert (= temp30_37 #x0000000000000003))
(assert (= temp30_38 temp30_37))
(assert (= temp30_39 (select ARGNAME_padding_NAMEEND_VAL temp30_38)))
(assert (= temp30_40 #x0000000000000000))
(assert (= temp30_41 #x0000000000000004))
(assert (= temp30_42 temp30_41))
(assert (= temp30_43 (select ARGNAME_padding_NAMEEND_VAL temp30_42)))
(assert (= temp30_44 #x0000000000000000))
(assert (= temp30_45 #x0000000000000005))
(assert (= temp30_46 temp30_45))
(assert (= temp30_47 (select ARGNAME_padding_NAMEEND_VAL temp30_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp30_27 temp30_24)
             (bvslt temp30_31 temp30_28)
             (bvslt temp30_35 temp30_32)
             (bvslt temp30_39 temp30_36)
             (bvslt temp30_43 temp30_40)
             (bvslt temp30_47 temp30_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_48 #x0000000000000000))
(assert (= var1322786 temp30_48))
(assert (= temp30_49 #x0000000000000000))
(assert (= temp30_50 temp30_49))
(assert (= temp30_51 (select ARGNAME_output_padding_NAMEEND_VAL temp30_50)))
(assert (= temp30_52 #x0000000000000001))
(assert (= temp30_53 temp30_52))
(assert (= temp30_54 (select ARGNAME_output_padding_NAMEEND_VAL temp30_53)))
(assert (= temp30_55 #x0000000000000002))
(assert (= temp30_56 temp30_55))
(assert (= temp30_57 (select ARGNAME_output_padding_NAMEEND_VAL temp30_56)))
(assert (= temp30_58 #x0000000000000003))
(assert (= temp30_59 temp30_58))
(assert (= temp30_60 (select ARGNAME_output_padding_NAMEEND_VAL temp30_59)))
(assert (= temp30_61 #x0000000000000004))
(assert (= temp30_62 temp30_61))
(assert (= temp30_63 (select ARGNAME_output_padding_NAMEEND_VAL temp30_62)))
(assert (= temp30_64 #x0000000000000005))
(assert (= temp30_65 temp30_64))
(assert (= temp30_66 (select ARGNAME_output_padding_NAMEEND_VAL temp30_65)))
(assert (= temp30_67 #x0000000000000000))
(assert (= temp30_68 #x0000000000000000))
(assert (= temp30_69 temp30_68))
(assert (= temp30_70 (select ARGNAME_output_padding_NAMEEND_VAL temp30_69)))
(assert (= temp30_71 #x0000000000000000))
(assert (= temp30_72 #x0000000000000001))
(assert (= temp30_73 temp30_72))
(assert (= temp30_74 (select ARGNAME_output_padding_NAMEEND_VAL temp30_73)))
(assert (= temp30_75 #x0000000000000000))
(assert (= temp30_76 #x0000000000000002))
(assert (= temp30_77 temp30_76))
(assert (= temp30_78 (select ARGNAME_output_padding_NAMEEND_VAL temp30_77)))
(assert (= temp30_79 #x0000000000000000))
(assert (= temp30_80 #x0000000000000003))
(assert (= temp30_81 temp30_80))
(assert (= temp30_82 (select ARGNAME_output_padding_NAMEEND_VAL temp30_81)))
(assert (= temp30_83 #x0000000000000000))
(assert (= temp30_84 #x0000000000000004))
(assert (= temp30_85 temp30_84))
(assert (= temp30_86 (select ARGNAME_output_padding_NAMEEND_VAL temp30_85)))
(assert (= temp30_87 #x0000000000000000))
(assert (= temp30_88 #x0000000000000005))
(assert (= temp30_89 temp30_88))
(assert (= temp30_90 (select ARGNAME_output_padding_NAMEEND_VAL temp30_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp30_70 temp30_67)
             (bvslt temp30_74 temp30_71)
             (bvslt temp30_78 temp30_75)
             (bvslt temp30_82 temp30_79)
             (bvslt temp30_86 temp30_83)
             (bvslt temp30_90 temp30_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_91 #x0000000000000000))
(assert (= var1322797 temp30_91))
(assert (= temp30_92 #x0000000000000000))
(assert (= temp30_93 temp30_92))
(assert (= temp30_94 (select ARGNAME_stride_NAMEEND_VAL temp30_93)))
(assert (= temp30_95 #x0000000000000001))
(assert (= temp30_96 temp30_95))
(assert (= temp30_97 (select ARGNAME_stride_NAMEEND_VAL temp30_96)))
(assert (= temp30_98 #x0000000000000002))
(assert (= temp30_99 temp30_98))
(assert (= temp30_100 (select ARGNAME_stride_NAMEEND_VAL temp30_99)))
(assert (= temp30_101 #x0000000000000003))
(assert (= temp30_102 temp30_101))
(assert (= temp30_103 (select ARGNAME_stride_NAMEEND_VAL temp30_102)))
(assert (= temp30_104 #x0000000000000004))
(assert (= temp30_105 temp30_104))
(assert (= temp30_106 (select ARGNAME_stride_NAMEEND_VAL temp30_105)))
(assert (= temp30_107 #x0000000000000005))
(assert (= temp30_108 temp30_107))
(assert (= temp30_109 (select ARGNAME_stride_NAMEEND_VAL temp30_108)))
(assert (= temp30_110 #x0000000000000000))
(assert (= temp30_111 #x0000000000000000))
(assert (= temp30_112 temp30_111))
(assert (= temp30_113 (select ARGNAME_stride_NAMEEND_VAL temp30_112)))
(assert (= temp30_114 #x0000000000000000))
(assert (= temp30_115 #x0000000000000001))
(assert (= temp30_116 temp30_115))
(assert (= temp30_117 (select ARGNAME_stride_NAMEEND_VAL temp30_116)))
(assert (= temp30_118 #x0000000000000000))
(assert (= temp30_119 #x0000000000000002))
(assert (= temp30_120 temp30_119))
(assert (= temp30_121 (select ARGNAME_stride_NAMEEND_VAL temp30_120)))
(assert (= temp30_122 #x0000000000000000))
(assert (= temp30_123 #x0000000000000003))
(assert (= temp30_124 temp30_123))
(assert (= temp30_125 (select ARGNAME_stride_NAMEEND_VAL temp30_124)))
(assert (= temp30_126 #x0000000000000000))
(assert (= temp30_127 #x0000000000000004))
(assert (= temp30_128 temp30_127))
(assert (= temp30_129 (select ARGNAME_stride_NAMEEND_VAL temp30_128)))
(assert (= temp30_130 #x0000000000000000))
(assert (= temp30_131 #x0000000000000005))
(assert (= temp30_132 temp30_131))
(assert (= temp30_133 (select ARGNAME_stride_NAMEEND_VAL temp30_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp30_113 temp30_110)
             (bvsle temp30_117 temp30_114)
             (bvsle temp30_121 temp30_118)
             (bvsle temp30_125 temp30_122)
             (bvsle temp30_129 temp30_126)
             (bvsle temp30_133 temp30_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_134 #x0000000000000000))
(assert (= var1322807 temp30_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_135 #x0000000000000001))
(assert (= var1322819 temp30_135))
(assert (= temp30_136 #x0000000000000000))
(assert (= var1310898 temp30_136))
(assert (= temp30_137 #x0000000000000000))
(assert (= temp30_138 temp30_137))
(assert (= temp30_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_138)))
(assert (= temp30_140 #x0000000000000001))
(assert (= temp30_141 temp30_140))
(assert (= temp30_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_141)))
(assert (= temp30_143 #x0000000000000002))
(assert (= temp30_144 temp30_143))
(assert (= temp30_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_144)))
(assert (= temp30_146 #x0000000000000003))
(assert (= temp30_147 temp30_146))
(assert (= temp30_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_147)))
(assert (= temp30_149 #x0000000000000004))
(assert (= temp30_150 temp30_149))
(assert (= temp30_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_150)))
(assert (= temp30_152 #x0000000000000005))
(assert (= temp30_153 temp30_152))
(assert (= temp30_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_153)))
(assert (= temp30_156 var1310898))
(assert (= temp30_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_156)))
(assert (= temp30_155 temp30_157))
(assert (= var1322852
   (ite (bvslt temp30_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_158 #x0000000000000000))
(assert (= var1322852 temp30_158))
(assert (= temp30_159 #x0000000000000000))
(assert (= var1310898 temp30_159))
(assert (= temp30_161 var1310898))
(assert (= temp30_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_161)))
(assert (= temp30_160 temp30_162))
(assert (= var1322874 (bvsmod temp30_160 ARGNAME_groups_NAMEEND)))
(assert (= temp30_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp30_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp30_164 #x0000000000000001))
(assert (= var1322875 temp30_164))
(assert (= temp30_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp30_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_166 #x0000000000000001))
(assert (= var1322895 temp30_166))
(assert (= temp30_167 #x0000000000000001))
(assert (= var1311786 temp30_167))
(assert (= temp30_168 #x0000000000000000))
(assert (= temp30_169 temp30_168))
(assert (= temp30_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_169)))
(assert (= temp30_171 #x0000000000000001))
(assert (= temp30_172 temp30_171))
(assert (= temp30_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_172)))
(assert (= temp30_174 #x0000000000000002))
(assert (= temp30_175 temp30_174))
(assert (= temp30_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_175)))
(assert (= temp30_177 #x0000000000000003))
(assert (= temp30_178 temp30_177))
(assert (= temp30_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_178)))
(assert (= temp30_180 #x0000000000000004))
(assert (= temp30_181 temp30_180))
(assert (= temp30_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_181)))
(assert (= temp30_183 #x0000000000000005))
(assert (= temp30_184 temp30_183))
(assert (= temp30_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_184)))
(assert (= temp30_186 #x0000000000000000))
(assert (= temp30_187
   (ite (bvslt var1311786 temp30_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp30_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_187)))
(assert (= var1322903 temp30_188))
(assert (bvslt (ite (bvslt var1311786 temp30_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp30_189 #x0000000000000001))
(assert (= var1311786 temp30_189))
(assert (= temp30_191 var1311786))
(assert (= temp30_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_191)))
(assert (= temp30_190 temp30_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp30_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp30_193 #x0000000000000001))
(assert (= var1322908 temp30_193))
(assert (= temp30_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp30_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_195 #x0000000000000001))
(assert (= var1322975 temp30_195))
(assert (= temp30_196 #x0000000000000000))
(assert (= var1310898 temp30_196))
(assert (= temp30_197 #x0000000000000000))
(assert (= temp30_198 temp30_197))
(assert (= temp30_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp30_198)))
(assert (= temp30_200 #x0000000000000001))
(assert (= temp30_201 temp30_200))
(assert (= temp30_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp30_201)))
(assert (= temp30_203 #x0000000000000002))
(assert (= temp30_204 temp30_203))
(assert (= temp30_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp30_204)))
(assert (= temp30_206 #x0000000000000003))
(assert (= temp30_207 temp30_206))
(assert (= temp30_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp30_207)))
(assert (= temp30_209 #x0000000000000004))
(assert (= temp30_210 temp30_209))
(assert (= temp30_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp30_210)))
(assert (= temp30_212 #x0000000000000005))
(assert (= temp30_213 temp30_212))
(assert (= temp30_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp30_213)))
(assert (= temp30_215 #x0000000000000000))
(assert (= temp30_216
   (ite (bvslt var1310898 temp30_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp30_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp30_216)))
(assert (= var1322977 temp30_217))
(assert (bvslt (ite (bvslt var1310898 temp30_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp30_218 #x0000000000000000))
(assert (= var1310898 temp30_218))
(assert (= temp30_220 var1310898))
(assert (= temp30_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_220)))
(assert (= temp30_219 temp30_221))
(assert (= var1322980
   (ite (= var1322977 temp30_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp30_222 #x0000000000000001))
(assert (= var1322980 temp30_222))
(assert (= temp30_223 #x0000000000000002))
(assert (= var1848169 temp30_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp30_225 #x0000000000000001))
(assert (= var1323065 temp30_225))
(assert (= temp30_226 #x0000000000000001))
(assert (= var3486735 temp30_226))
(assert (= temp30_227 #x0000000000000001))
(assert (= var3814415 temp30_227))
(assert (= temp30_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp30_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_229 #x0000000000000001))
(assert (= var79986 temp30_229))
(assert (= temp30_230 #x0000000000000001))
(assert (= var80116 temp30_230))
(assert (= var4796905 var80116))
(assert (= temp30_231 #x0000000000000000))
(assert (= var4784306 temp30_231))
(assert (= temp30_232 #x0000000000000000))
(assert (= temp30_233
   (ite (bvslt var4784306 temp30_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp30_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_233)))
(assert (= var4796924 temp30_234))
(assert (bvslt (ite (bvslt var4784306 temp30_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp30_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp30_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp30_236 #x0000000000000001))
(assert (= var4796925 temp30_236))
(assert (= temp30_237 #x0000000000000000))
(assert (= var4996927 temp30_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp30_238 #x0000000000000002))
(assert (= var5125763 temp30_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_239 #x0000000000000000))
(assert (= var5191324 temp30_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp30_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp30_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp30_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp30_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp30_243 #x0000000000000001))
(assert (= var79986 temp30_243))
(model-add temp30_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp30_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp30_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






