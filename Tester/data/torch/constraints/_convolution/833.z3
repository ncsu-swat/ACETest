(declare-fun temp1108_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1108_2 () (_ BitVec 64))
(declare-fun temp1108_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1108_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1108_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1108_6 () (_ BitVec 64))
(declare-fun temp1108_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1108_8 () (_ BitVec 64))
(declare-fun temp1108_9 () (_ BitVec 64))
(declare-fun temp1108_10 () (_ BitVec 64))
(declare-fun temp1108_11 () (_ BitVec 64))
(declare-fun temp1108_12 () (_ BitVec 64))
(declare-fun temp1108_13 () (_ BitVec 64))
(declare-fun temp1108_14 () (_ BitVec 64))
(declare-fun temp1108_15 () (_ BitVec 64))
(declare-fun temp1108_16 () (_ BitVec 64))
(declare-fun temp1108_17 () (_ BitVec 64))
(declare-fun temp1108_18 () (_ BitVec 64))
(declare-fun temp1108_19 () (_ BitVec 64))
(declare-fun temp1108_20 () (_ BitVec 64))
(declare-fun temp1108_21 () (_ BitVec 64))
(declare-fun temp1108_22 () (_ BitVec 64))
(declare-fun temp1108_23 () (_ BitVec 64))
(declare-fun temp1108_24 () (_ BitVec 64))
(declare-fun temp1108_25 () (_ BitVec 64))
(declare-fun temp1108_26 () (_ BitVec 64))
(declare-fun temp1108_27 () (_ BitVec 64))
(declare-fun temp1108_28 () (_ BitVec 64))
(declare-fun temp1108_29 () (_ BitVec 64))
(declare-fun temp1108_30 () (_ BitVec 64))
(declare-fun temp1108_31 () (_ BitVec 64))
(declare-fun temp1108_32 () (_ BitVec 64))
(declare-fun temp1108_33 () (_ BitVec 64))
(declare-fun temp1108_34 () (_ BitVec 64))
(declare-fun temp1108_35 () (_ BitVec 64))
(declare-fun temp1108_36 () (_ BitVec 64))
(declare-fun temp1108_37 () (_ BitVec 64))
(declare-fun temp1108_38 () (_ BitVec 64))
(declare-fun temp1108_39 () (_ BitVec 64))
(declare-fun temp1108_40 () (_ BitVec 64))
(declare-fun temp1108_41 () (_ BitVec 64))
(declare-fun temp1108_42 () (_ BitVec 64))
(declare-fun temp1108_43 () (_ BitVec 64))
(declare-fun temp1108_44 () (_ BitVec 64))
(declare-fun temp1108_45 () (_ BitVec 64))
(declare-fun temp1108_46 () (_ BitVec 64))
(declare-fun temp1108_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1108_48 () (_ BitVec 64))
(declare-fun temp1108_49 () (_ BitVec 64))
(declare-fun temp1108_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1108_51 () (_ BitVec 64))
(declare-fun temp1108_52 () (_ BitVec 64))
(declare-fun temp1108_53 () (_ BitVec 64))
(declare-fun temp1108_54 () (_ BitVec 64))
(declare-fun temp1108_55 () (_ BitVec 64))
(declare-fun temp1108_56 () (_ BitVec 64))
(declare-fun temp1108_57 () (_ BitVec 64))
(declare-fun temp1108_58 () (_ BitVec 64))
(declare-fun temp1108_59 () (_ BitVec 64))
(declare-fun temp1108_60 () (_ BitVec 64))
(declare-fun temp1108_61 () (_ BitVec 64))
(declare-fun temp1108_62 () (_ BitVec 64))
(declare-fun temp1108_63 () (_ BitVec 64))
(declare-fun temp1108_64 () (_ BitVec 64))
(declare-fun temp1108_65 () (_ BitVec 64))
(declare-fun temp1108_66 () (_ BitVec 64))
(declare-fun temp1108_67 () (_ BitVec 64))
(declare-fun temp1108_68 () (_ BitVec 64))
(declare-fun temp1108_69 () (_ BitVec 64))
(declare-fun temp1108_70 () (_ BitVec 64))
(declare-fun temp1108_71 () (_ BitVec 64))
(declare-fun temp1108_72 () (_ BitVec 64))
(declare-fun temp1108_73 () (_ BitVec 64))
(declare-fun temp1108_74 () (_ BitVec 64))
(declare-fun temp1108_75 () (_ BitVec 64))
(declare-fun temp1108_76 () (_ BitVec 64))
(declare-fun temp1108_77 () (_ BitVec 64))
(declare-fun temp1108_78 () (_ BitVec 64))
(declare-fun temp1108_79 () (_ BitVec 64))
(declare-fun temp1108_80 () (_ BitVec 64))
(declare-fun temp1108_81 () (_ BitVec 64))
(declare-fun temp1108_82 () (_ BitVec 64))
(declare-fun temp1108_83 () (_ BitVec 64))
(declare-fun temp1108_84 () (_ BitVec 64))
(declare-fun temp1108_85 () (_ BitVec 64))
(declare-fun temp1108_86 () (_ BitVec 64))
(declare-fun temp1108_87 () (_ BitVec 64))
(declare-fun temp1108_88 () (_ BitVec 64))
(declare-fun temp1108_89 () (_ BitVec 64))
(declare-fun temp1108_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1108_91 () (_ BitVec 64))
(declare-fun temp1108_92 () (_ BitVec 64))
(declare-fun temp1108_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1108_94 () (_ BitVec 64))
(declare-fun temp1108_95 () (_ BitVec 64))
(declare-fun temp1108_96 () (_ BitVec 64))
(declare-fun temp1108_97 () (_ BitVec 64))
(declare-fun temp1108_98 () (_ BitVec 64))
(declare-fun temp1108_99 () (_ BitVec 64))
(declare-fun temp1108_100 () (_ BitVec 64))
(declare-fun temp1108_101 () (_ BitVec 64))
(declare-fun temp1108_102 () (_ BitVec 64))
(declare-fun temp1108_103 () (_ BitVec 64))
(declare-fun temp1108_104 () (_ BitVec 64))
(declare-fun temp1108_105 () (_ BitVec 64))
(declare-fun temp1108_106 () (_ BitVec 64))
(declare-fun temp1108_107 () (_ BitVec 64))
(declare-fun temp1108_108 () (_ BitVec 64))
(declare-fun temp1108_109 () (_ BitVec 64))
(declare-fun temp1108_110 () (_ BitVec 64))
(declare-fun temp1108_111 () (_ BitVec 64))
(declare-fun temp1108_112 () (_ BitVec 64))
(declare-fun temp1108_113 () (_ BitVec 64))
(declare-fun temp1108_114 () (_ BitVec 64))
(declare-fun temp1108_115 () (_ BitVec 64))
(declare-fun temp1108_116 () (_ BitVec 64))
(declare-fun temp1108_117 () (_ BitVec 64))
(declare-fun temp1108_118 () (_ BitVec 64))
(declare-fun temp1108_119 () (_ BitVec 64))
(declare-fun temp1108_120 () (_ BitVec 64))
(declare-fun temp1108_121 () (_ BitVec 64))
(declare-fun temp1108_122 () (_ BitVec 64))
(declare-fun temp1108_123 () (_ BitVec 64))
(declare-fun temp1108_124 () (_ BitVec 64))
(declare-fun temp1108_125 () (_ BitVec 64))
(declare-fun temp1108_126 () (_ BitVec 64))
(declare-fun temp1108_127 () (_ BitVec 64))
(declare-fun temp1108_128 () (_ BitVec 64))
(declare-fun temp1108_129 () (_ BitVec 64))
(declare-fun temp1108_130 () (_ BitVec 64))
(declare-fun temp1108_131 () (_ BitVec 64))
(declare-fun temp1108_132 () (_ BitVec 64))
(declare-fun temp1108_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1108_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1108_135 () (_ BitVec 64))
(declare-fun temp1108_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1108_137 () (_ BitVec 64))
(declare-fun temp1108_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1108_139 () (_ BitVec 64))
(declare-fun temp1108_140 () (_ BitVec 64))
(declare-fun temp1108_141 () (_ BitVec 64))
(declare-fun temp1108_142 () (_ BitVec 64))
(declare-fun temp1108_143 () (_ BitVec 64))
(declare-fun temp1108_144 () (_ BitVec 64))
(declare-fun temp1108_145 () (_ BitVec 64))
(declare-fun temp1108_146 () (_ BitVec 64))
(declare-fun temp1108_147 () (_ BitVec 64))
(declare-fun temp1108_148 () (_ BitVec 64))
(declare-fun temp1108_149 () (_ BitVec 64))
(declare-fun temp1108_150 () (_ BitVec 64))
(declare-fun temp1108_151 () (_ BitVec 64))
(declare-fun temp1108_152 () (_ BitVec 64))
(declare-fun temp1108_153 () (_ BitVec 64))
(declare-fun temp1108_154 () (_ BitVec 64))
(declare-fun temp1108_156 () (_ BitVec 64))
(declare-fun temp1108_157 () (_ BitVec 64))
(declare-fun temp1108_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1108_158 () (_ BitVec 64))
(declare-fun temp1108_159 () (_ BitVec 64))
(declare-fun temp1108_161 () (_ BitVec 64))
(declare-fun temp1108_162 () (_ BitVec 64))
(declare-fun temp1108_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1108_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1108_164 () (_ BitVec 64))
(declare-fun temp1108_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1108_166 () (_ BitVec 64))
(declare-fun temp1108_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1108_168 () (_ BitVec 64))
(declare-fun temp1108_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1108_170 () (_ BitVec 64))
(declare-fun temp1108_171 () (_ BitVec 64))
(declare-fun temp1108_172 () (_ BitVec 64))
(declare-fun temp1108_173 () (_ BitVec 64))
(declare-fun temp1108_174 () (_ BitVec 64))
(declare-fun temp1108_175 () (_ BitVec 64))
(declare-fun temp1108_176 () (_ BitVec 64))
(declare-fun temp1108_177 () (_ BitVec 64))
(declare-fun temp1108_178 () (_ BitVec 64))
(declare-fun temp1108_179 () (_ BitVec 64))
(declare-fun temp1108_180 () (_ BitVec 64))
(declare-fun temp1108_181 () (_ BitVec 64))
(declare-fun temp1108_182 () (_ BitVec 64))
(declare-fun temp1108_183 () (_ BitVec 64))
(declare-fun temp1108_184 () (_ BitVec 64))
(declare-fun temp1108_185 () (_ BitVec 64))
(declare-fun temp1108_186 () (_ BitVec 64))
(declare-fun temp1108_187 () (_ BitVec 64))
(declare-fun temp1108_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1108_189 () (_ BitVec 64))
(declare-fun temp1108_191 () (_ BitVec 64))
(declare-fun temp1108_192 () (_ BitVec 64))
(declare-fun temp1108_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1108_193 () (_ BitVec 64))
(declare-fun temp1108_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1108_195 () (_ BitVec 64))
(declare-fun temp1108_196 () (_ BitVec 64))
(declare-fun temp1108_197 () (_ BitVec 64))
(declare-fun temp1108_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1108_199 () (_ BitVec 64))
(declare-fun temp1108_200 () (_ BitVec 64))
(declare-fun temp1108_201 () (_ BitVec 64))
(declare-fun temp1108_202 () (_ BitVec 64))
(declare-fun temp1108_203 () (_ BitVec 64))
(declare-fun temp1108_204 () (_ BitVec 64))
(declare-fun temp1108_205 () (_ BitVec 64))
(declare-fun temp1108_206 () (_ BitVec 64))
(declare-fun temp1108_207 () (_ BitVec 64))
(declare-fun temp1108_208 () (_ BitVec 64))
(declare-fun temp1108_209 () (_ BitVec 64))
(declare-fun temp1108_210 () (_ BitVec 64))
(declare-fun temp1108_211 () (_ BitVec 64))
(declare-fun temp1108_212 () (_ BitVec 64))
(declare-fun temp1108_213 () (_ BitVec 64))
(declare-fun temp1108_214 () (_ BitVec 64))
(declare-fun temp1108_215 () (_ BitVec 64))
(declare-fun temp1108_216 () (_ BitVec 64))
(declare-fun temp1108_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1108_218 () (_ BitVec 64))
(declare-fun temp1108_220 () (_ BitVec 64))
(declare-fun temp1108_221 () (_ BitVec 64))
(declare-fun temp1108_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1108_222 () (_ BitVec 64))
(declare-fun temp1108_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1108_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1108_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1108_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1108_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1108_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1108_229 () (_ BitVec 64))
(declare-fun temp1108_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1108_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1108_232 () (_ BitVec 64))
(declare-fun temp1108_233 () (_ BitVec 64))
(declare-fun temp1108_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1108_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1108_236 () (_ BitVec 64))
(declare-fun temp1108_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1108_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1108_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1108_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1108_241 () (_ BitVec 64))
(declare-fun temp1108_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp1108_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp1108_244 () (_ BitVec 64))
(declare-fun temp1108_245 () (_ BitVec 64))
(declare-fun var7680788 () (_ BitVec 64))
(declare-fun var7680755 () (_ BitVec 64))
(declare-fun var7549319 () (_ BitVec 64))
(declare-fun var7549315 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1108_246 () (_ BitVec 64))
(assert (= temp1108_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1108_1)))
(assert (= temp1108_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1108_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_3 #x0000000000000000))
(assert (= var79869 temp1108_3))
(assert (= temp1108_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1108_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_5 #x0000000000000000))
(assert (= var79914 temp1108_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1108_6 #x0000000000000000))
(assert (= temp1108_7 temp1108_6))
(assert (= temp1108_8 (select ARGNAME_padding_NAMEEND_VAL temp1108_7)))
(assert (= temp1108_9 #x0000000000000001))
(assert (= temp1108_10 temp1108_9))
(assert (= temp1108_11 (select ARGNAME_padding_NAMEEND_VAL temp1108_10)))
(assert (= temp1108_12 #x0000000000000002))
(assert (= temp1108_13 temp1108_12))
(assert (= temp1108_14 (select ARGNAME_padding_NAMEEND_VAL temp1108_13)))
(assert (= temp1108_15 #x0000000000000003))
(assert (= temp1108_16 temp1108_15))
(assert (= temp1108_17 (select ARGNAME_padding_NAMEEND_VAL temp1108_16)))
(assert (= temp1108_18 #x0000000000000004))
(assert (= temp1108_19 temp1108_18))
(assert (= temp1108_20 (select ARGNAME_padding_NAMEEND_VAL temp1108_19)))
(assert (= temp1108_21 #x0000000000000005))
(assert (= temp1108_22 temp1108_21))
(assert (= temp1108_23 (select ARGNAME_padding_NAMEEND_VAL temp1108_22)))
(assert (= temp1108_24 #x0000000000000000))
(assert (= temp1108_25 #x0000000000000000))
(assert (= temp1108_26 temp1108_25))
(assert (= temp1108_27 (select ARGNAME_padding_NAMEEND_VAL temp1108_26)))
(assert (= temp1108_28 #x0000000000000000))
(assert (= temp1108_29 #x0000000000000001))
(assert (= temp1108_30 temp1108_29))
(assert (= temp1108_31 (select ARGNAME_padding_NAMEEND_VAL temp1108_30)))
(assert (= temp1108_32 #x0000000000000000))
(assert (= temp1108_33 #x0000000000000002))
(assert (= temp1108_34 temp1108_33))
(assert (= temp1108_35 (select ARGNAME_padding_NAMEEND_VAL temp1108_34)))
(assert (= temp1108_36 #x0000000000000000))
(assert (= temp1108_37 #x0000000000000003))
(assert (= temp1108_38 temp1108_37))
(assert (= temp1108_39 (select ARGNAME_padding_NAMEEND_VAL temp1108_38)))
(assert (= temp1108_40 #x0000000000000000))
(assert (= temp1108_41 #x0000000000000004))
(assert (= temp1108_42 temp1108_41))
(assert (= temp1108_43 (select ARGNAME_padding_NAMEEND_VAL temp1108_42)))
(assert (= temp1108_44 #x0000000000000000))
(assert (= temp1108_45 #x0000000000000005))
(assert (= temp1108_46 temp1108_45))
(assert (= temp1108_47 (select ARGNAME_padding_NAMEEND_VAL temp1108_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1108_27 temp1108_24)
             (bvslt temp1108_31 temp1108_28)
             (bvslt temp1108_35 temp1108_32)
             (bvslt temp1108_39 temp1108_36)
             (bvslt temp1108_43 temp1108_40)
             (bvslt temp1108_47 temp1108_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_48 #x0000000000000000))
(assert (= var1322786 temp1108_48))
(assert (= temp1108_49 #x0000000000000000))
(assert (= temp1108_50 temp1108_49))
(assert (= temp1108_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_50)))
(assert (= temp1108_52 #x0000000000000001))
(assert (= temp1108_53 temp1108_52))
(assert (= temp1108_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_53)))
(assert (= temp1108_55 #x0000000000000002))
(assert (= temp1108_56 temp1108_55))
(assert (= temp1108_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_56)))
(assert (= temp1108_58 #x0000000000000003))
(assert (= temp1108_59 temp1108_58))
(assert (= temp1108_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_59)))
(assert (= temp1108_61 #x0000000000000004))
(assert (= temp1108_62 temp1108_61))
(assert (= temp1108_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_62)))
(assert (= temp1108_64 #x0000000000000005))
(assert (= temp1108_65 temp1108_64))
(assert (= temp1108_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_65)))
(assert (= temp1108_67 #x0000000000000000))
(assert (= temp1108_68 #x0000000000000000))
(assert (= temp1108_69 temp1108_68))
(assert (= temp1108_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_69)))
(assert (= temp1108_71 #x0000000000000000))
(assert (= temp1108_72 #x0000000000000001))
(assert (= temp1108_73 temp1108_72))
(assert (= temp1108_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_73)))
(assert (= temp1108_75 #x0000000000000000))
(assert (= temp1108_76 #x0000000000000002))
(assert (= temp1108_77 temp1108_76))
(assert (= temp1108_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_77)))
(assert (= temp1108_79 #x0000000000000000))
(assert (= temp1108_80 #x0000000000000003))
(assert (= temp1108_81 temp1108_80))
(assert (= temp1108_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_81)))
(assert (= temp1108_83 #x0000000000000000))
(assert (= temp1108_84 #x0000000000000004))
(assert (= temp1108_85 temp1108_84))
(assert (= temp1108_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_85)))
(assert (= temp1108_87 #x0000000000000000))
(assert (= temp1108_88 #x0000000000000005))
(assert (= temp1108_89 temp1108_88))
(assert (= temp1108_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1108_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1108_70 temp1108_67)
             (bvslt temp1108_74 temp1108_71)
             (bvslt temp1108_78 temp1108_75)
             (bvslt temp1108_82 temp1108_79)
             (bvslt temp1108_86 temp1108_83)
             (bvslt temp1108_90 temp1108_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_91 #x0000000000000000))
(assert (= var1322797 temp1108_91))
(assert (= temp1108_92 #x0000000000000000))
(assert (= temp1108_93 temp1108_92))
(assert (= temp1108_94 (select ARGNAME_stride_NAMEEND_VAL temp1108_93)))
(assert (= temp1108_95 #x0000000000000001))
(assert (= temp1108_96 temp1108_95))
(assert (= temp1108_97 (select ARGNAME_stride_NAMEEND_VAL temp1108_96)))
(assert (= temp1108_98 #x0000000000000002))
(assert (= temp1108_99 temp1108_98))
(assert (= temp1108_100 (select ARGNAME_stride_NAMEEND_VAL temp1108_99)))
(assert (= temp1108_101 #x0000000000000003))
(assert (= temp1108_102 temp1108_101))
(assert (= temp1108_103 (select ARGNAME_stride_NAMEEND_VAL temp1108_102)))
(assert (= temp1108_104 #x0000000000000004))
(assert (= temp1108_105 temp1108_104))
(assert (= temp1108_106 (select ARGNAME_stride_NAMEEND_VAL temp1108_105)))
(assert (= temp1108_107 #x0000000000000005))
(assert (= temp1108_108 temp1108_107))
(assert (= temp1108_109 (select ARGNAME_stride_NAMEEND_VAL temp1108_108)))
(assert (= temp1108_110 #x0000000000000000))
(assert (= temp1108_111 #x0000000000000000))
(assert (= temp1108_112 temp1108_111))
(assert (= temp1108_113 (select ARGNAME_stride_NAMEEND_VAL temp1108_112)))
(assert (= temp1108_114 #x0000000000000000))
(assert (= temp1108_115 #x0000000000000001))
(assert (= temp1108_116 temp1108_115))
(assert (= temp1108_117 (select ARGNAME_stride_NAMEEND_VAL temp1108_116)))
(assert (= temp1108_118 #x0000000000000000))
(assert (= temp1108_119 #x0000000000000002))
(assert (= temp1108_120 temp1108_119))
(assert (= temp1108_121 (select ARGNAME_stride_NAMEEND_VAL temp1108_120)))
(assert (= temp1108_122 #x0000000000000000))
(assert (= temp1108_123 #x0000000000000003))
(assert (= temp1108_124 temp1108_123))
(assert (= temp1108_125 (select ARGNAME_stride_NAMEEND_VAL temp1108_124)))
(assert (= temp1108_126 #x0000000000000000))
(assert (= temp1108_127 #x0000000000000004))
(assert (= temp1108_128 temp1108_127))
(assert (= temp1108_129 (select ARGNAME_stride_NAMEEND_VAL temp1108_128)))
(assert (= temp1108_130 #x0000000000000000))
(assert (= temp1108_131 #x0000000000000005))
(assert (= temp1108_132 temp1108_131))
(assert (= temp1108_133 (select ARGNAME_stride_NAMEEND_VAL temp1108_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1108_113 temp1108_110)
             (bvsle temp1108_117 temp1108_114)
             (bvsle temp1108_121 temp1108_118)
             (bvsle temp1108_125 temp1108_122)
             (bvsle temp1108_129 temp1108_126)
             (bvsle temp1108_133 temp1108_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_134 #x0000000000000000))
(assert (= var1322807 temp1108_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_135 #x0000000000000001))
(assert (= var1322819 temp1108_135))
(assert (= temp1108_136 #x0000000000000000))
(assert (= var1310898 temp1108_136))
(assert (= temp1108_137 #x0000000000000000))
(assert (= temp1108_138 temp1108_137))
(assert (= temp1108_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_138)))
(assert (= temp1108_140 #x0000000000000001))
(assert (= temp1108_141 temp1108_140))
(assert (= temp1108_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_141)))
(assert (= temp1108_143 #x0000000000000002))
(assert (= temp1108_144 temp1108_143))
(assert (= temp1108_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_144)))
(assert (= temp1108_146 #x0000000000000003))
(assert (= temp1108_147 temp1108_146))
(assert (= temp1108_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_147)))
(assert (= temp1108_149 #x0000000000000004))
(assert (= temp1108_150 temp1108_149))
(assert (= temp1108_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_150)))
(assert (= temp1108_152 #x0000000000000005))
(assert (= temp1108_153 temp1108_152))
(assert (= temp1108_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_153)))
(assert (= temp1108_156 var1310898))
(assert (= temp1108_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_156)))
(assert (= temp1108_155 temp1108_157))
(assert (= var1322852
   (ite (bvslt temp1108_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_158 #x0000000000000000))
(assert (= var1322852 temp1108_158))
(assert (= temp1108_159 #x0000000000000000))
(assert (= var1310898 temp1108_159))
(assert (= temp1108_161 var1310898))
(assert (= temp1108_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_161)))
(assert (= temp1108_160 temp1108_162))
(assert (= var1322874 (bvsmod temp1108_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1108_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1108_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1108_164 #x0000000000000001))
(assert (= var1322875 temp1108_164))
(assert (= temp1108_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1108_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_166 #x0000000000000001))
(assert (= var1322895 temp1108_166))
(assert (= temp1108_167 #x0000000000000001))
(assert (= var1311786 temp1108_167))
(assert (= temp1108_168 #x0000000000000000))
(assert (= temp1108_169 temp1108_168))
(assert (= temp1108_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1108_169)))
(assert (= temp1108_171 #x0000000000000001))
(assert (= temp1108_172 temp1108_171))
(assert (= temp1108_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1108_172)))
(assert (= temp1108_174 #x0000000000000002))
(assert (= temp1108_175 temp1108_174))
(assert (= temp1108_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1108_175)))
(assert (= temp1108_177 #x0000000000000003))
(assert (= temp1108_178 temp1108_177))
(assert (= temp1108_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1108_178)))
(assert (= temp1108_180 #x0000000000000004))
(assert (= temp1108_181 temp1108_180))
(assert (= temp1108_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1108_181)))
(assert (= temp1108_183 #x0000000000000005))
(assert (= temp1108_184 temp1108_183))
(assert (= temp1108_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1108_184)))
(assert (= temp1108_186 #x0000000000000000))
(assert (= temp1108_187
   (ite (bvslt var1311786 temp1108_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1108_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1108_187)))
(assert (= var1322903 temp1108_188))
(assert (bvslt (ite (bvslt var1311786 temp1108_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1108_189 #x0000000000000001))
(assert (= var1311786 temp1108_189))
(assert (= temp1108_191 var1311786))
(assert (= temp1108_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_191)))
(assert (= temp1108_190 temp1108_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1108_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1108_193 #x0000000000000001))
(assert (= var1322908 temp1108_193))
(assert (= temp1108_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1108_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_195 #x0000000000000001))
(assert (= var1322975 temp1108_195))
(assert (= temp1108_196 #x0000000000000000))
(assert (= var1310898 temp1108_196))
(assert (= temp1108_197 #x0000000000000000))
(assert (= temp1108_198 temp1108_197))
(assert (= temp1108_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1108_198)))
(assert (= temp1108_200 #x0000000000000001))
(assert (= temp1108_201 temp1108_200))
(assert (= temp1108_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1108_201)))
(assert (= temp1108_203 #x0000000000000002))
(assert (= temp1108_204 temp1108_203))
(assert (= temp1108_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1108_204)))
(assert (= temp1108_206 #x0000000000000003))
(assert (= temp1108_207 temp1108_206))
(assert (= temp1108_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1108_207)))
(assert (= temp1108_209 #x0000000000000004))
(assert (= temp1108_210 temp1108_209))
(assert (= temp1108_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1108_210)))
(assert (= temp1108_212 #x0000000000000005))
(assert (= temp1108_213 temp1108_212))
(assert (= temp1108_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1108_213)))
(assert (= temp1108_215 #x0000000000000000))
(assert (= temp1108_216
   (ite (bvslt var1310898 temp1108_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1108_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1108_216)))
(assert (= var1322977 temp1108_217))
(assert (bvslt (ite (bvslt var1310898 temp1108_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1108_218 #x0000000000000000))
(assert (= var1310898 temp1108_218))
(assert (= temp1108_220 var1310898))
(assert (= temp1108_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1108_220)))
(assert (= temp1108_219 temp1108_221))
(assert (= var1322980
   (ite (= var1322977 temp1108_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1108_222 #x0000000000000001))
(assert (= var1322980 temp1108_222))
(assert (= temp1108_223 #x0000000000000002))
(assert (= var1848169 temp1108_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1108_225 #x0000000000000001))
(assert (= var1323065 temp1108_225))
(assert (= temp1108_226 #x0000000000000001))
(assert (= var3486735 temp1108_226))
(assert (= temp1108_227 #x0000000000000001))
(assert (= var3814415 temp1108_227))
(assert (= temp1108_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1108_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_229 #x0000000000000001))
(assert (= var79986 temp1108_229))
(assert (= temp1108_230 #x0000000000000001))
(assert (= var80116 temp1108_230))
(assert (= var4796905 var80116))
(assert (= temp1108_231 #x0000000000000000))
(assert (= var4784306 temp1108_231))
(assert (= temp1108_232 #x0000000000000000))
(assert (= temp1108_233
   (ite (bvslt var4784306 temp1108_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1108_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1108_233)))
(assert (= var4796924 temp1108_234))
(assert (bvslt (ite (bvslt var4784306 temp1108_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1108_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1108_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1108_236 #x0000000000000001))
(assert (= var4796925 temp1108_236))
(assert (= temp1108_237 #x0000000000000000))
(assert (= var4996927 temp1108_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1108_238 #x0000000000000002))
(assert (= var5125763 temp1108_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_239 #x0000000000000000))
(assert (= var5191324 temp1108_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1108_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1108_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_241 #x0000000000000001))
(assert (= var81342 temp1108_241))
(assert (= temp1108_242 #x0000000000000002))
(assert (= var5977731 temp1108_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1108_243 #x0000000000000000))
(assert (= var6043292 temp1108_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp1108_244 #x0000000000000001))
(assert (= var79986 temp1108_244))
(assert (= temp1108_245 #x0000000000000000))
(assert (= var7680788 temp1108_245))
(assert (= var7680755 var7680788))
(assert (= var7549319 var7680755))
(assert (= var7549315 var7549319))
(assert (= var81597 var7549315))
(assert (= temp1108_246 #x0000000000000000))
(assert (= var81597 temp1108_246))
(model-add temp1108_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1108_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1108_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






