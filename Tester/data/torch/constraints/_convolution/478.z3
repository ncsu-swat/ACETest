(declare-fun temp635_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp635_2 () (_ BitVec 64))
(declare-fun temp635_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp635_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp635_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp635_6 () (_ BitVec 64))
(declare-fun temp635_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp635_8 () (_ BitVec 64))
(declare-fun temp635_9 () (_ BitVec 64))
(declare-fun temp635_10 () (_ BitVec 64))
(declare-fun temp635_11 () (_ BitVec 64))
(declare-fun temp635_12 () (_ BitVec 64))
(declare-fun temp635_13 () (_ BitVec 64))
(declare-fun temp635_14 () (_ BitVec 64))
(declare-fun temp635_15 () (_ BitVec 64))
(declare-fun temp635_16 () (_ BitVec 64))
(declare-fun temp635_17 () (_ BitVec 64))
(declare-fun temp635_18 () (_ BitVec 64))
(declare-fun temp635_19 () (_ BitVec 64))
(declare-fun temp635_20 () (_ BitVec 64))
(declare-fun temp635_21 () (_ BitVec 64))
(declare-fun temp635_22 () (_ BitVec 64))
(declare-fun temp635_23 () (_ BitVec 64))
(declare-fun temp635_24 () (_ BitVec 64))
(declare-fun temp635_25 () (_ BitVec 64))
(declare-fun temp635_26 () (_ BitVec 64))
(declare-fun temp635_27 () (_ BitVec 64))
(declare-fun temp635_28 () (_ BitVec 64))
(declare-fun temp635_29 () (_ BitVec 64))
(declare-fun temp635_30 () (_ BitVec 64))
(declare-fun temp635_31 () (_ BitVec 64))
(declare-fun temp635_32 () (_ BitVec 64))
(declare-fun temp635_33 () (_ BitVec 64))
(declare-fun temp635_34 () (_ BitVec 64))
(declare-fun temp635_35 () (_ BitVec 64))
(declare-fun temp635_36 () (_ BitVec 64))
(declare-fun temp635_37 () (_ BitVec 64))
(declare-fun temp635_38 () (_ BitVec 64))
(declare-fun temp635_39 () (_ BitVec 64))
(declare-fun temp635_40 () (_ BitVec 64))
(declare-fun temp635_41 () (_ BitVec 64))
(declare-fun temp635_42 () (_ BitVec 64))
(declare-fun temp635_43 () (_ BitVec 64))
(declare-fun temp635_44 () (_ BitVec 64))
(declare-fun temp635_45 () (_ BitVec 64))
(declare-fun temp635_46 () (_ BitVec 64))
(declare-fun temp635_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp635_48 () (_ BitVec 64))
(declare-fun temp635_49 () (_ BitVec 64))
(declare-fun temp635_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp635_51 () (_ BitVec 64))
(declare-fun temp635_52 () (_ BitVec 64))
(declare-fun temp635_53 () (_ BitVec 64))
(declare-fun temp635_54 () (_ BitVec 64))
(declare-fun temp635_55 () (_ BitVec 64))
(declare-fun temp635_56 () (_ BitVec 64))
(declare-fun temp635_57 () (_ BitVec 64))
(declare-fun temp635_58 () (_ BitVec 64))
(declare-fun temp635_59 () (_ BitVec 64))
(declare-fun temp635_60 () (_ BitVec 64))
(declare-fun temp635_61 () (_ BitVec 64))
(declare-fun temp635_62 () (_ BitVec 64))
(declare-fun temp635_63 () (_ BitVec 64))
(declare-fun temp635_64 () (_ BitVec 64))
(declare-fun temp635_65 () (_ BitVec 64))
(declare-fun temp635_66 () (_ BitVec 64))
(declare-fun temp635_67 () (_ BitVec 64))
(declare-fun temp635_68 () (_ BitVec 64))
(declare-fun temp635_69 () (_ BitVec 64))
(declare-fun temp635_70 () (_ BitVec 64))
(declare-fun temp635_71 () (_ BitVec 64))
(declare-fun temp635_72 () (_ BitVec 64))
(declare-fun temp635_73 () (_ BitVec 64))
(declare-fun temp635_74 () (_ BitVec 64))
(declare-fun temp635_75 () (_ BitVec 64))
(declare-fun temp635_76 () (_ BitVec 64))
(declare-fun temp635_77 () (_ BitVec 64))
(declare-fun temp635_78 () (_ BitVec 64))
(declare-fun temp635_79 () (_ BitVec 64))
(declare-fun temp635_80 () (_ BitVec 64))
(declare-fun temp635_81 () (_ BitVec 64))
(declare-fun temp635_82 () (_ BitVec 64))
(declare-fun temp635_83 () (_ BitVec 64))
(declare-fun temp635_84 () (_ BitVec 64))
(declare-fun temp635_85 () (_ BitVec 64))
(declare-fun temp635_86 () (_ BitVec 64))
(declare-fun temp635_87 () (_ BitVec 64))
(declare-fun temp635_88 () (_ BitVec 64))
(declare-fun temp635_89 () (_ BitVec 64))
(declare-fun temp635_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp635_91 () (_ BitVec 64))
(declare-fun temp635_92 () (_ BitVec 64))
(declare-fun temp635_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp635_94 () (_ BitVec 64))
(declare-fun temp635_95 () (_ BitVec 64))
(declare-fun temp635_96 () (_ BitVec 64))
(declare-fun temp635_97 () (_ BitVec 64))
(declare-fun temp635_98 () (_ BitVec 64))
(declare-fun temp635_99 () (_ BitVec 64))
(declare-fun temp635_100 () (_ BitVec 64))
(declare-fun temp635_101 () (_ BitVec 64))
(declare-fun temp635_102 () (_ BitVec 64))
(declare-fun temp635_103 () (_ BitVec 64))
(declare-fun temp635_104 () (_ BitVec 64))
(declare-fun temp635_105 () (_ BitVec 64))
(declare-fun temp635_106 () (_ BitVec 64))
(declare-fun temp635_107 () (_ BitVec 64))
(declare-fun temp635_108 () (_ BitVec 64))
(declare-fun temp635_109 () (_ BitVec 64))
(declare-fun temp635_110 () (_ BitVec 64))
(declare-fun temp635_111 () (_ BitVec 64))
(declare-fun temp635_112 () (_ BitVec 64))
(declare-fun temp635_113 () (_ BitVec 64))
(declare-fun temp635_114 () (_ BitVec 64))
(declare-fun temp635_115 () (_ BitVec 64))
(declare-fun temp635_116 () (_ BitVec 64))
(declare-fun temp635_117 () (_ BitVec 64))
(declare-fun temp635_118 () (_ BitVec 64))
(declare-fun temp635_119 () (_ BitVec 64))
(declare-fun temp635_120 () (_ BitVec 64))
(declare-fun temp635_121 () (_ BitVec 64))
(declare-fun temp635_122 () (_ BitVec 64))
(declare-fun temp635_123 () (_ BitVec 64))
(declare-fun temp635_124 () (_ BitVec 64))
(declare-fun temp635_125 () (_ BitVec 64))
(declare-fun temp635_126 () (_ BitVec 64))
(declare-fun temp635_127 () (_ BitVec 64))
(declare-fun temp635_128 () (_ BitVec 64))
(declare-fun temp635_129 () (_ BitVec 64))
(declare-fun temp635_130 () (_ BitVec 64))
(declare-fun temp635_131 () (_ BitVec 64))
(declare-fun temp635_132 () (_ BitVec 64))
(declare-fun temp635_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp635_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp635_135 () (_ BitVec 64))
(declare-fun temp635_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp635_137 () (_ BitVec 64))
(declare-fun temp635_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp635_139 () (_ BitVec 64))
(declare-fun temp635_140 () (_ BitVec 64))
(declare-fun temp635_141 () (_ BitVec 64))
(declare-fun temp635_142 () (_ BitVec 64))
(declare-fun temp635_143 () (_ BitVec 64))
(declare-fun temp635_144 () (_ BitVec 64))
(declare-fun temp635_145 () (_ BitVec 64))
(declare-fun temp635_146 () (_ BitVec 64))
(declare-fun temp635_147 () (_ BitVec 64))
(declare-fun temp635_148 () (_ BitVec 64))
(declare-fun temp635_149 () (_ BitVec 64))
(declare-fun temp635_150 () (_ BitVec 64))
(declare-fun temp635_151 () (_ BitVec 64))
(declare-fun temp635_152 () (_ BitVec 64))
(declare-fun temp635_153 () (_ BitVec 64))
(declare-fun temp635_154 () (_ BitVec 64))
(declare-fun temp635_156 () (_ BitVec 64))
(declare-fun temp635_157 () (_ BitVec 64))
(declare-fun temp635_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp635_158 () (_ BitVec 64))
(declare-fun temp635_159 () (_ BitVec 64))
(declare-fun temp635_161 () (_ BitVec 64))
(declare-fun temp635_162 () (_ BitVec 64))
(declare-fun temp635_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp635_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp635_164 () (_ BitVec 64))
(declare-fun temp635_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp635_166 () (_ BitVec 64))
(declare-fun temp635_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp635_168 () (_ BitVec 64))
(declare-fun temp635_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp635_170 () (_ BitVec 64))
(declare-fun temp635_171 () (_ BitVec 64))
(declare-fun temp635_172 () (_ BitVec 64))
(declare-fun temp635_173 () (_ BitVec 64))
(declare-fun temp635_174 () (_ BitVec 64))
(declare-fun temp635_175 () (_ BitVec 64))
(declare-fun temp635_176 () (_ BitVec 64))
(declare-fun temp635_177 () (_ BitVec 64))
(declare-fun temp635_178 () (_ BitVec 64))
(declare-fun temp635_179 () (_ BitVec 64))
(declare-fun temp635_180 () (_ BitVec 64))
(declare-fun temp635_181 () (_ BitVec 64))
(declare-fun temp635_182 () (_ BitVec 64))
(declare-fun temp635_183 () (_ BitVec 64))
(declare-fun temp635_184 () (_ BitVec 64))
(declare-fun temp635_185 () (_ BitVec 64))
(declare-fun temp635_186 () (_ BitVec 64))
(declare-fun temp635_187 () (_ BitVec 64))
(declare-fun temp635_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp635_189 () (_ BitVec 64))
(declare-fun temp635_191 () (_ BitVec 64))
(declare-fun temp635_192 () (_ BitVec 64))
(declare-fun temp635_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp635_193 () (_ BitVec 64))
(declare-fun temp635_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp635_195 () (_ BitVec 64))
(declare-fun temp635_196 () (_ BitVec 64))
(declare-fun temp635_197 () (_ BitVec 64))
(declare-fun temp635_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp635_199 () (_ BitVec 64))
(declare-fun temp635_200 () (_ BitVec 64))
(declare-fun temp635_201 () (_ BitVec 64))
(declare-fun temp635_202 () (_ BitVec 64))
(declare-fun temp635_203 () (_ BitVec 64))
(declare-fun temp635_204 () (_ BitVec 64))
(declare-fun temp635_205 () (_ BitVec 64))
(declare-fun temp635_206 () (_ BitVec 64))
(declare-fun temp635_207 () (_ BitVec 64))
(declare-fun temp635_208 () (_ BitVec 64))
(declare-fun temp635_209 () (_ BitVec 64))
(declare-fun temp635_210 () (_ BitVec 64))
(declare-fun temp635_211 () (_ BitVec 64))
(declare-fun temp635_212 () (_ BitVec 64))
(declare-fun temp635_213 () (_ BitVec 64))
(declare-fun temp635_214 () (_ BitVec 64))
(declare-fun temp635_215 () (_ BitVec 64))
(declare-fun temp635_216 () (_ BitVec 64))
(declare-fun temp635_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp635_218 () (_ BitVec 64))
(declare-fun temp635_220 () (_ BitVec 64))
(declare-fun temp635_221 () (_ BitVec 64))
(declare-fun temp635_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp635_222 () (_ BitVec 64))
(declare-fun temp635_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp635_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp635_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp635_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp635_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp635_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp635_229 () (_ BitVec 64))
(declare-fun temp635_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp635_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp635_232 () (_ BitVec 64))
(declare-fun temp635_233 () (_ BitVec 64))
(declare-fun temp635_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp635_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp635_236 () (_ BitVec 64))
(declare-fun temp635_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp635_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp635_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp635_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp635_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp635_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6635340 () (_ BitVec 64))
(declare-fun var6635341 () (_ BitVec 64))
(declare-fun var6635342 () (_ BitVec 64))
(declare-fun temp635_243 () (_ BitVec 64))
(assert (= temp635_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp635_1)))
(assert (= temp635_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp635_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_3 #x0000000000000000))
(assert (= var79869 temp635_3))
(assert (= temp635_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp635_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_5 #x0000000000000000))
(assert (= var79914 temp635_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp635_6 #x0000000000000000))
(assert (= temp635_7 temp635_6))
(assert (= temp635_8 (select ARGNAME_padding_NAMEEND_VAL temp635_7)))
(assert (= temp635_9 #x0000000000000001))
(assert (= temp635_10 temp635_9))
(assert (= temp635_11 (select ARGNAME_padding_NAMEEND_VAL temp635_10)))
(assert (= temp635_12 #x0000000000000002))
(assert (= temp635_13 temp635_12))
(assert (= temp635_14 (select ARGNAME_padding_NAMEEND_VAL temp635_13)))
(assert (= temp635_15 #x0000000000000003))
(assert (= temp635_16 temp635_15))
(assert (= temp635_17 (select ARGNAME_padding_NAMEEND_VAL temp635_16)))
(assert (= temp635_18 #x0000000000000004))
(assert (= temp635_19 temp635_18))
(assert (= temp635_20 (select ARGNAME_padding_NAMEEND_VAL temp635_19)))
(assert (= temp635_21 #x0000000000000005))
(assert (= temp635_22 temp635_21))
(assert (= temp635_23 (select ARGNAME_padding_NAMEEND_VAL temp635_22)))
(assert (= temp635_24 #x0000000000000000))
(assert (= temp635_25 #x0000000000000000))
(assert (= temp635_26 temp635_25))
(assert (= temp635_27 (select ARGNAME_padding_NAMEEND_VAL temp635_26)))
(assert (= temp635_28 #x0000000000000000))
(assert (= temp635_29 #x0000000000000001))
(assert (= temp635_30 temp635_29))
(assert (= temp635_31 (select ARGNAME_padding_NAMEEND_VAL temp635_30)))
(assert (= temp635_32 #x0000000000000000))
(assert (= temp635_33 #x0000000000000002))
(assert (= temp635_34 temp635_33))
(assert (= temp635_35 (select ARGNAME_padding_NAMEEND_VAL temp635_34)))
(assert (= temp635_36 #x0000000000000000))
(assert (= temp635_37 #x0000000000000003))
(assert (= temp635_38 temp635_37))
(assert (= temp635_39 (select ARGNAME_padding_NAMEEND_VAL temp635_38)))
(assert (= temp635_40 #x0000000000000000))
(assert (= temp635_41 #x0000000000000004))
(assert (= temp635_42 temp635_41))
(assert (= temp635_43 (select ARGNAME_padding_NAMEEND_VAL temp635_42)))
(assert (= temp635_44 #x0000000000000000))
(assert (= temp635_45 #x0000000000000005))
(assert (= temp635_46 temp635_45))
(assert (= temp635_47 (select ARGNAME_padding_NAMEEND_VAL temp635_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp635_27 temp635_24)
             (bvslt temp635_31 temp635_28)
             (bvslt temp635_35 temp635_32)
             (bvslt temp635_39 temp635_36)
             (bvslt temp635_43 temp635_40)
             (bvslt temp635_47 temp635_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_48 #x0000000000000000))
(assert (= var1322786 temp635_48))
(assert (= temp635_49 #x0000000000000000))
(assert (= temp635_50 temp635_49))
(assert (= temp635_51 (select ARGNAME_output_padding_NAMEEND_VAL temp635_50)))
(assert (= temp635_52 #x0000000000000001))
(assert (= temp635_53 temp635_52))
(assert (= temp635_54 (select ARGNAME_output_padding_NAMEEND_VAL temp635_53)))
(assert (= temp635_55 #x0000000000000002))
(assert (= temp635_56 temp635_55))
(assert (= temp635_57 (select ARGNAME_output_padding_NAMEEND_VAL temp635_56)))
(assert (= temp635_58 #x0000000000000003))
(assert (= temp635_59 temp635_58))
(assert (= temp635_60 (select ARGNAME_output_padding_NAMEEND_VAL temp635_59)))
(assert (= temp635_61 #x0000000000000004))
(assert (= temp635_62 temp635_61))
(assert (= temp635_63 (select ARGNAME_output_padding_NAMEEND_VAL temp635_62)))
(assert (= temp635_64 #x0000000000000005))
(assert (= temp635_65 temp635_64))
(assert (= temp635_66 (select ARGNAME_output_padding_NAMEEND_VAL temp635_65)))
(assert (= temp635_67 #x0000000000000000))
(assert (= temp635_68 #x0000000000000000))
(assert (= temp635_69 temp635_68))
(assert (= temp635_70 (select ARGNAME_output_padding_NAMEEND_VAL temp635_69)))
(assert (= temp635_71 #x0000000000000000))
(assert (= temp635_72 #x0000000000000001))
(assert (= temp635_73 temp635_72))
(assert (= temp635_74 (select ARGNAME_output_padding_NAMEEND_VAL temp635_73)))
(assert (= temp635_75 #x0000000000000000))
(assert (= temp635_76 #x0000000000000002))
(assert (= temp635_77 temp635_76))
(assert (= temp635_78 (select ARGNAME_output_padding_NAMEEND_VAL temp635_77)))
(assert (= temp635_79 #x0000000000000000))
(assert (= temp635_80 #x0000000000000003))
(assert (= temp635_81 temp635_80))
(assert (= temp635_82 (select ARGNAME_output_padding_NAMEEND_VAL temp635_81)))
(assert (= temp635_83 #x0000000000000000))
(assert (= temp635_84 #x0000000000000004))
(assert (= temp635_85 temp635_84))
(assert (= temp635_86 (select ARGNAME_output_padding_NAMEEND_VAL temp635_85)))
(assert (= temp635_87 #x0000000000000000))
(assert (= temp635_88 #x0000000000000005))
(assert (= temp635_89 temp635_88))
(assert (= temp635_90 (select ARGNAME_output_padding_NAMEEND_VAL temp635_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp635_70 temp635_67)
             (bvslt temp635_74 temp635_71)
             (bvslt temp635_78 temp635_75)
             (bvslt temp635_82 temp635_79)
             (bvslt temp635_86 temp635_83)
             (bvslt temp635_90 temp635_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_91 #x0000000000000000))
(assert (= var1322797 temp635_91))
(assert (= temp635_92 #x0000000000000000))
(assert (= temp635_93 temp635_92))
(assert (= temp635_94 (select ARGNAME_stride_NAMEEND_VAL temp635_93)))
(assert (= temp635_95 #x0000000000000001))
(assert (= temp635_96 temp635_95))
(assert (= temp635_97 (select ARGNAME_stride_NAMEEND_VAL temp635_96)))
(assert (= temp635_98 #x0000000000000002))
(assert (= temp635_99 temp635_98))
(assert (= temp635_100 (select ARGNAME_stride_NAMEEND_VAL temp635_99)))
(assert (= temp635_101 #x0000000000000003))
(assert (= temp635_102 temp635_101))
(assert (= temp635_103 (select ARGNAME_stride_NAMEEND_VAL temp635_102)))
(assert (= temp635_104 #x0000000000000004))
(assert (= temp635_105 temp635_104))
(assert (= temp635_106 (select ARGNAME_stride_NAMEEND_VAL temp635_105)))
(assert (= temp635_107 #x0000000000000005))
(assert (= temp635_108 temp635_107))
(assert (= temp635_109 (select ARGNAME_stride_NAMEEND_VAL temp635_108)))
(assert (= temp635_110 #x0000000000000000))
(assert (= temp635_111 #x0000000000000000))
(assert (= temp635_112 temp635_111))
(assert (= temp635_113 (select ARGNAME_stride_NAMEEND_VAL temp635_112)))
(assert (= temp635_114 #x0000000000000000))
(assert (= temp635_115 #x0000000000000001))
(assert (= temp635_116 temp635_115))
(assert (= temp635_117 (select ARGNAME_stride_NAMEEND_VAL temp635_116)))
(assert (= temp635_118 #x0000000000000000))
(assert (= temp635_119 #x0000000000000002))
(assert (= temp635_120 temp635_119))
(assert (= temp635_121 (select ARGNAME_stride_NAMEEND_VAL temp635_120)))
(assert (= temp635_122 #x0000000000000000))
(assert (= temp635_123 #x0000000000000003))
(assert (= temp635_124 temp635_123))
(assert (= temp635_125 (select ARGNAME_stride_NAMEEND_VAL temp635_124)))
(assert (= temp635_126 #x0000000000000000))
(assert (= temp635_127 #x0000000000000004))
(assert (= temp635_128 temp635_127))
(assert (= temp635_129 (select ARGNAME_stride_NAMEEND_VAL temp635_128)))
(assert (= temp635_130 #x0000000000000000))
(assert (= temp635_131 #x0000000000000005))
(assert (= temp635_132 temp635_131))
(assert (= temp635_133 (select ARGNAME_stride_NAMEEND_VAL temp635_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp635_113 temp635_110)
             (bvsle temp635_117 temp635_114)
             (bvsle temp635_121 temp635_118)
             (bvsle temp635_125 temp635_122)
             (bvsle temp635_129 temp635_126)
             (bvsle temp635_133 temp635_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_134 #x0000000000000000))
(assert (= var1322807 temp635_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_135 #x0000000000000001))
(assert (= var1322819 temp635_135))
(assert (= temp635_136 #x0000000000000000))
(assert (= var1310898 temp635_136))
(assert (= temp635_137 #x0000000000000000))
(assert (= temp635_138 temp635_137))
(assert (= temp635_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_138)))
(assert (= temp635_140 #x0000000000000001))
(assert (= temp635_141 temp635_140))
(assert (= temp635_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_141)))
(assert (= temp635_143 #x0000000000000002))
(assert (= temp635_144 temp635_143))
(assert (= temp635_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_144)))
(assert (= temp635_146 #x0000000000000003))
(assert (= temp635_147 temp635_146))
(assert (= temp635_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_147)))
(assert (= temp635_149 #x0000000000000004))
(assert (= temp635_150 temp635_149))
(assert (= temp635_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_150)))
(assert (= temp635_152 #x0000000000000005))
(assert (= temp635_153 temp635_152))
(assert (= temp635_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_153)))
(assert (= temp635_156 var1310898))
(assert (= temp635_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_156)))
(assert (= temp635_155 temp635_157))
(assert (= var1322852
   (ite (bvslt temp635_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_158 #x0000000000000000))
(assert (= var1322852 temp635_158))
(assert (= temp635_159 #x0000000000000000))
(assert (= var1310898 temp635_159))
(assert (= temp635_161 var1310898))
(assert (= temp635_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_161)))
(assert (= temp635_160 temp635_162))
(assert (= var1322874 (bvsmod temp635_160 ARGNAME_groups_NAMEEND)))
(assert (= temp635_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp635_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp635_164 #x0000000000000001))
(assert (= var1322875 temp635_164))
(assert (= temp635_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp635_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_166 #x0000000000000001))
(assert (= var1322895 temp635_166))
(assert (= temp635_167 #x0000000000000001))
(assert (= var1311786 temp635_167))
(assert (= temp635_168 #x0000000000000000))
(assert (= temp635_169 temp635_168))
(assert (= temp635_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp635_169)))
(assert (= temp635_171 #x0000000000000001))
(assert (= temp635_172 temp635_171))
(assert (= temp635_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp635_172)))
(assert (= temp635_174 #x0000000000000002))
(assert (= temp635_175 temp635_174))
(assert (= temp635_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp635_175)))
(assert (= temp635_177 #x0000000000000003))
(assert (= temp635_178 temp635_177))
(assert (= temp635_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp635_178)))
(assert (= temp635_180 #x0000000000000004))
(assert (= temp635_181 temp635_180))
(assert (= temp635_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp635_181)))
(assert (= temp635_183 #x0000000000000005))
(assert (= temp635_184 temp635_183))
(assert (= temp635_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp635_184)))
(assert (= temp635_186 #x0000000000000000))
(assert (= temp635_187
   (ite (bvslt var1311786 temp635_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp635_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp635_187)))
(assert (= var1322903 temp635_188))
(assert (bvslt (ite (bvslt var1311786 temp635_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp635_189 #x0000000000000001))
(assert (= var1311786 temp635_189))
(assert (= temp635_191 var1311786))
(assert (= temp635_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_191)))
(assert (= temp635_190 temp635_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp635_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp635_193 #x0000000000000001))
(assert (= var1322908 temp635_193))
(assert (= temp635_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp635_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_195 #x0000000000000001))
(assert (= var1322975 temp635_195))
(assert (= temp635_196 #x0000000000000000))
(assert (= var1310898 temp635_196))
(assert (= temp635_197 #x0000000000000000))
(assert (= temp635_198 temp635_197))
(assert (= temp635_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp635_198)))
(assert (= temp635_200 #x0000000000000001))
(assert (= temp635_201 temp635_200))
(assert (= temp635_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp635_201)))
(assert (= temp635_203 #x0000000000000002))
(assert (= temp635_204 temp635_203))
(assert (= temp635_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp635_204)))
(assert (= temp635_206 #x0000000000000003))
(assert (= temp635_207 temp635_206))
(assert (= temp635_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp635_207)))
(assert (= temp635_209 #x0000000000000004))
(assert (= temp635_210 temp635_209))
(assert (= temp635_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp635_210)))
(assert (= temp635_212 #x0000000000000005))
(assert (= temp635_213 temp635_212))
(assert (= temp635_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp635_213)))
(assert (= temp635_215 #x0000000000000000))
(assert (= temp635_216
   (ite (bvslt var1310898 temp635_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp635_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp635_216)))
(assert (= var1322977 temp635_217))
(assert (bvslt (ite (bvslt var1310898 temp635_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp635_218 #x0000000000000000))
(assert (= var1310898 temp635_218))
(assert (= temp635_220 var1310898))
(assert (= temp635_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp635_220)))
(assert (= temp635_219 temp635_221))
(assert (= var1322980
   (ite (= var1322977 temp635_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp635_222 #x0000000000000001))
(assert (= var1322980 temp635_222))
(assert (= temp635_223 #x0000000000000002))
(assert (= var1848169 temp635_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp635_225 #x0000000000000001))
(assert (= var1323065 temp635_225))
(assert (= temp635_226 #x0000000000000001))
(assert (= var3486735 temp635_226))
(assert (= temp635_227 #x0000000000000001))
(assert (= var3814415 temp635_227))
(assert (= temp635_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp635_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_229 #x0000000000000001))
(assert (= var79986 temp635_229))
(assert (= temp635_230 #x0000000000000001))
(assert (= var80116 temp635_230))
(assert (= var4796905 var80116))
(assert (= temp635_231 #x0000000000000000))
(assert (= var4784306 temp635_231))
(assert (= temp635_232 #x0000000000000000))
(assert (= temp635_233
   (ite (bvslt var4784306 temp635_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp635_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp635_233)))
(assert (= var4796924 temp635_234))
(assert (bvslt (ite (bvslt var4784306 temp635_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp635_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp635_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp635_236 #x0000000000000001))
(assert (= var4796925 temp635_236))
(assert (= temp635_237 #x0000000000000000))
(assert (= var4996927 temp635_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp635_238 #x0000000000000002))
(assert (= var5125763 temp635_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_239 #x0000000000000000))
(assert (= var5191324 temp635_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp635_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp635_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp635_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp635_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp635_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6635340 var80315))
(assert (= var6635341 var80317))
(assert (= var6635342 var80319))
(assert (= temp635_243 #x0000000000000001))
(assert (= var79986 temp635_243))
(model-add temp635_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp635_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp635_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






