(declare-fun temp878_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp878_2 () (_ BitVec 64))
(declare-fun temp878_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp878_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp878_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp878_6 () (_ BitVec 64))
(declare-fun temp878_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_8 () (_ BitVec 64))
(declare-fun temp878_9 () (_ BitVec 64))
(declare-fun temp878_10 () (_ BitVec 64))
(declare-fun temp878_11 () (_ BitVec 64))
(declare-fun temp878_12 () (_ BitVec 64))
(declare-fun temp878_13 () (_ BitVec 64))
(declare-fun temp878_14 () (_ BitVec 64))
(declare-fun temp878_15 () (_ BitVec 64))
(declare-fun temp878_16 () (_ BitVec 64))
(declare-fun temp878_17 () (_ BitVec 64))
(declare-fun temp878_18 () (_ BitVec 64))
(declare-fun temp878_19 () (_ BitVec 64))
(declare-fun temp878_20 () (_ BitVec 64))
(declare-fun temp878_21 () (_ BitVec 64))
(declare-fun temp878_22 () (_ BitVec 64))
(declare-fun temp878_23 () (_ BitVec 64))
(declare-fun temp878_24 () (_ BitVec 64))
(declare-fun temp878_25 () (_ BitVec 64))
(declare-fun temp878_26 () (_ BitVec 64))
(declare-fun temp878_27 () (_ BitVec 64))
(declare-fun temp878_28 () (_ BitVec 64))
(declare-fun temp878_29 () (_ BitVec 64))
(declare-fun temp878_30 () (_ BitVec 64))
(declare-fun temp878_31 () (_ BitVec 64))
(declare-fun temp878_32 () (_ BitVec 64))
(declare-fun temp878_33 () (_ BitVec 64))
(declare-fun temp878_34 () (_ BitVec 64))
(declare-fun temp878_35 () (_ BitVec 64))
(declare-fun temp878_36 () (_ BitVec 64))
(declare-fun temp878_37 () (_ BitVec 64))
(declare-fun temp878_38 () (_ BitVec 64))
(declare-fun temp878_39 () (_ BitVec 64))
(declare-fun temp878_40 () (_ BitVec 64))
(declare-fun temp878_41 () (_ BitVec 64))
(declare-fun temp878_42 () (_ BitVec 64))
(declare-fun temp878_43 () (_ BitVec 64))
(declare-fun temp878_44 () (_ BitVec 64))
(declare-fun temp878_45 () (_ BitVec 64))
(declare-fun temp878_46 () (_ BitVec 64))
(declare-fun temp878_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp878_48 () (_ BitVec 64))
(declare-fun temp878_49 () (_ BitVec 64))
(declare-fun temp878_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_51 () (_ BitVec 64))
(declare-fun temp878_52 () (_ BitVec 64))
(declare-fun temp878_53 () (_ BitVec 64))
(declare-fun temp878_54 () (_ BitVec 64))
(declare-fun temp878_55 () (_ BitVec 64))
(declare-fun temp878_56 () (_ BitVec 64))
(declare-fun temp878_57 () (_ BitVec 64))
(declare-fun temp878_58 () (_ BitVec 64))
(declare-fun temp878_59 () (_ BitVec 64))
(declare-fun temp878_60 () (_ BitVec 64))
(declare-fun temp878_61 () (_ BitVec 64))
(declare-fun temp878_62 () (_ BitVec 64))
(declare-fun temp878_63 () (_ BitVec 64))
(declare-fun temp878_64 () (_ BitVec 64))
(declare-fun temp878_65 () (_ BitVec 64))
(declare-fun temp878_66 () (_ BitVec 64))
(declare-fun temp878_67 () (_ BitVec 64))
(declare-fun temp878_68 () (_ BitVec 64))
(declare-fun temp878_69 () (_ BitVec 64))
(declare-fun temp878_70 () (_ BitVec 64))
(declare-fun temp878_71 () (_ BitVec 64))
(declare-fun temp878_72 () (_ BitVec 64))
(declare-fun temp878_73 () (_ BitVec 64))
(declare-fun temp878_74 () (_ BitVec 64))
(declare-fun temp878_75 () (_ BitVec 64))
(declare-fun temp878_76 () (_ BitVec 64))
(declare-fun temp878_77 () (_ BitVec 64))
(declare-fun temp878_78 () (_ BitVec 64))
(declare-fun temp878_79 () (_ BitVec 64))
(declare-fun temp878_80 () (_ BitVec 64))
(declare-fun temp878_81 () (_ BitVec 64))
(declare-fun temp878_82 () (_ BitVec 64))
(declare-fun temp878_83 () (_ BitVec 64))
(declare-fun temp878_84 () (_ BitVec 64))
(declare-fun temp878_85 () (_ BitVec 64))
(declare-fun temp878_86 () (_ BitVec 64))
(declare-fun temp878_87 () (_ BitVec 64))
(declare-fun temp878_88 () (_ BitVec 64))
(declare-fun temp878_89 () (_ BitVec 64))
(declare-fun temp878_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp878_91 () (_ BitVec 64))
(declare-fun temp878_92 () (_ BitVec 64))
(declare-fun temp878_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_94 () (_ BitVec 64))
(declare-fun temp878_95 () (_ BitVec 64))
(declare-fun temp878_96 () (_ BitVec 64))
(declare-fun temp878_97 () (_ BitVec 64))
(declare-fun temp878_98 () (_ BitVec 64))
(declare-fun temp878_99 () (_ BitVec 64))
(declare-fun temp878_100 () (_ BitVec 64))
(declare-fun temp878_101 () (_ BitVec 64))
(declare-fun temp878_102 () (_ BitVec 64))
(declare-fun temp878_103 () (_ BitVec 64))
(declare-fun temp878_104 () (_ BitVec 64))
(declare-fun temp878_105 () (_ BitVec 64))
(declare-fun temp878_106 () (_ BitVec 64))
(declare-fun temp878_107 () (_ BitVec 64))
(declare-fun temp878_108 () (_ BitVec 64))
(declare-fun temp878_109 () (_ BitVec 64))
(declare-fun temp878_110 () (_ BitVec 64))
(declare-fun temp878_111 () (_ BitVec 64))
(declare-fun temp878_112 () (_ BitVec 64))
(declare-fun temp878_113 () (_ BitVec 64))
(declare-fun temp878_114 () (_ BitVec 64))
(declare-fun temp878_115 () (_ BitVec 64))
(declare-fun temp878_116 () (_ BitVec 64))
(declare-fun temp878_117 () (_ BitVec 64))
(declare-fun temp878_118 () (_ BitVec 64))
(declare-fun temp878_119 () (_ BitVec 64))
(declare-fun temp878_120 () (_ BitVec 64))
(declare-fun temp878_121 () (_ BitVec 64))
(declare-fun temp878_122 () (_ BitVec 64))
(declare-fun temp878_123 () (_ BitVec 64))
(declare-fun temp878_124 () (_ BitVec 64))
(declare-fun temp878_125 () (_ BitVec 64))
(declare-fun temp878_126 () (_ BitVec 64))
(declare-fun temp878_127 () (_ BitVec 64))
(declare-fun temp878_128 () (_ BitVec 64))
(declare-fun temp878_129 () (_ BitVec 64))
(declare-fun temp878_130 () (_ BitVec 64))
(declare-fun temp878_131 () (_ BitVec 64))
(declare-fun temp878_132 () (_ BitVec 64))
(declare-fun temp878_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp878_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp878_135 () (_ BitVec 64))
(declare-fun temp878_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp878_137 () (_ BitVec 64))
(declare-fun temp878_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_139 () (_ BitVec 64))
(declare-fun temp878_140 () (_ BitVec 64))
(declare-fun temp878_141 () (_ BitVec 64))
(declare-fun temp878_142 () (_ BitVec 64))
(declare-fun temp878_143 () (_ BitVec 64))
(declare-fun temp878_144 () (_ BitVec 64))
(declare-fun temp878_145 () (_ BitVec 64))
(declare-fun temp878_146 () (_ BitVec 64))
(declare-fun temp878_147 () (_ BitVec 64))
(declare-fun temp878_148 () (_ BitVec 64))
(declare-fun temp878_149 () (_ BitVec 64))
(declare-fun temp878_150 () (_ BitVec 64))
(declare-fun temp878_151 () (_ BitVec 64))
(declare-fun temp878_152 () (_ BitVec 64))
(declare-fun temp878_153 () (_ BitVec 64))
(declare-fun temp878_154 () (_ BitVec 64))
(declare-fun temp878_156 () (_ BitVec 64))
(declare-fun temp878_157 () (_ BitVec 64))
(declare-fun temp878_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp878_158 () (_ BitVec 64))
(declare-fun temp878_159 () (_ BitVec 64))
(declare-fun temp878_161 () (_ BitVec 64))
(declare-fun temp878_162 () (_ BitVec 64))
(declare-fun temp878_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp878_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp878_164 () (_ BitVec 64))
(declare-fun temp878_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp878_166 () (_ BitVec 64))
(declare-fun temp878_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp878_168 () (_ BitVec 64))
(declare-fun temp878_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_170 () (_ BitVec 64))
(declare-fun temp878_171 () (_ BitVec 64))
(declare-fun temp878_172 () (_ BitVec 64))
(declare-fun temp878_173 () (_ BitVec 64))
(declare-fun temp878_174 () (_ BitVec 64))
(declare-fun temp878_175 () (_ BitVec 64))
(declare-fun temp878_176 () (_ BitVec 64))
(declare-fun temp878_177 () (_ BitVec 64))
(declare-fun temp878_178 () (_ BitVec 64))
(declare-fun temp878_179 () (_ BitVec 64))
(declare-fun temp878_180 () (_ BitVec 64))
(declare-fun temp878_181 () (_ BitVec 64))
(declare-fun temp878_182 () (_ BitVec 64))
(declare-fun temp878_183 () (_ BitVec 64))
(declare-fun temp878_184 () (_ BitVec 64))
(declare-fun temp878_185 () (_ BitVec 64))
(declare-fun temp878_186 () (_ BitVec 64))
(declare-fun temp878_187 () (_ BitVec 64))
(declare-fun temp878_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp878_189 () (_ BitVec 64))
(declare-fun temp878_191 () (_ BitVec 64))
(declare-fun temp878_192 () (_ BitVec 64))
(declare-fun temp878_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp878_193 () (_ BitVec 64))
(declare-fun temp878_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp878_195 () (_ BitVec 64))
(declare-fun temp878_196 () (_ BitVec 64))
(declare-fun temp878_197 () (_ BitVec 64))
(declare-fun temp878_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_199 () (_ BitVec 64))
(declare-fun temp878_200 () (_ BitVec 64))
(declare-fun temp878_201 () (_ BitVec 64))
(declare-fun temp878_202 () (_ BitVec 64))
(declare-fun temp878_203 () (_ BitVec 64))
(declare-fun temp878_204 () (_ BitVec 64))
(declare-fun temp878_205 () (_ BitVec 64))
(declare-fun temp878_206 () (_ BitVec 64))
(declare-fun temp878_207 () (_ BitVec 64))
(declare-fun temp878_208 () (_ BitVec 64))
(declare-fun temp878_209 () (_ BitVec 64))
(declare-fun temp878_210 () (_ BitVec 64))
(declare-fun temp878_211 () (_ BitVec 64))
(declare-fun temp878_212 () (_ BitVec 64))
(declare-fun temp878_213 () (_ BitVec 64))
(declare-fun temp878_214 () (_ BitVec 64))
(declare-fun temp878_215 () (_ BitVec 64))
(declare-fun temp878_216 () (_ BitVec 64))
(declare-fun temp878_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp878_218 () (_ BitVec 64))
(declare-fun temp878_220 () (_ BitVec 64))
(declare-fun temp878_221 () (_ BitVec 64))
(declare-fun temp878_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp878_222 () (_ BitVec 64))
(declare-fun temp878_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp878_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp878_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp878_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp878_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp878_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp878_229 () (_ BitVec 64))
(declare-fun temp878_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp878_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp878_232 () (_ BitVec 64))
(declare-fun temp878_233 () (_ BitVec 64))
(declare-fun temp878_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp878_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp878_236 () (_ BitVec 64))
(declare-fun temp878_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp878_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp878_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp878_240 () (_ BitVec 64))
(assert (= temp878_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp878_1)))
(assert (= temp878_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp878_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_3 #x0000000000000000))
(assert (= var79869 temp878_3))
(assert (= temp878_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp878_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_5 #x0000000000000000))
(assert (= var79914 temp878_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp878_6 #x0000000000000000))
(assert (= temp878_7 temp878_6))
(assert (= temp878_8 (select ARGNAME_padding_NAMEEND_VAL temp878_7)))
(assert (= temp878_9 #x0000000000000001))
(assert (= temp878_10 temp878_9))
(assert (= temp878_11 (select ARGNAME_padding_NAMEEND_VAL temp878_10)))
(assert (= temp878_12 #x0000000000000002))
(assert (= temp878_13 temp878_12))
(assert (= temp878_14 (select ARGNAME_padding_NAMEEND_VAL temp878_13)))
(assert (= temp878_15 #x0000000000000003))
(assert (= temp878_16 temp878_15))
(assert (= temp878_17 (select ARGNAME_padding_NAMEEND_VAL temp878_16)))
(assert (= temp878_18 #x0000000000000004))
(assert (= temp878_19 temp878_18))
(assert (= temp878_20 (select ARGNAME_padding_NAMEEND_VAL temp878_19)))
(assert (= temp878_21 #x0000000000000005))
(assert (= temp878_22 temp878_21))
(assert (= temp878_23 (select ARGNAME_padding_NAMEEND_VAL temp878_22)))
(assert (= temp878_24 #x0000000000000000))
(assert (= temp878_25 #x0000000000000000))
(assert (= temp878_26 temp878_25))
(assert (= temp878_27 (select ARGNAME_padding_NAMEEND_VAL temp878_26)))
(assert (= temp878_28 #x0000000000000000))
(assert (= temp878_29 #x0000000000000001))
(assert (= temp878_30 temp878_29))
(assert (= temp878_31 (select ARGNAME_padding_NAMEEND_VAL temp878_30)))
(assert (= temp878_32 #x0000000000000000))
(assert (= temp878_33 #x0000000000000002))
(assert (= temp878_34 temp878_33))
(assert (= temp878_35 (select ARGNAME_padding_NAMEEND_VAL temp878_34)))
(assert (= temp878_36 #x0000000000000000))
(assert (= temp878_37 #x0000000000000003))
(assert (= temp878_38 temp878_37))
(assert (= temp878_39 (select ARGNAME_padding_NAMEEND_VAL temp878_38)))
(assert (= temp878_40 #x0000000000000000))
(assert (= temp878_41 #x0000000000000004))
(assert (= temp878_42 temp878_41))
(assert (= temp878_43 (select ARGNAME_padding_NAMEEND_VAL temp878_42)))
(assert (= temp878_44 #x0000000000000000))
(assert (= temp878_45 #x0000000000000005))
(assert (= temp878_46 temp878_45))
(assert (= temp878_47 (select ARGNAME_padding_NAMEEND_VAL temp878_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp878_27 temp878_24)
             (bvslt temp878_31 temp878_28)
             (bvslt temp878_35 temp878_32)
             (bvslt temp878_39 temp878_36)
             (bvslt temp878_43 temp878_40)
             (bvslt temp878_47 temp878_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_48 #x0000000000000000))
(assert (= var1322786 temp878_48))
(assert (= temp878_49 #x0000000000000000))
(assert (= temp878_50 temp878_49))
(assert (= temp878_51 (select ARGNAME_output_padding_NAMEEND_VAL temp878_50)))
(assert (= temp878_52 #x0000000000000001))
(assert (= temp878_53 temp878_52))
(assert (= temp878_54 (select ARGNAME_output_padding_NAMEEND_VAL temp878_53)))
(assert (= temp878_55 #x0000000000000002))
(assert (= temp878_56 temp878_55))
(assert (= temp878_57 (select ARGNAME_output_padding_NAMEEND_VAL temp878_56)))
(assert (= temp878_58 #x0000000000000003))
(assert (= temp878_59 temp878_58))
(assert (= temp878_60 (select ARGNAME_output_padding_NAMEEND_VAL temp878_59)))
(assert (= temp878_61 #x0000000000000004))
(assert (= temp878_62 temp878_61))
(assert (= temp878_63 (select ARGNAME_output_padding_NAMEEND_VAL temp878_62)))
(assert (= temp878_64 #x0000000000000005))
(assert (= temp878_65 temp878_64))
(assert (= temp878_66 (select ARGNAME_output_padding_NAMEEND_VAL temp878_65)))
(assert (= temp878_67 #x0000000000000000))
(assert (= temp878_68 #x0000000000000000))
(assert (= temp878_69 temp878_68))
(assert (= temp878_70 (select ARGNAME_output_padding_NAMEEND_VAL temp878_69)))
(assert (= temp878_71 #x0000000000000000))
(assert (= temp878_72 #x0000000000000001))
(assert (= temp878_73 temp878_72))
(assert (= temp878_74 (select ARGNAME_output_padding_NAMEEND_VAL temp878_73)))
(assert (= temp878_75 #x0000000000000000))
(assert (= temp878_76 #x0000000000000002))
(assert (= temp878_77 temp878_76))
(assert (= temp878_78 (select ARGNAME_output_padding_NAMEEND_VAL temp878_77)))
(assert (= temp878_79 #x0000000000000000))
(assert (= temp878_80 #x0000000000000003))
(assert (= temp878_81 temp878_80))
(assert (= temp878_82 (select ARGNAME_output_padding_NAMEEND_VAL temp878_81)))
(assert (= temp878_83 #x0000000000000000))
(assert (= temp878_84 #x0000000000000004))
(assert (= temp878_85 temp878_84))
(assert (= temp878_86 (select ARGNAME_output_padding_NAMEEND_VAL temp878_85)))
(assert (= temp878_87 #x0000000000000000))
(assert (= temp878_88 #x0000000000000005))
(assert (= temp878_89 temp878_88))
(assert (= temp878_90 (select ARGNAME_output_padding_NAMEEND_VAL temp878_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp878_70 temp878_67)
             (bvslt temp878_74 temp878_71)
             (bvslt temp878_78 temp878_75)
             (bvslt temp878_82 temp878_79)
             (bvslt temp878_86 temp878_83)
             (bvslt temp878_90 temp878_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_91 #x0000000000000000))
(assert (= var1322797 temp878_91))
(assert (= temp878_92 #x0000000000000000))
(assert (= temp878_93 temp878_92))
(assert (= temp878_94 (select ARGNAME_stride_NAMEEND_VAL temp878_93)))
(assert (= temp878_95 #x0000000000000001))
(assert (= temp878_96 temp878_95))
(assert (= temp878_97 (select ARGNAME_stride_NAMEEND_VAL temp878_96)))
(assert (= temp878_98 #x0000000000000002))
(assert (= temp878_99 temp878_98))
(assert (= temp878_100 (select ARGNAME_stride_NAMEEND_VAL temp878_99)))
(assert (= temp878_101 #x0000000000000003))
(assert (= temp878_102 temp878_101))
(assert (= temp878_103 (select ARGNAME_stride_NAMEEND_VAL temp878_102)))
(assert (= temp878_104 #x0000000000000004))
(assert (= temp878_105 temp878_104))
(assert (= temp878_106 (select ARGNAME_stride_NAMEEND_VAL temp878_105)))
(assert (= temp878_107 #x0000000000000005))
(assert (= temp878_108 temp878_107))
(assert (= temp878_109 (select ARGNAME_stride_NAMEEND_VAL temp878_108)))
(assert (= temp878_110 #x0000000000000000))
(assert (= temp878_111 #x0000000000000000))
(assert (= temp878_112 temp878_111))
(assert (= temp878_113 (select ARGNAME_stride_NAMEEND_VAL temp878_112)))
(assert (= temp878_114 #x0000000000000000))
(assert (= temp878_115 #x0000000000000001))
(assert (= temp878_116 temp878_115))
(assert (= temp878_117 (select ARGNAME_stride_NAMEEND_VAL temp878_116)))
(assert (= temp878_118 #x0000000000000000))
(assert (= temp878_119 #x0000000000000002))
(assert (= temp878_120 temp878_119))
(assert (= temp878_121 (select ARGNAME_stride_NAMEEND_VAL temp878_120)))
(assert (= temp878_122 #x0000000000000000))
(assert (= temp878_123 #x0000000000000003))
(assert (= temp878_124 temp878_123))
(assert (= temp878_125 (select ARGNAME_stride_NAMEEND_VAL temp878_124)))
(assert (= temp878_126 #x0000000000000000))
(assert (= temp878_127 #x0000000000000004))
(assert (= temp878_128 temp878_127))
(assert (= temp878_129 (select ARGNAME_stride_NAMEEND_VAL temp878_128)))
(assert (= temp878_130 #x0000000000000000))
(assert (= temp878_131 #x0000000000000005))
(assert (= temp878_132 temp878_131))
(assert (= temp878_133 (select ARGNAME_stride_NAMEEND_VAL temp878_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp878_113 temp878_110)
             (bvsle temp878_117 temp878_114)
             (bvsle temp878_121 temp878_118)
             (bvsle temp878_125 temp878_122)
             (bvsle temp878_129 temp878_126)
             (bvsle temp878_133 temp878_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_134 #x0000000000000000))
(assert (= var1322807 temp878_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_135 #x0000000000000001))
(assert (= var1322819 temp878_135))
(assert (= temp878_136 #x0000000000000000))
(assert (= var1310898 temp878_136))
(assert (= temp878_137 #x0000000000000000))
(assert (= temp878_138 temp878_137))
(assert (= temp878_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_138)))
(assert (= temp878_140 #x0000000000000001))
(assert (= temp878_141 temp878_140))
(assert (= temp878_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_141)))
(assert (= temp878_143 #x0000000000000002))
(assert (= temp878_144 temp878_143))
(assert (= temp878_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_144)))
(assert (= temp878_146 #x0000000000000003))
(assert (= temp878_147 temp878_146))
(assert (= temp878_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_147)))
(assert (= temp878_149 #x0000000000000004))
(assert (= temp878_150 temp878_149))
(assert (= temp878_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_150)))
(assert (= temp878_152 #x0000000000000005))
(assert (= temp878_153 temp878_152))
(assert (= temp878_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_153)))
(assert (= temp878_156 var1310898))
(assert (= temp878_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_156)))
(assert (= temp878_155 temp878_157))
(assert (= var1322852
   (ite (bvslt temp878_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_158 #x0000000000000000))
(assert (= var1322852 temp878_158))
(assert (= temp878_159 #x0000000000000000))
(assert (= var1310898 temp878_159))
(assert (= temp878_161 var1310898))
(assert (= temp878_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_161)))
(assert (= temp878_160 temp878_162))
(assert (= var1322874 (bvsmod temp878_160 ARGNAME_groups_NAMEEND)))
(assert (= temp878_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp878_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_164 #x0000000000000001))
(assert (= var1322875 temp878_164))
(assert (= temp878_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp878_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_166 #x0000000000000001))
(assert (= var1322895 temp878_166))
(assert (= temp878_167 #x0000000000000001))
(assert (= var1311786 temp878_167))
(assert (= temp878_168 #x0000000000000000))
(assert (= temp878_169 temp878_168))
(assert (= temp878_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_169)))
(assert (= temp878_171 #x0000000000000001))
(assert (= temp878_172 temp878_171))
(assert (= temp878_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_172)))
(assert (= temp878_174 #x0000000000000002))
(assert (= temp878_175 temp878_174))
(assert (= temp878_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_175)))
(assert (= temp878_177 #x0000000000000003))
(assert (= temp878_178 temp878_177))
(assert (= temp878_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_178)))
(assert (= temp878_180 #x0000000000000004))
(assert (= temp878_181 temp878_180))
(assert (= temp878_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_181)))
(assert (= temp878_183 #x0000000000000005))
(assert (= temp878_184 temp878_183))
(assert (= temp878_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_184)))
(assert (= temp878_186 #x0000000000000000))
(assert (= temp878_187
   (ite (bvslt var1311786 temp878_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp878_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_187)))
(assert (= var1322903 temp878_188))
(assert (bvslt (ite (bvslt var1311786 temp878_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp878_189 #x0000000000000001))
(assert (= var1311786 temp878_189))
(assert (= temp878_191 var1311786))
(assert (= temp878_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_191)))
(assert (= temp878_190 temp878_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp878_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_193 #x0000000000000001))
(assert (= var1322908 temp878_193))
(assert (= temp878_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp878_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_195 #x0000000000000001))
(assert (= var1322975 temp878_195))
(assert (= temp878_196 #x0000000000000000))
(assert (= var1310898 temp878_196))
(assert (= temp878_197 #x0000000000000000))
(assert (= temp878_198 temp878_197))
(assert (= temp878_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp878_198)))
(assert (= temp878_200 #x0000000000000001))
(assert (= temp878_201 temp878_200))
(assert (= temp878_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp878_201)))
(assert (= temp878_203 #x0000000000000002))
(assert (= temp878_204 temp878_203))
(assert (= temp878_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp878_204)))
(assert (= temp878_206 #x0000000000000003))
(assert (= temp878_207 temp878_206))
(assert (= temp878_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp878_207)))
(assert (= temp878_209 #x0000000000000004))
(assert (= temp878_210 temp878_209))
(assert (= temp878_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp878_210)))
(assert (= temp878_212 #x0000000000000005))
(assert (= temp878_213 temp878_212))
(assert (= temp878_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp878_213)))
(assert (= temp878_215 #x0000000000000000))
(assert (= temp878_216
   (ite (bvslt var1310898 temp878_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp878_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp878_216)))
(assert (= var1322977 temp878_217))
(assert (bvslt (ite (bvslt var1310898 temp878_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp878_218 #x0000000000000000))
(assert (= var1310898 temp878_218))
(assert (= temp878_220 var1310898))
(assert (= temp878_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_220)))
(assert (= temp878_219 temp878_221))
(assert (= var1322980
   (ite (= var1322977 temp878_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_222 #x0000000000000001))
(assert (= var1322980 temp878_222))
(assert (= temp878_223 #x0000000000000002))
(assert (= var1848169 temp878_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp878_225 #x0000000000000001))
(assert (= var1323065 temp878_225))
(assert (= temp878_226 #x0000000000000001))
(assert (= var3486735 temp878_226))
(assert (= temp878_227 #x0000000000000001))
(assert (= var3814415 temp878_227))
(assert (= temp878_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp878_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_229 #x0000000000000001))
(assert (= var79986 temp878_229))
(assert (= temp878_230 #x0000000000000001))
(assert (= var80116 temp878_230))
(assert (= var4796905 var80116))
(assert (= temp878_231 #x0000000000000000))
(assert (= var4784306 temp878_231))
(assert (= temp878_232 #x0000000000000000))
(assert (= temp878_233
   (ite (bvslt var4784306 temp878_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp878_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_233)))
(assert (= var4796924 temp878_234))
(assert (bvslt (ite (bvslt var4784306 temp878_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp878_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp878_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_236 #x0000000000000001))
(assert (= var4796925 temp878_236))
(assert (= temp878_237 #x0000000000000000))
(assert (= var4996927 temp878_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp878_238 #x0000000000000002))
(assert (= var5125763 temp878_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_239 #x0000000000000000))
(assert (= var5191324 temp878_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp878_240 #x0000000000000001))
(assert (= var79986 temp878_240))
(model-add temp878_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp878_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp878_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






