(declare-fun temp198_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp198_2 () (_ BitVec 64))
(declare-fun temp198_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp198_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp198_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp198_6 () (_ BitVec 64))
(declare-fun temp198_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_8 () (_ BitVec 64))
(declare-fun temp198_9 () (_ BitVec 64))
(declare-fun temp198_10 () (_ BitVec 64))
(declare-fun temp198_11 () (_ BitVec 64))
(declare-fun temp198_12 () (_ BitVec 64))
(declare-fun temp198_13 () (_ BitVec 64))
(declare-fun temp198_14 () (_ BitVec 64))
(declare-fun temp198_15 () (_ BitVec 64))
(declare-fun temp198_16 () (_ BitVec 64))
(declare-fun temp198_17 () (_ BitVec 64))
(declare-fun temp198_18 () (_ BitVec 64))
(declare-fun temp198_19 () (_ BitVec 64))
(declare-fun temp198_20 () (_ BitVec 64))
(declare-fun temp198_21 () (_ BitVec 64))
(declare-fun temp198_22 () (_ BitVec 64))
(declare-fun temp198_23 () (_ BitVec 64))
(declare-fun temp198_24 () (_ BitVec 64))
(declare-fun temp198_25 () (_ BitVec 64))
(declare-fun temp198_26 () (_ BitVec 64))
(declare-fun temp198_27 () (_ BitVec 64))
(declare-fun temp198_28 () (_ BitVec 64))
(declare-fun temp198_29 () (_ BitVec 64))
(declare-fun temp198_30 () (_ BitVec 64))
(declare-fun temp198_31 () (_ BitVec 64))
(declare-fun temp198_32 () (_ BitVec 64))
(declare-fun temp198_33 () (_ BitVec 64))
(declare-fun temp198_34 () (_ BitVec 64))
(declare-fun temp198_35 () (_ BitVec 64))
(declare-fun temp198_36 () (_ BitVec 64))
(declare-fun temp198_37 () (_ BitVec 64))
(declare-fun temp198_38 () (_ BitVec 64))
(declare-fun temp198_39 () (_ BitVec 64))
(declare-fun temp198_40 () (_ BitVec 64))
(declare-fun temp198_41 () (_ BitVec 64))
(declare-fun temp198_42 () (_ BitVec 64))
(declare-fun temp198_43 () (_ BitVec 64))
(declare-fun temp198_44 () (_ BitVec 64))
(declare-fun temp198_45 () (_ BitVec 64))
(declare-fun temp198_46 () (_ BitVec 64))
(declare-fun temp198_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp198_48 () (_ BitVec 64))
(declare-fun temp198_49 () (_ BitVec 64))
(declare-fun temp198_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_51 () (_ BitVec 64))
(declare-fun temp198_52 () (_ BitVec 64))
(declare-fun temp198_53 () (_ BitVec 64))
(declare-fun temp198_54 () (_ BitVec 64))
(declare-fun temp198_55 () (_ BitVec 64))
(declare-fun temp198_56 () (_ BitVec 64))
(declare-fun temp198_57 () (_ BitVec 64))
(declare-fun temp198_58 () (_ BitVec 64))
(declare-fun temp198_59 () (_ BitVec 64))
(declare-fun temp198_60 () (_ BitVec 64))
(declare-fun temp198_61 () (_ BitVec 64))
(declare-fun temp198_62 () (_ BitVec 64))
(declare-fun temp198_63 () (_ BitVec 64))
(declare-fun temp198_64 () (_ BitVec 64))
(declare-fun temp198_65 () (_ BitVec 64))
(declare-fun temp198_66 () (_ BitVec 64))
(declare-fun temp198_67 () (_ BitVec 64))
(declare-fun temp198_68 () (_ BitVec 64))
(declare-fun temp198_69 () (_ BitVec 64))
(declare-fun temp198_70 () (_ BitVec 64))
(declare-fun temp198_71 () (_ BitVec 64))
(declare-fun temp198_72 () (_ BitVec 64))
(declare-fun temp198_73 () (_ BitVec 64))
(declare-fun temp198_74 () (_ BitVec 64))
(declare-fun temp198_75 () (_ BitVec 64))
(declare-fun temp198_76 () (_ BitVec 64))
(declare-fun temp198_77 () (_ BitVec 64))
(declare-fun temp198_78 () (_ BitVec 64))
(declare-fun temp198_79 () (_ BitVec 64))
(declare-fun temp198_80 () (_ BitVec 64))
(declare-fun temp198_81 () (_ BitVec 64))
(declare-fun temp198_82 () (_ BitVec 64))
(declare-fun temp198_83 () (_ BitVec 64))
(declare-fun temp198_84 () (_ BitVec 64))
(declare-fun temp198_85 () (_ BitVec 64))
(declare-fun temp198_86 () (_ BitVec 64))
(declare-fun temp198_87 () (_ BitVec 64))
(declare-fun temp198_88 () (_ BitVec 64))
(declare-fun temp198_89 () (_ BitVec 64))
(declare-fun temp198_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp198_91 () (_ BitVec 64))
(declare-fun temp198_92 () (_ BitVec 64))
(declare-fun temp198_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_94 () (_ BitVec 64))
(declare-fun temp198_95 () (_ BitVec 64))
(declare-fun temp198_96 () (_ BitVec 64))
(declare-fun temp198_97 () (_ BitVec 64))
(declare-fun temp198_98 () (_ BitVec 64))
(declare-fun temp198_99 () (_ BitVec 64))
(declare-fun temp198_100 () (_ BitVec 64))
(declare-fun temp198_101 () (_ BitVec 64))
(declare-fun temp198_102 () (_ BitVec 64))
(declare-fun temp198_103 () (_ BitVec 64))
(declare-fun temp198_104 () (_ BitVec 64))
(declare-fun temp198_105 () (_ BitVec 64))
(declare-fun temp198_106 () (_ BitVec 64))
(declare-fun temp198_107 () (_ BitVec 64))
(declare-fun temp198_108 () (_ BitVec 64))
(declare-fun temp198_109 () (_ BitVec 64))
(declare-fun temp198_110 () (_ BitVec 64))
(declare-fun temp198_111 () (_ BitVec 64))
(declare-fun temp198_112 () (_ BitVec 64))
(declare-fun temp198_113 () (_ BitVec 64))
(declare-fun temp198_114 () (_ BitVec 64))
(declare-fun temp198_115 () (_ BitVec 64))
(declare-fun temp198_116 () (_ BitVec 64))
(declare-fun temp198_117 () (_ BitVec 64))
(declare-fun temp198_118 () (_ BitVec 64))
(declare-fun temp198_119 () (_ BitVec 64))
(declare-fun temp198_120 () (_ BitVec 64))
(declare-fun temp198_121 () (_ BitVec 64))
(declare-fun temp198_122 () (_ BitVec 64))
(declare-fun temp198_123 () (_ BitVec 64))
(declare-fun temp198_124 () (_ BitVec 64))
(declare-fun temp198_125 () (_ BitVec 64))
(declare-fun temp198_126 () (_ BitVec 64))
(declare-fun temp198_127 () (_ BitVec 64))
(declare-fun temp198_128 () (_ BitVec 64))
(declare-fun temp198_129 () (_ BitVec 64))
(declare-fun temp198_130 () (_ BitVec 64))
(declare-fun temp198_131 () (_ BitVec 64))
(declare-fun temp198_132 () (_ BitVec 64))
(declare-fun temp198_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp198_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp198_135 () (_ BitVec 64))
(declare-fun temp198_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp198_137 () (_ BitVec 64))
(declare-fun temp198_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_139 () (_ BitVec 64))
(declare-fun temp198_140 () (_ BitVec 64))
(declare-fun temp198_141 () (_ BitVec 64))
(declare-fun temp198_142 () (_ BitVec 64))
(declare-fun temp198_143 () (_ BitVec 64))
(declare-fun temp198_144 () (_ BitVec 64))
(declare-fun temp198_145 () (_ BitVec 64))
(declare-fun temp198_146 () (_ BitVec 64))
(declare-fun temp198_147 () (_ BitVec 64))
(declare-fun temp198_148 () (_ BitVec 64))
(declare-fun temp198_149 () (_ BitVec 64))
(declare-fun temp198_150 () (_ BitVec 64))
(declare-fun temp198_151 () (_ BitVec 64))
(declare-fun temp198_152 () (_ BitVec 64))
(declare-fun temp198_153 () (_ BitVec 64))
(declare-fun temp198_154 () (_ BitVec 64))
(declare-fun temp198_156 () (_ BitVec 64))
(declare-fun temp198_157 () (_ BitVec 64))
(declare-fun temp198_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp198_158 () (_ BitVec 64))
(declare-fun temp198_159 () (_ BitVec 64))
(declare-fun temp198_161 () (_ BitVec 64))
(declare-fun temp198_162 () (_ BitVec 64))
(declare-fun temp198_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp198_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp198_164 () (_ BitVec 64))
(declare-fun temp198_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp198_166 () (_ BitVec 64))
(declare-fun temp198_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp198_168 () (_ BitVec 64))
(declare-fun temp198_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_170 () (_ BitVec 64))
(declare-fun temp198_171 () (_ BitVec 64))
(declare-fun temp198_172 () (_ BitVec 64))
(declare-fun temp198_173 () (_ BitVec 64))
(declare-fun temp198_174 () (_ BitVec 64))
(declare-fun temp198_175 () (_ BitVec 64))
(declare-fun temp198_176 () (_ BitVec 64))
(declare-fun temp198_177 () (_ BitVec 64))
(declare-fun temp198_178 () (_ BitVec 64))
(declare-fun temp198_179 () (_ BitVec 64))
(declare-fun temp198_180 () (_ BitVec 64))
(declare-fun temp198_181 () (_ BitVec 64))
(declare-fun temp198_182 () (_ BitVec 64))
(declare-fun temp198_183 () (_ BitVec 64))
(declare-fun temp198_184 () (_ BitVec 64))
(declare-fun temp198_185 () (_ BitVec 64))
(declare-fun temp198_186 () (_ BitVec 64))
(declare-fun temp198_187 () (_ BitVec 64))
(declare-fun temp198_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp198_189 () (_ BitVec 64))
(declare-fun temp198_191 () (_ BitVec 64))
(declare-fun temp198_192 () (_ BitVec 64))
(declare-fun temp198_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp198_193 () (_ BitVec 64))
(declare-fun temp198_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp198_195 () (_ BitVec 64))
(declare-fun temp198_196 () (_ BitVec 64))
(declare-fun temp198_197 () (_ BitVec 64))
(declare-fun temp198_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_199 () (_ BitVec 64))
(declare-fun temp198_200 () (_ BitVec 64))
(declare-fun temp198_201 () (_ BitVec 64))
(declare-fun temp198_202 () (_ BitVec 64))
(declare-fun temp198_203 () (_ BitVec 64))
(declare-fun temp198_204 () (_ BitVec 64))
(declare-fun temp198_205 () (_ BitVec 64))
(declare-fun temp198_206 () (_ BitVec 64))
(declare-fun temp198_207 () (_ BitVec 64))
(declare-fun temp198_208 () (_ BitVec 64))
(declare-fun temp198_209 () (_ BitVec 64))
(declare-fun temp198_210 () (_ BitVec 64))
(declare-fun temp198_211 () (_ BitVec 64))
(declare-fun temp198_212 () (_ BitVec 64))
(declare-fun temp198_213 () (_ BitVec 64))
(declare-fun temp198_214 () (_ BitVec 64))
(declare-fun temp198_215 () (_ BitVec 64))
(declare-fun temp198_216 () (_ BitVec 64))
(declare-fun temp198_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp198_218 () (_ BitVec 64))
(declare-fun temp198_220 () (_ BitVec 64))
(declare-fun temp198_221 () (_ BitVec 64))
(declare-fun temp198_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp198_222 () (_ BitVec 64))
(declare-fun temp198_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp198_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp198_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp198_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp198_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp198_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp198_229 () (_ BitVec 64))
(declare-fun temp198_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp198_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp198_232 () (_ BitVec 64))
(declare-fun temp198_233 () (_ BitVec 64))
(declare-fun temp198_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp198_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp198_236 () (_ BitVec 64))
(declare-fun temp198_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp198_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp198_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp198_241 () (_ BitVec 64))
(declare-fun temp198_240 () (_ BitVec 64))
(declare-fun temp198_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp198_243 () (_ BitVec 64))
(declare-fun temp198_244 () (_ BitVec 64))
(declare-fun temp198_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp198_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp198_247 () (_ BitVec 64))
(declare-fun temp198_248 () (_ BitVec 64))
(assert (= temp198_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp198_1)))
(assert (= temp198_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp198_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_3 #x0000000000000000))
(assert (= var79869 temp198_3))
(assert (= temp198_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp198_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_5 #x0000000000000000))
(assert (= var79914 temp198_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp198_6 #x0000000000000000))
(assert (= temp198_7 temp198_6))
(assert (= temp198_8 (select ARGNAME_padding_NAMEEND_VAL temp198_7)))
(assert (= temp198_9 #x0000000000000001))
(assert (= temp198_10 temp198_9))
(assert (= temp198_11 (select ARGNAME_padding_NAMEEND_VAL temp198_10)))
(assert (= temp198_12 #x0000000000000002))
(assert (= temp198_13 temp198_12))
(assert (= temp198_14 (select ARGNAME_padding_NAMEEND_VAL temp198_13)))
(assert (= temp198_15 #x0000000000000003))
(assert (= temp198_16 temp198_15))
(assert (= temp198_17 (select ARGNAME_padding_NAMEEND_VAL temp198_16)))
(assert (= temp198_18 #x0000000000000004))
(assert (= temp198_19 temp198_18))
(assert (= temp198_20 (select ARGNAME_padding_NAMEEND_VAL temp198_19)))
(assert (= temp198_21 #x0000000000000005))
(assert (= temp198_22 temp198_21))
(assert (= temp198_23 (select ARGNAME_padding_NAMEEND_VAL temp198_22)))
(assert (= temp198_24 #x0000000000000000))
(assert (= temp198_25 #x0000000000000000))
(assert (= temp198_26 temp198_25))
(assert (= temp198_27 (select ARGNAME_padding_NAMEEND_VAL temp198_26)))
(assert (= temp198_28 #x0000000000000000))
(assert (= temp198_29 #x0000000000000001))
(assert (= temp198_30 temp198_29))
(assert (= temp198_31 (select ARGNAME_padding_NAMEEND_VAL temp198_30)))
(assert (= temp198_32 #x0000000000000000))
(assert (= temp198_33 #x0000000000000002))
(assert (= temp198_34 temp198_33))
(assert (= temp198_35 (select ARGNAME_padding_NAMEEND_VAL temp198_34)))
(assert (= temp198_36 #x0000000000000000))
(assert (= temp198_37 #x0000000000000003))
(assert (= temp198_38 temp198_37))
(assert (= temp198_39 (select ARGNAME_padding_NAMEEND_VAL temp198_38)))
(assert (= temp198_40 #x0000000000000000))
(assert (= temp198_41 #x0000000000000004))
(assert (= temp198_42 temp198_41))
(assert (= temp198_43 (select ARGNAME_padding_NAMEEND_VAL temp198_42)))
(assert (= temp198_44 #x0000000000000000))
(assert (= temp198_45 #x0000000000000005))
(assert (= temp198_46 temp198_45))
(assert (= temp198_47 (select ARGNAME_padding_NAMEEND_VAL temp198_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp198_27 temp198_24)
             (bvslt temp198_31 temp198_28)
             (bvslt temp198_35 temp198_32)
             (bvslt temp198_39 temp198_36)
             (bvslt temp198_43 temp198_40)
             (bvslt temp198_47 temp198_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_48 #x0000000000000000))
(assert (= var1322786 temp198_48))
(assert (= temp198_49 #x0000000000000000))
(assert (= temp198_50 temp198_49))
(assert (= temp198_51 (select ARGNAME_output_padding_NAMEEND_VAL temp198_50)))
(assert (= temp198_52 #x0000000000000001))
(assert (= temp198_53 temp198_52))
(assert (= temp198_54 (select ARGNAME_output_padding_NAMEEND_VAL temp198_53)))
(assert (= temp198_55 #x0000000000000002))
(assert (= temp198_56 temp198_55))
(assert (= temp198_57 (select ARGNAME_output_padding_NAMEEND_VAL temp198_56)))
(assert (= temp198_58 #x0000000000000003))
(assert (= temp198_59 temp198_58))
(assert (= temp198_60 (select ARGNAME_output_padding_NAMEEND_VAL temp198_59)))
(assert (= temp198_61 #x0000000000000004))
(assert (= temp198_62 temp198_61))
(assert (= temp198_63 (select ARGNAME_output_padding_NAMEEND_VAL temp198_62)))
(assert (= temp198_64 #x0000000000000005))
(assert (= temp198_65 temp198_64))
(assert (= temp198_66 (select ARGNAME_output_padding_NAMEEND_VAL temp198_65)))
(assert (= temp198_67 #x0000000000000000))
(assert (= temp198_68 #x0000000000000000))
(assert (= temp198_69 temp198_68))
(assert (= temp198_70 (select ARGNAME_output_padding_NAMEEND_VAL temp198_69)))
(assert (= temp198_71 #x0000000000000000))
(assert (= temp198_72 #x0000000000000001))
(assert (= temp198_73 temp198_72))
(assert (= temp198_74 (select ARGNAME_output_padding_NAMEEND_VAL temp198_73)))
(assert (= temp198_75 #x0000000000000000))
(assert (= temp198_76 #x0000000000000002))
(assert (= temp198_77 temp198_76))
(assert (= temp198_78 (select ARGNAME_output_padding_NAMEEND_VAL temp198_77)))
(assert (= temp198_79 #x0000000000000000))
(assert (= temp198_80 #x0000000000000003))
(assert (= temp198_81 temp198_80))
(assert (= temp198_82 (select ARGNAME_output_padding_NAMEEND_VAL temp198_81)))
(assert (= temp198_83 #x0000000000000000))
(assert (= temp198_84 #x0000000000000004))
(assert (= temp198_85 temp198_84))
(assert (= temp198_86 (select ARGNAME_output_padding_NAMEEND_VAL temp198_85)))
(assert (= temp198_87 #x0000000000000000))
(assert (= temp198_88 #x0000000000000005))
(assert (= temp198_89 temp198_88))
(assert (= temp198_90 (select ARGNAME_output_padding_NAMEEND_VAL temp198_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp198_70 temp198_67)
             (bvslt temp198_74 temp198_71)
             (bvslt temp198_78 temp198_75)
             (bvslt temp198_82 temp198_79)
             (bvslt temp198_86 temp198_83)
             (bvslt temp198_90 temp198_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_91 #x0000000000000000))
(assert (= var1322797 temp198_91))
(assert (= temp198_92 #x0000000000000000))
(assert (= temp198_93 temp198_92))
(assert (= temp198_94 (select ARGNAME_stride_NAMEEND_VAL temp198_93)))
(assert (= temp198_95 #x0000000000000001))
(assert (= temp198_96 temp198_95))
(assert (= temp198_97 (select ARGNAME_stride_NAMEEND_VAL temp198_96)))
(assert (= temp198_98 #x0000000000000002))
(assert (= temp198_99 temp198_98))
(assert (= temp198_100 (select ARGNAME_stride_NAMEEND_VAL temp198_99)))
(assert (= temp198_101 #x0000000000000003))
(assert (= temp198_102 temp198_101))
(assert (= temp198_103 (select ARGNAME_stride_NAMEEND_VAL temp198_102)))
(assert (= temp198_104 #x0000000000000004))
(assert (= temp198_105 temp198_104))
(assert (= temp198_106 (select ARGNAME_stride_NAMEEND_VAL temp198_105)))
(assert (= temp198_107 #x0000000000000005))
(assert (= temp198_108 temp198_107))
(assert (= temp198_109 (select ARGNAME_stride_NAMEEND_VAL temp198_108)))
(assert (= temp198_110 #x0000000000000000))
(assert (= temp198_111 #x0000000000000000))
(assert (= temp198_112 temp198_111))
(assert (= temp198_113 (select ARGNAME_stride_NAMEEND_VAL temp198_112)))
(assert (= temp198_114 #x0000000000000000))
(assert (= temp198_115 #x0000000000000001))
(assert (= temp198_116 temp198_115))
(assert (= temp198_117 (select ARGNAME_stride_NAMEEND_VAL temp198_116)))
(assert (= temp198_118 #x0000000000000000))
(assert (= temp198_119 #x0000000000000002))
(assert (= temp198_120 temp198_119))
(assert (= temp198_121 (select ARGNAME_stride_NAMEEND_VAL temp198_120)))
(assert (= temp198_122 #x0000000000000000))
(assert (= temp198_123 #x0000000000000003))
(assert (= temp198_124 temp198_123))
(assert (= temp198_125 (select ARGNAME_stride_NAMEEND_VAL temp198_124)))
(assert (= temp198_126 #x0000000000000000))
(assert (= temp198_127 #x0000000000000004))
(assert (= temp198_128 temp198_127))
(assert (= temp198_129 (select ARGNAME_stride_NAMEEND_VAL temp198_128)))
(assert (= temp198_130 #x0000000000000000))
(assert (= temp198_131 #x0000000000000005))
(assert (= temp198_132 temp198_131))
(assert (= temp198_133 (select ARGNAME_stride_NAMEEND_VAL temp198_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp198_113 temp198_110)
             (bvsle temp198_117 temp198_114)
             (bvsle temp198_121 temp198_118)
             (bvsle temp198_125 temp198_122)
             (bvsle temp198_129 temp198_126)
             (bvsle temp198_133 temp198_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_134 #x0000000000000000))
(assert (= var1322807 temp198_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_135 #x0000000000000001))
(assert (= var1322819 temp198_135))
(assert (= temp198_136 #x0000000000000000))
(assert (= var1310898 temp198_136))
(assert (= temp198_137 #x0000000000000000))
(assert (= temp198_138 temp198_137))
(assert (= temp198_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_138)))
(assert (= temp198_140 #x0000000000000001))
(assert (= temp198_141 temp198_140))
(assert (= temp198_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_141)))
(assert (= temp198_143 #x0000000000000002))
(assert (= temp198_144 temp198_143))
(assert (= temp198_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_144)))
(assert (= temp198_146 #x0000000000000003))
(assert (= temp198_147 temp198_146))
(assert (= temp198_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_147)))
(assert (= temp198_149 #x0000000000000004))
(assert (= temp198_150 temp198_149))
(assert (= temp198_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_150)))
(assert (= temp198_152 #x0000000000000005))
(assert (= temp198_153 temp198_152))
(assert (= temp198_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_153)))
(assert (= temp198_156 var1310898))
(assert (= temp198_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_156)))
(assert (= temp198_155 temp198_157))
(assert (= var1322852
   (ite (bvslt temp198_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_158 #x0000000000000000))
(assert (= var1322852 temp198_158))
(assert (= temp198_159 #x0000000000000000))
(assert (= var1310898 temp198_159))
(assert (= temp198_161 var1310898))
(assert (= temp198_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_161)))
(assert (= temp198_160 temp198_162))
(assert (= var1322874 (bvsmod temp198_160 ARGNAME_groups_NAMEEND)))
(assert (= temp198_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp198_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_164 #x0000000000000001))
(assert (= var1322875 temp198_164))
(assert (= temp198_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp198_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_166 #x0000000000000001))
(assert (= var1322895 temp198_166))
(assert (= temp198_167 #x0000000000000001))
(assert (= var1311786 temp198_167))
(assert (= temp198_168 #x0000000000000000))
(assert (= temp198_169 temp198_168))
(assert (= temp198_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp198_169)))
(assert (= temp198_171 #x0000000000000001))
(assert (= temp198_172 temp198_171))
(assert (= temp198_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp198_172)))
(assert (= temp198_174 #x0000000000000002))
(assert (= temp198_175 temp198_174))
(assert (= temp198_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp198_175)))
(assert (= temp198_177 #x0000000000000003))
(assert (= temp198_178 temp198_177))
(assert (= temp198_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp198_178)))
(assert (= temp198_180 #x0000000000000004))
(assert (= temp198_181 temp198_180))
(assert (= temp198_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp198_181)))
(assert (= temp198_183 #x0000000000000005))
(assert (= temp198_184 temp198_183))
(assert (= temp198_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp198_184)))
(assert (= temp198_186 #x0000000000000000))
(assert (= temp198_187
   (ite (bvslt var1311786 temp198_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp198_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp198_187)))
(assert (= var1322903 temp198_188))
(assert (bvslt (ite (bvslt var1311786 temp198_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp198_189 #x0000000000000001))
(assert (= var1311786 temp198_189))
(assert (= temp198_191 var1311786))
(assert (= temp198_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_191)))
(assert (= temp198_190 temp198_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp198_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_193 #x0000000000000001))
(assert (= var1322908 temp198_193))
(assert (= temp198_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp198_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_195 #x0000000000000001))
(assert (= var1322975 temp198_195))
(assert (= temp198_196 #x0000000000000000))
(assert (= var1310898 temp198_196))
(assert (= temp198_197 #x0000000000000000))
(assert (= temp198_198 temp198_197))
(assert (= temp198_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp198_198)))
(assert (= temp198_200 #x0000000000000001))
(assert (= temp198_201 temp198_200))
(assert (= temp198_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp198_201)))
(assert (= temp198_203 #x0000000000000002))
(assert (= temp198_204 temp198_203))
(assert (= temp198_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp198_204)))
(assert (= temp198_206 #x0000000000000003))
(assert (= temp198_207 temp198_206))
(assert (= temp198_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp198_207)))
(assert (= temp198_209 #x0000000000000004))
(assert (= temp198_210 temp198_209))
(assert (= temp198_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp198_210)))
(assert (= temp198_212 #x0000000000000005))
(assert (= temp198_213 temp198_212))
(assert (= temp198_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp198_213)))
(assert (= temp198_215 #x0000000000000000))
(assert (= temp198_216
   (ite (bvslt var1310898 temp198_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp198_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp198_216)))
(assert (= var1322977 temp198_217))
(assert (bvslt (ite (bvslt var1310898 temp198_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp198_218 #x0000000000000000))
(assert (= var1310898 temp198_218))
(assert (= temp198_220 var1310898))
(assert (= temp198_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_220)))
(assert (= temp198_219 temp198_221))
(assert (= var1322980
   (ite (= var1322977 temp198_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_222 #x0000000000000001))
(assert (= var1322980 temp198_222))
(assert (= temp198_223 #x0000000000000002))
(assert (= var1848169 temp198_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp198_225 #x0000000000000001))
(assert (= var1323065 temp198_225))
(assert (= temp198_226 #x0000000000000001))
(assert (= var3486735 temp198_226))
(assert (= temp198_227 #x0000000000000001))
(assert (= var3814415 temp198_227))
(assert (= temp198_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp198_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_229 #x0000000000000001))
(assert (= var79986 temp198_229))
(assert (= temp198_230 #x0000000000000001))
(assert (= var80116 temp198_230))
(assert (= var4796905 var80116))
(assert (= temp198_231 #x0000000000000000))
(assert (= var4784306 temp198_231))
(assert (= temp198_232 #x0000000000000000))
(assert (= temp198_233
   (ite (bvslt var4784306 temp198_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp198_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp198_233)))
(assert (= var4796924 temp198_234))
(assert (bvslt (ite (bvslt var4784306 temp198_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp198_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp198_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_236 #x0000000000000001))
(assert (= var4796925 temp198_236))
(assert (= temp198_237 #x0000000000000000))
(assert (= var4996927 temp198_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp198_238 #x0000000000000002))
(assert (= var5125763 temp198_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_239 #x0000000000000000))
(assert (= var5191324 temp198_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp198_241 #xffffffffffffffff))
(assert (= temp198_240 temp198_241))
(assert (= temp198_242 #x0000000000000001))
(assert (= var66602 temp198_242))
(assert (= temp198_243 #x0000000000000000))
(assert (= temp198_244
   (ite (bvslt var66602 temp198_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp198_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp198_244)))
(assert (= var80523 temp198_245))
(assert (bvslt (ite (bvslt var66602 temp198_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp198_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp198_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_247 #x0000000000000000))
(assert (= var80524 temp198_247))
(assert (= temp198_248 #x0000000000000001))
(assert (= var79986 temp198_248))
(model-add temp198_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp198_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp198_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






