(declare-fun temp688_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp688_2 () (_ BitVec 64))
(declare-fun temp688_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp688_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp688_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp688_6 () (_ BitVec 64))
(declare-fun temp688_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp688_8 () (_ BitVec 64))
(declare-fun temp688_9 () (_ BitVec 64))
(declare-fun temp688_10 () (_ BitVec 64))
(declare-fun temp688_11 () (_ BitVec 64))
(declare-fun temp688_12 () (_ BitVec 64))
(declare-fun temp688_13 () (_ BitVec 64))
(declare-fun temp688_14 () (_ BitVec 64))
(declare-fun temp688_15 () (_ BitVec 64))
(declare-fun temp688_16 () (_ BitVec 64))
(declare-fun temp688_17 () (_ BitVec 64))
(declare-fun temp688_18 () (_ BitVec 64))
(declare-fun temp688_19 () (_ BitVec 64))
(declare-fun temp688_20 () (_ BitVec 64))
(declare-fun temp688_21 () (_ BitVec 64))
(declare-fun temp688_22 () (_ BitVec 64))
(declare-fun temp688_23 () (_ BitVec 64))
(declare-fun temp688_24 () (_ BitVec 64))
(declare-fun temp688_25 () (_ BitVec 64))
(declare-fun temp688_26 () (_ BitVec 64))
(declare-fun temp688_27 () (_ BitVec 64))
(declare-fun temp688_28 () (_ BitVec 64))
(declare-fun temp688_29 () (_ BitVec 64))
(declare-fun temp688_30 () (_ BitVec 64))
(declare-fun temp688_31 () (_ BitVec 64))
(declare-fun temp688_32 () (_ BitVec 64))
(declare-fun temp688_33 () (_ BitVec 64))
(declare-fun temp688_34 () (_ BitVec 64))
(declare-fun temp688_35 () (_ BitVec 64))
(declare-fun temp688_36 () (_ BitVec 64))
(declare-fun temp688_37 () (_ BitVec 64))
(declare-fun temp688_38 () (_ BitVec 64))
(declare-fun temp688_39 () (_ BitVec 64))
(declare-fun temp688_40 () (_ BitVec 64))
(declare-fun temp688_41 () (_ BitVec 64))
(declare-fun temp688_42 () (_ BitVec 64))
(declare-fun temp688_43 () (_ BitVec 64))
(declare-fun temp688_44 () (_ BitVec 64))
(declare-fun temp688_45 () (_ BitVec 64))
(declare-fun temp688_46 () (_ BitVec 64))
(declare-fun temp688_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp688_48 () (_ BitVec 64))
(declare-fun temp688_49 () (_ BitVec 64))
(declare-fun temp688_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp688_51 () (_ BitVec 64))
(declare-fun temp688_52 () (_ BitVec 64))
(declare-fun temp688_53 () (_ BitVec 64))
(declare-fun temp688_54 () (_ BitVec 64))
(declare-fun temp688_55 () (_ BitVec 64))
(declare-fun temp688_56 () (_ BitVec 64))
(declare-fun temp688_57 () (_ BitVec 64))
(declare-fun temp688_58 () (_ BitVec 64))
(declare-fun temp688_59 () (_ BitVec 64))
(declare-fun temp688_60 () (_ BitVec 64))
(declare-fun temp688_61 () (_ BitVec 64))
(declare-fun temp688_62 () (_ BitVec 64))
(declare-fun temp688_63 () (_ BitVec 64))
(declare-fun temp688_64 () (_ BitVec 64))
(declare-fun temp688_65 () (_ BitVec 64))
(declare-fun temp688_66 () (_ BitVec 64))
(declare-fun temp688_67 () (_ BitVec 64))
(declare-fun temp688_68 () (_ BitVec 64))
(declare-fun temp688_69 () (_ BitVec 64))
(declare-fun temp688_70 () (_ BitVec 64))
(declare-fun temp688_71 () (_ BitVec 64))
(declare-fun temp688_72 () (_ BitVec 64))
(declare-fun temp688_73 () (_ BitVec 64))
(declare-fun temp688_74 () (_ BitVec 64))
(declare-fun temp688_75 () (_ BitVec 64))
(declare-fun temp688_76 () (_ BitVec 64))
(declare-fun temp688_77 () (_ BitVec 64))
(declare-fun temp688_78 () (_ BitVec 64))
(declare-fun temp688_79 () (_ BitVec 64))
(declare-fun temp688_80 () (_ BitVec 64))
(declare-fun temp688_81 () (_ BitVec 64))
(declare-fun temp688_82 () (_ BitVec 64))
(declare-fun temp688_83 () (_ BitVec 64))
(declare-fun temp688_84 () (_ BitVec 64))
(declare-fun temp688_85 () (_ BitVec 64))
(declare-fun temp688_86 () (_ BitVec 64))
(declare-fun temp688_87 () (_ BitVec 64))
(declare-fun temp688_88 () (_ BitVec 64))
(declare-fun temp688_89 () (_ BitVec 64))
(declare-fun temp688_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp688_91 () (_ BitVec 64))
(declare-fun temp688_92 () (_ BitVec 64))
(declare-fun temp688_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp688_94 () (_ BitVec 64))
(declare-fun temp688_95 () (_ BitVec 64))
(declare-fun temp688_96 () (_ BitVec 64))
(declare-fun temp688_97 () (_ BitVec 64))
(declare-fun temp688_98 () (_ BitVec 64))
(declare-fun temp688_99 () (_ BitVec 64))
(declare-fun temp688_100 () (_ BitVec 64))
(declare-fun temp688_101 () (_ BitVec 64))
(declare-fun temp688_102 () (_ BitVec 64))
(declare-fun temp688_103 () (_ BitVec 64))
(declare-fun temp688_104 () (_ BitVec 64))
(declare-fun temp688_105 () (_ BitVec 64))
(declare-fun temp688_106 () (_ BitVec 64))
(declare-fun temp688_107 () (_ BitVec 64))
(declare-fun temp688_108 () (_ BitVec 64))
(declare-fun temp688_109 () (_ BitVec 64))
(declare-fun temp688_110 () (_ BitVec 64))
(declare-fun temp688_111 () (_ BitVec 64))
(declare-fun temp688_112 () (_ BitVec 64))
(declare-fun temp688_113 () (_ BitVec 64))
(declare-fun temp688_114 () (_ BitVec 64))
(declare-fun temp688_115 () (_ BitVec 64))
(declare-fun temp688_116 () (_ BitVec 64))
(declare-fun temp688_117 () (_ BitVec 64))
(declare-fun temp688_118 () (_ BitVec 64))
(declare-fun temp688_119 () (_ BitVec 64))
(declare-fun temp688_120 () (_ BitVec 64))
(declare-fun temp688_121 () (_ BitVec 64))
(declare-fun temp688_122 () (_ BitVec 64))
(declare-fun temp688_123 () (_ BitVec 64))
(declare-fun temp688_124 () (_ BitVec 64))
(declare-fun temp688_125 () (_ BitVec 64))
(declare-fun temp688_126 () (_ BitVec 64))
(declare-fun temp688_127 () (_ BitVec 64))
(declare-fun temp688_128 () (_ BitVec 64))
(declare-fun temp688_129 () (_ BitVec 64))
(declare-fun temp688_130 () (_ BitVec 64))
(declare-fun temp688_131 () (_ BitVec 64))
(declare-fun temp688_132 () (_ BitVec 64))
(declare-fun temp688_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp688_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp688_135 () (_ BitVec 64))
(declare-fun temp688_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp688_137 () (_ BitVec 64))
(declare-fun temp688_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp688_139 () (_ BitVec 64))
(declare-fun temp688_140 () (_ BitVec 64))
(declare-fun temp688_141 () (_ BitVec 64))
(declare-fun temp688_142 () (_ BitVec 64))
(declare-fun temp688_143 () (_ BitVec 64))
(declare-fun temp688_144 () (_ BitVec 64))
(declare-fun temp688_145 () (_ BitVec 64))
(declare-fun temp688_146 () (_ BitVec 64))
(declare-fun temp688_147 () (_ BitVec 64))
(declare-fun temp688_148 () (_ BitVec 64))
(declare-fun temp688_149 () (_ BitVec 64))
(declare-fun temp688_150 () (_ BitVec 64))
(declare-fun temp688_151 () (_ BitVec 64))
(declare-fun temp688_152 () (_ BitVec 64))
(declare-fun temp688_153 () (_ BitVec 64))
(declare-fun temp688_154 () (_ BitVec 64))
(declare-fun temp688_156 () (_ BitVec 64))
(declare-fun temp688_157 () (_ BitVec 64))
(declare-fun temp688_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp688_158 () (_ BitVec 64))
(declare-fun temp688_159 () (_ BitVec 64))
(declare-fun temp688_161 () (_ BitVec 64))
(declare-fun temp688_162 () (_ BitVec 64))
(declare-fun temp688_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp688_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp688_164 () (_ BitVec 64))
(declare-fun temp688_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp688_166 () (_ BitVec 64))
(declare-fun temp688_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp688_168 () (_ BitVec 64))
(declare-fun temp688_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp688_170 () (_ BitVec 64))
(declare-fun temp688_171 () (_ BitVec 64))
(declare-fun temp688_172 () (_ BitVec 64))
(declare-fun temp688_173 () (_ BitVec 64))
(declare-fun temp688_174 () (_ BitVec 64))
(declare-fun temp688_175 () (_ BitVec 64))
(declare-fun temp688_176 () (_ BitVec 64))
(declare-fun temp688_177 () (_ BitVec 64))
(declare-fun temp688_178 () (_ BitVec 64))
(declare-fun temp688_179 () (_ BitVec 64))
(declare-fun temp688_180 () (_ BitVec 64))
(declare-fun temp688_181 () (_ BitVec 64))
(declare-fun temp688_182 () (_ BitVec 64))
(declare-fun temp688_183 () (_ BitVec 64))
(declare-fun temp688_184 () (_ BitVec 64))
(declare-fun temp688_185 () (_ BitVec 64))
(declare-fun temp688_186 () (_ BitVec 64))
(declare-fun temp688_187 () (_ BitVec 64))
(declare-fun temp688_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp688_189 () (_ BitVec 64))
(declare-fun temp688_191 () (_ BitVec 64))
(declare-fun temp688_192 () (_ BitVec 64))
(declare-fun temp688_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp688_193 () (_ BitVec 64))
(declare-fun temp688_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp688_195 () (_ BitVec 64))
(declare-fun temp688_196 () (_ BitVec 64))
(declare-fun temp688_197 () (_ BitVec 64))
(declare-fun temp688_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp688_199 () (_ BitVec 64))
(declare-fun temp688_200 () (_ BitVec 64))
(declare-fun temp688_201 () (_ BitVec 64))
(declare-fun temp688_202 () (_ BitVec 64))
(declare-fun temp688_203 () (_ BitVec 64))
(declare-fun temp688_204 () (_ BitVec 64))
(declare-fun temp688_205 () (_ BitVec 64))
(declare-fun temp688_206 () (_ BitVec 64))
(declare-fun temp688_207 () (_ BitVec 64))
(declare-fun temp688_208 () (_ BitVec 64))
(declare-fun temp688_209 () (_ BitVec 64))
(declare-fun temp688_210 () (_ BitVec 64))
(declare-fun temp688_211 () (_ BitVec 64))
(declare-fun temp688_212 () (_ BitVec 64))
(declare-fun temp688_213 () (_ BitVec 64))
(declare-fun temp688_214 () (_ BitVec 64))
(declare-fun temp688_215 () (_ BitVec 64))
(declare-fun temp688_216 () (_ BitVec 64))
(declare-fun temp688_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp688_218 () (_ BitVec 64))
(declare-fun temp688_220 () (_ BitVec 64))
(declare-fun temp688_221 () (_ BitVec 64))
(declare-fun temp688_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp688_222 () (_ BitVec 64))
(declare-fun temp688_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp688_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp688_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp688_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp688_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp688_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp688_229 () (_ BitVec 64))
(declare-fun temp688_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp688_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp688_232 () (_ BitVec 64))
(declare-fun temp688_233 () (_ BitVec 64))
(declare-fun temp688_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp688_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp688_236 () (_ BitVec 64))
(declare-fun temp688_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp688_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp688_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp688_241 () (_ BitVec 64))
(declare-fun temp688_240 () (_ BitVec 64))
(declare-fun temp688_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp688_243 () (_ BitVec 64))
(declare-fun temp688_244 () (_ BitVec 64))
(declare-fun temp688_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp688_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp688_247 () (_ BitVec 64))
(declare-fun temp688_249 () (_ BitVec 64))
(declare-fun temp688_248 () (_ BitVec 64))
(declare-fun temp688_250 () (_ BitVec 64))
(assert (= temp688_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp688_1)))
(assert (= temp688_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp688_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_3 #x0000000000000000))
(assert (= var79869 temp688_3))
(assert (= temp688_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp688_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_5 #x0000000000000000))
(assert (= var79914 temp688_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp688_6 #x0000000000000000))
(assert (= temp688_7 temp688_6))
(assert (= temp688_8 (select ARGNAME_padding_NAMEEND_VAL temp688_7)))
(assert (= temp688_9 #x0000000000000001))
(assert (= temp688_10 temp688_9))
(assert (= temp688_11 (select ARGNAME_padding_NAMEEND_VAL temp688_10)))
(assert (= temp688_12 #x0000000000000002))
(assert (= temp688_13 temp688_12))
(assert (= temp688_14 (select ARGNAME_padding_NAMEEND_VAL temp688_13)))
(assert (= temp688_15 #x0000000000000003))
(assert (= temp688_16 temp688_15))
(assert (= temp688_17 (select ARGNAME_padding_NAMEEND_VAL temp688_16)))
(assert (= temp688_18 #x0000000000000004))
(assert (= temp688_19 temp688_18))
(assert (= temp688_20 (select ARGNAME_padding_NAMEEND_VAL temp688_19)))
(assert (= temp688_21 #x0000000000000005))
(assert (= temp688_22 temp688_21))
(assert (= temp688_23 (select ARGNAME_padding_NAMEEND_VAL temp688_22)))
(assert (= temp688_24 #x0000000000000000))
(assert (= temp688_25 #x0000000000000000))
(assert (= temp688_26 temp688_25))
(assert (= temp688_27 (select ARGNAME_padding_NAMEEND_VAL temp688_26)))
(assert (= temp688_28 #x0000000000000000))
(assert (= temp688_29 #x0000000000000001))
(assert (= temp688_30 temp688_29))
(assert (= temp688_31 (select ARGNAME_padding_NAMEEND_VAL temp688_30)))
(assert (= temp688_32 #x0000000000000000))
(assert (= temp688_33 #x0000000000000002))
(assert (= temp688_34 temp688_33))
(assert (= temp688_35 (select ARGNAME_padding_NAMEEND_VAL temp688_34)))
(assert (= temp688_36 #x0000000000000000))
(assert (= temp688_37 #x0000000000000003))
(assert (= temp688_38 temp688_37))
(assert (= temp688_39 (select ARGNAME_padding_NAMEEND_VAL temp688_38)))
(assert (= temp688_40 #x0000000000000000))
(assert (= temp688_41 #x0000000000000004))
(assert (= temp688_42 temp688_41))
(assert (= temp688_43 (select ARGNAME_padding_NAMEEND_VAL temp688_42)))
(assert (= temp688_44 #x0000000000000000))
(assert (= temp688_45 #x0000000000000005))
(assert (= temp688_46 temp688_45))
(assert (= temp688_47 (select ARGNAME_padding_NAMEEND_VAL temp688_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp688_27 temp688_24)
             (bvslt temp688_31 temp688_28)
             (bvslt temp688_35 temp688_32)
             (bvslt temp688_39 temp688_36)
             (bvslt temp688_43 temp688_40)
             (bvslt temp688_47 temp688_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_48 #x0000000000000000))
(assert (= var1322786 temp688_48))
(assert (= temp688_49 #x0000000000000000))
(assert (= temp688_50 temp688_49))
(assert (= temp688_51 (select ARGNAME_output_padding_NAMEEND_VAL temp688_50)))
(assert (= temp688_52 #x0000000000000001))
(assert (= temp688_53 temp688_52))
(assert (= temp688_54 (select ARGNAME_output_padding_NAMEEND_VAL temp688_53)))
(assert (= temp688_55 #x0000000000000002))
(assert (= temp688_56 temp688_55))
(assert (= temp688_57 (select ARGNAME_output_padding_NAMEEND_VAL temp688_56)))
(assert (= temp688_58 #x0000000000000003))
(assert (= temp688_59 temp688_58))
(assert (= temp688_60 (select ARGNAME_output_padding_NAMEEND_VAL temp688_59)))
(assert (= temp688_61 #x0000000000000004))
(assert (= temp688_62 temp688_61))
(assert (= temp688_63 (select ARGNAME_output_padding_NAMEEND_VAL temp688_62)))
(assert (= temp688_64 #x0000000000000005))
(assert (= temp688_65 temp688_64))
(assert (= temp688_66 (select ARGNAME_output_padding_NAMEEND_VAL temp688_65)))
(assert (= temp688_67 #x0000000000000000))
(assert (= temp688_68 #x0000000000000000))
(assert (= temp688_69 temp688_68))
(assert (= temp688_70 (select ARGNAME_output_padding_NAMEEND_VAL temp688_69)))
(assert (= temp688_71 #x0000000000000000))
(assert (= temp688_72 #x0000000000000001))
(assert (= temp688_73 temp688_72))
(assert (= temp688_74 (select ARGNAME_output_padding_NAMEEND_VAL temp688_73)))
(assert (= temp688_75 #x0000000000000000))
(assert (= temp688_76 #x0000000000000002))
(assert (= temp688_77 temp688_76))
(assert (= temp688_78 (select ARGNAME_output_padding_NAMEEND_VAL temp688_77)))
(assert (= temp688_79 #x0000000000000000))
(assert (= temp688_80 #x0000000000000003))
(assert (= temp688_81 temp688_80))
(assert (= temp688_82 (select ARGNAME_output_padding_NAMEEND_VAL temp688_81)))
(assert (= temp688_83 #x0000000000000000))
(assert (= temp688_84 #x0000000000000004))
(assert (= temp688_85 temp688_84))
(assert (= temp688_86 (select ARGNAME_output_padding_NAMEEND_VAL temp688_85)))
(assert (= temp688_87 #x0000000000000000))
(assert (= temp688_88 #x0000000000000005))
(assert (= temp688_89 temp688_88))
(assert (= temp688_90 (select ARGNAME_output_padding_NAMEEND_VAL temp688_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp688_70 temp688_67)
             (bvslt temp688_74 temp688_71)
             (bvslt temp688_78 temp688_75)
             (bvslt temp688_82 temp688_79)
             (bvslt temp688_86 temp688_83)
             (bvslt temp688_90 temp688_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_91 #x0000000000000000))
(assert (= var1322797 temp688_91))
(assert (= temp688_92 #x0000000000000000))
(assert (= temp688_93 temp688_92))
(assert (= temp688_94 (select ARGNAME_stride_NAMEEND_VAL temp688_93)))
(assert (= temp688_95 #x0000000000000001))
(assert (= temp688_96 temp688_95))
(assert (= temp688_97 (select ARGNAME_stride_NAMEEND_VAL temp688_96)))
(assert (= temp688_98 #x0000000000000002))
(assert (= temp688_99 temp688_98))
(assert (= temp688_100 (select ARGNAME_stride_NAMEEND_VAL temp688_99)))
(assert (= temp688_101 #x0000000000000003))
(assert (= temp688_102 temp688_101))
(assert (= temp688_103 (select ARGNAME_stride_NAMEEND_VAL temp688_102)))
(assert (= temp688_104 #x0000000000000004))
(assert (= temp688_105 temp688_104))
(assert (= temp688_106 (select ARGNAME_stride_NAMEEND_VAL temp688_105)))
(assert (= temp688_107 #x0000000000000005))
(assert (= temp688_108 temp688_107))
(assert (= temp688_109 (select ARGNAME_stride_NAMEEND_VAL temp688_108)))
(assert (= temp688_110 #x0000000000000000))
(assert (= temp688_111 #x0000000000000000))
(assert (= temp688_112 temp688_111))
(assert (= temp688_113 (select ARGNAME_stride_NAMEEND_VAL temp688_112)))
(assert (= temp688_114 #x0000000000000000))
(assert (= temp688_115 #x0000000000000001))
(assert (= temp688_116 temp688_115))
(assert (= temp688_117 (select ARGNAME_stride_NAMEEND_VAL temp688_116)))
(assert (= temp688_118 #x0000000000000000))
(assert (= temp688_119 #x0000000000000002))
(assert (= temp688_120 temp688_119))
(assert (= temp688_121 (select ARGNAME_stride_NAMEEND_VAL temp688_120)))
(assert (= temp688_122 #x0000000000000000))
(assert (= temp688_123 #x0000000000000003))
(assert (= temp688_124 temp688_123))
(assert (= temp688_125 (select ARGNAME_stride_NAMEEND_VAL temp688_124)))
(assert (= temp688_126 #x0000000000000000))
(assert (= temp688_127 #x0000000000000004))
(assert (= temp688_128 temp688_127))
(assert (= temp688_129 (select ARGNAME_stride_NAMEEND_VAL temp688_128)))
(assert (= temp688_130 #x0000000000000000))
(assert (= temp688_131 #x0000000000000005))
(assert (= temp688_132 temp688_131))
(assert (= temp688_133 (select ARGNAME_stride_NAMEEND_VAL temp688_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp688_113 temp688_110)
             (bvsle temp688_117 temp688_114)
             (bvsle temp688_121 temp688_118)
             (bvsle temp688_125 temp688_122)
             (bvsle temp688_129 temp688_126)
             (bvsle temp688_133 temp688_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_134 #x0000000000000000))
(assert (= var1322807 temp688_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_135 #x0000000000000001))
(assert (= var1322819 temp688_135))
(assert (= temp688_136 #x0000000000000000))
(assert (= var1310898 temp688_136))
(assert (= temp688_137 #x0000000000000000))
(assert (= temp688_138 temp688_137))
(assert (= temp688_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_138)))
(assert (= temp688_140 #x0000000000000001))
(assert (= temp688_141 temp688_140))
(assert (= temp688_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_141)))
(assert (= temp688_143 #x0000000000000002))
(assert (= temp688_144 temp688_143))
(assert (= temp688_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_144)))
(assert (= temp688_146 #x0000000000000003))
(assert (= temp688_147 temp688_146))
(assert (= temp688_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_147)))
(assert (= temp688_149 #x0000000000000004))
(assert (= temp688_150 temp688_149))
(assert (= temp688_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_150)))
(assert (= temp688_152 #x0000000000000005))
(assert (= temp688_153 temp688_152))
(assert (= temp688_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_153)))
(assert (= temp688_156 var1310898))
(assert (= temp688_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_156)))
(assert (= temp688_155 temp688_157))
(assert (= var1322852
   (ite (bvslt temp688_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_158 #x0000000000000000))
(assert (= var1322852 temp688_158))
(assert (= temp688_159 #x0000000000000000))
(assert (= var1310898 temp688_159))
(assert (= temp688_161 var1310898))
(assert (= temp688_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_161)))
(assert (= temp688_160 temp688_162))
(assert (= var1322874 (bvsmod temp688_160 ARGNAME_groups_NAMEEND)))
(assert (= temp688_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp688_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp688_164 #x0000000000000001))
(assert (= var1322875 temp688_164))
(assert (= temp688_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp688_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_166 #x0000000000000001))
(assert (= var1322895 temp688_166))
(assert (= temp688_167 #x0000000000000001))
(assert (= var1311786 temp688_167))
(assert (= temp688_168 #x0000000000000000))
(assert (= temp688_169 temp688_168))
(assert (= temp688_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp688_169)))
(assert (= temp688_171 #x0000000000000001))
(assert (= temp688_172 temp688_171))
(assert (= temp688_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp688_172)))
(assert (= temp688_174 #x0000000000000002))
(assert (= temp688_175 temp688_174))
(assert (= temp688_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp688_175)))
(assert (= temp688_177 #x0000000000000003))
(assert (= temp688_178 temp688_177))
(assert (= temp688_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp688_178)))
(assert (= temp688_180 #x0000000000000004))
(assert (= temp688_181 temp688_180))
(assert (= temp688_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp688_181)))
(assert (= temp688_183 #x0000000000000005))
(assert (= temp688_184 temp688_183))
(assert (= temp688_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp688_184)))
(assert (= temp688_186 #x0000000000000000))
(assert (= temp688_187
   (ite (bvslt var1311786 temp688_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp688_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp688_187)))
(assert (= var1322903 temp688_188))
(assert (bvslt (ite (bvslt var1311786 temp688_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp688_189 #x0000000000000001))
(assert (= var1311786 temp688_189))
(assert (= temp688_191 var1311786))
(assert (= temp688_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_191)))
(assert (= temp688_190 temp688_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp688_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp688_193 #x0000000000000001))
(assert (= var1322908 temp688_193))
(assert (= temp688_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp688_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_195 #x0000000000000001))
(assert (= var1322975 temp688_195))
(assert (= temp688_196 #x0000000000000000))
(assert (= var1310898 temp688_196))
(assert (= temp688_197 #x0000000000000000))
(assert (= temp688_198 temp688_197))
(assert (= temp688_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp688_198)))
(assert (= temp688_200 #x0000000000000001))
(assert (= temp688_201 temp688_200))
(assert (= temp688_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp688_201)))
(assert (= temp688_203 #x0000000000000002))
(assert (= temp688_204 temp688_203))
(assert (= temp688_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp688_204)))
(assert (= temp688_206 #x0000000000000003))
(assert (= temp688_207 temp688_206))
(assert (= temp688_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp688_207)))
(assert (= temp688_209 #x0000000000000004))
(assert (= temp688_210 temp688_209))
(assert (= temp688_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp688_210)))
(assert (= temp688_212 #x0000000000000005))
(assert (= temp688_213 temp688_212))
(assert (= temp688_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp688_213)))
(assert (= temp688_215 #x0000000000000000))
(assert (= temp688_216
   (ite (bvslt var1310898 temp688_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp688_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp688_216)))
(assert (= var1322977 temp688_217))
(assert (bvslt (ite (bvslt var1310898 temp688_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp688_218 #x0000000000000000))
(assert (= var1310898 temp688_218))
(assert (= temp688_220 var1310898))
(assert (= temp688_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp688_220)))
(assert (= temp688_219 temp688_221))
(assert (= var1322980
   (ite (= var1322977 temp688_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp688_222 #x0000000000000001))
(assert (= var1322980 temp688_222))
(assert (= temp688_223 #x0000000000000002))
(assert (= var1848169 temp688_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp688_225 #x0000000000000001))
(assert (= var1323065 temp688_225))
(assert (= temp688_226 #x0000000000000001))
(assert (= var3486735 temp688_226))
(assert (= temp688_227 #x0000000000000001))
(assert (= var3814415 temp688_227))
(assert (= temp688_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp688_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_229 #x0000000000000001))
(assert (= var79986 temp688_229))
(assert (= temp688_230 #x0000000000000001))
(assert (= var80116 temp688_230))
(assert (= var4796905 var80116))
(assert (= temp688_231 #x0000000000000000))
(assert (= var4784306 temp688_231))
(assert (= temp688_232 #x0000000000000000))
(assert (= temp688_233
   (ite (bvslt var4784306 temp688_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp688_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp688_233)))
(assert (= var4796924 temp688_234))
(assert (bvslt (ite (bvslt var4784306 temp688_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp688_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp688_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp688_236 #x0000000000000001))
(assert (= var4796925 temp688_236))
(assert (= temp688_237 #x0000000000000000))
(assert (= var4996927 temp688_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp688_238 #x0000000000000002))
(assert (= var5125763 temp688_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp688_239 #x0000000000000000))
(assert (= var5191324 temp688_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp688_241 #xffffffffffffffff))
(assert (= temp688_240 temp688_241))
(assert (= temp688_242 #x0000000000000001))
(assert (= var66602 temp688_242))
(assert (= temp688_243 #x0000000000000000))
(assert (= temp688_244
   (ite (bvslt var66602 temp688_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp688_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp688_244)))
(assert (= var80523 temp688_245))
(assert (bvslt (ite (bvslt var66602 temp688_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp688_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp688_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp688_247 #x0000000000000001))
(assert (= var80524 temp688_247))
(assert (= temp688_249 #xffffffffffffffff))
(assert (= temp688_248 temp688_249))
(assert (= temp688_250 #x0000000000000001))
(assert (= var79986 temp688_250))
(model-add temp688_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp688_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp688_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






