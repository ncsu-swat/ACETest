(declare-fun temp201_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp201_2 () (_ BitVec 64))
(declare-fun temp201_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp201_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp201_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp201_6 () (_ BitVec 64))
(declare-fun temp201_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp201_8 () (_ BitVec 64))
(declare-fun temp201_9 () (_ BitVec 64))
(declare-fun temp201_10 () (_ BitVec 64))
(declare-fun temp201_11 () (_ BitVec 64))
(declare-fun temp201_12 () (_ BitVec 64))
(declare-fun temp201_13 () (_ BitVec 64))
(declare-fun temp201_14 () (_ BitVec 64))
(declare-fun temp201_15 () (_ BitVec 64))
(declare-fun temp201_16 () (_ BitVec 64))
(declare-fun temp201_17 () (_ BitVec 64))
(declare-fun temp201_18 () (_ BitVec 64))
(declare-fun temp201_19 () (_ BitVec 64))
(declare-fun temp201_20 () (_ BitVec 64))
(declare-fun temp201_21 () (_ BitVec 64))
(declare-fun temp201_22 () (_ BitVec 64))
(declare-fun temp201_23 () (_ BitVec 64))
(declare-fun temp201_24 () (_ BitVec 64))
(declare-fun temp201_25 () (_ BitVec 64))
(declare-fun temp201_26 () (_ BitVec 64))
(declare-fun temp201_27 () (_ BitVec 64))
(declare-fun temp201_28 () (_ BitVec 64))
(declare-fun temp201_29 () (_ BitVec 64))
(declare-fun temp201_30 () (_ BitVec 64))
(declare-fun temp201_31 () (_ BitVec 64))
(declare-fun temp201_32 () (_ BitVec 64))
(declare-fun temp201_33 () (_ BitVec 64))
(declare-fun temp201_34 () (_ BitVec 64))
(declare-fun temp201_35 () (_ BitVec 64))
(declare-fun temp201_36 () (_ BitVec 64))
(declare-fun temp201_37 () (_ BitVec 64))
(declare-fun temp201_38 () (_ BitVec 64))
(declare-fun temp201_39 () (_ BitVec 64))
(declare-fun temp201_40 () (_ BitVec 64))
(declare-fun temp201_41 () (_ BitVec 64))
(declare-fun temp201_42 () (_ BitVec 64))
(declare-fun temp201_43 () (_ BitVec 64))
(declare-fun temp201_44 () (_ BitVec 64))
(declare-fun temp201_45 () (_ BitVec 64))
(declare-fun temp201_46 () (_ BitVec 64))
(declare-fun temp201_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp201_48 () (_ BitVec 64))
(declare-fun temp201_49 () (_ BitVec 64))
(declare-fun temp201_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp201_51 () (_ BitVec 64))
(declare-fun temp201_52 () (_ BitVec 64))
(declare-fun temp201_53 () (_ BitVec 64))
(declare-fun temp201_54 () (_ BitVec 64))
(declare-fun temp201_55 () (_ BitVec 64))
(declare-fun temp201_56 () (_ BitVec 64))
(declare-fun temp201_57 () (_ BitVec 64))
(declare-fun temp201_58 () (_ BitVec 64))
(declare-fun temp201_59 () (_ BitVec 64))
(declare-fun temp201_60 () (_ BitVec 64))
(declare-fun temp201_61 () (_ BitVec 64))
(declare-fun temp201_62 () (_ BitVec 64))
(declare-fun temp201_63 () (_ BitVec 64))
(declare-fun temp201_64 () (_ BitVec 64))
(declare-fun temp201_65 () (_ BitVec 64))
(declare-fun temp201_66 () (_ BitVec 64))
(declare-fun temp201_67 () (_ BitVec 64))
(declare-fun temp201_68 () (_ BitVec 64))
(declare-fun temp201_69 () (_ BitVec 64))
(declare-fun temp201_70 () (_ BitVec 64))
(declare-fun temp201_71 () (_ BitVec 64))
(declare-fun temp201_72 () (_ BitVec 64))
(declare-fun temp201_73 () (_ BitVec 64))
(declare-fun temp201_74 () (_ BitVec 64))
(declare-fun temp201_75 () (_ BitVec 64))
(declare-fun temp201_76 () (_ BitVec 64))
(declare-fun temp201_77 () (_ BitVec 64))
(declare-fun temp201_78 () (_ BitVec 64))
(declare-fun temp201_79 () (_ BitVec 64))
(declare-fun temp201_80 () (_ BitVec 64))
(declare-fun temp201_81 () (_ BitVec 64))
(declare-fun temp201_82 () (_ BitVec 64))
(declare-fun temp201_83 () (_ BitVec 64))
(declare-fun temp201_84 () (_ BitVec 64))
(declare-fun temp201_85 () (_ BitVec 64))
(declare-fun temp201_86 () (_ BitVec 64))
(declare-fun temp201_87 () (_ BitVec 64))
(declare-fun temp201_88 () (_ BitVec 64))
(declare-fun temp201_89 () (_ BitVec 64))
(declare-fun temp201_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp201_91 () (_ BitVec 64))
(declare-fun temp201_92 () (_ BitVec 64))
(declare-fun temp201_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp201_94 () (_ BitVec 64))
(declare-fun temp201_95 () (_ BitVec 64))
(declare-fun temp201_96 () (_ BitVec 64))
(declare-fun temp201_97 () (_ BitVec 64))
(declare-fun temp201_98 () (_ BitVec 64))
(declare-fun temp201_99 () (_ BitVec 64))
(declare-fun temp201_100 () (_ BitVec 64))
(declare-fun temp201_101 () (_ BitVec 64))
(declare-fun temp201_102 () (_ BitVec 64))
(declare-fun temp201_103 () (_ BitVec 64))
(declare-fun temp201_104 () (_ BitVec 64))
(declare-fun temp201_105 () (_ BitVec 64))
(declare-fun temp201_106 () (_ BitVec 64))
(declare-fun temp201_107 () (_ BitVec 64))
(declare-fun temp201_108 () (_ BitVec 64))
(declare-fun temp201_109 () (_ BitVec 64))
(declare-fun temp201_110 () (_ BitVec 64))
(declare-fun temp201_111 () (_ BitVec 64))
(declare-fun temp201_112 () (_ BitVec 64))
(declare-fun temp201_113 () (_ BitVec 64))
(declare-fun temp201_114 () (_ BitVec 64))
(declare-fun temp201_115 () (_ BitVec 64))
(declare-fun temp201_116 () (_ BitVec 64))
(declare-fun temp201_117 () (_ BitVec 64))
(declare-fun temp201_118 () (_ BitVec 64))
(declare-fun temp201_119 () (_ BitVec 64))
(declare-fun temp201_120 () (_ BitVec 64))
(declare-fun temp201_121 () (_ BitVec 64))
(declare-fun temp201_122 () (_ BitVec 64))
(declare-fun temp201_123 () (_ BitVec 64))
(declare-fun temp201_124 () (_ BitVec 64))
(declare-fun temp201_125 () (_ BitVec 64))
(declare-fun temp201_126 () (_ BitVec 64))
(declare-fun temp201_127 () (_ BitVec 64))
(declare-fun temp201_128 () (_ BitVec 64))
(declare-fun temp201_129 () (_ BitVec 64))
(declare-fun temp201_130 () (_ BitVec 64))
(declare-fun temp201_131 () (_ BitVec 64))
(declare-fun temp201_132 () (_ BitVec 64))
(declare-fun temp201_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp201_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp201_135 () (_ BitVec 64))
(declare-fun temp201_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp201_137 () (_ BitVec 64))
(declare-fun temp201_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp201_139 () (_ BitVec 64))
(declare-fun temp201_140 () (_ BitVec 64))
(declare-fun temp201_141 () (_ BitVec 64))
(declare-fun temp201_142 () (_ BitVec 64))
(declare-fun temp201_143 () (_ BitVec 64))
(declare-fun temp201_144 () (_ BitVec 64))
(declare-fun temp201_145 () (_ BitVec 64))
(declare-fun temp201_146 () (_ BitVec 64))
(declare-fun temp201_147 () (_ BitVec 64))
(declare-fun temp201_148 () (_ BitVec 64))
(declare-fun temp201_149 () (_ BitVec 64))
(declare-fun temp201_150 () (_ BitVec 64))
(declare-fun temp201_151 () (_ BitVec 64))
(declare-fun temp201_152 () (_ BitVec 64))
(declare-fun temp201_153 () (_ BitVec 64))
(declare-fun temp201_154 () (_ BitVec 64))
(declare-fun temp201_156 () (_ BitVec 64))
(declare-fun temp201_157 () (_ BitVec 64))
(declare-fun temp201_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp201_158 () (_ BitVec 64))
(declare-fun temp201_159 () (_ BitVec 64))
(declare-fun temp201_161 () (_ BitVec 64))
(declare-fun temp201_162 () (_ BitVec 64))
(declare-fun temp201_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp201_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp201_164 () (_ BitVec 64))
(declare-fun temp201_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp201_166 () (_ BitVec 64))
(declare-fun temp201_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp201_168 () (_ BitVec 64))
(declare-fun temp201_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp201_170 () (_ BitVec 64))
(declare-fun temp201_171 () (_ BitVec 64))
(declare-fun temp201_172 () (_ BitVec 64))
(declare-fun temp201_173 () (_ BitVec 64))
(declare-fun temp201_174 () (_ BitVec 64))
(declare-fun temp201_175 () (_ BitVec 64))
(declare-fun temp201_176 () (_ BitVec 64))
(declare-fun temp201_177 () (_ BitVec 64))
(declare-fun temp201_178 () (_ BitVec 64))
(declare-fun temp201_179 () (_ BitVec 64))
(declare-fun temp201_180 () (_ BitVec 64))
(declare-fun temp201_181 () (_ BitVec 64))
(declare-fun temp201_182 () (_ BitVec 64))
(declare-fun temp201_183 () (_ BitVec 64))
(declare-fun temp201_184 () (_ BitVec 64))
(declare-fun temp201_185 () (_ BitVec 64))
(declare-fun temp201_186 () (_ BitVec 64))
(declare-fun temp201_187 () (_ BitVec 64))
(declare-fun temp201_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp201_189 () (_ BitVec 64))
(declare-fun temp201_191 () (_ BitVec 64))
(declare-fun temp201_192 () (_ BitVec 64))
(declare-fun temp201_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp201_193 () (_ BitVec 64))
(declare-fun temp201_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp201_195 () (_ BitVec 64))
(declare-fun temp201_196 () (_ BitVec 64))
(declare-fun temp201_197 () (_ BitVec 64))
(declare-fun temp201_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp201_199 () (_ BitVec 64))
(declare-fun temp201_200 () (_ BitVec 64))
(declare-fun temp201_201 () (_ BitVec 64))
(declare-fun temp201_202 () (_ BitVec 64))
(declare-fun temp201_203 () (_ BitVec 64))
(declare-fun temp201_204 () (_ BitVec 64))
(declare-fun temp201_205 () (_ BitVec 64))
(declare-fun temp201_206 () (_ BitVec 64))
(declare-fun temp201_207 () (_ BitVec 64))
(declare-fun temp201_208 () (_ BitVec 64))
(declare-fun temp201_209 () (_ BitVec 64))
(declare-fun temp201_210 () (_ BitVec 64))
(declare-fun temp201_211 () (_ BitVec 64))
(declare-fun temp201_212 () (_ BitVec 64))
(declare-fun temp201_213 () (_ BitVec 64))
(declare-fun temp201_214 () (_ BitVec 64))
(declare-fun temp201_215 () (_ BitVec 64))
(declare-fun temp201_216 () (_ BitVec 64))
(declare-fun temp201_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp201_218 () (_ BitVec 64))
(declare-fun temp201_220 () (_ BitVec 64))
(declare-fun temp201_221 () (_ BitVec 64))
(declare-fun temp201_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp201_222 () (_ BitVec 64))
(declare-fun temp201_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp201_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp201_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp201_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp201_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp201_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp201_229 () (_ BitVec 64))
(declare-fun temp201_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp201_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp201_232 () (_ BitVec 64))
(declare-fun temp201_233 () (_ BitVec 64))
(declare-fun temp201_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp201_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp201_236 () (_ BitVec 64))
(declare-fun temp201_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp201_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp201_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp201_241 () (_ BitVec 64))
(declare-fun temp201_240 () (_ BitVec 64))
(declare-fun temp201_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp201_243 () (_ BitVec 64))
(declare-fun temp201_244 () (_ BitVec 64))
(declare-fun temp201_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp201_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp201_247 () (_ BitVec 64))
(declare-fun temp201_248 () (_ BitVec 64))
(assert (= temp201_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp201_1)))
(assert (= temp201_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp201_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_3 #x0000000000000000))
(assert (= var79869 temp201_3))
(assert (= temp201_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp201_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_5 #x0000000000000000))
(assert (= var79914 temp201_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp201_6 #x0000000000000000))
(assert (= temp201_7 temp201_6))
(assert (= temp201_8 (select ARGNAME_padding_NAMEEND_VAL temp201_7)))
(assert (= temp201_9 #x0000000000000001))
(assert (= temp201_10 temp201_9))
(assert (= temp201_11 (select ARGNAME_padding_NAMEEND_VAL temp201_10)))
(assert (= temp201_12 #x0000000000000002))
(assert (= temp201_13 temp201_12))
(assert (= temp201_14 (select ARGNAME_padding_NAMEEND_VAL temp201_13)))
(assert (= temp201_15 #x0000000000000003))
(assert (= temp201_16 temp201_15))
(assert (= temp201_17 (select ARGNAME_padding_NAMEEND_VAL temp201_16)))
(assert (= temp201_18 #x0000000000000004))
(assert (= temp201_19 temp201_18))
(assert (= temp201_20 (select ARGNAME_padding_NAMEEND_VAL temp201_19)))
(assert (= temp201_21 #x0000000000000005))
(assert (= temp201_22 temp201_21))
(assert (= temp201_23 (select ARGNAME_padding_NAMEEND_VAL temp201_22)))
(assert (= temp201_24 #x0000000000000000))
(assert (= temp201_25 #x0000000000000000))
(assert (= temp201_26 temp201_25))
(assert (= temp201_27 (select ARGNAME_padding_NAMEEND_VAL temp201_26)))
(assert (= temp201_28 #x0000000000000000))
(assert (= temp201_29 #x0000000000000001))
(assert (= temp201_30 temp201_29))
(assert (= temp201_31 (select ARGNAME_padding_NAMEEND_VAL temp201_30)))
(assert (= temp201_32 #x0000000000000000))
(assert (= temp201_33 #x0000000000000002))
(assert (= temp201_34 temp201_33))
(assert (= temp201_35 (select ARGNAME_padding_NAMEEND_VAL temp201_34)))
(assert (= temp201_36 #x0000000000000000))
(assert (= temp201_37 #x0000000000000003))
(assert (= temp201_38 temp201_37))
(assert (= temp201_39 (select ARGNAME_padding_NAMEEND_VAL temp201_38)))
(assert (= temp201_40 #x0000000000000000))
(assert (= temp201_41 #x0000000000000004))
(assert (= temp201_42 temp201_41))
(assert (= temp201_43 (select ARGNAME_padding_NAMEEND_VAL temp201_42)))
(assert (= temp201_44 #x0000000000000000))
(assert (= temp201_45 #x0000000000000005))
(assert (= temp201_46 temp201_45))
(assert (= temp201_47 (select ARGNAME_padding_NAMEEND_VAL temp201_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp201_27 temp201_24)
             (bvslt temp201_31 temp201_28)
             (bvslt temp201_35 temp201_32)
             (bvslt temp201_39 temp201_36)
             (bvslt temp201_43 temp201_40)
             (bvslt temp201_47 temp201_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_48 #x0000000000000000))
(assert (= var1322786 temp201_48))
(assert (= temp201_49 #x0000000000000000))
(assert (= temp201_50 temp201_49))
(assert (= temp201_51 (select ARGNAME_output_padding_NAMEEND_VAL temp201_50)))
(assert (= temp201_52 #x0000000000000001))
(assert (= temp201_53 temp201_52))
(assert (= temp201_54 (select ARGNAME_output_padding_NAMEEND_VAL temp201_53)))
(assert (= temp201_55 #x0000000000000002))
(assert (= temp201_56 temp201_55))
(assert (= temp201_57 (select ARGNAME_output_padding_NAMEEND_VAL temp201_56)))
(assert (= temp201_58 #x0000000000000003))
(assert (= temp201_59 temp201_58))
(assert (= temp201_60 (select ARGNAME_output_padding_NAMEEND_VAL temp201_59)))
(assert (= temp201_61 #x0000000000000004))
(assert (= temp201_62 temp201_61))
(assert (= temp201_63 (select ARGNAME_output_padding_NAMEEND_VAL temp201_62)))
(assert (= temp201_64 #x0000000000000005))
(assert (= temp201_65 temp201_64))
(assert (= temp201_66 (select ARGNAME_output_padding_NAMEEND_VAL temp201_65)))
(assert (= temp201_67 #x0000000000000000))
(assert (= temp201_68 #x0000000000000000))
(assert (= temp201_69 temp201_68))
(assert (= temp201_70 (select ARGNAME_output_padding_NAMEEND_VAL temp201_69)))
(assert (= temp201_71 #x0000000000000000))
(assert (= temp201_72 #x0000000000000001))
(assert (= temp201_73 temp201_72))
(assert (= temp201_74 (select ARGNAME_output_padding_NAMEEND_VAL temp201_73)))
(assert (= temp201_75 #x0000000000000000))
(assert (= temp201_76 #x0000000000000002))
(assert (= temp201_77 temp201_76))
(assert (= temp201_78 (select ARGNAME_output_padding_NAMEEND_VAL temp201_77)))
(assert (= temp201_79 #x0000000000000000))
(assert (= temp201_80 #x0000000000000003))
(assert (= temp201_81 temp201_80))
(assert (= temp201_82 (select ARGNAME_output_padding_NAMEEND_VAL temp201_81)))
(assert (= temp201_83 #x0000000000000000))
(assert (= temp201_84 #x0000000000000004))
(assert (= temp201_85 temp201_84))
(assert (= temp201_86 (select ARGNAME_output_padding_NAMEEND_VAL temp201_85)))
(assert (= temp201_87 #x0000000000000000))
(assert (= temp201_88 #x0000000000000005))
(assert (= temp201_89 temp201_88))
(assert (= temp201_90 (select ARGNAME_output_padding_NAMEEND_VAL temp201_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp201_70 temp201_67)
             (bvslt temp201_74 temp201_71)
             (bvslt temp201_78 temp201_75)
             (bvslt temp201_82 temp201_79)
             (bvslt temp201_86 temp201_83)
             (bvslt temp201_90 temp201_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_91 #x0000000000000000))
(assert (= var1322797 temp201_91))
(assert (= temp201_92 #x0000000000000000))
(assert (= temp201_93 temp201_92))
(assert (= temp201_94 (select ARGNAME_stride_NAMEEND_VAL temp201_93)))
(assert (= temp201_95 #x0000000000000001))
(assert (= temp201_96 temp201_95))
(assert (= temp201_97 (select ARGNAME_stride_NAMEEND_VAL temp201_96)))
(assert (= temp201_98 #x0000000000000002))
(assert (= temp201_99 temp201_98))
(assert (= temp201_100 (select ARGNAME_stride_NAMEEND_VAL temp201_99)))
(assert (= temp201_101 #x0000000000000003))
(assert (= temp201_102 temp201_101))
(assert (= temp201_103 (select ARGNAME_stride_NAMEEND_VAL temp201_102)))
(assert (= temp201_104 #x0000000000000004))
(assert (= temp201_105 temp201_104))
(assert (= temp201_106 (select ARGNAME_stride_NAMEEND_VAL temp201_105)))
(assert (= temp201_107 #x0000000000000005))
(assert (= temp201_108 temp201_107))
(assert (= temp201_109 (select ARGNAME_stride_NAMEEND_VAL temp201_108)))
(assert (= temp201_110 #x0000000000000000))
(assert (= temp201_111 #x0000000000000000))
(assert (= temp201_112 temp201_111))
(assert (= temp201_113 (select ARGNAME_stride_NAMEEND_VAL temp201_112)))
(assert (= temp201_114 #x0000000000000000))
(assert (= temp201_115 #x0000000000000001))
(assert (= temp201_116 temp201_115))
(assert (= temp201_117 (select ARGNAME_stride_NAMEEND_VAL temp201_116)))
(assert (= temp201_118 #x0000000000000000))
(assert (= temp201_119 #x0000000000000002))
(assert (= temp201_120 temp201_119))
(assert (= temp201_121 (select ARGNAME_stride_NAMEEND_VAL temp201_120)))
(assert (= temp201_122 #x0000000000000000))
(assert (= temp201_123 #x0000000000000003))
(assert (= temp201_124 temp201_123))
(assert (= temp201_125 (select ARGNAME_stride_NAMEEND_VAL temp201_124)))
(assert (= temp201_126 #x0000000000000000))
(assert (= temp201_127 #x0000000000000004))
(assert (= temp201_128 temp201_127))
(assert (= temp201_129 (select ARGNAME_stride_NAMEEND_VAL temp201_128)))
(assert (= temp201_130 #x0000000000000000))
(assert (= temp201_131 #x0000000000000005))
(assert (= temp201_132 temp201_131))
(assert (= temp201_133 (select ARGNAME_stride_NAMEEND_VAL temp201_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp201_113 temp201_110)
             (bvsle temp201_117 temp201_114)
             (bvsle temp201_121 temp201_118)
             (bvsle temp201_125 temp201_122)
             (bvsle temp201_129 temp201_126)
             (bvsle temp201_133 temp201_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_134 #x0000000000000000))
(assert (= var1322807 temp201_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_135 #x0000000000000001))
(assert (= var1322819 temp201_135))
(assert (= temp201_136 #x0000000000000000))
(assert (= var1310898 temp201_136))
(assert (= temp201_137 #x0000000000000000))
(assert (= temp201_138 temp201_137))
(assert (= temp201_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_138)))
(assert (= temp201_140 #x0000000000000001))
(assert (= temp201_141 temp201_140))
(assert (= temp201_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_141)))
(assert (= temp201_143 #x0000000000000002))
(assert (= temp201_144 temp201_143))
(assert (= temp201_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_144)))
(assert (= temp201_146 #x0000000000000003))
(assert (= temp201_147 temp201_146))
(assert (= temp201_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_147)))
(assert (= temp201_149 #x0000000000000004))
(assert (= temp201_150 temp201_149))
(assert (= temp201_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_150)))
(assert (= temp201_152 #x0000000000000005))
(assert (= temp201_153 temp201_152))
(assert (= temp201_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_153)))
(assert (= temp201_156 var1310898))
(assert (= temp201_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_156)))
(assert (= temp201_155 temp201_157))
(assert (= var1322852
   (ite (bvslt temp201_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_158 #x0000000000000000))
(assert (= var1322852 temp201_158))
(assert (= temp201_159 #x0000000000000000))
(assert (= var1310898 temp201_159))
(assert (= temp201_161 var1310898))
(assert (= temp201_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_161)))
(assert (= temp201_160 temp201_162))
(assert (= var1322874 (bvsmod temp201_160 ARGNAME_groups_NAMEEND)))
(assert (= temp201_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp201_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp201_164 #x0000000000000001))
(assert (= var1322875 temp201_164))
(assert (= temp201_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp201_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_166 #x0000000000000001))
(assert (= var1322895 temp201_166))
(assert (= temp201_167 #x0000000000000001))
(assert (= var1311786 temp201_167))
(assert (= temp201_168 #x0000000000000000))
(assert (= temp201_169 temp201_168))
(assert (= temp201_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp201_169)))
(assert (= temp201_171 #x0000000000000001))
(assert (= temp201_172 temp201_171))
(assert (= temp201_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp201_172)))
(assert (= temp201_174 #x0000000000000002))
(assert (= temp201_175 temp201_174))
(assert (= temp201_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp201_175)))
(assert (= temp201_177 #x0000000000000003))
(assert (= temp201_178 temp201_177))
(assert (= temp201_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp201_178)))
(assert (= temp201_180 #x0000000000000004))
(assert (= temp201_181 temp201_180))
(assert (= temp201_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp201_181)))
(assert (= temp201_183 #x0000000000000005))
(assert (= temp201_184 temp201_183))
(assert (= temp201_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp201_184)))
(assert (= temp201_186 #x0000000000000000))
(assert (= temp201_187
   (ite (bvslt var1311786 temp201_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp201_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp201_187)))
(assert (= var1322903 temp201_188))
(assert (bvslt (ite (bvslt var1311786 temp201_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp201_189 #x0000000000000001))
(assert (= var1311786 temp201_189))
(assert (= temp201_191 var1311786))
(assert (= temp201_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_191)))
(assert (= temp201_190 temp201_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp201_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp201_193 #x0000000000000001))
(assert (= var1322908 temp201_193))
(assert (= temp201_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp201_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_195 #x0000000000000001))
(assert (= var1322975 temp201_195))
(assert (= temp201_196 #x0000000000000000))
(assert (= var1310898 temp201_196))
(assert (= temp201_197 #x0000000000000000))
(assert (= temp201_198 temp201_197))
(assert (= temp201_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp201_198)))
(assert (= temp201_200 #x0000000000000001))
(assert (= temp201_201 temp201_200))
(assert (= temp201_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp201_201)))
(assert (= temp201_203 #x0000000000000002))
(assert (= temp201_204 temp201_203))
(assert (= temp201_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp201_204)))
(assert (= temp201_206 #x0000000000000003))
(assert (= temp201_207 temp201_206))
(assert (= temp201_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp201_207)))
(assert (= temp201_209 #x0000000000000004))
(assert (= temp201_210 temp201_209))
(assert (= temp201_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp201_210)))
(assert (= temp201_212 #x0000000000000005))
(assert (= temp201_213 temp201_212))
(assert (= temp201_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp201_213)))
(assert (= temp201_215 #x0000000000000000))
(assert (= temp201_216
   (ite (bvslt var1310898 temp201_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp201_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp201_216)))
(assert (= var1322977 temp201_217))
(assert (bvslt (ite (bvslt var1310898 temp201_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp201_218 #x0000000000000000))
(assert (= var1310898 temp201_218))
(assert (= temp201_220 var1310898))
(assert (= temp201_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp201_220)))
(assert (= temp201_219 temp201_221))
(assert (= var1322980
   (ite (= var1322977 temp201_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp201_222 #x0000000000000001))
(assert (= var1322980 temp201_222))
(assert (= temp201_223 #x0000000000000002))
(assert (= var1848169 temp201_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp201_225 #x0000000000000001))
(assert (= var1323065 temp201_225))
(assert (= temp201_226 #x0000000000000001))
(assert (= var3486735 temp201_226))
(assert (= temp201_227 #x0000000000000001))
(assert (= var3814415 temp201_227))
(assert (= temp201_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp201_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_229 #x0000000000000001))
(assert (= var79986 temp201_229))
(assert (= temp201_230 #x0000000000000001))
(assert (= var80116 temp201_230))
(assert (= var4796905 var80116))
(assert (= temp201_231 #x0000000000000000))
(assert (= var4784306 temp201_231))
(assert (= temp201_232 #x0000000000000000))
(assert (= temp201_233
   (ite (bvslt var4784306 temp201_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp201_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp201_233)))
(assert (= var4796924 temp201_234))
(assert (bvslt (ite (bvslt var4784306 temp201_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp201_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp201_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp201_236 #x0000000000000001))
(assert (= var4796925 temp201_236))
(assert (= temp201_237 #x0000000000000000))
(assert (= var4996927 temp201_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp201_238 #x0000000000000002))
(assert (= var5125763 temp201_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp201_239 #x0000000000000000))
(assert (= var5191324 temp201_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp201_241 #xffffffffffffffff))
(assert (= temp201_240 temp201_241))
(assert (= temp201_242 #x0000000000000001))
(assert (= var66602 temp201_242))
(assert (= temp201_243 #x0000000000000000))
(assert (= temp201_244
   (ite (bvslt var66602 temp201_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp201_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp201_244)))
(assert (= var80523 temp201_245))
(assert (bvslt (ite (bvslt var66602 temp201_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp201_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp201_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp201_247 #x0000000000000000))
(assert (= var80524 temp201_247))
(assert (= temp201_248 #x0000000000000001))
(assert (= var79986 temp201_248))
(model-add temp201_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp201_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp201_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






