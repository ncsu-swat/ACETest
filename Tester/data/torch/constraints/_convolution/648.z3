(declare-fun temp861_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp861_2 () (_ BitVec 64))
(declare-fun temp861_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp861_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp861_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp861_6 () (_ BitVec 64))
(declare-fun temp861_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_8 () (_ BitVec 64))
(declare-fun temp861_9 () (_ BitVec 64))
(declare-fun temp861_10 () (_ BitVec 64))
(declare-fun temp861_11 () (_ BitVec 64))
(declare-fun temp861_12 () (_ BitVec 64))
(declare-fun temp861_13 () (_ BitVec 64))
(declare-fun temp861_14 () (_ BitVec 64))
(declare-fun temp861_15 () (_ BitVec 64))
(declare-fun temp861_16 () (_ BitVec 64))
(declare-fun temp861_17 () (_ BitVec 64))
(declare-fun temp861_18 () (_ BitVec 64))
(declare-fun temp861_19 () (_ BitVec 64))
(declare-fun temp861_20 () (_ BitVec 64))
(declare-fun temp861_21 () (_ BitVec 64))
(declare-fun temp861_22 () (_ BitVec 64))
(declare-fun temp861_23 () (_ BitVec 64))
(declare-fun temp861_24 () (_ BitVec 64))
(declare-fun temp861_25 () (_ BitVec 64))
(declare-fun temp861_26 () (_ BitVec 64))
(declare-fun temp861_27 () (_ BitVec 64))
(declare-fun temp861_28 () (_ BitVec 64))
(declare-fun temp861_29 () (_ BitVec 64))
(declare-fun temp861_30 () (_ BitVec 64))
(declare-fun temp861_31 () (_ BitVec 64))
(declare-fun temp861_32 () (_ BitVec 64))
(declare-fun temp861_33 () (_ BitVec 64))
(declare-fun temp861_34 () (_ BitVec 64))
(declare-fun temp861_35 () (_ BitVec 64))
(declare-fun temp861_36 () (_ BitVec 64))
(declare-fun temp861_37 () (_ BitVec 64))
(declare-fun temp861_38 () (_ BitVec 64))
(declare-fun temp861_39 () (_ BitVec 64))
(declare-fun temp861_40 () (_ BitVec 64))
(declare-fun temp861_41 () (_ BitVec 64))
(declare-fun temp861_42 () (_ BitVec 64))
(declare-fun temp861_43 () (_ BitVec 64))
(declare-fun temp861_44 () (_ BitVec 64))
(declare-fun temp861_45 () (_ BitVec 64))
(declare-fun temp861_46 () (_ BitVec 64))
(declare-fun temp861_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp861_48 () (_ BitVec 64))
(declare-fun temp861_49 () (_ BitVec 64))
(declare-fun temp861_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_51 () (_ BitVec 64))
(declare-fun temp861_52 () (_ BitVec 64))
(declare-fun temp861_53 () (_ BitVec 64))
(declare-fun temp861_54 () (_ BitVec 64))
(declare-fun temp861_55 () (_ BitVec 64))
(declare-fun temp861_56 () (_ BitVec 64))
(declare-fun temp861_57 () (_ BitVec 64))
(declare-fun temp861_58 () (_ BitVec 64))
(declare-fun temp861_59 () (_ BitVec 64))
(declare-fun temp861_60 () (_ BitVec 64))
(declare-fun temp861_61 () (_ BitVec 64))
(declare-fun temp861_62 () (_ BitVec 64))
(declare-fun temp861_63 () (_ BitVec 64))
(declare-fun temp861_64 () (_ BitVec 64))
(declare-fun temp861_65 () (_ BitVec 64))
(declare-fun temp861_66 () (_ BitVec 64))
(declare-fun temp861_67 () (_ BitVec 64))
(declare-fun temp861_68 () (_ BitVec 64))
(declare-fun temp861_69 () (_ BitVec 64))
(declare-fun temp861_70 () (_ BitVec 64))
(declare-fun temp861_71 () (_ BitVec 64))
(declare-fun temp861_72 () (_ BitVec 64))
(declare-fun temp861_73 () (_ BitVec 64))
(declare-fun temp861_74 () (_ BitVec 64))
(declare-fun temp861_75 () (_ BitVec 64))
(declare-fun temp861_76 () (_ BitVec 64))
(declare-fun temp861_77 () (_ BitVec 64))
(declare-fun temp861_78 () (_ BitVec 64))
(declare-fun temp861_79 () (_ BitVec 64))
(declare-fun temp861_80 () (_ BitVec 64))
(declare-fun temp861_81 () (_ BitVec 64))
(declare-fun temp861_82 () (_ BitVec 64))
(declare-fun temp861_83 () (_ BitVec 64))
(declare-fun temp861_84 () (_ BitVec 64))
(declare-fun temp861_85 () (_ BitVec 64))
(declare-fun temp861_86 () (_ BitVec 64))
(declare-fun temp861_87 () (_ BitVec 64))
(declare-fun temp861_88 () (_ BitVec 64))
(declare-fun temp861_89 () (_ BitVec 64))
(declare-fun temp861_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp861_91 () (_ BitVec 64))
(declare-fun temp861_92 () (_ BitVec 64))
(declare-fun temp861_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_94 () (_ BitVec 64))
(declare-fun temp861_95 () (_ BitVec 64))
(declare-fun temp861_96 () (_ BitVec 64))
(declare-fun temp861_97 () (_ BitVec 64))
(declare-fun temp861_98 () (_ BitVec 64))
(declare-fun temp861_99 () (_ BitVec 64))
(declare-fun temp861_100 () (_ BitVec 64))
(declare-fun temp861_101 () (_ BitVec 64))
(declare-fun temp861_102 () (_ BitVec 64))
(declare-fun temp861_103 () (_ BitVec 64))
(declare-fun temp861_104 () (_ BitVec 64))
(declare-fun temp861_105 () (_ BitVec 64))
(declare-fun temp861_106 () (_ BitVec 64))
(declare-fun temp861_107 () (_ BitVec 64))
(declare-fun temp861_108 () (_ BitVec 64))
(declare-fun temp861_109 () (_ BitVec 64))
(declare-fun temp861_110 () (_ BitVec 64))
(declare-fun temp861_111 () (_ BitVec 64))
(declare-fun temp861_112 () (_ BitVec 64))
(declare-fun temp861_113 () (_ BitVec 64))
(declare-fun temp861_114 () (_ BitVec 64))
(declare-fun temp861_115 () (_ BitVec 64))
(declare-fun temp861_116 () (_ BitVec 64))
(declare-fun temp861_117 () (_ BitVec 64))
(declare-fun temp861_118 () (_ BitVec 64))
(declare-fun temp861_119 () (_ BitVec 64))
(declare-fun temp861_120 () (_ BitVec 64))
(declare-fun temp861_121 () (_ BitVec 64))
(declare-fun temp861_122 () (_ BitVec 64))
(declare-fun temp861_123 () (_ BitVec 64))
(declare-fun temp861_124 () (_ BitVec 64))
(declare-fun temp861_125 () (_ BitVec 64))
(declare-fun temp861_126 () (_ BitVec 64))
(declare-fun temp861_127 () (_ BitVec 64))
(declare-fun temp861_128 () (_ BitVec 64))
(declare-fun temp861_129 () (_ BitVec 64))
(declare-fun temp861_130 () (_ BitVec 64))
(declare-fun temp861_131 () (_ BitVec 64))
(declare-fun temp861_132 () (_ BitVec 64))
(declare-fun temp861_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp861_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp861_135 () (_ BitVec 64))
(declare-fun temp861_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp861_137 () (_ BitVec 64))
(declare-fun temp861_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_139 () (_ BitVec 64))
(declare-fun temp861_140 () (_ BitVec 64))
(declare-fun temp861_141 () (_ BitVec 64))
(declare-fun temp861_142 () (_ BitVec 64))
(declare-fun temp861_143 () (_ BitVec 64))
(declare-fun temp861_144 () (_ BitVec 64))
(declare-fun temp861_145 () (_ BitVec 64))
(declare-fun temp861_146 () (_ BitVec 64))
(declare-fun temp861_147 () (_ BitVec 64))
(declare-fun temp861_148 () (_ BitVec 64))
(declare-fun temp861_149 () (_ BitVec 64))
(declare-fun temp861_150 () (_ BitVec 64))
(declare-fun temp861_151 () (_ BitVec 64))
(declare-fun temp861_152 () (_ BitVec 64))
(declare-fun temp861_153 () (_ BitVec 64))
(declare-fun temp861_154 () (_ BitVec 64))
(declare-fun temp861_156 () (_ BitVec 64))
(declare-fun temp861_157 () (_ BitVec 64))
(declare-fun temp861_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp861_158 () (_ BitVec 64))
(declare-fun temp861_159 () (_ BitVec 64))
(declare-fun temp861_161 () (_ BitVec 64))
(declare-fun temp861_162 () (_ BitVec 64))
(declare-fun temp861_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp861_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp861_164 () (_ BitVec 64))
(declare-fun temp861_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp861_166 () (_ BitVec 64))
(declare-fun temp861_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp861_168 () (_ BitVec 64))
(declare-fun temp861_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_170 () (_ BitVec 64))
(declare-fun temp861_171 () (_ BitVec 64))
(declare-fun temp861_172 () (_ BitVec 64))
(declare-fun temp861_173 () (_ BitVec 64))
(declare-fun temp861_174 () (_ BitVec 64))
(declare-fun temp861_175 () (_ BitVec 64))
(declare-fun temp861_176 () (_ BitVec 64))
(declare-fun temp861_177 () (_ BitVec 64))
(declare-fun temp861_178 () (_ BitVec 64))
(declare-fun temp861_179 () (_ BitVec 64))
(declare-fun temp861_180 () (_ BitVec 64))
(declare-fun temp861_181 () (_ BitVec 64))
(declare-fun temp861_182 () (_ BitVec 64))
(declare-fun temp861_183 () (_ BitVec 64))
(declare-fun temp861_184 () (_ BitVec 64))
(declare-fun temp861_185 () (_ BitVec 64))
(declare-fun temp861_186 () (_ BitVec 64))
(declare-fun temp861_187 () (_ BitVec 64))
(declare-fun temp861_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp861_189 () (_ BitVec 64))
(declare-fun temp861_191 () (_ BitVec 64))
(declare-fun temp861_192 () (_ BitVec 64))
(declare-fun temp861_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp861_193 () (_ BitVec 64))
(declare-fun temp861_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp861_195 () (_ BitVec 64))
(declare-fun temp861_196 () (_ BitVec 64))
(declare-fun temp861_197 () (_ BitVec 64))
(declare-fun temp861_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_199 () (_ BitVec 64))
(declare-fun temp861_200 () (_ BitVec 64))
(declare-fun temp861_201 () (_ BitVec 64))
(declare-fun temp861_202 () (_ BitVec 64))
(declare-fun temp861_203 () (_ BitVec 64))
(declare-fun temp861_204 () (_ BitVec 64))
(declare-fun temp861_205 () (_ BitVec 64))
(declare-fun temp861_206 () (_ BitVec 64))
(declare-fun temp861_207 () (_ BitVec 64))
(declare-fun temp861_208 () (_ BitVec 64))
(declare-fun temp861_209 () (_ BitVec 64))
(declare-fun temp861_210 () (_ BitVec 64))
(declare-fun temp861_211 () (_ BitVec 64))
(declare-fun temp861_212 () (_ BitVec 64))
(declare-fun temp861_213 () (_ BitVec 64))
(declare-fun temp861_214 () (_ BitVec 64))
(declare-fun temp861_215 () (_ BitVec 64))
(declare-fun temp861_216 () (_ BitVec 64))
(declare-fun temp861_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp861_218 () (_ BitVec 64))
(declare-fun temp861_220 () (_ BitVec 64))
(declare-fun temp861_221 () (_ BitVec 64))
(declare-fun temp861_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp861_222 () (_ BitVec 64))
(declare-fun temp861_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp861_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp861_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp861_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp861_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp861_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp861_229 () (_ BitVec 64))
(declare-fun temp861_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp861_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp861_232 () (_ BitVec 64))
(declare-fun temp861_233 () (_ BitVec 64))
(declare-fun temp861_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp861_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp861_236 () (_ BitVec 64))
(declare-fun temp861_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp861_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp861_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun temp861_240 () (_ BitVec 64))
(declare-fun var6566288 () (_ BitVec 64))
(declare-fun temp861_241 () (_ BitVec 64))
(assert (= temp861_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp861_1)))
(assert (= temp861_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp861_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_3 #x0000000000000000))
(assert (= var79869 temp861_3))
(assert (= temp861_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp861_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_5 #x0000000000000000))
(assert (= var79914 temp861_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp861_6 #x0000000000000000))
(assert (= temp861_7 temp861_6))
(assert (= temp861_8 (select ARGNAME_padding_NAMEEND_VAL temp861_7)))
(assert (= temp861_9 #x0000000000000001))
(assert (= temp861_10 temp861_9))
(assert (= temp861_11 (select ARGNAME_padding_NAMEEND_VAL temp861_10)))
(assert (= temp861_12 #x0000000000000002))
(assert (= temp861_13 temp861_12))
(assert (= temp861_14 (select ARGNAME_padding_NAMEEND_VAL temp861_13)))
(assert (= temp861_15 #x0000000000000003))
(assert (= temp861_16 temp861_15))
(assert (= temp861_17 (select ARGNAME_padding_NAMEEND_VAL temp861_16)))
(assert (= temp861_18 #x0000000000000004))
(assert (= temp861_19 temp861_18))
(assert (= temp861_20 (select ARGNAME_padding_NAMEEND_VAL temp861_19)))
(assert (= temp861_21 #x0000000000000005))
(assert (= temp861_22 temp861_21))
(assert (= temp861_23 (select ARGNAME_padding_NAMEEND_VAL temp861_22)))
(assert (= temp861_24 #x0000000000000000))
(assert (= temp861_25 #x0000000000000000))
(assert (= temp861_26 temp861_25))
(assert (= temp861_27 (select ARGNAME_padding_NAMEEND_VAL temp861_26)))
(assert (= temp861_28 #x0000000000000000))
(assert (= temp861_29 #x0000000000000001))
(assert (= temp861_30 temp861_29))
(assert (= temp861_31 (select ARGNAME_padding_NAMEEND_VAL temp861_30)))
(assert (= temp861_32 #x0000000000000000))
(assert (= temp861_33 #x0000000000000002))
(assert (= temp861_34 temp861_33))
(assert (= temp861_35 (select ARGNAME_padding_NAMEEND_VAL temp861_34)))
(assert (= temp861_36 #x0000000000000000))
(assert (= temp861_37 #x0000000000000003))
(assert (= temp861_38 temp861_37))
(assert (= temp861_39 (select ARGNAME_padding_NAMEEND_VAL temp861_38)))
(assert (= temp861_40 #x0000000000000000))
(assert (= temp861_41 #x0000000000000004))
(assert (= temp861_42 temp861_41))
(assert (= temp861_43 (select ARGNAME_padding_NAMEEND_VAL temp861_42)))
(assert (= temp861_44 #x0000000000000000))
(assert (= temp861_45 #x0000000000000005))
(assert (= temp861_46 temp861_45))
(assert (= temp861_47 (select ARGNAME_padding_NAMEEND_VAL temp861_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp861_27 temp861_24)
             (bvslt temp861_31 temp861_28)
             (bvslt temp861_35 temp861_32)
             (bvslt temp861_39 temp861_36)
             (bvslt temp861_43 temp861_40)
             (bvslt temp861_47 temp861_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_48 #x0000000000000000))
(assert (= var1322786 temp861_48))
(assert (= temp861_49 #x0000000000000000))
(assert (= temp861_50 temp861_49))
(assert (= temp861_51 (select ARGNAME_output_padding_NAMEEND_VAL temp861_50)))
(assert (= temp861_52 #x0000000000000001))
(assert (= temp861_53 temp861_52))
(assert (= temp861_54 (select ARGNAME_output_padding_NAMEEND_VAL temp861_53)))
(assert (= temp861_55 #x0000000000000002))
(assert (= temp861_56 temp861_55))
(assert (= temp861_57 (select ARGNAME_output_padding_NAMEEND_VAL temp861_56)))
(assert (= temp861_58 #x0000000000000003))
(assert (= temp861_59 temp861_58))
(assert (= temp861_60 (select ARGNAME_output_padding_NAMEEND_VAL temp861_59)))
(assert (= temp861_61 #x0000000000000004))
(assert (= temp861_62 temp861_61))
(assert (= temp861_63 (select ARGNAME_output_padding_NAMEEND_VAL temp861_62)))
(assert (= temp861_64 #x0000000000000005))
(assert (= temp861_65 temp861_64))
(assert (= temp861_66 (select ARGNAME_output_padding_NAMEEND_VAL temp861_65)))
(assert (= temp861_67 #x0000000000000000))
(assert (= temp861_68 #x0000000000000000))
(assert (= temp861_69 temp861_68))
(assert (= temp861_70 (select ARGNAME_output_padding_NAMEEND_VAL temp861_69)))
(assert (= temp861_71 #x0000000000000000))
(assert (= temp861_72 #x0000000000000001))
(assert (= temp861_73 temp861_72))
(assert (= temp861_74 (select ARGNAME_output_padding_NAMEEND_VAL temp861_73)))
(assert (= temp861_75 #x0000000000000000))
(assert (= temp861_76 #x0000000000000002))
(assert (= temp861_77 temp861_76))
(assert (= temp861_78 (select ARGNAME_output_padding_NAMEEND_VAL temp861_77)))
(assert (= temp861_79 #x0000000000000000))
(assert (= temp861_80 #x0000000000000003))
(assert (= temp861_81 temp861_80))
(assert (= temp861_82 (select ARGNAME_output_padding_NAMEEND_VAL temp861_81)))
(assert (= temp861_83 #x0000000000000000))
(assert (= temp861_84 #x0000000000000004))
(assert (= temp861_85 temp861_84))
(assert (= temp861_86 (select ARGNAME_output_padding_NAMEEND_VAL temp861_85)))
(assert (= temp861_87 #x0000000000000000))
(assert (= temp861_88 #x0000000000000005))
(assert (= temp861_89 temp861_88))
(assert (= temp861_90 (select ARGNAME_output_padding_NAMEEND_VAL temp861_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp861_70 temp861_67)
             (bvslt temp861_74 temp861_71)
             (bvslt temp861_78 temp861_75)
             (bvslt temp861_82 temp861_79)
             (bvslt temp861_86 temp861_83)
             (bvslt temp861_90 temp861_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_91 #x0000000000000000))
(assert (= var1322797 temp861_91))
(assert (= temp861_92 #x0000000000000000))
(assert (= temp861_93 temp861_92))
(assert (= temp861_94 (select ARGNAME_stride_NAMEEND_VAL temp861_93)))
(assert (= temp861_95 #x0000000000000001))
(assert (= temp861_96 temp861_95))
(assert (= temp861_97 (select ARGNAME_stride_NAMEEND_VAL temp861_96)))
(assert (= temp861_98 #x0000000000000002))
(assert (= temp861_99 temp861_98))
(assert (= temp861_100 (select ARGNAME_stride_NAMEEND_VAL temp861_99)))
(assert (= temp861_101 #x0000000000000003))
(assert (= temp861_102 temp861_101))
(assert (= temp861_103 (select ARGNAME_stride_NAMEEND_VAL temp861_102)))
(assert (= temp861_104 #x0000000000000004))
(assert (= temp861_105 temp861_104))
(assert (= temp861_106 (select ARGNAME_stride_NAMEEND_VAL temp861_105)))
(assert (= temp861_107 #x0000000000000005))
(assert (= temp861_108 temp861_107))
(assert (= temp861_109 (select ARGNAME_stride_NAMEEND_VAL temp861_108)))
(assert (= temp861_110 #x0000000000000000))
(assert (= temp861_111 #x0000000000000000))
(assert (= temp861_112 temp861_111))
(assert (= temp861_113 (select ARGNAME_stride_NAMEEND_VAL temp861_112)))
(assert (= temp861_114 #x0000000000000000))
(assert (= temp861_115 #x0000000000000001))
(assert (= temp861_116 temp861_115))
(assert (= temp861_117 (select ARGNAME_stride_NAMEEND_VAL temp861_116)))
(assert (= temp861_118 #x0000000000000000))
(assert (= temp861_119 #x0000000000000002))
(assert (= temp861_120 temp861_119))
(assert (= temp861_121 (select ARGNAME_stride_NAMEEND_VAL temp861_120)))
(assert (= temp861_122 #x0000000000000000))
(assert (= temp861_123 #x0000000000000003))
(assert (= temp861_124 temp861_123))
(assert (= temp861_125 (select ARGNAME_stride_NAMEEND_VAL temp861_124)))
(assert (= temp861_126 #x0000000000000000))
(assert (= temp861_127 #x0000000000000004))
(assert (= temp861_128 temp861_127))
(assert (= temp861_129 (select ARGNAME_stride_NAMEEND_VAL temp861_128)))
(assert (= temp861_130 #x0000000000000000))
(assert (= temp861_131 #x0000000000000005))
(assert (= temp861_132 temp861_131))
(assert (= temp861_133 (select ARGNAME_stride_NAMEEND_VAL temp861_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp861_113 temp861_110)
             (bvsle temp861_117 temp861_114)
             (bvsle temp861_121 temp861_118)
             (bvsle temp861_125 temp861_122)
             (bvsle temp861_129 temp861_126)
             (bvsle temp861_133 temp861_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_134 #x0000000000000000))
(assert (= var1322807 temp861_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_135 #x0000000000000001))
(assert (= var1322819 temp861_135))
(assert (= temp861_136 #x0000000000000000))
(assert (= var1310898 temp861_136))
(assert (= temp861_137 #x0000000000000000))
(assert (= temp861_138 temp861_137))
(assert (= temp861_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_138)))
(assert (= temp861_140 #x0000000000000001))
(assert (= temp861_141 temp861_140))
(assert (= temp861_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_141)))
(assert (= temp861_143 #x0000000000000002))
(assert (= temp861_144 temp861_143))
(assert (= temp861_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_144)))
(assert (= temp861_146 #x0000000000000003))
(assert (= temp861_147 temp861_146))
(assert (= temp861_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_147)))
(assert (= temp861_149 #x0000000000000004))
(assert (= temp861_150 temp861_149))
(assert (= temp861_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_150)))
(assert (= temp861_152 #x0000000000000005))
(assert (= temp861_153 temp861_152))
(assert (= temp861_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_153)))
(assert (= temp861_156 var1310898))
(assert (= temp861_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_156)))
(assert (= temp861_155 temp861_157))
(assert (= var1322852
   (ite (bvslt temp861_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_158 #x0000000000000000))
(assert (= var1322852 temp861_158))
(assert (= temp861_159 #x0000000000000000))
(assert (= var1310898 temp861_159))
(assert (= temp861_161 var1310898))
(assert (= temp861_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_161)))
(assert (= temp861_160 temp861_162))
(assert (= var1322874 (bvsmod temp861_160 ARGNAME_groups_NAMEEND)))
(assert (= temp861_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp861_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_164 #x0000000000000001))
(assert (= var1322875 temp861_164))
(assert (= temp861_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp861_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_166 #x0000000000000001))
(assert (= var1322895 temp861_166))
(assert (= temp861_167 #x0000000000000001))
(assert (= var1311786 temp861_167))
(assert (= temp861_168 #x0000000000000000))
(assert (= temp861_169 temp861_168))
(assert (= temp861_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_169)))
(assert (= temp861_171 #x0000000000000001))
(assert (= temp861_172 temp861_171))
(assert (= temp861_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_172)))
(assert (= temp861_174 #x0000000000000002))
(assert (= temp861_175 temp861_174))
(assert (= temp861_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_175)))
(assert (= temp861_177 #x0000000000000003))
(assert (= temp861_178 temp861_177))
(assert (= temp861_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_178)))
(assert (= temp861_180 #x0000000000000004))
(assert (= temp861_181 temp861_180))
(assert (= temp861_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_181)))
(assert (= temp861_183 #x0000000000000005))
(assert (= temp861_184 temp861_183))
(assert (= temp861_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_184)))
(assert (= temp861_186 #x0000000000000000))
(assert (= temp861_187
   (ite (bvslt var1311786 temp861_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp861_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_187)))
(assert (= var1322903 temp861_188))
(assert (bvslt (ite (bvslt var1311786 temp861_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp861_189 #x0000000000000001))
(assert (= var1311786 temp861_189))
(assert (= temp861_191 var1311786))
(assert (= temp861_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_191)))
(assert (= temp861_190 temp861_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp861_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_193 #x0000000000000001))
(assert (= var1322908 temp861_193))
(assert (= temp861_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp861_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_195 #x0000000000000001))
(assert (= var1322975 temp861_195))
(assert (= temp861_196 #x0000000000000000))
(assert (= var1310898 temp861_196))
(assert (= temp861_197 #x0000000000000000))
(assert (= temp861_198 temp861_197))
(assert (= temp861_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp861_198)))
(assert (= temp861_200 #x0000000000000001))
(assert (= temp861_201 temp861_200))
(assert (= temp861_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp861_201)))
(assert (= temp861_203 #x0000000000000002))
(assert (= temp861_204 temp861_203))
(assert (= temp861_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp861_204)))
(assert (= temp861_206 #x0000000000000003))
(assert (= temp861_207 temp861_206))
(assert (= temp861_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp861_207)))
(assert (= temp861_209 #x0000000000000004))
(assert (= temp861_210 temp861_209))
(assert (= temp861_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp861_210)))
(assert (= temp861_212 #x0000000000000005))
(assert (= temp861_213 temp861_212))
(assert (= temp861_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp861_213)))
(assert (= temp861_215 #x0000000000000000))
(assert (= temp861_216
   (ite (bvslt var1310898 temp861_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp861_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp861_216)))
(assert (= var1322977 temp861_217))
(assert (bvslt (ite (bvslt var1310898 temp861_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp861_218 #x0000000000000000))
(assert (= var1310898 temp861_218))
(assert (= temp861_220 var1310898))
(assert (= temp861_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_220)))
(assert (= temp861_219 temp861_221))
(assert (= var1322980
   (ite (= var1322977 temp861_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_222 #x0000000000000001))
(assert (= var1322980 temp861_222))
(assert (= temp861_223 #x0000000000000002))
(assert (= var1848169 temp861_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp861_225 #x0000000000000001))
(assert (= var1323065 temp861_225))
(assert (= temp861_226 #x0000000000000001))
(assert (= var3486735 temp861_226))
(assert (= temp861_227 #x0000000000000001))
(assert (= var3814415 temp861_227))
(assert (= temp861_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp861_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_229 #x0000000000000001))
(assert (= var79986 temp861_229))
(assert (= temp861_230 #x0000000000000001))
(assert (= var80116 temp861_230))
(assert (= var4796905 var80116))
(assert (= temp861_231 #x0000000000000000))
(assert (= var4784306 temp861_231))
(assert (= temp861_232 #x0000000000000000))
(assert (= temp861_233
   (ite (bvslt var4784306 temp861_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp861_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_233)))
(assert (= var4796924 temp861_234))
(assert (bvslt (ite (bvslt var4784306 temp861_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp861_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp861_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_236 #x0000000000000001))
(assert (= var4796925 temp861_236))
(assert (= temp861_237 #x0000000000000000))
(assert (= var4996927 temp861_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp861_238 #x0000000000000002))
(assert (= var5125763 temp861_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_239 #x0000000000000000))
(assert (= var5191324 temp861_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5976464 var80129))
(assert (= var6238608 var80129))
(assert (= temp861_240 #x0000000000000000))
(assert (= var6566288 temp861_240))
(assert (= temp861_241 #x0000000000000001))
(assert (= var79986 temp861_241))
(model-add temp861_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp861_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp861_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






