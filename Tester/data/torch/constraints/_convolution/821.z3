(declare-fun temp1092_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1092_2 () (_ BitVec 64))
(declare-fun temp1092_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1092_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1092_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1092_6 () (_ BitVec 64))
(declare-fun temp1092_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_8 () (_ BitVec 64))
(declare-fun temp1092_9 () (_ BitVec 64))
(declare-fun temp1092_10 () (_ BitVec 64))
(declare-fun temp1092_11 () (_ BitVec 64))
(declare-fun temp1092_12 () (_ BitVec 64))
(declare-fun temp1092_13 () (_ BitVec 64))
(declare-fun temp1092_14 () (_ BitVec 64))
(declare-fun temp1092_15 () (_ BitVec 64))
(declare-fun temp1092_16 () (_ BitVec 64))
(declare-fun temp1092_17 () (_ BitVec 64))
(declare-fun temp1092_18 () (_ BitVec 64))
(declare-fun temp1092_19 () (_ BitVec 64))
(declare-fun temp1092_20 () (_ BitVec 64))
(declare-fun temp1092_21 () (_ BitVec 64))
(declare-fun temp1092_22 () (_ BitVec 64))
(declare-fun temp1092_23 () (_ BitVec 64))
(declare-fun temp1092_24 () (_ BitVec 64))
(declare-fun temp1092_25 () (_ BitVec 64))
(declare-fun temp1092_26 () (_ BitVec 64))
(declare-fun temp1092_27 () (_ BitVec 64))
(declare-fun temp1092_28 () (_ BitVec 64))
(declare-fun temp1092_29 () (_ BitVec 64))
(declare-fun temp1092_30 () (_ BitVec 64))
(declare-fun temp1092_31 () (_ BitVec 64))
(declare-fun temp1092_32 () (_ BitVec 64))
(declare-fun temp1092_33 () (_ BitVec 64))
(declare-fun temp1092_34 () (_ BitVec 64))
(declare-fun temp1092_35 () (_ BitVec 64))
(declare-fun temp1092_36 () (_ BitVec 64))
(declare-fun temp1092_37 () (_ BitVec 64))
(declare-fun temp1092_38 () (_ BitVec 64))
(declare-fun temp1092_39 () (_ BitVec 64))
(declare-fun temp1092_40 () (_ BitVec 64))
(declare-fun temp1092_41 () (_ BitVec 64))
(declare-fun temp1092_42 () (_ BitVec 64))
(declare-fun temp1092_43 () (_ BitVec 64))
(declare-fun temp1092_44 () (_ BitVec 64))
(declare-fun temp1092_45 () (_ BitVec 64))
(declare-fun temp1092_46 () (_ BitVec 64))
(declare-fun temp1092_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1092_48 () (_ BitVec 64))
(declare-fun temp1092_49 () (_ BitVec 64))
(declare-fun temp1092_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_51 () (_ BitVec 64))
(declare-fun temp1092_52 () (_ BitVec 64))
(declare-fun temp1092_53 () (_ BitVec 64))
(declare-fun temp1092_54 () (_ BitVec 64))
(declare-fun temp1092_55 () (_ BitVec 64))
(declare-fun temp1092_56 () (_ BitVec 64))
(declare-fun temp1092_57 () (_ BitVec 64))
(declare-fun temp1092_58 () (_ BitVec 64))
(declare-fun temp1092_59 () (_ BitVec 64))
(declare-fun temp1092_60 () (_ BitVec 64))
(declare-fun temp1092_61 () (_ BitVec 64))
(declare-fun temp1092_62 () (_ BitVec 64))
(declare-fun temp1092_63 () (_ BitVec 64))
(declare-fun temp1092_64 () (_ BitVec 64))
(declare-fun temp1092_65 () (_ BitVec 64))
(declare-fun temp1092_66 () (_ BitVec 64))
(declare-fun temp1092_67 () (_ BitVec 64))
(declare-fun temp1092_68 () (_ BitVec 64))
(declare-fun temp1092_69 () (_ BitVec 64))
(declare-fun temp1092_70 () (_ BitVec 64))
(declare-fun temp1092_71 () (_ BitVec 64))
(declare-fun temp1092_72 () (_ BitVec 64))
(declare-fun temp1092_73 () (_ BitVec 64))
(declare-fun temp1092_74 () (_ BitVec 64))
(declare-fun temp1092_75 () (_ BitVec 64))
(declare-fun temp1092_76 () (_ BitVec 64))
(declare-fun temp1092_77 () (_ BitVec 64))
(declare-fun temp1092_78 () (_ BitVec 64))
(declare-fun temp1092_79 () (_ BitVec 64))
(declare-fun temp1092_80 () (_ BitVec 64))
(declare-fun temp1092_81 () (_ BitVec 64))
(declare-fun temp1092_82 () (_ BitVec 64))
(declare-fun temp1092_83 () (_ BitVec 64))
(declare-fun temp1092_84 () (_ BitVec 64))
(declare-fun temp1092_85 () (_ BitVec 64))
(declare-fun temp1092_86 () (_ BitVec 64))
(declare-fun temp1092_87 () (_ BitVec 64))
(declare-fun temp1092_88 () (_ BitVec 64))
(declare-fun temp1092_89 () (_ BitVec 64))
(declare-fun temp1092_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1092_91 () (_ BitVec 64))
(declare-fun temp1092_92 () (_ BitVec 64))
(declare-fun temp1092_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_94 () (_ BitVec 64))
(declare-fun temp1092_95 () (_ BitVec 64))
(declare-fun temp1092_96 () (_ BitVec 64))
(declare-fun temp1092_97 () (_ BitVec 64))
(declare-fun temp1092_98 () (_ BitVec 64))
(declare-fun temp1092_99 () (_ BitVec 64))
(declare-fun temp1092_100 () (_ BitVec 64))
(declare-fun temp1092_101 () (_ BitVec 64))
(declare-fun temp1092_102 () (_ BitVec 64))
(declare-fun temp1092_103 () (_ BitVec 64))
(declare-fun temp1092_104 () (_ BitVec 64))
(declare-fun temp1092_105 () (_ BitVec 64))
(declare-fun temp1092_106 () (_ BitVec 64))
(declare-fun temp1092_107 () (_ BitVec 64))
(declare-fun temp1092_108 () (_ BitVec 64))
(declare-fun temp1092_109 () (_ BitVec 64))
(declare-fun temp1092_110 () (_ BitVec 64))
(declare-fun temp1092_111 () (_ BitVec 64))
(declare-fun temp1092_112 () (_ BitVec 64))
(declare-fun temp1092_113 () (_ BitVec 64))
(declare-fun temp1092_114 () (_ BitVec 64))
(declare-fun temp1092_115 () (_ BitVec 64))
(declare-fun temp1092_116 () (_ BitVec 64))
(declare-fun temp1092_117 () (_ BitVec 64))
(declare-fun temp1092_118 () (_ BitVec 64))
(declare-fun temp1092_119 () (_ BitVec 64))
(declare-fun temp1092_120 () (_ BitVec 64))
(declare-fun temp1092_121 () (_ BitVec 64))
(declare-fun temp1092_122 () (_ BitVec 64))
(declare-fun temp1092_123 () (_ BitVec 64))
(declare-fun temp1092_124 () (_ BitVec 64))
(declare-fun temp1092_125 () (_ BitVec 64))
(declare-fun temp1092_126 () (_ BitVec 64))
(declare-fun temp1092_127 () (_ BitVec 64))
(declare-fun temp1092_128 () (_ BitVec 64))
(declare-fun temp1092_129 () (_ BitVec 64))
(declare-fun temp1092_130 () (_ BitVec 64))
(declare-fun temp1092_131 () (_ BitVec 64))
(declare-fun temp1092_132 () (_ BitVec 64))
(declare-fun temp1092_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1092_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1092_135 () (_ BitVec 64))
(declare-fun temp1092_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1092_137 () (_ BitVec 64))
(declare-fun temp1092_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_139 () (_ BitVec 64))
(declare-fun temp1092_140 () (_ BitVec 64))
(declare-fun temp1092_141 () (_ BitVec 64))
(declare-fun temp1092_142 () (_ BitVec 64))
(declare-fun temp1092_143 () (_ BitVec 64))
(declare-fun temp1092_144 () (_ BitVec 64))
(declare-fun temp1092_145 () (_ BitVec 64))
(declare-fun temp1092_146 () (_ BitVec 64))
(declare-fun temp1092_147 () (_ BitVec 64))
(declare-fun temp1092_148 () (_ BitVec 64))
(declare-fun temp1092_149 () (_ BitVec 64))
(declare-fun temp1092_150 () (_ BitVec 64))
(declare-fun temp1092_151 () (_ BitVec 64))
(declare-fun temp1092_152 () (_ BitVec 64))
(declare-fun temp1092_153 () (_ BitVec 64))
(declare-fun temp1092_154 () (_ BitVec 64))
(declare-fun temp1092_156 () (_ BitVec 64))
(declare-fun temp1092_157 () (_ BitVec 64))
(declare-fun temp1092_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1092_158 () (_ BitVec 64))
(declare-fun temp1092_159 () (_ BitVec 64))
(declare-fun temp1092_161 () (_ BitVec 64))
(declare-fun temp1092_162 () (_ BitVec 64))
(declare-fun temp1092_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1092_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1092_164 () (_ BitVec 64))
(declare-fun temp1092_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1092_166 () (_ BitVec 64))
(declare-fun temp1092_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1092_168 () (_ BitVec 64))
(declare-fun temp1092_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_170 () (_ BitVec 64))
(declare-fun temp1092_171 () (_ BitVec 64))
(declare-fun temp1092_172 () (_ BitVec 64))
(declare-fun temp1092_173 () (_ BitVec 64))
(declare-fun temp1092_174 () (_ BitVec 64))
(declare-fun temp1092_175 () (_ BitVec 64))
(declare-fun temp1092_176 () (_ BitVec 64))
(declare-fun temp1092_177 () (_ BitVec 64))
(declare-fun temp1092_178 () (_ BitVec 64))
(declare-fun temp1092_179 () (_ BitVec 64))
(declare-fun temp1092_180 () (_ BitVec 64))
(declare-fun temp1092_181 () (_ BitVec 64))
(declare-fun temp1092_182 () (_ BitVec 64))
(declare-fun temp1092_183 () (_ BitVec 64))
(declare-fun temp1092_184 () (_ BitVec 64))
(declare-fun temp1092_185 () (_ BitVec 64))
(declare-fun temp1092_186 () (_ BitVec 64))
(declare-fun temp1092_187 () (_ BitVec 64))
(declare-fun temp1092_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1092_189 () (_ BitVec 64))
(declare-fun temp1092_191 () (_ BitVec 64))
(declare-fun temp1092_192 () (_ BitVec 64))
(declare-fun temp1092_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1092_193 () (_ BitVec 64))
(declare-fun temp1092_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1092_195 () (_ BitVec 64))
(declare-fun temp1092_196 () (_ BitVec 64))
(declare-fun temp1092_197 () (_ BitVec 64))
(declare-fun temp1092_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_199 () (_ BitVec 64))
(declare-fun temp1092_200 () (_ BitVec 64))
(declare-fun temp1092_201 () (_ BitVec 64))
(declare-fun temp1092_202 () (_ BitVec 64))
(declare-fun temp1092_203 () (_ BitVec 64))
(declare-fun temp1092_204 () (_ BitVec 64))
(declare-fun temp1092_205 () (_ BitVec 64))
(declare-fun temp1092_206 () (_ BitVec 64))
(declare-fun temp1092_207 () (_ BitVec 64))
(declare-fun temp1092_208 () (_ BitVec 64))
(declare-fun temp1092_209 () (_ BitVec 64))
(declare-fun temp1092_210 () (_ BitVec 64))
(declare-fun temp1092_211 () (_ BitVec 64))
(declare-fun temp1092_212 () (_ BitVec 64))
(declare-fun temp1092_213 () (_ BitVec 64))
(declare-fun temp1092_214 () (_ BitVec 64))
(declare-fun temp1092_215 () (_ BitVec 64))
(declare-fun temp1092_216 () (_ BitVec 64))
(declare-fun temp1092_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1092_218 () (_ BitVec 64))
(declare-fun temp1092_220 () (_ BitVec 64))
(declare-fun temp1092_221 () (_ BitVec 64))
(declare-fun temp1092_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1092_222 () (_ BitVec 64))
(declare-fun temp1092_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1092_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1092_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1092_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1092_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1092_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1092_229 () (_ BitVec 64))
(declare-fun temp1092_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1092_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1092_232 () (_ BitVec 64))
(declare-fun temp1092_233 () (_ BitVec 64))
(declare-fun temp1092_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1092_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1092_236 () (_ BitVec 64))
(declare-fun temp1092_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1092_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1092_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1092_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1092_241 () (_ BitVec 64))
(declare-fun temp1092_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp1092_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp1092_244 () (_ BitVec 64))
(declare-fun temp1092_245 () (_ BitVec 64))
(declare-fun var7418644 () (_ BitVec 64))
(declare-fun var7418611 () (_ BitVec 64))
(declare-fun var7287175 () (_ BitVec 64))
(declare-fun var7287171 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1092_246 () (_ BitVec 64))
(assert (= temp1092_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1092_1)))
(assert (= temp1092_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1092_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_3 #x0000000000000000))
(assert (= var79869 temp1092_3))
(assert (= temp1092_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1092_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_5 #x0000000000000000))
(assert (= var79914 temp1092_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1092_6 #x0000000000000000))
(assert (= temp1092_7 temp1092_6))
(assert (= temp1092_8 (select ARGNAME_padding_NAMEEND_VAL temp1092_7)))
(assert (= temp1092_9 #x0000000000000001))
(assert (= temp1092_10 temp1092_9))
(assert (= temp1092_11 (select ARGNAME_padding_NAMEEND_VAL temp1092_10)))
(assert (= temp1092_12 #x0000000000000002))
(assert (= temp1092_13 temp1092_12))
(assert (= temp1092_14 (select ARGNAME_padding_NAMEEND_VAL temp1092_13)))
(assert (= temp1092_15 #x0000000000000003))
(assert (= temp1092_16 temp1092_15))
(assert (= temp1092_17 (select ARGNAME_padding_NAMEEND_VAL temp1092_16)))
(assert (= temp1092_18 #x0000000000000004))
(assert (= temp1092_19 temp1092_18))
(assert (= temp1092_20 (select ARGNAME_padding_NAMEEND_VAL temp1092_19)))
(assert (= temp1092_21 #x0000000000000005))
(assert (= temp1092_22 temp1092_21))
(assert (= temp1092_23 (select ARGNAME_padding_NAMEEND_VAL temp1092_22)))
(assert (= temp1092_24 #x0000000000000000))
(assert (= temp1092_25 #x0000000000000000))
(assert (= temp1092_26 temp1092_25))
(assert (= temp1092_27 (select ARGNAME_padding_NAMEEND_VAL temp1092_26)))
(assert (= temp1092_28 #x0000000000000000))
(assert (= temp1092_29 #x0000000000000001))
(assert (= temp1092_30 temp1092_29))
(assert (= temp1092_31 (select ARGNAME_padding_NAMEEND_VAL temp1092_30)))
(assert (= temp1092_32 #x0000000000000000))
(assert (= temp1092_33 #x0000000000000002))
(assert (= temp1092_34 temp1092_33))
(assert (= temp1092_35 (select ARGNAME_padding_NAMEEND_VAL temp1092_34)))
(assert (= temp1092_36 #x0000000000000000))
(assert (= temp1092_37 #x0000000000000003))
(assert (= temp1092_38 temp1092_37))
(assert (= temp1092_39 (select ARGNAME_padding_NAMEEND_VAL temp1092_38)))
(assert (= temp1092_40 #x0000000000000000))
(assert (= temp1092_41 #x0000000000000004))
(assert (= temp1092_42 temp1092_41))
(assert (= temp1092_43 (select ARGNAME_padding_NAMEEND_VAL temp1092_42)))
(assert (= temp1092_44 #x0000000000000000))
(assert (= temp1092_45 #x0000000000000005))
(assert (= temp1092_46 temp1092_45))
(assert (= temp1092_47 (select ARGNAME_padding_NAMEEND_VAL temp1092_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1092_27 temp1092_24)
             (bvslt temp1092_31 temp1092_28)
             (bvslt temp1092_35 temp1092_32)
             (bvslt temp1092_39 temp1092_36)
             (bvslt temp1092_43 temp1092_40)
             (bvslt temp1092_47 temp1092_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_48 #x0000000000000000))
(assert (= var1322786 temp1092_48))
(assert (= temp1092_49 #x0000000000000000))
(assert (= temp1092_50 temp1092_49))
(assert (= temp1092_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_50)))
(assert (= temp1092_52 #x0000000000000001))
(assert (= temp1092_53 temp1092_52))
(assert (= temp1092_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_53)))
(assert (= temp1092_55 #x0000000000000002))
(assert (= temp1092_56 temp1092_55))
(assert (= temp1092_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_56)))
(assert (= temp1092_58 #x0000000000000003))
(assert (= temp1092_59 temp1092_58))
(assert (= temp1092_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_59)))
(assert (= temp1092_61 #x0000000000000004))
(assert (= temp1092_62 temp1092_61))
(assert (= temp1092_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_62)))
(assert (= temp1092_64 #x0000000000000005))
(assert (= temp1092_65 temp1092_64))
(assert (= temp1092_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_65)))
(assert (= temp1092_67 #x0000000000000000))
(assert (= temp1092_68 #x0000000000000000))
(assert (= temp1092_69 temp1092_68))
(assert (= temp1092_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_69)))
(assert (= temp1092_71 #x0000000000000000))
(assert (= temp1092_72 #x0000000000000001))
(assert (= temp1092_73 temp1092_72))
(assert (= temp1092_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_73)))
(assert (= temp1092_75 #x0000000000000000))
(assert (= temp1092_76 #x0000000000000002))
(assert (= temp1092_77 temp1092_76))
(assert (= temp1092_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_77)))
(assert (= temp1092_79 #x0000000000000000))
(assert (= temp1092_80 #x0000000000000003))
(assert (= temp1092_81 temp1092_80))
(assert (= temp1092_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_81)))
(assert (= temp1092_83 #x0000000000000000))
(assert (= temp1092_84 #x0000000000000004))
(assert (= temp1092_85 temp1092_84))
(assert (= temp1092_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_85)))
(assert (= temp1092_87 #x0000000000000000))
(assert (= temp1092_88 #x0000000000000005))
(assert (= temp1092_89 temp1092_88))
(assert (= temp1092_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1092_70 temp1092_67)
             (bvslt temp1092_74 temp1092_71)
             (bvslt temp1092_78 temp1092_75)
             (bvslt temp1092_82 temp1092_79)
             (bvslt temp1092_86 temp1092_83)
             (bvslt temp1092_90 temp1092_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_91 #x0000000000000000))
(assert (= var1322797 temp1092_91))
(assert (= temp1092_92 #x0000000000000000))
(assert (= temp1092_93 temp1092_92))
(assert (= temp1092_94 (select ARGNAME_stride_NAMEEND_VAL temp1092_93)))
(assert (= temp1092_95 #x0000000000000001))
(assert (= temp1092_96 temp1092_95))
(assert (= temp1092_97 (select ARGNAME_stride_NAMEEND_VAL temp1092_96)))
(assert (= temp1092_98 #x0000000000000002))
(assert (= temp1092_99 temp1092_98))
(assert (= temp1092_100 (select ARGNAME_stride_NAMEEND_VAL temp1092_99)))
(assert (= temp1092_101 #x0000000000000003))
(assert (= temp1092_102 temp1092_101))
(assert (= temp1092_103 (select ARGNAME_stride_NAMEEND_VAL temp1092_102)))
(assert (= temp1092_104 #x0000000000000004))
(assert (= temp1092_105 temp1092_104))
(assert (= temp1092_106 (select ARGNAME_stride_NAMEEND_VAL temp1092_105)))
(assert (= temp1092_107 #x0000000000000005))
(assert (= temp1092_108 temp1092_107))
(assert (= temp1092_109 (select ARGNAME_stride_NAMEEND_VAL temp1092_108)))
(assert (= temp1092_110 #x0000000000000000))
(assert (= temp1092_111 #x0000000000000000))
(assert (= temp1092_112 temp1092_111))
(assert (= temp1092_113 (select ARGNAME_stride_NAMEEND_VAL temp1092_112)))
(assert (= temp1092_114 #x0000000000000000))
(assert (= temp1092_115 #x0000000000000001))
(assert (= temp1092_116 temp1092_115))
(assert (= temp1092_117 (select ARGNAME_stride_NAMEEND_VAL temp1092_116)))
(assert (= temp1092_118 #x0000000000000000))
(assert (= temp1092_119 #x0000000000000002))
(assert (= temp1092_120 temp1092_119))
(assert (= temp1092_121 (select ARGNAME_stride_NAMEEND_VAL temp1092_120)))
(assert (= temp1092_122 #x0000000000000000))
(assert (= temp1092_123 #x0000000000000003))
(assert (= temp1092_124 temp1092_123))
(assert (= temp1092_125 (select ARGNAME_stride_NAMEEND_VAL temp1092_124)))
(assert (= temp1092_126 #x0000000000000000))
(assert (= temp1092_127 #x0000000000000004))
(assert (= temp1092_128 temp1092_127))
(assert (= temp1092_129 (select ARGNAME_stride_NAMEEND_VAL temp1092_128)))
(assert (= temp1092_130 #x0000000000000000))
(assert (= temp1092_131 #x0000000000000005))
(assert (= temp1092_132 temp1092_131))
(assert (= temp1092_133 (select ARGNAME_stride_NAMEEND_VAL temp1092_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1092_113 temp1092_110)
             (bvsle temp1092_117 temp1092_114)
             (bvsle temp1092_121 temp1092_118)
             (bvsle temp1092_125 temp1092_122)
             (bvsle temp1092_129 temp1092_126)
             (bvsle temp1092_133 temp1092_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_134 #x0000000000000000))
(assert (= var1322807 temp1092_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_135 #x0000000000000001))
(assert (= var1322819 temp1092_135))
(assert (= temp1092_136 #x0000000000000000))
(assert (= var1310898 temp1092_136))
(assert (= temp1092_137 #x0000000000000000))
(assert (= temp1092_138 temp1092_137))
(assert (= temp1092_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_138)))
(assert (= temp1092_140 #x0000000000000001))
(assert (= temp1092_141 temp1092_140))
(assert (= temp1092_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_141)))
(assert (= temp1092_143 #x0000000000000002))
(assert (= temp1092_144 temp1092_143))
(assert (= temp1092_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_144)))
(assert (= temp1092_146 #x0000000000000003))
(assert (= temp1092_147 temp1092_146))
(assert (= temp1092_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_147)))
(assert (= temp1092_149 #x0000000000000004))
(assert (= temp1092_150 temp1092_149))
(assert (= temp1092_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_150)))
(assert (= temp1092_152 #x0000000000000005))
(assert (= temp1092_153 temp1092_152))
(assert (= temp1092_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_153)))
(assert (= temp1092_156 var1310898))
(assert (= temp1092_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_156)))
(assert (= temp1092_155 temp1092_157))
(assert (= var1322852
   (ite (bvslt temp1092_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_158 #x0000000000000000))
(assert (= var1322852 temp1092_158))
(assert (= temp1092_159 #x0000000000000000))
(assert (= var1310898 temp1092_159))
(assert (= temp1092_161 var1310898))
(assert (= temp1092_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_161)))
(assert (= temp1092_160 temp1092_162))
(assert (= var1322874 (bvsmod temp1092_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1092_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1092_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1092_164 #x0000000000000001))
(assert (= var1322875 temp1092_164))
(assert (= temp1092_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1092_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_166 #x0000000000000001))
(assert (= var1322895 temp1092_166))
(assert (= temp1092_167 #x0000000000000001))
(assert (= var1311786 temp1092_167))
(assert (= temp1092_168 #x0000000000000000))
(assert (= temp1092_169 temp1092_168))
(assert (= temp1092_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_169)))
(assert (= temp1092_171 #x0000000000000001))
(assert (= temp1092_172 temp1092_171))
(assert (= temp1092_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_172)))
(assert (= temp1092_174 #x0000000000000002))
(assert (= temp1092_175 temp1092_174))
(assert (= temp1092_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_175)))
(assert (= temp1092_177 #x0000000000000003))
(assert (= temp1092_178 temp1092_177))
(assert (= temp1092_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_178)))
(assert (= temp1092_180 #x0000000000000004))
(assert (= temp1092_181 temp1092_180))
(assert (= temp1092_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_181)))
(assert (= temp1092_183 #x0000000000000005))
(assert (= temp1092_184 temp1092_183))
(assert (= temp1092_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_184)))
(assert (= temp1092_186 #x0000000000000000))
(assert (= temp1092_187
   (ite (bvslt var1311786 temp1092_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1092_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_187)))
(assert (= var1322903 temp1092_188))
(assert (bvslt (ite (bvslt var1311786 temp1092_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1092_189 #x0000000000000001))
(assert (= var1311786 temp1092_189))
(assert (= temp1092_191 var1311786))
(assert (= temp1092_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_191)))
(assert (= temp1092_190 temp1092_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1092_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1092_193 #x0000000000000001))
(assert (= var1322908 temp1092_193))
(assert (= temp1092_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1092_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_195 #x0000000000000001))
(assert (= var1322975 temp1092_195))
(assert (= temp1092_196 #x0000000000000000))
(assert (= var1310898 temp1092_196))
(assert (= temp1092_197 #x0000000000000000))
(assert (= temp1092_198 temp1092_197))
(assert (= temp1092_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1092_198)))
(assert (= temp1092_200 #x0000000000000001))
(assert (= temp1092_201 temp1092_200))
(assert (= temp1092_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1092_201)))
(assert (= temp1092_203 #x0000000000000002))
(assert (= temp1092_204 temp1092_203))
(assert (= temp1092_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1092_204)))
(assert (= temp1092_206 #x0000000000000003))
(assert (= temp1092_207 temp1092_206))
(assert (= temp1092_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1092_207)))
(assert (= temp1092_209 #x0000000000000004))
(assert (= temp1092_210 temp1092_209))
(assert (= temp1092_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1092_210)))
(assert (= temp1092_212 #x0000000000000005))
(assert (= temp1092_213 temp1092_212))
(assert (= temp1092_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1092_213)))
(assert (= temp1092_215 #x0000000000000000))
(assert (= temp1092_216
   (ite (bvslt var1310898 temp1092_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1092_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1092_216)))
(assert (= var1322977 temp1092_217))
(assert (bvslt (ite (bvslt var1310898 temp1092_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1092_218 #x0000000000000000))
(assert (= var1310898 temp1092_218))
(assert (= temp1092_220 var1310898))
(assert (= temp1092_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_220)))
(assert (= temp1092_219 temp1092_221))
(assert (= var1322980
   (ite (= var1322977 temp1092_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1092_222 #x0000000000000001))
(assert (= var1322980 temp1092_222))
(assert (= temp1092_223 #x0000000000000002))
(assert (= var1848169 temp1092_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1092_225 #x0000000000000001))
(assert (= var1323065 temp1092_225))
(assert (= temp1092_226 #x0000000000000001))
(assert (= var3486735 temp1092_226))
(assert (= temp1092_227 #x0000000000000001))
(assert (= var3814415 temp1092_227))
(assert (= temp1092_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1092_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_229 #x0000000000000001))
(assert (= var79986 temp1092_229))
(assert (= temp1092_230 #x0000000000000001))
(assert (= var80116 temp1092_230))
(assert (= var4796905 var80116))
(assert (= temp1092_231 #x0000000000000000))
(assert (= var4784306 temp1092_231))
(assert (= temp1092_232 #x0000000000000000))
(assert (= temp1092_233
   (ite (bvslt var4784306 temp1092_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1092_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_233)))
(assert (= var4796924 temp1092_234))
(assert (bvslt (ite (bvslt var4784306 temp1092_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1092_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1092_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1092_236 #x0000000000000001))
(assert (= var4796925 temp1092_236))
(assert (= temp1092_237 #x0000000000000000))
(assert (= var4996927 temp1092_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1092_238 #x0000000000000002))
(assert (= var5125763 temp1092_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_239 #x0000000000000000))
(assert (= var5191324 temp1092_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1092_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1092_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_241 #x0000000000000001))
(assert (= var81342 temp1092_241))
(assert (= temp1092_242 #x0000000000000002))
(assert (= var5977731 temp1092_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_243 #x0000000000000000))
(assert (= var6043292 temp1092_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp1092_244 #x0000000000000001))
(assert (= var79986 temp1092_244))
(assert (= temp1092_245 #x0000000000000000))
(assert (= var7418644 temp1092_245))
(assert (= var7418611 var7418644))
(assert (= var7287175 var7418611))
(assert (= var7287171 var7287175))
(assert (= var81597 var7287171))
(assert (= temp1092_246 #x0000000000000000))
(assert (= var81597 temp1092_246))
(model-add temp1092_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1092_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1092_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






