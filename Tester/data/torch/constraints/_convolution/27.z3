(declare-fun temp35_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp35_2 () (_ BitVec 64))
(declare-fun temp35_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp35_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp35_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp35_6 () (_ BitVec 64))
(declare-fun temp35_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_8 () (_ BitVec 64))
(declare-fun temp35_9 () (_ BitVec 64))
(declare-fun temp35_10 () (_ BitVec 64))
(declare-fun temp35_11 () (_ BitVec 64))
(declare-fun temp35_12 () (_ BitVec 64))
(declare-fun temp35_13 () (_ BitVec 64))
(declare-fun temp35_14 () (_ BitVec 64))
(declare-fun temp35_15 () (_ BitVec 64))
(declare-fun temp35_16 () (_ BitVec 64))
(declare-fun temp35_17 () (_ BitVec 64))
(declare-fun temp35_18 () (_ BitVec 64))
(declare-fun temp35_19 () (_ BitVec 64))
(declare-fun temp35_20 () (_ BitVec 64))
(declare-fun temp35_21 () (_ BitVec 64))
(declare-fun temp35_22 () (_ BitVec 64))
(declare-fun temp35_23 () (_ BitVec 64))
(declare-fun temp35_24 () (_ BitVec 64))
(declare-fun temp35_25 () (_ BitVec 64))
(declare-fun temp35_26 () (_ BitVec 64))
(declare-fun temp35_27 () (_ BitVec 64))
(declare-fun temp35_28 () (_ BitVec 64))
(declare-fun temp35_29 () (_ BitVec 64))
(declare-fun temp35_30 () (_ BitVec 64))
(declare-fun temp35_31 () (_ BitVec 64))
(declare-fun temp35_32 () (_ BitVec 64))
(declare-fun temp35_33 () (_ BitVec 64))
(declare-fun temp35_34 () (_ BitVec 64))
(declare-fun temp35_35 () (_ BitVec 64))
(declare-fun temp35_36 () (_ BitVec 64))
(declare-fun temp35_37 () (_ BitVec 64))
(declare-fun temp35_38 () (_ BitVec 64))
(declare-fun temp35_39 () (_ BitVec 64))
(declare-fun temp35_40 () (_ BitVec 64))
(declare-fun temp35_41 () (_ BitVec 64))
(declare-fun temp35_42 () (_ BitVec 64))
(declare-fun temp35_43 () (_ BitVec 64))
(declare-fun temp35_44 () (_ BitVec 64))
(declare-fun temp35_45 () (_ BitVec 64))
(declare-fun temp35_46 () (_ BitVec 64))
(declare-fun temp35_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp35_48 () (_ BitVec 64))
(declare-fun temp35_49 () (_ BitVec 64))
(declare-fun temp35_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_51 () (_ BitVec 64))
(declare-fun temp35_52 () (_ BitVec 64))
(declare-fun temp35_53 () (_ BitVec 64))
(declare-fun temp35_54 () (_ BitVec 64))
(declare-fun temp35_55 () (_ BitVec 64))
(declare-fun temp35_56 () (_ BitVec 64))
(declare-fun temp35_57 () (_ BitVec 64))
(declare-fun temp35_58 () (_ BitVec 64))
(declare-fun temp35_59 () (_ BitVec 64))
(declare-fun temp35_60 () (_ BitVec 64))
(declare-fun temp35_61 () (_ BitVec 64))
(declare-fun temp35_62 () (_ BitVec 64))
(declare-fun temp35_63 () (_ BitVec 64))
(declare-fun temp35_64 () (_ BitVec 64))
(declare-fun temp35_65 () (_ BitVec 64))
(declare-fun temp35_66 () (_ BitVec 64))
(declare-fun temp35_67 () (_ BitVec 64))
(declare-fun temp35_68 () (_ BitVec 64))
(declare-fun temp35_69 () (_ BitVec 64))
(declare-fun temp35_70 () (_ BitVec 64))
(declare-fun temp35_71 () (_ BitVec 64))
(declare-fun temp35_72 () (_ BitVec 64))
(declare-fun temp35_73 () (_ BitVec 64))
(declare-fun temp35_74 () (_ BitVec 64))
(declare-fun temp35_75 () (_ BitVec 64))
(declare-fun temp35_76 () (_ BitVec 64))
(declare-fun temp35_77 () (_ BitVec 64))
(declare-fun temp35_78 () (_ BitVec 64))
(declare-fun temp35_79 () (_ BitVec 64))
(declare-fun temp35_80 () (_ BitVec 64))
(declare-fun temp35_81 () (_ BitVec 64))
(declare-fun temp35_82 () (_ BitVec 64))
(declare-fun temp35_83 () (_ BitVec 64))
(declare-fun temp35_84 () (_ BitVec 64))
(declare-fun temp35_85 () (_ BitVec 64))
(declare-fun temp35_86 () (_ BitVec 64))
(declare-fun temp35_87 () (_ BitVec 64))
(declare-fun temp35_88 () (_ BitVec 64))
(declare-fun temp35_89 () (_ BitVec 64))
(declare-fun temp35_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp35_91 () (_ BitVec 64))
(declare-fun temp35_92 () (_ BitVec 64))
(declare-fun temp35_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_94 () (_ BitVec 64))
(declare-fun temp35_95 () (_ BitVec 64))
(declare-fun temp35_96 () (_ BitVec 64))
(declare-fun temp35_97 () (_ BitVec 64))
(declare-fun temp35_98 () (_ BitVec 64))
(declare-fun temp35_99 () (_ BitVec 64))
(declare-fun temp35_100 () (_ BitVec 64))
(declare-fun temp35_101 () (_ BitVec 64))
(declare-fun temp35_102 () (_ BitVec 64))
(declare-fun temp35_103 () (_ BitVec 64))
(declare-fun temp35_104 () (_ BitVec 64))
(declare-fun temp35_105 () (_ BitVec 64))
(declare-fun temp35_106 () (_ BitVec 64))
(declare-fun temp35_107 () (_ BitVec 64))
(declare-fun temp35_108 () (_ BitVec 64))
(declare-fun temp35_109 () (_ BitVec 64))
(declare-fun temp35_110 () (_ BitVec 64))
(declare-fun temp35_111 () (_ BitVec 64))
(declare-fun temp35_112 () (_ BitVec 64))
(declare-fun temp35_113 () (_ BitVec 64))
(declare-fun temp35_114 () (_ BitVec 64))
(declare-fun temp35_115 () (_ BitVec 64))
(declare-fun temp35_116 () (_ BitVec 64))
(declare-fun temp35_117 () (_ BitVec 64))
(declare-fun temp35_118 () (_ BitVec 64))
(declare-fun temp35_119 () (_ BitVec 64))
(declare-fun temp35_120 () (_ BitVec 64))
(declare-fun temp35_121 () (_ BitVec 64))
(declare-fun temp35_122 () (_ BitVec 64))
(declare-fun temp35_123 () (_ BitVec 64))
(declare-fun temp35_124 () (_ BitVec 64))
(declare-fun temp35_125 () (_ BitVec 64))
(declare-fun temp35_126 () (_ BitVec 64))
(declare-fun temp35_127 () (_ BitVec 64))
(declare-fun temp35_128 () (_ BitVec 64))
(declare-fun temp35_129 () (_ BitVec 64))
(declare-fun temp35_130 () (_ BitVec 64))
(declare-fun temp35_131 () (_ BitVec 64))
(declare-fun temp35_132 () (_ BitVec 64))
(declare-fun temp35_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp35_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp35_135 () (_ BitVec 64))
(declare-fun temp35_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp35_137 () (_ BitVec 64))
(declare-fun temp35_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_139 () (_ BitVec 64))
(declare-fun temp35_140 () (_ BitVec 64))
(declare-fun temp35_141 () (_ BitVec 64))
(declare-fun temp35_142 () (_ BitVec 64))
(declare-fun temp35_143 () (_ BitVec 64))
(declare-fun temp35_144 () (_ BitVec 64))
(declare-fun temp35_145 () (_ BitVec 64))
(declare-fun temp35_146 () (_ BitVec 64))
(declare-fun temp35_147 () (_ BitVec 64))
(declare-fun temp35_148 () (_ BitVec 64))
(declare-fun temp35_149 () (_ BitVec 64))
(declare-fun temp35_150 () (_ BitVec 64))
(declare-fun temp35_151 () (_ BitVec 64))
(declare-fun temp35_152 () (_ BitVec 64))
(declare-fun temp35_153 () (_ BitVec 64))
(declare-fun temp35_154 () (_ BitVec 64))
(declare-fun temp35_156 () (_ BitVec 64))
(declare-fun temp35_157 () (_ BitVec 64))
(declare-fun temp35_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp35_158 () (_ BitVec 64))
(declare-fun temp35_159 () (_ BitVec 64))
(declare-fun temp35_161 () (_ BitVec 64))
(declare-fun temp35_162 () (_ BitVec 64))
(declare-fun temp35_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp35_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp35_164 () (_ BitVec 64))
(declare-fun temp35_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp35_166 () (_ BitVec 64))
(declare-fun temp35_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp35_168 () (_ BitVec 64))
(declare-fun temp35_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_170 () (_ BitVec 64))
(declare-fun temp35_171 () (_ BitVec 64))
(declare-fun temp35_172 () (_ BitVec 64))
(declare-fun temp35_173 () (_ BitVec 64))
(declare-fun temp35_174 () (_ BitVec 64))
(declare-fun temp35_175 () (_ BitVec 64))
(declare-fun temp35_176 () (_ BitVec 64))
(declare-fun temp35_177 () (_ BitVec 64))
(declare-fun temp35_178 () (_ BitVec 64))
(declare-fun temp35_179 () (_ BitVec 64))
(declare-fun temp35_180 () (_ BitVec 64))
(declare-fun temp35_181 () (_ BitVec 64))
(declare-fun temp35_182 () (_ BitVec 64))
(declare-fun temp35_183 () (_ BitVec 64))
(declare-fun temp35_184 () (_ BitVec 64))
(declare-fun temp35_185 () (_ BitVec 64))
(declare-fun temp35_186 () (_ BitVec 64))
(declare-fun temp35_187 () (_ BitVec 64))
(declare-fun temp35_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp35_189 () (_ BitVec 64))
(declare-fun temp35_191 () (_ BitVec 64))
(declare-fun temp35_192 () (_ BitVec 64))
(declare-fun temp35_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp35_193 () (_ BitVec 64))
(declare-fun temp35_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp35_195 () (_ BitVec 64))
(declare-fun temp35_196 () (_ BitVec 64))
(declare-fun temp35_197 () (_ BitVec 64))
(declare-fun temp35_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_199 () (_ BitVec 64))
(declare-fun temp35_200 () (_ BitVec 64))
(declare-fun temp35_201 () (_ BitVec 64))
(declare-fun temp35_202 () (_ BitVec 64))
(declare-fun temp35_203 () (_ BitVec 64))
(declare-fun temp35_204 () (_ BitVec 64))
(declare-fun temp35_205 () (_ BitVec 64))
(declare-fun temp35_206 () (_ BitVec 64))
(declare-fun temp35_207 () (_ BitVec 64))
(declare-fun temp35_208 () (_ BitVec 64))
(declare-fun temp35_209 () (_ BitVec 64))
(declare-fun temp35_210 () (_ BitVec 64))
(declare-fun temp35_211 () (_ BitVec 64))
(declare-fun temp35_212 () (_ BitVec 64))
(declare-fun temp35_213 () (_ BitVec 64))
(declare-fun temp35_214 () (_ BitVec 64))
(declare-fun temp35_215 () (_ BitVec 64))
(declare-fun temp35_216 () (_ BitVec 64))
(declare-fun temp35_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp35_218 () (_ BitVec 64))
(declare-fun temp35_220 () (_ BitVec 64))
(declare-fun temp35_221 () (_ BitVec 64))
(declare-fun temp35_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp35_222 () (_ BitVec 64))
(declare-fun temp35_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp35_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp35_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp35_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp35_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp35_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp35_229 () (_ BitVec 64))
(declare-fun temp35_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp35_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp35_232 () (_ BitVec 64))
(declare-fun temp35_233 () (_ BitVec 64))
(declare-fun temp35_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp35_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp35_236 () (_ BitVec 64))
(declare-fun temp35_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp35_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp35_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp35_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp35_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp35_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp35_244 () (_ BitVec 64))
(declare-fun temp35_243 () (_ BitVec 64))
(declare-fun temp35_245 () (_ BitVec 64))
(declare-fun var8130026 () (_ BitVec 64))
(declare-fun temp35_247 () (_ BitVec 64))
(declare-fun temp35_246 () (_ BitVec 64))
(declare-fun temp35_248 () (_ BitVec 64))
(assert (= temp35_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp35_1)))
(assert (= temp35_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp35_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_3 #x0000000000000000))
(assert (= var79869 temp35_3))
(assert (= temp35_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp35_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_5 #x0000000000000000))
(assert (= var79914 temp35_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp35_6 #x0000000000000000))
(assert (= temp35_7 temp35_6))
(assert (= temp35_8 (select ARGNAME_padding_NAMEEND_VAL temp35_7)))
(assert (= temp35_9 #x0000000000000001))
(assert (= temp35_10 temp35_9))
(assert (= temp35_11 (select ARGNAME_padding_NAMEEND_VAL temp35_10)))
(assert (= temp35_12 #x0000000000000002))
(assert (= temp35_13 temp35_12))
(assert (= temp35_14 (select ARGNAME_padding_NAMEEND_VAL temp35_13)))
(assert (= temp35_15 #x0000000000000003))
(assert (= temp35_16 temp35_15))
(assert (= temp35_17 (select ARGNAME_padding_NAMEEND_VAL temp35_16)))
(assert (= temp35_18 #x0000000000000004))
(assert (= temp35_19 temp35_18))
(assert (= temp35_20 (select ARGNAME_padding_NAMEEND_VAL temp35_19)))
(assert (= temp35_21 #x0000000000000005))
(assert (= temp35_22 temp35_21))
(assert (= temp35_23 (select ARGNAME_padding_NAMEEND_VAL temp35_22)))
(assert (= temp35_24 #x0000000000000000))
(assert (= temp35_25 #x0000000000000000))
(assert (= temp35_26 temp35_25))
(assert (= temp35_27 (select ARGNAME_padding_NAMEEND_VAL temp35_26)))
(assert (= temp35_28 #x0000000000000000))
(assert (= temp35_29 #x0000000000000001))
(assert (= temp35_30 temp35_29))
(assert (= temp35_31 (select ARGNAME_padding_NAMEEND_VAL temp35_30)))
(assert (= temp35_32 #x0000000000000000))
(assert (= temp35_33 #x0000000000000002))
(assert (= temp35_34 temp35_33))
(assert (= temp35_35 (select ARGNAME_padding_NAMEEND_VAL temp35_34)))
(assert (= temp35_36 #x0000000000000000))
(assert (= temp35_37 #x0000000000000003))
(assert (= temp35_38 temp35_37))
(assert (= temp35_39 (select ARGNAME_padding_NAMEEND_VAL temp35_38)))
(assert (= temp35_40 #x0000000000000000))
(assert (= temp35_41 #x0000000000000004))
(assert (= temp35_42 temp35_41))
(assert (= temp35_43 (select ARGNAME_padding_NAMEEND_VAL temp35_42)))
(assert (= temp35_44 #x0000000000000000))
(assert (= temp35_45 #x0000000000000005))
(assert (= temp35_46 temp35_45))
(assert (= temp35_47 (select ARGNAME_padding_NAMEEND_VAL temp35_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp35_27 temp35_24)
             (bvslt temp35_31 temp35_28)
             (bvslt temp35_35 temp35_32)
             (bvslt temp35_39 temp35_36)
             (bvslt temp35_43 temp35_40)
             (bvslt temp35_47 temp35_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_48 #x0000000000000000))
(assert (= var1322786 temp35_48))
(assert (= temp35_49 #x0000000000000000))
(assert (= temp35_50 temp35_49))
(assert (= temp35_51 (select ARGNAME_output_padding_NAMEEND_VAL temp35_50)))
(assert (= temp35_52 #x0000000000000001))
(assert (= temp35_53 temp35_52))
(assert (= temp35_54 (select ARGNAME_output_padding_NAMEEND_VAL temp35_53)))
(assert (= temp35_55 #x0000000000000002))
(assert (= temp35_56 temp35_55))
(assert (= temp35_57 (select ARGNAME_output_padding_NAMEEND_VAL temp35_56)))
(assert (= temp35_58 #x0000000000000003))
(assert (= temp35_59 temp35_58))
(assert (= temp35_60 (select ARGNAME_output_padding_NAMEEND_VAL temp35_59)))
(assert (= temp35_61 #x0000000000000004))
(assert (= temp35_62 temp35_61))
(assert (= temp35_63 (select ARGNAME_output_padding_NAMEEND_VAL temp35_62)))
(assert (= temp35_64 #x0000000000000005))
(assert (= temp35_65 temp35_64))
(assert (= temp35_66 (select ARGNAME_output_padding_NAMEEND_VAL temp35_65)))
(assert (= temp35_67 #x0000000000000000))
(assert (= temp35_68 #x0000000000000000))
(assert (= temp35_69 temp35_68))
(assert (= temp35_70 (select ARGNAME_output_padding_NAMEEND_VAL temp35_69)))
(assert (= temp35_71 #x0000000000000000))
(assert (= temp35_72 #x0000000000000001))
(assert (= temp35_73 temp35_72))
(assert (= temp35_74 (select ARGNAME_output_padding_NAMEEND_VAL temp35_73)))
(assert (= temp35_75 #x0000000000000000))
(assert (= temp35_76 #x0000000000000002))
(assert (= temp35_77 temp35_76))
(assert (= temp35_78 (select ARGNAME_output_padding_NAMEEND_VAL temp35_77)))
(assert (= temp35_79 #x0000000000000000))
(assert (= temp35_80 #x0000000000000003))
(assert (= temp35_81 temp35_80))
(assert (= temp35_82 (select ARGNAME_output_padding_NAMEEND_VAL temp35_81)))
(assert (= temp35_83 #x0000000000000000))
(assert (= temp35_84 #x0000000000000004))
(assert (= temp35_85 temp35_84))
(assert (= temp35_86 (select ARGNAME_output_padding_NAMEEND_VAL temp35_85)))
(assert (= temp35_87 #x0000000000000000))
(assert (= temp35_88 #x0000000000000005))
(assert (= temp35_89 temp35_88))
(assert (= temp35_90 (select ARGNAME_output_padding_NAMEEND_VAL temp35_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp35_70 temp35_67)
             (bvslt temp35_74 temp35_71)
             (bvslt temp35_78 temp35_75)
             (bvslt temp35_82 temp35_79)
             (bvslt temp35_86 temp35_83)
             (bvslt temp35_90 temp35_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_91 #x0000000000000000))
(assert (= var1322797 temp35_91))
(assert (= temp35_92 #x0000000000000000))
(assert (= temp35_93 temp35_92))
(assert (= temp35_94 (select ARGNAME_stride_NAMEEND_VAL temp35_93)))
(assert (= temp35_95 #x0000000000000001))
(assert (= temp35_96 temp35_95))
(assert (= temp35_97 (select ARGNAME_stride_NAMEEND_VAL temp35_96)))
(assert (= temp35_98 #x0000000000000002))
(assert (= temp35_99 temp35_98))
(assert (= temp35_100 (select ARGNAME_stride_NAMEEND_VAL temp35_99)))
(assert (= temp35_101 #x0000000000000003))
(assert (= temp35_102 temp35_101))
(assert (= temp35_103 (select ARGNAME_stride_NAMEEND_VAL temp35_102)))
(assert (= temp35_104 #x0000000000000004))
(assert (= temp35_105 temp35_104))
(assert (= temp35_106 (select ARGNAME_stride_NAMEEND_VAL temp35_105)))
(assert (= temp35_107 #x0000000000000005))
(assert (= temp35_108 temp35_107))
(assert (= temp35_109 (select ARGNAME_stride_NAMEEND_VAL temp35_108)))
(assert (= temp35_110 #x0000000000000000))
(assert (= temp35_111 #x0000000000000000))
(assert (= temp35_112 temp35_111))
(assert (= temp35_113 (select ARGNAME_stride_NAMEEND_VAL temp35_112)))
(assert (= temp35_114 #x0000000000000000))
(assert (= temp35_115 #x0000000000000001))
(assert (= temp35_116 temp35_115))
(assert (= temp35_117 (select ARGNAME_stride_NAMEEND_VAL temp35_116)))
(assert (= temp35_118 #x0000000000000000))
(assert (= temp35_119 #x0000000000000002))
(assert (= temp35_120 temp35_119))
(assert (= temp35_121 (select ARGNAME_stride_NAMEEND_VAL temp35_120)))
(assert (= temp35_122 #x0000000000000000))
(assert (= temp35_123 #x0000000000000003))
(assert (= temp35_124 temp35_123))
(assert (= temp35_125 (select ARGNAME_stride_NAMEEND_VAL temp35_124)))
(assert (= temp35_126 #x0000000000000000))
(assert (= temp35_127 #x0000000000000004))
(assert (= temp35_128 temp35_127))
(assert (= temp35_129 (select ARGNAME_stride_NAMEEND_VAL temp35_128)))
(assert (= temp35_130 #x0000000000000000))
(assert (= temp35_131 #x0000000000000005))
(assert (= temp35_132 temp35_131))
(assert (= temp35_133 (select ARGNAME_stride_NAMEEND_VAL temp35_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp35_113 temp35_110)
             (bvsle temp35_117 temp35_114)
             (bvsle temp35_121 temp35_118)
             (bvsle temp35_125 temp35_122)
             (bvsle temp35_129 temp35_126)
             (bvsle temp35_133 temp35_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_134 #x0000000000000000))
(assert (= var1322807 temp35_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_135 #x0000000000000001))
(assert (= var1322819 temp35_135))
(assert (= temp35_136 #x0000000000000000))
(assert (= var1310898 temp35_136))
(assert (= temp35_137 #x0000000000000000))
(assert (= temp35_138 temp35_137))
(assert (= temp35_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_138)))
(assert (= temp35_140 #x0000000000000001))
(assert (= temp35_141 temp35_140))
(assert (= temp35_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_141)))
(assert (= temp35_143 #x0000000000000002))
(assert (= temp35_144 temp35_143))
(assert (= temp35_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_144)))
(assert (= temp35_146 #x0000000000000003))
(assert (= temp35_147 temp35_146))
(assert (= temp35_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_147)))
(assert (= temp35_149 #x0000000000000004))
(assert (= temp35_150 temp35_149))
(assert (= temp35_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_150)))
(assert (= temp35_152 #x0000000000000005))
(assert (= temp35_153 temp35_152))
(assert (= temp35_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_153)))
(assert (= temp35_156 var1310898))
(assert (= temp35_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_156)))
(assert (= temp35_155 temp35_157))
(assert (= var1322852
   (ite (bvslt temp35_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_158 #x0000000000000000))
(assert (= var1322852 temp35_158))
(assert (= temp35_159 #x0000000000000000))
(assert (= var1310898 temp35_159))
(assert (= temp35_161 var1310898))
(assert (= temp35_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_161)))
(assert (= temp35_160 temp35_162))
(assert (= var1322874 (bvsmod temp35_160 ARGNAME_groups_NAMEEND)))
(assert (= temp35_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp35_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp35_164 #x0000000000000001))
(assert (= var1322875 temp35_164))
(assert (= temp35_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp35_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_166 #x0000000000000001))
(assert (= var1322895 temp35_166))
(assert (= temp35_167 #x0000000000000001))
(assert (= var1311786 temp35_167))
(assert (= temp35_168 #x0000000000000000))
(assert (= temp35_169 temp35_168))
(assert (= temp35_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_169)))
(assert (= temp35_171 #x0000000000000001))
(assert (= temp35_172 temp35_171))
(assert (= temp35_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_172)))
(assert (= temp35_174 #x0000000000000002))
(assert (= temp35_175 temp35_174))
(assert (= temp35_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_175)))
(assert (= temp35_177 #x0000000000000003))
(assert (= temp35_178 temp35_177))
(assert (= temp35_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_178)))
(assert (= temp35_180 #x0000000000000004))
(assert (= temp35_181 temp35_180))
(assert (= temp35_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_181)))
(assert (= temp35_183 #x0000000000000005))
(assert (= temp35_184 temp35_183))
(assert (= temp35_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_184)))
(assert (= temp35_186 #x0000000000000000))
(assert (= temp35_187
   (ite (bvslt var1311786 temp35_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp35_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_187)))
(assert (= var1322903 temp35_188))
(assert (bvslt (ite (bvslt var1311786 temp35_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp35_189 #x0000000000000001))
(assert (= var1311786 temp35_189))
(assert (= temp35_191 var1311786))
(assert (= temp35_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_191)))
(assert (= temp35_190 temp35_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp35_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp35_193 #x0000000000000001))
(assert (= var1322908 temp35_193))
(assert (= temp35_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp35_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_195 #x0000000000000001))
(assert (= var1322975 temp35_195))
(assert (= temp35_196 #x0000000000000000))
(assert (= var1310898 temp35_196))
(assert (= temp35_197 #x0000000000000000))
(assert (= temp35_198 temp35_197))
(assert (= temp35_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp35_198)))
(assert (= temp35_200 #x0000000000000001))
(assert (= temp35_201 temp35_200))
(assert (= temp35_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp35_201)))
(assert (= temp35_203 #x0000000000000002))
(assert (= temp35_204 temp35_203))
(assert (= temp35_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp35_204)))
(assert (= temp35_206 #x0000000000000003))
(assert (= temp35_207 temp35_206))
(assert (= temp35_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp35_207)))
(assert (= temp35_209 #x0000000000000004))
(assert (= temp35_210 temp35_209))
(assert (= temp35_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp35_210)))
(assert (= temp35_212 #x0000000000000005))
(assert (= temp35_213 temp35_212))
(assert (= temp35_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp35_213)))
(assert (= temp35_215 #x0000000000000000))
(assert (= temp35_216
   (ite (bvslt var1310898 temp35_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp35_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp35_216)))
(assert (= var1322977 temp35_217))
(assert (bvslt (ite (bvslt var1310898 temp35_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp35_218 #x0000000000000000))
(assert (= var1310898 temp35_218))
(assert (= temp35_220 var1310898))
(assert (= temp35_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_220)))
(assert (= temp35_219 temp35_221))
(assert (= var1322980
   (ite (= var1322977 temp35_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp35_222 #x0000000000000001))
(assert (= var1322980 temp35_222))
(assert (= temp35_223 #x0000000000000002))
(assert (= var1848169 temp35_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp35_225 #x0000000000000001))
(assert (= var1323065 temp35_225))
(assert (= temp35_226 #x0000000000000001))
(assert (= var3486735 temp35_226))
(assert (= temp35_227 #x0000000000000001))
(assert (= var3814415 temp35_227))
(assert (= temp35_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp35_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_229 #x0000000000000001))
(assert (= var79986 temp35_229))
(assert (= temp35_230 #x0000000000000001))
(assert (= var80116 temp35_230))
(assert (= var4796905 var80116))
(assert (= temp35_231 #x0000000000000000))
(assert (= var4784306 temp35_231))
(assert (= temp35_232 #x0000000000000000))
(assert (= temp35_233
   (ite (bvslt var4784306 temp35_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp35_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_233)))
(assert (= var4796924 temp35_234))
(assert (bvslt (ite (bvslt var4784306 temp35_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp35_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp35_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp35_236 #x0000000000000001))
(assert (= var4796925 temp35_236))
(assert (= temp35_237 #x0000000000000000))
(assert (= var4996927 temp35_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp35_238 #x0000000000000002))
(assert (= var5125763 temp35_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_239 #x0000000000000000))
(assert (= var5191324 temp35_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp35_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp35_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp35_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp35_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp35_244 #x0000000000000001))
(assert (= temp35_243 temp35_244))
(assert (= temp35_245 #x0000000000000001))
(assert (= var8130026 temp35_245))
(assert (= temp35_247 #xffffffffffffffff))
(assert (= temp35_246 temp35_247))
(assert (= temp35_248 #x0000000000000001))
(assert (= var79986 temp35_248))
(model-add temp35_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp35_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp35_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






