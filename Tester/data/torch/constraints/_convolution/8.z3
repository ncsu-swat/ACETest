(declare-fun temp10_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10_2 () (_ BitVec 64))
(declare-fun temp10_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp10_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10_6 () (_ BitVec 64))
(declare-fun temp10_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_8 () (_ BitVec 64))
(declare-fun temp10_9 () (_ BitVec 64))
(declare-fun temp10_10 () (_ BitVec 64))
(declare-fun temp10_11 () (_ BitVec 64))
(declare-fun temp10_12 () (_ BitVec 64))
(declare-fun temp10_13 () (_ BitVec 64))
(declare-fun temp10_14 () (_ BitVec 64))
(declare-fun temp10_15 () (_ BitVec 64))
(declare-fun temp10_16 () (_ BitVec 64))
(declare-fun temp10_17 () (_ BitVec 64))
(declare-fun temp10_18 () (_ BitVec 64))
(declare-fun temp10_19 () (_ BitVec 64))
(declare-fun temp10_20 () (_ BitVec 64))
(declare-fun temp10_21 () (_ BitVec 64))
(declare-fun temp10_22 () (_ BitVec 64))
(declare-fun temp10_23 () (_ BitVec 64))
(declare-fun temp10_24 () (_ BitVec 64))
(declare-fun temp10_25 () (_ BitVec 64))
(declare-fun temp10_26 () (_ BitVec 64))
(declare-fun temp10_27 () (_ BitVec 64))
(declare-fun temp10_28 () (_ BitVec 64))
(declare-fun temp10_29 () (_ BitVec 64))
(declare-fun temp10_30 () (_ BitVec 64))
(declare-fun temp10_31 () (_ BitVec 64))
(declare-fun temp10_32 () (_ BitVec 64))
(declare-fun temp10_33 () (_ BitVec 64))
(declare-fun temp10_34 () (_ BitVec 64))
(declare-fun temp10_35 () (_ BitVec 64))
(declare-fun temp10_36 () (_ BitVec 64))
(declare-fun temp10_37 () (_ BitVec 64))
(declare-fun temp10_38 () (_ BitVec 64))
(declare-fun temp10_39 () (_ BitVec 64))
(declare-fun temp10_40 () (_ BitVec 64))
(declare-fun temp10_41 () (_ BitVec 64))
(declare-fun temp10_42 () (_ BitVec 64))
(declare-fun temp10_43 () (_ BitVec 64))
(declare-fun temp10_44 () (_ BitVec 64))
(declare-fun temp10_45 () (_ BitVec 64))
(declare-fun temp10_46 () (_ BitVec 64))
(declare-fun temp10_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp10_48 () (_ BitVec 64))
(declare-fun temp10_49 () (_ BitVec 64))
(declare-fun temp10_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_51 () (_ BitVec 64))
(declare-fun temp10_52 () (_ BitVec 64))
(declare-fun temp10_53 () (_ BitVec 64))
(declare-fun temp10_54 () (_ BitVec 64))
(declare-fun temp10_55 () (_ BitVec 64))
(declare-fun temp10_56 () (_ BitVec 64))
(declare-fun temp10_57 () (_ BitVec 64))
(declare-fun temp10_58 () (_ BitVec 64))
(declare-fun temp10_59 () (_ BitVec 64))
(declare-fun temp10_60 () (_ BitVec 64))
(declare-fun temp10_61 () (_ BitVec 64))
(declare-fun temp10_62 () (_ BitVec 64))
(declare-fun temp10_63 () (_ BitVec 64))
(declare-fun temp10_64 () (_ BitVec 64))
(declare-fun temp10_65 () (_ BitVec 64))
(declare-fun temp10_66 () (_ BitVec 64))
(declare-fun temp10_67 () (_ BitVec 64))
(declare-fun temp10_68 () (_ BitVec 64))
(declare-fun temp10_69 () (_ BitVec 64))
(declare-fun temp10_70 () (_ BitVec 64))
(declare-fun temp10_71 () (_ BitVec 64))
(declare-fun temp10_72 () (_ BitVec 64))
(declare-fun temp10_73 () (_ BitVec 64))
(declare-fun temp10_74 () (_ BitVec 64))
(declare-fun temp10_75 () (_ BitVec 64))
(declare-fun temp10_76 () (_ BitVec 64))
(declare-fun temp10_77 () (_ BitVec 64))
(declare-fun temp10_78 () (_ BitVec 64))
(declare-fun temp10_79 () (_ BitVec 64))
(declare-fun temp10_80 () (_ BitVec 64))
(declare-fun temp10_81 () (_ BitVec 64))
(declare-fun temp10_82 () (_ BitVec 64))
(declare-fun temp10_83 () (_ BitVec 64))
(declare-fun temp10_84 () (_ BitVec 64))
(declare-fun temp10_85 () (_ BitVec 64))
(declare-fun temp10_86 () (_ BitVec 64))
(declare-fun temp10_87 () (_ BitVec 64))
(declare-fun temp10_88 () (_ BitVec 64))
(declare-fun temp10_89 () (_ BitVec 64))
(declare-fun temp10_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp10_91 () (_ BitVec 64))
(declare-fun temp10_92 () (_ BitVec 64))
(declare-fun temp10_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_94 () (_ BitVec 64))
(declare-fun temp10_95 () (_ BitVec 64))
(declare-fun temp10_96 () (_ BitVec 64))
(declare-fun temp10_97 () (_ BitVec 64))
(declare-fun temp10_98 () (_ BitVec 64))
(declare-fun temp10_99 () (_ BitVec 64))
(declare-fun temp10_100 () (_ BitVec 64))
(declare-fun temp10_101 () (_ BitVec 64))
(declare-fun temp10_102 () (_ BitVec 64))
(declare-fun temp10_103 () (_ BitVec 64))
(declare-fun temp10_104 () (_ BitVec 64))
(declare-fun temp10_105 () (_ BitVec 64))
(declare-fun temp10_106 () (_ BitVec 64))
(declare-fun temp10_107 () (_ BitVec 64))
(declare-fun temp10_108 () (_ BitVec 64))
(declare-fun temp10_109 () (_ BitVec 64))
(declare-fun temp10_110 () (_ BitVec 64))
(declare-fun temp10_111 () (_ BitVec 64))
(declare-fun temp10_112 () (_ BitVec 64))
(declare-fun temp10_113 () (_ BitVec 64))
(declare-fun temp10_114 () (_ BitVec 64))
(declare-fun temp10_115 () (_ BitVec 64))
(declare-fun temp10_116 () (_ BitVec 64))
(declare-fun temp10_117 () (_ BitVec 64))
(declare-fun temp10_118 () (_ BitVec 64))
(declare-fun temp10_119 () (_ BitVec 64))
(declare-fun temp10_120 () (_ BitVec 64))
(declare-fun temp10_121 () (_ BitVec 64))
(declare-fun temp10_122 () (_ BitVec 64))
(declare-fun temp10_123 () (_ BitVec 64))
(declare-fun temp10_124 () (_ BitVec 64))
(declare-fun temp10_125 () (_ BitVec 64))
(declare-fun temp10_126 () (_ BitVec 64))
(declare-fun temp10_127 () (_ BitVec 64))
(declare-fun temp10_128 () (_ BitVec 64))
(declare-fun temp10_129 () (_ BitVec 64))
(declare-fun temp10_130 () (_ BitVec 64))
(declare-fun temp10_131 () (_ BitVec 64))
(declare-fun temp10_132 () (_ BitVec 64))
(declare-fun temp10_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp10_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp10_135 () (_ BitVec 64))
(declare-fun temp10_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp10_137 () (_ BitVec 64))
(declare-fun temp10_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_139 () (_ BitVec 64))
(declare-fun temp10_140 () (_ BitVec 64))
(declare-fun temp10_141 () (_ BitVec 64))
(declare-fun temp10_142 () (_ BitVec 64))
(declare-fun temp10_143 () (_ BitVec 64))
(declare-fun temp10_144 () (_ BitVec 64))
(declare-fun temp10_145 () (_ BitVec 64))
(declare-fun temp10_146 () (_ BitVec 64))
(declare-fun temp10_147 () (_ BitVec 64))
(declare-fun temp10_148 () (_ BitVec 64))
(declare-fun temp10_149 () (_ BitVec 64))
(declare-fun temp10_150 () (_ BitVec 64))
(declare-fun temp10_151 () (_ BitVec 64))
(declare-fun temp10_152 () (_ BitVec 64))
(declare-fun temp10_153 () (_ BitVec 64))
(declare-fun temp10_154 () (_ BitVec 64))
(declare-fun temp10_156 () (_ BitVec 64))
(declare-fun temp10_157 () (_ BitVec 64))
(declare-fun temp10_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp10_158 () (_ BitVec 64))
(declare-fun temp10_159 () (_ BitVec 64))
(declare-fun temp10_161 () (_ BitVec 64))
(declare-fun temp10_162 () (_ BitVec 64))
(declare-fun temp10_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp10_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp10_164 () (_ BitVec 64))
(declare-fun temp10_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp10_166 () (_ BitVec 64))
(declare-fun temp10_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp10_168 () (_ BitVec 64))
(declare-fun temp10_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_170 () (_ BitVec 64))
(declare-fun temp10_171 () (_ BitVec 64))
(declare-fun temp10_172 () (_ BitVec 64))
(declare-fun temp10_173 () (_ BitVec 64))
(declare-fun temp10_174 () (_ BitVec 64))
(declare-fun temp10_175 () (_ BitVec 64))
(declare-fun temp10_176 () (_ BitVec 64))
(declare-fun temp10_177 () (_ BitVec 64))
(declare-fun temp10_178 () (_ BitVec 64))
(declare-fun temp10_179 () (_ BitVec 64))
(declare-fun temp10_180 () (_ BitVec 64))
(declare-fun temp10_181 () (_ BitVec 64))
(declare-fun temp10_182 () (_ BitVec 64))
(declare-fun temp10_183 () (_ BitVec 64))
(declare-fun temp10_184 () (_ BitVec 64))
(declare-fun temp10_185 () (_ BitVec 64))
(declare-fun temp10_186 () (_ BitVec 64))
(declare-fun temp10_187 () (_ BitVec 64))
(declare-fun temp10_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp10_189 () (_ BitVec 64))
(declare-fun temp10_191 () (_ BitVec 64))
(declare-fun temp10_192 () (_ BitVec 64))
(declare-fun temp10_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp10_193 () (_ BitVec 64))
(declare-fun temp10_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp10_195 () (_ BitVec 64))
(declare-fun temp10_196 () (_ BitVec 64))
(declare-fun temp10_197 () (_ BitVec 64))
(declare-fun temp10_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_199 () (_ BitVec 64))
(declare-fun temp10_200 () (_ BitVec 64))
(declare-fun temp10_201 () (_ BitVec 64))
(declare-fun temp10_202 () (_ BitVec 64))
(declare-fun temp10_203 () (_ BitVec 64))
(declare-fun temp10_204 () (_ BitVec 64))
(declare-fun temp10_205 () (_ BitVec 64))
(declare-fun temp10_206 () (_ BitVec 64))
(declare-fun temp10_207 () (_ BitVec 64))
(declare-fun temp10_208 () (_ BitVec 64))
(declare-fun temp10_209 () (_ BitVec 64))
(declare-fun temp10_210 () (_ BitVec 64))
(declare-fun temp10_211 () (_ BitVec 64))
(declare-fun temp10_212 () (_ BitVec 64))
(declare-fun temp10_213 () (_ BitVec 64))
(declare-fun temp10_214 () (_ BitVec 64))
(declare-fun temp10_215 () (_ BitVec 64))
(declare-fun temp10_216 () (_ BitVec 64))
(declare-fun temp10_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp10_218 () (_ BitVec 64))
(declare-fun temp10_220 () (_ BitVec 64))
(declare-fun temp10_221 () (_ BitVec 64))
(declare-fun temp10_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp10_222 () (_ BitVec 64))
(declare-fun temp10_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp10_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp10_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp10_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp10_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp10_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp10_229 () (_ BitVec 64))
(declare-fun temp10_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp10_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp10_232 () (_ BitVec 64))
(declare-fun temp10_233 () (_ BitVec 64))
(declare-fun temp10_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp10_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp10_236 () (_ BitVec 64))
(declare-fun temp10_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp10_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp10_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp10_240 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp10_241 () (_ BitVec 64))
(assert (= temp10_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp10_1)))
(assert (= temp10_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_3 #x0000000000000000))
(assert (= var79869 temp10_3))
(assert (= temp10_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp10_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_5 #x0000000000000000))
(assert (= var79914 temp10_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp10_6 #x0000000000000000))
(assert (= temp10_7 temp10_6))
(assert (= temp10_8 (select ARGNAME_padding_NAMEEND_VAL temp10_7)))
(assert (= temp10_9 #x0000000000000001))
(assert (= temp10_10 temp10_9))
(assert (= temp10_11 (select ARGNAME_padding_NAMEEND_VAL temp10_10)))
(assert (= temp10_12 #x0000000000000002))
(assert (= temp10_13 temp10_12))
(assert (= temp10_14 (select ARGNAME_padding_NAMEEND_VAL temp10_13)))
(assert (= temp10_15 #x0000000000000003))
(assert (= temp10_16 temp10_15))
(assert (= temp10_17 (select ARGNAME_padding_NAMEEND_VAL temp10_16)))
(assert (= temp10_18 #x0000000000000004))
(assert (= temp10_19 temp10_18))
(assert (= temp10_20 (select ARGNAME_padding_NAMEEND_VAL temp10_19)))
(assert (= temp10_21 #x0000000000000005))
(assert (= temp10_22 temp10_21))
(assert (= temp10_23 (select ARGNAME_padding_NAMEEND_VAL temp10_22)))
(assert (= temp10_24 #x0000000000000000))
(assert (= temp10_25 #x0000000000000000))
(assert (= temp10_26 temp10_25))
(assert (= temp10_27 (select ARGNAME_padding_NAMEEND_VAL temp10_26)))
(assert (= temp10_28 #x0000000000000000))
(assert (= temp10_29 #x0000000000000001))
(assert (= temp10_30 temp10_29))
(assert (= temp10_31 (select ARGNAME_padding_NAMEEND_VAL temp10_30)))
(assert (= temp10_32 #x0000000000000000))
(assert (= temp10_33 #x0000000000000002))
(assert (= temp10_34 temp10_33))
(assert (= temp10_35 (select ARGNAME_padding_NAMEEND_VAL temp10_34)))
(assert (= temp10_36 #x0000000000000000))
(assert (= temp10_37 #x0000000000000003))
(assert (= temp10_38 temp10_37))
(assert (= temp10_39 (select ARGNAME_padding_NAMEEND_VAL temp10_38)))
(assert (= temp10_40 #x0000000000000000))
(assert (= temp10_41 #x0000000000000004))
(assert (= temp10_42 temp10_41))
(assert (= temp10_43 (select ARGNAME_padding_NAMEEND_VAL temp10_42)))
(assert (= temp10_44 #x0000000000000000))
(assert (= temp10_45 #x0000000000000005))
(assert (= temp10_46 temp10_45))
(assert (= temp10_47 (select ARGNAME_padding_NAMEEND_VAL temp10_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp10_27 temp10_24)
             (bvslt temp10_31 temp10_28)
             (bvslt temp10_35 temp10_32)
             (bvslt temp10_39 temp10_36)
             (bvslt temp10_43 temp10_40)
             (bvslt temp10_47 temp10_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_48 #x0000000000000000))
(assert (= var1322786 temp10_48))
(assert (= temp10_49 #x0000000000000000))
(assert (= temp10_50 temp10_49))
(assert (= temp10_51 (select ARGNAME_output_padding_NAMEEND_VAL temp10_50)))
(assert (= temp10_52 #x0000000000000001))
(assert (= temp10_53 temp10_52))
(assert (= temp10_54 (select ARGNAME_output_padding_NAMEEND_VAL temp10_53)))
(assert (= temp10_55 #x0000000000000002))
(assert (= temp10_56 temp10_55))
(assert (= temp10_57 (select ARGNAME_output_padding_NAMEEND_VAL temp10_56)))
(assert (= temp10_58 #x0000000000000003))
(assert (= temp10_59 temp10_58))
(assert (= temp10_60 (select ARGNAME_output_padding_NAMEEND_VAL temp10_59)))
(assert (= temp10_61 #x0000000000000004))
(assert (= temp10_62 temp10_61))
(assert (= temp10_63 (select ARGNAME_output_padding_NAMEEND_VAL temp10_62)))
(assert (= temp10_64 #x0000000000000005))
(assert (= temp10_65 temp10_64))
(assert (= temp10_66 (select ARGNAME_output_padding_NAMEEND_VAL temp10_65)))
(assert (= temp10_67 #x0000000000000000))
(assert (= temp10_68 #x0000000000000000))
(assert (= temp10_69 temp10_68))
(assert (= temp10_70 (select ARGNAME_output_padding_NAMEEND_VAL temp10_69)))
(assert (= temp10_71 #x0000000000000000))
(assert (= temp10_72 #x0000000000000001))
(assert (= temp10_73 temp10_72))
(assert (= temp10_74 (select ARGNAME_output_padding_NAMEEND_VAL temp10_73)))
(assert (= temp10_75 #x0000000000000000))
(assert (= temp10_76 #x0000000000000002))
(assert (= temp10_77 temp10_76))
(assert (= temp10_78 (select ARGNAME_output_padding_NAMEEND_VAL temp10_77)))
(assert (= temp10_79 #x0000000000000000))
(assert (= temp10_80 #x0000000000000003))
(assert (= temp10_81 temp10_80))
(assert (= temp10_82 (select ARGNAME_output_padding_NAMEEND_VAL temp10_81)))
(assert (= temp10_83 #x0000000000000000))
(assert (= temp10_84 #x0000000000000004))
(assert (= temp10_85 temp10_84))
(assert (= temp10_86 (select ARGNAME_output_padding_NAMEEND_VAL temp10_85)))
(assert (= temp10_87 #x0000000000000000))
(assert (= temp10_88 #x0000000000000005))
(assert (= temp10_89 temp10_88))
(assert (= temp10_90 (select ARGNAME_output_padding_NAMEEND_VAL temp10_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp10_70 temp10_67)
             (bvslt temp10_74 temp10_71)
             (bvslt temp10_78 temp10_75)
             (bvslt temp10_82 temp10_79)
             (bvslt temp10_86 temp10_83)
             (bvslt temp10_90 temp10_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_91 #x0000000000000000))
(assert (= var1322797 temp10_91))
(assert (= temp10_92 #x0000000000000000))
(assert (= temp10_93 temp10_92))
(assert (= temp10_94 (select ARGNAME_stride_NAMEEND_VAL temp10_93)))
(assert (= temp10_95 #x0000000000000001))
(assert (= temp10_96 temp10_95))
(assert (= temp10_97 (select ARGNAME_stride_NAMEEND_VAL temp10_96)))
(assert (= temp10_98 #x0000000000000002))
(assert (= temp10_99 temp10_98))
(assert (= temp10_100 (select ARGNAME_stride_NAMEEND_VAL temp10_99)))
(assert (= temp10_101 #x0000000000000003))
(assert (= temp10_102 temp10_101))
(assert (= temp10_103 (select ARGNAME_stride_NAMEEND_VAL temp10_102)))
(assert (= temp10_104 #x0000000000000004))
(assert (= temp10_105 temp10_104))
(assert (= temp10_106 (select ARGNAME_stride_NAMEEND_VAL temp10_105)))
(assert (= temp10_107 #x0000000000000005))
(assert (= temp10_108 temp10_107))
(assert (= temp10_109 (select ARGNAME_stride_NAMEEND_VAL temp10_108)))
(assert (= temp10_110 #x0000000000000000))
(assert (= temp10_111 #x0000000000000000))
(assert (= temp10_112 temp10_111))
(assert (= temp10_113 (select ARGNAME_stride_NAMEEND_VAL temp10_112)))
(assert (= temp10_114 #x0000000000000000))
(assert (= temp10_115 #x0000000000000001))
(assert (= temp10_116 temp10_115))
(assert (= temp10_117 (select ARGNAME_stride_NAMEEND_VAL temp10_116)))
(assert (= temp10_118 #x0000000000000000))
(assert (= temp10_119 #x0000000000000002))
(assert (= temp10_120 temp10_119))
(assert (= temp10_121 (select ARGNAME_stride_NAMEEND_VAL temp10_120)))
(assert (= temp10_122 #x0000000000000000))
(assert (= temp10_123 #x0000000000000003))
(assert (= temp10_124 temp10_123))
(assert (= temp10_125 (select ARGNAME_stride_NAMEEND_VAL temp10_124)))
(assert (= temp10_126 #x0000000000000000))
(assert (= temp10_127 #x0000000000000004))
(assert (= temp10_128 temp10_127))
(assert (= temp10_129 (select ARGNAME_stride_NAMEEND_VAL temp10_128)))
(assert (= temp10_130 #x0000000000000000))
(assert (= temp10_131 #x0000000000000005))
(assert (= temp10_132 temp10_131))
(assert (= temp10_133 (select ARGNAME_stride_NAMEEND_VAL temp10_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp10_113 temp10_110)
             (bvsle temp10_117 temp10_114)
             (bvsle temp10_121 temp10_118)
             (bvsle temp10_125 temp10_122)
             (bvsle temp10_129 temp10_126)
             (bvsle temp10_133 temp10_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_134 #x0000000000000000))
(assert (= var1322807 temp10_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_135 #x0000000000000001))
(assert (= var1322819 temp10_135))
(assert (= temp10_136 #x0000000000000000))
(assert (= var1310898 temp10_136))
(assert (= temp10_137 #x0000000000000000))
(assert (= temp10_138 temp10_137))
(assert (= temp10_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_138)))
(assert (= temp10_140 #x0000000000000001))
(assert (= temp10_141 temp10_140))
(assert (= temp10_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_141)))
(assert (= temp10_143 #x0000000000000002))
(assert (= temp10_144 temp10_143))
(assert (= temp10_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_144)))
(assert (= temp10_146 #x0000000000000003))
(assert (= temp10_147 temp10_146))
(assert (= temp10_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_147)))
(assert (= temp10_149 #x0000000000000004))
(assert (= temp10_150 temp10_149))
(assert (= temp10_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_150)))
(assert (= temp10_152 #x0000000000000005))
(assert (= temp10_153 temp10_152))
(assert (= temp10_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_153)))
(assert (= temp10_156 var1310898))
(assert (= temp10_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_156)))
(assert (= temp10_155 temp10_157))
(assert (= var1322852
   (ite (bvslt temp10_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_158 #x0000000000000000))
(assert (= var1322852 temp10_158))
(assert (= temp10_159 #x0000000000000000))
(assert (= var1310898 temp10_159))
(assert (= temp10_161 var1310898))
(assert (= temp10_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_161)))
(assert (= temp10_160 temp10_162))
(assert (= var1322874 (bvsmod temp10_160 ARGNAME_groups_NAMEEND)))
(assert (= temp10_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp10_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_164 #x0000000000000001))
(assert (= var1322875 temp10_164))
(assert (= temp10_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp10_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_166 #x0000000000000001))
(assert (= var1322895 temp10_166))
(assert (= temp10_167 #x0000000000000001))
(assert (= var1311786 temp10_167))
(assert (= temp10_168 #x0000000000000000))
(assert (= temp10_169 temp10_168))
(assert (= temp10_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_169)))
(assert (= temp10_171 #x0000000000000001))
(assert (= temp10_172 temp10_171))
(assert (= temp10_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_172)))
(assert (= temp10_174 #x0000000000000002))
(assert (= temp10_175 temp10_174))
(assert (= temp10_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_175)))
(assert (= temp10_177 #x0000000000000003))
(assert (= temp10_178 temp10_177))
(assert (= temp10_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_178)))
(assert (= temp10_180 #x0000000000000004))
(assert (= temp10_181 temp10_180))
(assert (= temp10_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_181)))
(assert (= temp10_183 #x0000000000000005))
(assert (= temp10_184 temp10_183))
(assert (= temp10_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_184)))
(assert (= temp10_186 #x0000000000000000))
(assert (= temp10_187
   (ite (bvslt var1311786 temp10_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp10_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_187)))
(assert (= var1322903 temp10_188))
(assert (bvslt (ite (bvslt var1311786 temp10_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10_189 #x0000000000000001))
(assert (= var1311786 temp10_189))
(assert (= temp10_191 var1311786))
(assert (= temp10_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_191)))
(assert (= temp10_190 temp10_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp10_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_193 #x0000000000000001))
(assert (= var1322908 temp10_193))
(assert (= temp10_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp10_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_195 #x0000000000000001))
(assert (= var1322975 temp10_195))
(assert (= temp10_196 #x0000000000000000))
(assert (= var1310898 temp10_196))
(assert (= temp10_197 #x0000000000000000))
(assert (= temp10_198 temp10_197))
(assert (= temp10_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp10_198)))
(assert (= temp10_200 #x0000000000000001))
(assert (= temp10_201 temp10_200))
(assert (= temp10_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp10_201)))
(assert (= temp10_203 #x0000000000000002))
(assert (= temp10_204 temp10_203))
(assert (= temp10_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp10_204)))
(assert (= temp10_206 #x0000000000000003))
(assert (= temp10_207 temp10_206))
(assert (= temp10_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp10_207)))
(assert (= temp10_209 #x0000000000000004))
(assert (= temp10_210 temp10_209))
(assert (= temp10_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp10_210)))
(assert (= temp10_212 #x0000000000000005))
(assert (= temp10_213 temp10_212))
(assert (= temp10_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp10_213)))
(assert (= temp10_215 #x0000000000000000))
(assert (= temp10_216
   (ite (bvslt var1310898 temp10_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp10_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp10_216)))
(assert (= var1322977 temp10_217))
(assert (bvslt (ite (bvslt var1310898 temp10_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp10_218 #x0000000000000000))
(assert (= var1310898 temp10_218))
(assert (= temp10_220 var1310898))
(assert (= temp10_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_220)))
(assert (= temp10_219 temp10_221))
(assert (= var1322980
   (ite (= var1322977 temp10_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_222 #x0000000000000001))
(assert (= var1322980 temp10_222))
(assert (= temp10_223 #x0000000000000002))
(assert (= var1848169 temp10_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp10_225 #x0000000000000001))
(assert (= var1323065 temp10_225))
(assert (= temp10_226 #x0000000000000001))
(assert (= var3486735 temp10_226))
(assert (= temp10_227 #x0000000000000001))
(assert (= var3814415 temp10_227))
(assert (= temp10_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_229 #x0000000000000001))
(assert (= var79986 temp10_229))
(assert (= temp10_230 #x0000000000000001))
(assert (= var80116 temp10_230))
(assert (= var4796905 var80116))
(assert (= temp10_231 #x0000000000000000))
(assert (= var4784306 temp10_231))
(assert (= temp10_232 #x0000000000000000))
(assert (= temp10_233
   (ite (bvslt var4784306 temp10_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp10_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_233)))
(assert (= var4796924 temp10_234))
(assert (bvslt (ite (bvslt var4784306 temp10_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp10_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_236 #x0000000000000001))
(assert (= var4796925 temp10_236))
(assert (= temp10_237 #x0000000000000000))
(assert (= var4996927 temp10_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp10_238 #x0000000000000002))
(assert (= var5125763 temp10_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_239 #x0000000000000000))
(assert (= var5191324 temp10_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp10_240 #x0000000000000000))
(assert (= var5386640 temp10_240))
(assert (= temp10_241 #x0000000000000001))
(assert (= var79986 temp10_241))
(model-add temp10_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp10_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






