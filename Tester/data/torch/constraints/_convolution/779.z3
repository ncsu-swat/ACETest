(declare-fun temp1036_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1036_2 () (_ BitVec 64))
(declare-fun temp1036_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1036_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1036_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1036_6 () (_ BitVec 64))
(declare-fun temp1036_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_8 () (_ BitVec 64))
(declare-fun temp1036_9 () (_ BitVec 64))
(declare-fun temp1036_10 () (_ BitVec 64))
(declare-fun temp1036_11 () (_ BitVec 64))
(declare-fun temp1036_12 () (_ BitVec 64))
(declare-fun temp1036_13 () (_ BitVec 64))
(declare-fun temp1036_14 () (_ BitVec 64))
(declare-fun temp1036_15 () (_ BitVec 64))
(declare-fun temp1036_16 () (_ BitVec 64))
(declare-fun temp1036_17 () (_ BitVec 64))
(declare-fun temp1036_18 () (_ BitVec 64))
(declare-fun temp1036_19 () (_ BitVec 64))
(declare-fun temp1036_20 () (_ BitVec 64))
(declare-fun temp1036_21 () (_ BitVec 64))
(declare-fun temp1036_22 () (_ BitVec 64))
(declare-fun temp1036_23 () (_ BitVec 64))
(declare-fun temp1036_24 () (_ BitVec 64))
(declare-fun temp1036_25 () (_ BitVec 64))
(declare-fun temp1036_26 () (_ BitVec 64))
(declare-fun temp1036_27 () (_ BitVec 64))
(declare-fun temp1036_28 () (_ BitVec 64))
(declare-fun temp1036_29 () (_ BitVec 64))
(declare-fun temp1036_30 () (_ BitVec 64))
(declare-fun temp1036_31 () (_ BitVec 64))
(declare-fun temp1036_32 () (_ BitVec 64))
(declare-fun temp1036_33 () (_ BitVec 64))
(declare-fun temp1036_34 () (_ BitVec 64))
(declare-fun temp1036_35 () (_ BitVec 64))
(declare-fun temp1036_36 () (_ BitVec 64))
(declare-fun temp1036_37 () (_ BitVec 64))
(declare-fun temp1036_38 () (_ BitVec 64))
(declare-fun temp1036_39 () (_ BitVec 64))
(declare-fun temp1036_40 () (_ BitVec 64))
(declare-fun temp1036_41 () (_ BitVec 64))
(declare-fun temp1036_42 () (_ BitVec 64))
(declare-fun temp1036_43 () (_ BitVec 64))
(declare-fun temp1036_44 () (_ BitVec 64))
(declare-fun temp1036_45 () (_ BitVec 64))
(declare-fun temp1036_46 () (_ BitVec 64))
(declare-fun temp1036_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1036_48 () (_ BitVec 64))
(declare-fun temp1036_49 () (_ BitVec 64))
(declare-fun temp1036_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_51 () (_ BitVec 64))
(declare-fun temp1036_52 () (_ BitVec 64))
(declare-fun temp1036_53 () (_ BitVec 64))
(declare-fun temp1036_54 () (_ BitVec 64))
(declare-fun temp1036_55 () (_ BitVec 64))
(declare-fun temp1036_56 () (_ BitVec 64))
(declare-fun temp1036_57 () (_ BitVec 64))
(declare-fun temp1036_58 () (_ BitVec 64))
(declare-fun temp1036_59 () (_ BitVec 64))
(declare-fun temp1036_60 () (_ BitVec 64))
(declare-fun temp1036_61 () (_ BitVec 64))
(declare-fun temp1036_62 () (_ BitVec 64))
(declare-fun temp1036_63 () (_ BitVec 64))
(declare-fun temp1036_64 () (_ BitVec 64))
(declare-fun temp1036_65 () (_ BitVec 64))
(declare-fun temp1036_66 () (_ BitVec 64))
(declare-fun temp1036_67 () (_ BitVec 64))
(declare-fun temp1036_68 () (_ BitVec 64))
(declare-fun temp1036_69 () (_ BitVec 64))
(declare-fun temp1036_70 () (_ BitVec 64))
(declare-fun temp1036_71 () (_ BitVec 64))
(declare-fun temp1036_72 () (_ BitVec 64))
(declare-fun temp1036_73 () (_ BitVec 64))
(declare-fun temp1036_74 () (_ BitVec 64))
(declare-fun temp1036_75 () (_ BitVec 64))
(declare-fun temp1036_76 () (_ BitVec 64))
(declare-fun temp1036_77 () (_ BitVec 64))
(declare-fun temp1036_78 () (_ BitVec 64))
(declare-fun temp1036_79 () (_ BitVec 64))
(declare-fun temp1036_80 () (_ BitVec 64))
(declare-fun temp1036_81 () (_ BitVec 64))
(declare-fun temp1036_82 () (_ BitVec 64))
(declare-fun temp1036_83 () (_ BitVec 64))
(declare-fun temp1036_84 () (_ BitVec 64))
(declare-fun temp1036_85 () (_ BitVec 64))
(declare-fun temp1036_86 () (_ BitVec 64))
(declare-fun temp1036_87 () (_ BitVec 64))
(declare-fun temp1036_88 () (_ BitVec 64))
(declare-fun temp1036_89 () (_ BitVec 64))
(declare-fun temp1036_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1036_91 () (_ BitVec 64))
(declare-fun temp1036_92 () (_ BitVec 64))
(declare-fun temp1036_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_94 () (_ BitVec 64))
(declare-fun temp1036_95 () (_ BitVec 64))
(declare-fun temp1036_96 () (_ BitVec 64))
(declare-fun temp1036_97 () (_ BitVec 64))
(declare-fun temp1036_98 () (_ BitVec 64))
(declare-fun temp1036_99 () (_ BitVec 64))
(declare-fun temp1036_100 () (_ BitVec 64))
(declare-fun temp1036_101 () (_ BitVec 64))
(declare-fun temp1036_102 () (_ BitVec 64))
(declare-fun temp1036_103 () (_ BitVec 64))
(declare-fun temp1036_104 () (_ BitVec 64))
(declare-fun temp1036_105 () (_ BitVec 64))
(declare-fun temp1036_106 () (_ BitVec 64))
(declare-fun temp1036_107 () (_ BitVec 64))
(declare-fun temp1036_108 () (_ BitVec 64))
(declare-fun temp1036_109 () (_ BitVec 64))
(declare-fun temp1036_110 () (_ BitVec 64))
(declare-fun temp1036_111 () (_ BitVec 64))
(declare-fun temp1036_112 () (_ BitVec 64))
(declare-fun temp1036_113 () (_ BitVec 64))
(declare-fun temp1036_114 () (_ BitVec 64))
(declare-fun temp1036_115 () (_ BitVec 64))
(declare-fun temp1036_116 () (_ BitVec 64))
(declare-fun temp1036_117 () (_ BitVec 64))
(declare-fun temp1036_118 () (_ BitVec 64))
(declare-fun temp1036_119 () (_ BitVec 64))
(declare-fun temp1036_120 () (_ BitVec 64))
(declare-fun temp1036_121 () (_ BitVec 64))
(declare-fun temp1036_122 () (_ BitVec 64))
(declare-fun temp1036_123 () (_ BitVec 64))
(declare-fun temp1036_124 () (_ BitVec 64))
(declare-fun temp1036_125 () (_ BitVec 64))
(declare-fun temp1036_126 () (_ BitVec 64))
(declare-fun temp1036_127 () (_ BitVec 64))
(declare-fun temp1036_128 () (_ BitVec 64))
(declare-fun temp1036_129 () (_ BitVec 64))
(declare-fun temp1036_130 () (_ BitVec 64))
(declare-fun temp1036_131 () (_ BitVec 64))
(declare-fun temp1036_132 () (_ BitVec 64))
(declare-fun temp1036_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1036_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1036_135 () (_ BitVec 64))
(declare-fun temp1036_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1036_137 () (_ BitVec 64))
(declare-fun temp1036_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_139 () (_ BitVec 64))
(declare-fun temp1036_140 () (_ BitVec 64))
(declare-fun temp1036_141 () (_ BitVec 64))
(declare-fun temp1036_142 () (_ BitVec 64))
(declare-fun temp1036_143 () (_ BitVec 64))
(declare-fun temp1036_144 () (_ BitVec 64))
(declare-fun temp1036_145 () (_ BitVec 64))
(declare-fun temp1036_146 () (_ BitVec 64))
(declare-fun temp1036_147 () (_ BitVec 64))
(declare-fun temp1036_148 () (_ BitVec 64))
(declare-fun temp1036_149 () (_ BitVec 64))
(declare-fun temp1036_150 () (_ BitVec 64))
(declare-fun temp1036_151 () (_ BitVec 64))
(declare-fun temp1036_152 () (_ BitVec 64))
(declare-fun temp1036_153 () (_ BitVec 64))
(declare-fun temp1036_154 () (_ BitVec 64))
(declare-fun temp1036_156 () (_ BitVec 64))
(declare-fun temp1036_157 () (_ BitVec 64))
(declare-fun temp1036_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1036_158 () (_ BitVec 64))
(declare-fun temp1036_159 () (_ BitVec 64))
(declare-fun temp1036_161 () (_ BitVec 64))
(declare-fun temp1036_162 () (_ BitVec 64))
(declare-fun temp1036_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1036_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1036_164 () (_ BitVec 64))
(declare-fun temp1036_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1036_166 () (_ BitVec 64))
(declare-fun temp1036_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1036_168 () (_ BitVec 64))
(declare-fun temp1036_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_170 () (_ BitVec 64))
(declare-fun temp1036_171 () (_ BitVec 64))
(declare-fun temp1036_172 () (_ BitVec 64))
(declare-fun temp1036_173 () (_ BitVec 64))
(declare-fun temp1036_174 () (_ BitVec 64))
(declare-fun temp1036_175 () (_ BitVec 64))
(declare-fun temp1036_176 () (_ BitVec 64))
(declare-fun temp1036_177 () (_ BitVec 64))
(declare-fun temp1036_178 () (_ BitVec 64))
(declare-fun temp1036_179 () (_ BitVec 64))
(declare-fun temp1036_180 () (_ BitVec 64))
(declare-fun temp1036_181 () (_ BitVec 64))
(declare-fun temp1036_182 () (_ BitVec 64))
(declare-fun temp1036_183 () (_ BitVec 64))
(declare-fun temp1036_184 () (_ BitVec 64))
(declare-fun temp1036_185 () (_ BitVec 64))
(declare-fun temp1036_186 () (_ BitVec 64))
(declare-fun temp1036_187 () (_ BitVec 64))
(declare-fun temp1036_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1036_189 () (_ BitVec 64))
(declare-fun temp1036_191 () (_ BitVec 64))
(declare-fun temp1036_192 () (_ BitVec 64))
(declare-fun temp1036_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1036_193 () (_ BitVec 64))
(declare-fun temp1036_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1036_195 () (_ BitVec 64))
(declare-fun temp1036_196 () (_ BitVec 64))
(declare-fun temp1036_197 () (_ BitVec 64))
(declare-fun temp1036_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_199 () (_ BitVec 64))
(declare-fun temp1036_200 () (_ BitVec 64))
(declare-fun temp1036_201 () (_ BitVec 64))
(declare-fun temp1036_202 () (_ BitVec 64))
(declare-fun temp1036_203 () (_ BitVec 64))
(declare-fun temp1036_204 () (_ BitVec 64))
(declare-fun temp1036_205 () (_ BitVec 64))
(declare-fun temp1036_206 () (_ BitVec 64))
(declare-fun temp1036_207 () (_ BitVec 64))
(declare-fun temp1036_208 () (_ BitVec 64))
(declare-fun temp1036_209 () (_ BitVec 64))
(declare-fun temp1036_210 () (_ BitVec 64))
(declare-fun temp1036_211 () (_ BitVec 64))
(declare-fun temp1036_212 () (_ BitVec 64))
(declare-fun temp1036_213 () (_ BitVec 64))
(declare-fun temp1036_214 () (_ BitVec 64))
(declare-fun temp1036_215 () (_ BitVec 64))
(declare-fun temp1036_216 () (_ BitVec 64))
(declare-fun temp1036_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1036_218 () (_ BitVec 64))
(declare-fun temp1036_220 () (_ BitVec 64))
(declare-fun temp1036_221 () (_ BitVec 64))
(declare-fun temp1036_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1036_222 () (_ BitVec 64))
(declare-fun temp1036_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1036_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1036_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1036_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1036_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1036_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1036_229 () (_ BitVec 64))
(declare-fun temp1036_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1036_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1036_232 () (_ BitVec 64))
(declare-fun temp1036_233 () (_ BitVec 64))
(declare-fun temp1036_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1036_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1036_236 () (_ BitVec 64))
(declare-fun temp1036_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1036_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1036_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun var6107536 () (_ BitVec 64))
(declare-fun temp1036_240 () (_ BitVec 64))
(declare-fun temp1036_241 () (_ BitVec 64))
(declare-fun var7746324 () (_ BitVec 64))
(declare-fun var7746291 () (_ BitVec 64))
(declare-fun var7614855 () (_ BitVec 64))
(declare-fun var7614851 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1036_242 () (_ BitVec 64))
(assert (= temp1036_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1036_1)))
(assert (= temp1036_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1036_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_3 #x0000000000000000))
(assert (= var79869 temp1036_3))
(assert (= temp1036_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1036_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_5 #x0000000000000000))
(assert (= var79914 temp1036_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1036_6 #x0000000000000000))
(assert (= temp1036_7 temp1036_6))
(assert (= temp1036_8 (select ARGNAME_padding_NAMEEND_VAL temp1036_7)))
(assert (= temp1036_9 #x0000000000000001))
(assert (= temp1036_10 temp1036_9))
(assert (= temp1036_11 (select ARGNAME_padding_NAMEEND_VAL temp1036_10)))
(assert (= temp1036_12 #x0000000000000002))
(assert (= temp1036_13 temp1036_12))
(assert (= temp1036_14 (select ARGNAME_padding_NAMEEND_VAL temp1036_13)))
(assert (= temp1036_15 #x0000000000000003))
(assert (= temp1036_16 temp1036_15))
(assert (= temp1036_17 (select ARGNAME_padding_NAMEEND_VAL temp1036_16)))
(assert (= temp1036_18 #x0000000000000004))
(assert (= temp1036_19 temp1036_18))
(assert (= temp1036_20 (select ARGNAME_padding_NAMEEND_VAL temp1036_19)))
(assert (= temp1036_21 #x0000000000000005))
(assert (= temp1036_22 temp1036_21))
(assert (= temp1036_23 (select ARGNAME_padding_NAMEEND_VAL temp1036_22)))
(assert (= temp1036_24 #x0000000000000000))
(assert (= temp1036_25 #x0000000000000000))
(assert (= temp1036_26 temp1036_25))
(assert (= temp1036_27 (select ARGNAME_padding_NAMEEND_VAL temp1036_26)))
(assert (= temp1036_28 #x0000000000000000))
(assert (= temp1036_29 #x0000000000000001))
(assert (= temp1036_30 temp1036_29))
(assert (= temp1036_31 (select ARGNAME_padding_NAMEEND_VAL temp1036_30)))
(assert (= temp1036_32 #x0000000000000000))
(assert (= temp1036_33 #x0000000000000002))
(assert (= temp1036_34 temp1036_33))
(assert (= temp1036_35 (select ARGNAME_padding_NAMEEND_VAL temp1036_34)))
(assert (= temp1036_36 #x0000000000000000))
(assert (= temp1036_37 #x0000000000000003))
(assert (= temp1036_38 temp1036_37))
(assert (= temp1036_39 (select ARGNAME_padding_NAMEEND_VAL temp1036_38)))
(assert (= temp1036_40 #x0000000000000000))
(assert (= temp1036_41 #x0000000000000004))
(assert (= temp1036_42 temp1036_41))
(assert (= temp1036_43 (select ARGNAME_padding_NAMEEND_VAL temp1036_42)))
(assert (= temp1036_44 #x0000000000000000))
(assert (= temp1036_45 #x0000000000000005))
(assert (= temp1036_46 temp1036_45))
(assert (= temp1036_47 (select ARGNAME_padding_NAMEEND_VAL temp1036_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1036_27 temp1036_24)
             (bvslt temp1036_31 temp1036_28)
             (bvslt temp1036_35 temp1036_32)
             (bvslt temp1036_39 temp1036_36)
             (bvslt temp1036_43 temp1036_40)
             (bvslt temp1036_47 temp1036_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_48 #x0000000000000000))
(assert (= var1322786 temp1036_48))
(assert (= temp1036_49 #x0000000000000000))
(assert (= temp1036_50 temp1036_49))
(assert (= temp1036_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_50)))
(assert (= temp1036_52 #x0000000000000001))
(assert (= temp1036_53 temp1036_52))
(assert (= temp1036_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_53)))
(assert (= temp1036_55 #x0000000000000002))
(assert (= temp1036_56 temp1036_55))
(assert (= temp1036_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_56)))
(assert (= temp1036_58 #x0000000000000003))
(assert (= temp1036_59 temp1036_58))
(assert (= temp1036_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_59)))
(assert (= temp1036_61 #x0000000000000004))
(assert (= temp1036_62 temp1036_61))
(assert (= temp1036_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_62)))
(assert (= temp1036_64 #x0000000000000005))
(assert (= temp1036_65 temp1036_64))
(assert (= temp1036_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_65)))
(assert (= temp1036_67 #x0000000000000000))
(assert (= temp1036_68 #x0000000000000000))
(assert (= temp1036_69 temp1036_68))
(assert (= temp1036_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_69)))
(assert (= temp1036_71 #x0000000000000000))
(assert (= temp1036_72 #x0000000000000001))
(assert (= temp1036_73 temp1036_72))
(assert (= temp1036_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_73)))
(assert (= temp1036_75 #x0000000000000000))
(assert (= temp1036_76 #x0000000000000002))
(assert (= temp1036_77 temp1036_76))
(assert (= temp1036_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_77)))
(assert (= temp1036_79 #x0000000000000000))
(assert (= temp1036_80 #x0000000000000003))
(assert (= temp1036_81 temp1036_80))
(assert (= temp1036_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_81)))
(assert (= temp1036_83 #x0000000000000000))
(assert (= temp1036_84 #x0000000000000004))
(assert (= temp1036_85 temp1036_84))
(assert (= temp1036_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_85)))
(assert (= temp1036_87 #x0000000000000000))
(assert (= temp1036_88 #x0000000000000005))
(assert (= temp1036_89 temp1036_88))
(assert (= temp1036_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1036_70 temp1036_67)
             (bvslt temp1036_74 temp1036_71)
             (bvslt temp1036_78 temp1036_75)
             (bvslt temp1036_82 temp1036_79)
             (bvslt temp1036_86 temp1036_83)
             (bvslt temp1036_90 temp1036_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_91 #x0000000000000000))
(assert (= var1322797 temp1036_91))
(assert (= temp1036_92 #x0000000000000000))
(assert (= temp1036_93 temp1036_92))
(assert (= temp1036_94 (select ARGNAME_stride_NAMEEND_VAL temp1036_93)))
(assert (= temp1036_95 #x0000000000000001))
(assert (= temp1036_96 temp1036_95))
(assert (= temp1036_97 (select ARGNAME_stride_NAMEEND_VAL temp1036_96)))
(assert (= temp1036_98 #x0000000000000002))
(assert (= temp1036_99 temp1036_98))
(assert (= temp1036_100 (select ARGNAME_stride_NAMEEND_VAL temp1036_99)))
(assert (= temp1036_101 #x0000000000000003))
(assert (= temp1036_102 temp1036_101))
(assert (= temp1036_103 (select ARGNAME_stride_NAMEEND_VAL temp1036_102)))
(assert (= temp1036_104 #x0000000000000004))
(assert (= temp1036_105 temp1036_104))
(assert (= temp1036_106 (select ARGNAME_stride_NAMEEND_VAL temp1036_105)))
(assert (= temp1036_107 #x0000000000000005))
(assert (= temp1036_108 temp1036_107))
(assert (= temp1036_109 (select ARGNAME_stride_NAMEEND_VAL temp1036_108)))
(assert (= temp1036_110 #x0000000000000000))
(assert (= temp1036_111 #x0000000000000000))
(assert (= temp1036_112 temp1036_111))
(assert (= temp1036_113 (select ARGNAME_stride_NAMEEND_VAL temp1036_112)))
(assert (= temp1036_114 #x0000000000000000))
(assert (= temp1036_115 #x0000000000000001))
(assert (= temp1036_116 temp1036_115))
(assert (= temp1036_117 (select ARGNAME_stride_NAMEEND_VAL temp1036_116)))
(assert (= temp1036_118 #x0000000000000000))
(assert (= temp1036_119 #x0000000000000002))
(assert (= temp1036_120 temp1036_119))
(assert (= temp1036_121 (select ARGNAME_stride_NAMEEND_VAL temp1036_120)))
(assert (= temp1036_122 #x0000000000000000))
(assert (= temp1036_123 #x0000000000000003))
(assert (= temp1036_124 temp1036_123))
(assert (= temp1036_125 (select ARGNAME_stride_NAMEEND_VAL temp1036_124)))
(assert (= temp1036_126 #x0000000000000000))
(assert (= temp1036_127 #x0000000000000004))
(assert (= temp1036_128 temp1036_127))
(assert (= temp1036_129 (select ARGNAME_stride_NAMEEND_VAL temp1036_128)))
(assert (= temp1036_130 #x0000000000000000))
(assert (= temp1036_131 #x0000000000000005))
(assert (= temp1036_132 temp1036_131))
(assert (= temp1036_133 (select ARGNAME_stride_NAMEEND_VAL temp1036_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1036_113 temp1036_110)
             (bvsle temp1036_117 temp1036_114)
             (bvsle temp1036_121 temp1036_118)
             (bvsle temp1036_125 temp1036_122)
             (bvsle temp1036_129 temp1036_126)
             (bvsle temp1036_133 temp1036_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_134 #x0000000000000000))
(assert (= var1322807 temp1036_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_135 #x0000000000000001))
(assert (= var1322819 temp1036_135))
(assert (= temp1036_136 #x0000000000000000))
(assert (= var1310898 temp1036_136))
(assert (= temp1036_137 #x0000000000000000))
(assert (= temp1036_138 temp1036_137))
(assert (= temp1036_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_138)))
(assert (= temp1036_140 #x0000000000000001))
(assert (= temp1036_141 temp1036_140))
(assert (= temp1036_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_141)))
(assert (= temp1036_143 #x0000000000000002))
(assert (= temp1036_144 temp1036_143))
(assert (= temp1036_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_144)))
(assert (= temp1036_146 #x0000000000000003))
(assert (= temp1036_147 temp1036_146))
(assert (= temp1036_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_147)))
(assert (= temp1036_149 #x0000000000000004))
(assert (= temp1036_150 temp1036_149))
(assert (= temp1036_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_150)))
(assert (= temp1036_152 #x0000000000000005))
(assert (= temp1036_153 temp1036_152))
(assert (= temp1036_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_153)))
(assert (= temp1036_156 var1310898))
(assert (= temp1036_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_156)))
(assert (= temp1036_155 temp1036_157))
(assert (= var1322852
   (ite (bvslt temp1036_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_158 #x0000000000000000))
(assert (= var1322852 temp1036_158))
(assert (= temp1036_159 #x0000000000000000))
(assert (= var1310898 temp1036_159))
(assert (= temp1036_161 var1310898))
(assert (= temp1036_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_161)))
(assert (= temp1036_160 temp1036_162))
(assert (= var1322874 (bvsmod temp1036_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1036_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1036_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1036_164 #x0000000000000001))
(assert (= var1322875 temp1036_164))
(assert (= temp1036_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1036_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_166 #x0000000000000001))
(assert (= var1322895 temp1036_166))
(assert (= temp1036_167 #x0000000000000001))
(assert (= var1311786 temp1036_167))
(assert (= temp1036_168 #x0000000000000000))
(assert (= temp1036_169 temp1036_168))
(assert (= temp1036_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_169)))
(assert (= temp1036_171 #x0000000000000001))
(assert (= temp1036_172 temp1036_171))
(assert (= temp1036_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_172)))
(assert (= temp1036_174 #x0000000000000002))
(assert (= temp1036_175 temp1036_174))
(assert (= temp1036_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_175)))
(assert (= temp1036_177 #x0000000000000003))
(assert (= temp1036_178 temp1036_177))
(assert (= temp1036_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_178)))
(assert (= temp1036_180 #x0000000000000004))
(assert (= temp1036_181 temp1036_180))
(assert (= temp1036_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_181)))
(assert (= temp1036_183 #x0000000000000005))
(assert (= temp1036_184 temp1036_183))
(assert (= temp1036_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_184)))
(assert (= temp1036_186 #x0000000000000000))
(assert (= temp1036_187
   (ite (bvslt var1311786 temp1036_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1036_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_187)))
(assert (= var1322903 temp1036_188))
(assert (bvslt (ite (bvslt var1311786 temp1036_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1036_189 #x0000000000000001))
(assert (= var1311786 temp1036_189))
(assert (= temp1036_191 var1311786))
(assert (= temp1036_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_191)))
(assert (= temp1036_190 temp1036_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1036_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1036_193 #x0000000000000001))
(assert (= var1322908 temp1036_193))
(assert (= temp1036_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1036_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_195 #x0000000000000001))
(assert (= var1322975 temp1036_195))
(assert (= temp1036_196 #x0000000000000000))
(assert (= var1310898 temp1036_196))
(assert (= temp1036_197 #x0000000000000000))
(assert (= temp1036_198 temp1036_197))
(assert (= temp1036_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1036_198)))
(assert (= temp1036_200 #x0000000000000001))
(assert (= temp1036_201 temp1036_200))
(assert (= temp1036_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1036_201)))
(assert (= temp1036_203 #x0000000000000002))
(assert (= temp1036_204 temp1036_203))
(assert (= temp1036_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1036_204)))
(assert (= temp1036_206 #x0000000000000003))
(assert (= temp1036_207 temp1036_206))
(assert (= temp1036_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1036_207)))
(assert (= temp1036_209 #x0000000000000004))
(assert (= temp1036_210 temp1036_209))
(assert (= temp1036_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1036_210)))
(assert (= temp1036_212 #x0000000000000005))
(assert (= temp1036_213 temp1036_212))
(assert (= temp1036_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1036_213)))
(assert (= temp1036_215 #x0000000000000000))
(assert (= temp1036_216
   (ite (bvslt var1310898 temp1036_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1036_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1036_216)))
(assert (= var1322977 temp1036_217))
(assert (bvslt (ite (bvslt var1310898 temp1036_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1036_218 #x0000000000000000))
(assert (= var1310898 temp1036_218))
(assert (= temp1036_220 var1310898))
(assert (= temp1036_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_220)))
(assert (= temp1036_219 temp1036_221))
(assert (= var1322980
   (ite (= var1322977 temp1036_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1036_222 #x0000000000000001))
(assert (= var1322980 temp1036_222))
(assert (= temp1036_223 #x0000000000000002))
(assert (= var1848169 temp1036_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1036_225 #x0000000000000001))
(assert (= var1323065 temp1036_225))
(assert (= temp1036_226 #x0000000000000001))
(assert (= var3486735 temp1036_226))
(assert (= temp1036_227 #x0000000000000001))
(assert (= var3814415 temp1036_227))
(assert (= temp1036_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1036_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_229 #x0000000000000001))
(assert (= var79986 temp1036_229))
(assert (= temp1036_230 #x0000000000000001))
(assert (= var80116 temp1036_230))
(assert (= var4796905 var80116))
(assert (= temp1036_231 #x0000000000000000))
(assert (= var4784306 temp1036_231))
(assert (= temp1036_232 #x0000000000000000))
(assert (= temp1036_233
   (ite (bvslt var4784306 temp1036_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1036_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_233)))
(assert (= var4796924 temp1036_234))
(assert (bvslt (ite (bvslt var4784306 temp1036_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1036_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1036_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1036_236 #x0000000000000001))
(assert (= var4796925 temp1036_236))
(assert (= temp1036_237 #x0000000000000000))
(assert (= var4996927 temp1036_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1036_238 #x0000000000000002))
(assert (= var5125763 temp1036_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_239 #x0000000000000000))
(assert (= var5191324 temp1036_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5845392 var80129))
(assert (= var6107536 var80129))
(assert (= temp1036_240 #x0000000000000001))
(assert (= var79986 temp1036_240))
(assert (= temp1036_241 #x0000000000000000))
(assert (= var7746324 temp1036_241))
(assert (= var7746291 var7746324))
(assert (= var7614855 var7746291))
(assert (= var7614851 var7614855))
(assert (= var81597 var7614851))
(assert (= temp1036_242 #x0000000000000000))
(assert (= var81597 temp1036_242))
(model-add temp1036_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1036_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1036_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






