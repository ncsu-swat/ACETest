(declare-fun temp169_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp169_2 () (_ BitVec 64))
(declare-fun temp169_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp169_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp169_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp169_6 () (_ BitVec 64))
(declare-fun temp169_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp169_8 () (_ BitVec 64))
(declare-fun temp169_9 () (_ BitVec 64))
(declare-fun temp169_10 () (_ BitVec 64))
(declare-fun temp169_11 () (_ BitVec 64))
(declare-fun temp169_12 () (_ BitVec 64))
(declare-fun temp169_13 () (_ BitVec 64))
(declare-fun temp169_14 () (_ BitVec 64))
(declare-fun temp169_15 () (_ BitVec 64))
(declare-fun temp169_16 () (_ BitVec 64))
(declare-fun temp169_17 () (_ BitVec 64))
(declare-fun temp169_18 () (_ BitVec 64))
(declare-fun temp169_19 () (_ BitVec 64))
(declare-fun temp169_20 () (_ BitVec 64))
(declare-fun temp169_21 () (_ BitVec 64))
(declare-fun temp169_22 () (_ BitVec 64))
(declare-fun temp169_23 () (_ BitVec 64))
(declare-fun temp169_24 () (_ BitVec 64))
(declare-fun temp169_25 () (_ BitVec 64))
(declare-fun temp169_26 () (_ BitVec 64))
(declare-fun temp169_27 () (_ BitVec 64))
(declare-fun temp169_28 () (_ BitVec 64))
(declare-fun temp169_29 () (_ BitVec 64))
(declare-fun temp169_30 () (_ BitVec 64))
(declare-fun temp169_31 () (_ BitVec 64))
(declare-fun temp169_32 () (_ BitVec 64))
(declare-fun temp169_33 () (_ BitVec 64))
(declare-fun temp169_34 () (_ BitVec 64))
(declare-fun temp169_35 () (_ BitVec 64))
(declare-fun temp169_36 () (_ BitVec 64))
(declare-fun temp169_37 () (_ BitVec 64))
(declare-fun temp169_38 () (_ BitVec 64))
(declare-fun temp169_39 () (_ BitVec 64))
(declare-fun temp169_40 () (_ BitVec 64))
(declare-fun temp169_41 () (_ BitVec 64))
(declare-fun temp169_42 () (_ BitVec 64))
(declare-fun temp169_43 () (_ BitVec 64))
(declare-fun temp169_44 () (_ BitVec 64))
(declare-fun temp169_45 () (_ BitVec 64))
(declare-fun temp169_46 () (_ BitVec 64))
(declare-fun temp169_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp169_48 () (_ BitVec 64))
(declare-fun temp169_49 () (_ BitVec 64))
(declare-fun temp169_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp169_51 () (_ BitVec 64))
(declare-fun temp169_52 () (_ BitVec 64))
(declare-fun temp169_53 () (_ BitVec 64))
(declare-fun temp169_54 () (_ BitVec 64))
(declare-fun temp169_55 () (_ BitVec 64))
(declare-fun temp169_56 () (_ BitVec 64))
(declare-fun temp169_57 () (_ BitVec 64))
(declare-fun temp169_58 () (_ BitVec 64))
(declare-fun temp169_59 () (_ BitVec 64))
(declare-fun temp169_60 () (_ BitVec 64))
(declare-fun temp169_61 () (_ BitVec 64))
(declare-fun temp169_62 () (_ BitVec 64))
(declare-fun temp169_63 () (_ BitVec 64))
(declare-fun temp169_64 () (_ BitVec 64))
(declare-fun temp169_65 () (_ BitVec 64))
(declare-fun temp169_66 () (_ BitVec 64))
(declare-fun temp169_67 () (_ BitVec 64))
(declare-fun temp169_68 () (_ BitVec 64))
(declare-fun temp169_69 () (_ BitVec 64))
(declare-fun temp169_70 () (_ BitVec 64))
(declare-fun temp169_71 () (_ BitVec 64))
(declare-fun temp169_72 () (_ BitVec 64))
(declare-fun temp169_73 () (_ BitVec 64))
(declare-fun temp169_74 () (_ BitVec 64))
(declare-fun temp169_75 () (_ BitVec 64))
(declare-fun temp169_76 () (_ BitVec 64))
(declare-fun temp169_77 () (_ BitVec 64))
(declare-fun temp169_78 () (_ BitVec 64))
(declare-fun temp169_79 () (_ BitVec 64))
(declare-fun temp169_80 () (_ BitVec 64))
(declare-fun temp169_81 () (_ BitVec 64))
(declare-fun temp169_82 () (_ BitVec 64))
(declare-fun temp169_83 () (_ BitVec 64))
(declare-fun temp169_84 () (_ BitVec 64))
(declare-fun temp169_85 () (_ BitVec 64))
(declare-fun temp169_86 () (_ BitVec 64))
(declare-fun temp169_87 () (_ BitVec 64))
(declare-fun temp169_88 () (_ BitVec 64))
(declare-fun temp169_89 () (_ BitVec 64))
(declare-fun temp169_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp169_91 () (_ BitVec 64))
(declare-fun temp169_92 () (_ BitVec 64))
(declare-fun temp169_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp169_94 () (_ BitVec 64))
(declare-fun temp169_95 () (_ BitVec 64))
(declare-fun temp169_96 () (_ BitVec 64))
(declare-fun temp169_97 () (_ BitVec 64))
(declare-fun temp169_98 () (_ BitVec 64))
(declare-fun temp169_99 () (_ BitVec 64))
(declare-fun temp169_100 () (_ BitVec 64))
(declare-fun temp169_101 () (_ BitVec 64))
(declare-fun temp169_102 () (_ BitVec 64))
(declare-fun temp169_103 () (_ BitVec 64))
(declare-fun temp169_104 () (_ BitVec 64))
(declare-fun temp169_105 () (_ BitVec 64))
(declare-fun temp169_106 () (_ BitVec 64))
(declare-fun temp169_107 () (_ BitVec 64))
(declare-fun temp169_108 () (_ BitVec 64))
(declare-fun temp169_109 () (_ BitVec 64))
(declare-fun temp169_110 () (_ BitVec 64))
(declare-fun temp169_111 () (_ BitVec 64))
(declare-fun temp169_112 () (_ BitVec 64))
(declare-fun temp169_113 () (_ BitVec 64))
(declare-fun temp169_114 () (_ BitVec 64))
(declare-fun temp169_115 () (_ BitVec 64))
(declare-fun temp169_116 () (_ BitVec 64))
(declare-fun temp169_117 () (_ BitVec 64))
(declare-fun temp169_118 () (_ BitVec 64))
(declare-fun temp169_119 () (_ BitVec 64))
(declare-fun temp169_120 () (_ BitVec 64))
(declare-fun temp169_121 () (_ BitVec 64))
(declare-fun temp169_122 () (_ BitVec 64))
(declare-fun temp169_123 () (_ BitVec 64))
(declare-fun temp169_124 () (_ BitVec 64))
(declare-fun temp169_125 () (_ BitVec 64))
(declare-fun temp169_126 () (_ BitVec 64))
(declare-fun temp169_127 () (_ BitVec 64))
(declare-fun temp169_128 () (_ BitVec 64))
(declare-fun temp169_129 () (_ BitVec 64))
(declare-fun temp169_130 () (_ BitVec 64))
(declare-fun temp169_131 () (_ BitVec 64))
(declare-fun temp169_132 () (_ BitVec 64))
(declare-fun temp169_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp169_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp169_135 () (_ BitVec 64))
(declare-fun temp169_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp169_137 () (_ BitVec 64))
(declare-fun temp169_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp169_139 () (_ BitVec 64))
(declare-fun temp169_140 () (_ BitVec 64))
(declare-fun temp169_141 () (_ BitVec 64))
(declare-fun temp169_142 () (_ BitVec 64))
(declare-fun temp169_143 () (_ BitVec 64))
(declare-fun temp169_144 () (_ BitVec 64))
(declare-fun temp169_145 () (_ BitVec 64))
(declare-fun temp169_146 () (_ BitVec 64))
(declare-fun temp169_147 () (_ BitVec 64))
(declare-fun temp169_148 () (_ BitVec 64))
(declare-fun temp169_149 () (_ BitVec 64))
(declare-fun temp169_150 () (_ BitVec 64))
(declare-fun temp169_151 () (_ BitVec 64))
(declare-fun temp169_152 () (_ BitVec 64))
(declare-fun temp169_153 () (_ BitVec 64))
(declare-fun temp169_154 () (_ BitVec 64))
(declare-fun temp169_156 () (_ BitVec 64))
(declare-fun temp169_157 () (_ BitVec 64))
(declare-fun temp169_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp169_158 () (_ BitVec 64))
(declare-fun temp169_159 () (_ BitVec 64))
(declare-fun temp169_161 () (_ BitVec 64))
(declare-fun temp169_162 () (_ BitVec 64))
(declare-fun temp169_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp169_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp169_164 () (_ BitVec 64))
(declare-fun temp169_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp169_166 () (_ BitVec 64))
(declare-fun temp169_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp169_168 () (_ BitVec 64))
(declare-fun temp169_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp169_170 () (_ BitVec 64))
(declare-fun temp169_171 () (_ BitVec 64))
(declare-fun temp169_172 () (_ BitVec 64))
(declare-fun temp169_173 () (_ BitVec 64))
(declare-fun temp169_174 () (_ BitVec 64))
(declare-fun temp169_175 () (_ BitVec 64))
(declare-fun temp169_176 () (_ BitVec 64))
(declare-fun temp169_177 () (_ BitVec 64))
(declare-fun temp169_178 () (_ BitVec 64))
(declare-fun temp169_179 () (_ BitVec 64))
(declare-fun temp169_180 () (_ BitVec 64))
(declare-fun temp169_181 () (_ BitVec 64))
(declare-fun temp169_182 () (_ BitVec 64))
(declare-fun temp169_183 () (_ BitVec 64))
(declare-fun temp169_184 () (_ BitVec 64))
(declare-fun temp169_185 () (_ BitVec 64))
(declare-fun temp169_186 () (_ BitVec 64))
(declare-fun temp169_187 () (_ BitVec 64))
(declare-fun temp169_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp169_189 () (_ BitVec 64))
(declare-fun temp169_191 () (_ BitVec 64))
(declare-fun temp169_192 () (_ BitVec 64))
(declare-fun temp169_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp169_193 () (_ BitVec 64))
(declare-fun temp169_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp169_195 () (_ BitVec 64))
(declare-fun temp169_196 () (_ BitVec 64))
(declare-fun temp169_197 () (_ BitVec 64))
(declare-fun temp169_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp169_199 () (_ BitVec 64))
(declare-fun temp169_200 () (_ BitVec 64))
(declare-fun temp169_201 () (_ BitVec 64))
(declare-fun temp169_202 () (_ BitVec 64))
(declare-fun temp169_203 () (_ BitVec 64))
(declare-fun temp169_204 () (_ BitVec 64))
(declare-fun temp169_205 () (_ BitVec 64))
(declare-fun temp169_206 () (_ BitVec 64))
(declare-fun temp169_207 () (_ BitVec 64))
(declare-fun temp169_208 () (_ BitVec 64))
(declare-fun temp169_209 () (_ BitVec 64))
(declare-fun temp169_210 () (_ BitVec 64))
(declare-fun temp169_211 () (_ BitVec 64))
(declare-fun temp169_212 () (_ BitVec 64))
(declare-fun temp169_213 () (_ BitVec 64))
(declare-fun temp169_214 () (_ BitVec 64))
(declare-fun temp169_215 () (_ BitVec 64))
(declare-fun temp169_216 () (_ BitVec 64))
(declare-fun temp169_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp169_218 () (_ BitVec 64))
(declare-fun temp169_220 () (_ BitVec 64))
(declare-fun temp169_221 () (_ BitVec 64))
(declare-fun temp169_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp169_222 () (_ BitVec 64))
(declare-fun temp169_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp169_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp169_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp169_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp169_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp169_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp169_229 () (_ BitVec 64))
(declare-fun temp169_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp169_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp169_232 () (_ BitVec 64))
(declare-fun temp169_233 () (_ BitVec 64))
(declare-fun temp169_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp169_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp169_236 () (_ BitVec 64))
(declare-fun temp169_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp169_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp169_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp169_241 () (_ BitVec 64))
(declare-fun temp169_240 () (_ BitVec 64))
(declare-fun temp169_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp169_243 () (_ BitVec 64))
(declare-fun temp169_244 () (_ BitVec 64))
(declare-fun temp169_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp169_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp169_247 () (_ BitVec 64))
(declare-fun temp169_248 () (_ BitVec 64))
(assert (= temp169_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp169_1)))
(assert (= temp169_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp169_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_3 #x0000000000000000))
(assert (= var79869 temp169_3))
(assert (= temp169_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp169_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_5 #x0000000000000000))
(assert (= var79914 temp169_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp169_6 #x0000000000000000))
(assert (= temp169_7 temp169_6))
(assert (= temp169_8 (select ARGNAME_padding_NAMEEND_VAL temp169_7)))
(assert (= temp169_9 #x0000000000000001))
(assert (= temp169_10 temp169_9))
(assert (= temp169_11 (select ARGNAME_padding_NAMEEND_VAL temp169_10)))
(assert (= temp169_12 #x0000000000000002))
(assert (= temp169_13 temp169_12))
(assert (= temp169_14 (select ARGNAME_padding_NAMEEND_VAL temp169_13)))
(assert (= temp169_15 #x0000000000000003))
(assert (= temp169_16 temp169_15))
(assert (= temp169_17 (select ARGNAME_padding_NAMEEND_VAL temp169_16)))
(assert (= temp169_18 #x0000000000000004))
(assert (= temp169_19 temp169_18))
(assert (= temp169_20 (select ARGNAME_padding_NAMEEND_VAL temp169_19)))
(assert (= temp169_21 #x0000000000000005))
(assert (= temp169_22 temp169_21))
(assert (= temp169_23 (select ARGNAME_padding_NAMEEND_VAL temp169_22)))
(assert (= temp169_24 #x0000000000000000))
(assert (= temp169_25 #x0000000000000000))
(assert (= temp169_26 temp169_25))
(assert (= temp169_27 (select ARGNAME_padding_NAMEEND_VAL temp169_26)))
(assert (= temp169_28 #x0000000000000000))
(assert (= temp169_29 #x0000000000000001))
(assert (= temp169_30 temp169_29))
(assert (= temp169_31 (select ARGNAME_padding_NAMEEND_VAL temp169_30)))
(assert (= temp169_32 #x0000000000000000))
(assert (= temp169_33 #x0000000000000002))
(assert (= temp169_34 temp169_33))
(assert (= temp169_35 (select ARGNAME_padding_NAMEEND_VAL temp169_34)))
(assert (= temp169_36 #x0000000000000000))
(assert (= temp169_37 #x0000000000000003))
(assert (= temp169_38 temp169_37))
(assert (= temp169_39 (select ARGNAME_padding_NAMEEND_VAL temp169_38)))
(assert (= temp169_40 #x0000000000000000))
(assert (= temp169_41 #x0000000000000004))
(assert (= temp169_42 temp169_41))
(assert (= temp169_43 (select ARGNAME_padding_NAMEEND_VAL temp169_42)))
(assert (= temp169_44 #x0000000000000000))
(assert (= temp169_45 #x0000000000000005))
(assert (= temp169_46 temp169_45))
(assert (= temp169_47 (select ARGNAME_padding_NAMEEND_VAL temp169_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp169_27 temp169_24)
             (bvslt temp169_31 temp169_28)
             (bvslt temp169_35 temp169_32)
             (bvslt temp169_39 temp169_36)
             (bvslt temp169_43 temp169_40)
             (bvslt temp169_47 temp169_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_48 #x0000000000000000))
(assert (= var1322786 temp169_48))
(assert (= temp169_49 #x0000000000000000))
(assert (= temp169_50 temp169_49))
(assert (= temp169_51 (select ARGNAME_output_padding_NAMEEND_VAL temp169_50)))
(assert (= temp169_52 #x0000000000000001))
(assert (= temp169_53 temp169_52))
(assert (= temp169_54 (select ARGNAME_output_padding_NAMEEND_VAL temp169_53)))
(assert (= temp169_55 #x0000000000000002))
(assert (= temp169_56 temp169_55))
(assert (= temp169_57 (select ARGNAME_output_padding_NAMEEND_VAL temp169_56)))
(assert (= temp169_58 #x0000000000000003))
(assert (= temp169_59 temp169_58))
(assert (= temp169_60 (select ARGNAME_output_padding_NAMEEND_VAL temp169_59)))
(assert (= temp169_61 #x0000000000000004))
(assert (= temp169_62 temp169_61))
(assert (= temp169_63 (select ARGNAME_output_padding_NAMEEND_VAL temp169_62)))
(assert (= temp169_64 #x0000000000000005))
(assert (= temp169_65 temp169_64))
(assert (= temp169_66 (select ARGNAME_output_padding_NAMEEND_VAL temp169_65)))
(assert (= temp169_67 #x0000000000000000))
(assert (= temp169_68 #x0000000000000000))
(assert (= temp169_69 temp169_68))
(assert (= temp169_70 (select ARGNAME_output_padding_NAMEEND_VAL temp169_69)))
(assert (= temp169_71 #x0000000000000000))
(assert (= temp169_72 #x0000000000000001))
(assert (= temp169_73 temp169_72))
(assert (= temp169_74 (select ARGNAME_output_padding_NAMEEND_VAL temp169_73)))
(assert (= temp169_75 #x0000000000000000))
(assert (= temp169_76 #x0000000000000002))
(assert (= temp169_77 temp169_76))
(assert (= temp169_78 (select ARGNAME_output_padding_NAMEEND_VAL temp169_77)))
(assert (= temp169_79 #x0000000000000000))
(assert (= temp169_80 #x0000000000000003))
(assert (= temp169_81 temp169_80))
(assert (= temp169_82 (select ARGNAME_output_padding_NAMEEND_VAL temp169_81)))
(assert (= temp169_83 #x0000000000000000))
(assert (= temp169_84 #x0000000000000004))
(assert (= temp169_85 temp169_84))
(assert (= temp169_86 (select ARGNAME_output_padding_NAMEEND_VAL temp169_85)))
(assert (= temp169_87 #x0000000000000000))
(assert (= temp169_88 #x0000000000000005))
(assert (= temp169_89 temp169_88))
(assert (= temp169_90 (select ARGNAME_output_padding_NAMEEND_VAL temp169_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp169_70 temp169_67)
             (bvslt temp169_74 temp169_71)
             (bvslt temp169_78 temp169_75)
             (bvslt temp169_82 temp169_79)
             (bvslt temp169_86 temp169_83)
             (bvslt temp169_90 temp169_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_91 #x0000000000000000))
(assert (= var1322797 temp169_91))
(assert (= temp169_92 #x0000000000000000))
(assert (= temp169_93 temp169_92))
(assert (= temp169_94 (select ARGNAME_stride_NAMEEND_VAL temp169_93)))
(assert (= temp169_95 #x0000000000000001))
(assert (= temp169_96 temp169_95))
(assert (= temp169_97 (select ARGNAME_stride_NAMEEND_VAL temp169_96)))
(assert (= temp169_98 #x0000000000000002))
(assert (= temp169_99 temp169_98))
(assert (= temp169_100 (select ARGNAME_stride_NAMEEND_VAL temp169_99)))
(assert (= temp169_101 #x0000000000000003))
(assert (= temp169_102 temp169_101))
(assert (= temp169_103 (select ARGNAME_stride_NAMEEND_VAL temp169_102)))
(assert (= temp169_104 #x0000000000000004))
(assert (= temp169_105 temp169_104))
(assert (= temp169_106 (select ARGNAME_stride_NAMEEND_VAL temp169_105)))
(assert (= temp169_107 #x0000000000000005))
(assert (= temp169_108 temp169_107))
(assert (= temp169_109 (select ARGNAME_stride_NAMEEND_VAL temp169_108)))
(assert (= temp169_110 #x0000000000000000))
(assert (= temp169_111 #x0000000000000000))
(assert (= temp169_112 temp169_111))
(assert (= temp169_113 (select ARGNAME_stride_NAMEEND_VAL temp169_112)))
(assert (= temp169_114 #x0000000000000000))
(assert (= temp169_115 #x0000000000000001))
(assert (= temp169_116 temp169_115))
(assert (= temp169_117 (select ARGNAME_stride_NAMEEND_VAL temp169_116)))
(assert (= temp169_118 #x0000000000000000))
(assert (= temp169_119 #x0000000000000002))
(assert (= temp169_120 temp169_119))
(assert (= temp169_121 (select ARGNAME_stride_NAMEEND_VAL temp169_120)))
(assert (= temp169_122 #x0000000000000000))
(assert (= temp169_123 #x0000000000000003))
(assert (= temp169_124 temp169_123))
(assert (= temp169_125 (select ARGNAME_stride_NAMEEND_VAL temp169_124)))
(assert (= temp169_126 #x0000000000000000))
(assert (= temp169_127 #x0000000000000004))
(assert (= temp169_128 temp169_127))
(assert (= temp169_129 (select ARGNAME_stride_NAMEEND_VAL temp169_128)))
(assert (= temp169_130 #x0000000000000000))
(assert (= temp169_131 #x0000000000000005))
(assert (= temp169_132 temp169_131))
(assert (= temp169_133 (select ARGNAME_stride_NAMEEND_VAL temp169_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp169_113 temp169_110)
             (bvsle temp169_117 temp169_114)
             (bvsle temp169_121 temp169_118)
             (bvsle temp169_125 temp169_122)
             (bvsle temp169_129 temp169_126)
             (bvsle temp169_133 temp169_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_134 #x0000000000000000))
(assert (= var1322807 temp169_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_135 #x0000000000000001))
(assert (= var1322819 temp169_135))
(assert (= temp169_136 #x0000000000000000))
(assert (= var1310898 temp169_136))
(assert (= temp169_137 #x0000000000000000))
(assert (= temp169_138 temp169_137))
(assert (= temp169_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_138)))
(assert (= temp169_140 #x0000000000000001))
(assert (= temp169_141 temp169_140))
(assert (= temp169_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_141)))
(assert (= temp169_143 #x0000000000000002))
(assert (= temp169_144 temp169_143))
(assert (= temp169_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_144)))
(assert (= temp169_146 #x0000000000000003))
(assert (= temp169_147 temp169_146))
(assert (= temp169_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_147)))
(assert (= temp169_149 #x0000000000000004))
(assert (= temp169_150 temp169_149))
(assert (= temp169_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_150)))
(assert (= temp169_152 #x0000000000000005))
(assert (= temp169_153 temp169_152))
(assert (= temp169_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_153)))
(assert (= temp169_156 var1310898))
(assert (= temp169_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_156)))
(assert (= temp169_155 temp169_157))
(assert (= var1322852
   (ite (bvslt temp169_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_158 #x0000000000000000))
(assert (= var1322852 temp169_158))
(assert (= temp169_159 #x0000000000000000))
(assert (= var1310898 temp169_159))
(assert (= temp169_161 var1310898))
(assert (= temp169_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_161)))
(assert (= temp169_160 temp169_162))
(assert (= var1322874 (bvsmod temp169_160 ARGNAME_groups_NAMEEND)))
(assert (= temp169_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp169_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp169_164 #x0000000000000001))
(assert (= var1322875 temp169_164))
(assert (= temp169_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp169_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_166 #x0000000000000001))
(assert (= var1322895 temp169_166))
(assert (= temp169_167 #x0000000000000001))
(assert (= var1311786 temp169_167))
(assert (= temp169_168 #x0000000000000000))
(assert (= temp169_169 temp169_168))
(assert (= temp169_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp169_169)))
(assert (= temp169_171 #x0000000000000001))
(assert (= temp169_172 temp169_171))
(assert (= temp169_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp169_172)))
(assert (= temp169_174 #x0000000000000002))
(assert (= temp169_175 temp169_174))
(assert (= temp169_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp169_175)))
(assert (= temp169_177 #x0000000000000003))
(assert (= temp169_178 temp169_177))
(assert (= temp169_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp169_178)))
(assert (= temp169_180 #x0000000000000004))
(assert (= temp169_181 temp169_180))
(assert (= temp169_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp169_181)))
(assert (= temp169_183 #x0000000000000005))
(assert (= temp169_184 temp169_183))
(assert (= temp169_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp169_184)))
(assert (= temp169_186 #x0000000000000000))
(assert (= temp169_187
   (ite (bvslt var1311786 temp169_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp169_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp169_187)))
(assert (= var1322903 temp169_188))
(assert (bvslt (ite (bvslt var1311786 temp169_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp169_189 #x0000000000000001))
(assert (= var1311786 temp169_189))
(assert (= temp169_191 var1311786))
(assert (= temp169_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_191)))
(assert (= temp169_190 temp169_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp169_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp169_193 #x0000000000000001))
(assert (= var1322908 temp169_193))
(assert (= temp169_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp169_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_195 #x0000000000000001))
(assert (= var1322975 temp169_195))
(assert (= temp169_196 #x0000000000000000))
(assert (= var1310898 temp169_196))
(assert (= temp169_197 #x0000000000000000))
(assert (= temp169_198 temp169_197))
(assert (= temp169_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp169_198)))
(assert (= temp169_200 #x0000000000000001))
(assert (= temp169_201 temp169_200))
(assert (= temp169_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp169_201)))
(assert (= temp169_203 #x0000000000000002))
(assert (= temp169_204 temp169_203))
(assert (= temp169_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp169_204)))
(assert (= temp169_206 #x0000000000000003))
(assert (= temp169_207 temp169_206))
(assert (= temp169_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp169_207)))
(assert (= temp169_209 #x0000000000000004))
(assert (= temp169_210 temp169_209))
(assert (= temp169_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp169_210)))
(assert (= temp169_212 #x0000000000000005))
(assert (= temp169_213 temp169_212))
(assert (= temp169_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp169_213)))
(assert (= temp169_215 #x0000000000000000))
(assert (= temp169_216
   (ite (bvslt var1310898 temp169_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp169_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp169_216)))
(assert (= var1322977 temp169_217))
(assert (bvslt (ite (bvslt var1310898 temp169_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp169_218 #x0000000000000000))
(assert (= var1310898 temp169_218))
(assert (= temp169_220 var1310898))
(assert (= temp169_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp169_220)))
(assert (= temp169_219 temp169_221))
(assert (= var1322980
   (ite (= var1322977 temp169_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp169_222 #x0000000000000001))
(assert (= var1322980 temp169_222))
(assert (= temp169_223 #x0000000000000002))
(assert (= var1848169 temp169_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp169_225 #x0000000000000001))
(assert (= var1323065 temp169_225))
(assert (= temp169_226 #x0000000000000001))
(assert (= var3486735 temp169_226))
(assert (= temp169_227 #x0000000000000001))
(assert (= var3814415 temp169_227))
(assert (= temp169_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp169_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_229 #x0000000000000001))
(assert (= var79986 temp169_229))
(assert (= temp169_230 #x0000000000000001))
(assert (= var80116 temp169_230))
(assert (= var4796905 var80116))
(assert (= temp169_231 #x0000000000000000))
(assert (= var4784306 temp169_231))
(assert (= temp169_232 #x0000000000000000))
(assert (= temp169_233
   (ite (bvslt var4784306 temp169_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp169_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp169_233)))
(assert (= var4796924 temp169_234))
(assert (bvslt (ite (bvslt var4784306 temp169_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp169_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp169_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp169_236 #x0000000000000001))
(assert (= var4796925 temp169_236))
(assert (= temp169_237 #x0000000000000000))
(assert (= var4996927 temp169_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp169_238 #x0000000000000002))
(assert (= var5125763 temp169_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp169_239 #x0000000000000000))
(assert (= var5191324 temp169_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp169_241 #xffffffffffffffff))
(assert (= temp169_240 temp169_241))
(assert (= temp169_242 #x0000000000000001))
(assert (= var66602 temp169_242))
(assert (= temp169_243 #x0000000000000000))
(assert (= temp169_244
   (ite (bvslt var66602 temp169_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp169_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp169_244)))
(assert (= var80523 temp169_245))
(assert (bvslt (ite (bvslt var66602 temp169_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp169_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp169_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp169_247 #x0000000000000000))
(assert (= var80524 temp169_247))
(assert (= temp169_248 #x0000000000000001))
(assert (= var79986 temp169_248))
(model-add temp169_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp169_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp169_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






