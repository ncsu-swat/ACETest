(declare-fun temp888_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp888_2 () (_ BitVec 64))
(declare-fun temp888_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp888_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp888_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp888_6 () (_ BitVec 64))
(declare-fun temp888_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_8 () (_ BitVec 64))
(declare-fun temp888_9 () (_ BitVec 64))
(declare-fun temp888_10 () (_ BitVec 64))
(declare-fun temp888_11 () (_ BitVec 64))
(declare-fun temp888_12 () (_ BitVec 64))
(declare-fun temp888_13 () (_ BitVec 64))
(declare-fun temp888_14 () (_ BitVec 64))
(declare-fun temp888_15 () (_ BitVec 64))
(declare-fun temp888_16 () (_ BitVec 64))
(declare-fun temp888_17 () (_ BitVec 64))
(declare-fun temp888_18 () (_ BitVec 64))
(declare-fun temp888_19 () (_ BitVec 64))
(declare-fun temp888_20 () (_ BitVec 64))
(declare-fun temp888_21 () (_ BitVec 64))
(declare-fun temp888_22 () (_ BitVec 64))
(declare-fun temp888_23 () (_ BitVec 64))
(declare-fun temp888_24 () (_ BitVec 64))
(declare-fun temp888_25 () (_ BitVec 64))
(declare-fun temp888_26 () (_ BitVec 64))
(declare-fun temp888_27 () (_ BitVec 64))
(declare-fun temp888_28 () (_ BitVec 64))
(declare-fun temp888_29 () (_ BitVec 64))
(declare-fun temp888_30 () (_ BitVec 64))
(declare-fun temp888_31 () (_ BitVec 64))
(declare-fun temp888_32 () (_ BitVec 64))
(declare-fun temp888_33 () (_ BitVec 64))
(declare-fun temp888_34 () (_ BitVec 64))
(declare-fun temp888_35 () (_ BitVec 64))
(declare-fun temp888_36 () (_ BitVec 64))
(declare-fun temp888_37 () (_ BitVec 64))
(declare-fun temp888_38 () (_ BitVec 64))
(declare-fun temp888_39 () (_ BitVec 64))
(declare-fun temp888_40 () (_ BitVec 64))
(declare-fun temp888_41 () (_ BitVec 64))
(declare-fun temp888_42 () (_ BitVec 64))
(declare-fun temp888_43 () (_ BitVec 64))
(declare-fun temp888_44 () (_ BitVec 64))
(declare-fun temp888_45 () (_ BitVec 64))
(declare-fun temp888_46 () (_ BitVec 64))
(declare-fun temp888_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp888_48 () (_ BitVec 64))
(declare-fun temp888_49 () (_ BitVec 64))
(declare-fun temp888_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_51 () (_ BitVec 64))
(declare-fun temp888_52 () (_ BitVec 64))
(declare-fun temp888_53 () (_ BitVec 64))
(declare-fun temp888_54 () (_ BitVec 64))
(declare-fun temp888_55 () (_ BitVec 64))
(declare-fun temp888_56 () (_ BitVec 64))
(declare-fun temp888_57 () (_ BitVec 64))
(declare-fun temp888_58 () (_ BitVec 64))
(declare-fun temp888_59 () (_ BitVec 64))
(declare-fun temp888_60 () (_ BitVec 64))
(declare-fun temp888_61 () (_ BitVec 64))
(declare-fun temp888_62 () (_ BitVec 64))
(declare-fun temp888_63 () (_ BitVec 64))
(declare-fun temp888_64 () (_ BitVec 64))
(declare-fun temp888_65 () (_ BitVec 64))
(declare-fun temp888_66 () (_ BitVec 64))
(declare-fun temp888_67 () (_ BitVec 64))
(declare-fun temp888_68 () (_ BitVec 64))
(declare-fun temp888_69 () (_ BitVec 64))
(declare-fun temp888_70 () (_ BitVec 64))
(declare-fun temp888_71 () (_ BitVec 64))
(declare-fun temp888_72 () (_ BitVec 64))
(declare-fun temp888_73 () (_ BitVec 64))
(declare-fun temp888_74 () (_ BitVec 64))
(declare-fun temp888_75 () (_ BitVec 64))
(declare-fun temp888_76 () (_ BitVec 64))
(declare-fun temp888_77 () (_ BitVec 64))
(declare-fun temp888_78 () (_ BitVec 64))
(declare-fun temp888_79 () (_ BitVec 64))
(declare-fun temp888_80 () (_ BitVec 64))
(declare-fun temp888_81 () (_ BitVec 64))
(declare-fun temp888_82 () (_ BitVec 64))
(declare-fun temp888_83 () (_ BitVec 64))
(declare-fun temp888_84 () (_ BitVec 64))
(declare-fun temp888_85 () (_ BitVec 64))
(declare-fun temp888_86 () (_ BitVec 64))
(declare-fun temp888_87 () (_ BitVec 64))
(declare-fun temp888_88 () (_ BitVec 64))
(declare-fun temp888_89 () (_ BitVec 64))
(declare-fun temp888_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp888_91 () (_ BitVec 64))
(declare-fun temp888_92 () (_ BitVec 64))
(declare-fun temp888_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_94 () (_ BitVec 64))
(declare-fun temp888_95 () (_ BitVec 64))
(declare-fun temp888_96 () (_ BitVec 64))
(declare-fun temp888_97 () (_ BitVec 64))
(declare-fun temp888_98 () (_ BitVec 64))
(declare-fun temp888_99 () (_ BitVec 64))
(declare-fun temp888_100 () (_ BitVec 64))
(declare-fun temp888_101 () (_ BitVec 64))
(declare-fun temp888_102 () (_ BitVec 64))
(declare-fun temp888_103 () (_ BitVec 64))
(declare-fun temp888_104 () (_ BitVec 64))
(declare-fun temp888_105 () (_ BitVec 64))
(declare-fun temp888_106 () (_ BitVec 64))
(declare-fun temp888_107 () (_ BitVec 64))
(declare-fun temp888_108 () (_ BitVec 64))
(declare-fun temp888_109 () (_ BitVec 64))
(declare-fun temp888_110 () (_ BitVec 64))
(declare-fun temp888_111 () (_ BitVec 64))
(declare-fun temp888_112 () (_ BitVec 64))
(declare-fun temp888_113 () (_ BitVec 64))
(declare-fun temp888_114 () (_ BitVec 64))
(declare-fun temp888_115 () (_ BitVec 64))
(declare-fun temp888_116 () (_ BitVec 64))
(declare-fun temp888_117 () (_ BitVec 64))
(declare-fun temp888_118 () (_ BitVec 64))
(declare-fun temp888_119 () (_ BitVec 64))
(declare-fun temp888_120 () (_ BitVec 64))
(declare-fun temp888_121 () (_ BitVec 64))
(declare-fun temp888_122 () (_ BitVec 64))
(declare-fun temp888_123 () (_ BitVec 64))
(declare-fun temp888_124 () (_ BitVec 64))
(declare-fun temp888_125 () (_ BitVec 64))
(declare-fun temp888_126 () (_ BitVec 64))
(declare-fun temp888_127 () (_ BitVec 64))
(declare-fun temp888_128 () (_ BitVec 64))
(declare-fun temp888_129 () (_ BitVec 64))
(declare-fun temp888_130 () (_ BitVec 64))
(declare-fun temp888_131 () (_ BitVec 64))
(declare-fun temp888_132 () (_ BitVec 64))
(declare-fun temp888_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp888_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp888_135 () (_ BitVec 64))
(declare-fun temp888_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp888_137 () (_ BitVec 64))
(declare-fun temp888_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_139 () (_ BitVec 64))
(declare-fun temp888_140 () (_ BitVec 64))
(declare-fun temp888_141 () (_ BitVec 64))
(declare-fun temp888_142 () (_ BitVec 64))
(declare-fun temp888_143 () (_ BitVec 64))
(declare-fun temp888_144 () (_ BitVec 64))
(declare-fun temp888_145 () (_ BitVec 64))
(declare-fun temp888_146 () (_ BitVec 64))
(declare-fun temp888_147 () (_ BitVec 64))
(declare-fun temp888_148 () (_ BitVec 64))
(declare-fun temp888_149 () (_ BitVec 64))
(declare-fun temp888_150 () (_ BitVec 64))
(declare-fun temp888_151 () (_ BitVec 64))
(declare-fun temp888_152 () (_ BitVec 64))
(declare-fun temp888_153 () (_ BitVec 64))
(declare-fun temp888_154 () (_ BitVec 64))
(declare-fun temp888_156 () (_ BitVec 64))
(declare-fun temp888_157 () (_ BitVec 64))
(declare-fun temp888_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp888_158 () (_ BitVec 64))
(declare-fun temp888_159 () (_ BitVec 64))
(declare-fun temp888_161 () (_ BitVec 64))
(declare-fun temp888_162 () (_ BitVec 64))
(declare-fun temp888_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp888_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp888_164 () (_ BitVec 64))
(declare-fun temp888_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp888_166 () (_ BitVec 64))
(declare-fun temp888_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp888_168 () (_ BitVec 64))
(declare-fun temp888_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_170 () (_ BitVec 64))
(declare-fun temp888_171 () (_ BitVec 64))
(declare-fun temp888_172 () (_ BitVec 64))
(declare-fun temp888_173 () (_ BitVec 64))
(declare-fun temp888_174 () (_ BitVec 64))
(declare-fun temp888_175 () (_ BitVec 64))
(declare-fun temp888_176 () (_ BitVec 64))
(declare-fun temp888_177 () (_ BitVec 64))
(declare-fun temp888_178 () (_ BitVec 64))
(declare-fun temp888_179 () (_ BitVec 64))
(declare-fun temp888_180 () (_ BitVec 64))
(declare-fun temp888_181 () (_ BitVec 64))
(declare-fun temp888_182 () (_ BitVec 64))
(declare-fun temp888_183 () (_ BitVec 64))
(declare-fun temp888_184 () (_ BitVec 64))
(declare-fun temp888_185 () (_ BitVec 64))
(declare-fun temp888_186 () (_ BitVec 64))
(declare-fun temp888_187 () (_ BitVec 64))
(declare-fun temp888_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp888_189 () (_ BitVec 64))
(declare-fun temp888_191 () (_ BitVec 64))
(declare-fun temp888_192 () (_ BitVec 64))
(declare-fun temp888_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp888_193 () (_ BitVec 64))
(declare-fun temp888_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp888_195 () (_ BitVec 64))
(declare-fun temp888_196 () (_ BitVec 64))
(declare-fun temp888_197 () (_ BitVec 64))
(declare-fun temp888_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_199 () (_ BitVec 64))
(declare-fun temp888_200 () (_ BitVec 64))
(declare-fun temp888_201 () (_ BitVec 64))
(declare-fun temp888_202 () (_ BitVec 64))
(declare-fun temp888_203 () (_ BitVec 64))
(declare-fun temp888_204 () (_ BitVec 64))
(declare-fun temp888_205 () (_ BitVec 64))
(declare-fun temp888_206 () (_ BitVec 64))
(declare-fun temp888_207 () (_ BitVec 64))
(declare-fun temp888_208 () (_ BitVec 64))
(declare-fun temp888_209 () (_ BitVec 64))
(declare-fun temp888_210 () (_ BitVec 64))
(declare-fun temp888_211 () (_ BitVec 64))
(declare-fun temp888_212 () (_ BitVec 64))
(declare-fun temp888_213 () (_ BitVec 64))
(declare-fun temp888_214 () (_ BitVec 64))
(declare-fun temp888_215 () (_ BitVec 64))
(declare-fun temp888_216 () (_ BitVec 64))
(declare-fun temp888_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp888_218 () (_ BitVec 64))
(declare-fun temp888_220 () (_ BitVec 64))
(declare-fun temp888_221 () (_ BitVec 64))
(declare-fun temp888_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp888_222 () (_ BitVec 64))
(declare-fun temp888_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp888_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp888_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp888_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp888_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp888_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp888_229 () (_ BitVec 64))
(declare-fun temp888_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp888_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp888_232 () (_ BitVec 64))
(declare-fun temp888_233 () (_ BitVec 64))
(declare-fun temp888_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp888_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp888_236 () (_ BitVec 64))
(declare-fun temp888_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp888_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp888_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun temp888_240 () (_ BitVec 64))
(assert (= temp888_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp888_1)))
(assert (= temp888_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp888_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_3 #x0000000000000000))
(assert (= var79869 temp888_3))
(assert (= temp888_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp888_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_5 #x0000000000000000))
(assert (= var79914 temp888_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp888_6 #x0000000000000000))
(assert (= temp888_7 temp888_6))
(assert (= temp888_8 (select ARGNAME_padding_NAMEEND_VAL temp888_7)))
(assert (= temp888_9 #x0000000000000001))
(assert (= temp888_10 temp888_9))
(assert (= temp888_11 (select ARGNAME_padding_NAMEEND_VAL temp888_10)))
(assert (= temp888_12 #x0000000000000002))
(assert (= temp888_13 temp888_12))
(assert (= temp888_14 (select ARGNAME_padding_NAMEEND_VAL temp888_13)))
(assert (= temp888_15 #x0000000000000003))
(assert (= temp888_16 temp888_15))
(assert (= temp888_17 (select ARGNAME_padding_NAMEEND_VAL temp888_16)))
(assert (= temp888_18 #x0000000000000004))
(assert (= temp888_19 temp888_18))
(assert (= temp888_20 (select ARGNAME_padding_NAMEEND_VAL temp888_19)))
(assert (= temp888_21 #x0000000000000005))
(assert (= temp888_22 temp888_21))
(assert (= temp888_23 (select ARGNAME_padding_NAMEEND_VAL temp888_22)))
(assert (= temp888_24 #x0000000000000000))
(assert (= temp888_25 #x0000000000000000))
(assert (= temp888_26 temp888_25))
(assert (= temp888_27 (select ARGNAME_padding_NAMEEND_VAL temp888_26)))
(assert (= temp888_28 #x0000000000000000))
(assert (= temp888_29 #x0000000000000001))
(assert (= temp888_30 temp888_29))
(assert (= temp888_31 (select ARGNAME_padding_NAMEEND_VAL temp888_30)))
(assert (= temp888_32 #x0000000000000000))
(assert (= temp888_33 #x0000000000000002))
(assert (= temp888_34 temp888_33))
(assert (= temp888_35 (select ARGNAME_padding_NAMEEND_VAL temp888_34)))
(assert (= temp888_36 #x0000000000000000))
(assert (= temp888_37 #x0000000000000003))
(assert (= temp888_38 temp888_37))
(assert (= temp888_39 (select ARGNAME_padding_NAMEEND_VAL temp888_38)))
(assert (= temp888_40 #x0000000000000000))
(assert (= temp888_41 #x0000000000000004))
(assert (= temp888_42 temp888_41))
(assert (= temp888_43 (select ARGNAME_padding_NAMEEND_VAL temp888_42)))
(assert (= temp888_44 #x0000000000000000))
(assert (= temp888_45 #x0000000000000005))
(assert (= temp888_46 temp888_45))
(assert (= temp888_47 (select ARGNAME_padding_NAMEEND_VAL temp888_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp888_27 temp888_24)
             (bvslt temp888_31 temp888_28)
             (bvslt temp888_35 temp888_32)
             (bvslt temp888_39 temp888_36)
             (bvslt temp888_43 temp888_40)
             (bvslt temp888_47 temp888_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_48 #x0000000000000000))
(assert (= var1322786 temp888_48))
(assert (= temp888_49 #x0000000000000000))
(assert (= temp888_50 temp888_49))
(assert (= temp888_51 (select ARGNAME_output_padding_NAMEEND_VAL temp888_50)))
(assert (= temp888_52 #x0000000000000001))
(assert (= temp888_53 temp888_52))
(assert (= temp888_54 (select ARGNAME_output_padding_NAMEEND_VAL temp888_53)))
(assert (= temp888_55 #x0000000000000002))
(assert (= temp888_56 temp888_55))
(assert (= temp888_57 (select ARGNAME_output_padding_NAMEEND_VAL temp888_56)))
(assert (= temp888_58 #x0000000000000003))
(assert (= temp888_59 temp888_58))
(assert (= temp888_60 (select ARGNAME_output_padding_NAMEEND_VAL temp888_59)))
(assert (= temp888_61 #x0000000000000004))
(assert (= temp888_62 temp888_61))
(assert (= temp888_63 (select ARGNAME_output_padding_NAMEEND_VAL temp888_62)))
(assert (= temp888_64 #x0000000000000005))
(assert (= temp888_65 temp888_64))
(assert (= temp888_66 (select ARGNAME_output_padding_NAMEEND_VAL temp888_65)))
(assert (= temp888_67 #x0000000000000000))
(assert (= temp888_68 #x0000000000000000))
(assert (= temp888_69 temp888_68))
(assert (= temp888_70 (select ARGNAME_output_padding_NAMEEND_VAL temp888_69)))
(assert (= temp888_71 #x0000000000000000))
(assert (= temp888_72 #x0000000000000001))
(assert (= temp888_73 temp888_72))
(assert (= temp888_74 (select ARGNAME_output_padding_NAMEEND_VAL temp888_73)))
(assert (= temp888_75 #x0000000000000000))
(assert (= temp888_76 #x0000000000000002))
(assert (= temp888_77 temp888_76))
(assert (= temp888_78 (select ARGNAME_output_padding_NAMEEND_VAL temp888_77)))
(assert (= temp888_79 #x0000000000000000))
(assert (= temp888_80 #x0000000000000003))
(assert (= temp888_81 temp888_80))
(assert (= temp888_82 (select ARGNAME_output_padding_NAMEEND_VAL temp888_81)))
(assert (= temp888_83 #x0000000000000000))
(assert (= temp888_84 #x0000000000000004))
(assert (= temp888_85 temp888_84))
(assert (= temp888_86 (select ARGNAME_output_padding_NAMEEND_VAL temp888_85)))
(assert (= temp888_87 #x0000000000000000))
(assert (= temp888_88 #x0000000000000005))
(assert (= temp888_89 temp888_88))
(assert (= temp888_90 (select ARGNAME_output_padding_NAMEEND_VAL temp888_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp888_70 temp888_67)
             (bvslt temp888_74 temp888_71)
             (bvslt temp888_78 temp888_75)
             (bvslt temp888_82 temp888_79)
             (bvslt temp888_86 temp888_83)
             (bvslt temp888_90 temp888_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_91 #x0000000000000000))
(assert (= var1322797 temp888_91))
(assert (= temp888_92 #x0000000000000000))
(assert (= temp888_93 temp888_92))
(assert (= temp888_94 (select ARGNAME_stride_NAMEEND_VAL temp888_93)))
(assert (= temp888_95 #x0000000000000001))
(assert (= temp888_96 temp888_95))
(assert (= temp888_97 (select ARGNAME_stride_NAMEEND_VAL temp888_96)))
(assert (= temp888_98 #x0000000000000002))
(assert (= temp888_99 temp888_98))
(assert (= temp888_100 (select ARGNAME_stride_NAMEEND_VAL temp888_99)))
(assert (= temp888_101 #x0000000000000003))
(assert (= temp888_102 temp888_101))
(assert (= temp888_103 (select ARGNAME_stride_NAMEEND_VAL temp888_102)))
(assert (= temp888_104 #x0000000000000004))
(assert (= temp888_105 temp888_104))
(assert (= temp888_106 (select ARGNAME_stride_NAMEEND_VAL temp888_105)))
(assert (= temp888_107 #x0000000000000005))
(assert (= temp888_108 temp888_107))
(assert (= temp888_109 (select ARGNAME_stride_NAMEEND_VAL temp888_108)))
(assert (= temp888_110 #x0000000000000000))
(assert (= temp888_111 #x0000000000000000))
(assert (= temp888_112 temp888_111))
(assert (= temp888_113 (select ARGNAME_stride_NAMEEND_VAL temp888_112)))
(assert (= temp888_114 #x0000000000000000))
(assert (= temp888_115 #x0000000000000001))
(assert (= temp888_116 temp888_115))
(assert (= temp888_117 (select ARGNAME_stride_NAMEEND_VAL temp888_116)))
(assert (= temp888_118 #x0000000000000000))
(assert (= temp888_119 #x0000000000000002))
(assert (= temp888_120 temp888_119))
(assert (= temp888_121 (select ARGNAME_stride_NAMEEND_VAL temp888_120)))
(assert (= temp888_122 #x0000000000000000))
(assert (= temp888_123 #x0000000000000003))
(assert (= temp888_124 temp888_123))
(assert (= temp888_125 (select ARGNAME_stride_NAMEEND_VAL temp888_124)))
(assert (= temp888_126 #x0000000000000000))
(assert (= temp888_127 #x0000000000000004))
(assert (= temp888_128 temp888_127))
(assert (= temp888_129 (select ARGNAME_stride_NAMEEND_VAL temp888_128)))
(assert (= temp888_130 #x0000000000000000))
(assert (= temp888_131 #x0000000000000005))
(assert (= temp888_132 temp888_131))
(assert (= temp888_133 (select ARGNAME_stride_NAMEEND_VAL temp888_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp888_113 temp888_110)
             (bvsle temp888_117 temp888_114)
             (bvsle temp888_121 temp888_118)
             (bvsle temp888_125 temp888_122)
             (bvsle temp888_129 temp888_126)
             (bvsle temp888_133 temp888_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_134 #x0000000000000000))
(assert (= var1322807 temp888_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_135 #x0000000000000001))
(assert (= var1322819 temp888_135))
(assert (= temp888_136 #x0000000000000000))
(assert (= var1310898 temp888_136))
(assert (= temp888_137 #x0000000000000000))
(assert (= temp888_138 temp888_137))
(assert (= temp888_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_138)))
(assert (= temp888_140 #x0000000000000001))
(assert (= temp888_141 temp888_140))
(assert (= temp888_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_141)))
(assert (= temp888_143 #x0000000000000002))
(assert (= temp888_144 temp888_143))
(assert (= temp888_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_144)))
(assert (= temp888_146 #x0000000000000003))
(assert (= temp888_147 temp888_146))
(assert (= temp888_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_147)))
(assert (= temp888_149 #x0000000000000004))
(assert (= temp888_150 temp888_149))
(assert (= temp888_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_150)))
(assert (= temp888_152 #x0000000000000005))
(assert (= temp888_153 temp888_152))
(assert (= temp888_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_153)))
(assert (= temp888_156 var1310898))
(assert (= temp888_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_156)))
(assert (= temp888_155 temp888_157))
(assert (= var1322852
   (ite (bvslt temp888_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_158 #x0000000000000000))
(assert (= var1322852 temp888_158))
(assert (= temp888_159 #x0000000000000000))
(assert (= var1310898 temp888_159))
(assert (= temp888_161 var1310898))
(assert (= temp888_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_161)))
(assert (= temp888_160 temp888_162))
(assert (= var1322874 (bvsmod temp888_160 ARGNAME_groups_NAMEEND)))
(assert (= temp888_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp888_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp888_164 #x0000000000000001))
(assert (= var1322875 temp888_164))
(assert (= temp888_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp888_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_166 #x0000000000000001))
(assert (= var1322895 temp888_166))
(assert (= temp888_167 #x0000000000000001))
(assert (= var1311786 temp888_167))
(assert (= temp888_168 #x0000000000000000))
(assert (= temp888_169 temp888_168))
(assert (= temp888_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_169)))
(assert (= temp888_171 #x0000000000000001))
(assert (= temp888_172 temp888_171))
(assert (= temp888_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_172)))
(assert (= temp888_174 #x0000000000000002))
(assert (= temp888_175 temp888_174))
(assert (= temp888_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_175)))
(assert (= temp888_177 #x0000000000000003))
(assert (= temp888_178 temp888_177))
(assert (= temp888_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_178)))
(assert (= temp888_180 #x0000000000000004))
(assert (= temp888_181 temp888_180))
(assert (= temp888_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_181)))
(assert (= temp888_183 #x0000000000000005))
(assert (= temp888_184 temp888_183))
(assert (= temp888_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_184)))
(assert (= temp888_186 #x0000000000000000))
(assert (= temp888_187
   (ite (bvslt var1311786 temp888_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp888_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_187)))
(assert (= var1322903 temp888_188))
(assert (bvslt (ite (bvslt var1311786 temp888_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp888_189 #x0000000000000001))
(assert (= var1311786 temp888_189))
(assert (= temp888_191 var1311786))
(assert (= temp888_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_191)))
(assert (= temp888_190 temp888_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp888_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp888_193 #x0000000000000001))
(assert (= var1322908 temp888_193))
(assert (= temp888_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp888_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_195 #x0000000000000001))
(assert (= var1322975 temp888_195))
(assert (= temp888_196 #x0000000000000000))
(assert (= var1310898 temp888_196))
(assert (= temp888_197 #x0000000000000000))
(assert (= temp888_198 temp888_197))
(assert (= temp888_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp888_198)))
(assert (= temp888_200 #x0000000000000001))
(assert (= temp888_201 temp888_200))
(assert (= temp888_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp888_201)))
(assert (= temp888_203 #x0000000000000002))
(assert (= temp888_204 temp888_203))
(assert (= temp888_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp888_204)))
(assert (= temp888_206 #x0000000000000003))
(assert (= temp888_207 temp888_206))
(assert (= temp888_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp888_207)))
(assert (= temp888_209 #x0000000000000004))
(assert (= temp888_210 temp888_209))
(assert (= temp888_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp888_210)))
(assert (= temp888_212 #x0000000000000005))
(assert (= temp888_213 temp888_212))
(assert (= temp888_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp888_213)))
(assert (= temp888_215 #x0000000000000000))
(assert (= temp888_216
   (ite (bvslt var1310898 temp888_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp888_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp888_216)))
(assert (= var1322977 temp888_217))
(assert (bvslt (ite (bvslt var1310898 temp888_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp888_218 #x0000000000000000))
(assert (= var1310898 temp888_218))
(assert (= temp888_220 var1310898))
(assert (= temp888_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_220)))
(assert (= temp888_219 temp888_221))
(assert (= var1322980
   (ite (= var1322977 temp888_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp888_222 #x0000000000000001))
(assert (= var1322980 temp888_222))
(assert (= temp888_223 #x0000000000000002))
(assert (= var1848169 temp888_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp888_225 #x0000000000000001))
(assert (= var1323065 temp888_225))
(assert (= temp888_226 #x0000000000000001))
(assert (= var3486735 temp888_226))
(assert (= temp888_227 #x0000000000000001))
(assert (= var3814415 temp888_227))
(assert (= temp888_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp888_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_229 #x0000000000000001))
(assert (= var79986 temp888_229))
(assert (= temp888_230 #x0000000000000001))
(assert (= var80116 temp888_230))
(assert (= var4796905 var80116))
(assert (= temp888_231 #x0000000000000000))
(assert (= var4784306 temp888_231))
(assert (= temp888_232 #x0000000000000000))
(assert (= temp888_233
   (ite (bvslt var4784306 temp888_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp888_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_233)))
(assert (= var4796924 temp888_234))
(assert (bvslt (ite (bvslt var4784306 temp888_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp888_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp888_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp888_236 #x0000000000000001))
(assert (= var4796925 temp888_236))
(assert (= temp888_237 #x0000000000000000))
(assert (= var4996927 temp888_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp888_238 #x0000000000000002))
(assert (= var5125763 temp888_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_239 #x0000000000000000))
(assert (= var5191324 temp888_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6238608 var80129))
(assert (= var6500752 var80129))
(assert (= temp888_240 #x0000000000000001))
(assert (= var79986 temp888_240))
(model-add temp888_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp888_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp888_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






