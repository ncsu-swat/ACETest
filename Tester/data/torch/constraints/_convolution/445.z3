(declare-fun temp592_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp592_2 () (_ BitVec 64))
(declare-fun temp592_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp592_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp592_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp592_6 () (_ BitVec 64))
(declare-fun temp592_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp592_8 () (_ BitVec 64))
(declare-fun temp592_9 () (_ BitVec 64))
(declare-fun temp592_10 () (_ BitVec 64))
(declare-fun temp592_11 () (_ BitVec 64))
(declare-fun temp592_12 () (_ BitVec 64))
(declare-fun temp592_13 () (_ BitVec 64))
(declare-fun temp592_14 () (_ BitVec 64))
(declare-fun temp592_15 () (_ BitVec 64))
(declare-fun temp592_16 () (_ BitVec 64))
(declare-fun temp592_17 () (_ BitVec 64))
(declare-fun temp592_18 () (_ BitVec 64))
(declare-fun temp592_19 () (_ BitVec 64))
(declare-fun temp592_20 () (_ BitVec 64))
(declare-fun temp592_21 () (_ BitVec 64))
(declare-fun temp592_22 () (_ BitVec 64))
(declare-fun temp592_23 () (_ BitVec 64))
(declare-fun temp592_24 () (_ BitVec 64))
(declare-fun temp592_25 () (_ BitVec 64))
(declare-fun temp592_26 () (_ BitVec 64))
(declare-fun temp592_27 () (_ BitVec 64))
(declare-fun temp592_28 () (_ BitVec 64))
(declare-fun temp592_29 () (_ BitVec 64))
(declare-fun temp592_30 () (_ BitVec 64))
(declare-fun temp592_31 () (_ BitVec 64))
(declare-fun temp592_32 () (_ BitVec 64))
(declare-fun temp592_33 () (_ BitVec 64))
(declare-fun temp592_34 () (_ BitVec 64))
(declare-fun temp592_35 () (_ BitVec 64))
(declare-fun temp592_36 () (_ BitVec 64))
(declare-fun temp592_37 () (_ BitVec 64))
(declare-fun temp592_38 () (_ BitVec 64))
(declare-fun temp592_39 () (_ BitVec 64))
(declare-fun temp592_40 () (_ BitVec 64))
(declare-fun temp592_41 () (_ BitVec 64))
(declare-fun temp592_42 () (_ BitVec 64))
(declare-fun temp592_43 () (_ BitVec 64))
(declare-fun temp592_44 () (_ BitVec 64))
(declare-fun temp592_45 () (_ BitVec 64))
(declare-fun temp592_46 () (_ BitVec 64))
(declare-fun temp592_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp592_48 () (_ BitVec 64))
(declare-fun temp592_49 () (_ BitVec 64))
(declare-fun temp592_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp592_51 () (_ BitVec 64))
(declare-fun temp592_52 () (_ BitVec 64))
(declare-fun temp592_53 () (_ BitVec 64))
(declare-fun temp592_54 () (_ BitVec 64))
(declare-fun temp592_55 () (_ BitVec 64))
(declare-fun temp592_56 () (_ BitVec 64))
(declare-fun temp592_57 () (_ BitVec 64))
(declare-fun temp592_58 () (_ BitVec 64))
(declare-fun temp592_59 () (_ BitVec 64))
(declare-fun temp592_60 () (_ BitVec 64))
(declare-fun temp592_61 () (_ BitVec 64))
(declare-fun temp592_62 () (_ BitVec 64))
(declare-fun temp592_63 () (_ BitVec 64))
(declare-fun temp592_64 () (_ BitVec 64))
(declare-fun temp592_65 () (_ BitVec 64))
(declare-fun temp592_66 () (_ BitVec 64))
(declare-fun temp592_67 () (_ BitVec 64))
(declare-fun temp592_68 () (_ BitVec 64))
(declare-fun temp592_69 () (_ BitVec 64))
(declare-fun temp592_70 () (_ BitVec 64))
(declare-fun temp592_71 () (_ BitVec 64))
(declare-fun temp592_72 () (_ BitVec 64))
(declare-fun temp592_73 () (_ BitVec 64))
(declare-fun temp592_74 () (_ BitVec 64))
(declare-fun temp592_75 () (_ BitVec 64))
(declare-fun temp592_76 () (_ BitVec 64))
(declare-fun temp592_77 () (_ BitVec 64))
(declare-fun temp592_78 () (_ BitVec 64))
(declare-fun temp592_79 () (_ BitVec 64))
(declare-fun temp592_80 () (_ BitVec 64))
(declare-fun temp592_81 () (_ BitVec 64))
(declare-fun temp592_82 () (_ BitVec 64))
(declare-fun temp592_83 () (_ BitVec 64))
(declare-fun temp592_84 () (_ BitVec 64))
(declare-fun temp592_85 () (_ BitVec 64))
(declare-fun temp592_86 () (_ BitVec 64))
(declare-fun temp592_87 () (_ BitVec 64))
(declare-fun temp592_88 () (_ BitVec 64))
(declare-fun temp592_89 () (_ BitVec 64))
(declare-fun temp592_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp592_91 () (_ BitVec 64))
(declare-fun temp592_92 () (_ BitVec 64))
(declare-fun temp592_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp592_94 () (_ BitVec 64))
(declare-fun temp592_95 () (_ BitVec 64))
(declare-fun temp592_96 () (_ BitVec 64))
(declare-fun temp592_97 () (_ BitVec 64))
(declare-fun temp592_98 () (_ BitVec 64))
(declare-fun temp592_99 () (_ BitVec 64))
(declare-fun temp592_100 () (_ BitVec 64))
(declare-fun temp592_101 () (_ BitVec 64))
(declare-fun temp592_102 () (_ BitVec 64))
(declare-fun temp592_103 () (_ BitVec 64))
(declare-fun temp592_104 () (_ BitVec 64))
(declare-fun temp592_105 () (_ BitVec 64))
(declare-fun temp592_106 () (_ BitVec 64))
(declare-fun temp592_107 () (_ BitVec 64))
(declare-fun temp592_108 () (_ BitVec 64))
(declare-fun temp592_109 () (_ BitVec 64))
(declare-fun temp592_110 () (_ BitVec 64))
(declare-fun temp592_111 () (_ BitVec 64))
(declare-fun temp592_112 () (_ BitVec 64))
(declare-fun temp592_113 () (_ BitVec 64))
(declare-fun temp592_114 () (_ BitVec 64))
(declare-fun temp592_115 () (_ BitVec 64))
(declare-fun temp592_116 () (_ BitVec 64))
(declare-fun temp592_117 () (_ BitVec 64))
(declare-fun temp592_118 () (_ BitVec 64))
(declare-fun temp592_119 () (_ BitVec 64))
(declare-fun temp592_120 () (_ BitVec 64))
(declare-fun temp592_121 () (_ BitVec 64))
(declare-fun temp592_122 () (_ BitVec 64))
(declare-fun temp592_123 () (_ BitVec 64))
(declare-fun temp592_124 () (_ BitVec 64))
(declare-fun temp592_125 () (_ BitVec 64))
(declare-fun temp592_126 () (_ BitVec 64))
(declare-fun temp592_127 () (_ BitVec 64))
(declare-fun temp592_128 () (_ BitVec 64))
(declare-fun temp592_129 () (_ BitVec 64))
(declare-fun temp592_130 () (_ BitVec 64))
(declare-fun temp592_131 () (_ BitVec 64))
(declare-fun temp592_132 () (_ BitVec 64))
(declare-fun temp592_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp592_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp592_135 () (_ BitVec 64))
(declare-fun temp592_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp592_137 () (_ BitVec 64))
(declare-fun temp592_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp592_139 () (_ BitVec 64))
(declare-fun temp592_140 () (_ BitVec 64))
(declare-fun temp592_141 () (_ BitVec 64))
(declare-fun temp592_142 () (_ BitVec 64))
(declare-fun temp592_143 () (_ BitVec 64))
(declare-fun temp592_144 () (_ BitVec 64))
(declare-fun temp592_145 () (_ BitVec 64))
(declare-fun temp592_146 () (_ BitVec 64))
(declare-fun temp592_147 () (_ BitVec 64))
(declare-fun temp592_148 () (_ BitVec 64))
(declare-fun temp592_149 () (_ BitVec 64))
(declare-fun temp592_150 () (_ BitVec 64))
(declare-fun temp592_151 () (_ BitVec 64))
(declare-fun temp592_152 () (_ BitVec 64))
(declare-fun temp592_153 () (_ BitVec 64))
(declare-fun temp592_154 () (_ BitVec 64))
(declare-fun temp592_156 () (_ BitVec 64))
(declare-fun temp592_157 () (_ BitVec 64))
(declare-fun temp592_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp592_158 () (_ BitVec 64))
(declare-fun temp592_159 () (_ BitVec 64))
(declare-fun temp592_161 () (_ BitVec 64))
(declare-fun temp592_162 () (_ BitVec 64))
(declare-fun temp592_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp592_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp592_164 () (_ BitVec 64))
(declare-fun temp592_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp592_166 () (_ BitVec 64))
(declare-fun temp592_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp592_168 () (_ BitVec 64))
(declare-fun temp592_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp592_170 () (_ BitVec 64))
(declare-fun temp592_171 () (_ BitVec 64))
(declare-fun temp592_172 () (_ BitVec 64))
(declare-fun temp592_173 () (_ BitVec 64))
(declare-fun temp592_174 () (_ BitVec 64))
(declare-fun temp592_175 () (_ BitVec 64))
(declare-fun temp592_176 () (_ BitVec 64))
(declare-fun temp592_177 () (_ BitVec 64))
(declare-fun temp592_178 () (_ BitVec 64))
(declare-fun temp592_179 () (_ BitVec 64))
(declare-fun temp592_180 () (_ BitVec 64))
(declare-fun temp592_181 () (_ BitVec 64))
(declare-fun temp592_182 () (_ BitVec 64))
(declare-fun temp592_183 () (_ BitVec 64))
(declare-fun temp592_184 () (_ BitVec 64))
(declare-fun temp592_185 () (_ BitVec 64))
(declare-fun temp592_186 () (_ BitVec 64))
(declare-fun temp592_187 () (_ BitVec 64))
(declare-fun temp592_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp592_189 () (_ BitVec 64))
(declare-fun temp592_191 () (_ BitVec 64))
(declare-fun temp592_192 () (_ BitVec 64))
(declare-fun temp592_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp592_193 () (_ BitVec 64))
(declare-fun temp592_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp592_195 () (_ BitVec 64))
(declare-fun temp592_196 () (_ BitVec 64))
(declare-fun temp592_197 () (_ BitVec 64))
(declare-fun temp592_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp592_199 () (_ BitVec 64))
(declare-fun temp592_200 () (_ BitVec 64))
(declare-fun temp592_201 () (_ BitVec 64))
(declare-fun temp592_202 () (_ BitVec 64))
(declare-fun temp592_203 () (_ BitVec 64))
(declare-fun temp592_204 () (_ BitVec 64))
(declare-fun temp592_205 () (_ BitVec 64))
(declare-fun temp592_206 () (_ BitVec 64))
(declare-fun temp592_207 () (_ BitVec 64))
(declare-fun temp592_208 () (_ BitVec 64))
(declare-fun temp592_209 () (_ BitVec 64))
(declare-fun temp592_210 () (_ BitVec 64))
(declare-fun temp592_211 () (_ BitVec 64))
(declare-fun temp592_212 () (_ BitVec 64))
(declare-fun temp592_213 () (_ BitVec 64))
(declare-fun temp592_214 () (_ BitVec 64))
(declare-fun temp592_215 () (_ BitVec 64))
(declare-fun temp592_216 () (_ BitVec 64))
(declare-fun temp592_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp592_218 () (_ BitVec 64))
(declare-fun temp592_220 () (_ BitVec 64))
(declare-fun temp592_221 () (_ BitVec 64))
(declare-fun temp592_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp592_222 () (_ BitVec 64))
(declare-fun temp592_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp592_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp592_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp592_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp592_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp592_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp592_229 () (_ BitVec 64))
(declare-fun temp592_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp592_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp592_232 () (_ BitVec 64))
(declare-fun temp592_233 () (_ BitVec 64))
(declare-fun temp592_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp592_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp592_236 () (_ BitVec 64))
(declare-fun temp592_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp592_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp592_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp592_240 () (_ BitVec 64))
(declare-fun temp592_241 () (_ BitVec 64))
(declare-fun var5583636 () (_ BitVec 64))
(declare-fun var5583603 () (_ BitVec 64))
(declare-fun var5452167 () (_ BitVec 64))
(declare-fun var5452163 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp592_242 () (_ BitVec 64))
(assert (= temp592_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp592_1)))
(assert (= temp592_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp592_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_3 #x0000000000000000))
(assert (= var79869 temp592_3))
(assert (= temp592_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp592_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_5 #x0000000000000000))
(assert (= var79914 temp592_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp592_6 #x0000000000000000))
(assert (= temp592_7 temp592_6))
(assert (= temp592_8 (select ARGNAME_padding_NAMEEND_VAL temp592_7)))
(assert (= temp592_9 #x0000000000000001))
(assert (= temp592_10 temp592_9))
(assert (= temp592_11 (select ARGNAME_padding_NAMEEND_VAL temp592_10)))
(assert (= temp592_12 #x0000000000000002))
(assert (= temp592_13 temp592_12))
(assert (= temp592_14 (select ARGNAME_padding_NAMEEND_VAL temp592_13)))
(assert (= temp592_15 #x0000000000000003))
(assert (= temp592_16 temp592_15))
(assert (= temp592_17 (select ARGNAME_padding_NAMEEND_VAL temp592_16)))
(assert (= temp592_18 #x0000000000000004))
(assert (= temp592_19 temp592_18))
(assert (= temp592_20 (select ARGNAME_padding_NAMEEND_VAL temp592_19)))
(assert (= temp592_21 #x0000000000000005))
(assert (= temp592_22 temp592_21))
(assert (= temp592_23 (select ARGNAME_padding_NAMEEND_VAL temp592_22)))
(assert (= temp592_24 #x0000000000000000))
(assert (= temp592_25 #x0000000000000000))
(assert (= temp592_26 temp592_25))
(assert (= temp592_27 (select ARGNAME_padding_NAMEEND_VAL temp592_26)))
(assert (= temp592_28 #x0000000000000000))
(assert (= temp592_29 #x0000000000000001))
(assert (= temp592_30 temp592_29))
(assert (= temp592_31 (select ARGNAME_padding_NAMEEND_VAL temp592_30)))
(assert (= temp592_32 #x0000000000000000))
(assert (= temp592_33 #x0000000000000002))
(assert (= temp592_34 temp592_33))
(assert (= temp592_35 (select ARGNAME_padding_NAMEEND_VAL temp592_34)))
(assert (= temp592_36 #x0000000000000000))
(assert (= temp592_37 #x0000000000000003))
(assert (= temp592_38 temp592_37))
(assert (= temp592_39 (select ARGNAME_padding_NAMEEND_VAL temp592_38)))
(assert (= temp592_40 #x0000000000000000))
(assert (= temp592_41 #x0000000000000004))
(assert (= temp592_42 temp592_41))
(assert (= temp592_43 (select ARGNAME_padding_NAMEEND_VAL temp592_42)))
(assert (= temp592_44 #x0000000000000000))
(assert (= temp592_45 #x0000000000000005))
(assert (= temp592_46 temp592_45))
(assert (= temp592_47 (select ARGNAME_padding_NAMEEND_VAL temp592_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp592_27 temp592_24)
             (bvslt temp592_31 temp592_28)
             (bvslt temp592_35 temp592_32)
             (bvslt temp592_39 temp592_36)
             (bvslt temp592_43 temp592_40)
             (bvslt temp592_47 temp592_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_48 #x0000000000000000))
(assert (= var1322786 temp592_48))
(assert (= temp592_49 #x0000000000000000))
(assert (= temp592_50 temp592_49))
(assert (= temp592_51 (select ARGNAME_output_padding_NAMEEND_VAL temp592_50)))
(assert (= temp592_52 #x0000000000000001))
(assert (= temp592_53 temp592_52))
(assert (= temp592_54 (select ARGNAME_output_padding_NAMEEND_VAL temp592_53)))
(assert (= temp592_55 #x0000000000000002))
(assert (= temp592_56 temp592_55))
(assert (= temp592_57 (select ARGNAME_output_padding_NAMEEND_VAL temp592_56)))
(assert (= temp592_58 #x0000000000000003))
(assert (= temp592_59 temp592_58))
(assert (= temp592_60 (select ARGNAME_output_padding_NAMEEND_VAL temp592_59)))
(assert (= temp592_61 #x0000000000000004))
(assert (= temp592_62 temp592_61))
(assert (= temp592_63 (select ARGNAME_output_padding_NAMEEND_VAL temp592_62)))
(assert (= temp592_64 #x0000000000000005))
(assert (= temp592_65 temp592_64))
(assert (= temp592_66 (select ARGNAME_output_padding_NAMEEND_VAL temp592_65)))
(assert (= temp592_67 #x0000000000000000))
(assert (= temp592_68 #x0000000000000000))
(assert (= temp592_69 temp592_68))
(assert (= temp592_70 (select ARGNAME_output_padding_NAMEEND_VAL temp592_69)))
(assert (= temp592_71 #x0000000000000000))
(assert (= temp592_72 #x0000000000000001))
(assert (= temp592_73 temp592_72))
(assert (= temp592_74 (select ARGNAME_output_padding_NAMEEND_VAL temp592_73)))
(assert (= temp592_75 #x0000000000000000))
(assert (= temp592_76 #x0000000000000002))
(assert (= temp592_77 temp592_76))
(assert (= temp592_78 (select ARGNAME_output_padding_NAMEEND_VAL temp592_77)))
(assert (= temp592_79 #x0000000000000000))
(assert (= temp592_80 #x0000000000000003))
(assert (= temp592_81 temp592_80))
(assert (= temp592_82 (select ARGNAME_output_padding_NAMEEND_VAL temp592_81)))
(assert (= temp592_83 #x0000000000000000))
(assert (= temp592_84 #x0000000000000004))
(assert (= temp592_85 temp592_84))
(assert (= temp592_86 (select ARGNAME_output_padding_NAMEEND_VAL temp592_85)))
(assert (= temp592_87 #x0000000000000000))
(assert (= temp592_88 #x0000000000000005))
(assert (= temp592_89 temp592_88))
(assert (= temp592_90 (select ARGNAME_output_padding_NAMEEND_VAL temp592_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp592_70 temp592_67)
             (bvslt temp592_74 temp592_71)
             (bvslt temp592_78 temp592_75)
             (bvslt temp592_82 temp592_79)
             (bvslt temp592_86 temp592_83)
             (bvslt temp592_90 temp592_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_91 #x0000000000000000))
(assert (= var1322797 temp592_91))
(assert (= temp592_92 #x0000000000000000))
(assert (= temp592_93 temp592_92))
(assert (= temp592_94 (select ARGNAME_stride_NAMEEND_VAL temp592_93)))
(assert (= temp592_95 #x0000000000000001))
(assert (= temp592_96 temp592_95))
(assert (= temp592_97 (select ARGNAME_stride_NAMEEND_VAL temp592_96)))
(assert (= temp592_98 #x0000000000000002))
(assert (= temp592_99 temp592_98))
(assert (= temp592_100 (select ARGNAME_stride_NAMEEND_VAL temp592_99)))
(assert (= temp592_101 #x0000000000000003))
(assert (= temp592_102 temp592_101))
(assert (= temp592_103 (select ARGNAME_stride_NAMEEND_VAL temp592_102)))
(assert (= temp592_104 #x0000000000000004))
(assert (= temp592_105 temp592_104))
(assert (= temp592_106 (select ARGNAME_stride_NAMEEND_VAL temp592_105)))
(assert (= temp592_107 #x0000000000000005))
(assert (= temp592_108 temp592_107))
(assert (= temp592_109 (select ARGNAME_stride_NAMEEND_VAL temp592_108)))
(assert (= temp592_110 #x0000000000000000))
(assert (= temp592_111 #x0000000000000000))
(assert (= temp592_112 temp592_111))
(assert (= temp592_113 (select ARGNAME_stride_NAMEEND_VAL temp592_112)))
(assert (= temp592_114 #x0000000000000000))
(assert (= temp592_115 #x0000000000000001))
(assert (= temp592_116 temp592_115))
(assert (= temp592_117 (select ARGNAME_stride_NAMEEND_VAL temp592_116)))
(assert (= temp592_118 #x0000000000000000))
(assert (= temp592_119 #x0000000000000002))
(assert (= temp592_120 temp592_119))
(assert (= temp592_121 (select ARGNAME_stride_NAMEEND_VAL temp592_120)))
(assert (= temp592_122 #x0000000000000000))
(assert (= temp592_123 #x0000000000000003))
(assert (= temp592_124 temp592_123))
(assert (= temp592_125 (select ARGNAME_stride_NAMEEND_VAL temp592_124)))
(assert (= temp592_126 #x0000000000000000))
(assert (= temp592_127 #x0000000000000004))
(assert (= temp592_128 temp592_127))
(assert (= temp592_129 (select ARGNAME_stride_NAMEEND_VAL temp592_128)))
(assert (= temp592_130 #x0000000000000000))
(assert (= temp592_131 #x0000000000000005))
(assert (= temp592_132 temp592_131))
(assert (= temp592_133 (select ARGNAME_stride_NAMEEND_VAL temp592_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp592_113 temp592_110)
             (bvsle temp592_117 temp592_114)
             (bvsle temp592_121 temp592_118)
             (bvsle temp592_125 temp592_122)
             (bvsle temp592_129 temp592_126)
             (bvsle temp592_133 temp592_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_134 #x0000000000000000))
(assert (= var1322807 temp592_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_135 #x0000000000000001))
(assert (= var1322819 temp592_135))
(assert (= temp592_136 #x0000000000000000))
(assert (= var1310898 temp592_136))
(assert (= temp592_137 #x0000000000000000))
(assert (= temp592_138 temp592_137))
(assert (= temp592_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_138)))
(assert (= temp592_140 #x0000000000000001))
(assert (= temp592_141 temp592_140))
(assert (= temp592_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_141)))
(assert (= temp592_143 #x0000000000000002))
(assert (= temp592_144 temp592_143))
(assert (= temp592_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_144)))
(assert (= temp592_146 #x0000000000000003))
(assert (= temp592_147 temp592_146))
(assert (= temp592_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_147)))
(assert (= temp592_149 #x0000000000000004))
(assert (= temp592_150 temp592_149))
(assert (= temp592_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_150)))
(assert (= temp592_152 #x0000000000000005))
(assert (= temp592_153 temp592_152))
(assert (= temp592_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_153)))
(assert (= temp592_156 var1310898))
(assert (= temp592_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_156)))
(assert (= temp592_155 temp592_157))
(assert (= var1322852
   (ite (bvslt temp592_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_158 #x0000000000000000))
(assert (= var1322852 temp592_158))
(assert (= temp592_159 #x0000000000000000))
(assert (= var1310898 temp592_159))
(assert (= temp592_161 var1310898))
(assert (= temp592_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_161)))
(assert (= temp592_160 temp592_162))
(assert (= var1322874 (bvsmod temp592_160 ARGNAME_groups_NAMEEND)))
(assert (= temp592_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp592_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp592_164 #x0000000000000001))
(assert (= var1322875 temp592_164))
(assert (= temp592_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp592_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_166 #x0000000000000001))
(assert (= var1322895 temp592_166))
(assert (= temp592_167 #x0000000000000001))
(assert (= var1311786 temp592_167))
(assert (= temp592_168 #x0000000000000000))
(assert (= temp592_169 temp592_168))
(assert (= temp592_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp592_169)))
(assert (= temp592_171 #x0000000000000001))
(assert (= temp592_172 temp592_171))
(assert (= temp592_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp592_172)))
(assert (= temp592_174 #x0000000000000002))
(assert (= temp592_175 temp592_174))
(assert (= temp592_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp592_175)))
(assert (= temp592_177 #x0000000000000003))
(assert (= temp592_178 temp592_177))
(assert (= temp592_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp592_178)))
(assert (= temp592_180 #x0000000000000004))
(assert (= temp592_181 temp592_180))
(assert (= temp592_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp592_181)))
(assert (= temp592_183 #x0000000000000005))
(assert (= temp592_184 temp592_183))
(assert (= temp592_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp592_184)))
(assert (= temp592_186 #x0000000000000000))
(assert (= temp592_187
   (ite (bvslt var1311786 temp592_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp592_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp592_187)))
(assert (= var1322903 temp592_188))
(assert (bvslt (ite (bvslt var1311786 temp592_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp592_189 #x0000000000000001))
(assert (= var1311786 temp592_189))
(assert (= temp592_191 var1311786))
(assert (= temp592_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_191)))
(assert (= temp592_190 temp592_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp592_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp592_193 #x0000000000000001))
(assert (= var1322908 temp592_193))
(assert (= temp592_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp592_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_195 #x0000000000000001))
(assert (= var1322975 temp592_195))
(assert (= temp592_196 #x0000000000000000))
(assert (= var1310898 temp592_196))
(assert (= temp592_197 #x0000000000000000))
(assert (= temp592_198 temp592_197))
(assert (= temp592_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp592_198)))
(assert (= temp592_200 #x0000000000000001))
(assert (= temp592_201 temp592_200))
(assert (= temp592_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp592_201)))
(assert (= temp592_203 #x0000000000000002))
(assert (= temp592_204 temp592_203))
(assert (= temp592_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp592_204)))
(assert (= temp592_206 #x0000000000000003))
(assert (= temp592_207 temp592_206))
(assert (= temp592_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp592_207)))
(assert (= temp592_209 #x0000000000000004))
(assert (= temp592_210 temp592_209))
(assert (= temp592_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp592_210)))
(assert (= temp592_212 #x0000000000000005))
(assert (= temp592_213 temp592_212))
(assert (= temp592_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp592_213)))
(assert (= temp592_215 #x0000000000000000))
(assert (= temp592_216
   (ite (bvslt var1310898 temp592_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp592_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp592_216)))
(assert (= var1322977 temp592_217))
(assert (bvslt (ite (bvslt var1310898 temp592_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp592_218 #x0000000000000000))
(assert (= var1310898 temp592_218))
(assert (= temp592_220 var1310898))
(assert (= temp592_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp592_220)))
(assert (= temp592_219 temp592_221))
(assert (= var1322980
   (ite (= var1322977 temp592_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp592_222 #x0000000000000001))
(assert (= var1322980 temp592_222))
(assert (= temp592_223 #x0000000000000002))
(assert (= var1848169 temp592_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp592_225 #x0000000000000001))
(assert (= var1323065 temp592_225))
(assert (= temp592_226 #x0000000000000001))
(assert (= var3486735 temp592_226))
(assert (= temp592_227 #x0000000000000001))
(assert (= var3814415 temp592_227))
(assert (= temp592_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp592_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_229 #x0000000000000001))
(assert (= var79986 temp592_229))
(assert (= temp592_230 #x0000000000000001))
(assert (= var80116 temp592_230))
(assert (= var4796905 var80116))
(assert (= temp592_231 #x0000000000000000))
(assert (= var4784306 temp592_231))
(assert (= temp592_232 #x0000000000000000))
(assert (= temp592_233
   (ite (bvslt var4784306 temp592_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp592_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp592_233)))
(assert (= var4796924 temp592_234))
(assert (bvslt (ite (bvslt var4784306 temp592_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp592_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp592_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp592_236 #x0000000000000001))
(assert (= var4796925 temp592_236))
(assert (= temp592_237 #x0000000000000000))
(assert (= var4996927 temp592_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp592_238 #x0000000000000002))
(assert (= var5125763 temp592_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp592_239 #x0000000000000000))
(assert (= var5191324 temp592_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp592_240 #x0000000000000001))
(assert (= var79986 temp592_240))
(assert (= temp592_241 #x0000000000000000))
(assert (= var5583636 temp592_241))
(assert (= var5583603 var5583636))
(assert (= var5452167 var5583603))
(assert (= var5452163 var5452167))
(assert (= var81597 var5452163))
(assert (= temp592_242 #x0000000000000000))
(assert (= var81597 temp592_242))
(model-add temp592_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp592_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp592_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






