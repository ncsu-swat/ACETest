(declare-fun temp1064_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1064_2 () (_ BitVec 64))
(declare-fun temp1064_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1064_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1064_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1064_6 () (_ BitVec 64))
(declare-fun temp1064_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_8 () (_ BitVec 64))
(declare-fun temp1064_9 () (_ BitVec 64))
(declare-fun temp1064_10 () (_ BitVec 64))
(declare-fun temp1064_11 () (_ BitVec 64))
(declare-fun temp1064_12 () (_ BitVec 64))
(declare-fun temp1064_13 () (_ BitVec 64))
(declare-fun temp1064_14 () (_ BitVec 64))
(declare-fun temp1064_15 () (_ BitVec 64))
(declare-fun temp1064_16 () (_ BitVec 64))
(declare-fun temp1064_17 () (_ BitVec 64))
(declare-fun temp1064_18 () (_ BitVec 64))
(declare-fun temp1064_19 () (_ BitVec 64))
(declare-fun temp1064_20 () (_ BitVec 64))
(declare-fun temp1064_21 () (_ BitVec 64))
(declare-fun temp1064_22 () (_ BitVec 64))
(declare-fun temp1064_23 () (_ BitVec 64))
(declare-fun temp1064_24 () (_ BitVec 64))
(declare-fun temp1064_25 () (_ BitVec 64))
(declare-fun temp1064_26 () (_ BitVec 64))
(declare-fun temp1064_27 () (_ BitVec 64))
(declare-fun temp1064_28 () (_ BitVec 64))
(declare-fun temp1064_29 () (_ BitVec 64))
(declare-fun temp1064_30 () (_ BitVec 64))
(declare-fun temp1064_31 () (_ BitVec 64))
(declare-fun temp1064_32 () (_ BitVec 64))
(declare-fun temp1064_33 () (_ BitVec 64))
(declare-fun temp1064_34 () (_ BitVec 64))
(declare-fun temp1064_35 () (_ BitVec 64))
(declare-fun temp1064_36 () (_ BitVec 64))
(declare-fun temp1064_37 () (_ BitVec 64))
(declare-fun temp1064_38 () (_ BitVec 64))
(declare-fun temp1064_39 () (_ BitVec 64))
(declare-fun temp1064_40 () (_ BitVec 64))
(declare-fun temp1064_41 () (_ BitVec 64))
(declare-fun temp1064_42 () (_ BitVec 64))
(declare-fun temp1064_43 () (_ BitVec 64))
(declare-fun temp1064_44 () (_ BitVec 64))
(declare-fun temp1064_45 () (_ BitVec 64))
(declare-fun temp1064_46 () (_ BitVec 64))
(declare-fun temp1064_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1064_48 () (_ BitVec 64))
(declare-fun temp1064_49 () (_ BitVec 64))
(declare-fun temp1064_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_51 () (_ BitVec 64))
(declare-fun temp1064_52 () (_ BitVec 64))
(declare-fun temp1064_53 () (_ BitVec 64))
(declare-fun temp1064_54 () (_ BitVec 64))
(declare-fun temp1064_55 () (_ BitVec 64))
(declare-fun temp1064_56 () (_ BitVec 64))
(declare-fun temp1064_57 () (_ BitVec 64))
(declare-fun temp1064_58 () (_ BitVec 64))
(declare-fun temp1064_59 () (_ BitVec 64))
(declare-fun temp1064_60 () (_ BitVec 64))
(declare-fun temp1064_61 () (_ BitVec 64))
(declare-fun temp1064_62 () (_ BitVec 64))
(declare-fun temp1064_63 () (_ BitVec 64))
(declare-fun temp1064_64 () (_ BitVec 64))
(declare-fun temp1064_65 () (_ BitVec 64))
(declare-fun temp1064_66 () (_ BitVec 64))
(declare-fun temp1064_67 () (_ BitVec 64))
(declare-fun temp1064_68 () (_ BitVec 64))
(declare-fun temp1064_69 () (_ BitVec 64))
(declare-fun temp1064_70 () (_ BitVec 64))
(declare-fun temp1064_71 () (_ BitVec 64))
(declare-fun temp1064_72 () (_ BitVec 64))
(declare-fun temp1064_73 () (_ BitVec 64))
(declare-fun temp1064_74 () (_ BitVec 64))
(declare-fun temp1064_75 () (_ BitVec 64))
(declare-fun temp1064_76 () (_ BitVec 64))
(declare-fun temp1064_77 () (_ BitVec 64))
(declare-fun temp1064_78 () (_ BitVec 64))
(declare-fun temp1064_79 () (_ BitVec 64))
(declare-fun temp1064_80 () (_ BitVec 64))
(declare-fun temp1064_81 () (_ BitVec 64))
(declare-fun temp1064_82 () (_ BitVec 64))
(declare-fun temp1064_83 () (_ BitVec 64))
(declare-fun temp1064_84 () (_ BitVec 64))
(declare-fun temp1064_85 () (_ BitVec 64))
(declare-fun temp1064_86 () (_ BitVec 64))
(declare-fun temp1064_87 () (_ BitVec 64))
(declare-fun temp1064_88 () (_ BitVec 64))
(declare-fun temp1064_89 () (_ BitVec 64))
(declare-fun temp1064_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1064_91 () (_ BitVec 64))
(declare-fun temp1064_92 () (_ BitVec 64))
(declare-fun temp1064_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_94 () (_ BitVec 64))
(declare-fun temp1064_95 () (_ BitVec 64))
(declare-fun temp1064_96 () (_ BitVec 64))
(declare-fun temp1064_97 () (_ BitVec 64))
(declare-fun temp1064_98 () (_ BitVec 64))
(declare-fun temp1064_99 () (_ BitVec 64))
(declare-fun temp1064_100 () (_ BitVec 64))
(declare-fun temp1064_101 () (_ BitVec 64))
(declare-fun temp1064_102 () (_ BitVec 64))
(declare-fun temp1064_103 () (_ BitVec 64))
(declare-fun temp1064_104 () (_ BitVec 64))
(declare-fun temp1064_105 () (_ BitVec 64))
(declare-fun temp1064_106 () (_ BitVec 64))
(declare-fun temp1064_107 () (_ BitVec 64))
(declare-fun temp1064_108 () (_ BitVec 64))
(declare-fun temp1064_109 () (_ BitVec 64))
(declare-fun temp1064_110 () (_ BitVec 64))
(declare-fun temp1064_111 () (_ BitVec 64))
(declare-fun temp1064_112 () (_ BitVec 64))
(declare-fun temp1064_113 () (_ BitVec 64))
(declare-fun temp1064_114 () (_ BitVec 64))
(declare-fun temp1064_115 () (_ BitVec 64))
(declare-fun temp1064_116 () (_ BitVec 64))
(declare-fun temp1064_117 () (_ BitVec 64))
(declare-fun temp1064_118 () (_ BitVec 64))
(declare-fun temp1064_119 () (_ BitVec 64))
(declare-fun temp1064_120 () (_ BitVec 64))
(declare-fun temp1064_121 () (_ BitVec 64))
(declare-fun temp1064_122 () (_ BitVec 64))
(declare-fun temp1064_123 () (_ BitVec 64))
(declare-fun temp1064_124 () (_ BitVec 64))
(declare-fun temp1064_125 () (_ BitVec 64))
(declare-fun temp1064_126 () (_ BitVec 64))
(declare-fun temp1064_127 () (_ BitVec 64))
(declare-fun temp1064_128 () (_ BitVec 64))
(declare-fun temp1064_129 () (_ BitVec 64))
(declare-fun temp1064_130 () (_ BitVec 64))
(declare-fun temp1064_131 () (_ BitVec 64))
(declare-fun temp1064_132 () (_ BitVec 64))
(declare-fun temp1064_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1064_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1064_135 () (_ BitVec 64))
(declare-fun temp1064_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1064_137 () (_ BitVec 64))
(declare-fun temp1064_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_139 () (_ BitVec 64))
(declare-fun temp1064_140 () (_ BitVec 64))
(declare-fun temp1064_141 () (_ BitVec 64))
(declare-fun temp1064_142 () (_ BitVec 64))
(declare-fun temp1064_143 () (_ BitVec 64))
(declare-fun temp1064_144 () (_ BitVec 64))
(declare-fun temp1064_145 () (_ BitVec 64))
(declare-fun temp1064_146 () (_ BitVec 64))
(declare-fun temp1064_147 () (_ BitVec 64))
(declare-fun temp1064_148 () (_ BitVec 64))
(declare-fun temp1064_149 () (_ BitVec 64))
(declare-fun temp1064_150 () (_ BitVec 64))
(declare-fun temp1064_151 () (_ BitVec 64))
(declare-fun temp1064_152 () (_ BitVec 64))
(declare-fun temp1064_153 () (_ BitVec 64))
(declare-fun temp1064_154 () (_ BitVec 64))
(declare-fun temp1064_156 () (_ BitVec 64))
(declare-fun temp1064_157 () (_ BitVec 64))
(declare-fun temp1064_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1064_158 () (_ BitVec 64))
(declare-fun temp1064_159 () (_ BitVec 64))
(declare-fun temp1064_161 () (_ BitVec 64))
(declare-fun temp1064_162 () (_ BitVec 64))
(declare-fun temp1064_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1064_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1064_164 () (_ BitVec 64))
(declare-fun temp1064_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1064_166 () (_ BitVec 64))
(declare-fun temp1064_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1064_168 () (_ BitVec 64))
(declare-fun temp1064_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_170 () (_ BitVec 64))
(declare-fun temp1064_171 () (_ BitVec 64))
(declare-fun temp1064_172 () (_ BitVec 64))
(declare-fun temp1064_173 () (_ BitVec 64))
(declare-fun temp1064_174 () (_ BitVec 64))
(declare-fun temp1064_175 () (_ BitVec 64))
(declare-fun temp1064_176 () (_ BitVec 64))
(declare-fun temp1064_177 () (_ BitVec 64))
(declare-fun temp1064_178 () (_ BitVec 64))
(declare-fun temp1064_179 () (_ BitVec 64))
(declare-fun temp1064_180 () (_ BitVec 64))
(declare-fun temp1064_181 () (_ BitVec 64))
(declare-fun temp1064_182 () (_ BitVec 64))
(declare-fun temp1064_183 () (_ BitVec 64))
(declare-fun temp1064_184 () (_ BitVec 64))
(declare-fun temp1064_185 () (_ BitVec 64))
(declare-fun temp1064_186 () (_ BitVec 64))
(declare-fun temp1064_187 () (_ BitVec 64))
(declare-fun temp1064_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1064_189 () (_ BitVec 64))
(declare-fun temp1064_191 () (_ BitVec 64))
(declare-fun temp1064_192 () (_ BitVec 64))
(declare-fun temp1064_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1064_193 () (_ BitVec 64))
(declare-fun temp1064_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1064_195 () (_ BitVec 64))
(declare-fun temp1064_196 () (_ BitVec 64))
(declare-fun temp1064_197 () (_ BitVec 64))
(declare-fun temp1064_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_199 () (_ BitVec 64))
(declare-fun temp1064_200 () (_ BitVec 64))
(declare-fun temp1064_201 () (_ BitVec 64))
(declare-fun temp1064_202 () (_ BitVec 64))
(declare-fun temp1064_203 () (_ BitVec 64))
(declare-fun temp1064_204 () (_ BitVec 64))
(declare-fun temp1064_205 () (_ BitVec 64))
(declare-fun temp1064_206 () (_ BitVec 64))
(declare-fun temp1064_207 () (_ BitVec 64))
(declare-fun temp1064_208 () (_ BitVec 64))
(declare-fun temp1064_209 () (_ BitVec 64))
(declare-fun temp1064_210 () (_ BitVec 64))
(declare-fun temp1064_211 () (_ BitVec 64))
(declare-fun temp1064_212 () (_ BitVec 64))
(declare-fun temp1064_213 () (_ BitVec 64))
(declare-fun temp1064_214 () (_ BitVec 64))
(declare-fun temp1064_215 () (_ BitVec 64))
(declare-fun temp1064_216 () (_ BitVec 64))
(declare-fun temp1064_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1064_218 () (_ BitVec 64))
(declare-fun temp1064_220 () (_ BitVec 64))
(declare-fun temp1064_221 () (_ BitVec 64))
(declare-fun temp1064_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1064_222 () (_ BitVec 64))
(declare-fun temp1064_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1064_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1064_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1064_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1064_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1064_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1064_229 () (_ BitVec 64))
(declare-fun temp1064_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1064_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1064_232 () (_ BitVec 64))
(declare-fun temp1064_233 () (_ BitVec 64))
(declare-fun temp1064_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1064_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1064_236 () (_ BitVec 64))
(declare-fun temp1064_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1064_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1064_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1064_240 () (_ BitVec 64))
(assert (= temp1064_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1064_1)))
(assert (= temp1064_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1064_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_3 #x0000000000000000))
(assert (= var79869 temp1064_3))
(assert (= temp1064_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1064_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_5 #x0000000000000000))
(assert (= var79914 temp1064_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1064_6 #x0000000000000000))
(assert (= temp1064_7 temp1064_6))
(assert (= temp1064_8 (select ARGNAME_padding_NAMEEND_VAL temp1064_7)))
(assert (= temp1064_9 #x0000000000000001))
(assert (= temp1064_10 temp1064_9))
(assert (= temp1064_11 (select ARGNAME_padding_NAMEEND_VAL temp1064_10)))
(assert (= temp1064_12 #x0000000000000002))
(assert (= temp1064_13 temp1064_12))
(assert (= temp1064_14 (select ARGNAME_padding_NAMEEND_VAL temp1064_13)))
(assert (= temp1064_15 #x0000000000000003))
(assert (= temp1064_16 temp1064_15))
(assert (= temp1064_17 (select ARGNAME_padding_NAMEEND_VAL temp1064_16)))
(assert (= temp1064_18 #x0000000000000004))
(assert (= temp1064_19 temp1064_18))
(assert (= temp1064_20 (select ARGNAME_padding_NAMEEND_VAL temp1064_19)))
(assert (= temp1064_21 #x0000000000000005))
(assert (= temp1064_22 temp1064_21))
(assert (= temp1064_23 (select ARGNAME_padding_NAMEEND_VAL temp1064_22)))
(assert (= temp1064_24 #x0000000000000000))
(assert (= temp1064_25 #x0000000000000000))
(assert (= temp1064_26 temp1064_25))
(assert (= temp1064_27 (select ARGNAME_padding_NAMEEND_VAL temp1064_26)))
(assert (= temp1064_28 #x0000000000000000))
(assert (= temp1064_29 #x0000000000000001))
(assert (= temp1064_30 temp1064_29))
(assert (= temp1064_31 (select ARGNAME_padding_NAMEEND_VAL temp1064_30)))
(assert (= temp1064_32 #x0000000000000000))
(assert (= temp1064_33 #x0000000000000002))
(assert (= temp1064_34 temp1064_33))
(assert (= temp1064_35 (select ARGNAME_padding_NAMEEND_VAL temp1064_34)))
(assert (= temp1064_36 #x0000000000000000))
(assert (= temp1064_37 #x0000000000000003))
(assert (= temp1064_38 temp1064_37))
(assert (= temp1064_39 (select ARGNAME_padding_NAMEEND_VAL temp1064_38)))
(assert (= temp1064_40 #x0000000000000000))
(assert (= temp1064_41 #x0000000000000004))
(assert (= temp1064_42 temp1064_41))
(assert (= temp1064_43 (select ARGNAME_padding_NAMEEND_VAL temp1064_42)))
(assert (= temp1064_44 #x0000000000000000))
(assert (= temp1064_45 #x0000000000000005))
(assert (= temp1064_46 temp1064_45))
(assert (= temp1064_47 (select ARGNAME_padding_NAMEEND_VAL temp1064_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1064_27 temp1064_24)
             (bvslt temp1064_31 temp1064_28)
             (bvslt temp1064_35 temp1064_32)
             (bvslt temp1064_39 temp1064_36)
             (bvslt temp1064_43 temp1064_40)
             (bvslt temp1064_47 temp1064_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_48 #x0000000000000000))
(assert (= var1322786 temp1064_48))
(assert (= temp1064_49 #x0000000000000000))
(assert (= temp1064_50 temp1064_49))
(assert (= temp1064_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_50)))
(assert (= temp1064_52 #x0000000000000001))
(assert (= temp1064_53 temp1064_52))
(assert (= temp1064_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_53)))
(assert (= temp1064_55 #x0000000000000002))
(assert (= temp1064_56 temp1064_55))
(assert (= temp1064_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_56)))
(assert (= temp1064_58 #x0000000000000003))
(assert (= temp1064_59 temp1064_58))
(assert (= temp1064_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_59)))
(assert (= temp1064_61 #x0000000000000004))
(assert (= temp1064_62 temp1064_61))
(assert (= temp1064_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_62)))
(assert (= temp1064_64 #x0000000000000005))
(assert (= temp1064_65 temp1064_64))
(assert (= temp1064_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_65)))
(assert (= temp1064_67 #x0000000000000000))
(assert (= temp1064_68 #x0000000000000000))
(assert (= temp1064_69 temp1064_68))
(assert (= temp1064_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_69)))
(assert (= temp1064_71 #x0000000000000000))
(assert (= temp1064_72 #x0000000000000001))
(assert (= temp1064_73 temp1064_72))
(assert (= temp1064_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_73)))
(assert (= temp1064_75 #x0000000000000000))
(assert (= temp1064_76 #x0000000000000002))
(assert (= temp1064_77 temp1064_76))
(assert (= temp1064_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_77)))
(assert (= temp1064_79 #x0000000000000000))
(assert (= temp1064_80 #x0000000000000003))
(assert (= temp1064_81 temp1064_80))
(assert (= temp1064_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_81)))
(assert (= temp1064_83 #x0000000000000000))
(assert (= temp1064_84 #x0000000000000004))
(assert (= temp1064_85 temp1064_84))
(assert (= temp1064_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_85)))
(assert (= temp1064_87 #x0000000000000000))
(assert (= temp1064_88 #x0000000000000005))
(assert (= temp1064_89 temp1064_88))
(assert (= temp1064_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1064_70 temp1064_67)
             (bvslt temp1064_74 temp1064_71)
             (bvslt temp1064_78 temp1064_75)
             (bvslt temp1064_82 temp1064_79)
             (bvslt temp1064_86 temp1064_83)
             (bvslt temp1064_90 temp1064_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_91 #x0000000000000000))
(assert (= var1322797 temp1064_91))
(assert (= temp1064_92 #x0000000000000000))
(assert (= temp1064_93 temp1064_92))
(assert (= temp1064_94 (select ARGNAME_stride_NAMEEND_VAL temp1064_93)))
(assert (= temp1064_95 #x0000000000000001))
(assert (= temp1064_96 temp1064_95))
(assert (= temp1064_97 (select ARGNAME_stride_NAMEEND_VAL temp1064_96)))
(assert (= temp1064_98 #x0000000000000002))
(assert (= temp1064_99 temp1064_98))
(assert (= temp1064_100 (select ARGNAME_stride_NAMEEND_VAL temp1064_99)))
(assert (= temp1064_101 #x0000000000000003))
(assert (= temp1064_102 temp1064_101))
(assert (= temp1064_103 (select ARGNAME_stride_NAMEEND_VAL temp1064_102)))
(assert (= temp1064_104 #x0000000000000004))
(assert (= temp1064_105 temp1064_104))
(assert (= temp1064_106 (select ARGNAME_stride_NAMEEND_VAL temp1064_105)))
(assert (= temp1064_107 #x0000000000000005))
(assert (= temp1064_108 temp1064_107))
(assert (= temp1064_109 (select ARGNAME_stride_NAMEEND_VAL temp1064_108)))
(assert (= temp1064_110 #x0000000000000000))
(assert (= temp1064_111 #x0000000000000000))
(assert (= temp1064_112 temp1064_111))
(assert (= temp1064_113 (select ARGNAME_stride_NAMEEND_VAL temp1064_112)))
(assert (= temp1064_114 #x0000000000000000))
(assert (= temp1064_115 #x0000000000000001))
(assert (= temp1064_116 temp1064_115))
(assert (= temp1064_117 (select ARGNAME_stride_NAMEEND_VAL temp1064_116)))
(assert (= temp1064_118 #x0000000000000000))
(assert (= temp1064_119 #x0000000000000002))
(assert (= temp1064_120 temp1064_119))
(assert (= temp1064_121 (select ARGNAME_stride_NAMEEND_VAL temp1064_120)))
(assert (= temp1064_122 #x0000000000000000))
(assert (= temp1064_123 #x0000000000000003))
(assert (= temp1064_124 temp1064_123))
(assert (= temp1064_125 (select ARGNAME_stride_NAMEEND_VAL temp1064_124)))
(assert (= temp1064_126 #x0000000000000000))
(assert (= temp1064_127 #x0000000000000004))
(assert (= temp1064_128 temp1064_127))
(assert (= temp1064_129 (select ARGNAME_stride_NAMEEND_VAL temp1064_128)))
(assert (= temp1064_130 #x0000000000000000))
(assert (= temp1064_131 #x0000000000000005))
(assert (= temp1064_132 temp1064_131))
(assert (= temp1064_133 (select ARGNAME_stride_NAMEEND_VAL temp1064_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1064_113 temp1064_110)
             (bvsle temp1064_117 temp1064_114)
             (bvsle temp1064_121 temp1064_118)
             (bvsle temp1064_125 temp1064_122)
             (bvsle temp1064_129 temp1064_126)
             (bvsle temp1064_133 temp1064_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_134 #x0000000000000000))
(assert (= var1322807 temp1064_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_135 #x0000000000000001))
(assert (= var1322819 temp1064_135))
(assert (= temp1064_136 #x0000000000000000))
(assert (= var1310898 temp1064_136))
(assert (= temp1064_137 #x0000000000000000))
(assert (= temp1064_138 temp1064_137))
(assert (= temp1064_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_138)))
(assert (= temp1064_140 #x0000000000000001))
(assert (= temp1064_141 temp1064_140))
(assert (= temp1064_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_141)))
(assert (= temp1064_143 #x0000000000000002))
(assert (= temp1064_144 temp1064_143))
(assert (= temp1064_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_144)))
(assert (= temp1064_146 #x0000000000000003))
(assert (= temp1064_147 temp1064_146))
(assert (= temp1064_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_147)))
(assert (= temp1064_149 #x0000000000000004))
(assert (= temp1064_150 temp1064_149))
(assert (= temp1064_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_150)))
(assert (= temp1064_152 #x0000000000000005))
(assert (= temp1064_153 temp1064_152))
(assert (= temp1064_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_153)))
(assert (= temp1064_156 var1310898))
(assert (= temp1064_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_156)))
(assert (= temp1064_155 temp1064_157))
(assert (= var1322852
   (ite (bvslt temp1064_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_158 #x0000000000000000))
(assert (= var1322852 temp1064_158))
(assert (= temp1064_159 #x0000000000000000))
(assert (= var1310898 temp1064_159))
(assert (= temp1064_161 var1310898))
(assert (= temp1064_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_161)))
(assert (= temp1064_160 temp1064_162))
(assert (= var1322874 (bvsmod temp1064_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1064_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1064_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1064_164 #x0000000000000001))
(assert (= var1322875 temp1064_164))
(assert (= temp1064_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1064_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_166 #x0000000000000001))
(assert (= var1322895 temp1064_166))
(assert (= temp1064_167 #x0000000000000001))
(assert (= var1311786 temp1064_167))
(assert (= temp1064_168 #x0000000000000000))
(assert (= temp1064_169 temp1064_168))
(assert (= temp1064_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_169)))
(assert (= temp1064_171 #x0000000000000001))
(assert (= temp1064_172 temp1064_171))
(assert (= temp1064_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_172)))
(assert (= temp1064_174 #x0000000000000002))
(assert (= temp1064_175 temp1064_174))
(assert (= temp1064_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_175)))
(assert (= temp1064_177 #x0000000000000003))
(assert (= temp1064_178 temp1064_177))
(assert (= temp1064_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_178)))
(assert (= temp1064_180 #x0000000000000004))
(assert (= temp1064_181 temp1064_180))
(assert (= temp1064_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_181)))
(assert (= temp1064_183 #x0000000000000005))
(assert (= temp1064_184 temp1064_183))
(assert (= temp1064_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_184)))
(assert (= temp1064_186 #x0000000000000000))
(assert (= temp1064_187
   (ite (bvslt var1311786 temp1064_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1064_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_187)))
(assert (= var1322903 temp1064_188))
(assert (bvslt (ite (bvslt var1311786 temp1064_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1064_189 #x0000000000000001))
(assert (= var1311786 temp1064_189))
(assert (= temp1064_191 var1311786))
(assert (= temp1064_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_191)))
(assert (= temp1064_190 temp1064_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1064_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1064_193 #x0000000000000001))
(assert (= var1322908 temp1064_193))
(assert (= temp1064_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1064_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_195 #x0000000000000001))
(assert (= var1322975 temp1064_195))
(assert (= temp1064_196 #x0000000000000000))
(assert (= var1310898 temp1064_196))
(assert (= temp1064_197 #x0000000000000000))
(assert (= temp1064_198 temp1064_197))
(assert (= temp1064_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1064_198)))
(assert (= temp1064_200 #x0000000000000001))
(assert (= temp1064_201 temp1064_200))
(assert (= temp1064_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1064_201)))
(assert (= temp1064_203 #x0000000000000002))
(assert (= temp1064_204 temp1064_203))
(assert (= temp1064_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1064_204)))
(assert (= temp1064_206 #x0000000000000003))
(assert (= temp1064_207 temp1064_206))
(assert (= temp1064_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1064_207)))
(assert (= temp1064_209 #x0000000000000004))
(assert (= temp1064_210 temp1064_209))
(assert (= temp1064_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1064_210)))
(assert (= temp1064_212 #x0000000000000005))
(assert (= temp1064_213 temp1064_212))
(assert (= temp1064_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1064_213)))
(assert (= temp1064_215 #x0000000000000000))
(assert (= temp1064_216
   (ite (bvslt var1310898 temp1064_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1064_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1064_216)))
(assert (= var1322977 temp1064_217))
(assert (bvslt (ite (bvslt var1310898 temp1064_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1064_218 #x0000000000000000))
(assert (= var1310898 temp1064_218))
(assert (= temp1064_220 var1310898))
(assert (= temp1064_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_220)))
(assert (= temp1064_219 temp1064_221))
(assert (= var1322980
   (ite (= var1322977 temp1064_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1064_222 #x0000000000000001))
(assert (= var1322980 temp1064_222))
(assert (= temp1064_223 #x0000000000000002))
(assert (= var1848169 temp1064_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1064_225 #x0000000000000001))
(assert (= var1323065 temp1064_225))
(assert (= temp1064_226 #x0000000000000001))
(assert (= var3486735 temp1064_226))
(assert (= temp1064_227 #x0000000000000001))
(assert (= var3814415 temp1064_227))
(assert (= temp1064_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1064_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_229 #x0000000000000001))
(assert (= var79986 temp1064_229))
(assert (= temp1064_230 #x0000000000000001))
(assert (= var80116 temp1064_230))
(assert (= var4796905 var80116))
(assert (= temp1064_231 #x0000000000000000))
(assert (= var4784306 temp1064_231))
(assert (= temp1064_232 #x0000000000000000))
(assert (= temp1064_233
   (ite (bvslt var4784306 temp1064_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1064_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_233)))
(assert (= var4796924 temp1064_234))
(assert (bvslt (ite (bvslt var4784306 temp1064_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1064_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1064_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1064_236 #x0000000000000001))
(assert (= var4796925 temp1064_236))
(assert (= temp1064_237 #x0000000000000000))
(assert (= var4996927 temp1064_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1064_238 #x0000000000000002))
(assert (= var5125763 temp1064_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_239 #x0000000000000000))
(assert (= var5191324 temp1064_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1064_240 #x0000000000000001))
(assert (= var79986 temp1064_240))
(model-add temp1064_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1064_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1064_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






