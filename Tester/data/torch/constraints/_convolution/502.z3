(declare-fun temp667_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp667_2 () (_ BitVec 64))
(declare-fun temp667_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp667_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp667_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp667_6 () (_ BitVec 64))
(declare-fun temp667_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_8 () (_ BitVec 64))
(declare-fun temp667_9 () (_ BitVec 64))
(declare-fun temp667_10 () (_ BitVec 64))
(declare-fun temp667_11 () (_ BitVec 64))
(declare-fun temp667_12 () (_ BitVec 64))
(declare-fun temp667_13 () (_ BitVec 64))
(declare-fun temp667_14 () (_ BitVec 64))
(declare-fun temp667_15 () (_ BitVec 64))
(declare-fun temp667_16 () (_ BitVec 64))
(declare-fun temp667_17 () (_ BitVec 64))
(declare-fun temp667_18 () (_ BitVec 64))
(declare-fun temp667_19 () (_ BitVec 64))
(declare-fun temp667_20 () (_ BitVec 64))
(declare-fun temp667_21 () (_ BitVec 64))
(declare-fun temp667_22 () (_ BitVec 64))
(declare-fun temp667_23 () (_ BitVec 64))
(declare-fun temp667_24 () (_ BitVec 64))
(declare-fun temp667_25 () (_ BitVec 64))
(declare-fun temp667_26 () (_ BitVec 64))
(declare-fun temp667_27 () (_ BitVec 64))
(declare-fun temp667_28 () (_ BitVec 64))
(declare-fun temp667_29 () (_ BitVec 64))
(declare-fun temp667_30 () (_ BitVec 64))
(declare-fun temp667_31 () (_ BitVec 64))
(declare-fun temp667_32 () (_ BitVec 64))
(declare-fun temp667_33 () (_ BitVec 64))
(declare-fun temp667_34 () (_ BitVec 64))
(declare-fun temp667_35 () (_ BitVec 64))
(declare-fun temp667_36 () (_ BitVec 64))
(declare-fun temp667_37 () (_ BitVec 64))
(declare-fun temp667_38 () (_ BitVec 64))
(declare-fun temp667_39 () (_ BitVec 64))
(declare-fun temp667_40 () (_ BitVec 64))
(declare-fun temp667_41 () (_ BitVec 64))
(declare-fun temp667_42 () (_ BitVec 64))
(declare-fun temp667_43 () (_ BitVec 64))
(declare-fun temp667_44 () (_ BitVec 64))
(declare-fun temp667_45 () (_ BitVec 64))
(declare-fun temp667_46 () (_ BitVec 64))
(declare-fun temp667_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp667_48 () (_ BitVec 64))
(declare-fun temp667_49 () (_ BitVec 64))
(declare-fun temp667_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_51 () (_ BitVec 64))
(declare-fun temp667_52 () (_ BitVec 64))
(declare-fun temp667_53 () (_ BitVec 64))
(declare-fun temp667_54 () (_ BitVec 64))
(declare-fun temp667_55 () (_ BitVec 64))
(declare-fun temp667_56 () (_ BitVec 64))
(declare-fun temp667_57 () (_ BitVec 64))
(declare-fun temp667_58 () (_ BitVec 64))
(declare-fun temp667_59 () (_ BitVec 64))
(declare-fun temp667_60 () (_ BitVec 64))
(declare-fun temp667_61 () (_ BitVec 64))
(declare-fun temp667_62 () (_ BitVec 64))
(declare-fun temp667_63 () (_ BitVec 64))
(declare-fun temp667_64 () (_ BitVec 64))
(declare-fun temp667_65 () (_ BitVec 64))
(declare-fun temp667_66 () (_ BitVec 64))
(declare-fun temp667_67 () (_ BitVec 64))
(declare-fun temp667_68 () (_ BitVec 64))
(declare-fun temp667_69 () (_ BitVec 64))
(declare-fun temp667_70 () (_ BitVec 64))
(declare-fun temp667_71 () (_ BitVec 64))
(declare-fun temp667_72 () (_ BitVec 64))
(declare-fun temp667_73 () (_ BitVec 64))
(declare-fun temp667_74 () (_ BitVec 64))
(declare-fun temp667_75 () (_ BitVec 64))
(declare-fun temp667_76 () (_ BitVec 64))
(declare-fun temp667_77 () (_ BitVec 64))
(declare-fun temp667_78 () (_ BitVec 64))
(declare-fun temp667_79 () (_ BitVec 64))
(declare-fun temp667_80 () (_ BitVec 64))
(declare-fun temp667_81 () (_ BitVec 64))
(declare-fun temp667_82 () (_ BitVec 64))
(declare-fun temp667_83 () (_ BitVec 64))
(declare-fun temp667_84 () (_ BitVec 64))
(declare-fun temp667_85 () (_ BitVec 64))
(declare-fun temp667_86 () (_ BitVec 64))
(declare-fun temp667_87 () (_ BitVec 64))
(declare-fun temp667_88 () (_ BitVec 64))
(declare-fun temp667_89 () (_ BitVec 64))
(declare-fun temp667_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp667_91 () (_ BitVec 64))
(declare-fun temp667_92 () (_ BitVec 64))
(declare-fun temp667_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_94 () (_ BitVec 64))
(declare-fun temp667_95 () (_ BitVec 64))
(declare-fun temp667_96 () (_ BitVec 64))
(declare-fun temp667_97 () (_ BitVec 64))
(declare-fun temp667_98 () (_ BitVec 64))
(declare-fun temp667_99 () (_ BitVec 64))
(declare-fun temp667_100 () (_ BitVec 64))
(declare-fun temp667_101 () (_ BitVec 64))
(declare-fun temp667_102 () (_ BitVec 64))
(declare-fun temp667_103 () (_ BitVec 64))
(declare-fun temp667_104 () (_ BitVec 64))
(declare-fun temp667_105 () (_ BitVec 64))
(declare-fun temp667_106 () (_ BitVec 64))
(declare-fun temp667_107 () (_ BitVec 64))
(declare-fun temp667_108 () (_ BitVec 64))
(declare-fun temp667_109 () (_ BitVec 64))
(declare-fun temp667_110 () (_ BitVec 64))
(declare-fun temp667_111 () (_ BitVec 64))
(declare-fun temp667_112 () (_ BitVec 64))
(declare-fun temp667_113 () (_ BitVec 64))
(declare-fun temp667_114 () (_ BitVec 64))
(declare-fun temp667_115 () (_ BitVec 64))
(declare-fun temp667_116 () (_ BitVec 64))
(declare-fun temp667_117 () (_ BitVec 64))
(declare-fun temp667_118 () (_ BitVec 64))
(declare-fun temp667_119 () (_ BitVec 64))
(declare-fun temp667_120 () (_ BitVec 64))
(declare-fun temp667_121 () (_ BitVec 64))
(declare-fun temp667_122 () (_ BitVec 64))
(declare-fun temp667_123 () (_ BitVec 64))
(declare-fun temp667_124 () (_ BitVec 64))
(declare-fun temp667_125 () (_ BitVec 64))
(declare-fun temp667_126 () (_ BitVec 64))
(declare-fun temp667_127 () (_ BitVec 64))
(declare-fun temp667_128 () (_ BitVec 64))
(declare-fun temp667_129 () (_ BitVec 64))
(declare-fun temp667_130 () (_ BitVec 64))
(declare-fun temp667_131 () (_ BitVec 64))
(declare-fun temp667_132 () (_ BitVec 64))
(declare-fun temp667_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp667_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp667_135 () (_ BitVec 64))
(declare-fun temp667_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp667_137 () (_ BitVec 64))
(declare-fun temp667_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_139 () (_ BitVec 64))
(declare-fun temp667_140 () (_ BitVec 64))
(declare-fun temp667_141 () (_ BitVec 64))
(declare-fun temp667_142 () (_ BitVec 64))
(declare-fun temp667_143 () (_ BitVec 64))
(declare-fun temp667_144 () (_ BitVec 64))
(declare-fun temp667_145 () (_ BitVec 64))
(declare-fun temp667_146 () (_ BitVec 64))
(declare-fun temp667_147 () (_ BitVec 64))
(declare-fun temp667_148 () (_ BitVec 64))
(declare-fun temp667_149 () (_ BitVec 64))
(declare-fun temp667_150 () (_ BitVec 64))
(declare-fun temp667_151 () (_ BitVec 64))
(declare-fun temp667_152 () (_ BitVec 64))
(declare-fun temp667_153 () (_ BitVec 64))
(declare-fun temp667_154 () (_ BitVec 64))
(declare-fun temp667_156 () (_ BitVec 64))
(declare-fun temp667_157 () (_ BitVec 64))
(declare-fun temp667_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp667_158 () (_ BitVec 64))
(declare-fun temp667_159 () (_ BitVec 64))
(declare-fun temp667_161 () (_ BitVec 64))
(declare-fun temp667_162 () (_ BitVec 64))
(declare-fun temp667_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp667_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp667_164 () (_ BitVec 64))
(declare-fun temp667_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp667_166 () (_ BitVec 64))
(declare-fun temp667_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp667_168 () (_ BitVec 64))
(declare-fun temp667_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_170 () (_ BitVec 64))
(declare-fun temp667_171 () (_ BitVec 64))
(declare-fun temp667_172 () (_ BitVec 64))
(declare-fun temp667_173 () (_ BitVec 64))
(declare-fun temp667_174 () (_ BitVec 64))
(declare-fun temp667_175 () (_ BitVec 64))
(declare-fun temp667_176 () (_ BitVec 64))
(declare-fun temp667_177 () (_ BitVec 64))
(declare-fun temp667_178 () (_ BitVec 64))
(declare-fun temp667_179 () (_ BitVec 64))
(declare-fun temp667_180 () (_ BitVec 64))
(declare-fun temp667_181 () (_ BitVec 64))
(declare-fun temp667_182 () (_ BitVec 64))
(declare-fun temp667_183 () (_ BitVec 64))
(declare-fun temp667_184 () (_ BitVec 64))
(declare-fun temp667_185 () (_ BitVec 64))
(declare-fun temp667_186 () (_ BitVec 64))
(declare-fun temp667_187 () (_ BitVec 64))
(declare-fun temp667_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp667_189 () (_ BitVec 64))
(declare-fun temp667_191 () (_ BitVec 64))
(declare-fun temp667_192 () (_ BitVec 64))
(declare-fun temp667_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp667_193 () (_ BitVec 64))
(declare-fun temp667_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp667_195 () (_ BitVec 64))
(declare-fun temp667_196 () (_ BitVec 64))
(declare-fun temp667_197 () (_ BitVec 64))
(declare-fun temp667_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_199 () (_ BitVec 64))
(declare-fun temp667_200 () (_ BitVec 64))
(declare-fun temp667_201 () (_ BitVec 64))
(declare-fun temp667_202 () (_ BitVec 64))
(declare-fun temp667_203 () (_ BitVec 64))
(declare-fun temp667_204 () (_ BitVec 64))
(declare-fun temp667_205 () (_ BitVec 64))
(declare-fun temp667_206 () (_ BitVec 64))
(declare-fun temp667_207 () (_ BitVec 64))
(declare-fun temp667_208 () (_ BitVec 64))
(declare-fun temp667_209 () (_ BitVec 64))
(declare-fun temp667_210 () (_ BitVec 64))
(declare-fun temp667_211 () (_ BitVec 64))
(declare-fun temp667_212 () (_ BitVec 64))
(declare-fun temp667_213 () (_ BitVec 64))
(declare-fun temp667_214 () (_ BitVec 64))
(declare-fun temp667_215 () (_ BitVec 64))
(declare-fun temp667_216 () (_ BitVec 64))
(declare-fun temp667_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp667_218 () (_ BitVec 64))
(declare-fun temp667_220 () (_ BitVec 64))
(declare-fun temp667_221 () (_ BitVec 64))
(declare-fun temp667_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp667_222 () (_ BitVec 64))
(declare-fun temp667_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp667_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp667_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp667_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp667_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp667_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp667_229 () (_ BitVec 64))
(declare-fun temp667_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp667_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp667_232 () (_ BitVec 64))
(declare-fun temp667_233 () (_ BitVec 64))
(declare-fun temp667_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp667_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp667_236 () (_ BitVec 64))
(declare-fun temp667_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp667_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp667_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp667_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp667_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp667_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp667_243 () (_ BitVec 64))
(declare-fun temp667_244 () (_ BitVec 64))
(declare-fun var7353108 () (_ BitVec 64))
(declare-fun var7353075 () (_ BitVec 64))
(declare-fun var7221639 () (_ BitVec 64))
(declare-fun var7221635 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp667_245 () (_ BitVec 64))
(assert (= temp667_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp667_1)))
(assert (= temp667_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp667_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_3 #x0000000000000000))
(assert (= var79869 temp667_3))
(assert (= temp667_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp667_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_5 #x0000000000000000))
(assert (= var79914 temp667_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp667_6 #x0000000000000000))
(assert (= temp667_7 temp667_6))
(assert (= temp667_8 (select ARGNAME_padding_NAMEEND_VAL temp667_7)))
(assert (= temp667_9 #x0000000000000001))
(assert (= temp667_10 temp667_9))
(assert (= temp667_11 (select ARGNAME_padding_NAMEEND_VAL temp667_10)))
(assert (= temp667_12 #x0000000000000002))
(assert (= temp667_13 temp667_12))
(assert (= temp667_14 (select ARGNAME_padding_NAMEEND_VAL temp667_13)))
(assert (= temp667_15 #x0000000000000003))
(assert (= temp667_16 temp667_15))
(assert (= temp667_17 (select ARGNAME_padding_NAMEEND_VAL temp667_16)))
(assert (= temp667_18 #x0000000000000004))
(assert (= temp667_19 temp667_18))
(assert (= temp667_20 (select ARGNAME_padding_NAMEEND_VAL temp667_19)))
(assert (= temp667_21 #x0000000000000005))
(assert (= temp667_22 temp667_21))
(assert (= temp667_23 (select ARGNAME_padding_NAMEEND_VAL temp667_22)))
(assert (= temp667_24 #x0000000000000000))
(assert (= temp667_25 #x0000000000000000))
(assert (= temp667_26 temp667_25))
(assert (= temp667_27 (select ARGNAME_padding_NAMEEND_VAL temp667_26)))
(assert (= temp667_28 #x0000000000000000))
(assert (= temp667_29 #x0000000000000001))
(assert (= temp667_30 temp667_29))
(assert (= temp667_31 (select ARGNAME_padding_NAMEEND_VAL temp667_30)))
(assert (= temp667_32 #x0000000000000000))
(assert (= temp667_33 #x0000000000000002))
(assert (= temp667_34 temp667_33))
(assert (= temp667_35 (select ARGNAME_padding_NAMEEND_VAL temp667_34)))
(assert (= temp667_36 #x0000000000000000))
(assert (= temp667_37 #x0000000000000003))
(assert (= temp667_38 temp667_37))
(assert (= temp667_39 (select ARGNAME_padding_NAMEEND_VAL temp667_38)))
(assert (= temp667_40 #x0000000000000000))
(assert (= temp667_41 #x0000000000000004))
(assert (= temp667_42 temp667_41))
(assert (= temp667_43 (select ARGNAME_padding_NAMEEND_VAL temp667_42)))
(assert (= temp667_44 #x0000000000000000))
(assert (= temp667_45 #x0000000000000005))
(assert (= temp667_46 temp667_45))
(assert (= temp667_47 (select ARGNAME_padding_NAMEEND_VAL temp667_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp667_27 temp667_24)
             (bvslt temp667_31 temp667_28)
             (bvslt temp667_35 temp667_32)
             (bvslt temp667_39 temp667_36)
             (bvslt temp667_43 temp667_40)
             (bvslt temp667_47 temp667_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_48 #x0000000000000000))
(assert (= var1322786 temp667_48))
(assert (= temp667_49 #x0000000000000000))
(assert (= temp667_50 temp667_49))
(assert (= temp667_51 (select ARGNAME_output_padding_NAMEEND_VAL temp667_50)))
(assert (= temp667_52 #x0000000000000001))
(assert (= temp667_53 temp667_52))
(assert (= temp667_54 (select ARGNAME_output_padding_NAMEEND_VAL temp667_53)))
(assert (= temp667_55 #x0000000000000002))
(assert (= temp667_56 temp667_55))
(assert (= temp667_57 (select ARGNAME_output_padding_NAMEEND_VAL temp667_56)))
(assert (= temp667_58 #x0000000000000003))
(assert (= temp667_59 temp667_58))
(assert (= temp667_60 (select ARGNAME_output_padding_NAMEEND_VAL temp667_59)))
(assert (= temp667_61 #x0000000000000004))
(assert (= temp667_62 temp667_61))
(assert (= temp667_63 (select ARGNAME_output_padding_NAMEEND_VAL temp667_62)))
(assert (= temp667_64 #x0000000000000005))
(assert (= temp667_65 temp667_64))
(assert (= temp667_66 (select ARGNAME_output_padding_NAMEEND_VAL temp667_65)))
(assert (= temp667_67 #x0000000000000000))
(assert (= temp667_68 #x0000000000000000))
(assert (= temp667_69 temp667_68))
(assert (= temp667_70 (select ARGNAME_output_padding_NAMEEND_VAL temp667_69)))
(assert (= temp667_71 #x0000000000000000))
(assert (= temp667_72 #x0000000000000001))
(assert (= temp667_73 temp667_72))
(assert (= temp667_74 (select ARGNAME_output_padding_NAMEEND_VAL temp667_73)))
(assert (= temp667_75 #x0000000000000000))
(assert (= temp667_76 #x0000000000000002))
(assert (= temp667_77 temp667_76))
(assert (= temp667_78 (select ARGNAME_output_padding_NAMEEND_VAL temp667_77)))
(assert (= temp667_79 #x0000000000000000))
(assert (= temp667_80 #x0000000000000003))
(assert (= temp667_81 temp667_80))
(assert (= temp667_82 (select ARGNAME_output_padding_NAMEEND_VAL temp667_81)))
(assert (= temp667_83 #x0000000000000000))
(assert (= temp667_84 #x0000000000000004))
(assert (= temp667_85 temp667_84))
(assert (= temp667_86 (select ARGNAME_output_padding_NAMEEND_VAL temp667_85)))
(assert (= temp667_87 #x0000000000000000))
(assert (= temp667_88 #x0000000000000005))
(assert (= temp667_89 temp667_88))
(assert (= temp667_90 (select ARGNAME_output_padding_NAMEEND_VAL temp667_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp667_70 temp667_67)
             (bvslt temp667_74 temp667_71)
             (bvslt temp667_78 temp667_75)
             (bvslt temp667_82 temp667_79)
             (bvslt temp667_86 temp667_83)
             (bvslt temp667_90 temp667_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_91 #x0000000000000000))
(assert (= var1322797 temp667_91))
(assert (= temp667_92 #x0000000000000000))
(assert (= temp667_93 temp667_92))
(assert (= temp667_94 (select ARGNAME_stride_NAMEEND_VAL temp667_93)))
(assert (= temp667_95 #x0000000000000001))
(assert (= temp667_96 temp667_95))
(assert (= temp667_97 (select ARGNAME_stride_NAMEEND_VAL temp667_96)))
(assert (= temp667_98 #x0000000000000002))
(assert (= temp667_99 temp667_98))
(assert (= temp667_100 (select ARGNAME_stride_NAMEEND_VAL temp667_99)))
(assert (= temp667_101 #x0000000000000003))
(assert (= temp667_102 temp667_101))
(assert (= temp667_103 (select ARGNAME_stride_NAMEEND_VAL temp667_102)))
(assert (= temp667_104 #x0000000000000004))
(assert (= temp667_105 temp667_104))
(assert (= temp667_106 (select ARGNAME_stride_NAMEEND_VAL temp667_105)))
(assert (= temp667_107 #x0000000000000005))
(assert (= temp667_108 temp667_107))
(assert (= temp667_109 (select ARGNAME_stride_NAMEEND_VAL temp667_108)))
(assert (= temp667_110 #x0000000000000000))
(assert (= temp667_111 #x0000000000000000))
(assert (= temp667_112 temp667_111))
(assert (= temp667_113 (select ARGNAME_stride_NAMEEND_VAL temp667_112)))
(assert (= temp667_114 #x0000000000000000))
(assert (= temp667_115 #x0000000000000001))
(assert (= temp667_116 temp667_115))
(assert (= temp667_117 (select ARGNAME_stride_NAMEEND_VAL temp667_116)))
(assert (= temp667_118 #x0000000000000000))
(assert (= temp667_119 #x0000000000000002))
(assert (= temp667_120 temp667_119))
(assert (= temp667_121 (select ARGNAME_stride_NAMEEND_VAL temp667_120)))
(assert (= temp667_122 #x0000000000000000))
(assert (= temp667_123 #x0000000000000003))
(assert (= temp667_124 temp667_123))
(assert (= temp667_125 (select ARGNAME_stride_NAMEEND_VAL temp667_124)))
(assert (= temp667_126 #x0000000000000000))
(assert (= temp667_127 #x0000000000000004))
(assert (= temp667_128 temp667_127))
(assert (= temp667_129 (select ARGNAME_stride_NAMEEND_VAL temp667_128)))
(assert (= temp667_130 #x0000000000000000))
(assert (= temp667_131 #x0000000000000005))
(assert (= temp667_132 temp667_131))
(assert (= temp667_133 (select ARGNAME_stride_NAMEEND_VAL temp667_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp667_113 temp667_110)
             (bvsle temp667_117 temp667_114)
             (bvsle temp667_121 temp667_118)
             (bvsle temp667_125 temp667_122)
             (bvsle temp667_129 temp667_126)
             (bvsle temp667_133 temp667_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_134 #x0000000000000000))
(assert (= var1322807 temp667_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_135 #x0000000000000001))
(assert (= var1322819 temp667_135))
(assert (= temp667_136 #x0000000000000000))
(assert (= var1310898 temp667_136))
(assert (= temp667_137 #x0000000000000000))
(assert (= temp667_138 temp667_137))
(assert (= temp667_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_138)))
(assert (= temp667_140 #x0000000000000001))
(assert (= temp667_141 temp667_140))
(assert (= temp667_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_141)))
(assert (= temp667_143 #x0000000000000002))
(assert (= temp667_144 temp667_143))
(assert (= temp667_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_144)))
(assert (= temp667_146 #x0000000000000003))
(assert (= temp667_147 temp667_146))
(assert (= temp667_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_147)))
(assert (= temp667_149 #x0000000000000004))
(assert (= temp667_150 temp667_149))
(assert (= temp667_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_150)))
(assert (= temp667_152 #x0000000000000005))
(assert (= temp667_153 temp667_152))
(assert (= temp667_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_153)))
(assert (= temp667_156 var1310898))
(assert (= temp667_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_156)))
(assert (= temp667_155 temp667_157))
(assert (= var1322852
   (ite (bvslt temp667_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_158 #x0000000000000000))
(assert (= var1322852 temp667_158))
(assert (= temp667_159 #x0000000000000000))
(assert (= var1310898 temp667_159))
(assert (= temp667_161 var1310898))
(assert (= temp667_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_161)))
(assert (= temp667_160 temp667_162))
(assert (= var1322874 (bvsmod temp667_160 ARGNAME_groups_NAMEEND)))
(assert (= temp667_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp667_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp667_164 #x0000000000000001))
(assert (= var1322875 temp667_164))
(assert (= temp667_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp667_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_166 #x0000000000000001))
(assert (= var1322895 temp667_166))
(assert (= temp667_167 #x0000000000000001))
(assert (= var1311786 temp667_167))
(assert (= temp667_168 #x0000000000000000))
(assert (= temp667_169 temp667_168))
(assert (= temp667_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_169)))
(assert (= temp667_171 #x0000000000000001))
(assert (= temp667_172 temp667_171))
(assert (= temp667_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_172)))
(assert (= temp667_174 #x0000000000000002))
(assert (= temp667_175 temp667_174))
(assert (= temp667_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_175)))
(assert (= temp667_177 #x0000000000000003))
(assert (= temp667_178 temp667_177))
(assert (= temp667_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_178)))
(assert (= temp667_180 #x0000000000000004))
(assert (= temp667_181 temp667_180))
(assert (= temp667_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_181)))
(assert (= temp667_183 #x0000000000000005))
(assert (= temp667_184 temp667_183))
(assert (= temp667_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_184)))
(assert (= temp667_186 #x0000000000000000))
(assert (= temp667_187
   (ite (bvslt var1311786 temp667_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp667_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_187)))
(assert (= var1322903 temp667_188))
(assert (bvslt (ite (bvslt var1311786 temp667_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp667_189 #x0000000000000001))
(assert (= var1311786 temp667_189))
(assert (= temp667_191 var1311786))
(assert (= temp667_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_191)))
(assert (= temp667_190 temp667_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp667_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp667_193 #x0000000000000001))
(assert (= var1322908 temp667_193))
(assert (= temp667_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp667_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_195 #x0000000000000001))
(assert (= var1322975 temp667_195))
(assert (= temp667_196 #x0000000000000000))
(assert (= var1310898 temp667_196))
(assert (= temp667_197 #x0000000000000000))
(assert (= temp667_198 temp667_197))
(assert (= temp667_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp667_198)))
(assert (= temp667_200 #x0000000000000001))
(assert (= temp667_201 temp667_200))
(assert (= temp667_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp667_201)))
(assert (= temp667_203 #x0000000000000002))
(assert (= temp667_204 temp667_203))
(assert (= temp667_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp667_204)))
(assert (= temp667_206 #x0000000000000003))
(assert (= temp667_207 temp667_206))
(assert (= temp667_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp667_207)))
(assert (= temp667_209 #x0000000000000004))
(assert (= temp667_210 temp667_209))
(assert (= temp667_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp667_210)))
(assert (= temp667_212 #x0000000000000005))
(assert (= temp667_213 temp667_212))
(assert (= temp667_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp667_213)))
(assert (= temp667_215 #x0000000000000000))
(assert (= temp667_216
   (ite (bvslt var1310898 temp667_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp667_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp667_216)))
(assert (= var1322977 temp667_217))
(assert (bvslt (ite (bvslt var1310898 temp667_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp667_218 #x0000000000000000))
(assert (= var1310898 temp667_218))
(assert (= temp667_220 var1310898))
(assert (= temp667_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_220)))
(assert (= temp667_219 temp667_221))
(assert (= var1322980
   (ite (= var1322977 temp667_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp667_222 #x0000000000000001))
(assert (= var1322980 temp667_222))
(assert (= temp667_223 #x0000000000000002))
(assert (= var1848169 temp667_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp667_225 #x0000000000000001))
(assert (= var1323065 temp667_225))
(assert (= temp667_226 #x0000000000000001))
(assert (= var3486735 temp667_226))
(assert (= temp667_227 #x0000000000000001))
(assert (= var3814415 temp667_227))
(assert (= temp667_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp667_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_229 #x0000000000000001))
(assert (= var79986 temp667_229))
(assert (= temp667_230 #x0000000000000001))
(assert (= var80116 temp667_230))
(assert (= var4796905 var80116))
(assert (= temp667_231 #x0000000000000000))
(assert (= var4784306 temp667_231))
(assert (= temp667_232 #x0000000000000000))
(assert (= temp667_233
   (ite (bvslt var4784306 temp667_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp667_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_233)))
(assert (= var4796924 temp667_234))
(assert (bvslt (ite (bvslt var4784306 temp667_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp667_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp667_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp667_236 #x0000000000000001))
(assert (= var4796925 temp667_236))
(assert (= temp667_237 #x0000000000000000))
(assert (= var4996927 temp667_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp667_238 #x0000000000000002))
(assert (= var5125763 temp667_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_239 #x0000000000000000))
(assert (= var5191324 temp667_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp667_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp667_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp667_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp667_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_243 #x0000000000000001))
(assert (= var79986 temp667_243))
(assert (= temp667_244 #x0000000000000000))
(assert (= var7353108 temp667_244))
(assert (= var7353075 var7353108))
(assert (= var7221639 var7353075))
(assert (= var7221635 var7221639))
(assert (= var81597 var7221635))
(assert (= temp667_245 #x0000000000000000))
(assert (= var81597 temp667_245))
(model-add temp667_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp667_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp667_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






