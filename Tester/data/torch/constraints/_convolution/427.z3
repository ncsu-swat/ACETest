(declare-fun temp568_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp568_2 () (_ BitVec 64))
(declare-fun temp568_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp568_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp568_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp568_6 () (_ BitVec 64))
(declare-fun temp568_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp568_8 () (_ BitVec 64))
(declare-fun temp568_9 () (_ BitVec 64))
(declare-fun temp568_10 () (_ BitVec 64))
(declare-fun temp568_11 () (_ BitVec 64))
(declare-fun temp568_12 () (_ BitVec 64))
(declare-fun temp568_13 () (_ BitVec 64))
(declare-fun temp568_14 () (_ BitVec 64))
(declare-fun temp568_15 () (_ BitVec 64))
(declare-fun temp568_16 () (_ BitVec 64))
(declare-fun temp568_17 () (_ BitVec 64))
(declare-fun temp568_18 () (_ BitVec 64))
(declare-fun temp568_19 () (_ BitVec 64))
(declare-fun temp568_20 () (_ BitVec 64))
(declare-fun temp568_21 () (_ BitVec 64))
(declare-fun temp568_22 () (_ BitVec 64))
(declare-fun temp568_23 () (_ BitVec 64))
(declare-fun temp568_24 () (_ BitVec 64))
(declare-fun temp568_25 () (_ BitVec 64))
(declare-fun temp568_26 () (_ BitVec 64))
(declare-fun temp568_27 () (_ BitVec 64))
(declare-fun temp568_28 () (_ BitVec 64))
(declare-fun temp568_29 () (_ BitVec 64))
(declare-fun temp568_30 () (_ BitVec 64))
(declare-fun temp568_31 () (_ BitVec 64))
(declare-fun temp568_32 () (_ BitVec 64))
(declare-fun temp568_33 () (_ BitVec 64))
(declare-fun temp568_34 () (_ BitVec 64))
(declare-fun temp568_35 () (_ BitVec 64))
(declare-fun temp568_36 () (_ BitVec 64))
(declare-fun temp568_37 () (_ BitVec 64))
(declare-fun temp568_38 () (_ BitVec 64))
(declare-fun temp568_39 () (_ BitVec 64))
(declare-fun temp568_40 () (_ BitVec 64))
(declare-fun temp568_41 () (_ BitVec 64))
(declare-fun temp568_42 () (_ BitVec 64))
(declare-fun temp568_43 () (_ BitVec 64))
(declare-fun temp568_44 () (_ BitVec 64))
(declare-fun temp568_45 () (_ BitVec 64))
(declare-fun temp568_46 () (_ BitVec 64))
(declare-fun temp568_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp568_48 () (_ BitVec 64))
(declare-fun temp568_49 () (_ BitVec 64))
(declare-fun temp568_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp568_51 () (_ BitVec 64))
(declare-fun temp568_52 () (_ BitVec 64))
(declare-fun temp568_53 () (_ BitVec 64))
(declare-fun temp568_54 () (_ BitVec 64))
(declare-fun temp568_55 () (_ BitVec 64))
(declare-fun temp568_56 () (_ BitVec 64))
(declare-fun temp568_57 () (_ BitVec 64))
(declare-fun temp568_58 () (_ BitVec 64))
(declare-fun temp568_59 () (_ BitVec 64))
(declare-fun temp568_60 () (_ BitVec 64))
(declare-fun temp568_61 () (_ BitVec 64))
(declare-fun temp568_62 () (_ BitVec 64))
(declare-fun temp568_63 () (_ BitVec 64))
(declare-fun temp568_64 () (_ BitVec 64))
(declare-fun temp568_65 () (_ BitVec 64))
(declare-fun temp568_66 () (_ BitVec 64))
(declare-fun temp568_67 () (_ BitVec 64))
(declare-fun temp568_68 () (_ BitVec 64))
(declare-fun temp568_69 () (_ BitVec 64))
(declare-fun temp568_70 () (_ BitVec 64))
(declare-fun temp568_71 () (_ BitVec 64))
(declare-fun temp568_72 () (_ BitVec 64))
(declare-fun temp568_73 () (_ BitVec 64))
(declare-fun temp568_74 () (_ BitVec 64))
(declare-fun temp568_75 () (_ BitVec 64))
(declare-fun temp568_76 () (_ BitVec 64))
(declare-fun temp568_77 () (_ BitVec 64))
(declare-fun temp568_78 () (_ BitVec 64))
(declare-fun temp568_79 () (_ BitVec 64))
(declare-fun temp568_80 () (_ BitVec 64))
(declare-fun temp568_81 () (_ BitVec 64))
(declare-fun temp568_82 () (_ BitVec 64))
(declare-fun temp568_83 () (_ BitVec 64))
(declare-fun temp568_84 () (_ BitVec 64))
(declare-fun temp568_85 () (_ BitVec 64))
(declare-fun temp568_86 () (_ BitVec 64))
(declare-fun temp568_87 () (_ BitVec 64))
(declare-fun temp568_88 () (_ BitVec 64))
(declare-fun temp568_89 () (_ BitVec 64))
(declare-fun temp568_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp568_91 () (_ BitVec 64))
(declare-fun temp568_92 () (_ BitVec 64))
(declare-fun temp568_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp568_94 () (_ BitVec 64))
(declare-fun temp568_95 () (_ BitVec 64))
(declare-fun temp568_96 () (_ BitVec 64))
(declare-fun temp568_97 () (_ BitVec 64))
(declare-fun temp568_98 () (_ BitVec 64))
(declare-fun temp568_99 () (_ BitVec 64))
(declare-fun temp568_100 () (_ BitVec 64))
(declare-fun temp568_101 () (_ BitVec 64))
(declare-fun temp568_102 () (_ BitVec 64))
(declare-fun temp568_103 () (_ BitVec 64))
(declare-fun temp568_104 () (_ BitVec 64))
(declare-fun temp568_105 () (_ BitVec 64))
(declare-fun temp568_106 () (_ BitVec 64))
(declare-fun temp568_107 () (_ BitVec 64))
(declare-fun temp568_108 () (_ BitVec 64))
(declare-fun temp568_109 () (_ BitVec 64))
(declare-fun temp568_110 () (_ BitVec 64))
(declare-fun temp568_111 () (_ BitVec 64))
(declare-fun temp568_112 () (_ BitVec 64))
(declare-fun temp568_113 () (_ BitVec 64))
(declare-fun temp568_114 () (_ BitVec 64))
(declare-fun temp568_115 () (_ BitVec 64))
(declare-fun temp568_116 () (_ BitVec 64))
(declare-fun temp568_117 () (_ BitVec 64))
(declare-fun temp568_118 () (_ BitVec 64))
(declare-fun temp568_119 () (_ BitVec 64))
(declare-fun temp568_120 () (_ BitVec 64))
(declare-fun temp568_121 () (_ BitVec 64))
(declare-fun temp568_122 () (_ BitVec 64))
(declare-fun temp568_123 () (_ BitVec 64))
(declare-fun temp568_124 () (_ BitVec 64))
(declare-fun temp568_125 () (_ BitVec 64))
(declare-fun temp568_126 () (_ BitVec 64))
(declare-fun temp568_127 () (_ BitVec 64))
(declare-fun temp568_128 () (_ BitVec 64))
(declare-fun temp568_129 () (_ BitVec 64))
(declare-fun temp568_130 () (_ BitVec 64))
(declare-fun temp568_131 () (_ BitVec 64))
(declare-fun temp568_132 () (_ BitVec 64))
(declare-fun temp568_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp568_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp568_135 () (_ BitVec 64))
(declare-fun temp568_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp568_137 () (_ BitVec 64))
(declare-fun temp568_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp568_139 () (_ BitVec 64))
(declare-fun temp568_140 () (_ BitVec 64))
(declare-fun temp568_141 () (_ BitVec 64))
(declare-fun temp568_142 () (_ BitVec 64))
(declare-fun temp568_143 () (_ BitVec 64))
(declare-fun temp568_144 () (_ BitVec 64))
(declare-fun temp568_145 () (_ BitVec 64))
(declare-fun temp568_146 () (_ BitVec 64))
(declare-fun temp568_147 () (_ BitVec 64))
(declare-fun temp568_148 () (_ BitVec 64))
(declare-fun temp568_149 () (_ BitVec 64))
(declare-fun temp568_150 () (_ BitVec 64))
(declare-fun temp568_151 () (_ BitVec 64))
(declare-fun temp568_152 () (_ BitVec 64))
(declare-fun temp568_153 () (_ BitVec 64))
(declare-fun temp568_154 () (_ BitVec 64))
(declare-fun temp568_156 () (_ BitVec 64))
(declare-fun temp568_157 () (_ BitVec 64))
(declare-fun temp568_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp568_158 () (_ BitVec 64))
(declare-fun temp568_159 () (_ BitVec 64))
(declare-fun temp568_161 () (_ BitVec 64))
(declare-fun temp568_162 () (_ BitVec 64))
(declare-fun temp568_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp568_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp568_164 () (_ BitVec 64))
(declare-fun temp568_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp568_166 () (_ BitVec 64))
(declare-fun temp568_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp568_168 () (_ BitVec 64))
(declare-fun temp568_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp568_170 () (_ BitVec 64))
(declare-fun temp568_171 () (_ BitVec 64))
(declare-fun temp568_172 () (_ BitVec 64))
(declare-fun temp568_173 () (_ BitVec 64))
(declare-fun temp568_174 () (_ BitVec 64))
(declare-fun temp568_175 () (_ BitVec 64))
(declare-fun temp568_176 () (_ BitVec 64))
(declare-fun temp568_177 () (_ BitVec 64))
(declare-fun temp568_178 () (_ BitVec 64))
(declare-fun temp568_179 () (_ BitVec 64))
(declare-fun temp568_180 () (_ BitVec 64))
(declare-fun temp568_181 () (_ BitVec 64))
(declare-fun temp568_182 () (_ BitVec 64))
(declare-fun temp568_183 () (_ BitVec 64))
(declare-fun temp568_184 () (_ BitVec 64))
(declare-fun temp568_185 () (_ BitVec 64))
(declare-fun temp568_186 () (_ BitVec 64))
(declare-fun temp568_187 () (_ BitVec 64))
(declare-fun temp568_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp568_189 () (_ BitVec 64))
(declare-fun temp568_191 () (_ BitVec 64))
(declare-fun temp568_192 () (_ BitVec 64))
(declare-fun temp568_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp568_193 () (_ BitVec 64))
(declare-fun temp568_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp568_195 () (_ BitVec 64))
(declare-fun temp568_196 () (_ BitVec 64))
(declare-fun temp568_197 () (_ BitVec 64))
(declare-fun temp568_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp568_199 () (_ BitVec 64))
(declare-fun temp568_200 () (_ BitVec 64))
(declare-fun temp568_201 () (_ BitVec 64))
(declare-fun temp568_202 () (_ BitVec 64))
(declare-fun temp568_203 () (_ BitVec 64))
(declare-fun temp568_204 () (_ BitVec 64))
(declare-fun temp568_205 () (_ BitVec 64))
(declare-fun temp568_206 () (_ BitVec 64))
(declare-fun temp568_207 () (_ BitVec 64))
(declare-fun temp568_208 () (_ BitVec 64))
(declare-fun temp568_209 () (_ BitVec 64))
(declare-fun temp568_210 () (_ BitVec 64))
(declare-fun temp568_211 () (_ BitVec 64))
(declare-fun temp568_212 () (_ BitVec 64))
(declare-fun temp568_213 () (_ BitVec 64))
(declare-fun temp568_214 () (_ BitVec 64))
(declare-fun temp568_215 () (_ BitVec 64))
(declare-fun temp568_216 () (_ BitVec 64))
(declare-fun temp568_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp568_218 () (_ BitVec 64))
(declare-fun temp568_220 () (_ BitVec 64))
(declare-fun temp568_221 () (_ BitVec 64))
(declare-fun temp568_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp568_222 () (_ BitVec 64))
(declare-fun temp568_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp568_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp568_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp568_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp568_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp568_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp568_229 () (_ BitVec 64))
(declare-fun temp568_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp568_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp568_232 () (_ BitVec 64))
(declare-fun temp568_233 () (_ BitVec 64))
(declare-fun temp568_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp568_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp568_236 () (_ BitVec 64))
(declare-fun temp568_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp568_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp568_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp568_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp568_241 () (_ BitVec 64))
(declare-fun temp568_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp568_243 () (_ BitVec 64))
(declare-fun temp568_244 () (_ BitVec 64))
(declare-fun var8008468 () (_ BitVec 64))
(declare-fun var8008435 () (_ BitVec 64))
(declare-fun var7876999 () (_ BitVec 64))
(declare-fun var7876995 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp568_245 () (_ BitVec 64))
(assert (= temp568_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp568_1)))
(assert (= temp568_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp568_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_3 #x0000000000000000))
(assert (= var79869 temp568_3))
(assert (= temp568_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp568_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_5 #x0000000000000000))
(assert (= var79914 temp568_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp568_6 #x0000000000000000))
(assert (= temp568_7 temp568_6))
(assert (= temp568_8 (select ARGNAME_padding_NAMEEND_VAL temp568_7)))
(assert (= temp568_9 #x0000000000000001))
(assert (= temp568_10 temp568_9))
(assert (= temp568_11 (select ARGNAME_padding_NAMEEND_VAL temp568_10)))
(assert (= temp568_12 #x0000000000000002))
(assert (= temp568_13 temp568_12))
(assert (= temp568_14 (select ARGNAME_padding_NAMEEND_VAL temp568_13)))
(assert (= temp568_15 #x0000000000000003))
(assert (= temp568_16 temp568_15))
(assert (= temp568_17 (select ARGNAME_padding_NAMEEND_VAL temp568_16)))
(assert (= temp568_18 #x0000000000000004))
(assert (= temp568_19 temp568_18))
(assert (= temp568_20 (select ARGNAME_padding_NAMEEND_VAL temp568_19)))
(assert (= temp568_21 #x0000000000000005))
(assert (= temp568_22 temp568_21))
(assert (= temp568_23 (select ARGNAME_padding_NAMEEND_VAL temp568_22)))
(assert (= temp568_24 #x0000000000000000))
(assert (= temp568_25 #x0000000000000000))
(assert (= temp568_26 temp568_25))
(assert (= temp568_27 (select ARGNAME_padding_NAMEEND_VAL temp568_26)))
(assert (= temp568_28 #x0000000000000000))
(assert (= temp568_29 #x0000000000000001))
(assert (= temp568_30 temp568_29))
(assert (= temp568_31 (select ARGNAME_padding_NAMEEND_VAL temp568_30)))
(assert (= temp568_32 #x0000000000000000))
(assert (= temp568_33 #x0000000000000002))
(assert (= temp568_34 temp568_33))
(assert (= temp568_35 (select ARGNAME_padding_NAMEEND_VAL temp568_34)))
(assert (= temp568_36 #x0000000000000000))
(assert (= temp568_37 #x0000000000000003))
(assert (= temp568_38 temp568_37))
(assert (= temp568_39 (select ARGNAME_padding_NAMEEND_VAL temp568_38)))
(assert (= temp568_40 #x0000000000000000))
(assert (= temp568_41 #x0000000000000004))
(assert (= temp568_42 temp568_41))
(assert (= temp568_43 (select ARGNAME_padding_NAMEEND_VAL temp568_42)))
(assert (= temp568_44 #x0000000000000000))
(assert (= temp568_45 #x0000000000000005))
(assert (= temp568_46 temp568_45))
(assert (= temp568_47 (select ARGNAME_padding_NAMEEND_VAL temp568_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp568_27 temp568_24)
             (bvslt temp568_31 temp568_28)
             (bvslt temp568_35 temp568_32)
             (bvslt temp568_39 temp568_36)
             (bvslt temp568_43 temp568_40)
             (bvslt temp568_47 temp568_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_48 #x0000000000000000))
(assert (= var1322786 temp568_48))
(assert (= temp568_49 #x0000000000000000))
(assert (= temp568_50 temp568_49))
(assert (= temp568_51 (select ARGNAME_output_padding_NAMEEND_VAL temp568_50)))
(assert (= temp568_52 #x0000000000000001))
(assert (= temp568_53 temp568_52))
(assert (= temp568_54 (select ARGNAME_output_padding_NAMEEND_VAL temp568_53)))
(assert (= temp568_55 #x0000000000000002))
(assert (= temp568_56 temp568_55))
(assert (= temp568_57 (select ARGNAME_output_padding_NAMEEND_VAL temp568_56)))
(assert (= temp568_58 #x0000000000000003))
(assert (= temp568_59 temp568_58))
(assert (= temp568_60 (select ARGNAME_output_padding_NAMEEND_VAL temp568_59)))
(assert (= temp568_61 #x0000000000000004))
(assert (= temp568_62 temp568_61))
(assert (= temp568_63 (select ARGNAME_output_padding_NAMEEND_VAL temp568_62)))
(assert (= temp568_64 #x0000000000000005))
(assert (= temp568_65 temp568_64))
(assert (= temp568_66 (select ARGNAME_output_padding_NAMEEND_VAL temp568_65)))
(assert (= temp568_67 #x0000000000000000))
(assert (= temp568_68 #x0000000000000000))
(assert (= temp568_69 temp568_68))
(assert (= temp568_70 (select ARGNAME_output_padding_NAMEEND_VAL temp568_69)))
(assert (= temp568_71 #x0000000000000000))
(assert (= temp568_72 #x0000000000000001))
(assert (= temp568_73 temp568_72))
(assert (= temp568_74 (select ARGNAME_output_padding_NAMEEND_VAL temp568_73)))
(assert (= temp568_75 #x0000000000000000))
(assert (= temp568_76 #x0000000000000002))
(assert (= temp568_77 temp568_76))
(assert (= temp568_78 (select ARGNAME_output_padding_NAMEEND_VAL temp568_77)))
(assert (= temp568_79 #x0000000000000000))
(assert (= temp568_80 #x0000000000000003))
(assert (= temp568_81 temp568_80))
(assert (= temp568_82 (select ARGNAME_output_padding_NAMEEND_VAL temp568_81)))
(assert (= temp568_83 #x0000000000000000))
(assert (= temp568_84 #x0000000000000004))
(assert (= temp568_85 temp568_84))
(assert (= temp568_86 (select ARGNAME_output_padding_NAMEEND_VAL temp568_85)))
(assert (= temp568_87 #x0000000000000000))
(assert (= temp568_88 #x0000000000000005))
(assert (= temp568_89 temp568_88))
(assert (= temp568_90 (select ARGNAME_output_padding_NAMEEND_VAL temp568_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp568_70 temp568_67)
             (bvslt temp568_74 temp568_71)
             (bvslt temp568_78 temp568_75)
             (bvslt temp568_82 temp568_79)
             (bvslt temp568_86 temp568_83)
             (bvslt temp568_90 temp568_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_91 #x0000000000000000))
(assert (= var1322797 temp568_91))
(assert (= temp568_92 #x0000000000000000))
(assert (= temp568_93 temp568_92))
(assert (= temp568_94 (select ARGNAME_stride_NAMEEND_VAL temp568_93)))
(assert (= temp568_95 #x0000000000000001))
(assert (= temp568_96 temp568_95))
(assert (= temp568_97 (select ARGNAME_stride_NAMEEND_VAL temp568_96)))
(assert (= temp568_98 #x0000000000000002))
(assert (= temp568_99 temp568_98))
(assert (= temp568_100 (select ARGNAME_stride_NAMEEND_VAL temp568_99)))
(assert (= temp568_101 #x0000000000000003))
(assert (= temp568_102 temp568_101))
(assert (= temp568_103 (select ARGNAME_stride_NAMEEND_VAL temp568_102)))
(assert (= temp568_104 #x0000000000000004))
(assert (= temp568_105 temp568_104))
(assert (= temp568_106 (select ARGNAME_stride_NAMEEND_VAL temp568_105)))
(assert (= temp568_107 #x0000000000000005))
(assert (= temp568_108 temp568_107))
(assert (= temp568_109 (select ARGNAME_stride_NAMEEND_VAL temp568_108)))
(assert (= temp568_110 #x0000000000000000))
(assert (= temp568_111 #x0000000000000000))
(assert (= temp568_112 temp568_111))
(assert (= temp568_113 (select ARGNAME_stride_NAMEEND_VAL temp568_112)))
(assert (= temp568_114 #x0000000000000000))
(assert (= temp568_115 #x0000000000000001))
(assert (= temp568_116 temp568_115))
(assert (= temp568_117 (select ARGNAME_stride_NAMEEND_VAL temp568_116)))
(assert (= temp568_118 #x0000000000000000))
(assert (= temp568_119 #x0000000000000002))
(assert (= temp568_120 temp568_119))
(assert (= temp568_121 (select ARGNAME_stride_NAMEEND_VAL temp568_120)))
(assert (= temp568_122 #x0000000000000000))
(assert (= temp568_123 #x0000000000000003))
(assert (= temp568_124 temp568_123))
(assert (= temp568_125 (select ARGNAME_stride_NAMEEND_VAL temp568_124)))
(assert (= temp568_126 #x0000000000000000))
(assert (= temp568_127 #x0000000000000004))
(assert (= temp568_128 temp568_127))
(assert (= temp568_129 (select ARGNAME_stride_NAMEEND_VAL temp568_128)))
(assert (= temp568_130 #x0000000000000000))
(assert (= temp568_131 #x0000000000000005))
(assert (= temp568_132 temp568_131))
(assert (= temp568_133 (select ARGNAME_stride_NAMEEND_VAL temp568_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp568_113 temp568_110)
             (bvsle temp568_117 temp568_114)
             (bvsle temp568_121 temp568_118)
             (bvsle temp568_125 temp568_122)
             (bvsle temp568_129 temp568_126)
             (bvsle temp568_133 temp568_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_134 #x0000000000000000))
(assert (= var1322807 temp568_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_135 #x0000000000000001))
(assert (= var1322819 temp568_135))
(assert (= temp568_136 #x0000000000000000))
(assert (= var1310898 temp568_136))
(assert (= temp568_137 #x0000000000000000))
(assert (= temp568_138 temp568_137))
(assert (= temp568_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_138)))
(assert (= temp568_140 #x0000000000000001))
(assert (= temp568_141 temp568_140))
(assert (= temp568_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_141)))
(assert (= temp568_143 #x0000000000000002))
(assert (= temp568_144 temp568_143))
(assert (= temp568_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_144)))
(assert (= temp568_146 #x0000000000000003))
(assert (= temp568_147 temp568_146))
(assert (= temp568_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_147)))
(assert (= temp568_149 #x0000000000000004))
(assert (= temp568_150 temp568_149))
(assert (= temp568_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_150)))
(assert (= temp568_152 #x0000000000000005))
(assert (= temp568_153 temp568_152))
(assert (= temp568_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_153)))
(assert (= temp568_156 var1310898))
(assert (= temp568_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_156)))
(assert (= temp568_155 temp568_157))
(assert (= var1322852
   (ite (bvslt temp568_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_158 #x0000000000000000))
(assert (= var1322852 temp568_158))
(assert (= temp568_159 #x0000000000000000))
(assert (= var1310898 temp568_159))
(assert (= temp568_161 var1310898))
(assert (= temp568_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_161)))
(assert (= temp568_160 temp568_162))
(assert (= var1322874 (bvsmod temp568_160 ARGNAME_groups_NAMEEND)))
(assert (= temp568_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp568_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp568_164 #x0000000000000001))
(assert (= var1322875 temp568_164))
(assert (= temp568_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp568_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_166 #x0000000000000001))
(assert (= var1322895 temp568_166))
(assert (= temp568_167 #x0000000000000001))
(assert (= var1311786 temp568_167))
(assert (= temp568_168 #x0000000000000000))
(assert (= temp568_169 temp568_168))
(assert (= temp568_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_169)))
(assert (= temp568_171 #x0000000000000001))
(assert (= temp568_172 temp568_171))
(assert (= temp568_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_172)))
(assert (= temp568_174 #x0000000000000002))
(assert (= temp568_175 temp568_174))
(assert (= temp568_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_175)))
(assert (= temp568_177 #x0000000000000003))
(assert (= temp568_178 temp568_177))
(assert (= temp568_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_178)))
(assert (= temp568_180 #x0000000000000004))
(assert (= temp568_181 temp568_180))
(assert (= temp568_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_181)))
(assert (= temp568_183 #x0000000000000005))
(assert (= temp568_184 temp568_183))
(assert (= temp568_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_184)))
(assert (= temp568_186 #x0000000000000000))
(assert (= temp568_187
   (ite (bvslt var1311786 temp568_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp568_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_187)))
(assert (= var1322903 temp568_188))
(assert (bvslt (ite (bvslt var1311786 temp568_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp568_189 #x0000000000000001))
(assert (= var1311786 temp568_189))
(assert (= temp568_191 var1311786))
(assert (= temp568_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_191)))
(assert (= temp568_190 temp568_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp568_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp568_193 #x0000000000000001))
(assert (= var1322908 temp568_193))
(assert (= temp568_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp568_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_195 #x0000000000000001))
(assert (= var1322975 temp568_195))
(assert (= temp568_196 #x0000000000000000))
(assert (= var1310898 temp568_196))
(assert (= temp568_197 #x0000000000000000))
(assert (= temp568_198 temp568_197))
(assert (= temp568_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp568_198)))
(assert (= temp568_200 #x0000000000000001))
(assert (= temp568_201 temp568_200))
(assert (= temp568_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp568_201)))
(assert (= temp568_203 #x0000000000000002))
(assert (= temp568_204 temp568_203))
(assert (= temp568_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp568_204)))
(assert (= temp568_206 #x0000000000000003))
(assert (= temp568_207 temp568_206))
(assert (= temp568_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp568_207)))
(assert (= temp568_209 #x0000000000000004))
(assert (= temp568_210 temp568_209))
(assert (= temp568_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp568_210)))
(assert (= temp568_212 #x0000000000000005))
(assert (= temp568_213 temp568_212))
(assert (= temp568_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp568_213)))
(assert (= temp568_215 #x0000000000000000))
(assert (= temp568_216
   (ite (bvslt var1310898 temp568_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp568_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp568_216)))
(assert (= var1322977 temp568_217))
(assert (bvslt (ite (bvslt var1310898 temp568_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp568_218 #x0000000000000000))
(assert (= var1310898 temp568_218))
(assert (= temp568_220 var1310898))
(assert (= temp568_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp568_220)))
(assert (= temp568_219 temp568_221))
(assert (= var1322980
   (ite (= var1322977 temp568_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp568_222 #x0000000000000001))
(assert (= var1322980 temp568_222))
(assert (= temp568_223 #x0000000000000002))
(assert (= var1848169 temp568_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp568_225 #x0000000000000001))
(assert (= var1323065 temp568_225))
(assert (= temp568_226 #x0000000000000001))
(assert (= var3486735 temp568_226))
(assert (= temp568_227 #x0000000000000001))
(assert (= var3814415 temp568_227))
(assert (= temp568_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp568_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_229 #x0000000000000001))
(assert (= var79986 temp568_229))
(assert (= temp568_230 #x0000000000000001))
(assert (= var80116 temp568_230))
(assert (= var4796905 var80116))
(assert (= temp568_231 #x0000000000000000))
(assert (= var4784306 temp568_231))
(assert (= temp568_232 #x0000000000000000))
(assert (= temp568_233
   (ite (bvslt var4784306 temp568_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp568_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_233)))
(assert (= var4796924 temp568_234))
(assert (bvslt (ite (bvslt var4784306 temp568_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp568_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp568_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp568_236 #x0000000000000001))
(assert (= var4796925 temp568_236))
(assert (= temp568_237 #x0000000000000000))
(assert (= var4996927 temp568_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp568_238 #x0000000000000002))
(assert (= var5125763 temp568_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_239 #x0000000000000000))
(assert (= var5191324 temp568_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp568_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp568_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_241 #x0000000000000000))
(assert (= var81342 temp568_241))
(assert (= temp568_242 #x0000000000000002))
(assert (= var5977731 temp568_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp568_243 #x0000000000000001))
(assert (= var79986 temp568_243))
(assert (= temp568_244 #x0000000000000000))
(assert (= var8008468 temp568_244))
(assert (= var8008435 var8008468))
(assert (= var7876999 var8008435))
(assert (= var7876995 var7876999))
(assert (= var81597 var7876995))
(assert (= temp568_245 #x0000000000000000))
(assert (= var81597 temp568_245))
(model-add temp568_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp568_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp568_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






