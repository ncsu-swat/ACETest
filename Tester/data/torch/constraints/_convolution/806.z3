(declare-fun temp1072_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1072_2 () (_ BitVec 64))
(declare-fun temp1072_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1072_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1072_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1072_6 () (_ BitVec 64))
(declare-fun temp1072_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1072_8 () (_ BitVec 64))
(declare-fun temp1072_9 () (_ BitVec 64))
(declare-fun temp1072_10 () (_ BitVec 64))
(declare-fun temp1072_11 () (_ BitVec 64))
(declare-fun temp1072_12 () (_ BitVec 64))
(declare-fun temp1072_13 () (_ BitVec 64))
(declare-fun temp1072_14 () (_ BitVec 64))
(declare-fun temp1072_15 () (_ BitVec 64))
(declare-fun temp1072_16 () (_ BitVec 64))
(declare-fun temp1072_17 () (_ BitVec 64))
(declare-fun temp1072_18 () (_ BitVec 64))
(declare-fun temp1072_19 () (_ BitVec 64))
(declare-fun temp1072_20 () (_ BitVec 64))
(declare-fun temp1072_21 () (_ BitVec 64))
(declare-fun temp1072_22 () (_ BitVec 64))
(declare-fun temp1072_23 () (_ BitVec 64))
(declare-fun temp1072_24 () (_ BitVec 64))
(declare-fun temp1072_25 () (_ BitVec 64))
(declare-fun temp1072_26 () (_ BitVec 64))
(declare-fun temp1072_27 () (_ BitVec 64))
(declare-fun temp1072_28 () (_ BitVec 64))
(declare-fun temp1072_29 () (_ BitVec 64))
(declare-fun temp1072_30 () (_ BitVec 64))
(declare-fun temp1072_31 () (_ BitVec 64))
(declare-fun temp1072_32 () (_ BitVec 64))
(declare-fun temp1072_33 () (_ BitVec 64))
(declare-fun temp1072_34 () (_ BitVec 64))
(declare-fun temp1072_35 () (_ BitVec 64))
(declare-fun temp1072_36 () (_ BitVec 64))
(declare-fun temp1072_37 () (_ BitVec 64))
(declare-fun temp1072_38 () (_ BitVec 64))
(declare-fun temp1072_39 () (_ BitVec 64))
(declare-fun temp1072_40 () (_ BitVec 64))
(declare-fun temp1072_41 () (_ BitVec 64))
(declare-fun temp1072_42 () (_ BitVec 64))
(declare-fun temp1072_43 () (_ BitVec 64))
(declare-fun temp1072_44 () (_ BitVec 64))
(declare-fun temp1072_45 () (_ BitVec 64))
(declare-fun temp1072_46 () (_ BitVec 64))
(declare-fun temp1072_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1072_48 () (_ BitVec 64))
(declare-fun temp1072_49 () (_ BitVec 64))
(declare-fun temp1072_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1072_51 () (_ BitVec 64))
(declare-fun temp1072_52 () (_ BitVec 64))
(declare-fun temp1072_53 () (_ BitVec 64))
(declare-fun temp1072_54 () (_ BitVec 64))
(declare-fun temp1072_55 () (_ BitVec 64))
(declare-fun temp1072_56 () (_ BitVec 64))
(declare-fun temp1072_57 () (_ BitVec 64))
(declare-fun temp1072_58 () (_ BitVec 64))
(declare-fun temp1072_59 () (_ BitVec 64))
(declare-fun temp1072_60 () (_ BitVec 64))
(declare-fun temp1072_61 () (_ BitVec 64))
(declare-fun temp1072_62 () (_ BitVec 64))
(declare-fun temp1072_63 () (_ BitVec 64))
(declare-fun temp1072_64 () (_ BitVec 64))
(declare-fun temp1072_65 () (_ BitVec 64))
(declare-fun temp1072_66 () (_ BitVec 64))
(declare-fun temp1072_67 () (_ BitVec 64))
(declare-fun temp1072_68 () (_ BitVec 64))
(declare-fun temp1072_69 () (_ BitVec 64))
(declare-fun temp1072_70 () (_ BitVec 64))
(declare-fun temp1072_71 () (_ BitVec 64))
(declare-fun temp1072_72 () (_ BitVec 64))
(declare-fun temp1072_73 () (_ BitVec 64))
(declare-fun temp1072_74 () (_ BitVec 64))
(declare-fun temp1072_75 () (_ BitVec 64))
(declare-fun temp1072_76 () (_ BitVec 64))
(declare-fun temp1072_77 () (_ BitVec 64))
(declare-fun temp1072_78 () (_ BitVec 64))
(declare-fun temp1072_79 () (_ BitVec 64))
(declare-fun temp1072_80 () (_ BitVec 64))
(declare-fun temp1072_81 () (_ BitVec 64))
(declare-fun temp1072_82 () (_ BitVec 64))
(declare-fun temp1072_83 () (_ BitVec 64))
(declare-fun temp1072_84 () (_ BitVec 64))
(declare-fun temp1072_85 () (_ BitVec 64))
(declare-fun temp1072_86 () (_ BitVec 64))
(declare-fun temp1072_87 () (_ BitVec 64))
(declare-fun temp1072_88 () (_ BitVec 64))
(declare-fun temp1072_89 () (_ BitVec 64))
(declare-fun temp1072_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1072_91 () (_ BitVec 64))
(declare-fun temp1072_92 () (_ BitVec 64))
(declare-fun temp1072_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1072_94 () (_ BitVec 64))
(declare-fun temp1072_95 () (_ BitVec 64))
(declare-fun temp1072_96 () (_ BitVec 64))
(declare-fun temp1072_97 () (_ BitVec 64))
(declare-fun temp1072_98 () (_ BitVec 64))
(declare-fun temp1072_99 () (_ BitVec 64))
(declare-fun temp1072_100 () (_ BitVec 64))
(declare-fun temp1072_101 () (_ BitVec 64))
(declare-fun temp1072_102 () (_ BitVec 64))
(declare-fun temp1072_103 () (_ BitVec 64))
(declare-fun temp1072_104 () (_ BitVec 64))
(declare-fun temp1072_105 () (_ BitVec 64))
(declare-fun temp1072_106 () (_ BitVec 64))
(declare-fun temp1072_107 () (_ BitVec 64))
(declare-fun temp1072_108 () (_ BitVec 64))
(declare-fun temp1072_109 () (_ BitVec 64))
(declare-fun temp1072_110 () (_ BitVec 64))
(declare-fun temp1072_111 () (_ BitVec 64))
(declare-fun temp1072_112 () (_ BitVec 64))
(declare-fun temp1072_113 () (_ BitVec 64))
(declare-fun temp1072_114 () (_ BitVec 64))
(declare-fun temp1072_115 () (_ BitVec 64))
(declare-fun temp1072_116 () (_ BitVec 64))
(declare-fun temp1072_117 () (_ BitVec 64))
(declare-fun temp1072_118 () (_ BitVec 64))
(declare-fun temp1072_119 () (_ BitVec 64))
(declare-fun temp1072_120 () (_ BitVec 64))
(declare-fun temp1072_121 () (_ BitVec 64))
(declare-fun temp1072_122 () (_ BitVec 64))
(declare-fun temp1072_123 () (_ BitVec 64))
(declare-fun temp1072_124 () (_ BitVec 64))
(declare-fun temp1072_125 () (_ BitVec 64))
(declare-fun temp1072_126 () (_ BitVec 64))
(declare-fun temp1072_127 () (_ BitVec 64))
(declare-fun temp1072_128 () (_ BitVec 64))
(declare-fun temp1072_129 () (_ BitVec 64))
(declare-fun temp1072_130 () (_ BitVec 64))
(declare-fun temp1072_131 () (_ BitVec 64))
(declare-fun temp1072_132 () (_ BitVec 64))
(declare-fun temp1072_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1072_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1072_135 () (_ BitVec 64))
(declare-fun temp1072_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1072_137 () (_ BitVec 64))
(declare-fun temp1072_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1072_139 () (_ BitVec 64))
(declare-fun temp1072_140 () (_ BitVec 64))
(declare-fun temp1072_141 () (_ BitVec 64))
(declare-fun temp1072_142 () (_ BitVec 64))
(declare-fun temp1072_143 () (_ BitVec 64))
(declare-fun temp1072_144 () (_ BitVec 64))
(declare-fun temp1072_145 () (_ BitVec 64))
(declare-fun temp1072_146 () (_ BitVec 64))
(declare-fun temp1072_147 () (_ BitVec 64))
(declare-fun temp1072_148 () (_ BitVec 64))
(declare-fun temp1072_149 () (_ BitVec 64))
(declare-fun temp1072_150 () (_ BitVec 64))
(declare-fun temp1072_151 () (_ BitVec 64))
(declare-fun temp1072_152 () (_ BitVec 64))
(declare-fun temp1072_153 () (_ BitVec 64))
(declare-fun temp1072_154 () (_ BitVec 64))
(declare-fun temp1072_156 () (_ BitVec 64))
(declare-fun temp1072_157 () (_ BitVec 64))
(declare-fun temp1072_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1072_158 () (_ BitVec 64))
(declare-fun temp1072_159 () (_ BitVec 64))
(declare-fun temp1072_161 () (_ BitVec 64))
(declare-fun temp1072_162 () (_ BitVec 64))
(declare-fun temp1072_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1072_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1072_164 () (_ BitVec 64))
(declare-fun temp1072_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1072_166 () (_ BitVec 64))
(declare-fun temp1072_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1072_168 () (_ BitVec 64))
(declare-fun temp1072_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1072_170 () (_ BitVec 64))
(declare-fun temp1072_171 () (_ BitVec 64))
(declare-fun temp1072_172 () (_ BitVec 64))
(declare-fun temp1072_173 () (_ BitVec 64))
(declare-fun temp1072_174 () (_ BitVec 64))
(declare-fun temp1072_175 () (_ BitVec 64))
(declare-fun temp1072_176 () (_ BitVec 64))
(declare-fun temp1072_177 () (_ BitVec 64))
(declare-fun temp1072_178 () (_ BitVec 64))
(declare-fun temp1072_179 () (_ BitVec 64))
(declare-fun temp1072_180 () (_ BitVec 64))
(declare-fun temp1072_181 () (_ BitVec 64))
(declare-fun temp1072_182 () (_ BitVec 64))
(declare-fun temp1072_183 () (_ BitVec 64))
(declare-fun temp1072_184 () (_ BitVec 64))
(declare-fun temp1072_185 () (_ BitVec 64))
(declare-fun temp1072_186 () (_ BitVec 64))
(declare-fun temp1072_187 () (_ BitVec 64))
(declare-fun temp1072_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1072_189 () (_ BitVec 64))
(declare-fun temp1072_191 () (_ BitVec 64))
(declare-fun temp1072_192 () (_ BitVec 64))
(declare-fun temp1072_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1072_193 () (_ BitVec 64))
(declare-fun temp1072_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1072_195 () (_ BitVec 64))
(declare-fun temp1072_196 () (_ BitVec 64))
(declare-fun temp1072_197 () (_ BitVec 64))
(declare-fun temp1072_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1072_199 () (_ BitVec 64))
(declare-fun temp1072_200 () (_ BitVec 64))
(declare-fun temp1072_201 () (_ BitVec 64))
(declare-fun temp1072_202 () (_ BitVec 64))
(declare-fun temp1072_203 () (_ BitVec 64))
(declare-fun temp1072_204 () (_ BitVec 64))
(declare-fun temp1072_205 () (_ BitVec 64))
(declare-fun temp1072_206 () (_ BitVec 64))
(declare-fun temp1072_207 () (_ BitVec 64))
(declare-fun temp1072_208 () (_ BitVec 64))
(declare-fun temp1072_209 () (_ BitVec 64))
(declare-fun temp1072_210 () (_ BitVec 64))
(declare-fun temp1072_211 () (_ BitVec 64))
(declare-fun temp1072_212 () (_ BitVec 64))
(declare-fun temp1072_213 () (_ BitVec 64))
(declare-fun temp1072_214 () (_ BitVec 64))
(declare-fun temp1072_215 () (_ BitVec 64))
(declare-fun temp1072_216 () (_ BitVec 64))
(declare-fun temp1072_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1072_218 () (_ BitVec 64))
(declare-fun temp1072_220 () (_ BitVec 64))
(declare-fun temp1072_221 () (_ BitVec 64))
(declare-fun temp1072_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1072_222 () (_ BitVec 64))
(declare-fun temp1072_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1072_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1072_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1072_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1072_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1072_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1072_229 () (_ BitVec 64))
(declare-fun temp1072_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1072_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1072_232 () (_ BitVec 64))
(declare-fun temp1072_233 () (_ BitVec 64))
(declare-fun temp1072_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1072_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1072_236 () (_ BitVec 64))
(declare-fun temp1072_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1072_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1072_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1072_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1072_241 () (_ BitVec 64))
(declare-fun temp1072_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp1072_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp1072_244 () (_ BitVec 64))
(assert (= temp1072_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1072_1)))
(assert (= temp1072_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1072_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_3 #x0000000000000000))
(assert (= var79869 temp1072_3))
(assert (= temp1072_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1072_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_5 #x0000000000000000))
(assert (= var79914 temp1072_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1072_6 #x0000000000000000))
(assert (= temp1072_7 temp1072_6))
(assert (= temp1072_8 (select ARGNAME_padding_NAMEEND_VAL temp1072_7)))
(assert (= temp1072_9 #x0000000000000001))
(assert (= temp1072_10 temp1072_9))
(assert (= temp1072_11 (select ARGNAME_padding_NAMEEND_VAL temp1072_10)))
(assert (= temp1072_12 #x0000000000000002))
(assert (= temp1072_13 temp1072_12))
(assert (= temp1072_14 (select ARGNAME_padding_NAMEEND_VAL temp1072_13)))
(assert (= temp1072_15 #x0000000000000003))
(assert (= temp1072_16 temp1072_15))
(assert (= temp1072_17 (select ARGNAME_padding_NAMEEND_VAL temp1072_16)))
(assert (= temp1072_18 #x0000000000000004))
(assert (= temp1072_19 temp1072_18))
(assert (= temp1072_20 (select ARGNAME_padding_NAMEEND_VAL temp1072_19)))
(assert (= temp1072_21 #x0000000000000005))
(assert (= temp1072_22 temp1072_21))
(assert (= temp1072_23 (select ARGNAME_padding_NAMEEND_VAL temp1072_22)))
(assert (= temp1072_24 #x0000000000000000))
(assert (= temp1072_25 #x0000000000000000))
(assert (= temp1072_26 temp1072_25))
(assert (= temp1072_27 (select ARGNAME_padding_NAMEEND_VAL temp1072_26)))
(assert (= temp1072_28 #x0000000000000000))
(assert (= temp1072_29 #x0000000000000001))
(assert (= temp1072_30 temp1072_29))
(assert (= temp1072_31 (select ARGNAME_padding_NAMEEND_VAL temp1072_30)))
(assert (= temp1072_32 #x0000000000000000))
(assert (= temp1072_33 #x0000000000000002))
(assert (= temp1072_34 temp1072_33))
(assert (= temp1072_35 (select ARGNAME_padding_NAMEEND_VAL temp1072_34)))
(assert (= temp1072_36 #x0000000000000000))
(assert (= temp1072_37 #x0000000000000003))
(assert (= temp1072_38 temp1072_37))
(assert (= temp1072_39 (select ARGNAME_padding_NAMEEND_VAL temp1072_38)))
(assert (= temp1072_40 #x0000000000000000))
(assert (= temp1072_41 #x0000000000000004))
(assert (= temp1072_42 temp1072_41))
(assert (= temp1072_43 (select ARGNAME_padding_NAMEEND_VAL temp1072_42)))
(assert (= temp1072_44 #x0000000000000000))
(assert (= temp1072_45 #x0000000000000005))
(assert (= temp1072_46 temp1072_45))
(assert (= temp1072_47 (select ARGNAME_padding_NAMEEND_VAL temp1072_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1072_27 temp1072_24)
             (bvslt temp1072_31 temp1072_28)
             (bvslt temp1072_35 temp1072_32)
             (bvslt temp1072_39 temp1072_36)
             (bvslt temp1072_43 temp1072_40)
             (bvslt temp1072_47 temp1072_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_48 #x0000000000000000))
(assert (= var1322786 temp1072_48))
(assert (= temp1072_49 #x0000000000000000))
(assert (= temp1072_50 temp1072_49))
(assert (= temp1072_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_50)))
(assert (= temp1072_52 #x0000000000000001))
(assert (= temp1072_53 temp1072_52))
(assert (= temp1072_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_53)))
(assert (= temp1072_55 #x0000000000000002))
(assert (= temp1072_56 temp1072_55))
(assert (= temp1072_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_56)))
(assert (= temp1072_58 #x0000000000000003))
(assert (= temp1072_59 temp1072_58))
(assert (= temp1072_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_59)))
(assert (= temp1072_61 #x0000000000000004))
(assert (= temp1072_62 temp1072_61))
(assert (= temp1072_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_62)))
(assert (= temp1072_64 #x0000000000000005))
(assert (= temp1072_65 temp1072_64))
(assert (= temp1072_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_65)))
(assert (= temp1072_67 #x0000000000000000))
(assert (= temp1072_68 #x0000000000000000))
(assert (= temp1072_69 temp1072_68))
(assert (= temp1072_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_69)))
(assert (= temp1072_71 #x0000000000000000))
(assert (= temp1072_72 #x0000000000000001))
(assert (= temp1072_73 temp1072_72))
(assert (= temp1072_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_73)))
(assert (= temp1072_75 #x0000000000000000))
(assert (= temp1072_76 #x0000000000000002))
(assert (= temp1072_77 temp1072_76))
(assert (= temp1072_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_77)))
(assert (= temp1072_79 #x0000000000000000))
(assert (= temp1072_80 #x0000000000000003))
(assert (= temp1072_81 temp1072_80))
(assert (= temp1072_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_81)))
(assert (= temp1072_83 #x0000000000000000))
(assert (= temp1072_84 #x0000000000000004))
(assert (= temp1072_85 temp1072_84))
(assert (= temp1072_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_85)))
(assert (= temp1072_87 #x0000000000000000))
(assert (= temp1072_88 #x0000000000000005))
(assert (= temp1072_89 temp1072_88))
(assert (= temp1072_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1072_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1072_70 temp1072_67)
             (bvslt temp1072_74 temp1072_71)
             (bvslt temp1072_78 temp1072_75)
             (bvslt temp1072_82 temp1072_79)
             (bvslt temp1072_86 temp1072_83)
             (bvslt temp1072_90 temp1072_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_91 #x0000000000000000))
(assert (= var1322797 temp1072_91))
(assert (= temp1072_92 #x0000000000000000))
(assert (= temp1072_93 temp1072_92))
(assert (= temp1072_94 (select ARGNAME_stride_NAMEEND_VAL temp1072_93)))
(assert (= temp1072_95 #x0000000000000001))
(assert (= temp1072_96 temp1072_95))
(assert (= temp1072_97 (select ARGNAME_stride_NAMEEND_VAL temp1072_96)))
(assert (= temp1072_98 #x0000000000000002))
(assert (= temp1072_99 temp1072_98))
(assert (= temp1072_100 (select ARGNAME_stride_NAMEEND_VAL temp1072_99)))
(assert (= temp1072_101 #x0000000000000003))
(assert (= temp1072_102 temp1072_101))
(assert (= temp1072_103 (select ARGNAME_stride_NAMEEND_VAL temp1072_102)))
(assert (= temp1072_104 #x0000000000000004))
(assert (= temp1072_105 temp1072_104))
(assert (= temp1072_106 (select ARGNAME_stride_NAMEEND_VAL temp1072_105)))
(assert (= temp1072_107 #x0000000000000005))
(assert (= temp1072_108 temp1072_107))
(assert (= temp1072_109 (select ARGNAME_stride_NAMEEND_VAL temp1072_108)))
(assert (= temp1072_110 #x0000000000000000))
(assert (= temp1072_111 #x0000000000000000))
(assert (= temp1072_112 temp1072_111))
(assert (= temp1072_113 (select ARGNAME_stride_NAMEEND_VAL temp1072_112)))
(assert (= temp1072_114 #x0000000000000000))
(assert (= temp1072_115 #x0000000000000001))
(assert (= temp1072_116 temp1072_115))
(assert (= temp1072_117 (select ARGNAME_stride_NAMEEND_VAL temp1072_116)))
(assert (= temp1072_118 #x0000000000000000))
(assert (= temp1072_119 #x0000000000000002))
(assert (= temp1072_120 temp1072_119))
(assert (= temp1072_121 (select ARGNAME_stride_NAMEEND_VAL temp1072_120)))
(assert (= temp1072_122 #x0000000000000000))
(assert (= temp1072_123 #x0000000000000003))
(assert (= temp1072_124 temp1072_123))
(assert (= temp1072_125 (select ARGNAME_stride_NAMEEND_VAL temp1072_124)))
(assert (= temp1072_126 #x0000000000000000))
(assert (= temp1072_127 #x0000000000000004))
(assert (= temp1072_128 temp1072_127))
(assert (= temp1072_129 (select ARGNAME_stride_NAMEEND_VAL temp1072_128)))
(assert (= temp1072_130 #x0000000000000000))
(assert (= temp1072_131 #x0000000000000005))
(assert (= temp1072_132 temp1072_131))
(assert (= temp1072_133 (select ARGNAME_stride_NAMEEND_VAL temp1072_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1072_113 temp1072_110)
             (bvsle temp1072_117 temp1072_114)
             (bvsle temp1072_121 temp1072_118)
             (bvsle temp1072_125 temp1072_122)
             (bvsle temp1072_129 temp1072_126)
             (bvsle temp1072_133 temp1072_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_134 #x0000000000000000))
(assert (= var1322807 temp1072_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_135 #x0000000000000001))
(assert (= var1322819 temp1072_135))
(assert (= temp1072_136 #x0000000000000000))
(assert (= var1310898 temp1072_136))
(assert (= temp1072_137 #x0000000000000000))
(assert (= temp1072_138 temp1072_137))
(assert (= temp1072_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_138)))
(assert (= temp1072_140 #x0000000000000001))
(assert (= temp1072_141 temp1072_140))
(assert (= temp1072_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_141)))
(assert (= temp1072_143 #x0000000000000002))
(assert (= temp1072_144 temp1072_143))
(assert (= temp1072_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_144)))
(assert (= temp1072_146 #x0000000000000003))
(assert (= temp1072_147 temp1072_146))
(assert (= temp1072_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_147)))
(assert (= temp1072_149 #x0000000000000004))
(assert (= temp1072_150 temp1072_149))
(assert (= temp1072_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_150)))
(assert (= temp1072_152 #x0000000000000005))
(assert (= temp1072_153 temp1072_152))
(assert (= temp1072_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_153)))
(assert (= temp1072_156 var1310898))
(assert (= temp1072_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_156)))
(assert (= temp1072_155 temp1072_157))
(assert (= var1322852
   (ite (bvslt temp1072_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_158 #x0000000000000000))
(assert (= var1322852 temp1072_158))
(assert (= temp1072_159 #x0000000000000000))
(assert (= var1310898 temp1072_159))
(assert (= temp1072_161 var1310898))
(assert (= temp1072_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_161)))
(assert (= temp1072_160 temp1072_162))
(assert (= var1322874 (bvsmod temp1072_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1072_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1072_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1072_164 #x0000000000000001))
(assert (= var1322875 temp1072_164))
(assert (= temp1072_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1072_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_166 #x0000000000000001))
(assert (= var1322895 temp1072_166))
(assert (= temp1072_167 #x0000000000000001))
(assert (= var1311786 temp1072_167))
(assert (= temp1072_168 #x0000000000000000))
(assert (= temp1072_169 temp1072_168))
(assert (= temp1072_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1072_169)))
(assert (= temp1072_171 #x0000000000000001))
(assert (= temp1072_172 temp1072_171))
(assert (= temp1072_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1072_172)))
(assert (= temp1072_174 #x0000000000000002))
(assert (= temp1072_175 temp1072_174))
(assert (= temp1072_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1072_175)))
(assert (= temp1072_177 #x0000000000000003))
(assert (= temp1072_178 temp1072_177))
(assert (= temp1072_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1072_178)))
(assert (= temp1072_180 #x0000000000000004))
(assert (= temp1072_181 temp1072_180))
(assert (= temp1072_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1072_181)))
(assert (= temp1072_183 #x0000000000000005))
(assert (= temp1072_184 temp1072_183))
(assert (= temp1072_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1072_184)))
(assert (= temp1072_186 #x0000000000000000))
(assert (= temp1072_187
   (ite (bvslt var1311786 temp1072_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1072_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1072_187)))
(assert (= var1322903 temp1072_188))
(assert (bvslt (ite (bvslt var1311786 temp1072_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1072_189 #x0000000000000001))
(assert (= var1311786 temp1072_189))
(assert (= temp1072_191 var1311786))
(assert (= temp1072_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_191)))
(assert (= temp1072_190 temp1072_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1072_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1072_193 #x0000000000000001))
(assert (= var1322908 temp1072_193))
(assert (= temp1072_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1072_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_195 #x0000000000000001))
(assert (= var1322975 temp1072_195))
(assert (= temp1072_196 #x0000000000000000))
(assert (= var1310898 temp1072_196))
(assert (= temp1072_197 #x0000000000000000))
(assert (= temp1072_198 temp1072_197))
(assert (= temp1072_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1072_198)))
(assert (= temp1072_200 #x0000000000000001))
(assert (= temp1072_201 temp1072_200))
(assert (= temp1072_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1072_201)))
(assert (= temp1072_203 #x0000000000000002))
(assert (= temp1072_204 temp1072_203))
(assert (= temp1072_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1072_204)))
(assert (= temp1072_206 #x0000000000000003))
(assert (= temp1072_207 temp1072_206))
(assert (= temp1072_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1072_207)))
(assert (= temp1072_209 #x0000000000000004))
(assert (= temp1072_210 temp1072_209))
(assert (= temp1072_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1072_210)))
(assert (= temp1072_212 #x0000000000000005))
(assert (= temp1072_213 temp1072_212))
(assert (= temp1072_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1072_213)))
(assert (= temp1072_215 #x0000000000000000))
(assert (= temp1072_216
   (ite (bvslt var1310898 temp1072_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1072_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1072_216)))
(assert (= var1322977 temp1072_217))
(assert (bvslt (ite (bvslt var1310898 temp1072_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1072_218 #x0000000000000000))
(assert (= var1310898 temp1072_218))
(assert (= temp1072_220 var1310898))
(assert (= temp1072_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1072_220)))
(assert (= temp1072_219 temp1072_221))
(assert (= var1322980
   (ite (= var1322977 temp1072_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1072_222 #x0000000000000001))
(assert (= var1322980 temp1072_222))
(assert (= temp1072_223 #x0000000000000002))
(assert (= var1848169 temp1072_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1072_225 #x0000000000000001))
(assert (= var1323065 temp1072_225))
(assert (= temp1072_226 #x0000000000000001))
(assert (= var3486735 temp1072_226))
(assert (= temp1072_227 #x0000000000000001))
(assert (= var3814415 temp1072_227))
(assert (= temp1072_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1072_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_229 #x0000000000000001))
(assert (= var79986 temp1072_229))
(assert (= temp1072_230 #x0000000000000001))
(assert (= var80116 temp1072_230))
(assert (= var4796905 var80116))
(assert (= temp1072_231 #x0000000000000000))
(assert (= var4784306 temp1072_231))
(assert (= temp1072_232 #x0000000000000000))
(assert (= temp1072_233
   (ite (bvslt var4784306 temp1072_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1072_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1072_233)))
(assert (= var4796924 temp1072_234))
(assert (bvslt (ite (bvslt var4784306 temp1072_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1072_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1072_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1072_236 #x0000000000000001))
(assert (= var4796925 temp1072_236))
(assert (= temp1072_237 #x0000000000000000))
(assert (= var4996927 temp1072_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1072_238 #x0000000000000002))
(assert (= var5125763 temp1072_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_239 #x0000000000000000))
(assert (= var5191324 temp1072_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1072_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1072_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_241 #x0000000000000001))
(assert (= var81342 temp1072_241))
(assert (= temp1072_242 #x0000000000000002))
(assert (= var5977731 temp1072_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1072_243 #x0000000000000000))
(assert (= var6043292 temp1072_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp1072_244 #x0000000000000001))
(assert (= var79986 temp1072_244))
(model-add temp1072_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1072_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1072_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






