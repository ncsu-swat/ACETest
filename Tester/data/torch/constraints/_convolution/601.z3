(declare-fun temp798_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp798_2 () (_ BitVec 64))
(declare-fun temp798_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp798_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp798_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp798_6 () (_ BitVec 64))
(declare-fun temp798_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp798_8 () (_ BitVec 64))
(declare-fun temp798_9 () (_ BitVec 64))
(declare-fun temp798_10 () (_ BitVec 64))
(declare-fun temp798_11 () (_ BitVec 64))
(declare-fun temp798_12 () (_ BitVec 64))
(declare-fun temp798_13 () (_ BitVec 64))
(declare-fun temp798_14 () (_ BitVec 64))
(declare-fun temp798_15 () (_ BitVec 64))
(declare-fun temp798_16 () (_ BitVec 64))
(declare-fun temp798_17 () (_ BitVec 64))
(declare-fun temp798_18 () (_ BitVec 64))
(declare-fun temp798_19 () (_ BitVec 64))
(declare-fun temp798_20 () (_ BitVec 64))
(declare-fun temp798_21 () (_ BitVec 64))
(declare-fun temp798_22 () (_ BitVec 64))
(declare-fun temp798_23 () (_ BitVec 64))
(declare-fun temp798_24 () (_ BitVec 64))
(declare-fun temp798_25 () (_ BitVec 64))
(declare-fun temp798_26 () (_ BitVec 64))
(declare-fun temp798_27 () (_ BitVec 64))
(declare-fun temp798_28 () (_ BitVec 64))
(declare-fun temp798_29 () (_ BitVec 64))
(declare-fun temp798_30 () (_ BitVec 64))
(declare-fun temp798_31 () (_ BitVec 64))
(declare-fun temp798_32 () (_ BitVec 64))
(declare-fun temp798_33 () (_ BitVec 64))
(declare-fun temp798_34 () (_ BitVec 64))
(declare-fun temp798_35 () (_ BitVec 64))
(declare-fun temp798_36 () (_ BitVec 64))
(declare-fun temp798_37 () (_ BitVec 64))
(declare-fun temp798_38 () (_ BitVec 64))
(declare-fun temp798_39 () (_ BitVec 64))
(declare-fun temp798_40 () (_ BitVec 64))
(declare-fun temp798_41 () (_ BitVec 64))
(declare-fun temp798_42 () (_ BitVec 64))
(declare-fun temp798_43 () (_ BitVec 64))
(declare-fun temp798_44 () (_ BitVec 64))
(declare-fun temp798_45 () (_ BitVec 64))
(declare-fun temp798_46 () (_ BitVec 64))
(declare-fun temp798_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp798_48 () (_ BitVec 64))
(declare-fun temp798_49 () (_ BitVec 64))
(declare-fun temp798_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp798_51 () (_ BitVec 64))
(declare-fun temp798_52 () (_ BitVec 64))
(declare-fun temp798_53 () (_ BitVec 64))
(declare-fun temp798_54 () (_ BitVec 64))
(declare-fun temp798_55 () (_ BitVec 64))
(declare-fun temp798_56 () (_ BitVec 64))
(declare-fun temp798_57 () (_ BitVec 64))
(declare-fun temp798_58 () (_ BitVec 64))
(declare-fun temp798_59 () (_ BitVec 64))
(declare-fun temp798_60 () (_ BitVec 64))
(declare-fun temp798_61 () (_ BitVec 64))
(declare-fun temp798_62 () (_ BitVec 64))
(declare-fun temp798_63 () (_ BitVec 64))
(declare-fun temp798_64 () (_ BitVec 64))
(declare-fun temp798_65 () (_ BitVec 64))
(declare-fun temp798_66 () (_ BitVec 64))
(declare-fun temp798_67 () (_ BitVec 64))
(declare-fun temp798_68 () (_ BitVec 64))
(declare-fun temp798_69 () (_ BitVec 64))
(declare-fun temp798_70 () (_ BitVec 64))
(declare-fun temp798_71 () (_ BitVec 64))
(declare-fun temp798_72 () (_ BitVec 64))
(declare-fun temp798_73 () (_ BitVec 64))
(declare-fun temp798_74 () (_ BitVec 64))
(declare-fun temp798_75 () (_ BitVec 64))
(declare-fun temp798_76 () (_ BitVec 64))
(declare-fun temp798_77 () (_ BitVec 64))
(declare-fun temp798_78 () (_ BitVec 64))
(declare-fun temp798_79 () (_ BitVec 64))
(declare-fun temp798_80 () (_ BitVec 64))
(declare-fun temp798_81 () (_ BitVec 64))
(declare-fun temp798_82 () (_ BitVec 64))
(declare-fun temp798_83 () (_ BitVec 64))
(declare-fun temp798_84 () (_ BitVec 64))
(declare-fun temp798_85 () (_ BitVec 64))
(declare-fun temp798_86 () (_ BitVec 64))
(declare-fun temp798_87 () (_ BitVec 64))
(declare-fun temp798_88 () (_ BitVec 64))
(declare-fun temp798_89 () (_ BitVec 64))
(declare-fun temp798_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp798_91 () (_ BitVec 64))
(declare-fun temp798_92 () (_ BitVec 64))
(declare-fun temp798_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp798_94 () (_ BitVec 64))
(declare-fun temp798_95 () (_ BitVec 64))
(declare-fun temp798_96 () (_ BitVec 64))
(declare-fun temp798_97 () (_ BitVec 64))
(declare-fun temp798_98 () (_ BitVec 64))
(declare-fun temp798_99 () (_ BitVec 64))
(declare-fun temp798_100 () (_ BitVec 64))
(declare-fun temp798_101 () (_ BitVec 64))
(declare-fun temp798_102 () (_ BitVec 64))
(declare-fun temp798_103 () (_ BitVec 64))
(declare-fun temp798_104 () (_ BitVec 64))
(declare-fun temp798_105 () (_ BitVec 64))
(declare-fun temp798_106 () (_ BitVec 64))
(declare-fun temp798_107 () (_ BitVec 64))
(declare-fun temp798_108 () (_ BitVec 64))
(declare-fun temp798_109 () (_ BitVec 64))
(declare-fun temp798_110 () (_ BitVec 64))
(declare-fun temp798_111 () (_ BitVec 64))
(declare-fun temp798_112 () (_ BitVec 64))
(declare-fun temp798_113 () (_ BitVec 64))
(declare-fun temp798_114 () (_ BitVec 64))
(declare-fun temp798_115 () (_ BitVec 64))
(declare-fun temp798_116 () (_ BitVec 64))
(declare-fun temp798_117 () (_ BitVec 64))
(declare-fun temp798_118 () (_ BitVec 64))
(declare-fun temp798_119 () (_ BitVec 64))
(declare-fun temp798_120 () (_ BitVec 64))
(declare-fun temp798_121 () (_ BitVec 64))
(declare-fun temp798_122 () (_ BitVec 64))
(declare-fun temp798_123 () (_ BitVec 64))
(declare-fun temp798_124 () (_ BitVec 64))
(declare-fun temp798_125 () (_ BitVec 64))
(declare-fun temp798_126 () (_ BitVec 64))
(declare-fun temp798_127 () (_ BitVec 64))
(declare-fun temp798_128 () (_ BitVec 64))
(declare-fun temp798_129 () (_ BitVec 64))
(declare-fun temp798_130 () (_ BitVec 64))
(declare-fun temp798_131 () (_ BitVec 64))
(declare-fun temp798_132 () (_ BitVec 64))
(declare-fun temp798_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp798_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp798_135 () (_ BitVec 64))
(declare-fun temp798_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp798_137 () (_ BitVec 64))
(declare-fun temp798_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp798_139 () (_ BitVec 64))
(declare-fun temp798_140 () (_ BitVec 64))
(declare-fun temp798_141 () (_ BitVec 64))
(declare-fun temp798_142 () (_ BitVec 64))
(declare-fun temp798_143 () (_ BitVec 64))
(declare-fun temp798_144 () (_ BitVec 64))
(declare-fun temp798_145 () (_ BitVec 64))
(declare-fun temp798_146 () (_ BitVec 64))
(declare-fun temp798_147 () (_ BitVec 64))
(declare-fun temp798_148 () (_ BitVec 64))
(declare-fun temp798_149 () (_ BitVec 64))
(declare-fun temp798_150 () (_ BitVec 64))
(declare-fun temp798_151 () (_ BitVec 64))
(declare-fun temp798_152 () (_ BitVec 64))
(declare-fun temp798_153 () (_ BitVec 64))
(declare-fun temp798_154 () (_ BitVec 64))
(declare-fun temp798_156 () (_ BitVec 64))
(declare-fun temp798_157 () (_ BitVec 64))
(declare-fun temp798_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp798_158 () (_ BitVec 64))
(declare-fun temp798_159 () (_ BitVec 64))
(declare-fun temp798_161 () (_ BitVec 64))
(declare-fun temp798_162 () (_ BitVec 64))
(declare-fun temp798_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp798_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp798_164 () (_ BitVec 64))
(declare-fun temp798_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp798_166 () (_ BitVec 64))
(declare-fun temp798_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp798_168 () (_ BitVec 64))
(declare-fun temp798_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp798_170 () (_ BitVec 64))
(declare-fun temp798_171 () (_ BitVec 64))
(declare-fun temp798_172 () (_ BitVec 64))
(declare-fun temp798_173 () (_ BitVec 64))
(declare-fun temp798_174 () (_ BitVec 64))
(declare-fun temp798_175 () (_ BitVec 64))
(declare-fun temp798_176 () (_ BitVec 64))
(declare-fun temp798_177 () (_ BitVec 64))
(declare-fun temp798_178 () (_ BitVec 64))
(declare-fun temp798_179 () (_ BitVec 64))
(declare-fun temp798_180 () (_ BitVec 64))
(declare-fun temp798_181 () (_ BitVec 64))
(declare-fun temp798_182 () (_ BitVec 64))
(declare-fun temp798_183 () (_ BitVec 64))
(declare-fun temp798_184 () (_ BitVec 64))
(declare-fun temp798_185 () (_ BitVec 64))
(declare-fun temp798_186 () (_ BitVec 64))
(declare-fun temp798_187 () (_ BitVec 64))
(declare-fun temp798_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp798_189 () (_ BitVec 64))
(declare-fun temp798_191 () (_ BitVec 64))
(declare-fun temp798_192 () (_ BitVec 64))
(declare-fun temp798_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp798_193 () (_ BitVec 64))
(declare-fun temp798_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp798_195 () (_ BitVec 64))
(declare-fun temp798_196 () (_ BitVec 64))
(declare-fun temp798_197 () (_ BitVec 64))
(declare-fun temp798_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp798_199 () (_ BitVec 64))
(declare-fun temp798_200 () (_ BitVec 64))
(declare-fun temp798_201 () (_ BitVec 64))
(declare-fun temp798_202 () (_ BitVec 64))
(declare-fun temp798_203 () (_ BitVec 64))
(declare-fun temp798_204 () (_ BitVec 64))
(declare-fun temp798_205 () (_ BitVec 64))
(declare-fun temp798_206 () (_ BitVec 64))
(declare-fun temp798_207 () (_ BitVec 64))
(declare-fun temp798_208 () (_ BitVec 64))
(declare-fun temp798_209 () (_ BitVec 64))
(declare-fun temp798_210 () (_ BitVec 64))
(declare-fun temp798_211 () (_ BitVec 64))
(declare-fun temp798_212 () (_ BitVec 64))
(declare-fun temp798_213 () (_ BitVec 64))
(declare-fun temp798_214 () (_ BitVec 64))
(declare-fun temp798_215 () (_ BitVec 64))
(declare-fun temp798_216 () (_ BitVec 64))
(declare-fun temp798_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp798_218 () (_ BitVec 64))
(declare-fun temp798_220 () (_ BitVec 64))
(declare-fun temp798_221 () (_ BitVec 64))
(declare-fun temp798_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp798_222 () (_ BitVec 64))
(declare-fun temp798_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp798_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp798_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp798_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp798_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp798_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp798_229 () (_ BitVec 64))
(declare-fun temp798_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp798_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp798_232 () (_ BitVec 64))
(declare-fun temp798_233 () (_ BitVec 64))
(declare-fun temp798_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp798_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp798_236 () (_ BitVec 64))
(declare-fun temp798_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp798_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp798_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp798_241 () (_ BitVec 64))
(declare-fun temp798_240 () (_ BitVec 64))
(declare-fun temp798_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp798_243 () (_ BitVec 64))
(declare-fun temp798_244 () (_ BitVec 64))
(declare-fun temp798_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp798_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp798_247 () (_ BitVec 64))
(declare-fun temp798_248 () (_ BitVec 64))
(assert (= temp798_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp798_1)))
(assert (= temp798_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp798_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_3 #x0000000000000000))
(assert (= var79869 temp798_3))
(assert (= temp798_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp798_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_5 #x0000000000000000))
(assert (= var79914 temp798_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp798_6 #x0000000000000000))
(assert (= temp798_7 temp798_6))
(assert (= temp798_8 (select ARGNAME_padding_NAMEEND_VAL temp798_7)))
(assert (= temp798_9 #x0000000000000001))
(assert (= temp798_10 temp798_9))
(assert (= temp798_11 (select ARGNAME_padding_NAMEEND_VAL temp798_10)))
(assert (= temp798_12 #x0000000000000002))
(assert (= temp798_13 temp798_12))
(assert (= temp798_14 (select ARGNAME_padding_NAMEEND_VAL temp798_13)))
(assert (= temp798_15 #x0000000000000003))
(assert (= temp798_16 temp798_15))
(assert (= temp798_17 (select ARGNAME_padding_NAMEEND_VAL temp798_16)))
(assert (= temp798_18 #x0000000000000004))
(assert (= temp798_19 temp798_18))
(assert (= temp798_20 (select ARGNAME_padding_NAMEEND_VAL temp798_19)))
(assert (= temp798_21 #x0000000000000005))
(assert (= temp798_22 temp798_21))
(assert (= temp798_23 (select ARGNAME_padding_NAMEEND_VAL temp798_22)))
(assert (= temp798_24 #x0000000000000000))
(assert (= temp798_25 #x0000000000000000))
(assert (= temp798_26 temp798_25))
(assert (= temp798_27 (select ARGNAME_padding_NAMEEND_VAL temp798_26)))
(assert (= temp798_28 #x0000000000000000))
(assert (= temp798_29 #x0000000000000001))
(assert (= temp798_30 temp798_29))
(assert (= temp798_31 (select ARGNAME_padding_NAMEEND_VAL temp798_30)))
(assert (= temp798_32 #x0000000000000000))
(assert (= temp798_33 #x0000000000000002))
(assert (= temp798_34 temp798_33))
(assert (= temp798_35 (select ARGNAME_padding_NAMEEND_VAL temp798_34)))
(assert (= temp798_36 #x0000000000000000))
(assert (= temp798_37 #x0000000000000003))
(assert (= temp798_38 temp798_37))
(assert (= temp798_39 (select ARGNAME_padding_NAMEEND_VAL temp798_38)))
(assert (= temp798_40 #x0000000000000000))
(assert (= temp798_41 #x0000000000000004))
(assert (= temp798_42 temp798_41))
(assert (= temp798_43 (select ARGNAME_padding_NAMEEND_VAL temp798_42)))
(assert (= temp798_44 #x0000000000000000))
(assert (= temp798_45 #x0000000000000005))
(assert (= temp798_46 temp798_45))
(assert (= temp798_47 (select ARGNAME_padding_NAMEEND_VAL temp798_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp798_27 temp798_24)
             (bvslt temp798_31 temp798_28)
             (bvslt temp798_35 temp798_32)
             (bvslt temp798_39 temp798_36)
             (bvslt temp798_43 temp798_40)
             (bvslt temp798_47 temp798_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_48 #x0000000000000000))
(assert (= var1322786 temp798_48))
(assert (= temp798_49 #x0000000000000000))
(assert (= temp798_50 temp798_49))
(assert (= temp798_51 (select ARGNAME_output_padding_NAMEEND_VAL temp798_50)))
(assert (= temp798_52 #x0000000000000001))
(assert (= temp798_53 temp798_52))
(assert (= temp798_54 (select ARGNAME_output_padding_NAMEEND_VAL temp798_53)))
(assert (= temp798_55 #x0000000000000002))
(assert (= temp798_56 temp798_55))
(assert (= temp798_57 (select ARGNAME_output_padding_NAMEEND_VAL temp798_56)))
(assert (= temp798_58 #x0000000000000003))
(assert (= temp798_59 temp798_58))
(assert (= temp798_60 (select ARGNAME_output_padding_NAMEEND_VAL temp798_59)))
(assert (= temp798_61 #x0000000000000004))
(assert (= temp798_62 temp798_61))
(assert (= temp798_63 (select ARGNAME_output_padding_NAMEEND_VAL temp798_62)))
(assert (= temp798_64 #x0000000000000005))
(assert (= temp798_65 temp798_64))
(assert (= temp798_66 (select ARGNAME_output_padding_NAMEEND_VAL temp798_65)))
(assert (= temp798_67 #x0000000000000000))
(assert (= temp798_68 #x0000000000000000))
(assert (= temp798_69 temp798_68))
(assert (= temp798_70 (select ARGNAME_output_padding_NAMEEND_VAL temp798_69)))
(assert (= temp798_71 #x0000000000000000))
(assert (= temp798_72 #x0000000000000001))
(assert (= temp798_73 temp798_72))
(assert (= temp798_74 (select ARGNAME_output_padding_NAMEEND_VAL temp798_73)))
(assert (= temp798_75 #x0000000000000000))
(assert (= temp798_76 #x0000000000000002))
(assert (= temp798_77 temp798_76))
(assert (= temp798_78 (select ARGNAME_output_padding_NAMEEND_VAL temp798_77)))
(assert (= temp798_79 #x0000000000000000))
(assert (= temp798_80 #x0000000000000003))
(assert (= temp798_81 temp798_80))
(assert (= temp798_82 (select ARGNAME_output_padding_NAMEEND_VAL temp798_81)))
(assert (= temp798_83 #x0000000000000000))
(assert (= temp798_84 #x0000000000000004))
(assert (= temp798_85 temp798_84))
(assert (= temp798_86 (select ARGNAME_output_padding_NAMEEND_VAL temp798_85)))
(assert (= temp798_87 #x0000000000000000))
(assert (= temp798_88 #x0000000000000005))
(assert (= temp798_89 temp798_88))
(assert (= temp798_90 (select ARGNAME_output_padding_NAMEEND_VAL temp798_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp798_70 temp798_67)
             (bvslt temp798_74 temp798_71)
             (bvslt temp798_78 temp798_75)
             (bvslt temp798_82 temp798_79)
             (bvslt temp798_86 temp798_83)
             (bvslt temp798_90 temp798_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_91 #x0000000000000000))
(assert (= var1322797 temp798_91))
(assert (= temp798_92 #x0000000000000000))
(assert (= temp798_93 temp798_92))
(assert (= temp798_94 (select ARGNAME_stride_NAMEEND_VAL temp798_93)))
(assert (= temp798_95 #x0000000000000001))
(assert (= temp798_96 temp798_95))
(assert (= temp798_97 (select ARGNAME_stride_NAMEEND_VAL temp798_96)))
(assert (= temp798_98 #x0000000000000002))
(assert (= temp798_99 temp798_98))
(assert (= temp798_100 (select ARGNAME_stride_NAMEEND_VAL temp798_99)))
(assert (= temp798_101 #x0000000000000003))
(assert (= temp798_102 temp798_101))
(assert (= temp798_103 (select ARGNAME_stride_NAMEEND_VAL temp798_102)))
(assert (= temp798_104 #x0000000000000004))
(assert (= temp798_105 temp798_104))
(assert (= temp798_106 (select ARGNAME_stride_NAMEEND_VAL temp798_105)))
(assert (= temp798_107 #x0000000000000005))
(assert (= temp798_108 temp798_107))
(assert (= temp798_109 (select ARGNAME_stride_NAMEEND_VAL temp798_108)))
(assert (= temp798_110 #x0000000000000000))
(assert (= temp798_111 #x0000000000000000))
(assert (= temp798_112 temp798_111))
(assert (= temp798_113 (select ARGNAME_stride_NAMEEND_VAL temp798_112)))
(assert (= temp798_114 #x0000000000000000))
(assert (= temp798_115 #x0000000000000001))
(assert (= temp798_116 temp798_115))
(assert (= temp798_117 (select ARGNAME_stride_NAMEEND_VAL temp798_116)))
(assert (= temp798_118 #x0000000000000000))
(assert (= temp798_119 #x0000000000000002))
(assert (= temp798_120 temp798_119))
(assert (= temp798_121 (select ARGNAME_stride_NAMEEND_VAL temp798_120)))
(assert (= temp798_122 #x0000000000000000))
(assert (= temp798_123 #x0000000000000003))
(assert (= temp798_124 temp798_123))
(assert (= temp798_125 (select ARGNAME_stride_NAMEEND_VAL temp798_124)))
(assert (= temp798_126 #x0000000000000000))
(assert (= temp798_127 #x0000000000000004))
(assert (= temp798_128 temp798_127))
(assert (= temp798_129 (select ARGNAME_stride_NAMEEND_VAL temp798_128)))
(assert (= temp798_130 #x0000000000000000))
(assert (= temp798_131 #x0000000000000005))
(assert (= temp798_132 temp798_131))
(assert (= temp798_133 (select ARGNAME_stride_NAMEEND_VAL temp798_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp798_113 temp798_110)
             (bvsle temp798_117 temp798_114)
             (bvsle temp798_121 temp798_118)
             (bvsle temp798_125 temp798_122)
             (bvsle temp798_129 temp798_126)
             (bvsle temp798_133 temp798_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_134 #x0000000000000000))
(assert (= var1322807 temp798_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_135 #x0000000000000001))
(assert (= var1322819 temp798_135))
(assert (= temp798_136 #x0000000000000000))
(assert (= var1310898 temp798_136))
(assert (= temp798_137 #x0000000000000000))
(assert (= temp798_138 temp798_137))
(assert (= temp798_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_138)))
(assert (= temp798_140 #x0000000000000001))
(assert (= temp798_141 temp798_140))
(assert (= temp798_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_141)))
(assert (= temp798_143 #x0000000000000002))
(assert (= temp798_144 temp798_143))
(assert (= temp798_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_144)))
(assert (= temp798_146 #x0000000000000003))
(assert (= temp798_147 temp798_146))
(assert (= temp798_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_147)))
(assert (= temp798_149 #x0000000000000004))
(assert (= temp798_150 temp798_149))
(assert (= temp798_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_150)))
(assert (= temp798_152 #x0000000000000005))
(assert (= temp798_153 temp798_152))
(assert (= temp798_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_153)))
(assert (= temp798_156 var1310898))
(assert (= temp798_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_156)))
(assert (= temp798_155 temp798_157))
(assert (= var1322852
   (ite (bvslt temp798_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_158 #x0000000000000000))
(assert (= var1322852 temp798_158))
(assert (= temp798_159 #x0000000000000000))
(assert (= var1310898 temp798_159))
(assert (= temp798_161 var1310898))
(assert (= temp798_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_161)))
(assert (= temp798_160 temp798_162))
(assert (= var1322874 (bvsmod temp798_160 ARGNAME_groups_NAMEEND)))
(assert (= temp798_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp798_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp798_164 #x0000000000000001))
(assert (= var1322875 temp798_164))
(assert (= temp798_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp798_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_166 #x0000000000000001))
(assert (= var1322895 temp798_166))
(assert (= temp798_167 #x0000000000000001))
(assert (= var1311786 temp798_167))
(assert (= temp798_168 #x0000000000000000))
(assert (= temp798_169 temp798_168))
(assert (= temp798_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp798_169)))
(assert (= temp798_171 #x0000000000000001))
(assert (= temp798_172 temp798_171))
(assert (= temp798_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp798_172)))
(assert (= temp798_174 #x0000000000000002))
(assert (= temp798_175 temp798_174))
(assert (= temp798_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp798_175)))
(assert (= temp798_177 #x0000000000000003))
(assert (= temp798_178 temp798_177))
(assert (= temp798_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp798_178)))
(assert (= temp798_180 #x0000000000000004))
(assert (= temp798_181 temp798_180))
(assert (= temp798_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp798_181)))
(assert (= temp798_183 #x0000000000000005))
(assert (= temp798_184 temp798_183))
(assert (= temp798_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp798_184)))
(assert (= temp798_186 #x0000000000000000))
(assert (= temp798_187
   (ite (bvslt var1311786 temp798_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp798_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp798_187)))
(assert (= var1322903 temp798_188))
(assert (bvslt (ite (bvslt var1311786 temp798_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp798_189 #x0000000000000001))
(assert (= var1311786 temp798_189))
(assert (= temp798_191 var1311786))
(assert (= temp798_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_191)))
(assert (= temp798_190 temp798_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp798_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp798_193 #x0000000000000001))
(assert (= var1322908 temp798_193))
(assert (= temp798_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp798_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_195 #x0000000000000001))
(assert (= var1322975 temp798_195))
(assert (= temp798_196 #x0000000000000000))
(assert (= var1310898 temp798_196))
(assert (= temp798_197 #x0000000000000000))
(assert (= temp798_198 temp798_197))
(assert (= temp798_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp798_198)))
(assert (= temp798_200 #x0000000000000001))
(assert (= temp798_201 temp798_200))
(assert (= temp798_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp798_201)))
(assert (= temp798_203 #x0000000000000002))
(assert (= temp798_204 temp798_203))
(assert (= temp798_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp798_204)))
(assert (= temp798_206 #x0000000000000003))
(assert (= temp798_207 temp798_206))
(assert (= temp798_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp798_207)))
(assert (= temp798_209 #x0000000000000004))
(assert (= temp798_210 temp798_209))
(assert (= temp798_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp798_210)))
(assert (= temp798_212 #x0000000000000005))
(assert (= temp798_213 temp798_212))
(assert (= temp798_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp798_213)))
(assert (= temp798_215 #x0000000000000000))
(assert (= temp798_216
   (ite (bvslt var1310898 temp798_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp798_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp798_216)))
(assert (= var1322977 temp798_217))
(assert (bvslt (ite (bvslt var1310898 temp798_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp798_218 #x0000000000000000))
(assert (= var1310898 temp798_218))
(assert (= temp798_220 var1310898))
(assert (= temp798_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_220)))
(assert (= temp798_219 temp798_221))
(assert (= var1322980
   (ite (= var1322977 temp798_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp798_222 #x0000000000000001))
(assert (= var1322980 temp798_222))
(assert (= temp798_223 #x0000000000000002))
(assert (= var1848169 temp798_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp798_225 #x0000000000000001))
(assert (= var1323065 temp798_225))
(assert (= temp798_226 #x0000000000000001))
(assert (= var3486735 temp798_226))
(assert (= temp798_227 #x0000000000000001))
(assert (= var3814415 temp798_227))
(assert (= temp798_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp798_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_229 #x0000000000000001))
(assert (= var79986 temp798_229))
(assert (= temp798_230 #x0000000000000001))
(assert (= var80116 temp798_230))
(assert (= var4796905 var80116))
(assert (= temp798_231 #x0000000000000000))
(assert (= var4784306 temp798_231))
(assert (= temp798_232 #x0000000000000000))
(assert (= temp798_233
   (ite (bvslt var4784306 temp798_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp798_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp798_233)))
(assert (= var4796924 temp798_234))
(assert (bvslt (ite (bvslt var4784306 temp798_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp798_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp798_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp798_236 #x0000000000000001))
(assert (= var4796925 temp798_236))
(assert (= temp798_237 #x0000000000000000))
(assert (= var4996927 temp798_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp798_238 #x0000000000000002))
(assert (= var5125763 temp798_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_239 #x0000000000000000))
(assert (= var5191324 temp798_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp798_241 #xffffffffffffffff))
(assert (= temp798_240 temp798_241))
(assert (= temp798_242 #x0000000000000001))
(assert (= var66602 temp798_242))
(assert (= temp798_243 #x0000000000000000))
(assert (= temp798_244
   (ite (bvslt var66602 temp798_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp798_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp798_244)))
(assert (= var80523 temp798_245))
(assert (bvslt (ite (bvslt var66602 temp798_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp798_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp798_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp798_247 #x0000000000000000))
(assert (= var80524 temp798_247))
(assert (= temp798_248 #x0000000000000001))
(assert (= var79986 temp798_248))
(model-add temp798_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp798_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp798_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






