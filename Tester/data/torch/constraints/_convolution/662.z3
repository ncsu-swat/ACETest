(declare-fun temp880_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp880_2 () (_ BitVec 64))
(declare-fun temp880_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp880_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp880_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp880_6 () (_ BitVec 64))
(declare-fun temp880_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_8 () (_ BitVec 64))
(declare-fun temp880_9 () (_ BitVec 64))
(declare-fun temp880_10 () (_ BitVec 64))
(declare-fun temp880_11 () (_ BitVec 64))
(declare-fun temp880_12 () (_ BitVec 64))
(declare-fun temp880_13 () (_ BitVec 64))
(declare-fun temp880_14 () (_ BitVec 64))
(declare-fun temp880_15 () (_ BitVec 64))
(declare-fun temp880_16 () (_ BitVec 64))
(declare-fun temp880_17 () (_ BitVec 64))
(declare-fun temp880_18 () (_ BitVec 64))
(declare-fun temp880_19 () (_ BitVec 64))
(declare-fun temp880_20 () (_ BitVec 64))
(declare-fun temp880_21 () (_ BitVec 64))
(declare-fun temp880_22 () (_ BitVec 64))
(declare-fun temp880_23 () (_ BitVec 64))
(declare-fun temp880_24 () (_ BitVec 64))
(declare-fun temp880_25 () (_ BitVec 64))
(declare-fun temp880_26 () (_ BitVec 64))
(declare-fun temp880_27 () (_ BitVec 64))
(declare-fun temp880_28 () (_ BitVec 64))
(declare-fun temp880_29 () (_ BitVec 64))
(declare-fun temp880_30 () (_ BitVec 64))
(declare-fun temp880_31 () (_ BitVec 64))
(declare-fun temp880_32 () (_ BitVec 64))
(declare-fun temp880_33 () (_ BitVec 64))
(declare-fun temp880_34 () (_ BitVec 64))
(declare-fun temp880_35 () (_ BitVec 64))
(declare-fun temp880_36 () (_ BitVec 64))
(declare-fun temp880_37 () (_ BitVec 64))
(declare-fun temp880_38 () (_ BitVec 64))
(declare-fun temp880_39 () (_ BitVec 64))
(declare-fun temp880_40 () (_ BitVec 64))
(declare-fun temp880_41 () (_ BitVec 64))
(declare-fun temp880_42 () (_ BitVec 64))
(declare-fun temp880_43 () (_ BitVec 64))
(declare-fun temp880_44 () (_ BitVec 64))
(declare-fun temp880_45 () (_ BitVec 64))
(declare-fun temp880_46 () (_ BitVec 64))
(declare-fun temp880_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp880_48 () (_ BitVec 64))
(declare-fun temp880_49 () (_ BitVec 64))
(declare-fun temp880_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_51 () (_ BitVec 64))
(declare-fun temp880_52 () (_ BitVec 64))
(declare-fun temp880_53 () (_ BitVec 64))
(declare-fun temp880_54 () (_ BitVec 64))
(declare-fun temp880_55 () (_ BitVec 64))
(declare-fun temp880_56 () (_ BitVec 64))
(declare-fun temp880_57 () (_ BitVec 64))
(declare-fun temp880_58 () (_ BitVec 64))
(declare-fun temp880_59 () (_ BitVec 64))
(declare-fun temp880_60 () (_ BitVec 64))
(declare-fun temp880_61 () (_ BitVec 64))
(declare-fun temp880_62 () (_ BitVec 64))
(declare-fun temp880_63 () (_ BitVec 64))
(declare-fun temp880_64 () (_ BitVec 64))
(declare-fun temp880_65 () (_ BitVec 64))
(declare-fun temp880_66 () (_ BitVec 64))
(declare-fun temp880_67 () (_ BitVec 64))
(declare-fun temp880_68 () (_ BitVec 64))
(declare-fun temp880_69 () (_ BitVec 64))
(declare-fun temp880_70 () (_ BitVec 64))
(declare-fun temp880_71 () (_ BitVec 64))
(declare-fun temp880_72 () (_ BitVec 64))
(declare-fun temp880_73 () (_ BitVec 64))
(declare-fun temp880_74 () (_ BitVec 64))
(declare-fun temp880_75 () (_ BitVec 64))
(declare-fun temp880_76 () (_ BitVec 64))
(declare-fun temp880_77 () (_ BitVec 64))
(declare-fun temp880_78 () (_ BitVec 64))
(declare-fun temp880_79 () (_ BitVec 64))
(declare-fun temp880_80 () (_ BitVec 64))
(declare-fun temp880_81 () (_ BitVec 64))
(declare-fun temp880_82 () (_ BitVec 64))
(declare-fun temp880_83 () (_ BitVec 64))
(declare-fun temp880_84 () (_ BitVec 64))
(declare-fun temp880_85 () (_ BitVec 64))
(declare-fun temp880_86 () (_ BitVec 64))
(declare-fun temp880_87 () (_ BitVec 64))
(declare-fun temp880_88 () (_ BitVec 64))
(declare-fun temp880_89 () (_ BitVec 64))
(declare-fun temp880_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp880_91 () (_ BitVec 64))
(declare-fun temp880_92 () (_ BitVec 64))
(declare-fun temp880_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_94 () (_ BitVec 64))
(declare-fun temp880_95 () (_ BitVec 64))
(declare-fun temp880_96 () (_ BitVec 64))
(declare-fun temp880_97 () (_ BitVec 64))
(declare-fun temp880_98 () (_ BitVec 64))
(declare-fun temp880_99 () (_ BitVec 64))
(declare-fun temp880_100 () (_ BitVec 64))
(declare-fun temp880_101 () (_ BitVec 64))
(declare-fun temp880_102 () (_ BitVec 64))
(declare-fun temp880_103 () (_ BitVec 64))
(declare-fun temp880_104 () (_ BitVec 64))
(declare-fun temp880_105 () (_ BitVec 64))
(declare-fun temp880_106 () (_ BitVec 64))
(declare-fun temp880_107 () (_ BitVec 64))
(declare-fun temp880_108 () (_ BitVec 64))
(declare-fun temp880_109 () (_ BitVec 64))
(declare-fun temp880_110 () (_ BitVec 64))
(declare-fun temp880_111 () (_ BitVec 64))
(declare-fun temp880_112 () (_ BitVec 64))
(declare-fun temp880_113 () (_ BitVec 64))
(declare-fun temp880_114 () (_ BitVec 64))
(declare-fun temp880_115 () (_ BitVec 64))
(declare-fun temp880_116 () (_ BitVec 64))
(declare-fun temp880_117 () (_ BitVec 64))
(declare-fun temp880_118 () (_ BitVec 64))
(declare-fun temp880_119 () (_ BitVec 64))
(declare-fun temp880_120 () (_ BitVec 64))
(declare-fun temp880_121 () (_ BitVec 64))
(declare-fun temp880_122 () (_ BitVec 64))
(declare-fun temp880_123 () (_ BitVec 64))
(declare-fun temp880_124 () (_ BitVec 64))
(declare-fun temp880_125 () (_ BitVec 64))
(declare-fun temp880_126 () (_ BitVec 64))
(declare-fun temp880_127 () (_ BitVec 64))
(declare-fun temp880_128 () (_ BitVec 64))
(declare-fun temp880_129 () (_ BitVec 64))
(declare-fun temp880_130 () (_ BitVec 64))
(declare-fun temp880_131 () (_ BitVec 64))
(declare-fun temp880_132 () (_ BitVec 64))
(declare-fun temp880_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp880_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp880_135 () (_ BitVec 64))
(declare-fun temp880_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp880_137 () (_ BitVec 64))
(declare-fun temp880_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_139 () (_ BitVec 64))
(declare-fun temp880_140 () (_ BitVec 64))
(declare-fun temp880_141 () (_ BitVec 64))
(declare-fun temp880_142 () (_ BitVec 64))
(declare-fun temp880_143 () (_ BitVec 64))
(declare-fun temp880_144 () (_ BitVec 64))
(declare-fun temp880_145 () (_ BitVec 64))
(declare-fun temp880_146 () (_ BitVec 64))
(declare-fun temp880_147 () (_ BitVec 64))
(declare-fun temp880_148 () (_ BitVec 64))
(declare-fun temp880_149 () (_ BitVec 64))
(declare-fun temp880_150 () (_ BitVec 64))
(declare-fun temp880_151 () (_ BitVec 64))
(declare-fun temp880_152 () (_ BitVec 64))
(declare-fun temp880_153 () (_ BitVec 64))
(declare-fun temp880_154 () (_ BitVec 64))
(declare-fun temp880_156 () (_ BitVec 64))
(declare-fun temp880_157 () (_ BitVec 64))
(declare-fun temp880_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp880_158 () (_ BitVec 64))
(declare-fun temp880_159 () (_ BitVec 64))
(declare-fun temp880_161 () (_ BitVec 64))
(declare-fun temp880_162 () (_ BitVec 64))
(declare-fun temp880_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp880_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp880_164 () (_ BitVec 64))
(declare-fun temp880_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp880_166 () (_ BitVec 64))
(declare-fun temp880_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp880_168 () (_ BitVec 64))
(declare-fun temp880_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_170 () (_ BitVec 64))
(declare-fun temp880_171 () (_ BitVec 64))
(declare-fun temp880_172 () (_ BitVec 64))
(declare-fun temp880_173 () (_ BitVec 64))
(declare-fun temp880_174 () (_ BitVec 64))
(declare-fun temp880_175 () (_ BitVec 64))
(declare-fun temp880_176 () (_ BitVec 64))
(declare-fun temp880_177 () (_ BitVec 64))
(declare-fun temp880_178 () (_ BitVec 64))
(declare-fun temp880_179 () (_ BitVec 64))
(declare-fun temp880_180 () (_ BitVec 64))
(declare-fun temp880_181 () (_ BitVec 64))
(declare-fun temp880_182 () (_ BitVec 64))
(declare-fun temp880_183 () (_ BitVec 64))
(declare-fun temp880_184 () (_ BitVec 64))
(declare-fun temp880_185 () (_ BitVec 64))
(declare-fun temp880_186 () (_ BitVec 64))
(declare-fun temp880_187 () (_ BitVec 64))
(declare-fun temp880_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp880_189 () (_ BitVec 64))
(declare-fun temp880_191 () (_ BitVec 64))
(declare-fun temp880_192 () (_ BitVec 64))
(declare-fun temp880_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp880_193 () (_ BitVec 64))
(declare-fun temp880_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp880_195 () (_ BitVec 64))
(declare-fun temp880_196 () (_ BitVec 64))
(declare-fun temp880_197 () (_ BitVec 64))
(declare-fun temp880_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_199 () (_ BitVec 64))
(declare-fun temp880_200 () (_ BitVec 64))
(declare-fun temp880_201 () (_ BitVec 64))
(declare-fun temp880_202 () (_ BitVec 64))
(declare-fun temp880_203 () (_ BitVec 64))
(declare-fun temp880_204 () (_ BitVec 64))
(declare-fun temp880_205 () (_ BitVec 64))
(declare-fun temp880_206 () (_ BitVec 64))
(declare-fun temp880_207 () (_ BitVec 64))
(declare-fun temp880_208 () (_ BitVec 64))
(declare-fun temp880_209 () (_ BitVec 64))
(declare-fun temp880_210 () (_ BitVec 64))
(declare-fun temp880_211 () (_ BitVec 64))
(declare-fun temp880_212 () (_ BitVec 64))
(declare-fun temp880_213 () (_ BitVec 64))
(declare-fun temp880_214 () (_ BitVec 64))
(declare-fun temp880_215 () (_ BitVec 64))
(declare-fun temp880_216 () (_ BitVec 64))
(declare-fun temp880_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp880_218 () (_ BitVec 64))
(declare-fun temp880_220 () (_ BitVec 64))
(declare-fun temp880_221 () (_ BitVec 64))
(declare-fun temp880_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp880_222 () (_ BitVec 64))
(declare-fun temp880_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp880_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp880_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp880_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp880_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp880_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp880_229 () (_ BitVec 64))
(declare-fun temp880_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp880_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp880_232 () (_ BitVec 64))
(declare-fun temp880_233 () (_ BitVec 64))
(declare-fun temp880_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp880_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp880_236 () (_ BitVec 64))
(declare-fun temp880_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp880_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp880_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun temp880_240 () (_ BitVec 64))
(declare-fun var6828432 () (_ BitVec 64))
(declare-fun temp880_241 () (_ BitVec 64))
(assert (= temp880_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp880_1)))
(assert (= temp880_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp880_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_3 #x0000000000000000))
(assert (= var79869 temp880_3))
(assert (= temp880_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp880_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_5 #x0000000000000000))
(assert (= var79914 temp880_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp880_6 #x0000000000000000))
(assert (= temp880_7 temp880_6))
(assert (= temp880_8 (select ARGNAME_padding_NAMEEND_VAL temp880_7)))
(assert (= temp880_9 #x0000000000000001))
(assert (= temp880_10 temp880_9))
(assert (= temp880_11 (select ARGNAME_padding_NAMEEND_VAL temp880_10)))
(assert (= temp880_12 #x0000000000000002))
(assert (= temp880_13 temp880_12))
(assert (= temp880_14 (select ARGNAME_padding_NAMEEND_VAL temp880_13)))
(assert (= temp880_15 #x0000000000000003))
(assert (= temp880_16 temp880_15))
(assert (= temp880_17 (select ARGNAME_padding_NAMEEND_VAL temp880_16)))
(assert (= temp880_18 #x0000000000000004))
(assert (= temp880_19 temp880_18))
(assert (= temp880_20 (select ARGNAME_padding_NAMEEND_VAL temp880_19)))
(assert (= temp880_21 #x0000000000000005))
(assert (= temp880_22 temp880_21))
(assert (= temp880_23 (select ARGNAME_padding_NAMEEND_VAL temp880_22)))
(assert (= temp880_24 #x0000000000000000))
(assert (= temp880_25 #x0000000000000000))
(assert (= temp880_26 temp880_25))
(assert (= temp880_27 (select ARGNAME_padding_NAMEEND_VAL temp880_26)))
(assert (= temp880_28 #x0000000000000000))
(assert (= temp880_29 #x0000000000000001))
(assert (= temp880_30 temp880_29))
(assert (= temp880_31 (select ARGNAME_padding_NAMEEND_VAL temp880_30)))
(assert (= temp880_32 #x0000000000000000))
(assert (= temp880_33 #x0000000000000002))
(assert (= temp880_34 temp880_33))
(assert (= temp880_35 (select ARGNAME_padding_NAMEEND_VAL temp880_34)))
(assert (= temp880_36 #x0000000000000000))
(assert (= temp880_37 #x0000000000000003))
(assert (= temp880_38 temp880_37))
(assert (= temp880_39 (select ARGNAME_padding_NAMEEND_VAL temp880_38)))
(assert (= temp880_40 #x0000000000000000))
(assert (= temp880_41 #x0000000000000004))
(assert (= temp880_42 temp880_41))
(assert (= temp880_43 (select ARGNAME_padding_NAMEEND_VAL temp880_42)))
(assert (= temp880_44 #x0000000000000000))
(assert (= temp880_45 #x0000000000000005))
(assert (= temp880_46 temp880_45))
(assert (= temp880_47 (select ARGNAME_padding_NAMEEND_VAL temp880_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp880_27 temp880_24)
             (bvslt temp880_31 temp880_28)
             (bvslt temp880_35 temp880_32)
             (bvslt temp880_39 temp880_36)
             (bvslt temp880_43 temp880_40)
             (bvslt temp880_47 temp880_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_48 #x0000000000000000))
(assert (= var1322786 temp880_48))
(assert (= temp880_49 #x0000000000000000))
(assert (= temp880_50 temp880_49))
(assert (= temp880_51 (select ARGNAME_output_padding_NAMEEND_VAL temp880_50)))
(assert (= temp880_52 #x0000000000000001))
(assert (= temp880_53 temp880_52))
(assert (= temp880_54 (select ARGNAME_output_padding_NAMEEND_VAL temp880_53)))
(assert (= temp880_55 #x0000000000000002))
(assert (= temp880_56 temp880_55))
(assert (= temp880_57 (select ARGNAME_output_padding_NAMEEND_VAL temp880_56)))
(assert (= temp880_58 #x0000000000000003))
(assert (= temp880_59 temp880_58))
(assert (= temp880_60 (select ARGNAME_output_padding_NAMEEND_VAL temp880_59)))
(assert (= temp880_61 #x0000000000000004))
(assert (= temp880_62 temp880_61))
(assert (= temp880_63 (select ARGNAME_output_padding_NAMEEND_VAL temp880_62)))
(assert (= temp880_64 #x0000000000000005))
(assert (= temp880_65 temp880_64))
(assert (= temp880_66 (select ARGNAME_output_padding_NAMEEND_VAL temp880_65)))
(assert (= temp880_67 #x0000000000000000))
(assert (= temp880_68 #x0000000000000000))
(assert (= temp880_69 temp880_68))
(assert (= temp880_70 (select ARGNAME_output_padding_NAMEEND_VAL temp880_69)))
(assert (= temp880_71 #x0000000000000000))
(assert (= temp880_72 #x0000000000000001))
(assert (= temp880_73 temp880_72))
(assert (= temp880_74 (select ARGNAME_output_padding_NAMEEND_VAL temp880_73)))
(assert (= temp880_75 #x0000000000000000))
(assert (= temp880_76 #x0000000000000002))
(assert (= temp880_77 temp880_76))
(assert (= temp880_78 (select ARGNAME_output_padding_NAMEEND_VAL temp880_77)))
(assert (= temp880_79 #x0000000000000000))
(assert (= temp880_80 #x0000000000000003))
(assert (= temp880_81 temp880_80))
(assert (= temp880_82 (select ARGNAME_output_padding_NAMEEND_VAL temp880_81)))
(assert (= temp880_83 #x0000000000000000))
(assert (= temp880_84 #x0000000000000004))
(assert (= temp880_85 temp880_84))
(assert (= temp880_86 (select ARGNAME_output_padding_NAMEEND_VAL temp880_85)))
(assert (= temp880_87 #x0000000000000000))
(assert (= temp880_88 #x0000000000000005))
(assert (= temp880_89 temp880_88))
(assert (= temp880_90 (select ARGNAME_output_padding_NAMEEND_VAL temp880_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp880_70 temp880_67)
             (bvslt temp880_74 temp880_71)
             (bvslt temp880_78 temp880_75)
             (bvslt temp880_82 temp880_79)
             (bvslt temp880_86 temp880_83)
             (bvslt temp880_90 temp880_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_91 #x0000000000000000))
(assert (= var1322797 temp880_91))
(assert (= temp880_92 #x0000000000000000))
(assert (= temp880_93 temp880_92))
(assert (= temp880_94 (select ARGNAME_stride_NAMEEND_VAL temp880_93)))
(assert (= temp880_95 #x0000000000000001))
(assert (= temp880_96 temp880_95))
(assert (= temp880_97 (select ARGNAME_stride_NAMEEND_VAL temp880_96)))
(assert (= temp880_98 #x0000000000000002))
(assert (= temp880_99 temp880_98))
(assert (= temp880_100 (select ARGNAME_stride_NAMEEND_VAL temp880_99)))
(assert (= temp880_101 #x0000000000000003))
(assert (= temp880_102 temp880_101))
(assert (= temp880_103 (select ARGNAME_stride_NAMEEND_VAL temp880_102)))
(assert (= temp880_104 #x0000000000000004))
(assert (= temp880_105 temp880_104))
(assert (= temp880_106 (select ARGNAME_stride_NAMEEND_VAL temp880_105)))
(assert (= temp880_107 #x0000000000000005))
(assert (= temp880_108 temp880_107))
(assert (= temp880_109 (select ARGNAME_stride_NAMEEND_VAL temp880_108)))
(assert (= temp880_110 #x0000000000000000))
(assert (= temp880_111 #x0000000000000000))
(assert (= temp880_112 temp880_111))
(assert (= temp880_113 (select ARGNAME_stride_NAMEEND_VAL temp880_112)))
(assert (= temp880_114 #x0000000000000000))
(assert (= temp880_115 #x0000000000000001))
(assert (= temp880_116 temp880_115))
(assert (= temp880_117 (select ARGNAME_stride_NAMEEND_VAL temp880_116)))
(assert (= temp880_118 #x0000000000000000))
(assert (= temp880_119 #x0000000000000002))
(assert (= temp880_120 temp880_119))
(assert (= temp880_121 (select ARGNAME_stride_NAMEEND_VAL temp880_120)))
(assert (= temp880_122 #x0000000000000000))
(assert (= temp880_123 #x0000000000000003))
(assert (= temp880_124 temp880_123))
(assert (= temp880_125 (select ARGNAME_stride_NAMEEND_VAL temp880_124)))
(assert (= temp880_126 #x0000000000000000))
(assert (= temp880_127 #x0000000000000004))
(assert (= temp880_128 temp880_127))
(assert (= temp880_129 (select ARGNAME_stride_NAMEEND_VAL temp880_128)))
(assert (= temp880_130 #x0000000000000000))
(assert (= temp880_131 #x0000000000000005))
(assert (= temp880_132 temp880_131))
(assert (= temp880_133 (select ARGNAME_stride_NAMEEND_VAL temp880_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp880_113 temp880_110)
             (bvsle temp880_117 temp880_114)
             (bvsle temp880_121 temp880_118)
             (bvsle temp880_125 temp880_122)
             (bvsle temp880_129 temp880_126)
             (bvsle temp880_133 temp880_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_134 #x0000000000000000))
(assert (= var1322807 temp880_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_135 #x0000000000000001))
(assert (= var1322819 temp880_135))
(assert (= temp880_136 #x0000000000000000))
(assert (= var1310898 temp880_136))
(assert (= temp880_137 #x0000000000000000))
(assert (= temp880_138 temp880_137))
(assert (= temp880_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_138)))
(assert (= temp880_140 #x0000000000000001))
(assert (= temp880_141 temp880_140))
(assert (= temp880_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_141)))
(assert (= temp880_143 #x0000000000000002))
(assert (= temp880_144 temp880_143))
(assert (= temp880_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_144)))
(assert (= temp880_146 #x0000000000000003))
(assert (= temp880_147 temp880_146))
(assert (= temp880_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_147)))
(assert (= temp880_149 #x0000000000000004))
(assert (= temp880_150 temp880_149))
(assert (= temp880_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_150)))
(assert (= temp880_152 #x0000000000000005))
(assert (= temp880_153 temp880_152))
(assert (= temp880_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_153)))
(assert (= temp880_156 var1310898))
(assert (= temp880_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_156)))
(assert (= temp880_155 temp880_157))
(assert (= var1322852
   (ite (bvslt temp880_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_158 #x0000000000000000))
(assert (= var1322852 temp880_158))
(assert (= temp880_159 #x0000000000000000))
(assert (= var1310898 temp880_159))
(assert (= temp880_161 var1310898))
(assert (= temp880_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_161)))
(assert (= temp880_160 temp880_162))
(assert (= var1322874 (bvsmod temp880_160 ARGNAME_groups_NAMEEND)))
(assert (= temp880_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp880_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp880_164 #x0000000000000001))
(assert (= var1322875 temp880_164))
(assert (= temp880_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp880_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_166 #x0000000000000001))
(assert (= var1322895 temp880_166))
(assert (= temp880_167 #x0000000000000001))
(assert (= var1311786 temp880_167))
(assert (= temp880_168 #x0000000000000000))
(assert (= temp880_169 temp880_168))
(assert (= temp880_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_169)))
(assert (= temp880_171 #x0000000000000001))
(assert (= temp880_172 temp880_171))
(assert (= temp880_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_172)))
(assert (= temp880_174 #x0000000000000002))
(assert (= temp880_175 temp880_174))
(assert (= temp880_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_175)))
(assert (= temp880_177 #x0000000000000003))
(assert (= temp880_178 temp880_177))
(assert (= temp880_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_178)))
(assert (= temp880_180 #x0000000000000004))
(assert (= temp880_181 temp880_180))
(assert (= temp880_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_181)))
(assert (= temp880_183 #x0000000000000005))
(assert (= temp880_184 temp880_183))
(assert (= temp880_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_184)))
(assert (= temp880_186 #x0000000000000000))
(assert (= temp880_187
   (ite (bvslt var1311786 temp880_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp880_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_187)))
(assert (= var1322903 temp880_188))
(assert (bvslt (ite (bvslt var1311786 temp880_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp880_189 #x0000000000000001))
(assert (= var1311786 temp880_189))
(assert (= temp880_191 var1311786))
(assert (= temp880_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_191)))
(assert (= temp880_190 temp880_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp880_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp880_193 #x0000000000000001))
(assert (= var1322908 temp880_193))
(assert (= temp880_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp880_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_195 #x0000000000000001))
(assert (= var1322975 temp880_195))
(assert (= temp880_196 #x0000000000000000))
(assert (= var1310898 temp880_196))
(assert (= temp880_197 #x0000000000000000))
(assert (= temp880_198 temp880_197))
(assert (= temp880_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp880_198)))
(assert (= temp880_200 #x0000000000000001))
(assert (= temp880_201 temp880_200))
(assert (= temp880_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp880_201)))
(assert (= temp880_203 #x0000000000000002))
(assert (= temp880_204 temp880_203))
(assert (= temp880_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp880_204)))
(assert (= temp880_206 #x0000000000000003))
(assert (= temp880_207 temp880_206))
(assert (= temp880_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp880_207)))
(assert (= temp880_209 #x0000000000000004))
(assert (= temp880_210 temp880_209))
(assert (= temp880_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp880_210)))
(assert (= temp880_212 #x0000000000000005))
(assert (= temp880_213 temp880_212))
(assert (= temp880_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp880_213)))
(assert (= temp880_215 #x0000000000000000))
(assert (= temp880_216
   (ite (bvslt var1310898 temp880_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp880_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp880_216)))
(assert (= var1322977 temp880_217))
(assert (bvslt (ite (bvslt var1310898 temp880_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp880_218 #x0000000000000000))
(assert (= var1310898 temp880_218))
(assert (= temp880_220 var1310898))
(assert (= temp880_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_220)))
(assert (= temp880_219 temp880_221))
(assert (= var1322980
   (ite (= var1322977 temp880_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp880_222 #x0000000000000001))
(assert (= var1322980 temp880_222))
(assert (= temp880_223 #x0000000000000002))
(assert (= var1848169 temp880_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp880_225 #x0000000000000001))
(assert (= var1323065 temp880_225))
(assert (= temp880_226 #x0000000000000001))
(assert (= var3486735 temp880_226))
(assert (= temp880_227 #x0000000000000001))
(assert (= var3814415 temp880_227))
(assert (= temp880_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp880_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_229 #x0000000000000001))
(assert (= var79986 temp880_229))
(assert (= temp880_230 #x0000000000000001))
(assert (= var80116 temp880_230))
(assert (= var4796905 var80116))
(assert (= temp880_231 #x0000000000000000))
(assert (= var4784306 temp880_231))
(assert (= temp880_232 #x0000000000000000))
(assert (= temp880_233
   (ite (bvslt var4784306 temp880_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp880_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_233)))
(assert (= var4796924 temp880_234))
(assert (bvslt (ite (bvslt var4784306 temp880_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp880_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp880_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp880_236 #x0000000000000001))
(assert (= var4796925 temp880_236))
(assert (= temp880_237 #x0000000000000000))
(assert (= var4996927 temp880_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp880_238 #x0000000000000002))
(assert (= var5125763 temp880_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_239 #x0000000000000000))
(assert (= var5191324 temp880_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6238608 var80129))
(assert (= var6500752 var80129))
(assert (= temp880_240 #x0000000000000000))
(assert (= var6828432 temp880_240))
(assert (= temp880_241 #x0000000000000001))
(assert (= var79986 temp880_241))
(model-add temp880_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp880_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp880_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






