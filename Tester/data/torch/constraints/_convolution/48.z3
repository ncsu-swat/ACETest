(declare-fun temp63_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp63_2 () (_ BitVec 64))
(declare-fun temp63_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp63_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp63_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp63_6 () (_ BitVec 64))
(declare-fun temp63_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_8 () (_ BitVec 64))
(declare-fun temp63_9 () (_ BitVec 64))
(declare-fun temp63_10 () (_ BitVec 64))
(declare-fun temp63_11 () (_ BitVec 64))
(declare-fun temp63_12 () (_ BitVec 64))
(declare-fun temp63_13 () (_ BitVec 64))
(declare-fun temp63_14 () (_ BitVec 64))
(declare-fun temp63_15 () (_ BitVec 64))
(declare-fun temp63_16 () (_ BitVec 64))
(declare-fun temp63_17 () (_ BitVec 64))
(declare-fun temp63_18 () (_ BitVec 64))
(declare-fun temp63_19 () (_ BitVec 64))
(declare-fun temp63_20 () (_ BitVec 64))
(declare-fun temp63_21 () (_ BitVec 64))
(declare-fun temp63_22 () (_ BitVec 64))
(declare-fun temp63_23 () (_ BitVec 64))
(declare-fun temp63_24 () (_ BitVec 64))
(declare-fun temp63_25 () (_ BitVec 64))
(declare-fun temp63_26 () (_ BitVec 64))
(declare-fun temp63_27 () (_ BitVec 64))
(declare-fun temp63_28 () (_ BitVec 64))
(declare-fun temp63_29 () (_ BitVec 64))
(declare-fun temp63_30 () (_ BitVec 64))
(declare-fun temp63_31 () (_ BitVec 64))
(declare-fun temp63_32 () (_ BitVec 64))
(declare-fun temp63_33 () (_ BitVec 64))
(declare-fun temp63_34 () (_ BitVec 64))
(declare-fun temp63_35 () (_ BitVec 64))
(declare-fun temp63_36 () (_ BitVec 64))
(declare-fun temp63_37 () (_ BitVec 64))
(declare-fun temp63_38 () (_ BitVec 64))
(declare-fun temp63_39 () (_ BitVec 64))
(declare-fun temp63_40 () (_ BitVec 64))
(declare-fun temp63_41 () (_ BitVec 64))
(declare-fun temp63_42 () (_ BitVec 64))
(declare-fun temp63_43 () (_ BitVec 64))
(declare-fun temp63_44 () (_ BitVec 64))
(declare-fun temp63_45 () (_ BitVec 64))
(declare-fun temp63_46 () (_ BitVec 64))
(declare-fun temp63_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp63_48 () (_ BitVec 64))
(declare-fun temp63_49 () (_ BitVec 64))
(declare-fun temp63_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_51 () (_ BitVec 64))
(declare-fun temp63_52 () (_ BitVec 64))
(declare-fun temp63_53 () (_ BitVec 64))
(declare-fun temp63_54 () (_ BitVec 64))
(declare-fun temp63_55 () (_ BitVec 64))
(declare-fun temp63_56 () (_ BitVec 64))
(declare-fun temp63_57 () (_ BitVec 64))
(declare-fun temp63_58 () (_ BitVec 64))
(declare-fun temp63_59 () (_ BitVec 64))
(declare-fun temp63_60 () (_ BitVec 64))
(declare-fun temp63_61 () (_ BitVec 64))
(declare-fun temp63_62 () (_ BitVec 64))
(declare-fun temp63_63 () (_ BitVec 64))
(declare-fun temp63_64 () (_ BitVec 64))
(declare-fun temp63_65 () (_ BitVec 64))
(declare-fun temp63_66 () (_ BitVec 64))
(declare-fun temp63_67 () (_ BitVec 64))
(declare-fun temp63_68 () (_ BitVec 64))
(declare-fun temp63_69 () (_ BitVec 64))
(declare-fun temp63_70 () (_ BitVec 64))
(declare-fun temp63_71 () (_ BitVec 64))
(declare-fun temp63_72 () (_ BitVec 64))
(declare-fun temp63_73 () (_ BitVec 64))
(declare-fun temp63_74 () (_ BitVec 64))
(declare-fun temp63_75 () (_ BitVec 64))
(declare-fun temp63_76 () (_ BitVec 64))
(declare-fun temp63_77 () (_ BitVec 64))
(declare-fun temp63_78 () (_ BitVec 64))
(declare-fun temp63_79 () (_ BitVec 64))
(declare-fun temp63_80 () (_ BitVec 64))
(declare-fun temp63_81 () (_ BitVec 64))
(declare-fun temp63_82 () (_ BitVec 64))
(declare-fun temp63_83 () (_ BitVec 64))
(declare-fun temp63_84 () (_ BitVec 64))
(declare-fun temp63_85 () (_ BitVec 64))
(declare-fun temp63_86 () (_ BitVec 64))
(declare-fun temp63_87 () (_ BitVec 64))
(declare-fun temp63_88 () (_ BitVec 64))
(declare-fun temp63_89 () (_ BitVec 64))
(declare-fun temp63_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp63_91 () (_ BitVec 64))
(declare-fun temp63_92 () (_ BitVec 64))
(declare-fun temp63_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_94 () (_ BitVec 64))
(declare-fun temp63_95 () (_ BitVec 64))
(declare-fun temp63_96 () (_ BitVec 64))
(declare-fun temp63_97 () (_ BitVec 64))
(declare-fun temp63_98 () (_ BitVec 64))
(declare-fun temp63_99 () (_ BitVec 64))
(declare-fun temp63_100 () (_ BitVec 64))
(declare-fun temp63_101 () (_ BitVec 64))
(declare-fun temp63_102 () (_ BitVec 64))
(declare-fun temp63_103 () (_ BitVec 64))
(declare-fun temp63_104 () (_ BitVec 64))
(declare-fun temp63_105 () (_ BitVec 64))
(declare-fun temp63_106 () (_ BitVec 64))
(declare-fun temp63_107 () (_ BitVec 64))
(declare-fun temp63_108 () (_ BitVec 64))
(declare-fun temp63_109 () (_ BitVec 64))
(declare-fun temp63_110 () (_ BitVec 64))
(declare-fun temp63_111 () (_ BitVec 64))
(declare-fun temp63_112 () (_ BitVec 64))
(declare-fun temp63_113 () (_ BitVec 64))
(declare-fun temp63_114 () (_ BitVec 64))
(declare-fun temp63_115 () (_ BitVec 64))
(declare-fun temp63_116 () (_ BitVec 64))
(declare-fun temp63_117 () (_ BitVec 64))
(declare-fun temp63_118 () (_ BitVec 64))
(declare-fun temp63_119 () (_ BitVec 64))
(declare-fun temp63_120 () (_ BitVec 64))
(declare-fun temp63_121 () (_ BitVec 64))
(declare-fun temp63_122 () (_ BitVec 64))
(declare-fun temp63_123 () (_ BitVec 64))
(declare-fun temp63_124 () (_ BitVec 64))
(declare-fun temp63_125 () (_ BitVec 64))
(declare-fun temp63_126 () (_ BitVec 64))
(declare-fun temp63_127 () (_ BitVec 64))
(declare-fun temp63_128 () (_ BitVec 64))
(declare-fun temp63_129 () (_ BitVec 64))
(declare-fun temp63_130 () (_ BitVec 64))
(declare-fun temp63_131 () (_ BitVec 64))
(declare-fun temp63_132 () (_ BitVec 64))
(declare-fun temp63_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp63_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp63_135 () (_ BitVec 64))
(declare-fun temp63_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp63_137 () (_ BitVec 64))
(declare-fun temp63_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_139 () (_ BitVec 64))
(declare-fun temp63_140 () (_ BitVec 64))
(declare-fun temp63_141 () (_ BitVec 64))
(declare-fun temp63_142 () (_ BitVec 64))
(declare-fun temp63_143 () (_ BitVec 64))
(declare-fun temp63_144 () (_ BitVec 64))
(declare-fun temp63_145 () (_ BitVec 64))
(declare-fun temp63_146 () (_ BitVec 64))
(declare-fun temp63_147 () (_ BitVec 64))
(declare-fun temp63_148 () (_ BitVec 64))
(declare-fun temp63_149 () (_ BitVec 64))
(declare-fun temp63_150 () (_ BitVec 64))
(declare-fun temp63_151 () (_ BitVec 64))
(declare-fun temp63_152 () (_ BitVec 64))
(declare-fun temp63_153 () (_ BitVec 64))
(declare-fun temp63_154 () (_ BitVec 64))
(declare-fun temp63_156 () (_ BitVec 64))
(declare-fun temp63_157 () (_ BitVec 64))
(declare-fun temp63_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp63_158 () (_ BitVec 64))
(declare-fun temp63_159 () (_ BitVec 64))
(declare-fun temp63_161 () (_ BitVec 64))
(declare-fun temp63_162 () (_ BitVec 64))
(declare-fun temp63_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp63_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp63_164 () (_ BitVec 64))
(declare-fun temp63_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp63_166 () (_ BitVec 64))
(declare-fun temp63_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp63_168 () (_ BitVec 64))
(declare-fun temp63_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_170 () (_ BitVec 64))
(declare-fun temp63_171 () (_ BitVec 64))
(declare-fun temp63_172 () (_ BitVec 64))
(declare-fun temp63_173 () (_ BitVec 64))
(declare-fun temp63_174 () (_ BitVec 64))
(declare-fun temp63_175 () (_ BitVec 64))
(declare-fun temp63_176 () (_ BitVec 64))
(declare-fun temp63_177 () (_ BitVec 64))
(declare-fun temp63_178 () (_ BitVec 64))
(declare-fun temp63_179 () (_ BitVec 64))
(declare-fun temp63_180 () (_ BitVec 64))
(declare-fun temp63_181 () (_ BitVec 64))
(declare-fun temp63_182 () (_ BitVec 64))
(declare-fun temp63_183 () (_ BitVec 64))
(declare-fun temp63_184 () (_ BitVec 64))
(declare-fun temp63_185 () (_ BitVec 64))
(declare-fun temp63_186 () (_ BitVec 64))
(declare-fun temp63_187 () (_ BitVec 64))
(declare-fun temp63_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp63_189 () (_ BitVec 64))
(declare-fun temp63_191 () (_ BitVec 64))
(declare-fun temp63_192 () (_ BitVec 64))
(declare-fun temp63_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp63_193 () (_ BitVec 64))
(declare-fun temp63_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp63_195 () (_ BitVec 64))
(declare-fun temp63_196 () (_ BitVec 64))
(declare-fun temp63_197 () (_ BitVec 64))
(declare-fun temp63_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_199 () (_ BitVec 64))
(declare-fun temp63_200 () (_ BitVec 64))
(declare-fun temp63_201 () (_ BitVec 64))
(declare-fun temp63_202 () (_ BitVec 64))
(declare-fun temp63_203 () (_ BitVec 64))
(declare-fun temp63_204 () (_ BitVec 64))
(declare-fun temp63_205 () (_ BitVec 64))
(declare-fun temp63_206 () (_ BitVec 64))
(declare-fun temp63_207 () (_ BitVec 64))
(declare-fun temp63_208 () (_ BitVec 64))
(declare-fun temp63_209 () (_ BitVec 64))
(declare-fun temp63_210 () (_ BitVec 64))
(declare-fun temp63_211 () (_ BitVec 64))
(declare-fun temp63_212 () (_ BitVec 64))
(declare-fun temp63_213 () (_ BitVec 64))
(declare-fun temp63_214 () (_ BitVec 64))
(declare-fun temp63_215 () (_ BitVec 64))
(declare-fun temp63_216 () (_ BitVec 64))
(declare-fun temp63_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp63_218 () (_ BitVec 64))
(declare-fun temp63_220 () (_ BitVec 64))
(declare-fun temp63_221 () (_ BitVec 64))
(declare-fun temp63_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp63_222 () (_ BitVec 64))
(declare-fun temp63_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp63_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp63_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp63_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp63_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp63_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp63_229 () (_ BitVec 64))
(declare-fun temp63_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp63_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp63_232 () (_ BitVec 64))
(declare-fun temp63_233 () (_ BitVec 64))
(declare-fun temp63_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp63_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp63_236 () (_ BitVec 64))
(declare-fun temp63_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp63_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp63_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp63_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp63_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp63_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp63_243 () (_ BitVec 64))
(assert (= temp63_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp63_1)))
(assert (= temp63_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp63_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_3 #x0000000000000000))
(assert (= var79869 temp63_3))
(assert (= temp63_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp63_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_5 #x0000000000000000))
(assert (= var79914 temp63_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp63_6 #x0000000000000000))
(assert (= temp63_7 temp63_6))
(assert (= temp63_8 (select ARGNAME_padding_NAMEEND_VAL temp63_7)))
(assert (= temp63_9 #x0000000000000001))
(assert (= temp63_10 temp63_9))
(assert (= temp63_11 (select ARGNAME_padding_NAMEEND_VAL temp63_10)))
(assert (= temp63_12 #x0000000000000002))
(assert (= temp63_13 temp63_12))
(assert (= temp63_14 (select ARGNAME_padding_NAMEEND_VAL temp63_13)))
(assert (= temp63_15 #x0000000000000003))
(assert (= temp63_16 temp63_15))
(assert (= temp63_17 (select ARGNAME_padding_NAMEEND_VAL temp63_16)))
(assert (= temp63_18 #x0000000000000004))
(assert (= temp63_19 temp63_18))
(assert (= temp63_20 (select ARGNAME_padding_NAMEEND_VAL temp63_19)))
(assert (= temp63_21 #x0000000000000005))
(assert (= temp63_22 temp63_21))
(assert (= temp63_23 (select ARGNAME_padding_NAMEEND_VAL temp63_22)))
(assert (= temp63_24 #x0000000000000000))
(assert (= temp63_25 #x0000000000000000))
(assert (= temp63_26 temp63_25))
(assert (= temp63_27 (select ARGNAME_padding_NAMEEND_VAL temp63_26)))
(assert (= temp63_28 #x0000000000000000))
(assert (= temp63_29 #x0000000000000001))
(assert (= temp63_30 temp63_29))
(assert (= temp63_31 (select ARGNAME_padding_NAMEEND_VAL temp63_30)))
(assert (= temp63_32 #x0000000000000000))
(assert (= temp63_33 #x0000000000000002))
(assert (= temp63_34 temp63_33))
(assert (= temp63_35 (select ARGNAME_padding_NAMEEND_VAL temp63_34)))
(assert (= temp63_36 #x0000000000000000))
(assert (= temp63_37 #x0000000000000003))
(assert (= temp63_38 temp63_37))
(assert (= temp63_39 (select ARGNAME_padding_NAMEEND_VAL temp63_38)))
(assert (= temp63_40 #x0000000000000000))
(assert (= temp63_41 #x0000000000000004))
(assert (= temp63_42 temp63_41))
(assert (= temp63_43 (select ARGNAME_padding_NAMEEND_VAL temp63_42)))
(assert (= temp63_44 #x0000000000000000))
(assert (= temp63_45 #x0000000000000005))
(assert (= temp63_46 temp63_45))
(assert (= temp63_47 (select ARGNAME_padding_NAMEEND_VAL temp63_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp63_27 temp63_24)
             (bvslt temp63_31 temp63_28)
             (bvslt temp63_35 temp63_32)
             (bvslt temp63_39 temp63_36)
             (bvslt temp63_43 temp63_40)
             (bvslt temp63_47 temp63_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_48 #x0000000000000000))
(assert (= var1322786 temp63_48))
(assert (= temp63_49 #x0000000000000000))
(assert (= temp63_50 temp63_49))
(assert (= temp63_51 (select ARGNAME_output_padding_NAMEEND_VAL temp63_50)))
(assert (= temp63_52 #x0000000000000001))
(assert (= temp63_53 temp63_52))
(assert (= temp63_54 (select ARGNAME_output_padding_NAMEEND_VAL temp63_53)))
(assert (= temp63_55 #x0000000000000002))
(assert (= temp63_56 temp63_55))
(assert (= temp63_57 (select ARGNAME_output_padding_NAMEEND_VAL temp63_56)))
(assert (= temp63_58 #x0000000000000003))
(assert (= temp63_59 temp63_58))
(assert (= temp63_60 (select ARGNAME_output_padding_NAMEEND_VAL temp63_59)))
(assert (= temp63_61 #x0000000000000004))
(assert (= temp63_62 temp63_61))
(assert (= temp63_63 (select ARGNAME_output_padding_NAMEEND_VAL temp63_62)))
(assert (= temp63_64 #x0000000000000005))
(assert (= temp63_65 temp63_64))
(assert (= temp63_66 (select ARGNAME_output_padding_NAMEEND_VAL temp63_65)))
(assert (= temp63_67 #x0000000000000000))
(assert (= temp63_68 #x0000000000000000))
(assert (= temp63_69 temp63_68))
(assert (= temp63_70 (select ARGNAME_output_padding_NAMEEND_VAL temp63_69)))
(assert (= temp63_71 #x0000000000000000))
(assert (= temp63_72 #x0000000000000001))
(assert (= temp63_73 temp63_72))
(assert (= temp63_74 (select ARGNAME_output_padding_NAMEEND_VAL temp63_73)))
(assert (= temp63_75 #x0000000000000000))
(assert (= temp63_76 #x0000000000000002))
(assert (= temp63_77 temp63_76))
(assert (= temp63_78 (select ARGNAME_output_padding_NAMEEND_VAL temp63_77)))
(assert (= temp63_79 #x0000000000000000))
(assert (= temp63_80 #x0000000000000003))
(assert (= temp63_81 temp63_80))
(assert (= temp63_82 (select ARGNAME_output_padding_NAMEEND_VAL temp63_81)))
(assert (= temp63_83 #x0000000000000000))
(assert (= temp63_84 #x0000000000000004))
(assert (= temp63_85 temp63_84))
(assert (= temp63_86 (select ARGNAME_output_padding_NAMEEND_VAL temp63_85)))
(assert (= temp63_87 #x0000000000000000))
(assert (= temp63_88 #x0000000000000005))
(assert (= temp63_89 temp63_88))
(assert (= temp63_90 (select ARGNAME_output_padding_NAMEEND_VAL temp63_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp63_70 temp63_67)
             (bvslt temp63_74 temp63_71)
             (bvslt temp63_78 temp63_75)
             (bvslt temp63_82 temp63_79)
             (bvslt temp63_86 temp63_83)
             (bvslt temp63_90 temp63_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_91 #x0000000000000000))
(assert (= var1322797 temp63_91))
(assert (= temp63_92 #x0000000000000000))
(assert (= temp63_93 temp63_92))
(assert (= temp63_94 (select ARGNAME_stride_NAMEEND_VAL temp63_93)))
(assert (= temp63_95 #x0000000000000001))
(assert (= temp63_96 temp63_95))
(assert (= temp63_97 (select ARGNAME_stride_NAMEEND_VAL temp63_96)))
(assert (= temp63_98 #x0000000000000002))
(assert (= temp63_99 temp63_98))
(assert (= temp63_100 (select ARGNAME_stride_NAMEEND_VAL temp63_99)))
(assert (= temp63_101 #x0000000000000003))
(assert (= temp63_102 temp63_101))
(assert (= temp63_103 (select ARGNAME_stride_NAMEEND_VAL temp63_102)))
(assert (= temp63_104 #x0000000000000004))
(assert (= temp63_105 temp63_104))
(assert (= temp63_106 (select ARGNAME_stride_NAMEEND_VAL temp63_105)))
(assert (= temp63_107 #x0000000000000005))
(assert (= temp63_108 temp63_107))
(assert (= temp63_109 (select ARGNAME_stride_NAMEEND_VAL temp63_108)))
(assert (= temp63_110 #x0000000000000000))
(assert (= temp63_111 #x0000000000000000))
(assert (= temp63_112 temp63_111))
(assert (= temp63_113 (select ARGNAME_stride_NAMEEND_VAL temp63_112)))
(assert (= temp63_114 #x0000000000000000))
(assert (= temp63_115 #x0000000000000001))
(assert (= temp63_116 temp63_115))
(assert (= temp63_117 (select ARGNAME_stride_NAMEEND_VAL temp63_116)))
(assert (= temp63_118 #x0000000000000000))
(assert (= temp63_119 #x0000000000000002))
(assert (= temp63_120 temp63_119))
(assert (= temp63_121 (select ARGNAME_stride_NAMEEND_VAL temp63_120)))
(assert (= temp63_122 #x0000000000000000))
(assert (= temp63_123 #x0000000000000003))
(assert (= temp63_124 temp63_123))
(assert (= temp63_125 (select ARGNAME_stride_NAMEEND_VAL temp63_124)))
(assert (= temp63_126 #x0000000000000000))
(assert (= temp63_127 #x0000000000000004))
(assert (= temp63_128 temp63_127))
(assert (= temp63_129 (select ARGNAME_stride_NAMEEND_VAL temp63_128)))
(assert (= temp63_130 #x0000000000000000))
(assert (= temp63_131 #x0000000000000005))
(assert (= temp63_132 temp63_131))
(assert (= temp63_133 (select ARGNAME_stride_NAMEEND_VAL temp63_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp63_113 temp63_110)
             (bvsle temp63_117 temp63_114)
             (bvsle temp63_121 temp63_118)
             (bvsle temp63_125 temp63_122)
             (bvsle temp63_129 temp63_126)
             (bvsle temp63_133 temp63_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_134 #x0000000000000000))
(assert (= var1322807 temp63_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_135 #x0000000000000001))
(assert (= var1322819 temp63_135))
(assert (= temp63_136 #x0000000000000000))
(assert (= var1310898 temp63_136))
(assert (= temp63_137 #x0000000000000000))
(assert (= temp63_138 temp63_137))
(assert (= temp63_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_138)))
(assert (= temp63_140 #x0000000000000001))
(assert (= temp63_141 temp63_140))
(assert (= temp63_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_141)))
(assert (= temp63_143 #x0000000000000002))
(assert (= temp63_144 temp63_143))
(assert (= temp63_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_144)))
(assert (= temp63_146 #x0000000000000003))
(assert (= temp63_147 temp63_146))
(assert (= temp63_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_147)))
(assert (= temp63_149 #x0000000000000004))
(assert (= temp63_150 temp63_149))
(assert (= temp63_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_150)))
(assert (= temp63_152 #x0000000000000005))
(assert (= temp63_153 temp63_152))
(assert (= temp63_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_153)))
(assert (= temp63_156 var1310898))
(assert (= temp63_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_156)))
(assert (= temp63_155 temp63_157))
(assert (= var1322852
   (ite (bvslt temp63_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_158 #x0000000000000000))
(assert (= var1322852 temp63_158))
(assert (= temp63_159 #x0000000000000000))
(assert (= var1310898 temp63_159))
(assert (= temp63_161 var1310898))
(assert (= temp63_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_161)))
(assert (= temp63_160 temp63_162))
(assert (= var1322874 (bvsmod temp63_160 ARGNAME_groups_NAMEEND)))
(assert (= temp63_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp63_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp63_164 #x0000000000000001))
(assert (= var1322875 temp63_164))
(assert (= temp63_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp63_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_166 #x0000000000000001))
(assert (= var1322895 temp63_166))
(assert (= temp63_167 #x0000000000000001))
(assert (= var1311786 temp63_167))
(assert (= temp63_168 #x0000000000000000))
(assert (= temp63_169 temp63_168))
(assert (= temp63_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_169)))
(assert (= temp63_171 #x0000000000000001))
(assert (= temp63_172 temp63_171))
(assert (= temp63_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_172)))
(assert (= temp63_174 #x0000000000000002))
(assert (= temp63_175 temp63_174))
(assert (= temp63_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_175)))
(assert (= temp63_177 #x0000000000000003))
(assert (= temp63_178 temp63_177))
(assert (= temp63_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_178)))
(assert (= temp63_180 #x0000000000000004))
(assert (= temp63_181 temp63_180))
(assert (= temp63_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_181)))
(assert (= temp63_183 #x0000000000000005))
(assert (= temp63_184 temp63_183))
(assert (= temp63_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_184)))
(assert (= temp63_186 #x0000000000000000))
(assert (= temp63_187
   (ite (bvslt var1311786 temp63_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp63_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_187)))
(assert (= var1322903 temp63_188))
(assert (bvslt (ite (bvslt var1311786 temp63_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp63_189 #x0000000000000001))
(assert (= var1311786 temp63_189))
(assert (= temp63_191 var1311786))
(assert (= temp63_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_191)))
(assert (= temp63_190 temp63_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp63_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp63_193 #x0000000000000001))
(assert (= var1322908 temp63_193))
(assert (= temp63_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp63_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_195 #x0000000000000001))
(assert (= var1322975 temp63_195))
(assert (= temp63_196 #x0000000000000000))
(assert (= var1310898 temp63_196))
(assert (= temp63_197 #x0000000000000000))
(assert (= temp63_198 temp63_197))
(assert (= temp63_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp63_198)))
(assert (= temp63_200 #x0000000000000001))
(assert (= temp63_201 temp63_200))
(assert (= temp63_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp63_201)))
(assert (= temp63_203 #x0000000000000002))
(assert (= temp63_204 temp63_203))
(assert (= temp63_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp63_204)))
(assert (= temp63_206 #x0000000000000003))
(assert (= temp63_207 temp63_206))
(assert (= temp63_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp63_207)))
(assert (= temp63_209 #x0000000000000004))
(assert (= temp63_210 temp63_209))
(assert (= temp63_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp63_210)))
(assert (= temp63_212 #x0000000000000005))
(assert (= temp63_213 temp63_212))
(assert (= temp63_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp63_213)))
(assert (= temp63_215 #x0000000000000000))
(assert (= temp63_216
   (ite (bvslt var1310898 temp63_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp63_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp63_216)))
(assert (= var1322977 temp63_217))
(assert (bvslt (ite (bvslt var1310898 temp63_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp63_218 #x0000000000000000))
(assert (= var1310898 temp63_218))
(assert (= temp63_220 var1310898))
(assert (= temp63_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_220)))
(assert (= temp63_219 temp63_221))
(assert (= var1322980
   (ite (= var1322977 temp63_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp63_222 #x0000000000000001))
(assert (= var1322980 temp63_222))
(assert (= temp63_223 #x0000000000000002))
(assert (= var1848169 temp63_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp63_225 #x0000000000000001))
(assert (= var1323065 temp63_225))
(assert (= temp63_226 #x0000000000000001))
(assert (= var3486735 temp63_226))
(assert (= temp63_227 #x0000000000000001))
(assert (= var3814415 temp63_227))
(assert (= temp63_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp63_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_229 #x0000000000000001))
(assert (= var79986 temp63_229))
(assert (= temp63_230 #x0000000000000001))
(assert (= var80116 temp63_230))
(assert (= var4796905 var80116))
(assert (= temp63_231 #x0000000000000000))
(assert (= var4784306 temp63_231))
(assert (= temp63_232 #x0000000000000000))
(assert (= temp63_233
   (ite (bvslt var4784306 temp63_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp63_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_233)))
(assert (= var4796924 temp63_234))
(assert (bvslt (ite (bvslt var4784306 temp63_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp63_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp63_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp63_236 #x0000000000000001))
(assert (= var4796925 temp63_236))
(assert (= temp63_237 #x0000000000000000))
(assert (= var4996927 temp63_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp63_238 #x0000000000000002))
(assert (= var5125763 temp63_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_239 #x0000000000000000))
(assert (= var5191324 temp63_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp63_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp63_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp63_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp63_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_243 #x0000000000000001))
(assert (= var79986 temp63_243))
(model-add temp63_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp63_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp63_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






