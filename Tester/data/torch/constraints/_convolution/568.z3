(declare-fun temp754_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp754_2 () (_ BitVec 64))
(declare-fun temp754_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp754_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp754_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp754_6 () (_ BitVec 64))
(declare-fun temp754_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp754_8 () (_ BitVec 64))
(declare-fun temp754_9 () (_ BitVec 64))
(declare-fun temp754_10 () (_ BitVec 64))
(declare-fun temp754_11 () (_ BitVec 64))
(declare-fun temp754_12 () (_ BitVec 64))
(declare-fun temp754_13 () (_ BitVec 64))
(declare-fun temp754_14 () (_ BitVec 64))
(declare-fun temp754_15 () (_ BitVec 64))
(declare-fun temp754_16 () (_ BitVec 64))
(declare-fun temp754_17 () (_ BitVec 64))
(declare-fun temp754_18 () (_ BitVec 64))
(declare-fun temp754_19 () (_ BitVec 64))
(declare-fun temp754_20 () (_ BitVec 64))
(declare-fun temp754_21 () (_ BitVec 64))
(declare-fun temp754_22 () (_ BitVec 64))
(declare-fun temp754_23 () (_ BitVec 64))
(declare-fun temp754_24 () (_ BitVec 64))
(declare-fun temp754_25 () (_ BitVec 64))
(declare-fun temp754_26 () (_ BitVec 64))
(declare-fun temp754_27 () (_ BitVec 64))
(declare-fun temp754_28 () (_ BitVec 64))
(declare-fun temp754_29 () (_ BitVec 64))
(declare-fun temp754_30 () (_ BitVec 64))
(declare-fun temp754_31 () (_ BitVec 64))
(declare-fun temp754_32 () (_ BitVec 64))
(declare-fun temp754_33 () (_ BitVec 64))
(declare-fun temp754_34 () (_ BitVec 64))
(declare-fun temp754_35 () (_ BitVec 64))
(declare-fun temp754_36 () (_ BitVec 64))
(declare-fun temp754_37 () (_ BitVec 64))
(declare-fun temp754_38 () (_ BitVec 64))
(declare-fun temp754_39 () (_ BitVec 64))
(declare-fun temp754_40 () (_ BitVec 64))
(declare-fun temp754_41 () (_ BitVec 64))
(declare-fun temp754_42 () (_ BitVec 64))
(declare-fun temp754_43 () (_ BitVec 64))
(declare-fun temp754_44 () (_ BitVec 64))
(declare-fun temp754_45 () (_ BitVec 64))
(declare-fun temp754_46 () (_ BitVec 64))
(declare-fun temp754_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp754_48 () (_ BitVec 64))
(declare-fun temp754_49 () (_ BitVec 64))
(declare-fun temp754_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp754_51 () (_ BitVec 64))
(declare-fun temp754_52 () (_ BitVec 64))
(declare-fun temp754_53 () (_ BitVec 64))
(declare-fun temp754_54 () (_ BitVec 64))
(declare-fun temp754_55 () (_ BitVec 64))
(declare-fun temp754_56 () (_ BitVec 64))
(declare-fun temp754_57 () (_ BitVec 64))
(declare-fun temp754_58 () (_ BitVec 64))
(declare-fun temp754_59 () (_ BitVec 64))
(declare-fun temp754_60 () (_ BitVec 64))
(declare-fun temp754_61 () (_ BitVec 64))
(declare-fun temp754_62 () (_ BitVec 64))
(declare-fun temp754_63 () (_ BitVec 64))
(declare-fun temp754_64 () (_ BitVec 64))
(declare-fun temp754_65 () (_ BitVec 64))
(declare-fun temp754_66 () (_ BitVec 64))
(declare-fun temp754_67 () (_ BitVec 64))
(declare-fun temp754_68 () (_ BitVec 64))
(declare-fun temp754_69 () (_ BitVec 64))
(declare-fun temp754_70 () (_ BitVec 64))
(declare-fun temp754_71 () (_ BitVec 64))
(declare-fun temp754_72 () (_ BitVec 64))
(declare-fun temp754_73 () (_ BitVec 64))
(declare-fun temp754_74 () (_ BitVec 64))
(declare-fun temp754_75 () (_ BitVec 64))
(declare-fun temp754_76 () (_ BitVec 64))
(declare-fun temp754_77 () (_ BitVec 64))
(declare-fun temp754_78 () (_ BitVec 64))
(declare-fun temp754_79 () (_ BitVec 64))
(declare-fun temp754_80 () (_ BitVec 64))
(declare-fun temp754_81 () (_ BitVec 64))
(declare-fun temp754_82 () (_ BitVec 64))
(declare-fun temp754_83 () (_ BitVec 64))
(declare-fun temp754_84 () (_ BitVec 64))
(declare-fun temp754_85 () (_ BitVec 64))
(declare-fun temp754_86 () (_ BitVec 64))
(declare-fun temp754_87 () (_ BitVec 64))
(declare-fun temp754_88 () (_ BitVec 64))
(declare-fun temp754_89 () (_ BitVec 64))
(declare-fun temp754_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp754_91 () (_ BitVec 64))
(declare-fun temp754_92 () (_ BitVec 64))
(declare-fun temp754_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp754_94 () (_ BitVec 64))
(declare-fun temp754_95 () (_ BitVec 64))
(declare-fun temp754_96 () (_ BitVec 64))
(declare-fun temp754_97 () (_ BitVec 64))
(declare-fun temp754_98 () (_ BitVec 64))
(declare-fun temp754_99 () (_ BitVec 64))
(declare-fun temp754_100 () (_ BitVec 64))
(declare-fun temp754_101 () (_ BitVec 64))
(declare-fun temp754_102 () (_ BitVec 64))
(declare-fun temp754_103 () (_ BitVec 64))
(declare-fun temp754_104 () (_ BitVec 64))
(declare-fun temp754_105 () (_ BitVec 64))
(declare-fun temp754_106 () (_ BitVec 64))
(declare-fun temp754_107 () (_ BitVec 64))
(declare-fun temp754_108 () (_ BitVec 64))
(declare-fun temp754_109 () (_ BitVec 64))
(declare-fun temp754_110 () (_ BitVec 64))
(declare-fun temp754_111 () (_ BitVec 64))
(declare-fun temp754_112 () (_ BitVec 64))
(declare-fun temp754_113 () (_ BitVec 64))
(declare-fun temp754_114 () (_ BitVec 64))
(declare-fun temp754_115 () (_ BitVec 64))
(declare-fun temp754_116 () (_ BitVec 64))
(declare-fun temp754_117 () (_ BitVec 64))
(declare-fun temp754_118 () (_ BitVec 64))
(declare-fun temp754_119 () (_ BitVec 64))
(declare-fun temp754_120 () (_ BitVec 64))
(declare-fun temp754_121 () (_ BitVec 64))
(declare-fun temp754_122 () (_ BitVec 64))
(declare-fun temp754_123 () (_ BitVec 64))
(declare-fun temp754_124 () (_ BitVec 64))
(declare-fun temp754_125 () (_ BitVec 64))
(declare-fun temp754_126 () (_ BitVec 64))
(declare-fun temp754_127 () (_ BitVec 64))
(declare-fun temp754_128 () (_ BitVec 64))
(declare-fun temp754_129 () (_ BitVec 64))
(declare-fun temp754_130 () (_ BitVec 64))
(declare-fun temp754_131 () (_ BitVec 64))
(declare-fun temp754_132 () (_ BitVec 64))
(declare-fun temp754_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp754_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp754_135 () (_ BitVec 64))
(declare-fun temp754_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp754_137 () (_ BitVec 64))
(declare-fun temp754_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp754_139 () (_ BitVec 64))
(declare-fun temp754_140 () (_ BitVec 64))
(declare-fun temp754_141 () (_ BitVec 64))
(declare-fun temp754_142 () (_ BitVec 64))
(declare-fun temp754_143 () (_ BitVec 64))
(declare-fun temp754_144 () (_ BitVec 64))
(declare-fun temp754_145 () (_ BitVec 64))
(declare-fun temp754_146 () (_ BitVec 64))
(declare-fun temp754_147 () (_ BitVec 64))
(declare-fun temp754_148 () (_ BitVec 64))
(declare-fun temp754_149 () (_ BitVec 64))
(declare-fun temp754_150 () (_ BitVec 64))
(declare-fun temp754_151 () (_ BitVec 64))
(declare-fun temp754_152 () (_ BitVec 64))
(declare-fun temp754_153 () (_ BitVec 64))
(declare-fun temp754_154 () (_ BitVec 64))
(declare-fun temp754_156 () (_ BitVec 64))
(declare-fun temp754_157 () (_ BitVec 64))
(declare-fun temp754_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp754_158 () (_ BitVec 64))
(declare-fun temp754_159 () (_ BitVec 64))
(declare-fun temp754_161 () (_ BitVec 64))
(declare-fun temp754_162 () (_ BitVec 64))
(declare-fun temp754_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp754_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp754_164 () (_ BitVec 64))
(declare-fun temp754_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp754_166 () (_ BitVec 64))
(declare-fun temp754_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp754_168 () (_ BitVec 64))
(declare-fun temp754_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp754_170 () (_ BitVec 64))
(declare-fun temp754_171 () (_ BitVec 64))
(declare-fun temp754_172 () (_ BitVec 64))
(declare-fun temp754_173 () (_ BitVec 64))
(declare-fun temp754_174 () (_ BitVec 64))
(declare-fun temp754_175 () (_ BitVec 64))
(declare-fun temp754_176 () (_ BitVec 64))
(declare-fun temp754_177 () (_ BitVec 64))
(declare-fun temp754_178 () (_ BitVec 64))
(declare-fun temp754_179 () (_ BitVec 64))
(declare-fun temp754_180 () (_ BitVec 64))
(declare-fun temp754_181 () (_ BitVec 64))
(declare-fun temp754_182 () (_ BitVec 64))
(declare-fun temp754_183 () (_ BitVec 64))
(declare-fun temp754_184 () (_ BitVec 64))
(declare-fun temp754_185 () (_ BitVec 64))
(declare-fun temp754_186 () (_ BitVec 64))
(declare-fun temp754_187 () (_ BitVec 64))
(declare-fun temp754_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp754_189 () (_ BitVec 64))
(declare-fun temp754_191 () (_ BitVec 64))
(declare-fun temp754_192 () (_ BitVec 64))
(declare-fun temp754_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp754_193 () (_ BitVec 64))
(declare-fun temp754_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp754_195 () (_ BitVec 64))
(declare-fun temp754_196 () (_ BitVec 64))
(declare-fun temp754_197 () (_ BitVec 64))
(declare-fun temp754_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp754_199 () (_ BitVec 64))
(declare-fun temp754_200 () (_ BitVec 64))
(declare-fun temp754_201 () (_ BitVec 64))
(declare-fun temp754_202 () (_ BitVec 64))
(declare-fun temp754_203 () (_ BitVec 64))
(declare-fun temp754_204 () (_ BitVec 64))
(declare-fun temp754_205 () (_ BitVec 64))
(declare-fun temp754_206 () (_ BitVec 64))
(declare-fun temp754_207 () (_ BitVec 64))
(declare-fun temp754_208 () (_ BitVec 64))
(declare-fun temp754_209 () (_ BitVec 64))
(declare-fun temp754_210 () (_ BitVec 64))
(declare-fun temp754_211 () (_ BitVec 64))
(declare-fun temp754_212 () (_ BitVec 64))
(declare-fun temp754_213 () (_ BitVec 64))
(declare-fun temp754_214 () (_ BitVec 64))
(declare-fun temp754_215 () (_ BitVec 64))
(declare-fun temp754_216 () (_ BitVec 64))
(declare-fun temp754_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp754_218 () (_ BitVec 64))
(declare-fun temp754_220 () (_ BitVec 64))
(declare-fun temp754_221 () (_ BitVec 64))
(declare-fun temp754_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp754_222 () (_ BitVec 64))
(declare-fun temp754_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp754_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp754_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp754_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp754_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp754_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp754_229 () (_ BitVec 64))
(declare-fun temp754_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp754_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp754_232 () (_ BitVec 64))
(declare-fun temp754_233 () (_ BitVec 64))
(declare-fun temp754_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp754_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp754_236 () (_ BitVec 64))
(declare-fun temp754_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp754_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp754_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp754_241 () (_ BitVec 64))
(declare-fun temp754_240 () (_ BitVec 64))
(declare-fun temp754_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp754_243 () (_ BitVec 64))
(declare-fun temp754_244 () (_ BitVec 64))
(declare-fun temp754_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp754_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp754_247 () (_ BitVec 64))
(declare-fun temp754_248 () (_ BitVec 64))
(assert (= temp754_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp754_1)))
(assert (= temp754_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp754_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_3 #x0000000000000000))
(assert (= var79869 temp754_3))
(assert (= temp754_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp754_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_5 #x0000000000000000))
(assert (= var79914 temp754_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp754_6 #x0000000000000000))
(assert (= temp754_7 temp754_6))
(assert (= temp754_8 (select ARGNAME_padding_NAMEEND_VAL temp754_7)))
(assert (= temp754_9 #x0000000000000001))
(assert (= temp754_10 temp754_9))
(assert (= temp754_11 (select ARGNAME_padding_NAMEEND_VAL temp754_10)))
(assert (= temp754_12 #x0000000000000002))
(assert (= temp754_13 temp754_12))
(assert (= temp754_14 (select ARGNAME_padding_NAMEEND_VAL temp754_13)))
(assert (= temp754_15 #x0000000000000003))
(assert (= temp754_16 temp754_15))
(assert (= temp754_17 (select ARGNAME_padding_NAMEEND_VAL temp754_16)))
(assert (= temp754_18 #x0000000000000004))
(assert (= temp754_19 temp754_18))
(assert (= temp754_20 (select ARGNAME_padding_NAMEEND_VAL temp754_19)))
(assert (= temp754_21 #x0000000000000005))
(assert (= temp754_22 temp754_21))
(assert (= temp754_23 (select ARGNAME_padding_NAMEEND_VAL temp754_22)))
(assert (= temp754_24 #x0000000000000000))
(assert (= temp754_25 #x0000000000000000))
(assert (= temp754_26 temp754_25))
(assert (= temp754_27 (select ARGNAME_padding_NAMEEND_VAL temp754_26)))
(assert (= temp754_28 #x0000000000000000))
(assert (= temp754_29 #x0000000000000001))
(assert (= temp754_30 temp754_29))
(assert (= temp754_31 (select ARGNAME_padding_NAMEEND_VAL temp754_30)))
(assert (= temp754_32 #x0000000000000000))
(assert (= temp754_33 #x0000000000000002))
(assert (= temp754_34 temp754_33))
(assert (= temp754_35 (select ARGNAME_padding_NAMEEND_VAL temp754_34)))
(assert (= temp754_36 #x0000000000000000))
(assert (= temp754_37 #x0000000000000003))
(assert (= temp754_38 temp754_37))
(assert (= temp754_39 (select ARGNAME_padding_NAMEEND_VAL temp754_38)))
(assert (= temp754_40 #x0000000000000000))
(assert (= temp754_41 #x0000000000000004))
(assert (= temp754_42 temp754_41))
(assert (= temp754_43 (select ARGNAME_padding_NAMEEND_VAL temp754_42)))
(assert (= temp754_44 #x0000000000000000))
(assert (= temp754_45 #x0000000000000005))
(assert (= temp754_46 temp754_45))
(assert (= temp754_47 (select ARGNAME_padding_NAMEEND_VAL temp754_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp754_27 temp754_24)
             (bvslt temp754_31 temp754_28)
             (bvslt temp754_35 temp754_32)
             (bvslt temp754_39 temp754_36)
             (bvslt temp754_43 temp754_40)
             (bvslt temp754_47 temp754_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_48 #x0000000000000000))
(assert (= var1322786 temp754_48))
(assert (= temp754_49 #x0000000000000000))
(assert (= temp754_50 temp754_49))
(assert (= temp754_51 (select ARGNAME_output_padding_NAMEEND_VAL temp754_50)))
(assert (= temp754_52 #x0000000000000001))
(assert (= temp754_53 temp754_52))
(assert (= temp754_54 (select ARGNAME_output_padding_NAMEEND_VAL temp754_53)))
(assert (= temp754_55 #x0000000000000002))
(assert (= temp754_56 temp754_55))
(assert (= temp754_57 (select ARGNAME_output_padding_NAMEEND_VAL temp754_56)))
(assert (= temp754_58 #x0000000000000003))
(assert (= temp754_59 temp754_58))
(assert (= temp754_60 (select ARGNAME_output_padding_NAMEEND_VAL temp754_59)))
(assert (= temp754_61 #x0000000000000004))
(assert (= temp754_62 temp754_61))
(assert (= temp754_63 (select ARGNAME_output_padding_NAMEEND_VAL temp754_62)))
(assert (= temp754_64 #x0000000000000005))
(assert (= temp754_65 temp754_64))
(assert (= temp754_66 (select ARGNAME_output_padding_NAMEEND_VAL temp754_65)))
(assert (= temp754_67 #x0000000000000000))
(assert (= temp754_68 #x0000000000000000))
(assert (= temp754_69 temp754_68))
(assert (= temp754_70 (select ARGNAME_output_padding_NAMEEND_VAL temp754_69)))
(assert (= temp754_71 #x0000000000000000))
(assert (= temp754_72 #x0000000000000001))
(assert (= temp754_73 temp754_72))
(assert (= temp754_74 (select ARGNAME_output_padding_NAMEEND_VAL temp754_73)))
(assert (= temp754_75 #x0000000000000000))
(assert (= temp754_76 #x0000000000000002))
(assert (= temp754_77 temp754_76))
(assert (= temp754_78 (select ARGNAME_output_padding_NAMEEND_VAL temp754_77)))
(assert (= temp754_79 #x0000000000000000))
(assert (= temp754_80 #x0000000000000003))
(assert (= temp754_81 temp754_80))
(assert (= temp754_82 (select ARGNAME_output_padding_NAMEEND_VAL temp754_81)))
(assert (= temp754_83 #x0000000000000000))
(assert (= temp754_84 #x0000000000000004))
(assert (= temp754_85 temp754_84))
(assert (= temp754_86 (select ARGNAME_output_padding_NAMEEND_VAL temp754_85)))
(assert (= temp754_87 #x0000000000000000))
(assert (= temp754_88 #x0000000000000005))
(assert (= temp754_89 temp754_88))
(assert (= temp754_90 (select ARGNAME_output_padding_NAMEEND_VAL temp754_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp754_70 temp754_67)
             (bvslt temp754_74 temp754_71)
             (bvslt temp754_78 temp754_75)
             (bvslt temp754_82 temp754_79)
             (bvslt temp754_86 temp754_83)
             (bvslt temp754_90 temp754_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_91 #x0000000000000000))
(assert (= var1322797 temp754_91))
(assert (= temp754_92 #x0000000000000000))
(assert (= temp754_93 temp754_92))
(assert (= temp754_94 (select ARGNAME_stride_NAMEEND_VAL temp754_93)))
(assert (= temp754_95 #x0000000000000001))
(assert (= temp754_96 temp754_95))
(assert (= temp754_97 (select ARGNAME_stride_NAMEEND_VAL temp754_96)))
(assert (= temp754_98 #x0000000000000002))
(assert (= temp754_99 temp754_98))
(assert (= temp754_100 (select ARGNAME_stride_NAMEEND_VAL temp754_99)))
(assert (= temp754_101 #x0000000000000003))
(assert (= temp754_102 temp754_101))
(assert (= temp754_103 (select ARGNAME_stride_NAMEEND_VAL temp754_102)))
(assert (= temp754_104 #x0000000000000004))
(assert (= temp754_105 temp754_104))
(assert (= temp754_106 (select ARGNAME_stride_NAMEEND_VAL temp754_105)))
(assert (= temp754_107 #x0000000000000005))
(assert (= temp754_108 temp754_107))
(assert (= temp754_109 (select ARGNAME_stride_NAMEEND_VAL temp754_108)))
(assert (= temp754_110 #x0000000000000000))
(assert (= temp754_111 #x0000000000000000))
(assert (= temp754_112 temp754_111))
(assert (= temp754_113 (select ARGNAME_stride_NAMEEND_VAL temp754_112)))
(assert (= temp754_114 #x0000000000000000))
(assert (= temp754_115 #x0000000000000001))
(assert (= temp754_116 temp754_115))
(assert (= temp754_117 (select ARGNAME_stride_NAMEEND_VAL temp754_116)))
(assert (= temp754_118 #x0000000000000000))
(assert (= temp754_119 #x0000000000000002))
(assert (= temp754_120 temp754_119))
(assert (= temp754_121 (select ARGNAME_stride_NAMEEND_VAL temp754_120)))
(assert (= temp754_122 #x0000000000000000))
(assert (= temp754_123 #x0000000000000003))
(assert (= temp754_124 temp754_123))
(assert (= temp754_125 (select ARGNAME_stride_NAMEEND_VAL temp754_124)))
(assert (= temp754_126 #x0000000000000000))
(assert (= temp754_127 #x0000000000000004))
(assert (= temp754_128 temp754_127))
(assert (= temp754_129 (select ARGNAME_stride_NAMEEND_VAL temp754_128)))
(assert (= temp754_130 #x0000000000000000))
(assert (= temp754_131 #x0000000000000005))
(assert (= temp754_132 temp754_131))
(assert (= temp754_133 (select ARGNAME_stride_NAMEEND_VAL temp754_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp754_113 temp754_110)
             (bvsle temp754_117 temp754_114)
             (bvsle temp754_121 temp754_118)
             (bvsle temp754_125 temp754_122)
             (bvsle temp754_129 temp754_126)
             (bvsle temp754_133 temp754_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_134 #x0000000000000000))
(assert (= var1322807 temp754_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_135 #x0000000000000001))
(assert (= var1322819 temp754_135))
(assert (= temp754_136 #x0000000000000000))
(assert (= var1310898 temp754_136))
(assert (= temp754_137 #x0000000000000000))
(assert (= temp754_138 temp754_137))
(assert (= temp754_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_138)))
(assert (= temp754_140 #x0000000000000001))
(assert (= temp754_141 temp754_140))
(assert (= temp754_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_141)))
(assert (= temp754_143 #x0000000000000002))
(assert (= temp754_144 temp754_143))
(assert (= temp754_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_144)))
(assert (= temp754_146 #x0000000000000003))
(assert (= temp754_147 temp754_146))
(assert (= temp754_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_147)))
(assert (= temp754_149 #x0000000000000004))
(assert (= temp754_150 temp754_149))
(assert (= temp754_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_150)))
(assert (= temp754_152 #x0000000000000005))
(assert (= temp754_153 temp754_152))
(assert (= temp754_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_153)))
(assert (= temp754_156 var1310898))
(assert (= temp754_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_156)))
(assert (= temp754_155 temp754_157))
(assert (= var1322852
   (ite (bvslt temp754_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_158 #x0000000000000000))
(assert (= var1322852 temp754_158))
(assert (= temp754_159 #x0000000000000000))
(assert (= var1310898 temp754_159))
(assert (= temp754_161 var1310898))
(assert (= temp754_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_161)))
(assert (= temp754_160 temp754_162))
(assert (= var1322874 (bvsmod temp754_160 ARGNAME_groups_NAMEEND)))
(assert (= temp754_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp754_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp754_164 #x0000000000000001))
(assert (= var1322875 temp754_164))
(assert (= temp754_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp754_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_166 #x0000000000000001))
(assert (= var1322895 temp754_166))
(assert (= temp754_167 #x0000000000000001))
(assert (= var1311786 temp754_167))
(assert (= temp754_168 #x0000000000000000))
(assert (= temp754_169 temp754_168))
(assert (= temp754_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp754_169)))
(assert (= temp754_171 #x0000000000000001))
(assert (= temp754_172 temp754_171))
(assert (= temp754_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp754_172)))
(assert (= temp754_174 #x0000000000000002))
(assert (= temp754_175 temp754_174))
(assert (= temp754_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp754_175)))
(assert (= temp754_177 #x0000000000000003))
(assert (= temp754_178 temp754_177))
(assert (= temp754_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp754_178)))
(assert (= temp754_180 #x0000000000000004))
(assert (= temp754_181 temp754_180))
(assert (= temp754_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp754_181)))
(assert (= temp754_183 #x0000000000000005))
(assert (= temp754_184 temp754_183))
(assert (= temp754_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp754_184)))
(assert (= temp754_186 #x0000000000000000))
(assert (= temp754_187
   (ite (bvslt var1311786 temp754_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp754_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp754_187)))
(assert (= var1322903 temp754_188))
(assert (bvslt (ite (bvslt var1311786 temp754_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp754_189 #x0000000000000001))
(assert (= var1311786 temp754_189))
(assert (= temp754_191 var1311786))
(assert (= temp754_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_191)))
(assert (= temp754_190 temp754_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp754_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp754_193 #x0000000000000001))
(assert (= var1322908 temp754_193))
(assert (= temp754_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp754_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_195 #x0000000000000001))
(assert (= var1322975 temp754_195))
(assert (= temp754_196 #x0000000000000000))
(assert (= var1310898 temp754_196))
(assert (= temp754_197 #x0000000000000000))
(assert (= temp754_198 temp754_197))
(assert (= temp754_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp754_198)))
(assert (= temp754_200 #x0000000000000001))
(assert (= temp754_201 temp754_200))
(assert (= temp754_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp754_201)))
(assert (= temp754_203 #x0000000000000002))
(assert (= temp754_204 temp754_203))
(assert (= temp754_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp754_204)))
(assert (= temp754_206 #x0000000000000003))
(assert (= temp754_207 temp754_206))
(assert (= temp754_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp754_207)))
(assert (= temp754_209 #x0000000000000004))
(assert (= temp754_210 temp754_209))
(assert (= temp754_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp754_210)))
(assert (= temp754_212 #x0000000000000005))
(assert (= temp754_213 temp754_212))
(assert (= temp754_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp754_213)))
(assert (= temp754_215 #x0000000000000000))
(assert (= temp754_216
   (ite (bvslt var1310898 temp754_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp754_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp754_216)))
(assert (= var1322977 temp754_217))
(assert (bvslt (ite (bvslt var1310898 temp754_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp754_218 #x0000000000000000))
(assert (= var1310898 temp754_218))
(assert (= temp754_220 var1310898))
(assert (= temp754_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp754_220)))
(assert (= temp754_219 temp754_221))
(assert (= var1322980
   (ite (= var1322977 temp754_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp754_222 #x0000000000000001))
(assert (= var1322980 temp754_222))
(assert (= temp754_223 #x0000000000000002))
(assert (= var1848169 temp754_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp754_225 #x0000000000000001))
(assert (= var1323065 temp754_225))
(assert (= temp754_226 #x0000000000000001))
(assert (= var3486735 temp754_226))
(assert (= temp754_227 #x0000000000000001))
(assert (= var3814415 temp754_227))
(assert (= temp754_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp754_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_229 #x0000000000000001))
(assert (= var79986 temp754_229))
(assert (= temp754_230 #x0000000000000001))
(assert (= var80116 temp754_230))
(assert (= var4796905 var80116))
(assert (= temp754_231 #x0000000000000000))
(assert (= var4784306 temp754_231))
(assert (= temp754_232 #x0000000000000000))
(assert (= temp754_233
   (ite (bvslt var4784306 temp754_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp754_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp754_233)))
(assert (= var4796924 temp754_234))
(assert (bvslt (ite (bvslt var4784306 temp754_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp754_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp754_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp754_236 #x0000000000000001))
(assert (= var4796925 temp754_236))
(assert (= temp754_237 #x0000000000000000))
(assert (= var4996927 temp754_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp754_238 #x0000000000000002))
(assert (= var5125763 temp754_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp754_239 #x0000000000000000))
(assert (= var5191324 temp754_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp754_241 #xffffffffffffffff))
(assert (= temp754_240 temp754_241))
(assert (= temp754_242 #x0000000000000001))
(assert (= var66602 temp754_242))
(assert (= temp754_243 #x0000000000000000))
(assert (= temp754_244
   (ite (bvslt var66602 temp754_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp754_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp754_244)))
(assert (= var80523 temp754_245))
(assert (bvslt (ite (bvslt var66602 temp754_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp754_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp754_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp754_247 #x0000000000000000))
(assert (= var80524 temp754_247))
(assert (= temp754_248 #x0000000000000001))
(assert (= var79986 temp754_248))
(model-add temp754_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp754_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp754_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






