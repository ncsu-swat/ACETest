(declare-fun temp26_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp26_2 () (_ BitVec 64))
(declare-fun temp26_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp26_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp26_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp26_6 () (_ BitVec 64))
(declare-fun temp26_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp26_8 () (_ BitVec 64))
(declare-fun temp26_9 () (_ BitVec 64))
(declare-fun temp26_10 () (_ BitVec 64))
(declare-fun temp26_11 () (_ BitVec 64))
(declare-fun temp26_12 () (_ BitVec 64))
(declare-fun temp26_13 () (_ BitVec 64))
(declare-fun temp26_14 () (_ BitVec 64))
(declare-fun temp26_15 () (_ BitVec 64))
(declare-fun temp26_16 () (_ BitVec 64))
(declare-fun temp26_17 () (_ BitVec 64))
(declare-fun temp26_18 () (_ BitVec 64))
(declare-fun temp26_19 () (_ BitVec 64))
(declare-fun temp26_20 () (_ BitVec 64))
(declare-fun temp26_21 () (_ BitVec 64))
(declare-fun temp26_22 () (_ BitVec 64))
(declare-fun temp26_23 () (_ BitVec 64))
(declare-fun temp26_24 () (_ BitVec 64))
(declare-fun temp26_25 () (_ BitVec 64))
(declare-fun temp26_26 () (_ BitVec 64))
(declare-fun temp26_27 () (_ BitVec 64))
(declare-fun temp26_28 () (_ BitVec 64))
(declare-fun temp26_29 () (_ BitVec 64))
(declare-fun temp26_30 () (_ BitVec 64))
(declare-fun temp26_31 () (_ BitVec 64))
(declare-fun temp26_32 () (_ BitVec 64))
(declare-fun temp26_33 () (_ BitVec 64))
(declare-fun temp26_34 () (_ BitVec 64))
(declare-fun temp26_35 () (_ BitVec 64))
(declare-fun temp26_36 () (_ BitVec 64))
(declare-fun temp26_37 () (_ BitVec 64))
(declare-fun temp26_38 () (_ BitVec 64))
(declare-fun temp26_39 () (_ BitVec 64))
(declare-fun temp26_40 () (_ BitVec 64))
(declare-fun temp26_41 () (_ BitVec 64))
(declare-fun temp26_42 () (_ BitVec 64))
(declare-fun temp26_43 () (_ BitVec 64))
(declare-fun temp26_44 () (_ BitVec 64))
(declare-fun temp26_45 () (_ BitVec 64))
(declare-fun temp26_46 () (_ BitVec 64))
(declare-fun temp26_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp26_48 () (_ BitVec 64))
(declare-fun temp26_49 () (_ BitVec 64))
(declare-fun temp26_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp26_51 () (_ BitVec 64))
(declare-fun temp26_52 () (_ BitVec 64))
(declare-fun temp26_53 () (_ BitVec 64))
(declare-fun temp26_54 () (_ BitVec 64))
(declare-fun temp26_55 () (_ BitVec 64))
(declare-fun temp26_56 () (_ BitVec 64))
(declare-fun temp26_57 () (_ BitVec 64))
(declare-fun temp26_58 () (_ BitVec 64))
(declare-fun temp26_59 () (_ BitVec 64))
(declare-fun temp26_60 () (_ BitVec 64))
(declare-fun temp26_61 () (_ BitVec 64))
(declare-fun temp26_62 () (_ BitVec 64))
(declare-fun temp26_63 () (_ BitVec 64))
(declare-fun temp26_64 () (_ BitVec 64))
(declare-fun temp26_65 () (_ BitVec 64))
(declare-fun temp26_66 () (_ BitVec 64))
(declare-fun temp26_67 () (_ BitVec 64))
(declare-fun temp26_68 () (_ BitVec 64))
(declare-fun temp26_69 () (_ BitVec 64))
(declare-fun temp26_70 () (_ BitVec 64))
(declare-fun temp26_71 () (_ BitVec 64))
(declare-fun temp26_72 () (_ BitVec 64))
(declare-fun temp26_73 () (_ BitVec 64))
(declare-fun temp26_74 () (_ BitVec 64))
(declare-fun temp26_75 () (_ BitVec 64))
(declare-fun temp26_76 () (_ BitVec 64))
(declare-fun temp26_77 () (_ BitVec 64))
(declare-fun temp26_78 () (_ BitVec 64))
(declare-fun temp26_79 () (_ BitVec 64))
(declare-fun temp26_80 () (_ BitVec 64))
(declare-fun temp26_81 () (_ BitVec 64))
(declare-fun temp26_82 () (_ BitVec 64))
(declare-fun temp26_83 () (_ BitVec 64))
(declare-fun temp26_84 () (_ BitVec 64))
(declare-fun temp26_85 () (_ BitVec 64))
(declare-fun temp26_86 () (_ BitVec 64))
(declare-fun temp26_87 () (_ BitVec 64))
(declare-fun temp26_88 () (_ BitVec 64))
(declare-fun temp26_89 () (_ BitVec 64))
(declare-fun temp26_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp26_91 () (_ BitVec 64))
(declare-fun temp26_92 () (_ BitVec 64))
(declare-fun temp26_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp26_94 () (_ BitVec 64))
(declare-fun temp26_95 () (_ BitVec 64))
(declare-fun temp26_96 () (_ BitVec 64))
(declare-fun temp26_97 () (_ BitVec 64))
(declare-fun temp26_98 () (_ BitVec 64))
(declare-fun temp26_99 () (_ BitVec 64))
(declare-fun temp26_100 () (_ BitVec 64))
(declare-fun temp26_101 () (_ BitVec 64))
(declare-fun temp26_102 () (_ BitVec 64))
(declare-fun temp26_103 () (_ BitVec 64))
(declare-fun temp26_104 () (_ BitVec 64))
(declare-fun temp26_105 () (_ BitVec 64))
(declare-fun temp26_106 () (_ BitVec 64))
(declare-fun temp26_107 () (_ BitVec 64))
(declare-fun temp26_108 () (_ BitVec 64))
(declare-fun temp26_109 () (_ BitVec 64))
(declare-fun temp26_110 () (_ BitVec 64))
(declare-fun temp26_111 () (_ BitVec 64))
(declare-fun temp26_112 () (_ BitVec 64))
(declare-fun temp26_113 () (_ BitVec 64))
(declare-fun temp26_114 () (_ BitVec 64))
(declare-fun temp26_115 () (_ BitVec 64))
(declare-fun temp26_116 () (_ BitVec 64))
(declare-fun temp26_117 () (_ BitVec 64))
(declare-fun temp26_118 () (_ BitVec 64))
(declare-fun temp26_119 () (_ BitVec 64))
(declare-fun temp26_120 () (_ BitVec 64))
(declare-fun temp26_121 () (_ BitVec 64))
(declare-fun temp26_122 () (_ BitVec 64))
(declare-fun temp26_123 () (_ BitVec 64))
(declare-fun temp26_124 () (_ BitVec 64))
(declare-fun temp26_125 () (_ BitVec 64))
(declare-fun temp26_126 () (_ BitVec 64))
(declare-fun temp26_127 () (_ BitVec 64))
(declare-fun temp26_128 () (_ BitVec 64))
(declare-fun temp26_129 () (_ BitVec 64))
(declare-fun temp26_130 () (_ BitVec 64))
(declare-fun temp26_131 () (_ BitVec 64))
(declare-fun temp26_132 () (_ BitVec 64))
(declare-fun temp26_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp26_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp26_135 () (_ BitVec 64))
(declare-fun temp26_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp26_137 () (_ BitVec 64))
(declare-fun temp26_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp26_139 () (_ BitVec 64))
(declare-fun temp26_140 () (_ BitVec 64))
(declare-fun temp26_141 () (_ BitVec 64))
(declare-fun temp26_142 () (_ BitVec 64))
(declare-fun temp26_143 () (_ BitVec 64))
(declare-fun temp26_144 () (_ BitVec 64))
(declare-fun temp26_145 () (_ BitVec 64))
(declare-fun temp26_146 () (_ BitVec 64))
(declare-fun temp26_147 () (_ BitVec 64))
(declare-fun temp26_148 () (_ BitVec 64))
(declare-fun temp26_149 () (_ BitVec 64))
(declare-fun temp26_150 () (_ BitVec 64))
(declare-fun temp26_151 () (_ BitVec 64))
(declare-fun temp26_152 () (_ BitVec 64))
(declare-fun temp26_153 () (_ BitVec 64))
(declare-fun temp26_154 () (_ BitVec 64))
(declare-fun temp26_156 () (_ BitVec 64))
(declare-fun temp26_157 () (_ BitVec 64))
(declare-fun temp26_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp26_158 () (_ BitVec 64))
(declare-fun temp26_159 () (_ BitVec 64))
(declare-fun temp26_161 () (_ BitVec 64))
(declare-fun temp26_162 () (_ BitVec 64))
(declare-fun temp26_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp26_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp26_164 () (_ BitVec 64))
(declare-fun temp26_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp26_166 () (_ BitVec 64))
(declare-fun temp26_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp26_168 () (_ BitVec 64))
(declare-fun temp26_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp26_170 () (_ BitVec 64))
(declare-fun temp26_171 () (_ BitVec 64))
(declare-fun temp26_172 () (_ BitVec 64))
(declare-fun temp26_173 () (_ BitVec 64))
(declare-fun temp26_174 () (_ BitVec 64))
(declare-fun temp26_175 () (_ BitVec 64))
(declare-fun temp26_176 () (_ BitVec 64))
(declare-fun temp26_177 () (_ BitVec 64))
(declare-fun temp26_178 () (_ BitVec 64))
(declare-fun temp26_179 () (_ BitVec 64))
(declare-fun temp26_180 () (_ BitVec 64))
(declare-fun temp26_181 () (_ BitVec 64))
(declare-fun temp26_182 () (_ BitVec 64))
(declare-fun temp26_183 () (_ BitVec 64))
(declare-fun temp26_184 () (_ BitVec 64))
(declare-fun temp26_185 () (_ BitVec 64))
(declare-fun temp26_186 () (_ BitVec 64))
(declare-fun temp26_187 () (_ BitVec 64))
(declare-fun temp26_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp26_189 () (_ BitVec 64))
(declare-fun temp26_191 () (_ BitVec 64))
(declare-fun temp26_192 () (_ BitVec 64))
(declare-fun temp26_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp26_193 () (_ BitVec 64))
(declare-fun temp26_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp26_195 () (_ BitVec 64))
(declare-fun temp26_196 () (_ BitVec 64))
(declare-fun temp26_197 () (_ BitVec 64))
(declare-fun temp26_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp26_199 () (_ BitVec 64))
(declare-fun temp26_200 () (_ BitVec 64))
(declare-fun temp26_201 () (_ BitVec 64))
(declare-fun temp26_202 () (_ BitVec 64))
(declare-fun temp26_203 () (_ BitVec 64))
(declare-fun temp26_204 () (_ BitVec 64))
(declare-fun temp26_205 () (_ BitVec 64))
(declare-fun temp26_206 () (_ BitVec 64))
(declare-fun temp26_207 () (_ BitVec 64))
(declare-fun temp26_208 () (_ BitVec 64))
(declare-fun temp26_209 () (_ BitVec 64))
(declare-fun temp26_210 () (_ BitVec 64))
(declare-fun temp26_211 () (_ BitVec 64))
(declare-fun temp26_212 () (_ BitVec 64))
(declare-fun temp26_213 () (_ BitVec 64))
(declare-fun temp26_214 () (_ BitVec 64))
(declare-fun temp26_215 () (_ BitVec 64))
(declare-fun temp26_216 () (_ BitVec 64))
(declare-fun temp26_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp26_218 () (_ BitVec 64))
(declare-fun temp26_220 () (_ BitVec 64))
(declare-fun temp26_221 () (_ BitVec 64))
(declare-fun temp26_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp26_222 () (_ BitVec 64))
(declare-fun temp26_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp26_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp26_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp26_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp26_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp26_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp26_229 () (_ BitVec 64))
(declare-fun temp26_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp26_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp26_232 () (_ BitVec 64))
(declare-fun temp26_233 () (_ BitVec 64))
(declare-fun temp26_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp26_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp26_236 () (_ BitVec 64))
(declare-fun temp26_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp26_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp26_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp26_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp26_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp26_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp26_243 () (_ BitVec 64))
(assert (= temp26_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp26_1)))
(assert (= temp26_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp26_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_3 #x0000000000000000))
(assert (= var79869 temp26_3))
(assert (= temp26_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp26_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_5 #x0000000000000000))
(assert (= var79914 temp26_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp26_6 #x0000000000000000))
(assert (= temp26_7 temp26_6))
(assert (= temp26_8 (select ARGNAME_padding_NAMEEND_VAL temp26_7)))
(assert (= temp26_9 #x0000000000000001))
(assert (= temp26_10 temp26_9))
(assert (= temp26_11 (select ARGNAME_padding_NAMEEND_VAL temp26_10)))
(assert (= temp26_12 #x0000000000000002))
(assert (= temp26_13 temp26_12))
(assert (= temp26_14 (select ARGNAME_padding_NAMEEND_VAL temp26_13)))
(assert (= temp26_15 #x0000000000000003))
(assert (= temp26_16 temp26_15))
(assert (= temp26_17 (select ARGNAME_padding_NAMEEND_VAL temp26_16)))
(assert (= temp26_18 #x0000000000000004))
(assert (= temp26_19 temp26_18))
(assert (= temp26_20 (select ARGNAME_padding_NAMEEND_VAL temp26_19)))
(assert (= temp26_21 #x0000000000000005))
(assert (= temp26_22 temp26_21))
(assert (= temp26_23 (select ARGNAME_padding_NAMEEND_VAL temp26_22)))
(assert (= temp26_24 #x0000000000000000))
(assert (= temp26_25 #x0000000000000000))
(assert (= temp26_26 temp26_25))
(assert (= temp26_27 (select ARGNAME_padding_NAMEEND_VAL temp26_26)))
(assert (= temp26_28 #x0000000000000000))
(assert (= temp26_29 #x0000000000000001))
(assert (= temp26_30 temp26_29))
(assert (= temp26_31 (select ARGNAME_padding_NAMEEND_VAL temp26_30)))
(assert (= temp26_32 #x0000000000000000))
(assert (= temp26_33 #x0000000000000002))
(assert (= temp26_34 temp26_33))
(assert (= temp26_35 (select ARGNAME_padding_NAMEEND_VAL temp26_34)))
(assert (= temp26_36 #x0000000000000000))
(assert (= temp26_37 #x0000000000000003))
(assert (= temp26_38 temp26_37))
(assert (= temp26_39 (select ARGNAME_padding_NAMEEND_VAL temp26_38)))
(assert (= temp26_40 #x0000000000000000))
(assert (= temp26_41 #x0000000000000004))
(assert (= temp26_42 temp26_41))
(assert (= temp26_43 (select ARGNAME_padding_NAMEEND_VAL temp26_42)))
(assert (= temp26_44 #x0000000000000000))
(assert (= temp26_45 #x0000000000000005))
(assert (= temp26_46 temp26_45))
(assert (= temp26_47 (select ARGNAME_padding_NAMEEND_VAL temp26_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp26_27 temp26_24)
             (bvslt temp26_31 temp26_28)
             (bvslt temp26_35 temp26_32)
             (bvslt temp26_39 temp26_36)
             (bvslt temp26_43 temp26_40)
             (bvslt temp26_47 temp26_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_48 #x0000000000000000))
(assert (= var1322786 temp26_48))
(assert (= temp26_49 #x0000000000000000))
(assert (= temp26_50 temp26_49))
(assert (= temp26_51 (select ARGNAME_output_padding_NAMEEND_VAL temp26_50)))
(assert (= temp26_52 #x0000000000000001))
(assert (= temp26_53 temp26_52))
(assert (= temp26_54 (select ARGNAME_output_padding_NAMEEND_VAL temp26_53)))
(assert (= temp26_55 #x0000000000000002))
(assert (= temp26_56 temp26_55))
(assert (= temp26_57 (select ARGNAME_output_padding_NAMEEND_VAL temp26_56)))
(assert (= temp26_58 #x0000000000000003))
(assert (= temp26_59 temp26_58))
(assert (= temp26_60 (select ARGNAME_output_padding_NAMEEND_VAL temp26_59)))
(assert (= temp26_61 #x0000000000000004))
(assert (= temp26_62 temp26_61))
(assert (= temp26_63 (select ARGNAME_output_padding_NAMEEND_VAL temp26_62)))
(assert (= temp26_64 #x0000000000000005))
(assert (= temp26_65 temp26_64))
(assert (= temp26_66 (select ARGNAME_output_padding_NAMEEND_VAL temp26_65)))
(assert (= temp26_67 #x0000000000000000))
(assert (= temp26_68 #x0000000000000000))
(assert (= temp26_69 temp26_68))
(assert (= temp26_70 (select ARGNAME_output_padding_NAMEEND_VAL temp26_69)))
(assert (= temp26_71 #x0000000000000000))
(assert (= temp26_72 #x0000000000000001))
(assert (= temp26_73 temp26_72))
(assert (= temp26_74 (select ARGNAME_output_padding_NAMEEND_VAL temp26_73)))
(assert (= temp26_75 #x0000000000000000))
(assert (= temp26_76 #x0000000000000002))
(assert (= temp26_77 temp26_76))
(assert (= temp26_78 (select ARGNAME_output_padding_NAMEEND_VAL temp26_77)))
(assert (= temp26_79 #x0000000000000000))
(assert (= temp26_80 #x0000000000000003))
(assert (= temp26_81 temp26_80))
(assert (= temp26_82 (select ARGNAME_output_padding_NAMEEND_VAL temp26_81)))
(assert (= temp26_83 #x0000000000000000))
(assert (= temp26_84 #x0000000000000004))
(assert (= temp26_85 temp26_84))
(assert (= temp26_86 (select ARGNAME_output_padding_NAMEEND_VAL temp26_85)))
(assert (= temp26_87 #x0000000000000000))
(assert (= temp26_88 #x0000000000000005))
(assert (= temp26_89 temp26_88))
(assert (= temp26_90 (select ARGNAME_output_padding_NAMEEND_VAL temp26_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp26_70 temp26_67)
             (bvslt temp26_74 temp26_71)
             (bvslt temp26_78 temp26_75)
             (bvslt temp26_82 temp26_79)
             (bvslt temp26_86 temp26_83)
             (bvslt temp26_90 temp26_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_91 #x0000000000000000))
(assert (= var1322797 temp26_91))
(assert (= temp26_92 #x0000000000000000))
(assert (= temp26_93 temp26_92))
(assert (= temp26_94 (select ARGNAME_stride_NAMEEND_VAL temp26_93)))
(assert (= temp26_95 #x0000000000000001))
(assert (= temp26_96 temp26_95))
(assert (= temp26_97 (select ARGNAME_stride_NAMEEND_VAL temp26_96)))
(assert (= temp26_98 #x0000000000000002))
(assert (= temp26_99 temp26_98))
(assert (= temp26_100 (select ARGNAME_stride_NAMEEND_VAL temp26_99)))
(assert (= temp26_101 #x0000000000000003))
(assert (= temp26_102 temp26_101))
(assert (= temp26_103 (select ARGNAME_stride_NAMEEND_VAL temp26_102)))
(assert (= temp26_104 #x0000000000000004))
(assert (= temp26_105 temp26_104))
(assert (= temp26_106 (select ARGNAME_stride_NAMEEND_VAL temp26_105)))
(assert (= temp26_107 #x0000000000000005))
(assert (= temp26_108 temp26_107))
(assert (= temp26_109 (select ARGNAME_stride_NAMEEND_VAL temp26_108)))
(assert (= temp26_110 #x0000000000000000))
(assert (= temp26_111 #x0000000000000000))
(assert (= temp26_112 temp26_111))
(assert (= temp26_113 (select ARGNAME_stride_NAMEEND_VAL temp26_112)))
(assert (= temp26_114 #x0000000000000000))
(assert (= temp26_115 #x0000000000000001))
(assert (= temp26_116 temp26_115))
(assert (= temp26_117 (select ARGNAME_stride_NAMEEND_VAL temp26_116)))
(assert (= temp26_118 #x0000000000000000))
(assert (= temp26_119 #x0000000000000002))
(assert (= temp26_120 temp26_119))
(assert (= temp26_121 (select ARGNAME_stride_NAMEEND_VAL temp26_120)))
(assert (= temp26_122 #x0000000000000000))
(assert (= temp26_123 #x0000000000000003))
(assert (= temp26_124 temp26_123))
(assert (= temp26_125 (select ARGNAME_stride_NAMEEND_VAL temp26_124)))
(assert (= temp26_126 #x0000000000000000))
(assert (= temp26_127 #x0000000000000004))
(assert (= temp26_128 temp26_127))
(assert (= temp26_129 (select ARGNAME_stride_NAMEEND_VAL temp26_128)))
(assert (= temp26_130 #x0000000000000000))
(assert (= temp26_131 #x0000000000000005))
(assert (= temp26_132 temp26_131))
(assert (= temp26_133 (select ARGNAME_stride_NAMEEND_VAL temp26_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp26_113 temp26_110)
             (bvsle temp26_117 temp26_114)
             (bvsle temp26_121 temp26_118)
             (bvsle temp26_125 temp26_122)
             (bvsle temp26_129 temp26_126)
             (bvsle temp26_133 temp26_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_134 #x0000000000000000))
(assert (= var1322807 temp26_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_135 #x0000000000000001))
(assert (= var1322819 temp26_135))
(assert (= temp26_136 #x0000000000000000))
(assert (= var1310898 temp26_136))
(assert (= temp26_137 #x0000000000000000))
(assert (= temp26_138 temp26_137))
(assert (= temp26_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_138)))
(assert (= temp26_140 #x0000000000000001))
(assert (= temp26_141 temp26_140))
(assert (= temp26_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_141)))
(assert (= temp26_143 #x0000000000000002))
(assert (= temp26_144 temp26_143))
(assert (= temp26_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_144)))
(assert (= temp26_146 #x0000000000000003))
(assert (= temp26_147 temp26_146))
(assert (= temp26_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_147)))
(assert (= temp26_149 #x0000000000000004))
(assert (= temp26_150 temp26_149))
(assert (= temp26_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_150)))
(assert (= temp26_152 #x0000000000000005))
(assert (= temp26_153 temp26_152))
(assert (= temp26_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_153)))
(assert (= temp26_156 var1310898))
(assert (= temp26_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_156)))
(assert (= temp26_155 temp26_157))
(assert (= var1322852
   (ite (bvslt temp26_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_158 #x0000000000000000))
(assert (= var1322852 temp26_158))
(assert (= temp26_159 #x0000000000000000))
(assert (= var1310898 temp26_159))
(assert (= temp26_161 var1310898))
(assert (= temp26_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_161)))
(assert (= temp26_160 temp26_162))
(assert (= var1322874 (bvsmod temp26_160 ARGNAME_groups_NAMEEND)))
(assert (= temp26_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp26_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_164 #x0000000000000001))
(assert (= var1322875 temp26_164))
(assert (= temp26_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp26_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_166 #x0000000000000001))
(assert (= var1322895 temp26_166))
(assert (= temp26_167 #x0000000000000001))
(assert (= var1311786 temp26_167))
(assert (= temp26_168 #x0000000000000000))
(assert (= temp26_169 temp26_168))
(assert (= temp26_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp26_169)))
(assert (= temp26_171 #x0000000000000001))
(assert (= temp26_172 temp26_171))
(assert (= temp26_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp26_172)))
(assert (= temp26_174 #x0000000000000002))
(assert (= temp26_175 temp26_174))
(assert (= temp26_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp26_175)))
(assert (= temp26_177 #x0000000000000003))
(assert (= temp26_178 temp26_177))
(assert (= temp26_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp26_178)))
(assert (= temp26_180 #x0000000000000004))
(assert (= temp26_181 temp26_180))
(assert (= temp26_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp26_181)))
(assert (= temp26_183 #x0000000000000005))
(assert (= temp26_184 temp26_183))
(assert (= temp26_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp26_184)))
(assert (= temp26_186 #x0000000000000000))
(assert (= temp26_187
   (ite (bvslt var1311786 temp26_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp26_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp26_187)))
(assert (= var1322903 temp26_188))
(assert (bvslt (ite (bvslt var1311786 temp26_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp26_189 #x0000000000000001))
(assert (= var1311786 temp26_189))
(assert (= temp26_191 var1311786))
(assert (= temp26_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_191)))
(assert (= temp26_190 temp26_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp26_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_193 #x0000000000000001))
(assert (= var1322908 temp26_193))
(assert (= temp26_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp26_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_195 #x0000000000000001))
(assert (= var1322975 temp26_195))
(assert (= temp26_196 #x0000000000000000))
(assert (= var1310898 temp26_196))
(assert (= temp26_197 #x0000000000000000))
(assert (= temp26_198 temp26_197))
(assert (= temp26_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp26_198)))
(assert (= temp26_200 #x0000000000000001))
(assert (= temp26_201 temp26_200))
(assert (= temp26_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp26_201)))
(assert (= temp26_203 #x0000000000000002))
(assert (= temp26_204 temp26_203))
(assert (= temp26_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp26_204)))
(assert (= temp26_206 #x0000000000000003))
(assert (= temp26_207 temp26_206))
(assert (= temp26_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp26_207)))
(assert (= temp26_209 #x0000000000000004))
(assert (= temp26_210 temp26_209))
(assert (= temp26_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp26_210)))
(assert (= temp26_212 #x0000000000000005))
(assert (= temp26_213 temp26_212))
(assert (= temp26_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp26_213)))
(assert (= temp26_215 #x0000000000000000))
(assert (= temp26_216
   (ite (bvslt var1310898 temp26_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp26_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp26_216)))
(assert (= var1322977 temp26_217))
(assert (bvslt (ite (bvslt var1310898 temp26_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp26_218 #x0000000000000000))
(assert (= var1310898 temp26_218))
(assert (= temp26_220 var1310898))
(assert (= temp26_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp26_220)))
(assert (= temp26_219 temp26_221))
(assert (= var1322980
   (ite (= var1322977 temp26_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_222 #x0000000000000001))
(assert (= var1322980 temp26_222))
(assert (= temp26_223 #x0000000000000002))
(assert (= var1848169 temp26_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp26_225 #x0000000000000001))
(assert (= var1323065 temp26_225))
(assert (= temp26_226 #x0000000000000001))
(assert (= var3486735 temp26_226))
(assert (= temp26_227 #x0000000000000001))
(assert (= var3814415 temp26_227))
(assert (= temp26_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp26_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_229 #x0000000000000001))
(assert (= var79986 temp26_229))
(assert (= temp26_230 #x0000000000000001))
(assert (= var80116 temp26_230))
(assert (= var4796905 var80116))
(assert (= temp26_231 #x0000000000000000))
(assert (= var4784306 temp26_231))
(assert (= temp26_232 #x0000000000000000))
(assert (= temp26_233
   (ite (bvslt var4784306 temp26_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp26_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp26_233)))
(assert (= var4796924 temp26_234))
(assert (bvslt (ite (bvslt var4784306 temp26_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp26_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp26_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_236 #x0000000000000001))
(assert (= var4796925 temp26_236))
(assert (= temp26_237 #x0000000000000000))
(assert (= var4996927 temp26_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp26_238 #x0000000000000002))
(assert (= var5125763 temp26_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_239 #x0000000000000000))
(assert (= var5191324 temp26_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp26_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp26_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp26_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp26_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp26_243 #x0000000000000001))
(assert (= var79986 temp26_243))
(model-add temp26_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp26_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp26_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






