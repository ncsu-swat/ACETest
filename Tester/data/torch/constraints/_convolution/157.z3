(declare-fun temp208_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp208_2 () (_ BitVec 64))
(declare-fun temp208_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp208_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp208_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp208_6 () (_ BitVec 64))
(declare-fun temp208_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp208_8 () (_ BitVec 64))
(declare-fun temp208_9 () (_ BitVec 64))
(declare-fun temp208_10 () (_ BitVec 64))
(declare-fun temp208_11 () (_ BitVec 64))
(declare-fun temp208_12 () (_ BitVec 64))
(declare-fun temp208_13 () (_ BitVec 64))
(declare-fun temp208_14 () (_ BitVec 64))
(declare-fun temp208_15 () (_ BitVec 64))
(declare-fun temp208_16 () (_ BitVec 64))
(declare-fun temp208_17 () (_ BitVec 64))
(declare-fun temp208_18 () (_ BitVec 64))
(declare-fun temp208_19 () (_ BitVec 64))
(declare-fun temp208_20 () (_ BitVec 64))
(declare-fun temp208_21 () (_ BitVec 64))
(declare-fun temp208_22 () (_ BitVec 64))
(declare-fun temp208_23 () (_ BitVec 64))
(declare-fun temp208_24 () (_ BitVec 64))
(declare-fun temp208_25 () (_ BitVec 64))
(declare-fun temp208_26 () (_ BitVec 64))
(declare-fun temp208_27 () (_ BitVec 64))
(declare-fun temp208_28 () (_ BitVec 64))
(declare-fun temp208_29 () (_ BitVec 64))
(declare-fun temp208_30 () (_ BitVec 64))
(declare-fun temp208_31 () (_ BitVec 64))
(declare-fun temp208_32 () (_ BitVec 64))
(declare-fun temp208_33 () (_ BitVec 64))
(declare-fun temp208_34 () (_ BitVec 64))
(declare-fun temp208_35 () (_ BitVec 64))
(declare-fun temp208_36 () (_ BitVec 64))
(declare-fun temp208_37 () (_ BitVec 64))
(declare-fun temp208_38 () (_ BitVec 64))
(declare-fun temp208_39 () (_ BitVec 64))
(declare-fun temp208_40 () (_ BitVec 64))
(declare-fun temp208_41 () (_ BitVec 64))
(declare-fun temp208_42 () (_ BitVec 64))
(declare-fun temp208_43 () (_ BitVec 64))
(declare-fun temp208_44 () (_ BitVec 64))
(declare-fun temp208_45 () (_ BitVec 64))
(declare-fun temp208_46 () (_ BitVec 64))
(declare-fun temp208_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp208_48 () (_ BitVec 64))
(declare-fun temp208_49 () (_ BitVec 64))
(declare-fun temp208_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp208_51 () (_ BitVec 64))
(declare-fun temp208_52 () (_ BitVec 64))
(declare-fun temp208_53 () (_ BitVec 64))
(declare-fun temp208_54 () (_ BitVec 64))
(declare-fun temp208_55 () (_ BitVec 64))
(declare-fun temp208_56 () (_ BitVec 64))
(declare-fun temp208_57 () (_ BitVec 64))
(declare-fun temp208_58 () (_ BitVec 64))
(declare-fun temp208_59 () (_ BitVec 64))
(declare-fun temp208_60 () (_ BitVec 64))
(declare-fun temp208_61 () (_ BitVec 64))
(declare-fun temp208_62 () (_ BitVec 64))
(declare-fun temp208_63 () (_ BitVec 64))
(declare-fun temp208_64 () (_ BitVec 64))
(declare-fun temp208_65 () (_ BitVec 64))
(declare-fun temp208_66 () (_ BitVec 64))
(declare-fun temp208_67 () (_ BitVec 64))
(declare-fun temp208_68 () (_ BitVec 64))
(declare-fun temp208_69 () (_ BitVec 64))
(declare-fun temp208_70 () (_ BitVec 64))
(declare-fun temp208_71 () (_ BitVec 64))
(declare-fun temp208_72 () (_ BitVec 64))
(declare-fun temp208_73 () (_ BitVec 64))
(declare-fun temp208_74 () (_ BitVec 64))
(declare-fun temp208_75 () (_ BitVec 64))
(declare-fun temp208_76 () (_ BitVec 64))
(declare-fun temp208_77 () (_ BitVec 64))
(declare-fun temp208_78 () (_ BitVec 64))
(declare-fun temp208_79 () (_ BitVec 64))
(declare-fun temp208_80 () (_ BitVec 64))
(declare-fun temp208_81 () (_ BitVec 64))
(declare-fun temp208_82 () (_ BitVec 64))
(declare-fun temp208_83 () (_ BitVec 64))
(declare-fun temp208_84 () (_ BitVec 64))
(declare-fun temp208_85 () (_ BitVec 64))
(declare-fun temp208_86 () (_ BitVec 64))
(declare-fun temp208_87 () (_ BitVec 64))
(declare-fun temp208_88 () (_ BitVec 64))
(declare-fun temp208_89 () (_ BitVec 64))
(declare-fun temp208_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp208_91 () (_ BitVec 64))
(declare-fun temp208_92 () (_ BitVec 64))
(declare-fun temp208_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp208_94 () (_ BitVec 64))
(declare-fun temp208_95 () (_ BitVec 64))
(declare-fun temp208_96 () (_ BitVec 64))
(declare-fun temp208_97 () (_ BitVec 64))
(declare-fun temp208_98 () (_ BitVec 64))
(declare-fun temp208_99 () (_ BitVec 64))
(declare-fun temp208_100 () (_ BitVec 64))
(declare-fun temp208_101 () (_ BitVec 64))
(declare-fun temp208_102 () (_ BitVec 64))
(declare-fun temp208_103 () (_ BitVec 64))
(declare-fun temp208_104 () (_ BitVec 64))
(declare-fun temp208_105 () (_ BitVec 64))
(declare-fun temp208_106 () (_ BitVec 64))
(declare-fun temp208_107 () (_ BitVec 64))
(declare-fun temp208_108 () (_ BitVec 64))
(declare-fun temp208_109 () (_ BitVec 64))
(declare-fun temp208_110 () (_ BitVec 64))
(declare-fun temp208_111 () (_ BitVec 64))
(declare-fun temp208_112 () (_ BitVec 64))
(declare-fun temp208_113 () (_ BitVec 64))
(declare-fun temp208_114 () (_ BitVec 64))
(declare-fun temp208_115 () (_ BitVec 64))
(declare-fun temp208_116 () (_ BitVec 64))
(declare-fun temp208_117 () (_ BitVec 64))
(declare-fun temp208_118 () (_ BitVec 64))
(declare-fun temp208_119 () (_ BitVec 64))
(declare-fun temp208_120 () (_ BitVec 64))
(declare-fun temp208_121 () (_ BitVec 64))
(declare-fun temp208_122 () (_ BitVec 64))
(declare-fun temp208_123 () (_ BitVec 64))
(declare-fun temp208_124 () (_ BitVec 64))
(declare-fun temp208_125 () (_ BitVec 64))
(declare-fun temp208_126 () (_ BitVec 64))
(declare-fun temp208_127 () (_ BitVec 64))
(declare-fun temp208_128 () (_ BitVec 64))
(declare-fun temp208_129 () (_ BitVec 64))
(declare-fun temp208_130 () (_ BitVec 64))
(declare-fun temp208_131 () (_ BitVec 64))
(declare-fun temp208_132 () (_ BitVec 64))
(declare-fun temp208_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp208_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp208_135 () (_ BitVec 64))
(declare-fun temp208_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp208_137 () (_ BitVec 64))
(declare-fun temp208_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp208_139 () (_ BitVec 64))
(declare-fun temp208_140 () (_ BitVec 64))
(declare-fun temp208_141 () (_ BitVec 64))
(declare-fun temp208_142 () (_ BitVec 64))
(declare-fun temp208_143 () (_ BitVec 64))
(declare-fun temp208_144 () (_ BitVec 64))
(declare-fun temp208_145 () (_ BitVec 64))
(declare-fun temp208_146 () (_ BitVec 64))
(declare-fun temp208_147 () (_ BitVec 64))
(declare-fun temp208_148 () (_ BitVec 64))
(declare-fun temp208_149 () (_ BitVec 64))
(declare-fun temp208_150 () (_ BitVec 64))
(declare-fun temp208_151 () (_ BitVec 64))
(declare-fun temp208_152 () (_ BitVec 64))
(declare-fun temp208_153 () (_ BitVec 64))
(declare-fun temp208_154 () (_ BitVec 64))
(declare-fun temp208_156 () (_ BitVec 64))
(declare-fun temp208_157 () (_ BitVec 64))
(declare-fun temp208_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp208_158 () (_ BitVec 64))
(declare-fun temp208_159 () (_ BitVec 64))
(declare-fun temp208_161 () (_ BitVec 64))
(declare-fun temp208_162 () (_ BitVec 64))
(declare-fun temp208_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp208_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp208_164 () (_ BitVec 64))
(declare-fun temp208_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp208_166 () (_ BitVec 64))
(declare-fun temp208_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp208_168 () (_ BitVec 64))
(declare-fun temp208_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp208_170 () (_ BitVec 64))
(declare-fun temp208_171 () (_ BitVec 64))
(declare-fun temp208_172 () (_ BitVec 64))
(declare-fun temp208_173 () (_ BitVec 64))
(declare-fun temp208_174 () (_ BitVec 64))
(declare-fun temp208_175 () (_ BitVec 64))
(declare-fun temp208_176 () (_ BitVec 64))
(declare-fun temp208_177 () (_ BitVec 64))
(declare-fun temp208_178 () (_ BitVec 64))
(declare-fun temp208_179 () (_ BitVec 64))
(declare-fun temp208_180 () (_ BitVec 64))
(declare-fun temp208_181 () (_ BitVec 64))
(declare-fun temp208_182 () (_ BitVec 64))
(declare-fun temp208_183 () (_ BitVec 64))
(declare-fun temp208_184 () (_ BitVec 64))
(declare-fun temp208_185 () (_ BitVec 64))
(declare-fun temp208_186 () (_ BitVec 64))
(declare-fun temp208_187 () (_ BitVec 64))
(declare-fun temp208_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp208_189 () (_ BitVec 64))
(declare-fun temp208_191 () (_ BitVec 64))
(declare-fun temp208_192 () (_ BitVec 64))
(declare-fun temp208_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp208_193 () (_ BitVec 64))
(declare-fun temp208_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp208_195 () (_ BitVec 64))
(declare-fun temp208_196 () (_ BitVec 64))
(declare-fun temp208_197 () (_ BitVec 64))
(declare-fun temp208_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp208_199 () (_ BitVec 64))
(declare-fun temp208_200 () (_ BitVec 64))
(declare-fun temp208_201 () (_ BitVec 64))
(declare-fun temp208_202 () (_ BitVec 64))
(declare-fun temp208_203 () (_ BitVec 64))
(declare-fun temp208_204 () (_ BitVec 64))
(declare-fun temp208_205 () (_ BitVec 64))
(declare-fun temp208_206 () (_ BitVec 64))
(declare-fun temp208_207 () (_ BitVec 64))
(declare-fun temp208_208 () (_ BitVec 64))
(declare-fun temp208_209 () (_ BitVec 64))
(declare-fun temp208_210 () (_ BitVec 64))
(declare-fun temp208_211 () (_ BitVec 64))
(declare-fun temp208_212 () (_ BitVec 64))
(declare-fun temp208_213 () (_ BitVec 64))
(declare-fun temp208_214 () (_ BitVec 64))
(declare-fun temp208_215 () (_ BitVec 64))
(declare-fun temp208_216 () (_ BitVec 64))
(declare-fun temp208_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp208_218 () (_ BitVec 64))
(declare-fun temp208_220 () (_ BitVec 64))
(declare-fun temp208_221 () (_ BitVec 64))
(declare-fun temp208_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp208_222 () (_ BitVec 64))
(declare-fun temp208_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp208_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp208_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp208_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp208_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp208_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp208_229 () (_ BitVec 64))
(declare-fun temp208_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp208_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp208_232 () (_ BitVec 64))
(declare-fun temp208_233 () (_ BitVec 64))
(declare-fun temp208_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp208_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp208_236 () (_ BitVec 64))
(declare-fun temp208_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp208_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp208_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp208_241 () (_ BitVec 64))
(declare-fun temp208_240 () (_ BitVec 64))
(declare-fun temp208_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp208_243 () (_ BitVec 64))
(declare-fun temp208_244 () (_ BitVec 64))
(declare-fun temp208_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp208_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp208_247 () (_ BitVec 64))
(declare-fun temp208_248 () (_ BitVec 64))
(declare-fun temp208_249 () (_ BitVec 64))
(declare-fun var6370068 () (_ BitVec 64))
(declare-fun var6370035 () (_ BitVec 64))
(declare-fun var6238599 () (_ BitVec 64))
(declare-fun var6238595 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp208_250 () (_ BitVec 64))
(assert (= temp208_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp208_1)))
(assert (= temp208_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp208_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_3 #x0000000000000000))
(assert (= var79869 temp208_3))
(assert (= temp208_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp208_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_5 #x0000000000000000))
(assert (= var79914 temp208_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp208_6 #x0000000000000000))
(assert (= temp208_7 temp208_6))
(assert (= temp208_8 (select ARGNAME_padding_NAMEEND_VAL temp208_7)))
(assert (= temp208_9 #x0000000000000001))
(assert (= temp208_10 temp208_9))
(assert (= temp208_11 (select ARGNAME_padding_NAMEEND_VAL temp208_10)))
(assert (= temp208_12 #x0000000000000002))
(assert (= temp208_13 temp208_12))
(assert (= temp208_14 (select ARGNAME_padding_NAMEEND_VAL temp208_13)))
(assert (= temp208_15 #x0000000000000003))
(assert (= temp208_16 temp208_15))
(assert (= temp208_17 (select ARGNAME_padding_NAMEEND_VAL temp208_16)))
(assert (= temp208_18 #x0000000000000004))
(assert (= temp208_19 temp208_18))
(assert (= temp208_20 (select ARGNAME_padding_NAMEEND_VAL temp208_19)))
(assert (= temp208_21 #x0000000000000005))
(assert (= temp208_22 temp208_21))
(assert (= temp208_23 (select ARGNAME_padding_NAMEEND_VAL temp208_22)))
(assert (= temp208_24 #x0000000000000000))
(assert (= temp208_25 #x0000000000000000))
(assert (= temp208_26 temp208_25))
(assert (= temp208_27 (select ARGNAME_padding_NAMEEND_VAL temp208_26)))
(assert (= temp208_28 #x0000000000000000))
(assert (= temp208_29 #x0000000000000001))
(assert (= temp208_30 temp208_29))
(assert (= temp208_31 (select ARGNAME_padding_NAMEEND_VAL temp208_30)))
(assert (= temp208_32 #x0000000000000000))
(assert (= temp208_33 #x0000000000000002))
(assert (= temp208_34 temp208_33))
(assert (= temp208_35 (select ARGNAME_padding_NAMEEND_VAL temp208_34)))
(assert (= temp208_36 #x0000000000000000))
(assert (= temp208_37 #x0000000000000003))
(assert (= temp208_38 temp208_37))
(assert (= temp208_39 (select ARGNAME_padding_NAMEEND_VAL temp208_38)))
(assert (= temp208_40 #x0000000000000000))
(assert (= temp208_41 #x0000000000000004))
(assert (= temp208_42 temp208_41))
(assert (= temp208_43 (select ARGNAME_padding_NAMEEND_VAL temp208_42)))
(assert (= temp208_44 #x0000000000000000))
(assert (= temp208_45 #x0000000000000005))
(assert (= temp208_46 temp208_45))
(assert (= temp208_47 (select ARGNAME_padding_NAMEEND_VAL temp208_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp208_27 temp208_24)
             (bvslt temp208_31 temp208_28)
             (bvslt temp208_35 temp208_32)
             (bvslt temp208_39 temp208_36)
             (bvslt temp208_43 temp208_40)
             (bvslt temp208_47 temp208_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_48 #x0000000000000000))
(assert (= var1322786 temp208_48))
(assert (= temp208_49 #x0000000000000000))
(assert (= temp208_50 temp208_49))
(assert (= temp208_51 (select ARGNAME_output_padding_NAMEEND_VAL temp208_50)))
(assert (= temp208_52 #x0000000000000001))
(assert (= temp208_53 temp208_52))
(assert (= temp208_54 (select ARGNAME_output_padding_NAMEEND_VAL temp208_53)))
(assert (= temp208_55 #x0000000000000002))
(assert (= temp208_56 temp208_55))
(assert (= temp208_57 (select ARGNAME_output_padding_NAMEEND_VAL temp208_56)))
(assert (= temp208_58 #x0000000000000003))
(assert (= temp208_59 temp208_58))
(assert (= temp208_60 (select ARGNAME_output_padding_NAMEEND_VAL temp208_59)))
(assert (= temp208_61 #x0000000000000004))
(assert (= temp208_62 temp208_61))
(assert (= temp208_63 (select ARGNAME_output_padding_NAMEEND_VAL temp208_62)))
(assert (= temp208_64 #x0000000000000005))
(assert (= temp208_65 temp208_64))
(assert (= temp208_66 (select ARGNAME_output_padding_NAMEEND_VAL temp208_65)))
(assert (= temp208_67 #x0000000000000000))
(assert (= temp208_68 #x0000000000000000))
(assert (= temp208_69 temp208_68))
(assert (= temp208_70 (select ARGNAME_output_padding_NAMEEND_VAL temp208_69)))
(assert (= temp208_71 #x0000000000000000))
(assert (= temp208_72 #x0000000000000001))
(assert (= temp208_73 temp208_72))
(assert (= temp208_74 (select ARGNAME_output_padding_NAMEEND_VAL temp208_73)))
(assert (= temp208_75 #x0000000000000000))
(assert (= temp208_76 #x0000000000000002))
(assert (= temp208_77 temp208_76))
(assert (= temp208_78 (select ARGNAME_output_padding_NAMEEND_VAL temp208_77)))
(assert (= temp208_79 #x0000000000000000))
(assert (= temp208_80 #x0000000000000003))
(assert (= temp208_81 temp208_80))
(assert (= temp208_82 (select ARGNAME_output_padding_NAMEEND_VAL temp208_81)))
(assert (= temp208_83 #x0000000000000000))
(assert (= temp208_84 #x0000000000000004))
(assert (= temp208_85 temp208_84))
(assert (= temp208_86 (select ARGNAME_output_padding_NAMEEND_VAL temp208_85)))
(assert (= temp208_87 #x0000000000000000))
(assert (= temp208_88 #x0000000000000005))
(assert (= temp208_89 temp208_88))
(assert (= temp208_90 (select ARGNAME_output_padding_NAMEEND_VAL temp208_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp208_70 temp208_67)
             (bvslt temp208_74 temp208_71)
             (bvslt temp208_78 temp208_75)
             (bvslt temp208_82 temp208_79)
             (bvslt temp208_86 temp208_83)
             (bvslt temp208_90 temp208_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_91 #x0000000000000000))
(assert (= var1322797 temp208_91))
(assert (= temp208_92 #x0000000000000000))
(assert (= temp208_93 temp208_92))
(assert (= temp208_94 (select ARGNAME_stride_NAMEEND_VAL temp208_93)))
(assert (= temp208_95 #x0000000000000001))
(assert (= temp208_96 temp208_95))
(assert (= temp208_97 (select ARGNAME_stride_NAMEEND_VAL temp208_96)))
(assert (= temp208_98 #x0000000000000002))
(assert (= temp208_99 temp208_98))
(assert (= temp208_100 (select ARGNAME_stride_NAMEEND_VAL temp208_99)))
(assert (= temp208_101 #x0000000000000003))
(assert (= temp208_102 temp208_101))
(assert (= temp208_103 (select ARGNAME_stride_NAMEEND_VAL temp208_102)))
(assert (= temp208_104 #x0000000000000004))
(assert (= temp208_105 temp208_104))
(assert (= temp208_106 (select ARGNAME_stride_NAMEEND_VAL temp208_105)))
(assert (= temp208_107 #x0000000000000005))
(assert (= temp208_108 temp208_107))
(assert (= temp208_109 (select ARGNAME_stride_NAMEEND_VAL temp208_108)))
(assert (= temp208_110 #x0000000000000000))
(assert (= temp208_111 #x0000000000000000))
(assert (= temp208_112 temp208_111))
(assert (= temp208_113 (select ARGNAME_stride_NAMEEND_VAL temp208_112)))
(assert (= temp208_114 #x0000000000000000))
(assert (= temp208_115 #x0000000000000001))
(assert (= temp208_116 temp208_115))
(assert (= temp208_117 (select ARGNAME_stride_NAMEEND_VAL temp208_116)))
(assert (= temp208_118 #x0000000000000000))
(assert (= temp208_119 #x0000000000000002))
(assert (= temp208_120 temp208_119))
(assert (= temp208_121 (select ARGNAME_stride_NAMEEND_VAL temp208_120)))
(assert (= temp208_122 #x0000000000000000))
(assert (= temp208_123 #x0000000000000003))
(assert (= temp208_124 temp208_123))
(assert (= temp208_125 (select ARGNAME_stride_NAMEEND_VAL temp208_124)))
(assert (= temp208_126 #x0000000000000000))
(assert (= temp208_127 #x0000000000000004))
(assert (= temp208_128 temp208_127))
(assert (= temp208_129 (select ARGNAME_stride_NAMEEND_VAL temp208_128)))
(assert (= temp208_130 #x0000000000000000))
(assert (= temp208_131 #x0000000000000005))
(assert (= temp208_132 temp208_131))
(assert (= temp208_133 (select ARGNAME_stride_NAMEEND_VAL temp208_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp208_113 temp208_110)
             (bvsle temp208_117 temp208_114)
             (bvsle temp208_121 temp208_118)
             (bvsle temp208_125 temp208_122)
             (bvsle temp208_129 temp208_126)
             (bvsle temp208_133 temp208_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_134 #x0000000000000000))
(assert (= var1322807 temp208_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_135 #x0000000000000001))
(assert (= var1322819 temp208_135))
(assert (= temp208_136 #x0000000000000000))
(assert (= var1310898 temp208_136))
(assert (= temp208_137 #x0000000000000000))
(assert (= temp208_138 temp208_137))
(assert (= temp208_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_138)))
(assert (= temp208_140 #x0000000000000001))
(assert (= temp208_141 temp208_140))
(assert (= temp208_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_141)))
(assert (= temp208_143 #x0000000000000002))
(assert (= temp208_144 temp208_143))
(assert (= temp208_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_144)))
(assert (= temp208_146 #x0000000000000003))
(assert (= temp208_147 temp208_146))
(assert (= temp208_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_147)))
(assert (= temp208_149 #x0000000000000004))
(assert (= temp208_150 temp208_149))
(assert (= temp208_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_150)))
(assert (= temp208_152 #x0000000000000005))
(assert (= temp208_153 temp208_152))
(assert (= temp208_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_153)))
(assert (= temp208_156 var1310898))
(assert (= temp208_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_156)))
(assert (= temp208_155 temp208_157))
(assert (= var1322852
   (ite (bvslt temp208_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_158 #x0000000000000000))
(assert (= var1322852 temp208_158))
(assert (= temp208_159 #x0000000000000000))
(assert (= var1310898 temp208_159))
(assert (= temp208_161 var1310898))
(assert (= temp208_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_161)))
(assert (= temp208_160 temp208_162))
(assert (= var1322874 (bvsmod temp208_160 ARGNAME_groups_NAMEEND)))
(assert (= temp208_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp208_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp208_164 #x0000000000000001))
(assert (= var1322875 temp208_164))
(assert (= temp208_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp208_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_166 #x0000000000000001))
(assert (= var1322895 temp208_166))
(assert (= temp208_167 #x0000000000000001))
(assert (= var1311786 temp208_167))
(assert (= temp208_168 #x0000000000000000))
(assert (= temp208_169 temp208_168))
(assert (= temp208_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp208_169)))
(assert (= temp208_171 #x0000000000000001))
(assert (= temp208_172 temp208_171))
(assert (= temp208_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp208_172)))
(assert (= temp208_174 #x0000000000000002))
(assert (= temp208_175 temp208_174))
(assert (= temp208_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp208_175)))
(assert (= temp208_177 #x0000000000000003))
(assert (= temp208_178 temp208_177))
(assert (= temp208_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp208_178)))
(assert (= temp208_180 #x0000000000000004))
(assert (= temp208_181 temp208_180))
(assert (= temp208_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp208_181)))
(assert (= temp208_183 #x0000000000000005))
(assert (= temp208_184 temp208_183))
(assert (= temp208_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp208_184)))
(assert (= temp208_186 #x0000000000000000))
(assert (= temp208_187
   (ite (bvslt var1311786 temp208_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp208_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp208_187)))
(assert (= var1322903 temp208_188))
(assert (bvslt (ite (bvslt var1311786 temp208_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp208_189 #x0000000000000001))
(assert (= var1311786 temp208_189))
(assert (= temp208_191 var1311786))
(assert (= temp208_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_191)))
(assert (= temp208_190 temp208_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp208_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp208_193 #x0000000000000001))
(assert (= var1322908 temp208_193))
(assert (= temp208_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp208_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_195 #x0000000000000001))
(assert (= var1322975 temp208_195))
(assert (= temp208_196 #x0000000000000000))
(assert (= var1310898 temp208_196))
(assert (= temp208_197 #x0000000000000000))
(assert (= temp208_198 temp208_197))
(assert (= temp208_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp208_198)))
(assert (= temp208_200 #x0000000000000001))
(assert (= temp208_201 temp208_200))
(assert (= temp208_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp208_201)))
(assert (= temp208_203 #x0000000000000002))
(assert (= temp208_204 temp208_203))
(assert (= temp208_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp208_204)))
(assert (= temp208_206 #x0000000000000003))
(assert (= temp208_207 temp208_206))
(assert (= temp208_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp208_207)))
(assert (= temp208_209 #x0000000000000004))
(assert (= temp208_210 temp208_209))
(assert (= temp208_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp208_210)))
(assert (= temp208_212 #x0000000000000005))
(assert (= temp208_213 temp208_212))
(assert (= temp208_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp208_213)))
(assert (= temp208_215 #x0000000000000000))
(assert (= temp208_216
   (ite (bvslt var1310898 temp208_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp208_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp208_216)))
(assert (= var1322977 temp208_217))
(assert (bvslt (ite (bvslt var1310898 temp208_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp208_218 #x0000000000000000))
(assert (= var1310898 temp208_218))
(assert (= temp208_220 var1310898))
(assert (= temp208_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp208_220)))
(assert (= temp208_219 temp208_221))
(assert (= var1322980
   (ite (= var1322977 temp208_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp208_222 #x0000000000000001))
(assert (= var1322980 temp208_222))
(assert (= temp208_223 #x0000000000000002))
(assert (= var1848169 temp208_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp208_225 #x0000000000000001))
(assert (= var1323065 temp208_225))
(assert (= temp208_226 #x0000000000000001))
(assert (= var3486735 temp208_226))
(assert (= temp208_227 #x0000000000000001))
(assert (= var3814415 temp208_227))
(assert (= temp208_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp208_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_229 #x0000000000000001))
(assert (= var79986 temp208_229))
(assert (= temp208_230 #x0000000000000001))
(assert (= var80116 temp208_230))
(assert (= var4796905 var80116))
(assert (= temp208_231 #x0000000000000000))
(assert (= var4784306 temp208_231))
(assert (= temp208_232 #x0000000000000000))
(assert (= temp208_233
   (ite (bvslt var4784306 temp208_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp208_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp208_233)))
(assert (= var4796924 temp208_234))
(assert (bvslt (ite (bvslt var4784306 temp208_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp208_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp208_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp208_236 #x0000000000000001))
(assert (= var4796925 temp208_236))
(assert (= temp208_237 #x0000000000000000))
(assert (= var4996927 temp208_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp208_238 #x0000000000000002))
(assert (= var5125763 temp208_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp208_239 #x0000000000000000))
(assert (= var5191324 temp208_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp208_241 #xffffffffffffffff))
(assert (= temp208_240 temp208_241))
(assert (= temp208_242 #x0000000000000001))
(assert (= var66602 temp208_242))
(assert (= temp208_243 #x0000000000000000))
(assert (= temp208_244
   (ite (bvslt var66602 temp208_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp208_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp208_244)))
(assert (= var80523 temp208_245))
(assert (bvslt (ite (bvslt var66602 temp208_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp208_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp208_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp208_247 #x0000000000000000))
(assert (= var80524 temp208_247))
(assert (= temp208_248 #x0000000000000001))
(assert (= var79986 temp208_248))
(assert (= temp208_249 #x0000000000000000))
(assert (= var6370068 temp208_249))
(assert (= var6370035 var6370068))
(assert (= var6238599 var6370035))
(assert (= var6238595 var6238599))
(assert (= var81597 var6238595))
(assert (= temp208_250 #x0000000000000000))
(assert (= var81597 temp208_250))
(model-add temp208_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp208_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp208_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






