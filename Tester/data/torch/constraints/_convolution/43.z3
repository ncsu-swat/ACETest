(declare-fun temp56_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp56_2 () (_ BitVec 64))
(declare-fun temp56_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp56_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp56_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp56_6 () (_ BitVec 64))
(declare-fun temp56_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_8 () (_ BitVec 64))
(declare-fun temp56_9 () (_ BitVec 64))
(declare-fun temp56_10 () (_ BitVec 64))
(declare-fun temp56_11 () (_ BitVec 64))
(declare-fun temp56_12 () (_ BitVec 64))
(declare-fun temp56_13 () (_ BitVec 64))
(declare-fun temp56_14 () (_ BitVec 64))
(declare-fun temp56_15 () (_ BitVec 64))
(declare-fun temp56_16 () (_ BitVec 64))
(declare-fun temp56_17 () (_ BitVec 64))
(declare-fun temp56_18 () (_ BitVec 64))
(declare-fun temp56_19 () (_ BitVec 64))
(declare-fun temp56_20 () (_ BitVec 64))
(declare-fun temp56_21 () (_ BitVec 64))
(declare-fun temp56_22 () (_ BitVec 64))
(declare-fun temp56_23 () (_ BitVec 64))
(declare-fun temp56_24 () (_ BitVec 64))
(declare-fun temp56_25 () (_ BitVec 64))
(declare-fun temp56_26 () (_ BitVec 64))
(declare-fun temp56_27 () (_ BitVec 64))
(declare-fun temp56_28 () (_ BitVec 64))
(declare-fun temp56_29 () (_ BitVec 64))
(declare-fun temp56_30 () (_ BitVec 64))
(declare-fun temp56_31 () (_ BitVec 64))
(declare-fun temp56_32 () (_ BitVec 64))
(declare-fun temp56_33 () (_ BitVec 64))
(declare-fun temp56_34 () (_ BitVec 64))
(declare-fun temp56_35 () (_ BitVec 64))
(declare-fun temp56_36 () (_ BitVec 64))
(declare-fun temp56_37 () (_ BitVec 64))
(declare-fun temp56_38 () (_ BitVec 64))
(declare-fun temp56_39 () (_ BitVec 64))
(declare-fun temp56_40 () (_ BitVec 64))
(declare-fun temp56_41 () (_ BitVec 64))
(declare-fun temp56_42 () (_ BitVec 64))
(declare-fun temp56_43 () (_ BitVec 64))
(declare-fun temp56_44 () (_ BitVec 64))
(declare-fun temp56_45 () (_ BitVec 64))
(declare-fun temp56_46 () (_ BitVec 64))
(declare-fun temp56_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp56_48 () (_ BitVec 64))
(declare-fun temp56_49 () (_ BitVec 64))
(declare-fun temp56_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_51 () (_ BitVec 64))
(declare-fun temp56_52 () (_ BitVec 64))
(declare-fun temp56_53 () (_ BitVec 64))
(declare-fun temp56_54 () (_ BitVec 64))
(declare-fun temp56_55 () (_ BitVec 64))
(declare-fun temp56_56 () (_ BitVec 64))
(declare-fun temp56_57 () (_ BitVec 64))
(declare-fun temp56_58 () (_ BitVec 64))
(declare-fun temp56_59 () (_ BitVec 64))
(declare-fun temp56_60 () (_ BitVec 64))
(declare-fun temp56_61 () (_ BitVec 64))
(declare-fun temp56_62 () (_ BitVec 64))
(declare-fun temp56_63 () (_ BitVec 64))
(declare-fun temp56_64 () (_ BitVec 64))
(declare-fun temp56_65 () (_ BitVec 64))
(declare-fun temp56_66 () (_ BitVec 64))
(declare-fun temp56_67 () (_ BitVec 64))
(declare-fun temp56_68 () (_ BitVec 64))
(declare-fun temp56_69 () (_ BitVec 64))
(declare-fun temp56_70 () (_ BitVec 64))
(declare-fun temp56_71 () (_ BitVec 64))
(declare-fun temp56_72 () (_ BitVec 64))
(declare-fun temp56_73 () (_ BitVec 64))
(declare-fun temp56_74 () (_ BitVec 64))
(declare-fun temp56_75 () (_ BitVec 64))
(declare-fun temp56_76 () (_ BitVec 64))
(declare-fun temp56_77 () (_ BitVec 64))
(declare-fun temp56_78 () (_ BitVec 64))
(declare-fun temp56_79 () (_ BitVec 64))
(declare-fun temp56_80 () (_ BitVec 64))
(declare-fun temp56_81 () (_ BitVec 64))
(declare-fun temp56_82 () (_ BitVec 64))
(declare-fun temp56_83 () (_ BitVec 64))
(declare-fun temp56_84 () (_ BitVec 64))
(declare-fun temp56_85 () (_ BitVec 64))
(declare-fun temp56_86 () (_ BitVec 64))
(declare-fun temp56_87 () (_ BitVec 64))
(declare-fun temp56_88 () (_ BitVec 64))
(declare-fun temp56_89 () (_ BitVec 64))
(declare-fun temp56_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp56_91 () (_ BitVec 64))
(declare-fun temp56_92 () (_ BitVec 64))
(declare-fun temp56_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_94 () (_ BitVec 64))
(declare-fun temp56_95 () (_ BitVec 64))
(declare-fun temp56_96 () (_ BitVec 64))
(declare-fun temp56_97 () (_ BitVec 64))
(declare-fun temp56_98 () (_ BitVec 64))
(declare-fun temp56_99 () (_ BitVec 64))
(declare-fun temp56_100 () (_ BitVec 64))
(declare-fun temp56_101 () (_ BitVec 64))
(declare-fun temp56_102 () (_ BitVec 64))
(declare-fun temp56_103 () (_ BitVec 64))
(declare-fun temp56_104 () (_ BitVec 64))
(declare-fun temp56_105 () (_ BitVec 64))
(declare-fun temp56_106 () (_ BitVec 64))
(declare-fun temp56_107 () (_ BitVec 64))
(declare-fun temp56_108 () (_ BitVec 64))
(declare-fun temp56_109 () (_ BitVec 64))
(declare-fun temp56_110 () (_ BitVec 64))
(declare-fun temp56_111 () (_ BitVec 64))
(declare-fun temp56_112 () (_ BitVec 64))
(declare-fun temp56_113 () (_ BitVec 64))
(declare-fun temp56_114 () (_ BitVec 64))
(declare-fun temp56_115 () (_ BitVec 64))
(declare-fun temp56_116 () (_ BitVec 64))
(declare-fun temp56_117 () (_ BitVec 64))
(declare-fun temp56_118 () (_ BitVec 64))
(declare-fun temp56_119 () (_ BitVec 64))
(declare-fun temp56_120 () (_ BitVec 64))
(declare-fun temp56_121 () (_ BitVec 64))
(declare-fun temp56_122 () (_ BitVec 64))
(declare-fun temp56_123 () (_ BitVec 64))
(declare-fun temp56_124 () (_ BitVec 64))
(declare-fun temp56_125 () (_ BitVec 64))
(declare-fun temp56_126 () (_ BitVec 64))
(declare-fun temp56_127 () (_ BitVec 64))
(declare-fun temp56_128 () (_ BitVec 64))
(declare-fun temp56_129 () (_ BitVec 64))
(declare-fun temp56_130 () (_ BitVec 64))
(declare-fun temp56_131 () (_ BitVec 64))
(declare-fun temp56_132 () (_ BitVec 64))
(declare-fun temp56_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp56_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp56_135 () (_ BitVec 64))
(declare-fun temp56_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp56_137 () (_ BitVec 64))
(declare-fun temp56_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_139 () (_ BitVec 64))
(declare-fun temp56_140 () (_ BitVec 64))
(declare-fun temp56_141 () (_ BitVec 64))
(declare-fun temp56_142 () (_ BitVec 64))
(declare-fun temp56_143 () (_ BitVec 64))
(declare-fun temp56_144 () (_ BitVec 64))
(declare-fun temp56_145 () (_ BitVec 64))
(declare-fun temp56_146 () (_ BitVec 64))
(declare-fun temp56_147 () (_ BitVec 64))
(declare-fun temp56_148 () (_ BitVec 64))
(declare-fun temp56_149 () (_ BitVec 64))
(declare-fun temp56_150 () (_ BitVec 64))
(declare-fun temp56_151 () (_ BitVec 64))
(declare-fun temp56_152 () (_ BitVec 64))
(declare-fun temp56_153 () (_ BitVec 64))
(declare-fun temp56_154 () (_ BitVec 64))
(declare-fun temp56_156 () (_ BitVec 64))
(declare-fun temp56_157 () (_ BitVec 64))
(declare-fun temp56_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp56_158 () (_ BitVec 64))
(declare-fun temp56_159 () (_ BitVec 64))
(declare-fun temp56_161 () (_ BitVec 64))
(declare-fun temp56_162 () (_ BitVec 64))
(declare-fun temp56_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp56_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp56_164 () (_ BitVec 64))
(declare-fun temp56_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp56_166 () (_ BitVec 64))
(declare-fun temp56_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp56_168 () (_ BitVec 64))
(declare-fun temp56_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_170 () (_ BitVec 64))
(declare-fun temp56_171 () (_ BitVec 64))
(declare-fun temp56_172 () (_ BitVec 64))
(declare-fun temp56_173 () (_ BitVec 64))
(declare-fun temp56_174 () (_ BitVec 64))
(declare-fun temp56_175 () (_ BitVec 64))
(declare-fun temp56_176 () (_ BitVec 64))
(declare-fun temp56_177 () (_ BitVec 64))
(declare-fun temp56_178 () (_ BitVec 64))
(declare-fun temp56_179 () (_ BitVec 64))
(declare-fun temp56_180 () (_ BitVec 64))
(declare-fun temp56_181 () (_ BitVec 64))
(declare-fun temp56_182 () (_ BitVec 64))
(declare-fun temp56_183 () (_ BitVec 64))
(declare-fun temp56_184 () (_ BitVec 64))
(declare-fun temp56_185 () (_ BitVec 64))
(declare-fun temp56_186 () (_ BitVec 64))
(declare-fun temp56_187 () (_ BitVec 64))
(declare-fun temp56_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp56_189 () (_ BitVec 64))
(declare-fun temp56_191 () (_ BitVec 64))
(declare-fun temp56_192 () (_ BitVec 64))
(declare-fun temp56_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp56_193 () (_ BitVec 64))
(declare-fun temp56_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp56_195 () (_ BitVec 64))
(declare-fun temp56_196 () (_ BitVec 64))
(declare-fun temp56_197 () (_ BitVec 64))
(declare-fun temp56_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_199 () (_ BitVec 64))
(declare-fun temp56_200 () (_ BitVec 64))
(declare-fun temp56_201 () (_ BitVec 64))
(declare-fun temp56_202 () (_ BitVec 64))
(declare-fun temp56_203 () (_ BitVec 64))
(declare-fun temp56_204 () (_ BitVec 64))
(declare-fun temp56_205 () (_ BitVec 64))
(declare-fun temp56_206 () (_ BitVec 64))
(declare-fun temp56_207 () (_ BitVec 64))
(declare-fun temp56_208 () (_ BitVec 64))
(declare-fun temp56_209 () (_ BitVec 64))
(declare-fun temp56_210 () (_ BitVec 64))
(declare-fun temp56_211 () (_ BitVec 64))
(declare-fun temp56_212 () (_ BitVec 64))
(declare-fun temp56_213 () (_ BitVec 64))
(declare-fun temp56_214 () (_ BitVec 64))
(declare-fun temp56_215 () (_ BitVec 64))
(declare-fun temp56_216 () (_ BitVec 64))
(declare-fun temp56_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp56_218 () (_ BitVec 64))
(declare-fun temp56_220 () (_ BitVec 64))
(declare-fun temp56_221 () (_ BitVec 64))
(declare-fun temp56_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp56_222 () (_ BitVec 64))
(declare-fun temp56_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp56_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp56_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp56_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp56_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp56_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp56_229 () (_ BitVec 64))
(declare-fun temp56_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp56_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp56_232 () (_ BitVec 64))
(declare-fun temp56_233 () (_ BitVec 64))
(declare-fun temp56_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp56_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp56_236 () (_ BitVec 64))
(declare-fun temp56_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp56_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp56_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp56_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp56_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp56_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6635340 () (_ BitVec 64))
(declare-fun var6635341 () (_ BitVec 64))
(declare-fun var6635342 () (_ BitVec 64))
(declare-fun temp56_244 () (_ BitVec 64))
(declare-fun temp56_243 () (_ BitVec 64))
(declare-fun temp56_245 () (_ BitVec 64))
(declare-fun var7933418 () (_ BitVec 64))
(declare-fun temp56_247 () (_ BitVec 64))
(declare-fun temp56_246 () (_ BitVec 64))
(declare-fun temp56_248 () (_ BitVec 64))
(assert (= temp56_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp56_1)))
(assert (= temp56_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp56_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_3 #x0000000000000000))
(assert (= var79869 temp56_3))
(assert (= temp56_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp56_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_5 #x0000000000000000))
(assert (= var79914 temp56_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp56_6 #x0000000000000000))
(assert (= temp56_7 temp56_6))
(assert (= temp56_8 (select ARGNAME_padding_NAMEEND_VAL temp56_7)))
(assert (= temp56_9 #x0000000000000001))
(assert (= temp56_10 temp56_9))
(assert (= temp56_11 (select ARGNAME_padding_NAMEEND_VAL temp56_10)))
(assert (= temp56_12 #x0000000000000002))
(assert (= temp56_13 temp56_12))
(assert (= temp56_14 (select ARGNAME_padding_NAMEEND_VAL temp56_13)))
(assert (= temp56_15 #x0000000000000003))
(assert (= temp56_16 temp56_15))
(assert (= temp56_17 (select ARGNAME_padding_NAMEEND_VAL temp56_16)))
(assert (= temp56_18 #x0000000000000004))
(assert (= temp56_19 temp56_18))
(assert (= temp56_20 (select ARGNAME_padding_NAMEEND_VAL temp56_19)))
(assert (= temp56_21 #x0000000000000005))
(assert (= temp56_22 temp56_21))
(assert (= temp56_23 (select ARGNAME_padding_NAMEEND_VAL temp56_22)))
(assert (= temp56_24 #x0000000000000000))
(assert (= temp56_25 #x0000000000000000))
(assert (= temp56_26 temp56_25))
(assert (= temp56_27 (select ARGNAME_padding_NAMEEND_VAL temp56_26)))
(assert (= temp56_28 #x0000000000000000))
(assert (= temp56_29 #x0000000000000001))
(assert (= temp56_30 temp56_29))
(assert (= temp56_31 (select ARGNAME_padding_NAMEEND_VAL temp56_30)))
(assert (= temp56_32 #x0000000000000000))
(assert (= temp56_33 #x0000000000000002))
(assert (= temp56_34 temp56_33))
(assert (= temp56_35 (select ARGNAME_padding_NAMEEND_VAL temp56_34)))
(assert (= temp56_36 #x0000000000000000))
(assert (= temp56_37 #x0000000000000003))
(assert (= temp56_38 temp56_37))
(assert (= temp56_39 (select ARGNAME_padding_NAMEEND_VAL temp56_38)))
(assert (= temp56_40 #x0000000000000000))
(assert (= temp56_41 #x0000000000000004))
(assert (= temp56_42 temp56_41))
(assert (= temp56_43 (select ARGNAME_padding_NAMEEND_VAL temp56_42)))
(assert (= temp56_44 #x0000000000000000))
(assert (= temp56_45 #x0000000000000005))
(assert (= temp56_46 temp56_45))
(assert (= temp56_47 (select ARGNAME_padding_NAMEEND_VAL temp56_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp56_27 temp56_24)
             (bvslt temp56_31 temp56_28)
             (bvslt temp56_35 temp56_32)
             (bvslt temp56_39 temp56_36)
             (bvslt temp56_43 temp56_40)
             (bvslt temp56_47 temp56_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_48 #x0000000000000000))
(assert (= var1322786 temp56_48))
(assert (= temp56_49 #x0000000000000000))
(assert (= temp56_50 temp56_49))
(assert (= temp56_51 (select ARGNAME_output_padding_NAMEEND_VAL temp56_50)))
(assert (= temp56_52 #x0000000000000001))
(assert (= temp56_53 temp56_52))
(assert (= temp56_54 (select ARGNAME_output_padding_NAMEEND_VAL temp56_53)))
(assert (= temp56_55 #x0000000000000002))
(assert (= temp56_56 temp56_55))
(assert (= temp56_57 (select ARGNAME_output_padding_NAMEEND_VAL temp56_56)))
(assert (= temp56_58 #x0000000000000003))
(assert (= temp56_59 temp56_58))
(assert (= temp56_60 (select ARGNAME_output_padding_NAMEEND_VAL temp56_59)))
(assert (= temp56_61 #x0000000000000004))
(assert (= temp56_62 temp56_61))
(assert (= temp56_63 (select ARGNAME_output_padding_NAMEEND_VAL temp56_62)))
(assert (= temp56_64 #x0000000000000005))
(assert (= temp56_65 temp56_64))
(assert (= temp56_66 (select ARGNAME_output_padding_NAMEEND_VAL temp56_65)))
(assert (= temp56_67 #x0000000000000000))
(assert (= temp56_68 #x0000000000000000))
(assert (= temp56_69 temp56_68))
(assert (= temp56_70 (select ARGNAME_output_padding_NAMEEND_VAL temp56_69)))
(assert (= temp56_71 #x0000000000000000))
(assert (= temp56_72 #x0000000000000001))
(assert (= temp56_73 temp56_72))
(assert (= temp56_74 (select ARGNAME_output_padding_NAMEEND_VAL temp56_73)))
(assert (= temp56_75 #x0000000000000000))
(assert (= temp56_76 #x0000000000000002))
(assert (= temp56_77 temp56_76))
(assert (= temp56_78 (select ARGNAME_output_padding_NAMEEND_VAL temp56_77)))
(assert (= temp56_79 #x0000000000000000))
(assert (= temp56_80 #x0000000000000003))
(assert (= temp56_81 temp56_80))
(assert (= temp56_82 (select ARGNAME_output_padding_NAMEEND_VAL temp56_81)))
(assert (= temp56_83 #x0000000000000000))
(assert (= temp56_84 #x0000000000000004))
(assert (= temp56_85 temp56_84))
(assert (= temp56_86 (select ARGNAME_output_padding_NAMEEND_VAL temp56_85)))
(assert (= temp56_87 #x0000000000000000))
(assert (= temp56_88 #x0000000000000005))
(assert (= temp56_89 temp56_88))
(assert (= temp56_90 (select ARGNAME_output_padding_NAMEEND_VAL temp56_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp56_70 temp56_67)
             (bvslt temp56_74 temp56_71)
             (bvslt temp56_78 temp56_75)
             (bvslt temp56_82 temp56_79)
             (bvslt temp56_86 temp56_83)
             (bvslt temp56_90 temp56_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_91 #x0000000000000000))
(assert (= var1322797 temp56_91))
(assert (= temp56_92 #x0000000000000000))
(assert (= temp56_93 temp56_92))
(assert (= temp56_94 (select ARGNAME_stride_NAMEEND_VAL temp56_93)))
(assert (= temp56_95 #x0000000000000001))
(assert (= temp56_96 temp56_95))
(assert (= temp56_97 (select ARGNAME_stride_NAMEEND_VAL temp56_96)))
(assert (= temp56_98 #x0000000000000002))
(assert (= temp56_99 temp56_98))
(assert (= temp56_100 (select ARGNAME_stride_NAMEEND_VAL temp56_99)))
(assert (= temp56_101 #x0000000000000003))
(assert (= temp56_102 temp56_101))
(assert (= temp56_103 (select ARGNAME_stride_NAMEEND_VAL temp56_102)))
(assert (= temp56_104 #x0000000000000004))
(assert (= temp56_105 temp56_104))
(assert (= temp56_106 (select ARGNAME_stride_NAMEEND_VAL temp56_105)))
(assert (= temp56_107 #x0000000000000005))
(assert (= temp56_108 temp56_107))
(assert (= temp56_109 (select ARGNAME_stride_NAMEEND_VAL temp56_108)))
(assert (= temp56_110 #x0000000000000000))
(assert (= temp56_111 #x0000000000000000))
(assert (= temp56_112 temp56_111))
(assert (= temp56_113 (select ARGNAME_stride_NAMEEND_VAL temp56_112)))
(assert (= temp56_114 #x0000000000000000))
(assert (= temp56_115 #x0000000000000001))
(assert (= temp56_116 temp56_115))
(assert (= temp56_117 (select ARGNAME_stride_NAMEEND_VAL temp56_116)))
(assert (= temp56_118 #x0000000000000000))
(assert (= temp56_119 #x0000000000000002))
(assert (= temp56_120 temp56_119))
(assert (= temp56_121 (select ARGNAME_stride_NAMEEND_VAL temp56_120)))
(assert (= temp56_122 #x0000000000000000))
(assert (= temp56_123 #x0000000000000003))
(assert (= temp56_124 temp56_123))
(assert (= temp56_125 (select ARGNAME_stride_NAMEEND_VAL temp56_124)))
(assert (= temp56_126 #x0000000000000000))
(assert (= temp56_127 #x0000000000000004))
(assert (= temp56_128 temp56_127))
(assert (= temp56_129 (select ARGNAME_stride_NAMEEND_VAL temp56_128)))
(assert (= temp56_130 #x0000000000000000))
(assert (= temp56_131 #x0000000000000005))
(assert (= temp56_132 temp56_131))
(assert (= temp56_133 (select ARGNAME_stride_NAMEEND_VAL temp56_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp56_113 temp56_110)
             (bvsle temp56_117 temp56_114)
             (bvsle temp56_121 temp56_118)
             (bvsle temp56_125 temp56_122)
             (bvsle temp56_129 temp56_126)
             (bvsle temp56_133 temp56_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_134 #x0000000000000000))
(assert (= var1322807 temp56_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_135 #x0000000000000001))
(assert (= var1322819 temp56_135))
(assert (= temp56_136 #x0000000000000000))
(assert (= var1310898 temp56_136))
(assert (= temp56_137 #x0000000000000000))
(assert (= temp56_138 temp56_137))
(assert (= temp56_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_138)))
(assert (= temp56_140 #x0000000000000001))
(assert (= temp56_141 temp56_140))
(assert (= temp56_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_141)))
(assert (= temp56_143 #x0000000000000002))
(assert (= temp56_144 temp56_143))
(assert (= temp56_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_144)))
(assert (= temp56_146 #x0000000000000003))
(assert (= temp56_147 temp56_146))
(assert (= temp56_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_147)))
(assert (= temp56_149 #x0000000000000004))
(assert (= temp56_150 temp56_149))
(assert (= temp56_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_150)))
(assert (= temp56_152 #x0000000000000005))
(assert (= temp56_153 temp56_152))
(assert (= temp56_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_153)))
(assert (= temp56_156 var1310898))
(assert (= temp56_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_156)))
(assert (= temp56_155 temp56_157))
(assert (= var1322852
   (ite (bvslt temp56_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_158 #x0000000000000000))
(assert (= var1322852 temp56_158))
(assert (= temp56_159 #x0000000000000000))
(assert (= var1310898 temp56_159))
(assert (= temp56_161 var1310898))
(assert (= temp56_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_161)))
(assert (= temp56_160 temp56_162))
(assert (= var1322874 (bvsmod temp56_160 ARGNAME_groups_NAMEEND)))
(assert (= temp56_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp56_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp56_164 #x0000000000000001))
(assert (= var1322875 temp56_164))
(assert (= temp56_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp56_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_166 #x0000000000000001))
(assert (= var1322895 temp56_166))
(assert (= temp56_167 #x0000000000000001))
(assert (= var1311786 temp56_167))
(assert (= temp56_168 #x0000000000000000))
(assert (= temp56_169 temp56_168))
(assert (= temp56_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_169)))
(assert (= temp56_171 #x0000000000000001))
(assert (= temp56_172 temp56_171))
(assert (= temp56_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_172)))
(assert (= temp56_174 #x0000000000000002))
(assert (= temp56_175 temp56_174))
(assert (= temp56_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_175)))
(assert (= temp56_177 #x0000000000000003))
(assert (= temp56_178 temp56_177))
(assert (= temp56_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_178)))
(assert (= temp56_180 #x0000000000000004))
(assert (= temp56_181 temp56_180))
(assert (= temp56_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_181)))
(assert (= temp56_183 #x0000000000000005))
(assert (= temp56_184 temp56_183))
(assert (= temp56_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_184)))
(assert (= temp56_186 #x0000000000000000))
(assert (= temp56_187
   (ite (bvslt var1311786 temp56_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp56_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_187)))
(assert (= var1322903 temp56_188))
(assert (bvslt (ite (bvslt var1311786 temp56_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp56_189 #x0000000000000001))
(assert (= var1311786 temp56_189))
(assert (= temp56_191 var1311786))
(assert (= temp56_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_191)))
(assert (= temp56_190 temp56_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp56_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp56_193 #x0000000000000001))
(assert (= var1322908 temp56_193))
(assert (= temp56_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp56_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_195 #x0000000000000001))
(assert (= var1322975 temp56_195))
(assert (= temp56_196 #x0000000000000000))
(assert (= var1310898 temp56_196))
(assert (= temp56_197 #x0000000000000000))
(assert (= temp56_198 temp56_197))
(assert (= temp56_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp56_198)))
(assert (= temp56_200 #x0000000000000001))
(assert (= temp56_201 temp56_200))
(assert (= temp56_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp56_201)))
(assert (= temp56_203 #x0000000000000002))
(assert (= temp56_204 temp56_203))
(assert (= temp56_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp56_204)))
(assert (= temp56_206 #x0000000000000003))
(assert (= temp56_207 temp56_206))
(assert (= temp56_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp56_207)))
(assert (= temp56_209 #x0000000000000004))
(assert (= temp56_210 temp56_209))
(assert (= temp56_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp56_210)))
(assert (= temp56_212 #x0000000000000005))
(assert (= temp56_213 temp56_212))
(assert (= temp56_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp56_213)))
(assert (= temp56_215 #x0000000000000000))
(assert (= temp56_216
   (ite (bvslt var1310898 temp56_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp56_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp56_216)))
(assert (= var1322977 temp56_217))
(assert (bvslt (ite (bvslt var1310898 temp56_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp56_218 #x0000000000000000))
(assert (= var1310898 temp56_218))
(assert (= temp56_220 var1310898))
(assert (= temp56_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_220)))
(assert (= temp56_219 temp56_221))
(assert (= var1322980
   (ite (= var1322977 temp56_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp56_222 #x0000000000000001))
(assert (= var1322980 temp56_222))
(assert (= temp56_223 #x0000000000000002))
(assert (= var1848169 temp56_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp56_225 #x0000000000000001))
(assert (= var1323065 temp56_225))
(assert (= temp56_226 #x0000000000000001))
(assert (= var3486735 temp56_226))
(assert (= temp56_227 #x0000000000000001))
(assert (= var3814415 temp56_227))
(assert (= temp56_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp56_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_229 #x0000000000000001))
(assert (= var79986 temp56_229))
(assert (= temp56_230 #x0000000000000001))
(assert (= var80116 temp56_230))
(assert (= var4796905 var80116))
(assert (= temp56_231 #x0000000000000000))
(assert (= var4784306 temp56_231))
(assert (= temp56_232 #x0000000000000000))
(assert (= temp56_233
   (ite (bvslt var4784306 temp56_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp56_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_233)))
(assert (= var4796924 temp56_234))
(assert (bvslt (ite (bvslt var4784306 temp56_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp56_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp56_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp56_236 #x0000000000000001))
(assert (= var4796925 temp56_236))
(assert (= temp56_237 #x0000000000000000))
(assert (= var4996927 temp56_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp56_238 #x0000000000000002))
(assert (= var5125763 temp56_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_239 #x0000000000000000))
(assert (= var5191324 temp56_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp56_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp56_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp56_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp56_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6635340 var80315))
(assert (= var6635341 var80317))
(assert (= var6635342 var80319))
(assert (= temp56_244 #x0000000000000001))
(assert (= temp56_243 temp56_244))
(assert (= temp56_245 #x0000000000000001))
(assert (= var7933418 temp56_245))
(assert (= temp56_247 #xffffffffffffffff))
(assert (= temp56_246 temp56_247))
(assert (= temp56_248 #x0000000000000001))
(assert (= var79986 temp56_248))
(model-add temp56_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp56_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp56_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






