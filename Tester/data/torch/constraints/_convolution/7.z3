(declare-fun temp9_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp9_2 () (_ BitVec 64))
(declare-fun temp9_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp9_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp9_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp9_6 () (_ BitVec 64))
(declare-fun temp9_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_8 () (_ BitVec 64))
(declare-fun temp9_9 () (_ BitVec 64))
(declare-fun temp9_10 () (_ BitVec 64))
(declare-fun temp9_11 () (_ BitVec 64))
(declare-fun temp9_12 () (_ BitVec 64))
(declare-fun temp9_13 () (_ BitVec 64))
(declare-fun temp9_14 () (_ BitVec 64))
(declare-fun temp9_15 () (_ BitVec 64))
(declare-fun temp9_16 () (_ BitVec 64))
(declare-fun temp9_17 () (_ BitVec 64))
(declare-fun temp9_18 () (_ BitVec 64))
(declare-fun temp9_19 () (_ BitVec 64))
(declare-fun temp9_20 () (_ BitVec 64))
(declare-fun temp9_21 () (_ BitVec 64))
(declare-fun temp9_22 () (_ BitVec 64))
(declare-fun temp9_23 () (_ BitVec 64))
(declare-fun temp9_24 () (_ BitVec 64))
(declare-fun temp9_25 () (_ BitVec 64))
(declare-fun temp9_26 () (_ BitVec 64))
(declare-fun temp9_27 () (_ BitVec 64))
(declare-fun temp9_28 () (_ BitVec 64))
(declare-fun temp9_29 () (_ BitVec 64))
(declare-fun temp9_30 () (_ BitVec 64))
(declare-fun temp9_31 () (_ BitVec 64))
(declare-fun temp9_32 () (_ BitVec 64))
(declare-fun temp9_33 () (_ BitVec 64))
(declare-fun temp9_34 () (_ BitVec 64))
(declare-fun temp9_35 () (_ BitVec 64))
(declare-fun temp9_36 () (_ BitVec 64))
(declare-fun temp9_37 () (_ BitVec 64))
(declare-fun temp9_38 () (_ BitVec 64))
(declare-fun temp9_39 () (_ BitVec 64))
(declare-fun temp9_40 () (_ BitVec 64))
(declare-fun temp9_41 () (_ BitVec 64))
(declare-fun temp9_42 () (_ BitVec 64))
(declare-fun temp9_43 () (_ BitVec 64))
(declare-fun temp9_44 () (_ BitVec 64))
(declare-fun temp9_45 () (_ BitVec 64))
(declare-fun temp9_46 () (_ BitVec 64))
(declare-fun temp9_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp9_48 () (_ BitVec 64))
(declare-fun temp9_49 () (_ BitVec 64))
(declare-fun temp9_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_51 () (_ BitVec 64))
(declare-fun temp9_52 () (_ BitVec 64))
(declare-fun temp9_53 () (_ BitVec 64))
(declare-fun temp9_54 () (_ BitVec 64))
(declare-fun temp9_55 () (_ BitVec 64))
(declare-fun temp9_56 () (_ BitVec 64))
(declare-fun temp9_57 () (_ BitVec 64))
(declare-fun temp9_58 () (_ BitVec 64))
(declare-fun temp9_59 () (_ BitVec 64))
(declare-fun temp9_60 () (_ BitVec 64))
(declare-fun temp9_61 () (_ BitVec 64))
(declare-fun temp9_62 () (_ BitVec 64))
(declare-fun temp9_63 () (_ BitVec 64))
(declare-fun temp9_64 () (_ BitVec 64))
(declare-fun temp9_65 () (_ BitVec 64))
(declare-fun temp9_66 () (_ BitVec 64))
(declare-fun temp9_67 () (_ BitVec 64))
(declare-fun temp9_68 () (_ BitVec 64))
(declare-fun temp9_69 () (_ BitVec 64))
(declare-fun temp9_70 () (_ BitVec 64))
(declare-fun temp9_71 () (_ BitVec 64))
(declare-fun temp9_72 () (_ BitVec 64))
(declare-fun temp9_73 () (_ BitVec 64))
(declare-fun temp9_74 () (_ BitVec 64))
(declare-fun temp9_75 () (_ BitVec 64))
(declare-fun temp9_76 () (_ BitVec 64))
(declare-fun temp9_77 () (_ BitVec 64))
(declare-fun temp9_78 () (_ BitVec 64))
(declare-fun temp9_79 () (_ BitVec 64))
(declare-fun temp9_80 () (_ BitVec 64))
(declare-fun temp9_81 () (_ BitVec 64))
(declare-fun temp9_82 () (_ BitVec 64))
(declare-fun temp9_83 () (_ BitVec 64))
(declare-fun temp9_84 () (_ BitVec 64))
(declare-fun temp9_85 () (_ BitVec 64))
(declare-fun temp9_86 () (_ BitVec 64))
(declare-fun temp9_87 () (_ BitVec 64))
(declare-fun temp9_88 () (_ BitVec 64))
(declare-fun temp9_89 () (_ BitVec 64))
(declare-fun temp9_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp9_91 () (_ BitVec 64))
(declare-fun temp9_92 () (_ BitVec 64))
(declare-fun temp9_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_94 () (_ BitVec 64))
(declare-fun temp9_95 () (_ BitVec 64))
(declare-fun temp9_96 () (_ BitVec 64))
(declare-fun temp9_97 () (_ BitVec 64))
(declare-fun temp9_98 () (_ BitVec 64))
(declare-fun temp9_99 () (_ BitVec 64))
(declare-fun temp9_100 () (_ BitVec 64))
(declare-fun temp9_101 () (_ BitVec 64))
(declare-fun temp9_102 () (_ BitVec 64))
(declare-fun temp9_103 () (_ BitVec 64))
(declare-fun temp9_104 () (_ BitVec 64))
(declare-fun temp9_105 () (_ BitVec 64))
(declare-fun temp9_106 () (_ BitVec 64))
(declare-fun temp9_107 () (_ BitVec 64))
(declare-fun temp9_108 () (_ BitVec 64))
(declare-fun temp9_109 () (_ BitVec 64))
(declare-fun temp9_110 () (_ BitVec 64))
(declare-fun temp9_111 () (_ BitVec 64))
(declare-fun temp9_112 () (_ BitVec 64))
(declare-fun temp9_113 () (_ BitVec 64))
(declare-fun temp9_114 () (_ BitVec 64))
(declare-fun temp9_115 () (_ BitVec 64))
(declare-fun temp9_116 () (_ BitVec 64))
(declare-fun temp9_117 () (_ BitVec 64))
(declare-fun temp9_118 () (_ BitVec 64))
(declare-fun temp9_119 () (_ BitVec 64))
(declare-fun temp9_120 () (_ BitVec 64))
(declare-fun temp9_121 () (_ BitVec 64))
(declare-fun temp9_122 () (_ BitVec 64))
(declare-fun temp9_123 () (_ BitVec 64))
(declare-fun temp9_124 () (_ BitVec 64))
(declare-fun temp9_125 () (_ BitVec 64))
(declare-fun temp9_126 () (_ BitVec 64))
(declare-fun temp9_127 () (_ BitVec 64))
(declare-fun temp9_128 () (_ BitVec 64))
(declare-fun temp9_129 () (_ BitVec 64))
(declare-fun temp9_130 () (_ BitVec 64))
(declare-fun temp9_131 () (_ BitVec 64))
(declare-fun temp9_132 () (_ BitVec 64))
(declare-fun temp9_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp9_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp9_135 () (_ BitVec 64))
(declare-fun temp9_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp9_137 () (_ BitVec 64))
(declare-fun temp9_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_139 () (_ BitVec 64))
(declare-fun temp9_140 () (_ BitVec 64))
(declare-fun temp9_141 () (_ BitVec 64))
(declare-fun temp9_142 () (_ BitVec 64))
(declare-fun temp9_143 () (_ BitVec 64))
(declare-fun temp9_144 () (_ BitVec 64))
(declare-fun temp9_145 () (_ BitVec 64))
(declare-fun temp9_146 () (_ BitVec 64))
(declare-fun temp9_147 () (_ BitVec 64))
(declare-fun temp9_148 () (_ BitVec 64))
(declare-fun temp9_149 () (_ BitVec 64))
(declare-fun temp9_150 () (_ BitVec 64))
(declare-fun temp9_151 () (_ BitVec 64))
(declare-fun temp9_152 () (_ BitVec 64))
(declare-fun temp9_153 () (_ BitVec 64))
(declare-fun temp9_154 () (_ BitVec 64))
(declare-fun temp9_156 () (_ BitVec 64))
(declare-fun temp9_157 () (_ BitVec 64))
(declare-fun temp9_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp9_158 () (_ BitVec 64))
(declare-fun temp9_159 () (_ BitVec 64))
(declare-fun temp9_161 () (_ BitVec 64))
(declare-fun temp9_162 () (_ BitVec 64))
(declare-fun temp9_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp9_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp9_164 () (_ BitVec 64))
(declare-fun temp9_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp9_166 () (_ BitVec 64))
(declare-fun temp9_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp9_168 () (_ BitVec 64))
(declare-fun temp9_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_170 () (_ BitVec 64))
(declare-fun temp9_171 () (_ BitVec 64))
(declare-fun temp9_172 () (_ BitVec 64))
(declare-fun temp9_173 () (_ BitVec 64))
(declare-fun temp9_174 () (_ BitVec 64))
(declare-fun temp9_175 () (_ BitVec 64))
(declare-fun temp9_176 () (_ BitVec 64))
(declare-fun temp9_177 () (_ BitVec 64))
(declare-fun temp9_178 () (_ BitVec 64))
(declare-fun temp9_179 () (_ BitVec 64))
(declare-fun temp9_180 () (_ BitVec 64))
(declare-fun temp9_181 () (_ BitVec 64))
(declare-fun temp9_182 () (_ BitVec 64))
(declare-fun temp9_183 () (_ BitVec 64))
(declare-fun temp9_184 () (_ BitVec 64))
(declare-fun temp9_185 () (_ BitVec 64))
(declare-fun temp9_186 () (_ BitVec 64))
(declare-fun temp9_187 () (_ BitVec 64))
(declare-fun temp9_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp9_189 () (_ BitVec 64))
(declare-fun temp9_191 () (_ BitVec 64))
(declare-fun temp9_192 () (_ BitVec 64))
(declare-fun temp9_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp9_193 () (_ BitVec 64))
(declare-fun temp9_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp9_195 () (_ BitVec 64))
(declare-fun temp9_196 () (_ BitVec 64))
(declare-fun temp9_197 () (_ BitVec 64))
(declare-fun temp9_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_199 () (_ BitVec 64))
(declare-fun temp9_200 () (_ BitVec 64))
(declare-fun temp9_201 () (_ BitVec 64))
(declare-fun temp9_202 () (_ BitVec 64))
(declare-fun temp9_203 () (_ BitVec 64))
(declare-fun temp9_204 () (_ BitVec 64))
(declare-fun temp9_205 () (_ BitVec 64))
(declare-fun temp9_206 () (_ BitVec 64))
(declare-fun temp9_207 () (_ BitVec 64))
(declare-fun temp9_208 () (_ BitVec 64))
(declare-fun temp9_209 () (_ BitVec 64))
(declare-fun temp9_210 () (_ BitVec 64))
(declare-fun temp9_211 () (_ BitVec 64))
(declare-fun temp9_212 () (_ BitVec 64))
(declare-fun temp9_213 () (_ BitVec 64))
(declare-fun temp9_214 () (_ BitVec 64))
(declare-fun temp9_215 () (_ BitVec 64))
(declare-fun temp9_216 () (_ BitVec 64))
(declare-fun temp9_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp9_218 () (_ BitVec 64))
(declare-fun temp9_220 () (_ BitVec 64))
(declare-fun temp9_221 () (_ BitVec 64))
(declare-fun temp9_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp9_222 () (_ BitVec 64))
(declare-fun temp9_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp9_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp9_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp9_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp9_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp9_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp9_229 () (_ BitVec 64))
(declare-fun temp9_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp9_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp9_232 () (_ BitVec 64))
(declare-fun temp9_233 () (_ BitVec 64))
(declare-fun temp9_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp9_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp9_236 () (_ BitVec 64))
(declare-fun temp9_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp9_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp9_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp9_240 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp9_241 () (_ BitVec 64))
(assert (= temp9_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp9_1)))
(assert (= temp9_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp9_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_3 #x0000000000000000))
(assert (= var79869 temp9_3))
(assert (= temp9_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp9_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_5 #x0000000000000000))
(assert (= var79914 temp9_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp9_6 #x0000000000000000))
(assert (= temp9_7 temp9_6))
(assert (= temp9_8 (select ARGNAME_padding_NAMEEND_VAL temp9_7)))
(assert (= temp9_9 #x0000000000000001))
(assert (= temp9_10 temp9_9))
(assert (= temp9_11 (select ARGNAME_padding_NAMEEND_VAL temp9_10)))
(assert (= temp9_12 #x0000000000000002))
(assert (= temp9_13 temp9_12))
(assert (= temp9_14 (select ARGNAME_padding_NAMEEND_VAL temp9_13)))
(assert (= temp9_15 #x0000000000000003))
(assert (= temp9_16 temp9_15))
(assert (= temp9_17 (select ARGNAME_padding_NAMEEND_VAL temp9_16)))
(assert (= temp9_18 #x0000000000000004))
(assert (= temp9_19 temp9_18))
(assert (= temp9_20 (select ARGNAME_padding_NAMEEND_VAL temp9_19)))
(assert (= temp9_21 #x0000000000000005))
(assert (= temp9_22 temp9_21))
(assert (= temp9_23 (select ARGNAME_padding_NAMEEND_VAL temp9_22)))
(assert (= temp9_24 #x0000000000000000))
(assert (= temp9_25 #x0000000000000000))
(assert (= temp9_26 temp9_25))
(assert (= temp9_27 (select ARGNAME_padding_NAMEEND_VAL temp9_26)))
(assert (= temp9_28 #x0000000000000000))
(assert (= temp9_29 #x0000000000000001))
(assert (= temp9_30 temp9_29))
(assert (= temp9_31 (select ARGNAME_padding_NAMEEND_VAL temp9_30)))
(assert (= temp9_32 #x0000000000000000))
(assert (= temp9_33 #x0000000000000002))
(assert (= temp9_34 temp9_33))
(assert (= temp9_35 (select ARGNAME_padding_NAMEEND_VAL temp9_34)))
(assert (= temp9_36 #x0000000000000000))
(assert (= temp9_37 #x0000000000000003))
(assert (= temp9_38 temp9_37))
(assert (= temp9_39 (select ARGNAME_padding_NAMEEND_VAL temp9_38)))
(assert (= temp9_40 #x0000000000000000))
(assert (= temp9_41 #x0000000000000004))
(assert (= temp9_42 temp9_41))
(assert (= temp9_43 (select ARGNAME_padding_NAMEEND_VAL temp9_42)))
(assert (= temp9_44 #x0000000000000000))
(assert (= temp9_45 #x0000000000000005))
(assert (= temp9_46 temp9_45))
(assert (= temp9_47 (select ARGNAME_padding_NAMEEND_VAL temp9_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp9_27 temp9_24)
             (bvslt temp9_31 temp9_28)
             (bvslt temp9_35 temp9_32)
             (bvslt temp9_39 temp9_36)
             (bvslt temp9_43 temp9_40)
             (bvslt temp9_47 temp9_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_48 #x0000000000000000))
(assert (= var1322786 temp9_48))
(assert (= temp9_49 #x0000000000000000))
(assert (= temp9_50 temp9_49))
(assert (= temp9_51 (select ARGNAME_output_padding_NAMEEND_VAL temp9_50)))
(assert (= temp9_52 #x0000000000000001))
(assert (= temp9_53 temp9_52))
(assert (= temp9_54 (select ARGNAME_output_padding_NAMEEND_VAL temp9_53)))
(assert (= temp9_55 #x0000000000000002))
(assert (= temp9_56 temp9_55))
(assert (= temp9_57 (select ARGNAME_output_padding_NAMEEND_VAL temp9_56)))
(assert (= temp9_58 #x0000000000000003))
(assert (= temp9_59 temp9_58))
(assert (= temp9_60 (select ARGNAME_output_padding_NAMEEND_VAL temp9_59)))
(assert (= temp9_61 #x0000000000000004))
(assert (= temp9_62 temp9_61))
(assert (= temp9_63 (select ARGNAME_output_padding_NAMEEND_VAL temp9_62)))
(assert (= temp9_64 #x0000000000000005))
(assert (= temp9_65 temp9_64))
(assert (= temp9_66 (select ARGNAME_output_padding_NAMEEND_VAL temp9_65)))
(assert (= temp9_67 #x0000000000000000))
(assert (= temp9_68 #x0000000000000000))
(assert (= temp9_69 temp9_68))
(assert (= temp9_70 (select ARGNAME_output_padding_NAMEEND_VAL temp9_69)))
(assert (= temp9_71 #x0000000000000000))
(assert (= temp9_72 #x0000000000000001))
(assert (= temp9_73 temp9_72))
(assert (= temp9_74 (select ARGNAME_output_padding_NAMEEND_VAL temp9_73)))
(assert (= temp9_75 #x0000000000000000))
(assert (= temp9_76 #x0000000000000002))
(assert (= temp9_77 temp9_76))
(assert (= temp9_78 (select ARGNAME_output_padding_NAMEEND_VAL temp9_77)))
(assert (= temp9_79 #x0000000000000000))
(assert (= temp9_80 #x0000000000000003))
(assert (= temp9_81 temp9_80))
(assert (= temp9_82 (select ARGNAME_output_padding_NAMEEND_VAL temp9_81)))
(assert (= temp9_83 #x0000000000000000))
(assert (= temp9_84 #x0000000000000004))
(assert (= temp9_85 temp9_84))
(assert (= temp9_86 (select ARGNAME_output_padding_NAMEEND_VAL temp9_85)))
(assert (= temp9_87 #x0000000000000000))
(assert (= temp9_88 #x0000000000000005))
(assert (= temp9_89 temp9_88))
(assert (= temp9_90 (select ARGNAME_output_padding_NAMEEND_VAL temp9_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp9_70 temp9_67)
             (bvslt temp9_74 temp9_71)
             (bvslt temp9_78 temp9_75)
             (bvslt temp9_82 temp9_79)
             (bvslt temp9_86 temp9_83)
             (bvslt temp9_90 temp9_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_91 #x0000000000000000))
(assert (= var1322797 temp9_91))
(assert (= temp9_92 #x0000000000000000))
(assert (= temp9_93 temp9_92))
(assert (= temp9_94 (select ARGNAME_stride_NAMEEND_VAL temp9_93)))
(assert (= temp9_95 #x0000000000000001))
(assert (= temp9_96 temp9_95))
(assert (= temp9_97 (select ARGNAME_stride_NAMEEND_VAL temp9_96)))
(assert (= temp9_98 #x0000000000000002))
(assert (= temp9_99 temp9_98))
(assert (= temp9_100 (select ARGNAME_stride_NAMEEND_VAL temp9_99)))
(assert (= temp9_101 #x0000000000000003))
(assert (= temp9_102 temp9_101))
(assert (= temp9_103 (select ARGNAME_stride_NAMEEND_VAL temp9_102)))
(assert (= temp9_104 #x0000000000000004))
(assert (= temp9_105 temp9_104))
(assert (= temp9_106 (select ARGNAME_stride_NAMEEND_VAL temp9_105)))
(assert (= temp9_107 #x0000000000000005))
(assert (= temp9_108 temp9_107))
(assert (= temp9_109 (select ARGNAME_stride_NAMEEND_VAL temp9_108)))
(assert (= temp9_110 #x0000000000000000))
(assert (= temp9_111 #x0000000000000000))
(assert (= temp9_112 temp9_111))
(assert (= temp9_113 (select ARGNAME_stride_NAMEEND_VAL temp9_112)))
(assert (= temp9_114 #x0000000000000000))
(assert (= temp9_115 #x0000000000000001))
(assert (= temp9_116 temp9_115))
(assert (= temp9_117 (select ARGNAME_stride_NAMEEND_VAL temp9_116)))
(assert (= temp9_118 #x0000000000000000))
(assert (= temp9_119 #x0000000000000002))
(assert (= temp9_120 temp9_119))
(assert (= temp9_121 (select ARGNAME_stride_NAMEEND_VAL temp9_120)))
(assert (= temp9_122 #x0000000000000000))
(assert (= temp9_123 #x0000000000000003))
(assert (= temp9_124 temp9_123))
(assert (= temp9_125 (select ARGNAME_stride_NAMEEND_VAL temp9_124)))
(assert (= temp9_126 #x0000000000000000))
(assert (= temp9_127 #x0000000000000004))
(assert (= temp9_128 temp9_127))
(assert (= temp9_129 (select ARGNAME_stride_NAMEEND_VAL temp9_128)))
(assert (= temp9_130 #x0000000000000000))
(assert (= temp9_131 #x0000000000000005))
(assert (= temp9_132 temp9_131))
(assert (= temp9_133 (select ARGNAME_stride_NAMEEND_VAL temp9_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp9_113 temp9_110)
             (bvsle temp9_117 temp9_114)
             (bvsle temp9_121 temp9_118)
             (bvsle temp9_125 temp9_122)
             (bvsle temp9_129 temp9_126)
             (bvsle temp9_133 temp9_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_134 #x0000000000000000))
(assert (= var1322807 temp9_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_135 #x0000000000000001))
(assert (= var1322819 temp9_135))
(assert (= temp9_136 #x0000000000000000))
(assert (= var1310898 temp9_136))
(assert (= temp9_137 #x0000000000000000))
(assert (= temp9_138 temp9_137))
(assert (= temp9_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_138)))
(assert (= temp9_140 #x0000000000000001))
(assert (= temp9_141 temp9_140))
(assert (= temp9_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_141)))
(assert (= temp9_143 #x0000000000000002))
(assert (= temp9_144 temp9_143))
(assert (= temp9_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_144)))
(assert (= temp9_146 #x0000000000000003))
(assert (= temp9_147 temp9_146))
(assert (= temp9_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_147)))
(assert (= temp9_149 #x0000000000000004))
(assert (= temp9_150 temp9_149))
(assert (= temp9_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_150)))
(assert (= temp9_152 #x0000000000000005))
(assert (= temp9_153 temp9_152))
(assert (= temp9_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_153)))
(assert (= temp9_156 var1310898))
(assert (= temp9_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_156)))
(assert (= temp9_155 temp9_157))
(assert (= var1322852
   (ite (bvslt temp9_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_158 #x0000000000000000))
(assert (= var1322852 temp9_158))
(assert (= temp9_159 #x0000000000000000))
(assert (= var1310898 temp9_159))
(assert (= temp9_161 var1310898))
(assert (= temp9_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_161)))
(assert (= temp9_160 temp9_162))
(assert (= var1322874 (bvsmod temp9_160 ARGNAME_groups_NAMEEND)))
(assert (= temp9_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp9_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp9_164 #x0000000000000001))
(assert (= var1322875 temp9_164))
(assert (= temp9_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp9_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_166 #x0000000000000001))
(assert (= var1322895 temp9_166))
(assert (= temp9_167 #x0000000000000001))
(assert (= var1311786 temp9_167))
(assert (= temp9_168 #x0000000000000000))
(assert (= temp9_169 temp9_168))
(assert (= temp9_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_169)))
(assert (= temp9_171 #x0000000000000001))
(assert (= temp9_172 temp9_171))
(assert (= temp9_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_172)))
(assert (= temp9_174 #x0000000000000002))
(assert (= temp9_175 temp9_174))
(assert (= temp9_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_175)))
(assert (= temp9_177 #x0000000000000003))
(assert (= temp9_178 temp9_177))
(assert (= temp9_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_178)))
(assert (= temp9_180 #x0000000000000004))
(assert (= temp9_181 temp9_180))
(assert (= temp9_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_181)))
(assert (= temp9_183 #x0000000000000005))
(assert (= temp9_184 temp9_183))
(assert (= temp9_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_184)))
(assert (= temp9_186 #x0000000000000000))
(assert (= temp9_187
   (ite (bvslt var1311786 temp9_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp9_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_187)))
(assert (= var1322903 temp9_188))
(assert (bvslt (ite (bvslt var1311786 temp9_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp9_189 #x0000000000000001))
(assert (= var1311786 temp9_189))
(assert (= temp9_191 var1311786))
(assert (= temp9_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_191)))
(assert (= temp9_190 temp9_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp9_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp9_193 #x0000000000000001))
(assert (= var1322908 temp9_193))
(assert (= temp9_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp9_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_195 #x0000000000000001))
(assert (= var1322975 temp9_195))
(assert (= temp9_196 #x0000000000000000))
(assert (= var1310898 temp9_196))
(assert (= temp9_197 #x0000000000000000))
(assert (= temp9_198 temp9_197))
(assert (= temp9_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp9_198)))
(assert (= temp9_200 #x0000000000000001))
(assert (= temp9_201 temp9_200))
(assert (= temp9_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp9_201)))
(assert (= temp9_203 #x0000000000000002))
(assert (= temp9_204 temp9_203))
(assert (= temp9_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp9_204)))
(assert (= temp9_206 #x0000000000000003))
(assert (= temp9_207 temp9_206))
(assert (= temp9_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp9_207)))
(assert (= temp9_209 #x0000000000000004))
(assert (= temp9_210 temp9_209))
(assert (= temp9_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp9_210)))
(assert (= temp9_212 #x0000000000000005))
(assert (= temp9_213 temp9_212))
(assert (= temp9_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp9_213)))
(assert (= temp9_215 #x0000000000000000))
(assert (= temp9_216
   (ite (bvslt var1310898 temp9_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp9_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp9_216)))
(assert (= var1322977 temp9_217))
(assert (bvslt (ite (bvslt var1310898 temp9_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp9_218 #x0000000000000000))
(assert (= var1310898 temp9_218))
(assert (= temp9_220 var1310898))
(assert (= temp9_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_220)))
(assert (= temp9_219 temp9_221))
(assert (= var1322980
   (ite (= var1322977 temp9_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp9_222 #x0000000000000001))
(assert (= var1322980 temp9_222))
(assert (= temp9_223 #x0000000000000002))
(assert (= var1848169 temp9_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp9_225 #x0000000000000001))
(assert (= var1323065 temp9_225))
(assert (= temp9_226 #x0000000000000001))
(assert (= var3486735 temp9_226))
(assert (= temp9_227 #x0000000000000001))
(assert (= var3814415 temp9_227))
(assert (= temp9_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp9_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_229 #x0000000000000001))
(assert (= var79986 temp9_229))
(assert (= temp9_230 #x0000000000000001))
(assert (= var80116 temp9_230))
(assert (= var4796905 var80116))
(assert (= temp9_231 #x0000000000000000))
(assert (= var4784306 temp9_231))
(assert (= temp9_232 #x0000000000000000))
(assert (= temp9_233
   (ite (bvslt var4784306 temp9_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp9_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_233)))
(assert (= var4796924 temp9_234))
(assert (bvslt (ite (bvslt var4784306 temp9_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp9_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp9_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp9_236 #x0000000000000001))
(assert (= var4796925 temp9_236))
(assert (= temp9_237 #x0000000000000000))
(assert (= var4996927 temp9_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp9_238 #x0000000000000002))
(assert (= var5125763 temp9_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_239 #x0000000000000000))
(assert (= var5191324 temp9_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp9_240 #x0000000000000000))
(assert (= var5386640 temp9_240))
(assert (= temp9_241 #x0000000000000001))
(assert (= var79986 temp9_241))
(model-add temp9_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp9_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp9_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






