(declare-fun temp145_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp145_2 () (_ BitVec 64))
(declare-fun temp145_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp145_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp145_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp145_6 () (_ BitVec 64))
(declare-fun temp145_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_8 () (_ BitVec 64))
(declare-fun temp145_9 () (_ BitVec 64))
(declare-fun temp145_10 () (_ BitVec 64))
(declare-fun temp145_11 () (_ BitVec 64))
(declare-fun temp145_12 () (_ BitVec 64))
(declare-fun temp145_13 () (_ BitVec 64))
(declare-fun temp145_14 () (_ BitVec 64))
(declare-fun temp145_15 () (_ BitVec 64))
(declare-fun temp145_16 () (_ BitVec 64))
(declare-fun temp145_17 () (_ BitVec 64))
(declare-fun temp145_18 () (_ BitVec 64))
(declare-fun temp145_19 () (_ BitVec 64))
(declare-fun temp145_20 () (_ BitVec 64))
(declare-fun temp145_21 () (_ BitVec 64))
(declare-fun temp145_22 () (_ BitVec 64))
(declare-fun temp145_23 () (_ BitVec 64))
(declare-fun temp145_24 () (_ BitVec 64))
(declare-fun temp145_25 () (_ BitVec 64))
(declare-fun temp145_26 () (_ BitVec 64))
(declare-fun temp145_27 () (_ BitVec 64))
(declare-fun temp145_28 () (_ BitVec 64))
(declare-fun temp145_29 () (_ BitVec 64))
(declare-fun temp145_30 () (_ BitVec 64))
(declare-fun temp145_31 () (_ BitVec 64))
(declare-fun temp145_32 () (_ BitVec 64))
(declare-fun temp145_33 () (_ BitVec 64))
(declare-fun temp145_34 () (_ BitVec 64))
(declare-fun temp145_35 () (_ BitVec 64))
(declare-fun temp145_36 () (_ BitVec 64))
(declare-fun temp145_37 () (_ BitVec 64))
(declare-fun temp145_38 () (_ BitVec 64))
(declare-fun temp145_39 () (_ BitVec 64))
(declare-fun temp145_40 () (_ BitVec 64))
(declare-fun temp145_41 () (_ BitVec 64))
(declare-fun temp145_42 () (_ BitVec 64))
(declare-fun temp145_43 () (_ BitVec 64))
(declare-fun temp145_44 () (_ BitVec 64))
(declare-fun temp145_45 () (_ BitVec 64))
(declare-fun temp145_46 () (_ BitVec 64))
(declare-fun temp145_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp145_48 () (_ BitVec 64))
(declare-fun temp145_49 () (_ BitVec 64))
(declare-fun temp145_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_51 () (_ BitVec 64))
(declare-fun temp145_52 () (_ BitVec 64))
(declare-fun temp145_53 () (_ BitVec 64))
(declare-fun temp145_54 () (_ BitVec 64))
(declare-fun temp145_55 () (_ BitVec 64))
(declare-fun temp145_56 () (_ BitVec 64))
(declare-fun temp145_57 () (_ BitVec 64))
(declare-fun temp145_58 () (_ BitVec 64))
(declare-fun temp145_59 () (_ BitVec 64))
(declare-fun temp145_60 () (_ BitVec 64))
(declare-fun temp145_61 () (_ BitVec 64))
(declare-fun temp145_62 () (_ BitVec 64))
(declare-fun temp145_63 () (_ BitVec 64))
(declare-fun temp145_64 () (_ BitVec 64))
(declare-fun temp145_65 () (_ BitVec 64))
(declare-fun temp145_66 () (_ BitVec 64))
(declare-fun temp145_67 () (_ BitVec 64))
(declare-fun temp145_68 () (_ BitVec 64))
(declare-fun temp145_69 () (_ BitVec 64))
(declare-fun temp145_70 () (_ BitVec 64))
(declare-fun temp145_71 () (_ BitVec 64))
(declare-fun temp145_72 () (_ BitVec 64))
(declare-fun temp145_73 () (_ BitVec 64))
(declare-fun temp145_74 () (_ BitVec 64))
(declare-fun temp145_75 () (_ BitVec 64))
(declare-fun temp145_76 () (_ BitVec 64))
(declare-fun temp145_77 () (_ BitVec 64))
(declare-fun temp145_78 () (_ BitVec 64))
(declare-fun temp145_79 () (_ BitVec 64))
(declare-fun temp145_80 () (_ BitVec 64))
(declare-fun temp145_81 () (_ BitVec 64))
(declare-fun temp145_82 () (_ BitVec 64))
(declare-fun temp145_83 () (_ BitVec 64))
(declare-fun temp145_84 () (_ BitVec 64))
(declare-fun temp145_85 () (_ BitVec 64))
(declare-fun temp145_86 () (_ BitVec 64))
(declare-fun temp145_87 () (_ BitVec 64))
(declare-fun temp145_88 () (_ BitVec 64))
(declare-fun temp145_89 () (_ BitVec 64))
(declare-fun temp145_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp145_91 () (_ BitVec 64))
(declare-fun temp145_92 () (_ BitVec 64))
(declare-fun temp145_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_94 () (_ BitVec 64))
(declare-fun temp145_95 () (_ BitVec 64))
(declare-fun temp145_96 () (_ BitVec 64))
(declare-fun temp145_97 () (_ BitVec 64))
(declare-fun temp145_98 () (_ BitVec 64))
(declare-fun temp145_99 () (_ BitVec 64))
(declare-fun temp145_100 () (_ BitVec 64))
(declare-fun temp145_101 () (_ BitVec 64))
(declare-fun temp145_102 () (_ BitVec 64))
(declare-fun temp145_103 () (_ BitVec 64))
(declare-fun temp145_104 () (_ BitVec 64))
(declare-fun temp145_105 () (_ BitVec 64))
(declare-fun temp145_106 () (_ BitVec 64))
(declare-fun temp145_107 () (_ BitVec 64))
(declare-fun temp145_108 () (_ BitVec 64))
(declare-fun temp145_109 () (_ BitVec 64))
(declare-fun temp145_110 () (_ BitVec 64))
(declare-fun temp145_111 () (_ BitVec 64))
(declare-fun temp145_112 () (_ BitVec 64))
(declare-fun temp145_113 () (_ BitVec 64))
(declare-fun temp145_114 () (_ BitVec 64))
(declare-fun temp145_115 () (_ BitVec 64))
(declare-fun temp145_116 () (_ BitVec 64))
(declare-fun temp145_117 () (_ BitVec 64))
(declare-fun temp145_118 () (_ BitVec 64))
(declare-fun temp145_119 () (_ BitVec 64))
(declare-fun temp145_120 () (_ BitVec 64))
(declare-fun temp145_121 () (_ BitVec 64))
(declare-fun temp145_122 () (_ BitVec 64))
(declare-fun temp145_123 () (_ BitVec 64))
(declare-fun temp145_124 () (_ BitVec 64))
(declare-fun temp145_125 () (_ BitVec 64))
(declare-fun temp145_126 () (_ BitVec 64))
(declare-fun temp145_127 () (_ BitVec 64))
(declare-fun temp145_128 () (_ BitVec 64))
(declare-fun temp145_129 () (_ BitVec 64))
(declare-fun temp145_130 () (_ BitVec 64))
(declare-fun temp145_131 () (_ BitVec 64))
(declare-fun temp145_132 () (_ BitVec 64))
(declare-fun temp145_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp145_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp145_135 () (_ BitVec 64))
(declare-fun temp145_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp145_137 () (_ BitVec 64))
(declare-fun temp145_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_139 () (_ BitVec 64))
(declare-fun temp145_140 () (_ BitVec 64))
(declare-fun temp145_141 () (_ BitVec 64))
(declare-fun temp145_142 () (_ BitVec 64))
(declare-fun temp145_143 () (_ BitVec 64))
(declare-fun temp145_144 () (_ BitVec 64))
(declare-fun temp145_145 () (_ BitVec 64))
(declare-fun temp145_146 () (_ BitVec 64))
(declare-fun temp145_147 () (_ BitVec 64))
(declare-fun temp145_148 () (_ BitVec 64))
(declare-fun temp145_149 () (_ BitVec 64))
(declare-fun temp145_150 () (_ BitVec 64))
(declare-fun temp145_151 () (_ BitVec 64))
(declare-fun temp145_152 () (_ BitVec 64))
(declare-fun temp145_153 () (_ BitVec 64))
(declare-fun temp145_154 () (_ BitVec 64))
(declare-fun temp145_156 () (_ BitVec 64))
(declare-fun temp145_157 () (_ BitVec 64))
(declare-fun temp145_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp145_158 () (_ BitVec 64))
(declare-fun temp145_159 () (_ BitVec 64))
(declare-fun temp145_161 () (_ BitVec 64))
(declare-fun temp145_162 () (_ BitVec 64))
(declare-fun temp145_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp145_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp145_164 () (_ BitVec 64))
(declare-fun temp145_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp145_166 () (_ BitVec 64))
(declare-fun temp145_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp145_168 () (_ BitVec 64))
(declare-fun temp145_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_170 () (_ BitVec 64))
(declare-fun temp145_171 () (_ BitVec 64))
(declare-fun temp145_172 () (_ BitVec 64))
(declare-fun temp145_173 () (_ BitVec 64))
(declare-fun temp145_174 () (_ BitVec 64))
(declare-fun temp145_175 () (_ BitVec 64))
(declare-fun temp145_176 () (_ BitVec 64))
(declare-fun temp145_177 () (_ BitVec 64))
(declare-fun temp145_178 () (_ BitVec 64))
(declare-fun temp145_179 () (_ BitVec 64))
(declare-fun temp145_180 () (_ BitVec 64))
(declare-fun temp145_181 () (_ BitVec 64))
(declare-fun temp145_182 () (_ BitVec 64))
(declare-fun temp145_183 () (_ BitVec 64))
(declare-fun temp145_184 () (_ BitVec 64))
(declare-fun temp145_185 () (_ BitVec 64))
(declare-fun temp145_186 () (_ BitVec 64))
(declare-fun temp145_187 () (_ BitVec 64))
(declare-fun temp145_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp145_189 () (_ BitVec 64))
(declare-fun temp145_191 () (_ BitVec 64))
(declare-fun temp145_192 () (_ BitVec 64))
(declare-fun temp145_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp145_193 () (_ BitVec 64))
(declare-fun temp145_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp145_195 () (_ BitVec 64))
(declare-fun temp145_196 () (_ BitVec 64))
(declare-fun temp145_197 () (_ BitVec 64))
(declare-fun temp145_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_199 () (_ BitVec 64))
(declare-fun temp145_200 () (_ BitVec 64))
(declare-fun temp145_201 () (_ BitVec 64))
(declare-fun temp145_202 () (_ BitVec 64))
(declare-fun temp145_203 () (_ BitVec 64))
(declare-fun temp145_204 () (_ BitVec 64))
(declare-fun temp145_205 () (_ BitVec 64))
(declare-fun temp145_206 () (_ BitVec 64))
(declare-fun temp145_207 () (_ BitVec 64))
(declare-fun temp145_208 () (_ BitVec 64))
(declare-fun temp145_209 () (_ BitVec 64))
(declare-fun temp145_210 () (_ BitVec 64))
(declare-fun temp145_211 () (_ BitVec 64))
(declare-fun temp145_212 () (_ BitVec 64))
(declare-fun temp145_213 () (_ BitVec 64))
(declare-fun temp145_214 () (_ BitVec 64))
(declare-fun temp145_215 () (_ BitVec 64))
(declare-fun temp145_216 () (_ BitVec 64))
(declare-fun temp145_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp145_218 () (_ BitVec 64))
(declare-fun temp145_220 () (_ BitVec 64))
(declare-fun temp145_221 () (_ BitVec 64))
(declare-fun temp145_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp145_222 () (_ BitVec 64))
(declare-fun temp145_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp145_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp145_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp145_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp145_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp145_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp145_229 () (_ BitVec 64))
(declare-fun temp145_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp145_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp145_232 () (_ BitVec 64))
(declare-fun temp145_233 () (_ BitVec 64))
(declare-fun temp145_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp145_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp145_236 () (_ BitVec 64))
(declare-fun temp145_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp145_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp145_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp145_241 () (_ BitVec 64))
(declare-fun temp145_240 () (_ BitVec 64))
(declare-fun temp145_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp145_243 () (_ BitVec 64))
(declare-fun temp145_244 () (_ BitVec 64))
(declare-fun temp145_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp145_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp145_247 () (_ BitVec 64))
(declare-fun temp145_249 () (_ BitVec 64))
(declare-fun temp145_248 () (_ BitVec 64))
(declare-fun temp145_250 () (_ BitVec 64))
(assert (= temp145_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp145_1)))
(assert (= temp145_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp145_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_3 #x0000000000000000))
(assert (= var79869 temp145_3))
(assert (= temp145_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp145_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_5 #x0000000000000000))
(assert (= var79914 temp145_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp145_6 #x0000000000000000))
(assert (= temp145_7 temp145_6))
(assert (= temp145_8 (select ARGNAME_padding_NAMEEND_VAL temp145_7)))
(assert (= temp145_9 #x0000000000000001))
(assert (= temp145_10 temp145_9))
(assert (= temp145_11 (select ARGNAME_padding_NAMEEND_VAL temp145_10)))
(assert (= temp145_12 #x0000000000000002))
(assert (= temp145_13 temp145_12))
(assert (= temp145_14 (select ARGNAME_padding_NAMEEND_VAL temp145_13)))
(assert (= temp145_15 #x0000000000000003))
(assert (= temp145_16 temp145_15))
(assert (= temp145_17 (select ARGNAME_padding_NAMEEND_VAL temp145_16)))
(assert (= temp145_18 #x0000000000000004))
(assert (= temp145_19 temp145_18))
(assert (= temp145_20 (select ARGNAME_padding_NAMEEND_VAL temp145_19)))
(assert (= temp145_21 #x0000000000000005))
(assert (= temp145_22 temp145_21))
(assert (= temp145_23 (select ARGNAME_padding_NAMEEND_VAL temp145_22)))
(assert (= temp145_24 #x0000000000000000))
(assert (= temp145_25 #x0000000000000000))
(assert (= temp145_26 temp145_25))
(assert (= temp145_27 (select ARGNAME_padding_NAMEEND_VAL temp145_26)))
(assert (= temp145_28 #x0000000000000000))
(assert (= temp145_29 #x0000000000000001))
(assert (= temp145_30 temp145_29))
(assert (= temp145_31 (select ARGNAME_padding_NAMEEND_VAL temp145_30)))
(assert (= temp145_32 #x0000000000000000))
(assert (= temp145_33 #x0000000000000002))
(assert (= temp145_34 temp145_33))
(assert (= temp145_35 (select ARGNAME_padding_NAMEEND_VAL temp145_34)))
(assert (= temp145_36 #x0000000000000000))
(assert (= temp145_37 #x0000000000000003))
(assert (= temp145_38 temp145_37))
(assert (= temp145_39 (select ARGNAME_padding_NAMEEND_VAL temp145_38)))
(assert (= temp145_40 #x0000000000000000))
(assert (= temp145_41 #x0000000000000004))
(assert (= temp145_42 temp145_41))
(assert (= temp145_43 (select ARGNAME_padding_NAMEEND_VAL temp145_42)))
(assert (= temp145_44 #x0000000000000000))
(assert (= temp145_45 #x0000000000000005))
(assert (= temp145_46 temp145_45))
(assert (= temp145_47 (select ARGNAME_padding_NAMEEND_VAL temp145_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp145_27 temp145_24)
             (bvslt temp145_31 temp145_28)
             (bvslt temp145_35 temp145_32)
             (bvslt temp145_39 temp145_36)
             (bvslt temp145_43 temp145_40)
             (bvslt temp145_47 temp145_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_48 #x0000000000000000))
(assert (= var1322786 temp145_48))
(assert (= temp145_49 #x0000000000000000))
(assert (= temp145_50 temp145_49))
(assert (= temp145_51 (select ARGNAME_output_padding_NAMEEND_VAL temp145_50)))
(assert (= temp145_52 #x0000000000000001))
(assert (= temp145_53 temp145_52))
(assert (= temp145_54 (select ARGNAME_output_padding_NAMEEND_VAL temp145_53)))
(assert (= temp145_55 #x0000000000000002))
(assert (= temp145_56 temp145_55))
(assert (= temp145_57 (select ARGNAME_output_padding_NAMEEND_VAL temp145_56)))
(assert (= temp145_58 #x0000000000000003))
(assert (= temp145_59 temp145_58))
(assert (= temp145_60 (select ARGNAME_output_padding_NAMEEND_VAL temp145_59)))
(assert (= temp145_61 #x0000000000000004))
(assert (= temp145_62 temp145_61))
(assert (= temp145_63 (select ARGNAME_output_padding_NAMEEND_VAL temp145_62)))
(assert (= temp145_64 #x0000000000000005))
(assert (= temp145_65 temp145_64))
(assert (= temp145_66 (select ARGNAME_output_padding_NAMEEND_VAL temp145_65)))
(assert (= temp145_67 #x0000000000000000))
(assert (= temp145_68 #x0000000000000000))
(assert (= temp145_69 temp145_68))
(assert (= temp145_70 (select ARGNAME_output_padding_NAMEEND_VAL temp145_69)))
(assert (= temp145_71 #x0000000000000000))
(assert (= temp145_72 #x0000000000000001))
(assert (= temp145_73 temp145_72))
(assert (= temp145_74 (select ARGNAME_output_padding_NAMEEND_VAL temp145_73)))
(assert (= temp145_75 #x0000000000000000))
(assert (= temp145_76 #x0000000000000002))
(assert (= temp145_77 temp145_76))
(assert (= temp145_78 (select ARGNAME_output_padding_NAMEEND_VAL temp145_77)))
(assert (= temp145_79 #x0000000000000000))
(assert (= temp145_80 #x0000000000000003))
(assert (= temp145_81 temp145_80))
(assert (= temp145_82 (select ARGNAME_output_padding_NAMEEND_VAL temp145_81)))
(assert (= temp145_83 #x0000000000000000))
(assert (= temp145_84 #x0000000000000004))
(assert (= temp145_85 temp145_84))
(assert (= temp145_86 (select ARGNAME_output_padding_NAMEEND_VAL temp145_85)))
(assert (= temp145_87 #x0000000000000000))
(assert (= temp145_88 #x0000000000000005))
(assert (= temp145_89 temp145_88))
(assert (= temp145_90 (select ARGNAME_output_padding_NAMEEND_VAL temp145_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp145_70 temp145_67)
             (bvslt temp145_74 temp145_71)
             (bvslt temp145_78 temp145_75)
             (bvslt temp145_82 temp145_79)
             (bvslt temp145_86 temp145_83)
             (bvslt temp145_90 temp145_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_91 #x0000000000000000))
(assert (= var1322797 temp145_91))
(assert (= temp145_92 #x0000000000000000))
(assert (= temp145_93 temp145_92))
(assert (= temp145_94 (select ARGNAME_stride_NAMEEND_VAL temp145_93)))
(assert (= temp145_95 #x0000000000000001))
(assert (= temp145_96 temp145_95))
(assert (= temp145_97 (select ARGNAME_stride_NAMEEND_VAL temp145_96)))
(assert (= temp145_98 #x0000000000000002))
(assert (= temp145_99 temp145_98))
(assert (= temp145_100 (select ARGNAME_stride_NAMEEND_VAL temp145_99)))
(assert (= temp145_101 #x0000000000000003))
(assert (= temp145_102 temp145_101))
(assert (= temp145_103 (select ARGNAME_stride_NAMEEND_VAL temp145_102)))
(assert (= temp145_104 #x0000000000000004))
(assert (= temp145_105 temp145_104))
(assert (= temp145_106 (select ARGNAME_stride_NAMEEND_VAL temp145_105)))
(assert (= temp145_107 #x0000000000000005))
(assert (= temp145_108 temp145_107))
(assert (= temp145_109 (select ARGNAME_stride_NAMEEND_VAL temp145_108)))
(assert (= temp145_110 #x0000000000000000))
(assert (= temp145_111 #x0000000000000000))
(assert (= temp145_112 temp145_111))
(assert (= temp145_113 (select ARGNAME_stride_NAMEEND_VAL temp145_112)))
(assert (= temp145_114 #x0000000000000000))
(assert (= temp145_115 #x0000000000000001))
(assert (= temp145_116 temp145_115))
(assert (= temp145_117 (select ARGNAME_stride_NAMEEND_VAL temp145_116)))
(assert (= temp145_118 #x0000000000000000))
(assert (= temp145_119 #x0000000000000002))
(assert (= temp145_120 temp145_119))
(assert (= temp145_121 (select ARGNAME_stride_NAMEEND_VAL temp145_120)))
(assert (= temp145_122 #x0000000000000000))
(assert (= temp145_123 #x0000000000000003))
(assert (= temp145_124 temp145_123))
(assert (= temp145_125 (select ARGNAME_stride_NAMEEND_VAL temp145_124)))
(assert (= temp145_126 #x0000000000000000))
(assert (= temp145_127 #x0000000000000004))
(assert (= temp145_128 temp145_127))
(assert (= temp145_129 (select ARGNAME_stride_NAMEEND_VAL temp145_128)))
(assert (= temp145_130 #x0000000000000000))
(assert (= temp145_131 #x0000000000000005))
(assert (= temp145_132 temp145_131))
(assert (= temp145_133 (select ARGNAME_stride_NAMEEND_VAL temp145_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp145_113 temp145_110)
             (bvsle temp145_117 temp145_114)
             (bvsle temp145_121 temp145_118)
             (bvsle temp145_125 temp145_122)
             (bvsle temp145_129 temp145_126)
             (bvsle temp145_133 temp145_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_134 #x0000000000000000))
(assert (= var1322807 temp145_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_135 #x0000000000000001))
(assert (= var1322819 temp145_135))
(assert (= temp145_136 #x0000000000000000))
(assert (= var1310898 temp145_136))
(assert (= temp145_137 #x0000000000000000))
(assert (= temp145_138 temp145_137))
(assert (= temp145_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_138)))
(assert (= temp145_140 #x0000000000000001))
(assert (= temp145_141 temp145_140))
(assert (= temp145_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_141)))
(assert (= temp145_143 #x0000000000000002))
(assert (= temp145_144 temp145_143))
(assert (= temp145_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_144)))
(assert (= temp145_146 #x0000000000000003))
(assert (= temp145_147 temp145_146))
(assert (= temp145_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_147)))
(assert (= temp145_149 #x0000000000000004))
(assert (= temp145_150 temp145_149))
(assert (= temp145_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_150)))
(assert (= temp145_152 #x0000000000000005))
(assert (= temp145_153 temp145_152))
(assert (= temp145_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_153)))
(assert (= temp145_156 var1310898))
(assert (= temp145_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_156)))
(assert (= temp145_155 temp145_157))
(assert (= var1322852
   (ite (bvslt temp145_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_158 #x0000000000000000))
(assert (= var1322852 temp145_158))
(assert (= temp145_159 #x0000000000000000))
(assert (= var1310898 temp145_159))
(assert (= temp145_161 var1310898))
(assert (= temp145_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_161)))
(assert (= temp145_160 temp145_162))
(assert (= var1322874 (bvsmod temp145_160 ARGNAME_groups_NAMEEND)))
(assert (= temp145_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp145_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_164 #x0000000000000001))
(assert (= var1322875 temp145_164))
(assert (= temp145_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp145_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_166 #x0000000000000001))
(assert (= var1322895 temp145_166))
(assert (= temp145_167 #x0000000000000001))
(assert (= var1311786 temp145_167))
(assert (= temp145_168 #x0000000000000000))
(assert (= temp145_169 temp145_168))
(assert (= temp145_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_169)))
(assert (= temp145_171 #x0000000000000001))
(assert (= temp145_172 temp145_171))
(assert (= temp145_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_172)))
(assert (= temp145_174 #x0000000000000002))
(assert (= temp145_175 temp145_174))
(assert (= temp145_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_175)))
(assert (= temp145_177 #x0000000000000003))
(assert (= temp145_178 temp145_177))
(assert (= temp145_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_178)))
(assert (= temp145_180 #x0000000000000004))
(assert (= temp145_181 temp145_180))
(assert (= temp145_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_181)))
(assert (= temp145_183 #x0000000000000005))
(assert (= temp145_184 temp145_183))
(assert (= temp145_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_184)))
(assert (= temp145_186 #x0000000000000000))
(assert (= temp145_187
   (ite (bvslt var1311786 temp145_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp145_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_187)))
(assert (= var1322903 temp145_188))
(assert (bvslt (ite (bvslt var1311786 temp145_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp145_189 #x0000000000000001))
(assert (= var1311786 temp145_189))
(assert (= temp145_191 var1311786))
(assert (= temp145_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_191)))
(assert (= temp145_190 temp145_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp145_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_193 #x0000000000000001))
(assert (= var1322908 temp145_193))
(assert (= temp145_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp145_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_195 #x0000000000000001))
(assert (= var1322975 temp145_195))
(assert (= temp145_196 #x0000000000000000))
(assert (= var1310898 temp145_196))
(assert (= temp145_197 #x0000000000000000))
(assert (= temp145_198 temp145_197))
(assert (= temp145_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp145_198)))
(assert (= temp145_200 #x0000000000000001))
(assert (= temp145_201 temp145_200))
(assert (= temp145_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp145_201)))
(assert (= temp145_203 #x0000000000000002))
(assert (= temp145_204 temp145_203))
(assert (= temp145_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp145_204)))
(assert (= temp145_206 #x0000000000000003))
(assert (= temp145_207 temp145_206))
(assert (= temp145_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp145_207)))
(assert (= temp145_209 #x0000000000000004))
(assert (= temp145_210 temp145_209))
(assert (= temp145_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp145_210)))
(assert (= temp145_212 #x0000000000000005))
(assert (= temp145_213 temp145_212))
(assert (= temp145_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp145_213)))
(assert (= temp145_215 #x0000000000000000))
(assert (= temp145_216
   (ite (bvslt var1310898 temp145_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp145_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp145_216)))
(assert (= var1322977 temp145_217))
(assert (bvslt (ite (bvslt var1310898 temp145_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp145_218 #x0000000000000000))
(assert (= var1310898 temp145_218))
(assert (= temp145_220 var1310898))
(assert (= temp145_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_220)))
(assert (= temp145_219 temp145_221))
(assert (= var1322980
   (ite (= var1322977 temp145_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_222 #x0000000000000001))
(assert (= var1322980 temp145_222))
(assert (= temp145_223 #x0000000000000002))
(assert (= var1848169 temp145_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp145_225 #x0000000000000001))
(assert (= var1323065 temp145_225))
(assert (= temp145_226 #x0000000000000001))
(assert (= var3486735 temp145_226))
(assert (= temp145_227 #x0000000000000001))
(assert (= var3814415 temp145_227))
(assert (= temp145_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp145_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_229 #x0000000000000001))
(assert (= var79986 temp145_229))
(assert (= temp145_230 #x0000000000000001))
(assert (= var80116 temp145_230))
(assert (= var4796905 var80116))
(assert (= temp145_231 #x0000000000000000))
(assert (= var4784306 temp145_231))
(assert (= temp145_232 #x0000000000000000))
(assert (= temp145_233
   (ite (bvslt var4784306 temp145_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp145_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_233)))
(assert (= var4796924 temp145_234))
(assert (bvslt (ite (bvslt var4784306 temp145_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp145_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp145_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_236 #x0000000000000001))
(assert (= var4796925 temp145_236))
(assert (= temp145_237 #x0000000000000000))
(assert (= var4996927 temp145_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp145_238 #x0000000000000002))
(assert (= var5125763 temp145_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_239 #x0000000000000000))
(assert (= var5191324 temp145_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp145_241 #xffffffffffffffff))
(assert (= temp145_240 temp145_241))
(assert (= temp145_242 #x0000000000000001))
(assert (= var66602 temp145_242))
(assert (= temp145_243 #x0000000000000000))
(assert (= temp145_244
   (ite (bvslt var66602 temp145_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp145_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_244)))
(assert (= var80523 temp145_245))
(assert (bvslt (ite (bvslt var66602 temp145_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp145_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp145_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_247 #x0000000000000001))
(assert (= var80524 temp145_247))
(assert (= temp145_249 #xffffffffffffffff))
(assert (= temp145_248 temp145_249))
(assert (= temp145_250 #x0000000000000001))
(assert (= var79986 temp145_250))
(model-add temp145_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp145_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp145_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






