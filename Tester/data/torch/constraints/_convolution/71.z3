(declare-fun temp93_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp93_2 () (_ BitVec 64))
(declare-fun temp93_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp93_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp93_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp93_6 () (_ BitVec 64))
(declare-fun temp93_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_8 () (_ BitVec 64))
(declare-fun temp93_9 () (_ BitVec 64))
(declare-fun temp93_10 () (_ BitVec 64))
(declare-fun temp93_11 () (_ BitVec 64))
(declare-fun temp93_12 () (_ BitVec 64))
(declare-fun temp93_13 () (_ BitVec 64))
(declare-fun temp93_14 () (_ BitVec 64))
(declare-fun temp93_15 () (_ BitVec 64))
(declare-fun temp93_16 () (_ BitVec 64))
(declare-fun temp93_17 () (_ BitVec 64))
(declare-fun temp93_18 () (_ BitVec 64))
(declare-fun temp93_19 () (_ BitVec 64))
(declare-fun temp93_20 () (_ BitVec 64))
(declare-fun temp93_21 () (_ BitVec 64))
(declare-fun temp93_22 () (_ BitVec 64))
(declare-fun temp93_23 () (_ BitVec 64))
(declare-fun temp93_24 () (_ BitVec 64))
(declare-fun temp93_25 () (_ BitVec 64))
(declare-fun temp93_26 () (_ BitVec 64))
(declare-fun temp93_27 () (_ BitVec 64))
(declare-fun temp93_28 () (_ BitVec 64))
(declare-fun temp93_29 () (_ BitVec 64))
(declare-fun temp93_30 () (_ BitVec 64))
(declare-fun temp93_31 () (_ BitVec 64))
(declare-fun temp93_32 () (_ BitVec 64))
(declare-fun temp93_33 () (_ BitVec 64))
(declare-fun temp93_34 () (_ BitVec 64))
(declare-fun temp93_35 () (_ BitVec 64))
(declare-fun temp93_36 () (_ BitVec 64))
(declare-fun temp93_37 () (_ BitVec 64))
(declare-fun temp93_38 () (_ BitVec 64))
(declare-fun temp93_39 () (_ BitVec 64))
(declare-fun temp93_40 () (_ BitVec 64))
(declare-fun temp93_41 () (_ BitVec 64))
(declare-fun temp93_42 () (_ BitVec 64))
(declare-fun temp93_43 () (_ BitVec 64))
(declare-fun temp93_44 () (_ BitVec 64))
(declare-fun temp93_45 () (_ BitVec 64))
(declare-fun temp93_46 () (_ BitVec 64))
(declare-fun temp93_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp93_48 () (_ BitVec 64))
(declare-fun temp93_49 () (_ BitVec 64))
(declare-fun temp93_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_51 () (_ BitVec 64))
(declare-fun temp93_52 () (_ BitVec 64))
(declare-fun temp93_53 () (_ BitVec 64))
(declare-fun temp93_54 () (_ BitVec 64))
(declare-fun temp93_55 () (_ BitVec 64))
(declare-fun temp93_56 () (_ BitVec 64))
(declare-fun temp93_57 () (_ BitVec 64))
(declare-fun temp93_58 () (_ BitVec 64))
(declare-fun temp93_59 () (_ BitVec 64))
(declare-fun temp93_60 () (_ BitVec 64))
(declare-fun temp93_61 () (_ BitVec 64))
(declare-fun temp93_62 () (_ BitVec 64))
(declare-fun temp93_63 () (_ BitVec 64))
(declare-fun temp93_64 () (_ BitVec 64))
(declare-fun temp93_65 () (_ BitVec 64))
(declare-fun temp93_66 () (_ BitVec 64))
(declare-fun temp93_67 () (_ BitVec 64))
(declare-fun temp93_68 () (_ BitVec 64))
(declare-fun temp93_69 () (_ BitVec 64))
(declare-fun temp93_70 () (_ BitVec 64))
(declare-fun temp93_71 () (_ BitVec 64))
(declare-fun temp93_72 () (_ BitVec 64))
(declare-fun temp93_73 () (_ BitVec 64))
(declare-fun temp93_74 () (_ BitVec 64))
(declare-fun temp93_75 () (_ BitVec 64))
(declare-fun temp93_76 () (_ BitVec 64))
(declare-fun temp93_77 () (_ BitVec 64))
(declare-fun temp93_78 () (_ BitVec 64))
(declare-fun temp93_79 () (_ BitVec 64))
(declare-fun temp93_80 () (_ BitVec 64))
(declare-fun temp93_81 () (_ BitVec 64))
(declare-fun temp93_82 () (_ BitVec 64))
(declare-fun temp93_83 () (_ BitVec 64))
(declare-fun temp93_84 () (_ BitVec 64))
(declare-fun temp93_85 () (_ BitVec 64))
(declare-fun temp93_86 () (_ BitVec 64))
(declare-fun temp93_87 () (_ BitVec 64))
(declare-fun temp93_88 () (_ BitVec 64))
(declare-fun temp93_89 () (_ BitVec 64))
(declare-fun temp93_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp93_91 () (_ BitVec 64))
(declare-fun temp93_92 () (_ BitVec 64))
(declare-fun temp93_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_94 () (_ BitVec 64))
(declare-fun temp93_95 () (_ BitVec 64))
(declare-fun temp93_96 () (_ BitVec 64))
(declare-fun temp93_97 () (_ BitVec 64))
(declare-fun temp93_98 () (_ BitVec 64))
(declare-fun temp93_99 () (_ BitVec 64))
(declare-fun temp93_100 () (_ BitVec 64))
(declare-fun temp93_101 () (_ BitVec 64))
(declare-fun temp93_102 () (_ BitVec 64))
(declare-fun temp93_103 () (_ BitVec 64))
(declare-fun temp93_104 () (_ BitVec 64))
(declare-fun temp93_105 () (_ BitVec 64))
(declare-fun temp93_106 () (_ BitVec 64))
(declare-fun temp93_107 () (_ BitVec 64))
(declare-fun temp93_108 () (_ BitVec 64))
(declare-fun temp93_109 () (_ BitVec 64))
(declare-fun temp93_110 () (_ BitVec 64))
(declare-fun temp93_111 () (_ BitVec 64))
(declare-fun temp93_112 () (_ BitVec 64))
(declare-fun temp93_113 () (_ BitVec 64))
(declare-fun temp93_114 () (_ BitVec 64))
(declare-fun temp93_115 () (_ BitVec 64))
(declare-fun temp93_116 () (_ BitVec 64))
(declare-fun temp93_117 () (_ BitVec 64))
(declare-fun temp93_118 () (_ BitVec 64))
(declare-fun temp93_119 () (_ BitVec 64))
(declare-fun temp93_120 () (_ BitVec 64))
(declare-fun temp93_121 () (_ BitVec 64))
(declare-fun temp93_122 () (_ BitVec 64))
(declare-fun temp93_123 () (_ BitVec 64))
(declare-fun temp93_124 () (_ BitVec 64))
(declare-fun temp93_125 () (_ BitVec 64))
(declare-fun temp93_126 () (_ BitVec 64))
(declare-fun temp93_127 () (_ BitVec 64))
(declare-fun temp93_128 () (_ BitVec 64))
(declare-fun temp93_129 () (_ BitVec 64))
(declare-fun temp93_130 () (_ BitVec 64))
(declare-fun temp93_131 () (_ BitVec 64))
(declare-fun temp93_132 () (_ BitVec 64))
(declare-fun temp93_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp93_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp93_135 () (_ BitVec 64))
(declare-fun temp93_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp93_137 () (_ BitVec 64))
(declare-fun temp93_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_139 () (_ BitVec 64))
(declare-fun temp93_140 () (_ BitVec 64))
(declare-fun temp93_141 () (_ BitVec 64))
(declare-fun temp93_142 () (_ BitVec 64))
(declare-fun temp93_143 () (_ BitVec 64))
(declare-fun temp93_144 () (_ BitVec 64))
(declare-fun temp93_145 () (_ BitVec 64))
(declare-fun temp93_146 () (_ BitVec 64))
(declare-fun temp93_147 () (_ BitVec 64))
(declare-fun temp93_148 () (_ BitVec 64))
(declare-fun temp93_149 () (_ BitVec 64))
(declare-fun temp93_150 () (_ BitVec 64))
(declare-fun temp93_151 () (_ BitVec 64))
(declare-fun temp93_152 () (_ BitVec 64))
(declare-fun temp93_153 () (_ BitVec 64))
(declare-fun temp93_154 () (_ BitVec 64))
(declare-fun temp93_156 () (_ BitVec 64))
(declare-fun temp93_157 () (_ BitVec 64))
(declare-fun temp93_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp93_158 () (_ BitVec 64))
(declare-fun temp93_159 () (_ BitVec 64))
(declare-fun temp93_161 () (_ BitVec 64))
(declare-fun temp93_162 () (_ BitVec 64))
(declare-fun temp93_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp93_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp93_164 () (_ BitVec 64))
(declare-fun temp93_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp93_166 () (_ BitVec 64))
(declare-fun temp93_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp93_168 () (_ BitVec 64))
(declare-fun temp93_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_170 () (_ BitVec 64))
(declare-fun temp93_171 () (_ BitVec 64))
(declare-fun temp93_172 () (_ BitVec 64))
(declare-fun temp93_173 () (_ BitVec 64))
(declare-fun temp93_174 () (_ BitVec 64))
(declare-fun temp93_175 () (_ BitVec 64))
(declare-fun temp93_176 () (_ BitVec 64))
(declare-fun temp93_177 () (_ BitVec 64))
(declare-fun temp93_178 () (_ BitVec 64))
(declare-fun temp93_179 () (_ BitVec 64))
(declare-fun temp93_180 () (_ BitVec 64))
(declare-fun temp93_181 () (_ BitVec 64))
(declare-fun temp93_182 () (_ BitVec 64))
(declare-fun temp93_183 () (_ BitVec 64))
(declare-fun temp93_184 () (_ BitVec 64))
(declare-fun temp93_185 () (_ BitVec 64))
(declare-fun temp93_186 () (_ BitVec 64))
(declare-fun temp93_187 () (_ BitVec 64))
(declare-fun temp93_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp93_189 () (_ BitVec 64))
(declare-fun temp93_191 () (_ BitVec 64))
(declare-fun temp93_192 () (_ BitVec 64))
(declare-fun temp93_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp93_193 () (_ BitVec 64))
(declare-fun temp93_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp93_195 () (_ BitVec 64))
(declare-fun temp93_196 () (_ BitVec 64))
(declare-fun temp93_197 () (_ BitVec 64))
(declare-fun temp93_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_199 () (_ BitVec 64))
(declare-fun temp93_200 () (_ BitVec 64))
(declare-fun temp93_201 () (_ BitVec 64))
(declare-fun temp93_202 () (_ BitVec 64))
(declare-fun temp93_203 () (_ BitVec 64))
(declare-fun temp93_204 () (_ BitVec 64))
(declare-fun temp93_205 () (_ BitVec 64))
(declare-fun temp93_206 () (_ BitVec 64))
(declare-fun temp93_207 () (_ BitVec 64))
(declare-fun temp93_208 () (_ BitVec 64))
(declare-fun temp93_209 () (_ BitVec 64))
(declare-fun temp93_210 () (_ BitVec 64))
(declare-fun temp93_211 () (_ BitVec 64))
(declare-fun temp93_212 () (_ BitVec 64))
(declare-fun temp93_213 () (_ BitVec 64))
(declare-fun temp93_214 () (_ BitVec 64))
(declare-fun temp93_215 () (_ BitVec 64))
(declare-fun temp93_216 () (_ BitVec 64))
(declare-fun temp93_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp93_218 () (_ BitVec 64))
(declare-fun temp93_220 () (_ BitVec 64))
(declare-fun temp93_221 () (_ BitVec 64))
(declare-fun temp93_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp93_222 () (_ BitVec 64))
(declare-fun temp93_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp93_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp93_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp93_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp93_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp93_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp93_229 () (_ BitVec 64))
(declare-fun temp93_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp93_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp93_232 () (_ BitVec 64))
(declare-fun temp93_233 () (_ BitVec 64))
(declare-fun temp93_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp93_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp93_236 () (_ BitVec 64))
(declare-fun temp93_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp93_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp93_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp93_241 () (_ BitVec 64))
(declare-fun temp93_240 () (_ BitVec 64))
(declare-fun temp93_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp93_243 () (_ BitVec 64))
(declare-fun temp93_244 () (_ BitVec 64))
(declare-fun temp93_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp93_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp93_247 () (_ BitVec 64))
(declare-fun temp93_249 () (_ BitVec 64))
(declare-fun temp93_248 () (_ BitVec 64))
(declare-fun temp93_250 () (_ BitVec 64))
(assert (= temp93_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp93_1)))
(assert (= temp93_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp93_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_3 #x0000000000000000))
(assert (= var79869 temp93_3))
(assert (= temp93_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp93_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_5 #x0000000000000000))
(assert (= var79914 temp93_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp93_6 #x0000000000000000))
(assert (= temp93_7 temp93_6))
(assert (= temp93_8 (select ARGNAME_padding_NAMEEND_VAL temp93_7)))
(assert (= temp93_9 #x0000000000000001))
(assert (= temp93_10 temp93_9))
(assert (= temp93_11 (select ARGNAME_padding_NAMEEND_VAL temp93_10)))
(assert (= temp93_12 #x0000000000000002))
(assert (= temp93_13 temp93_12))
(assert (= temp93_14 (select ARGNAME_padding_NAMEEND_VAL temp93_13)))
(assert (= temp93_15 #x0000000000000003))
(assert (= temp93_16 temp93_15))
(assert (= temp93_17 (select ARGNAME_padding_NAMEEND_VAL temp93_16)))
(assert (= temp93_18 #x0000000000000004))
(assert (= temp93_19 temp93_18))
(assert (= temp93_20 (select ARGNAME_padding_NAMEEND_VAL temp93_19)))
(assert (= temp93_21 #x0000000000000005))
(assert (= temp93_22 temp93_21))
(assert (= temp93_23 (select ARGNAME_padding_NAMEEND_VAL temp93_22)))
(assert (= temp93_24 #x0000000000000000))
(assert (= temp93_25 #x0000000000000000))
(assert (= temp93_26 temp93_25))
(assert (= temp93_27 (select ARGNAME_padding_NAMEEND_VAL temp93_26)))
(assert (= temp93_28 #x0000000000000000))
(assert (= temp93_29 #x0000000000000001))
(assert (= temp93_30 temp93_29))
(assert (= temp93_31 (select ARGNAME_padding_NAMEEND_VAL temp93_30)))
(assert (= temp93_32 #x0000000000000000))
(assert (= temp93_33 #x0000000000000002))
(assert (= temp93_34 temp93_33))
(assert (= temp93_35 (select ARGNAME_padding_NAMEEND_VAL temp93_34)))
(assert (= temp93_36 #x0000000000000000))
(assert (= temp93_37 #x0000000000000003))
(assert (= temp93_38 temp93_37))
(assert (= temp93_39 (select ARGNAME_padding_NAMEEND_VAL temp93_38)))
(assert (= temp93_40 #x0000000000000000))
(assert (= temp93_41 #x0000000000000004))
(assert (= temp93_42 temp93_41))
(assert (= temp93_43 (select ARGNAME_padding_NAMEEND_VAL temp93_42)))
(assert (= temp93_44 #x0000000000000000))
(assert (= temp93_45 #x0000000000000005))
(assert (= temp93_46 temp93_45))
(assert (= temp93_47 (select ARGNAME_padding_NAMEEND_VAL temp93_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp93_27 temp93_24)
             (bvslt temp93_31 temp93_28)
             (bvslt temp93_35 temp93_32)
             (bvslt temp93_39 temp93_36)
             (bvslt temp93_43 temp93_40)
             (bvslt temp93_47 temp93_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_48 #x0000000000000000))
(assert (= var1322786 temp93_48))
(assert (= temp93_49 #x0000000000000000))
(assert (= temp93_50 temp93_49))
(assert (= temp93_51 (select ARGNAME_output_padding_NAMEEND_VAL temp93_50)))
(assert (= temp93_52 #x0000000000000001))
(assert (= temp93_53 temp93_52))
(assert (= temp93_54 (select ARGNAME_output_padding_NAMEEND_VAL temp93_53)))
(assert (= temp93_55 #x0000000000000002))
(assert (= temp93_56 temp93_55))
(assert (= temp93_57 (select ARGNAME_output_padding_NAMEEND_VAL temp93_56)))
(assert (= temp93_58 #x0000000000000003))
(assert (= temp93_59 temp93_58))
(assert (= temp93_60 (select ARGNAME_output_padding_NAMEEND_VAL temp93_59)))
(assert (= temp93_61 #x0000000000000004))
(assert (= temp93_62 temp93_61))
(assert (= temp93_63 (select ARGNAME_output_padding_NAMEEND_VAL temp93_62)))
(assert (= temp93_64 #x0000000000000005))
(assert (= temp93_65 temp93_64))
(assert (= temp93_66 (select ARGNAME_output_padding_NAMEEND_VAL temp93_65)))
(assert (= temp93_67 #x0000000000000000))
(assert (= temp93_68 #x0000000000000000))
(assert (= temp93_69 temp93_68))
(assert (= temp93_70 (select ARGNAME_output_padding_NAMEEND_VAL temp93_69)))
(assert (= temp93_71 #x0000000000000000))
(assert (= temp93_72 #x0000000000000001))
(assert (= temp93_73 temp93_72))
(assert (= temp93_74 (select ARGNAME_output_padding_NAMEEND_VAL temp93_73)))
(assert (= temp93_75 #x0000000000000000))
(assert (= temp93_76 #x0000000000000002))
(assert (= temp93_77 temp93_76))
(assert (= temp93_78 (select ARGNAME_output_padding_NAMEEND_VAL temp93_77)))
(assert (= temp93_79 #x0000000000000000))
(assert (= temp93_80 #x0000000000000003))
(assert (= temp93_81 temp93_80))
(assert (= temp93_82 (select ARGNAME_output_padding_NAMEEND_VAL temp93_81)))
(assert (= temp93_83 #x0000000000000000))
(assert (= temp93_84 #x0000000000000004))
(assert (= temp93_85 temp93_84))
(assert (= temp93_86 (select ARGNAME_output_padding_NAMEEND_VAL temp93_85)))
(assert (= temp93_87 #x0000000000000000))
(assert (= temp93_88 #x0000000000000005))
(assert (= temp93_89 temp93_88))
(assert (= temp93_90 (select ARGNAME_output_padding_NAMEEND_VAL temp93_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp93_70 temp93_67)
             (bvslt temp93_74 temp93_71)
             (bvslt temp93_78 temp93_75)
             (bvslt temp93_82 temp93_79)
             (bvslt temp93_86 temp93_83)
             (bvslt temp93_90 temp93_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_91 #x0000000000000000))
(assert (= var1322797 temp93_91))
(assert (= temp93_92 #x0000000000000000))
(assert (= temp93_93 temp93_92))
(assert (= temp93_94 (select ARGNAME_stride_NAMEEND_VAL temp93_93)))
(assert (= temp93_95 #x0000000000000001))
(assert (= temp93_96 temp93_95))
(assert (= temp93_97 (select ARGNAME_stride_NAMEEND_VAL temp93_96)))
(assert (= temp93_98 #x0000000000000002))
(assert (= temp93_99 temp93_98))
(assert (= temp93_100 (select ARGNAME_stride_NAMEEND_VAL temp93_99)))
(assert (= temp93_101 #x0000000000000003))
(assert (= temp93_102 temp93_101))
(assert (= temp93_103 (select ARGNAME_stride_NAMEEND_VAL temp93_102)))
(assert (= temp93_104 #x0000000000000004))
(assert (= temp93_105 temp93_104))
(assert (= temp93_106 (select ARGNAME_stride_NAMEEND_VAL temp93_105)))
(assert (= temp93_107 #x0000000000000005))
(assert (= temp93_108 temp93_107))
(assert (= temp93_109 (select ARGNAME_stride_NAMEEND_VAL temp93_108)))
(assert (= temp93_110 #x0000000000000000))
(assert (= temp93_111 #x0000000000000000))
(assert (= temp93_112 temp93_111))
(assert (= temp93_113 (select ARGNAME_stride_NAMEEND_VAL temp93_112)))
(assert (= temp93_114 #x0000000000000000))
(assert (= temp93_115 #x0000000000000001))
(assert (= temp93_116 temp93_115))
(assert (= temp93_117 (select ARGNAME_stride_NAMEEND_VAL temp93_116)))
(assert (= temp93_118 #x0000000000000000))
(assert (= temp93_119 #x0000000000000002))
(assert (= temp93_120 temp93_119))
(assert (= temp93_121 (select ARGNAME_stride_NAMEEND_VAL temp93_120)))
(assert (= temp93_122 #x0000000000000000))
(assert (= temp93_123 #x0000000000000003))
(assert (= temp93_124 temp93_123))
(assert (= temp93_125 (select ARGNAME_stride_NAMEEND_VAL temp93_124)))
(assert (= temp93_126 #x0000000000000000))
(assert (= temp93_127 #x0000000000000004))
(assert (= temp93_128 temp93_127))
(assert (= temp93_129 (select ARGNAME_stride_NAMEEND_VAL temp93_128)))
(assert (= temp93_130 #x0000000000000000))
(assert (= temp93_131 #x0000000000000005))
(assert (= temp93_132 temp93_131))
(assert (= temp93_133 (select ARGNAME_stride_NAMEEND_VAL temp93_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp93_113 temp93_110)
             (bvsle temp93_117 temp93_114)
             (bvsle temp93_121 temp93_118)
             (bvsle temp93_125 temp93_122)
             (bvsle temp93_129 temp93_126)
             (bvsle temp93_133 temp93_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_134 #x0000000000000000))
(assert (= var1322807 temp93_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_135 #x0000000000000001))
(assert (= var1322819 temp93_135))
(assert (= temp93_136 #x0000000000000000))
(assert (= var1310898 temp93_136))
(assert (= temp93_137 #x0000000000000000))
(assert (= temp93_138 temp93_137))
(assert (= temp93_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_138)))
(assert (= temp93_140 #x0000000000000001))
(assert (= temp93_141 temp93_140))
(assert (= temp93_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_141)))
(assert (= temp93_143 #x0000000000000002))
(assert (= temp93_144 temp93_143))
(assert (= temp93_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_144)))
(assert (= temp93_146 #x0000000000000003))
(assert (= temp93_147 temp93_146))
(assert (= temp93_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_147)))
(assert (= temp93_149 #x0000000000000004))
(assert (= temp93_150 temp93_149))
(assert (= temp93_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_150)))
(assert (= temp93_152 #x0000000000000005))
(assert (= temp93_153 temp93_152))
(assert (= temp93_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_153)))
(assert (= temp93_156 var1310898))
(assert (= temp93_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_156)))
(assert (= temp93_155 temp93_157))
(assert (= var1322852
   (ite (bvslt temp93_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_158 #x0000000000000000))
(assert (= var1322852 temp93_158))
(assert (= temp93_159 #x0000000000000000))
(assert (= var1310898 temp93_159))
(assert (= temp93_161 var1310898))
(assert (= temp93_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_161)))
(assert (= temp93_160 temp93_162))
(assert (= var1322874 (bvsmod temp93_160 ARGNAME_groups_NAMEEND)))
(assert (= temp93_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp93_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_164 #x0000000000000001))
(assert (= var1322875 temp93_164))
(assert (= temp93_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp93_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_166 #x0000000000000001))
(assert (= var1322895 temp93_166))
(assert (= temp93_167 #x0000000000000001))
(assert (= var1311786 temp93_167))
(assert (= temp93_168 #x0000000000000000))
(assert (= temp93_169 temp93_168))
(assert (= temp93_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_169)))
(assert (= temp93_171 #x0000000000000001))
(assert (= temp93_172 temp93_171))
(assert (= temp93_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_172)))
(assert (= temp93_174 #x0000000000000002))
(assert (= temp93_175 temp93_174))
(assert (= temp93_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_175)))
(assert (= temp93_177 #x0000000000000003))
(assert (= temp93_178 temp93_177))
(assert (= temp93_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_178)))
(assert (= temp93_180 #x0000000000000004))
(assert (= temp93_181 temp93_180))
(assert (= temp93_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_181)))
(assert (= temp93_183 #x0000000000000005))
(assert (= temp93_184 temp93_183))
(assert (= temp93_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_184)))
(assert (= temp93_186 #x0000000000000000))
(assert (= temp93_187
   (ite (bvslt var1311786 temp93_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp93_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_187)))
(assert (= var1322903 temp93_188))
(assert (bvslt (ite (bvslt var1311786 temp93_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp93_189 #x0000000000000001))
(assert (= var1311786 temp93_189))
(assert (= temp93_191 var1311786))
(assert (= temp93_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_191)))
(assert (= temp93_190 temp93_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp93_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_193 #x0000000000000001))
(assert (= var1322908 temp93_193))
(assert (= temp93_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp93_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_195 #x0000000000000001))
(assert (= var1322975 temp93_195))
(assert (= temp93_196 #x0000000000000000))
(assert (= var1310898 temp93_196))
(assert (= temp93_197 #x0000000000000000))
(assert (= temp93_198 temp93_197))
(assert (= temp93_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp93_198)))
(assert (= temp93_200 #x0000000000000001))
(assert (= temp93_201 temp93_200))
(assert (= temp93_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp93_201)))
(assert (= temp93_203 #x0000000000000002))
(assert (= temp93_204 temp93_203))
(assert (= temp93_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp93_204)))
(assert (= temp93_206 #x0000000000000003))
(assert (= temp93_207 temp93_206))
(assert (= temp93_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp93_207)))
(assert (= temp93_209 #x0000000000000004))
(assert (= temp93_210 temp93_209))
(assert (= temp93_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp93_210)))
(assert (= temp93_212 #x0000000000000005))
(assert (= temp93_213 temp93_212))
(assert (= temp93_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp93_213)))
(assert (= temp93_215 #x0000000000000000))
(assert (= temp93_216
   (ite (bvslt var1310898 temp93_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp93_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp93_216)))
(assert (= var1322977 temp93_217))
(assert (bvslt (ite (bvslt var1310898 temp93_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp93_218 #x0000000000000000))
(assert (= var1310898 temp93_218))
(assert (= temp93_220 var1310898))
(assert (= temp93_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_220)))
(assert (= temp93_219 temp93_221))
(assert (= var1322980
   (ite (= var1322977 temp93_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_222 #x0000000000000001))
(assert (= var1322980 temp93_222))
(assert (= temp93_223 #x0000000000000002))
(assert (= var1848169 temp93_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp93_225 #x0000000000000001))
(assert (= var1323065 temp93_225))
(assert (= temp93_226 #x0000000000000001))
(assert (= var3486735 temp93_226))
(assert (= temp93_227 #x0000000000000001))
(assert (= var3814415 temp93_227))
(assert (= temp93_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp93_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_229 #x0000000000000001))
(assert (= var79986 temp93_229))
(assert (= temp93_230 #x0000000000000001))
(assert (= var80116 temp93_230))
(assert (= var4796905 var80116))
(assert (= temp93_231 #x0000000000000000))
(assert (= var4784306 temp93_231))
(assert (= temp93_232 #x0000000000000000))
(assert (= temp93_233
   (ite (bvslt var4784306 temp93_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp93_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_233)))
(assert (= var4796924 temp93_234))
(assert (bvslt (ite (bvslt var4784306 temp93_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp93_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp93_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_236 #x0000000000000001))
(assert (= var4796925 temp93_236))
(assert (= temp93_237 #x0000000000000000))
(assert (= var4996927 temp93_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp93_238 #x0000000000000002))
(assert (= var5125763 temp93_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_239 #x0000000000000000))
(assert (= var5191324 temp93_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp93_241 #xffffffffffffffff))
(assert (= temp93_240 temp93_241))
(assert (= temp93_242 #x0000000000000001))
(assert (= var66602 temp93_242))
(assert (= temp93_243 #x0000000000000000))
(assert (= temp93_244
   (ite (bvslt var66602 temp93_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp93_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_244)))
(assert (= var80523 temp93_245))
(assert (bvslt (ite (bvslt var66602 temp93_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp93_246 #x0000000000000000))
(assert (= var80524 (ite (= var80523 temp93_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_247 #x0000000000000001))
(assert (= var80524 temp93_247))
(assert (= temp93_249 #xffffffffffffffff))
(assert (= temp93_248 temp93_249))
(assert (= temp93_250 #x0000000000000001))
(assert (= var79986 temp93_250))
(model-add temp93_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp93_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp93_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






