(declare-fun temp778_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp778_2 () (_ BitVec 64))
(declare-fun temp778_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp778_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp778_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp778_6 () (_ BitVec 64))
(declare-fun temp778_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_8 () (_ BitVec 64))
(declare-fun temp778_9 () (_ BitVec 64))
(declare-fun temp778_10 () (_ BitVec 64))
(declare-fun temp778_11 () (_ BitVec 64))
(declare-fun temp778_12 () (_ BitVec 64))
(declare-fun temp778_13 () (_ BitVec 64))
(declare-fun temp778_14 () (_ BitVec 64))
(declare-fun temp778_15 () (_ BitVec 64))
(declare-fun temp778_16 () (_ BitVec 64))
(declare-fun temp778_17 () (_ BitVec 64))
(declare-fun temp778_18 () (_ BitVec 64))
(declare-fun temp778_19 () (_ BitVec 64))
(declare-fun temp778_20 () (_ BitVec 64))
(declare-fun temp778_21 () (_ BitVec 64))
(declare-fun temp778_22 () (_ BitVec 64))
(declare-fun temp778_23 () (_ BitVec 64))
(declare-fun temp778_24 () (_ BitVec 64))
(declare-fun temp778_25 () (_ BitVec 64))
(declare-fun temp778_26 () (_ BitVec 64))
(declare-fun temp778_27 () (_ BitVec 64))
(declare-fun temp778_28 () (_ BitVec 64))
(declare-fun temp778_29 () (_ BitVec 64))
(declare-fun temp778_30 () (_ BitVec 64))
(declare-fun temp778_31 () (_ BitVec 64))
(declare-fun temp778_32 () (_ BitVec 64))
(declare-fun temp778_33 () (_ BitVec 64))
(declare-fun temp778_34 () (_ BitVec 64))
(declare-fun temp778_35 () (_ BitVec 64))
(declare-fun temp778_36 () (_ BitVec 64))
(declare-fun temp778_37 () (_ BitVec 64))
(declare-fun temp778_38 () (_ BitVec 64))
(declare-fun temp778_39 () (_ BitVec 64))
(declare-fun temp778_40 () (_ BitVec 64))
(declare-fun temp778_41 () (_ BitVec 64))
(declare-fun temp778_42 () (_ BitVec 64))
(declare-fun temp778_43 () (_ BitVec 64))
(declare-fun temp778_44 () (_ BitVec 64))
(declare-fun temp778_45 () (_ BitVec 64))
(declare-fun temp778_46 () (_ BitVec 64))
(declare-fun temp778_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp778_48 () (_ BitVec 64))
(declare-fun temp778_49 () (_ BitVec 64))
(declare-fun temp778_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_51 () (_ BitVec 64))
(declare-fun temp778_52 () (_ BitVec 64))
(declare-fun temp778_53 () (_ BitVec 64))
(declare-fun temp778_54 () (_ BitVec 64))
(declare-fun temp778_55 () (_ BitVec 64))
(declare-fun temp778_56 () (_ BitVec 64))
(declare-fun temp778_57 () (_ BitVec 64))
(declare-fun temp778_58 () (_ BitVec 64))
(declare-fun temp778_59 () (_ BitVec 64))
(declare-fun temp778_60 () (_ BitVec 64))
(declare-fun temp778_61 () (_ BitVec 64))
(declare-fun temp778_62 () (_ BitVec 64))
(declare-fun temp778_63 () (_ BitVec 64))
(declare-fun temp778_64 () (_ BitVec 64))
(declare-fun temp778_65 () (_ BitVec 64))
(declare-fun temp778_66 () (_ BitVec 64))
(declare-fun temp778_67 () (_ BitVec 64))
(declare-fun temp778_68 () (_ BitVec 64))
(declare-fun temp778_69 () (_ BitVec 64))
(declare-fun temp778_70 () (_ BitVec 64))
(declare-fun temp778_71 () (_ BitVec 64))
(declare-fun temp778_72 () (_ BitVec 64))
(declare-fun temp778_73 () (_ BitVec 64))
(declare-fun temp778_74 () (_ BitVec 64))
(declare-fun temp778_75 () (_ BitVec 64))
(declare-fun temp778_76 () (_ BitVec 64))
(declare-fun temp778_77 () (_ BitVec 64))
(declare-fun temp778_78 () (_ BitVec 64))
(declare-fun temp778_79 () (_ BitVec 64))
(declare-fun temp778_80 () (_ BitVec 64))
(declare-fun temp778_81 () (_ BitVec 64))
(declare-fun temp778_82 () (_ BitVec 64))
(declare-fun temp778_83 () (_ BitVec 64))
(declare-fun temp778_84 () (_ BitVec 64))
(declare-fun temp778_85 () (_ BitVec 64))
(declare-fun temp778_86 () (_ BitVec 64))
(declare-fun temp778_87 () (_ BitVec 64))
(declare-fun temp778_88 () (_ BitVec 64))
(declare-fun temp778_89 () (_ BitVec 64))
(declare-fun temp778_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp778_91 () (_ BitVec 64))
(declare-fun temp778_92 () (_ BitVec 64))
(declare-fun temp778_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_94 () (_ BitVec 64))
(declare-fun temp778_95 () (_ BitVec 64))
(declare-fun temp778_96 () (_ BitVec 64))
(declare-fun temp778_97 () (_ BitVec 64))
(declare-fun temp778_98 () (_ BitVec 64))
(declare-fun temp778_99 () (_ BitVec 64))
(declare-fun temp778_100 () (_ BitVec 64))
(declare-fun temp778_101 () (_ BitVec 64))
(declare-fun temp778_102 () (_ BitVec 64))
(declare-fun temp778_103 () (_ BitVec 64))
(declare-fun temp778_104 () (_ BitVec 64))
(declare-fun temp778_105 () (_ BitVec 64))
(declare-fun temp778_106 () (_ BitVec 64))
(declare-fun temp778_107 () (_ BitVec 64))
(declare-fun temp778_108 () (_ BitVec 64))
(declare-fun temp778_109 () (_ BitVec 64))
(declare-fun temp778_110 () (_ BitVec 64))
(declare-fun temp778_111 () (_ BitVec 64))
(declare-fun temp778_112 () (_ BitVec 64))
(declare-fun temp778_113 () (_ BitVec 64))
(declare-fun temp778_114 () (_ BitVec 64))
(declare-fun temp778_115 () (_ BitVec 64))
(declare-fun temp778_116 () (_ BitVec 64))
(declare-fun temp778_117 () (_ BitVec 64))
(declare-fun temp778_118 () (_ BitVec 64))
(declare-fun temp778_119 () (_ BitVec 64))
(declare-fun temp778_120 () (_ BitVec 64))
(declare-fun temp778_121 () (_ BitVec 64))
(declare-fun temp778_122 () (_ BitVec 64))
(declare-fun temp778_123 () (_ BitVec 64))
(declare-fun temp778_124 () (_ BitVec 64))
(declare-fun temp778_125 () (_ BitVec 64))
(declare-fun temp778_126 () (_ BitVec 64))
(declare-fun temp778_127 () (_ BitVec 64))
(declare-fun temp778_128 () (_ BitVec 64))
(declare-fun temp778_129 () (_ BitVec 64))
(declare-fun temp778_130 () (_ BitVec 64))
(declare-fun temp778_131 () (_ BitVec 64))
(declare-fun temp778_132 () (_ BitVec 64))
(declare-fun temp778_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp778_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp778_135 () (_ BitVec 64))
(declare-fun temp778_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp778_137 () (_ BitVec 64))
(declare-fun temp778_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_139 () (_ BitVec 64))
(declare-fun temp778_140 () (_ BitVec 64))
(declare-fun temp778_141 () (_ BitVec 64))
(declare-fun temp778_142 () (_ BitVec 64))
(declare-fun temp778_143 () (_ BitVec 64))
(declare-fun temp778_144 () (_ BitVec 64))
(declare-fun temp778_145 () (_ BitVec 64))
(declare-fun temp778_146 () (_ BitVec 64))
(declare-fun temp778_147 () (_ BitVec 64))
(declare-fun temp778_148 () (_ BitVec 64))
(declare-fun temp778_149 () (_ BitVec 64))
(declare-fun temp778_150 () (_ BitVec 64))
(declare-fun temp778_151 () (_ BitVec 64))
(declare-fun temp778_152 () (_ BitVec 64))
(declare-fun temp778_153 () (_ BitVec 64))
(declare-fun temp778_154 () (_ BitVec 64))
(declare-fun temp778_156 () (_ BitVec 64))
(declare-fun temp778_157 () (_ BitVec 64))
(declare-fun temp778_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp778_158 () (_ BitVec 64))
(declare-fun temp778_159 () (_ BitVec 64))
(declare-fun temp778_161 () (_ BitVec 64))
(declare-fun temp778_162 () (_ BitVec 64))
(declare-fun temp778_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp778_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp778_164 () (_ BitVec 64))
(declare-fun temp778_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp778_166 () (_ BitVec 64))
(declare-fun temp778_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp778_168 () (_ BitVec 64))
(declare-fun temp778_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_170 () (_ BitVec 64))
(declare-fun temp778_171 () (_ BitVec 64))
(declare-fun temp778_172 () (_ BitVec 64))
(declare-fun temp778_173 () (_ BitVec 64))
(declare-fun temp778_174 () (_ BitVec 64))
(declare-fun temp778_175 () (_ BitVec 64))
(declare-fun temp778_176 () (_ BitVec 64))
(declare-fun temp778_177 () (_ BitVec 64))
(declare-fun temp778_178 () (_ BitVec 64))
(declare-fun temp778_179 () (_ BitVec 64))
(declare-fun temp778_180 () (_ BitVec 64))
(declare-fun temp778_181 () (_ BitVec 64))
(declare-fun temp778_182 () (_ BitVec 64))
(declare-fun temp778_183 () (_ BitVec 64))
(declare-fun temp778_184 () (_ BitVec 64))
(declare-fun temp778_185 () (_ BitVec 64))
(declare-fun temp778_186 () (_ BitVec 64))
(declare-fun temp778_187 () (_ BitVec 64))
(declare-fun temp778_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp778_189 () (_ BitVec 64))
(declare-fun temp778_191 () (_ BitVec 64))
(declare-fun temp778_192 () (_ BitVec 64))
(declare-fun temp778_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp778_193 () (_ BitVec 64))
(declare-fun temp778_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp778_195 () (_ BitVec 64))
(declare-fun temp778_196 () (_ BitVec 64))
(declare-fun temp778_197 () (_ BitVec 64))
(declare-fun temp778_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_199 () (_ BitVec 64))
(declare-fun temp778_200 () (_ BitVec 64))
(declare-fun temp778_201 () (_ BitVec 64))
(declare-fun temp778_202 () (_ BitVec 64))
(declare-fun temp778_203 () (_ BitVec 64))
(declare-fun temp778_204 () (_ BitVec 64))
(declare-fun temp778_205 () (_ BitVec 64))
(declare-fun temp778_206 () (_ BitVec 64))
(declare-fun temp778_207 () (_ BitVec 64))
(declare-fun temp778_208 () (_ BitVec 64))
(declare-fun temp778_209 () (_ BitVec 64))
(declare-fun temp778_210 () (_ BitVec 64))
(declare-fun temp778_211 () (_ BitVec 64))
(declare-fun temp778_212 () (_ BitVec 64))
(declare-fun temp778_213 () (_ BitVec 64))
(declare-fun temp778_214 () (_ BitVec 64))
(declare-fun temp778_215 () (_ BitVec 64))
(declare-fun temp778_216 () (_ BitVec 64))
(declare-fun temp778_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp778_218 () (_ BitVec 64))
(declare-fun temp778_220 () (_ BitVec 64))
(declare-fun temp778_221 () (_ BitVec 64))
(declare-fun temp778_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp778_222 () (_ BitVec 64))
(declare-fun temp778_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp778_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp778_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp778_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp778_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp778_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp778_229 () (_ BitVec 64))
(declare-fun temp778_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp778_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp778_232 () (_ BitVec 64))
(declare-fun temp778_233 () (_ BitVec 64))
(declare-fun temp778_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp778_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp778_236 () (_ BitVec 64))
(declare-fun temp778_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp778_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp778_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp778_241 () (_ BitVec 64))
(declare-fun temp778_240 () (_ BitVec 64))
(declare-fun temp778_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp778_243 () (_ BitVec 64))
(declare-fun temp778_244 () (_ BitVec 64))
(declare-fun temp778_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp778_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp778_247 () (_ BitVec 64))
(declare-fun temp778_248 () (_ BitVec 64))
(assert (= temp778_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp778_1)))
(assert (= temp778_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp778_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_3 #x0000000000000000))
(assert (= var79869 temp778_3))
(assert (= temp778_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp778_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_5 #x0000000000000000))
(assert (= var79914 temp778_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp778_6 #x0000000000000000))
(assert (= temp778_7 temp778_6))
(assert (= temp778_8 (select ARGNAME_padding_NAMEEND_VAL temp778_7)))
(assert (= temp778_9 #x0000000000000001))
(assert (= temp778_10 temp778_9))
(assert (= temp778_11 (select ARGNAME_padding_NAMEEND_VAL temp778_10)))
(assert (= temp778_12 #x0000000000000002))
(assert (= temp778_13 temp778_12))
(assert (= temp778_14 (select ARGNAME_padding_NAMEEND_VAL temp778_13)))
(assert (= temp778_15 #x0000000000000003))
(assert (= temp778_16 temp778_15))
(assert (= temp778_17 (select ARGNAME_padding_NAMEEND_VAL temp778_16)))
(assert (= temp778_18 #x0000000000000004))
(assert (= temp778_19 temp778_18))
(assert (= temp778_20 (select ARGNAME_padding_NAMEEND_VAL temp778_19)))
(assert (= temp778_21 #x0000000000000005))
(assert (= temp778_22 temp778_21))
(assert (= temp778_23 (select ARGNAME_padding_NAMEEND_VAL temp778_22)))
(assert (= temp778_24 #x0000000000000000))
(assert (= temp778_25 #x0000000000000000))
(assert (= temp778_26 temp778_25))
(assert (= temp778_27 (select ARGNAME_padding_NAMEEND_VAL temp778_26)))
(assert (= temp778_28 #x0000000000000000))
(assert (= temp778_29 #x0000000000000001))
(assert (= temp778_30 temp778_29))
(assert (= temp778_31 (select ARGNAME_padding_NAMEEND_VAL temp778_30)))
(assert (= temp778_32 #x0000000000000000))
(assert (= temp778_33 #x0000000000000002))
(assert (= temp778_34 temp778_33))
(assert (= temp778_35 (select ARGNAME_padding_NAMEEND_VAL temp778_34)))
(assert (= temp778_36 #x0000000000000000))
(assert (= temp778_37 #x0000000000000003))
(assert (= temp778_38 temp778_37))
(assert (= temp778_39 (select ARGNAME_padding_NAMEEND_VAL temp778_38)))
(assert (= temp778_40 #x0000000000000000))
(assert (= temp778_41 #x0000000000000004))
(assert (= temp778_42 temp778_41))
(assert (= temp778_43 (select ARGNAME_padding_NAMEEND_VAL temp778_42)))
(assert (= temp778_44 #x0000000000000000))
(assert (= temp778_45 #x0000000000000005))
(assert (= temp778_46 temp778_45))
(assert (= temp778_47 (select ARGNAME_padding_NAMEEND_VAL temp778_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp778_27 temp778_24)
             (bvslt temp778_31 temp778_28)
             (bvslt temp778_35 temp778_32)
             (bvslt temp778_39 temp778_36)
             (bvslt temp778_43 temp778_40)
             (bvslt temp778_47 temp778_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_48 #x0000000000000000))
(assert (= var1322786 temp778_48))
(assert (= temp778_49 #x0000000000000000))
(assert (= temp778_50 temp778_49))
(assert (= temp778_51 (select ARGNAME_output_padding_NAMEEND_VAL temp778_50)))
(assert (= temp778_52 #x0000000000000001))
(assert (= temp778_53 temp778_52))
(assert (= temp778_54 (select ARGNAME_output_padding_NAMEEND_VAL temp778_53)))
(assert (= temp778_55 #x0000000000000002))
(assert (= temp778_56 temp778_55))
(assert (= temp778_57 (select ARGNAME_output_padding_NAMEEND_VAL temp778_56)))
(assert (= temp778_58 #x0000000000000003))
(assert (= temp778_59 temp778_58))
(assert (= temp778_60 (select ARGNAME_output_padding_NAMEEND_VAL temp778_59)))
(assert (= temp778_61 #x0000000000000004))
(assert (= temp778_62 temp778_61))
(assert (= temp778_63 (select ARGNAME_output_padding_NAMEEND_VAL temp778_62)))
(assert (= temp778_64 #x0000000000000005))
(assert (= temp778_65 temp778_64))
(assert (= temp778_66 (select ARGNAME_output_padding_NAMEEND_VAL temp778_65)))
(assert (= temp778_67 #x0000000000000000))
(assert (= temp778_68 #x0000000000000000))
(assert (= temp778_69 temp778_68))
(assert (= temp778_70 (select ARGNAME_output_padding_NAMEEND_VAL temp778_69)))
(assert (= temp778_71 #x0000000000000000))
(assert (= temp778_72 #x0000000000000001))
(assert (= temp778_73 temp778_72))
(assert (= temp778_74 (select ARGNAME_output_padding_NAMEEND_VAL temp778_73)))
(assert (= temp778_75 #x0000000000000000))
(assert (= temp778_76 #x0000000000000002))
(assert (= temp778_77 temp778_76))
(assert (= temp778_78 (select ARGNAME_output_padding_NAMEEND_VAL temp778_77)))
(assert (= temp778_79 #x0000000000000000))
(assert (= temp778_80 #x0000000000000003))
(assert (= temp778_81 temp778_80))
(assert (= temp778_82 (select ARGNAME_output_padding_NAMEEND_VAL temp778_81)))
(assert (= temp778_83 #x0000000000000000))
(assert (= temp778_84 #x0000000000000004))
(assert (= temp778_85 temp778_84))
(assert (= temp778_86 (select ARGNAME_output_padding_NAMEEND_VAL temp778_85)))
(assert (= temp778_87 #x0000000000000000))
(assert (= temp778_88 #x0000000000000005))
(assert (= temp778_89 temp778_88))
(assert (= temp778_90 (select ARGNAME_output_padding_NAMEEND_VAL temp778_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp778_70 temp778_67)
             (bvslt temp778_74 temp778_71)
             (bvslt temp778_78 temp778_75)
             (bvslt temp778_82 temp778_79)
             (bvslt temp778_86 temp778_83)
             (bvslt temp778_90 temp778_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_91 #x0000000000000000))
(assert (= var1322797 temp778_91))
(assert (= temp778_92 #x0000000000000000))
(assert (= temp778_93 temp778_92))
(assert (= temp778_94 (select ARGNAME_stride_NAMEEND_VAL temp778_93)))
(assert (= temp778_95 #x0000000000000001))
(assert (= temp778_96 temp778_95))
(assert (= temp778_97 (select ARGNAME_stride_NAMEEND_VAL temp778_96)))
(assert (= temp778_98 #x0000000000000002))
(assert (= temp778_99 temp778_98))
(assert (= temp778_100 (select ARGNAME_stride_NAMEEND_VAL temp778_99)))
(assert (= temp778_101 #x0000000000000003))
(assert (= temp778_102 temp778_101))
(assert (= temp778_103 (select ARGNAME_stride_NAMEEND_VAL temp778_102)))
(assert (= temp778_104 #x0000000000000004))
(assert (= temp778_105 temp778_104))
(assert (= temp778_106 (select ARGNAME_stride_NAMEEND_VAL temp778_105)))
(assert (= temp778_107 #x0000000000000005))
(assert (= temp778_108 temp778_107))
(assert (= temp778_109 (select ARGNAME_stride_NAMEEND_VAL temp778_108)))
(assert (= temp778_110 #x0000000000000000))
(assert (= temp778_111 #x0000000000000000))
(assert (= temp778_112 temp778_111))
(assert (= temp778_113 (select ARGNAME_stride_NAMEEND_VAL temp778_112)))
(assert (= temp778_114 #x0000000000000000))
(assert (= temp778_115 #x0000000000000001))
(assert (= temp778_116 temp778_115))
(assert (= temp778_117 (select ARGNAME_stride_NAMEEND_VAL temp778_116)))
(assert (= temp778_118 #x0000000000000000))
(assert (= temp778_119 #x0000000000000002))
(assert (= temp778_120 temp778_119))
(assert (= temp778_121 (select ARGNAME_stride_NAMEEND_VAL temp778_120)))
(assert (= temp778_122 #x0000000000000000))
(assert (= temp778_123 #x0000000000000003))
(assert (= temp778_124 temp778_123))
(assert (= temp778_125 (select ARGNAME_stride_NAMEEND_VAL temp778_124)))
(assert (= temp778_126 #x0000000000000000))
(assert (= temp778_127 #x0000000000000004))
(assert (= temp778_128 temp778_127))
(assert (= temp778_129 (select ARGNAME_stride_NAMEEND_VAL temp778_128)))
(assert (= temp778_130 #x0000000000000000))
(assert (= temp778_131 #x0000000000000005))
(assert (= temp778_132 temp778_131))
(assert (= temp778_133 (select ARGNAME_stride_NAMEEND_VAL temp778_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp778_113 temp778_110)
             (bvsle temp778_117 temp778_114)
             (bvsle temp778_121 temp778_118)
             (bvsle temp778_125 temp778_122)
             (bvsle temp778_129 temp778_126)
             (bvsle temp778_133 temp778_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_134 #x0000000000000000))
(assert (= var1322807 temp778_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_135 #x0000000000000001))
(assert (= var1322819 temp778_135))
(assert (= temp778_136 #x0000000000000000))
(assert (= var1310898 temp778_136))
(assert (= temp778_137 #x0000000000000000))
(assert (= temp778_138 temp778_137))
(assert (= temp778_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_138)))
(assert (= temp778_140 #x0000000000000001))
(assert (= temp778_141 temp778_140))
(assert (= temp778_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_141)))
(assert (= temp778_143 #x0000000000000002))
(assert (= temp778_144 temp778_143))
(assert (= temp778_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_144)))
(assert (= temp778_146 #x0000000000000003))
(assert (= temp778_147 temp778_146))
(assert (= temp778_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_147)))
(assert (= temp778_149 #x0000000000000004))
(assert (= temp778_150 temp778_149))
(assert (= temp778_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_150)))
(assert (= temp778_152 #x0000000000000005))
(assert (= temp778_153 temp778_152))
(assert (= temp778_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_153)))
(assert (= temp778_156 var1310898))
(assert (= temp778_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_156)))
(assert (= temp778_155 temp778_157))
(assert (= var1322852
   (ite (bvslt temp778_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_158 #x0000000000000000))
(assert (= var1322852 temp778_158))
(assert (= temp778_159 #x0000000000000000))
(assert (= var1310898 temp778_159))
(assert (= temp778_161 var1310898))
(assert (= temp778_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_161)))
(assert (= temp778_160 temp778_162))
(assert (= var1322874 (bvsmod temp778_160 ARGNAME_groups_NAMEEND)))
(assert (= temp778_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp778_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_164 #x0000000000000001))
(assert (= var1322875 temp778_164))
(assert (= temp778_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp778_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_166 #x0000000000000001))
(assert (= var1322895 temp778_166))
(assert (= temp778_167 #x0000000000000001))
(assert (= var1311786 temp778_167))
(assert (= temp778_168 #x0000000000000000))
(assert (= temp778_169 temp778_168))
(assert (= temp778_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp778_169)))
(assert (= temp778_171 #x0000000000000001))
(assert (= temp778_172 temp778_171))
(assert (= temp778_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp778_172)))
(assert (= temp778_174 #x0000000000000002))
(assert (= temp778_175 temp778_174))
(assert (= temp778_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp778_175)))
(assert (= temp778_177 #x0000000000000003))
(assert (= temp778_178 temp778_177))
(assert (= temp778_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp778_178)))
(assert (= temp778_180 #x0000000000000004))
(assert (= temp778_181 temp778_180))
(assert (= temp778_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp778_181)))
(assert (= temp778_183 #x0000000000000005))
(assert (= temp778_184 temp778_183))
(assert (= temp778_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp778_184)))
(assert (= temp778_186 #x0000000000000000))
(assert (= temp778_187
   (ite (bvslt var1311786 temp778_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp778_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp778_187)))
(assert (= var1322903 temp778_188))
(assert (bvslt (ite (bvslt var1311786 temp778_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp778_189 #x0000000000000001))
(assert (= var1311786 temp778_189))
(assert (= temp778_191 var1311786))
(assert (= temp778_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_191)))
(assert (= temp778_190 temp778_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp778_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_193 #x0000000000000001))
(assert (= var1322908 temp778_193))
(assert (= temp778_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp778_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_195 #x0000000000000001))
(assert (= var1322975 temp778_195))
(assert (= temp778_196 #x0000000000000000))
(assert (= var1310898 temp778_196))
(assert (= temp778_197 #x0000000000000000))
(assert (= temp778_198 temp778_197))
(assert (= temp778_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp778_198)))
(assert (= temp778_200 #x0000000000000001))
(assert (= temp778_201 temp778_200))
(assert (= temp778_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp778_201)))
(assert (= temp778_203 #x0000000000000002))
(assert (= temp778_204 temp778_203))
(assert (= temp778_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp778_204)))
(assert (= temp778_206 #x0000000000000003))
(assert (= temp778_207 temp778_206))
(assert (= temp778_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp778_207)))
(assert (= temp778_209 #x0000000000000004))
(assert (= temp778_210 temp778_209))
(assert (= temp778_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp778_210)))
(assert (= temp778_212 #x0000000000000005))
(assert (= temp778_213 temp778_212))
(assert (= temp778_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp778_213)))
(assert (= temp778_215 #x0000000000000000))
(assert (= temp778_216
   (ite (bvslt var1310898 temp778_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp778_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp778_216)))
(assert (= var1322977 temp778_217))
(assert (bvslt (ite (bvslt var1310898 temp778_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp778_218 #x0000000000000000))
(assert (= var1310898 temp778_218))
(assert (= temp778_220 var1310898))
(assert (= temp778_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_220)))
(assert (= temp778_219 temp778_221))
(assert (= var1322980
   (ite (= var1322977 temp778_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_222 #x0000000000000001))
(assert (= var1322980 temp778_222))
(assert (= temp778_223 #x0000000000000002))
(assert (= var1848169 temp778_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp778_225 #x0000000000000001))
(assert (= var1323065 temp778_225))
(assert (= temp778_226 #x0000000000000001))
(assert (= var3486735 temp778_226))
(assert (= temp778_227 #x0000000000000001))
(assert (= var3814415 temp778_227))
(assert (= temp778_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp778_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_229 #x0000000000000001))
(assert (= var79986 temp778_229))
(assert (= temp778_230 #x0000000000000001))
(assert (= var80116 temp778_230))
(assert (= var4796905 var80116))
(assert (= temp778_231 #x0000000000000000))
(assert (= var4784306 temp778_231))
(assert (= temp778_232 #x0000000000000000))
(assert (= temp778_233
   (ite (bvslt var4784306 temp778_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp778_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp778_233)))
(assert (= var4796924 temp778_234))
(assert (bvslt (ite (bvslt var4784306 temp778_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp778_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp778_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_236 #x0000000000000001))
(assert (= var4796925 temp778_236))
(assert (= temp778_237 #x0000000000000000))
(assert (= var4996927 temp778_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp778_238 #x0000000000000002))
(assert (= var5125763 temp778_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_239 #x0000000000000000))
(assert (= var5191324 temp778_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp778_241 #xffffffffffffffff))
(assert (= temp778_240 temp778_241))
(assert (= temp778_242 #x0000000000000001))
(assert (= var66602 temp778_242))
(assert (= temp778_243 #x0000000000000000))
(assert (= temp778_244
   (ite (bvslt var66602 temp778_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp778_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp778_244)))
(assert (= var80523 temp778_245))
(assert (bvslt (ite (bvslt var66602 temp778_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp778_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp778_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_247 #x0000000000000000))
(assert (= var80524 temp778_247))
(assert (= temp778_248 #x0000000000000001))
(assert (= var79986 temp778_248))
(model-add temp778_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp778_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp778_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






