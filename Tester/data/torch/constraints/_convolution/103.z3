(declare-fun temp136_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp136_2 () (_ BitVec 64))
(declare-fun temp136_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp136_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp136_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp136_6 () (_ BitVec 64))
(declare-fun temp136_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_8 () (_ BitVec 64))
(declare-fun temp136_9 () (_ BitVec 64))
(declare-fun temp136_10 () (_ BitVec 64))
(declare-fun temp136_11 () (_ BitVec 64))
(declare-fun temp136_12 () (_ BitVec 64))
(declare-fun temp136_13 () (_ BitVec 64))
(declare-fun temp136_14 () (_ BitVec 64))
(declare-fun temp136_15 () (_ BitVec 64))
(declare-fun temp136_16 () (_ BitVec 64))
(declare-fun temp136_17 () (_ BitVec 64))
(declare-fun temp136_18 () (_ BitVec 64))
(declare-fun temp136_19 () (_ BitVec 64))
(declare-fun temp136_20 () (_ BitVec 64))
(declare-fun temp136_21 () (_ BitVec 64))
(declare-fun temp136_22 () (_ BitVec 64))
(declare-fun temp136_23 () (_ BitVec 64))
(declare-fun temp136_24 () (_ BitVec 64))
(declare-fun temp136_25 () (_ BitVec 64))
(declare-fun temp136_26 () (_ BitVec 64))
(declare-fun temp136_27 () (_ BitVec 64))
(declare-fun temp136_28 () (_ BitVec 64))
(declare-fun temp136_29 () (_ BitVec 64))
(declare-fun temp136_30 () (_ BitVec 64))
(declare-fun temp136_31 () (_ BitVec 64))
(declare-fun temp136_32 () (_ BitVec 64))
(declare-fun temp136_33 () (_ BitVec 64))
(declare-fun temp136_34 () (_ BitVec 64))
(declare-fun temp136_35 () (_ BitVec 64))
(declare-fun temp136_36 () (_ BitVec 64))
(declare-fun temp136_37 () (_ BitVec 64))
(declare-fun temp136_38 () (_ BitVec 64))
(declare-fun temp136_39 () (_ BitVec 64))
(declare-fun temp136_40 () (_ BitVec 64))
(declare-fun temp136_41 () (_ BitVec 64))
(declare-fun temp136_42 () (_ BitVec 64))
(declare-fun temp136_43 () (_ BitVec 64))
(declare-fun temp136_44 () (_ BitVec 64))
(declare-fun temp136_45 () (_ BitVec 64))
(declare-fun temp136_46 () (_ BitVec 64))
(declare-fun temp136_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp136_48 () (_ BitVec 64))
(declare-fun temp136_49 () (_ BitVec 64))
(declare-fun temp136_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_51 () (_ BitVec 64))
(declare-fun temp136_52 () (_ BitVec 64))
(declare-fun temp136_53 () (_ BitVec 64))
(declare-fun temp136_54 () (_ BitVec 64))
(declare-fun temp136_55 () (_ BitVec 64))
(declare-fun temp136_56 () (_ BitVec 64))
(declare-fun temp136_57 () (_ BitVec 64))
(declare-fun temp136_58 () (_ BitVec 64))
(declare-fun temp136_59 () (_ BitVec 64))
(declare-fun temp136_60 () (_ BitVec 64))
(declare-fun temp136_61 () (_ BitVec 64))
(declare-fun temp136_62 () (_ BitVec 64))
(declare-fun temp136_63 () (_ BitVec 64))
(declare-fun temp136_64 () (_ BitVec 64))
(declare-fun temp136_65 () (_ BitVec 64))
(declare-fun temp136_66 () (_ BitVec 64))
(declare-fun temp136_67 () (_ BitVec 64))
(declare-fun temp136_68 () (_ BitVec 64))
(declare-fun temp136_69 () (_ BitVec 64))
(declare-fun temp136_70 () (_ BitVec 64))
(declare-fun temp136_71 () (_ BitVec 64))
(declare-fun temp136_72 () (_ BitVec 64))
(declare-fun temp136_73 () (_ BitVec 64))
(declare-fun temp136_74 () (_ BitVec 64))
(declare-fun temp136_75 () (_ BitVec 64))
(declare-fun temp136_76 () (_ BitVec 64))
(declare-fun temp136_77 () (_ BitVec 64))
(declare-fun temp136_78 () (_ BitVec 64))
(declare-fun temp136_79 () (_ BitVec 64))
(declare-fun temp136_80 () (_ BitVec 64))
(declare-fun temp136_81 () (_ BitVec 64))
(declare-fun temp136_82 () (_ BitVec 64))
(declare-fun temp136_83 () (_ BitVec 64))
(declare-fun temp136_84 () (_ BitVec 64))
(declare-fun temp136_85 () (_ BitVec 64))
(declare-fun temp136_86 () (_ BitVec 64))
(declare-fun temp136_87 () (_ BitVec 64))
(declare-fun temp136_88 () (_ BitVec 64))
(declare-fun temp136_89 () (_ BitVec 64))
(declare-fun temp136_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp136_91 () (_ BitVec 64))
(declare-fun temp136_92 () (_ BitVec 64))
(declare-fun temp136_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_94 () (_ BitVec 64))
(declare-fun temp136_95 () (_ BitVec 64))
(declare-fun temp136_96 () (_ BitVec 64))
(declare-fun temp136_97 () (_ BitVec 64))
(declare-fun temp136_98 () (_ BitVec 64))
(declare-fun temp136_99 () (_ BitVec 64))
(declare-fun temp136_100 () (_ BitVec 64))
(declare-fun temp136_101 () (_ BitVec 64))
(declare-fun temp136_102 () (_ BitVec 64))
(declare-fun temp136_103 () (_ BitVec 64))
(declare-fun temp136_104 () (_ BitVec 64))
(declare-fun temp136_105 () (_ BitVec 64))
(declare-fun temp136_106 () (_ BitVec 64))
(declare-fun temp136_107 () (_ BitVec 64))
(declare-fun temp136_108 () (_ BitVec 64))
(declare-fun temp136_109 () (_ BitVec 64))
(declare-fun temp136_110 () (_ BitVec 64))
(declare-fun temp136_111 () (_ BitVec 64))
(declare-fun temp136_112 () (_ BitVec 64))
(declare-fun temp136_113 () (_ BitVec 64))
(declare-fun temp136_114 () (_ BitVec 64))
(declare-fun temp136_115 () (_ BitVec 64))
(declare-fun temp136_116 () (_ BitVec 64))
(declare-fun temp136_117 () (_ BitVec 64))
(declare-fun temp136_118 () (_ BitVec 64))
(declare-fun temp136_119 () (_ BitVec 64))
(declare-fun temp136_120 () (_ BitVec 64))
(declare-fun temp136_121 () (_ BitVec 64))
(declare-fun temp136_122 () (_ BitVec 64))
(declare-fun temp136_123 () (_ BitVec 64))
(declare-fun temp136_124 () (_ BitVec 64))
(declare-fun temp136_125 () (_ BitVec 64))
(declare-fun temp136_126 () (_ BitVec 64))
(declare-fun temp136_127 () (_ BitVec 64))
(declare-fun temp136_128 () (_ BitVec 64))
(declare-fun temp136_129 () (_ BitVec 64))
(declare-fun temp136_130 () (_ BitVec 64))
(declare-fun temp136_131 () (_ BitVec 64))
(declare-fun temp136_132 () (_ BitVec 64))
(declare-fun temp136_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp136_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp136_135 () (_ BitVec 64))
(declare-fun temp136_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp136_137 () (_ BitVec 64))
(declare-fun temp136_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_139 () (_ BitVec 64))
(declare-fun temp136_140 () (_ BitVec 64))
(declare-fun temp136_141 () (_ BitVec 64))
(declare-fun temp136_142 () (_ BitVec 64))
(declare-fun temp136_143 () (_ BitVec 64))
(declare-fun temp136_144 () (_ BitVec 64))
(declare-fun temp136_145 () (_ BitVec 64))
(declare-fun temp136_146 () (_ BitVec 64))
(declare-fun temp136_147 () (_ BitVec 64))
(declare-fun temp136_148 () (_ BitVec 64))
(declare-fun temp136_149 () (_ BitVec 64))
(declare-fun temp136_150 () (_ BitVec 64))
(declare-fun temp136_151 () (_ BitVec 64))
(declare-fun temp136_152 () (_ BitVec 64))
(declare-fun temp136_153 () (_ BitVec 64))
(declare-fun temp136_154 () (_ BitVec 64))
(declare-fun temp136_156 () (_ BitVec 64))
(declare-fun temp136_157 () (_ BitVec 64))
(declare-fun temp136_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp136_158 () (_ BitVec 64))
(declare-fun temp136_159 () (_ BitVec 64))
(declare-fun temp136_161 () (_ BitVec 64))
(declare-fun temp136_162 () (_ BitVec 64))
(declare-fun temp136_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp136_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp136_164 () (_ BitVec 64))
(declare-fun temp136_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp136_166 () (_ BitVec 64))
(declare-fun temp136_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp136_168 () (_ BitVec 64))
(declare-fun temp136_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_170 () (_ BitVec 64))
(declare-fun temp136_171 () (_ BitVec 64))
(declare-fun temp136_172 () (_ BitVec 64))
(declare-fun temp136_173 () (_ BitVec 64))
(declare-fun temp136_174 () (_ BitVec 64))
(declare-fun temp136_175 () (_ BitVec 64))
(declare-fun temp136_176 () (_ BitVec 64))
(declare-fun temp136_177 () (_ BitVec 64))
(declare-fun temp136_178 () (_ BitVec 64))
(declare-fun temp136_179 () (_ BitVec 64))
(declare-fun temp136_180 () (_ BitVec 64))
(declare-fun temp136_181 () (_ BitVec 64))
(declare-fun temp136_182 () (_ BitVec 64))
(declare-fun temp136_183 () (_ BitVec 64))
(declare-fun temp136_184 () (_ BitVec 64))
(declare-fun temp136_185 () (_ BitVec 64))
(declare-fun temp136_186 () (_ BitVec 64))
(declare-fun temp136_187 () (_ BitVec 64))
(declare-fun temp136_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp136_189 () (_ BitVec 64))
(declare-fun temp136_191 () (_ BitVec 64))
(declare-fun temp136_192 () (_ BitVec 64))
(declare-fun temp136_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp136_193 () (_ BitVec 64))
(declare-fun temp136_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp136_195 () (_ BitVec 64))
(declare-fun temp136_196 () (_ BitVec 64))
(declare-fun temp136_197 () (_ BitVec 64))
(declare-fun temp136_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_199 () (_ BitVec 64))
(declare-fun temp136_200 () (_ BitVec 64))
(declare-fun temp136_201 () (_ BitVec 64))
(declare-fun temp136_202 () (_ BitVec 64))
(declare-fun temp136_203 () (_ BitVec 64))
(declare-fun temp136_204 () (_ BitVec 64))
(declare-fun temp136_205 () (_ BitVec 64))
(declare-fun temp136_206 () (_ BitVec 64))
(declare-fun temp136_207 () (_ BitVec 64))
(declare-fun temp136_208 () (_ BitVec 64))
(declare-fun temp136_209 () (_ BitVec 64))
(declare-fun temp136_210 () (_ BitVec 64))
(declare-fun temp136_211 () (_ BitVec 64))
(declare-fun temp136_212 () (_ BitVec 64))
(declare-fun temp136_213 () (_ BitVec 64))
(declare-fun temp136_214 () (_ BitVec 64))
(declare-fun temp136_215 () (_ BitVec 64))
(declare-fun temp136_216 () (_ BitVec 64))
(declare-fun temp136_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp136_218 () (_ BitVec 64))
(declare-fun temp136_220 () (_ BitVec 64))
(declare-fun temp136_221 () (_ BitVec 64))
(declare-fun temp136_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp136_222 () (_ BitVec 64))
(declare-fun temp136_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp136_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp136_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp136_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp136_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp136_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp136_229 () (_ BitVec 64))
(declare-fun temp136_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp136_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp136_232 () (_ BitVec 64))
(declare-fun temp136_233 () (_ BitVec 64))
(declare-fun temp136_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp136_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp136_236 () (_ BitVec 64))
(declare-fun temp136_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp136_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp136_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp136_241 () (_ BitVec 64))
(declare-fun temp136_240 () (_ BitVec 64))
(declare-fun temp136_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp136_243 () (_ BitVec 64))
(declare-fun temp136_244 () (_ BitVec 64))
(declare-fun temp136_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp136_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp136_247 () (_ BitVec 64))
(declare-fun temp136_249 () (_ BitVec 64))
(declare-fun temp136_248 () (_ BitVec 64))
(declare-fun temp136_250 () (_ BitVec 64))
(declare-fun temp136_251 () (_ BitVec 64))
(declare-fun var6370068 () (_ BitVec 64))
(declare-fun var6370035 () (_ BitVec 64))
(declare-fun var6238599 () (_ BitVec 64))
(declare-fun var6238595 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp136_252 () (_ BitVec 64))
(assert (= temp136_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp136_1)))
(assert (= temp136_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp136_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_3 #x0000000000000000))
(assert (= var79869 temp136_3))
(assert (= temp136_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp136_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_5 #x0000000000000000))
(assert (= var79914 temp136_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp136_6 #x0000000000000000))
(assert (= temp136_7 temp136_6))
(assert (= temp136_8 (select ARGNAME_padding_NAMEEND_VAL temp136_7)))
(assert (= temp136_9 #x0000000000000001))
(assert (= temp136_10 temp136_9))
(assert (= temp136_11 (select ARGNAME_padding_NAMEEND_VAL temp136_10)))
(assert (= temp136_12 #x0000000000000002))
(assert (= temp136_13 temp136_12))
(assert (= temp136_14 (select ARGNAME_padding_NAMEEND_VAL temp136_13)))
(assert (= temp136_15 #x0000000000000003))
(assert (= temp136_16 temp136_15))
(assert (= temp136_17 (select ARGNAME_padding_NAMEEND_VAL temp136_16)))
(assert (= temp136_18 #x0000000000000004))
(assert (= temp136_19 temp136_18))
(assert (= temp136_20 (select ARGNAME_padding_NAMEEND_VAL temp136_19)))
(assert (= temp136_21 #x0000000000000005))
(assert (= temp136_22 temp136_21))
(assert (= temp136_23 (select ARGNAME_padding_NAMEEND_VAL temp136_22)))
(assert (= temp136_24 #x0000000000000000))
(assert (= temp136_25 #x0000000000000000))
(assert (= temp136_26 temp136_25))
(assert (= temp136_27 (select ARGNAME_padding_NAMEEND_VAL temp136_26)))
(assert (= temp136_28 #x0000000000000000))
(assert (= temp136_29 #x0000000000000001))
(assert (= temp136_30 temp136_29))
(assert (= temp136_31 (select ARGNAME_padding_NAMEEND_VAL temp136_30)))
(assert (= temp136_32 #x0000000000000000))
(assert (= temp136_33 #x0000000000000002))
(assert (= temp136_34 temp136_33))
(assert (= temp136_35 (select ARGNAME_padding_NAMEEND_VAL temp136_34)))
(assert (= temp136_36 #x0000000000000000))
(assert (= temp136_37 #x0000000000000003))
(assert (= temp136_38 temp136_37))
(assert (= temp136_39 (select ARGNAME_padding_NAMEEND_VAL temp136_38)))
(assert (= temp136_40 #x0000000000000000))
(assert (= temp136_41 #x0000000000000004))
(assert (= temp136_42 temp136_41))
(assert (= temp136_43 (select ARGNAME_padding_NAMEEND_VAL temp136_42)))
(assert (= temp136_44 #x0000000000000000))
(assert (= temp136_45 #x0000000000000005))
(assert (= temp136_46 temp136_45))
(assert (= temp136_47 (select ARGNAME_padding_NAMEEND_VAL temp136_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp136_27 temp136_24)
             (bvslt temp136_31 temp136_28)
             (bvslt temp136_35 temp136_32)
             (bvslt temp136_39 temp136_36)
             (bvslt temp136_43 temp136_40)
             (bvslt temp136_47 temp136_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_48 #x0000000000000000))
(assert (= var1322786 temp136_48))
(assert (= temp136_49 #x0000000000000000))
(assert (= temp136_50 temp136_49))
(assert (= temp136_51 (select ARGNAME_output_padding_NAMEEND_VAL temp136_50)))
(assert (= temp136_52 #x0000000000000001))
(assert (= temp136_53 temp136_52))
(assert (= temp136_54 (select ARGNAME_output_padding_NAMEEND_VAL temp136_53)))
(assert (= temp136_55 #x0000000000000002))
(assert (= temp136_56 temp136_55))
(assert (= temp136_57 (select ARGNAME_output_padding_NAMEEND_VAL temp136_56)))
(assert (= temp136_58 #x0000000000000003))
(assert (= temp136_59 temp136_58))
(assert (= temp136_60 (select ARGNAME_output_padding_NAMEEND_VAL temp136_59)))
(assert (= temp136_61 #x0000000000000004))
(assert (= temp136_62 temp136_61))
(assert (= temp136_63 (select ARGNAME_output_padding_NAMEEND_VAL temp136_62)))
(assert (= temp136_64 #x0000000000000005))
(assert (= temp136_65 temp136_64))
(assert (= temp136_66 (select ARGNAME_output_padding_NAMEEND_VAL temp136_65)))
(assert (= temp136_67 #x0000000000000000))
(assert (= temp136_68 #x0000000000000000))
(assert (= temp136_69 temp136_68))
(assert (= temp136_70 (select ARGNAME_output_padding_NAMEEND_VAL temp136_69)))
(assert (= temp136_71 #x0000000000000000))
(assert (= temp136_72 #x0000000000000001))
(assert (= temp136_73 temp136_72))
(assert (= temp136_74 (select ARGNAME_output_padding_NAMEEND_VAL temp136_73)))
(assert (= temp136_75 #x0000000000000000))
(assert (= temp136_76 #x0000000000000002))
(assert (= temp136_77 temp136_76))
(assert (= temp136_78 (select ARGNAME_output_padding_NAMEEND_VAL temp136_77)))
(assert (= temp136_79 #x0000000000000000))
(assert (= temp136_80 #x0000000000000003))
(assert (= temp136_81 temp136_80))
(assert (= temp136_82 (select ARGNAME_output_padding_NAMEEND_VAL temp136_81)))
(assert (= temp136_83 #x0000000000000000))
(assert (= temp136_84 #x0000000000000004))
(assert (= temp136_85 temp136_84))
(assert (= temp136_86 (select ARGNAME_output_padding_NAMEEND_VAL temp136_85)))
(assert (= temp136_87 #x0000000000000000))
(assert (= temp136_88 #x0000000000000005))
(assert (= temp136_89 temp136_88))
(assert (= temp136_90 (select ARGNAME_output_padding_NAMEEND_VAL temp136_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp136_70 temp136_67)
             (bvslt temp136_74 temp136_71)
             (bvslt temp136_78 temp136_75)
             (bvslt temp136_82 temp136_79)
             (bvslt temp136_86 temp136_83)
             (bvslt temp136_90 temp136_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_91 #x0000000000000000))
(assert (= var1322797 temp136_91))
(assert (= temp136_92 #x0000000000000000))
(assert (= temp136_93 temp136_92))
(assert (= temp136_94 (select ARGNAME_stride_NAMEEND_VAL temp136_93)))
(assert (= temp136_95 #x0000000000000001))
(assert (= temp136_96 temp136_95))
(assert (= temp136_97 (select ARGNAME_stride_NAMEEND_VAL temp136_96)))
(assert (= temp136_98 #x0000000000000002))
(assert (= temp136_99 temp136_98))
(assert (= temp136_100 (select ARGNAME_stride_NAMEEND_VAL temp136_99)))
(assert (= temp136_101 #x0000000000000003))
(assert (= temp136_102 temp136_101))
(assert (= temp136_103 (select ARGNAME_stride_NAMEEND_VAL temp136_102)))
(assert (= temp136_104 #x0000000000000004))
(assert (= temp136_105 temp136_104))
(assert (= temp136_106 (select ARGNAME_stride_NAMEEND_VAL temp136_105)))
(assert (= temp136_107 #x0000000000000005))
(assert (= temp136_108 temp136_107))
(assert (= temp136_109 (select ARGNAME_stride_NAMEEND_VAL temp136_108)))
(assert (= temp136_110 #x0000000000000000))
(assert (= temp136_111 #x0000000000000000))
(assert (= temp136_112 temp136_111))
(assert (= temp136_113 (select ARGNAME_stride_NAMEEND_VAL temp136_112)))
(assert (= temp136_114 #x0000000000000000))
(assert (= temp136_115 #x0000000000000001))
(assert (= temp136_116 temp136_115))
(assert (= temp136_117 (select ARGNAME_stride_NAMEEND_VAL temp136_116)))
(assert (= temp136_118 #x0000000000000000))
(assert (= temp136_119 #x0000000000000002))
(assert (= temp136_120 temp136_119))
(assert (= temp136_121 (select ARGNAME_stride_NAMEEND_VAL temp136_120)))
(assert (= temp136_122 #x0000000000000000))
(assert (= temp136_123 #x0000000000000003))
(assert (= temp136_124 temp136_123))
(assert (= temp136_125 (select ARGNAME_stride_NAMEEND_VAL temp136_124)))
(assert (= temp136_126 #x0000000000000000))
(assert (= temp136_127 #x0000000000000004))
(assert (= temp136_128 temp136_127))
(assert (= temp136_129 (select ARGNAME_stride_NAMEEND_VAL temp136_128)))
(assert (= temp136_130 #x0000000000000000))
(assert (= temp136_131 #x0000000000000005))
(assert (= temp136_132 temp136_131))
(assert (= temp136_133 (select ARGNAME_stride_NAMEEND_VAL temp136_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp136_113 temp136_110)
             (bvsle temp136_117 temp136_114)
             (bvsle temp136_121 temp136_118)
             (bvsle temp136_125 temp136_122)
             (bvsle temp136_129 temp136_126)
             (bvsle temp136_133 temp136_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_134 #x0000000000000000))
(assert (= var1322807 temp136_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_135 #x0000000000000001))
(assert (= var1322819 temp136_135))
(assert (= temp136_136 #x0000000000000000))
(assert (= var1310898 temp136_136))
(assert (= temp136_137 #x0000000000000000))
(assert (= temp136_138 temp136_137))
(assert (= temp136_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_138)))
(assert (= temp136_140 #x0000000000000001))
(assert (= temp136_141 temp136_140))
(assert (= temp136_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_141)))
(assert (= temp136_143 #x0000000000000002))
(assert (= temp136_144 temp136_143))
(assert (= temp136_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_144)))
(assert (= temp136_146 #x0000000000000003))
(assert (= temp136_147 temp136_146))
(assert (= temp136_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_147)))
(assert (= temp136_149 #x0000000000000004))
(assert (= temp136_150 temp136_149))
(assert (= temp136_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_150)))
(assert (= temp136_152 #x0000000000000005))
(assert (= temp136_153 temp136_152))
(assert (= temp136_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_153)))
(assert (= temp136_156 var1310898))
(assert (= temp136_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_156)))
(assert (= temp136_155 temp136_157))
(assert (= var1322852
   (ite (bvslt temp136_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_158 #x0000000000000000))
(assert (= var1322852 temp136_158))
(assert (= temp136_159 #x0000000000000000))
(assert (= var1310898 temp136_159))
(assert (= temp136_161 var1310898))
(assert (= temp136_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_161)))
(assert (= temp136_160 temp136_162))
(assert (= var1322874 (bvsmod temp136_160 ARGNAME_groups_NAMEEND)))
(assert (= temp136_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp136_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp136_164 #x0000000000000001))
(assert (= var1322875 temp136_164))
(assert (= temp136_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp136_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_166 #x0000000000000001))
(assert (= var1322895 temp136_166))
(assert (= temp136_167 #x0000000000000001))
(assert (= var1311786 temp136_167))
(assert (= temp136_168 #x0000000000000000))
(assert (= temp136_169 temp136_168))
(assert (= temp136_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_169)))
(assert (= temp136_171 #x0000000000000001))
(assert (= temp136_172 temp136_171))
(assert (= temp136_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_172)))
(assert (= temp136_174 #x0000000000000002))
(assert (= temp136_175 temp136_174))
(assert (= temp136_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_175)))
(assert (= temp136_177 #x0000000000000003))
(assert (= temp136_178 temp136_177))
(assert (= temp136_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_178)))
(assert (= temp136_180 #x0000000000000004))
(assert (= temp136_181 temp136_180))
(assert (= temp136_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_181)))
(assert (= temp136_183 #x0000000000000005))
(assert (= temp136_184 temp136_183))
(assert (= temp136_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_184)))
(assert (= temp136_186 #x0000000000000000))
(assert (= temp136_187
   (ite (bvslt var1311786 temp136_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp136_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_187)))
(assert (= var1322903 temp136_188))
(assert (bvslt (ite (bvslt var1311786 temp136_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp136_189 #x0000000000000001))
(assert (= var1311786 temp136_189))
(assert (= temp136_191 var1311786))
(assert (= temp136_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_191)))
(assert (= temp136_190 temp136_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp136_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp136_193 #x0000000000000001))
(assert (= var1322908 temp136_193))
(assert (= temp136_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp136_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_195 #x0000000000000001))
(assert (= var1322975 temp136_195))
(assert (= temp136_196 #x0000000000000000))
(assert (= var1310898 temp136_196))
(assert (= temp136_197 #x0000000000000000))
(assert (= temp136_198 temp136_197))
(assert (= temp136_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp136_198)))
(assert (= temp136_200 #x0000000000000001))
(assert (= temp136_201 temp136_200))
(assert (= temp136_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp136_201)))
(assert (= temp136_203 #x0000000000000002))
(assert (= temp136_204 temp136_203))
(assert (= temp136_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp136_204)))
(assert (= temp136_206 #x0000000000000003))
(assert (= temp136_207 temp136_206))
(assert (= temp136_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp136_207)))
(assert (= temp136_209 #x0000000000000004))
(assert (= temp136_210 temp136_209))
(assert (= temp136_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp136_210)))
(assert (= temp136_212 #x0000000000000005))
(assert (= temp136_213 temp136_212))
(assert (= temp136_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp136_213)))
(assert (= temp136_215 #x0000000000000000))
(assert (= temp136_216
   (ite (bvslt var1310898 temp136_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp136_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp136_216)))
(assert (= var1322977 temp136_217))
(assert (bvslt (ite (bvslt var1310898 temp136_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp136_218 #x0000000000000000))
(assert (= var1310898 temp136_218))
(assert (= temp136_220 var1310898))
(assert (= temp136_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_220)))
(assert (= temp136_219 temp136_221))
(assert (= var1322980
   (ite (= var1322977 temp136_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp136_222 #x0000000000000001))
(assert (= var1322980 temp136_222))
(assert (= temp136_223 #x0000000000000002))
(assert (= var1848169 temp136_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp136_225 #x0000000000000001))
(assert (= var1323065 temp136_225))
(assert (= temp136_226 #x0000000000000001))
(assert (= var3486735 temp136_226))
(assert (= temp136_227 #x0000000000000001))
(assert (= var3814415 temp136_227))
(assert (= temp136_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp136_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_229 #x0000000000000001))
(assert (= var79986 temp136_229))
(assert (= temp136_230 #x0000000000000001))
(assert (= var80116 temp136_230))
(assert (= var4796905 var80116))
(assert (= temp136_231 #x0000000000000000))
(assert (= var4784306 temp136_231))
(assert (= temp136_232 #x0000000000000000))
(assert (= temp136_233
   (ite (bvslt var4784306 temp136_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp136_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_233)))
(assert (= var4796924 temp136_234))
(assert (bvslt (ite (bvslt var4784306 temp136_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp136_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp136_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp136_236 #x0000000000000001))
(assert (= var4796925 temp136_236))
(assert (= temp136_237 #x0000000000000000))
(assert (= var4996927 temp136_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp136_238 #x0000000000000002))
(assert (= var5125763 temp136_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_239 #x0000000000000000))
(assert (= var5191324 temp136_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp136_241 #xffffffffffffffff))
(assert (= temp136_240 temp136_241))
(assert (= temp136_242 #x0000000000000001))
(assert (= var66602 temp136_242))
(assert (= temp136_243 #x0000000000000000))
(assert (= temp136_244
   (ite (bvslt var66602 temp136_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp136_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_244)))
(assert (= var80523 temp136_245))
(assert (bvslt (ite (bvslt var66602 temp136_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp136_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp136_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp136_247 #x0000000000000001))
(assert (= var80524 temp136_247))
(assert (= temp136_249 #xffffffffffffffff))
(assert (= temp136_248 temp136_249))
(assert (= temp136_250 #x0000000000000001))
(assert (= var79986 temp136_250))
(assert (= temp136_251 #x0000000000000000))
(assert (= var6370068 temp136_251))
(assert (= var6370035 var6370068))
(assert (= var6238599 var6370035))
(assert (= var6238595 var6238599))
(assert (= var81597 var6238595))
(assert (= temp136_252 #x0000000000000000))
(assert (= var81597 temp136_252))
(model-add temp136_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp136_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp136_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






