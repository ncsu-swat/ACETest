(declare-fun temp1032_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1032_2 () (_ BitVec 64))
(declare-fun temp1032_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1032_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1032_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1032_6 () (_ BitVec 64))
(declare-fun temp1032_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1032_8 () (_ BitVec 64))
(declare-fun temp1032_9 () (_ BitVec 64))
(declare-fun temp1032_10 () (_ BitVec 64))
(declare-fun temp1032_11 () (_ BitVec 64))
(declare-fun temp1032_12 () (_ BitVec 64))
(declare-fun temp1032_13 () (_ BitVec 64))
(declare-fun temp1032_14 () (_ BitVec 64))
(declare-fun temp1032_15 () (_ BitVec 64))
(declare-fun temp1032_16 () (_ BitVec 64))
(declare-fun temp1032_17 () (_ BitVec 64))
(declare-fun temp1032_18 () (_ BitVec 64))
(declare-fun temp1032_19 () (_ BitVec 64))
(declare-fun temp1032_20 () (_ BitVec 64))
(declare-fun temp1032_21 () (_ BitVec 64))
(declare-fun temp1032_22 () (_ BitVec 64))
(declare-fun temp1032_23 () (_ BitVec 64))
(declare-fun temp1032_24 () (_ BitVec 64))
(declare-fun temp1032_25 () (_ BitVec 64))
(declare-fun temp1032_26 () (_ BitVec 64))
(declare-fun temp1032_27 () (_ BitVec 64))
(declare-fun temp1032_28 () (_ BitVec 64))
(declare-fun temp1032_29 () (_ BitVec 64))
(declare-fun temp1032_30 () (_ BitVec 64))
(declare-fun temp1032_31 () (_ BitVec 64))
(declare-fun temp1032_32 () (_ BitVec 64))
(declare-fun temp1032_33 () (_ BitVec 64))
(declare-fun temp1032_34 () (_ BitVec 64))
(declare-fun temp1032_35 () (_ BitVec 64))
(declare-fun temp1032_36 () (_ BitVec 64))
(declare-fun temp1032_37 () (_ BitVec 64))
(declare-fun temp1032_38 () (_ BitVec 64))
(declare-fun temp1032_39 () (_ BitVec 64))
(declare-fun temp1032_40 () (_ BitVec 64))
(declare-fun temp1032_41 () (_ BitVec 64))
(declare-fun temp1032_42 () (_ BitVec 64))
(declare-fun temp1032_43 () (_ BitVec 64))
(declare-fun temp1032_44 () (_ BitVec 64))
(declare-fun temp1032_45 () (_ BitVec 64))
(declare-fun temp1032_46 () (_ BitVec 64))
(declare-fun temp1032_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1032_48 () (_ BitVec 64))
(declare-fun temp1032_49 () (_ BitVec 64))
(declare-fun temp1032_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1032_51 () (_ BitVec 64))
(declare-fun temp1032_52 () (_ BitVec 64))
(declare-fun temp1032_53 () (_ BitVec 64))
(declare-fun temp1032_54 () (_ BitVec 64))
(declare-fun temp1032_55 () (_ BitVec 64))
(declare-fun temp1032_56 () (_ BitVec 64))
(declare-fun temp1032_57 () (_ BitVec 64))
(declare-fun temp1032_58 () (_ BitVec 64))
(declare-fun temp1032_59 () (_ BitVec 64))
(declare-fun temp1032_60 () (_ BitVec 64))
(declare-fun temp1032_61 () (_ BitVec 64))
(declare-fun temp1032_62 () (_ BitVec 64))
(declare-fun temp1032_63 () (_ BitVec 64))
(declare-fun temp1032_64 () (_ BitVec 64))
(declare-fun temp1032_65 () (_ BitVec 64))
(declare-fun temp1032_66 () (_ BitVec 64))
(declare-fun temp1032_67 () (_ BitVec 64))
(declare-fun temp1032_68 () (_ BitVec 64))
(declare-fun temp1032_69 () (_ BitVec 64))
(declare-fun temp1032_70 () (_ BitVec 64))
(declare-fun temp1032_71 () (_ BitVec 64))
(declare-fun temp1032_72 () (_ BitVec 64))
(declare-fun temp1032_73 () (_ BitVec 64))
(declare-fun temp1032_74 () (_ BitVec 64))
(declare-fun temp1032_75 () (_ BitVec 64))
(declare-fun temp1032_76 () (_ BitVec 64))
(declare-fun temp1032_77 () (_ BitVec 64))
(declare-fun temp1032_78 () (_ BitVec 64))
(declare-fun temp1032_79 () (_ BitVec 64))
(declare-fun temp1032_80 () (_ BitVec 64))
(declare-fun temp1032_81 () (_ BitVec 64))
(declare-fun temp1032_82 () (_ BitVec 64))
(declare-fun temp1032_83 () (_ BitVec 64))
(declare-fun temp1032_84 () (_ BitVec 64))
(declare-fun temp1032_85 () (_ BitVec 64))
(declare-fun temp1032_86 () (_ BitVec 64))
(declare-fun temp1032_87 () (_ BitVec 64))
(declare-fun temp1032_88 () (_ BitVec 64))
(declare-fun temp1032_89 () (_ BitVec 64))
(declare-fun temp1032_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1032_91 () (_ BitVec 64))
(declare-fun temp1032_92 () (_ BitVec 64))
(declare-fun temp1032_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1032_94 () (_ BitVec 64))
(declare-fun temp1032_95 () (_ BitVec 64))
(declare-fun temp1032_96 () (_ BitVec 64))
(declare-fun temp1032_97 () (_ BitVec 64))
(declare-fun temp1032_98 () (_ BitVec 64))
(declare-fun temp1032_99 () (_ BitVec 64))
(declare-fun temp1032_100 () (_ BitVec 64))
(declare-fun temp1032_101 () (_ BitVec 64))
(declare-fun temp1032_102 () (_ BitVec 64))
(declare-fun temp1032_103 () (_ BitVec 64))
(declare-fun temp1032_104 () (_ BitVec 64))
(declare-fun temp1032_105 () (_ BitVec 64))
(declare-fun temp1032_106 () (_ BitVec 64))
(declare-fun temp1032_107 () (_ BitVec 64))
(declare-fun temp1032_108 () (_ BitVec 64))
(declare-fun temp1032_109 () (_ BitVec 64))
(declare-fun temp1032_110 () (_ BitVec 64))
(declare-fun temp1032_111 () (_ BitVec 64))
(declare-fun temp1032_112 () (_ BitVec 64))
(declare-fun temp1032_113 () (_ BitVec 64))
(declare-fun temp1032_114 () (_ BitVec 64))
(declare-fun temp1032_115 () (_ BitVec 64))
(declare-fun temp1032_116 () (_ BitVec 64))
(declare-fun temp1032_117 () (_ BitVec 64))
(declare-fun temp1032_118 () (_ BitVec 64))
(declare-fun temp1032_119 () (_ BitVec 64))
(declare-fun temp1032_120 () (_ BitVec 64))
(declare-fun temp1032_121 () (_ BitVec 64))
(declare-fun temp1032_122 () (_ BitVec 64))
(declare-fun temp1032_123 () (_ BitVec 64))
(declare-fun temp1032_124 () (_ BitVec 64))
(declare-fun temp1032_125 () (_ BitVec 64))
(declare-fun temp1032_126 () (_ BitVec 64))
(declare-fun temp1032_127 () (_ BitVec 64))
(declare-fun temp1032_128 () (_ BitVec 64))
(declare-fun temp1032_129 () (_ BitVec 64))
(declare-fun temp1032_130 () (_ BitVec 64))
(declare-fun temp1032_131 () (_ BitVec 64))
(declare-fun temp1032_132 () (_ BitVec 64))
(declare-fun temp1032_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1032_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1032_135 () (_ BitVec 64))
(declare-fun temp1032_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1032_137 () (_ BitVec 64))
(declare-fun temp1032_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1032_139 () (_ BitVec 64))
(declare-fun temp1032_140 () (_ BitVec 64))
(declare-fun temp1032_141 () (_ BitVec 64))
(declare-fun temp1032_142 () (_ BitVec 64))
(declare-fun temp1032_143 () (_ BitVec 64))
(declare-fun temp1032_144 () (_ BitVec 64))
(declare-fun temp1032_145 () (_ BitVec 64))
(declare-fun temp1032_146 () (_ BitVec 64))
(declare-fun temp1032_147 () (_ BitVec 64))
(declare-fun temp1032_148 () (_ BitVec 64))
(declare-fun temp1032_149 () (_ BitVec 64))
(declare-fun temp1032_150 () (_ BitVec 64))
(declare-fun temp1032_151 () (_ BitVec 64))
(declare-fun temp1032_152 () (_ BitVec 64))
(declare-fun temp1032_153 () (_ BitVec 64))
(declare-fun temp1032_154 () (_ BitVec 64))
(declare-fun temp1032_156 () (_ BitVec 64))
(declare-fun temp1032_157 () (_ BitVec 64))
(declare-fun temp1032_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1032_158 () (_ BitVec 64))
(declare-fun temp1032_159 () (_ BitVec 64))
(declare-fun temp1032_161 () (_ BitVec 64))
(declare-fun temp1032_162 () (_ BitVec 64))
(declare-fun temp1032_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1032_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1032_164 () (_ BitVec 64))
(declare-fun temp1032_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1032_166 () (_ BitVec 64))
(declare-fun temp1032_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1032_168 () (_ BitVec 64))
(declare-fun temp1032_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1032_170 () (_ BitVec 64))
(declare-fun temp1032_171 () (_ BitVec 64))
(declare-fun temp1032_172 () (_ BitVec 64))
(declare-fun temp1032_173 () (_ BitVec 64))
(declare-fun temp1032_174 () (_ BitVec 64))
(declare-fun temp1032_175 () (_ BitVec 64))
(declare-fun temp1032_176 () (_ BitVec 64))
(declare-fun temp1032_177 () (_ BitVec 64))
(declare-fun temp1032_178 () (_ BitVec 64))
(declare-fun temp1032_179 () (_ BitVec 64))
(declare-fun temp1032_180 () (_ BitVec 64))
(declare-fun temp1032_181 () (_ BitVec 64))
(declare-fun temp1032_182 () (_ BitVec 64))
(declare-fun temp1032_183 () (_ BitVec 64))
(declare-fun temp1032_184 () (_ BitVec 64))
(declare-fun temp1032_185 () (_ BitVec 64))
(declare-fun temp1032_186 () (_ BitVec 64))
(declare-fun temp1032_187 () (_ BitVec 64))
(declare-fun temp1032_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1032_189 () (_ BitVec 64))
(declare-fun temp1032_191 () (_ BitVec 64))
(declare-fun temp1032_192 () (_ BitVec 64))
(declare-fun temp1032_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1032_193 () (_ BitVec 64))
(declare-fun temp1032_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1032_195 () (_ BitVec 64))
(declare-fun temp1032_196 () (_ BitVec 64))
(declare-fun temp1032_197 () (_ BitVec 64))
(declare-fun temp1032_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1032_199 () (_ BitVec 64))
(declare-fun temp1032_200 () (_ BitVec 64))
(declare-fun temp1032_201 () (_ BitVec 64))
(declare-fun temp1032_202 () (_ BitVec 64))
(declare-fun temp1032_203 () (_ BitVec 64))
(declare-fun temp1032_204 () (_ BitVec 64))
(declare-fun temp1032_205 () (_ BitVec 64))
(declare-fun temp1032_206 () (_ BitVec 64))
(declare-fun temp1032_207 () (_ BitVec 64))
(declare-fun temp1032_208 () (_ BitVec 64))
(declare-fun temp1032_209 () (_ BitVec 64))
(declare-fun temp1032_210 () (_ BitVec 64))
(declare-fun temp1032_211 () (_ BitVec 64))
(declare-fun temp1032_212 () (_ BitVec 64))
(declare-fun temp1032_213 () (_ BitVec 64))
(declare-fun temp1032_214 () (_ BitVec 64))
(declare-fun temp1032_215 () (_ BitVec 64))
(declare-fun temp1032_216 () (_ BitVec 64))
(declare-fun temp1032_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1032_218 () (_ BitVec 64))
(declare-fun temp1032_220 () (_ BitVec 64))
(declare-fun temp1032_221 () (_ BitVec 64))
(declare-fun temp1032_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1032_222 () (_ BitVec 64))
(declare-fun temp1032_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1032_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1032_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1032_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1032_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1032_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1032_229 () (_ BitVec 64))
(declare-fun temp1032_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1032_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1032_232 () (_ BitVec 64))
(declare-fun temp1032_233 () (_ BitVec 64))
(declare-fun temp1032_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1032_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1032_236 () (_ BitVec 64))
(declare-fun temp1032_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1032_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1032_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun var6107536 () (_ BitVec 64))
(declare-fun temp1032_240 () (_ BitVec 64))
(assert (= temp1032_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1032_1)))
(assert (= temp1032_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1032_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_3 #x0000000000000000))
(assert (= var79869 temp1032_3))
(assert (= temp1032_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1032_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_5 #x0000000000000000))
(assert (= var79914 temp1032_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1032_6 #x0000000000000000))
(assert (= temp1032_7 temp1032_6))
(assert (= temp1032_8 (select ARGNAME_padding_NAMEEND_VAL temp1032_7)))
(assert (= temp1032_9 #x0000000000000001))
(assert (= temp1032_10 temp1032_9))
(assert (= temp1032_11 (select ARGNAME_padding_NAMEEND_VAL temp1032_10)))
(assert (= temp1032_12 #x0000000000000002))
(assert (= temp1032_13 temp1032_12))
(assert (= temp1032_14 (select ARGNAME_padding_NAMEEND_VAL temp1032_13)))
(assert (= temp1032_15 #x0000000000000003))
(assert (= temp1032_16 temp1032_15))
(assert (= temp1032_17 (select ARGNAME_padding_NAMEEND_VAL temp1032_16)))
(assert (= temp1032_18 #x0000000000000004))
(assert (= temp1032_19 temp1032_18))
(assert (= temp1032_20 (select ARGNAME_padding_NAMEEND_VAL temp1032_19)))
(assert (= temp1032_21 #x0000000000000005))
(assert (= temp1032_22 temp1032_21))
(assert (= temp1032_23 (select ARGNAME_padding_NAMEEND_VAL temp1032_22)))
(assert (= temp1032_24 #x0000000000000000))
(assert (= temp1032_25 #x0000000000000000))
(assert (= temp1032_26 temp1032_25))
(assert (= temp1032_27 (select ARGNAME_padding_NAMEEND_VAL temp1032_26)))
(assert (= temp1032_28 #x0000000000000000))
(assert (= temp1032_29 #x0000000000000001))
(assert (= temp1032_30 temp1032_29))
(assert (= temp1032_31 (select ARGNAME_padding_NAMEEND_VAL temp1032_30)))
(assert (= temp1032_32 #x0000000000000000))
(assert (= temp1032_33 #x0000000000000002))
(assert (= temp1032_34 temp1032_33))
(assert (= temp1032_35 (select ARGNAME_padding_NAMEEND_VAL temp1032_34)))
(assert (= temp1032_36 #x0000000000000000))
(assert (= temp1032_37 #x0000000000000003))
(assert (= temp1032_38 temp1032_37))
(assert (= temp1032_39 (select ARGNAME_padding_NAMEEND_VAL temp1032_38)))
(assert (= temp1032_40 #x0000000000000000))
(assert (= temp1032_41 #x0000000000000004))
(assert (= temp1032_42 temp1032_41))
(assert (= temp1032_43 (select ARGNAME_padding_NAMEEND_VAL temp1032_42)))
(assert (= temp1032_44 #x0000000000000000))
(assert (= temp1032_45 #x0000000000000005))
(assert (= temp1032_46 temp1032_45))
(assert (= temp1032_47 (select ARGNAME_padding_NAMEEND_VAL temp1032_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1032_27 temp1032_24)
             (bvslt temp1032_31 temp1032_28)
             (bvslt temp1032_35 temp1032_32)
             (bvslt temp1032_39 temp1032_36)
             (bvslt temp1032_43 temp1032_40)
             (bvslt temp1032_47 temp1032_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_48 #x0000000000000000))
(assert (= var1322786 temp1032_48))
(assert (= temp1032_49 #x0000000000000000))
(assert (= temp1032_50 temp1032_49))
(assert (= temp1032_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_50)))
(assert (= temp1032_52 #x0000000000000001))
(assert (= temp1032_53 temp1032_52))
(assert (= temp1032_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_53)))
(assert (= temp1032_55 #x0000000000000002))
(assert (= temp1032_56 temp1032_55))
(assert (= temp1032_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_56)))
(assert (= temp1032_58 #x0000000000000003))
(assert (= temp1032_59 temp1032_58))
(assert (= temp1032_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_59)))
(assert (= temp1032_61 #x0000000000000004))
(assert (= temp1032_62 temp1032_61))
(assert (= temp1032_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_62)))
(assert (= temp1032_64 #x0000000000000005))
(assert (= temp1032_65 temp1032_64))
(assert (= temp1032_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_65)))
(assert (= temp1032_67 #x0000000000000000))
(assert (= temp1032_68 #x0000000000000000))
(assert (= temp1032_69 temp1032_68))
(assert (= temp1032_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_69)))
(assert (= temp1032_71 #x0000000000000000))
(assert (= temp1032_72 #x0000000000000001))
(assert (= temp1032_73 temp1032_72))
(assert (= temp1032_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_73)))
(assert (= temp1032_75 #x0000000000000000))
(assert (= temp1032_76 #x0000000000000002))
(assert (= temp1032_77 temp1032_76))
(assert (= temp1032_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_77)))
(assert (= temp1032_79 #x0000000000000000))
(assert (= temp1032_80 #x0000000000000003))
(assert (= temp1032_81 temp1032_80))
(assert (= temp1032_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_81)))
(assert (= temp1032_83 #x0000000000000000))
(assert (= temp1032_84 #x0000000000000004))
(assert (= temp1032_85 temp1032_84))
(assert (= temp1032_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_85)))
(assert (= temp1032_87 #x0000000000000000))
(assert (= temp1032_88 #x0000000000000005))
(assert (= temp1032_89 temp1032_88))
(assert (= temp1032_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1032_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1032_70 temp1032_67)
             (bvslt temp1032_74 temp1032_71)
             (bvslt temp1032_78 temp1032_75)
             (bvslt temp1032_82 temp1032_79)
             (bvslt temp1032_86 temp1032_83)
             (bvslt temp1032_90 temp1032_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_91 #x0000000000000000))
(assert (= var1322797 temp1032_91))
(assert (= temp1032_92 #x0000000000000000))
(assert (= temp1032_93 temp1032_92))
(assert (= temp1032_94 (select ARGNAME_stride_NAMEEND_VAL temp1032_93)))
(assert (= temp1032_95 #x0000000000000001))
(assert (= temp1032_96 temp1032_95))
(assert (= temp1032_97 (select ARGNAME_stride_NAMEEND_VAL temp1032_96)))
(assert (= temp1032_98 #x0000000000000002))
(assert (= temp1032_99 temp1032_98))
(assert (= temp1032_100 (select ARGNAME_stride_NAMEEND_VAL temp1032_99)))
(assert (= temp1032_101 #x0000000000000003))
(assert (= temp1032_102 temp1032_101))
(assert (= temp1032_103 (select ARGNAME_stride_NAMEEND_VAL temp1032_102)))
(assert (= temp1032_104 #x0000000000000004))
(assert (= temp1032_105 temp1032_104))
(assert (= temp1032_106 (select ARGNAME_stride_NAMEEND_VAL temp1032_105)))
(assert (= temp1032_107 #x0000000000000005))
(assert (= temp1032_108 temp1032_107))
(assert (= temp1032_109 (select ARGNAME_stride_NAMEEND_VAL temp1032_108)))
(assert (= temp1032_110 #x0000000000000000))
(assert (= temp1032_111 #x0000000000000000))
(assert (= temp1032_112 temp1032_111))
(assert (= temp1032_113 (select ARGNAME_stride_NAMEEND_VAL temp1032_112)))
(assert (= temp1032_114 #x0000000000000000))
(assert (= temp1032_115 #x0000000000000001))
(assert (= temp1032_116 temp1032_115))
(assert (= temp1032_117 (select ARGNAME_stride_NAMEEND_VAL temp1032_116)))
(assert (= temp1032_118 #x0000000000000000))
(assert (= temp1032_119 #x0000000000000002))
(assert (= temp1032_120 temp1032_119))
(assert (= temp1032_121 (select ARGNAME_stride_NAMEEND_VAL temp1032_120)))
(assert (= temp1032_122 #x0000000000000000))
(assert (= temp1032_123 #x0000000000000003))
(assert (= temp1032_124 temp1032_123))
(assert (= temp1032_125 (select ARGNAME_stride_NAMEEND_VAL temp1032_124)))
(assert (= temp1032_126 #x0000000000000000))
(assert (= temp1032_127 #x0000000000000004))
(assert (= temp1032_128 temp1032_127))
(assert (= temp1032_129 (select ARGNAME_stride_NAMEEND_VAL temp1032_128)))
(assert (= temp1032_130 #x0000000000000000))
(assert (= temp1032_131 #x0000000000000005))
(assert (= temp1032_132 temp1032_131))
(assert (= temp1032_133 (select ARGNAME_stride_NAMEEND_VAL temp1032_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1032_113 temp1032_110)
             (bvsle temp1032_117 temp1032_114)
             (bvsle temp1032_121 temp1032_118)
             (bvsle temp1032_125 temp1032_122)
             (bvsle temp1032_129 temp1032_126)
             (bvsle temp1032_133 temp1032_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_134 #x0000000000000000))
(assert (= var1322807 temp1032_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_135 #x0000000000000001))
(assert (= var1322819 temp1032_135))
(assert (= temp1032_136 #x0000000000000000))
(assert (= var1310898 temp1032_136))
(assert (= temp1032_137 #x0000000000000000))
(assert (= temp1032_138 temp1032_137))
(assert (= temp1032_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_138)))
(assert (= temp1032_140 #x0000000000000001))
(assert (= temp1032_141 temp1032_140))
(assert (= temp1032_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_141)))
(assert (= temp1032_143 #x0000000000000002))
(assert (= temp1032_144 temp1032_143))
(assert (= temp1032_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_144)))
(assert (= temp1032_146 #x0000000000000003))
(assert (= temp1032_147 temp1032_146))
(assert (= temp1032_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_147)))
(assert (= temp1032_149 #x0000000000000004))
(assert (= temp1032_150 temp1032_149))
(assert (= temp1032_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_150)))
(assert (= temp1032_152 #x0000000000000005))
(assert (= temp1032_153 temp1032_152))
(assert (= temp1032_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_153)))
(assert (= temp1032_156 var1310898))
(assert (= temp1032_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_156)))
(assert (= temp1032_155 temp1032_157))
(assert (= var1322852
   (ite (bvslt temp1032_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_158 #x0000000000000000))
(assert (= var1322852 temp1032_158))
(assert (= temp1032_159 #x0000000000000000))
(assert (= var1310898 temp1032_159))
(assert (= temp1032_161 var1310898))
(assert (= temp1032_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_161)))
(assert (= temp1032_160 temp1032_162))
(assert (= var1322874 (bvsmod temp1032_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1032_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1032_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1032_164 #x0000000000000001))
(assert (= var1322875 temp1032_164))
(assert (= temp1032_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1032_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_166 #x0000000000000001))
(assert (= var1322895 temp1032_166))
(assert (= temp1032_167 #x0000000000000001))
(assert (= var1311786 temp1032_167))
(assert (= temp1032_168 #x0000000000000000))
(assert (= temp1032_169 temp1032_168))
(assert (= temp1032_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1032_169)))
(assert (= temp1032_171 #x0000000000000001))
(assert (= temp1032_172 temp1032_171))
(assert (= temp1032_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1032_172)))
(assert (= temp1032_174 #x0000000000000002))
(assert (= temp1032_175 temp1032_174))
(assert (= temp1032_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1032_175)))
(assert (= temp1032_177 #x0000000000000003))
(assert (= temp1032_178 temp1032_177))
(assert (= temp1032_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1032_178)))
(assert (= temp1032_180 #x0000000000000004))
(assert (= temp1032_181 temp1032_180))
(assert (= temp1032_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1032_181)))
(assert (= temp1032_183 #x0000000000000005))
(assert (= temp1032_184 temp1032_183))
(assert (= temp1032_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1032_184)))
(assert (= temp1032_186 #x0000000000000000))
(assert (= temp1032_187
   (ite (bvslt var1311786 temp1032_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1032_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1032_187)))
(assert (= var1322903 temp1032_188))
(assert (bvslt (ite (bvslt var1311786 temp1032_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1032_189 #x0000000000000001))
(assert (= var1311786 temp1032_189))
(assert (= temp1032_191 var1311786))
(assert (= temp1032_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_191)))
(assert (= temp1032_190 temp1032_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1032_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1032_193 #x0000000000000001))
(assert (= var1322908 temp1032_193))
(assert (= temp1032_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1032_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_195 #x0000000000000001))
(assert (= var1322975 temp1032_195))
(assert (= temp1032_196 #x0000000000000000))
(assert (= var1310898 temp1032_196))
(assert (= temp1032_197 #x0000000000000000))
(assert (= temp1032_198 temp1032_197))
(assert (= temp1032_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1032_198)))
(assert (= temp1032_200 #x0000000000000001))
(assert (= temp1032_201 temp1032_200))
(assert (= temp1032_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1032_201)))
(assert (= temp1032_203 #x0000000000000002))
(assert (= temp1032_204 temp1032_203))
(assert (= temp1032_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1032_204)))
(assert (= temp1032_206 #x0000000000000003))
(assert (= temp1032_207 temp1032_206))
(assert (= temp1032_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1032_207)))
(assert (= temp1032_209 #x0000000000000004))
(assert (= temp1032_210 temp1032_209))
(assert (= temp1032_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1032_210)))
(assert (= temp1032_212 #x0000000000000005))
(assert (= temp1032_213 temp1032_212))
(assert (= temp1032_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1032_213)))
(assert (= temp1032_215 #x0000000000000000))
(assert (= temp1032_216
   (ite (bvslt var1310898 temp1032_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1032_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1032_216)))
(assert (= var1322977 temp1032_217))
(assert (bvslt (ite (bvslt var1310898 temp1032_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1032_218 #x0000000000000000))
(assert (= var1310898 temp1032_218))
(assert (= temp1032_220 var1310898))
(assert (= temp1032_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1032_220)))
(assert (= temp1032_219 temp1032_221))
(assert (= var1322980
   (ite (= var1322977 temp1032_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1032_222 #x0000000000000001))
(assert (= var1322980 temp1032_222))
(assert (= temp1032_223 #x0000000000000002))
(assert (= var1848169 temp1032_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1032_225 #x0000000000000001))
(assert (= var1323065 temp1032_225))
(assert (= temp1032_226 #x0000000000000001))
(assert (= var3486735 temp1032_226))
(assert (= temp1032_227 #x0000000000000001))
(assert (= var3814415 temp1032_227))
(assert (= temp1032_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1032_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_229 #x0000000000000001))
(assert (= var79986 temp1032_229))
(assert (= temp1032_230 #x0000000000000001))
(assert (= var80116 temp1032_230))
(assert (= var4796905 var80116))
(assert (= temp1032_231 #x0000000000000000))
(assert (= var4784306 temp1032_231))
(assert (= temp1032_232 #x0000000000000000))
(assert (= temp1032_233
   (ite (bvslt var4784306 temp1032_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1032_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1032_233)))
(assert (= var4796924 temp1032_234))
(assert (bvslt (ite (bvslt var4784306 temp1032_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1032_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1032_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1032_236 #x0000000000000001))
(assert (= var4796925 temp1032_236))
(assert (= temp1032_237 #x0000000000000000))
(assert (= var4996927 temp1032_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1032_238 #x0000000000000002))
(assert (= var5125763 temp1032_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1032_239 #x0000000000000000))
(assert (= var5191324 temp1032_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5845392 var80129))
(assert (= var6107536 var80129))
(assert (= temp1032_240 #x0000000000000001))
(assert (= var79986 temp1032_240))
(model-add temp1032_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1032_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1032_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






