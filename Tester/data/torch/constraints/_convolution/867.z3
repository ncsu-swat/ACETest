(declare-fun temp1153_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1153_2 () (_ BitVec 64))
(declare-fun temp1153_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1153_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1153_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1153_6 () (_ BitVec 64))
(declare-fun temp1153_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1153_8 () (_ BitVec 64))
(declare-fun temp1153_9 () (_ BitVec 64))
(declare-fun temp1153_10 () (_ BitVec 64))
(declare-fun temp1153_11 () (_ BitVec 64))
(declare-fun temp1153_12 () (_ BitVec 64))
(declare-fun temp1153_13 () (_ BitVec 64))
(declare-fun temp1153_14 () (_ BitVec 64))
(declare-fun temp1153_15 () (_ BitVec 64))
(declare-fun temp1153_16 () (_ BitVec 64))
(declare-fun temp1153_17 () (_ BitVec 64))
(declare-fun temp1153_18 () (_ BitVec 64))
(declare-fun temp1153_19 () (_ BitVec 64))
(declare-fun temp1153_20 () (_ BitVec 64))
(declare-fun temp1153_21 () (_ BitVec 64))
(declare-fun temp1153_22 () (_ BitVec 64))
(declare-fun temp1153_23 () (_ BitVec 64))
(declare-fun temp1153_24 () (_ BitVec 64))
(declare-fun temp1153_25 () (_ BitVec 64))
(declare-fun temp1153_26 () (_ BitVec 64))
(declare-fun temp1153_27 () (_ BitVec 64))
(declare-fun temp1153_28 () (_ BitVec 64))
(declare-fun temp1153_29 () (_ BitVec 64))
(declare-fun temp1153_30 () (_ BitVec 64))
(declare-fun temp1153_31 () (_ BitVec 64))
(declare-fun temp1153_32 () (_ BitVec 64))
(declare-fun temp1153_33 () (_ BitVec 64))
(declare-fun temp1153_34 () (_ BitVec 64))
(declare-fun temp1153_35 () (_ BitVec 64))
(declare-fun temp1153_36 () (_ BitVec 64))
(declare-fun temp1153_37 () (_ BitVec 64))
(declare-fun temp1153_38 () (_ BitVec 64))
(declare-fun temp1153_39 () (_ BitVec 64))
(declare-fun temp1153_40 () (_ BitVec 64))
(declare-fun temp1153_41 () (_ BitVec 64))
(declare-fun temp1153_42 () (_ BitVec 64))
(declare-fun temp1153_43 () (_ BitVec 64))
(declare-fun temp1153_44 () (_ BitVec 64))
(declare-fun temp1153_45 () (_ BitVec 64))
(declare-fun temp1153_46 () (_ BitVec 64))
(declare-fun temp1153_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1153_48 () (_ BitVec 64))
(declare-fun temp1153_49 () (_ BitVec 64))
(declare-fun temp1153_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1153_51 () (_ BitVec 64))
(declare-fun temp1153_52 () (_ BitVec 64))
(declare-fun temp1153_53 () (_ BitVec 64))
(declare-fun temp1153_54 () (_ BitVec 64))
(declare-fun temp1153_55 () (_ BitVec 64))
(declare-fun temp1153_56 () (_ BitVec 64))
(declare-fun temp1153_57 () (_ BitVec 64))
(declare-fun temp1153_58 () (_ BitVec 64))
(declare-fun temp1153_59 () (_ BitVec 64))
(declare-fun temp1153_60 () (_ BitVec 64))
(declare-fun temp1153_61 () (_ BitVec 64))
(declare-fun temp1153_62 () (_ BitVec 64))
(declare-fun temp1153_63 () (_ BitVec 64))
(declare-fun temp1153_64 () (_ BitVec 64))
(declare-fun temp1153_65 () (_ BitVec 64))
(declare-fun temp1153_66 () (_ BitVec 64))
(declare-fun temp1153_67 () (_ BitVec 64))
(declare-fun temp1153_68 () (_ BitVec 64))
(declare-fun temp1153_69 () (_ BitVec 64))
(declare-fun temp1153_70 () (_ BitVec 64))
(declare-fun temp1153_71 () (_ BitVec 64))
(declare-fun temp1153_72 () (_ BitVec 64))
(declare-fun temp1153_73 () (_ BitVec 64))
(declare-fun temp1153_74 () (_ BitVec 64))
(declare-fun temp1153_75 () (_ BitVec 64))
(declare-fun temp1153_76 () (_ BitVec 64))
(declare-fun temp1153_77 () (_ BitVec 64))
(declare-fun temp1153_78 () (_ BitVec 64))
(declare-fun temp1153_79 () (_ BitVec 64))
(declare-fun temp1153_80 () (_ BitVec 64))
(declare-fun temp1153_81 () (_ BitVec 64))
(declare-fun temp1153_82 () (_ BitVec 64))
(declare-fun temp1153_83 () (_ BitVec 64))
(declare-fun temp1153_84 () (_ BitVec 64))
(declare-fun temp1153_85 () (_ BitVec 64))
(declare-fun temp1153_86 () (_ BitVec 64))
(declare-fun temp1153_87 () (_ BitVec 64))
(declare-fun temp1153_88 () (_ BitVec 64))
(declare-fun temp1153_89 () (_ BitVec 64))
(declare-fun temp1153_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1153_91 () (_ BitVec 64))
(declare-fun temp1153_92 () (_ BitVec 64))
(declare-fun temp1153_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1153_94 () (_ BitVec 64))
(declare-fun temp1153_95 () (_ BitVec 64))
(declare-fun temp1153_96 () (_ BitVec 64))
(declare-fun temp1153_97 () (_ BitVec 64))
(declare-fun temp1153_98 () (_ BitVec 64))
(declare-fun temp1153_99 () (_ BitVec 64))
(declare-fun temp1153_100 () (_ BitVec 64))
(declare-fun temp1153_101 () (_ BitVec 64))
(declare-fun temp1153_102 () (_ BitVec 64))
(declare-fun temp1153_103 () (_ BitVec 64))
(declare-fun temp1153_104 () (_ BitVec 64))
(declare-fun temp1153_105 () (_ BitVec 64))
(declare-fun temp1153_106 () (_ BitVec 64))
(declare-fun temp1153_107 () (_ BitVec 64))
(declare-fun temp1153_108 () (_ BitVec 64))
(declare-fun temp1153_109 () (_ BitVec 64))
(declare-fun temp1153_110 () (_ BitVec 64))
(declare-fun temp1153_111 () (_ BitVec 64))
(declare-fun temp1153_112 () (_ BitVec 64))
(declare-fun temp1153_113 () (_ BitVec 64))
(declare-fun temp1153_114 () (_ BitVec 64))
(declare-fun temp1153_115 () (_ BitVec 64))
(declare-fun temp1153_116 () (_ BitVec 64))
(declare-fun temp1153_117 () (_ BitVec 64))
(declare-fun temp1153_118 () (_ BitVec 64))
(declare-fun temp1153_119 () (_ BitVec 64))
(declare-fun temp1153_120 () (_ BitVec 64))
(declare-fun temp1153_121 () (_ BitVec 64))
(declare-fun temp1153_122 () (_ BitVec 64))
(declare-fun temp1153_123 () (_ BitVec 64))
(declare-fun temp1153_124 () (_ BitVec 64))
(declare-fun temp1153_125 () (_ BitVec 64))
(declare-fun temp1153_126 () (_ BitVec 64))
(declare-fun temp1153_127 () (_ BitVec 64))
(declare-fun temp1153_128 () (_ BitVec 64))
(declare-fun temp1153_129 () (_ BitVec 64))
(declare-fun temp1153_130 () (_ BitVec 64))
(declare-fun temp1153_131 () (_ BitVec 64))
(declare-fun temp1153_132 () (_ BitVec 64))
(declare-fun temp1153_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1153_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1153_135 () (_ BitVec 64))
(declare-fun temp1153_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1153_137 () (_ BitVec 64))
(declare-fun temp1153_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1153_139 () (_ BitVec 64))
(declare-fun temp1153_140 () (_ BitVec 64))
(declare-fun temp1153_141 () (_ BitVec 64))
(declare-fun temp1153_142 () (_ BitVec 64))
(declare-fun temp1153_143 () (_ BitVec 64))
(declare-fun temp1153_144 () (_ BitVec 64))
(declare-fun temp1153_145 () (_ BitVec 64))
(declare-fun temp1153_146 () (_ BitVec 64))
(declare-fun temp1153_147 () (_ BitVec 64))
(declare-fun temp1153_148 () (_ BitVec 64))
(declare-fun temp1153_149 () (_ BitVec 64))
(declare-fun temp1153_150 () (_ BitVec 64))
(declare-fun temp1153_151 () (_ BitVec 64))
(declare-fun temp1153_152 () (_ BitVec 64))
(declare-fun temp1153_153 () (_ BitVec 64))
(declare-fun temp1153_154 () (_ BitVec 64))
(declare-fun temp1153_156 () (_ BitVec 64))
(declare-fun temp1153_157 () (_ BitVec 64))
(declare-fun temp1153_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1153_158 () (_ BitVec 64))
(declare-fun temp1153_159 () (_ BitVec 64))
(declare-fun temp1153_161 () (_ BitVec 64))
(declare-fun temp1153_162 () (_ BitVec 64))
(declare-fun temp1153_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1153_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1153_164 () (_ BitVec 64))
(declare-fun temp1153_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1153_166 () (_ BitVec 64))
(declare-fun temp1153_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1153_168 () (_ BitVec 64))
(declare-fun temp1153_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1153_170 () (_ BitVec 64))
(declare-fun temp1153_171 () (_ BitVec 64))
(declare-fun temp1153_172 () (_ BitVec 64))
(declare-fun temp1153_173 () (_ BitVec 64))
(declare-fun temp1153_174 () (_ BitVec 64))
(declare-fun temp1153_175 () (_ BitVec 64))
(declare-fun temp1153_176 () (_ BitVec 64))
(declare-fun temp1153_177 () (_ BitVec 64))
(declare-fun temp1153_178 () (_ BitVec 64))
(declare-fun temp1153_179 () (_ BitVec 64))
(declare-fun temp1153_180 () (_ BitVec 64))
(declare-fun temp1153_181 () (_ BitVec 64))
(declare-fun temp1153_182 () (_ BitVec 64))
(declare-fun temp1153_183 () (_ BitVec 64))
(declare-fun temp1153_184 () (_ BitVec 64))
(declare-fun temp1153_185 () (_ BitVec 64))
(declare-fun temp1153_186 () (_ BitVec 64))
(declare-fun temp1153_187 () (_ BitVec 64))
(declare-fun temp1153_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1153_189 () (_ BitVec 64))
(declare-fun temp1153_191 () (_ BitVec 64))
(declare-fun temp1153_192 () (_ BitVec 64))
(declare-fun temp1153_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1153_193 () (_ BitVec 64))
(declare-fun temp1153_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1153_195 () (_ BitVec 64))
(declare-fun temp1153_196 () (_ BitVec 64))
(declare-fun temp1153_197 () (_ BitVec 64))
(declare-fun temp1153_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1153_199 () (_ BitVec 64))
(declare-fun temp1153_200 () (_ BitVec 64))
(declare-fun temp1153_201 () (_ BitVec 64))
(declare-fun temp1153_202 () (_ BitVec 64))
(declare-fun temp1153_203 () (_ BitVec 64))
(declare-fun temp1153_204 () (_ BitVec 64))
(declare-fun temp1153_205 () (_ BitVec 64))
(declare-fun temp1153_206 () (_ BitVec 64))
(declare-fun temp1153_207 () (_ BitVec 64))
(declare-fun temp1153_208 () (_ BitVec 64))
(declare-fun temp1153_209 () (_ BitVec 64))
(declare-fun temp1153_210 () (_ BitVec 64))
(declare-fun temp1153_211 () (_ BitVec 64))
(declare-fun temp1153_212 () (_ BitVec 64))
(declare-fun temp1153_213 () (_ BitVec 64))
(declare-fun temp1153_214 () (_ BitVec 64))
(declare-fun temp1153_215 () (_ BitVec 64))
(declare-fun temp1153_216 () (_ BitVec 64))
(declare-fun temp1153_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1153_218 () (_ BitVec 64))
(declare-fun temp1153_220 () (_ BitVec 64))
(declare-fun temp1153_221 () (_ BitVec 64))
(declare-fun temp1153_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1153_222 () (_ BitVec 64))
(declare-fun temp1153_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1153_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1153_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1153_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1153_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1153_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1153_229 () (_ BitVec 64))
(declare-fun temp1153_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1153_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1153_232 () (_ BitVec 64))
(declare-fun temp1153_233 () (_ BitVec 64))
(declare-fun temp1153_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1153_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1153_236 () (_ BitVec 64))
(declare-fun temp1153_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1153_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1153_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1153_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1153_241 () (_ BitVec 64))
(declare-fun temp1153_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp1153_243 () (_ BitVec 64))
(assert (= temp1153_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1153_1)))
(assert (= temp1153_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1153_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_3 #x0000000000000000))
(assert (= var79869 temp1153_3))
(assert (= temp1153_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1153_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_5 #x0000000000000000))
(assert (= var79914 temp1153_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1153_6 #x0000000000000000))
(assert (= temp1153_7 temp1153_6))
(assert (= temp1153_8 (select ARGNAME_padding_NAMEEND_VAL temp1153_7)))
(assert (= temp1153_9 #x0000000000000001))
(assert (= temp1153_10 temp1153_9))
(assert (= temp1153_11 (select ARGNAME_padding_NAMEEND_VAL temp1153_10)))
(assert (= temp1153_12 #x0000000000000002))
(assert (= temp1153_13 temp1153_12))
(assert (= temp1153_14 (select ARGNAME_padding_NAMEEND_VAL temp1153_13)))
(assert (= temp1153_15 #x0000000000000003))
(assert (= temp1153_16 temp1153_15))
(assert (= temp1153_17 (select ARGNAME_padding_NAMEEND_VAL temp1153_16)))
(assert (= temp1153_18 #x0000000000000004))
(assert (= temp1153_19 temp1153_18))
(assert (= temp1153_20 (select ARGNAME_padding_NAMEEND_VAL temp1153_19)))
(assert (= temp1153_21 #x0000000000000005))
(assert (= temp1153_22 temp1153_21))
(assert (= temp1153_23 (select ARGNAME_padding_NAMEEND_VAL temp1153_22)))
(assert (= temp1153_24 #x0000000000000000))
(assert (= temp1153_25 #x0000000000000000))
(assert (= temp1153_26 temp1153_25))
(assert (= temp1153_27 (select ARGNAME_padding_NAMEEND_VAL temp1153_26)))
(assert (= temp1153_28 #x0000000000000000))
(assert (= temp1153_29 #x0000000000000001))
(assert (= temp1153_30 temp1153_29))
(assert (= temp1153_31 (select ARGNAME_padding_NAMEEND_VAL temp1153_30)))
(assert (= temp1153_32 #x0000000000000000))
(assert (= temp1153_33 #x0000000000000002))
(assert (= temp1153_34 temp1153_33))
(assert (= temp1153_35 (select ARGNAME_padding_NAMEEND_VAL temp1153_34)))
(assert (= temp1153_36 #x0000000000000000))
(assert (= temp1153_37 #x0000000000000003))
(assert (= temp1153_38 temp1153_37))
(assert (= temp1153_39 (select ARGNAME_padding_NAMEEND_VAL temp1153_38)))
(assert (= temp1153_40 #x0000000000000000))
(assert (= temp1153_41 #x0000000000000004))
(assert (= temp1153_42 temp1153_41))
(assert (= temp1153_43 (select ARGNAME_padding_NAMEEND_VAL temp1153_42)))
(assert (= temp1153_44 #x0000000000000000))
(assert (= temp1153_45 #x0000000000000005))
(assert (= temp1153_46 temp1153_45))
(assert (= temp1153_47 (select ARGNAME_padding_NAMEEND_VAL temp1153_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1153_27 temp1153_24)
             (bvslt temp1153_31 temp1153_28)
             (bvslt temp1153_35 temp1153_32)
             (bvslt temp1153_39 temp1153_36)
             (bvslt temp1153_43 temp1153_40)
             (bvslt temp1153_47 temp1153_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_48 #x0000000000000000))
(assert (= var1322786 temp1153_48))
(assert (= temp1153_49 #x0000000000000000))
(assert (= temp1153_50 temp1153_49))
(assert (= temp1153_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_50)))
(assert (= temp1153_52 #x0000000000000001))
(assert (= temp1153_53 temp1153_52))
(assert (= temp1153_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_53)))
(assert (= temp1153_55 #x0000000000000002))
(assert (= temp1153_56 temp1153_55))
(assert (= temp1153_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_56)))
(assert (= temp1153_58 #x0000000000000003))
(assert (= temp1153_59 temp1153_58))
(assert (= temp1153_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_59)))
(assert (= temp1153_61 #x0000000000000004))
(assert (= temp1153_62 temp1153_61))
(assert (= temp1153_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_62)))
(assert (= temp1153_64 #x0000000000000005))
(assert (= temp1153_65 temp1153_64))
(assert (= temp1153_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_65)))
(assert (= temp1153_67 #x0000000000000000))
(assert (= temp1153_68 #x0000000000000000))
(assert (= temp1153_69 temp1153_68))
(assert (= temp1153_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_69)))
(assert (= temp1153_71 #x0000000000000000))
(assert (= temp1153_72 #x0000000000000001))
(assert (= temp1153_73 temp1153_72))
(assert (= temp1153_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_73)))
(assert (= temp1153_75 #x0000000000000000))
(assert (= temp1153_76 #x0000000000000002))
(assert (= temp1153_77 temp1153_76))
(assert (= temp1153_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_77)))
(assert (= temp1153_79 #x0000000000000000))
(assert (= temp1153_80 #x0000000000000003))
(assert (= temp1153_81 temp1153_80))
(assert (= temp1153_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_81)))
(assert (= temp1153_83 #x0000000000000000))
(assert (= temp1153_84 #x0000000000000004))
(assert (= temp1153_85 temp1153_84))
(assert (= temp1153_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_85)))
(assert (= temp1153_87 #x0000000000000000))
(assert (= temp1153_88 #x0000000000000005))
(assert (= temp1153_89 temp1153_88))
(assert (= temp1153_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1153_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1153_70 temp1153_67)
             (bvslt temp1153_74 temp1153_71)
             (bvslt temp1153_78 temp1153_75)
             (bvslt temp1153_82 temp1153_79)
             (bvslt temp1153_86 temp1153_83)
             (bvslt temp1153_90 temp1153_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_91 #x0000000000000000))
(assert (= var1322797 temp1153_91))
(assert (= temp1153_92 #x0000000000000000))
(assert (= temp1153_93 temp1153_92))
(assert (= temp1153_94 (select ARGNAME_stride_NAMEEND_VAL temp1153_93)))
(assert (= temp1153_95 #x0000000000000001))
(assert (= temp1153_96 temp1153_95))
(assert (= temp1153_97 (select ARGNAME_stride_NAMEEND_VAL temp1153_96)))
(assert (= temp1153_98 #x0000000000000002))
(assert (= temp1153_99 temp1153_98))
(assert (= temp1153_100 (select ARGNAME_stride_NAMEEND_VAL temp1153_99)))
(assert (= temp1153_101 #x0000000000000003))
(assert (= temp1153_102 temp1153_101))
(assert (= temp1153_103 (select ARGNAME_stride_NAMEEND_VAL temp1153_102)))
(assert (= temp1153_104 #x0000000000000004))
(assert (= temp1153_105 temp1153_104))
(assert (= temp1153_106 (select ARGNAME_stride_NAMEEND_VAL temp1153_105)))
(assert (= temp1153_107 #x0000000000000005))
(assert (= temp1153_108 temp1153_107))
(assert (= temp1153_109 (select ARGNAME_stride_NAMEEND_VAL temp1153_108)))
(assert (= temp1153_110 #x0000000000000000))
(assert (= temp1153_111 #x0000000000000000))
(assert (= temp1153_112 temp1153_111))
(assert (= temp1153_113 (select ARGNAME_stride_NAMEEND_VAL temp1153_112)))
(assert (= temp1153_114 #x0000000000000000))
(assert (= temp1153_115 #x0000000000000001))
(assert (= temp1153_116 temp1153_115))
(assert (= temp1153_117 (select ARGNAME_stride_NAMEEND_VAL temp1153_116)))
(assert (= temp1153_118 #x0000000000000000))
(assert (= temp1153_119 #x0000000000000002))
(assert (= temp1153_120 temp1153_119))
(assert (= temp1153_121 (select ARGNAME_stride_NAMEEND_VAL temp1153_120)))
(assert (= temp1153_122 #x0000000000000000))
(assert (= temp1153_123 #x0000000000000003))
(assert (= temp1153_124 temp1153_123))
(assert (= temp1153_125 (select ARGNAME_stride_NAMEEND_VAL temp1153_124)))
(assert (= temp1153_126 #x0000000000000000))
(assert (= temp1153_127 #x0000000000000004))
(assert (= temp1153_128 temp1153_127))
(assert (= temp1153_129 (select ARGNAME_stride_NAMEEND_VAL temp1153_128)))
(assert (= temp1153_130 #x0000000000000000))
(assert (= temp1153_131 #x0000000000000005))
(assert (= temp1153_132 temp1153_131))
(assert (= temp1153_133 (select ARGNAME_stride_NAMEEND_VAL temp1153_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1153_113 temp1153_110)
             (bvsle temp1153_117 temp1153_114)
             (bvsle temp1153_121 temp1153_118)
             (bvsle temp1153_125 temp1153_122)
             (bvsle temp1153_129 temp1153_126)
             (bvsle temp1153_133 temp1153_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_134 #x0000000000000000))
(assert (= var1322807 temp1153_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_135 #x0000000000000001))
(assert (= var1322819 temp1153_135))
(assert (= temp1153_136 #x0000000000000000))
(assert (= var1310898 temp1153_136))
(assert (= temp1153_137 #x0000000000000000))
(assert (= temp1153_138 temp1153_137))
(assert (= temp1153_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_138)))
(assert (= temp1153_140 #x0000000000000001))
(assert (= temp1153_141 temp1153_140))
(assert (= temp1153_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_141)))
(assert (= temp1153_143 #x0000000000000002))
(assert (= temp1153_144 temp1153_143))
(assert (= temp1153_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_144)))
(assert (= temp1153_146 #x0000000000000003))
(assert (= temp1153_147 temp1153_146))
(assert (= temp1153_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_147)))
(assert (= temp1153_149 #x0000000000000004))
(assert (= temp1153_150 temp1153_149))
(assert (= temp1153_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_150)))
(assert (= temp1153_152 #x0000000000000005))
(assert (= temp1153_153 temp1153_152))
(assert (= temp1153_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_153)))
(assert (= temp1153_156 var1310898))
(assert (= temp1153_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_156)))
(assert (= temp1153_155 temp1153_157))
(assert (= var1322852
   (ite (bvslt temp1153_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_158 #x0000000000000000))
(assert (= var1322852 temp1153_158))
(assert (= temp1153_159 #x0000000000000000))
(assert (= var1310898 temp1153_159))
(assert (= temp1153_161 var1310898))
(assert (= temp1153_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_161)))
(assert (= temp1153_160 temp1153_162))
(assert (= var1322874 (bvsmod temp1153_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1153_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1153_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1153_164 #x0000000000000001))
(assert (= var1322875 temp1153_164))
(assert (= temp1153_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1153_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_166 #x0000000000000001))
(assert (= var1322895 temp1153_166))
(assert (= temp1153_167 #x0000000000000001))
(assert (= var1311786 temp1153_167))
(assert (= temp1153_168 #x0000000000000000))
(assert (= temp1153_169 temp1153_168))
(assert (= temp1153_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1153_169)))
(assert (= temp1153_171 #x0000000000000001))
(assert (= temp1153_172 temp1153_171))
(assert (= temp1153_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1153_172)))
(assert (= temp1153_174 #x0000000000000002))
(assert (= temp1153_175 temp1153_174))
(assert (= temp1153_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1153_175)))
(assert (= temp1153_177 #x0000000000000003))
(assert (= temp1153_178 temp1153_177))
(assert (= temp1153_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1153_178)))
(assert (= temp1153_180 #x0000000000000004))
(assert (= temp1153_181 temp1153_180))
(assert (= temp1153_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1153_181)))
(assert (= temp1153_183 #x0000000000000005))
(assert (= temp1153_184 temp1153_183))
(assert (= temp1153_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1153_184)))
(assert (= temp1153_186 #x0000000000000000))
(assert (= temp1153_187
   (ite (bvslt var1311786 temp1153_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1153_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1153_187)))
(assert (= var1322903 temp1153_188))
(assert (bvslt (ite (bvslt var1311786 temp1153_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1153_189 #x0000000000000001))
(assert (= var1311786 temp1153_189))
(assert (= temp1153_191 var1311786))
(assert (= temp1153_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_191)))
(assert (= temp1153_190 temp1153_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1153_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1153_193 #x0000000000000001))
(assert (= var1322908 temp1153_193))
(assert (= temp1153_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1153_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_195 #x0000000000000001))
(assert (= var1322975 temp1153_195))
(assert (= temp1153_196 #x0000000000000000))
(assert (= var1310898 temp1153_196))
(assert (= temp1153_197 #x0000000000000000))
(assert (= temp1153_198 temp1153_197))
(assert (= temp1153_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1153_198)))
(assert (= temp1153_200 #x0000000000000001))
(assert (= temp1153_201 temp1153_200))
(assert (= temp1153_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1153_201)))
(assert (= temp1153_203 #x0000000000000002))
(assert (= temp1153_204 temp1153_203))
(assert (= temp1153_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1153_204)))
(assert (= temp1153_206 #x0000000000000003))
(assert (= temp1153_207 temp1153_206))
(assert (= temp1153_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1153_207)))
(assert (= temp1153_209 #x0000000000000004))
(assert (= temp1153_210 temp1153_209))
(assert (= temp1153_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1153_210)))
(assert (= temp1153_212 #x0000000000000005))
(assert (= temp1153_213 temp1153_212))
(assert (= temp1153_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1153_213)))
(assert (= temp1153_215 #x0000000000000000))
(assert (= temp1153_216
   (ite (bvslt var1310898 temp1153_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1153_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1153_216)))
(assert (= var1322977 temp1153_217))
(assert (bvslt (ite (bvslt var1310898 temp1153_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1153_218 #x0000000000000000))
(assert (= var1310898 temp1153_218))
(assert (= temp1153_220 var1310898))
(assert (= temp1153_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1153_220)))
(assert (= temp1153_219 temp1153_221))
(assert (= var1322980
   (ite (= var1322977 temp1153_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1153_222 #x0000000000000001))
(assert (= var1322980 temp1153_222))
(assert (= temp1153_223 #x0000000000000002))
(assert (= var1848169 temp1153_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1153_225 #x0000000000000001))
(assert (= var1323065 temp1153_225))
(assert (= temp1153_226 #x0000000000000001))
(assert (= var3486735 temp1153_226))
(assert (= temp1153_227 #x0000000000000001))
(assert (= var3814415 temp1153_227))
(assert (= temp1153_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1153_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_229 #x0000000000000001))
(assert (= var79986 temp1153_229))
(assert (= temp1153_230 #x0000000000000001))
(assert (= var80116 temp1153_230))
(assert (= var4796905 var80116))
(assert (= temp1153_231 #x0000000000000000))
(assert (= var4784306 temp1153_231))
(assert (= temp1153_232 #x0000000000000000))
(assert (= temp1153_233
   (ite (bvslt var4784306 temp1153_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1153_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1153_233)))
(assert (= var4796924 temp1153_234))
(assert (bvslt (ite (bvslt var4784306 temp1153_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1153_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1153_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1153_236 #x0000000000000001))
(assert (= var4796925 temp1153_236))
(assert (= temp1153_237 #x0000000000000000))
(assert (= var4996927 temp1153_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1153_238 #x0000000000000002))
(assert (= var5125763 temp1153_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_239 #x0000000000000000))
(assert (= var5191324 temp1153_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1153_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1153_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1153_241 #x0000000000000000))
(assert (= var81342 temp1153_241))
(assert (= temp1153_242 #x0000000000000002))
(assert (= var5977731 temp1153_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp1153_243 #x0000000000000001))
(assert (= var79986 temp1153_243))
(model-add temp1153_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1153_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1153_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






