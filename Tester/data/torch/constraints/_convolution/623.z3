(declare-fun temp828_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp828_2 () (_ BitVec 64))
(declare-fun temp828_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp828_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp828_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp828_6 () (_ BitVec 64))
(declare-fun temp828_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp828_8 () (_ BitVec 64))
(declare-fun temp828_9 () (_ BitVec 64))
(declare-fun temp828_10 () (_ BitVec 64))
(declare-fun temp828_11 () (_ BitVec 64))
(declare-fun temp828_12 () (_ BitVec 64))
(declare-fun temp828_13 () (_ BitVec 64))
(declare-fun temp828_14 () (_ BitVec 64))
(declare-fun temp828_15 () (_ BitVec 64))
(declare-fun temp828_16 () (_ BitVec 64))
(declare-fun temp828_17 () (_ BitVec 64))
(declare-fun temp828_18 () (_ BitVec 64))
(declare-fun temp828_19 () (_ BitVec 64))
(declare-fun temp828_20 () (_ BitVec 64))
(declare-fun temp828_21 () (_ BitVec 64))
(declare-fun temp828_22 () (_ BitVec 64))
(declare-fun temp828_23 () (_ BitVec 64))
(declare-fun temp828_24 () (_ BitVec 64))
(declare-fun temp828_25 () (_ BitVec 64))
(declare-fun temp828_26 () (_ BitVec 64))
(declare-fun temp828_27 () (_ BitVec 64))
(declare-fun temp828_28 () (_ BitVec 64))
(declare-fun temp828_29 () (_ BitVec 64))
(declare-fun temp828_30 () (_ BitVec 64))
(declare-fun temp828_31 () (_ BitVec 64))
(declare-fun temp828_32 () (_ BitVec 64))
(declare-fun temp828_33 () (_ BitVec 64))
(declare-fun temp828_34 () (_ BitVec 64))
(declare-fun temp828_35 () (_ BitVec 64))
(declare-fun temp828_36 () (_ BitVec 64))
(declare-fun temp828_37 () (_ BitVec 64))
(declare-fun temp828_38 () (_ BitVec 64))
(declare-fun temp828_39 () (_ BitVec 64))
(declare-fun temp828_40 () (_ BitVec 64))
(declare-fun temp828_41 () (_ BitVec 64))
(declare-fun temp828_42 () (_ BitVec 64))
(declare-fun temp828_43 () (_ BitVec 64))
(declare-fun temp828_44 () (_ BitVec 64))
(declare-fun temp828_45 () (_ BitVec 64))
(declare-fun temp828_46 () (_ BitVec 64))
(declare-fun temp828_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp828_48 () (_ BitVec 64))
(declare-fun temp828_49 () (_ BitVec 64))
(declare-fun temp828_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp828_51 () (_ BitVec 64))
(declare-fun temp828_52 () (_ BitVec 64))
(declare-fun temp828_53 () (_ BitVec 64))
(declare-fun temp828_54 () (_ BitVec 64))
(declare-fun temp828_55 () (_ BitVec 64))
(declare-fun temp828_56 () (_ BitVec 64))
(declare-fun temp828_57 () (_ BitVec 64))
(declare-fun temp828_58 () (_ BitVec 64))
(declare-fun temp828_59 () (_ BitVec 64))
(declare-fun temp828_60 () (_ BitVec 64))
(declare-fun temp828_61 () (_ BitVec 64))
(declare-fun temp828_62 () (_ BitVec 64))
(declare-fun temp828_63 () (_ BitVec 64))
(declare-fun temp828_64 () (_ BitVec 64))
(declare-fun temp828_65 () (_ BitVec 64))
(declare-fun temp828_66 () (_ BitVec 64))
(declare-fun temp828_67 () (_ BitVec 64))
(declare-fun temp828_68 () (_ BitVec 64))
(declare-fun temp828_69 () (_ BitVec 64))
(declare-fun temp828_70 () (_ BitVec 64))
(declare-fun temp828_71 () (_ BitVec 64))
(declare-fun temp828_72 () (_ BitVec 64))
(declare-fun temp828_73 () (_ BitVec 64))
(declare-fun temp828_74 () (_ BitVec 64))
(declare-fun temp828_75 () (_ BitVec 64))
(declare-fun temp828_76 () (_ BitVec 64))
(declare-fun temp828_77 () (_ BitVec 64))
(declare-fun temp828_78 () (_ BitVec 64))
(declare-fun temp828_79 () (_ BitVec 64))
(declare-fun temp828_80 () (_ BitVec 64))
(declare-fun temp828_81 () (_ BitVec 64))
(declare-fun temp828_82 () (_ BitVec 64))
(declare-fun temp828_83 () (_ BitVec 64))
(declare-fun temp828_84 () (_ BitVec 64))
(declare-fun temp828_85 () (_ BitVec 64))
(declare-fun temp828_86 () (_ BitVec 64))
(declare-fun temp828_87 () (_ BitVec 64))
(declare-fun temp828_88 () (_ BitVec 64))
(declare-fun temp828_89 () (_ BitVec 64))
(declare-fun temp828_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp828_91 () (_ BitVec 64))
(declare-fun temp828_92 () (_ BitVec 64))
(declare-fun temp828_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp828_94 () (_ BitVec 64))
(declare-fun temp828_95 () (_ BitVec 64))
(declare-fun temp828_96 () (_ BitVec 64))
(declare-fun temp828_97 () (_ BitVec 64))
(declare-fun temp828_98 () (_ BitVec 64))
(declare-fun temp828_99 () (_ BitVec 64))
(declare-fun temp828_100 () (_ BitVec 64))
(declare-fun temp828_101 () (_ BitVec 64))
(declare-fun temp828_102 () (_ BitVec 64))
(declare-fun temp828_103 () (_ BitVec 64))
(declare-fun temp828_104 () (_ BitVec 64))
(declare-fun temp828_105 () (_ BitVec 64))
(declare-fun temp828_106 () (_ BitVec 64))
(declare-fun temp828_107 () (_ BitVec 64))
(declare-fun temp828_108 () (_ BitVec 64))
(declare-fun temp828_109 () (_ BitVec 64))
(declare-fun temp828_110 () (_ BitVec 64))
(declare-fun temp828_111 () (_ BitVec 64))
(declare-fun temp828_112 () (_ BitVec 64))
(declare-fun temp828_113 () (_ BitVec 64))
(declare-fun temp828_114 () (_ BitVec 64))
(declare-fun temp828_115 () (_ BitVec 64))
(declare-fun temp828_116 () (_ BitVec 64))
(declare-fun temp828_117 () (_ BitVec 64))
(declare-fun temp828_118 () (_ BitVec 64))
(declare-fun temp828_119 () (_ BitVec 64))
(declare-fun temp828_120 () (_ BitVec 64))
(declare-fun temp828_121 () (_ BitVec 64))
(declare-fun temp828_122 () (_ BitVec 64))
(declare-fun temp828_123 () (_ BitVec 64))
(declare-fun temp828_124 () (_ BitVec 64))
(declare-fun temp828_125 () (_ BitVec 64))
(declare-fun temp828_126 () (_ BitVec 64))
(declare-fun temp828_127 () (_ BitVec 64))
(declare-fun temp828_128 () (_ BitVec 64))
(declare-fun temp828_129 () (_ BitVec 64))
(declare-fun temp828_130 () (_ BitVec 64))
(declare-fun temp828_131 () (_ BitVec 64))
(declare-fun temp828_132 () (_ BitVec 64))
(declare-fun temp828_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp828_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp828_135 () (_ BitVec 64))
(declare-fun temp828_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp828_137 () (_ BitVec 64))
(declare-fun temp828_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp828_139 () (_ BitVec 64))
(declare-fun temp828_140 () (_ BitVec 64))
(declare-fun temp828_141 () (_ BitVec 64))
(declare-fun temp828_142 () (_ BitVec 64))
(declare-fun temp828_143 () (_ BitVec 64))
(declare-fun temp828_144 () (_ BitVec 64))
(declare-fun temp828_145 () (_ BitVec 64))
(declare-fun temp828_146 () (_ BitVec 64))
(declare-fun temp828_147 () (_ BitVec 64))
(declare-fun temp828_148 () (_ BitVec 64))
(declare-fun temp828_149 () (_ BitVec 64))
(declare-fun temp828_150 () (_ BitVec 64))
(declare-fun temp828_151 () (_ BitVec 64))
(declare-fun temp828_152 () (_ BitVec 64))
(declare-fun temp828_153 () (_ BitVec 64))
(declare-fun temp828_154 () (_ BitVec 64))
(declare-fun temp828_156 () (_ BitVec 64))
(declare-fun temp828_157 () (_ BitVec 64))
(declare-fun temp828_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp828_158 () (_ BitVec 64))
(declare-fun temp828_159 () (_ BitVec 64))
(declare-fun temp828_161 () (_ BitVec 64))
(declare-fun temp828_162 () (_ BitVec 64))
(declare-fun temp828_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp828_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp828_164 () (_ BitVec 64))
(declare-fun temp828_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp828_166 () (_ BitVec 64))
(declare-fun temp828_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp828_168 () (_ BitVec 64))
(declare-fun temp828_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp828_170 () (_ BitVec 64))
(declare-fun temp828_171 () (_ BitVec 64))
(declare-fun temp828_172 () (_ BitVec 64))
(declare-fun temp828_173 () (_ BitVec 64))
(declare-fun temp828_174 () (_ BitVec 64))
(declare-fun temp828_175 () (_ BitVec 64))
(declare-fun temp828_176 () (_ BitVec 64))
(declare-fun temp828_177 () (_ BitVec 64))
(declare-fun temp828_178 () (_ BitVec 64))
(declare-fun temp828_179 () (_ BitVec 64))
(declare-fun temp828_180 () (_ BitVec 64))
(declare-fun temp828_181 () (_ BitVec 64))
(declare-fun temp828_182 () (_ BitVec 64))
(declare-fun temp828_183 () (_ BitVec 64))
(declare-fun temp828_184 () (_ BitVec 64))
(declare-fun temp828_185 () (_ BitVec 64))
(declare-fun temp828_186 () (_ BitVec 64))
(declare-fun temp828_187 () (_ BitVec 64))
(declare-fun temp828_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp828_189 () (_ BitVec 64))
(declare-fun temp828_191 () (_ BitVec 64))
(declare-fun temp828_192 () (_ BitVec 64))
(declare-fun temp828_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp828_193 () (_ BitVec 64))
(declare-fun temp828_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp828_195 () (_ BitVec 64))
(declare-fun temp828_196 () (_ BitVec 64))
(declare-fun temp828_197 () (_ BitVec 64))
(declare-fun temp828_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp828_199 () (_ BitVec 64))
(declare-fun temp828_200 () (_ BitVec 64))
(declare-fun temp828_201 () (_ BitVec 64))
(declare-fun temp828_202 () (_ BitVec 64))
(declare-fun temp828_203 () (_ BitVec 64))
(declare-fun temp828_204 () (_ BitVec 64))
(declare-fun temp828_205 () (_ BitVec 64))
(declare-fun temp828_206 () (_ BitVec 64))
(declare-fun temp828_207 () (_ BitVec 64))
(declare-fun temp828_208 () (_ BitVec 64))
(declare-fun temp828_209 () (_ BitVec 64))
(declare-fun temp828_210 () (_ BitVec 64))
(declare-fun temp828_211 () (_ BitVec 64))
(declare-fun temp828_212 () (_ BitVec 64))
(declare-fun temp828_213 () (_ BitVec 64))
(declare-fun temp828_214 () (_ BitVec 64))
(declare-fun temp828_215 () (_ BitVec 64))
(declare-fun temp828_216 () (_ BitVec 64))
(declare-fun temp828_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp828_218 () (_ BitVec 64))
(declare-fun temp828_220 () (_ BitVec 64))
(declare-fun temp828_221 () (_ BitVec 64))
(declare-fun temp828_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp828_222 () (_ BitVec 64))
(declare-fun temp828_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp828_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp828_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp828_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp828_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp828_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp828_229 () (_ BitVec 64))
(declare-fun temp828_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp828_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp828_232 () (_ BitVec 64))
(declare-fun temp828_233 () (_ BitVec 64))
(declare-fun temp828_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp828_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp828_236 () (_ BitVec 64))
(declare-fun temp828_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp828_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp828_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp828_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80817 () (_ BitVec 64))
(declare-fun temp828_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80819 () (_ BitVec 64))
(declare-fun temp828_242 () (_ BitVec 64))
(declare-fun temp828_243 () (_ BitVec 64))
(declare-fun var6763284 () (_ BitVec 64))
(declare-fun var6763251 () (_ BitVec 64))
(declare-fun var6631815 () (_ BitVec 64))
(declare-fun var6631811 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp828_244 () (_ BitVec 64))
(assert (= temp828_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp828_1)))
(assert (= temp828_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp828_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_3 #x0000000000000000))
(assert (= var79869 temp828_3))
(assert (= temp828_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp828_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_5 #x0000000000000000))
(assert (= var79914 temp828_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp828_6 #x0000000000000000))
(assert (= temp828_7 temp828_6))
(assert (= temp828_8 (select ARGNAME_padding_NAMEEND_VAL temp828_7)))
(assert (= temp828_9 #x0000000000000001))
(assert (= temp828_10 temp828_9))
(assert (= temp828_11 (select ARGNAME_padding_NAMEEND_VAL temp828_10)))
(assert (= temp828_12 #x0000000000000002))
(assert (= temp828_13 temp828_12))
(assert (= temp828_14 (select ARGNAME_padding_NAMEEND_VAL temp828_13)))
(assert (= temp828_15 #x0000000000000003))
(assert (= temp828_16 temp828_15))
(assert (= temp828_17 (select ARGNAME_padding_NAMEEND_VAL temp828_16)))
(assert (= temp828_18 #x0000000000000004))
(assert (= temp828_19 temp828_18))
(assert (= temp828_20 (select ARGNAME_padding_NAMEEND_VAL temp828_19)))
(assert (= temp828_21 #x0000000000000005))
(assert (= temp828_22 temp828_21))
(assert (= temp828_23 (select ARGNAME_padding_NAMEEND_VAL temp828_22)))
(assert (= temp828_24 #x0000000000000000))
(assert (= temp828_25 #x0000000000000000))
(assert (= temp828_26 temp828_25))
(assert (= temp828_27 (select ARGNAME_padding_NAMEEND_VAL temp828_26)))
(assert (= temp828_28 #x0000000000000000))
(assert (= temp828_29 #x0000000000000001))
(assert (= temp828_30 temp828_29))
(assert (= temp828_31 (select ARGNAME_padding_NAMEEND_VAL temp828_30)))
(assert (= temp828_32 #x0000000000000000))
(assert (= temp828_33 #x0000000000000002))
(assert (= temp828_34 temp828_33))
(assert (= temp828_35 (select ARGNAME_padding_NAMEEND_VAL temp828_34)))
(assert (= temp828_36 #x0000000000000000))
(assert (= temp828_37 #x0000000000000003))
(assert (= temp828_38 temp828_37))
(assert (= temp828_39 (select ARGNAME_padding_NAMEEND_VAL temp828_38)))
(assert (= temp828_40 #x0000000000000000))
(assert (= temp828_41 #x0000000000000004))
(assert (= temp828_42 temp828_41))
(assert (= temp828_43 (select ARGNAME_padding_NAMEEND_VAL temp828_42)))
(assert (= temp828_44 #x0000000000000000))
(assert (= temp828_45 #x0000000000000005))
(assert (= temp828_46 temp828_45))
(assert (= temp828_47 (select ARGNAME_padding_NAMEEND_VAL temp828_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp828_27 temp828_24)
             (bvslt temp828_31 temp828_28)
             (bvslt temp828_35 temp828_32)
             (bvslt temp828_39 temp828_36)
             (bvslt temp828_43 temp828_40)
             (bvslt temp828_47 temp828_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_48 #x0000000000000000))
(assert (= var1322786 temp828_48))
(assert (= temp828_49 #x0000000000000000))
(assert (= temp828_50 temp828_49))
(assert (= temp828_51 (select ARGNAME_output_padding_NAMEEND_VAL temp828_50)))
(assert (= temp828_52 #x0000000000000001))
(assert (= temp828_53 temp828_52))
(assert (= temp828_54 (select ARGNAME_output_padding_NAMEEND_VAL temp828_53)))
(assert (= temp828_55 #x0000000000000002))
(assert (= temp828_56 temp828_55))
(assert (= temp828_57 (select ARGNAME_output_padding_NAMEEND_VAL temp828_56)))
(assert (= temp828_58 #x0000000000000003))
(assert (= temp828_59 temp828_58))
(assert (= temp828_60 (select ARGNAME_output_padding_NAMEEND_VAL temp828_59)))
(assert (= temp828_61 #x0000000000000004))
(assert (= temp828_62 temp828_61))
(assert (= temp828_63 (select ARGNAME_output_padding_NAMEEND_VAL temp828_62)))
(assert (= temp828_64 #x0000000000000005))
(assert (= temp828_65 temp828_64))
(assert (= temp828_66 (select ARGNAME_output_padding_NAMEEND_VAL temp828_65)))
(assert (= temp828_67 #x0000000000000000))
(assert (= temp828_68 #x0000000000000000))
(assert (= temp828_69 temp828_68))
(assert (= temp828_70 (select ARGNAME_output_padding_NAMEEND_VAL temp828_69)))
(assert (= temp828_71 #x0000000000000000))
(assert (= temp828_72 #x0000000000000001))
(assert (= temp828_73 temp828_72))
(assert (= temp828_74 (select ARGNAME_output_padding_NAMEEND_VAL temp828_73)))
(assert (= temp828_75 #x0000000000000000))
(assert (= temp828_76 #x0000000000000002))
(assert (= temp828_77 temp828_76))
(assert (= temp828_78 (select ARGNAME_output_padding_NAMEEND_VAL temp828_77)))
(assert (= temp828_79 #x0000000000000000))
(assert (= temp828_80 #x0000000000000003))
(assert (= temp828_81 temp828_80))
(assert (= temp828_82 (select ARGNAME_output_padding_NAMEEND_VAL temp828_81)))
(assert (= temp828_83 #x0000000000000000))
(assert (= temp828_84 #x0000000000000004))
(assert (= temp828_85 temp828_84))
(assert (= temp828_86 (select ARGNAME_output_padding_NAMEEND_VAL temp828_85)))
(assert (= temp828_87 #x0000000000000000))
(assert (= temp828_88 #x0000000000000005))
(assert (= temp828_89 temp828_88))
(assert (= temp828_90 (select ARGNAME_output_padding_NAMEEND_VAL temp828_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp828_70 temp828_67)
             (bvslt temp828_74 temp828_71)
             (bvslt temp828_78 temp828_75)
             (bvslt temp828_82 temp828_79)
             (bvslt temp828_86 temp828_83)
             (bvslt temp828_90 temp828_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_91 #x0000000000000000))
(assert (= var1322797 temp828_91))
(assert (= temp828_92 #x0000000000000000))
(assert (= temp828_93 temp828_92))
(assert (= temp828_94 (select ARGNAME_stride_NAMEEND_VAL temp828_93)))
(assert (= temp828_95 #x0000000000000001))
(assert (= temp828_96 temp828_95))
(assert (= temp828_97 (select ARGNAME_stride_NAMEEND_VAL temp828_96)))
(assert (= temp828_98 #x0000000000000002))
(assert (= temp828_99 temp828_98))
(assert (= temp828_100 (select ARGNAME_stride_NAMEEND_VAL temp828_99)))
(assert (= temp828_101 #x0000000000000003))
(assert (= temp828_102 temp828_101))
(assert (= temp828_103 (select ARGNAME_stride_NAMEEND_VAL temp828_102)))
(assert (= temp828_104 #x0000000000000004))
(assert (= temp828_105 temp828_104))
(assert (= temp828_106 (select ARGNAME_stride_NAMEEND_VAL temp828_105)))
(assert (= temp828_107 #x0000000000000005))
(assert (= temp828_108 temp828_107))
(assert (= temp828_109 (select ARGNAME_stride_NAMEEND_VAL temp828_108)))
(assert (= temp828_110 #x0000000000000000))
(assert (= temp828_111 #x0000000000000000))
(assert (= temp828_112 temp828_111))
(assert (= temp828_113 (select ARGNAME_stride_NAMEEND_VAL temp828_112)))
(assert (= temp828_114 #x0000000000000000))
(assert (= temp828_115 #x0000000000000001))
(assert (= temp828_116 temp828_115))
(assert (= temp828_117 (select ARGNAME_stride_NAMEEND_VAL temp828_116)))
(assert (= temp828_118 #x0000000000000000))
(assert (= temp828_119 #x0000000000000002))
(assert (= temp828_120 temp828_119))
(assert (= temp828_121 (select ARGNAME_stride_NAMEEND_VAL temp828_120)))
(assert (= temp828_122 #x0000000000000000))
(assert (= temp828_123 #x0000000000000003))
(assert (= temp828_124 temp828_123))
(assert (= temp828_125 (select ARGNAME_stride_NAMEEND_VAL temp828_124)))
(assert (= temp828_126 #x0000000000000000))
(assert (= temp828_127 #x0000000000000004))
(assert (= temp828_128 temp828_127))
(assert (= temp828_129 (select ARGNAME_stride_NAMEEND_VAL temp828_128)))
(assert (= temp828_130 #x0000000000000000))
(assert (= temp828_131 #x0000000000000005))
(assert (= temp828_132 temp828_131))
(assert (= temp828_133 (select ARGNAME_stride_NAMEEND_VAL temp828_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp828_113 temp828_110)
             (bvsle temp828_117 temp828_114)
             (bvsle temp828_121 temp828_118)
             (bvsle temp828_125 temp828_122)
             (bvsle temp828_129 temp828_126)
             (bvsle temp828_133 temp828_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_134 #x0000000000000000))
(assert (= var1322807 temp828_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_135 #x0000000000000001))
(assert (= var1322819 temp828_135))
(assert (= temp828_136 #x0000000000000000))
(assert (= var1310898 temp828_136))
(assert (= temp828_137 #x0000000000000000))
(assert (= temp828_138 temp828_137))
(assert (= temp828_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_138)))
(assert (= temp828_140 #x0000000000000001))
(assert (= temp828_141 temp828_140))
(assert (= temp828_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_141)))
(assert (= temp828_143 #x0000000000000002))
(assert (= temp828_144 temp828_143))
(assert (= temp828_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_144)))
(assert (= temp828_146 #x0000000000000003))
(assert (= temp828_147 temp828_146))
(assert (= temp828_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_147)))
(assert (= temp828_149 #x0000000000000004))
(assert (= temp828_150 temp828_149))
(assert (= temp828_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_150)))
(assert (= temp828_152 #x0000000000000005))
(assert (= temp828_153 temp828_152))
(assert (= temp828_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_153)))
(assert (= temp828_156 var1310898))
(assert (= temp828_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_156)))
(assert (= temp828_155 temp828_157))
(assert (= var1322852
   (ite (bvslt temp828_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_158 #x0000000000000000))
(assert (= var1322852 temp828_158))
(assert (= temp828_159 #x0000000000000000))
(assert (= var1310898 temp828_159))
(assert (= temp828_161 var1310898))
(assert (= temp828_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_161)))
(assert (= temp828_160 temp828_162))
(assert (= var1322874 (bvsmod temp828_160 ARGNAME_groups_NAMEEND)))
(assert (= temp828_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp828_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp828_164 #x0000000000000001))
(assert (= var1322875 temp828_164))
(assert (= temp828_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp828_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_166 #x0000000000000001))
(assert (= var1322895 temp828_166))
(assert (= temp828_167 #x0000000000000001))
(assert (= var1311786 temp828_167))
(assert (= temp828_168 #x0000000000000000))
(assert (= temp828_169 temp828_168))
(assert (= temp828_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp828_169)))
(assert (= temp828_171 #x0000000000000001))
(assert (= temp828_172 temp828_171))
(assert (= temp828_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp828_172)))
(assert (= temp828_174 #x0000000000000002))
(assert (= temp828_175 temp828_174))
(assert (= temp828_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp828_175)))
(assert (= temp828_177 #x0000000000000003))
(assert (= temp828_178 temp828_177))
(assert (= temp828_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp828_178)))
(assert (= temp828_180 #x0000000000000004))
(assert (= temp828_181 temp828_180))
(assert (= temp828_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp828_181)))
(assert (= temp828_183 #x0000000000000005))
(assert (= temp828_184 temp828_183))
(assert (= temp828_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp828_184)))
(assert (= temp828_186 #x0000000000000000))
(assert (= temp828_187
   (ite (bvslt var1311786 temp828_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp828_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp828_187)))
(assert (= var1322903 temp828_188))
(assert (bvslt (ite (bvslt var1311786 temp828_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp828_189 #x0000000000000001))
(assert (= var1311786 temp828_189))
(assert (= temp828_191 var1311786))
(assert (= temp828_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_191)))
(assert (= temp828_190 temp828_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp828_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp828_193 #x0000000000000001))
(assert (= var1322908 temp828_193))
(assert (= temp828_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp828_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_195 #x0000000000000001))
(assert (= var1322975 temp828_195))
(assert (= temp828_196 #x0000000000000000))
(assert (= var1310898 temp828_196))
(assert (= temp828_197 #x0000000000000000))
(assert (= temp828_198 temp828_197))
(assert (= temp828_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp828_198)))
(assert (= temp828_200 #x0000000000000001))
(assert (= temp828_201 temp828_200))
(assert (= temp828_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp828_201)))
(assert (= temp828_203 #x0000000000000002))
(assert (= temp828_204 temp828_203))
(assert (= temp828_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp828_204)))
(assert (= temp828_206 #x0000000000000003))
(assert (= temp828_207 temp828_206))
(assert (= temp828_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp828_207)))
(assert (= temp828_209 #x0000000000000004))
(assert (= temp828_210 temp828_209))
(assert (= temp828_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp828_210)))
(assert (= temp828_212 #x0000000000000005))
(assert (= temp828_213 temp828_212))
(assert (= temp828_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp828_213)))
(assert (= temp828_215 #x0000000000000000))
(assert (= temp828_216
   (ite (bvslt var1310898 temp828_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp828_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp828_216)))
(assert (= var1322977 temp828_217))
(assert (bvslt (ite (bvslt var1310898 temp828_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp828_218 #x0000000000000000))
(assert (= var1310898 temp828_218))
(assert (= temp828_220 var1310898))
(assert (= temp828_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_220)))
(assert (= temp828_219 temp828_221))
(assert (= var1322980
   (ite (= var1322977 temp828_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp828_222 #x0000000000000001))
(assert (= var1322980 temp828_222))
(assert (= temp828_223 #x0000000000000002))
(assert (= var1848169 temp828_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp828_225 #x0000000000000001))
(assert (= var1323065 temp828_225))
(assert (= temp828_226 #x0000000000000001))
(assert (= var3486735 temp828_226))
(assert (= temp828_227 #x0000000000000001))
(assert (= var3814415 temp828_227))
(assert (= temp828_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp828_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_229 #x0000000000000001))
(assert (= var79986 temp828_229))
(assert (= temp828_230 #x0000000000000001))
(assert (= var80116 temp828_230))
(assert (= var4796905 var80116))
(assert (= temp828_231 #x0000000000000000))
(assert (= var4784306 temp828_231))
(assert (= temp828_232 #x0000000000000000))
(assert (= temp828_233
   (ite (bvslt var4784306 temp828_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp828_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp828_233)))
(assert (= var4796924 temp828_234))
(assert (bvslt (ite (bvslt var4784306 temp828_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp828_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp828_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp828_236 #x0000000000000001))
(assert (= var4796925 temp828_236))
(assert (= temp828_237 #x0000000000000000))
(assert (= var4996927 temp828_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp828_238 #x0000000000000002))
(assert (= var5125763 temp828_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_239 #x0000000000000000))
(assert (= var5191324 temp828_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= temp828_240 #x0000000000000000))
(assert (= var80817
   (ite (distinct ARGNAME_benchmark_NAMEEND temp828_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_241 #x0000000000000000))
(assert (= var80819
   (ite (distinct ARGNAME_deterministic_NAMEEND temp828_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_242 #x0000000000000001))
(assert (= var79986 temp828_242))
(assert (= temp828_243 #x0000000000000000))
(assert (= var6763284 temp828_243))
(assert (= var6763251 var6763284))
(assert (= var6631815 var6763251))
(assert (= var6631811 var6631815))
(assert (= var81597 var6631811))
(assert (= temp828_244 #x0000000000000000))
(assert (= var81597 temp828_244))
(model-add temp828_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp828_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp828_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






