(declare-fun temp106_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp106_2 () (_ BitVec 64))
(declare-fun temp106_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp106_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp106_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp106_6 () (_ BitVec 64))
(declare-fun temp106_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp106_8 () (_ BitVec 64))
(declare-fun temp106_9 () (_ BitVec 64))
(declare-fun temp106_10 () (_ BitVec 64))
(declare-fun temp106_11 () (_ BitVec 64))
(declare-fun temp106_12 () (_ BitVec 64))
(declare-fun temp106_13 () (_ BitVec 64))
(declare-fun temp106_14 () (_ BitVec 64))
(declare-fun temp106_15 () (_ BitVec 64))
(declare-fun temp106_16 () (_ BitVec 64))
(declare-fun temp106_17 () (_ BitVec 64))
(declare-fun temp106_18 () (_ BitVec 64))
(declare-fun temp106_19 () (_ BitVec 64))
(declare-fun temp106_20 () (_ BitVec 64))
(declare-fun temp106_21 () (_ BitVec 64))
(declare-fun temp106_22 () (_ BitVec 64))
(declare-fun temp106_23 () (_ BitVec 64))
(declare-fun temp106_24 () (_ BitVec 64))
(declare-fun temp106_25 () (_ BitVec 64))
(declare-fun temp106_26 () (_ BitVec 64))
(declare-fun temp106_27 () (_ BitVec 64))
(declare-fun temp106_28 () (_ BitVec 64))
(declare-fun temp106_29 () (_ BitVec 64))
(declare-fun temp106_30 () (_ BitVec 64))
(declare-fun temp106_31 () (_ BitVec 64))
(declare-fun temp106_32 () (_ BitVec 64))
(declare-fun temp106_33 () (_ BitVec 64))
(declare-fun temp106_34 () (_ BitVec 64))
(declare-fun temp106_35 () (_ BitVec 64))
(declare-fun temp106_36 () (_ BitVec 64))
(declare-fun temp106_37 () (_ BitVec 64))
(declare-fun temp106_38 () (_ BitVec 64))
(declare-fun temp106_39 () (_ BitVec 64))
(declare-fun temp106_40 () (_ BitVec 64))
(declare-fun temp106_41 () (_ BitVec 64))
(declare-fun temp106_42 () (_ BitVec 64))
(declare-fun temp106_43 () (_ BitVec 64))
(declare-fun temp106_44 () (_ BitVec 64))
(declare-fun temp106_45 () (_ BitVec 64))
(declare-fun temp106_46 () (_ BitVec 64))
(declare-fun temp106_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp106_48 () (_ BitVec 64))
(declare-fun temp106_49 () (_ BitVec 64))
(declare-fun temp106_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp106_51 () (_ BitVec 64))
(declare-fun temp106_52 () (_ BitVec 64))
(declare-fun temp106_53 () (_ BitVec 64))
(declare-fun temp106_54 () (_ BitVec 64))
(declare-fun temp106_55 () (_ BitVec 64))
(declare-fun temp106_56 () (_ BitVec 64))
(declare-fun temp106_57 () (_ BitVec 64))
(declare-fun temp106_58 () (_ BitVec 64))
(declare-fun temp106_59 () (_ BitVec 64))
(declare-fun temp106_60 () (_ BitVec 64))
(declare-fun temp106_61 () (_ BitVec 64))
(declare-fun temp106_62 () (_ BitVec 64))
(declare-fun temp106_63 () (_ BitVec 64))
(declare-fun temp106_64 () (_ BitVec 64))
(declare-fun temp106_65 () (_ BitVec 64))
(declare-fun temp106_66 () (_ BitVec 64))
(declare-fun temp106_67 () (_ BitVec 64))
(declare-fun temp106_68 () (_ BitVec 64))
(declare-fun temp106_69 () (_ BitVec 64))
(declare-fun temp106_70 () (_ BitVec 64))
(declare-fun temp106_71 () (_ BitVec 64))
(declare-fun temp106_72 () (_ BitVec 64))
(declare-fun temp106_73 () (_ BitVec 64))
(declare-fun temp106_74 () (_ BitVec 64))
(declare-fun temp106_75 () (_ BitVec 64))
(declare-fun temp106_76 () (_ BitVec 64))
(declare-fun temp106_77 () (_ BitVec 64))
(declare-fun temp106_78 () (_ BitVec 64))
(declare-fun temp106_79 () (_ BitVec 64))
(declare-fun temp106_80 () (_ BitVec 64))
(declare-fun temp106_81 () (_ BitVec 64))
(declare-fun temp106_82 () (_ BitVec 64))
(declare-fun temp106_83 () (_ BitVec 64))
(declare-fun temp106_84 () (_ BitVec 64))
(declare-fun temp106_85 () (_ BitVec 64))
(declare-fun temp106_86 () (_ BitVec 64))
(declare-fun temp106_87 () (_ BitVec 64))
(declare-fun temp106_88 () (_ BitVec 64))
(declare-fun temp106_89 () (_ BitVec 64))
(declare-fun temp106_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp106_91 () (_ BitVec 64))
(declare-fun temp106_92 () (_ BitVec 64))
(declare-fun temp106_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp106_94 () (_ BitVec 64))
(declare-fun temp106_95 () (_ BitVec 64))
(declare-fun temp106_96 () (_ BitVec 64))
(declare-fun temp106_97 () (_ BitVec 64))
(declare-fun temp106_98 () (_ BitVec 64))
(declare-fun temp106_99 () (_ BitVec 64))
(declare-fun temp106_100 () (_ BitVec 64))
(declare-fun temp106_101 () (_ BitVec 64))
(declare-fun temp106_102 () (_ BitVec 64))
(declare-fun temp106_103 () (_ BitVec 64))
(declare-fun temp106_104 () (_ BitVec 64))
(declare-fun temp106_105 () (_ BitVec 64))
(declare-fun temp106_106 () (_ BitVec 64))
(declare-fun temp106_107 () (_ BitVec 64))
(declare-fun temp106_108 () (_ BitVec 64))
(declare-fun temp106_109 () (_ BitVec 64))
(declare-fun temp106_110 () (_ BitVec 64))
(declare-fun temp106_111 () (_ BitVec 64))
(declare-fun temp106_112 () (_ BitVec 64))
(declare-fun temp106_113 () (_ BitVec 64))
(declare-fun temp106_114 () (_ BitVec 64))
(declare-fun temp106_115 () (_ BitVec 64))
(declare-fun temp106_116 () (_ BitVec 64))
(declare-fun temp106_117 () (_ BitVec 64))
(declare-fun temp106_118 () (_ BitVec 64))
(declare-fun temp106_119 () (_ BitVec 64))
(declare-fun temp106_120 () (_ BitVec 64))
(declare-fun temp106_121 () (_ BitVec 64))
(declare-fun temp106_122 () (_ BitVec 64))
(declare-fun temp106_123 () (_ BitVec 64))
(declare-fun temp106_124 () (_ BitVec 64))
(declare-fun temp106_125 () (_ BitVec 64))
(declare-fun temp106_126 () (_ BitVec 64))
(declare-fun temp106_127 () (_ BitVec 64))
(declare-fun temp106_128 () (_ BitVec 64))
(declare-fun temp106_129 () (_ BitVec 64))
(declare-fun temp106_130 () (_ BitVec 64))
(declare-fun temp106_131 () (_ BitVec 64))
(declare-fun temp106_132 () (_ BitVec 64))
(declare-fun temp106_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp106_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp106_135 () (_ BitVec 64))
(declare-fun temp106_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp106_137 () (_ BitVec 64))
(declare-fun temp106_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp106_139 () (_ BitVec 64))
(declare-fun temp106_140 () (_ BitVec 64))
(declare-fun temp106_141 () (_ BitVec 64))
(declare-fun temp106_142 () (_ BitVec 64))
(declare-fun temp106_143 () (_ BitVec 64))
(declare-fun temp106_144 () (_ BitVec 64))
(declare-fun temp106_145 () (_ BitVec 64))
(declare-fun temp106_146 () (_ BitVec 64))
(declare-fun temp106_147 () (_ BitVec 64))
(declare-fun temp106_148 () (_ BitVec 64))
(declare-fun temp106_149 () (_ BitVec 64))
(declare-fun temp106_150 () (_ BitVec 64))
(declare-fun temp106_151 () (_ BitVec 64))
(declare-fun temp106_152 () (_ BitVec 64))
(declare-fun temp106_153 () (_ BitVec 64))
(declare-fun temp106_154 () (_ BitVec 64))
(declare-fun temp106_156 () (_ BitVec 64))
(declare-fun temp106_157 () (_ BitVec 64))
(declare-fun temp106_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp106_158 () (_ BitVec 64))
(declare-fun temp106_159 () (_ BitVec 64))
(declare-fun temp106_161 () (_ BitVec 64))
(declare-fun temp106_162 () (_ BitVec 64))
(declare-fun temp106_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp106_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp106_164 () (_ BitVec 64))
(declare-fun temp106_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp106_166 () (_ BitVec 64))
(declare-fun temp106_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp106_168 () (_ BitVec 64))
(declare-fun temp106_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp106_170 () (_ BitVec 64))
(declare-fun temp106_171 () (_ BitVec 64))
(declare-fun temp106_172 () (_ BitVec 64))
(declare-fun temp106_173 () (_ BitVec 64))
(declare-fun temp106_174 () (_ BitVec 64))
(declare-fun temp106_175 () (_ BitVec 64))
(declare-fun temp106_176 () (_ BitVec 64))
(declare-fun temp106_177 () (_ BitVec 64))
(declare-fun temp106_178 () (_ BitVec 64))
(declare-fun temp106_179 () (_ BitVec 64))
(declare-fun temp106_180 () (_ BitVec 64))
(declare-fun temp106_181 () (_ BitVec 64))
(declare-fun temp106_182 () (_ BitVec 64))
(declare-fun temp106_183 () (_ BitVec 64))
(declare-fun temp106_184 () (_ BitVec 64))
(declare-fun temp106_185 () (_ BitVec 64))
(declare-fun temp106_186 () (_ BitVec 64))
(declare-fun temp106_187 () (_ BitVec 64))
(declare-fun temp106_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp106_189 () (_ BitVec 64))
(declare-fun temp106_191 () (_ BitVec 64))
(declare-fun temp106_192 () (_ BitVec 64))
(declare-fun temp106_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp106_193 () (_ BitVec 64))
(declare-fun temp106_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp106_195 () (_ BitVec 64))
(declare-fun temp106_196 () (_ BitVec 64))
(declare-fun temp106_197 () (_ BitVec 64))
(declare-fun temp106_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp106_199 () (_ BitVec 64))
(declare-fun temp106_200 () (_ BitVec 64))
(declare-fun temp106_201 () (_ BitVec 64))
(declare-fun temp106_202 () (_ BitVec 64))
(declare-fun temp106_203 () (_ BitVec 64))
(declare-fun temp106_204 () (_ BitVec 64))
(declare-fun temp106_205 () (_ BitVec 64))
(declare-fun temp106_206 () (_ BitVec 64))
(declare-fun temp106_207 () (_ BitVec 64))
(declare-fun temp106_208 () (_ BitVec 64))
(declare-fun temp106_209 () (_ BitVec 64))
(declare-fun temp106_210 () (_ BitVec 64))
(declare-fun temp106_211 () (_ BitVec 64))
(declare-fun temp106_212 () (_ BitVec 64))
(declare-fun temp106_213 () (_ BitVec 64))
(declare-fun temp106_214 () (_ BitVec 64))
(declare-fun temp106_215 () (_ BitVec 64))
(declare-fun temp106_216 () (_ BitVec 64))
(declare-fun temp106_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp106_218 () (_ BitVec 64))
(declare-fun temp106_220 () (_ BitVec 64))
(declare-fun temp106_221 () (_ BitVec 64))
(declare-fun temp106_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp106_222 () (_ BitVec 64))
(declare-fun temp106_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp106_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp106_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp106_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp106_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp106_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp106_229 () (_ BitVec 64))
(declare-fun temp106_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp106_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp106_232 () (_ BitVec 64))
(declare-fun temp106_233 () (_ BitVec 64))
(declare-fun temp106_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp106_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp106_236 () (_ BitVec 64))
(declare-fun temp106_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp106_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp106_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp106_241 () (_ BitVec 64))
(declare-fun temp106_240 () (_ BitVec 64))
(declare-fun temp106_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp106_243 () (_ BitVec 64))
(declare-fun temp106_244 () (_ BitVec 64))
(declare-fun temp106_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp106_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp106_247 () (_ BitVec 64))
(declare-fun temp106_249 () (_ BitVec 64))
(declare-fun temp106_248 () (_ BitVec 64))
(declare-fun temp106_250 () (_ BitVec 64))
(assert (= temp106_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp106_1)))
(assert (= temp106_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp106_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_3 #x0000000000000000))
(assert (= var79869 temp106_3))
(assert (= temp106_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp106_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_5 #x0000000000000000))
(assert (= var79914 temp106_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp106_6 #x0000000000000000))
(assert (= temp106_7 temp106_6))
(assert (= temp106_8 (select ARGNAME_padding_NAMEEND_VAL temp106_7)))
(assert (= temp106_9 #x0000000000000001))
(assert (= temp106_10 temp106_9))
(assert (= temp106_11 (select ARGNAME_padding_NAMEEND_VAL temp106_10)))
(assert (= temp106_12 #x0000000000000002))
(assert (= temp106_13 temp106_12))
(assert (= temp106_14 (select ARGNAME_padding_NAMEEND_VAL temp106_13)))
(assert (= temp106_15 #x0000000000000003))
(assert (= temp106_16 temp106_15))
(assert (= temp106_17 (select ARGNAME_padding_NAMEEND_VAL temp106_16)))
(assert (= temp106_18 #x0000000000000004))
(assert (= temp106_19 temp106_18))
(assert (= temp106_20 (select ARGNAME_padding_NAMEEND_VAL temp106_19)))
(assert (= temp106_21 #x0000000000000005))
(assert (= temp106_22 temp106_21))
(assert (= temp106_23 (select ARGNAME_padding_NAMEEND_VAL temp106_22)))
(assert (= temp106_24 #x0000000000000000))
(assert (= temp106_25 #x0000000000000000))
(assert (= temp106_26 temp106_25))
(assert (= temp106_27 (select ARGNAME_padding_NAMEEND_VAL temp106_26)))
(assert (= temp106_28 #x0000000000000000))
(assert (= temp106_29 #x0000000000000001))
(assert (= temp106_30 temp106_29))
(assert (= temp106_31 (select ARGNAME_padding_NAMEEND_VAL temp106_30)))
(assert (= temp106_32 #x0000000000000000))
(assert (= temp106_33 #x0000000000000002))
(assert (= temp106_34 temp106_33))
(assert (= temp106_35 (select ARGNAME_padding_NAMEEND_VAL temp106_34)))
(assert (= temp106_36 #x0000000000000000))
(assert (= temp106_37 #x0000000000000003))
(assert (= temp106_38 temp106_37))
(assert (= temp106_39 (select ARGNAME_padding_NAMEEND_VAL temp106_38)))
(assert (= temp106_40 #x0000000000000000))
(assert (= temp106_41 #x0000000000000004))
(assert (= temp106_42 temp106_41))
(assert (= temp106_43 (select ARGNAME_padding_NAMEEND_VAL temp106_42)))
(assert (= temp106_44 #x0000000000000000))
(assert (= temp106_45 #x0000000000000005))
(assert (= temp106_46 temp106_45))
(assert (= temp106_47 (select ARGNAME_padding_NAMEEND_VAL temp106_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp106_27 temp106_24)
             (bvslt temp106_31 temp106_28)
             (bvslt temp106_35 temp106_32)
             (bvslt temp106_39 temp106_36)
             (bvslt temp106_43 temp106_40)
             (bvslt temp106_47 temp106_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_48 #x0000000000000000))
(assert (= var1322786 temp106_48))
(assert (= temp106_49 #x0000000000000000))
(assert (= temp106_50 temp106_49))
(assert (= temp106_51 (select ARGNAME_output_padding_NAMEEND_VAL temp106_50)))
(assert (= temp106_52 #x0000000000000001))
(assert (= temp106_53 temp106_52))
(assert (= temp106_54 (select ARGNAME_output_padding_NAMEEND_VAL temp106_53)))
(assert (= temp106_55 #x0000000000000002))
(assert (= temp106_56 temp106_55))
(assert (= temp106_57 (select ARGNAME_output_padding_NAMEEND_VAL temp106_56)))
(assert (= temp106_58 #x0000000000000003))
(assert (= temp106_59 temp106_58))
(assert (= temp106_60 (select ARGNAME_output_padding_NAMEEND_VAL temp106_59)))
(assert (= temp106_61 #x0000000000000004))
(assert (= temp106_62 temp106_61))
(assert (= temp106_63 (select ARGNAME_output_padding_NAMEEND_VAL temp106_62)))
(assert (= temp106_64 #x0000000000000005))
(assert (= temp106_65 temp106_64))
(assert (= temp106_66 (select ARGNAME_output_padding_NAMEEND_VAL temp106_65)))
(assert (= temp106_67 #x0000000000000000))
(assert (= temp106_68 #x0000000000000000))
(assert (= temp106_69 temp106_68))
(assert (= temp106_70 (select ARGNAME_output_padding_NAMEEND_VAL temp106_69)))
(assert (= temp106_71 #x0000000000000000))
(assert (= temp106_72 #x0000000000000001))
(assert (= temp106_73 temp106_72))
(assert (= temp106_74 (select ARGNAME_output_padding_NAMEEND_VAL temp106_73)))
(assert (= temp106_75 #x0000000000000000))
(assert (= temp106_76 #x0000000000000002))
(assert (= temp106_77 temp106_76))
(assert (= temp106_78 (select ARGNAME_output_padding_NAMEEND_VAL temp106_77)))
(assert (= temp106_79 #x0000000000000000))
(assert (= temp106_80 #x0000000000000003))
(assert (= temp106_81 temp106_80))
(assert (= temp106_82 (select ARGNAME_output_padding_NAMEEND_VAL temp106_81)))
(assert (= temp106_83 #x0000000000000000))
(assert (= temp106_84 #x0000000000000004))
(assert (= temp106_85 temp106_84))
(assert (= temp106_86 (select ARGNAME_output_padding_NAMEEND_VAL temp106_85)))
(assert (= temp106_87 #x0000000000000000))
(assert (= temp106_88 #x0000000000000005))
(assert (= temp106_89 temp106_88))
(assert (= temp106_90 (select ARGNAME_output_padding_NAMEEND_VAL temp106_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp106_70 temp106_67)
             (bvslt temp106_74 temp106_71)
             (bvslt temp106_78 temp106_75)
             (bvslt temp106_82 temp106_79)
             (bvslt temp106_86 temp106_83)
             (bvslt temp106_90 temp106_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_91 #x0000000000000000))
(assert (= var1322797 temp106_91))
(assert (= temp106_92 #x0000000000000000))
(assert (= temp106_93 temp106_92))
(assert (= temp106_94 (select ARGNAME_stride_NAMEEND_VAL temp106_93)))
(assert (= temp106_95 #x0000000000000001))
(assert (= temp106_96 temp106_95))
(assert (= temp106_97 (select ARGNAME_stride_NAMEEND_VAL temp106_96)))
(assert (= temp106_98 #x0000000000000002))
(assert (= temp106_99 temp106_98))
(assert (= temp106_100 (select ARGNAME_stride_NAMEEND_VAL temp106_99)))
(assert (= temp106_101 #x0000000000000003))
(assert (= temp106_102 temp106_101))
(assert (= temp106_103 (select ARGNAME_stride_NAMEEND_VAL temp106_102)))
(assert (= temp106_104 #x0000000000000004))
(assert (= temp106_105 temp106_104))
(assert (= temp106_106 (select ARGNAME_stride_NAMEEND_VAL temp106_105)))
(assert (= temp106_107 #x0000000000000005))
(assert (= temp106_108 temp106_107))
(assert (= temp106_109 (select ARGNAME_stride_NAMEEND_VAL temp106_108)))
(assert (= temp106_110 #x0000000000000000))
(assert (= temp106_111 #x0000000000000000))
(assert (= temp106_112 temp106_111))
(assert (= temp106_113 (select ARGNAME_stride_NAMEEND_VAL temp106_112)))
(assert (= temp106_114 #x0000000000000000))
(assert (= temp106_115 #x0000000000000001))
(assert (= temp106_116 temp106_115))
(assert (= temp106_117 (select ARGNAME_stride_NAMEEND_VAL temp106_116)))
(assert (= temp106_118 #x0000000000000000))
(assert (= temp106_119 #x0000000000000002))
(assert (= temp106_120 temp106_119))
(assert (= temp106_121 (select ARGNAME_stride_NAMEEND_VAL temp106_120)))
(assert (= temp106_122 #x0000000000000000))
(assert (= temp106_123 #x0000000000000003))
(assert (= temp106_124 temp106_123))
(assert (= temp106_125 (select ARGNAME_stride_NAMEEND_VAL temp106_124)))
(assert (= temp106_126 #x0000000000000000))
(assert (= temp106_127 #x0000000000000004))
(assert (= temp106_128 temp106_127))
(assert (= temp106_129 (select ARGNAME_stride_NAMEEND_VAL temp106_128)))
(assert (= temp106_130 #x0000000000000000))
(assert (= temp106_131 #x0000000000000005))
(assert (= temp106_132 temp106_131))
(assert (= temp106_133 (select ARGNAME_stride_NAMEEND_VAL temp106_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp106_113 temp106_110)
             (bvsle temp106_117 temp106_114)
             (bvsle temp106_121 temp106_118)
             (bvsle temp106_125 temp106_122)
             (bvsle temp106_129 temp106_126)
             (bvsle temp106_133 temp106_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_134 #x0000000000000000))
(assert (= var1322807 temp106_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_135 #x0000000000000001))
(assert (= var1322819 temp106_135))
(assert (= temp106_136 #x0000000000000000))
(assert (= var1310898 temp106_136))
(assert (= temp106_137 #x0000000000000000))
(assert (= temp106_138 temp106_137))
(assert (= temp106_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_138)))
(assert (= temp106_140 #x0000000000000001))
(assert (= temp106_141 temp106_140))
(assert (= temp106_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_141)))
(assert (= temp106_143 #x0000000000000002))
(assert (= temp106_144 temp106_143))
(assert (= temp106_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_144)))
(assert (= temp106_146 #x0000000000000003))
(assert (= temp106_147 temp106_146))
(assert (= temp106_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_147)))
(assert (= temp106_149 #x0000000000000004))
(assert (= temp106_150 temp106_149))
(assert (= temp106_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_150)))
(assert (= temp106_152 #x0000000000000005))
(assert (= temp106_153 temp106_152))
(assert (= temp106_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_153)))
(assert (= temp106_156 var1310898))
(assert (= temp106_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_156)))
(assert (= temp106_155 temp106_157))
(assert (= var1322852
   (ite (bvslt temp106_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_158 #x0000000000000000))
(assert (= var1322852 temp106_158))
(assert (= temp106_159 #x0000000000000000))
(assert (= var1310898 temp106_159))
(assert (= temp106_161 var1310898))
(assert (= temp106_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_161)))
(assert (= temp106_160 temp106_162))
(assert (= var1322874 (bvsmod temp106_160 ARGNAME_groups_NAMEEND)))
(assert (= temp106_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp106_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp106_164 #x0000000000000001))
(assert (= var1322875 temp106_164))
(assert (= temp106_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp106_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_166 #x0000000000000001))
(assert (= var1322895 temp106_166))
(assert (= temp106_167 #x0000000000000001))
(assert (= var1311786 temp106_167))
(assert (= temp106_168 #x0000000000000000))
(assert (= temp106_169 temp106_168))
(assert (= temp106_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp106_169)))
(assert (= temp106_171 #x0000000000000001))
(assert (= temp106_172 temp106_171))
(assert (= temp106_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp106_172)))
(assert (= temp106_174 #x0000000000000002))
(assert (= temp106_175 temp106_174))
(assert (= temp106_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp106_175)))
(assert (= temp106_177 #x0000000000000003))
(assert (= temp106_178 temp106_177))
(assert (= temp106_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp106_178)))
(assert (= temp106_180 #x0000000000000004))
(assert (= temp106_181 temp106_180))
(assert (= temp106_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp106_181)))
(assert (= temp106_183 #x0000000000000005))
(assert (= temp106_184 temp106_183))
(assert (= temp106_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp106_184)))
(assert (= temp106_186 #x0000000000000000))
(assert (= temp106_187
   (ite (bvslt var1311786 temp106_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp106_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp106_187)))
(assert (= var1322903 temp106_188))
(assert (bvslt (ite (bvslt var1311786 temp106_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp106_189 #x0000000000000001))
(assert (= var1311786 temp106_189))
(assert (= temp106_191 var1311786))
(assert (= temp106_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_191)))
(assert (= temp106_190 temp106_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp106_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp106_193 #x0000000000000001))
(assert (= var1322908 temp106_193))
(assert (= temp106_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp106_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_195 #x0000000000000001))
(assert (= var1322975 temp106_195))
(assert (= temp106_196 #x0000000000000000))
(assert (= var1310898 temp106_196))
(assert (= temp106_197 #x0000000000000000))
(assert (= temp106_198 temp106_197))
(assert (= temp106_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp106_198)))
(assert (= temp106_200 #x0000000000000001))
(assert (= temp106_201 temp106_200))
(assert (= temp106_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp106_201)))
(assert (= temp106_203 #x0000000000000002))
(assert (= temp106_204 temp106_203))
(assert (= temp106_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp106_204)))
(assert (= temp106_206 #x0000000000000003))
(assert (= temp106_207 temp106_206))
(assert (= temp106_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp106_207)))
(assert (= temp106_209 #x0000000000000004))
(assert (= temp106_210 temp106_209))
(assert (= temp106_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp106_210)))
(assert (= temp106_212 #x0000000000000005))
(assert (= temp106_213 temp106_212))
(assert (= temp106_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp106_213)))
(assert (= temp106_215 #x0000000000000000))
(assert (= temp106_216
   (ite (bvslt var1310898 temp106_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp106_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp106_216)))
(assert (= var1322977 temp106_217))
(assert (bvslt (ite (bvslt var1310898 temp106_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp106_218 #x0000000000000000))
(assert (= var1310898 temp106_218))
(assert (= temp106_220 var1310898))
(assert (= temp106_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_220)))
(assert (= temp106_219 temp106_221))
(assert (= var1322980
   (ite (= var1322977 temp106_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp106_222 #x0000000000000001))
(assert (= var1322980 temp106_222))
(assert (= temp106_223 #x0000000000000002))
(assert (= var1848169 temp106_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp106_225 #x0000000000000001))
(assert (= var1323065 temp106_225))
(assert (= temp106_226 #x0000000000000001))
(assert (= var3486735 temp106_226))
(assert (= temp106_227 #x0000000000000001))
(assert (= var3814415 temp106_227))
(assert (= temp106_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp106_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_229 #x0000000000000001))
(assert (= var79986 temp106_229))
(assert (= temp106_230 #x0000000000000001))
(assert (= var80116 temp106_230))
(assert (= var4796905 var80116))
(assert (= temp106_231 #x0000000000000000))
(assert (= var4784306 temp106_231))
(assert (= temp106_232 #x0000000000000000))
(assert (= temp106_233
   (ite (bvslt var4784306 temp106_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp106_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp106_233)))
(assert (= var4796924 temp106_234))
(assert (bvslt (ite (bvslt var4784306 temp106_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp106_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp106_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp106_236 #x0000000000000001))
(assert (= var4796925 temp106_236))
(assert (= temp106_237 #x0000000000000000))
(assert (= var4996927 temp106_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp106_238 #x0000000000000002))
(assert (= var5125763 temp106_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_239 #x0000000000000000))
(assert (= var5191324 temp106_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp106_241 #xffffffffffffffff))
(assert (= temp106_240 temp106_241))
(assert (= temp106_242 #x0000000000000001))
(assert (= var66602 temp106_242))
(assert (= temp106_243 #x0000000000000000))
(assert (= temp106_244
   (ite (bvslt var66602 temp106_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp106_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp106_244)))
(assert (= var80523 temp106_245))
(assert (bvslt (ite (bvslt var66602 temp106_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp106_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp106_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp106_247 #x0000000000000001))
(assert (= var80524 temp106_247))
(assert (= temp106_249 #xffffffffffffffff))
(assert (= temp106_248 temp106_249))
(assert (= temp106_250 #x0000000000000001))
(assert (= var79986 temp106_250))
(model-add temp106_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp106_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp106_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






