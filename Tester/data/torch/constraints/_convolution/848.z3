(declare-fun temp1128_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1128_2 () (_ BitVec 64))
(declare-fun temp1128_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1128_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1128_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1128_6 () (_ BitVec 64))
(declare-fun temp1128_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_8 () (_ BitVec 64))
(declare-fun temp1128_9 () (_ BitVec 64))
(declare-fun temp1128_10 () (_ BitVec 64))
(declare-fun temp1128_11 () (_ BitVec 64))
(declare-fun temp1128_12 () (_ BitVec 64))
(declare-fun temp1128_13 () (_ BitVec 64))
(declare-fun temp1128_14 () (_ BitVec 64))
(declare-fun temp1128_15 () (_ BitVec 64))
(declare-fun temp1128_16 () (_ BitVec 64))
(declare-fun temp1128_17 () (_ BitVec 64))
(declare-fun temp1128_18 () (_ BitVec 64))
(declare-fun temp1128_19 () (_ BitVec 64))
(declare-fun temp1128_20 () (_ BitVec 64))
(declare-fun temp1128_21 () (_ BitVec 64))
(declare-fun temp1128_22 () (_ BitVec 64))
(declare-fun temp1128_23 () (_ BitVec 64))
(declare-fun temp1128_24 () (_ BitVec 64))
(declare-fun temp1128_25 () (_ BitVec 64))
(declare-fun temp1128_26 () (_ BitVec 64))
(declare-fun temp1128_27 () (_ BitVec 64))
(declare-fun temp1128_28 () (_ BitVec 64))
(declare-fun temp1128_29 () (_ BitVec 64))
(declare-fun temp1128_30 () (_ BitVec 64))
(declare-fun temp1128_31 () (_ BitVec 64))
(declare-fun temp1128_32 () (_ BitVec 64))
(declare-fun temp1128_33 () (_ BitVec 64))
(declare-fun temp1128_34 () (_ BitVec 64))
(declare-fun temp1128_35 () (_ BitVec 64))
(declare-fun temp1128_36 () (_ BitVec 64))
(declare-fun temp1128_37 () (_ BitVec 64))
(declare-fun temp1128_38 () (_ BitVec 64))
(declare-fun temp1128_39 () (_ BitVec 64))
(declare-fun temp1128_40 () (_ BitVec 64))
(declare-fun temp1128_41 () (_ BitVec 64))
(declare-fun temp1128_42 () (_ BitVec 64))
(declare-fun temp1128_43 () (_ BitVec 64))
(declare-fun temp1128_44 () (_ BitVec 64))
(declare-fun temp1128_45 () (_ BitVec 64))
(declare-fun temp1128_46 () (_ BitVec 64))
(declare-fun temp1128_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1128_48 () (_ BitVec 64))
(declare-fun temp1128_49 () (_ BitVec 64))
(declare-fun temp1128_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_51 () (_ BitVec 64))
(declare-fun temp1128_52 () (_ BitVec 64))
(declare-fun temp1128_53 () (_ BitVec 64))
(declare-fun temp1128_54 () (_ BitVec 64))
(declare-fun temp1128_55 () (_ BitVec 64))
(declare-fun temp1128_56 () (_ BitVec 64))
(declare-fun temp1128_57 () (_ BitVec 64))
(declare-fun temp1128_58 () (_ BitVec 64))
(declare-fun temp1128_59 () (_ BitVec 64))
(declare-fun temp1128_60 () (_ BitVec 64))
(declare-fun temp1128_61 () (_ BitVec 64))
(declare-fun temp1128_62 () (_ BitVec 64))
(declare-fun temp1128_63 () (_ BitVec 64))
(declare-fun temp1128_64 () (_ BitVec 64))
(declare-fun temp1128_65 () (_ BitVec 64))
(declare-fun temp1128_66 () (_ BitVec 64))
(declare-fun temp1128_67 () (_ BitVec 64))
(declare-fun temp1128_68 () (_ BitVec 64))
(declare-fun temp1128_69 () (_ BitVec 64))
(declare-fun temp1128_70 () (_ BitVec 64))
(declare-fun temp1128_71 () (_ BitVec 64))
(declare-fun temp1128_72 () (_ BitVec 64))
(declare-fun temp1128_73 () (_ BitVec 64))
(declare-fun temp1128_74 () (_ BitVec 64))
(declare-fun temp1128_75 () (_ BitVec 64))
(declare-fun temp1128_76 () (_ BitVec 64))
(declare-fun temp1128_77 () (_ BitVec 64))
(declare-fun temp1128_78 () (_ BitVec 64))
(declare-fun temp1128_79 () (_ BitVec 64))
(declare-fun temp1128_80 () (_ BitVec 64))
(declare-fun temp1128_81 () (_ BitVec 64))
(declare-fun temp1128_82 () (_ BitVec 64))
(declare-fun temp1128_83 () (_ BitVec 64))
(declare-fun temp1128_84 () (_ BitVec 64))
(declare-fun temp1128_85 () (_ BitVec 64))
(declare-fun temp1128_86 () (_ BitVec 64))
(declare-fun temp1128_87 () (_ BitVec 64))
(declare-fun temp1128_88 () (_ BitVec 64))
(declare-fun temp1128_89 () (_ BitVec 64))
(declare-fun temp1128_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1128_91 () (_ BitVec 64))
(declare-fun temp1128_92 () (_ BitVec 64))
(declare-fun temp1128_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_94 () (_ BitVec 64))
(declare-fun temp1128_95 () (_ BitVec 64))
(declare-fun temp1128_96 () (_ BitVec 64))
(declare-fun temp1128_97 () (_ BitVec 64))
(declare-fun temp1128_98 () (_ BitVec 64))
(declare-fun temp1128_99 () (_ BitVec 64))
(declare-fun temp1128_100 () (_ BitVec 64))
(declare-fun temp1128_101 () (_ BitVec 64))
(declare-fun temp1128_102 () (_ BitVec 64))
(declare-fun temp1128_103 () (_ BitVec 64))
(declare-fun temp1128_104 () (_ BitVec 64))
(declare-fun temp1128_105 () (_ BitVec 64))
(declare-fun temp1128_106 () (_ BitVec 64))
(declare-fun temp1128_107 () (_ BitVec 64))
(declare-fun temp1128_108 () (_ BitVec 64))
(declare-fun temp1128_109 () (_ BitVec 64))
(declare-fun temp1128_110 () (_ BitVec 64))
(declare-fun temp1128_111 () (_ BitVec 64))
(declare-fun temp1128_112 () (_ BitVec 64))
(declare-fun temp1128_113 () (_ BitVec 64))
(declare-fun temp1128_114 () (_ BitVec 64))
(declare-fun temp1128_115 () (_ BitVec 64))
(declare-fun temp1128_116 () (_ BitVec 64))
(declare-fun temp1128_117 () (_ BitVec 64))
(declare-fun temp1128_118 () (_ BitVec 64))
(declare-fun temp1128_119 () (_ BitVec 64))
(declare-fun temp1128_120 () (_ BitVec 64))
(declare-fun temp1128_121 () (_ BitVec 64))
(declare-fun temp1128_122 () (_ BitVec 64))
(declare-fun temp1128_123 () (_ BitVec 64))
(declare-fun temp1128_124 () (_ BitVec 64))
(declare-fun temp1128_125 () (_ BitVec 64))
(declare-fun temp1128_126 () (_ BitVec 64))
(declare-fun temp1128_127 () (_ BitVec 64))
(declare-fun temp1128_128 () (_ BitVec 64))
(declare-fun temp1128_129 () (_ BitVec 64))
(declare-fun temp1128_130 () (_ BitVec 64))
(declare-fun temp1128_131 () (_ BitVec 64))
(declare-fun temp1128_132 () (_ BitVec 64))
(declare-fun temp1128_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1128_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1128_135 () (_ BitVec 64))
(declare-fun temp1128_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1128_137 () (_ BitVec 64))
(declare-fun temp1128_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_139 () (_ BitVec 64))
(declare-fun temp1128_140 () (_ BitVec 64))
(declare-fun temp1128_141 () (_ BitVec 64))
(declare-fun temp1128_142 () (_ BitVec 64))
(declare-fun temp1128_143 () (_ BitVec 64))
(declare-fun temp1128_144 () (_ BitVec 64))
(declare-fun temp1128_145 () (_ BitVec 64))
(declare-fun temp1128_146 () (_ BitVec 64))
(declare-fun temp1128_147 () (_ BitVec 64))
(declare-fun temp1128_148 () (_ BitVec 64))
(declare-fun temp1128_149 () (_ BitVec 64))
(declare-fun temp1128_150 () (_ BitVec 64))
(declare-fun temp1128_151 () (_ BitVec 64))
(declare-fun temp1128_152 () (_ BitVec 64))
(declare-fun temp1128_153 () (_ BitVec 64))
(declare-fun temp1128_154 () (_ BitVec 64))
(declare-fun temp1128_156 () (_ BitVec 64))
(declare-fun temp1128_157 () (_ BitVec 64))
(declare-fun temp1128_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1128_158 () (_ BitVec 64))
(declare-fun temp1128_159 () (_ BitVec 64))
(declare-fun temp1128_161 () (_ BitVec 64))
(declare-fun temp1128_162 () (_ BitVec 64))
(declare-fun temp1128_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1128_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1128_164 () (_ BitVec 64))
(declare-fun temp1128_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1128_166 () (_ BitVec 64))
(declare-fun temp1128_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1128_168 () (_ BitVec 64))
(declare-fun temp1128_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_170 () (_ BitVec 64))
(declare-fun temp1128_171 () (_ BitVec 64))
(declare-fun temp1128_172 () (_ BitVec 64))
(declare-fun temp1128_173 () (_ BitVec 64))
(declare-fun temp1128_174 () (_ BitVec 64))
(declare-fun temp1128_175 () (_ BitVec 64))
(declare-fun temp1128_176 () (_ BitVec 64))
(declare-fun temp1128_177 () (_ BitVec 64))
(declare-fun temp1128_178 () (_ BitVec 64))
(declare-fun temp1128_179 () (_ BitVec 64))
(declare-fun temp1128_180 () (_ BitVec 64))
(declare-fun temp1128_181 () (_ BitVec 64))
(declare-fun temp1128_182 () (_ BitVec 64))
(declare-fun temp1128_183 () (_ BitVec 64))
(declare-fun temp1128_184 () (_ BitVec 64))
(declare-fun temp1128_185 () (_ BitVec 64))
(declare-fun temp1128_186 () (_ BitVec 64))
(declare-fun temp1128_187 () (_ BitVec 64))
(declare-fun temp1128_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1128_189 () (_ BitVec 64))
(declare-fun temp1128_191 () (_ BitVec 64))
(declare-fun temp1128_192 () (_ BitVec 64))
(declare-fun temp1128_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1128_193 () (_ BitVec 64))
(declare-fun temp1128_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1128_195 () (_ BitVec 64))
(declare-fun temp1128_196 () (_ BitVec 64))
(declare-fun temp1128_197 () (_ BitVec 64))
(declare-fun temp1128_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_199 () (_ BitVec 64))
(declare-fun temp1128_200 () (_ BitVec 64))
(declare-fun temp1128_201 () (_ BitVec 64))
(declare-fun temp1128_202 () (_ BitVec 64))
(declare-fun temp1128_203 () (_ BitVec 64))
(declare-fun temp1128_204 () (_ BitVec 64))
(declare-fun temp1128_205 () (_ BitVec 64))
(declare-fun temp1128_206 () (_ BitVec 64))
(declare-fun temp1128_207 () (_ BitVec 64))
(declare-fun temp1128_208 () (_ BitVec 64))
(declare-fun temp1128_209 () (_ BitVec 64))
(declare-fun temp1128_210 () (_ BitVec 64))
(declare-fun temp1128_211 () (_ BitVec 64))
(declare-fun temp1128_212 () (_ BitVec 64))
(declare-fun temp1128_213 () (_ BitVec 64))
(declare-fun temp1128_214 () (_ BitVec 64))
(declare-fun temp1128_215 () (_ BitVec 64))
(declare-fun temp1128_216 () (_ BitVec 64))
(declare-fun temp1128_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1128_218 () (_ BitVec 64))
(declare-fun temp1128_220 () (_ BitVec 64))
(declare-fun temp1128_221 () (_ BitVec 64))
(declare-fun temp1128_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1128_222 () (_ BitVec 64))
(declare-fun temp1128_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1128_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1128_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1128_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1128_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1128_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1128_229 () (_ BitVec 64))
(declare-fun temp1128_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1128_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1128_232 () (_ BitVec 64))
(declare-fun temp1128_233 () (_ BitVec 64))
(declare-fun temp1128_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1128_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1128_236 () (_ BitVec 64))
(declare-fun temp1128_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1128_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1128_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1128_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1128_241 () (_ BitVec 64))
(declare-fun temp1128_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp1128_243 () (_ BitVec 64))
(assert (= temp1128_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1128_1)))
(assert (= temp1128_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1128_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_3 #x0000000000000000))
(assert (= var79869 temp1128_3))
(assert (= temp1128_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1128_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_5 #x0000000000000000))
(assert (= var79914 temp1128_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1128_6 #x0000000000000000))
(assert (= temp1128_7 temp1128_6))
(assert (= temp1128_8 (select ARGNAME_padding_NAMEEND_VAL temp1128_7)))
(assert (= temp1128_9 #x0000000000000001))
(assert (= temp1128_10 temp1128_9))
(assert (= temp1128_11 (select ARGNAME_padding_NAMEEND_VAL temp1128_10)))
(assert (= temp1128_12 #x0000000000000002))
(assert (= temp1128_13 temp1128_12))
(assert (= temp1128_14 (select ARGNAME_padding_NAMEEND_VAL temp1128_13)))
(assert (= temp1128_15 #x0000000000000003))
(assert (= temp1128_16 temp1128_15))
(assert (= temp1128_17 (select ARGNAME_padding_NAMEEND_VAL temp1128_16)))
(assert (= temp1128_18 #x0000000000000004))
(assert (= temp1128_19 temp1128_18))
(assert (= temp1128_20 (select ARGNAME_padding_NAMEEND_VAL temp1128_19)))
(assert (= temp1128_21 #x0000000000000005))
(assert (= temp1128_22 temp1128_21))
(assert (= temp1128_23 (select ARGNAME_padding_NAMEEND_VAL temp1128_22)))
(assert (= temp1128_24 #x0000000000000000))
(assert (= temp1128_25 #x0000000000000000))
(assert (= temp1128_26 temp1128_25))
(assert (= temp1128_27 (select ARGNAME_padding_NAMEEND_VAL temp1128_26)))
(assert (= temp1128_28 #x0000000000000000))
(assert (= temp1128_29 #x0000000000000001))
(assert (= temp1128_30 temp1128_29))
(assert (= temp1128_31 (select ARGNAME_padding_NAMEEND_VAL temp1128_30)))
(assert (= temp1128_32 #x0000000000000000))
(assert (= temp1128_33 #x0000000000000002))
(assert (= temp1128_34 temp1128_33))
(assert (= temp1128_35 (select ARGNAME_padding_NAMEEND_VAL temp1128_34)))
(assert (= temp1128_36 #x0000000000000000))
(assert (= temp1128_37 #x0000000000000003))
(assert (= temp1128_38 temp1128_37))
(assert (= temp1128_39 (select ARGNAME_padding_NAMEEND_VAL temp1128_38)))
(assert (= temp1128_40 #x0000000000000000))
(assert (= temp1128_41 #x0000000000000004))
(assert (= temp1128_42 temp1128_41))
(assert (= temp1128_43 (select ARGNAME_padding_NAMEEND_VAL temp1128_42)))
(assert (= temp1128_44 #x0000000000000000))
(assert (= temp1128_45 #x0000000000000005))
(assert (= temp1128_46 temp1128_45))
(assert (= temp1128_47 (select ARGNAME_padding_NAMEEND_VAL temp1128_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1128_27 temp1128_24)
             (bvslt temp1128_31 temp1128_28)
             (bvslt temp1128_35 temp1128_32)
             (bvslt temp1128_39 temp1128_36)
             (bvslt temp1128_43 temp1128_40)
             (bvslt temp1128_47 temp1128_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_48 #x0000000000000000))
(assert (= var1322786 temp1128_48))
(assert (= temp1128_49 #x0000000000000000))
(assert (= temp1128_50 temp1128_49))
(assert (= temp1128_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_50)))
(assert (= temp1128_52 #x0000000000000001))
(assert (= temp1128_53 temp1128_52))
(assert (= temp1128_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_53)))
(assert (= temp1128_55 #x0000000000000002))
(assert (= temp1128_56 temp1128_55))
(assert (= temp1128_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_56)))
(assert (= temp1128_58 #x0000000000000003))
(assert (= temp1128_59 temp1128_58))
(assert (= temp1128_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_59)))
(assert (= temp1128_61 #x0000000000000004))
(assert (= temp1128_62 temp1128_61))
(assert (= temp1128_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_62)))
(assert (= temp1128_64 #x0000000000000005))
(assert (= temp1128_65 temp1128_64))
(assert (= temp1128_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_65)))
(assert (= temp1128_67 #x0000000000000000))
(assert (= temp1128_68 #x0000000000000000))
(assert (= temp1128_69 temp1128_68))
(assert (= temp1128_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_69)))
(assert (= temp1128_71 #x0000000000000000))
(assert (= temp1128_72 #x0000000000000001))
(assert (= temp1128_73 temp1128_72))
(assert (= temp1128_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_73)))
(assert (= temp1128_75 #x0000000000000000))
(assert (= temp1128_76 #x0000000000000002))
(assert (= temp1128_77 temp1128_76))
(assert (= temp1128_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_77)))
(assert (= temp1128_79 #x0000000000000000))
(assert (= temp1128_80 #x0000000000000003))
(assert (= temp1128_81 temp1128_80))
(assert (= temp1128_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_81)))
(assert (= temp1128_83 #x0000000000000000))
(assert (= temp1128_84 #x0000000000000004))
(assert (= temp1128_85 temp1128_84))
(assert (= temp1128_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_85)))
(assert (= temp1128_87 #x0000000000000000))
(assert (= temp1128_88 #x0000000000000005))
(assert (= temp1128_89 temp1128_88))
(assert (= temp1128_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1128_70 temp1128_67)
             (bvslt temp1128_74 temp1128_71)
             (bvslt temp1128_78 temp1128_75)
             (bvslt temp1128_82 temp1128_79)
             (bvslt temp1128_86 temp1128_83)
             (bvslt temp1128_90 temp1128_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_91 #x0000000000000000))
(assert (= var1322797 temp1128_91))
(assert (= temp1128_92 #x0000000000000000))
(assert (= temp1128_93 temp1128_92))
(assert (= temp1128_94 (select ARGNAME_stride_NAMEEND_VAL temp1128_93)))
(assert (= temp1128_95 #x0000000000000001))
(assert (= temp1128_96 temp1128_95))
(assert (= temp1128_97 (select ARGNAME_stride_NAMEEND_VAL temp1128_96)))
(assert (= temp1128_98 #x0000000000000002))
(assert (= temp1128_99 temp1128_98))
(assert (= temp1128_100 (select ARGNAME_stride_NAMEEND_VAL temp1128_99)))
(assert (= temp1128_101 #x0000000000000003))
(assert (= temp1128_102 temp1128_101))
(assert (= temp1128_103 (select ARGNAME_stride_NAMEEND_VAL temp1128_102)))
(assert (= temp1128_104 #x0000000000000004))
(assert (= temp1128_105 temp1128_104))
(assert (= temp1128_106 (select ARGNAME_stride_NAMEEND_VAL temp1128_105)))
(assert (= temp1128_107 #x0000000000000005))
(assert (= temp1128_108 temp1128_107))
(assert (= temp1128_109 (select ARGNAME_stride_NAMEEND_VAL temp1128_108)))
(assert (= temp1128_110 #x0000000000000000))
(assert (= temp1128_111 #x0000000000000000))
(assert (= temp1128_112 temp1128_111))
(assert (= temp1128_113 (select ARGNAME_stride_NAMEEND_VAL temp1128_112)))
(assert (= temp1128_114 #x0000000000000000))
(assert (= temp1128_115 #x0000000000000001))
(assert (= temp1128_116 temp1128_115))
(assert (= temp1128_117 (select ARGNAME_stride_NAMEEND_VAL temp1128_116)))
(assert (= temp1128_118 #x0000000000000000))
(assert (= temp1128_119 #x0000000000000002))
(assert (= temp1128_120 temp1128_119))
(assert (= temp1128_121 (select ARGNAME_stride_NAMEEND_VAL temp1128_120)))
(assert (= temp1128_122 #x0000000000000000))
(assert (= temp1128_123 #x0000000000000003))
(assert (= temp1128_124 temp1128_123))
(assert (= temp1128_125 (select ARGNAME_stride_NAMEEND_VAL temp1128_124)))
(assert (= temp1128_126 #x0000000000000000))
(assert (= temp1128_127 #x0000000000000004))
(assert (= temp1128_128 temp1128_127))
(assert (= temp1128_129 (select ARGNAME_stride_NAMEEND_VAL temp1128_128)))
(assert (= temp1128_130 #x0000000000000000))
(assert (= temp1128_131 #x0000000000000005))
(assert (= temp1128_132 temp1128_131))
(assert (= temp1128_133 (select ARGNAME_stride_NAMEEND_VAL temp1128_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1128_113 temp1128_110)
             (bvsle temp1128_117 temp1128_114)
             (bvsle temp1128_121 temp1128_118)
             (bvsle temp1128_125 temp1128_122)
             (bvsle temp1128_129 temp1128_126)
             (bvsle temp1128_133 temp1128_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_134 #x0000000000000000))
(assert (= var1322807 temp1128_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_135 #x0000000000000001))
(assert (= var1322819 temp1128_135))
(assert (= temp1128_136 #x0000000000000000))
(assert (= var1310898 temp1128_136))
(assert (= temp1128_137 #x0000000000000000))
(assert (= temp1128_138 temp1128_137))
(assert (= temp1128_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_138)))
(assert (= temp1128_140 #x0000000000000001))
(assert (= temp1128_141 temp1128_140))
(assert (= temp1128_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_141)))
(assert (= temp1128_143 #x0000000000000002))
(assert (= temp1128_144 temp1128_143))
(assert (= temp1128_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_144)))
(assert (= temp1128_146 #x0000000000000003))
(assert (= temp1128_147 temp1128_146))
(assert (= temp1128_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_147)))
(assert (= temp1128_149 #x0000000000000004))
(assert (= temp1128_150 temp1128_149))
(assert (= temp1128_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_150)))
(assert (= temp1128_152 #x0000000000000005))
(assert (= temp1128_153 temp1128_152))
(assert (= temp1128_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_153)))
(assert (= temp1128_156 var1310898))
(assert (= temp1128_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_156)))
(assert (= temp1128_155 temp1128_157))
(assert (= var1322852
   (ite (bvslt temp1128_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_158 #x0000000000000000))
(assert (= var1322852 temp1128_158))
(assert (= temp1128_159 #x0000000000000000))
(assert (= var1310898 temp1128_159))
(assert (= temp1128_161 var1310898))
(assert (= temp1128_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_161)))
(assert (= temp1128_160 temp1128_162))
(assert (= var1322874 (bvsmod temp1128_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1128_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1128_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1128_164 #x0000000000000001))
(assert (= var1322875 temp1128_164))
(assert (= temp1128_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1128_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_166 #x0000000000000001))
(assert (= var1322895 temp1128_166))
(assert (= temp1128_167 #x0000000000000001))
(assert (= var1311786 temp1128_167))
(assert (= temp1128_168 #x0000000000000000))
(assert (= temp1128_169 temp1128_168))
(assert (= temp1128_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_169)))
(assert (= temp1128_171 #x0000000000000001))
(assert (= temp1128_172 temp1128_171))
(assert (= temp1128_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_172)))
(assert (= temp1128_174 #x0000000000000002))
(assert (= temp1128_175 temp1128_174))
(assert (= temp1128_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_175)))
(assert (= temp1128_177 #x0000000000000003))
(assert (= temp1128_178 temp1128_177))
(assert (= temp1128_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_178)))
(assert (= temp1128_180 #x0000000000000004))
(assert (= temp1128_181 temp1128_180))
(assert (= temp1128_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_181)))
(assert (= temp1128_183 #x0000000000000005))
(assert (= temp1128_184 temp1128_183))
(assert (= temp1128_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_184)))
(assert (= temp1128_186 #x0000000000000000))
(assert (= temp1128_187
   (ite (bvslt var1311786 temp1128_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1128_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_187)))
(assert (= var1322903 temp1128_188))
(assert (bvslt (ite (bvslt var1311786 temp1128_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1128_189 #x0000000000000001))
(assert (= var1311786 temp1128_189))
(assert (= temp1128_191 var1311786))
(assert (= temp1128_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_191)))
(assert (= temp1128_190 temp1128_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1128_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1128_193 #x0000000000000001))
(assert (= var1322908 temp1128_193))
(assert (= temp1128_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1128_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_195 #x0000000000000001))
(assert (= var1322975 temp1128_195))
(assert (= temp1128_196 #x0000000000000000))
(assert (= var1310898 temp1128_196))
(assert (= temp1128_197 #x0000000000000000))
(assert (= temp1128_198 temp1128_197))
(assert (= temp1128_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1128_198)))
(assert (= temp1128_200 #x0000000000000001))
(assert (= temp1128_201 temp1128_200))
(assert (= temp1128_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1128_201)))
(assert (= temp1128_203 #x0000000000000002))
(assert (= temp1128_204 temp1128_203))
(assert (= temp1128_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1128_204)))
(assert (= temp1128_206 #x0000000000000003))
(assert (= temp1128_207 temp1128_206))
(assert (= temp1128_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1128_207)))
(assert (= temp1128_209 #x0000000000000004))
(assert (= temp1128_210 temp1128_209))
(assert (= temp1128_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1128_210)))
(assert (= temp1128_212 #x0000000000000005))
(assert (= temp1128_213 temp1128_212))
(assert (= temp1128_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1128_213)))
(assert (= temp1128_215 #x0000000000000000))
(assert (= temp1128_216
   (ite (bvslt var1310898 temp1128_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1128_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1128_216)))
(assert (= var1322977 temp1128_217))
(assert (bvslt (ite (bvslt var1310898 temp1128_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1128_218 #x0000000000000000))
(assert (= var1310898 temp1128_218))
(assert (= temp1128_220 var1310898))
(assert (= temp1128_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_220)))
(assert (= temp1128_219 temp1128_221))
(assert (= var1322980
   (ite (= var1322977 temp1128_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1128_222 #x0000000000000001))
(assert (= var1322980 temp1128_222))
(assert (= temp1128_223 #x0000000000000002))
(assert (= var1848169 temp1128_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1128_225 #x0000000000000001))
(assert (= var1323065 temp1128_225))
(assert (= temp1128_226 #x0000000000000001))
(assert (= var3486735 temp1128_226))
(assert (= temp1128_227 #x0000000000000001))
(assert (= var3814415 temp1128_227))
(assert (= temp1128_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1128_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_229 #x0000000000000001))
(assert (= var79986 temp1128_229))
(assert (= temp1128_230 #x0000000000000001))
(assert (= var80116 temp1128_230))
(assert (= var4796905 var80116))
(assert (= temp1128_231 #x0000000000000000))
(assert (= var4784306 temp1128_231))
(assert (= temp1128_232 #x0000000000000000))
(assert (= temp1128_233
   (ite (bvslt var4784306 temp1128_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1128_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_233)))
(assert (= var4796924 temp1128_234))
(assert (bvslt (ite (bvslt var4784306 temp1128_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1128_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1128_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1128_236 #x0000000000000001))
(assert (= var4796925 temp1128_236))
(assert (= temp1128_237 #x0000000000000000))
(assert (= var4996927 temp1128_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1128_238 #x0000000000000002))
(assert (= var5125763 temp1128_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_239 #x0000000000000000))
(assert (= var5191324 temp1128_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1128_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1128_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_241 #x0000000000000000))
(assert (= var81342 temp1128_241))
(assert (= temp1128_242 #x0000000000000002))
(assert (= var5977731 temp1128_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp1128_243 #x0000000000000001))
(assert (= var79986 temp1128_243))
(model-add temp1128_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1128_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1128_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






