(declare-fun temp268_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp268_2 () (_ BitVec 64))
(declare-fun temp268_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp268_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp268_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp268_6 () (_ BitVec 64))
(declare-fun temp268_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp268_8 () (_ BitVec 64))
(declare-fun temp268_9 () (_ BitVec 64))
(declare-fun temp268_10 () (_ BitVec 64))
(declare-fun temp268_11 () (_ BitVec 64))
(declare-fun temp268_12 () (_ BitVec 64))
(declare-fun temp268_13 () (_ BitVec 64))
(declare-fun temp268_14 () (_ BitVec 64))
(declare-fun temp268_15 () (_ BitVec 64))
(declare-fun temp268_16 () (_ BitVec 64))
(declare-fun temp268_17 () (_ BitVec 64))
(declare-fun temp268_18 () (_ BitVec 64))
(declare-fun temp268_19 () (_ BitVec 64))
(declare-fun temp268_20 () (_ BitVec 64))
(declare-fun temp268_21 () (_ BitVec 64))
(declare-fun temp268_22 () (_ BitVec 64))
(declare-fun temp268_23 () (_ BitVec 64))
(declare-fun temp268_24 () (_ BitVec 64))
(declare-fun temp268_25 () (_ BitVec 64))
(declare-fun temp268_26 () (_ BitVec 64))
(declare-fun temp268_27 () (_ BitVec 64))
(declare-fun temp268_28 () (_ BitVec 64))
(declare-fun temp268_29 () (_ BitVec 64))
(declare-fun temp268_30 () (_ BitVec 64))
(declare-fun temp268_31 () (_ BitVec 64))
(declare-fun temp268_32 () (_ BitVec 64))
(declare-fun temp268_33 () (_ BitVec 64))
(declare-fun temp268_34 () (_ BitVec 64))
(declare-fun temp268_35 () (_ BitVec 64))
(declare-fun temp268_36 () (_ BitVec 64))
(declare-fun temp268_37 () (_ BitVec 64))
(declare-fun temp268_38 () (_ BitVec 64))
(declare-fun temp268_39 () (_ BitVec 64))
(declare-fun temp268_40 () (_ BitVec 64))
(declare-fun temp268_41 () (_ BitVec 64))
(declare-fun temp268_42 () (_ BitVec 64))
(declare-fun temp268_43 () (_ BitVec 64))
(declare-fun temp268_44 () (_ BitVec 64))
(declare-fun temp268_45 () (_ BitVec 64))
(declare-fun temp268_46 () (_ BitVec 64))
(declare-fun temp268_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp268_48 () (_ BitVec 64))
(declare-fun temp268_49 () (_ BitVec 64))
(declare-fun temp268_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp268_51 () (_ BitVec 64))
(declare-fun temp268_52 () (_ BitVec 64))
(declare-fun temp268_53 () (_ BitVec 64))
(declare-fun temp268_54 () (_ BitVec 64))
(declare-fun temp268_55 () (_ BitVec 64))
(declare-fun temp268_56 () (_ BitVec 64))
(declare-fun temp268_57 () (_ BitVec 64))
(declare-fun temp268_58 () (_ BitVec 64))
(declare-fun temp268_59 () (_ BitVec 64))
(declare-fun temp268_60 () (_ BitVec 64))
(declare-fun temp268_61 () (_ BitVec 64))
(declare-fun temp268_62 () (_ BitVec 64))
(declare-fun temp268_63 () (_ BitVec 64))
(declare-fun temp268_64 () (_ BitVec 64))
(declare-fun temp268_65 () (_ BitVec 64))
(declare-fun temp268_66 () (_ BitVec 64))
(declare-fun temp268_67 () (_ BitVec 64))
(declare-fun temp268_68 () (_ BitVec 64))
(declare-fun temp268_69 () (_ BitVec 64))
(declare-fun temp268_70 () (_ BitVec 64))
(declare-fun temp268_71 () (_ BitVec 64))
(declare-fun temp268_72 () (_ BitVec 64))
(declare-fun temp268_73 () (_ BitVec 64))
(declare-fun temp268_74 () (_ BitVec 64))
(declare-fun temp268_75 () (_ BitVec 64))
(declare-fun temp268_76 () (_ BitVec 64))
(declare-fun temp268_77 () (_ BitVec 64))
(declare-fun temp268_78 () (_ BitVec 64))
(declare-fun temp268_79 () (_ BitVec 64))
(declare-fun temp268_80 () (_ BitVec 64))
(declare-fun temp268_81 () (_ BitVec 64))
(declare-fun temp268_82 () (_ BitVec 64))
(declare-fun temp268_83 () (_ BitVec 64))
(declare-fun temp268_84 () (_ BitVec 64))
(declare-fun temp268_85 () (_ BitVec 64))
(declare-fun temp268_86 () (_ BitVec 64))
(declare-fun temp268_87 () (_ BitVec 64))
(declare-fun temp268_88 () (_ BitVec 64))
(declare-fun temp268_89 () (_ BitVec 64))
(declare-fun temp268_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp268_91 () (_ BitVec 64))
(declare-fun temp268_92 () (_ BitVec 64))
(declare-fun temp268_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp268_94 () (_ BitVec 64))
(declare-fun temp268_95 () (_ BitVec 64))
(declare-fun temp268_96 () (_ BitVec 64))
(declare-fun temp268_97 () (_ BitVec 64))
(declare-fun temp268_98 () (_ BitVec 64))
(declare-fun temp268_99 () (_ BitVec 64))
(declare-fun temp268_100 () (_ BitVec 64))
(declare-fun temp268_101 () (_ BitVec 64))
(declare-fun temp268_102 () (_ BitVec 64))
(declare-fun temp268_103 () (_ BitVec 64))
(declare-fun temp268_104 () (_ BitVec 64))
(declare-fun temp268_105 () (_ BitVec 64))
(declare-fun temp268_106 () (_ BitVec 64))
(declare-fun temp268_107 () (_ BitVec 64))
(declare-fun temp268_108 () (_ BitVec 64))
(declare-fun temp268_109 () (_ BitVec 64))
(declare-fun temp268_110 () (_ BitVec 64))
(declare-fun temp268_111 () (_ BitVec 64))
(declare-fun temp268_112 () (_ BitVec 64))
(declare-fun temp268_113 () (_ BitVec 64))
(declare-fun temp268_114 () (_ BitVec 64))
(declare-fun temp268_115 () (_ BitVec 64))
(declare-fun temp268_116 () (_ BitVec 64))
(declare-fun temp268_117 () (_ BitVec 64))
(declare-fun temp268_118 () (_ BitVec 64))
(declare-fun temp268_119 () (_ BitVec 64))
(declare-fun temp268_120 () (_ BitVec 64))
(declare-fun temp268_121 () (_ BitVec 64))
(declare-fun temp268_122 () (_ BitVec 64))
(declare-fun temp268_123 () (_ BitVec 64))
(declare-fun temp268_124 () (_ BitVec 64))
(declare-fun temp268_125 () (_ BitVec 64))
(declare-fun temp268_126 () (_ BitVec 64))
(declare-fun temp268_127 () (_ BitVec 64))
(declare-fun temp268_128 () (_ BitVec 64))
(declare-fun temp268_129 () (_ BitVec 64))
(declare-fun temp268_130 () (_ BitVec 64))
(declare-fun temp268_131 () (_ BitVec 64))
(declare-fun temp268_132 () (_ BitVec 64))
(declare-fun temp268_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp268_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp268_135 () (_ BitVec 64))
(declare-fun temp268_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp268_137 () (_ BitVec 64))
(declare-fun temp268_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp268_139 () (_ BitVec 64))
(declare-fun temp268_140 () (_ BitVec 64))
(declare-fun temp268_141 () (_ BitVec 64))
(declare-fun temp268_142 () (_ BitVec 64))
(declare-fun temp268_143 () (_ BitVec 64))
(declare-fun temp268_144 () (_ BitVec 64))
(declare-fun temp268_145 () (_ BitVec 64))
(declare-fun temp268_146 () (_ BitVec 64))
(declare-fun temp268_147 () (_ BitVec 64))
(declare-fun temp268_148 () (_ BitVec 64))
(declare-fun temp268_149 () (_ BitVec 64))
(declare-fun temp268_150 () (_ BitVec 64))
(declare-fun temp268_151 () (_ BitVec 64))
(declare-fun temp268_152 () (_ BitVec 64))
(declare-fun temp268_153 () (_ BitVec 64))
(declare-fun temp268_154 () (_ BitVec 64))
(declare-fun temp268_156 () (_ BitVec 64))
(declare-fun temp268_157 () (_ BitVec 64))
(declare-fun temp268_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp268_158 () (_ BitVec 64))
(declare-fun temp268_159 () (_ BitVec 64))
(declare-fun temp268_161 () (_ BitVec 64))
(declare-fun temp268_162 () (_ BitVec 64))
(declare-fun temp268_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp268_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp268_164 () (_ BitVec 64))
(declare-fun temp268_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp268_166 () (_ BitVec 64))
(declare-fun temp268_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp268_168 () (_ BitVec 64))
(declare-fun temp268_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp268_170 () (_ BitVec 64))
(declare-fun temp268_171 () (_ BitVec 64))
(declare-fun temp268_172 () (_ BitVec 64))
(declare-fun temp268_173 () (_ BitVec 64))
(declare-fun temp268_174 () (_ BitVec 64))
(declare-fun temp268_175 () (_ BitVec 64))
(declare-fun temp268_176 () (_ BitVec 64))
(declare-fun temp268_177 () (_ BitVec 64))
(declare-fun temp268_178 () (_ BitVec 64))
(declare-fun temp268_179 () (_ BitVec 64))
(declare-fun temp268_180 () (_ BitVec 64))
(declare-fun temp268_181 () (_ BitVec 64))
(declare-fun temp268_182 () (_ BitVec 64))
(declare-fun temp268_183 () (_ BitVec 64))
(declare-fun temp268_184 () (_ BitVec 64))
(declare-fun temp268_185 () (_ BitVec 64))
(declare-fun temp268_186 () (_ BitVec 64))
(declare-fun temp268_187 () (_ BitVec 64))
(declare-fun temp268_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp268_189 () (_ BitVec 64))
(declare-fun temp268_191 () (_ BitVec 64))
(declare-fun temp268_192 () (_ BitVec 64))
(declare-fun temp268_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp268_193 () (_ BitVec 64))
(declare-fun temp268_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp268_195 () (_ BitVec 64))
(declare-fun temp268_196 () (_ BitVec 64))
(declare-fun temp268_197 () (_ BitVec 64))
(declare-fun temp268_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp268_199 () (_ BitVec 64))
(declare-fun temp268_200 () (_ BitVec 64))
(declare-fun temp268_201 () (_ BitVec 64))
(declare-fun temp268_202 () (_ BitVec 64))
(declare-fun temp268_203 () (_ BitVec 64))
(declare-fun temp268_204 () (_ BitVec 64))
(declare-fun temp268_205 () (_ BitVec 64))
(declare-fun temp268_206 () (_ BitVec 64))
(declare-fun temp268_207 () (_ BitVec 64))
(declare-fun temp268_208 () (_ BitVec 64))
(declare-fun temp268_209 () (_ BitVec 64))
(declare-fun temp268_210 () (_ BitVec 64))
(declare-fun temp268_211 () (_ BitVec 64))
(declare-fun temp268_212 () (_ BitVec 64))
(declare-fun temp268_213 () (_ BitVec 64))
(declare-fun temp268_214 () (_ BitVec 64))
(declare-fun temp268_215 () (_ BitVec 64))
(declare-fun temp268_216 () (_ BitVec 64))
(declare-fun temp268_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp268_218 () (_ BitVec 64))
(declare-fun temp268_220 () (_ BitVec 64))
(declare-fun temp268_221 () (_ BitVec 64))
(declare-fun temp268_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp268_222 () (_ BitVec 64))
(declare-fun temp268_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp268_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp268_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp268_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp268_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp268_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp268_229 () (_ BitVec 64))
(declare-fun temp268_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp268_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp268_232 () (_ BitVec 64))
(declare-fun temp268_233 () (_ BitVec 64))
(declare-fun temp268_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp268_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp268_236 () (_ BitVec 64))
(declare-fun temp268_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp268_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp268_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun temp268_240 () (_ BitVec 64))
(declare-fun var6566288 () (_ BitVec 64))
(declare-fun temp268_241 () (_ BitVec 64))
(assert (= temp268_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp268_1)))
(assert (= temp268_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp268_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_3 #x0000000000000000))
(assert (= var79869 temp268_3))
(assert (= temp268_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp268_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_5 #x0000000000000000))
(assert (= var79914 temp268_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp268_6 #x0000000000000000))
(assert (= temp268_7 temp268_6))
(assert (= temp268_8 (select ARGNAME_padding_NAMEEND_VAL temp268_7)))
(assert (= temp268_9 #x0000000000000001))
(assert (= temp268_10 temp268_9))
(assert (= temp268_11 (select ARGNAME_padding_NAMEEND_VAL temp268_10)))
(assert (= temp268_12 #x0000000000000002))
(assert (= temp268_13 temp268_12))
(assert (= temp268_14 (select ARGNAME_padding_NAMEEND_VAL temp268_13)))
(assert (= temp268_15 #x0000000000000003))
(assert (= temp268_16 temp268_15))
(assert (= temp268_17 (select ARGNAME_padding_NAMEEND_VAL temp268_16)))
(assert (= temp268_18 #x0000000000000004))
(assert (= temp268_19 temp268_18))
(assert (= temp268_20 (select ARGNAME_padding_NAMEEND_VAL temp268_19)))
(assert (= temp268_21 #x0000000000000005))
(assert (= temp268_22 temp268_21))
(assert (= temp268_23 (select ARGNAME_padding_NAMEEND_VAL temp268_22)))
(assert (= temp268_24 #x0000000000000000))
(assert (= temp268_25 #x0000000000000000))
(assert (= temp268_26 temp268_25))
(assert (= temp268_27 (select ARGNAME_padding_NAMEEND_VAL temp268_26)))
(assert (= temp268_28 #x0000000000000000))
(assert (= temp268_29 #x0000000000000001))
(assert (= temp268_30 temp268_29))
(assert (= temp268_31 (select ARGNAME_padding_NAMEEND_VAL temp268_30)))
(assert (= temp268_32 #x0000000000000000))
(assert (= temp268_33 #x0000000000000002))
(assert (= temp268_34 temp268_33))
(assert (= temp268_35 (select ARGNAME_padding_NAMEEND_VAL temp268_34)))
(assert (= temp268_36 #x0000000000000000))
(assert (= temp268_37 #x0000000000000003))
(assert (= temp268_38 temp268_37))
(assert (= temp268_39 (select ARGNAME_padding_NAMEEND_VAL temp268_38)))
(assert (= temp268_40 #x0000000000000000))
(assert (= temp268_41 #x0000000000000004))
(assert (= temp268_42 temp268_41))
(assert (= temp268_43 (select ARGNAME_padding_NAMEEND_VAL temp268_42)))
(assert (= temp268_44 #x0000000000000000))
(assert (= temp268_45 #x0000000000000005))
(assert (= temp268_46 temp268_45))
(assert (= temp268_47 (select ARGNAME_padding_NAMEEND_VAL temp268_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp268_27 temp268_24)
             (bvslt temp268_31 temp268_28)
             (bvslt temp268_35 temp268_32)
             (bvslt temp268_39 temp268_36)
             (bvslt temp268_43 temp268_40)
             (bvslt temp268_47 temp268_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_48 #x0000000000000000))
(assert (= var1322786 temp268_48))
(assert (= temp268_49 #x0000000000000000))
(assert (= temp268_50 temp268_49))
(assert (= temp268_51 (select ARGNAME_output_padding_NAMEEND_VAL temp268_50)))
(assert (= temp268_52 #x0000000000000001))
(assert (= temp268_53 temp268_52))
(assert (= temp268_54 (select ARGNAME_output_padding_NAMEEND_VAL temp268_53)))
(assert (= temp268_55 #x0000000000000002))
(assert (= temp268_56 temp268_55))
(assert (= temp268_57 (select ARGNAME_output_padding_NAMEEND_VAL temp268_56)))
(assert (= temp268_58 #x0000000000000003))
(assert (= temp268_59 temp268_58))
(assert (= temp268_60 (select ARGNAME_output_padding_NAMEEND_VAL temp268_59)))
(assert (= temp268_61 #x0000000000000004))
(assert (= temp268_62 temp268_61))
(assert (= temp268_63 (select ARGNAME_output_padding_NAMEEND_VAL temp268_62)))
(assert (= temp268_64 #x0000000000000005))
(assert (= temp268_65 temp268_64))
(assert (= temp268_66 (select ARGNAME_output_padding_NAMEEND_VAL temp268_65)))
(assert (= temp268_67 #x0000000000000000))
(assert (= temp268_68 #x0000000000000000))
(assert (= temp268_69 temp268_68))
(assert (= temp268_70 (select ARGNAME_output_padding_NAMEEND_VAL temp268_69)))
(assert (= temp268_71 #x0000000000000000))
(assert (= temp268_72 #x0000000000000001))
(assert (= temp268_73 temp268_72))
(assert (= temp268_74 (select ARGNAME_output_padding_NAMEEND_VAL temp268_73)))
(assert (= temp268_75 #x0000000000000000))
(assert (= temp268_76 #x0000000000000002))
(assert (= temp268_77 temp268_76))
(assert (= temp268_78 (select ARGNAME_output_padding_NAMEEND_VAL temp268_77)))
(assert (= temp268_79 #x0000000000000000))
(assert (= temp268_80 #x0000000000000003))
(assert (= temp268_81 temp268_80))
(assert (= temp268_82 (select ARGNAME_output_padding_NAMEEND_VAL temp268_81)))
(assert (= temp268_83 #x0000000000000000))
(assert (= temp268_84 #x0000000000000004))
(assert (= temp268_85 temp268_84))
(assert (= temp268_86 (select ARGNAME_output_padding_NAMEEND_VAL temp268_85)))
(assert (= temp268_87 #x0000000000000000))
(assert (= temp268_88 #x0000000000000005))
(assert (= temp268_89 temp268_88))
(assert (= temp268_90 (select ARGNAME_output_padding_NAMEEND_VAL temp268_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp268_70 temp268_67)
             (bvslt temp268_74 temp268_71)
             (bvslt temp268_78 temp268_75)
             (bvslt temp268_82 temp268_79)
             (bvslt temp268_86 temp268_83)
             (bvslt temp268_90 temp268_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_91 #x0000000000000000))
(assert (= var1322797 temp268_91))
(assert (= temp268_92 #x0000000000000000))
(assert (= temp268_93 temp268_92))
(assert (= temp268_94 (select ARGNAME_stride_NAMEEND_VAL temp268_93)))
(assert (= temp268_95 #x0000000000000001))
(assert (= temp268_96 temp268_95))
(assert (= temp268_97 (select ARGNAME_stride_NAMEEND_VAL temp268_96)))
(assert (= temp268_98 #x0000000000000002))
(assert (= temp268_99 temp268_98))
(assert (= temp268_100 (select ARGNAME_stride_NAMEEND_VAL temp268_99)))
(assert (= temp268_101 #x0000000000000003))
(assert (= temp268_102 temp268_101))
(assert (= temp268_103 (select ARGNAME_stride_NAMEEND_VAL temp268_102)))
(assert (= temp268_104 #x0000000000000004))
(assert (= temp268_105 temp268_104))
(assert (= temp268_106 (select ARGNAME_stride_NAMEEND_VAL temp268_105)))
(assert (= temp268_107 #x0000000000000005))
(assert (= temp268_108 temp268_107))
(assert (= temp268_109 (select ARGNAME_stride_NAMEEND_VAL temp268_108)))
(assert (= temp268_110 #x0000000000000000))
(assert (= temp268_111 #x0000000000000000))
(assert (= temp268_112 temp268_111))
(assert (= temp268_113 (select ARGNAME_stride_NAMEEND_VAL temp268_112)))
(assert (= temp268_114 #x0000000000000000))
(assert (= temp268_115 #x0000000000000001))
(assert (= temp268_116 temp268_115))
(assert (= temp268_117 (select ARGNAME_stride_NAMEEND_VAL temp268_116)))
(assert (= temp268_118 #x0000000000000000))
(assert (= temp268_119 #x0000000000000002))
(assert (= temp268_120 temp268_119))
(assert (= temp268_121 (select ARGNAME_stride_NAMEEND_VAL temp268_120)))
(assert (= temp268_122 #x0000000000000000))
(assert (= temp268_123 #x0000000000000003))
(assert (= temp268_124 temp268_123))
(assert (= temp268_125 (select ARGNAME_stride_NAMEEND_VAL temp268_124)))
(assert (= temp268_126 #x0000000000000000))
(assert (= temp268_127 #x0000000000000004))
(assert (= temp268_128 temp268_127))
(assert (= temp268_129 (select ARGNAME_stride_NAMEEND_VAL temp268_128)))
(assert (= temp268_130 #x0000000000000000))
(assert (= temp268_131 #x0000000000000005))
(assert (= temp268_132 temp268_131))
(assert (= temp268_133 (select ARGNAME_stride_NAMEEND_VAL temp268_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp268_113 temp268_110)
             (bvsle temp268_117 temp268_114)
             (bvsle temp268_121 temp268_118)
             (bvsle temp268_125 temp268_122)
             (bvsle temp268_129 temp268_126)
             (bvsle temp268_133 temp268_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_134 #x0000000000000000))
(assert (= var1322807 temp268_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_135 #x0000000000000001))
(assert (= var1322819 temp268_135))
(assert (= temp268_136 #x0000000000000000))
(assert (= var1310898 temp268_136))
(assert (= temp268_137 #x0000000000000000))
(assert (= temp268_138 temp268_137))
(assert (= temp268_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_138)))
(assert (= temp268_140 #x0000000000000001))
(assert (= temp268_141 temp268_140))
(assert (= temp268_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_141)))
(assert (= temp268_143 #x0000000000000002))
(assert (= temp268_144 temp268_143))
(assert (= temp268_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_144)))
(assert (= temp268_146 #x0000000000000003))
(assert (= temp268_147 temp268_146))
(assert (= temp268_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_147)))
(assert (= temp268_149 #x0000000000000004))
(assert (= temp268_150 temp268_149))
(assert (= temp268_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_150)))
(assert (= temp268_152 #x0000000000000005))
(assert (= temp268_153 temp268_152))
(assert (= temp268_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_153)))
(assert (= temp268_156 var1310898))
(assert (= temp268_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_156)))
(assert (= temp268_155 temp268_157))
(assert (= var1322852
   (ite (bvslt temp268_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_158 #x0000000000000000))
(assert (= var1322852 temp268_158))
(assert (= temp268_159 #x0000000000000000))
(assert (= var1310898 temp268_159))
(assert (= temp268_161 var1310898))
(assert (= temp268_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_161)))
(assert (= temp268_160 temp268_162))
(assert (= var1322874 (bvsmod temp268_160 ARGNAME_groups_NAMEEND)))
(assert (= temp268_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp268_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp268_164 #x0000000000000001))
(assert (= var1322875 temp268_164))
(assert (= temp268_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp268_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_166 #x0000000000000001))
(assert (= var1322895 temp268_166))
(assert (= temp268_167 #x0000000000000001))
(assert (= var1311786 temp268_167))
(assert (= temp268_168 #x0000000000000000))
(assert (= temp268_169 temp268_168))
(assert (= temp268_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp268_169)))
(assert (= temp268_171 #x0000000000000001))
(assert (= temp268_172 temp268_171))
(assert (= temp268_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp268_172)))
(assert (= temp268_174 #x0000000000000002))
(assert (= temp268_175 temp268_174))
(assert (= temp268_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp268_175)))
(assert (= temp268_177 #x0000000000000003))
(assert (= temp268_178 temp268_177))
(assert (= temp268_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp268_178)))
(assert (= temp268_180 #x0000000000000004))
(assert (= temp268_181 temp268_180))
(assert (= temp268_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp268_181)))
(assert (= temp268_183 #x0000000000000005))
(assert (= temp268_184 temp268_183))
(assert (= temp268_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp268_184)))
(assert (= temp268_186 #x0000000000000000))
(assert (= temp268_187
   (ite (bvslt var1311786 temp268_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp268_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp268_187)))
(assert (= var1322903 temp268_188))
(assert (bvslt (ite (bvslt var1311786 temp268_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp268_189 #x0000000000000001))
(assert (= var1311786 temp268_189))
(assert (= temp268_191 var1311786))
(assert (= temp268_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_191)))
(assert (= temp268_190 temp268_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp268_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp268_193 #x0000000000000001))
(assert (= var1322908 temp268_193))
(assert (= temp268_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp268_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_195 #x0000000000000001))
(assert (= var1322975 temp268_195))
(assert (= temp268_196 #x0000000000000000))
(assert (= var1310898 temp268_196))
(assert (= temp268_197 #x0000000000000000))
(assert (= temp268_198 temp268_197))
(assert (= temp268_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp268_198)))
(assert (= temp268_200 #x0000000000000001))
(assert (= temp268_201 temp268_200))
(assert (= temp268_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp268_201)))
(assert (= temp268_203 #x0000000000000002))
(assert (= temp268_204 temp268_203))
(assert (= temp268_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp268_204)))
(assert (= temp268_206 #x0000000000000003))
(assert (= temp268_207 temp268_206))
(assert (= temp268_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp268_207)))
(assert (= temp268_209 #x0000000000000004))
(assert (= temp268_210 temp268_209))
(assert (= temp268_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp268_210)))
(assert (= temp268_212 #x0000000000000005))
(assert (= temp268_213 temp268_212))
(assert (= temp268_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp268_213)))
(assert (= temp268_215 #x0000000000000000))
(assert (= temp268_216
   (ite (bvslt var1310898 temp268_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp268_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp268_216)))
(assert (= var1322977 temp268_217))
(assert (bvslt (ite (bvslt var1310898 temp268_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp268_218 #x0000000000000000))
(assert (= var1310898 temp268_218))
(assert (= temp268_220 var1310898))
(assert (= temp268_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp268_220)))
(assert (= temp268_219 temp268_221))
(assert (= var1322980
   (ite (= var1322977 temp268_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp268_222 #x0000000000000001))
(assert (= var1322980 temp268_222))
(assert (= temp268_223 #x0000000000000002))
(assert (= var1848169 temp268_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp268_225 #x0000000000000001))
(assert (= var1323065 temp268_225))
(assert (= temp268_226 #x0000000000000001))
(assert (= var3486735 temp268_226))
(assert (= temp268_227 #x0000000000000001))
(assert (= var3814415 temp268_227))
(assert (= temp268_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp268_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_229 #x0000000000000001))
(assert (= var79986 temp268_229))
(assert (= temp268_230 #x0000000000000001))
(assert (= var80116 temp268_230))
(assert (= var4796905 var80116))
(assert (= temp268_231 #x0000000000000000))
(assert (= var4784306 temp268_231))
(assert (= temp268_232 #x0000000000000000))
(assert (= temp268_233
   (ite (bvslt var4784306 temp268_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp268_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp268_233)))
(assert (= var4796924 temp268_234))
(assert (bvslt (ite (bvslt var4784306 temp268_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp268_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp268_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp268_236 #x0000000000000001))
(assert (= var4796925 temp268_236))
(assert (= temp268_237 #x0000000000000000))
(assert (= var4996927 temp268_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp268_238 #x0000000000000002))
(assert (= var5125763 temp268_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp268_239 #x0000000000000000))
(assert (= var5191324 temp268_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5976464 var80129))
(assert (= var6238608 var80129))
(assert (= temp268_240 #x0000000000000000))
(assert (= var6566288 temp268_240))
(assert (= temp268_241 #x0000000000000001))
(assert (= var79986 temp268_241))
(model-add temp268_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp268_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp268_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






