(declare-fun temp1040_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1040_2 () (_ BitVec 64))
(declare-fun temp1040_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1040_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1040_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1040_6 () (_ BitVec 64))
(declare-fun temp1040_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_8 () (_ BitVec 64))
(declare-fun temp1040_9 () (_ BitVec 64))
(declare-fun temp1040_10 () (_ BitVec 64))
(declare-fun temp1040_11 () (_ BitVec 64))
(declare-fun temp1040_12 () (_ BitVec 64))
(declare-fun temp1040_13 () (_ BitVec 64))
(declare-fun temp1040_14 () (_ BitVec 64))
(declare-fun temp1040_15 () (_ BitVec 64))
(declare-fun temp1040_16 () (_ BitVec 64))
(declare-fun temp1040_17 () (_ BitVec 64))
(declare-fun temp1040_18 () (_ BitVec 64))
(declare-fun temp1040_19 () (_ BitVec 64))
(declare-fun temp1040_20 () (_ BitVec 64))
(declare-fun temp1040_21 () (_ BitVec 64))
(declare-fun temp1040_22 () (_ BitVec 64))
(declare-fun temp1040_23 () (_ BitVec 64))
(declare-fun temp1040_24 () (_ BitVec 64))
(declare-fun temp1040_25 () (_ BitVec 64))
(declare-fun temp1040_26 () (_ BitVec 64))
(declare-fun temp1040_27 () (_ BitVec 64))
(declare-fun temp1040_28 () (_ BitVec 64))
(declare-fun temp1040_29 () (_ BitVec 64))
(declare-fun temp1040_30 () (_ BitVec 64))
(declare-fun temp1040_31 () (_ BitVec 64))
(declare-fun temp1040_32 () (_ BitVec 64))
(declare-fun temp1040_33 () (_ BitVec 64))
(declare-fun temp1040_34 () (_ BitVec 64))
(declare-fun temp1040_35 () (_ BitVec 64))
(declare-fun temp1040_36 () (_ BitVec 64))
(declare-fun temp1040_37 () (_ BitVec 64))
(declare-fun temp1040_38 () (_ BitVec 64))
(declare-fun temp1040_39 () (_ BitVec 64))
(declare-fun temp1040_40 () (_ BitVec 64))
(declare-fun temp1040_41 () (_ BitVec 64))
(declare-fun temp1040_42 () (_ BitVec 64))
(declare-fun temp1040_43 () (_ BitVec 64))
(declare-fun temp1040_44 () (_ BitVec 64))
(declare-fun temp1040_45 () (_ BitVec 64))
(declare-fun temp1040_46 () (_ BitVec 64))
(declare-fun temp1040_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1040_48 () (_ BitVec 64))
(declare-fun temp1040_49 () (_ BitVec 64))
(declare-fun temp1040_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_51 () (_ BitVec 64))
(declare-fun temp1040_52 () (_ BitVec 64))
(declare-fun temp1040_53 () (_ BitVec 64))
(declare-fun temp1040_54 () (_ BitVec 64))
(declare-fun temp1040_55 () (_ BitVec 64))
(declare-fun temp1040_56 () (_ BitVec 64))
(declare-fun temp1040_57 () (_ BitVec 64))
(declare-fun temp1040_58 () (_ BitVec 64))
(declare-fun temp1040_59 () (_ BitVec 64))
(declare-fun temp1040_60 () (_ BitVec 64))
(declare-fun temp1040_61 () (_ BitVec 64))
(declare-fun temp1040_62 () (_ BitVec 64))
(declare-fun temp1040_63 () (_ BitVec 64))
(declare-fun temp1040_64 () (_ BitVec 64))
(declare-fun temp1040_65 () (_ BitVec 64))
(declare-fun temp1040_66 () (_ BitVec 64))
(declare-fun temp1040_67 () (_ BitVec 64))
(declare-fun temp1040_68 () (_ BitVec 64))
(declare-fun temp1040_69 () (_ BitVec 64))
(declare-fun temp1040_70 () (_ BitVec 64))
(declare-fun temp1040_71 () (_ BitVec 64))
(declare-fun temp1040_72 () (_ BitVec 64))
(declare-fun temp1040_73 () (_ BitVec 64))
(declare-fun temp1040_74 () (_ BitVec 64))
(declare-fun temp1040_75 () (_ BitVec 64))
(declare-fun temp1040_76 () (_ BitVec 64))
(declare-fun temp1040_77 () (_ BitVec 64))
(declare-fun temp1040_78 () (_ BitVec 64))
(declare-fun temp1040_79 () (_ BitVec 64))
(declare-fun temp1040_80 () (_ BitVec 64))
(declare-fun temp1040_81 () (_ BitVec 64))
(declare-fun temp1040_82 () (_ BitVec 64))
(declare-fun temp1040_83 () (_ BitVec 64))
(declare-fun temp1040_84 () (_ BitVec 64))
(declare-fun temp1040_85 () (_ BitVec 64))
(declare-fun temp1040_86 () (_ BitVec 64))
(declare-fun temp1040_87 () (_ BitVec 64))
(declare-fun temp1040_88 () (_ BitVec 64))
(declare-fun temp1040_89 () (_ BitVec 64))
(declare-fun temp1040_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1040_91 () (_ BitVec 64))
(declare-fun temp1040_92 () (_ BitVec 64))
(declare-fun temp1040_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_94 () (_ BitVec 64))
(declare-fun temp1040_95 () (_ BitVec 64))
(declare-fun temp1040_96 () (_ BitVec 64))
(declare-fun temp1040_97 () (_ BitVec 64))
(declare-fun temp1040_98 () (_ BitVec 64))
(declare-fun temp1040_99 () (_ BitVec 64))
(declare-fun temp1040_100 () (_ BitVec 64))
(declare-fun temp1040_101 () (_ BitVec 64))
(declare-fun temp1040_102 () (_ BitVec 64))
(declare-fun temp1040_103 () (_ BitVec 64))
(declare-fun temp1040_104 () (_ BitVec 64))
(declare-fun temp1040_105 () (_ BitVec 64))
(declare-fun temp1040_106 () (_ BitVec 64))
(declare-fun temp1040_107 () (_ BitVec 64))
(declare-fun temp1040_108 () (_ BitVec 64))
(declare-fun temp1040_109 () (_ BitVec 64))
(declare-fun temp1040_110 () (_ BitVec 64))
(declare-fun temp1040_111 () (_ BitVec 64))
(declare-fun temp1040_112 () (_ BitVec 64))
(declare-fun temp1040_113 () (_ BitVec 64))
(declare-fun temp1040_114 () (_ BitVec 64))
(declare-fun temp1040_115 () (_ BitVec 64))
(declare-fun temp1040_116 () (_ BitVec 64))
(declare-fun temp1040_117 () (_ BitVec 64))
(declare-fun temp1040_118 () (_ BitVec 64))
(declare-fun temp1040_119 () (_ BitVec 64))
(declare-fun temp1040_120 () (_ BitVec 64))
(declare-fun temp1040_121 () (_ BitVec 64))
(declare-fun temp1040_122 () (_ BitVec 64))
(declare-fun temp1040_123 () (_ BitVec 64))
(declare-fun temp1040_124 () (_ BitVec 64))
(declare-fun temp1040_125 () (_ BitVec 64))
(declare-fun temp1040_126 () (_ BitVec 64))
(declare-fun temp1040_127 () (_ BitVec 64))
(declare-fun temp1040_128 () (_ BitVec 64))
(declare-fun temp1040_129 () (_ BitVec 64))
(declare-fun temp1040_130 () (_ BitVec 64))
(declare-fun temp1040_131 () (_ BitVec 64))
(declare-fun temp1040_132 () (_ BitVec 64))
(declare-fun temp1040_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1040_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1040_135 () (_ BitVec 64))
(declare-fun temp1040_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1040_137 () (_ BitVec 64))
(declare-fun temp1040_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_139 () (_ BitVec 64))
(declare-fun temp1040_140 () (_ BitVec 64))
(declare-fun temp1040_141 () (_ BitVec 64))
(declare-fun temp1040_142 () (_ BitVec 64))
(declare-fun temp1040_143 () (_ BitVec 64))
(declare-fun temp1040_144 () (_ BitVec 64))
(declare-fun temp1040_145 () (_ BitVec 64))
(declare-fun temp1040_146 () (_ BitVec 64))
(declare-fun temp1040_147 () (_ BitVec 64))
(declare-fun temp1040_148 () (_ BitVec 64))
(declare-fun temp1040_149 () (_ BitVec 64))
(declare-fun temp1040_150 () (_ BitVec 64))
(declare-fun temp1040_151 () (_ BitVec 64))
(declare-fun temp1040_152 () (_ BitVec 64))
(declare-fun temp1040_153 () (_ BitVec 64))
(declare-fun temp1040_154 () (_ BitVec 64))
(declare-fun temp1040_156 () (_ BitVec 64))
(declare-fun temp1040_157 () (_ BitVec 64))
(declare-fun temp1040_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1040_158 () (_ BitVec 64))
(declare-fun temp1040_159 () (_ BitVec 64))
(declare-fun temp1040_161 () (_ BitVec 64))
(declare-fun temp1040_162 () (_ BitVec 64))
(declare-fun temp1040_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1040_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1040_164 () (_ BitVec 64))
(declare-fun temp1040_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1040_166 () (_ BitVec 64))
(declare-fun temp1040_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1040_168 () (_ BitVec 64))
(declare-fun temp1040_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_170 () (_ BitVec 64))
(declare-fun temp1040_171 () (_ BitVec 64))
(declare-fun temp1040_172 () (_ BitVec 64))
(declare-fun temp1040_173 () (_ BitVec 64))
(declare-fun temp1040_174 () (_ BitVec 64))
(declare-fun temp1040_175 () (_ BitVec 64))
(declare-fun temp1040_176 () (_ BitVec 64))
(declare-fun temp1040_177 () (_ BitVec 64))
(declare-fun temp1040_178 () (_ BitVec 64))
(declare-fun temp1040_179 () (_ BitVec 64))
(declare-fun temp1040_180 () (_ BitVec 64))
(declare-fun temp1040_181 () (_ BitVec 64))
(declare-fun temp1040_182 () (_ BitVec 64))
(declare-fun temp1040_183 () (_ BitVec 64))
(declare-fun temp1040_184 () (_ BitVec 64))
(declare-fun temp1040_185 () (_ BitVec 64))
(declare-fun temp1040_186 () (_ BitVec 64))
(declare-fun temp1040_187 () (_ BitVec 64))
(declare-fun temp1040_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1040_189 () (_ BitVec 64))
(declare-fun temp1040_191 () (_ BitVec 64))
(declare-fun temp1040_192 () (_ BitVec 64))
(declare-fun temp1040_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1040_193 () (_ BitVec 64))
(declare-fun temp1040_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1040_195 () (_ BitVec 64))
(declare-fun temp1040_196 () (_ BitVec 64))
(declare-fun temp1040_197 () (_ BitVec 64))
(declare-fun temp1040_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_199 () (_ BitVec 64))
(declare-fun temp1040_200 () (_ BitVec 64))
(declare-fun temp1040_201 () (_ BitVec 64))
(declare-fun temp1040_202 () (_ BitVec 64))
(declare-fun temp1040_203 () (_ BitVec 64))
(declare-fun temp1040_204 () (_ BitVec 64))
(declare-fun temp1040_205 () (_ BitVec 64))
(declare-fun temp1040_206 () (_ BitVec 64))
(declare-fun temp1040_207 () (_ BitVec 64))
(declare-fun temp1040_208 () (_ BitVec 64))
(declare-fun temp1040_209 () (_ BitVec 64))
(declare-fun temp1040_210 () (_ BitVec 64))
(declare-fun temp1040_211 () (_ BitVec 64))
(declare-fun temp1040_212 () (_ BitVec 64))
(declare-fun temp1040_213 () (_ BitVec 64))
(declare-fun temp1040_214 () (_ BitVec 64))
(declare-fun temp1040_215 () (_ BitVec 64))
(declare-fun temp1040_216 () (_ BitVec 64))
(declare-fun temp1040_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1040_218 () (_ BitVec 64))
(declare-fun temp1040_220 () (_ BitVec 64))
(declare-fun temp1040_221 () (_ BitVec 64))
(declare-fun temp1040_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1040_222 () (_ BitVec 64))
(declare-fun temp1040_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1040_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1040_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1040_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1040_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1040_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1040_229 () (_ BitVec 64))
(declare-fun temp1040_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1040_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1040_232 () (_ BitVec 64))
(declare-fun temp1040_233 () (_ BitVec 64))
(declare-fun temp1040_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1040_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1040_236 () (_ BitVec 64))
(declare-fun temp1040_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1040_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1040_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1040_240 () (_ BitVec 64))
(assert (= temp1040_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1040_1)))
(assert (= temp1040_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1040_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_3 #x0000000000000000))
(assert (= var79869 temp1040_3))
(assert (= temp1040_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1040_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_5 #x0000000000000000))
(assert (= var79914 temp1040_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1040_6 #x0000000000000000))
(assert (= temp1040_7 temp1040_6))
(assert (= temp1040_8 (select ARGNAME_padding_NAMEEND_VAL temp1040_7)))
(assert (= temp1040_9 #x0000000000000001))
(assert (= temp1040_10 temp1040_9))
(assert (= temp1040_11 (select ARGNAME_padding_NAMEEND_VAL temp1040_10)))
(assert (= temp1040_12 #x0000000000000002))
(assert (= temp1040_13 temp1040_12))
(assert (= temp1040_14 (select ARGNAME_padding_NAMEEND_VAL temp1040_13)))
(assert (= temp1040_15 #x0000000000000003))
(assert (= temp1040_16 temp1040_15))
(assert (= temp1040_17 (select ARGNAME_padding_NAMEEND_VAL temp1040_16)))
(assert (= temp1040_18 #x0000000000000004))
(assert (= temp1040_19 temp1040_18))
(assert (= temp1040_20 (select ARGNAME_padding_NAMEEND_VAL temp1040_19)))
(assert (= temp1040_21 #x0000000000000005))
(assert (= temp1040_22 temp1040_21))
(assert (= temp1040_23 (select ARGNAME_padding_NAMEEND_VAL temp1040_22)))
(assert (= temp1040_24 #x0000000000000000))
(assert (= temp1040_25 #x0000000000000000))
(assert (= temp1040_26 temp1040_25))
(assert (= temp1040_27 (select ARGNAME_padding_NAMEEND_VAL temp1040_26)))
(assert (= temp1040_28 #x0000000000000000))
(assert (= temp1040_29 #x0000000000000001))
(assert (= temp1040_30 temp1040_29))
(assert (= temp1040_31 (select ARGNAME_padding_NAMEEND_VAL temp1040_30)))
(assert (= temp1040_32 #x0000000000000000))
(assert (= temp1040_33 #x0000000000000002))
(assert (= temp1040_34 temp1040_33))
(assert (= temp1040_35 (select ARGNAME_padding_NAMEEND_VAL temp1040_34)))
(assert (= temp1040_36 #x0000000000000000))
(assert (= temp1040_37 #x0000000000000003))
(assert (= temp1040_38 temp1040_37))
(assert (= temp1040_39 (select ARGNAME_padding_NAMEEND_VAL temp1040_38)))
(assert (= temp1040_40 #x0000000000000000))
(assert (= temp1040_41 #x0000000000000004))
(assert (= temp1040_42 temp1040_41))
(assert (= temp1040_43 (select ARGNAME_padding_NAMEEND_VAL temp1040_42)))
(assert (= temp1040_44 #x0000000000000000))
(assert (= temp1040_45 #x0000000000000005))
(assert (= temp1040_46 temp1040_45))
(assert (= temp1040_47 (select ARGNAME_padding_NAMEEND_VAL temp1040_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1040_27 temp1040_24)
             (bvslt temp1040_31 temp1040_28)
             (bvslt temp1040_35 temp1040_32)
             (bvslt temp1040_39 temp1040_36)
             (bvslt temp1040_43 temp1040_40)
             (bvslt temp1040_47 temp1040_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_48 #x0000000000000000))
(assert (= var1322786 temp1040_48))
(assert (= temp1040_49 #x0000000000000000))
(assert (= temp1040_50 temp1040_49))
(assert (= temp1040_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_50)))
(assert (= temp1040_52 #x0000000000000001))
(assert (= temp1040_53 temp1040_52))
(assert (= temp1040_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_53)))
(assert (= temp1040_55 #x0000000000000002))
(assert (= temp1040_56 temp1040_55))
(assert (= temp1040_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_56)))
(assert (= temp1040_58 #x0000000000000003))
(assert (= temp1040_59 temp1040_58))
(assert (= temp1040_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_59)))
(assert (= temp1040_61 #x0000000000000004))
(assert (= temp1040_62 temp1040_61))
(assert (= temp1040_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_62)))
(assert (= temp1040_64 #x0000000000000005))
(assert (= temp1040_65 temp1040_64))
(assert (= temp1040_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_65)))
(assert (= temp1040_67 #x0000000000000000))
(assert (= temp1040_68 #x0000000000000000))
(assert (= temp1040_69 temp1040_68))
(assert (= temp1040_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_69)))
(assert (= temp1040_71 #x0000000000000000))
(assert (= temp1040_72 #x0000000000000001))
(assert (= temp1040_73 temp1040_72))
(assert (= temp1040_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_73)))
(assert (= temp1040_75 #x0000000000000000))
(assert (= temp1040_76 #x0000000000000002))
(assert (= temp1040_77 temp1040_76))
(assert (= temp1040_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_77)))
(assert (= temp1040_79 #x0000000000000000))
(assert (= temp1040_80 #x0000000000000003))
(assert (= temp1040_81 temp1040_80))
(assert (= temp1040_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_81)))
(assert (= temp1040_83 #x0000000000000000))
(assert (= temp1040_84 #x0000000000000004))
(assert (= temp1040_85 temp1040_84))
(assert (= temp1040_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_85)))
(assert (= temp1040_87 #x0000000000000000))
(assert (= temp1040_88 #x0000000000000005))
(assert (= temp1040_89 temp1040_88))
(assert (= temp1040_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1040_70 temp1040_67)
             (bvslt temp1040_74 temp1040_71)
             (bvslt temp1040_78 temp1040_75)
             (bvslt temp1040_82 temp1040_79)
             (bvslt temp1040_86 temp1040_83)
             (bvslt temp1040_90 temp1040_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_91 #x0000000000000000))
(assert (= var1322797 temp1040_91))
(assert (= temp1040_92 #x0000000000000000))
(assert (= temp1040_93 temp1040_92))
(assert (= temp1040_94 (select ARGNAME_stride_NAMEEND_VAL temp1040_93)))
(assert (= temp1040_95 #x0000000000000001))
(assert (= temp1040_96 temp1040_95))
(assert (= temp1040_97 (select ARGNAME_stride_NAMEEND_VAL temp1040_96)))
(assert (= temp1040_98 #x0000000000000002))
(assert (= temp1040_99 temp1040_98))
(assert (= temp1040_100 (select ARGNAME_stride_NAMEEND_VAL temp1040_99)))
(assert (= temp1040_101 #x0000000000000003))
(assert (= temp1040_102 temp1040_101))
(assert (= temp1040_103 (select ARGNAME_stride_NAMEEND_VAL temp1040_102)))
(assert (= temp1040_104 #x0000000000000004))
(assert (= temp1040_105 temp1040_104))
(assert (= temp1040_106 (select ARGNAME_stride_NAMEEND_VAL temp1040_105)))
(assert (= temp1040_107 #x0000000000000005))
(assert (= temp1040_108 temp1040_107))
(assert (= temp1040_109 (select ARGNAME_stride_NAMEEND_VAL temp1040_108)))
(assert (= temp1040_110 #x0000000000000000))
(assert (= temp1040_111 #x0000000000000000))
(assert (= temp1040_112 temp1040_111))
(assert (= temp1040_113 (select ARGNAME_stride_NAMEEND_VAL temp1040_112)))
(assert (= temp1040_114 #x0000000000000000))
(assert (= temp1040_115 #x0000000000000001))
(assert (= temp1040_116 temp1040_115))
(assert (= temp1040_117 (select ARGNAME_stride_NAMEEND_VAL temp1040_116)))
(assert (= temp1040_118 #x0000000000000000))
(assert (= temp1040_119 #x0000000000000002))
(assert (= temp1040_120 temp1040_119))
(assert (= temp1040_121 (select ARGNAME_stride_NAMEEND_VAL temp1040_120)))
(assert (= temp1040_122 #x0000000000000000))
(assert (= temp1040_123 #x0000000000000003))
(assert (= temp1040_124 temp1040_123))
(assert (= temp1040_125 (select ARGNAME_stride_NAMEEND_VAL temp1040_124)))
(assert (= temp1040_126 #x0000000000000000))
(assert (= temp1040_127 #x0000000000000004))
(assert (= temp1040_128 temp1040_127))
(assert (= temp1040_129 (select ARGNAME_stride_NAMEEND_VAL temp1040_128)))
(assert (= temp1040_130 #x0000000000000000))
(assert (= temp1040_131 #x0000000000000005))
(assert (= temp1040_132 temp1040_131))
(assert (= temp1040_133 (select ARGNAME_stride_NAMEEND_VAL temp1040_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1040_113 temp1040_110)
             (bvsle temp1040_117 temp1040_114)
             (bvsle temp1040_121 temp1040_118)
             (bvsle temp1040_125 temp1040_122)
             (bvsle temp1040_129 temp1040_126)
             (bvsle temp1040_133 temp1040_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_134 #x0000000000000000))
(assert (= var1322807 temp1040_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_135 #x0000000000000001))
(assert (= var1322819 temp1040_135))
(assert (= temp1040_136 #x0000000000000000))
(assert (= var1310898 temp1040_136))
(assert (= temp1040_137 #x0000000000000000))
(assert (= temp1040_138 temp1040_137))
(assert (= temp1040_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_138)))
(assert (= temp1040_140 #x0000000000000001))
(assert (= temp1040_141 temp1040_140))
(assert (= temp1040_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_141)))
(assert (= temp1040_143 #x0000000000000002))
(assert (= temp1040_144 temp1040_143))
(assert (= temp1040_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_144)))
(assert (= temp1040_146 #x0000000000000003))
(assert (= temp1040_147 temp1040_146))
(assert (= temp1040_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_147)))
(assert (= temp1040_149 #x0000000000000004))
(assert (= temp1040_150 temp1040_149))
(assert (= temp1040_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_150)))
(assert (= temp1040_152 #x0000000000000005))
(assert (= temp1040_153 temp1040_152))
(assert (= temp1040_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_153)))
(assert (= temp1040_156 var1310898))
(assert (= temp1040_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_156)))
(assert (= temp1040_155 temp1040_157))
(assert (= var1322852
   (ite (bvslt temp1040_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_158 #x0000000000000000))
(assert (= var1322852 temp1040_158))
(assert (= temp1040_159 #x0000000000000000))
(assert (= var1310898 temp1040_159))
(assert (= temp1040_161 var1310898))
(assert (= temp1040_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_161)))
(assert (= temp1040_160 temp1040_162))
(assert (= var1322874 (bvsmod temp1040_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1040_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1040_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1040_164 #x0000000000000001))
(assert (= var1322875 temp1040_164))
(assert (= temp1040_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1040_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_166 #x0000000000000001))
(assert (= var1322895 temp1040_166))
(assert (= temp1040_167 #x0000000000000001))
(assert (= var1311786 temp1040_167))
(assert (= temp1040_168 #x0000000000000000))
(assert (= temp1040_169 temp1040_168))
(assert (= temp1040_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_169)))
(assert (= temp1040_171 #x0000000000000001))
(assert (= temp1040_172 temp1040_171))
(assert (= temp1040_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_172)))
(assert (= temp1040_174 #x0000000000000002))
(assert (= temp1040_175 temp1040_174))
(assert (= temp1040_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_175)))
(assert (= temp1040_177 #x0000000000000003))
(assert (= temp1040_178 temp1040_177))
(assert (= temp1040_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_178)))
(assert (= temp1040_180 #x0000000000000004))
(assert (= temp1040_181 temp1040_180))
(assert (= temp1040_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_181)))
(assert (= temp1040_183 #x0000000000000005))
(assert (= temp1040_184 temp1040_183))
(assert (= temp1040_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_184)))
(assert (= temp1040_186 #x0000000000000000))
(assert (= temp1040_187
   (ite (bvslt var1311786 temp1040_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1040_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_187)))
(assert (= var1322903 temp1040_188))
(assert (bvslt (ite (bvslt var1311786 temp1040_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1040_189 #x0000000000000001))
(assert (= var1311786 temp1040_189))
(assert (= temp1040_191 var1311786))
(assert (= temp1040_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_191)))
(assert (= temp1040_190 temp1040_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1040_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1040_193 #x0000000000000001))
(assert (= var1322908 temp1040_193))
(assert (= temp1040_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1040_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_195 #x0000000000000001))
(assert (= var1322975 temp1040_195))
(assert (= temp1040_196 #x0000000000000000))
(assert (= var1310898 temp1040_196))
(assert (= temp1040_197 #x0000000000000000))
(assert (= temp1040_198 temp1040_197))
(assert (= temp1040_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1040_198)))
(assert (= temp1040_200 #x0000000000000001))
(assert (= temp1040_201 temp1040_200))
(assert (= temp1040_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1040_201)))
(assert (= temp1040_203 #x0000000000000002))
(assert (= temp1040_204 temp1040_203))
(assert (= temp1040_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1040_204)))
(assert (= temp1040_206 #x0000000000000003))
(assert (= temp1040_207 temp1040_206))
(assert (= temp1040_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1040_207)))
(assert (= temp1040_209 #x0000000000000004))
(assert (= temp1040_210 temp1040_209))
(assert (= temp1040_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1040_210)))
(assert (= temp1040_212 #x0000000000000005))
(assert (= temp1040_213 temp1040_212))
(assert (= temp1040_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1040_213)))
(assert (= temp1040_215 #x0000000000000000))
(assert (= temp1040_216
   (ite (bvslt var1310898 temp1040_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1040_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1040_216)))
(assert (= var1322977 temp1040_217))
(assert (bvslt (ite (bvslt var1310898 temp1040_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1040_218 #x0000000000000000))
(assert (= var1310898 temp1040_218))
(assert (= temp1040_220 var1310898))
(assert (= temp1040_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_220)))
(assert (= temp1040_219 temp1040_221))
(assert (= var1322980
   (ite (= var1322977 temp1040_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1040_222 #x0000000000000001))
(assert (= var1322980 temp1040_222))
(assert (= temp1040_223 #x0000000000000002))
(assert (= var1848169 temp1040_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1040_225 #x0000000000000001))
(assert (= var1323065 temp1040_225))
(assert (= temp1040_226 #x0000000000000001))
(assert (= var3486735 temp1040_226))
(assert (= temp1040_227 #x0000000000000001))
(assert (= var3814415 temp1040_227))
(assert (= temp1040_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1040_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_229 #x0000000000000001))
(assert (= var79986 temp1040_229))
(assert (= temp1040_230 #x0000000000000001))
(assert (= var80116 temp1040_230))
(assert (= var4796905 var80116))
(assert (= temp1040_231 #x0000000000000000))
(assert (= var4784306 temp1040_231))
(assert (= temp1040_232 #x0000000000000000))
(assert (= temp1040_233
   (ite (bvslt var4784306 temp1040_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1040_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_233)))
(assert (= var4796924 temp1040_234))
(assert (bvslt (ite (bvslt var4784306 temp1040_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1040_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1040_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1040_236 #x0000000000000001))
(assert (= var4796925 temp1040_236))
(assert (= temp1040_237 #x0000000000000000))
(assert (= var4996927 temp1040_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1040_238 #x0000000000000002))
(assert (= var5125763 temp1040_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_239 #x0000000000000000))
(assert (= var5191324 temp1040_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1040_240 #x0000000000000001))
(assert (= var79986 temp1040_240))
(model-add temp1040_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1040_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1040_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






