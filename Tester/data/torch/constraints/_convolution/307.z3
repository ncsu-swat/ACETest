(declare-fun temp408_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp408_2 () (_ BitVec 64))
(declare-fun temp408_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp408_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp408_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp408_6 () (_ BitVec 64))
(declare-fun temp408_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp408_8 () (_ BitVec 64))
(declare-fun temp408_9 () (_ BitVec 64))
(declare-fun temp408_10 () (_ BitVec 64))
(declare-fun temp408_11 () (_ BitVec 64))
(declare-fun temp408_12 () (_ BitVec 64))
(declare-fun temp408_13 () (_ BitVec 64))
(declare-fun temp408_14 () (_ BitVec 64))
(declare-fun temp408_15 () (_ BitVec 64))
(declare-fun temp408_16 () (_ BitVec 64))
(declare-fun temp408_17 () (_ BitVec 64))
(declare-fun temp408_18 () (_ BitVec 64))
(declare-fun temp408_19 () (_ BitVec 64))
(declare-fun temp408_20 () (_ BitVec 64))
(declare-fun temp408_21 () (_ BitVec 64))
(declare-fun temp408_22 () (_ BitVec 64))
(declare-fun temp408_23 () (_ BitVec 64))
(declare-fun temp408_24 () (_ BitVec 64))
(declare-fun temp408_25 () (_ BitVec 64))
(declare-fun temp408_26 () (_ BitVec 64))
(declare-fun temp408_27 () (_ BitVec 64))
(declare-fun temp408_28 () (_ BitVec 64))
(declare-fun temp408_29 () (_ BitVec 64))
(declare-fun temp408_30 () (_ BitVec 64))
(declare-fun temp408_31 () (_ BitVec 64))
(declare-fun temp408_32 () (_ BitVec 64))
(declare-fun temp408_33 () (_ BitVec 64))
(declare-fun temp408_34 () (_ BitVec 64))
(declare-fun temp408_35 () (_ BitVec 64))
(declare-fun temp408_36 () (_ BitVec 64))
(declare-fun temp408_37 () (_ BitVec 64))
(declare-fun temp408_38 () (_ BitVec 64))
(declare-fun temp408_39 () (_ BitVec 64))
(declare-fun temp408_40 () (_ BitVec 64))
(declare-fun temp408_41 () (_ BitVec 64))
(declare-fun temp408_42 () (_ BitVec 64))
(declare-fun temp408_43 () (_ BitVec 64))
(declare-fun temp408_44 () (_ BitVec 64))
(declare-fun temp408_45 () (_ BitVec 64))
(declare-fun temp408_46 () (_ BitVec 64))
(declare-fun temp408_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp408_48 () (_ BitVec 64))
(declare-fun temp408_49 () (_ BitVec 64))
(declare-fun temp408_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp408_51 () (_ BitVec 64))
(declare-fun temp408_52 () (_ BitVec 64))
(declare-fun temp408_53 () (_ BitVec 64))
(declare-fun temp408_54 () (_ BitVec 64))
(declare-fun temp408_55 () (_ BitVec 64))
(declare-fun temp408_56 () (_ BitVec 64))
(declare-fun temp408_57 () (_ BitVec 64))
(declare-fun temp408_58 () (_ BitVec 64))
(declare-fun temp408_59 () (_ BitVec 64))
(declare-fun temp408_60 () (_ BitVec 64))
(declare-fun temp408_61 () (_ BitVec 64))
(declare-fun temp408_62 () (_ BitVec 64))
(declare-fun temp408_63 () (_ BitVec 64))
(declare-fun temp408_64 () (_ BitVec 64))
(declare-fun temp408_65 () (_ BitVec 64))
(declare-fun temp408_66 () (_ BitVec 64))
(declare-fun temp408_67 () (_ BitVec 64))
(declare-fun temp408_68 () (_ BitVec 64))
(declare-fun temp408_69 () (_ BitVec 64))
(declare-fun temp408_70 () (_ BitVec 64))
(declare-fun temp408_71 () (_ BitVec 64))
(declare-fun temp408_72 () (_ BitVec 64))
(declare-fun temp408_73 () (_ BitVec 64))
(declare-fun temp408_74 () (_ BitVec 64))
(declare-fun temp408_75 () (_ BitVec 64))
(declare-fun temp408_76 () (_ BitVec 64))
(declare-fun temp408_77 () (_ BitVec 64))
(declare-fun temp408_78 () (_ BitVec 64))
(declare-fun temp408_79 () (_ BitVec 64))
(declare-fun temp408_80 () (_ BitVec 64))
(declare-fun temp408_81 () (_ BitVec 64))
(declare-fun temp408_82 () (_ BitVec 64))
(declare-fun temp408_83 () (_ BitVec 64))
(declare-fun temp408_84 () (_ BitVec 64))
(declare-fun temp408_85 () (_ BitVec 64))
(declare-fun temp408_86 () (_ BitVec 64))
(declare-fun temp408_87 () (_ BitVec 64))
(declare-fun temp408_88 () (_ BitVec 64))
(declare-fun temp408_89 () (_ BitVec 64))
(declare-fun temp408_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp408_91 () (_ BitVec 64))
(declare-fun temp408_92 () (_ BitVec 64))
(declare-fun temp408_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp408_94 () (_ BitVec 64))
(declare-fun temp408_95 () (_ BitVec 64))
(declare-fun temp408_96 () (_ BitVec 64))
(declare-fun temp408_97 () (_ BitVec 64))
(declare-fun temp408_98 () (_ BitVec 64))
(declare-fun temp408_99 () (_ BitVec 64))
(declare-fun temp408_100 () (_ BitVec 64))
(declare-fun temp408_101 () (_ BitVec 64))
(declare-fun temp408_102 () (_ BitVec 64))
(declare-fun temp408_103 () (_ BitVec 64))
(declare-fun temp408_104 () (_ BitVec 64))
(declare-fun temp408_105 () (_ BitVec 64))
(declare-fun temp408_106 () (_ BitVec 64))
(declare-fun temp408_107 () (_ BitVec 64))
(declare-fun temp408_108 () (_ BitVec 64))
(declare-fun temp408_109 () (_ BitVec 64))
(declare-fun temp408_110 () (_ BitVec 64))
(declare-fun temp408_111 () (_ BitVec 64))
(declare-fun temp408_112 () (_ BitVec 64))
(declare-fun temp408_113 () (_ BitVec 64))
(declare-fun temp408_114 () (_ BitVec 64))
(declare-fun temp408_115 () (_ BitVec 64))
(declare-fun temp408_116 () (_ BitVec 64))
(declare-fun temp408_117 () (_ BitVec 64))
(declare-fun temp408_118 () (_ BitVec 64))
(declare-fun temp408_119 () (_ BitVec 64))
(declare-fun temp408_120 () (_ BitVec 64))
(declare-fun temp408_121 () (_ BitVec 64))
(declare-fun temp408_122 () (_ BitVec 64))
(declare-fun temp408_123 () (_ BitVec 64))
(declare-fun temp408_124 () (_ BitVec 64))
(declare-fun temp408_125 () (_ BitVec 64))
(declare-fun temp408_126 () (_ BitVec 64))
(declare-fun temp408_127 () (_ BitVec 64))
(declare-fun temp408_128 () (_ BitVec 64))
(declare-fun temp408_129 () (_ BitVec 64))
(declare-fun temp408_130 () (_ BitVec 64))
(declare-fun temp408_131 () (_ BitVec 64))
(declare-fun temp408_132 () (_ BitVec 64))
(declare-fun temp408_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp408_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp408_135 () (_ BitVec 64))
(declare-fun temp408_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp408_137 () (_ BitVec 64))
(declare-fun temp408_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp408_139 () (_ BitVec 64))
(declare-fun temp408_140 () (_ BitVec 64))
(declare-fun temp408_141 () (_ BitVec 64))
(declare-fun temp408_142 () (_ BitVec 64))
(declare-fun temp408_143 () (_ BitVec 64))
(declare-fun temp408_144 () (_ BitVec 64))
(declare-fun temp408_145 () (_ BitVec 64))
(declare-fun temp408_146 () (_ BitVec 64))
(declare-fun temp408_147 () (_ BitVec 64))
(declare-fun temp408_148 () (_ BitVec 64))
(declare-fun temp408_149 () (_ BitVec 64))
(declare-fun temp408_150 () (_ BitVec 64))
(declare-fun temp408_151 () (_ BitVec 64))
(declare-fun temp408_152 () (_ BitVec 64))
(declare-fun temp408_153 () (_ BitVec 64))
(declare-fun temp408_154 () (_ BitVec 64))
(declare-fun temp408_156 () (_ BitVec 64))
(declare-fun temp408_157 () (_ BitVec 64))
(declare-fun temp408_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp408_158 () (_ BitVec 64))
(declare-fun temp408_159 () (_ BitVec 64))
(declare-fun temp408_161 () (_ BitVec 64))
(declare-fun temp408_162 () (_ BitVec 64))
(declare-fun temp408_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp408_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp408_164 () (_ BitVec 64))
(declare-fun temp408_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp408_166 () (_ BitVec 64))
(declare-fun temp408_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp408_168 () (_ BitVec 64))
(declare-fun temp408_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp408_170 () (_ BitVec 64))
(declare-fun temp408_171 () (_ BitVec 64))
(declare-fun temp408_172 () (_ BitVec 64))
(declare-fun temp408_173 () (_ BitVec 64))
(declare-fun temp408_174 () (_ BitVec 64))
(declare-fun temp408_175 () (_ BitVec 64))
(declare-fun temp408_176 () (_ BitVec 64))
(declare-fun temp408_177 () (_ BitVec 64))
(declare-fun temp408_178 () (_ BitVec 64))
(declare-fun temp408_179 () (_ BitVec 64))
(declare-fun temp408_180 () (_ BitVec 64))
(declare-fun temp408_181 () (_ BitVec 64))
(declare-fun temp408_182 () (_ BitVec 64))
(declare-fun temp408_183 () (_ BitVec 64))
(declare-fun temp408_184 () (_ BitVec 64))
(declare-fun temp408_185 () (_ BitVec 64))
(declare-fun temp408_186 () (_ BitVec 64))
(declare-fun temp408_187 () (_ BitVec 64))
(declare-fun temp408_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp408_189 () (_ BitVec 64))
(declare-fun temp408_191 () (_ BitVec 64))
(declare-fun temp408_192 () (_ BitVec 64))
(declare-fun temp408_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp408_193 () (_ BitVec 64))
(declare-fun temp408_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp408_195 () (_ BitVec 64))
(declare-fun temp408_196 () (_ BitVec 64))
(declare-fun temp408_197 () (_ BitVec 64))
(declare-fun temp408_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp408_199 () (_ BitVec 64))
(declare-fun temp408_200 () (_ BitVec 64))
(declare-fun temp408_201 () (_ BitVec 64))
(declare-fun temp408_202 () (_ BitVec 64))
(declare-fun temp408_203 () (_ BitVec 64))
(declare-fun temp408_204 () (_ BitVec 64))
(declare-fun temp408_205 () (_ BitVec 64))
(declare-fun temp408_206 () (_ BitVec 64))
(declare-fun temp408_207 () (_ BitVec 64))
(declare-fun temp408_208 () (_ BitVec 64))
(declare-fun temp408_209 () (_ BitVec 64))
(declare-fun temp408_210 () (_ BitVec 64))
(declare-fun temp408_211 () (_ BitVec 64))
(declare-fun temp408_212 () (_ BitVec 64))
(declare-fun temp408_213 () (_ BitVec 64))
(declare-fun temp408_214 () (_ BitVec 64))
(declare-fun temp408_215 () (_ BitVec 64))
(declare-fun temp408_216 () (_ BitVec 64))
(declare-fun temp408_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp408_218 () (_ BitVec 64))
(declare-fun temp408_220 () (_ BitVec 64))
(declare-fun temp408_221 () (_ BitVec 64))
(declare-fun temp408_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp408_222 () (_ BitVec 64))
(declare-fun temp408_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp408_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp408_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp408_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp408_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp408_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp408_229 () (_ BitVec 64))
(declare-fun temp408_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp408_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp408_232 () (_ BitVec 64))
(declare-fun temp408_233 () (_ BitVec 64))
(declare-fun temp408_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp408_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp408_236 () (_ BitVec 64))
(declare-fun temp408_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp408_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp408_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp408_240 () (_ BitVec 64))
(declare-fun temp408_241 () (_ BitVec 64))
(declare-fun var7222036 () (_ BitVec 64))
(declare-fun var7222003 () (_ BitVec 64))
(declare-fun var7090567 () (_ BitVec 64))
(declare-fun var7090563 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp408_242 () (_ BitVec 64))
(assert (= temp408_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp408_1)))
(assert (= temp408_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp408_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_3 #x0000000000000000))
(assert (= var79869 temp408_3))
(assert (= temp408_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp408_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_5 #x0000000000000000))
(assert (= var79914 temp408_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp408_6 #x0000000000000000))
(assert (= temp408_7 temp408_6))
(assert (= temp408_8 (select ARGNAME_padding_NAMEEND_VAL temp408_7)))
(assert (= temp408_9 #x0000000000000001))
(assert (= temp408_10 temp408_9))
(assert (= temp408_11 (select ARGNAME_padding_NAMEEND_VAL temp408_10)))
(assert (= temp408_12 #x0000000000000002))
(assert (= temp408_13 temp408_12))
(assert (= temp408_14 (select ARGNAME_padding_NAMEEND_VAL temp408_13)))
(assert (= temp408_15 #x0000000000000003))
(assert (= temp408_16 temp408_15))
(assert (= temp408_17 (select ARGNAME_padding_NAMEEND_VAL temp408_16)))
(assert (= temp408_18 #x0000000000000004))
(assert (= temp408_19 temp408_18))
(assert (= temp408_20 (select ARGNAME_padding_NAMEEND_VAL temp408_19)))
(assert (= temp408_21 #x0000000000000005))
(assert (= temp408_22 temp408_21))
(assert (= temp408_23 (select ARGNAME_padding_NAMEEND_VAL temp408_22)))
(assert (= temp408_24 #x0000000000000000))
(assert (= temp408_25 #x0000000000000000))
(assert (= temp408_26 temp408_25))
(assert (= temp408_27 (select ARGNAME_padding_NAMEEND_VAL temp408_26)))
(assert (= temp408_28 #x0000000000000000))
(assert (= temp408_29 #x0000000000000001))
(assert (= temp408_30 temp408_29))
(assert (= temp408_31 (select ARGNAME_padding_NAMEEND_VAL temp408_30)))
(assert (= temp408_32 #x0000000000000000))
(assert (= temp408_33 #x0000000000000002))
(assert (= temp408_34 temp408_33))
(assert (= temp408_35 (select ARGNAME_padding_NAMEEND_VAL temp408_34)))
(assert (= temp408_36 #x0000000000000000))
(assert (= temp408_37 #x0000000000000003))
(assert (= temp408_38 temp408_37))
(assert (= temp408_39 (select ARGNAME_padding_NAMEEND_VAL temp408_38)))
(assert (= temp408_40 #x0000000000000000))
(assert (= temp408_41 #x0000000000000004))
(assert (= temp408_42 temp408_41))
(assert (= temp408_43 (select ARGNAME_padding_NAMEEND_VAL temp408_42)))
(assert (= temp408_44 #x0000000000000000))
(assert (= temp408_45 #x0000000000000005))
(assert (= temp408_46 temp408_45))
(assert (= temp408_47 (select ARGNAME_padding_NAMEEND_VAL temp408_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp408_27 temp408_24)
             (bvslt temp408_31 temp408_28)
             (bvslt temp408_35 temp408_32)
             (bvslt temp408_39 temp408_36)
             (bvslt temp408_43 temp408_40)
             (bvslt temp408_47 temp408_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_48 #x0000000000000000))
(assert (= var1322786 temp408_48))
(assert (= temp408_49 #x0000000000000000))
(assert (= temp408_50 temp408_49))
(assert (= temp408_51 (select ARGNAME_output_padding_NAMEEND_VAL temp408_50)))
(assert (= temp408_52 #x0000000000000001))
(assert (= temp408_53 temp408_52))
(assert (= temp408_54 (select ARGNAME_output_padding_NAMEEND_VAL temp408_53)))
(assert (= temp408_55 #x0000000000000002))
(assert (= temp408_56 temp408_55))
(assert (= temp408_57 (select ARGNAME_output_padding_NAMEEND_VAL temp408_56)))
(assert (= temp408_58 #x0000000000000003))
(assert (= temp408_59 temp408_58))
(assert (= temp408_60 (select ARGNAME_output_padding_NAMEEND_VAL temp408_59)))
(assert (= temp408_61 #x0000000000000004))
(assert (= temp408_62 temp408_61))
(assert (= temp408_63 (select ARGNAME_output_padding_NAMEEND_VAL temp408_62)))
(assert (= temp408_64 #x0000000000000005))
(assert (= temp408_65 temp408_64))
(assert (= temp408_66 (select ARGNAME_output_padding_NAMEEND_VAL temp408_65)))
(assert (= temp408_67 #x0000000000000000))
(assert (= temp408_68 #x0000000000000000))
(assert (= temp408_69 temp408_68))
(assert (= temp408_70 (select ARGNAME_output_padding_NAMEEND_VAL temp408_69)))
(assert (= temp408_71 #x0000000000000000))
(assert (= temp408_72 #x0000000000000001))
(assert (= temp408_73 temp408_72))
(assert (= temp408_74 (select ARGNAME_output_padding_NAMEEND_VAL temp408_73)))
(assert (= temp408_75 #x0000000000000000))
(assert (= temp408_76 #x0000000000000002))
(assert (= temp408_77 temp408_76))
(assert (= temp408_78 (select ARGNAME_output_padding_NAMEEND_VAL temp408_77)))
(assert (= temp408_79 #x0000000000000000))
(assert (= temp408_80 #x0000000000000003))
(assert (= temp408_81 temp408_80))
(assert (= temp408_82 (select ARGNAME_output_padding_NAMEEND_VAL temp408_81)))
(assert (= temp408_83 #x0000000000000000))
(assert (= temp408_84 #x0000000000000004))
(assert (= temp408_85 temp408_84))
(assert (= temp408_86 (select ARGNAME_output_padding_NAMEEND_VAL temp408_85)))
(assert (= temp408_87 #x0000000000000000))
(assert (= temp408_88 #x0000000000000005))
(assert (= temp408_89 temp408_88))
(assert (= temp408_90 (select ARGNAME_output_padding_NAMEEND_VAL temp408_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp408_70 temp408_67)
             (bvslt temp408_74 temp408_71)
             (bvslt temp408_78 temp408_75)
             (bvslt temp408_82 temp408_79)
             (bvslt temp408_86 temp408_83)
             (bvslt temp408_90 temp408_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_91 #x0000000000000000))
(assert (= var1322797 temp408_91))
(assert (= temp408_92 #x0000000000000000))
(assert (= temp408_93 temp408_92))
(assert (= temp408_94 (select ARGNAME_stride_NAMEEND_VAL temp408_93)))
(assert (= temp408_95 #x0000000000000001))
(assert (= temp408_96 temp408_95))
(assert (= temp408_97 (select ARGNAME_stride_NAMEEND_VAL temp408_96)))
(assert (= temp408_98 #x0000000000000002))
(assert (= temp408_99 temp408_98))
(assert (= temp408_100 (select ARGNAME_stride_NAMEEND_VAL temp408_99)))
(assert (= temp408_101 #x0000000000000003))
(assert (= temp408_102 temp408_101))
(assert (= temp408_103 (select ARGNAME_stride_NAMEEND_VAL temp408_102)))
(assert (= temp408_104 #x0000000000000004))
(assert (= temp408_105 temp408_104))
(assert (= temp408_106 (select ARGNAME_stride_NAMEEND_VAL temp408_105)))
(assert (= temp408_107 #x0000000000000005))
(assert (= temp408_108 temp408_107))
(assert (= temp408_109 (select ARGNAME_stride_NAMEEND_VAL temp408_108)))
(assert (= temp408_110 #x0000000000000000))
(assert (= temp408_111 #x0000000000000000))
(assert (= temp408_112 temp408_111))
(assert (= temp408_113 (select ARGNAME_stride_NAMEEND_VAL temp408_112)))
(assert (= temp408_114 #x0000000000000000))
(assert (= temp408_115 #x0000000000000001))
(assert (= temp408_116 temp408_115))
(assert (= temp408_117 (select ARGNAME_stride_NAMEEND_VAL temp408_116)))
(assert (= temp408_118 #x0000000000000000))
(assert (= temp408_119 #x0000000000000002))
(assert (= temp408_120 temp408_119))
(assert (= temp408_121 (select ARGNAME_stride_NAMEEND_VAL temp408_120)))
(assert (= temp408_122 #x0000000000000000))
(assert (= temp408_123 #x0000000000000003))
(assert (= temp408_124 temp408_123))
(assert (= temp408_125 (select ARGNAME_stride_NAMEEND_VAL temp408_124)))
(assert (= temp408_126 #x0000000000000000))
(assert (= temp408_127 #x0000000000000004))
(assert (= temp408_128 temp408_127))
(assert (= temp408_129 (select ARGNAME_stride_NAMEEND_VAL temp408_128)))
(assert (= temp408_130 #x0000000000000000))
(assert (= temp408_131 #x0000000000000005))
(assert (= temp408_132 temp408_131))
(assert (= temp408_133 (select ARGNAME_stride_NAMEEND_VAL temp408_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp408_113 temp408_110)
             (bvsle temp408_117 temp408_114)
             (bvsle temp408_121 temp408_118)
             (bvsle temp408_125 temp408_122)
             (bvsle temp408_129 temp408_126)
             (bvsle temp408_133 temp408_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_134 #x0000000000000000))
(assert (= var1322807 temp408_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_135 #x0000000000000001))
(assert (= var1322819 temp408_135))
(assert (= temp408_136 #x0000000000000000))
(assert (= var1310898 temp408_136))
(assert (= temp408_137 #x0000000000000000))
(assert (= temp408_138 temp408_137))
(assert (= temp408_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_138)))
(assert (= temp408_140 #x0000000000000001))
(assert (= temp408_141 temp408_140))
(assert (= temp408_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_141)))
(assert (= temp408_143 #x0000000000000002))
(assert (= temp408_144 temp408_143))
(assert (= temp408_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_144)))
(assert (= temp408_146 #x0000000000000003))
(assert (= temp408_147 temp408_146))
(assert (= temp408_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_147)))
(assert (= temp408_149 #x0000000000000004))
(assert (= temp408_150 temp408_149))
(assert (= temp408_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_150)))
(assert (= temp408_152 #x0000000000000005))
(assert (= temp408_153 temp408_152))
(assert (= temp408_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_153)))
(assert (= temp408_156 var1310898))
(assert (= temp408_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_156)))
(assert (= temp408_155 temp408_157))
(assert (= var1322852
   (ite (bvslt temp408_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_158 #x0000000000000000))
(assert (= var1322852 temp408_158))
(assert (= temp408_159 #x0000000000000000))
(assert (= var1310898 temp408_159))
(assert (= temp408_161 var1310898))
(assert (= temp408_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_161)))
(assert (= temp408_160 temp408_162))
(assert (= var1322874 (bvsmod temp408_160 ARGNAME_groups_NAMEEND)))
(assert (= temp408_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp408_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp408_164 #x0000000000000001))
(assert (= var1322875 temp408_164))
(assert (= temp408_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp408_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_166 #x0000000000000001))
(assert (= var1322895 temp408_166))
(assert (= temp408_167 #x0000000000000001))
(assert (= var1311786 temp408_167))
(assert (= temp408_168 #x0000000000000000))
(assert (= temp408_169 temp408_168))
(assert (= temp408_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_169)))
(assert (= temp408_171 #x0000000000000001))
(assert (= temp408_172 temp408_171))
(assert (= temp408_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_172)))
(assert (= temp408_174 #x0000000000000002))
(assert (= temp408_175 temp408_174))
(assert (= temp408_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_175)))
(assert (= temp408_177 #x0000000000000003))
(assert (= temp408_178 temp408_177))
(assert (= temp408_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_178)))
(assert (= temp408_180 #x0000000000000004))
(assert (= temp408_181 temp408_180))
(assert (= temp408_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_181)))
(assert (= temp408_183 #x0000000000000005))
(assert (= temp408_184 temp408_183))
(assert (= temp408_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_184)))
(assert (= temp408_186 #x0000000000000000))
(assert (= temp408_187
   (ite (bvslt var1311786 temp408_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp408_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_187)))
(assert (= var1322903 temp408_188))
(assert (bvslt (ite (bvslt var1311786 temp408_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp408_189 #x0000000000000001))
(assert (= var1311786 temp408_189))
(assert (= temp408_191 var1311786))
(assert (= temp408_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_191)))
(assert (= temp408_190 temp408_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp408_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp408_193 #x0000000000000001))
(assert (= var1322908 temp408_193))
(assert (= temp408_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp408_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_195 #x0000000000000001))
(assert (= var1322975 temp408_195))
(assert (= temp408_196 #x0000000000000000))
(assert (= var1310898 temp408_196))
(assert (= temp408_197 #x0000000000000000))
(assert (= temp408_198 temp408_197))
(assert (= temp408_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp408_198)))
(assert (= temp408_200 #x0000000000000001))
(assert (= temp408_201 temp408_200))
(assert (= temp408_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp408_201)))
(assert (= temp408_203 #x0000000000000002))
(assert (= temp408_204 temp408_203))
(assert (= temp408_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp408_204)))
(assert (= temp408_206 #x0000000000000003))
(assert (= temp408_207 temp408_206))
(assert (= temp408_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp408_207)))
(assert (= temp408_209 #x0000000000000004))
(assert (= temp408_210 temp408_209))
(assert (= temp408_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp408_210)))
(assert (= temp408_212 #x0000000000000005))
(assert (= temp408_213 temp408_212))
(assert (= temp408_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp408_213)))
(assert (= temp408_215 #x0000000000000000))
(assert (= temp408_216
   (ite (bvslt var1310898 temp408_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp408_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp408_216)))
(assert (= var1322977 temp408_217))
(assert (bvslt (ite (bvslt var1310898 temp408_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp408_218 #x0000000000000000))
(assert (= var1310898 temp408_218))
(assert (= temp408_220 var1310898))
(assert (= temp408_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp408_220)))
(assert (= temp408_219 temp408_221))
(assert (= var1322980
   (ite (= var1322977 temp408_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp408_222 #x0000000000000001))
(assert (= var1322980 temp408_222))
(assert (= temp408_223 #x0000000000000002))
(assert (= var1848169 temp408_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp408_225 #x0000000000000001))
(assert (= var1323065 temp408_225))
(assert (= temp408_226 #x0000000000000001))
(assert (= var3486735 temp408_226))
(assert (= temp408_227 #x0000000000000001))
(assert (= var3814415 temp408_227))
(assert (= temp408_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp408_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_229 #x0000000000000001))
(assert (= var79986 temp408_229))
(assert (= temp408_230 #x0000000000000001))
(assert (= var80116 temp408_230))
(assert (= var4796905 var80116))
(assert (= temp408_231 #x0000000000000000))
(assert (= var4784306 temp408_231))
(assert (= temp408_232 #x0000000000000000))
(assert (= temp408_233
   (ite (bvslt var4784306 temp408_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp408_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_233)))
(assert (= var4796924 temp408_234))
(assert (bvslt (ite (bvslt var4784306 temp408_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp408_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp408_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp408_236 #x0000000000000001))
(assert (= var4796925 temp408_236))
(assert (= temp408_237 #x0000000000000000))
(assert (= var4996927 temp408_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp408_238 #x0000000000000002))
(assert (= var5125763 temp408_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_239 #x0000000000000000))
(assert (= var5191324 temp408_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp408_240 #x0000000000000001))
(assert (= var79986 temp408_240))
(assert (= temp408_241 #x0000000000000000))
(assert (= var7222036 temp408_241))
(assert (= var7222003 var7222036))
(assert (= var7090567 var7222003))
(assert (= var7090563 var7090567))
(assert (= var81597 var7090563))
(assert (= temp408_242 #x0000000000000000))
(assert (= var81597 temp408_242))
(model-add temp408_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp408_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp408_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






