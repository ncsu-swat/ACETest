(declare-fun temp1000_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1000_2 () (_ BitVec 64))
(declare-fun temp1000_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1000_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1000_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1000_6 () (_ BitVec 64))
(declare-fun temp1000_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1000_8 () (_ BitVec 64))
(declare-fun temp1000_9 () (_ BitVec 64))
(declare-fun temp1000_10 () (_ BitVec 64))
(declare-fun temp1000_11 () (_ BitVec 64))
(declare-fun temp1000_12 () (_ BitVec 64))
(declare-fun temp1000_13 () (_ BitVec 64))
(declare-fun temp1000_14 () (_ BitVec 64))
(declare-fun temp1000_15 () (_ BitVec 64))
(declare-fun temp1000_16 () (_ BitVec 64))
(declare-fun temp1000_17 () (_ BitVec 64))
(declare-fun temp1000_18 () (_ BitVec 64))
(declare-fun temp1000_19 () (_ BitVec 64))
(declare-fun temp1000_20 () (_ BitVec 64))
(declare-fun temp1000_21 () (_ BitVec 64))
(declare-fun temp1000_22 () (_ BitVec 64))
(declare-fun temp1000_23 () (_ BitVec 64))
(declare-fun temp1000_24 () (_ BitVec 64))
(declare-fun temp1000_25 () (_ BitVec 64))
(declare-fun temp1000_26 () (_ BitVec 64))
(declare-fun temp1000_27 () (_ BitVec 64))
(declare-fun temp1000_28 () (_ BitVec 64))
(declare-fun temp1000_29 () (_ BitVec 64))
(declare-fun temp1000_30 () (_ BitVec 64))
(declare-fun temp1000_31 () (_ BitVec 64))
(declare-fun temp1000_32 () (_ BitVec 64))
(declare-fun temp1000_33 () (_ BitVec 64))
(declare-fun temp1000_34 () (_ BitVec 64))
(declare-fun temp1000_35 () (_ BitVec 64))
(declare-fun temp1000_36 () (_ BitVec 64))
(declare-fun temp1000_37 () (_ BitVec 64))
(declare-fun temp1000_38 () (_ BitVec 64))
(declare-fun temp1000_39 () (_ BitVec 64))
(declare-fun temp1000_40 () (_ BitVec 64))
(declare-fun temp1000_41 () (_ BitVec 64))
(declare-fun temp1000_42 () (_ BitVec 64))
(declare-fun temp1000_43 () (_ BitVec 64))
(declare-fun temp1000_44 () (_ BitVec 64))
(declare-fun temp1000_45 () (_ BitVec 64))
(declare-fun temp1000_46 () (_ BitVec 64))
(declare-fun temp1000_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1000_48 () (_ BitVec 64))
(declare-fun temp1000_49 () (_ BitVec 64))
(declare-fun temp1000_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1000_51 () (_ BitVec 64))
(declare-fun temp1000_52 () (_ BitVec 64))
(declare-fun temp1000_53 () (_ BitVec 64))
(declare-fun temp1000_54 () (_ BitVec 64))
(declare-fun temp1000_55 () (_ BitVec 64))
(declare-fun temp1000_56 () (_ BitVec 64))
(declare-fun temp1000_57 () (_ BitVec 64))
(declare-fun temp1000_58 () (_ BitVec 64))
(declare-fun temp1000_59 () (_ BitVec 64))
(declare-fun temp1000_60 () (_ BitVec 64))
(declare-fun temp1000_61 () (_ BitVec 64))
(declare-fun temp1000_62 () (_ BitVec 64))
(declare-fun temp1000_63 () (_ BitVec 64))
(declare-fun temp1000_64 () (_ BitVec 64))
(declare-fun temp1000_65 () (_ BitVec 64))
(declare-fun temp1000_66 () (_ BitVec 64))
(declare-fun temp1000_67 () (_ BitVec 64))
(declare-fun temp1000_68 () (_ BitVec 64))
(declare-fun temp1000_69 () (_ BitVec 64))
(declare-fun temp1000_70 () (_ BitVec 64))
(declare-fun temp1000_71 () (_ BitVec 64))
(declare-fun temp1000_72 () (_ BitVec 64))
(declare-fun temp1000_73 () (_ BitVec 64))
(declare-fun temp1000_74 () (_ BitVec 64))
(declare-fun temp1000_75 () (_ BitVec 64))
(declare-fun temp1000_76 () (_ BitVec 64))
(declare-fun temp1000_77 () (_ BitVec 64))
(declare-fun temp1000_78 () (_ BitVec 64))
(declare-fun temp1000_79 () (_ BitVec 64))
(declare-fun temp1000_80 () (_ BitVec 64))
(declare-fun temp1000_81 () (_ BitVec 64))
(declare-fun temp1000_82 () (_ BitVec 64))
(declare-fun temp1000_83 () (_ BitVec 64))
(declare-fun temp1000_84 () (_ BitVec 64))
(declare-fun temp1000_85 () (_ BitVec 64))
(declare-fun temp1000_86 () (_ BitVec 64))
(declare-fun temp1000_87 () (_ BitVec 64))
(declare-fun temp1000_88 () (_ BitVec 64))
(declare-fun temp1000_89 () (_ BitVec 64))
(declare-fun temp1000_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1000_91 () (_ BitVec 64))
(declare-fun temp1000_92 () (_ BitVec 64))
(declare-fun temp1000_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1000_94 () (_ BitVec 64))
(declare-fun temp1000_95 () (_ BitVec 64))
(declare-fun temp1000_96 () (_ BitVec 64))
(declare-fun temp1000_97 () (_ BitVec 64))
(declare-fun temp1000_98 () (_ BitVec 64))
(declare-fun temp1000_99 () (_ BitVec 64))
(declare-fun temp1000_100 () (_ BitVec 64))
(declare-fun temp1000_101 () (_ BitVec 64))
(declare-fun temp1000_102 () (_ BitVec 64))
(declare-fun temp1000_103 () (_ BitVec 64))
(declare-fun temp1000_104 () (_ BitVec 64))
(declare-fun temp1000_105 () (_ BitVec 64))
(declare-fun temp1000_106 () (_ BitVec 64))
(declare-fun temp1000_107 () (_ BitVec 64))
(declare-fun temp1000_108 () (_ BitVec 64))
(declare-fun temp1000_109 () (_ BitVec 64))
(declare-fun temp1000_110 () (_ BitVec 64))
(declare-fun temp1000_111 () (_ BitVec 64))
(declare-fun temp1000_112 () (_ BitVec 64))
(declare-fun temp1000_113 () (_ BitVec 64))
(declare-fun temp1000_114 () (_ BitVec 64))
(declare-fun temp1000_115 () (_ BitVec 64))
(declare-fun temp1000_116 () (_ BitVec 64))
(declare-fun temp1000_117 () (_ BitVec 64))
(declare-fun temp1000_118 () (_ BitVec 64))
(declare-fun temp1000_119 () (_ BitVec 64))
(declare-fun temp1000_120 () (_ BitVec 64))
(declare-fun temp1000_121 () (_ BitVec 64))
(declare-fun temp1000_122 () (_ BitVec 64))
(declare-fun temp1000_123 () (_ BitVec 64))
(declare-fun temp1000_124 () (_ BitVec 64))
(declare-fun temp1000_125 () (_ BitVec 64))
(declare-fun temp1000_126 () (_ BitVec 64))
(declare-fun temp1000_127 () (_ BitVec 64))
(declare-fun temp1000_128 () (_ BitVec 64))
(declare-fun temp1000_129 () (_ BitVec 64))
(declare-fun temp1000_130 () (_ BitVec 64))
(declare-fun temp1000_131 () (_ BitVec 64))
(declare-fun temp1000_132 () (_ BitVec 64))
(declare-fun temp1000_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1000_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1000_135 () (_ BitVec 64))
(declare-fun temp1000_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1000_137 () (_ BitVec 64))
(declare-fun temp1000_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1000_139 () (_ BitVec 64))
(declare-fun temp1000_140 () (_ BitVec 64))
(declare-fun temp1000_141 () (_ BitVec 64))
(declare-fun temp1000_142 () (_ BitVec 64))
(declare-fun temp1000_143 () (_ BitVec 64))
(declare-fun temp1000_144 () (_ BitVec 64))
(declare-fun temp1000_145 () (_ BitVec 64))
(declare-fun temp1000_146 () (_ BitVec 64))
(declare-fun temp1000_147 () (_ BitVec 64))
(declare-fun temp1000_148 () (_ BitVec 64))
(declare-fun temp1000_149 () (_ BitVec 64))
(declare-fun temp1000_150 () (_ BitVec 64))
(declare-fun temp1000_151 () (_ BitVec 64))
(declare-fun temp1000_152 () (_ BitVec 64))
(declare-fun temp1000_153 () (_ BitVec 64))
(declare-fun temp1000_154 () (_ BitVec 64))
(declare-fun temp1000_156 () (_ BitVec 64))
(declare-fun temp1000_157 () (_ BitVec 64))
(declare-fun temp1000_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1000_158 () (_ BitVec 64))
(declare-fun temp1000_159 () (_ BitVec 64))
(declare-fun temp1000_161 () (_ BitVec 64))
(declare-fun temp1000_162 () (_ BitVec 64))
(declare-fun temp1000_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1000_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1000_164 () (_ BitVec 64))
(declare-fun temp1000_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1000_166 () (_ BitVec 64))
(declare-fun temp1000_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1000_168 () (_ BitVec 64))
(declare-fun temp1000_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1000_170 () (_ BitVec 64))
(declare-fun temp1000_171 () (_ BitVec 64))
(declare-fun temp1000_172 () (_ BitVec 64))
(declare-fun temp1000_173 () (_ BitVec 64))
(declare-fun temp1000_174 () (_ BitVec 64))
(declare-fun temp1000_175 () (_ BitVec 64))
(declare-fun temp1000_176 () (_ BitVec 64))
(declare-fun temp1000_177 () (_ BitVec 64))
(declare-fun temp1000_178 () (_ BitVec 64))
(declare-fun temp1000_179 () (_ BitVec 64))
(declare-fun temp1000_180 () (_ BitVec 64))
(declare-fun temp1000_181 () (_ BitVec 64))
(declare-fun temp1000_182 () (_ BitVec 64))
(declare-fun temp1000_183 () (_ BitVec 64))
(declare-fun temp1000_184 () (_ BitVec 64))
(declare-fun temp1000_185 () (_ BitVec 64))
(declare-fun temp1000_186 () (_ BitVec 64))
(declare-fun temp1000_187 () (_ BitVec 64))
(declare-fun temp1000_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1000_189 () (_ BitVec 64))
(declare-fun temp1000_191 () (_ BitVec 64))
(declare-fun temp1000_192 () (_ BitVec 64))
(declare-fun temp1000_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1000_193 () (_ BitVec 64))
(declare-fun temp1000_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1000_195 () (_ BitVec 64))
(declare-fun temp1000_196 () (_ BitVec 64))
(declare-fun temp1000_197 () (_ BitVec 64))
(declare-fun temp1000_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1000_199 () (_ BitVec 64))
(declare-fun temp1000_200 () (_ BitVec 64))
(declare-fun temp1000_201 () (_ BitVec 64))
(declare-fun temp1000_202 () (_ BitVec 64))
(declare-fun temp1000_203 () (_ BitVec 64))
(declare-fun temp1000_204 () (_ BitVec 64))
(declare-fun temp1000_205 () (_ BitVec 64))
(declare-fun temp1000_206 () (_ BitVec 64))
(declare-fun temp1000_207 () (_ BitVec 64))
(declare-fun temp1000_208 () (_ BitVec 64))
(declare-fun temp1000_209 () (_ BitVec 64))
(declare-fun temp1000_210 () (_ BitVec 64))
(declare-fun temp1000_211 () (_ BitVec 64))
(declare-fun temp1000_212 () (_ BitVec 64))
(declare-fun temp1000_213 () (_ BitVec 64))
(declare-fun temp1000_214 () (_ BitVec 64))
(declare-fun temp1000_215 () (_ BitVec 64))
(declare-fun temp1000_216 () (_ BitVec 64))
(declare-fun temp1000_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1000_218 () (_ BitVec 64))
(declare-fun temp1000_220 () (_ BitVec 64))
(declare-fun temp1000_221 () (_ BitVec 64))
(declare-fun temp1000_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1000_222 () (_ BitVec 64))
(declare-fun temp1000_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1000_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1000_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1000_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1000_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1000_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1000_229 () (_ BitVec 64))
(declare-fun temp1000_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1000_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1000_232 () (_ BitVec 64))
(declare-fun temp1000_233 () (_ BitVec 64))
(declare-fun temp1000_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1000_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1000_236 () (_ BitVec 64))
(declare-fun temp1000_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1000_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1000_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp1000_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp1000_241 () (_ BitVec 64))
(assert (= temp1000_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1000_1)))
(assert (= temp1000_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1000_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_3 #x0000000000000000))
(assert (= var79869 temp1000_3))
(assert (= temp1000_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1000_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_5 #x0000000000000000))
(assert (= var79914 temp1000_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1000_6 #x0000000000000000))
(assert (= temp1000_7 temp1000_6))
(assert (= temp1000_8 (select ARGNAME_padding_NAMEEND_VAL temp1000_7)))
(assert (= temp1000_9 #x0000000000000001))
(assert (= temp1000_10 temp1000_9))
(assert (= temp1000_11 (select ARGNAME_padding_NAMEEND_VAL temp1000_10)))
(assert (= temp1000_12 #x0000000000000002))
(assert (= temp1000_13 temp1000_12))
(assert (= temp1000_14 (select ARGNAME_padding_NAMEEND_VAL temp1000_13)))
(assert (= temp1000_15 #x0000000000000003))
(assert (= temp1000_16 temp1000_15))
(assert (= temp1000_17 (select ARGNAME_padding_NAMEEND_VAL temp1000_16)))
(assert (= temp1000_18 #x0000000000000004))
(assert (= temp1000_19 temp1000_18))
(assert (= temp1000_20 (select ARGNAME_padding_NAMEEND_VAL temp1000_19)))
(assert (= temp1000_21 #x0000000000000005))
(assert (= temp1000_22 temp1000_21))
(assert (= temp1000_23 (select ARGNAME_padding_NAMEEND_VAL temp1000_22)))
(assert (= temp1000_24 #x0000000000000000))
(assert (= temp1000_25 #x0000000000000000))
(assert (= temp1000_26 temp1000_25))
(assert (= temp1000_27 (select ARGNAME_padding_NAMEEND_VAL temp1000_26)))
(assert (= temp1000_28 #x0000000000000000))
(assert (= temp1000_29 #x0000000000000001))
(assert (= temp1000_30 temp1000_29))
(assert (= temp1000_31 (select ARGNAME_padding_NAMEEND_VAL temp1000_30)))
(assert (= temp1000_32 #x0000000000000000))
(assert (= temp1000_33 #x0000000000000002))
(assert (= temp1000_34 temp1000_33))
(assert (= temp1000_35 (select ARGNAME_padding_NAMEEND_VAL temp1000_34)))
(assert (= temp1000_36 #x0000000000000000))
(assert (= temp1000_37 #x0000000000000003))
(assert (= temp1000_38 temp1000_37))
(assert (= temp1000_39 (select ARGNAME_padding_NAMEEND_VAL temp1000_38)))
(assert (= temp1000_40 #x0000000000000000))
(assert (= temp1000_41 #x0000000000000004))
(assert (= temp1000_42 temp1000_41))
(assert (= temp1000_43 (select ARGNAME_padding_NAMEEND_VAL temp1000_42)))
(assert (= temp1000_44 #x0000000000000000))
(assert (= temp1000_45 #x0000000000000005))
(assert (= temp1000_46 temp1000_45))
(assert (= temp1000_47 (select ARGNAME_padding_NAMEEND_VAL temp1000_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1000_27 temp1000_24)
             (bvslt temp1000_31 temp1000_28)
             (bvslt temp1000_35 temp1000_32)
             (bvslt temp1000_39 temp1000_36)
             (bvslt temp1000_43 temp1000_40)
             (bvslt temp1000_47 temp1000_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_48 #x0000000000000000))
(assert (= var1322786 temp1000_48))
(assert (= temp1000_49 #x0000000000000000))
(assert (= temp1000_50 temp1000_49))
(assert (= temp1000_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_50)))
(assert (= temp1000_52 #x0000000000000001))
(assert (= temp1000_53 temp1000_52))
(assert (= temp1000_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_53)))
(assert (= temp1000_55 #x0000000000000002))
(assert (= temp1000_56 temp1000_55))
(assert (= temp1000_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_56)))
(assert (= temp1000_58 #x0000000000000003))
(assert (= temp1000_59 temp1000_58))
(assert (= temp1000_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_59)))
(assert (= temp1000_61 #x0000000000000004))
(assert (= temp1000_62 temp1000_61))
(assert (= temp1000_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_62)))
(assert (= temp1000_64 #x0000000000000005))
(assert (= temp1000_65 temp1000_64))
(assert (= temp1000_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_65)))
(assert (= temp1000_67 #x0000000000000000))
(assert (= temp1000_68 #x0000000000000000))
(assert (= temp1000_69 temp1000_68))
(assert (= temp1000_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_69)))
(assert (= temp1000_71 #x0000000000000000))
(assert (= temp1000_72 #x0000000000000001))
(assert (= temp1000_73 temp1000_72))
(assert (= temp1000_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_73)))
(assert (= temp1000_75 #x0000000000000000))
(assert (= temp1000_76 #x0000000000000002))
(assert (= temp1000_77 temp1000_76))
(assert (= temp1000_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_77)))
(assert (= temp1000_79 #x0000000000000000))
(assert (= temp1000_80 #x0000000000000003))
(assert (= temp1000_81 temp1000_80))
(assert (= temp1000_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_81)))
(assert (= temp1000_83 #x0000000000000000))
(assert (= temp1000_84 #x0000000000000004))
(assert (= temp1000_85 temp1000_84))
(assert (= temp1000_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_85)))
(assert (= temp1000_87 #x0000000000000000))
(assert (= temp1000_88 #x0000000000000005))
(assert (= temp1000_89 temp1000_88))
(assert (= temp1000_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1000_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1000_70 temp1000_67)
             (bvslt temp1000_74 temp1000_71)
             (bvslt temp1000_78 temp1000_75)
             (bvslt temp1000_82 temp1000_79)
             (bvslt temp1000_86 temp1000_83)
             (bvslt temp1000_90 temp1000_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_91 #x0000000000000000))
(assert (= var1322797 temp1000_91))
(assert (= temp1000_92 #x0000000000000000))
(assert (= temp1000_93 temp1000_92))
(assert (= temp1000_94 (select ARGNAME_stride_NAMEEND_VAL temp1000_93)))
(assert (= temp1000_95 #x0000000000000001))
(assert (= temp1000_96 temp1000_95))
(assert (= temp1000_97 (select ARGNAME_stride_NAMEEND_VAL temp1000_96)))
(assert (= temp1000_98 #x0000000000000002))
(assert (= temp1000_99 temp1000_98))
(assert (= temp1000_100 (select ARGNAME_stride_NAMEEND_VAL temp1000_99)))
(assert (= temp1000_101 #x0000000000000003))
(assert (= temp1000_102 temp1000_101))
(assert (= temp1000_103 (select ARGNAME_stride_NAMEEND_VAL temp1000_102)))
(assert (= temp1000_104 #x0000000000000004))
(assert (= temp1000_105 temp1000_104))
(assert (= temp1000_106 (select ARGNAME_stride_NAMEEND_VAL temp1000_105)))
(assert (= temp1000_107 #x0000000000000005))
(assert (= temp1000_108 temp1000_107))
(assert (= temp1000_109 (select ARGNAME_stride_NAMEEND_VAL temp1000_108)))
(assert (= temp1000_110 #x0000000000000000))
(assert (= temp1000_111 #x0000000000000000))
(assert (= temp1000_112 temp1000_111))
(assert (= temp1000_113 (select ARGNAME_stride_NAMEEND_VAL temp1000_112)))
(assert (= temp1000_114 #x0000000000000000))
(assert (= temp1000_115 #x0000000000000001))
(assert (= temp1000_116 temp1000_115))
(assert (= temp1000_117 (select ARGNAME_stride_NAMEEND_VAL temp1000_116)))
(assert (= temp1000_118 #x0000000000000000))
(assert (= temp1000_119 #x0000000000000002))
(assert (= temp1000_120 temp1000_119))
(assert (= temp1000_121 (select ARGNAME_stride_NAMEEND_VAL temp1000_120)))
(assert (= temp1000_122 #x0000000000000000))
(assert (= temp1000_123 #x0000000000000003))
(assert (= temp1000_124 temp1000_123))
(assert (= temp1000_125 (select ARGNAME_stride_NAMEEND_VAL temp1000_124)))
(assert (= temp1000_126 #x0000000000000000))
(assert (= temp1000_127 #x0000000000000004))
(assert (= temp1000_128 temp1000_127))
(assert (= temp1000_129 (select ARGNAME_stride_NAMEEND_VAL temp1000_128)))
(assert (= temp1000_130 #x0000000000000000))
(assert (= temp1000_131 #x0000000000000005))
(assert (= temp1000_132 temp1000_131))
(assert (= temp1000_133 (select ARGNAME_stride_NAMEEND_VAL temp1000_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1000_113 temp1000_110)
             (bvsle temp1000_117 temp1000_114)
             (bvsle temp1000_121 temp1000_118)
             (bvsle temp1000_125 temp1000_122)
             (bvsle temp1000_129 temp1000_126)
             (bvsle temp1000_133 temp1000_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_134 #x0000000000000000))
(assert (= var1322807 temp1000_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_135 #x0000000000000001))
(assert (= var1322819 temp1000_135))
(assert (= temp1000_136 #x0000000000000000))
(assert (= var1310898 temp1000_136))
(assert (= temp1000_137 #x0000000000000000))
(assert (= temp1000_138 temp1000_137))
(assert (= temp1000_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_138)))
(assert (= temp1000_140 #x0000000000000001))
(assert (= temp1000_141 temp1000_140))
(assert (= temp1000_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_141)))
(assert (= temp1000_143 #x0000000000000002))
(assert (= temp1000_144 temp1000_143))
(assert (= temp1000_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_144)))
(assert (= temp1000_146 #x0000000000000003))
(assert (= temp1000_147 temp1000_146))
(assert (= temp1000_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_147)))
(assert (= temp1000_149 #x0000000000000004))
(assert (= temp1000_150 temp1000_149))
(assert (= temp1000_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_150)))
(assert (= temp1000_152 #x0000000000000005))
(assert (= temp1000_153 temp1000_152))
(assert (= temp1000_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_153)))
(assert (= temp1000_156 var1310898))
(assert (= temp1000_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_156)))
(assert (= temp1000_155 temp1000_157))
(assert (= var1322852
   (ite (bvslt temp1000_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_158 #x0000000000000000))
(assert (= var1322852 temp1000_158))
(assert (= temp1000_159 #x0000000000000000))
(assert (= var1310898 temp1000_159))
(assert (= temp1000_161 var1310898))
(assert (= temp1000_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_161)))
(assert (= temp1000_160 temp1000_162))
(assert (= var1322874 (bvsmod temp1000_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1000_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1000_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1000_164 #x0000000000000001))
(assert (= var1322875 temp1000_164))
(assert (= temp1000_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1000_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_166 #x0000000000000001))
(assert (= var1322895 temp1000_166))
(assert (= temp1000_167 #x0000000000000001))
(assert (= var1311786 temp1000_167))
(assert (= temp1000_168 #x0000000000000000))
(assert (= temp1000_169 temp1000_168))
(assert (= temp1000_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_169)))
(assert (= temp1000_171 #x0000000000000001))
(assert (= temp1000_172 temp1000_171))
(assert (= temp1000_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_172)))
(assert (= temp1000_174 #x0000000000000002))
(assert (= temp1000_175 temp1000_174))
(assert (= temp1000_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_175)))
(assert (= temp1000_177 #x0000000000000003))
(assert (= temp1000_178 temp1000_177))
(assert (= temp1000_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_178)))
(assert (= temp1000_180 #x0000000000000004))
(assert (= temp1000_181 temp1000_180))
(assert (= temp1000_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_181)))
(assert (= temp1000_183 #x0000000000000005))
(assert (= temp1000_184 temp1000_183))
(assert (= temp1000_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_184)))
(assert (= temp1000_186 #x0000000000000000))
(assert (= temp1000_187
   (ite (bvslt var1311786 temp1000_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1000_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_187)))
(assert (= var1322903 temp1000_188))
(assert (bvslt (ite (bvslt var1311786 temp1000_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1000_189 #x0000000000000001))
(assert (= var1311786 temp1000_189))
(assert (= temp1000_191 var1311786))
(assert (= temp1000_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_191)))
(assert (= temp1000_190 temp1000_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1000_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1000_193 #x0000000000000001))
(assert (= var1322908 temp1000_193))
(assert (= temp1000_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1000_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_195 #x0000000000000001))
(assert (= var1322975 temp1000_195))
(assert (= temp1000_196 #x0000000000000000))
(assert (= var1310898 temp1000_196))
(assert (= temp1000_197 #x0000000000000000))
(assert (= temp1000_198 temp1000_197))
(assert (= temp1000_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1000_198)))
(assert (= temp1000_200 #x0000000000000001))
(assert (= temp1000_201 temp1000_200))
(assert (= temp1000_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1000_201)))
(assert (= temp1000_203 #x0000000000000002))
(assert (= temp1000_204 temp1000_203))
(assert (= temp1000_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1000_204)))
(assert (= temp1000_206 #x0000000000000003))
(assert (= temp1000_207 temp1000_206))
(assert (= temp1000_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1000_207)))
(assert (= temp1000_209 #x0000000000000004))
(assert (= temp1000_210 temp1000_209))
(assert (= temp1000_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1000_210)))
(assert (= temp1000_212 #x0000000000000005))
(assert (= temp1000_213 temp1000_212))
(assert (= temp1000_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1000_213)))
(assert (= temp1000_215 #x0000000000000000))
(assert (= temp1000_216
   (ite (bvslt var1310898 temp1000_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1000_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1000_216)))
(assert (= var1322977 temp1000_217))
(assert (bvslt (ite (bvslt var1310898 temp1000_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1000_218 #x0000000000000000))
(assert (= var1310898 temp1000_218))
(assert (= temp1000_220 var1310898))
(assert (= temp1000_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1000_220)))
(assert (= temp1000_219 temp1000_221))
(assert (= var1322980
   (ite (= var1322977 temp1000_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1000_222 #x0000000000000001))
(assert (= var1322980 temp1000_222))
(assert (= temp1000_223 #x0000000000000002))
(assert (= var1848169 temp1000_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1000_225 #x0000000000000001))
(assert (= var1323065 temp1000_225))
(assert (= temp1000_226 #x0000000000000001))
(assert (= var3486735 temp1000_226))
(assert (= temp1000_227 #x0000000000000001))
(assert (= var3814415 temp1000_227))
(assert (= temp1000_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1000_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_229 #x0000000000000001))
(assert (= var79986 temp1000_229))
(assert (= temp1000_230 #x0000000000000001))
(assert (= var80116 temp1000_230))
(assert (= var4796905 var80116))
(assert (= temp1000_231 #x0000000000000000))
(assert (= var4784306 temp1000_231))
(assert (= temp1000_232 #x0000000000000000))
(assert (= temp1000_233
   (ite (bvslt var4784306 temp1000_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1000_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_233)))
(assert (= var4796924 temp1000_234))
(assert (bvslt (ite (bvslt var4784306 temp1000_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1000_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1000_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1000_236 #x0000000000000001))
(assert (= var4796925 temp1000_236))
(assert (= temp1000_237 #x0000000000000000))
(assert (= var4996927 temp1000_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1000_238 #x0000000000000002))
(assert (= var5125763 temp1000_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_239 #x0000000000000000))
(assert (= var5191324 temp1000_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp1000_240 #x0000000000000000))
(assert (= var6631824 temp1000_240))
(assert (= temp1000_241 #x0000000000000001))
(assert (= var79986 temp1000_241))
(model-add temp1000_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1000_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1000_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






