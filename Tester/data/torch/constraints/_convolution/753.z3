(declare-fun temp1001_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1001_2 () (_ BitVec 64))
(declare-fun temp1001_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1001_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1001_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1001_6 () (_ BitVec 64))
(declare-fun temp1001_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1001_8 () (_ BitVec 64))
(declare-fun temp1001_9 () (_ BitVec 64))
(declare-fun temp1001_10 () (_ BitVec 64))
(declare-fun temp1001_11 () (_ BitVec 64))
(declare-fun temp1001_12 () (_ BitVec 64))
(declare-fun temp1001_13 () (_ BitVec 64))
(declare-fun temp1001_14 () (_ BitVec 64))
(declare-fun temp1001_15 () (_ BitVec 64))
(declare-fun temp1001_16 () (_ BitVec 64))
(declare-fun temp1001_17 () (_ BitVec 64))
(declare-fun temp1001_18 () (_ BitVec 64))
(declare-fun temp1001_19 () (_ BitVec 64))
(declare-fun temp1001_20 () (_ BitVec 64))
(declare-fun temp1001_21 () (_ BitVec 64))
(declare-fun temp1001_22 () (_ BitVec 64))
(declare-fun temp1001_23 () (_ BitVec 64))
(declare-fun temp1001_24 () (_ BitVec 64))
(declare-fun temp1001_25 () (_ BitVec 64))
(declare-fun temp1001_26 () (_ BitVec 64))
(declare-fun temp1001_27 () (_ BitVec 64))
(declare-fun temp1001_28 () (_ BitVec 64))
(declare-fun temp1001_29 () (_ BitVec 64))
(declare-fun temp1001_30 () (_ BitVec 64))
(declare-fun temp1001_31 () (_ BitVec 64))
(declare-fun temp1001_32 () (_ BitVec 64))
(declare-fun temp1001_33 () (_ BitVec 64))
(declare-fun temp1001_34 () (_ BitVec 64))
(declare-fun temp1001_35 () (_ BitVec 64))
(declare-fun temp1001_36 () (_ BitVec 64))
(declare-fun temp1001_37 () (_ BitVec 64))
(declare-fun temp1001_38 () (_ BitVec 64))
(declare-fun temp1001_39 () (_ BitVec 64))
(declare-fun temp1001_40 () (_ BitVec 64))
(declare-fun temp1001_41 () (_ BitVec 64))
(declare-fun temp1001_42 () (_ BitVec 64))
(declare-fun temp1001_43 () (_ BitVec 64))
(declare-fun temp1001_44 () (_ BitVec 64))
(declare-fun temp1001_45 () (_ BitVec 64))
(declare-fun temp1001_46 () (_ BitVec 64))
(declare-fun temp1001_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1001_48 () (_ BitVec 64))
(declare-fun temp1001_49 () (_ BitVec 64))
(declare-fun temp1001_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1001_51 () (_ BitVec 64))
(declare-fun temp1001_52 () (_ BitVec 64))
(declare-fun temp1001_53 () (_ BitVec 64))
(declare-fun temp1001_54 () (_ BitVec 64))
(declare-fun temp1001_55 () (_ BitVec 64))
(declare-fun temp1001_56 () (_ BitVec 64))
(declare-fun temp1001_57 () (_ BitVec 64))
(declare-fun temp1001_58 () (_ BitVec 64))
(declare-fun temp1001_59 () (_ BitVec 64))
(declare-fun temp1001_60 () (_ BitVec 64))
(declare-fun temp1001_61 () (_ BitVec 64))
(declare-fun temp1001_62 () (_ BitVec 64))
(declare-fun temp1001_63 () (_ BitVec 64))
(declare-fun temp1001_64 () (_ BitVec 64))
(declare-fun temp1001_65 () (_ BitVec 64))
(declare-fun temp1001_66 () (_ BitVec 64))
(declare-fun temp1001_67 () (_ BitVec 64))
(declare-fun temp1001_68 () (_ BitVec 64))
(declare-fun temp1001_69 () (_ BitVec 64))
(declare-fun temp1001_70 () (_ BitVec 64))
(declare-fun temp1001_71 () (_ BitVec 64))
(declare-fun temp1001_72 () (_ BitVec 64))
(declare-fun temp1001_73 () (_ BitVec 64))
(declare-fun temp1001_74 () (_ BitVec 64))
(declare-fun temp1001_75 () (_ BitVec 64))
(declare-fun temp1001_76 () (_ BitVec 64))
(declare-fun temp1001_77 () (_ BitVec 64))
(declare-fun temp1001_78 () (_ BitVec 64))
(declare-fun temp1001_79 () (_ BitVec 64))
(declare-fun temp1001_80 () (_ BitVec 64))
(declare-fun temp1001_81 () (_ BitVec 64))
(declare-fun temp1001_82 () (_ BitVec 64))
(declare-fun temp1001_83 () (_ BitVec 64))
(declare-fun temp1001_84 () (_ BitVec 64))
(declare-fun temp1001_85 () (_ BitVec 64))
(declare-fun temp1001_86 () (_ BitVec 64))
(declare-fun temp1001_87 () (_ BitVec 64))
(declare-fun temp1001_88 () (_ BitVec 64))
(declare-fun temp1001_89 () (_ BitVec 64))
(declare-fun temp1001_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1001_91 () (_ BitVec 64))
(declare-fun temp1001_92 () (_ BitVec 64))
(declare-fun temp1001_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1001_94 () (_ BitVec 64))
(declare-fun temp1001_95 () (_ BitVec 64))
(declare-fun temp1001_96 () (_ BitVec 64))
(declare-fun temp1001_97 () (_ BitVec 64))
(declare-fun temp1001_98 () (_ BitVec 64))
(declare-fun temp1001_99 () (_ BitVec 64))
(declare-fun temp1001_100 () (_ BitVec 64))
(declare-fun temp1001_101 () (_ BitVec 64))
(declare-fun temp1001_102 () (_ BitVec 64))
(declare-fun temp1001_103 () (_ BitVec 64))
(declare-fun temp1001_104 () (_ BitVec 64))
(declare-fun temp1001_105 () (_ BitVec 64))
(declare-fun temp1001_106 () (_ BitVec 64))
(declare-fun temp1001_107 () (_ BitVec 64))
(declare-fun temp1001_108 () (_ BitVec 64))
(declare-fun temp1001_109 () (_ BitVec 64))
(declare-fun temp1001_110 () (_ BitVec 64))
(declare-fun temp1001_111 () (_ BitVec 64))
(declare-fun temp1001_112 () (_ BitVec 64))
(declare-fun temp1001_113 () (_ BitVec 64))
(declare-fun temp1001_114 () (_ BitVec 64))
(declare-fun temp1001_115 () (_ BitVec 64))
(declare-fun temp1001_116 () (_ BitVec 64))
(declare-fun temp1001_117 () (_ BitVec 64))
(declare-fun temp1001_118 () (_ BitVec 64))
(declare-fun temp1001_119 () (_ BitVec 64))
(declare-fun temp1001_120 () (_ BitVec 64))
(declare-fun temp1001_121 () (_ BitVec 64))
(declare-fun temp1001_122 () (_ BitVec 64))
(declare-fun temp1001_123 () (_ BitVec 64))
(declare-fun temp1001_124 () (_ BitVec 64))
(declare-fun temp1001_125 () (_ BitVec 64))
(declare-fun temp1001_126 () (_ BitVec 64))
(declare-fun temp1001_127 () (_ BitVec 64))
(declare-fun temp1001_128 () (_ BitVec 64))
(declare-fun temp1001_129 () (_ BitVec 64))
(declare-fun temp1001_130 () (_ BitVec 64))
(declare-fun temp1001_131 () (_ BitVec 64))
(declare-fun temp1001_132 () (_ BitVec 64))
(declare-fun temp1001_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1001_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1001_135 () (_ BitVec 64))
(declare-fun temp1001_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1001_137 () (_ BitVec 64))
(declare-fun temp1001_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1001_139 () (_ BitVec 64))
(declare-fun temp1001_140 () (_ BitVec 64))
(declare-fun temp1001_141 () (_ BitVec 64))
(declare-fun temp1001_142 () (_ BitVec 64))
(declare-fun temp1001_143 () (_ BitVec 64))
(declare-fun temp1001_144 () (_ BitVec 64))
(declare-fun temp1001_145 () (_ BitVec 64))
(declare-fun temp1001_146 () (_ BitVec 64))
(declare-fun temp1001_147 () (_ BitVec 64))
(declare-fun temp1001_148 () (_ BitVec 64))
(declare-fun temp1001_149 () (_ BitVec 64))
(declare-fun temp1001_150 () (_ BitVec 64))
(declare-fun temp1001_151 () (_ BitVec 64))
(declare-fun temp1001_152 () (_ BitVec 64))
(declare-fun temp1001_153 () (_ BitVec 64))
(declare-fun temp1001_154 () (_ BitVec 64))
(declare-fun temp1001_156 () (_ BitVec 64))
(declare-fun temp1001_157 () (_ BitVec 64))
(declare-fun temp1001_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1001_158 () (_ BitVec 64))
(declare-fun temp1001_159 () (_ BitVec 64))
(declare-fun temp1001_161 () (_ BitVec 64))
(declare-fun temp1001_162 () (_ BitVec 64))
(declare-fun temp1001_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1001_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1001_164 () (_ BitVec 64))
(declare-fun temp1001_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1001_166 () (_ BitVec 64))
(declare-fun temp1001_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1001_168 () (_ BitVec 64))
(declare-fun temp1001_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1001_170 () (_ BitVec 64))
(declare-fun temp1001_171 () (_ BitVec 64))
(declare-fun temp1001_172 () (_ BitVec 64))
(declare-fun temp1001_173 () (_ BitVec 64))
(declare-fun temp1001_174 () (_ BitVec 64))
(declare-fun temp1001_175 () (_ BitVec 64))
(declare-fun temp1001_176 () (_ BitVec 64))
(declare-fun temp1001_177 () (_ BitVec 64))
(declare-fun temp1001_178 () (_ BitVec 64))
(declare-fun temp1001_179 () (_ BitVec 64))
(declare-fun temp1001_180 () (_ BitVec 64))
(declare-fun temp1001_181 () (_ BitVec 64))
(declare-fun temp1001_182 () (_ BitVec 64))
(declare-fun temp1001_183 () (_ BitVec 64))
(declare-fun temp1001_184 () (_ BitVec 64))
(declare-fun temp1001_185 () (_ BitVec 64))
(declare-fun temp1001_186 () (_ BitVec 64))
(declare-fun temp1001_187 () (_ BitVec 64))
(declare-fun temp1001_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1001_189 () (_ BitVec 64))
(declare-fun temp1001_191 () (_ BitVec 64))
(declare-fun temp1001_192 () (_ BitVec 64))
(declare-fun temp1001_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1001_193 () (_ BitVec 64))
(declare-fun temp1001_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1001_195 () (_ BitVec 64))
(declare-fun temp1001_196 () (_ BitVec 64))
(declare-fun temp1001_197 () (_ BitVec 64))
(declare-fun temp1001_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1001_199 () (_ BitVec 64))
(declare-fun temp1001_200 () (_ BitVec 64))
(declare-fun temp1001_201 () (_ BitVec 64))
(declare-fun temp1001_202 () (_ BitVec 64))
(declare-fun temp1001_203 () (_ BitVec 64))
(declare-fun temp1001_204 () (_ BitVec 64))
(declare-fun temp1001_205 () (_ BitVec 64))
(declare-fun temp1001_206 () (_ BitVec 64))
(declare-fun temp1001_207 () (_ BitVec 64))
(declare-fun temp1001_208 () (_ BitVec 64))
(declare-fun temp1001_209 () (_ BitVec 64))
(declare-fun temp1001_210 () (_ BitVec 64))
(declare-fun temp1001_211 () (_ BitVec 64))
(declare-fun temp1001_212 () (_ BitVec 64))
(declare-fun temp1001_213 () (_ BitVec 64))
(declare-fun temp1001_214 () (_ BitVec 64))
(declare-fun temp1001_215 () (_ BitVec 64))
(declare-fun temp1001_216 () (_ BitVec 64))
(declare-fun temp1001_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1001_218 () (_ BitVec 64))
(declare-fun temp1001_220 () (_ BitVec 64))
(declare-fun temp1001_221 () (_ BitVec 64))
(declare-fun temp1001_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1001_222 () (_ BitVec 64))
(declare-fun temp1001_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1001_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1001_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1001_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1001_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1001_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1001_229 () (_ BitVec 64))
(declare-fun temp1001_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1001_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1001_232 () (_ BitVec 64))
(declare-fun temp1001_233 () (_ BitVec 64))
(declare-fun temp1001_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1001_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1001_236 () (_ BitVec 64))
(declare-fun temp1001_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1001_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1001_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp1001_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp1001_241 () (_ BitVec 64))
(assert (= temp1001_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1001_1)))
(assert (= temp1001_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1001_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_3 #x0000000000000000))
(assert (= var79869 temp1001_3))
(assert (= temp1001_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1001_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_5 #x0000000000000000))
(assert (= var79914 temp1001_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1001_6 #x0000000000000000))
(assert (= temp1001_7 temp1001_6))
(assert (= temp1001_8 (select ARGNAME_padding_NAMEEND_VAL temp1001_7)))
(assert (= temp1001_9 #x0000000000000001))
(assert (= temp1001_10 temp1001_9))
(assert (= temp1001_11 (select ARGNAME_padding_NAMEEND_VAL temp1001_10)))
(assert (= temp1001_12 #x0000000000000002))
(assert (= temp1001_13 temp1001_12))
(assert (= temp1001_14 (select ARGNAME_padding_NAMEEND_VAL temp1001_13)))
(assert (= temp1001_15 #x0000000000000003))
(assert (= temp1001_16 temp1001_15))
(assert (= temp1001_17 (select ARGNAME_padding_NAMEEND_VAL temp1001_16)))
(assert (= temp1001_18 #x0000000000000004))
(assert (= temp1001_19 temp1001_18))
(assert (= temp1001_20 (select ARGNAME_padding_NAMEEND_VAL temp1001_19)))
(assert (= temp1001_21 #x0000000000000005))
(assert (= temp1001_22 temp1001_21))
(assert (= temp1001_23 (select ARGNAME_padding_NAMEEND_VAL temp1001_22)))
(assert (= temp1001_24 #x0000000000000000))
(assert (= temp1001_25 #x0000000000000000))
(assert (= temp1001_26 temp1001_25))
(assert (= temp1001_27 (select ARGNAME_padding_NAMEEND_VAL temp1001_26)))
(assert (= temp1001_28 #x0000000000000000))
(assert (= temp1001_29 #x0000000000000001))
(assert (= temp1001_30 temp1001_29))
(assert (= temp1001_31 (select ARGNAME_padding_NAMEEND_VAL temp1001_30)))
(assert (= temp1001_32 #x0000000000000000))
(assert (= temp1001_33 #x0000000000000002))
(assert (= temp1001_34 temp1001_33))
(assert (= temp1001_35 (select ARGNAME_padding_NAMEEND_VAL temp1001_34)))
(assert (= temp1001_36 #x0000000000000000))
(assert (= temp1001_37 #x0000000000000003))
(assert (= temp1001_38 temp1001_37))
(assert (= temp1001_39 (select ARGNAME_padding_NAMEEND_VAL temp1001_38)))
(assert (= temp1001_40 #x0000000000000000))
(assert (= temp1001_41 #x0000000000000004))
(assert (= temp1001_42 temp1001_41))
(assert (= temp1001_43 (select ARGNAME_padding_NAMEEND_VAL temp1001_42)))
(assert (= temp1001_44 #x0000000000000000))
(assert (= temp1001_45 #x0000000000000005))
(assert (= temp1001_46 temp1001_45))
(assert (= temp1001_47 (select ARGNAME_padding_NAMEEND_VAL temp1001_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1001_27 temp1001_24)
             (bvslt temp1001_31 temp1001_28)
             (bvslt temp1001_35 temp1001_32)
             (bvslt temp1001_39 temp1001_36)
             (bvslt temp1001_43 temp1001_40)
             (bvslt temp1001_47 temp1001_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_48 #x0000000000000000))
(assert (= var1322786 temp1001_48))
(assert (= temp1001_49 #x0000000000000000))
(assert (= temp1001_50 temp1001_49))
(assert (= temp1001_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_50)))
(assert (= temp1001_52 #x0000000000000001))
(assert (= temp1001_53 temp1001_52))
(assert (= temp1001_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_53)))
(assert (= temp1001_55 #x0000000000000002))
(assert (= temp1001_56 temp1001_55))
(assert (= temp1001_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_56)))
(assert (= temp1001_58 #x0000000000000003))
(assert (= temp1001_59 temp1001_58))
(assert (= temp1001_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_59)))
(assert (= temp1001_61 #x0000000000000004))
(assert (= temp1001_62 temp1001_61))
(assert (= temp1001_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_62)))
(assert (= temp1001_64 #x0000000000000005))
(assert (= temp1001_65 temp1001_64))
(assert (= temp1001_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_65)))
(assert (= temp1001_67 #x0000000000000000))
(assert (= temp1001_68 #x0000000000000000))
(assert (= temp1001_69 temp1001_68))
(assert (= temp1001_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_69)))
(assert (= temp1001_71 #x0000000000000000))
(assert (= temp1001_72 #x0000000000000001))
(assert (= temp1001_73 temp1001_72))
(assert (= temp1001_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_73)))
(assert (= temp1001_75 #x0000000000000000))
(assert (= temp1001_76 #x0000000000000002))
(assert (= temp1001_77 temp1001_76))
(assert (= temp1001_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_77)))
(assert (= temp1001_79 #x0000000000000000))
(assert (= temp1001_80 #x0000000000000003))
(assert (= temp1001_81 temp1001_80))
(assert (= temp1001_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_81)))
(assert (= temp1001_83 #x0000000000000000))
(assert (= temp1001_84 #x0000000000000004))
(assert (= temp1001_85 temp1001_84))
(assert (= temp1001_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_85)))
(assert (= temp1001_87 #x0000000000000000))
(assert (= temp1001_88 #x0000000000000005))
(assert (= temp1001_89 temp1001_88))
(assert (= temp1001_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1001_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1001_70 temp1001_67)
             (bvslt temp1001_74 temp1001_71)
             (bvslt temp1001_78 temp1001_75)
             (bvslt temp1001_82 temp1001_79)
             (bvslt temp1001_86 temp1001_83)
             (bvslt temp1001_90 temp1001_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_91 #x0000000000000000))
(assert (= var1322797 temp1001_91))
(assert (= temp1001_92 #x0000000000000000))
(assert (= temp1001_93 temp1001_92))
(assert (= temp1001_94 (select ARGNAME_stride_NAMEEND_VAL temp1001_93)))
(assert (= temp1001_95 #x0000000000000001))
(assert (= temp1001_96 temp1001_95))
(assert (= temp1001_97 (select ARGNAME_stride_NAMEEND_VAL temp1001_96)))
(assert (= temp1001_98 #x0000000000000002))
(assert (= temp1001_99 temp1001_98))
(assert (= temp1001_100 (select ARGNAME_stride_NAMEEND_VAL temp1001_99)))
(assert (= temp1001_101 #x0000000000000003))
(assert (= temp1001_102 temp1001_101))
(assert (= temp1001_103 (select ARGNAME_stride_NAMEEND_VAL temp1001_102)))
(assert (= temp1001_104 #x0000000000000004))
(assert (= temp1001_105 temp1001_104))
(assert (= temp1001_106 (select ARGNAME_stride_NAMEEND_VAL temp1001_105)))
(assert (= temp1001_107 #x0000000000000005))
(assert (= temp1001_108 temp1001_107))
(assert (= temp1001_109 (select ARGNAME_stride_NAMEEND_VAL temp1001_108)))
(assert (= temp1001_110 #x0000000000000000))
(assert (= temp1001_111 #x0000000000000000))
(assert (= temp1001_112 temp1001_111))
(assert (= temp1001_113 (select ARGNAME_stride_NAMEEND_VAL temp1001_112)))
(assert (= temp1001_114 #x0000000000000000))
(assert (= temp1001_115 #x0000000000000001))
(assert (= temp1001_116 temp1001_115))
(assert (= temp1001_117 (select ARGNAME_stride_NAMEEND_VAL temp1001_116)))
(assert (= temp1001_118 #x0000000000000000))
(assert (= temp1001_119 #x0000000000000002))
(assert (= temp1001_120 temp1001_119))
(assert (= temp1001_121 (select ARGNAME_stride_NAMEEND_VAL temp1001_120)))
(assert (= temp1001_122 #x0000000000000000))
(assert (= temp1001_123 #x0000000000000003))
(assert (= temp1001_124 temp1001_123))
(assert (= temp1001_125 (select ARGNAME_stride_NAMEEND_VAL temp1001_124)))
(assert (= temp1001_126 #x0000000000000000))
(assert (= temp1001_127 #x0000000000000004))
(assert (= temp1001_128 temp1001_127))
(assert (= temp1001_129 (select ARGNAME_stride_NAMEEND_VAL temp1001_128)))
(assert (= temp1001_130 #x0000000000000000))
(assert (= temp1001_131 #x0000000000000005))
(assert (= temp1001_132 temp1001_131))
(assert (= temp1001_133 (select ARGNAME_stride_NAMEEND_VAL temp1001_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1001_113 temp1001_110)
             (bvsle temp1001_117 temp1001_114)
             (bvsle temp1001_121 temp1001_118)
             (bvsle temp1001_125 temp1001_122)
             (bvsle temp1001_129 temp1001_126)
             (bvsle temp1001_133 temp1001_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_134 #x0000000000000000))
(assert (= var1322807 temp1001_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_135 #x0000000000000001))
(assert (= var1322819 temp1001_135))
(assert (= temp1001_136 #x0000000000000000))
(assert (= var1310898 temp1001_136))
(assert (= temp1001_137 #x0000000000000000))
(assert (= temp1001_138 temp1001_137))
(assert (= temp1001_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_138)))
(assert (= temp1001_140 #x0000000000000001))
(assert (= temp1001_141 temp1001_140))
(assert (= temp1001_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_141)))
(assert (= temp1001_143 #x0000000000000002))
(assert (= temp1001_144 temp1001_143))
(assert (= temp1001_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_144)))
(assert (= temp1001_146 #x0000000000000003))
(assert (= temp1001_147 temp1001_146))
(assert (= temp1001_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_147)))
(assert (= temp1001_149 #x0000000000000004))
(assert (= temp1001_150 temp1001_149))
(assert (= temp1001_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_150)))
(assert (= temp1001_152 #x0000000000000005))
(assert (= temp1001_153 temp1001_152))
(assert (= temp1001_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_153)))
(assert (= temp1001_156 var1310898))
(assert (= temp1001_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_156)))
(assert (= temp1001_155 temp1001_157))
(assert (= var1322852
   (ite (bvslt temp1001_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_158 #x0000000000000000))
(assert (= var1322852 temp1001_158))
(assert (= temp1001_159 #x0000000000000000))
(assert (= var1310898 temp1001_159))
(assert (= temp1001_161 var1310898))
(assert (= temp1001_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_161)))
(assert (= temp1001_160 temp1001_162))
(assert (= var1322874 (bvsmod temp1001_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1001_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1001_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1001_164 #x0000000000000001))
(assert (= var1322875 temp1001_164))
(assert (= temp1001_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1001_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_166 #x0000000000000001))
(assert (= var1322895 temp1001_166))
(assert (= temp1001_167 #x0000000000000001))
(assert (= var1311786 temp1001_167))
(assert (= temp1001_168 #x0000000000000000))
(assert (= temp1001_169 temp1001_168))
(assert (= temp1001_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1001_169)))
(assert (= temp1001_171 #x0000000000000001))
(assert (= temp1001_172 temp1001_171))
(assert (= temp1001_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1001_172)))
(assert (= temp1001_174 #x0000000000000002))
(assert (= temp1001_175 temp1001_174))
(assert (= temp1001_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1001_175)))
(assert (= temp1001_177 #x0000000000000003))
(assert (= temp1001_178 temp1001_177))
(assert (= temp1001_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1001_178)))
(assert (= temp1001_180 #x0000000000000004))
(assert (= temp1001_181 temp1001_180))
(assert (= temp1001_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1001_181)))
(assert (= temp1001_183 #x0000000000000005))
(assert (= temp1001_184 temp1001_183))
(assert (= temp1001_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1001_184)))
(assert (= temp1001_186 #x0000000000000000))
(assert (= temp1001_187
   (ite (bvslt var1311786 temp1001_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1001_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1001_187)))
(assert (= var1322903 temp1001_188))
(assert (bvslt (ite (bvslt var1311786 temp1001_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1001_189 #x0000000000000001))
(assert (= var1311786 temp1001_189))
(assert (= temp1001_191 var1311786))
(assert (= temp1001_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_191)))
(assert (= temp1001_190 temp1001_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1001_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1001_193 #x0000000000000001))
(assert (= var1322908 temp1001_193))
(assert (= temp1001_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1001_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_195 #x0000000000000001))
(assert (= var1322975 temp1001_195))
(assert (= temp1001_196 #x0000000000000000))
(assert (= var1310898 temp1001_196))
(assert (= temp1001_197 #x0000000000000000))
(assert (= temp1001_198 temp1001_197))
(assert (= temp1001_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1001_198)))
(assert (= temp1001_200 #x0000000000000001))
(assert (= temp1001_201 temp1001_200))
(assert (= temp1001_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1001_201)))
(assert (= temp1001_203 #x0000000000000002))
(assert (= temp1001_204 temp1001_203))
(assert (= temp1001_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1001_204)))
(assert (= temp1001_206 #x0000000000000003))
(assert (= temp1001_207 temp1001_206))
(assert (= temp1001_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1001_207)))
(assert (= temp1001_209 #x0000000000000004))
(assert (= temp1001_210 temp1001_209))
(assert (= temp1001_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1001_210)))
(assert (= temp1001_212 #x0000000000000005))
(assert (= temp1001_213 temp1001_212))
(assert (= temp1001_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1001_213)))
(assert (= temp1001_215 #x0000000000000000))
(assert (= temp1001_216
   (ite (bvslt var1310898 temp1001_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1001_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1001_216)))
(assert (= var1322977 temp1001_217))
(assert (bvslt (ite (bvslt var1310898 temp1001_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1001_218 #x0000000000000000))
(assert (= var1310898 temp1001_218))
(assert (= temp1001_220 var1310898))
(assert (= temp1001_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1001_220)))
(assert (= temp1001_219 temp1001_221))
(assert (= var1322980
   (ite (= var1322977 temp1001_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1001_222 #x0000000000000001))
(assert (= var1322980 temp1001_222))
(assert (= temp1001_223 #x0000000000000002))
(assert (= var1848169 temp1001_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1001_225 #x0000000000000001))
(assert (= var1323065 temp1001_225))
(assert (= temp1001_226 #x0000000000000001))
(assert (= var3486735 temp1001_226))
(assert (= temp1001_227 #x0000000000000001))
(assert (= var3814415 temp1001_227))
(assert (= temp1001_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1001_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_229 #x0000000000000001))
(assert (= var79986 temp1001_229))
(assert (= temp1001_230 #x0000000000000001))
(assert (= var80116 temp1001_230))
(assert (= var4796905 var80116))
(assert (= temp1001_231 #x0000000000000000))
(assert (= var4784306 temp1001_231))
(assert (= temp1001_232 #x0000000000000000))
(assert (= temp1001_233
   (ite (bvslt var4784306 temp1001_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1001_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1001_233)))
(assert (= var4796924 temp1001_234))
(assert (bvslt (ite (bvslt var4784306 temp1001_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1001_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1001_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1001_236 #x0000000000000001))
(assert (= var4796925 temp1001_236))
(assert (= temp1001_237 #x0000000000000000))
(assert (= var4996927 temp1001_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1001_238 #x0000000000000002))
(assert (= var5125763 temp1001_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1001_239 #x0000000000000000))
(assert (= var5191324 temp1001_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp1001_240 #x0000000000000000))
(assert (= var6631824 temp1001_240))
(assert (= temp1001_241 #x0000000000000001))
(assert (= var79986 temp1001_241))
(model-add temp1001_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1001_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1001_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






