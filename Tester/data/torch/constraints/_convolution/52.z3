(declare-fun temp68_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp68_2 () (_ BitVec 64))
(declare-fun temp68_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp68_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp68_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp68_6 () (_ BitVec 64))
(declare-fun temp68_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_8 () (_ BitVec 64))
(declare-fun temp68_9 () (_ BitVec 64))
(declare-fun temp68_10 () (_ BitVec 64))
(declare-fun temp68_11 () (_ BitVec 64))
(declare-fun temp68_12 () (_ BitVec 64))
(declare-fun temp68_13 () (_ BitVec 64))
(declare-fun temp68_14 () (_ BitVec 64))
(declare-fun temp68_15 () (_ BitVec 64))
(declare-fun temp68_16 () (_ BitVec 64))
(declare-fun temp68_17 () (_ BitVec 64))
(declare-fun temp68_18 () (_ BitVec 64))
(declare-fun temp68_19 () (_ BitVec 64))
(declare-fun temp68_20 () (_ BitVec 64))
(declare-fun temp68_21 () (_ BitVec 64))
(declare-fun temp68_22 () (_ BitVec 64))
(declare-fun temp68_23 () (_ BitVec 64))
(declare-fun temp68_24 () (_ BitVec 64))
(declare-fun temp68_25 () (_ BitVec 64))
(declare-fun temp68_26 () (_ BitVec 64))
(declare-fun temp68_27 () (_ BitVec 64))
(declare-fun temp68_28 () (_ BitVec 64))
(declare-fun temp68_29 () (_ BitVec 64))
(declare-fun temp68_30 () (_ BitVec 64))
(declare-fun temp68_31 () (_ BitVec 64))
(declare-fun temp68_32 () (_ BitVec 64))
(declare-fun temp68_33 () (_ BitVec 64))
(declare-fun temp68_34 () (_ BitVec 64))
(declare-fun temp68_35 () (_ BitVec 64))
(declare-fun temp68_36 () (_ BitVec 64))
(declare-fun temp68_37 () (_ BitVec 64))
(declare-fun temp68_38 () (_ BitVec 64))
(declare-fun temp68_39 () (_ BitVec 64))
(declare-fun temp68_40 () (_ BitVec 64))
(declare-fun temp68_41 () (_ BitVec 64))
(declare-fun temp68_42 () (_ BitVec 64))
(declare-fun temp68_43 () (_ BitVec 64))
(declare-fun temp68_44 () (_ BitVec 64))
(declare-fun temp68_45 () (_ BitVec 64))
(declare-fun temp68_46 () (_ BitVec 64))
(declare-fun temp68_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp68_48 () (_ BitVec 64))
(declare-fun temp68_49 () (_ BitVec 64))
(declare-fun temp68_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_51 () (_ BitVec 64))
(declare-fun temp68_52 () (_ BitVec 64))
(declare-fun temp68_53 () (_ BitVec 64))
(declare-fun temp68_54 () (_ BitVec 64))
(declare-fun temp68_55 () (_ BitVec 64))
(declare-fun temp68_56 () (_ BitVec 64))
(declare-fun temp68_57 () (_ BitVec 64))
(declare-fun temp68_58 () (_ BitVec 64))
(declare-fun temp68_59 () (_ BitVec 64))
(declare-fun temp68_60 () (_ BitVec 64))
(declare-fun temp68_61 () (_ BitVec 64))
(declare-fun temp68_62 () (_ BitVec 64))
(declare-fun temp68_63 () (_ BitVec 64))
(declare-fun temp68_64 () (_ BitVec 64))
(declare-fun temp68_65 () (_ BitVec 64))
(declare-fun temp68_66 () (_ BitVec 64))
(declare-fun temp68_67 () (_ BitVec 64))
(declare-fun temp68_68 () (_ BitVec 64))
(declare-fun temp68_69 () (_ BitVec 64))
(declare-fun temp68_70 () (_ BitVec 64))
(declare-fun temp68_71 () (_ BitVec 64))
(declare-fun temp68_72 () (_ BitVec 64))
(declare-fun temp68_73 () (_ BitVec 64))
(declare-fun temp68_74 () (_ BitVec 64))
(declare-fun temp68_75 () (_ BitVec 64))
(declare-fun temp68_76 () (_ BitVec 64))
(declare-fun temp68_77 () (_ BitVec 64))
(declare-fun temp68_78 () (_ BitVec 64))
(declare-fun temp68_79 () (_ BitVec 64))
(declare-fun temp68_80 () (_ BitVec 64))
(declare-fun temp68_81 () (_ BitVec 64))
(declare-fun temp68_82 () (_ BitVec 64))
(declare-fun temp68_83 () (_ BitVec 64))
(declare-fun temp68_84 () (_ BitVec 64))
(declare-fun temp68_85 () (_ BitVec 64))
(declare-fun temp68_86 () (_ BitVec 64))
(declare-fun temp68_87 () (_ BitVec 64))
(declare-fun temp68_88 () (_ BitVec 64))
(declare-fun temp68_89 () (_ BitVec 64))
(declare-fun temp68_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp68_91 () (_ BitVec 64))
(declare-fun temp68_92 () (_ BitVec 64))
(declare-fun temp68_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_94 () (_ BitVec 64))
(declare-fun temp68_95 () (_ BitVec 64))
(declare-fun temp68_96 () (_ BitVec 64))
(declare-fun temp68_97 () (_ BitVec 64))
(declare-fun temp68_98 () (_ BitVec 64))
(declare-fun temp68_99 () (_ BitVec 64))
(declare-fun temp68_100 () (_ BitVec 64))
(declare-fun temp68_101 () (_ BitVec 64))
(declare-fun temp68_102 () (_ BitVec 64))
(declare-fun temp68_103 () (_ BitVec 64))
(declare-fun temp68_104 () (_ BitVec 64))
(declare-fun temp68_105 () (_ BitVec 64))
(declare-fun temp68_106 () (_ BitVec 64))
(declare-fun temp68_107 () (_ BitVec 64))
(declare-fun temp68_108 () (_ BitVec 64))
(declare-fun temp68_109 () (_ BitVec 64))
(declare-fun temp68_110 () (_ BitVec 64))
(declare-fun temp68_111 () (_ BitVec 64))
(declare-fun temp68_112 () (_ BitVec 64))
(declare-fun temp68_113 () (_ BitVec 64))
(declare-fun temp68_114 () (_ BitVec 64))
(declare-fun temp68_115 () (_ BitVec 64))
(declare-fun temp68_116 () (_ BitVec 64))
(declare-fun temp68_117 () (_ BitVec 64))
(declare-fun temp68_118 () (_ BitVec 64))
(declare-fun temp68_119 () (_ BitVec 64))
(declare-fun temp68_120 () (_ BitVec 64))
(declare-fun temp68_121 () (_ BitVec 64))
(declare-fun temp68_122 () (_ BitVec 64))
(declare-fun temp68_123 () (_ BitVec 64))
(declare-fun temp68_124 () (_ BitVec 64))
(declare-fun temp68_125 () (_ BitVec 64))
(declare-fun temp68_126 () (_ BitVec 64))
(declare-fun temp68_127 () (_ BitVec 64))
(declare-fun temp68_128 () (_ BitVec 64))
(declare-fun temp68_129 () (_ BitVec 64))
(declare-fun temp68_130 () (_ BitVec 64))
(declare-fun temp68_131 () (_ BitVec 64))
(declare-fun temp68_132 () (_ BitVec 64))
(declare-fun temp68_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp68_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp68_135 () (_ BitVec 64))
(declare-fun temp68_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp68_137 () (_ BitVec 64))
(declare-fun temp68_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_139 () (_ BitVec 64))
(declare-fun temp68_140 () (_ BitVec 64))
(declare-fun temp68_141 () (_ BitVec 64))
(declare-fun temp68_142 () (_ BitVec 64))
(declare-fun temp68_143 () (_ BitVec 64))
(declare-fun temp68_144 () (_ BitVec 64))
(declare-fun temp68_145 () (_ BitVec 64))
(declare-fun temp68_146 () (_ BitVec 64))
(declare-fun temp68_147 () (_ BitVec 64))
(declare-fun temp68_148 () (_ BitVec 64))
(declare-fun temp68_149 () (_ BitVec 64))
(declare-fun temp68_150 () (_ BitVec 64))
(declare-fun temp68_151 () (_ BitVec 64))
(declare-fun temp68_152 () (_ BitVec 64))
(declare-fun temp68_153 () (_ BitVec 64))
(declare-fun temp68_154 () (_ BitVec 64))
(declare-fun temp68_156 () (_ BitVec 64))
(declare-fun temp68_157 () (_ BitVec 64))
(declare-fun temp68_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp68_158 () (_ BitVec 64))
(declare-fun temp68_159 () (_ BitVec 64))
(declare-fun temp68_161 () (_ BitVec 64))
(declare-fun temp68_162 () (_ BitVec 64))
(declare-fun temp68_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp68_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp68_164 () (_ BitVec 64))
(declare-fun temp68_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp68_166 () (_ BitVec 64))
(declare-fun temp68_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp68_168 () (_ BitVec 64))
(declare-fun temp68_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_170 () (_ BitVec 64))
(declare-fun temp68_171 () (_ BitVec 64))
(declare-fun temp68_172 () (_ BitVec 64))
(declare-fun temp68_173 () (_ BitVec 64))
(declare-fun temp68_174 () (_ BitVec 64))
(declare-fun temp68_175 () (_ BitVec 64))
(declare-fun temp68_176 () (_ BitVec 64))
(declare-fun temp68_177 () (_ BitVec 64))
(declare-fun temp68_178 () (_ BitVec 64))
(declare-fun temp68_179 () (_ BitVec 64))
(declare-fun temp68_180 () (_ BitVec 64))
(declare-fun temp68_181 () (_ BitVec 64))
(declare-fun temp68_182 () (_ BitVec 64))
(declare-fun temp68_183 () (_ BitVec 64))
(declare-fun temp68_184 () (_ BitVec 64))
(declare-fun temp68_185 () (_ BitVec 64))
(declare-fun temp68_186 () (_ BitVec 64))
(declare-fun temp68_187 () (_ BitVec 64))
(declare-fun temp68_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp68_189 () (_ BitVec 64))
(declare-fun temp68_191 () (_ BitVec 64))
(declare-fun temp68_192 () (_ BitVec 64))
(declare-fun temp68_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp68_193 () (_ BitVec 64))
(declare-fun temp68_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp68_195 () (_ BitVec 64))
(declare-fun temp68_196 () (_ BitVec 64))
(declare-fun temp68_197 () (_ BitVec 64))
(declare-fun temp68_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_199 () (_ BitVec 64))
(declare-fun temp68_200 () (_ BitVec 64))
(declare-fun temp68_201 () (_ BitVec 64))
(declare-fun temp68_202 () (_ BitVec 64))
(declare-fun temp68_203 () (_ BitVec 64))
(declare-fun temp68_204 () (_ BitVec 64))
(declare-fun temp68_205 () (_ BitVec 64))
(declare-fun temp68_206 () (_ BitVec 64))
(declare-fun temp68_207 () (_ BitVec 64))
(declare-fun temp68_208 () (_ BitVec 64))
(declare-fun temp68_209 () (_ BitVec 64))
(declare-fun temp68_210 () (_ BitVec 64))
(declare-fun temp68_211 () (_ BitVec 64))
(declare-fun temp68_212 () (_ BitVec 64))
(declare-fun temp68_213 () (_ BitVec 64))
(declare-fun temp68_214 () (_ BitVec 64))
(declare-fun temp68_215 () (_ BitVec 64))
(declare-fun temp68_216 () (_ BitVec 64))
(declare-fun temp68_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp68_218 () (_ BitVec 64))
(declare-fun temp68_220 () (_ BitVec 64))
(declare-fun temp68_221 () (_ BitVec 64))
(declare-fun temp68_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp68_222 () (_ BitVec 64))
(declare-fun temp68_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp68_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp68_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp68_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp68_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp68_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp68_229 () (_ BitVec 64))
(declare-fun temp68_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp68_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp68_232 () (_ BitVec 64))
(declare-fun temp68_233 () (_ BitVec 64))
(declare-fun temp68_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp68_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp68_236 () (_ BitVec 64))
(declare-fun temp68_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp68_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp68_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp68_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp68_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp68_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp68_244 () (_ BitVec 64))
(declare-fun temp68_243 () (_ BitVec 64))
(declare-fun temp68_245 () (_ BitVec 64))
(declare-fun var8326634 () (_ BitVec 64))
(declare-fun temp68_247 () (_ BitVec 64))
(declare-fun temp68_246 () (_ BitVec 64))
(declare-fun temp68_248 () (_ BitVec 64))
(assert (= temp68_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp68_1)))
(assert (= temp68_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp68_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_3 #x0000000000000000))
(assert (= var79869 temp68_3))
(assert (= temp68_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp68_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_5 #x0000000000000000))
(assert (= var79914 temp68_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp68_6 #x0000000000000000))
(assert (= temp68_7 temp68_6))
(assert (= temp68_8 (select ARGNAME_padding_NAMEEND_VAL temp68_7)))
(assert (= temp68_9 #x0000000000000001))
(assert (= temp68_10 temp68_9))
(assert (= temp68_11 (select ARGNAME_padding_NAMEEND_VAL temp68_10)))
(assert (= temp68_12 #x0000000000000002))
(assert (= temp68_13 temp68_12))
(assert (= temp68_14 (select ARGNAME_padding_NAMEEND_VAL temp68_13)))
(assert (= temp68_15 #x0000000000000003))
(assert (= temp68_16 temp68_15))
(assert (= temp68_17 (select ARGNAME_padding_NAMEEND_VAL temp68_16)))
(assert (= temp68_18 #x0000000000000004))
(assert (= temp68_19 temp68_18))
(assert (= temp68_20 (select ARGNAME_padding_NAMEEND_VAL temp68_19)))
(assert (= temp68_21 #x0000000000000005))
(assert (= temp68_22 temp68_21))
(assert (= temp68_23 (select ARGNAME_padding_NAMEEND_VAL temp68_22)))
(assert (= temp68_24 #x0000000000000000))
(assert (= temp68_25 #x0000000000000000))
(assert (= temp68_26 temp68_25))
(assert (= temp68_27 (select ARGNAME_padding_NAMEEND_VAL temp68_26)))
(assert (= temp68_28 #x0000000000000000))
(assert (= temp68_29 #x0000000000000001))
(assert (= temp68_30 temp68_29))
(assert (= temp68_31 (select ARGNAME_padding_NAMEEND_VAL temp68_30)))
(assert (= temp68_32 #x0000000000000000))
(assert (= temp68_33 #x0000000000000002))
(assert (= temp68_34 temp68_33))
(assert (= temp68_35 (select ARGNAME_padding_NAMEEND_VAL temp68_34)))
(assert (= temp68_36 #x0000000000000000))
(assert (= temp68_37 #x0000000000000003))
(assert (= temp68_38 temp68_37))
(assert (= temp68_39 (select ARGNAME_padding_NAMEEND_VAL temp68_38)))
(assert (= temp68_40 #x0000000000000000))
(assert (= temp68_41 #x0000000000000004))
(assert (= temp68_42 temp68_41))
(assert (= temp68_43 (select ARGNAME_padding_NAMEEND_VAL temp68_42)))
(assert (= temp68_44 #x0000000000000000))
(assert (= temp68_45 #x0000000000000005))
(assert (= temp68_46 temp68_45))
(assert (= temp68_47 (select ARGNAME_padding_NAMEEND_VAL temp68_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp68_27 temp68_24)
             (bvslt temp68_31 temp68_28)
             (bvslt temp68_35 temp68_32)
             (bvslt temp68_39 temp68_36)
             (bvslt temp68_43 temp68_40)
             (bvslt temp68_47 temp68_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_48 #x0000000000000000))
(assert (= var1322786 temp68_48))
(assert (= temp68_49 #x0000000000000000))
(assert (= temp68_50 temp68_49))
(assert (= temp68_51 (select ARGNAME_output_padding_NAMEEND_VAL temp68_50)))
(assert (= temp68_52 #x0000000000000001))
(assert (= temp68_53 temp68_52))
(assert (= temp68_54 (select ARGNAME_output_padding_NAMEEND_VAL temp68_53)))
(assert (= temp68_55 #x0000000000000002))
(assert (= temp68_56 temp68_55))
(assert (= temp68_57 (select ARGNAME_output_padding_NAMEEND_VAL temp68_56)))
(assert (= temp68_58 #x0000000000000003))
(assert (= temp68_59 temp68_58))
(assert (= temp68_60 (select ARGNAME_output_padding_NAMEEND_VAL temp68_59)))
(assert (= temp68_61 #x0000000000000004))
(assert (= temp68_62 temp68_61))
(assert (= temp68_63 (select ARGNAME_output_padding_NAMEEND_VAL temp68_62)))
(assert (= temp68_64 #x0000000000000005))
(assert (= temp68_65 temp68_64))
(assert (= temp68_66 (select ARGNAME_output_padding_NAMEEND_VAL temp68_65)))
(assert (= temp68_67 #x0000000000000000))
(assert (= temp68_68 #x0000000000000000))
(assert (= temp68_69 temp68_68))
(assert (= temp68_70 (select ARGNAME_output_padding_NAMEEND_VAL temp68_69)))
(assert (= temp68_71 #x0000000000000000))
(assert (= temp68_72 #x0000000000000001))
(assert (= temp68_73 temp68_72))
(assert (= temp68_74 (select ARGNAME_output_padding_NAMEEND_VAL temp68_73)))
(assert (= temp68_75 #x0000000000000000))
(assert (= temp68_76 #x0000000000000002))
(assert (= temp68_77 temp68_76))
(assert (= temp68_78 (select ARGNAME_output_padding_NAMEEND_VAL temp68_77)))
(assert (= temp68_79 #x0000000000000000))
(assert (= temp68_80 #x0000000000000003))
(assert (= temp68_81 temp68_80))
(assert (= temp68_82 (select ARGNAME_output_padding_NAMEEND_VAL temp68_81)))
(assert (= temp68_83 #x0000000000000000))
(assert (= temp68_84 #x0000000000000004))
(assert (= temp68_85 temp68_84))
(assert (= temp68_86 (select ARGNAME_output_padding_NAMEEND_VAL temp68_85)))
(assert (= temp68_87 #x0000000000000000))
(assert (= temp68_88 #x0000000000000005))
(assert (= temp68_89 temp68_88))
(assert (= temp68_90 (select ARGNAME_output_padding_NAMEEND_VAL temp68_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp68_70 temp68_67)
             (bvslt temp68_74 temp68_71)
             (bvslt temp68_78 temp68_75)
             (bvslt temp68_82 temp68_79)
             (bvslt temp68_86 temp68_83)
             (bvslt temp68_90 temp68_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_91 #x0000000000000000))
(assert (= var1322797 temp68_91))
(assert (= temp68_92 #x0000000000000000))
(assert (= temp68_93 temp68_92))
(assert (= temp68_94 (select ARGNAME_stride_NAMEEND_VAL temp68_93)))
(assert (= temp68_95 #x0000000000000001))
(assert (= temp68_96 temp68_95))
(assert (= temp68_97 (select ARGNAME_stride_NAMEEND_VAL temp68_96)))
(assert (= temp68_98 #x0000000000000002))
(assert (= temp68_99 temp68_98))
(assert (= temp68_100 (select ARGNAME_stride_NAMEEND_VAL temp68_99)))
(assert (= temp68_101 #x0000000000000003))
(assert (= temp68_102 temp68_101))
(assert (= temp68_103 (select ARGNAME_stride_NAMEEND_VAL temp68_102)))
(assert (= temp68_104 #x0000000000000004))
(assert (= temp68_105 temp68_104))
(assert (= temp68_106 (select ARGNAME_stride_NAMEEND_VAL temp68_105)))
(assert (= temp68_107 #x0000000000000005))
(assert (= temp68_108 temp68_107))
(assert (= temp68_109 (select ARGNAME_stride_NAMEEND_VAL temp68_108)))
(assert (= temp68_110 #x0000000000000000))
(assert (= temp68_111 #x0000000000000000))
(assert (= temp68_112 temp68_111))
(assert (= temp68_113 (select ARGNAME_stride_NAMEEND_VAL temp68_112)))
(assert (= temp68_114 #x0000000000000000))
(assert (= temp68_115 #x0000000000000001))
(assert (= temp68_116 temp68_115))
(assert (= temp68_117 (select ARGNAME_stride_NAMEEND_VAL temp68_116)))
(assert (= temp68_118 #x0000000000000000))
(assert (= temp68_119 #x0000000000000002))
(assert (= temp68_120 temp68_119))
(assert (= temp68_121 (select ARGNAME_stride_NAMEEND_VAL temp68_120)))
(assert (= temp68_122 #x0000000000000000))
(assert (= temp68_123 #x0000000000000003))
(assert (= temp68_124 temp68_123))
(assert (= temp68_125 (select ARGNAME_stride_NAMEEND_VAL temp68_124)))
(assert (= temp68_126 #x0000000000000000))
(assert (= temp68_127 #x0000000000000004))
(assert (= temp68_128 temp68_127))
(assert (= temp68_129 (select ARGNAME_stride_NAMEEND_VAL temp68_128)))
(assert (= temp68_130 #x0000000000000000))
(assert (= temp68_131 #x0000000000000005))
(assert (= temp68_132 temp68_131))
(assert (= temp68_133 (select ARGNAME_stride_NAMEEND_VAL temp68_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp68_113 temp68_110)
             (bvsle temp68_117 temp68_114)
             (bvsle temp68_121 temp68_118)
             (bvsle temp68_125 temp68_122)
             (bvsle temp68_129 temp68_126)
             (bvsle temp68_133 temp68_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_134 #x0000000000000000))
(assert (= var1322807 temp68_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_135 #x0000000000000001))
(assert (= var1322819 temp68_135))
(assert (= temp68_136 #x0000000000000000))
(assert (= var1310898 temp68_136))
(assert (= temp68_137 #x0000000000000000))
(assert (= temp68_138 temp68_137))
(assert (= temp68_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_138)))
(assert (= temp68_140 #x0000000000000001))
(assert (= temp68_141 temp68_140))
(assert (= temp68_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_141)))
(assert (= temp68_143 #x0000000000000002))
(assert (= temp68_144 temp68_143))
(assert (= temp68_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_144)))
(assert (= temp68_146 #x0000000000000003))
(assert (= temp68_147 temp68_146))
(assert (= temp68_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_147)))
(assert (= temp68_149 #x0000000000000004))
(assert (= temp68_150 temp68_149))
(assert (= temp68_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_150)))
(assert (= temp68_152 #x0000000000000005))
(assert (= temp68_153 temp68_152))
(assert (= temp68_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_153)))
(assert (= temp68_156 var1310898))
(assert (= temp68_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_156)))
(assert (= temp68_155 temp68_157))
(assert (= var1322852
   (ite (bvslt temp68_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_158 #x0000000000000000))
(assert (= var1322852 temp68_158))
(assert (= temp68_159 #x0000000000000000))
(assert (= var1310898 temp68_159))
(assert (= temp68_161 var1310898))
(assert (= temp68_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_161)))
(assert (= temp68_160 temp68_162))
(assert (= var1322874 (bvsmod temp68_160 ARGNAME_groups_NAMEEND)))
(assert (= temp68_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp68_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_164 #x0000000000000001))
(assert (= var1322875 temp68_164))
(assert (= temp68_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp68_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_166 #x0000000000000001))
(assert (= var1322895 temp68_166))
(assert (= temp68_167 #x0000000000000001))
(assert (= var1311786 temp68_167))
(assert (= temp68_168 #x0000000000000000))
(assert (= temp68_169 temp68_168))
(assert (= temp68_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_169)))
(assert (= temp68_171 #x0000000000000001))
(assert (= temp68_172 temp68_171))
(assert (= temp68_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_172)))
(assert (= temp68_174 #x0000000000000002))
(assert (= temp68_175 temp68_174))
(assert (= temp68_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_175)))
(assert (= temp68_177 #x0000000000000003))
(assert (= temp68_178 temp68_177))
(assert (= temp68_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_178)))
(assert (= temp68_180 #x0000000000000004))
(assert (= temp68_181 temp68_180))
(assert (= temp68_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_181)))
(assert (= temp68_183 #x0000000000000005))
(assert (= temp68_184 temp68_183))
(assert (= temp68_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_184)))
(assert (= temp68_186 #x0000000000000000))
(assert (= temp68_187
   (ite (bvslt var1311786 temp68_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp68_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_187)))
(assert (= var1322903 temp68_188))
(assert (bvslt (ite (bvslt var1311786 temp68_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp68_189 #x0000000000000001))
(assert (= var1311786 temp68_189))
(assert (= temp68_191 var1311786))
(assert (= temp68_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_191)))
(assert (= temp68_190 temp68_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp68_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_193 #x0000000000000001))
(assert (= var1322908 temp68_193))
(assert (= temp68_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp68_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_195 #x0000000000000001))
(assert (= var1322975 temp68_195))
(assert (= temp68_196 #x0000000000000000))
(assert (= var1310898 temp68_196))
(assert (= temp68_197 #x0000000000000000))
(assert (= temp68_198 temp68_197))
(assert (= temp68_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp68_198)))
(assert (= temp68_200 #x0000000000000001))
(assert (= temp68_201 temp68_200))
(assert (= temp68_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp68_201)))
(assert (= temp68_203 #x0000000000000002))
(assert (= temp68_204 temp68_203))
(assert (= temp68_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp68_204)))
(assert (= temp68_206 #x0000000000000003))
(assert (= temp68_207 temp68_206))
(assert (= temp68_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp68_207)))
(assert (= temp68_209 #x0000000000000004))
(assert (= temp68_210 temp68_209))
(assert (= temp68_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp68_210)))
(assert (= temp68_212 #x0000000000000005))
(assert (= temp68_213 temp68_212))
(assert (= temp68_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp68_213)))
(assert (= temp68_215 #x0000000000000000))
(assert (= temp68_216
   (ite (bvslt var1310898 temp68_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp68_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp68_216)))
(assert (= var1322977 temp68_217))
(assert (bvslt (ite (bvslt var1310898 temp68_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp68_218 #x0000000000000000))
(assert (= var1310898 temp68_218))
(assert (= temp68_220 var1310898))
(assert (= temp68_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_220)))
(assert (= temp68_219 temp68_221))
(assert (= var1322980
   (ite (= var1322977 temp68_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_222 #x0000000000000001))
(assert (= var1322980 temp68_222))
(assert (= temp68_223 #x0000000000000002))
(assert (= var1848169 temp68_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp68_225 #x0000000000000001))
(assert (= var1323065 temp68_225))
(assert (= temp68_226 #x0000000000000001))
(assert (= var3486735 temp68_226))
(assert (= temp68_227 #x0000000000000001))
(assert (= var3814415 temp68_227))
(assert (= temp68_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp68_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_229 #x0000000000000001))
(assert (= var79986 temp68_229))
(assert (= temp68_230 #x0000000000000001))
(assert (= var80116 temp68_230))
(assert (= var4796905 var80116))
(assert (= temp68_231 #x0000000000000000))
(assert (= var4784306 temp68_231))
(assert (= temp68_232 #x0000000000000000))
(assert (= temp68_233
   (ite (bvslt var4784306 temp68_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp68_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_233)))
(assert (= var4796924 temp68_234))
(assert (bvslt (ite (bvslt var4784306 temp68_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp68_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp68_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_236 #x0000000000000001))
(assert (= var4796925 temp68_236))
(assert (= temp68_237 #x0000000000000000))
(assert (= var4996927 temp68_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp68_238 #x0000000000000002))
(assert (= var5125763 temp68_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_239 #x0000000000000000))
(assert (= var5191324 temp68_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp68_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp68_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp68_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp68_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_244 #x0000000000000001))
(assert (= temp68_243 temp68_244))
(assert (= temp68_245 #x0000000000000001))
(assert (= var8326634 temp68_245))
(assert (= temp68_247 #xffffffffffffffff))
(assert (= temp68_246 temp68_247))
(assert (= temp68_248 #x0000000000000001))
(assert (= var79986 temp68_248))
(model-add temp68_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp68_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp68_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






