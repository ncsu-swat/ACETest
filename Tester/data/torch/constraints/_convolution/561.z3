(declare-fun temp745_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp745_2 () (_ BitVec 64))
(declare-fun temp745_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp745_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp745_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp745_6 () (_ BitVec 64))
(declare-fun temp745_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp745_8 () (_ BitVec 64))
(declare-fun temp745_9 () (_ BitVec 64))
(declare-fun temp745_10 () (_ BitVec 64))
(declare-fun temp745_11 () (_ BitVec 64))
(declare-fun temp745_12 () (_ BitVec 64))
(declare-fun temp745_13 () (_ BitVec 64))
(declare-fun temp745_14 () (_ BitVec 64))
(declare-fun temp745_15 () (_ BitVec 64))
(declare-fun temp745_16 () (_ BitVec 64))
(declare-fun temp745_17 () (_ BitVec 64))
(declare-fun temp745_18 () (_ BitVec 64))
(declare-fun temp745_19 () (_ BitVec 64))
(declare-fun temp745_20 () (_ BitVec 64))
(declare-fun temp745_21 () (_ BitVec 64))
(declare-fun temp745_22 () (_ BitVec 64))
(declare-fun temp745_23 () (_ BitVec 64))
(declare-fun temp745_24 () (_ BitVec 64))
(declare-fun temp745_25 () (_ BitVec 64))
(declare-fun temp745_26 () (_ BitVec 64))
(declare-fun temp745_27 () (_ BitVec 64))
(declare-fun temp745_28 () (_ BitVec 64))
(declare-fun temp745_29 () (_ BitVec 64))
(declare-fun temp745_30 () (_ BitVec 64))
(declare-fun temp745_31 () (_ BitVec 64))
(declare-fun temp745_32 () (_ BitVec 64))
(declare-fun temp745_33 () (_ BitVec 64))
(declare-fun temp745_34 () (_ BitVec 64))
(declare-fun temp745_35 () (_ BitVec 64))
(declare-fun temp745_36 () (_ BitVec 64))
(declare-fun temp745_37 () (_ BitVec 64))
(declare-fun temp745_38 () (_ BitVec 64))
(declare-fun temp745_39 () (_ BitVec 64))
(declare-fun temp745_40 () (_ BitVec 64))
(declare-fun temp745_41 () (_ BitVec 64))
(declare-fun temp745_42 () (_ BitVec 64))
(declare-fun temp745_43 () (_ BitVec 64))
(declare-fun temp745_44 () (_ BitVec 64))
(declare-fun temp745_45 () (_ BitVec 64))
(declare-fun temp745_46 () (_ BitVec 64))
(declare-fun temp745_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp745_48 () (_ BitVec 64))
(declare-fun temp745_49 () (_ BitVec 64))
(declare-fun temp745_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp745_51 () (_ BitVec 64))
(declare-fun temp745_52 () (_ BitVec 64))
(declare-fun temp745_53 () (_ BitVec 64))
(declare-fun temp745_54 () (_ BitVec 64))
(declare-fun temp745_55 () (_ BitVec 64))
(declare-fun temp745_56 () (_ BitVec 64))
(declare-fun temp745_57 () (_ BitVec 64))
(declare-fun temp745_58 () (_ BitVec 64))
(declare-fun temp745_59 () (_ BitVec 64))
(declare-fun temp745_60 () (_ BitVec 64))
(declare-fun temp745_61 () (_ BitVec 64))
(declare-fun temp745_62 () (_ BitVec 64))
(declare-fun temp745_63 () (_ BitVec 64))
(declare-fun temp745_64 () (_ BitVec 64))
(declare-fun temp745_65 () (_ BitVec 64))
(declare-fun temp745_66 () (_ BitVec 64))
(declare-fun temp745_67 () (_ BitVec 64))
(declare-fun temp745_68 () (_ BitVec 64))
(declare-fun temp745_69 () (_ BitVec 64))
(declare-fun temp745_70 () (_ BitVec 64))
(declare-fun temp745_71 () (_ BitVec 64))
(declare-fun temp745_72 () (_ BitVec 64))
(declare-fun temp745_73 () (_ BitVec 64))
(declare-fun temp745_74 () (_ BitVec 64))
(declare-fun temp745_75 () (_ BitVec 64))
(declare-fun temp745_76 () (_ BitVec 64))
(declare-fun temp745_77 () (_ BitVec 64))
(declare-fun temp745_78 () (_ BitVec 64))
(declare-fun temp745_79 () (_ BitVec 64))
(declare-fun temp745_80 () (_ BitVec 64))
(declare-fun temp745_81 () (_ BitVec 64))
(declare-fun temp745_82 () (_ BitVec 64))
(declare-fun temp745_83 () (_ BitVec 64))
(declare-fun temp745_84 () (_ BitVec 64))
(declare-fun temp745_85 () (_ BitVec 64))
(declare-fun temp745_86 () (_ BitVec 64))
(declare-fun temp745_87 () (_ BitVec 64))
(declare-fun temp745_88 () (_ BitVec 64))
(declare-fun temp745_89 () (_ BitVec 64))
(declare-fun temp745_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp745_91 () (_ BitVec 64))
(declare-fun temp745_92 () (_ BitVec 64))
(declare-fun temp745_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp745_94 () (_ BitVec 64))
(declare-fun temp745_95 () (_ BitVec 64))
(declare-fun temp745_96 () (_ BitVec 64))
(declare-fun temp745_97 () (_ BitVec 64))
(declare-fun temp745_98 () (_ BitVec 64))
(declare-fun temp745_99 () (_ BitVec 64))
(declare-fun temp745_100 () (_ BitVec 64))
(declare-fun temp745_101 () (_ BitVec 64))
(declare-fun temp745_102 () (_ BitVec 64))
(declare-fun temp745_103 () (_ BitVec 64))
(declare-fun temp745_104 () (_ BitVec 64))
(declare-fun temp745_105 () (_ BitVec 64))
(declare-fun temp745_106 () (_ BitVec 64))
(declare-fun temp745_107 () (_ BitVec 64))
(declare-fun temp745_108 () (_ BitVec 64))
(declare-fun temp745_109 () (_ BitVec 64))
(declare-fun temp745_110 () (_ BitVec 64))
(declare-fun temp745_111 () (_ BitVec 64))
(declare-fun temp745_112 () (_ BitVec 64))
(declare-fun temp745_113 () (_ BitVec 64))
(declare-fun temp745_114 () (_ BitVec 64))
(declare-fun temp745_115 () (_ BitVec 64))
(declare-fun temp745_116 () (_ BitVec 64))
(declare-fun temp745_117 () (_ BitVec 64))
(declare-fun temp745_118 () (_ BitVec 64))
(declare-fun temp745_119 () (_ BitVec 64))
(declare-fun temp745_120 () (_ BitVec 64))
(declare-fun temp745_121 () (_ BitVec 64))
(declare-fun temp745_122 () (_ BitVec 64))
(declare-fun temp745_123 () (_ BitVec 64))
(declare-fun temp745_124 () (_ BitVec 64))
(declare-fun temp745_125 () (_ BitVec 64))
(declare-fun temp745_126 () (_ BitVec 64))
(declare-fun temp745_127 () (_ BitVec 64))
(declare-fun temp745_128 () (_ BitVec 64))
(declare-fun temp745_129 () (_ BitVec 64))
(declare-fun temp745_130 () (_ BitVec 64))
(declare-fun temp745_131 () (_ BitVec 64))
(declare-fun temp745_132 () (_ BitVec 64))
(declare-fun temp745_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp745_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp745_135 () (_ BitVec 64))
(declare-fun temp745_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp745_137 () (_ BitVec 64))
(declare-fun temp745_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp745_139 () (_ BitVec 64))
(declare-fun temp745_140 () (_ BitVec 64))
(declare-fun temp745_141 () (_ BitVec 64))
(declare-fun temp745_142 () (_ BitVec 64))
(declare-fun temp745_143 () (_ BitVec 64))
(declare-fun temp745_144 () (_ BitVec 64))
(declare-fun temp745_145 () (_ BitVec 64))
(declare-fun temp745_146 () (_ BitVec 64))
(declare-fun temp745_147 () (_ BitVec 64))
(declare-fun temp745_148 () (_ BitVec 64))
(declare-fun temp745_149 () (_ BitVec 64))
(declare-fun temp745_150 () (_ BitVec 64))
(declare-fun temp745_151 () (_ BitVec 64))
(declare-fun temp745_152 () (_ BitVec 64))
(declare-fun temp745_153 () (_ BitVec 64))
(declare-fun temp745_154 () (_ BitVec 64))
(declare-fun temp745_156 () (_ BitVec 64))
(declare-fun temp745_157 () (_ BitVec 64))
(declare-fun temp745_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp745_158 () (_ BitVec 64))
(declare-fun temp745_159 () (_ BitVec 64))
(declare-fun temp745_161 () (_ BitVec 64))
(declare-fun temp745_162 () (_ BitVec 64))
(declare-fun temp745_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp745_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp745_164 () (_ BitVec 64))
(declare-fun temp745_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp745_166 () (_ BitVec 64))
(declare-fun temp745_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp745_168 () (_ BitVec 64))
(declare-fun temp745_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp745_170 () (_ BitVec 64))
(declare-fun temp745_171 () (_ BitVec 64))
(declare-fun temp745_172 () (_ BitVec 64))
(declare-fun temp745_173 () (_ BitVec 64))
(declare-fun temp745_174 () (_ BitVec 64))
(declare-fun temp745_175 () (_ BitVec 64))
(declare-fun temp745_176 () (_ BitVec 64))
(declare-fun temp745_177 () (_ BitVec 64))
(declare-fun temp745_178 () (_ BitVec 64))
(declare-fun temp745_179 () (_ BitVec 64))
(declare-fun temp745_180 () (_ BitVec 64))
(declare-fun temp745_181 () (_ BitVec 64))
(declare-fun temp745_182 () (_ BitVec 64))
(declare-fun temp745_183 () (_ BitVec 64))
(declare-fun temp745_184 () (_ BitVec 64))
(declare-fun temp745_185 () (_ BitVec 64))
(declare-fun temp745_186 () (_ BitVec 64))
(declare-fun temp745_187 () (_ BitVec 64))
(declare-fun temp745_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp745_189 () (_ BitVec 64))
(declare-fun temp745_191 () (_ BitVec 64))
(declare-fun temp745_192 () (_ BitVec 64))
(declare-fun temp745_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp745_193 () (_ BitVec 64))
(declare-fun temp745_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp745_195 () (_ BitVec 64))
(declare-fun temp745_196 () (_ BitVec 64))
(declare-fun temp745_197 () (_ BitVec 64))
(declare-fun temp745_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp745_199 () (_ BitVec 64))
(declare-fun temp745_200 () (_ BitVec 64))
(declare-fun temp745_201 () (_ BitVec 64))
(declare-fun temp745_202 () (_ BitVec 64))
(declare-fun temp745_203 () (_ BitVec 64))
(declare-fun temp745_204 () (_ BitVec 64))
(declare-fun temp745_205 () (_ BitVec 64))
(declare-fun temp745_206 () (_ BitVec 64))
(declare-fun temp745_207 () (_ BitVec 64))
(declare-fun temp745_208 () (_ BitVec 64))
(declare-fun temp745_209 () (_ BitVec 64))
(declare-fun temp745_210 () (_ BitVec 64))
(declare-fun temp745_211 () (_ BitVec 64))
(declare-fun temp745_212 () (_ BitVec 64))
(declare-fun temp745_213 () (_ BitVec 64))
(declare-fun temp745_214 () (_ BitVec 64))
(declare-fun temp745_215 () (_ BitVec 64))
(declare-fun temp745_216 () (_ BitVec 64))
(declare-fun temp745_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp745_218 () (_ BitVec 64))
(declare-fun temp745_220 () (_ BitVec 64))
(declare-fun temp745_221 () (_ BitVec 64))
(declare-fun temp745_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp745_222 () (_ BitVec 64))
(declare-fun temp745_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp745_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp745_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp745_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp745_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp745_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp745_229 () (_ BitVec 64))
(declare-fun temp745_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp745_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp745_232 () (_ BitVec 64))
(declare-fun temp745_233 () (_ BitVec 64))
(declare-fun temp745_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp745_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp745_236 () (_ BitVec 64))
(declare-fun temp745_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp745_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp745_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp745_241 () (_ BitVec 64))
(declare-fun temp745_240 () (_ BitVec 64))
(declare-fun temp745_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp745_243 () (_ BitVec 64))
(declare-fun temp745_244 () (_ BitVec 64))
(declare-fun temp745_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp745_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp745_247 () (_ BitVec 64))
(declare-fun temp745_248 () (_ BitVec 64))
(assert (= temp745_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp745_1)))
(assert (= temp745_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp745_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_3 #x0000000000000000))
(assert (= var79869 temp745_3))
(assert (= temp745_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp745_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_5 #x0000000000000000))
(assert (= var79914 temp745_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp745_6 #x0000000000000000))
(assert (= temp745_7 temp745_6))
(assert (= temp745_8 (select ARGNAME_padding_NAMEEND_VAL temp745_7)))
(assert (= temp745_9 #x0000000000000001))
(assert (= temp745_10 temp745_9))
(assert (= temp745_11 (select ARGNAME_padding_NAMEEND_VAL temp745_10)))
(assert (= temp745_12 #x0000000000000002))
(assert (= temp745_13 temp745_12))
(assert (= temp745_14 (select ARGNAME_padding_NAMEEND_VAL temp745_13)))
(assert (= temp745_15 #x0000000000000003))
(assert (= temp745_16 temp745_15))
(assert (= temp745_17 (select ARGNAME_padding_NAMEEND_VAL temp745_16)))
(assert (= temp745_18 #x0000000000000004))
(assert (= temp745_19 temp745_18))
(assert (= temp745_20 (select ARGNAME_padding_NAMEEND_VAL temp745_19)))
(assert (= temp745_21 #x0000000000000005))
(assert (= temp745_22 temp745_21))
(assert (= temp745_23 (select ARGNAME_padding_NAMEEND_VAL temp745_22)))
(assert (= temp745_24 #x0000000000000000))
(assert (= temp745_25 #x0000000000000000))
(assert (= temp745_26 temp745_25))
(assert (= temp745_27 (select ARGNAME_padding_NAMEEND_VAL temp745_26)))
(assert (= temp745_28 #x0000000000000000))
(assert (= temp745_29 #x0000000000000001))
(assert (= temp745_30 temp745_29))
(assert (= temp745_31 (select ARGNAME_padding_NAMEEND_VAL temp745_30)))
(assert (= temp745_32 #x0000000000000000))
(assert (= temp745_33 #x0000000000000002))
(assert (= temp745_34 temp745_33))
(assert (= temp745_35 (select ARGNAME_padding_NAMEEND_VAL temp745_34)))
(assert (= temp745_36 #x0000000000000000))
(assert (= temp745_37 #x0000000000000003))
(assert (= temp745_38 temp745_37))
(assert (= temp745_39 (select ARGNAME_padding_NAMEEND_VAL temp745_38)))
(assert (= temp745_40 #x0000000000000000))
(assert (= temp745_41 #x0000000000000004))
(assert (= temp745_42 temp745_41))
(assert (= temp745_43 (select ARGNAME_padding_NAMEEND_VAL temp745_42)))
(assert (= temp745_44 #x0000000000000000))
(assert (= temp745_45 #x0000000000000005))
(assert (= temp745_46 temp745_45))
(assert (= temp745_47 (select ARGNAME_padding_NAMEEND_VAL temp745_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp745_27 temp745_24)
             (bvslt temp745_31 temp745_28)
             (bvslt temp745_35 temp745_32)
             (bvslt temp745_39 temp745_36)
             (bvslt temp745_43 temp745_40)
             (bvslt temp745_47 temp745_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_48 #x0000000000000000))
(assert (= var1322786 temp745_48))
(assert (= temp745_49 #x0000000000000000))
(assert (= temp745_50 temp745_49))
(assert (= temp745_51 (select ARGNAME_output_padding_NAMEEND_VAL temp745_50)))
(assert (= temp745_52 #x0000000000000001))
(assert (= temp745_53 temp745_52))
(assert (= temp745_54 (select ARGNAME_output_padding_NAMEEND_VAL temp745_53)))
(assert (= temp745_55 #x0000000000000002))
(assert (= temp745_56 temp745_55))
(assert (= temp745_57 (select ARGNAME_output_padding_NAMEEND_VAL temp745_56)))
(assert (= temp745_58 #x0000000000000003))
(assert (= temp745_59 temp745_58))
(assert (= temp745_60 (select ARGNAME_output_padding_NAMEEND_VAL temp745_59)))
(assert (= temp745_61 #x0000000000000004))
(assert (= temp745_62 temp745_61))
(assert (= temp745_63 (select ARGNAME_output_padding_NAMEEND_VAL temp745_62)))
(assert (= temp745_64 #x0000000000000005))
(assert (= temp745_65 temp745_64))
(assert (= temp745_66 (select ARGNAME_output_padding_NAMEEND_VAL temp745_65)))
(assert (= temp745_67 #x0000000000000000))
(assert (= temp745_68 #x0000000000000000))
(assert (= temp745_69 temp745_68))
(assert (= temp745_70 (select ARGNAME_output_padding_NAMEEND_VAL temp745_69)))
(assert (= temp745_71 #x0000000000000000))
(assert (= temp745_72 #x0000000000000001))
(assert (= temp745_73 temp745_72))
(assert (= temp745_74 (select ARGNAME_output_padding_NAMEEND_VAL temp745_73)))
(assert (= temp745_75 #x0000000000000000))
(assert (= temp745_76 #x0000000000000002))
(assert (= temp745_77 temp745_76))
(assert (= temp745_78 (select ARGNAME_output_padding_NAMEEND_VAL temp745_77)))
(assert (= temp745_79 #x0000000000000000))
(assert (= temp745_80 #x0000000000000003))
(assert (= temp745_81 temp745_80))
(assert (= temp745_82 (select ARGNAME_output_padding_NAMEEND_VAL temp745_81)))
(assert (= temp745_83 #x0000000000000000))
(assert (= temp745_84 #x0000000000000004))
(assert (= temp745_85 temp745_84))
(assert (= temp745_86 (select ARGNAME_output_padding_NAMEEND_VAL temp745_85)))
(assert (= temp745_87 #x0000000000000000))
(assert (= temp745_88 #x0000000000000005))
(assert (= temp745_89 temp745_88))
(assert (= temp745_90 (select ARGNAME_output_padding_NAMEEND_VAL temp745_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp745_70 temp745_67)
             (bvslt temp745_74 temp745_71)
             (bvslt temp745_78 temp745_75)
             (bvslt temp745_82 temp745_79)
             (bvslt temp745_86 temp745_83)
             (bvslt temp745_90 temp745_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_91 #x0000000000000000))
(assert (= var1322797 temp745_91))
(assert (= temp745_92 #x0000000000000000))
(assert (= temp745_93 temp745_92))
(assert (= temp745_94 (select ARGNAME_stride_NAMEEND_VAL temp745_93)))
(assert (= temp745_95 #x0000000000000001))
(assert (= temp745_96 temp745_95))
(assert (= temp745_97 (select ARGNAME_stride_NAMEEND_VAL temp745_96)))
(assert (= temp745_98 #x0000000000000002))
(assert (= temp745_99 temp745_98))
(assert (= temp745_100 (select ARGNAME_stride_NAMEEND_VAL temp745_99)))
(assert (= temp745_101 #x0000000000000003))
(assert (= temp745_102 temp745_101))
(assert (= temp745_103 (select ARGNAME_stride_NAMEEND_VAL temp745_102)))
(assert (= temp745_104 #x0000000000000004))
(assert (= temp745_105 temp745_104))
(assert (= temp745_106 (select ARGNAME_stride_NAMEEND_VAL temp745_105)))
(assert (= temp745_107 #x0000000000000005))
(assert (= temp745_108 temp745_107))
(assert (= temp745_109 (select ARGNAME_stride_NAMEEND_VAL temp745_108)))
(assert (= temp745_110 #x0000000000000000))
(assert (= temp745_111 #x0000000000000000))
(assert (= temp745_112 temp745_111))
(assert (= temp745_113 (select ARGNAME_stride_NAMEEND_VAL temp745_112)))
(assert (= temp745_114 #x0000000000000000))
(assert (= temp745_115 #x0000000000000001))
(assert (= temp745_116 temp745_115))
(assert (= temp745_117 (select ARGNAME_stride_NAMEEND_VAL temp745_116)))
(assert (= temp745_118 #x0000000000000000))
(assert (= temp745_119 #x0000000000000002))
(assert (= temp745_120 temp745_119))
(assert (= temp745_121 (select ARGNAME_stride_NAMEEND_VAL temp745_120)))
(assert (= temp745_122 #x0000000000000000))
(assert (= temp745_123 #x0000000000000003))
(assert (= temp745_124 temp745_123))
(assert (= temp745_125 (select ARGNAME_stride_NAMEEND_VAL temp745_124)))
(assert (= temp745_126 #x0000000000000000))
(assert (= temp745_127 #x0000000000000004))
(assert (= temp745_128 temp745_127))
(assert (= temp745_129 (select ARGNAME_stride_NAMEEND_VAL temp745_128)))
(assert (= temp745_130 #x0000000000000000))
(assert (= temp745_131 #x0000000000000005))
(assert (= temp745_132 temp745_131))
(assert (= temp745_133 (select ARGNAME_stride_NAMEEND_VAL temp745_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp745_113 temp745_110)
             (bvsle temp745_117 temp745_114)
             (bvsle temp745_121 temp745_118)
             (bvsle temp745_125 temp745_122)
             (bvsle temp745_129 temp745_126)
             (bvsle temp745_133 temp745_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_134 #x0000000000000000))
(assert (= var1322807 temp745_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_135 #x0000000000000001))
(assert (= var1322819 temp745_135))
(assert (= temp745_136 #x0000000000000000))
(assert (= var1310898 temp745_136))
(assert (= temp745_137 #x0000000000000000))
(assert (= temp745_138 temp745_137))
(assert (= temp745_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_138)))
(assert (= temp745_140 #x0000000000000001))
(assert (= temp745_141 temp745_140))
(assert (= temp745_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_141)))
(assert (= temp745_143 #x0000000000000002))
(assert (= temp745_144 temp745_143))
(assert (= temp745_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_144)))
(assert (= temp745_146 #x0000000000000003))
(assert (= temp745_147 temp745_146))
(assert (= temp745_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_147)))
(assert (= temp745_149 #x0000000000000004))
(assert (= temp745_150 temp745_149))
(assert (= temp745_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_150)))
(assert (= temp745_152 #x0000000000000005))
(assert (= temp745_153 temp745_152))
(assert (= temp745_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_153)))
(assert (= temp745_156 var1310898))
(assert (= temp745_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_156)))
(assert (= temp745_155 temp745_157))
(assert (= var1322852
   (ite (bvslt temp745_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_158 #x0000000000000000))
(assert (= var1322852 temp745_158))
(assert (= temp745_159 #x0000000000000000))
(assert (= var1310898 temp745_159))
(assert (= temp745_161 var1310898))
(assert (= temp745_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_161)))
(assert (= temp745_160 temp745_162))
(assert (= var1322874 (bvsmod temp745_160 ARGNAME_groups_NAMEEND)))
(assert (= temp745_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp745_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp745_164 #x0000000000000001))
(assert (= var1322875 temp745_164))
(assert (= temp745_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp745_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_166 #x0000000000000001))
(assert (= var1322895 temp745_166))
(assert (= temp745_167 #x0000000000000001))
(assert (= var1311786 temp745_167))
(assert (= temp745_168 #x0000000000000000))
(assert (= temp745_169 temp745_168))
(assert (= temp745_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp745_169)))
(assert (= temp745_171 #x0000000000000001))
(assert (= temp745_172 temp745_171))
(assert (= temp745_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp745_172)))
(assert (= temp745_174 #x0000000000000002))
(assert (= temp745_175 temp745_174))
(assert (= temp745_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp745_175)))
(assert (= temp745_177 #x0000000000000003))
(assert (= temp745_178 temp745_177))
(assert (= temp745_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp745_178)))
(assert (= temp745_180 #x0000000000000004))
(assert (= temp745_181 temp745_180))
(assert (= temp745_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp745_181)))
(assert (= temp745_183 #x0000000000000005))
(assert (= temp745_184 temp745_183))
(assert (= temp745_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp745_184)))
(assert (= temp745_186 #x0000000000000000))
(assert (= temp745_187
   (ite (bvslt var1311786 temp745_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp745_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp745_187)))
(assert (= var1322903 temp745_188))
(assert (bvslt (ite (bvslt var1311786 temp745_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp745_189 #x0000000000000001))
(assert (= var1311786 temp745_189))
(assert (= temp745_191 var1311786))
(assert (= temp745_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_191)))
(assert (= temp745_190 temp745_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp745_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp745_193 #x0000000000000001))
(assert (= var1322908 temp745_193))
(assert (= temp745_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp745_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_195 #x0000000000000001))
(assert (= var1322975 temp745_195))
(assert (= temp745_196 #x0000000000000000))
(assert (= var1310898 temp745_196))
(assert (= temp745_197 #x0000000000000000))
(assert (= temp745_198 temp745_197))
(assert (= temp745_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp745_198)))
(assert (= temp745_200 #x0000000000000001))
(assert (= temp745_201 temp745_200))
(assert (= temp745_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp745_201)))
(assert (= temp745_203 #x0000000000000002))
(assert (= temp745_204 temp745_203))
(assert (= temp745_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp745_204)))
(assert (= temp745_206 #x0000000000000003))
(assert (= temp745_207 temp745_206))
(assert (= temp745_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp745_207)))
(assert (= temp745_209 #x0000000000000004))
(assert (= temp745_210 temp745_209))
(assert (= temp745_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp745_210)))
(assert (= temp745_212 #x0000000000000005))
(assert (= temp745_213 temp745_212))
(assert (= temp745_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp745_213)))
(assert (= temp745_215 #x0000000000000000))
(assert (= temp745_216
   (ite (bvslt var1310898 temp745_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp745_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp745_216)))
(assert (= var1322977 temp745_217))
(assert (bvslt (ite (bvslt var1310898 temp745_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp745_218 #x0000000000000000))
(assert (= var1310898 temp745_218))
(assert (= temp745_220 var1310898))
(assert (= temp745_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp745_220)))
(assert (= temp745_219 temp745_221))
(assert (= var1322980
   (ite (= var1322977 temp745_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp745_222 #x0000000000000001))
(assert (= var1322980 temp745_222))
(assert (= temp745_223 #x0000000000000002))
(assert (= var1848169 temp745_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp745_225 #x0000000000000001))
(assert (= var1323065 temp745_225))
(assert (= temp745_226 #x0000000000000001))
(assert (= var3486735 temp745_226))
(assert (= temp745_227 #x0000000000000001))
(assert (= var3814415 temp745_227))
(assert (= temp745_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp745_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_229 #x0000000000000001))
(assert (= var79986 temp745_229))
(assert (= temp745_230 #x0000000000000001))
(assert (= var80116 temp745_230))
(assert (= var4796905 var80116))
(assert (= temp745_231 #x0000000000000000))
(assert (= var4784306 temp745_231))
(assert (= temp745_232 #x0000000000000000))
(assert (= temp745_233
   (ite (bvslt var4784306 temp745_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp745_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp745_233)))
(assert (= var4796924 temp745_234))
(assert (bvslt (ite (bvslt var4784306 temp745_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp745_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp745_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp745_236 #x0000000000000001))
(assert (= var4796925 temp745_236))
(assert (= temp745_237 #x0000000000000000))
(assert (= var4996927 temp745_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp745_238 #x0000000000000002))
(assert (= var5125763 temp745_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp745_239 #x0000000000000000))
(assert (= var5191324 temp745_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp745_241 #xffffffffffffffff))
(assert (= temp745_240 temp745_241))
(assert (= temp745_242 #x0000000000000001))
(assert (= var66602 temp745_242))
(assert (= temp745_243 #x0000000000000000))
(assert (= temp745_244
   (ite (bvslt var66602 temp745_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp745_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp745_244)))
(assert (= var80523 temp745_245))
(assert (bvslt (ite (bvslt var66602 temp745_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp745_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp745_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp745_247 #x0000000000000000))
(assert (= var80524 temp745_247))
(assert (= temp745_248 #x0000000000000001))
(assert (= var79986 temp745_248))
(model-add temp745_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp745_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp745_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






