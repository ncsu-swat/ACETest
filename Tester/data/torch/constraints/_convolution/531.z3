(declare-fun temp705_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp705_2 () (_ BitVec 64))
(declare-fun temp705_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp705_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp705_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp705_6 () (_ BitVec 64))
(declare-fun temp705_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_8 () (_ BitVec 64))
(declare-fun temp705_9 () (_ BitVec 64))
(declare-fun temp705_10 () (_ BitVec 64))
(declare-fun temp705_11 () (_ BitVec 64))
(declare-fun temp705_12 () (_ BitVec 64))
(declare-fun temp705_13 () (_ BitVec 64))
(declare-fun temp705_14 () (_ BitVec 64))
(declare-fun temp705_15 () (_ BitVec 64))
(declare-fun temp705_16 () (_ BitVec 64))
(declare-fun temp705_17 () (_ BitVec 64))
(declare-fun temp705_18 () (_ BitVec 64))
(declare-fun temp705_19 () (_ BitVec 64))
(declare-fun temp705_20 () (_ BitVec 64))
(declare-fun temp705_21 () (_ BitVec 64))
(declare-fun temp705_22 () (_ BitVec 64))
(declare-fun temp705_23 () (_ BitVec 64))
(declare-fun temp705_24 () (_ BitVec 64))
(declare-fun temp705_25 () (_ BitVec 64))
(declare-fun temp705_26 () (_ BitVec 64))
(declare-fun temp705_27 () (_ BitVec 64))
(declare-fun temp705_28 () (_ BitVec 64))
(declare-fun temp705_29 () (_ BitVec 64))
(declare-fun temp705_30 () (_ BitVec 64))
(declare-fun temp705_31 () (_ BitVec 64))
(declare-fun temp705_32 () (_ BitVec 64))
(declare-fun temp705_33 () (_ BitVec 64))
(declare-fun temp705_34 () (_ BitVec 64))
(declare-fun temp705_35 () (_ BitVec 64))
(declare-fun temp705_36 () (_ BitVec 64))
(declare-fun temp705_37 () (_ BitVec 64))
(declare-fun temp705_38 () (_ BitVec 64))
(declare-fun temp705_39 () (_ BitVec 64))
(declare-fun temp705_40 () (_ BitVec 64))
(declare-fun temp705_41 () (_ BitVec 64))
(declare-fun temp705_42 () (_ BitVec 64))
(declare-fun temp705_43 () (_ BitVec 64))
(declare-fun temp705_44 () (_ BitVec 64))
(declare-fun temp705_45 () (_ BitVec 64))
(declare-fun temp705_46 () (_ BitVec 64))
(declare-fun temp705_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp705_48 () (_ BitVec 64))
(declare-fun temp705_49 () (_ BitVec 64))
(declare-fun temp705_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_51 () (_ BitVec 64))
(declare-fun temp705_52 () (_ BitVec 64))
(declare-fun temp705_53 () (_ BitVec 64))
(declare-fun temp705_54 () (_ BitVec 64))
(declare-fun temp705_55 () (_ BitVec 64))
(declare-fun temp705_56 () (_ BitVec 64))
(declare-fun temp705_57 () (_ BitVec 64))
(declare-fun temp705_58 () (_ BitVec 64))
(declare-fun temp705_59 () (_ BitVec 64))
(declare-fun temp705_60 () (_ BitVec 64))
(declare-fun temp705_61 () (_ BitVec 64))
(declare-fun temp705_62 () (_ BitVec 64))
(declare-fun temp705_63 () (_ BitVec 64))
(declare-fun temp705_64 () (_ BitVec 64))
(declare-fun temp705_65 () (_ BitVec 64))
(declare-fun temp705_66 () (_ BitVec 64))
(declare-fun temp705_67 () (_ BitVec 64))
(declare-fun temp705_68 () (_ BitVec 64))
(declare-fun temp705_69 () (_ BitVec 64))
(declare-fun temp705_70 () (_ BitVec 64))
(declare-fun temp705_71 () (_ BitVec 64))
(declare-fun temp705_72 () (_ BitVec 64))
(declare-fun temp705_73 () (_ BitVec 64))
(declare-fun temp705_74 () (_ BitVec 64))
(declare-fun temp705_75 () (_ BitVec 64))
(declare-fun temp705_76 () (_ BitVec 64))
(declare-fun temp705_77 () (_ BitVec 64))
(declare-fun temp705_78 () (_ BitVec 64))
(declare-fun temp705_79 () (_ BitVec 64))
(declare-fun temp705_80 () (_ BitVec 64))
(declare-fun temp705_81 () (_ BitVec 64))
(declare-fun temp705_82 () (_ BitVec 64))
(declare-fun temp705_83 () (_ BitVec 64))
(declare-fun temp705_84 () (_ BitVec 64))
(declare-fun temp705_85 () (_ BitVec 64))
(declare-fun temp705_86 () (_ BitVec 64))
(declare-fun temp705_87 () (_ BitVec 64))
(declare-fun temp705_88 () (_ BitVec 64))
(declare-fun temp705_89 () (_ BitVec 64))
(declare-fun temp705_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp705_91 () (_ BitVec 64))
(declare-fun temp705_92 () (_ BitVec 64))
(declare-fun temp705_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_94 () (_ BitVec 64))
(declare-fun temp705_95 () (_ BitVec 64))
(declare-fun temp705_96 () (_ BitVec 64))
(declare-fun temp705_97 () (_ BitVec 64))
(declare-fun temp705_98 () (_ BitVec 64))
(declare-fun temp705_99 () (_ BitVec 64))
(declare-fun temp705_100 () (_ BitVec 64))
(declare-fun temp705_101 () (_ BitVec 64))
(declare-fun temp705_102 () (_ BitVec 64))
(declare-fun temp705_103 () (_ BitVec 64))
(declare-fun temp705_104 () (_ BitVec 64))
(declare-fun temp705_105 () (_ BitVec 64))
(declare-fun temp705_106 () (_ BitVec 64))
(declare-fun temp705_107 () (_ BitVec 64))
(declare-fun temp705_108 () (_ BitVec 64))
(declare-fun temp705_109 () (_ BitVec 64))
(declare-fun temp705_110 () (_ BitVec 64))
(declare-fun temp705_111 () (_ BitVec 64))
(declare-fun temp705_112 () (_ BitVec 64))
(declare-fun temp705_113 () (_ BitVec 64))
(declare-fun temp705_114 () (_ BitVec 64))
(declare-fun temp705_115 () (_ BitVec 64))
(declare-fun temp705_116 () (_ BitVec 64))
(declare-fun temp705_117 () (_ BitVec 64))
(declare-fun temp705_118 () (_ BitVec 64))
(declare-fun temp705_119 () (_ BitVec 64))
(declare-fun temp705_120 () (_ BitVec 64))
(declare-fun temp705_121 () (_ BitVec 64))
(declare-fun temp705_122 () (_ BitVec 64))
(declare-fun temp705_123 () (_ BitVec 64))
(declare-fun temp705_124 () (_ BitVec 64))
(declare-fun temp705_125 () (_ BitVec 64))
(declare-fun temp705_126 () (_ BitVec 64))
(declare-fun temp705_127 () (_ BitVec 64))
(declare-fun temp705_128 () (_ BitVec 64))
(declare-fun temp705_129 () (_ BitVec 64))
(declare-fun temp705_130 () (_ BitVec 64))
(declare-fun temp705_131 () (_ BitVec 64))
(declare-fun temp705_132 () (_ BitVec 64))
(declare-fun temp705_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp705_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp705_135 () (_ BitVec 64))
(declare-fun temp705_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp705_137 () (_ BitVec 64))
(declare-fun temp705_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_139 () (_ BitVec 64))
(declare-fun temp705_140 () (_ BitVec 64))
(declare-fun temp705_141 () (_ BitVec 64))
(declare-fun temp705_142 () (_ BitVec 64))
(declare-fun temp705_143 () (_ BitVec 64))
(declare-fun temp705_144 () (_ BitVec 64))
(declare-fun temp705_145 () (_ BitVec 64))
(declare-fun temp705_146 () (_ BitVec 64))
(declare-fun temp705_147 () (_ BitVec 64))
(declare-fun temp705_148 () (_ BitVec 64))
(declare-fun temp705_149 () (_ BitVec 64))
(declare-fun temp705_150 () (_ BitVec 64))
(declare-fun temp705_151 () (_ BitVec 64))
(declare-fun temp705_152 () (_ BitVec 64))
(declare-fun temp705_153 () (_ BitVec 64))
(declare-fun temp705_154 () (_ BitVec 64))
(declare-fun temp705_156 () (_ BitVec 64))
(declare-fun temp705_157 () (_ BitVec 64))
(declare-fun temp705_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp705_158 () (_ BitVec 64))
(declare-fun temp705_159 () (_ BitVec 64))
(declare-fun temp705_161 () (_ BitVec 64))
(declare-fun temp705_162 () (_ BitVec 64))
(declare-fun temp705_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp705_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp705_164 () (_ BitVec 64))
(declare-fun temp705_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp705_166 () (_ BitVec 64))
(declare-fun temp705_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp705_168 () (_ BitVec 64))
(declare-fun temp705_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_170 () (_ BitVec 64))
(declare-fun temp705_171 () (_ BitVec 64))
(declare-fun temp705_172 () (_ BitVec 64))
(declare-fun temp705_173 () (_ BitVec 64))
(declare-fun temp705_174 () (_ BitVec 64))
(declare-fun temp705_175 () (_ BitVec 64))
(declare-fun temp705_176 () (_ BitVec 64))
(declare-fun temp705_177 () (_ BitVec 64))
(declare-fun temp705_178 () (_ BitVec 64))
(declare-fun temp705_179 () (_ BitVec 64))
(declare-fun temp705_180 () (_ BitVec 64))
(declare-fun temp705_181 () (_ BitVec 64))
(declare-fun temp705_182 () (_ BitVec 64))
(declare-fun temp705_183 () (_ BitVec 64))
(declare-fun temp705_184 () (_ BitVec 64))
(declare-fun temp705_185 () (_ BitVec 64))
(declare-fun temp705_186 () (_ BitVec 64))
(declare-fun temp705_187 () (_ BitVec 64))
(declare-fun temp705_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp705_189 () (_ BitVec 64))
(declare-fun temp705_191 () (_ BitVec 64))
(declare-fun temp705_192 () (_ BitVec 64))
(declare-fun temp705_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp705_193 () (_ BitVec 64))
(declare-fun temp705_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp705_195 () (_ BitVec 64))
(declare-fun temp705_196 () (_ BitVec 64))
(declare-fun temp705_197 () (_ BitVec 64))
(declare-fun temp705_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_199 () (_ BitVec 64))
(declare-fun temp705_200 () (_ BitVec 64))
(declare-fun temp705_201 () (_ BitVec 64))
(declare-fun temp705_202 () (_ BitVec 64))
(declare-fun temp705_203 () (_ BitVec 64))
(declare-fun temp705_204 () (_ BitVec 64))
(declare-fun temp705_205 () (_ BitVec 64))
(declare-fun temp705_206 () (_ BitVec 64))
(declare-fun temp705_207 () (_ BitVec 64))
(declare-fun temp705_208 () (_ BitVec 64))
(declare-fun temp705_209 () (_ BitVec 64))
(declare-fun temp705_210 () (_ BitVec 64))
(declare-fun temp705_211 () (_ BitVec 64))
(declare-fun temp705_212 () (_ BitVec 64))
(declare-fun temp705_213 () (_ BitVec 64))
(declare-fun temp705_214 () (_ BitVec 64))
(declare-fun temp705_215 () (_ BitVec 64))
(declare-fun temp705_216 () (_ BitVec 64))
(declare-fun temp705_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp705_218 () (_ BitVec 64))
(declare-fun temp705_220 () (_ BitVec 64))
(declare-fun temp705_221 () (_ BitVec 64))
(declare-fun temp705_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp705_222 () (_ BitVec 64))
(declare-fun temp705_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp705_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp705_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp705_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp705_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp705_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp705_229 () (_ BitVec 64))
(declare-fun temp705_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp705_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp705_232 () (_ BitVec 64))
(declare-fun temp705_233 () (_ BitVec 64))
(declare-fun temp705_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp705_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp705_236 () (_ BitVec 64))
(declare-fun temp705_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp705_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp705_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp705_241 () (_ BitVec 64))
(declare-fun temp705_240 () (_ BitVec 64))
(declare-fun temp705_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp705_243 () (_ BitVec 64))
(declare-fun temp705_244 () (_ BitVec 64))
(declare-fun temp705_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp705_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp705_247 () (_ BitVec 64))
(declare-fun temp705_249 () (_ BitVec 64))
(declare-fun temp705_248 () (_ BitVec 64))
(declare-fun temp705_250 () (_ BitVec 64))
(assert (= temp705_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp705_1)))
(assert (= temp705_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp705_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_3 #x0000000000000000))
(assert (= var79869 temp705_3))
(assert (= temp705_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp705_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_5 #x0000000000000000))
(assert (= var79914 temp705_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp705_6 #x0000000000000000))
(assert (= temp705_7 temp705_6))
(assert (= temp705_8 (select ARGNAME_padding_NAMEEND_VAL temp705_7)))
(assert (= temp705_9 #x0000000000000001))
(assert (= temp705_10 temp705_9))
(assert (= temp705_11 (select ARGNAME_padding_NAMEEND_VAL temp705_10)))
(assert (= temp705_12 #x0000000000000002))
(assert (= temp705_13 temp705_12))
(assert (= temp705_14 (select ARGNAME_padding_NAMEEND_VAL temp705_13)))
(assert (= temp705_15 #x0000000000000003))
(assert (= temp705_16 temp705_15))
(assert (= temp705_17 (select ARGNAME_padding_NAMEEND_VAL temp705_16)))
(assert (= temp705_18 #x0000000000000004))
(assert (= temp705_19 temp705_18))
(assert (= temp705_20 (select ARGNAME_padding_NAMEEND_VAL temp705_19)))
(assert (= temp705_21 #x0000000000000005))
(assert (= temp705_22 temp705_21))
(assert (= temp705_23 (select ARGNAME_padding_NAMEEND_VAL temp705_22)))
(assert (= temp705_24 #x0000000000000000))
(assert (= temp705_25 #x0000000000000000))
(assert (= temp705_26 temp705_25))
(assert (= temp705_27 (select ARGNAME_padding_NAMEEND_VAL temp705_26)))
(assert (= temp705_28 #x0000000000000000))
(assert (= temp705_29 #x0000000000000001))
(assert (= temp705_30 temp705_29))
(assert (= temp705_31 (select ARGNAME_padding_NAMEEND_VAL temp705_30)))
(assert (= temp705_32 #x0000000000000000))
(assert (= temp705_33 #x0000000000000002))
(assert (= temp705_34 temp705_33))
(assert (= temp705_35 (select ARGNAME_padding_NAMEEND_VAL temp705_34)))
(assert (= temp705_36 #x0000000000000000))
(assert (= temp705_37 #x0000000000000003))
(assert (= temp705_38 temp705_37))
(assert (= temp705_39 (select ARGNAME_padding_NAMEEND_VAL temp705_38)))
(assert (= temp705_40 #x0000000000000000))
(assert (= temp705_41 #x0000000000000004))
(assert (= temp705_42 temp705_41))
(assert (= temp705_43 (select ARGNAME_padding_NAMEEND_VAL temp705_42)))
(assert (= temp705_44 #x0000000000000000))
(assert (= temp705_45 #x0000000000000005))
(assert (= temp705_46 temp705_45))
(assert (= temp705_47 (select ARGNAME_padding_NAMEEND_VAL temp705_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp705_27 temp705_24)
             (bvslt temp705_31 temp705_28)
             (bvslt temp705_35 temp705_32)
             (bvslt temp705_39 temp705_36)
             (bvslt temp705_43 temp705_40)
             (bvslt temp705_47 temp705_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_48 #x0000000000000000))
(assert (= var1322786 temp705_48))
(assert (= temp705_49 #x0000000000000000))
(assert (= temp705_50 temp705_49))
(assert (= temp705_51 (select ARGNAME_output_padding_NAMEEND_VAL temp705_50)))
(assert (= temp705_52 #x0000000000000001))
(assert (= temp705_53 temp705_52))
(assert (= temp705_54 (select ARGNAME_output_padding_NAMEEND_VAL temp705_53)))
(assert (= temp705_55 #x0000000000000002))
(assert (= temp705_56 temp705_55))
(assert (= temp705_57 (select ARGNAME_output_padding_NAMEEND_VAL temp705_56)))
(assert (= temp705_58 #x0000000000000003))
(assert (= temp705_59 temp705_58))
(assert (= temp705_60 (select ARGNAME_output_padding_NAMEEND_VAL temp705_59)))
(assert (= temp705_61 #x0000000000000004))
(assert (= temp705_62 temp705_61))
(assert (= temp705_63 (select ARGNAME_output_padding_NAMEEND_VAL temp705_62)))
(assert (= temp705_64 #x0000000000000005))
(assert (= temp705_65 temp705_64))
(assert (= temp705_66 (select ARGNAME_output_padding_NAMEEND_VAL temp705_65)))
(assert (= temp705_67 #x0000000000000000))
(assert (= temp705_68 #x0000000000000000))
(assert (= temp705_69 temp705_68))
(assert (= temp705_70 (select ARGNAME_output_padding_NAMEEND_VAL temp705_69)))
(assert (= temp705_71 #x0000000000000000))
(assert (= temp705_72 #x0000000000000001))
(assert (= temp705_73 temp705_72))
(assert (= temp705_74 (select ARGNAME_output_padding_NAMEEND_VAL temp705_73)))
(assert (= temp705_75 #x0000000000000000))
(assert (= temp705_76 #x0000000000000002))
(assert (= temp705_77 temp705_76))
(assert (= temp705_78 (select ARGNAME_output_padding_NAMEEND_VAL temp705_77)))
(assert (= temp705_79 #x0000000000000000))
(assert (= temp705_80 #x0000000000000003))
(assert (= temp705_81 temp705_80))
(assert (= temp705_82 (select ARGNAME_output_padding_NAMEEND_VAL temp705_81)))
(assert (= temp705_83 #x0000000000000000))
(assert (= temp705_84 #x0000000000000004))
(assert (= temp705_85 temp705_84))
(assert (= temp705_86 (select ARGNAME_output_padding_NAMEEND_VAL temp705_85)))
(assert (= temp705_87 #x0000000000000000))
(assert (= temp705_88 #x0000000000000005))
(assert (= temp705_89 temp705_88))
(assert (= temp705_90 (select ARGNAME_output_padding_NAMEEND_VAL temp705_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp705_70 temp705_67)
             (bvslt temp705_74 temp705_71)
             (bvslt temp705_78 temp705_75)
             (bvslt temp705_82 temp705_79)
             (bvslt temp705_86 temp705_83)
             (bvslt temp705_90 temp705_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_91 #x0000000000000000))
(assert (= var1322797 temp705_91))
(assert (= temp705_92 #x0000000000000000))
(assert (= temp705_93 temp705_92))
(assert (= temp705_94 (select ARGNAME_stride_NAMEEND_VAL temp705_93)))
(assert (= temp705_95 #x0000000000000001))
(assert (= temp705_96 temp705_95))
(assert (= temp705_97 (select ARGNAME_stride_NAMEEND_VAL temp705_96)))
(assert (= temp705_98 #x0000000000000002))
(assert (= temp705_99 temp705_98))
(assert (= temp705_100 (select ARGNAME_stride_NAMEEND_VAL temp705_99)))
(assert (= temp705_101 #x0000000000000003))
(assert (= temp705_102 temp705_101))
(assert (= temp705_103 (select ARGNAME_stride_NAMEEND_VAL temp705_102)))
(assert (= temp705_104 #x0000000000000004))
(assert (= temp705_105 temp705_104))
(assert (= temp705_106 (select ARGNAME_stride_NAMEEND_VAL temp705_105)))
(assert (= temp705_107 #x0000000000000005))
(assert (= temp705_108 temp705_107))
(assert (= temp705_109 (select ARGNAME_stride_NAMEEND_VAL temp705_108)))
(assert (= temp705_110 #x0000000000000000))
(assert (= temp705_111 #x0000000000000000))
(assert (= temp705_112 temp705_111))
(assert (= temp705_113 (select ARGNAME_stride_NAMEEND_VAL temp705_112)))
(assert (= temp705_114 #x0000000000000000))
(assert (= temp705_115 #x0000000000000001))
(assert (= temp705_116 temp705_115))
(assert (= temp705_117 (select ARGNAME_stride_NAMEEND_VAL temp705_116)))
(assert (= temp705_118 #x0000000000000000))
(assert (= temp705_119 #x0000000000000002))
(assert (= temp705_120 temp705_119))
(assert (= temp705_121 (select ARGNAME_stride_NAMEEND_VAL temp705_120)))
(assert (= temp705_122 #x0000000000000000))
(assert (= temp705_123 #x0000000000000003))
(assert (= temp705_124 temp705_123))
(assert (= temp705_125 (select ARGNAME_stride_NAMEEND_VAL temp705_124)))
(assert (= temp705_126 #x0000000000000000))
(assert (= temp705_127 #x0000000000000004))
(assert (= temp705_128 temp705_127))
(assert (= temp705_129 (select ARGNAME_stride_NAMEEND_VAL temp705_128)))
(assert (= temp705_130 #x0000000000000000))
(assert (= temp705_131 #x0000000000000005))
(assert (= temp705_132 temp705_131))
(assert (= temp705_133 (select ARGNAME_stride_NAMEEND_VAL temp705_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp705_113 temp705_110)
             (bvsle temp705_117 temp705_114)
             (bvsle temp705_121 temp705_118)
             (bvsle temp705_125 temp705_122)
             (bvsle temp705_129 temp705_126)
             (bvsle temp705_133 temp705_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_134 #x0000000000000000))
(assert (= var1322807 temp705_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_135 #x0000000000000001))
(assert (= var1322819 temp705_135))
(assert (= temp705_136 #x0000000000000000))
(assert (= var1310898 temp705_136))
(assert (= temp705_137 #x0000000000000000))
(assert (= temp705_138 temp705_137))
(assert (= temp705_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_138)))
(assert (= temp705_140 #x0000000000000001))
(assert (= temp705_141 temp705_140))
(assert (= temp705_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_141)))
(assert (= temp705_143 #x0000000000000002))
(assert (= temp705_144 temp705_143))
(assert (= temp705_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_144)))
(assert (= temp705_146 #x0000000000000003))
(assert (= temp705_147 temp705_146))
(assert (= temp705_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_147)))
(assert (= temp705_149 #x0000000000000004))
(assert (= temp705_150 temp705_149))
(assert (= temp705_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_150)))
(assert (= temp705_152 #x0000000000000005))
(assert (= temp705_153 temp705_152))
(assert (= temp705_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_153)))
(assert (= temp705_156 var1310898))
(assert (= temp705_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_156)))
(assert (= temp705_155 temp705_157))
(assert (= var1322852
   (ite (bvslt temp705_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_158 #x0000000000000000))
(assert (= var1322852 temp705_158))
(assert (= temp705_159 #x0000000000000000))
(assert (= var1310898 temp705_159))
(assert (= temp705_161 var1310898))
(assert (= temp705_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_161)))
(assert (= temp705_160 temp705_162))
(assert (= var1322874 (bvsmod temp705_160 ARGNAME_groups_NAMEEND)))
(assert (= temp705_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp705_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp705_164 #x0000000000000001))
(assert (= var1322875 temp705_164))
(assert (= temp705_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp705_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_166 #x0000000000000001))
(assert (= var1322895 temp705_166))
(assert (= temp705_167 #x0000000000000001))
(assert (= var1311786 temp705_167))
(assert (= temp705_168 #x0000000000000000))
(assert (= temp705_169 temp705_168))
(assert (= temp705_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_169)))
(assert (= temp705_171 #x0000000000000001))
(assert (= temp705_172 temp705_171))
(assert (= temp705_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_172)))
(assert (= temp705_174 #x0000000000000002))
(assert (= temp705_175 temp705_174))
(assert (= temp705_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_175)))
(assert (= temp705_177 #x0000000000000003))
(assert (= temp705_178 temp705_177))
(assert (= temp705_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_178)))
(assert (= temp705_180 #x0000000000000004))
(assert (= temp705_181 temp705_180))
(assert (= temp705_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_181)))
(assert (= temp705_183 #x0000000000000005))
(assert (= temp705_184 temp705_183))
(assert (= temp705_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_184)))
(assert (= temp705_186 #x0000000000000000))
(assert (= temp705_187
   (ite (bvslt var1311786 temp705_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp705_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_187)))
(assert (= var1322903 temp705_188))
(assert (bvslt (ite (bvslt var1311786 temp705_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp705_189 #x0000000000000001))
(assert (= var1311786 temp705_189))
(assert (= temp705_191 var1311786))
(assert (= temp705_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_191)))
(assert (= temp705_190 temp705_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp705_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp705_193 #x0000000000000001))
(assert (= var1322908 temp705_193))
(assert (= temp705_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp705_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_195 #x0000000000000001))
(assert (= var1322975 temp705_195))
(assert (= temp705_196 #x0000000000000000))
(assert (= var1310898 temp705_196))
(assert (= temp705_197 #x0000000000000000))
(assert (= temp705_198 temp705_197))
(assert (= temp705_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp705_198)))
(assert (= temp705_200 #x0000000000000001))
(assert (= temp705_201 temp705_200))
(assert (= temp705_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp705_201)))
(assert (= temp705_203 #x0000000000000002))
(assert (= temp705_204 temp705_203))
(assert (= temp705_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp705_204)))
(assert (= temp705_206 #x0000000000000003))
(assert (= temp705_207 temp705_206))
(assert (= temp705_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp705_207)))
(assert (= temp705_209 #x0000000000000004))
(assert (= temp705_210 temp705_209))
(assert (= temp705_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp705_210)))
(assert (= temp705_212 #x0000000000000005))
(assert (= temp705_213 temp705_212))
(assert (= temp705_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp705_213)))
(assert (= temp705_215 #x0000000000000000))
(assert (= temp705_216
   (ite (bvslt var1310898 temp705_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp705_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp705_216)))
(assert (= var1322977 temp705_217))
(assert (bvslt (ite (bvslt var1310898 temp705_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp705_218 #x0000000000000000))
(assert (= var1310898 temp705_218))
(assert (= temp705_220 var1310898))
(assert (= temp705_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_220)))
(assert (= temp705_219 temp705_221))
(assert (= var1322980
   (ite (= var1322977 temp705_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp705_222 #x0000000000000001))
(assert (= var1322980 temp705_222))
(assert (= temp705_223 #x0000000000000002))
(assert (= var1848169 temp705_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp705_225 #x0000000000000001))
(assert (= var1323065 temp705_225))
(assert (= temp705_226 #x0000000000000001))
(assert (= var3486735 temp705_226))
(assert (= temp705_227 #x0000000000000001))
(assert (= var3814415 temp705_227))
(assert (= temp705_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp705_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_229 #x0000000000000001))
(assert (= var79986 temp705_229))
(assert (= temp705_230 #x0000000000000001))
(assert (= var80116 temp705_230))
(assert (= var4796905 var80116))
(assert (= temp705_231 #x0000000000000000))
(assert (= var4784306 temp705_231))
(assert (= temp705_232 #x0000000000000000))
(assert (= temp705_233
   (ite (bvslt var4784306 temp705_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp705_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_233)))
(assert (= var4796924 temp705_234))
(assert (bvslt (ite (bvslt var4784306 temp705_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp705_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp705_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp705_236 #x0000000000000001))
(assert (= var4796925 temp705_236))
(assert (= temp705_237 #x0000000000000000))
(assert (= var4996927 temp705_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp705_238 #x0000000000000002))
(assert (= var5125763 temp705_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_239 #x0000000000000000))
(assert (= var5191324 temp705_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp705_241 #xffffffffffffffff))
(assert (= temp705_240 temp705_241))
(assert (= temp705_242 #x0000000000000001))
(assert (= var66602 temp705_242))
(assert (= temp705_243 #x0000000000000000))
(assert (= temp705_244
   (ite (bvslt var66602 temp705_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp705_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_244)))
(assert (= var80523 temp705_245))
(assert (bvslt (ite (bvslt var66602 temp705_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp705_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp705_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp705_247 #x0000000000000001))
(assert (= var80524 temp705_247))
(assert (= temp705_249 #xffffffffffffffff))
(assert (= temp705_248 temp705_249))
(assert (= temp705_250 #x0000000000000001))
(assert (= var79986 temp705_250))
(model-add temp705_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp705_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp705_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






