(declare-fun temp790_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp790_2 () (_ BitVec 64))
(declare-fun temp790_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp790_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp790_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp790_6 () (_ BitVec 64))
(declare-fun temp790_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp790_8 () (_ BitVec 64))
(declare-fun temp790_9 () (_ BitVec 64))
(declare-fun temp790_10 () (_ BitVec 64))
(declare-fun temp790_11 () (_ BitVec 64))
(declare-fun temp790_12 () (_ BitVec 64))
(declare-fun temp790_13 () (_ BitVec 64))
(declare-fun temp790_14 () (_ BitVec 64))
(declare-fun temp790_15 () (_ BitVec 64))
(declare-fun temp790_16 () (_ BitVec 64))
(declare-fun temp790_17 () (_ BitVec 64))
(declare-fun temp790_18 () (_ BitVec 64))
(declare-fun temp790_19 () (_ BitVec 64))
(declare-fun temp790_20 () (_ BitVec 64))
(declare-fun temp790_21 () (_ BitVec 64))
(declare-fun temp790_22 () (_ BitVec 64))
(declare-fun temp790_23 () (_ BitVec 64))
(declare-fun temp790_24 () (_ BitVec 64))
(declare-fun temp790_25 () (_ BitVec 64))
(declare-fun temp790_26 () (_ BitVec 64))
(declare-fun temp790_27 () (_ BitVec 64))
(declare-fun temp790_28 () (_ BitVec 64))
(declare-fun temp790_29 () (_ BitVec 64))
(declare-fun temp790_30 () (_ BitVec 64))
(declare-fun temp790_31 () (_ BitVec 64))
(declare-fun temp790_32 () (_ BitVec 64))
(declare-fun temp790_33 () (_ BitVec 64))
(declare-fun temp790_34 () (_ BitVec 64))
(declare-fun temp790_35 () (_ BitVec 64))
(declare-fun temp790_36 () (_ BitVec 64))
(declare-fun temp790_37 () (_ BitVec 64))
(declare-fun temp790_38 () (_ BitVec 64))
(declare-fun temp790_39 () (_ BitVec 64))
(declare-fun temp790_40 () (_ BitVec 64))
(declare-fun temp790_41 () (_ BitVec 64))
(declare-fun temp790_42 () (_ BitVec 64))
(declare-fun temp790_43 () (_ BitVec 64))
(declare-fun temp790_44 () (_ BitVec 64))
(declare-fun temp790_45 () (_ BitVec 64))
(declare-fun temp790_46 () (_ BitVec 64))
(declare-fun temp790_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp790_48 () (_ BitVec 64))
(declare-fun temp790_49 () (_ BitVec 64))
(declare-fun temp790_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp790_51 () (_ BitVec 64))
(declare-fun temp790_52 () (_ BitVec 64))
(declare-fun temp790_53 () (_ BitVec 64))
(declare-fun temp790_54 () (_ BitVec 64))
(declare-fun temp790_55 () (_ BitVec 64))
(declare-fun temp790_56 () (_ BitVec 64))
(declare-fun temp790_57 () (_ BitVec 64))
(declare-fun temp790_58 () (_ BitVec 64))
(declare-fun temp790_59 () (_ BitVec 64))
(declare-fun temp790_60 () (_ BitVec 64))
(declare-fun temp790_61 () (_ BitVec 64))
(declare-fun temp790_62 () (_ BitVec 64))
(declare-fun temp790_63 () (_ BitVec 64))
(declare-fun temp790_64 () (_ BitVec 64))
(declare-fun temp790_65 () (_ BitVec 64))
(declare-fun temp790_66 () (_ BitVec 64))
(declare-fun temp790_67 () (_ BitVec 64))
(declare-fun temp790_68 () (_ BitVec 64))
(declare-fun temp790_69 () (_ BitVec 64))
(declare-fun temp790_70 () (_ BitVec 64))
(declare-fun temp790_71 () (_ BitVec 64))
(declare-fun temp790_72 () (_ BitVec 64))
(declare-fun temp790_73 () (_ BitVec 64))
(declare-fun temp790_74 () (_ BitVec 64))
(declare-fun temp790_75 () (_ BitVec 64))
(declare-fun temp790_76 () (_ BitVec 64))
(declare-fun temp790_77 () (_ BitVec 64))
(declare-fun temp790_78 () (_ BitVec 64))
(declare-fun temp790_79 () (_ BitVec 64))
(declare-fun temp790_80 () (_ BitVec 64))
(declare-fun temp790_81 () (_ BitVec 64))
(declare-fun temp790_82 () (_ BitVec 64))
(declare-fun temp790_83 () (_ BitVec 64))
(declare-fun temp790_84 () (_ BitVec 64))
(declare-fun temp790_85 () (_ BitVec 64))
(declare-fun temp790_86 () (_ BitVec 64))
(declare-fun temp790_87 () (_ BitVec 64))
(declare-fun temp790_88 () (_ BitVec 64))
(declare-fun temp790_89 () (_ BitVec 64))
(declare-fun temp790_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp790_91 () (_ BitVec 64))
(declare-fun temp790_92 () (_ BitVec 64))
(declare-fun temp790_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp790_94 () (_ BitVec 64))
(declare-fun temp790_95 () (_ BitVec 64))
(declare-fun temp790_96 () (_ BitVec 64))
(declare-fun temp790_97 () (_ BitVec 64))
(declare-fun temp790_98 () (_ BitVec 64))
(declare-fun temp790_99 () (_ BitVec 64))
(declare-fun temp790_100 () (_ BitVec 64))
(declare-fun temp790_101 () (_ BitVec 64))
(declare-fun temp790_102 () (_ BitVec 64))
(declare-fun temp790_103 () (_ BitVec 64))
(declare-fun temp790_104 () (_ BitVec 64))
(declare-fun temp790_105 () (_ BitVec 64))
(declare-fun temp790_106 () (_ BitVec 64))
(declare-fun temp790_107 () (_ BitVec 64))
(declare-fun temp790_108 () (_ BitVec 64))
(declare-fun temp790_109 () (_ BitVec 64))
(declare-fun temp790_110 () (_ BitVec 64))
(declare-fun temp790_111 () (_ BitVec 64))
(declare-fun temp790_112 () (_ BitVec 64))
(declare-fun temp790_113 () (_ BitVec 64))
(declare-fun temp790_114 () (_ BitVec 64))
(declare-fun temp790_115 () (_ BitVec 64))
(declare-fun temp790_116 () (_ BitVec 64))
(declare-fun temp790_117 () (_ BitVec 64))
(declare-fun temp790_118 () (_ BitVec 64))
(declare-fun temp790_119 () (_ BitVec 64))
(declare-fun temp790_120 () (_ BitVec 64))
(declare-fun temp790_121 () (_ BitVec 64))
(declare-fun temp790_122 () (_ BitVec 64))
(declare-fun temp790_123 () (_ BitVec 64))
(declare-fun temp790_124 () (_ BitVec 64))
(declare-fun temp790_125 () (_ BitVec 64))
(declare-fun temp790_126 () (_ BitVec 64))
(declare-fun temp790_127 () (_ BitVec 64))
(declare-fun temp790_128 () (_ BitVec 64))
(declare-fun temp790_129 () (_ BitVec 64))
(declare-fun temp790_130 () (_ BitVec 64))
(declare-fun temp790_131 () (_ BitVec 64))
(declare-fun temp790_132 () (_ BitVec 64))
(declare-fun temp790_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp790_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp790_135 () (_ BitVec 64))
(declare-fun temp790_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp790_137 () (_ BitVec 64))
(declare-fun temp790_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp790_139 () (_ BitVec 64))
(declare-fun temp790_140 () (_ BitVec 64))
(declare-fun temp790_141 () (_ BitVec 64))
(declare-fun temp790_142 () (_ BitVec 64))
(declare-fun temp790_143 () (_ BitVec 64))
(declare-fun temp790_144 () (_ BitVec 64))
(declare-fun temp790_145 () (_ BitVec 64))
(declare-fun temp790_146 () (_ BitVec 64))
(declare-fun temp790_147 () (_ BitVec 64))
(declare-fun temp790_148 () (_ BitVec 64))
(declare-fun temp790_149 () (_ BitVec 64))
(declare-fun temp790_150 () (_ BitVec 64))
(declare-fun temp790_151 () (_ BitVec 64))
(declare-fun temp790_152 () (_ BitVec 64))
(declare-fun temp790_153 () (_ BitVec 64))
(declare-fun temp790_154 () (_ BitVec 64))
(declare-fun temp790_156 () (_ BitVec 64))
(declare-fun temp790_157 () (_ BitVec 64))
(declare-fun temp790_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp790_158 () (_ BitVec 64))
(declare-fun temp790_159 () (_ BitVec 64))
(declare-fun temp790_161 () (_ BitVec 64))
(declare-fun temp790_162 () (_ BitVec 64))
(declare-fun temp790_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp790_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp790_164 () (_ BitVec 64))
(declare-fun temp790_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp790_166 () (_ BitVec 64))
(declare-fun temp790_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp790_168 () (_ BitVec 64))
(declare-fun temp790_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp790_170 () (_ BitVec 64))
(declare-fun temp790_171 () (_ BitVec 64))
(declare-fun temp790_172 () (_ BitVec 64))
(declare-fun temp790_173 () (_ BitVec 64))
(declare-fun temp790_174 () (_ BitVec 64))
(declare-fun temp790_175 () (_ BitVec 64))
(declare-fun temp790_176 () (_ BitVec 64))
(declare-fun temp790_177 () (_ BitVec 64))
(declare-fun temp790_178 () (_ BitVec 64))
(declare-fun temp790_179 () (_ BitVec 64))
(declare-fun temp790_180 () (_ BitVec 64))
(declare-fun temp790_181 () (_ BitVec 64))
(declare-fun temp790_182 () (_ BitVec 64))
(declare-fun temp790_183 () (_ BitVec 64))
(declare-fun temp790_184 () (_ BitVec 64))
(declare-fun temp790_185 () (_ BitVec 64))
(declare-fun temp790_186 () (_ BitVec 64))
(declare-fun temp790_187 () (_ BitVec 64))
(declare-fun temp790_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp790_189 () (_ BitVec 64))
(declare-fun temp790_191 () (_ BitVec 64))
(declare-fun temp790_192 () (_ BitVec 64))
(declare-fun temp790_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp790_193 () (_ BitVec 64))
(declare-fun temp790_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp790_195 () (_ BitVec 64))
(declare-fun temp790_196 () (_ BitVec 64))
(declare-fun temp790_197 () (_ BitVec 64))
(declare-fun temp790_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp790_199 () (_ BitVec 64))
(declare-fun temp790_200 () (_ BitVec 64))
(declare-fun temp790_201 () (_ BitVec 64))
(declare-fun temp790_202 () (_ BitVec 64))
(declare-fun temp790_203 () (_ BitVec 64))
(declare-fun temp790_204 () (_ BitVec 64))
(declare-fun temp790_205 () (_ BitVec 64))
(declare-fun temp790_206 () (_ BitVec 64))
(declare-fun temp790_207 () (_ BitVec 64))
(declare-fun temp790_208 () (_ BitVec 64))
(declare-fun temp790_209 () (_ BitVec 64))
(declare-fun temp790_210 () (_ BitVec 64))
(declare-fun temp790_211 () (_ BitVec 64))
(declare-fun temp790_212 () (_ BitVec 64))
(declare-fun temp790_213 () (_ BitVec 64))
(declare-fun temp790_214 () (_ BitVec 64))
(declare-fun temp790_215 () (_ BitVec 64))
(declare-fun temp790_216 () (_ BitVec 64))
(declare-fun temp790_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp790_218 () (_ BitVec 64))
(declare-fun temp790_220 () (_ BitVec 64))
(declare-fun temp790_221 () (_ BitVec 64))
(declare-fun temp790_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp790_222 () (_ BitVec 64))
(declare-fun temp790_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp790_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp790_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp790_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp790_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp790_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp790_229 () (_ BitVec 64))
(declare-fun temp790_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp790_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp790_232 () (_ BitVec 64))
(declare-fun temp790_233 () (_ BitVec 64))
(declare-fun temp790_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp790_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp790_236 () (_ BitVec 64))
(declare-fun temp790_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp790_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp790_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp790_241 () (_ BitVec 64))
(declare-fun temp790_240 () (_ BitVec 64))
(declare-fun temp790_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp790_243 () (_ BitVec 64))
(declare-fun temp790_244 () (_ BitVec 64))
(declare-fun temp790_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp790_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp790_247 () (_ BitVec 64))
(declare-fun temp790_248 () (_ BitVec 64))
(assert (= temp790_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp790_1)))
(assert (= temp790_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp790_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_3 #x0000000000000000))
(assert (= var79869 temp790_3))
(assert (= temp790_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp790_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_5 #x0000000000000000))
(assert (= var79914 temp790_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp790_6 #x0000000000000000))
(assert (= temp790_7 temp790_6))
(assert (= temp790_8 (select ARGNAME_padding_NAMEEND_VAL temp790_7)))
(assert (= temp790_9 #x0000000000000001))
(assert (= temp790_10 temp790_9))
(assert (= temp790_11 (select ARGNAME_padding_NAMEEND_VAL temp790_10)))
(assert (= temp790_12 #x0000000000000002))
(assert (= temp790_13 temp790_12))
(assert (= temp790_14 (select ARGNAME_padding_NAMEEND_VAL temp790_13)))
(assert (= temp790_15 #x0000000000000003))
(assert (= temp790_16 temp790_15))
(assert (= temp790_17 (select ARGNAME_padding_NAMEEND_VAL temp790_16)))
(assert (= temp790_18 #x0000000000000004))
(assert (= temp790_19 temp790_18))
(assert (= temp790_20 (select ARGNAME_padding_NAMEEND_VAL temp790_19)))
(assert (= temp790_21 #x0000000000000005))
(assert (= temp790_22 temp790_21))
(assert (= temp790_23 (select ARGNAME_padding_NAMEEND_VAL temp790_22)))
(assert (= temp790_24 #x0000000000000000))
(assert (= temp790_25 #x0000000000000000))
(assert (= temp790_26 temp790_25))
(assert (= temp790_27 (select ARGNAME_padding_NAMEEND_VAL temp790_26)))
(assert (= temp790_28 #x0000000000000000))
(assert (= temp790_29 #x0000000000000001))
(assert (= temp790_30 temp790_29))
(assert (= temp790_31 (select ARGNAME_padding_NAMEEND_VAL temp790_30)))
(assert (= temp790_32 #x0000000000000000))
(assert (= temp790_33 #x0000000000000002))
(assert (= temp790_34 temp790_33))
(assert (= temp790_35 (select ARGNAME_padding_NAMEEND_VAL temp790_34)))
(assert (= temp790_36 #x0000000000000000))
(assert (= temp790_37 #x0000000000000003))
(assert (= temp790_38 temp790_37))
(assert (= temp790_39 (select ARGNAME_padding_NAMEEND_VAL temp790_38)))
(assert (= temp790_40 #x0000000000000000))
(assert (= temp790_41 #x0000000000000004))
(assert (= temp790_42 temp790_41))
(assert (= temp790_43 (select ARGNAME_padding_NAMEEND_VAL temp790_42)))
(assert (= temp790_44 #x0000000000000000))
(assert (= temp790_45 #x0000000000000005))
(assert (= temp790_46 temp790_45))
(assert (= temp790_47 (select ARGNAME_padding_NAMEEND_VAL temp790_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp790_27 temp790_24)
             (bvslt temp790_31 temp790_28)
             (bvslt temp790_35 temp790_32)
             (bvslt temp790_39 temp790_36)
             (bvslt temp790_43 temp790_40)
             (bvslt temp790_47 temp790_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_48 #x0000000000000000))
(assert (= var1322786 temp790_48))
(assert (= temp790_49 #x0000000000000000))
(assert (= temp790_50 temp790_49))
(assert (= temp790_51 (select ARGNAME_output_padding_NAMEEND_VAL temp790_50)))
(assert (= temp790_52 #x0000000000000001))
(assert (= temp790_53 temp790_52))
(assert (= temp790_54 (select ARGNAME_output_padding_NAMEEND_VAL temp790_53)))
(assert (= temp790_55 #x0000000000000002))
(assert (= temp790_56 temp790_55))
(assert (= temp790_57 (select ARGNAME_output_padding_NAMEEND_VAL temp790_56)))
(assert (= temp790_58 #x0000000000000003))
(assert (= temp790_59 temp790_58))
(assert (= temp790_60 (select ARGNAME_output_padding_NAMEEND_VAL temp790_59)))
(assert (= temp790_61 #x0000000000000004))
(assert (= temp790_62 temp790_61))
(assert (= temp790_63 (select ARGNAME_output_padding_NAMEEND_VAL temp790_62)))
(assert (= temp790_64 #x0000000000000005))
(assert (= temp790_65 temp790_64))
(assert (= temp790_66 (select ARGNAME_output_padding_NAMEEND_VAL temp790_65)))
(assert (= temp790_67 #x0000000000000000))
(assert (= temp790_68 #x0000000000000000))
(assert (= temp790_69 temp790_68))
(assert (= temp790_70 (select ARGNAME_output_padding_NAMEEND_VAL temp790_69)))
(assert (= temp790_71 #x0000000000000000))
(assert (= temp790_72 #x0000000000000001))
(assert (= temp790_73 temp790_72))
(assert (= temp790_74 (select ARGNAME_output_padding_NAMEEND_VAL temp790_73)))
(assert (= temp790_75 #x0000000000000000))
(assert (= temp790_76 #x0000000000000002))
(assert (= temp790_77 temp790_76))
(assert (= temp790_78 (select ARGNAME_output_padding_NAMEEND_VAL temp790_77)))
(assert (= temp790_79 #x0000000000000000))
(assert (= temp790_80 #x0000000000000003))
(assert (= temp790_81 temp790_80))
(assert (= temp790_82 (select ARGNAME_output_padding_NAMEEND_VAL temp790_81)))
(assert (= temp790_83 #x0000000000000000))
(assert (= temp790_84 #x0000000000000004))
(assert (= temp790_85 temp790_84))
(assert (= temp790_86 (select ARGNAME_output_padding_NAMEEND_VAL temp790_85)))
(assert (= temp790_87 #x0000000000000000))
(assert (= temp790_88 #x0000000000000005))
(assert (= temp790_89 temp790_88))
(assert (= temp790_90 (select ARGNAME_output_padding_NAMEEND_VAL temp790_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp790_70 temp790_67)
             (bvslt temp790_74 temp790_71)
             (bvslt temp790_78 temp790_75)
             (bvslt temp790_82 temp790_79)
             (bvslt temp790_86 temp790_83)
             (bvslt temp790_90 temp790_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_91 #x0000000000000000))
(assert (= var1322797 temp790_91))
(assert (= temp790_92 #x0000000000000000))
(assert (= temp790_93 temp790_92))
(assert (= temp790_94 (select ARGNAME_stride_NAMEEND_VAL temp790_93)))
(assert (= temp790_95 #x0000000000000001))
(assert (= temp790_96 temp790_95))
(assert (= temp790_97 (select ARGNAME_stride_NAMEEND_VAL temp790_96)))
(assert (= temp790_98 #x0000000000000002))
(assert (= temp790_99 temp790_98))
(assert (= temp790_100 (select ARGNAME_stride_NAMEEND_VAL temp790_99)))
(assert (= temp790_101 #x0000000000000003))
(assert (= temp790_102 temp790_101))
(assert (= temp790_103 (select ARGNAME_stride_NAMEEND_VAL temp790_102)))
(assert (= temp790_104 #x0000000000000004))
(assert (= temp790_105 temp790_104))
(assert (= temp790_106 (select ARGNAME_stride_NAMEEND_VAL temp790_105)))
(assert (= temp790_107 #x0000000000000005))
(assert (= temp790_108 temp790_107))
(assert (= temp790_109 (select ARGNAME_stride_NAMEEND_VAL temp790_108)))
(assert (= temp790_110 #x0000000000000000))
(assert (= temp790_111 #x0000000000000000))
(assert (= temp790_112 temp790_111))
(assert (= temp790_113 (select ARGNAME_stride_NAMEEND_VAL temp790_112)))
(assert (= temp790_114 #x0000000000000000))
(assert (= temp790_115 #x0000000000000001))
(assert (= temp790_116 temp790_115))
(assert (= temp790_117 (select ARGNAME_stride_NAMEEND_VAL temp790_116)))
(assert (= temp790_118 #x0000000000000000))
(assert (= temp790_119 #x0000000000000002))
(assert (= temp790_120 temp790_119))
(assert (= temp790_121 (select ARGNAME_stride_NAMEEND_VAL temp790_120)))
(assert (= temp790_122 #x0000000000000000))
(assert (= temp790_123 #x0000000000000003))
(assert (= temp790_124 temp790_123))
(assert (= temp790_125 (select ARGNAME_stride_NAMEEND_VAL temp790_124)))
(assert (= temp790_126 #x0000000000000000))
(assert (= temp790_127 #x0000000000000004))
(assert (= temp790_128 temp790_127))
(assert (= temp790_129 (select ARGNAME_stride_NAMEEND_VAL temp790_128)))
(assert (= temp790_130 #x0000000000000000))
(assert (= temp790_131 #x0000000000000005))
(assert (= temp790_132 temp790_131))
(assert (= temp790_133 (select ARGNAME_stride_NAMEEND_VAL temp790_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp790_113 temp790_110)
             (bvsle temp790_117 temp790_114)
             (bvsle temp790_121 temp790_118)
             (bvsle temp790_125 temp790_122)
             (bvsle temp790_129 temp790_126)
             (bvsle temp790_133 temp790_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_134 #x0000000000000000))
(assert (= var1322807 temp790_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_135 #x0000000000000001))
(assert (= var1322819 temp790_135))
(assert (= temp790_136 #x0000000000000000))
(assert (= var1310898 temp790_136))
(assert (= temp790_137 #x0000000000000000))
(assert (= temp790_138 temp790_137))
(assert (= temp790_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_138)))
(assert (= temp790_140 #x0000000000000001))
(assert (= temp790_141 temp790_140))
(assert (= temp790_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_141)))
(assert (= temp790_143 #x0000000000000002))
(assert (= temp790_144 temp790_143))
(assert (= temp790_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_144)))
(assert (= temp790_146 #x0000000000000003))
(assert (= temp790_147 temp790_146))
(assert (= temp790_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_147)))
(assert (= temp790_149 #x0000000000000004))
(assert (= temp790_150 temp790_149))
(assert (= temp790_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_150)))
(assert (= temp790_152 #x0000000000000005))
(assert (= temp790_153 temp790_152))
(assert (= temp790_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_153)))
(assert (= temp790_156 var1310898))
(assert (= temp790_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_156)))
(assert (= temp790_155 temp790_157))
(assert (= var1322852
   (ite (bvslt temp790_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_158 #x0000000000000000))
(assert (= var1322852 temp790_158))
(assert (= temp790_159 #x0000000000000000))
(assert (= var1310898 temp790_159))
(assert (= temp790_161 var1310898))
(assert (= temp790_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_161)))
(assert (= temp790_160 temp790_162))
(assert (= var1322874 (bvsmod temp790_160 ARGNAME_groups_NAMEEND)))
(assert (= temp790_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp790_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp790_164 #x0000000000000001))
(assert (= var1322875 temp790_164))
(assert (= temp790_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp790_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_166 #x0000000000000001))
(assert (= var1322895 temp790_166))
(assert (= temp790_167 #x0000000000000001))
(assert (= var1311786 temp790_167))
(assert (= temp790_168 #x0000000000000000))
(assert (= temp790_169 temp790_168))
(assert (= temp790_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp790_169)))
(assert (= temp790_171 #x0000000000000001))
(assert (= temp790_172 temp790_171))
(assert (= temp790_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp790_172)))
(assert (= temp790_174 #x0000000000000002))
(assert (= temp790_175 temp790_174))
(assert (= temp790_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp790_175)))
(assert (= temp790_177 #x0000000000000003))
(assert (= temp790_178 temp790_177))
(assert (= temp790_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp790_178)))
(assert (= temp790_180 #x0000000000000004))
(assert (= temp790_181 temp790_180))
(assert (= temp790_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp790_181)))
(assert (= temp790_183 #x0000000000000005))
(assert (= temp790_184 temp790_183))
(assert (= temp790_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp790_184)))
(assert (= temp790_186 #x0000000000000000))
(assert (= temp790_187
   (ite (bvslt var1311786 temp790_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp790_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp790_187)))
(assert (= var1322903 temp790_188))
(assert (bvslt (ite (bvslt var1311786 temp790_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp790_189 #x0000000000000001))
(assert (= var1311786 temp790_189))
(assert (= temp790_191 var1311786))
(assert (= temp790_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_191)))
(assert (= temp790_190 temp790_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp790_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp790_193 #x0000000000000001))
(assert (= var1322908 temp790_193))
(assert (= temp790_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp790_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_195 #x0000000000000001))
(assert (= var1322975 temp790_195))
(assert (= temp790_196 #x0000000000000000))
(assert (= var1310898 temp790_196))
(assert (= temp790_197 #x0000000000000000))
(assert (= temp790_198 temp790_197))
(assert (= temp790_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp790_198)))
(assert (= temp790_200 #x0000000000000001))
(assert (= temp790_201 temp790_200))
(assert (= temp790_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp790_201)))
(assert (= temp790_203 #x0000000000000002))
(assert (= temp790_204 temp790_203))
(assert (= temp790_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp790_204)))
(assert (= temp790_206 #x0000000000000003))
(assert (= temp790_207 temp790_206))
(assert (= temp790_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp790_207)))
(assert (= temp790_209 #x0000000000000004))
(assert (= temp790_210 temp790_209))
(assert (= temp790_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp790_210)))
(assert (= temp790_212 #x0000000000000005))
(assert (= temp790_213 temp790_212))
(assert (= temp790_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp790_213)))
(assert (= temp790_215 #x0000000000000000))
(assert (= temp790_216
   (ite (bvslt var1310898 temp790_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp790_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp790_216)))
(assert (= var1322977 temp790_217))
(assert (bvslt (ite (bvslt var1310898 temp790_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp790_218 #x0000000000000000))
(assert (= var1310898 temp790_218))
(assert (= temp790_220 var1310898))
(assert (= temp790_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_220)))
(assert (= temp790_219 temp790_221))
(assert (= var1322980
   (ite (= var1322977 temp790_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp790_222 #x0000000000000001))
(assert (= var1322980 temp790_222))
(assert (= temp790_223 #x0000000000000002))
(assert (= var1848169 temp790_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp790_225 #x0000000000000001))
(assert (= var1323065 temp790_225))
(assert (= temp790_226 #x0000000000000001))
(assert (= var3486735 temp790_226))
(assert (= temp790_227 #x0000000000000001))
(assert (= var3814415 temp790_227))
(assert (= temp790_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp790_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_229 #x0000000000000001))
(assert (= var79986 temp790_229))
(assert (= temp790_230 #x0000000000000001))
(assert (= var80116 temp790_230))
(assert (= var4796905 var80116))
(assert (= temp790_231 #x0000000000000000))
(assert (= var4784306 temp790_231))
(assert (= temp790_232 #x0000000000000000))
(assert (= temp790_233
   (ite (bvslt var4784306 temp790_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp790_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp790_233)))
(assert (= var4796924 temp790_234))
(assert (bvslt (ite (bvslt var4784306 temp790_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp790_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp790_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp790_236 #x0000000000000001))
(assert (= var4796925 temp790_236))
(assert (= temp790_237 #x0000000000000000))
(assert (= var4996927 temp790_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp790_238 #x0000000000000002))
(assert (= var5125763 temp790_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_239 #x0000000000000000))
(assert (= var5191324 temp790_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp790_241 #xffffffffffffffff))
(assert (= temp790_240 temp790_241))
(assert (= temp790_242 #x0000000000000001))
(assert (= var66602 temp790_242))
(assert (= temp790_243 #x0000000000000000))
(assert (= temp790_244
   (ite (bvslt var66602 temp790_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp790_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp790_244)))
(assert (= var80523 temp790_245))
(assert (bvslt (ite (bvslt var66602 temp790_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp790_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp790_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp790_247 #x0000000000000000))
(assert (= var80524 temp790_247))
(assert (= temp790_248 #x0000000000000001))
(assert (= var79986 temp790_248))
(model-add temp790_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp790_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp790_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






