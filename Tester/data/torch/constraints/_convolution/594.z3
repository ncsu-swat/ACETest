(declare-fun temp789_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp789_2 () (_ BitVec 64))
(declare-fun temp789_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp789_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp789_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp789_6 () (_ BitVec 64))
(declare-fun temp789_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_8 () (_ BitVec 64))
(declare-fun temp789_9 () (_ BitVec 64))
(declare-fun temp789_10 () (_ BitVec 64))
(declare-fun temp789_11 () (_ BitVec 64))
(declare-fun temp789_12 () (_ BitVec 64))
(declare-fun temp789_13 () (_ BitVec 64))
(declare-fun temp789_14 () (_ BitVec 64))
(declare-fun temp789_15 () (_ BitVec 64))
(declare-fun temp789_16 () (_ BitVec 64))
(declare-fun temp789_17 () (_ BitVec 64))
(declare-fun temp789_18 () (_ BitVec 64))
(declare-fun temp789_19 () (_ BitVec 64))
(declare-fun temp789_20 () (_ BitVec 64))
(declare-fun temp789_21 () (_ BitVec 64))
(declare-fun temp789_22 () (_ BitVec 64))
(declare-fun temp789_23 () (_ BitVec 64))
(declare-fun temp789_24 () (_ BitVec 64))
(declare-fun temp789_25 () (_ BitVec 64))
(declare-fun temp789_26 () (_ BitVec 64))
(declare-fun temp789_27 () (_ BitVec 64))
(declare-fun temp789_28 () (_ BitVec 64))
(declare-fun temp789_29 () (_ BitVec 64))
(declare-fun temp789_30 () (_ BitVec 64))
(declare-fun temp789_31 () (_ BitVec 64))
(declare-fun temp789_32 () (_ BitVec 64))
(declare-fun temp789_33 () (_ BitVec 64))
(declare-fun temp789_34 () (_ BitVec 64))
(declare-fun temp789_35 () (_ BitVec 64))
(declare-fun temp789_36 () (_ BitVec 64))
(declare-fun temp789_37 () (_ BitVec 64))
(declare-fun temp789_38 () (_ BitVec 64))
(declare-fun temp789_39 () (_ BitVec 64))
(declare-fun temp789_40 () (_ BitVec 64))
(declare-fun temp789_41 () (_ BitVec 64))
(declare-fun temp789_42 () (_ BitVec 64))
(declare-fun temp789_43 () (_ BitVec 64))
(declare-fun temp789_44 () (_ BitVec 64))
(declare-fun temp789_45 () (_ BitVec 64))
(declare-fun temp789_46 () (_ BitVec 64))
(declare-fun temp789_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp789_48 () (_ BitVec 64))
(declare-fun temp789_49 () (_ BitVec 64))
(declare-fun temp789_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_51 () (_ BitVec 64))
(declare-fun temp789_52 () (_ BitVec 64))
(declare-fun temp789_53 () (_ BitVec 64))
(declare-fun temp789_54 () (_ BitVec 64))
(declare-fun temp789_55 () (_ BitVec 64))
(declare-fun temp789_56 () (_ BitVec 64))
(declare-fun temp789_57 () (_ BitVec 64))
(declare-fun temp789_58 () (_ BitVec 64))
(declare-fun temp789_59 () (_ BitVec 64))
(declare-fun temp789_60 () (_ BitVec 64))
(declare-fun temp789_61 () (_ BitVec 64))
(declare-fun temp789_62 () (_ BitVec 64))
(declare-fun temp789_63 () (_ BitVec 64))
(declare-fun temp789_64 () (_ BitVec 64))
(declare-fun temp789_65 () (_ BitVec 64))
(declare-fun temp789_66 () (_ BitVec 64))
(declare-fun temp789_67 () (_ BitVec 64))
(declare-fun temp789_68 () (_ BitVec 64))
(declare-fun temp789_69 () (_ BitVec 64))
(declare-fun temp789_70 () (_ BitVec 64))
(declare-fun temp789_71 () (_ BitVec 64))
(declare-fun temp789_72 () (_ BitVec 64))
(declare-fun temp789_73 () (_ BitVec 64))
(declare-fun temp789_74 () (_ BitVec 64))
(declare-fun temp789_75 () (_ BitVec 64))
(declare-fun temp789_76 () (_ BitVec 64))
(declare-fun temp789_77 () (_ BitVec 64))
(declare-fun temp789_78 () (_ BitVec 64))
(declare-fun temp789_79 () (_ BitVec 64))
(declare-fun temp789_80 () (_ BitVec 64))
(declare-fun temp789_81 () (_ BitVec 64))
(declare-fun temp789_82 () (_ BitVec 64))
(declare-fun temp789_83 () (_ BitVec 64))
(declare-fun temp789_84 () (_ BitVec 64))
(declare-fun temp789_85 () (_ BitVec 64))
(declare-fun temp789_86 () (_ BitVec 64))
(declare-fun temp789_87 () (_ BitVec 64))
(declare-fun temp789_88 () (_ BitVec 64))
(declare-fun temp789_89 () (_ BitVec 64))
(declare-fun temp789_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp789_91 () (_ BitVec 64))
(declare-fun temp789_92 () (_ BitVec 64))
(declare-fun temp789_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_94 () (_ BitVec 64))
(declare-fun temp789_95 () (_ BitVec 64))
(declare-fun temp789_96 () (_ BitVec 64))
(declare-fun temp789_97 () (_ BitVec 64))
(declare-fun temp789_98 () (_ BitVec 64))
(declare-fun temp789_99 () (_ BitVec 64))
(declare-fun temp789_100 () (_ BitVec 64))
(declare-fun temp789_101 () (_ BitVec 64))
(declare-fun temp789_102 () (_ BitVec 64))
(declare-fun temp789_103 () (_ BitVec 64))
(declare-fun temp789_104 () (_ BitVec 64))
(declare-fun temp789_105 () (_ BitVec 64))
(declare-fun temp789_106 () (_ BitVec 64))
(declare-fun temp789_107 () (_ BitVec 64))
(declare-fun temp789_108 () (_ BitVec 64))
(declare-fun temp789_109 () (_ BitVec 64))
(declare-fun temp789_110 () (_ BitVec 64))
(declare-fun temp789_111 () (_ BitVec 64))
(declare-fun temp789_112 () (_ BitVec 64))
(declare-fun temp789_113 () (_ BitVec 64))
(declare-fun temp789_114 () (_ BitVec 64))
(declare-fun temp789_115 () (_ BitVec 64))
(declare-fun temp789_116 () (_ BitVec 64))
(declare-fun temp789_117 () (_ BitVec 64))
(declare-fun temp789_118 () (_ BitVec 64))
(declare-fun temp789_119 () (_ BitVec 64))
(declare-fun temp789_120 () (_ BitVec 64))
(declare-fun temp789_121 () (_ BitVec 64))
(declare-fun temp789_122 () (_ BitVec 64))
(declare-fun temp789_123 () (_ BitVec 64))
(declare-fun temp789_124 () (_ BitVec 64))
(declare-fun temp789_125 () (_ BitVec 64))
(declare-fun temp789_126 () (_ BitVec 64))
(declare-fun temp789_127 () (_ BitVec 64))
(declare-fun temp789_128 () (_ BitVec 64))
(declare-fun temp789_129 () (_ BitVec 64))
(declare-fun temp789_130 () (_ BitVec 64))
(declare-fun temp789_131 () (_ BitVec 64))
(declare-fun temp789_132 () (_ BitVec 64))
(declare-fun temp789_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp789_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp789_135 () (_ BitVec 64))
(declare-fun temp789_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp789_137 () (_ BitVec 64))
(declare-fun temp789_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_139 () (_ BitVec 64))
(declare-fun temp789_140 () (_ BitVec 64))
(declare-fun temp789_141 () (_ BitVec 64))
(declare-fun temp789_142 () (_ BitVec 64))
(declare-fun temp789_143 () (_ BitVec 64))
(declare-fun temp789_144 () (_ BitVec 64))
(declare-fun temp789_145 () (_ BitVec 64))
(declare-fun temp789_146 () (_ BitVec 64))
(declare-fun temp789_147 () (_ BitVec 64))
(declare-fun temp789_148 () (_ BitVec 64))
(declare-fun temp789_149 () (_ BitVec 64))
(declare-fun temp789_150 () (_ BitVec 64))
(declare-fun temp789_151 () (_ BitVec 64))
(declare-fun temp789_152 () (_ BitVec 64))
(declare-fun temp789_153 () (_ BitVec 64))
(declare-fun temp789_154 () (_ BitVec 64))
(declare-fun temp789_156 () (_ BitVec 64))
(declare-fun temp789_157 () (_ BitVec 64))
(declare-fun temp789_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp789_158 () (_ BitVec 64))
(declare-fun temp789_159 () (_ BitVec 64))
(declare-fun temp789_161 () (_ BitVec 64))
(declare-fun temp789_162 () (_ BitVec 64))
(declare-fun temp789_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp789_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp789_164 () (_ BitVec 64))
(declare-fun temp789_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp789_166 () (_ BitVec 64))
(declare-fun temp789_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp789_168 () (_ BitVec 64))
(declare-fun temp789_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_170 () (_ BitVec 64))
(declare-fun temp789_171 () (_ BitVec 64))
(declare-fun temp789_172 () (_ BitVec 64))
(declare-fun temp789_173 () (_ BitVec 64))
(declare-fun temp789_174 () (_ BitVec 64))
(declare-fun temp789_175 () (_ BitVec 64))
(declare-fun temp789_176 () (_ BitVec 64))
(declare-fun temp789_177 () (_ BitVec 64))
(declare-fun temp789_178 () (_ BitVec 64))
(declare-fun temp789_179 () (_ BitVec 64))
(declare-fun temp789_180 () (_ BitVec 64))
(declare-fun temp789_181 () (_ BitVec 64))
(declare-fun temp789_182 () (_ BitVec 64))
(declare-fun temp789_183 () (_ BitVec 64))
(declare-fun temp789_184 () (_ BitVec 64))
(declare-fun temp789_185 () (_ BitVec 64))
(declare-fun temp789_186 () (_ BitVec 64))
(declare-fun temp789_187 () (_ BitVec 64))
(declare-fun temp789_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp789_189 () (_ BitVec 64))
(declare-fun temp789_191 () (_ BitVec 64))
(declare-fun temp789_192 () (_ BitVec 64))
(declare-fun temp789_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp789_193 () (_ BitVec 64))
(declare-fun temp789_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp789_195 () (_ BitVec 64))
(declare-fun temp789_196 () (_ BitVec 64))
(declare-fun temp789_197 () (_ BitVec 64))
(declare-fun temp789_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_199 () (_ BitVec 64))
(declare-fun temp789_200 () (_ BitVec 64))
(declare-fun temp789_201 () (_ BitVec 64))
(declare-fun temp789_202 () (_ BitVec 64))
(declare-fun temp789_203 () (_ BitVec 64))
(declare-fun temp789_204 () (_ BitVec 64))
(declare-fun temp789_205 () (_ BitVec 64))
(declare-fun temp789_206 () (_ BitVec 64))
(declare-fun temp789_207 () (_ BitVec 64))
(declare-fun temp789_208 () (_ BitVec 64))
(declare-fun temp789_209 () (_ BitVec 64))
(declare-fun temp789_210 () (_ BitVec 64))
(declare-fun temp789_211 () (_ BitVec 64))
(declare-fun temp789_212 () (_ BitVec 64))
(declare-fun temp789_213 () (_ BitVec 64))
(declare-fun temp789_214 () (_ BitVec 64))
(declare-fun temp789_215 () (_ BitVec 64))
(declare-fun temp789_216 () (_ BitVec 64))
(declare-fun temp789_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp789_218 () (_ BitVec 64))
(declare-fun temp789_220 () (_ BitVec 64))
(declare-fun temp789_221 () (_ BitVec 64))
(declare-fun temp789_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp789_222 () (_ BitVec 64))
(declare-fun temp789_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp789_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp789_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp789_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp789_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp789_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp789_229 () (_ BitVec 64))
(declare-fun temp789_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp789_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp789_232 () (_ BitVec 64))
(declare-fun temp789_233 () (_ BitVec 64))
(declare-fun temp789_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp789_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp789_236 () (_ BitVec 64))
(declare-fun temp789_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp789_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp789_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp789_241 () (_ BitVec 64))
(declare-fun temp789_240 () (_ BitVec 64))
(declare-fun temp789_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp789_243 () (_ BitVec 64))
(declare-fun temp789_244 () (_ BitVec 64))
(declare-fun temp789_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp789_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp789_247 () (_ BitVec 64))
(declare-fun temp789_248 () (_ BitVec 64))
(assert (= temp789_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp789_1)))
(assert (= temp789_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp789_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_3 #x0000000000000000))
(assert (= var79869 temp789_3))
(assert (= temp789_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp789_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_5 #x0000000000000000))
(assert (= var79914 temp789_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp789_6 #x0000000000000000))
(assert (= temp789_7 temp789_6))
(assert (= temp789_8 (select ARGNAME_padding_NAMEEND_VAL temp789_7)))
(assert (= temp789_9 #x0000000000000001))
(assert (= temp789_10 temp789_9))
(assert (= temp789_11 (select ARGNAME_padding_NAMEEND_VAL temp789_10)))
(assert (= temp789_12 #x0000000000000002))
(assert (= temp789_13 temp789_12))
(assert (= temp789_14 (select ARGNAME_padding_NAMEEND_VAL temp789_13)))
(assert (= temp789_15 #x0000000000000003))
(assert (= temp789_16 temp789_15))
(assert (= temp789_17 (select ARGNAME_padding_NAMEEND_VAL temp789_16)))
(assert (= temp789_18 #x0000000000000004))
(assert (= temp789_19 temp789_18))
(assert (= temp789_20 (select ARGNAME_padding_NAMEEND_VAL temp789_19)))
(assert (= temp789_21 #x0000000000000005))
(assert (= temp789_22 temp789_21))
(assert (= temp789_23 (select ARGNAME_padding_NAMEEND_VAL temp789_22)))
(assert (= temp789_24 #x0000000000000000))
(assert (= temp789_25 #x0000000000000000))
(assert (= temp789_26 temp789_25))
(assert (= temp789_27 (select ARGNAME_padding_NAMEEND_VAL temp789_26)))
(assert (= temp789_28 #x0000000000000000))
(assert (= temp789_29 #x0000000000000001))
(assert (= temp789_30 temp789_29))
(assert (= temp789_31 (select ARGNAME_padding_NAMEEND_VAL temp789_30)))
(assert (= temp789_32 #x0000000000000000))
(assert (= temp789_33 #x0000000000000002))
(assert (= temp789_34 temp789_33))
(assert (= temp789_35 (select ARGNAME_padding_NAMEEND_VAL temp789_34)))
(assert (= temp789_36 #x0000000000000000))
(assert (= temp789_37 #x0000000000000003))
(assert (= temp789_38 temp789_37))
(assert (= temp789_39 (select ARGNAME_padding_NAMEEND_VAL temp789_38)))
(assert (= temp789_40 #x0000000000000000))
(assert (= temp789_41 #x0000000000000004))
(assert (= temp789_42 temp789_41))
(assert (= temp789_43 (select ARGNAME_padding_NAMEEND_VAL temp789_42)))
(assert (= temp789_44 #x0000000000000000))
(assert (= temp789_45 #x0000000000000005))
(assert (= temp789_46 temp789_45))
(assert (= temp789_47 (select ARGNAME_padding_NAMEEND_VAL temp789_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp789_27 temp789_24)
             (bvslt temp789_31 temp789_28)
             (bvslt temp789_35 temp789_32)
             (bvslt temp789_39 temp789_36)
             (bvslt temp789_43 temp789_40)
             (bvslt temp789_47 temp789_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_48 #x0000000000000000))
(assert (= var1322786 temp789_48))
(assert (= temp789_49 #x0000000000000000))
(assert (= temp789_50 temp789_49))
(assert (= temp789_51 (select ARGNAME_output_padding_NAMEEND_VAL temp789_50)))
(assert (= temp789_52 #x0000000000000001))
(assert (= temp789_53 temp789_52))
(assert (= temp789_54 (select ARGNAME_output_padding_NAMEEND_VAL temp789_53)))
(assert (= temp789_55 #x0000000000000002))
(assert (= temp789_56 temp789_55))
(assert (= temp789_57 (select ARGNAME_output_padding_NAMEEND_VAL temp789_56)))
(assert (= temp789_58 #x0000000000000003))
(assert (= temp789_59 temp789_58))
(assert (= temp789_60 (select ARGNAME_output_padding_NAMEEND_VAL temp789_59)))
(assert (= temp789_61 #x0000000000000004))
(assert (= temp789_62 temp789_61))
(assert (= temp789_63 (select ARGNAME_output_padding_NAMEEND_VAL temp789_62)))
(assert (= temp789_64 #x0000000000000005))
(assert (= temp789_65 temp789_64))
(assert (= temp789_66 (select ARGNAME_output_padding_NAMEEND_VAL temp789_65)))
(assert (= temp789_67 #x0000000000000000))
(assert (= temp789_68 #x0000000000000000))
(assert (= temp789_69 temp789_68))
(assert (= temp789_70 (select ARGNAME_output_padding_NAMEEND_VAL temp789_69)))
(assert (= temp789_71 #x0000000000000000))
(assert (= temp789_72 #x0000000000000001))
(assert (= temp789_73 temp789_72))
(assert (= temp789_74 (select ARGNAME_output_padding_NAMEEND_VAL temp789_73)))
(assert (= temp789_75 #x0000000000000000))
(assert (= temp789_76 #x0000000000000002))
(assert (= temp789_77 temp789_76))
(assert (= temp789_78 (select ARGNAME_output_padding_NAMEEND_VAL temp789_77)))
(assert (= temp789_79 #x0000000000000000))
(assert (= temp789_80 #x0000000000000003))
(assert (= temp789_81 temp789_80))
(assert (= temp789_82 (select ARGNAME_output_padding_NAMEEND_VAL temp789_81)))
(assert (= temp789_83 #x0000000000000000))
(assert (= temp789_84 #x0000000000000004))
(assert (= temp789_85 temp789_84))
(assert (= temp789_86 (select ARGNAME_output_padding_NAMEEND_VAL temp789_85)))
(assert (= temp789_87 #x0000000000000000))
(assert (= temp789_88 #x0000000000000005))
(assert (= temp789_89 temp789_88))
(assert (= temp789_90 (select ARGNAME_output_padding_NAMEEND_VAL temp789_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp789_70 temp789_67)
             (bvslt temp789_74 temp789_71)
             (bvslt temp789_78 temp789_75)
             (bvslt temp789_82 temp789_79)
             (bvslt temp789_86 temp789_83)
             (bvslt temp789_90 temp789_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_91 #x0000000000000000))
(assert (= var1322797 temp789_91))
(assert (= temp789_92 #x0000000000000000))
(assert (= temp789_93 temp789_92))
(assert (= temp789_94 (select ARGNAME_stride_NAMEEND_VAL temp789_93)))
(assert (= temp789_95 #x0000000000000001))
(assert (= temp789_96 temp789_95))
(assert (= temp789_97 (select ARGNAME_stride_NAMEEND_VAL temp789_96)))
(assert (= temp789_98 #x0000000000000002))
(assert (= temp789_99 temp789_98))
(assert (= temp789_100 (select ARGNAME_stride_NAMEEND_VAL temp789_99)))
(assert (= temp789_101 #x0000000000000003))
(assert (= temp789_102 temp789_101))
(assert (= temp789_103 (select ARGNAME_stride_NAMEEND_VAL temp789_102)))
(assert (= temp789_104 #x0000000000000004))
(assert (= temp789_105 temp789_104))
(assert (= temp789_106 (select ARGNAME_stride_NAMEEND_VAL temp789_105)))
(assert (= temp789_107 #x0000000000000005))
(assert (= temp789_108 temp789_107))
(assert (= temp789_109 (select ARGNAME_stride_NAMEEND_VAL temp789_108)))
(assert (= temp789_110 #x0000000000000000))
(assert (= temp789_111 #x0000000000000000))
(assert (= temp789_112 temp789_111))
(assert (= temp789_113 (select ARGNAME_stride_NAMEEND_VAL temp789_112)))
(assert (= temp789_114 #x0000000000000000))
(assert (= temp789_115 #x0000000000000001))
(assert (= temp789_116 temp789_115))
(assert (= temp789_117 (select ARGNAME_stride_NAMEEND_VAL temp789_116)))
(assert (= temp789_118 #x0000000000000000))
(assert (= temp789_119 #x0000000000000002))
(assert (= temp789_120 temp789_119))
(assert (= temp789_121 (select ARGNAME_stride_NAMEEND_VAL temp789_120)))
(assert (= temp789_122 #x0000000000000000))
(assert (= temp789_123 #x0000000000000003))
(assert (= temp789_124 temp789_123))
(assert (= temp789_125 (select ARGNAME_stride_NAMEEND_VAL temp789_124)))
(assert (= temp789_126 #x0000000000000000))
(assert (= temp789_127 #x0000000000000004))
(assert (= temp789_128 temp789_127))
(assert (= temp789_129 (select ARGNAME_stride_NAMEEND_VAL temp789_128)))
(assert (= temp789_130 #x0000000000000000))
(assert (= temp789_131 #x0000000000000005))
(assert (= temp789_132 temp789_131))
(assert (= temp789_133 (select ARGNAME_stride_NAMEEND_VAL temp789_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp789_113 temp789_110)
             (bvsle temp789_117 temp789_114)
             (bvsle temp789_121 temp789_118)
             (bvsle temp789_125 temp789_122)
             (bvsle temp789_129 temp789_126)
             (bvsle temp789_133 temp789_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_134 #x0000000000000000))
(assert (= var1322807 temp789_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_135 #x0000000000000001))
(assert (= var1322819 temp789_135))
(assert (= temp789_136 #x0000000000000000))
(assert (= var1310898 temp789_136))
(assert (= temp789_137 #x0000000000000000))
(assert (= temp789_138 temp789_137))
(assert (= temp789_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_138)))
(assert (= temp789_140 #x0000000000000001))
(assert (= temp789_141 temp789_140))
(assert (= temp789_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_141)))
(assert (= temp789_143 #x0000000000000002))
(assert (= temp789_144 temp789_143))
(assert (= temp789_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_144)))
(assert (= temp789_146 #x0000000000000003))
(assert (= temp789_147 temp789_146))
(assert (= temp789_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_147)))
(assert (= temp789_149 #x0000000000000004))
(assert (= temp789_150 temp789_149))
(assert (= temp789_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_150)))
(assert (= temp789_152 #x0000000000000005))
(assert (= temp789_153 temp789_152))
(assert (= temp789_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_153)))
(assert (= temp789_156 var1310898))
(assert (= temp789_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_156)))
(assert (= temp789_155 temp789_157))
(assert (= var1322852
   (ite (bvslt temp789_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_158 #x0000000000000000))
(assert (= var1322852 temp789_158))
(assert (= temp789_159 #x0000000000000000))
(assert (= var1310898 temp789_159))
(assert (= temp789_161 var1310898))
(assert (= temp789_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_161)))
(assert (= temp789_160 temp789_162))
(assert (= var1322874 (bvsmod temp789_160 ARGNAME_groups_NAMEEND)))
(assert (= temp789_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp789_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_164 #x0000000000000001))
(assert (= var1322875 temp789_164))
(assert (= temp789_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp789_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_166 #x0000000000000001))
(assert (= var1322895 temp789_166))
(assert (= temp789_167 #x0000000000000001))
(assert (= var1311786 temp789_167))
(assert (= temp789_168 #x0000000000000000))
(assert (= temp789_169 temp789_168))
(assert (= temp789_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_169)))
(assert (= temp789_171 #x0000000000000001))
(assert (= temp789_172 temp789_171))
(assert (= temp789_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_172)))
(assert (= temp789_174 #x0000000000000002))
(assert (= temp789_175 temp789_174))
(assert (= temp789_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_175)))
(assert (= temp789_177 #x0000000000000003))
(assert (= temp789_178 temp789_177))
(assert (= temp789_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_178)))
(assert (= temp789_180 #x0000000000000004))
(assert (= temp789_181 temp789_180))
(assert (= temp789_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_181)))
(assert (= temp789_183 #x0000000000000005))
(assert (= temp789_184 temp789_183))
(assert (= temp789_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_184)))
(assert (= temp789_186 #x0000000000000000))
(assert (= temp789_187
   (ite (bvslt var1311786 temp789_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp789_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_187)))
(assert (= var1322903 temp789_188))
(assert (bvslt (ite (bvslt var1311786 temp789_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp789_189 #x0000000000000001))
(assert (= var1311786 temp789_189))
(assert (= temp789_191 var1311786))
(assert (= temp789_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_191)))
(assert (= temp789_190 temp789_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp789_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_193 #x0000000000000001))
(assert (= var1322908 temp789_193))
(assert (= temp789_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp789_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_195 #x0000000000000001))
(assert (= var1322975 temp789_195))
(assert (= temp789_196 #x0000000000000000))
(assert (= var1310898 temp789_196))
(assert (= temp789_197 #x0000000000000000))
(assert (= temp789_198 temp789_197))
(assert (= temp789_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp789_198)))
(assert (= temp789_200 #x0000000000000001))
(assert (= temp789_201 temp789_200))
(assert (= temp789_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp789_201)))
(assert (= temp789_203 #x0000000000000002))
(assert (= temp789_204 temp789_203))
(assert (= temp789_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp789_204)))
(assert (= temp789_206 #x0000000000000003))
(assert (= temp789_207 temp789_206))
(assert (= temp789_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp789_207)))
(assert (= temp789_209 #x0000000000000004))
(assert (= temp789_210 temp789_209))
(assert (= temp789_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp789_210)))
(assert (= temp789_212 #x0000000000000005))
(assert (= temp789_213 temp789_212))
(assert (= temp789_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp789_213)))
(assert (= temp789_215 #x0000000000000000))
(assert (= temp789_216
   (ite (bvslt var1310898 temp789_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp789_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp789_216)))
(assert (= var1322977 temp789_217))
(assert (bvslt (ite (bvslt var1310898 temp789_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp789_218 #x0000000000000000))
(assert (= var1310898 temp789_218))
(assert (= temp789_220 var1310898))
(assert (= temp789_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_220)))
(assert (= temp789_219 temp789_221))
(assert (= var1322980
   (ite (= var1322977 temp789_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_222 #x0000000000000001))
(assert (= var1322980 temp789_222))
(assert (= temp789_223 #x0000000000000002))
(assert (= var1848169 temp789_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp789_225 #x0000000000000001))
(assert (= var1323065 temp789_225))
(assert (= temp789_226 #x0000000000000001))
(assert (= var3486735 temp789_226))
(assert (= temp789_227 #x0000000000000001))
(assert (= var3814415 temp789_227))
(assert (= temp789_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp789_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_229 #x0000000000000001))
(assert (= var79986 temp789_229))
(assert (= temp789_230 #x0000000000000001))
(assert (= var80116 temp789_230))
(assert (= var4796905 var80116))
(assert (= temp789_231 #x0000000000000000))
(assert (= var4784306 temp789_231))
(assert (= temp789_232 #x0000000000000000))
(assert (= temp789_233
   (ite (bvslt var4784306 temp789_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp789_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_233)))
(assert (= var4796924 temp789_234))
(assert (bvslt (ite (bvslt var4784306 temp789_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp789_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp789_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_236 #x0000000000000001))
(assert (= var4796925 temp789_236))
(assert (= temp789_237 #x0000000000000000))
(assert (= var4996927 temp789_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp789_238 #x0000000000000002))
(assert (= var5125763 temp789_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_239 #x0000000000000000))
(assert (= var5191324 temp789_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp789_241 #xffffffffffffffff))
(assert (= temp789_240 temp789_241))
(assert (= temp789_242 #x0000000000000001))
(assert (= var66602 temp789_242))
(assert (= temp789_243 #x0000000000000000))
(assert (= temp789_244
   (ite (bvslt var66602 temp789_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp789_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_244)))
(assert (= var80523 temp789_245))
(assert (bvslt (ite (bvslt var66602 temp789_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp789_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp789_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_247 #x0000000000000000))
(assert (= var80524 temp789_247))
(assert (= temp789_248 #x0000000000000001))
(assert (= var79986 temp789_248))
(model-add temp789_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp789_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp789_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






