(declare-fun temp38_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp38_2 () (_ BitVec 64))
(declare-fun temp38_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp38_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp38_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp38_6 () (_ BitVec 64))
(declare-fun temp38_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_8 () (_ BitVec 64))
(declare-fun temp38_9 () (_ BitVec 64))
(declare-fun temp38_10 () (_ BitVec 64))
(declare-fun temp38_11 () (_ BitVec 64))
(declare-fun temp38_12 () (_ BitVec 64))
(declare-fun temp38_13 () (_ BitVec 64))
(declare-fun temp38_14 () (_ BitVec 64))
(declare-fun temp38_15 () (_ BitVec 64))
(declare-fun temp38_16 () (_ BitVec 64))
(declare-fun temp38_17 () (_ BitVec 64))
(declare-fun temp38_18 () (_ BitVec 64))
(declare-fun temp38_19 () (_ BitVec 64))
(declare-fun temp38_20 () (_ BitVec 64))
(declare-fun temp38_21 () (_ BitVec 64))
(declare-fun temp38_22 () (_ BitVec 64))
(declare-fun temp38_23 () (_ BitVec 64))
(declare-fun temp38_24 () (_ BitVec 64))
(declare-fun temp38_25 () (_ BitVec 64))
(declare-fun temp38_26 () (_ BitVec 64))
(declare-fun temp38_27 () (_ BitVec 64))
(declare-fun temp38_28 () (_ BitVec 64))
(declare-fun temp38_29 () (_ BitVec 64))
(declare-fun temp38_30 () (_ BitVec 64))
(declare-fun temp38_31 () (_ BitVec 64))
(declare-fun temp38_32 () (_ BitVec 64))
(declare-fun temp38_33 () (_ BitVec 64))
(declare-fun temp38_34 () (_ BitVec 64))
(declare-fun temp38_35 () (_ BitVec 64))
(declare-fun temp38_36 () (_ BitVec 64))
(declare-fun temp38_37 () (_ BitVec 64))
(declare-fun temp38_38 () (_ BitVec 64))
(declare-fun temp38_39 () (_ BitVec 64))
(declare-fun temp38_40 () (_ BitVec 64))
(declare-fun temp38_41 () (_ BitVec 64))
(declare-fun temp38_42 () (_ BitVec 64))
(declare-fun temp38_43 () (_ BitVec 64))
(declare-fun temp38_44 () (_ BitVec 64))
(declare-fun temp38_45 () (_ BitVec 64))
(declare-fun temp38_46 () (_ BitVec 64))
(declare-fun temp38_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp38_48 () (_ BitVec 64))
(declare-fun temp38_49 () (_ BitVec 64))
(declare-fun temp38_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_51 () (_ BitVec 64))
(declare-fun temp38_52 () (_ BitVec 64))
(declare-fun temp38_53 () (_ BitVec 64))
(declare-fun temp38_54 () (_ BitVec 64))
(declare-fun temp38_55 () (_ BitVec 64))
(declare-fun temp38_56 () (_ BitVec 64))
(declare-fun temp38_57 () (_ BitVec 64))
(declare-fun temp38_58 () (_ BitVec 64))
(declare-fun temp38_59 () (_ BitVec 64))
(declare-fun temp38_60 () (_ BitVec 64))
(declare-fun temp38_61 () (_ BitVec 64))
(declare-fun temp38_62 () (_ BitVec 64))
(declare-fun temp38_63 () (_ BitVec 64))
(declare-fun temp38_64 () (_ BitVec 64))
(declare-fun temp38_65 () (_ BitVec 64))
(declare-fun temp38_66 () (_ BitVec 64))
(declare-fun temp38_67 () (_ BitVec 64))
(declare-fun temp38_68 () (_ BitVec 64))
(declare-fun temp38_69 () (_ BitVec 64))
(declare-fun temp38_70 () (_ BitVec 64))
(declare-fun temp38_71 () (_ BitVec 64))
(declare-fun temp38_72 () (_ BitVec 64))
(declare-fun temp38_73 () (_ BitVec 64))
(declare-fun temp38_74 () (_ BitVec 64))
(declare-fun temp38_75 () (_ BitVec 64))
(declare-fun temp38_76 () (_ BitVec 64))
(declare-fun temp38_77 () (_ BitVec 64))
(declare-fun temp38_78 () (_ BitVec 64))
(declare-fun temp38_79 () (_ BitVec 64))
(declare-fun temp38_80 () (_ BitVec 64))
(declare-fun temp38_81 () (_ BitVec 64))
(declare-fun temp38_82 () (_ BitVec 64))
(declare-fun temp38_83 () (_ BitVec 64))
(declare-fun temp38_84 () (_ BitVec 64))
(declare-fun temp38_85 () (_ BitVec 64))
(declare-fun temp38_86 () (_ BitVec 64))
(declare-fun temp38_87 () (_ BitVec 64))
(declare-fun temp38_88 () (_ BitVec 64))
(declare-fun temp38_89 () (_ BitVec 64))
(declare-fun temp38_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp38_91 () (_ BitVec 64))
(declare-fun temp38_92 () (_ BitVec 64))
(declare-fun temp38_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_94 () (_ BitVec 64))
(declare-fun temp38_95 () (_ BitVec 64))
(declare-fun temp38_96 () (_ BitVec 64))
(declare-fun temp38_97 () (_ BitVec 64))
(declare-fun temp38_98 () (_ BitVec 64))
(declare-fun temp38_99 () (_ BitVec 64))
(declare-fun temp38_100 () (_ BitVec 64))
(declare-fun temp38_101 () (_ BitVec 64))
(declare-fun temp38_102 () (_ BitVec 64))
(declare-fun temp38_103 () (_ BitVec 64))
(declare-fun temp38_104 () (_ BitVec 64))
(declare-fun temp38_105 () (_ BitVec 64))
(declare-fun temp38_106 () (_ BitVec 64))
(declare-fun temp38_107 () (_ BitVec 64))
(declare-fun temp38_108 () (_ BitVec 64))
(declare-fun temp38_109 () (_ BitVec 64))
(declare-fun temp38_110 () (_ BitVec 64))
(declare-fun temp38_111 () (_ BitVec 64))
(declare-fun temp38_112 () (_ BitVec 64))
(declare-fun temp38_113 () (_ BitVec 64))
(declare-fun temp38_114 () (_ BitVec 64))
(declare-fun temp38_115 () (_ BitVec 64))
(declare-fun temp38_116 () (_ BitVec 64))
(declare-fun temp38_117 () (_ BitVec 64))
(declare-fun temp38_118 () (_ BitVec 64))
(declare-fun temp38_119 () (_ BitVec 64))
(declare-fun temp38_120 () (_ BitVec 64))
(declare-fun temp38_121 () (_ BitVec 64))
(declare-fun temp38_122 () (_ BitVec 64))
(declare-fun temp38_123 () (_ BitVec 64))
(declare-fun temp38_124 () (_ BitVec 64))
(declare-fun temp38_125 () (_ BitVec 64))
(declare-fun temp38_126 () (_ BitVec 64))
(declare-fun temp38_127 () (_ BitVec 64))
(declare-fun temp38_128 () (_ BitVec 64))
(declare-fun temp38_129 () (_ BitVec 64))
(declare-fun temp38_130 () (_ BitVec 64))
(declare-fun temp38_131 () (_ BitVec 64))
(declare-fun temp38_132 () (_ BitVec 64))
(declare-fun temp38_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp38_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp38_135 () (_ BitVec 64))
(declare-fun temp38_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp38_137 () (_ BitVec 64))
(declare-fun temp38_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_139 () (_ BitVec 64))
(declare-fun temp38_140 () (_ BitVec 64))
(declare-fun temp38_141 () (_ BitVec 64))
(declare-fun temp38_142 () (_ BitVec 64))
(declare-fun temp38_143 () (_ BitVec 64))
(declare-fun temp38_144 () (_ BitVec 64))
(declare-fun temp38_145 () (_ BitVec 64))
(declare-fun temp38_146 () (_ BitVec 64))
(declare-fun temp38_147 () (_ BitVec 64))
(declare-fun temp38_148 () (_ BitVec 64))
(declare-fun temp38_149 () (_ BitVec 64))
(declare-fun temp38_150 () (_ BitVec 64))
(declare-fun temp38_151 () (_ BitVec 64))
(declare-fun temp38_152 () (_ BitVec 64))
(declare-fun temp38_153 () (_ BitVec 64))
(declare-fun temp38_154 () (_ BitVec 64))
(declare-fun temp38_156 () (_ BitVec 64))
(declare-fun temp38_157 () (_ BitVec 64))
(declare-fun temp38_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp38_158 () (_ BitVec 64))
(declare-fun temp38_159 () (_ BitVec 64))
(declare-fun temp38_161 () (_ BitVec 64))
(declare-fun temp38_162 () (_ BitVec 64))
(declare-fun temp38_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp38_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp38_164 () (_ BitVec 64))
(declare-fun temp38_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp38_166 () (_ BitVec 64))
(declare-fun temp38_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp38_168 () (_ BitVec 64))
(declare-fun temp38_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_170 () (_ BitVec 64))
(declare-fun temp38_171 () (_ BitVec 64))
(declare-fun temp38_172 () (_ BitVec 64))
(declare-fun temp38_173 () (_ BitVec 64))
(declare-fun temp38_174 () (_ BitVec 64))
(declare-fun temp38_175 () (_ BitVec 64))
(declare-fun temp38_176 () (_ BitVec 64))
(declare-fun temp38_177 () (_ BitVec 64))
(declare-fun temp38_178 () (_ BitVec 64))
(declare-fun temp38_179 () (_ BitVec 64))
(declare-fun temp38_180 () (_ BitVec 64))
(declare-fun temp38_181 () (_ BitVec 64))
(declare-fun temp38_182 () (_ BitVec 64))
(declare-fun temp38_183 () (_ BitVec 64))
(declare-fun temp38_184 () (_ BitVec 64))
(declare-fun temp38_185 () (_ BitVec 64))
(declare-fun temp38_186 () (_ BitVec 64))
(declare-fun temp38_187 () (_ BitVec 64))
(declare-fun temp38_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp38_189 () (_ BitVec 64))
(declare-fun temp38_191 () (_ BitVec 64))
(declare-fun temp38_192 () (_ BitVec 64))
(declare-fun temp38_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp38_193 () (_ BitVec 64))
(declare-fun temp38_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp38_195 () (_ BitVec 64))
(declare-fun temp38_196 () (_ BitVec 64))
(declare-fun temp38_197 () (_ BitVec 64))
(declare-fun temp38_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_199 () (_ BitVec 64))
(declare-fun temp38_200 () (_ BitVec 64))
(declare-fun temp38_201 () (_ BitVec 64))
(declare-fun temp38_202 () (_ BitVec 64))
(declare-fun temp38_203 () (_ BitVec 64))
(declare-fun temp38_204 () (_ BitVec 64))
(declare-fun temp38_205 () (_ BitVec 64))
(declare-fun temp38_206 () (_ BitVec 64))
(declare-fun temp38_207 () (_ BitVec 64))
(declare-fun temp38_208 () (_ BitVec 64))
(declare-fun temp38_209 () (_ BitVec 64))
(declare-fun temp38_210 () (_ BitVec 64))
(declare-fun temp38_211 () (_ BitVec 64))
(declare-fun temp38_212 () (_ BitVec 64))
(declare-fun temp38_213 () (_ BitVec 64))
(declare-fun temp38_214 () (_ BitVec 64))
(declare-fun temp38_215 () (_ BitVec 64))
(declare-fun temp38_216 () (_ BitVec 64))
(declare-fun temp38_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp38_218 () (_ BitVec 64))
(declare-fun temp38_220 () (_ BitVec 64))
(declare-fun temp38_221 () (_ BitVec 64))
(declare-fun temp38_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp38_222 () (_ BitVec 64))
(declare-fun temp38_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp38_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp38_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp38_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp38_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp38_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp38_229 () (_ BitVec 64))
(declare-fun temp38_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp38_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp38_232 () (_ BitVec 64))
(declare-fun temp38_233 () (_ BitVec 64))
(declare-fun temp38_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp38_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp38_236 () (_ BitVec 64))
(declare-fun temp38_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp38_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp38_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp38_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp38_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp38_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp38_244 () (_ BitVec 64))
(declare-fun temp38_243 () (_ BitVec 64))
(declare-fun temp38_245 () (_ BitVec 64))
(declare-fun var8130026 () (_ BitVec 64))
(declare-fun temp38_247 () (_ BitVec 64))
(declare-fun temp38_246 () (_ BitVec 64))
(declare-fun temp38_248 () (_ BitVec 64))
(assert (= temp38_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp38_1)))
(assert (= temp38_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp38_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_3 #x0000000000000000))
(assert (= var79869 temp38_3))
(assert (= temp38_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp38_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_5 #x0000000000000000))
(assert (= var79914 temp38_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp38_6 #x0000000000000000))
(assert (= temp38_7 temp38_6))
(assert (= temp38_8 (select ARGNAME_padding_NAMEEND_VAL temp38_7)))
(assert (= temp38_9 #x0000000000000001))
(assert (= temp38_10 temp38_9))
(assert (= temp38_11 (select ARGNAME_padding_NAMEEND_VAL temp38_10)))
(assert (= temp38_12 #x0000000000000002))
(assert (= temp38_13 temp38_12))
(assert (= temp38_14 (select ARGNAME_padding_NAMEEND_VAL temp38_13)))
(assert (= temp38_15 #x0000000000000003))
(assert (= temp38_16 temp38_15))
(assert (= temp38_17 (select ARGNAME_padding_NAMEEND_VAL temp38_16)))
(assert (= temp38_18 #x0000000000000004))
(assert (= temp38_19 temp38_18))
(assert (= temp38_20 (select ARGNAME_padding_NAMEEND_VAL temp38_19)))
(assert (= temp38_21 #x0000000000000005))
(assert (= temp38_22 temp38_21))
(assert (= temp38_23 (select ARGNAME_padding_NAMEEND_VAL temp38_22)))
(assert (= temp38_24 #x0000000000000000))
(assert (= temp38_25 #x0000000000000000))
(assert (= temp38_26 temp38_25))
(assert (= temp38_27 (select ARGNAME_padding_NAMEEND_VAL temp38_26)))
(assert (= temp38_28 #x0000000000000000))
(assert (= temp38_29 #x0000000000000001))
(assert (= temp38_30 temp38_29))
(assert (= temp38_31 (select ARGNAME_padding_NAMEEND_VAL temp38_30)))
(assert (= temp38_32 #x0000000000000000))
(assert (= temp38_33 #x0000000000000002))
(assert (= temp38_34 temp38_33))
(assert (= temp38_35 (select ARGNAME_padding_NAMEEND_VAL temp38_34)))
(assert (= temp38_36 #x0000000000000000))
(assert (= temp38_37 #x0000000000000003))
(assert (= temp38_38 temp38_37))
(assert (= temp38_39 (select ARGNAME_padding_NAMEEND_VAL temp38_38)))
(assert (= temp38_40 #x0000000000000000))
(assert (= temp38_41 #x0000000000000004))
(assert (= temp38_42 temp38_41))
(assert (= temp38_43 (select ARGNAME_padding_NAMEEND_VAL temp38_42)))
(assert (= temp38_44 #x0000000000000000))
(assert (= temp38_45 #x0000000000000005))
(assert (= temp38_46 temp38_45))
(assert (= temp38_47 (select ARGNAME_padding_NAMEEND_VAL temp38_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp38_27 temp38_24)
             (bvslt temp38_31 temp38_28)
             (bvslt temp38_35 temp38_32)
             (bvslt temp38_39 temp38_36)
             (bvslt temp38_43 temp38_40)
             (bvslt temp38_47 temp38_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_48 #x0000000000000000))
(assert (= var1322786 temp38_48))
(assert (= temp38_49 #x0000000000000000))
(assert (= temp38_50 temp38_49))
(assert (= temp38_51 (select ARGNAME_output_padding_NAMEEND_VAL temp38_50)))
(assert (= temp38_52 #x0000000000000001))
(assert (= temp38_53 temp38_52))
(assert (= temp38_54 (select ARGNAME_output_padding_NAMEEND_VAL temp38_53)))
(assert (= temp38_55 #x0000000000000002))
(assert (= temp38_56 temp38_55))
(assert (= temp38_57 (select ARGNAME_output_padding_NAMEEND_VAL temp38_56)))
(assert (= temp38_58 #x0000000000000003))
(assert (= temp38_59 temp38_58))
(assert (= temp38_60 (select ARGNAME_output_padding_NAMEEND_VAL temp38_59)))
(assert (= temp38_61 #x0000000000000004))
(assert (= temp38_62 temp38_61))
(assert (= temp38_63 (select ARGNAME_output_padding_NAMEEND_VAL temp38_62)))
(assert (= temp38_64 #x0000000000000005))
(assert (= temp38_65 temp38_64))
(assert (= temp38_66 (select ARGNAME_output_padding_NAMEEND_VAL temp38_65)))
(assert (= temp38_67 #x0000000000000000))
(assert (= temp38_68 #x0000000000000000))
(assert (= temp38_69 temp38_68))
(assert (= temp38_70 (select ARGNAME_output_padding_NAMEEND_VAL temp38_69)))
(assert (= temp38_71 #x0000000000000000))
(assert (= temp38_72 #x0000000000000001))
(assert (= temp38_73 temp38_72))
(assert (= temp38_74 (select ARGNAME_output_padding_NAMEEND_VAL temp38_73)))
(assert (= temp38_75 #x0000000000000000))
(assert (= temp38_76 #x0000000000000002))
(assert (= temp38_77 temp38_76))
(assert (= temp38_78 (select ARGNAME_output_padding_NAMEEND_VAL temp38_77)))
(assert (= temp38_79 #x0000000000000000))
(assert (= temp38_80 #x0000000000000003))
(assert (= temp38_81 temp38_80))
(assert (= temp38_82 (select ARGNAME_output_padding_NAMEEND_VAL temp38_81)))
(assert (= temp38_83 #x0000000000000000))
(assert (= temp38_84 #x0000000000000004))
(assert (= temp38_85 temp38_84))
(assert (= temp38_86 (select ARGNAME_output_padding_NAMEEND_VAL temp38_85)))
(assert (= temp38_87 #x0000000000000000))
(assert (= temp38_88 #x0000000000000005))
(assert (= temp38_89 temp38_88))
(assert (= temp38_90 (select ARGNAME_output_padding_NAMEEND_VAL temp38_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp38_70 temp38_67)
             (bvslt temp38_74 temp38_71)
             (bvslt temp38_78 temp38_75)
             (bvslt temp38_82 temp38_79)
             (bvslt temp38_86 temp38_83)
             (bvslt temp38_90 temp38_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_91 #x0000000000000000))
(assert (= var1322797 temp38_91))
(assert (= temp38_92 #x0000000000000000))
(assert (= temp38_93 temp38_92))
(assert (= temp38_94 (select ARGNAME_stride_NAMEEND_VAL temp38_93)))
(assert (= temp38_95 #x0000000000000001))
(assert (= temp38_96 temp38_95))
(assert (= temp38_97 (select ARGNAME_stride_NAMEEND_VAL temp38_96)))
(assert (= temp38_98 #x0000000000000002))
(assert (= temp38_99 temp38_98))
(assert (= temp38_100 (select ARGNAME_stride_NAMEEND_VAL temp38_99)))
(assert (= temp38_101 #x0000000000000003))
(assert (= temp38_102 temp38_101))
(assert (= temp38_103 (select ARGNAME_stride_NAMEEND_VAL temp38_102)))
(assert (= temp38_104 #x0000000000000004))
(assert (= temp38_105 temp38_104))
(assert (= temp38_106 (select ARGNAME_stride_NAMEEND_VAL temp38_105)))
(assert (= temp38_107 #x0000000000000005))
(assert (= temp38_108 temp38_107))
(assert (= temp38_109 (select ARGNAME_stride_NAMEEND_VAL temp38_108)))
(assert (= temp38_110 #x0000000000000000))
(assert (= temp38_111 #x0000000000000000))
(assert (= temp38_112 temp38_111))
(assert (= temp38_113 (select ARGNAME_stride_NAMEEND_VAL temp38_112)))
(assert (= temp38_114 #x0000000000000000))
(assert (= temp38_115 #x0000000000000001))
(assert (= temp38_116 temp38_115))
(assert (= temp38_117 (select ARGNAME_stride_NAMEEND_VAL temp38_116)))
(assert (= temp38_118 #x0000000000000000))
(assert (= temp38_119 #x0000000000000002))
(assert (= temp38_120 temp38_119))
(assert (= temp38_121 (select ARGNAME_stride_NAMEEND_VAL temp38_120)))
(assert (= temp38_122 #x0000000000000000))
(assert (= temp38_123 #x0000000000000003))
(assert (= temp38_124 temp38_123))
(assert (= temp38_125 (select ARGNAME_stride_NAMEEND_VAL temp38_124)))
(assert (= temp38_126 #x0000000000000000))
(assert (= temp38_127 #x0000000000000004))
(assert (= temp38_128 temp38_127))
(assert (= temp38_129 (select ARGNAME_stride_NAMEEND_VAL temp38_128)))
(assert (= temp38_130 #x0000000000000000))
(assert (= temp38_131 #x0000000000000005))
(assert (= temp38_132 temp38_131))
(assert (= temp38_133 (select ARGNAME_stride_NAMEEND_VAL temp38_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp38_113 temp38_110)
             (bvsle temp38_117 temp38_114)
             (bvsle temp38_121 temp38_118)
             (bvsle temp38_125 temp38_122)
             (bvsle temp38_129 temp38_126)
             (bvsle temp38_133 temp38_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_134 #x0000000000000000))
(assert (= var1322807 temp38_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_135 #x0000000000000001))
(assert (= var1322819 temp38_135))
(assert (= temp38_136 #x0000000000000000))
(assert (= var1310898 temp38_136))
(assert (= temp38_137 #x0000000000000000))
(assert (= temp38_138 temp38_137))
(assert (= temp38_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_138)))
(assert (= temp38_140 #x0000000000000001))
(assert (= temp38_141 temp38_140))
(assert (= temp38_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_141)))
(assert (= temp38_143 #x0000000000000002))
(assert (= temp38_144 temp38_143))
(assert (= temp38_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_144)))
(assert (= temp38_146 #x0000000000000003))
(assert (= temp38_147 temp38_146))
(assert (= temp38_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_147)))
(assert (= temp38_149 #x0000000000000004))
(assert (= temp38_150 temp38_149))
(assert (= temp38_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_150)))
(assert (= temp38_152 #x0000000000000005))
(assert (= temp38_153 temp38_152))
(assert (= temp38_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_153)))
(assert (= temp38_156 var1310898))
(assert (= temp38_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_156)))
(assert (= temp38_155 temp38_157))
(assert (= var1322852
   (ite (bvslt temp38_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_158 #x0000000000000000))
(assert (= var1322852 temp38_158))
(assert (= temp38_159 #x0000000000000000))
(assert (= var1310898 temp38_159))
(assert (= temp38_161 var1310898))
(assert (= temp38_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_161)))
(assert (= temp38_160 temp38_162))
(assert (= var1322874 (bvsmod temp38_160 ARGNAME_groups_NAMEEND)))
(assert (= temp38_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp38_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_164 #x0000000000000001))
(assert (= var1322875 temp38_164))
(assert (= temp38_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp38_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_166 #x0000000000000001))
(assert (= var1322895 temp38_166))
(assert (= temp38_167 #x0000000000000001))
(assert (= var1311786 temp38_167))
(assert (= temp38_168 #x0000000000000000))
(assert (= temp38_169 temp38_168))
(assert (= temp38_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_169)))
(assert (= temp38_171 #x0000000000000001))
(assert (= temp38_172 temp38_171))
(assert (= temp38_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_172)))
(assert (= temp38_174 #x0000000000000002))
(assert (= temp38_175 temp38_174))
(assert (= temp38_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_175)))
(assert (= temp38_177 #x0000000000000003))
(assert (= temp38_178 temp38_177))
(assert (= temp38_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_178)))
(assert (= temp38_180 #x0000000000000004))
(assert (= temp38_181 temp38_180))
(assert (= temp38_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_181)))
(assert (= temp38_183 #x0000000000000005))
(assert (= temp38_184 temp38_183))
(assert (= temp38_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_184)))
(assert (= temp38_186 #x0000000000000000))
(assert (= temp38_187
   (ite (bvslt var1311786 temp38_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp38_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_187)))
(assert (= var1322903 temp38_188))
(assert (bvslt (ite (bvslt var1311786 temp38_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp38_189 #x0000000000000001))
(assert (= var1311786 temp38_189))
(assert (= temp38_191 var1311786))
(assert (= temp38_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_191)))
(assert (= temp38_190 temp38_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp38_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_193 #x0000000000000001))
(assert (= var1322908 temp38_193))
(assert (= temp38_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp38_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_195 #x0000000000000001))
(assert (= var1322975 temp38_195))
(assert (= temp38_196 #x0000000000000000))
(assert (= var1310898 temp38_196))
(assert (= temp38_197 #x0000000000000000))
(assert (= temp38_198 temp38_197))
(assert (= temp38_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp38_198)))
(assert (= temp38_200 #x0000000000000001))
(assert (= temp38_201 temp38_200))
(assert (= temp38_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp38_201)))
(assert (= temp38_203 #x0000000000000002))
(assert (= temp38_204 temp38_203))
(assert (= temp38_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp38_204)))
(assert (= temp38_206 #x0000000000000003))
(assert (= temp38_207 temp38_206))
(assert (= temp38_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp38_207)))
(assert (= temp38_209 #x0000000000000004))
(assert (= temp38_210 temp38_209))
(assert (= temp38_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp38_210)))
(assert (= temp38_212 #x0000000000000005))
(assert (= temp38_213 temp38_212))
(assert (= temp38_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp38_213)))
(assert (= temp38_215 #x0000000000000000))
(assert (= temp38_216
   (ite (bvslt var1310898 temp38_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp38_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp38_216)))
(assert (= var1322977 temp38_217))
(assert (bvslt (ite (bvslt var1310898 temp38_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp38_218 #x0000000000000000))
(assert (= var1310898 temp38_218))
(assert (= temp38_220 var1310898))
(assert (= temp38_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_220)))
(assert (= temp38_219 temp38_221))
(assert (= var1322980
   (ite (= var1322977 temp38_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_222 #x0000000000000001))
(assert (= var1322980 temp38_222))
(assert (= temp38_223 #x0000000000000002))
(assert (= var1848169 temp38_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp38_225 #x0000000000000001))
(assert (= var1323065 temp38_225))
(assert (= temp38_226 #x0000000000000001))
(assert (= var3486735 temp38_226))
(assert (= temp38_227 #x0000000000000001))
(assert (= var3814415 temp38_227))
(assert (= temp38_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp38_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_229 #x0000000000000001))
(assert (= var79986 temp38_229))
(assert (= temp38_230 #x0000000000000001))
(assert (= var80116 temp38_230))
(assert (= var4796905 var80116))
(assert (= temp38_231 #x0000000000000000))
(assert (= var4784306 temp38_231))
(assert (= temp38_232 #x0000000000000000))
(assert (= temp38_233
   (ite (bvslt var4784306 temp38_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp38_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_233)))
(assert (= var4796924 temp38_234))
(assert (bvslt (ite (bvslt var4784306 temp38_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp38_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp38_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_236 #x0000000000000001))
(assert (= var4796925 temp38_236))
(assert (= temp38_237 #x0000000000000000))
(assert (= var4996927 temp38_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp38_238 #x0000000000000002))
(assert (= var5125763 temp38_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_239 #x0000000000000000))
(assert (= var5191324 temp38_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp38_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp38_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp38_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp38_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp38_244 #x0000000000000001))
(assert (= temp38_243 temp38_244))
(assert (= temp38_245 #x0000000000000001))
(assert (= var8130026 temp38_245))
(assert (= temp38_247 #xffffffffffffffff))
(assert (= temp38_246 temp38_247))
(assert (= temp38_248 #x0000000000000001))
(assert (= var79986 temp38_248))
(model-add temp38_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp38_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp38_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






