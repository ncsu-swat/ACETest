(declare-fun temp1056_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1056_2 () (_ BitVec 64))
(declare-fun temp1056_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1056_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1056_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1056_6 () (_ BitVec 64))
(declare-fun temp1056_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_8 () (_ BitVec 64))
(declare-fun temp1056_9 () (_ BitVec 64))
(declare-fun temp1056_10 () (_ BitVec 64))
(declare-fun temp1056_11 () (_ BitVec 64))
(declare-fun temp1056_12 () (_ BitVec 64))
(declare-fun temp1056_13 () (_ BitVec 64))
(declare-fun temp1056_14 () (_ BitVec 64))
(declare-fun temp1056_15 () (_ BitVec 64))
(declare-fun temp1056_16 () (_ BitVec 64))
(declare-fun temp1056_17 () (_ BitVec 64))
(declare-fun temp1056_18 () (_ BitVec 64))
(declare-fun temp1056_19 () (_ BitVec 64))
(declare-fun temp1056_20 () (_ BitVec 64))
(declare-fun temp1056_21 () (_ BitVec 64))
(declare-fun temp1056_22 () (_ BitVec 64))
(declare-fun temp1056_23 () (_ BitVec 64))
(declare-fun temp1056_24 () (_ BitVec 64))
(declare-fun temp1056_25 () (_ BitVec 64))
(declare-fun temp1056_26 () (_ BitVec 64))
(declare-fun temp1056_27 () (_ BitVec 64))
(declare-fun temp1056_28 () (_ BitVec 64))
(declare-fun temp1056_29 () (_ BitVec 64))
(declare-fun temp1056_30 () (_ BitVec 64))
(declare-fun temp1056_31 () (_ BitVec 64))
(declare-fun temp1056_32 () (_ BitVec 64))
(declare-fun temp1056_33 () (_ BitVec 64))
(declare-fun temp1056_34 () (_ BitVec 64))
(declare-fun temp1056_35 () (_ BitVec 64))
(declare-fun temp1056_36 () (_ BitVec 64))
(declare-fun temp1056_37 () (_ BitVec 64))
(declare-fun temp1056_38 () (_ BitVec 64))
(declare-fun temp1056_39 () (_ BitVec 64))
(declare-fun temp1056_40 () (_ BitVec 64))
(declare-fun temp1056_41 () (_ BitVec 64))
(declare-fun temp1056_42 () (_ BitVec 64))
(declare-fun temp1056_43 () (_ BitVec 64))
(declare-fun temp1056_44 () (_ BitVec 64))
(declare-fun temp1056_45 () (_ BitVec 64))
(declare-fun temp1056_46 () (_ BitVec 64))
(declare-fun temp1056_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1056_48 () (_ BitVec 64))
(declare-fun temp1056_49 () (_ BitVec 64))
(declare-fun temp1056_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_51 () (_ BitVec 64))
(declare-fun temp1056_52 () (_ BitVec 64))
(declare-fun temp1056_53 () (_ BitVec 64))
(declare-fun temp1056_54 () (_ BitVec 64))
(declare-fun temp1056_55 () (_ BitVec 64))
(declare-fun temp1056_56 () (_ BitVec 64))
(declare-fun temp1056_57 () (_ BitVec 64))
(declare-fun temp1056_58 () (_ BitVec 64))
(declare-fun temp1056_59 () (_ BitVec 64))
(declare-fun temp1056_60 () (_ BitVec 64))
(declare-fun temp1056_61 () (_ BitVec 64))
(declare-fun temp1056_62 () (_ BitVec 64))
(declare-fun temp1056_63 () (_ BitVec 64))
(declare-fun temp1056_64 () (_ BitVec 64))
(declare-fun temp1056_65 () (_ BitVec 64))
(declare-fun temp1056_66 () (_ BitVec 64))
(declare-fun temp1056_67 () (_ BitVec 64))
(declare-fun temp1056_68 () (_ BitVec 64))
(declare-fun temp1056_69 () (_ BitVec 64))
(declare-fun temp1056_70 () (_ BitVec 64))
(declare-fun temp1056_71 () (_ BitVec 64))
(declare-fun temp1056_72 () (_ BitVec 64))
(declare-fun temp1056_73 () (_ BitVec 64))
(declare-fun temp1056_74 () (_ BitVec 64))
(declare-fun temp1056_75 () (_ BitVec 64))
(declare-fun temp1056_76 () (_ BitVec 64))
(declare-fun temp1056_77 () (_ BitVec 64))
(declare-fun temp1056_78 () (_ BitVec 64))
(declare-fun temp1056_79 () (_ BitVec 64))
(declare-fun temp1056_80 () (_ BitVec 64))
(declare-fun temp1056_81 () (_ BitVec 64))
(declare-fun temp1056_82 () (_ BitVec 64))
(declare-fun temp1056_83 () (_ BitVec 64))
(declare-fun temp1056_84 () (_ BitVec 64))
(declare-fun temp1056_85 () (_ BitVec 64))
(declare-fun temp1056_86 () (_ BitVec 64))
(declare-fun temp1056_87 () (_ BitVec 64))
(declare-fun temp1056_88 () (_ BitVec 64))
(declare-fun temp1056_89 () (_ BitVec 64))
(declare-fun temp1056_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1056_91 () (_ BitVec 64))
(declare-fun temp1056_92 () (_ BitVec 64))
(declare-fun temp1056_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_94 () (_ BitVec 64))
(declare-fun temp1056_95 () (_ BitVec 64))
(declare-fun temp1056_96 () (_ BitVec 64))
(declare-fun temp1056_97 () (_ BitVec 64))
(declare-fun temp1056_98 () (_ BitVec 64))
(declare-fun temp1056_99 () (_ BitVec 64))
(declare-fun temp1056_100 () (_ BitVec 64))
(declare-fun temp1056_101 () (_ BitVec 64))
(declare-fun temp1056_102 () (_ BitVec 64))
(declare-fun temp1056_103 () (_ BitVec 64))
(declare-fun temp1056_104 () (_ BitVec 64))
(declare-fun temp1056_105 () (_ BitVec 64))
(declare-fun temp1056_106 () (_ BitVec 64))
(declare-fun temp1056_107 () (_ BitVec 64))
(declare-fun temp1056_108 () (_ BitVec 64))
(declare-fun temp1056_109 () (_ BitVec 64))
(declare-fun temp1056_110 () (_ BitVec 64))
(declare-fun temp1056_111 () (_ BitVec 64))
(declare-fun temp1056_112 () (_ BitVec 64))
(declare-fun temp1056_113 () (_ BitVec 64))
(declare-fun temp1056_114 () (_ BitVec 64))
(declare-fun temp1056_115 () (_ BitVec 64))
(declare-fun temp1056_116 () (_ BitVec 64))
(declare-fun temp1056_117 () (_ BitVec 64))
(declare-fun temp1056_118 () (_ BitVec 64))
(declare-fun temp1056_119 () (_ BitVec 64))
(declare-fun temp1056_120 () (_ BitVec 64))
(declare-fun temp1056_121 () (_ BitVec 64))
(declare-fun temp1056_122 () (_ BitVec 64))
(declare-fun temp1056_123 () (_ BitVec 64))
(declare-fun temp1056_124 () (_ BitVec 64))
(declare-fun temp1056_125 () (_ BitVec 64))
(declare-fun temp1056_126 () (_ BitVec 64))
(declare-fun temp1056_127 () (_ BitVec 64))
(declare-fun temp1056_128 () (_ BitVec 64))
(declare-fun temp1056_129 () (_ BitVec 64))
(declare-fun temp1056_130 () (_ BitVec 64))
(declare-fun temp1056_131 () (_ BitVec 64))
(declare-fun temp1056_132 () (_ BitVec 64))
(declare-fun temp1056_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1056_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1056_135 () (_ BitVec 64))
(declare-fun temp1056_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1056_137 () (_ BitVec 64))
(declare-fun temp1056_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_139 () (_ BitVec 64))
(declare-fun temp1056_140 () (_ BitVec 64))
(declare-fun temp1056_141 () (_ BitVec 64))
(declare-fun temp1056_142 () (_ BitVec 64))
(declare-fun temp1056_143 () (_ BitVec 64))
(declare-fun temp1056_144 () (_ BitVec 64))
(declare-fun temp1056_145 () (_ BitVec 64))
(declare-fun temp1056_146 () (_ BitVec 64))
(declare-fun temp1056_147 () (_ BitVec 64))
(declare-fun temp1056_148 () (_ BitVec 64))
(declare-fun temp1056_149 () (_ BitVec 64))
(declare-fun temp1056_150 () (_ BitVec 64))
(declare-fun temp1056_151 () (_ BitVec 64))
(declare-fun temp1056_152 () (_ BitVec 64))
(declare-fun temp1056_153 () (_ BitVec 64))
(declare-fun temp1056_154 () (_ BitVec 64))
(declare-fun temp1056_156 () (_ BitVec 64))
(declare-fun temp1056_157 () (_ BitVec 64))
(declare-fun temp1056_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1056_158 () (_ BitVec 64))
(declare-fun temp1056_159 () (_ BitVec 64))
(declare-fun temp1056_161 () (_ BitVec 64))
(declare-fun temp1056_162 () (_ BitVec 64))
(declare-fun temp1056_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1056_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1056_164 () (_ BitVec 64))
(declare-fun temp1056_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1056_166 () (_ BitVec 64))
(declare-fun temp1056_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1056_168 () (_ BitVec 64))
(declare-fun temp1056_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_170 () (_ BitVec 64))
(declare-fun temp1056_171 () (_ BitVec 64))
(declare-fun temp1056_172 () (_ BitVec 64))
(declare-fun temp1056_173 () (_ BitVec 64))
(declare-fun temp1056_174 () (_ BitVec 64))
(declare-fun temp1056_175 () (_ BitVec 64))
(declare-fun temp1056_176 () (_ BitVec 64))
(declare-fun temp1056_177 () (_ BitVec 64))
(declare-fun temp1056_178 () (_ BitVec 64))
(declare-fun temp1056_179 () (_ BitVec 64))
(declare-fun temp1056_180 () (_ BitVec 64))
(declare-fun temp1056_181 () (_ BitVec 64))
(declare-fun temp1056_182 () (_ BitVec 64))
(declare-fun temp1056_183 () (_ BitVec 64))
(declare-fun temp1056_184 () (_ BitVec 64))
(declare-fun temp1056_185 () (_ BitVec 64))
(declare-fun temp1056_186 () (_ BitVec 64))
(declare-fun temp1056_187 () (_ BitVec 64))
(declare-fun temp1056_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1056_189 () (_ BitVec 64))
(declare-fun temp1056_191 () (_ BitVec 64))
(declare-fun temp1056_192 () (_ BitVec 64))
(declare-fun temp1056_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1056_193 () (_ BitVec 64))
(declare-fun temp1056_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1056_195 () (_ BitVec 64))
(declare-fun temp1056_196 () (_ BitVec 64))
(declare-fun temp1056_197 () (_ BitVec 64))
(declare-fun temp1056_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_199 () (_ BitVec 64))
(declare-fun temp1056_200 () (_ BitVec 64))
(declare-fun temp1056_201 () (_ BitVec 64))
(declare-fun temp1056_202 () (_ BitVec 64))
(declare-fun temp1056_203 () (_ BitVec 64))
(declare-fun temp1056_204 () (_ BitVec 64))
(declare-fun temp1056_205 () (_ BitVec 64))
(declare-fun temp1056_206 () (_ BitVec 64))
(declare-fun temp1056_207 () (_ BitVec 64))
(declare-fun temp1056_208 () (_ BitVec 64))
(declare-fun temp1056_209 () (_ BitVec 64))
(declare-fun temp1056_210 () (_ BitVec 64))
(declare-fun temp1056_211 () (_ BitVec 64))
(declare-fun temp1056_212 () (_ BitVec 64))
(declare-fun temp1056_213 () (_ BitVec 64))
(declare-fun temp1056_214 () (_ BitVec 64))
(declare-fun temp1056_215 () (_ BitVec 64))
(declare-fun temp1056_216 () (_ BitVec 64))
(declare-fun temp1056_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1056_218 () (_ BitVec 64))
(declare-fun temp1056_220 () (_ BitVec 64))
(declare-fun temp1056_221 () (_ BitVec 64))
(declare-fun temp1056_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1056_222 () (_ BitVec 64))
(declare-fun temp1056_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1056_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1056_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1056_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1056_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1056_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1056_229 () (_ BitVec 64))
(declare-fun temp1056_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1056_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1056_232 () (_ BitVec 64))
(declare-fun temp1056_233 () (_ BitVec 64))
(declare-fun temp1056_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1056_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1056_236 () (_ BitVec 64))
(declare-fun temp1056_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1056_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1056_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1056_240 () (_ BitVec 64))
(assert (= temp1056_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1056_1)))
(assert (= temp1056_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1056_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_3 #x0000000000000000))
(assert (= var79869 temp1056_3))
(assert (= temp1056_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1056_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_5 #x0000000000000000))
(assert (= var79914 temp1056_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1056_6 #x0000000000000000))
(assert (= temp1056_7 temp1056_6))
(assert (= temp1056_8 (select ARGNAME_padding_NAMEEND_VAL temp1056_7)))
(assert (= temp1056_9 #x0000000000000001))
(assert (= temp1056_10 temp1056_9))
(assert (= temp1056_11 (select ARGNAME_padding_NAMEEND_VAL temp1056_10)))
(assert (= temp1056_12 #x0000000000000002))
(assert (= temp1056_13 temp1056_12))
(assert (= temp1056_14 (select ARGNAME_padding_NAMEEND_VAL temp1056_13)))
(assert (= temp1056_15 #x0000000000000003))
(assert (= temp1056_16 temp1056_15))
(assert (= temp1056_17 (select ARGNAME_padding_NAMEEND_VAL temp1056_16)))
(assert (= temp1056_18 #x0000000000000004))
(assert (= temp1056_19 temp1056_18))
(assert (= temp1056_20 (select ARGNAME_padding_NAMEEND_VAL temp1056_19)))
(assert (= temp1056_21 #x0000000000000005))
(assert (= temp1056_22 temp1056_21))
(assert (= temp1056_23 (select ARGNAME_padding_NAMEEND_VAL temp1056_22)))
(assert (= temp1056_24 #x0000000000000000))
(assert (= temp1056_25 #x0000000000000000))
(assert (= temp1056_26 temp1056_25))
(assert (= temp1056_27 (select ARGNAME_padding_NAMEEND_VAL temp1056_26)))
(assert (= temp1056_28 #x0000000000000000))
(assert (= temp1056_29 #x0000000000000001))
(assert (= temp1056_30 temp1056_29))
(assert (= temp1056_31 (select ARGNAME_padding_NAMEEND_VAL temp1056_30)))
(assert (= temp1056_32 #x0000000000000000))
(assert (= temp1056_33 #x0000000000000002))
(assert (= temp1056_34 temp1056_33))
(assert (= temp1056_35 (select ARGNAME_padding_NAMEEND_VAL temp1056_34)))
(assert (= temp1056_36 #x0000000000000000))
(assert (= temp1056_37 #x0000000000000003))
(assert (= temp1056_38 temp1056_37))
(assert (= temp1056_39 (select ARGNAME_padding_NAMEEND_VAL temp1056_38)))
(assert (= temp1056_40 #x0000000000000000))
(assert (= temp1056_41 #x0000000000000004))
(assert (= temp1056_42 temp1056_41))
(assert (= temp1056_43 (select ARGNAME_padding_NAMEEND_VAL temp1056_42)))
(assert (= temp1056_44 #x0000000000000000))
(assert (= temp1056_45 #x0000000000000005))
(assert (= temp1056_46 temp1056_45))
(assert (= temp1056_47 (select ARGNAME_padding_NAMEEND_VAL temp1056_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1056_27 temp1056_24)
             (bvslt temp1056_31 temp1056_28)
             (bvslt temp1056_35 temp1056_32)
             (bvslt temp1056_39 temp1056_36)
             (bvslt temp1056_43 temp1056_40)
             (bvslt temp1056_47 temp1056_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_48 #x0000000000000000))
(assert (= var1322786 temp1056_48))
(assert (= temp1056_49 #x0000000000000000))
(assert (= temp1056_50 temp1056_49))
(assert (= temp1056_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_50)))
(assert (= temp1056_52 #x0000000000000001))
(assert (= temp1056_53 temp1056_52))
(assert (= temp1056_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_53)))
(assert (= temp1056_55 #x0000000000000002))
(assert (= temp1056_56 temp1056_55))
(assert (= temp1056_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_56)))
(assert (= temp1056_58 #x0000000000000003))
(assert (= temp1056_59 temp1056_58))
(assert (= temp1056_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_59)))
(assert (= temp1056_61 #x0000000000000004))
(assert (= temp1056_62 temp1056_61))
(assert (= temp1056_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_62)))
(assert (= temp1056_64 #x0000000000000005))
(assert (= temp1056_65 temp1056_64))
(assert (= temp1056_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_65)))
(assert (= temp1056_67 #x0000000000000000))
(assert (= temp1056_68 #x0000000000000000))
(assert (= temp1056_69 temp1056_68))
(assert (= temp1056_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_69)))
(assert (= temp1056_71 #x0000000000000000))
(assert (= temp1056_72 #x0000000000000001))
(assert (= temp1056_73 temp1056_72))
(assert (= temp1056_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_73)))
(assert (= temp1056_75 #x0000000000000000))
(assert (= temp1056_76 #x0000000000000002))
(assert (= temp1056_77 temp1056_76))
(assert (= temp1056_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_77)))
(assert (= temp1056_79 #x0000000000000000))
(assert (= temp1056_80 #x0000000000000003))
(assert (= temp1056_81 temp1056_80))
(assert (= temp1056_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_81)))
(assert (= temp1056_83 #x0000000000000000))
(assert (= temp1056_84 #x0000000000000004))
(assert (= temp1056_85 temp1056_84))
(assert (= temp1056_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_85)))
(assert (= temp1056_87 #x0000000000000000))
(assert (= temp1056_88 #x0000000000000005))
(assert (= temp1056_89 temp1056_88))
(assert (= temp1056_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1056_70 temp1056_67)
             (bvslt temp1056_74 temp1056_71)
             (bvslt temp1056_78 temp1056_75)
             (bvslt temp1056_82 temp1056_79)
             (bvslt temp1056_86 temp1056_83)
             (bvslt temp1056_90 temp1056_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_91 #x0000000000000000))
(assert (= var1322797 temp1056_91))
(assert (= temp1056_92 #x0000000000000000))
(assert (= temp1056_93 temp1056_92))
(assert (= temp1056_94 (select ARGNAME_stride_NAMEEND_VAL temp1056_93)))
(assert (= temp1056_95 #x0000000000000001))
(assert (= temp1056_96 temp1056_95))
(assert (= temp1056_97 (select ARGNAME_stride_NAMEEND_VAL temp1056_96)))
(assert (= temp1056_98 #x0000000000000002))
(assert (= temp1056_99 temp1056_98))
(assert (= temp1056_100 (select ARGNAME_stride_NAMEEND_VAL temp1056_99)))
(assert (= temp1056_101 #x0000000000000003))
(assert (= temp1056_102 temp1056_101))
(assert (= temp1056_103 (select ARGNAME_stride_NAMEEND_VAL temp1056_102)))
(assert (= temp1056_104 #x0000000000000004))
(assert (= temp1056_105 temp1056_104))
(assert (= temp1056_106 (select ARGNAME_stride_NAMEEND_VAL temp1056_105)))
(assert (= temp1056_107 #x0000000000000005))
(assert (= temp1056_108 temp1056_107))
(assert (= temp1056_109 (select ARGNAME_stride_NAMEEND_VAL temp1056_108)))
(assert (= temp1056_110 #x0000000000000000))
(assert (= temp1056_111 #x0000000000000000))
(assert (= temp1056_112 temp1056_111))
(assert (= temp1056_113 (select ARGNAME_stride_NAMEEND_VAL temp1056_112)))
(assert (= temp1056_114 #x0000000000000000))
(assert (= temp1056_115 #x0000000000000001))
(assert (= temp1056_116 temp1056_115))
(assert (= temp1056_117 (select ARGNAME_stride_NAMEEND_VAL temp1056_116)))
(assert (= temp1056_118 #x0000000000000000))
(assert (= temp1056_119 #x0000000000000002))
(assert (= temp1056_120 temp1056_119))
(assert (= temp1056_121 (select ARGNAME_stride_NAMEEND_VAL temp1056_120)))
(assert (= temp1056_122 #x0000000000000000))
(assert (= temp1056_123 #x0000000000000003))
(assert (= temp1056_124 temp1056_123))
(assert (= temp1056_125 (select ARGNAME_stride_NAMEEND_VAL temp1056_124)))
(assert (= temp1056_126 #x0000000000000000))
(assert (= temp1056_127 #x0000000000000004))
(assert (= temp1056_128 temp1056_127))
(assert (= temp1056_129 (select ARGNAME_stride_NAMEEND_VAL temp1056_128)))
(assert (= temp1056_130 #x0000000000000000))
(assert (= temp1056_131 #x0000000000000005))
(assert (= temp1056_132 temp1056_131))
(assert (= temp1056_133 (select ARGNAME_stride_NAMEEND_VAL temp1056_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1056_113 temp1056_110)
             (bvsle temp1056_117 temp1056_114)
             (bvsle temp1056_121 temp1056_118)
             (bvsle temp1056_125 temp1056_122)
             (bvsle temp1056_129 temp1056_126)
             (bvsle temp1056_133 temp1056_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_134 #x0000000000000000))
(assert (= var1322807 temp1056_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_135 #x0000000000000001))
(assert (= var1322819 temp1056_135))
(assert (= temp1056_136 #x0000000000000000))
(assert (= var1310898 temp1056_136))
(assert (= temp1056_137 #x0000000000000000))
(assert (= temp1056_138 temp1056_137))
(assert (= temp1056_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_138)))
(assert (= temp1056_140 #x0000000000000001))
(assert (= temp1056_141 temp1056_140))
(assert (= temp1056_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_141)))
(assert (= temp1056_143 #x0000000000000002))
(assert (= temp1056_144 temp1056_143))
(assert (= temp1056_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_144)))
(assert (= temp1056_146 #x0000000000000003))
(assert (= temp1056_147 temp1056_146))
(assert (= temp1056_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_147)))
(assert (= temp1056_149 #x0000000000000004))
(assert (= temp1056_150 temp1056_149))
(assert (= temp1056_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_150)))
(assert (= temp1056_152 #x0000000000000005))
(assert (= temp1056_153 temp1056_152))
(assert (= temp1056_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_153)))
(assert (= temp1056_156 var1310898))
(assert (= temp1056_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_156)))
(assert (= temp1056_155 temp1056_157))
(assert (= var1322852
   (ite (bvslt temp1056_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_158 #x0000000000000000))
(assert (= var1322852 temp1056_158))
(assert (= temp1056_159 #x0000000000000000))
(assert (= var1310898 temp1056_159))
(assert (= temp1056_161 var1310898))
(assert (= temp1056_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_161)))
(assert (= temp1056_160 temp1056_162))
(assert (= var1322874 (bvsmod temp1056_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1056_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1056_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1056_164 #x0000000000000001))
(assert (= var1322875 temp1056_164))
(assert (= temp1056_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1056_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_166 #x0000000000000001))
(assert (= var1322895 temp1056_166))
(assert (= temp1056_167 #x0000000000000001))
(assert (= var1311786 temp1056_167))
(assert (= temp1056_168 #x0000000000000000))
(assert (= temp1056_169 temp1056_168))
(assert (= temp1056_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_169)))
(assert (= temp1056_171 #x0000000000000001))
(assert (= temp1056_172 temp1056_171))
(assert (= temp1056_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_172)))
(assert (= temp1056_174 #x0000000000000002))
(assert (= temp1056_175 temp1056_174))
(assert (= temp1056_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_175)))
(assert (= temp1056_177 #x0000000000000003))
(assert (= temp1056_178 temp1056_177))
(assert (= temp1056_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_178)))
(assert (= temp1056_180 #x0000000000000004))
(assert (= temp1056_181 temp1056_180))
(assert (= temp1056_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_181)))
(assert (= temp1056_183 #x0000000000000005))
(assert (= temp1056_184 temp1056_183))
(assert (= temp1056_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_184)))
(assert (= temp1056_186 #x0000000000000000))
(assert (= temp1056_187
   (ite (bvslt var1311786 temp1056_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1056_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_187)))
(assert (= var1322903 temp1056_188))
(assert (bvslt (ite (bvslt var1311786 temp1056_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1056_189 #x0000000000000001))
(assert (= var1311786 temp1056_189))
(assert (= temp1056_191 var1311786))
(assert (= temp1056_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_191)))
(assert (= temp1056_190 temp1056_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1056_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1056_193 #x0000000000000001))
(assert (= var1322908 temp1056_193))
(assert (= temp1056_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1056_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_195 #x0000000000000001))
(assert (= var1322975 temp1056_195))
(assert (= temp1056_196 #x0000000000000000))
(assert (= var1310898 temp1056_196))
(assert (= temp1056_197 #x0000000000000000))
(assert (= temp1056_198 temp1056_197))
(assert (= temp1056_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1056_198)))
(assert (= temp1056_200 #x0000000000000001))
(assert (= temp1056_201 temp1056_200))
(assert (= temp1056_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1056_201)))
(assert (= temp1056_203 #x0000000000000002))
(assert (= temp1056_204 temp1056_203))
(assert (= temp1056_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1056_204)))
(assert (= temp1056_206 #x0000000000000003))
(assert (= temp1056_207 temp1056_206))
(assert (= temp1056_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1056_207)))
(assert (= temp1056_209 #x0000000000000004))
(assert (= temp1056_210 temp1056_209))
(assert (= temp1056_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1056_210)))
(assert (= temp1056_212 #x0000000000000005))
(assert (= temp1056_213 temp1056_212))
(assert (= temp1056_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1056_213)))
(assert (= temp1056_215 #x0000000000000000))
(assert (= temp1056_216
   (ite (bvslt var1310898 temp1056_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1056_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1056_216)))
(assert (= var1322977 temp1056_217))
(assert (bvslt (ite (bvslt var1310898 temp1056_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1056_218 #x0000000000000000))
(assert (= var1310898 temp1056_218))
(assert (= temp1056_220 var1310898))
(assert (= temp1056_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_220)))
(assert (= temp1056_219 temp1056_221))
(assert (= var1322980
   (ite (= var1322977 temp1056_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1056_222 #x0000000000000001))
(assert (= var1322980 temp1056_222))
(assert (= temp1056_223 #x0000000000000002))
(assert (= var1848169 temp1056_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1056_225 #x0000000000000001))
(assert (= var1323065 temp1056_225))
(assert (= temp1056_226 #x0000000000000001))
(assert (= var3486735 temp1056_226))
(assert (= temp1056_227 #x0000000000000001))
(assert (= var3814415 temp1056_227))
(assert (= temp1056_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1056_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_229 #x0000000000000001))
(assert (= var79986 temp1056_229))
(assert (= temp1056_230 #x0000000000000001))
(assert (= var80116 temp1056_230))
(assert (= var4796905 var80116))
(assert (= temp1056_231 #x0000000000000000))
(assert (= var4784306 temp1056_231))
(assert (= temp1056_232 #x0000000000000000))
(assert (= temp1056_233
   (ite (bvslt var4784306 temp1056_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1056_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_233)))
(assert (= var4796924 temp1056_234))
(assert (bvslt (ite (bvslt var4784306 temp1056_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1056_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1056_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1056_236 #x0000000000000001))
(assert (= var4796925 temp1056_236))
(assert (= temp1056_237 #x0000000000000000))
(assert (= var4996927 temp1056_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1056_238 #x0000000000000002))
(assert (= var5125763 temp1056_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_239 #x0000000000000000))
(assert (= var5191324 temp1056_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1056_240 #x0000000000000001))
(assert (= var79986 temp1056_240))
(model-add temp1056_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1056_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1056_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






