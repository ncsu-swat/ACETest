(declare-fun temp278_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp278_2 () (_ BitVec 64))
(declare-fun temp278_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp278_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp278_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp278_6 () (_ BitVec 64))
(declare-fun temp278_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_8 () (_ BitVec 64))
(declare-fun temp278_9 () (_ BitVec 64))
(declare-fun temp278_10 () (_ BitVec 64))
(declare-fun temp278_11 () (_ BitVec 64))
(declare-fun temp278_12 () (_ BitVec 64))
(declare-fun temp278_13 () (_ BitVec 64))
(declare-fun temp278_14 () (_ BitVec 64))
(declare-fun temp278_15 () (_ BitVec 64))
(declare-fun temp278_16 () (_ BitVec 64))
(declare-fun temp278_17 () (_ BitVec 64))
(declare-fun temp278_18 () (_ BitVec 64))
(declare-fun temp278_19 () (_ BitVec 64))
(declare-fun temp278_20 () (_ BitVec 64))
(declare-fun temp278_21 () (_ BitVec 64))
(declare-fun temp278_22 () (_ BitVec 64))
(declare-fun temp278_23 () (_ BitVec 64))
(declare-fun temp278_24 () (_ BitVec 64))
(declare-fun temp278_25 () (_ BitVec 64))
(declare-fun temp278_26 () (_ BitVec 64))
(declare-fun temp278_27 () (_ BitVec 64))
(declare-fun temp278_28 () (_ BitVec 64))
(declare-fun temp278_29 () (_ BitVec 64))
(declare-fun temp278_30 () (_ BitVec 64))
(declare-fun temp278_31 () (_ BitVec 64))
(declare-fun temp278_32 () (_ BitVec 64))
(declare-fun temp278_33 () (_ BitVec 64))
(declare-fun temp278_34 () (_ BitVec 64))
(declare-fun temp278_35 () (_ BitVec 64))
(declare-fun temp278_36 () (_ BitVec 64))
(declare-fun temp278_37 () (_ BitVec 64))
(declare-fun temp278_38 () (_ BitVec 64))
(declare-fun temp278_39 () (_ BitVec 64))
(declare-fun temp278_40 () (_ BitVec 64))
(declare-fun temp278_41 () (_ BitVec 64))
(declare-fun temp278_42 () (_ BitVec 64))
(declare-fun temp278_43 () (_ BitVec 64))
(declare-fun temp278_44 () (_ BitVec 64))
(declare-fun temp278_45 () (_ BitVec 64))
(declare-fun temp278_46 () (_ BitVec 64))
(declare-fun temp278_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp278_48 () (_ BitVec 64))
(declare-fun temp278_49 () (_ BitVec 64))
(declare-fun temp278_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_51 () (_ BitVec 64))
(declare-fun temp278_52 () (_ BitVec 64))
(declare-fun temp278_53 () (_ BitVec 64))
(declare-fun temp278_54 () (_ BitVec 64))
(declare-fun temp278_55 () (_ BitVec 64))
(declare-fun temp278_56 () (_ BitVec 64))
(declare-fun temp278_57 () (_ BitVec 64))
(declare-fun temp278_58 () (_ BitVec 64))
(declare-fun temp278_59 () (_ BitVec 64))
(declare-fun temp278_60 () (_ BitVec 64))
(declare-fun temp278_61 () (_ BitVec 64))
(declare-fun temp278_62 () (_ BitVec 64))
(declare-fun temp278_63 () (_ BitVec 64))
(declare-fun temp278_64 () (_ BitVec 64))
(declare-fun temp278_65 () (_ BitVec 64))
(declare-fun temp278_66 () (_ BitVec 64))
(declare-fun temp278_67 () (_ BitVec 64))
(declare-fun temp278_68 () (_ BitVec 64))
(declare-fun temp278_69 () (_ BitVec 64))
(declare-fun temp278_70 () (_ BitVec 64))
(declare-fun temp278_71 () (_ BitVec 64))
(declare-fun temp278_72 () (_ BitVec 64))
(declare-fun temp278_73 () (_ BitVec 64))
(declare-fun temp278_74 () (_ BitVec 64))
(declare-fun temp278_75 () (_ BitVec 64))
(declare-fun temp278_76 () (_ BitVec 64))
(declare-fun temp278_77 () (_ BitVec 64))
(declare-fun temp278_78 () (_ BitVec 64))
(declare-fun temp278_79 () (_ BitVec 64))
(declare-fun temp278_80 () (_ BitVec 64))
(declare-fun temp278_81 () (_ BitVec 64))
(declare-fun temp278_82 () (_ BitVec 64))
(declare-fun temp278_83 () (_ BitVec 64))
(declare-fun temp278_84 () (_ BitVec 64))
(declare-fun temp278_85 () (_ BitVec 64))
(declare-fun temp278_86 () (_ BitVec 64))
(declare-fun temp278_87 () (_ BitVec 64))
(declare-fun temp278_88 () (_ BitVec 64))
(declare-fun temp278_89 () (_ BitVec 64))
(declare-fun temp278_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp278_91 () (_ BitVec 64))
(declare-fun temp278_92 () (_ BitVec 64))
(declare-fun temp278_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_94 () (_ BitVec 64))
(declare-fun temp278_95 () (_ BitVec 64))
(declare-fun temp278_96 () (_ BitVec 64))
(declare-fun temp278_97 () (_ BitVec 64))
(declare-fun temp278_98 () (_ BitVec 64))
(declare-fun temp278_99 () (_ BitVec 64))
(declare-fun temp278_100 () (_ BitVec 64))
(declare-fun temp278_101 () (_ BitVec 64))
(declare-fun temp278_102 () (_ BitVec 64))
(declare-fun temp278_103 () (_ BitVec 64))
(declare-fun temp278_104 () (_ BitVec 64))
(declare-fun temp278_105 () (_ BitVec 64))
(declare-fun temp278_106 () (_ BitVec 64))
(declare-fun temp278_107 () (_ BitVec 64))
(declare-fun temp278_108 () (_ BitVec 64))
(declare-fun temp278_109 () (_ BitVec 64))
(declare-fun temp278_110 () (_ BitVec 64))
(declare-fun temp278_111 () (_ BitVec 64))
(declare-fun temp278_112 () (_ BitVec 64))
(declare-fun temp278_113 () (_ BitVec 64))
(declare-fun temp278_114 () (_ BitVec 64))
(declare-fun temp278_115 () (_ BitVec 64))
(declare-fun temp278_116 () (_ BitVec 64))
(declare-fun temp278_117 () (_ BitVec 64))
(declare-fun temp278_118 () (_ BitVec 64))
(declare-fun temp278_119 () (_ BitVec 64))
(declare-fun temp278_120 () (_ BitVec 64))
(declare-fun temp278_121 () (_ BitVec 64))
(declare-fun temp278_122 () (_ BitVec 64))
(declare-fun temp278_123 () (_ BitVec 64))
(declare-fun temp278_124 () (_ BitVec 64))
(declare-fun temp278_125 () (_ BitVec 64))
(declare-fun temp278_126 () (_ BitVec 64))
(declare-fun temp278_127 () (_ BitVec 64))
(declare-fun temp278_128 () (_ BitVec 64))
(declare-fun temp278_129 () (_ BitVec 64))
(declare-fun temp278_130 () (_ BitVec 64))
(declare-fun temp278_131 () (_ BitVec 64))
(declare-fun temp278_132 () (_ BitVec 64))
(declare-fun temp278_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp278_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp278_135 () (_ BitVec 64))
(declare-fun temp278_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp278_137 () (_ BitVec 64))
(declare-fun temp278_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_139 () (_ BitVec 64))
(declare-fun temp278_140 () (_ BitVec 64))
(declare-fun temp278_141 () (_ BitVec 64))
(declare-fun temp278_142 () (_ BitVec 64))
(declare-fun temp278_143 () (_ BitVec 64))
(declare-fun temp278_144 () (_ BitVec 64))
(declare-fun temp278_145 () (_ BitVec 64))
(declare-fun temp278_146 () (_ BitVec 64))
(declare-fun temp278_147 () (_ BitVec 64))
(declare-fun temp278_148 () (_ BitVec 64))
(declare-fun temp278_149 () (_ BitVec 64))
(declare-fun temp278_150 () (_ BitVec 64))
(declare-fun temp278_151 () (_ BitVec 64))
(declare-fun temp278_152 () (_ BitVec 64))
(declare-fun temp278_153 () (_ BitVec 64))
(declare-fun temp278_154 () (_ BitVec 64))
(declare-fun temp278_156 () (_ BitVec 64))
(declare-fun temp278_157 () (_ BitVec 64))
(declare-fun temp278_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp278_158 () (_ BitVec 64))
(declare-fun temp278_159 () (_ BitVec 64))
(declare-fun temp278_161 () (_ BitVec 64))
(declare-fun temp278_162 () (_ BitVec 64))
(declare-fun temp278_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp278_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp278_164 () (_ BitVec 64))
(declare-fun temp278_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp278_166 () (_ BitVec 64))
(declare-fun temp278_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp278_168 () (_ BitVec 64))
(declare-fun temp278_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_170 () (_ BitVec 64))
(declare-fun temp278_171 () (_ BitVec 64))
(declare-fun temp278_172 () (_ BitVec 64))
(declare-fun temp278_173 () (_ BitVec 64))
(declare-fun temp278_174 () (_ BitVec 64))
(declare-fun temp278_175 () (_ BitVec 64))
(declare-fun temp278_176 () (_ BitVec 64))
(declare-fun temp278_177 () (_ BitVec 64))
(declare-fun temp278_178 () (_ BitVec 64))
(declare-fun temp278_179 () (_ BitVec 64))
(declare-fun temp278_180 () (_ BitVec 64))
(declare-fun temp278_181 () (_ BitVec 64))
(declare-fun temp278_182 () (_ BitVec 64))
(declare-fun temp278_183 () (_ BitVec 64))
(declare-fun temp278_184 () (_ BitVec 64))
(declare-fun temp278_185 () (_ BitVec 64))
(declare-fun temp278_186 () (_ BitVec 64))
(declare-fun temp278_187 () (_ BitVec 64))
(declare-fun temp278_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp278_189 () (_ BitVec 64))
(declare-fun temp278_191 () (_ BitVec 64))
(declare-fun temp278_192 () (_ BitVec 64))
(declare-fun temp278_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp278_193 () (_ BitVec 64))
(declare-fun temp278_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp278_195 () (_ BitVec 64))
(declare-fun temp278_196 () (_ BitVec 64))
(declare-fun temp278_197 () (_ BitVec 64))
(declare-fun temp278_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_199 () (_ BitVec 64))
(declare-fun temp278_200 () (_ BitVec 64))
(declare-fun temp278_201 () (_ BitVec 64))
(declare-fun temp278_202 () (_ BitVec 64))
(declare-fun temp278_203 () (_ BitVec 64))
(declare-fun temp278_204 () (_ BitVec 64))
(declare-fun temp278_205 () (_ BitVec 64))
(declare-fun temp278_206 () (_ BitVec 64))
(declare-fun temp278_207 () (_ BitVec 64))
(declare-fun temp278_208 () (_ BitVec 64))
(declare-fun temp278_209 () (_ BitVec 64))
(declare-fun temp278_210 () (_ BitVec 64))
(declare-fun temp278_211 () (_ BitVec 64))
(declare-fun temp278_212 () (_ BitVec 64))
(declare-fun temp278_213 () (_ BitVec 64))
(declare-fun temp278_214 () (_ BitVec 64))
(declare-fun temp278_215 () (_ BitVec 64))
(declare-fun temp278_216 () (_ BitVec 64))
(declare-fun temp278_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp278_218 () (_ BitVec 64))
(declare-fun temp278_220 () (_ BitVec 64))
(declare-fun temp278_221 () (_ BitVec 64))
(declare-fun temp278_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp278_222 () (_ BitVec 64))
(declare-fun temp278_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp278_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp278_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp278_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp278_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp278_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp278_229 () (_ BitVec 64))
(declare-fun temp278_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp278_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp278_232 () (_ BitVec 64))
(declare-fun temp278_233 () (_ BitVec 64))
(declare-fun temp278_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp278_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp278_236 () (_ BitVec 64))
(declare-fun temp278_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp278_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp278_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun temp278_240 () (_ BitVec 64))
(assert (= temp278_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp278_1)))
(assert (= temp278_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp278_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_3 #x0000000000000000))
(assert (= var79869 temp278_3))
(assert (= temp278_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp278_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_5 #x0000000000000000))
(assert (= var79914 temp278_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp278_6 #x0000000000000000))
(assert (= temp278_7 temp278_6))
(assert (= temp278_8 (select ARGNAME_padding_NAMEEND_VAL temp278_7)))
(assert (= temp278_9 #x0000000000000001))
(assert (= temp278_10 temp278_9))
(assert (= temp278_11 (select ARGNAME_padding_NAMEEND_VAL temp278_10)))
(assert (= temp278_12 #x0000000000000002))
(assert (= temp278_13 temp278_12))
(assert (= temp278_14 (select ARGNAME_padding_NAMEEND_VAL temp278_13)))
(assert (= temp278_15 #x0000000000000003))
(assert (= temp278_16 temp278_15))
(assert (= temp278_17 (select ARGNAME_padding_NAMEEND_VAL temp278_16)))
(assert (= temp278_18 #x0000000000000004))
(assert (= temp278_19 temp278_18))
(assert (= temp278_20 (select ARGNAME_padding_NAMEEND_VAL temp278_19)))
(assert (= temp278_21 #x0000000000000005))
(assert (= temp278_22 temp278_21))
(assert (= temp278_23 (select ARGNAME_padding_NAMEEND_VAL temp278_22)))
(assert (= temp278_24 #x0000000000000000))
(assert (= temp278_25 #x0000000000000000))
(assert (= temp278_26 temp278_25))
(assert (= temp278_27 (select ARGNAME_padding_NAMEEND_VAL temp278_26)))
(assert (= temp278_28 #x0000000000000000))
(assert (= temp278_29 #x0000000000000001))
(assert (= temp278_30 temp278_29))
(assert (= temp278_31 (select ARGNAME_padding_NAMEEND_VAL temp278_30)))
(assert (= temp278_32 #x0000000000000000))
(assert (= temp278_33 #x0000000000000002))
(assert (= temp278_34 temp278_33))
(assert (= temp278_35 (select ARGNAME_padding_NAMEEND_VAL temp278_34)))
(assert (= temp278_36 #x0000000000000000))
(assert (= temp278_37 #x0000000000000003))
(assert (= temp278_38 temp278_37))
(assert (= temp278_39 (select ARGNAME_padding_NAMEEND_VAL temp278_38)))
(assert (= temp278_40 #x0000000000000000))
(assert (= temp278_41 #x0000000000000004))
(assert (= temp278_42 temp278_41))
(assert (= temp278_43 (select ARGNAME_padding_NAMEEND_VAL temp278_42)))
(assert (= temp278_44 #x0000000000000000))
(assert (= temp278_45 #x0000000000000005))
(assert (= temp278_46 temp278_45))
(assert (= temp278_47 (select ARGNAME_padding_NAMEEND_VAL temp278_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp278_27 temp278_24)
             (bvslt temp278_31 temp278_28)
             (bvslt temp278_35 temp278_32)
             (bvslt temp278_39 temp278_36)
             (bvslt temp278_43 temp278_40)
             (bvslt temp278_47 temp278_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_48 #x0000000000000000))
(assert (= var1322786 temp278_48))
(assert (= temp278_49 #x0000000000000000))
(assert (= temp278_50 temp278_49))
(assert (= temp278_51 (select ARGNAME_output_padding_NAMEEND_VAL temp278_50)))
(assert (= temp278_52 #x0000000000000001))
(assert (= temp278_53 temp278_52))
(assert (= temp278_54 (select ARGNAME_output_padding_NAMEEND_VAL temp278_53)))
(assert (= temp278_55 #x0000000000000002))
(assert (= temp278_56 temp278_55))
(assert (= temp278_57 (select ARGNAME_output_padding_NAMEEND_VAL temp278_56)))
(assert (= temp278_58 #x0000000000000003))
(assert (= temp278_59 temp278_58))
(assert (= temp278_60 (select ARGNAME_output_padding_NAMEEND_VAL temp278_59)))
(assert (= temp278_61 #x0000000000000004))
(assert (= temp278_62 temp278_61))
(assert (= temp278_63 (select ARGNAME_output_padding_NAMEEND_VAL temp278_62)))
(assert (= temp278_64 #x0000000000000005))
(assert (= temp278_65 temp278_64))
(assert (= temp278_66 (select ARGNAME_output_padding_NAMEEND_VAL temp278_65)))
(assert (= temp278_67 #x0000000000000000))
(assert (= temp278_68 #x0000000000000000))
(assert (= temp278_69 temp278_68))
(assert (= temp278_70 (select ARGNAME_output_padding_NAMEEND_VAL temp278_69)))
(assert (= temp278_71 #x0000000000000000))
(assert (= temp278_72 #x0000000000000001))
(assert (= temp278_73 temp278_72))
(assert (= temp278_74 (select ARGNAME_output_padding_NAMEEND_VAL temp278_73)))
(assert (= temp278_75 #x0000000000000000))
(assert (= temp278_76 #x0000000000000002))
(assert (= temp278_77 temp278_76))
(assert (= temp278_78 (select ARGNAME_output_padding_NAMEEND_VAL temp278_77)))
(assert (= temp278_79 #x0000000000000000))
(assert (= temp278_80 #x0000000000000003))
(assert (= temp278_81 temp278_80))
(assert (= temp278_82 (select ARGNAME_output_padding_NAMEEND_VAL temp278_81)))
(assert (= temp278_83 #x0000000000000000))
(assert (= temp278_84 #x0000000000000004))
(assert (= temp278_85 temp278_84))
(assert (= temp278_86 (select ARGNAME_output_padding_NAMEEND_VAL temp278_85)))
(assert (= temp278_87 #x0000000000000000))
(assert (= temp278_88 #x0000000000000005))
(assert (= temp278_89 temp278_88))
(assert (= temp278_90 (select ARGNAME_output_padding_NAMEEND_VAL temp278_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp278_70 temp278_67)
             (bvslt temp278_74 temp278_71)
             (bvslt temp278_78 temp278_75)
             (bvslt temp278_82 temp278_79)
             (bvslt temp278_86 temp278_83)
             (bvslt temp278_90 temp278_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_91 #x0000000000000000))
(assert (= var1322797 temp278_91))
(assert (= temp278_92 #x0000000000000000))
(assert (= temp278_93 temp278_92))
(assert (= temp278_94 (select ARGNAME_stride_NAMEEND_VAL temp278_93)))
(assert (= temp278_95 #x0000000000000001))
(assert (= temp278_96 temp278_95))
(assert (= temp278_97 (select ARGNAME_stride_NAMEEND_VAL temp278_96)))
(assert (= temp278_98 #x0000000000000002))
(assert (= temp278_99 temp278_98))
(assert (= temp278_100 (select ARGNAME_stride_NAMEEND_VAL temp278_99)))
(assert (= temp278_101 #x0000000000000003))
(assert (= temp278_102 temp278_101))
(assert (= temp278_103 (select ARGNAME_stride_NAMEEND_VAL temp278_102)))
(assert (= temp278_104 #x0000000000000004))
(assert (= temp278_105 temp278_104))
(assert (= temp278_106 (select ARGNAME_stride_NAMEEND_VAL temp278_105)))
(assert (= temp278_107 #x0000000000000005))
(assert (= temp278_108 temp278_107))
(assert (= temp278_109 (select ARGNAME_stride_NAMEEND_VAL temp278_108)))
(assert (= temp278_110 #x0000000000000000))
(assert (= temp278_111 #x0000000000000000))
(assert (= temp278_112 temp278_111))
(assert (= temp278_113 (select ARGNAME_stride_NAMEEND_VAL temp278_112)))
(assert (= temp278_114 #x0000000000000000))
(assert (= temp278_115 #x0000000000000001))
(assert (= temp278_116 temp278_115))
(assert (= temp278_117 (select ARGNAME_stride_NAMEEND_VAL temp278_116)))
(assert (= temp278_118 #x0000000000000000))
(assert (= temp278_119 #x0000000000000002))
(assert (= temp278_120 temp278_119))
(assert (= temp278_121 (select ARGNAME_stride_NAMEEND_VAL temp278_120)))
(assert (= temp278_122 #x0000000000000000))
(assert (= temp278_123 #x0000000000000003))
(assert (= temp278_124 temp278_123))
(assert (= temp278_125 (select ARGNAME_stride_NAMEEND_VAL temp278_124)))
(assert (= temp278_126 #x0000000000000000))
(assert (= temp278_127 #x0000000000000004))
(assert (= temp278_128 temp278_127))
(assert (= temp278_129 (select ARGNAME_stride_NAMEEND_VAL temp278_128)))
(assert (= temp278_130 #x0000000000000000))
(assert (= temp278_131 #x0000000000000005))
(assert (= temp278_132 temp278_131))
(assert (= temp278_133 (select ARGNAME_stride_NAMEEND_VAL temp278_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp278_113 temp278_110)
             (bvsle temp278_117 temp278_114)
             (bvsle temp278_121 temp278_118)
             (bvsle temp278_125 temp278_122)
             (bvsle temp278_129 temp278_126)
             (bvsle temp278_133 temp278_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_134 #x0000000000000000))
(assert (= var1322807 temp278_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_135 #x0000000000000001))
(assert (= var1322819 temp278_135))
(assert (= temp278_136 #x0000000000000000))
(assert (= var1310898 temp278_136))
(assert (= temp278_137 #x0000000000000000))
(assert (= temp278_138 temp278_137))
(assert (= temp278_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_138)))
(assert (= temp278_140 #x0000000000000001))
(assert (= temp278_141 temp278_140))
(assert (= temp278_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_141)))
(assert (= temp278_143 #x0000000000000002))
(assert (= temp278_144 temp278_143))
(assert (= temp278_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_144)))
(assert (= temp278_146 #x0000000000000003))
(assert (= temp278_147 temp278_146))
(assert (= temp278_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_147)))
(assert (= temp278_149 #x0000000000000004))
(assert (= temp278_150 temp278_149))
(assert (= temp278_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_150)))
(assert (= temp278_152 #x0000000000000005))
(assert (= temp278_153 temp278_152))
(assert (= temp278_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_153)))
(assert (= temp278_156 var1310898))
(assert (= temp278_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_156)))
(assert (= temp278_155 temp278_157))
(assert (= var1322852
   (ite (bvslt temp278_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_158 #x0000000000000000))
(assert (= var1322852 temp278_158))
(assert (= temp278_159 #x0000000000000000))
(assert (= var1310898 temp278_159))
(assert (= temp278_161 var1310898))
(assert (= temp278_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_161)))
(assert (= temp278_160 temp278_162))
(assert (= var1322874 (bvsmod temp278_160 ARGNAME_groups_NAMEEND)))
(assert (= temp278_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp278_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_164 #x0000000000000001))
(assert (= var1322875 temp278_164))
(assert (= temp278_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp278_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_166 #x0000000000000001))
(assert (= var1322895 temp278_166))
(assert (= temp278_167 #x0000000000000001))
(assert (= var1311786 temp278_167))
(assert (= temp278_168 #x0000000000000000))
(assert (= temp278_169 temp278_168))
(assert (= temp278_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_169)))
(assert (= temp278_171 #x0000000000000001))
(assert (= temp278_172 temp278_171))
(assert (= temp278_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_172)))
(assert (= temp278_174 #x0000000000000002))
(assert (= temp278_175 temp278_174))
(assert (= temp278_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_175)))
(assert (= temp278_177 #x0000000000000003))
(assert (= temp278_178 temp278_177))
(assert (= temp278_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_178)))
(assert (= temp278_180 #x0000000000000004))
(assert (= temp278_181 temp278_180))
(assert (= temp278_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_181)))
(assert (= temp278_183 #x0000000000000005))
(assert (= temp278_184 temp278_183))
(assert (= temp278_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_184)))
(assert (= temp278_186 #x0000000000000000))
(assert (= temp278_187
   (ite (bvslt var1311786 temp278_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp278_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_187)))
(assert (= var1322903 temp278_188))
(assert (bvslt (ite (bvslt var1311786 temp278_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp278_189 #x0000000000000001))
(assert (= var1311786 temp278_189))
(assert (= temp278_191 var1311786))
(assert (= temp278_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_191)))
(assert (= temp278_190 temp278_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp278_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_193 #x0000000000000001))
(assert (= var1322908 temp278_193))
(assert (= temp278_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp278_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_195 #x0000000000000001))
(assert (= var1322975 temp278_195))
(assert (= temp278_196 #x0000000000000000))
(assert (= var1310898 temp278_196))
(assert (= temp278_197 #x0000000000000000))
(assert (= temp278_198 temp278_197))
(assert (= temp278_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp278_198)))
(assert (= temp278_200 #x0000000000000001))
(assert (= temp278_201 temp278_200))
(assert (= temp278_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp278_201)))
(assert (= temp278_203 #x0000000000000002))
(assert (= temp278_204 temp278_203))
(assert (= temp278_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp278_204)))
(assert (= temp278_206 #x0000000000000003))
(assert (= temp278_207 temp278_206))
(assert (= temp278_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp278_207)))
(assert (= temp278_209 #x0000000000000004))
(assert (= temp278_210 temp278_209))
(assert (= temp278_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp278_210)))
(assert (= temp278_212 #x0000000000000005))
(assert (= temp278_213 temp278_212))
(assert (= temp278_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp278_213)))
(assert (= temp278_215 #x0000000000000000))
(assert (= temp278_216
   (ite (bvslt var1310898 temp278_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp278_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp278_216)))
(assert (= var1322977 temp278_217))
(assert (bvslt (ite (bvslt var1310898 temp278_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp278_218 #x0000000000000000))
(assert (= var1310898 temp278_218))
(assert (= temp278_220 var1310898))
(assert (= temp278_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_220)))
(assert (= temp278_219 temp278_221))
(assert (= var1322980
   (ite (= var1322977 temp278_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_222 #x0000000000000001))
(assert (= var1322980 temp278_222))
(assert (= temp278_223 #x0000000000000002))
(assert (= var1848169 temp278_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp278_225 #x0000000000000001))
(assert (= var1323065 temp278_225))
(assert (= temp278_226 #x0000000000000001))
(assert (= var3486735 temp278_226))
(assert (= temp278_227 #x0000000000000001))
(assert (= var3814415 temp278_227))
(assert (= temp278_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp278_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_229 #x0000000000000001))
(assert (= var79986 temp278_229))
(assert (= temp278_230 #x0000000000000001))
(assert (= var80116 temp278_230))
(assert (= var4796905 var80116))
(assert (= temp278_231 #x0000000000000000))
(assert (= var4784306 temp278_231))
(assert (= temp278_232 #x0000000000000000))
(assert (= temp278_233
   (ite (bvslt var4784306 temp278_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp278_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_233)))
(assert (= var4796924 temp278_234))
(assert (bvslt (ite (bvslt var4784306 temp278_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp278_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp278_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_236 #x0000000000000001))
(assert (= var4796925 temp278_236))
(assert (= temp278_237 #x0000000000000000))
(assert (= var4996927 temp278_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp278_238 #x0000000000000002))
(assert (= var5125763 temp278_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_239 #x0000000000000000))
(assert (= var5191324 temp278_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5976464 var80129))
(assert (= var6238608 var80129))
(assert (= temp278_240 #x0000000000000001))
(assert (= var79986 temp278_240))
(model-add temp278_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp278_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp278_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






