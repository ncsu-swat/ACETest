(declare-fun temp2_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp2_2 () (_ BitVec 64))
(declare-fun temp2_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp2_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp2_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp2_6 () (_ BitVec 64))
(declare-fun temp2_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_8 () (_ BitVec 64))
(declare-fun temp2_9 () (_ BitVec 64))
(declare-fun temp2_10 () (_ BitVec 64))
(declare-fun temp2_11 () (_ BitVec 64))
(declare-fun temp2_12 () (_ BitVec 64))
(declare-fun temp2_13 () (_ BitVec 64))
(declare-fun temp2_14 () (_ BitVec 64))
(declare-fun temp2_15 () (_ BitVec 64))
(declare-fun temp2_16 () (_ BitVec 64))
(declare-fun temp2_17 () (_ BitVec 64))
(declare-fun temp2_18 () (_ BitVec 64))
(declare-fun temp2_19 () (_ BitVec 64))
(declare-fun temp2_20 () (_ BitVec 64))
(declare-fun temp2_21 () (_ BitVec 64))
(declare-fun temp2_22 () (_ BitVec 64))
(declare-fun temp2_23 () (_ BitVec 64))
(declare-fun temp2_24 () (_ BitVec 64))
(declare-fun temp2_25 () (_ BitVec 64))
(declare-fun temp2_26 () (_ BitVec 64))
(declare-fun temp2_27 () (_ BitVec 64))
(declare-fun temp2_28 () (_ BitVec 64))
(declare-fun temp2_29 () (_ BitVec 64))
(declare-fun temp2_30 () (_ BitVec 64))
(declare-fun temp2_31 () (_ BitVec 64))
(declare-fun temp2_32 () (_ BitVec 64))
(declare-fun temp2_33 () (_ BitVec 64))
(declare-fun temp2_34 () (_ BitVec 64))
(declare-fun temp2_35 () (_ BitVec 64))
(declare-fun temp2_36 () (_ BitVec 64))
(declare-fun temp2_37 () (_ BitVec 64))
(declare-fun temp2_38 () (_ BitVec 64))
(declare-fun temp2_39 () (_ BitVec 64))
(declare-fun temp2_40 () (_ BitVec 64))
(declare-fun temp2_41 () (_ BitVec 64))
(declare-fun temp2_42 () (_ BitVec 64))
(declare-fun temp2_43 () (_ BitVec 64))
(declare-fun temp2_44 () (_ BitVec 64))
(declare-fun temp2_45 () (_ BitVec 64))
(declare-fun temp2_46 () (_ BitVec 64))
(declare-fun temp2_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp2_48 () (_ BitVec 64))
(declare-fun temp2_49 () (_ BitVec 64))
(declare-fun temp2_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_51 () (_ BitVec 64))
(declare-fun temp2_52 () (_ BitVec 64))
(declare-fun temp2_53 () (_ BitVec 64))
(declare-fun temp2_54 () (_ BitVec 64))
(declare-fun temp2_55 () (_ BitVec 64))
(declare-fun temp2_56 () (_ BitVec 64))
(declare-fun temp2_57 () (_ BitVec 64))
(declare-fun temp2_58 () (_ BitVec 64))
(declare-fun temp2_59 () (_ BitVec 64))
(declare-fun temp2_60 () (_ BitVec 64))
(declare-fun temp2_61 () (_ BitVec 64))
(declare-fun temp2_62 () (_ BitVec 64))
(declare-fun temp2_63 () (_ BitVec 64))
(declare-fun temp2_64 () (_ BitVec 64))
(declare-fun temp2_65 () (_ BitVec 64))
(declare-fun temp2_66 () (_ BitVec 64))
(declare-fun temp2_67 () (_ BitVec 64))
(declare-fun temp2_68 () (_ BitVec 64))
(declare-fun temp2_69 () (_ BitVec 64))
(declare-fun temp2_70 () (_ BitVec 64))
(declare-fun temp2_71 () (_ BitVec 64))
(declare-fun temp2_72 () (_ BitVec 64))
(declare-fun temp2_73 () (_ BitVec 64))
(declare-fun temp2_74 () (_ BitVec 64))
(declare-fun temp2_75 () (_ BitVec 64))
(declare-fun temp2_76 () (_ BitVec 64))
(declare-fun temp2_77 () (_ BitVec 64))
(declare-fun temp2_78 () (_ BitVec 64))
(declare-fun temp2_79 () (_ BitVec 64))
(declare-fun temp2_80 () (_ BitVec 64))
(declare-fun temp2_81 () (_ BitVec 64))
(declare-fun temp2_82 () (_ BitVec 64))
(declare-fun temp2_83 () (_ BitVec 64))
(declare-fun temp2_84 () (_ BitVec 64))
(declare-fun temp2_85 () (_ BitVec 64))
(declare-fun temp2_86 () (_ BitVec 64))
(declare-fun temp2_87 () (_ BitVec 64))
(declare-fun temp2_88 () (_ BitVec 64))
(declare-fun temp2_89 () (_ BitVec 64))
(declare-fun temp2_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp2_91 () (_ BitVec 64))
(declare-fun temp2_92 () (_ BitVec 64))
(declare-fun temp2_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_94 () (_ BitVec 64))
(declare-fun temp2_95 () (_ BitVec 64))
(declare-fun temp2_96 () (_ BitVec 64))
(declare-fun temp2_97 () (_ BitVec 64))
(declare-fun temp2_98 () (_ BitVec 64))
(declare-fun temp2_99 () (_ BitVec 64))
(declare-fun temp2_100 () (_ BitVec 64))
(declare-fun temp2_101 () (_ BitVec 64))
(declare-fun temp2_102 () (_ BitVec 64))
(declare-fun temp2_103 () (_ BitVec 64))
(declare-fun temp2_104 () (_ BitVec 64))
(declare-fun temp2_105 () (_ BitVec 64))
(declare-fun temp2_106 () (_ BitVec 64))
(declare-fun temp2_107 () (_ BitVec 64))
(declare-fun temp2_108 () (_ BitVec 64))
(declare-fun temp2_109 () (_ BitVec 64))
(declare-fun temp2_110 () (_ BitVec 64))
(declare-fun temp2_111 () (_ BitVec 64))
(declare-fun temp2_112 () (_ BitVec 64))
(declare-fun temp2_113 () (_ BitVec 64))
(declare-fun temp2_114 () (_ BitVec 64))
(declare-fun temp2_115 () (_ BitVec 64))
(declare-fun temp2_116 () (_ BitVec 64))
(declare-fun temp2_117 () (_ BitVec 64))
(declare-fun temp2_118 () (_ BitVec 64))
(declare-fun temp2_119 () (_ BitVec 64))
(declare-fun temp2_120 () (_ BitVec 64))
(declare-fun temp2_121 () (_ BitVec 64))
(declare-fun temp2_122 () (_ BitVec 64))
(declare-fun temp2_123 () (_ BitVec 64))
(declare-fun temp2_124 () (_ BitVec 64))
(declare-fun temp2_125 () (_ BitVec 64))
(declare-fun temp2_126 () (_ BitVec 64))
(declare-fun temp2_127 () (_ BitVec 64))
(declare-fun temp2_128 () (_ BitVec 64))
(declare-fun temp2_129 () (_ BitVec 64))
(declare-fun temp2_130 () (_ BitVec 64))
(declare-fun temp2_131 () (_ BitVec 64))
(declare-fun temp2_132 () (_ BitVec 64))
(declare-fun temp2_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp2_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp2_135 () (_ BitVec 64))
(declare-fun temp2_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp2_137 () (_ BitVec 64))
(declare-fun temp2_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_139 () (_ BitVec 64))
(declare-fun temp2_140 () (_ BitVec 64))
(declare-fun temp2_141 () (_ BitVec 64))
(declare-fun temp2_142 () (_ BitVec 64))
(declare-fun temp2_143 () (_ BitVec 64))
(declare-fun temp2_144 () (_ BitVec 64))
(declare-fun temp2_145 () (_ BitVec 64))
(declare-fun temp2_146 () (_ BitVec 64))
(declare-fun temp2_147 () (_ BitVec 64))
(declare-fun temp2_148 () (_ BitVec 64))
(declare-fun temp2_149 () (_ BitVec 64))
(declare-fun temp2_150 () (_ BitVec 64))
(declare-fun temp2_151 () (_ BitVec 64))
(declare-fun temp2_152 () (_ BitVec 64))
(declare-fun temp2_153 () (_ BitVec 64))
(declare-fun temp2_154 () (_ BitVec 64))
(declare-fun temp2_156 () (_ BitVec 64))
(declare-fun temp2_157 () (_ BitVec 64))
(declare-fun temp2_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp2_158 () (_ BitVec 64))
(declare-fun temp2_159 () (_ BitVec 64))
(declare-fun temp2_161 () (_ BitVec 64))
(declare-fun temp2_162 () (_ BitVec 64))
(declare-fun temp2_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp2_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp2_164 () (_ BitVec 64))
(declare-fun temp2_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp2_166 () (_ BitVec 64))
(declare-fun temp2_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp2_168 () (_ BitVec 64))
(declare-fun temp2_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_170 () (_ BitVec 64))
(declare-fun temp2_171 () (_ BitVec 64))
(declare-fun temp2_172 () (_ BitVec 64))
(declare-fun temp2_173 () (_ BitVec 64))
(declare-fun temp2_174 () (_ BitVec 64))
(declare-fun temp2_175 () (_ BitVec 64))
(declare-fun temp2_176 () (_ BitVec 64))
(declare-fun temp2_177 () (_ BitVec 64))
(declare-fun temp2_178 () (_ BitVec 64))
(declare-fun temp2_179 () (_ BitVec 64))
(declare-fun temp2_180 () (_ BitVec 64))
(declare-fun temp2_181 () (_ BitVec 64))
(declare-fun temp2_182 () (_ BitVec 64))
(declare-fun temp2_183 () (_ BitVec 64))
(declare-fun temp2_184 () (_ BitVec 64))
(declare-fun temp2_185 () (_ BitVec 64))
(declare-fun temp2_186 () (_ BitVec 64))
(declare-fun temp2_187 () (_ BitVec 64))
(declare-fun temp2_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp2_189 () (_ BitVec 64))
(declare-fun temp2_191 () (_ BitVec 64))
(declare-fun temp2_192 () (_ BitVec 64))
(declare-fun temp2_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp2_193 () (_ BitVec 64))
(declare-fun temp2_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp2_195 () (_ BitVec 64))
(declare-fun temp2_196 () (_ BitVec 64))
(declare-fun temp2_197 () (_ BitVec 64))
(declare-fun temp2_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_199 () (_ BitVec 64))
(declare-fun temp2_200 () (_ BitVec 64))
(declare-fun temp2_201 () (_ BitVec 64))
(declare-fun temp2_202 () (_ BitVec 64))
(declare-fun temp2_203 () (_ BitVec 64))
(declare-fun temp2_204 () (_ BitVec 64))
(declare-fun temp2_205 () (_ BitVec 64))
(declare-fun temp2_206 () (_ BitVec 64))
(declare-fun temp2_207 () (_ BitVec 64))
(declare-fun temp2_208 () (_ BitVec 64))
(declare-fun temp2_209 () (_ BitVec 64))
(declare-fun temp2_210 () (_ BitVec 64))
(declare-fun temp2_211 () (_ BitVec 64))
(declare-fun temp2_212 () (_ BitVec 64))
(declare-fun temp2_213 () (_ BitVec 64))
(declare-fun temp2_214 () (_ BitVec 64))
(declare-fun temp2_215 () (_ BitVec 64))
(declare-fun temp2_216 () (_ BitVec 64))
(declare-fun temp2_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp2_218 () (_ BitVec 64))
(declare-fun temp2_220 () (_ BitVec 64))
(declare-fun temp2_221 () (_ BitVec 64))
(declare-fun temp2_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp2_222 () (_ BitVec 64))
(declare-fun temp2_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp2_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp2_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp2_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp2_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp2_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp2_229 () (_ BitVec 64))
(declare-fun temp2_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp2_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp2_232 () (_ BitVec 64))
(declare-fun temp2_233 () (_ BitVec 64))
(declare-fun temp2_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp2_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp2_236 () (_ BitVec 64))
(declare-fun temp2_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp2_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp2_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp2_240 () (_ BitVec 64))
(assert (= temp2_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp2_1)))
(assert (= temp2_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp2_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_3 #x0000000000000000))
(assert (= var79869 temp2_3))
(assert (= temp2_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp2_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_5 #x0000000000000000))
(assert (= var79914 temp2_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp2_6 #x0000000000000000))
(assert (= temp2_7 temp2_6))
(assert (= temp2_8 (select ARGNAME_padding_NAMEEND_VAL temp2_7)))
(assert (= temp2_9 #x0000000000000001))
(assert (= temp2_10 temp2_9))
(assert (= temp2_11 (select ARGNAME_padding_NAMEEND_VAL temp2_10)))
(assert (= temp2_12 #x0000000000000002))
(assert (= temp2_13 temp2_12))
(assert (= temp2_14 (select ARGNAME_padding_NAMEEND_VAL temp2_13)))
(assert (= temp2_15 #x0000000000000003))
(assert (= temp2_16 temp2_15))
(assert (= temp2_17 (select ARGNAME_padding_NAMEEND_VAL temp2_16)))
(assert (= temp2_18 #x0000000000000004))
(assert (= temp2_19 temp2_18))
(assert (= temp2_20 (select ARGNAME_padding_NAMEEND_VAL temp2_19)))
(assert (= temp2_21 #x0000000000000005))
(assert (= temp2_22 temp2_21))
(assert (= temp2_23 (select ARGNAME_padding_NAMEEND_VAL temp2_22)))
(assert (= temp2_24 #x0000000000000000))
(assert (= temp2_25 #x0000000000000000))
(assert (= temp2_26 temp2_25))
(assert (= temp2_27 (select ARGNAME_padding_NAMEEND_VAL temp2_26)))
(assert (= temp2_28 #x0000000000000000))
(assert (= temp2_29 #x0000000000000001))
(assert (= temp2_30 temp2_29))
(assert (= temp2_31 (select ARGNAME_padding_NAMEEND_VAL temp2_30)))
(assert (= temp2_32 #x0000000000000000))
(assert (= temp2_33 #x0000000000000002))
(assert (= temp2_34 temp2_33))
(assert (= temp2_35 (select ARGNAME_padding_NAMEEND_VAL temp2_34)))
(assert (= temp2_36 #x0000000000000000))
(assert (= temp2_37 #x0000000000000003))
(assert (= temp2_38 temp2_37))
(assert (= temp2_39 (select ARGNAME_padding_NAMEEND_VAL temp2_38)))
(assert (= temp2_40 #x0000000000000000))
(assert (= temp2_41 #x0000000000000004))
(assert (= temp2_42 temp2_41))
(assert (= temp2_43 (select ARGNAME_padding_NAMEEND_VAL temp2_42)))
(assert (= temp2_44 #x0000000000000000))
(assert (= temp2_45 #x0000000000000005))
(assert (= temp2_46 temp2_45))
(assert (= temp2_47 (select ARGNAME_padding_NAMEEND_VAL temp2_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp2_27 temp2_24)
             (bvslt temp2_31 temp2_28)
             (bvslt temp2_35 temp2_32)
             (bvslt temp2_39 temp2_36)
             (bvslt temp2_43 temp2_40)
             (bvslt temp2_47 temp2_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_48 #x0000000000000000))
(assert (= var1322786 temp2_48))
(assert (= temp2_49 #x0000000000000000))
(assert (= temp2_50 temp2_49))
(assert (= temp2_51 (select ARGNAME_output_padding_NAMEEND_VAL temp2_50)))
(assert (= temp2_52 #x0000000000000001))
(assert (= temp2_53 temp2_52))
(assert (= temp2_54 (select ARGNAME_output_padding_NAMEEND_VAL temp2_53)))
(assert (= temp2_55 #x0000000000000002))
(assert (= temp2_56 temp2_55))
(assert (= temp2_57 (select ARGNAME_output_padding_NAMEEND_VAL temp2_56)))
(assert (= temp2_58 #x0000000000000003))
(assert (= temp2_59 temp2_58))
(assert (= temp2_60 (select ARGNAME_output_padding_NAMEEND_VAL temp2_59)))
(assert (= temp2_61 #x0000000000000004))
(assert (= temp2_62 temp2_61))
(assert (= temp2_63 (select ARGNAME_output_padding_NAMEEND_VAL temp2_62)))
(assert (= temp2_64 #x0000000000000005))
(assert (= temp2_65 temp2_64))
(assert (= temp2_66 (select ARGNAME_output_padding_NAMEEND_VAL temp2_65)))
(assert (= temp2_67 #x0000000000000000))
(assert (= temp2_68 #x0000000000000000))
(assert (= temp2_69 temp2_68))
(assert (= temp2_70 (select ARGNAME_output_padding_NAMEEND_VAL temp2_69)))
(assert (= temp2_71 #x0000000000000000))
(assert (= temp2_72 #x0000000000000001))
(assert (= temp2_73 temp2_72))
(assert (= temp2_74 (select ARGNAME_output_padding_NAMEEND_VAL temp2_73)))
(assert (= temp2_75 #x0000000000000000))
(assert (= temp2_76 #x0000000000000002))
(assert (= temp2_77 temp2_76))
(assert (= temp2_78 (select ARGNAME_output_padding_NAMEEND_VAL temp2_77)))
(assert (= temp2_79 #x0000000000000000))
(assert (= temp2_80 #x0000000000000003))
(assert (= temp2_81 temp2_80))
(assert (= temp2_82 (select ARGNAME_output_padding_NAMEEND_VAL temp2_81)))
(assert (= temp2_83 #x0000000000000000))
(assert (= temp2_84 #x0000000000000004))
(assert (= temp2_85 temp2_84))
(assert (= temp2_86 (select ARGNAME_output_padding_NAMEEND_VAL temp2_85)))
(assert (= temp2_87 #x0000000000000000))
(assert (= temp2_88 #x0000000000000005))
(assert (= temp2_89 temp2_88))
(assert (= temp2_90 (select ARGNAME_output_padding_NAMEEND_VAL temp2_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp2_70 temp2_67)
             (bvslt temp2_74 temp2_71)
             (bvslt temp2_78 temp2_75)
             (bvslt temp2_82 temp2_79)
             (bvslt temp2_86 temp2_83)
             (bvslt temp2_90 temp2_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_91 #x0000000000000000))
(assert (= var1322797 temp2_91))
(assert (= temp2_92 #x0000000000000000))
(assert (= temp2_93 temp2_92))
(assert (= temp2_94 (select ARGNAME_stride_NAMEEND_VAL temp2_93)))
(assert (= temp2_95 #x0000000000000001))
(assert (= temp2_96 temp2_95))
(assert (= temp2_97 (select ARGNAME_stride_NAMEEND_VAL temp2_96)))
(assert (= temp2_98 #x0000000000000002))
(assert (= temp2_99 temp2_98))
(assert (= temp2_100 (select ARGNAME_stride_NAMEEND_VAL temp2_99)))
(assert (= temp2_101 #x0000000000000003))
(assert (= temp2_102 temp2_101))
(assert (= temp2_103 (select ARGNAME_stride_NAMEEND_VAL temp2_102)))
(assert (= temp2_104 #x0000000000000004))
(assert (= temp2_105 temp2_104))
(assert (= temp2_106 (select ARGNAME_stride_NAMEEND_VAL temp2_105)))
(assert (= temp2_107 #x0000000000000005))
(assert (= temp2_108 temp2_107))
(assert (= temp2_109 (select ARGNAME_stride_NAMEEND_VAL temp2_108)))
(assert (= temp2_110 #x0000000000000000))
(assert (= temp2_111 #x0000000000000000))
(assert (= temp2_112 temp2_111))
(assert (= temp2_113 (select ARGNAME_stride_NAMEEND_VAL temp2_112)))
(assert (= temp2_114 #x0000000000000000))
(assert (= temp2_115 #x0000000000000001))
(assert (= temp2_116 temp2_115))
(assert (= temp2_117 (select ARGNAME_stride_NAMEEND_VAL temp2_116)))
(assert (= temp2_118 #x0000000000000000))
(assert (= temp2_119 #x0000000000000002))
(assert (= temp2_120 temp2_119))
(assert (= temp2_121 (select ARGNAME_stride_NAMEEND_VAL temp2_120)))
(assert (= temp2_122 #x0000000000000000))
(assert (= temp2_123 #x0000000000000003))
(assert (= temp2_124 temp2_123))
(assert (= temp2_125 (select ARGNAME_stride_NAMEEND_VAL temp2_124)))
(assert (= temp2_126 #x0000000000000000))
(assert (= temp2_127 #x0000000000000004))
(assert (= temp2_128 temp2_127))
(assert (= temp2_129 (select ARGNAME_stride_NAMEEND_VAL temp2_128)))
(assert (= temp2_130 #x0000000000000000))
(assert (= temp2_131 #x0000000000000005))
(assert (= temp2_132 temp2_131))
(assert (= temp2_133 (select ARGNAME_stride_NAMEEND_VAL temp2_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp2_113 temp2_110)
             (bvsle temp2_117 temp2_114)
             (bvsle temp2_121 temp2_118)
             (bvsle temp2_125 temp2_122)
             (bvsle temp2_129 temp2_126)
             (bvsle temp2_133 temp2_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_134 #x0000000000000000))
(assert (= var1322807 temp2_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_135 #x0000000000000001))
(assert (= var1322819 temp2_135))
(assert (= temp2_136 #x0000000000000000))
(assert (= var1310898 temp2_136))
(assert (= temp2_137 #x0000000000000000))
(assert (= temp2_138 temp2_137))
(assert (= temp2_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_138)))
(assert (= temp2_140 #x0000000000000001))
(assert (= temp2_141 temp2_140))
(assert (= temp2_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_141)))
(assert (= temp2_143 #x0000000000000002))
(assert (= temp2_144 temp2_143))
(assert (= temp2_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_144)))
(assert (= temp2_146 #x0000000000000003))
(assert (= temp2_147 temp2_146))
(assert (= temp2_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_147)))
(assert (= temp2_149 #x0000000000000004))
(assert (= temp2_150 temp2_149))
(assert (= temp2_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_150)))
(assert (= temp2_152 #x0000000000000005))
(assert (= temp2_153 temp2_152))
(assert (= temp2_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_153)))
(assert (= temp2_156 var1310898))
(assert (= temp2_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_156)))
(assert (= temp2_155 temp2_157))
(assert (= var1322852
   (ite (bvslt temp2_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_158 #x0000000000000000))
(assert (= var1322852 temp2_158))
(assert (= temp2_159 #x0000000000000000))
(assert (= var1310898 temp2_159))
(assert (= temp2_161 var1310898))
(assert (= temp2_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_161)))
(assert (= temp2_160 temp2_162))
(assert (= var1322874 (bvsmod temp2_160 ARGNAME_groups_NAMEEND)))
(assert (= temp2_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp2_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_164 #x0000000000000001))
(assert (= var1322875 temp2_164))
(assert (= temp2_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp2_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_166 #x0000000000000001))
(assert (= var1322895 temp2_166))
(assert (= temp2_167 #x0000000000000001))
(assert (= var1311786 temp2_167))
(assert (= temp2_168 #x0000000000000000))
(assert (= temp2_169 temp2_168))
(assert (= temp2_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_169)))
(assert (= temp2_171 #x0000000000000001))
(assert (= temp2_172 temp2_171))
(assert (= temp2_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_172)))
(assert (= temp2_174 #x0000000000000002))
(assert (= temp2_175 temp2_174))
(assert (= temp2_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_175)))
(assert (= temp2_177 #x0000000000000003))
(assert (= temp2_178 temp2_177))
(assert (= temp2_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_178)))
(assert (= temp2_180 #x0000000000000004))
(assert (= temp2_181 temp2_180))
(assert (= temp2_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_181)))
(assert (= temp2_183 #x0000000000000005))
(assert (= temp2_184 temp2_183))
(assert (= temp2_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_184)))
(assert (= temp2_186 #x0000000000000000))
(assert (= temp2_187
   (ite (bvslt var1311786 temp2_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp2_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_187)))
(assert (= var1322903 temp2_188))
(assert (bvslt (ite (bvslt var1311786 temp2_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp2_189 #x0000000000000001))
(assert (= var1311786 temp2_189))
(assert (= temp2_191 var1311786))
(assert (= temp2_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_191)))
(assert (= temp2_190 temp2_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp2_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_193 #x0000000000000001))
(assert (= var1322908 temp2_193))
(assert (= temp2_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp2_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_195 #x0000000000000001))
(assert (= var1322975 temp2_195))
(assert (= temp2_196 #x0000000000000000))
(assert (= var1310898 temp2_196))
(assert (= temp2_197 #x0000000000000000))
(assert (= temp2_198 temp2_197))
(assert (= temp2_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp2_198)))
(assert (= temp2_200 #x0000000000000001))
(assert (= temp2_201 temp2_200))
(assert (= temp2_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp2_201)))
(assert (= temp2_203 #x0000000000000002))
(assert (= temp2_204 temp2_203))
(assert (= temp2_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp2_204)))
(assert (= temp2_206 #x0000000000000003))
(assert (= temp2_207 temp2_206))
(assert (= temp2_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp2_207)))
(assert (= temp2_209 #x0000000000000004))
(assert (= temp2_210 temp2_209))
(assert (= temp2_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp2_210)))
(assert (= temp2_212 #x0000000000000005))
(assert (= temp2_213 temp2_212))
(assert (= temp2_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp2_213)))
(assert (= temp2_215 #x0000000000000000))
(assert (= temp2_216
   (ite (bvslt var1310898 temp2_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp2_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp2_216)))
(assert (= var1322977 temp2_217))
(assert (bvslt (ite (bvslt var1310898 temp2_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp2_218 #x0000000000000000))
(assert (= var1310898 temp2_218))
(assert (= temp2_220 var1310898))
(assert (= temp2_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp2_220)))
(assert (= temp2_219 temp2_221))
(assert (= var1322980
   (ite (= var1322977 temp2_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_222 #x0000000000000001))
(assert (= var1322980 temp2_222))
(assert (= temp2_223 #x0000000000000002))
(assert (= var1848169 temp2_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp2_225 #x0000000000000001))
(assert (= var1323065 temp2_225))
(assert (= temp2_226 #x0000000000000001))
(assert (= var3486735 temp2_226))
(assert (= temp2_227 #x0000000000000001))
(assert (= var3814415 temp2_227))
(assert (= temp2_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp2_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_229 #x0000000000000001))
(assert (= var79986 temp2_229))
(assert (= temp2_230 #x0000000000000001))
(assert (= var80116 temp2_230))
(assert (= var4796905 var80116))
(assert (= temp2_231 #x0000000000000000))
(assert (= var4784306 temp2_231))
(assert (= temp2_232 #x0000000000000000))
(assert (= temp2_233
   (ite (bvslt var4784306 temp2_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp2_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_233)))
(assert (= var4796924 temp2_234))
(assert (bvslt (ite (bvslt var4784306 temp2_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp2_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp2_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_236 #x0000000000000001))
(assert (= var4796925 temp2_236))
(assert (= temp2_237 #x0000000000000000))
(assert (= var4996927 temp2_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp2_238 #x0000000000000002))
(assert (= var5125763 temp2_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_239 #x0000000000000000))
(assert (= var5191324 temp2_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp2_240 #x0000000000000001))
(assert (= var79986 temp2_240))
(model-add temp2_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp2_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp2_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






