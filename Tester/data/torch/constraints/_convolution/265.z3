(declare-fun temp352_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp352_2 () (_ BitVec 64))
(declare-fun temp352_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp352_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp352_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp352_6 () (_ BitVec 64))
(declare-fun temp352_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp352_8 () (_ BitVec 64))
(declare-fun temp352_9 () (_ BitVec 64))
(declare-fun temp352_10 () (_ BitVec 64))
(declare-fun temp352_11 () (_ BitVec 64))
(declare-fun temp352_12 () (_ BitVec 64))
(declare-fun temp352_13 () (_ BitVec 64))
(declare-fun temp352_14 () (_ BitVec 64))
(declare-fun temp352_15 () (_ BitVec 64))
(declare-fun temp352_16 () (_ BitVec 64))
(declare-fun temp352_17 () (_ BitVec 64))
(declare-fun temp352_18 () (_ BitVec 64))
(declare-fun temp352_19 () (_ BitVec 64))
(declare-fun temp352_20 () (_ BitVec 64))
(declare-fun temp352_21 () (_ BitVec 64))
(declare-fun temp352_22 () (_ BitVec 64))
(declare-fun temp352_23 () (_ BitVec 64))
(declare-fun temp352_24 () (_ BitVec 64))
(declare-fun temp352_25 () (_ BitVec 64))
(declare-fun temp352_26 () (_ BitVec 64))
(declare-fun temp352_27 () (_ BitVec 64))
(declare-fun temp352_28 () (_ BitVec 64))
(declare-fun temp352_29 () (_ BitVec 64))
(declare-fun temp352_30 () (_ BitVec 64))
(declare-fun temp352_31 () (_ BitVec 64))
(declare-fun temp352_32 () (_ BitVec 64))
(declare-fun temp352_33 () (_ BitVec 64))
(declare-fun temp352_34 () (_ BitVec 64))
(declare-fun temp352_35 () (_ BitVec 64))
(declare-fun temp352_36 () (_ BitVec 64))
(declare-fun temp352_37 () (_ BitVec 64))
(declare-fun temp352_38 () (_ BitVec 64))
(declare-fun temp352_39 () (_ BitVec 64))
(declare-fun temp352_40 () (_ BitVec 64))
(declare-fun temp352_41 () (_ BitVec 64))
(declare-fun temp352_42 () (_ BitVec 64))
(declare-fun temp352_43 () (_ BitVec 64))
(declare-fun temp352_44 () (_ BitVec 64))
(declare-fun temp352_45 () (_ BitVec 64))
(declare-fun temp352_46 () (_ BitVec 64))
(declare-fun temp352_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp352_48 () (_ BitVec 64))
(declare-fun temp352_49 () (_ BitVec 64))
(declare-fun temp352_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp352_51 () (_ BitVec 64))
(declare-fun temp352_52 () (_ BitVec 64))
(declare-fun temp352_53 () (_ BitVec 64))
(declare-fun temp352_54 () (_ BitVec 64))
(declare-fun temp352_55 () (_ BitVec 64))
(declare-fun temp352_56 () (_ BitVec 64))
(declare-fun temp352_57 () (_ BitVec 64))
(declare-fun temp352_58 () (_ BitVec 64))
(declare-fun temp352_59 () (_ BitVec 64))
(declare-fun temp352_60 () (_ BitVec 64))
(declare-fun temp352_61 () (_ BitVec 64))
(declare-fun temp352_62 () (_ BitVec 64))
(declare-fun temp352_63 () (_ BitVec 64))
(declare-fun temp352_64 () (_ BitVec 64))
(declare-fun temp352_65 () (_ BitVec 64))
(declare-fun temp352_66 () (_ BitVec 64))
(declare-fun temp352_67 () (_ BitVec 64))
(declare-fun temp352_68 () (_ BitVec 64))
(declare-fun temp352_69 () (_ BitVec 64))
(declare-fun temp352_70 () (_ BitVec 64))
(declare-fun temp352_71 () (_ BitVec 64))
(declare-fun temp352_72 () (_ BitVec 64))
(declare-fun temp352_73 () (_ BitVec 64))
(declare-fun temp352_74 () (_ BitVec 64))
(declare-fun temp352_75 () (_ BitVec 64))
(declare-fun temp352_76 () (_ BitVec 64))
(declare-fun temp352_77 () (_ BitVec 64))
(declare-fun temp352_78 () (_ BitVec 64))
(declare-fun temp352_79 () (_ BitVec 64))
(declare-fun temp352_80 () (_ BitVec 64))
(declare-fun temp352_81 () (_ BitVec 64))
(declare-fun temp352_82 () (_ BitVec 64))
(declare-fun temp352_83 () (_ BitVec 64))
(declare-fun temp352_84 () (_ BitVec 64))
(declare-fun temp352_85 () (_ BitVec 64))
(declare-fun temp352_86 () (_ BitVec 64))
(declare-fun temp352_87 () (_ BitVec 64))
(declare-fun temp352_88 () (_ BitVec 64))
(declare-fun temp352_89 () (_ BitVec 64))
(declare-fun temp352_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp352_91 () (_ BitVec 64))
(declare-fun temp352_92 () (_ BitVec 64))
(declare-fun temp352_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp352_94 () (_ BitVec 64))
(declare-fun temp352_95 () (_ BitVec 64))
(declare-fun temp352_96 () (_ BitVec 64))
(declare-fun temp352_97 () (_ BitVec 64))
(declare-fun temp352_98 () (_ BitVec 64))
(declare-fun temp352_99 () (_ BitVec 64))
(declare-fun temp352_100 () (_ BitVec 64))
(declare-fun temp352_101 () (_ BitVec 64))
(declare-fun temp352_102 () (_ BitVec 64))
(declare-fun temp352_103 () (_ BitVec 64))
(declare-fun temp352_104 () (_ BitVec 64))
(declare-fun temp352_105 () (_ BitVec 64))
(declare-fun temp352_106 () (_ BitVec 64))
(declare-fun temp352_107 () (_ BitVec 64))
(declare-fun temp352_108 () (_ BitVec 64))
(declare-fun temp352_109 () (_ BitVec 64))
(declare-fun temp352_110 () (_ BitVec 64))
(declare-fun temp352_111 () (_ BitVec 64))
(declare-fun temp352_112 () (_ BitVec 64))
(declare-fun temp352_113 () (_ BitVec 64))
(declare-fun temp352_114 () (_ BitVec 64))
(declare-fun temp352_115 () (_ BitVec 64))
(declare-fun temp352_116 () (_ BitVec 64))
(declare-fun temp352_117 () (_ BitVec 64))
(declare-fun temp352_118 () (_ BitVec 64))
(declare-fun temp352_119 () (_ BitVec 64))
(declare-fun temp352_120 () (_ BitVec 64))
(declare-fun temp352_121 () (_ BitVec 64))
(declare-fun temp352_122 () (_ BitVec 64))
(declare-fun temp352_123 () (_ BitVec 64))
(declare-fun temp352_124 () (_ BitVec 64))
(declare-fun temp352_125 () (_ BitVec 64))
(declare-fun temp352_126 () (_ BitVec 64))
(declare-fun temp352_127 () (_ BitVec 64))
(declare-fun temp352_128 () (_ BitVec 64))
(declare-fun temp352_129 () (_ BitVec 64))
(declare-fun temp352_130 () (_ BitVec 64))
(declare-fun temp352_131 () (_ BitVec 64))
(declare-fun temp352_132 () (_ BitVec 64))
(declare-fun temp352_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp352_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp352_135 () (_ BitVec 64))
(declare-fun temp352_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp352_137 () (_ BitVec 64))
(declare-fun temp352_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp352_139 () (_ BitVec 64))
(declare-fun temp352_140 () (_ BitVec 64))
(declare-fun temp352_141 () (_ BitVec 64))
(declare-fun temp352_142 () (_ BitVec 64))
(declare-fun temp352_143 () (_ BitVec 64))
(declare-fun temp352_144 () (_ BitVec 64))
(declare-fun temp352_145 () (_ BitVec 64))
(declare-fun temp352_146 () (_ BitVec 64))
(declare-fun temp352_147 () (_ BitVec 64))
(declare-fun temp352_148 () (_ BitVec 64))
(declare-fun temp352_149 () (_ BitVec 64))
(declare-fun temp352_150 () (_ BitVec 64))
(declare-fun temp352_151 () (_ BitVec 64))
(declare-fun temp352_152 () (_ BitVec 64))
(declare-fun temp352_153 () (_ BitVec 64))
(declare-fun temp352_154 () (_ BitVec 64))
(declare-fun temp352_156 () (_ BitVec 64))
(declare-fun temp352_157 () (_ BitVec 64))
(declare-fun temp352_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp352_158 () (_ BitVec 64))
(declare-fun temp352_159 () (_ BitVec 64))
(declare-fun temp352_161 () (_ BitVec 64))
(declare-fun temp352_162 () (_ BitVec 64))
(declare-fun temp352_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp352_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp352_164 () (_ BitVec 64))
(declare-fun temp352_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp352_166 () (_ BitVec 64))
(declare-fun temp352_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp352_168 () (_ BitVec 64))
(declare-fun temp352_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp352_170 () (_ BitVec 64))
(declare-fun temp352_171 () (_ BitVec 64))
(declare-fun temp352_172 () (_ BitVec 64))
(declare-fun temp352_173 () (_ BitVec 64))
(declare-fun temp352_174 () (_ BitVec 64))
(declare-fun temp352_175 () (_ BitVec 64))
(declare-fun temp352_176 () (_ BitVec 64))
(declare-fun temp352_177 () (_ BitVec 64))
(declare-fun temp352_178 () (_ BitVec 64))
(declare-fun temp352_179 () (_ BitVec 64))
(declare-fun temp352_180 () (_ BitVec 64))
(declare-fun temp352_181 () (_ BitVec 64))
(declare-fun temp352_182 () (_ BitVec 64))
(declare-fun temp352_183 () (_ BitVec 64))
(declare-fun temp352_184 () (_ BitVec 64))
(declare-fun temp352_185 () (_ BitVec 64))
(declare-fun temp352_186 () (_ BitVec 64))
(declare-fun temp352_187 () (_ BitVec 64))
(declare-fun temp352_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp352_189 () (_ BitVec 64))
(declare-fun temp352_191 () (_ BitVec 64))
(declare-fun temp352_192 () (_ BitVec 64))
(declare-fun temp352_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp352_193 () (_ BitVec 64))
(declare-fun temp352_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp352_195 () (_ BitVec 64))
(declare-fun temp352_196 () (_ BitVec 64))
(declare-fun temp352_197 () (_ BitVec 64))
(declare-fun temp352_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp352_199 () (_ BitVec 64))
(declare-fun temp352_200 () (_ BitVec 64))
(declare-fun temp352_201 () (_ BitVec 64))
(declare-fun temp352_202 () (_ BitVec 64))
(declare-fun temp352_203 () (_ BitVec 64))
(declare-fun temp352_204 () (_ BitVec 64))
(declare-fun temp352_205 () (_ BitVec 64))
(declare-fun temp352_206 () (_ BitVec 64))
(declare-fun temp352_207 () (_ BitVec 64))
(declare-fun temp352_208 () (_ BitVec 64))
(declare-fun temp352_209 () (_ BitVec 64))
(declare-fun temp352_210 () (_ BitVec 64))
(declare-fun temp352_211 () (_ BitVec 64))
(declare-fun temp352_212 () (_ BitVec 64))
(declare-fun temp352_213 () (_ BitVec 64))
(declare-fun temp352_214 () (_ BitVec 64))
(declare-fun temp352_215 () (_ BitVec 64))
(declare-fun temp352_216 () (_ BitVec 64))
(declare-fun temp352_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp352_218 () (_ BitVec 64))
(declare-fun temp352_220 () (_ BitVec 64))
(declare-fun temp352_221 () (_ BitVec 64))
(declare-fun temp352_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp352_222 () (_ BitVec 64))
(declare-fun temp352_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp352_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp352_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp352_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp352_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp352_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp352_229 () (_ BitVec 64))
(declare-fun temp352_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp352_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp352_232 () (_ BitVec 64))
(declare-fun temp352_233 () (_ BitVec 64))
(declare-fun temp352_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp352_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp352_236 () (_ BitVec 64))
(declare-fun temp352_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp352_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp352_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun temp352_240 () (_ BitVec 64))
(declare-fun temp352_241 () (_ BitVec 64))
(declare-fun var8139540 () (_ BitVec 64))
(declare-fun var8139507 () (_ BitVec 64))
(declare-fun var8008071 () (_ BitVec 64))
(declare-fun var8008067 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp352_242 () (_ BitVec 64))
(assert (= temp352_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp352_1)))
(assert (= temp352_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp352_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_3 #x0000000000000000))
(assert (= var79869 temp352_3))
(assert (= temp352_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp352_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_5 #x0000000000000000))
(assert (= var79914 temp352_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp352_6 #x0000000000000000))
(assert (= temp352_7 temp352_6))
(assert (= temp352_8 (select ARGNAME_padding_NAMEEND_VAL temp352_7)))
(assert (= temp352_9 #x0000000000000001))
(assert (= temp352_10 temp352_9))
(assert (= temp352_11 (select ARGNAME_padding_NAMEEND_VAL temp352_10)))
(assert (= temp352_12 #x0000000000000002))
(assert (= temp352_13 temp352_12))
(assert (= temp352_14 (select ARGNAME_padding_NAMEEND_VAL temp352_13)))
(assert (= temp352_15 #x0000000000000003))
(assert (= temp352_16 temp352_15))
(assert (= temp352_17 (select ARGNAME_padding_NAMEEND_VAL temp352_16)))
(assert (= temp352_18 #x0000000000000004))
(assert (= temp352_19 temp352_18))
(assert (= temp352_20 (select ARGNAME_padding_NAMEEND_VAL temp352_19)))
(assert (= temp352_21 #x0000000000000005))
(assert (= temp352_22 temp352_21))
(assert (= temp352_23 (select ARGNAME_padding_NAMEEND_VAL temp352_22)))
(assert (= temp352_24 #x0000000000000000))
(assert (= temp352_25 #x0000000000000000))
(assert (= temp352_26 temp352_25))
(assert (= temp352_27 (select ARGNAME_padding_NAMEEND_VAL temp352_26)))
(assert (= temp352_28 #x0000000000000000))
(assert (= temp352_29 #x0000000000000001))
(assert (= temp352_30 temp352_29))
(assert (= temp352_31 (select ARGNAME_padding_NAMEEND_VAL temp352_30)))
(assert (= temp352_32 #x0000000000000000))
(assert (= temp352_33 #x0000000000000002))
(assert (= temp352_34 temp352_33))
(assert (= temp352_35 (select ARGNAME_padding_NAMEEND_VAL temp352_34)))
(assert (= temp352_36 #x0000000000000000))
(assert (= temp352_37 #x0000000000000003))
(assert (= temp352_38 temp352_37))
(assert (= temp352_39 (select ARGNAME_padding_NAMEEND_VAL temp352_38)))
(assert (= temp352_40 #x0000000000000000))
(assert (= temp352_41 #x0000000000000004))
(assert (= temp352_42 temp352_41))
(assert (= temp352_43 (select ARGNAME_padding_NAMEEND_VAL temp352_42)))
(assert (= temp352_44 #x0000000000000000))
(assert (= temp352_45 #x0000000000000005))
(assert (= temp352_46 temp352_45))
(assert (= temp352_47 (select ARGNAME_padding_NAMEEND_VAL temp352_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp352_27 temp352_24)
             (bvslt temp352_31 temp352_28)
             (bvslt temp352_35 temp352_32)
             (bvslt temp352_39 temp352_36)
             (bvslt temp352_43 temp352_40)
             (bvslt temp352_47 temp352_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_48 #x0000000000000000))
(assert (= var1322786 temp352_48))
(assert (= temp352_49 #x0000000000000000))
(assert (= temp352_50 temp352_49))
(assert (= temp352_51 (select ARGNAME_output_padding_NAMEEND_VAL temp352_50)))
(assert (= temp352_52 #x0000000000000001))
(assert (= temp352_53 temp352_52))
(assert (= temp352_54 (select ARGNAME_output_padding_NAMEEND_VAL temp352_53)))
(assert (= temp352_55 #x0000000000000002))
(assert (= temp352_56 temp352_55))
(assert (= temp352_57 (select ARGNAME_output_padding_NAMEEND_VAL temp352_56)))
(assert (= temp352_58 #x0000000000000003))
(assert (= temp352_59 temp352_58))
(assert (= temp352_60 (select ARGNAME_output_padding_NAMEEND_VAL temp352_59)))
(assert (= temp352_61 #x0000000000000004))
(assert (= temp352_62 temp352_61))
(assert (= temp352_63 (select ARGNAME_output_padding_NAMEEND_VAL temp352_62)))
(assert (= temp352_64 #x0000000000000005))
(assert (= temp352_65 temp352_64))
(assert (= temp352_66 (select ARGNAME_output_padding_NAMEEND_VAL temp352_65)))
(assert (= temp352_67 #x0000000000000000))
(assert (= temp352_68 #x0000000000000000))
(assert (= temp352_69 temp352_68))
(assert (= temp352_70 (select ARGNAME_output_padding_NAMEEND_VAL temp352_69)))
(assert (= temp352_71 #x0000000000000000))
(assert (= temp352_72 #x0000000000000001))
(assert (= temp352_73 temp352_72))
(assert (= temp352_74 (select ARGNAME_output_padding_NAMEEND_VAL temp352_73)))
(assert (= temp352_75 #x0000000000000000))
(assert (= temp352_76 #x0000000000000002))
(assert (= temp352_77 temp352_76))
(assert (= temp352_78 (select ARGNAME_output_padding_NAMEEND_VAL temp352_77)))
(assert (= temp352_79 #x0000000000000000))
(assert (= temp352_80 #x0000000000000003))
(assert (= temp352_81 temp352_80))
(assert (= temp352_82 (select ARGNAME_output_padding_NAMEEND_VAL temp352_81)))
(assert (= temp352_83 #x0000000000000000))
(assert (= temp352_84 #x0000000000000004))
(assert (= temp352_85 temp352_84))
(assert (= temp352_86 (select ARGNAME_output_padding_NAMEEND_VAL temp352_85)))
(assert (= temp352_87 #x0000000000000000))
(assert (= temp352_88 #x0000000000000005))
(assert (= temp352_89 temp352_88))
(assert (= temp352_90 (select ARGNAME_output_padding_NAMEEND_VAL temp352_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp352_70 temp352_67)
             (bvslt temp352_74 temp352_71)
             (bvslt temp352_78 temp352_75)
             (bvslt temp352_82 temp352_79)
             (bvslt temp352_86 temp352_83)
             (bvslt temp352_90 temp352_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_91 #x0000000000000000))
(assert (= var1322797 temp352_91))
(assert (= temp352_92 #x0000000000000000))
(assert (= temp352_93 temp352_92))
(assert (= temp352_94 (select ARGNAME_stride_NAMEEND_VAL temp352_93)))
(assert (= temp352_95 #x0000000000000001))
(assert (= temp352_96 temp352_95))
(assert (= temp352_97 (select ARGNAME_stride_NAMEEND_VAL temp352_96)))
(assert (= temp352_98 #x0000000000000002))
(assert (= temp352_99 temp352_98))
(assert (= temp352_100 (select ARGNAME_stride_NAMEEND_VAL temp352_99)))
(assert (= temp352_101 #x0000000000000003))
(assert (= temp352_102 temp352_101))
(assert (= temp352_103 (select ARGNAME_stride_NAMEEND_VAL temp352_102)))
(assert (= temp352_104 #x0000000000000004))
(assert (= temp352_105 temp352_104))
(assert (= temp352_106 (select ARGNAME_stride_NAMEEND_VAL temp352_105)))
(assert (= temp352_107 #x0000000000000005))
(assert (= temp352_108 temp352_107))
(assert (= temp352_109 (select ARGNAME_stride_NAMEEND_VAL temp352_108)))
(assert (= temp352_110 #x0000000000000000))
(assert (= temp352_111 #x0000000000000000))
(assert (= temp352_112 temp352_111))
(assert (= temp352_113 (select ARGNAME_stride_NAMEEND_VAL temp352_112)))
(assert (= temp352_114 #x0000000000000000))
(assert (= temp352_115 #x0000000000000001))
(assert (= temp352_116 temp352_115))
(assert (= temp352_117 (select ARGNAME_stride_NAMEEND_VAL temp352_116)))
(assert (= temp352_118 #x0000000000000000))
(assert (= temp352_119 #x0000000000000002))
(assert (= temp352_120 temp352_119))
(assert (= temp352_121 (select ARGNAME_stride_NAMEEND_VAL temp352_120)))
(assert (= temp352_122 #x0000000000000000))
(assert (= temp352_123 #x0000000000000003))
(assert (= temp352_124 temp352_123))
(assert (= temp352_125 (select ARGNAME_stride_NAMEEND_VAL temp352_124)))
(assert (= temp352_126 #x0000000000000000))
(assert (= temp352_127 #x0000000000000004))
(assert (= temp352_128 temp352_127))
(assert (= temp352_129 (select ARGNAME_stride_NAMEEND_VAL temp352_128)))
(assert (= temp352_130 #x0000000000000000))
(assert (= temp352_131 #x0000000000000005))
(assert (= temp352_132 temp352_131))
(assert (= temp352_133 (select ARGNAME_stride_NAMEEND_VAL temp352_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp352_113 temp352_110)
             (bvsle temp352_117 temp352_114)
             (bvsle temp352_121 temp352_118)
             (bvsle temp352_125 temp352_122)
             (bvsle temp352_129 temp352_126)
             (bvsle temp352_133 temp352_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_134 #x0000000000000000))
(assert (= var1322807 temp352_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_135 #x0000000000000001))
(assert (= var1322819 temp352_135))
(assert (= temp352_136 #x0000000000000000))
(assert (= var1310898 temp352_136))
(assert (= temp352_137 #x0000000000000000))
(assert (= temp352_138 temp352_137))
(assert (= temp352_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_138)))
(assert (= temp352_140 #x0000000000000001))
(assert (= temp352_141 temp352_140))
(assert (= temp352_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_141)))
(assert (= temp352_143 #x0000000000000002))
(assert (= temp352_144 temp352_143))
(assert (= temp352_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_144)))
(assert (= temp352_146 #x0000000000000003))
(assert (= temp352_147 temp352_146))
(assert (= temp352_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_147)))
(assert (= temp352_149 #x0000000000000004))
(assert (= temp352_150 temp352_149))
(assert (= temp352_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_150)))
(assert (= temp352_152 #x0000000000000005))
(assert (= temp352_153 temp352_152))
(assert (= temp352_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_153)))
(assert (= temp352_156 var1310898))
(assert (= temp352_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_156)))
(assert (= temp352_155 temp352_157))
(assert (= var1322852
   (ite (bvslt temp352_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_158 #x0000000000000000))
(assert (= var1322852 temp352_158))
(assert (= temp352_159 #x0000000000000000))
(assert (= var1310898 temp352_159))
(assert (= temp352_161 var1310898))
(assert (= temp352_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_161)))
(assert (= temp352_160 temp352_162))
(assert (= var1322874 (bvsmod temp352_160 ARGNAME_groups_NAMEEND)))
(assert (= temp352_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp352_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp352_164 #x0000000000000001))
(assert (= var1322875 temp352_164))
(assert (= temp352_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp352_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_166 #x0000000000000001))
(assert (= var1322895 temp352_166))
(assert (= temp352_167 #x0000000000000001))
(assert (= var1311786 temp352_167))
(assert (= temp352_168 #x0000000000000000))
(assert (= temp352_169 temp352_168))
(assert (= temp352_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp352_169)))
(assert (= temp352_171 #x0000000000000001))
(assert (= temp352_172 temp352_171))
(assert (= temp352_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp352_172)))
(assert (= temp352_174 #x0000000000000002))
(assert (= temp352_175 temp352_174))
(assert (= temp352_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp352_175)))
(assert (= temp352_177 #x0000000000000003))
(assert (= temp352_178 temp352_177))
(assert (= temp352_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp352_178)))
(assert (= temp352_180 #x0000000000000004))
(assert (= temp352_181 temp352_180))
(assert (= temp352_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp352_181)))
(assert (= temp352_183 #x0000000000000005))
(assert (= temp352_184 temp352_183))
(assert (= temp352_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp352_184)))
(assert (= temp352_186 #x0000000000000000))
(assert (= temp352_187
   (ite (bvslt var1311786 temp352_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp352_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp352_187)))
(assert (= var1322903 temp352_188))
(assert (bvslt (ite (bvslt var1311786 temp352_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp352_189 #x0000000000000001))
(assert (= var1311786 temp352_189))
(assert (= temp352_191 var1311786))
(assert (= temp352_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_191)))
(assert (= temp352_190 temp352_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp352_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp352_193 #x0000000000000001))
(assert (= var1322908 temp352_193))
(assert (= temp352_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp352_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_195 #x0000000000000001))
(assert (= var1322975 temp352_195))
(assert (= temp352_196 #x0000000000000000))
(assert (= var1310898 temp352_196))
(assert (= temp352_197 #x0000000000000000))
(assert (= temp352_198 temp352_197))
(assert (= temp352_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp352_198)))
(assert (= temp352_200 #x0000000000000001))
(assert (= temp352_201 temp352_200))
(assert (= temp352_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp352_201)))
(assert (= temp352_203 #x0000000000000002))
(assert (= temp352_204 temp352_203))
(assert (= temp352_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp352_204)))
(assert (= temp352_206 #x0000000000000003))
(assert (= temp352_207 temp352_206))
(assert (= temp352_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp352_207)))
(assert (= temp352_209 #x0000000000000004))
(assert (= temp352_210 temp352_209))
(assert (= temp352_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp352_210)))
(assert (= temp352_212 #x0000000000000005))
(assert (= temp352_213 temp352_212))
(assert (= temp352_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp352_213)))
(assert (= temp352_215 #x0000000000000000))
(assert (= temp352_216
   (ite (bvslt var1310898 temp352_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp352_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp352_216)))
(assert (= var1322977 temp352_217))
(assert (bvslt (ite (bvslt var1310898 temp352_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp352_218 #x0000000000000000))
(assert (= var1310898 temp352_218))
(assert (= temp352_220 var1310898))
(assert (= temp352_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp352_220)))
(assert (= temp352_219 temp352_221))
(assert (= var1322980
   (ite (= var1322977 temp352_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp352_222 #x0000000000000001))
(assert (= var1322980 temp352_222))
(assert (= temp352_223 #x0000000000000002))
(assert (= var1848169 temp352_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp352_225 #x0000000000000001))
(assert (= var1323065 temp352_225))
(assert (= temp352_226 #x0000000000000001))
(assert (= var3486735 temp352_226))
(assert (= temp352_227 #x0000000000000001))
(assert (= var3814415 temp352_227))
(assert (= temp352_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp352_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_229 #x0000000000000001))
(assert (= var79986 temp352_229))
(assert (= temp352_230 #x0000000000000001))
(assert (= var80116 temp352_230))
(assert (= var4796905 var80116))
(assert (= temp352_231 #x0000000000000000))
(assert (= var4784306 temp352_231))
(assert (= temp352_232 #x0000000000000000))
(assert (= temp352_233
   (ite (bvslt var4784306 temp352_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp352_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp352_233)))
(assert (= var4796924 temp352_234))
(assert (bvslt (ite (bvslt var4784306 temp352_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp352_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp352_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp352_236 #x0000000000000001))
(assert (= var4796925 temp352_236))
(assert (= temp352_237 #x0000000000000000))
(assert (= var4996927 temp352_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp352_238 #x0000000000000002))
(assert (= var5125763 temp352_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_239 #x0000000000000000))
(assert (= var5191324 temp352_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6238608 var80129))
(assert (= var6500752 var80129))
(assert (= temp352_240 #x0000000000000001))
(assert (= var79986 temp352_240))
(assert (= temp352_241 #x0000000000000000))
(assert (= var8139540 temp352_241))
(assert (= var8139507 var8139540))
(assert (= var8008071 var8139507))
(assert (= var8008067 var8008071))
(assert (= var81597 var8008067))
(assert (= temp352_242 #x0000000000000000))
(assert (= var81597 temp352_242))
(model-add temp352_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp352_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp352_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






