(declare-fun temp685_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp685_2 () (_ BitVec 64))
(declare-fun temp685_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp685_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp685_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp685_6 () (_ BitVec 64))
(declare-fun temp685_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp685_8 () (_ BitVec 64))
(declare-fun temp685_9 () (_ BitVec 64))
(declare-fun temp685_10 () (_ BitVec 64))
(declare-fun temp685_11 () (_ BitVec 64))
(declare-fun temp685_12 () (_ BitVec 64))
(declare-fun temp685_13 () (_ BitVec 64))
(declare-fun temp685_14 () (_ BitVec 64))
(declare-fun temp685_15 () (_ BitVec 64))
(declare-fun temp685_16 () (_ BitVec 64))
(declare-fun temp685_17 () (_ BitVec 64))
(declare-fun temp685_18 () (_ BitVec 64))
(declare-fun temp685_19 () (_ BitVec 64))
(declare-fun temp685_20 () (_ BitVec 64))
(declare-fun temp685_21 () (_ BitVec 64))
(declare-fun temp685_22 () (_ BitVec 64))
(declare-fun temp685_23 () (_ BitVec 64))
(declare-fun temp685_24 () (_ BitVec 64))
(declare-fun temp685_25 () (_ BitVec 64))
(declare-fun temp685_26 () (_ BitVec 64))
(declare-fun temp685_27 () (_ BitVec 64))
(declare-fun temp685_28 () (_ BitVec 64))
(declare-fun temp685_29 () (_ BitVec 64))
(declare-fun temp685_30 () (_ BitVec 64))
(declare-fun temp685_31 () (_ BitVec 64))
(declare-fun temp685_32 () (_ BitVec 64))
(declare-fun temp685_33 () (_ BitVec 64))
(declare-fun temp685_34 () (_ BitVec 64))
(declare-fun temp685_35 () (_ BitVec 64))
(declare-fun temp685_36 () (_ BitVec 64))
(declare-fun temp685_37 () (_ BitVec 64))
(declare-fun temp685_38 () (_ BitVec 64))
(declare-fun temp685_39 () (_ BitVec 64))
(declare-fun temp685_40 () (_ BitVec 64))
(declare-fun temp685_41 () (_ BitVec 64))
(declare-fun temp685_42 () (_ BitVec 64))
(declare-fun temp685_43 () (_ BitVec 64))
(declare-fun temp685_44 () (_ BitVec 64))
(declare-fun temp685_45 () (_ BitVec 64))
(declare-fun temp685_46 () (_ BitVec 64))
(declare-fun temp685_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp685_48 () (_ BitVec 64))
(declare-fun temp685_49 () (_ BitVec 64))
(declare-fun temp685_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp685_51 () (_ BitVec 64))
(declare-fun temp685_52 () (_ BitVec 64))
(declare-fun temp685_53 () (_ BitVec 64))
(declare-fun temp685_54 () (_ BitVec 64))
(declare-fun temp685_55 () (_ BitVec 64))
(declare-fun temp685_56 () (_ BitVec 64))
(declare-fun temp685_57 () (_ BitVec 64))
(declare-fun temp685_58 () (_ BitVec 64))
(declare-fun temp685_59 () (_ BitVec 64))
(declare-fun temp685_60 () (_ BitVec 64))
(declare-fun temp685_61 () (_ BitVec 64))
(declare-fun temp685_62 () (_ BitVec 64))
(declare-fun temp685_63 () (_ BitVec 64))
(declare-fun temp685_64 () (_ BitVec 64))
(declare-fun temp685_65 () (_ BitVec 64))
(declare-fun temp685_66 () (_ BitVec 64))
(declare-fun temp685_67 () (_ BitVec 64))
(declare-fun temp685_68 () (_ BitVec 64))
(declare-fun temp685_69 () (_ BitVec 64))
(declare-fun temp685_70 () (_ BitVec 64))
(declare-fun temp685_71 () (_ BitVec 64))
(declare-fun temp685_72 () (_ BitVec 64))
(declare-fun temp685_73 () (_ BitVec 64))
(declare-fun temp685_74 () (_ BitVec 64))
(declare-fun temp685_75 () (_ BitVec 64))
(declare-fun temp685_76 () (_ BitVec 64))
(declare-fun temp685_77 () (_ BitVec 64))
(declare-fun temp685_78 () (_ BitVec 64))
(declare-fun temp685_79 () (_ BitVec 64))
(declare-fun temp685_80 () (_ BitVec 64))
(declare-fun temp685_81 () (_ BitVec 64))
(declare-fun temp685_82 () (_ BitVec 64))
(declare-fun temp685_83 () (_ BitVec 64))
(declare-fun temp685_84 () (_ BitVec 64))
(declare-fun temp685_85 () (_ BitVec 64))
(declare-fun temp685_86 () (_ BitVec 64))
(declare-fun temp685_87 () (_ BitVec 64))
(declare-fun temp685_88 () (_ BitVec 64))
(declare-fun temp685_89 () (_ BitVec 64))
(declare-fun temp685_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp685_91 () (_ BitVec 64))
(declare-fun temp685_92 () (_ BitVec 64))
(declare-fun temp685_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp685_94 () (_ BitVec 64))
(declare-fun temp685_95 () (_ BitVec 64))
(declare-fun temp685_96 () (_ BitVec 64))
(declare-fun temp685_97 () (_ BitVec 64))
(declare-fun temp685_98 () (_ BitVec 64))
(declare-fun temp685_99 () (_ BitVec 64))
(declare-fun temp685_100 () (_ BitVec 64))
(declare-fun temp685_101 () (_ BitVec 64))
(declare-fun temp685_102 () (_ BitVec 64))
(declare-fun temp685_103 () (_ BitVec 64))
(declare-fun temp685_104 () (_ BitVec 64))
(declare-fun temp685_105 () (_ BitVec 64))
(declare-fun temp685_106 () (_ BitVec 64))
(declare-fun temp685_107 () (_ BitVec 64))
(declare-fun temp685_108 () (_ BitVec 64))
(declare-fun temp685_109 () (_ BitVec 64))
(declare-fun temp685_110 () (_ BitVec 64))
(declare-fun temp685_111 () (_ BitVec 64))
(declare-fun temp685_112 () (_ BitVec 64))
(declare-fun temp685_113 () (_ BitVec 64))
(declare-fun temp685_114 () (_ BitVec 64))
(declare-fun temp685_115 () (_ BitVec 64))
(declare-fun temp685_116 () (_ BitVec 64))
(declare-fun temp685_117 () (_ BitVec 64))
(declare-fun temp685_118 () (_ BitVec 64))
(declare-fun temp685_119 () (_ BitVec 64))
(declare-fun temp685_120 () (_ BitVec 64))
(declare-fun temp685_121 () (_ BitVec 64))
(declare-fun temp685_122 () (_ BitVec 64))
(declare-fun temp685_123 () (_ BitVec 64))
(declare-fun temp685_124 () (_ BitVec 64))
(declare-fun temp685_125 () (_ BitVec 64))
(declare-fun temp685_126 () (_ BitVec 64))
(declare-fun temp685_127 () (_ BitVec 64))
(declare-fun temp685_128 () (_ BitVec 64))
(declare-fun temp685_129 () (_ BitVec 64))
(declare-fun temp685_130 () (_ BitVec 64))
(declare-fun temp685_131 () (_ BitVec 64))
(declare-fun temp685_132 () (_ BitVec 64))
(declare-fun temp685_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp685_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp685_135 () (_ BitVec 64))
(declare-fun temp685_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp685_137 () (_ BitVec 64))
(declare-fun temp685_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp685_139 () (_ BitVec 64))
(declare-fun temp685_140 () (_ BitVec 64))
(declare-fun temp685_141 () (_ BitVec 64))
(declare-fun temp685_142 () (_ BitVec 64))
(declare-fun temp685_143 () (_ BitVec 64))
(declare-fun temp685_144 () (_ BitVec 64))
(declare-fun temp685_145 () (_ BitVec 64))
(declare-fun temp685_146 () (_ BitVec 64))
(declare-fun temp685_147 () (_ BitVec 64))
(declare-fun temp685_148 () (_ BitVec 64))
(declare-fun temp685_149 () (_ BitVec 64))
(declare-fun temp685_150 () (_ BitVec 64))
(declare-fun temp685_151 () (_ BitVec 64))
(declare-fun temp685_152 () (_ BitVec 64))
(declare-fun temp685_153 () (_ BitVec 64))
(declare-fun temp685_154 () (_ BitVec 64))
(declare-fun temp685_156 () (_ BitVec 64))
(declare-fun temp685_157 () (_ BitVec 64))
(declare-fun temp685_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp685_158 () (_ BitVec 64))
(declare-fun temp685_159 () (_ BitVec 64))
(declare-fun temp685_161 () (_ BitVec 64))
(declare-fun temp685_162 () (_ BitVec 64))
(declare-fun temp685_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp685_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp685_164 () (_ BitVec 64))
(declare-fun temp685_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp685_166 () (_ BitVec 64))
(declare-fun temp685_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp685_168 () (_ BitVec 64))
(declare-fun temp685_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp685_170 () (_ BitVec 64))
(declare-fun temp685_171 () (_ BitVec 64))
(declare-fun temp685_172 () (_ BitVec 64))
(declare-fun temp685_173 () (_ BitVec 64))
(declare-fun temp685_174 () (_ BitVec 64))
(declare-fun temp685_175 () (_ BitVec 64))
(declare-fun temp685_176 () (_ BitVec 64))
(declare-fun temp685_177 () (_ BitVec 64))
(declare-fun temp685_178 () (_ BitVec 64))
(declare-fun temp685_179 () (_ BitVec 64))
(declare-fun temp685_180 () (_ BitVec 64))
(declare-fun temp685_181 () (_ BitVec 64))
(declare-fun temp685_182 () (_ BitVec 64))
(declare-fun temp685_183 () (_ BitVec 64))
(declare-fun temp685_184 () (_ BitVec 64))
(declare-fun temp685_185 () (_ BitVec 64))
(declare-fun temp685_186 () (_ BitVec 64))
(declare-fun temp685_187 () (_ BitVec 64))
(declare-fun temp685_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp685_189 () (_ BitVec 64))
(declare-fun temp685_191 () (_ BitVec 64))
(declare-fun temp685_192 () (_ BitVec 64))
(declare-fun temp685_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp685_193 () (_ BitVec 64))
(declare-fun temp685_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp685_195 () (_ BitVec 64))
(declare-fun temp685_196 () (_ BitVec 64))
(declare-fun temp685_197 () (_ BitVec 64))
(declare-fun temp685_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp685_199 () (_ BitVec 64))
(declare-fun temp685_200 () (_ BitVec 64))
(declare-fun temp685_201 () (_ BitVec 64))
(declare-fun temp685_202 () (_ BitVec 64))
(declare-fun temp685_203 () (_ BitVec 64))
(declare-fun temp685_204 () (_ BitVec 64))
(declare-fun temp685_205 () (_ BitVec 64))
(declare-fun temp685_206 () (_ BitVec 64))
(declare-fun temp685_207 () (_ BitVec 64))
(declare-fun temp685_208 () (_ BitVec 64))
(declare-fun temp685_209 () (_ BitVec 64))
(declare-fun temp685_210 () (_ BitVec 64))
(declare-fun temp685_211 () (_ BitVec 64))
(declare-fun temp685_212 () (_ BitVec 64))
(declare-fun temp685_213 () (_ BitVec 64))
(declare-fun temp685_214 () (_ BitVec 64))
(declare-fun temp685_215 () (_ BitVec 64))
(declare-fun temp685_216 () (_ BitVec 64))
(declare-fun temp685_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp685_218 () (_ BitVec 64))
(declare-fun temp685_220 () (_ BitVec 64))
(declare-fun temp685_221 () (_ BitVec 64))
(declare-fun temp685_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp685_222 () (_ BitVec 64))
(declare-fun temp685_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp685_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp685_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp685_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp685_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp685_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp685_229 () (_ BitVec 64))
(declare-fun temp685_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp685_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp685_232 () (_ BitVec 64))
(declare-fun temp685_233 () (_ BitVec 64))
(declare-fun temp685_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp685_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp685_236 () (_ BitVec 64))
(declare-fun temp685_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp685_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp685_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp685_241 () (_ BitVec 64))
(declare-fun temp685_240 () (_ BitVec 64))
(declare-fun temp685_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp685_243 () (_ BitVec 64))
(declare-fun temp685_244 () (_ BitVec 64))
(declare-fun temp685_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp685_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp685_247 () (_ BitVec 64))
(declare-fun temp685_249 () (_ BitVec 64))
(declare-fun temp685_248 () (_ BitVec 64))
(declare-fun temp685_250 () (_ BitVec 64))
(assert (= temp685_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp685_1)))
(assert (= temp685_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp685_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_3 #x0000000000000000))
(assert (= var79869 temp685_3))
(assert (= temp685_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp685_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_5 #x0000000000000000))
(assert (= var79914 temp685_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp685_6 #x0000000000000000))
(assert (= temp685_7 temp685_6))
(assert (= temp685_8 (select ARGNAME_padding_NAMEEND_VAL temp685_7)))
(assert (= temp685_9 #x0000000000000001))
(assert (= temp685_10 temp685_9))
(assert (= temp685_11 (select ARGNAME_padding_NAMEEND_VAL temp685_10)))
(assert (= temp685_12 #x0000000000000002))
(assert (= temp685_13 temp685_12))
(assert (= temp685_14 (select ARGNAME_padding_NAMEEND_VAL temp685_13)))
(assert (= temp685_15 #x0000000000000003))
(assert (= temp685_16 temp685_15))
(assert (= temp685_17 (select ARGNAME_padding_NAMEEND_VAL temp685_16)))
(assert (= temp685_18 #x0000000000000004))
(assert (= temp685_19 temp685_18))
(assert (= temp685_20 (select ARGNAME_padding_NAMEEND_VAL temp685_19)))
(assert (= temp685_21 #x0000000000000005))
(assert (= temp685_22 temp685_21))
(assert (= temp685_23 (select ARGNAME_padding_NAMEEND_VAL temp685_22)))
(assert (= temp685_24 #x0000000000000000))
(assert (= temp685_25 #x0000000000000000))
(assert (= temp685_26 temp685_25))
(assert (= temp685_27 (select ARGNAME_padding_NAMEEND_VAL temp685_26)))
(assert (= temp685_28 #x0000000000000000))
(assert (= temp685_29 #x0000000000000001))
(assert (= temp685_30 temp685_29))
(assert (= temp685_31 (select ARGNAME_padding_NAMEEND_VAL temp685_30)))
(assert (= temp685_32 #x0000000000000000))
(assert (= temp685_33 #x0000000000000002))
(assert (= temp685_34 temp685_33))
(assert (= temp685_35 (select ARGNAME_padding_NAMEEND_VAL temp685_34)))
(assert (= temp685_36 #x0000000000000000))
(assert (= temp685_37 #x0000000000000003))
(assert (= temp685_38 temp685_37))
(assert (= temp685_39 (select ARGNAME_padding_NAMEEND_VAL temp685_38)))
(assert (= temp685_40 #x0000000000000000))
(assert (= temp685_41 #x0000000000000004))
(assert (= temp685_42 temp685_41))
(assert (= temp685_43 (select ARGNAME_padding_NAMEEND_VAL temp685_42)))
(assert (= temp685_44 #x0000000000000000))
(assert (= temp685_45 #x0000000000000005))
(assert (= temp685_46 temp685_45))
(assert (= temp685_47 (select ARGNAME_padding_NAMEEND_VAL temp685_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp685_27 temp685_24)
             (bvslt temp685_31 temp685_28)
             (bvslt temp685_35 temp685_32)
             (bvslt temp685_39 temp685_36)
             (bvslt temp685_43 temp685_40)
             (bvslt temp685_47 temp685_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_48 #x0000000000000000))
(assert (= var1322786 temp685_48))
(assert (= temp685_49 #x0000000000000000))
(assert (= temp685_50 temp685_49))
(assert (= temp685_51 (select ARGNAME_output_padding_NAMEEND_VAL temp685_50)))
(assert (= temp685_52 #x0000000000000001))
(assert (= temp685_53 temp685_52))
(assert (= temp685_54 (select ARGNAME_output_padding_NAMEEND_VAL temp685_53)))
(assert (= temp685_55 #x0000000000000002))
(assert (= temp685_56 temp685_55))
(assert (= temp685_57 (select ARGNAME_output_padding_NAMEEND_VAL temp685_56)))
(assert (= temp685_58 #x0000000000000003))
(assert (= temp685_59 temp685_58))
(assert (= temp685_60 (select ARGNAME_output_padding_NAMEEND_VAL temp685_59)))
(assert (= temp685_61 #x0000000000000004))
(assert (= temp685_62 temp685_61))
(assert (= temp685_63 (select ARGNAME_output_padding_NAMEEND_VAL temp685_62)))
(assert (= temp685_64 #x0000000000000005))
(assert (= temp685_65 temp685_64))
(assert (= temp685_66 (select ARGNAME_output_padding_NAMEEND_VAL temp685_65)))
(assert (= temp685_67 #x0000000000000000))
(assert (= temp685_68 #x0000000000000000))
(assert (= temp685_69 temp685_68))
(assert (= temp685_70 (select ARGNAME_output_padding_NAMEEND_VAL temp685_69)))
(assert (= temp685_71 #x0000000000000000))
(assert (= temp685_72 #x0000000000000001))
(assert (= temp685_73 temp685_72))
(assert (= temp685_74 (select ARGNAME_output_padding_NAMEEND_VAL temp685_73)))
(assert (= temp685_75 #x0000000000000000))
(assert (= temp685_76 #x0000000000000002))
(assert (= temp685_77 temp685_76))
(assert (= temp685_78 (select ARGNAME_output_padding_NAMEEND_VAL temp685_77)))
(assert (= temp685_79 #x0000000000000000))
(assert (= temp685_80 #x0000000000000003))
(assert (= temp685_81 temp685_80))
(assert (= temp685_82 (select ARGNAME_output_padding_NAMEEND_VAL temp685_81)))
(assert (= temp685_83 #x0000000000000000))
(assert (= temp685_84 #x0000000000000004))
(assert (= temp685_85 temp685_84))
(assert (= temp685_86 (select ARGNAME_output_padding_NAMEEND_VAL temp685_85)))
(assert (= temp685_87 #x0000000000000000))
(assert (= temp685_88 #x0000000000000005))
(assert (= temp685_89 temp685_88))
(assert (= temp685_90 (select ARGNAME_output_padding_NAMEEND_VAL temp685_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp685_70 temp685_67)
             (bvslt temp685_74 temp685_71)
             (bvslt temp685_78 temp685_75)
             (bvslt temp685_82 temp685_79)
             (bvslt temp685_86 temp685_83)
             (bvslt temp685_90 temp685_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_91 #x0000000000000000))
(assert (= var1322797 temp685_91))
(assert (= temp685_92 #x0000000000000000))
(assert (= temp685_93 temp685_92))
(assert (= temp685_94 (select ARGNAME_stride_NAMEEND_VAL temp685_93)))
(assert (= temp685_95 #x0000000000000001))
(assert (= temp685_96 temp685_95))
(assert (= temp685_97 (select ARGNAME_stride_NAMEEND_VAL temp685_96)))
(assert (= temp685_98 #x0000000000000002))
(assert (= temp685_99 temp685_98))
(assert (= temp685_100 (select ARGNAME_stride_NAMEEND_VAL temp685_99)))
(assert (= temp685_101 #x0000000000000003))
(assert (= temp685_102 temp685_101))
(assert (= temp685_103 (select ARGNAME_stride_NAMEEND_VAL temp685_102)))
(assert (= temp685_104 #x0000000000000004))
(assert (= temp685_105 temp685_104))
(assert (= temp685_106 (select ARGNAME_stride_NAMEEND_VAL temp685_105)))
(assert (= temp685_107 #x0000000000000005))
(assert (= temp685_108 temp685_107))
(assert (= temp685_109 (select ARGNAME_stride_NAMEEND_VAL temp685_108)))
(assert (= temp685_110 #x0000000000000000))
(assert (= temp685_111 #x0000000000000000))
(assert (= temp685_112 temp685_111))
(assert (= temp685_113 (select ARGNAME_stride_NAMEEND_VAL temp685_112)))
(assert (= temp685_114 #x0000000000000000))
(assert (= temp685_115 #x0000000000000001))
(assert (= temp685_116 temp685_115))
(assert (= temp685_117 (select ARGNAME_stride_NAMEEND_VAL temp685_116)))
(assert (= temp685_118 #x0000000000000000))
(assert (= temp685_119 #x0000000000000002))
(assert (= temp685_120 temp685_119))
(assert (= temp685_121 (select ARGNAME_stride_NAMEEND_VAL temp685_120)))
(assert (= temp685_122 #x0000000000000000))
(assert (= temp685_123 #x0000000000000003))
(assert (= temp685_124 temp685_123))
(assert (= temp685_125 (select ARGNAME_stride_NAMEEND_VAL temp685_124)))
(assert (= temp685_126 #x0000000000000000))
(assert (= temp685_127 #x0000000000000004))
(assert (= temp685_128 temp685_127))
(assert (= temp685_129 (select ARGNAME_stride_NAMEEND_VAL temp685_128)))
(assert (= temp685_130 #x0000000000000000))
(assert (= temp685_131 #x0000000000000005))
(assert (= temp685_132 temp685_131))
(assert (= temp685_133 (select ARGNAME_stride_NAMEEND_VAL temp685_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp685_113 temp685_110)
             (bvsle temp685_117 temp685_114)
             (bvsle temp685_121 temp685_118)
             (bvsle temp685_125 temp685_122)
             (bvsle temp685_129 temp685_126)
             (bvsle temp685_133 temp685_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_134 #x0000000000000000))
(assert (= var1322807 temp685_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_135 #x0000000000000001))
(assert (= var1322819 temp685_135))
(assert (= temp685_136 #x0000000000000000))
(assert (= var1310898 temp685_136))
(assert (= temp685_137 #x0000000000000000))
(assert (= temp685_138 temp685_137))
(assert (= temp685_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_138)))
(assert (= temp685_140 #x0000000000000001))
(assert (= temp685_141 temp685_140))
(assert (= temp685_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_141)))
(assert (= temp685_143 #x0000000000000002))
(assert (= temp685_144 temp685_143))
(assert (= temp685_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_144)))
(assert (= temp685_146 #x0000000000000003))
(assert (= temp685_147 temp685_146))
(assert (= temp685_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_147)))
(assert (= temp685_149 #x0000000000000004))
(assert (= temp685_150 temp685_149))
(assert (= temp685_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_150)))
(assert (= temp685_152 #x0000000000000005))
(assert (= temp685_153 temp685_152))
(assert (= temp685_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_153)))
(assert (= temp685_156 var1310898))
(assert (= temp685_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_156)))
(assert (= temp685_155 temp685_157))
(assert (= var1322852
   (ite (bvslt temp685_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_158 #x0000000000000000))
(assert (= var1322852 temp685_158))
(assert (= temp685_159 #x0000000000000000))
(assert (= var1310898 temp685_159))
(assert (= temp685_161 var1310898))
(assert (= temp685_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_161)))
(assert (= temp685_160 temp685_162))
(assert (= var1322874 (bvsmod temp685_160 ARGNAME_groups_NAMEEND)))
(assert (= temp685_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp685_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp685_164 #x0000000000000001))
(assert (= var1322875 temp685_164))
(assert (= temp685_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp685_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_166 #x0000000000000001))
(assert (= var1322895 temp685_166))
(assert (= temp685_167 #x0000000000000001))
(assert (= var1311786 temp685_167))
(assert (= temp685_168 #x0000000000000000))
(assert (= temp685_169 temp685_168))
(assert (= temp685_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp685_169)))
(assert (= temp685_171 #x0000000000000001))
(assert (= temp685_172 temp685_171))
(assert (= temp685_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp685_172)))
(assert (= temp685_174 #x0000000000000002))
(assert (= temp685_175 temp685_174))
(assert (= temp685_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp685_175)))
(assert (= temp685_177 #x0000000000000003))
(assert (= temp685_178 temp685_177))
(assert (= temp685_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp685_178)))
(assert (= temp685_180 #x0000000000000004))
(assert (= temp685_181 temp685_180))
(assert (= temp685_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp685_181)))
(assert (= temp685_183 #x0000000000000005))
(assert (= temp685_184 temp685_183))
(assert (= temp685_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp685_184)))
(assert (= temp685_186 #x0000000000000000))
(assert (= temp685_187
   (ite (bvslt var1311786 temp685_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp685_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp685_187)))
(assert (= var1322903 temp685_188))
(assert (bvslt (ite (bvslt var1311786 temp685_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp685_189 #x0000000000000001))
(assert (= var1311786 temp685_189))
(assert (= temp685_191 var1311786))
(assert (= temp685_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_191)))
(assert (= temp685_190 temp685_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp685_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp685_193 #x0000000000000001))
(assert (= var1322908 temp685_193))
(assert (= temp685_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp685_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_195 #x0000000000000001))
(assert (= var1322975 temp685_195))
(assert (= temp685_196 #x0000000000000000))
(assert (= var1310898 temp685_196))
(assert (= temp685_197 #x0000000000000000))
(assert (= temp685_198 temp685_197))
(assert (= temp685_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp685_198)))
(assert (= temp685_200 #x0000000000000001))
(assert (= temp685_201 temp685_200))
(assert (= temp685_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp685_201)))
(assert (= temp685_203 #x0000000000000002))
(assert (= temp685_204 temp685_203))
(assert (= temp685_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp685_204)))
(assert (= temp685_206 #x0000000000000003))
(assert (= temp685_207 temp685_206))
(assert (= temp685_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp685_207)))
(assert (= temp685_209 #x0000000000000004))
(assert (= temp685_210 temp685_209))
(assert (= temp685_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp685_210)))
(assert (= temp685_212 #x0000000000000005))
(assert (= temp685_213 temp685_212))
(assert (= temp685_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp685_213)))
(assert (= temp685_215 #x0000000000000000))
(assert (= temp685_216
   (ite (bvslt var1310898 temp685_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp685_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp685_216)))
(assert (= var1322977 temp685_217))
(assert (bvslt (ite (bvslt var1310898 temp685_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp685_218 #x0000000000000000))
(assert (= var1310898 temp685_218))
(assert (= temp685_220 var1310898))
(assert (= temp685_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_220)))
(assert (= temp685_219 temp685_221))
(assert (= var1322980
   (ite (= var1322977 temp685_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp685_222 #x0000000000000001))
(assert (= var1322980 temp685_222))
(assert (= temp685_223 #x0000000000000002))
(assert (= var1848169 temp685_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp685_225 #x0000000000000001))
(assert (= var1323065 temp685_225))
(assert (= temp685_226 #x0000000000000001))
(assert (= var3486735 temp685_226))
(assert (= temp685_227 #x0000000000000001))
(assert (= var3814415 temp685_227))
(assert (= temp685_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp685_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_229 #x0000000000000001))
(assert (= var79986 temp685_229))
(assert (= temp685_230 #x0000000000000001))
(assert (= var80116 temp685_230))
(assert (= var4796905 var80116))
(assert (= temp685_231 #x0000000000000000))
(assert (= var4784306 temp685_231))
(assert (= temp685_232 #x0000000000000000))
(assert (= temp685_233
   (ite (bvslt var4784306 temp685_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp685_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp685_233)))
(assert (= var4796924 temp685_234))
(assert (bvslt (ite (bvslt var4784306 temp685_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp685_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp685_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp685_236 #x0000000000000001))
(assert (= var4796925 temp685_236))
(assert (= temp685_237 #x0000000000000000))
(assert (= var4996927 temp685_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp685_238 #x0000000000000002))
(assert (= var5125763 temp685_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_239 #x0000000000000000))
(assert (= var5191324 temp685_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp685_241 #xffffffffffffffff))
(assert (= temp685_240 temp685_241))
(assert (= temp685_242 #x0000000000000001))
(assert (= var66602 temp685_242))
(assert (= temp685_243 #x0000000000000000))
(assert (= temp685_244
   (ite (bvslt var66602 temp685_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp685_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp685_244)))
(assert (= var80523 temp685_245))
(assert (bvslt (ite (bvslt var66602 temp685_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp685_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp685_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp685_247 #x0000000000000001))
(assert (= var80524 temp685_247))
(assert (= temp685_249 #xffffffffffffffff))
(assert (= temp685_248 temp685_249))
(assert (= temp685_250 #x0000000000000001))
(assert (= var79986 temp685_250))
(model-add temp685_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp685_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp685_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






