(declare-fun temp536_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp536_2 () (_ BitVec 64))
(declare-fun temp536_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp536_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp536_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp536_6 () (_ BitVec 64))
(declare-fun temp536_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp536_8 () (_ BitVec 64))
(declare-fun temp536_9 () (_ BitVec 64))
(declare-fun temp536_10 () (_ BitVec 64))
(declare-fun temp536_11 () (_ BitVec 64))
(declare-fun temp536_12 () (_ BitVec 64))
(declare-fun temp536_13 () (_ BitVec 64))
(declare-fun temp536_14 () (_ BitVec 64))
(declare-fun temp536_15 () (_ BitVec 64))
(declare-fun temp536_16 () (_ BitVec 64))
(declare-fun temp536_17 () (_ BitVec 64))
(declare-fun temp536_18 () (_ BitVec 64))
(declare-fun temp536_19 () (_ BitVec 64))
(declare-fun temp536_20 () (_ BitVec 64))
(declare-fun temp536_21 () (_ BitVec 64))
(declare-fun temp536_22 () (_ BitVec 64))
(declare-fun temp536_23 () (_ BitVec 64))
(declare-fun temp536_24 () (_ BitVec 64))
(declare-fun temp536_25 () (_ BitVec 64))
(declare-fun temp536_26 () (_ BitVec 64))
(declare-fun temp536_27 () (_ BitVec 64))
(declare-fun temp536_28 () (_ BitVec 64))
(declare-fun temp536_29 () (_ BitVec 64))
(declare-fun temp536_30 () (_ BitVec 64))
(declare-fun temp536_31 () (_ BitVec 64))
(declare-fun temp536_32 () (_ BitVec 64))
(declare-fun temp536_33 () (_ BitVec 64))
(declare-fun temp536_34 () (_ BitVec 64))
(declare-fun temp536_35 () (_ BitVec 64))
(declare-fun temp536_36 () (_ BitVec 64))
(declare-fun temp536_37 () (_ BitVec 64))
(declare-fun temp536_38 () (_ BitVec 64))
(declare-fun temp536_39 () (_ BitVec 64))
(declare-fun temp536_40 () (_ BitVec 64))
(declare-fun temp536_41 () (_ BitVec 64))
(declare-fun temp536_42 () (_ BitVec 64))
(declare-fun temp536_43 () (_ BitVec 64))
(declare-fun temp536_44 () (_ BitVec 64))
(declare-fun temp536_45 () (_ BitVec 64))
(declare-fun temp536_46 () (_ BitVec 64))
(declare-fun temp536_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp536_48 () (_ BitVec 64))
(declare-fun temp536_49 () (_ BitVec 64))
(declare-fun temp536_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp536_51 () (_ BitVec 64))
(declare-fun temp536_52 () (_ BitVec 64))
(declare-fun temp536_53 () (_ BitVec 64))
(declare-fun temp536_54 () (_ BitVec 64))
(declare-fun temp536_55 () (_ BitVec 64))
(declare-fun temp536_56 () (_ BitVec 64))
(declare-fun temp536_57 () (_ BitVec 64))
(declare-fun temp536_58 () (_ BitVec 64))
(declare-fun temp536_59 () (_ BitVec 64))
(declare-fun temp536_60 () (_ BitVec 64))
(declare-fun temp536_61 () (_ BitVec 64))
(declare-fun temp536_62 () (_ BitVec 64))
(declare-fun temp536_63 () (_ BitVec 64))
(declare-fun temp536_64 () (_ BitVec 64))
(declare-fun temp536_65 () (_ BitVec 64))
(declare-fun temp536_66 () (_ BitVec 64))
(declare-fun temp536_67 () (_ BitVec 64))
(declare-fun temp536_68 () (_ BitVec 64))
(declare-fun temp536_69 () (_ BitVec 64))
(declare-fun temp536_70 () (_ BitVec 64))
(declare-fun temp536_71 () (_ BitVec 64))
(declare-fun temp536_72 () (_ BitVec 64))
(declare-fun temp536_73 () (_ BitVec 64))
(declare-fun temp536_74 () (_ BitVec 64))
(declare-fun temp536_75 () (_ BitVec 64))
(declare-fun temp536_76 () (_ BitVec 64))
(declare-fun temp536_77 () (_ BitVec 64))
(declare-fun temp536_78 () (_ BitVec 64))
(declare-fun temp536_79 () (_ BitVec 64))
(declare-fun temp536_80 () (_ BitVec 64))
(declare-fun temp536_81 () (_ BitVec 64))
(declare-fun temp536_82 () (_ BitVec 64))
(declare-fun temp536_83 () (_ BitVec 64))
(declare-fun temp536_84 () (_ BitVec 64))
(declare-fun temp536_85 () (_ BitVec 64))
(declare-fun temp536_86 () (_ BitVec 64))
(declare-fun temp536_87 () (_ BitVec 64))
(declare-fun temp536_88 () (_ BitVec 64))
(declare-fun temp536_89 () (_ BitVec 64))
(declare-fun temp536_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp536_91 () (_ BitVec 64))
(declare-fun temp536_92 () (_ BitVec 64))
(declare-fun temp536_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp536_94 () (_ BitVec 64))
(declare-fun temp536_95 () (_ BitVec 64))
(declare-fun temp536_96 () (_ BitVec 64))
(declare-fun temp536_97 () (_ BitVec 64))
(declare-fun temp536_98 () (_ BitVec 64))
(declare-fun temp536_99 () (_ BitVec 64))
(declare-fun temp536_100 () (_ BitVec 64))
(declare-fun temp536_101 () (_ BitVec 64))
(declare-fun temp536_102 () (_ BitVec 64))
(declare-fun temp536_103 () (_ BitVec 64))
(declare-fun temp536_104 () (_ BitVec 64))
(declare-fun temp536_105 () (_ BitVec 64))
(declare-fun temp536_106 () (_ BitVec 64))
(declare-fun temp536_107 () (_ BitVec 64))
(declare-fun temp536_108 () (_ BitVec 64))
(declare-fun temp536_109 () (_ BitVec 64))
(declare-fun temp536_110 () (_ BitVec 64))
(declare-fun temp536_111 () (_ BitVec 64))
(declare-fun temp536_112 () (_ BitVec 64))
(declare-fun temp536_113 () (_ BitVec 64))
(declare-fun temp536_114 () (_ BitVec 64))
(declare-fun temp536_115 () (_ BitVec 64))
(declare-fun temp536_116 () (_ BitVec 64))
(declare-fun temp536_117 () (_ BitVec 64))
(declare-fun temp536_118 () (_ BitVec 64))
(declare-fun temp536_119 () (_ BitVec 64))
(declare-fun temp536_120 () (_ BitVec 64))
(declare-fun temp536_121 () (_ BitVec 64))
(declare-fun temp536_122 () (_ BitVec 64))
(declare-fun temp536_123 () (_ BitVec 64))
(declare-fun temp536_124 () (_ BitVec 64))
(declare-fun temp536_125 () (_ BitVec 64))
(declare-fun temp536_126 () (_ BitVec 64))
(declare-fun temp536_127 () (_ BitVec 64))
(declare-fun temp536_128 () (_ BitVec 64))
(declare-fun temp536_129 () (_ BitVec 64))
(declare-fun temp536_130 () (_ BitVec 64))
(declare-fun temp536_131 () (_ BitVec 64))
(declare-fun temp536_132 () (_ BitVec 64))
(declare-fun temp536_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp536_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp536_135 () (_ BitVec 64))
(declare-fun temp536_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp536_137 () (_ BitVec 64))
(declare-fun temp536_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp536_139 () (_ BitVec 64))
(declare-fun temp536_140 () (_ BitVec 64))
(declare-fun temp536_141 () (_ BitVec 64))
(declare-fun temp536_142 () (_ BitVec 64))
(declare-fun temp536_143 () (_ BitVec 64))
(declare-fun temp536_144 () (_ BitVec 64))
(declare-fun temp536_145 () (_ BitVec 64))
(declare-fun temp536_146 () (_ BitVec 64))
(declare-fun temp536_147 () (_ BitVec 64))
(declare-fun temp536_148 () (_ BitVec 64))
(declare-fun temp536_149 () (_ BitVec 64))
(declare-fun temp536_150 () (_ BitVec 64))
(declare-fun temp536_151 () (_ BitVec 64))
(declare-fun temp536_152 () (_ BitVec 64))
(declare-fun temp536_153 () (_ BitVec 64))
(declare-fun temp536_154 () (_ BitVec 64))
(declare-fun temp536_156 () (_ BitVec 64))
(declare-fun temp536_157 () (_ BitVec 64))
(declare-fun temp536_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp536_158 () (_ BitVec 64))
(declare-fun temp536_159 () (_ BitVec 64))
(declare-fun temp536_161 () (_ BitVec 64))
(declare-fun temp536_162 () (_ BitVec 64))
(declare-fun temp536_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp536_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp536_164 () (_ BitVec 64))
(declare-fun temp536_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp536_166 () (_ BitVec 64))
(declare-fun temp536_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp536_168 () (_ BitVec 64))
(declare-fun temp536_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp536_170 () (_ BitVec 64))
(declare-fun temp536_171 () (_ BitVec 64))
(declare-fun temp536_172 () (_ BitVec 64))
(declare-fun temp536_173 () (_ BitVec 64))
(declare-fun temp536_174 () (_ BitVec 64))
(declare-fun temp536_175 () (_ BitVec 64))
(declare-fun temp536_176 () (_ BitVec 64))
(declare-fun temp536_177 () (_ BitVec 64))
(declare-fun temp536_178 () (_ BitVec 64))
(declare-fun temp536_179 () (_ BitVec 64))
(declare-fun temp536_180 () (_ BitVec 64))
(declare-fun temp536_181 () (_ BitVec 64))
(declare-fun temp536_182 () (_ BitVec 64))
(declare-fun temp536_183 () (_ BitVec 64))
(declare-fun temp536_184 () (_ BitVec 64))
(declare-fun temp536_185 () (_ BitVec 64))
(declare-fun temp536_186 () (_ BitVec 64))
(declare-fun temp536_187 () (_ BitVec 64))
(declare-fun temp536_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp536_189 () (_ BitVec 64))
(declare-fun temp536_191 () (_ BitVec 64))
(declare-fun temp536_192 () (_ BitVec 64))
(declare-fun temp536_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp536_193 () (_ BitVec 64))
(declare-fun temp536_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp536_195 () (_ BitVec 64))
(declare-fun temp536_196 () (_ BitVec 64))
(declare-fun temp536_197 () (_ BitVec 64))
(declare-fun temp536_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp536_199 () (_ BitVec 64))
(declare-fun temp536_200 () (_ BitVec 64))
(declare-fun temp536_201 () (_ BitVec 64))
(declare-fun temp536_202 () (_ BitVec 64))
(declare-fun temp536_203 () (_ BitVec 64))
(declare-fun temp536_204 () (_ BitVec 64))
(declare-fun temp536_205 () (_ BitVec 64))
(declare-fun temp536_206 () (_ BitVec 64))
(declare-fun temp536_207 () (_ BitVec 64))
(declare-fun temp536_208 () (_ BitVec 64))
(declare-fun temp536_209 () (_ BitVec 64))
(declare-fun temp536_210 () (_ BitVec 64))
(declare-fun temp536_211 () (_ BitVec 64))
(declare-fun temp536_212 () (_ BitVec 64))
(declare-fun temp536_213 () (_ BitVec 64))
(declare-fun temp536_214 () (_ BitVec 64))
(declare-fun temp536_215 () (_ BitVec 64))
(declare-fun temp536_216 () (_ BitVec 64))
(declare-fun temp536_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp536_218 () (_ BitVec 64))
(declare-fun temp536_220 () (_ BitVec 64))
(declare-fun temp536_221 () (_ BitVec 64))
(declare-fun temp536_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp536_222 () (_ BitVec 64))
(declare-fun temp536_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp536_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp536_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp536_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp536_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp536_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp536_229 () (_ BitVec 64))
(declare-fun temp536_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp536_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp536_232 () (_ BitVec 64))
(declare-fun temp536_233 () (_ BitVec 64))
(declare-fun temp536_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp536_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp536_236 () (_ BitVec 64))
(declare-fun temp536_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp536_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp536_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp536_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp536_241 () (_ BitVec 64))
(declare-fun temp536_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp536_243 () (_ BitVec 64))
(declare-fun temp536_244 () (_ BitVec 64))
(declare-fun var7484180 () (_ BitVec 64))
(declare-fun var7484147 () (_ BitVec 64))
(declare-fun var7352711 () (_ BitVec 64))
(declare-fun var7352707 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp536_245 () (_ BitVec 64))
(assert (= temp536_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp536_1)))
(assert (= temp536_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp536_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_3 #x0000000000000000))
(assert (= var79869 temp536_3))
(assert (= temp536_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp536_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_5 #x0000000000000000))
(assert (= var79914 temp536_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp536_6 #x0000000000000000))
(assert (= temp536_7 temp536_6))
(assert (= temp536_8 (select ARGNAME_padding_NAMEEND_VAL temp536_7)))
(assert (= temp536_9 #x0000000000000001))
(assert (= temp536_10 temp536_9))
(assert (= temp536_11 (select ARGNAME_padding_NAMEEND_VAL temp536_10)))
(assert (= temp536_12 #x0000000000000002))
(assert (= temp536_13 temp536_12))
(assert (= temp536_14 (select ARGNAME_padding_NAMEEND_VAL temp536_13)))
(assert (= temp536_15 #x0000000000000003))
(assert (= temp536_16 temp536_15))
(assert (= temp536_17 (select ARGNAME_padding_NAMEEND_VAL temp536_16)))
(assert (= temp536_18 #x0000000000000004))
(assert (= temp536_19 temp536_18))
(assert (= temp536_20 (select ARGNAME_padding_NAMEEND_VAL temp536_19)))
(assert (= temp536_21 #x0000000000000005))
(assert (= temp536_22 temp536_21))
(assert (= temp536_23 (select ARGNAME_padding_NAMEEND_VAL temp536_22)))
(assert (= temp536_24 #x0000000000000000))
(assert (= temp536_25 #x0000000000000000))
(assert (= temp536_26 temp536_25))
(assert (= temp536_27 (select ARGNAME_padding_NAMEEND_VAL temp536_26)))
(assert (= temp536_28 #x0000000000000000))
(assert (= temp536_29 #x0000000000000001))
(assert (= temp536_30 temp536_29))
(assert (= temp536_31 (select ARGNAME_padding_NAMEEND_VAL temp536_30)))
(assert (= temp536_32 #x0000000000000000))
(assert (= temp536_33 #x0000000000000002))
(assert (= temp536_34 temp536_33))
(assert (= temp536_35 (select ARGNAME_padding_NAMEEND_VAL temp536_34)))
(assert (= temp536_36 #x0000000000000000))
(assert (= temp536_37 #x0000000000000003))
(assert (= temp536_38 temp536_37))
(assert (= temp536_39 (select ARGNAME_padding_NAMEEND_VAL temp536_38)))
(assert (= temp536_40 #x0000000000000000))
(assert (= temp536_41 #x0000000000000004))
(assert (= temp536_42 temp536_41))
(assert (= temp536_43 (select ARGNAME_padding_NAMEEND_VAL temp536_42)))
(assert (= temp536_44 #x0000000000000000))
(assert (= temp536_45 #x0000000000000005))
(assert (= temp536_46 temp536_45))
(assert (= temp536_47 (select ARGNAME_padding_NAMEEND_VAL temp536_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp536_27 temp536_24)
             (bvslt temp536_31 temp536_28)
             (bvslt temp536_35 temp536_32)
             (bvslt temp536_39 temp536_36)
             (bvslt temp536_43 temp536_40)
             (bvslt temp536_47 temp536_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_48 #x0000000000000000))
(assert (= var1322786 temp536_48))
(assert (= temp536_49 #x0000000000000000))
(assert (= temp536_50 temp536_49))
(assert (= temp536_51 (select ARGNAME_output_padding_NAMEEND_VAL temp536_50)))
(assert (= temp536_52 #x0000000000000001))
(assert (= temp536_53 temp536_52))
(assert (= temp536_54 (select ARGNAME_output_padding_NAMEEND_VAL temp536_53)))
(assert (= temp536_55 #x0000000000000002))
(assert (= temp536_56 temp536_55))
(assert (= temp536_57 (select ARGNAME_output_padding_NAMEEND_VAL temp536_56)))
(assert (= temp536_58 #x0000000000000003))
(assert (= temp536_59 temp536_58))
(assert (= temp536_60 (select ARGNAME_output_padding_NAMEEND_VAL temp536_59)))
(assert (= temp536_61 #x0000000000000004))
(assert (= temp536_62 temp536_61))
(assert (= temp536_63 (select ARGNAME_output_padding_NAMEEND_VAL temp536_62)))
(assert (= temp536_64 #x0000000000000005))
(assert (= temp536_65 temp536_64))
(assert (= temp536_66 (select ARGNAME_output_padding_NAMEEND_VAL temp536_65)))
(assert (= temp536_67 #x0000000000000000))
(assert (= temp536_68 #x0000000000000000))
(assert (= temp536_69 temp536_68))
(assert (= temp536_70 (select ARGNAME_output_padding_NAMEEND_VAL temp536_69)))
(assert (= temp536_71 #x0000000000000000))
(assert (= temp536_72 #x0000000000000001))
(assert (= temp536_73 temp536_72))
(assert (= temp536_74 (select ARGNAME_output_padding_NAMEEND_VAL temp536_73)))
(assert (= temp536_75 #x0000000000000000))
(assert (= temp536_76 #x0000000000000002))
(assert (= temp536_77 temp536_76))
(assert (= temp536_78 (select ARGNAME_output_padding_NAMEEND_VAL temp536_77)))
(assert (= temp536_79 #x0000000000000000))
(assert (= temp536_80 #x0000000000000003))
(assert (= temp536_81 temp536_80))
(assert (= temp536_82 (select ARGNAME_output_padding_NAMEEND_VAL temp536_81)))
(assert (= temp536_83 #x0000000000000000))
(assert (= temp536_84 #x0000000000000004))
(assert (= temp536_85 temp536_84))
(assert (= temp536_86 (select ARGNAME_output_padding_NAMEEND_VAL temp536_85)))
(assert (= temp536_87 #x0000000000000000))
(assert (= temp536_88 #x0000000000000005))
(assert (= temp536_89 temp536_88))
(assert (= temp536_90 (select ARGNAME_output_padding_NAMEEND_VAL temp536_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp536_70 temp536_67)
             (bvslt temp536_74 temp536_71)
             (bvslt temp536_78 temp536_75)
             (bvslt temp536_82 temp536_79)
             (bvslt temp536_86 temp536_83)
             (bvslt temp536_90 temp536_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_91 #x0000000000000000))
(assert (= var1322797 temp536_91))
(assert (= temp536_92 #x0000000000000000))
(assert (= temp536_93 temp536_92))
(assert (= temp536_94 (select ARGNAME_stride_NAMEEND_VAL temp536_93)))
(assert (= temp536_95 #x0000000000000001))
(assert (= temp536_96 temp536_95))
(assert (= temp536_97 (select ARGNAME_stride_NAMEEND_VAL temp536_96)))
(assert (= temp536_98 #x0000000000000002))
(assert (= temp536_99 temp536_98))
(assert (= temp536_100 (select ARGNAME_stride_NAMEEND_VAL temp536_99)))
(assert (= temp536_101 #x0000000000000003))
(assert (= temp536_102 temp536_101))
(assert (= temp536_103 (select ARGNAME_stride_NAMEEND_VAL temp536_102)))
(assert (= temp536_104 #x0000000000000004))
(assert (= temp536_105 temp536_104))
(assert (= temp536_106 (select ARGNAME_stride_NAMEEND_VAL temp536_105)))
(assert (= temp536_107 #x0000000000000005))
(assert (= temp536_108 temp536_107))
(assert (= temp536_109 (select ARGNAME_stride_NAMEEND_VAL temp536_108)))
(assert (= temp536_110 #x0000000000000000))
(assert (= temp536_111 #x0000000000000000))
(assert (= temp536_112 temp536_111))
(assert (= temp536_113 (select ARGNAME_stride_NAMEEND_VAL temp536_112)))
(assert (= temp536_114 #x0000000000000000))
(assert (= temp536_115 #x0000000000000001))
(assert (= temp536_116 temp536_115))
(assert (= temp536_117 (select ARGNAME_stride_NAMEEND_VAL temp536_116)))
(assert (= temp536_118 #x0000000000000000))
(assert (= temp536_119 #x0000000000000002))
(assert (= temp536_120 temp536_119))
(assert (= temp536_121 (select ARGNAME_stride_NAMEEND_VAL temp536_120)))
(assert (= temp536_122 #x0000000000000000))
(assert (= temp536_123 #x0000000000000003))
(assert (= temp536_124 temp536_123))
(assert (= temp536_125 (select ARGNAME_stride_NAMEEND_VAL temp536_124)))
(assert (= temp536_126 #x0000000000000000))
(assert (= temp536_127 #x0000000000000004))
(assert (= temp536_128 temp536_127))
(assert (= temp536_129 (select ARGNAME_stride_NAMEEND_VAL temp536_128)))
(assert (= temp536_130 #x0000000000000000))
(assert (= temp536_131 #x0000000000000005))
(assert (= temp536_132 temp536_131))
(assert (= temp536_133 (select ARGNAME_stride_NAMEEND_VAL temp536_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp536_113 temp536_110)
             (bvsle temp536_117 temp536_114)
             (bvsle temp536_121 temp536_118)
             (bvsle temp536_125 temp536_122)
             (bvsle temp536_129 temp536_126)
             (bvsle temp536_133 temp536_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_134 #x0000000000000000))
(assert (= var1322807 temp536_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_135 #x0000000000000001))
(assert (= var1322819 temp536_135))
(assert (= temp536_136 #x0000000000000000))
(assert (= var1310898 temp536_136))
(assert (= temp536_137 #x0000000000000000))
(assert (= temp536_138 temp536_137))
(assert (= temp536_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_138)))
(assert (= temp536_140 #x0000000000000001))
(assert (= temp536_141 temp536_140))
(assert (= temp536_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_141)))
(assert (= temp536_143 #x0000000000000002))
(assert (= temp536_144 temp536_143))
(assert (= temp536_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_144)))
(assert (= temp536_146 #x0000000000000003))
(assert (= temp536_147 temp536_146))
(assert (= temp536_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_147)))
(assert (= temp536_149 #x0000000000000004))
(assert (= temp536_150 temp536_149))
(assert (= temp536_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_150)))
(assert (= temp536_152 #x0000000000000005))
(assert (= temp536_153 temp536_152))
(assert (= temp536_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_153)))
(assert (= temp536_156 var1310898))
(assert (= temp536_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_156)))
(assert (= temp536_155 temp536_157))
(assert (= var1322852
   (ite (bvslt temp536_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_158 #x0000000000000000))
(assert (= var1322852 temp536_158))
(assert (= temp536_159 #x0000000000000000))
(assert (= var1310898 temp536_159))
(assert (= temp536_161 var1310898))
(assert (= temp536_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_161)))
(assert (= temp536_160 temp536_162))
(assert (= var1322874 (bvsmod temp536_160 ARGNAME_groups_NAMEEND)))
(assert (= temp536_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp536_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp536_164 #x0000000000000001))
(assert (= var1322875 temp536_164))
(assert (= temp536_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp536_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_166 #x0000000000000001))
(assert (= var1322895 temp536_166))
(assert (= temp536_167 #x0000000000000001))
(assert (= var1311786 temp536_167))
(assert (= temp536_168 #x0000000000000000))
(assert (= temp536_169 temp536_168))
(assert (= temp536_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp536_169)))
(assert (= temp536_171 #x0000000000000001))
(assert (= temp536_172 temp536_171))
(assert (= temp536_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp536_172)))
(assert (= temp536_174 #x0000000000000002))
(assert (= temp536_175 temp536_174))
(assert (= temp536_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp536_175)))
(assert (= temp536_177 #x0000000000000003))
(assert (= temp536_178 temp536_177))
(assert (= temp536_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp536_178)))
(assert (= temp536_180 #x0000000000000004))
(assert (= temp536_181 temp536_180))
(assert (= temp536_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp536_181)))
(assert (= temp536_183 #x0000000000000005))
(assert (= temp536_184 temp536_183))
(assert (= temp536_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp536_184)))
(assert (= temp536_186 #x0000000000000000))
(assert (= temp536_187
   (ite (bvslt var1311786 temp536_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp536_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp536_187)))
(assert (= var1322903 temp536_188))
(assert (bvslt (ite (bvslt var1311786 temp536_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp536_189 #x0000000000000001))
(assert (= var1311786 temp536_189))
(assert (= temp536_191 var1311786))
(assert (= temp536_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_191)))
(assert (= temp536_190 temp536_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp536_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp536_193 #x0000000000000001))
(assert (= var1322908 temp536_193))
(assert (= temp536_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp536_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_195 #x0000000000000001))
(assert (= var1322975 temp536_195))
(assert (= temp536_196 #x0000000000000000))
(assert (= var1310898 temp536_196))
(assert (= temp536_197 #x0000000000000000))
(assert (= temp536_198 temp536_197))
(assert (= temp536_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp536_198)))
(assert (= temp536_200 #x0000000000000001))
(assert (= temp536_201 temp536_200))
(assert (= temp536_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp536_201)))
(assert (= temp536_203 #x0000000000000002))
(assert (= temp536_204 temp536_203))
(assert (= temp536_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp536_204)))
(assert (= temp536_206 #x0000000000000003))
(assert (= temp536_207 temp536_206))
(assert (= temp536_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp536_207)))
(assert (= temp536_209 #x0000000000000004))
(assert (= temp536_210 temp536_209))
(assert (= temp536_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp536_210)))
(assert (= temp536_212 #x0000000000000005))
(assert (= temp536_213 temp536_212))
(assert (= temp536_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp536_213)))
(assert (= temp536_215 #x0000000000000000))
(assert (= temp536_216
   (ite (bvslt var1310898 temp536_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp536_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp536_216)))
(assert (= var1322977 temp536_217))
(assert (bvslt (ite (bvslt var1310898 temp536_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp536_218 #x0000000000000000))
(assert (= var1310898 temp536_218))
(assert (= temp536_220 var1310898))
(assert (= temp536_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp536_220)))
(assert (= temp536_219 temp536_221))
(assert (= var1322980
   (ite (= var1322977 temp536_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp536_222 #x0000000000000001))
(assert (= var1322980 temp536_222))
(assert (= temp536_223 #x0000000000000002))
(assert (= var1848169 temp536_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp536_225 #x0000000000000001))
(assert (= var1323065 temp536_225))
(assert (= temp536_226 #x0000000000000001))
(assert (= var3486735 temp536_226))
(assert (= temp536_227 #x0000000000000001))
(assert (= var3814415 temp536_227))
(assert (= temp536_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp536_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_229 #x0000000000000001))
(assert (= var79986 temp536_229))
(assert (= temp536_230 #x0000000000000001))
(assert (= var80116 temp536_230))
(assert (= var4796905 var80116))
(assert (= temp536_231 #x0000000000000000))
(assert (= var4784306 temp536_231))
(assert (= temp536_232 #x0000000000000000))
(assert (= temp536_233
   (ite (bvslt var4784306 temp536_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp536_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp536_233)))
(assert (= var4796924 temp536_234))
(assert (bvslt (ite (bvslt var4784306 temp536_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp536_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp536_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp536_236 #x0000000000000001))
(assert (= var4796925 temp536_236))
(assert (= temp536_237 #x0000000000000000))
(assert (= var4996927 temp536_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp536_238 #x0000000000000002))
(assert (= var5125763 temp536_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_239 #x0000000000000000))
(assert (= var5191324 temp536_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp536_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp536_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_241 #x0000000000000000))
(assert (= var81342 temp536_241))
(assert (= temp536_242 #x0000000000000002))
(assert (= var5977731 temp536_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp536_243 #x0000000000000001))
(assert (= var79986 temp536_243))
(assert (= temp536_244 #x0000000000000000))
(assert (= var7484180 temp536_244))
(assert (= var7484147 var7484180))
(assert (= var7352711 var7484147))
(assert (= var7352707 var7352711))
(assert (= var81597 var7352707))
(assert (= temp536_245 #x0000000000000000))
(assert (= var81597 temp536_245))
(model-add temp536_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp536_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp536_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






