(declare-fun temp1044_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1044_2 () (_ BitVec 64))
(declare-fun temp1044_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1044_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1044_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1044_6 () (_ BitVec 64))
(declare-fun temp1044_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1044_8 () (_ BitVec 64))
(declare-fun temp1044_9 () (_ BitVec 64))
(declare-fun temp1044_10 () (_ BitVec 64))
(declare-fun temp1044_11 () (_ BitVec 64))
(declare-fun temp1044_12 () (_ BitVec 64))
(declare-fun temp1044_13 () (_ BitVec 64))
(declare-fun temp1044_14 () (_ BitVec 64))
(declare-fun temp1044_15 () (_ BitVec 64))
(declare-fun temp1044_16 () (_ BitVec 64))
(declare-fun temp1044_17 () (_ BitVec 64))
(declare-fun temp1044_18 () (_ BitVec 64))
(declare-fun temp1044_19 () (_ BitVec 64))
(declare-fun temp1044_20 () (_ BitVec 64))
(declare-fun temp1044_21 () (_ BitVec 64))
(declare-fun temp1044_22 () (_ BitVec 64))
(declare-fun temp1044_23 () (_ BitVec 64))
(declare-fun temp1044_24 () (_ BitVec 64))
(declare-fun temp1044_25 () (_ BitVec 64))
(declare-fun temp1044_26 () (_ BitVec 64))
(declare-fun temp1044_27 () (_ BitVec 64))
(declare-fun temp1044_28 () (_ BitVec 64))
(declare-fun temp1044_29 () (_ BitVec 64))
(declare-fun temp1044_30 () (_ BitVec 64))
(declare-fun temp1044_31 () (_ BitVec 64))
(declare-fun temp1044_32 () (_ BitVec 64))
(declare-fun temp1044_33 () (_ BitVec 64))
(declare-fun temp1044_34 () (_ BitVec 64))
(declare-fun temp1044_35 () (_ BitVec 64))
(declare-fun temp1044_36 () (_ BitVec 64))
(declare-fun temp1044_37 () (_ BitVec 64))
(declare-fun temp1044_38 () (_ BitVec 64))
(declare-fun temp1044_39 () (_ BitVec 64))
(declare-fun temp1044_40 () (_ BitVec 64))
(declare-fun temp1044_41 () (_ BitVec 64))
(declare-fun temp1044_42 () (_ BitVec 64))
(declare-fun temp1044_43 () (_ BitVec 64))
(declare-fun temp1044_44 () (_ BitVec 64))
(declare-fun temp1044_45 () (_ BitVec 64))
(declare-fun temp1044_46 () (_ BitVec 64))
(declare-fun temp1044_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1044_48 () (_ BitVec 64))
(declare-fun temp1044_49 () (_ BitVec 64))
(declare-fun temp1044_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1044_51 () (_ BitVec 64))
(declare-fun temp1044_52 () (_ BitVec 64))
(declare-fun temp1044_53 () (_ BitVec 64))
(declare-fun temp1044_54 () (_ BitVec 64))
(declare-fun temp1044_55 () (_ BitVec 64))
(declare-fun temp1044_56 () (_ BitVec 64))
(declare-fun temp1044_57 () (_ BitVec 64))
(declare-fun temp1044_58 () (_ BitVec 64))
(declare-fun temp1044_59 () (_ BitVec 64))
(declare-fun temp1044_60 () (_ BitVec 64))
(declare-fun temp1044_61 () (_ BitVec 64))
(declare-fun temp1044_62 () (_ BitVec 64))
(declare-fun temp1044_63 () (_ BitVec 64))
(declare-fun temp1044_64 () (_ BitVec 64))
(declare-fun temp1044_65 () (_ BitVec 64))
(declare-fun temp1044_66 () (_ BitVec 64))
(declare-fun temp1044_67 () (_ BitVec 64))
(declare-fun temp1044_68 () (_ BitVec 64))
(declare-fun temp1044_69 () (_ BitVec 64))
(declare-fun temp1044_70 () (_ BitVec 64))
(declare-fun temp1044_71 () (_ BitVec 64))
(declare-fun temp1044_72 () (_ BitVec 64))
(declare-fun temp1044_73 () (_ BitVec 64))
(declare-fun temp1044_74 () (_ BitVec 64))
(declare-fun temp1044_75 () (_ BitVec 64))
(declare-fun temp1044_76 () (_ BitVec 64))
(declare-fun temp1044_77 () (_ BitVec 64))
(declare-fun temp1044_78 () (_ BitVec 64))
(declare-fun temp1044_79 () (_ BitVec 64))
(declare-fun temp1044_80 () (_ BitVec 64))
(declare-fun temp1044_81 () (_ BitVec 64))
(declare-fun temp1044_82 () (_ BitVec 64))
(declare-fun temp1044_83 () (_ BitVec 64))
(declare-fun temp1044_84 () (_ BitVec 64))
(declare-fun temp1044_85 () (_ BitVec 64))
(declare-fun temp1044_86 () (_ BitVec 64))
(declare-fun temp1044_87 () (_ BitVec 64))
(declare-fun temp1044_88 () (_ BitVec 64))
(declare-fun temp1044_89 () (_ BitVec 64))
(declare-fun temp1044_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1044_91 () (_ BitVec 64))
(declare-fun temp1044_92 () (_ BitVec 64))
(declare-fun temp1044_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1044_94 () (_ BitVec 64))
(declare-fun temp1044_95 () (_ BitVec 64))
(declare-fun temp1044_96 () (_ BitVec 64))
(declare-fun temp1044_97 () (_ BitVec 64))
(declare-fun temp1044_98 () (_ BitVec 64))
(declare-fun temp1044_99 () (_ BitVec 64))
(declare-fun temp1044_100 () (_ BitVec 64))
(declare-fun temp1044_101 () (_ BitVec 64))
(declare-fun temp1044_102 () (_ BitVec 64))
(declare-fun temp1044_103 () (_ BitVec 64))
(declare-fun temp1044_104 () (_ BitVec 64))
(declare-fun temp1044_105 () (_ BitVec 64))
(declare-fun temp1044_106 () (_ BitVec 64))
(declare-fun temp1044_107 () (_ BitVec 64))
(declare-fun temp1044_108 () (_ BitVec 64))
(declare-fun temp1044_109 () (_ BitVec 64))
(declare-fun temp1044_110 () (_ BitVec 64))
(declare-fun temp1044_111 () (_ BitVec 64))
(declare-fun temp1044_112 () (_ BitVec 64))
(declare-fun temp1044_113 () (_ BitVec 64))
(declare-fun temp1044_114 () (_ BitVec 64))
(declare-fun temp1044_115 () (_ BitVec 64))
(declare-fun temp1044_116 () (_ BitVec 64))
(declare-fun temp1044_117 () (_ BitVec 64))
(declare-fun temp1044_118 () (_ BitVec 64))
(declare-fun temp1044_119 () (_ BitVec 64))
(declare-fun temp1044_120 () (_ BitVec 64))
(declare-fun temp1044_121 () (_ BitVec 64))
(declare-fun temp1044_122 () (_ BitVec 64))
(declare-fun temp1044_123 () (_ BitVec 64))
(declare-fun temp1044_124 () (_ BitVec 64))
(declare-fun temp1044_125 () (_ BitVec 64))
(declare-fun temp1044_126 () (_ BitVec 64))
(declare-fun temp1044_127 () (_ BitVec 64))
(declare-fun temp1044_128 () (_ BitVec 64))
(declare-fun temp1044_129 () (_ BitVec 64))
(declare-fun temp1044_130 () (_ BitVec 64))
(declare-fun temp1044_131 () (_ BitVec 64))
(declare-fun temp1044_132 () (_ BitVec 64))
(declare-fun temp1044_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1044_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1044_135 () (_ BitVec 64))
(declare-fun temp1044_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1044_137 () (_ BitVec 64))
(declare-fun temp1044_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1044_139 () (_ BitVec 64))
(declare-fun temp1044_140 () (_ BitVec 64))
(declare-fun temp1044_141 () (_ BitVec 64))
(declare-fun temp1044_142 () (_ BitVec 64))
(declare-fun temp1044_143 () (_ BitVec 64))
(declare-fun temp1044_144 () (_ BitVec 64))
(declare-fun temp1044_145 () (_ BitVec 64))
(declare-fun temp1044_146 () (_ BitVec 64))
(declare-fun temp1044_147 () (_ BitVec 64))
(declare-fun temp1044_148 () (_ BitVec 64))
(declare-fun temp1044_149 () (_ BitVec 64))
(declare-fun temp1044_150 () (_ BitVec 64))
(declare-fun temp1044_151 () (_ BitVec 64))
(declare-fun temp1044_152 () (_ BitVec 64))
(declare-fun temp1044_153 () (_ BitVec 64))
(declare-fun temp1044_154 () (_ BitVec 64))
(declare-fun temp1044_156 () (_ BitVec 64))
(declare-fun temp1044_157 () (_ BitVec 64))
(declare-fun temp1044_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1044_158 () (_ BitVec 64))
(declare-fun temp1044_159 () (_ BitVec 64))
(declare-fun temp1044_161 () (_ BitVec 64))
(declare-fun temp1044_162 () (_ BitVec 64))
(declare-fun temp1044_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1044_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1044_164 () (_ BitVec 64))
(declare-fun temp1044_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1044_166 () (_ BitVec 64))
(declare-fun temp1044_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1044_168 () (_ BitVec 64))
(declare-fun temp1044_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1044_170 () (_ BitVec 64))
(declare-fun temp1044_171 () (_ BitVec 64))
(declare-fun temp1044_172 () (_ BitVec 64))
(declare-fun temp1044_173 () (_ BitVec 64))
(declare-fun temp1044_174 () (_ BitVec 64))
(declare-fun temp1044_175 () (_ BitVec 64))
(declare-fun temp1044_176 () (_ BitVec 64))
(declare-fun temp1044_177 () (_ BitVec 64))
(declare-fun temp1044_178 () (_ BitVec 64))
(declare-fun temp1044_179 () (_ BitVec 64))
(declare-fun temp1044_180 () (_ BitVec 64))
(declare-fun temp1044_181 () (_ BitVec 64))
(declare-fun temp1044_182 () (_ BitVec 64))
(declare-fun temp1044_183 () (_ BitVec 64))
(declare-fun temp1044_184 () (_ BitVec 64))
(declare-fun temp1044_185 () (_ BitVec 64))
(declare-fun temp1044_186 () (_ BitVec 64))
(declare-fun temp1044_187 () (_ BitVec 64))
(declare-fun temp1044_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1044_189 () (_ BitVec 64))
(declare-fun temp1044_191 () (_ BitVec 64))
(declare-fun temp1044_192 () (_ BitVec 64))
(declare-fun temp1044_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1044_193 () (_ BitVec 64))
(declare-fun temp1044_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1044_195 () (_ BitVec 64))
(declare-fun temp1044_196 () (_ BitVec 64))
(declare-fun temp1044_197 () (_ BitVec 64))
(declare-fun temp1044_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1044_199 () (_ BitVec 64))
(declare-fun temp1044_200 () (_ BitVec 64))
(declare-fun temp1044_201 () (_ BitVec 64))
(declare-fun temp1044_202 () (_ BitVec 64))
(declare-fun temp1044_203 () (_ BitVec 64))
(declare-fun temp1044_204 () (_ BitVec 64))
(declare-fun temp1044_205 () (_ BitVec 64))
(declare-fun temp1044_206 () (_ BitVec 64))
(declare-fun temp1044_207 () (_ BitVec 64))
(declare-fun temp1044_208 () (_ BitVec 64))
(declare-fun temp1044_209 () (_ BitVec 64))
(declare-fun temp1044_210 () (_ BitVec 64))
(declare-fun temp1044_211 () (_ BitVec 64))
(declare-fun temp1044_212 () (_ BitVec 64))
(declare-fun temp1044_213 () (_ BitVec 64))
(declare-fun temp1044_214 () (_ BitVec 64))
(declare-fun temp1044_215 () (_ BitVec 64))
(declare-fun temp1044_216 () (_ BitVec 64))
(declare-fun temp1044_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1044_218 () (_ BitVec 64))
(declare-fun temp1044_220 () (_ BitVec 64))
(declare-fun temp1044_221 () (_ BitVec 64))
(declare-fun temp1044_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1044_222 () (_ BitVec 64))
(declare-fun temp1044_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1044_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1044_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1044_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1044_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1044_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1044_229 () (_ BitVec 64))
(declare-fun temp1044_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1044_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1044_232 () (_ BitVec 64))
(declare-fun temp1044_233 () (_ BitVec 64))
(declare-fun temp1044_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1044_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1044_236 () (_ BitVec 64))
(declare-fun temp1044_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1044_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1044_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1044_240 () (_ BitVec 64))
(declare-fun temp1044_241 () (_ BitVec 64))
(declare-fun var6566676 () (_ BitVec 64))
(declare-fun var6566643 () (_ BitVec 64))
(declare-fun var6435207 () (_ BitVec 64))
(declare-fun var6435203 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1044_242 () (_ BitVec 64))
(assert (= temp1044_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1044_1)))
(assert (= temp1044_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1044_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_3 #x0000000000000000))
(assert (= var79869 temp1044_3))
(assert (= temp1044_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1044_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_5 #x0000000000000000))
(assert (= var79914 temp1044_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1044_6 #x0000000000000000))
(assert (= temp1044_7 temp1044_6))
(assert (= temp1044_8 (select ARGNAME_padding_NAMEEND_VAL temp1044_7)))
(assert (= temp1044_9 #x0000000000000001))
(assert (= temp1044_10 temp1044_9))
(assert (= temp1044_11 (select ARGNAME_padding_NAMEEND_VAL temp1044_10)))
(assert (= temp1044_12 #x0000000000000002))
(assert (= temp1044_13 temp1044_12))
(assert (= temp1044_14 (select ARGNAME_padding_NAMEEND_VAL temp1044_13)))
(assert (= temp1044_15 #x0000000000000003))
(assert (= temp1044_16 temp1044_15))
(assert (= temp1044_17 (select ARGNAME_padding_NAMEEND_VAL temp1044_16)))
(assert (= temp1044_18 #x0000000000000004))
(assert (= temp1044_19 temp1044_18))
(assert (= temp1044_20 (select ARGNAME_padding_NAMEEND_VAL temp1044_19)))
(assert (= temp1044_21 #x0000000000000005))
(assert (= temp1044_22 temp1044_21))
(assert (= temp1044_23 (select ARGNAME_padding_NAMEEND_VAL temp1044_22)))
(assert (= temp1044_24 #x0000000000000000))
(assert (= temp1044_25 #x0000000000000000))
(assert (= temp1044_26 temp1044_25))
(assert (= temp1044_27 (select ARGNAME_padding_NAMEEND_VAL temp1044_26)))
(assert (= temp1044_28 #x0000000000000000))
(assert (= temp1044_29 #x0000000000000001))
(assert (= temp1044_30 temp1044_29))
(assert (= temp1044_31 (select ARGNAME_padding_NAMEEND_VAL temp1044_30)))
(assert (= temp1044_32 #x0000000000000000))
(assert (= temp1044_33 #x0000000000000002))
(assert (= temp1044_34 temp1044_33))
(assert (= temp1044_35 (select ARGNAME_padding_NAMEEND_VAL temp1044_34)))
(assert (= temp1044_36 #x0000000000000000))
(assert (= temp1044_37 #x0000000000000003))
(assert (= temp1044_38 temp1044_37))
(assert (= temp1044_39 (select ARGNAME_padding_NAMEEND_VAL temp1044_38)))
(assert (= temp1044_40 #x0000000000000000))
(assert (= temp1044_41 #x0000000000000004))
(assert (= temp1044_42 temp1044_41))
(assert (= temp1044_43 (select ARGNAME_padding_NAMEEND_VAL temp1044_42)))
(assert (= temp1044_44 #x0000000000000000))
(assert (= temp1044_45 #x0000000000000005))
(assert (= temp1044_46 temp1044_45))
(assert (= temp1044_47 (select ARGNAME_padding_NAMEEND_VAL temp1044_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1044_27 temp1044_24)
             (bvslt temp1044_31 temp1044_28)
             (bvslt temp1044_35 temp1044_32)
             (bvslt temp1044_39 temp1044_36)
             (bvslt temp1044_43 temp1044_40)
             (bvslt temp1044_47 temp1044_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_48 #x0000000000000000))
(assert (= var1322786 temp1044_48))
(assert (= temp1044_49 #x0000000000000000))
(assert (= temp1044_50 temp1044_49))
(assert (= temp1044_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_50)))
(assert (= temp1044_52 #x0000000000000001))
(assert (= temp1044_53 temp1044_52))
(assert (= temp1044_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_53)))
(assert (= temp1044_55 #x0000000000000002))
(assert (= temp1044_56 temp1044_55))
(assert (= temp1044_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_56)))
(assert (= temp1044_58 #x0000000000000003))
(assert (= temp1044_59 temp1044_58))
(assert (= temp1044_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_59)))
(assert (= temp1044_61 #x0000000000000004))
(assert (= temp1044_62 temp1044_61))
(assert (= temp1044_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_62)))
(assert (= temp1044_64 #x0000000000000005))
(assert (= temp1044_65 temp1044_64))
(assert (= temp1044_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_65)))
(assert (= temp1044_67 #x0000000000000000))
(assert (= temp1044_68 #x0000000000000000))
(assert (= temp1044_69 temp1044_68))
(assert (= temp1044_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_69)))
(assert (= temp1044_71 #x0000000000000000))
(assert (= temp1044_72 #x0000000000000001))
(assert (= temp1044_73 temp1044_72))
(assert (= temp1044_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_73)))
(assert (= temp1044_75 #x0000000000000000))
(assert (= temp1044_76 #x0000000000000002))
(assert (= temp1044_77 temp1044_76))
(assert (= temp1044_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_77)))
(assert (= temp1044_79 #x0000000000000000))
(assert (= temp1044_80 #x0000000000000003))
(assert (= temp1044_81 temp1044_80))
(assert (= temp1044_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_81)))
(assert (= temp1044_83 #x0000000000000000))
(assert (= temp1044_84 #x0000000000000004))
(assert (= temp1044_85 temp1044_84))
(assert (= temp1044_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_85)))
(assert (= temp1044_87 #x0000000000000000))
(assert (= temp1044_88 #x0000000000000005))
(assert (= temp1044_89 temp1044_88))
(assert (= temp1044_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1044_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1044_70 temp1044_67)
             (bvslt temp1044_74 temp1044_71)
             (bvslt temp1044_78 temp1044_75)
             (bvslt temp1044_82 temp1044_79)
             (bvslt temp1044_86 temp1044_83)
             (bvslt temp1044_90 temp1044_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_91 #x0000000000000000))
(assert (= var1322797 temp1044_91))
(assert (= temp1044_92 #x0000000000000000))
(assert (= temp1044_93 temp1044_92))
(assert (= temp1044_94 (select ARGNAME_stride_NAMEEND_VAL temp1044_93)))
(assert (= temp1044_95 #x0000000000000001))
(assert (= temp1044_96 temp1044_95))
(assert (= temp1044_97 (select ARGNAME_stride_NAMEEND_VAL temp1044_96)))
(assert (= temp1044_98 #x0000000000000002))
(assert (= temp1044_99 temp1044_98))
(assert (= temp1044_100 (select ARGNAME_stride_NAMEEND_VAL temp1044_99)))
(assert (= temp1044_101 #x0000000000000003))
(assert (= temp1044_102 temp1044_101))
(assert (= temp1044_103 (select ARGNAME_stride_NAMEEND_VAL temp1044_102)))
(assert (= temp1044_104 #x0000000000000004))
(assert (= temp1044_105 temp1044_104))
(assert (= temp1044_106 (select ARGNAME_stride_NAMEEND_VAL temp1044_105)))
(assert (= temp1044_107 #x0000000000000005))
(assert (= temp1044_108 temp1044_107))
(assert (= temp1044_109 (select ARGNAME_stride_NAMEEND_VAL temp1044_108)))
(assert (= temp1044_110 #x0000000000000000))
(assert (= temp1044_111 #x0000000000000000))
(assert (= temp1044_112 temp1044_111))
(assert (= temp1044_113 (select ARGNAME_stride_NAMEEND_VAL temp1044_112)))
(assert (= temp1044_114 #x0000000000000000))
(assert (= temp1044_115 #x0000000000000001))
(assert (= temp1044_116 temp1044_115))
(assert (= temp1044_117 (select ARGNAME_stride_NAMEEND_VAL temp1044_116)))
(assert (= temp1044_118 #x0000000000000000))
(assert (= temp1044_119 #x0000000000000002))
(assert (= temp1044_120 temp1044_119))
(assert (= temp1044_121 (select ARGNAME_stride_NAMEEND_VAL temp1044_120)))
(assert (= temp1044_122 #x0000000000000000))
(assert (= temp1044_123 #x0000000000000003))
(assert (= temp1044_124 temp1044_123))
(assert (= temp1044_125 (select ARGNAME_stride_NAMEEND_VAL temp1044_124)))
(assert (= temp1044_126 #x0000000000000000))
(assert (= temp1044_127 #x0000000000000004))
(assert (= temp1044_128 temp1044_127))
(assert (= temp1044_129 (select ARGNAME_stride_NAMEEND_VAL temp1044_128)))
(assert (= temp1044_130 #x0000000000000000))
(assert (= temp1044_131 #x0000000000000005))
(assert (= temp1044_132 temp1044_131))
(assert (= temp1044_133 (select ARGNAME_stride_NAMEEND_VAL temp1044_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1044_113 temp1044_110)
             (bvsle temp1044_117 temp1044_114)
             (bvsle temp1044_121 temp1044_118)
             (bvsle temp1044_125 temp1044_122)
             (bvsle temp1044_129 temp1044_126)
             (bvsle temp1044_133 temp1044_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_134 #x0000000000000000))
(assert (= var1322807 temp1044_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_135 #x0000000000000001))
(assert (= var1322819 temp1044_135))
(assert (= temp1044_136 #x0000000000000000))
(assert (= var1310898 temp1044_136))
(assert (= temp1044_137 #x0000000000000000))
(assert (= temp1044_138 temp1044_137))
(assert (= temp1044_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_138)))
(assert (= temp1044_140 #x0000000000000001))
(assert (= temp1044_141 temp1044_140))
(assert (= temp1044_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_141)))
(assert (= temp1044_143 #x0000000000000002))
(assert (= temp1044_144 temp1044_143))
(assert (= temp1044_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_144)))
(assert (= temp1044_146 #x0000000000000003))
(assert (= temp1044_147 temp1044_146))
(assert (= temp1044_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_147)))
(assert (= temp1044_149 #x0000000000000004))
(assert (= temp1044_150 temp1044_149))
(assert (= temp1044_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_150)))
(assert (= temp1044_152 #x0000000000000005))
(assert (= temp1044_153 temp1044_152))
(assert (= temp1044_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_153)))
(assert (= temp1044_156 var1310898))
(assert (= temp1044_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_156)))
(assert (= temp1044_155 temp1044_157))
(assert (= var1322852
   (ite (bvslt temp1044_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_158 #x0000000000000000))
(assert (= var1322852 temp1044_158))
(assert (= temp1044_159 #x0000000000000000))
(assert (= var1310898 temp1044_159))
(assert (= temp1044_161 var1310898))
(assert (= temp1044_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_161)))
(assert (= temp1044_160 temp1044_162))
(assert (= var1322874 (bvsmod temp1044_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1044_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1044_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1044_164 #x0000000000000001))
(assert (= var1322875 temp1044_164))
(assert (= temp1044_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1044_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_166 #x0000000000000001))
(assert (= var1322895 temp1044_166))
(assert (= temp1044_167 #x0000000000000001))
(assert (= var1311786 temp1044_167))
(assert (= temp1044_168 #x0000000000000000))
(assert (= temp1044_169 temp1044_168))
(assert (= temp1044_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1044_169)))
(assert (= temp1044_171 #x0000000000000001))
(assert (= temp1044_172 temp1044_171))
(assert (= temp1044_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1044_172)))
(assert (= temp1044_174 #x0000000000000002))
(assert (= temp1044_175 temp1044_174))
(assert (= temp1044_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1044_175)))
(assert (= temp1044_177 #x0000000000000003))
(assert (= temp1044_178 temp1044_177))
(assert (= temp1044_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1044_178)))
(assert (= temp1044_180 #x0000000000000004))
(assert (= temp1044_181 temp1044_180))
(assert (= temp1044_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1044_181)))
(assert (= temp1044_183 #x0000000000000005))
(assert (= temp1044_184 temp1044_183))
(assert (= temp1044_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1044_184)))
(assert (= temp1044_186 #x0000000000000000))
(assert (= temp1044_187
   (ite (bvslt var1311786 temp1044_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1044_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1044_187)))
(assert (= var1322903 temp1044_188))
(assert (bvslt (ite (bvslt var1311786 temp1044_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1044_189 #x0000000000000001))
(assert (= var1311786 temp1044_189))
(assert (= temp1044_191 var1311786))
(assert (= temp1044_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_191)))
(assert (= temp1044_190 temp1044_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1044_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1044_193 #x0000000000000001))
(assert (= var1322908 temp1044_193))
(assert (= temp1044_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1044_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_195 #x0000000000000001))
(assert (= var1322975 temp1044_195))
(assert (= temp1044_196 #x0000000000000000))
(assert (= var1310898 temp1044_196))
(assert (= temp1044_197 #x0000000000000000))
(assert (= temp1044_198 temp1044_197))
(assert (= temp1044_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1044_198)))
(assert (= temp1044_200 #x0000000000000001))
(assert (= temp1044_201 temp1044_200))
(assert (= temp1044_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1044_201)))
(assert (= temp1044_203 #x0000000000000002))
(assert (= temp1044_204 temp1044_203))
(assert (= temp1044_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1044_204)))
(assert (= temp1044_206 #x0000000000000003))
(assert (= temp1044_207 temp1044_206))
(assert (= temp1044_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1044_207)))
(assert (= temp1044_209 #x0000000000000004))
(assert (= temp1044_210 temp1044_209))
(assert (= temp1044_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1044_210)))
(assert (= temp1044_212 #x0000000000000005))
(assert (= temp1044_213 temp1044_212))
(assert (= temp1044_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1044_213)))
(assert (= temp1044_215 #x0000000000000000))
(assert (= temp1044_216
   (ite (bvslt var1310898 temp1044_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1044_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1044_216)))
(assert (= var1322977 temp1044_217))
(assert (bvslt (ite (bvslt var1310898 temp1044_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1044_218 #x0000000000000000))
(assert (= var1310898 temp1044_218))
(assert (= temp1044_220 var1310898))
(assert (= temp1044_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1044_220)))
(assert (= temp1044_219 temp1044_221))
(assert (= var1322980
   (ite (= var1322977 temp1044_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1044_222 #x0000000000000001))
(assert (= var1322980 temp1044_222))
(assert (= temp1044_223 #x0000000000000002))
(assert (= var1848169 temp1044_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1044_225 #x0000000000000001))
(assert (= var1323065 temp1044_225))
(assert (= temp1044_226 #x0000000000000001))
(assert (= var3486735 temp1044_226))
(assert (= temp1044_227 #x0000000000000001))
(assert (= var3814415 temp1044_227))
(assert (= temp1044_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1044_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_229 #x0000000000000001))
(assert (= var79986 temp1044_229))
(assert (= temp1044_230 #x0000000000000001))
(assert (= var80116 temp1044_230))
(assert (= var4796905 var80116))
(assert (= temp1044_231 #x0000000000000000))
(assert (= var4784306 temp1044_231))
(assert (= temp1044_232 #x0000000000000000))
(assert (= temp1044_233
   (ite (bvslt var4784306 temp1044_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1044_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1044_233)))
(assert (= var4796924 temp1044_234))
(assert (bvslt (ite (bvslt var4784306 temp1044_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1044_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1044_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1044_236 #x0000000000000001))
(assert (= var4796925 temp1044_236))
(assert (= temp1044_237 #x0000000000000000))
(assert (= var4996927 temp1044_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1044_238 #x0000000000000002))
(assert (= var5125763 temp1044_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1044_239 #x0000000000000000))
(assert (= var5191324 temp1044_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1044_240 #x0000000000000001))
(assert (= var79986 temp1044_240))
(assert (= temp1044_241 #x0000000000000000))
(assert (= var6566676 temp1044_241))
(assert (= var6566643 var6566676))
(assert (= var6435207 var6566643))
(assert (= var6435203 var6435207))
(assert (= var81597 var6435203))
(assert (= temp1044_242 #x0000000000000000))
(assert (= var81597 temp1044_242))
(model-add temp1044_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1044_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1044_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






