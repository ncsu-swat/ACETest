(declare-fun temp601_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp601_2 () (_ BitVec 64))
(declare-fun temp601_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp601_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp601_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp601_6 () (_ BitVec 64))
(declare-fun temp601_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_8 () (_ BitVec 64))
(declare-fun temp601_9 () (_ BitVec 64))
(declare-fun temp601_10 () (_ BitVec 64))
(declare-fun temp601_11 () (_ BitVec 64))
(declare-fun temp601_12 () (_ BitVec 64))
(declare-fun temp601_13 () (_ BitVec 64))
(declare-fun temp601_14 () (_ BitVec 64))
(declare-fun temp601_15 () (_ BitVec 64))
(declare-fun temp601_16 () (_ BitVec 64))
(declare-fun temp601_17 () (_ BitVec 64))
(declare-fun temp601_18 () (_ BitVec 64))
(declare-fun temp601_19 () (_ BitVec 64))
(declare-fun temp601_20 () (_ BitVec 64))
(declare-fun temp601_21 () (_ BitVec 64))
(declare-fun temp601_22 () (_ BitVec 64))
(declare-fun temp601_23 () (_ BitVec 64))
(declare-fun temp601_24 () (_ BitVec 64))
(declare-fun temp601_25 () (_ BitVec 64))
(declare-fun temp601_26 () (_ BitVec 64))
(declare-fun temp601_27 () (_ BitVec 64))
(declare-fun temp601_28 () (_ BitVec 64))
(declare-fun temp601_29 () (_ BitVec 64))
(declare-fun temp601_30 () (_ BitVec 64))
(declare-fun temp601_31 () (_ BitVec 64))
(declare-fun temp601_32 () (_ BitVec 64))
(declare-fun temp601_33 () (_ BitVec 64))
(declare-fun temp601_34 () (_ BitVec 64))
(declare-fun temp601_35 () (_ BitVec 64))
(declare-fun temp601_36 () (_ BitVec 64))
(declare-fun temp601_37 () (_ BitVec 64))
(declare-fun temp601_38 () (_ BitVec 64))
(declare-fun temp601_39 () (_ BitVec 64))
(declare-fun temp601_40 () (_ BitVec 64))
(declare-fun temp601_41 () (_ BitVec 64))
(declare-fun temp601_42 () (_ BitVec 64))
(declare-fun temp601_43 () (_ BitVec 64))
(declare-fun temp601_44 () (_ BitVec 64))
(declare-fun temp601_45 () (_ BitVec 64))
(declare-fun temp601_46 () (_ BitVec 64))
(declare-fun temp601_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp601_48 () (_ BitVec 64))
(declare-fun temp601_49 () (_ BitVec 64))
(declare-fun temp601_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_51 () (_ BitVec 64))
(declare-fun temp601_52 () (_ BitVec 64))
(declare-fun temp601_53 () (_ BitVec 64))
(declare-fun temp601_54 () (_ BitVec 64))
(declare-fun temp601_55 () (_ BitVec 64))
(declare-fun temp601_56 () (_ BitVec 64))
(declare-fun temp601_57 () (_ BitVec 64))
(declare-fun temp601_58 () (_ BitVec 64))
(declare-fun temp601_59 () (_ BitVec 64))
(declare-fun temp601_60 () (_ BitVec 64))
(declare-fun temp601_61 () (_ BitVec 64))
(declare-fun temp601_62 () (_ BitVec 64))
(declare-fun temp601_63 () (_ BitVec 64))
(declare-fun temp601_64 () (_ BitVec 64))
(declare-fun temp601_65 () (_ BitVec 64))
(declare-fun temp601_66 () (_ BitVec 64))
(declare-fun temp601_67 () (_ BitVec 64))
(declare-fun temp601_68 () (_ BitVec 64))
(declare-fun temp601_69 () (_ BitVec 64))
(declare-fun temp601_70 () (_ BitVec 64))
(declare-fun temp601_71 () (_ BitVec 64))
(declare-fun temp601_72 () (_ BitVec 64))
(declare-fun temp601_73 () (_ BitVec 64))
(declare-fun temp601_74 () (_ BitVec 64))
(declare-fun temp601_75 () (_ BitVec 64))
(declare-fun temp601_76 () (_ BitVec 64))
(declare-fun temp601_77 () (_ BitVec 64))
(declare-fun temp601_78 () (_ BitVec 64))
(declare-fun temp601_79 () (_ BitVec 64))
(declare-fun temp601_80 () (_ BitVec 64))
(declare-fun temp601_81 () (_ BitVec 64))
(declare-fun temp601_82 () (_ BitVec 64))
(declare-fun temp601_83 () (_ BitVec 64))
(declare-fun temp601_84 () (_ BitVec 64))
(declare-fun temp601_85 () (_ BitVec 64))
(declare-fun temp601_86 () (_ BitVec 64))
(declare-fun temp601_87 () (_ BitVec 64))
(declare-fun temp601_88 () (_ BitVec 64))
(declare-fun temp601_89 () (_ BitVec 64))
(declare-fun temp601_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp601_91 () (_ BitVec 64))
(declare-fun temp601_92 () (_ BitVec 64))
(declare-fun temp601_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_94 () (_ BitVec 64))
(declare-fun temp601_95 () (_ BitVec 64))
(declare-fun temp601_96 () (_ BitVec 64))
(declare-fun temp601_97 () (_ BitVec 64))
(declare-fun temp601_98 () (_ BitVec 64))
(declare-fun temp601_99 () (_ BitVec 64))
(declare-fun temp601_100 () (_ BitVec 64))
(declare-fun temp601_101 () (_ BitVec 64))
(declare-fun temp601_102 () (_ BitVec 64))
(declare-fun temp601_103 () (_ BitVec 64))
(declare-fun temp601_104 () (_ BitVec 64))
(declare-fun temp601_105 () (_ BitVec 64))
(declare-fun temp601_106 () (_ BitVec 64))
(declare-fun temp601_107 () (_ BitVec 64))
(declare-fun temp601_108 () (_ BitVec 64))
(declare-fun temp601_109 () (_ BitVec 64))
(declare-fun temp601_110 () (_ BitVec 64))
(declare-fun temp601_111 () (_ BitVec 64))
(declare-fun temp601_112 () (_ BitVec 64))
(declare-fun temp601_113 () (_ BitVec 64))
(declare-fun temp601_114 () (_ BitVec 64))
(declare-fun temp601_115 () (_ BitVec 64))
(declare-fun temp601_116 () (_ BitVec 64))
(declare-fun temp601_117 () (_ BitVec 64))
(declare-fun temp601_118 () (_ BitVec 64))
(declare-fun temp601_119 () (_ BitVec 64))
(declare-fun temp601_120 () (_ BitVec 64))
(declare-fun temp601_121 () (_ BitVec 64))
(declare-fun temp601_122 () (_ BitVec 64))
(declare-fun temp601_123 () (_ BitVec 64))
(declare-fun temp601_124 () (_ BitVec 64))
(declare-fun temp601_125 () (_ BitVec 64))
(declare-fun temp601_126 () (_ BitVec 64))
(declare-fun temp601_127 () (_ BitVec 64))
(declare-fun temp601_128 () (_ BitVec 64))
(declare-fun temp601_129 () (_ BitVec 64))
(declare-fun temp601_130 () (_ BitVec 64))
(declare-fun temp601_131 () (_ BitVec 64))
(declare-fun temp601_132 () (_ BitVec 64))
(declare-fun temp601_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp601_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp601_135 () (_ BitVec 64))
(declare-fun temp601_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp601_137 () (_ BitVec 64))
(declare-fun temp601_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_139 () (_ BitVec 64))
(declare-fun temp601_140 () (_ BitVec 64))
(declare-fun temp601_141 () (_ BitVec 64))
(declare-fun temp601_142 () (_ BitVec 64))
(declare-fun temp601_143 () (_ BitVec 64))
(declare-fun temp601_144 () (_ BitVec 64))
(declare-fun temp601_145 () (_ BitVec 64))
(declare-fun temp601_146 () (_ BitVec 64))
(declare-fun temp601_147 () (_ BitVec 64))
(declare-fun temp601_148 () (_ BitVec 64))
(declare-fun temp601_149 () (_ BitVec 64))
(declare-fun temp601_150 () (_ BitVec 64))
(declare-fun temp601_151 () (_ BitVec 64))
(declare-fun temp601_152 () (_ BitVec 64))
(declare-fun temp601_153 () (_ BitVec 64))
(declare-fun temp601_154 () (_ BitVec 64))
(declare-fun temp601_156 () (_ BitVec 64))
(declare-fun temp601_157 () (_ BitVec 64))
(declare-fun temp601_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp601_158 () (_ BitVec 64))
(declare-fun temp601_159 () (_ BitVec 64))
(declare-fun temp601_161 () (_ BitVec 64))
(declare-fun temp601_162 () (_ BitVec 64))
(declare-fun temp601_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp601_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp601_164 () (_ BitVec 64))
(declare-fun temp601_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp601_166 () (_ BitVec 64))
(declare-fun temp601_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp601_168 () (_ BitVec 64))
(declare-fun temp601_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_170 () (_ BitVec 64))
(declare-fun temp601_171 () (_ BitVec 64))
(declare-fun temp601_172 () (_ BitVec 64))
(declare-fun temp601_173 () (_ BitVec 64))
(declare-fun temp601_174 () (_ BitVec 64))
(declare-fun temp601_175 () (_ BitVec 64))
(declare-fun temp601_176 () (_ BitVec 64))
(declare-fun temp601_177 () (_ BitVec 64))
(declare-fun temp601_178 () (_ BitVec 64))
(declare-fun temp601_179 () (_ BitVec 64))
(declare-fun temp601_180 () (_ BitVec 64))
(declare-fun temp601_181 () (_ BitVec 64))
(declare-fun temp601_182 () (_ BitVec 64))
(declare-fun temp601_183 () (_ BitVec 64))
(declare-fun temp601_184 () (_ BitVec 64))
(declare-fun temp601_185 () (_ BitVec 64))
(declare-fun temp601_186 () (_ BitVec 64))
(declare-fun temp601_187 () (_ BitVec 64))
(declare-fun temp601_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp601_189 () (_ BitVec 64))
(declare-fun temp601_191 () (_ BitVec 64))
(declare-fun temp601_192 () (_ BitVec 64))
(declare-fun temp601_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp601_193 () (_ BitVec 64))
(declare-fun temp601_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp601_195 () (_ BitVec 64))
(declare-fun temp601_196 () (_ BitVec 64))
(declare-fun temp601_197 () (_ BitVec 64))
(declare-fun temp601_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_199 () (_ BitVec 64))
(declare-fun temp601_200 () (_ BitVec 64))
(declare-fun temp601_201 () (_ BitVec 64))
(declare-fun temp601_202 () (_ BitVec 64))
(declare-fun temp601_203 () (_ BitVec 64))
(declare-fun temp601_204 () (_ BitVec 64))
(declare-fun temp601_205 () (_ BitVec 64))
(declare-fun temp601_206 () (_ BitVec 64))
(declare-fun temp601_207 () (_ BitVec 64))
(declare-fun temp601_208 () (_ BitVec 64))
(declare-fun temp601_209 () (_ BitVec 64))
(declare-fun temp601_210 () (_ BitVec 64))
(declare-fun temp601_211 () (_ BitVec 64))
(declare-fun temp601_212 () (_ BitVec 64))
(declare-fun temp601_213 () (_ BitVec 64))
(declare-fun temp601_214 () (_ BitVec 64))
(declare-fun temp601_215 () (_ BitVec 64))
(declare-fun temp601_216 () (_ BitVec 64))
(declare-fun temp601_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp601_218 () (_ BitVec 64))
(declare-fun temp601_220 () (_ BitVec 64))
(declare-fun temp601_221 () (_ BitVec 64))
(declare-fun temp601_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp601_222 () (_ BitVec 64))
(declare-fun temp601_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp601_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp601_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp601_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp601_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp601_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp601_229 () (_ BitVec 64))
(declare-fun temp601_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp601_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp601_232 () (_ BitVec 64))
(declare-fun temp601_233 () (_ BitVec 64))
(declare-fun temp601_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp601_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp601_236 () (_ BitVec 64))
(declare-fun temp601_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp601_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp601_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp601_240 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp601_241 () (_ BitVec 64))
(assert (= temp601_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp601_1)))
(assert (= temp601_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp601_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_3 #x0000000000000000))
(assert (= var79869 temp601_3))
(assert (= temp601_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp601_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_5 #x0000000000000000))
(assert (= var79914 temp601_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp601_6 #x0000000000000000))
(assert (= temp601_7 temp601_6))
(assert (= temp601_8 (select ARGNAME_padding_NAMEEND_VAL temp601_7)))
(assert (= temp601_9 #x0000000000000001))
(assert (= temp601_10 temp601_9))
(assert (= temp601_11 (select ARGNAME_padding_NAMEEND_VAL temp601_10)))
(assert (= temp601_12 #x0000000000000002))
(assert (= temp601_13 temp601_12))
(assert (= temp601_14 (select ARGNAME_padding_NAMEEND_VAL temp601_13)))
(assert (= temp601_15 #x0000000000000003))
(assert (= temp601_16 temp601_15))
(assert (= temp601_17 (select ARGNAME_padding_NAMEEND_VAL temp601_16)))
(assert (= temp601_18 #x0000000000000004))
(assert (= temp601_19 temp601_18))
(assert (= temp601_20 (select ARGNAME_padding_NAMEEND_VAL temp601_19)))
(assert (= temp601_21 #x0000000000000005))
(assert (= temp601_22 temp601_21))
(assert (= temp601_23 (select ARGNAME_padding_NAMEEND_VAL temp601_22)))
(assert (= temp601_24 #x0000000000000000))
(assert (= temp601_25 #x0000000000000000))
(assert (= temp601_26 temp601_25))
(assert (= temp601_27 (select ARGNAME_padding_NAMEEND_VAL temp601_26)))
(assert (= temp601_28 #x0000000000000000))
(assert (= temp601_29 #x0000000000000001))
(assert (= temp601_30 temp601_29))
(assert (= temp601_31 (select ARGNAME_padding_NAMEEND_VAL temp601_30)))
(assert (= temp601_32 #x0000000000000000))
(assert (= temp601_33 #x0000000000000002))
(assert (= temp601_34 temp601_33))
(assert (= temp601_35 (select ARGNAME_padding_NAMEEND_VAL temp601_34)))
(assert (= temp601_36 #x0000000000000000))
(assert (= temp601_37 #x0000000000000003))
(assert (= temp601_38 temp601_37))
(assert (= temp601_39 (select ARGNAME_padding_NAMEEND_VAL temp601_38)))
(assert (= temp601_40 #x0000000000000000))
(assert (= temp601_41 #x0000000000000004))
(assert (= temp601_42 temp601_41))
(assert (= temp601_43 (select ARGNAME_padding_NAMEEND_VAL temp601_42)))
(assert (= temp601_44 #x0000000000000000))
(assert (= temp601_45 #x0000000000000005))
(assert (= temp601_46 temp601_45))
(assert (= temp601_47 (select ARGNAME_padding_NAMEEND_VAL temp601_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp601_27 temp601_24)
             (bvslt temp601_31 temp601_28)
             (bvslt temp601_35 temp601_32)
             (bvslt temp601_39 temp601_36)
             (bvslt temp601_43 temp601_40)
             (bvslt temp601_47 temp601_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_48 #x0000000000000000))
(assert (= var1322786 temp601_48))
(assert (= temp601_49 #x0000000000000000))
(assert (= temp601_50 temp601_49))
(assert (= temp601_51 (select ARGNAME_output_padding_NAMEEND_VAL temp601_50)))
(assert (= temp601_52 #x0000000000000001))
(assert (= temp601_53 temp601_52))
(assert (= temp601_54 (select ARGNAME_output_padding_NAMEEND_VAL temp601_53)))
(assert (= temp601_55 #x0000000000000002))
(assert (= temp601_56 temp601_55))
(assert (= temp601_57 (select ARGNAME_output_padding_NAMEEND_VAL temp601_56)))
(assert (= temp601_58 #x0000000000000003))
(assert (= temp601_59 temp601_58))
(assert (= temp601_60 (select ARGNAME_output_padding_NAMEEND_VAL temp601_59)))
(assert (= temp601_61 #x0000000000000004))
(assert (= temp601_62 temp601_61))
(assert (= temp601_63 (select ARGNAME_output_padding_NAMEEND_VAL temp601_62)))
(assert (= temp601_64 #x0000000000000005))
(assert (= temp601_65 temp601_64))
(assert (= temp601_66 (select ARGNAME_output_padding_NAMEEND_VAL temp601_65)))
(assert (= temp601_67 #x0000000000000000))
(assert (= temp601_68 #x0000000000000000))
(assert (= temp601_69 temp601_68))
(assert (= temp601_70 (select ARGNAME_output_padding_NAMEEND_VAL temp601_69)))
(assert (= temp601_71 #x0000000000000000))
(assert (= temp601_72 #x0000000000000001))
(assert (= temp601_73 temp601_72))
(assert (= temp601_74 (select ARGNAME_output_padding_NAMEEND_VAL temp601_73)))
(assert (= temp601_75 #x0000000000000000))
(assert (= temp601_76 #x0000000000000002))
(assert (= temp601_77 temp601_76))
(assert (= temp601_78 (select ARGNAME_output_padding_NAMEEND_VAL temp601_77)))
(assert (= temp601_79 #x0000000000000000))
(assert (= temp601_80 #x0000000000000003))
(assert (= temp601_81 temp601_80))
(assert (= temp601_82 (select ARGNAME_output_padding_NAMEEND_VAL temp601_81)))
(assert (= temp601_83 #x0000000000000000))
(assert (= temp601_84 #x0000000000000004))
(assert (= temp601_85 temp601_84))
(assert (= temp601_86 (select ARGNAME_output_padding_NAMEEND_VAL temp601_85)))
(assert (= temp601_87 #x0000000000000000))
(assert (= temp601_88 #x0000000000000005))
(assert (= temp601_89 temp601_88))
(assert (= temp601_90 (select ARGNAME_output_padding_NAMEEND_VAL temp601_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp601_70 temp601_67)
             (bvslt temp601_74 temp601_71)
             (bvslt temp601_78 temp601_75)
             (bvslt temp601_82 temp601_79)
             (bvslt temp601_86 temp601_83)
             (bvslt temp601_90 temp601_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_91 #x0000000000000000))
(assert (= var1322797 temp601_91))
(assert (= temp601_92 #x0000000000000000))
(assert (= temp601_93 temp601_92))
(assert (= temp601_94 (select ARGNAME_stride_NAMEEND_VAL temp601_93)))
(assert (= temp601_95 #x0000000000000001))
(assert (= temp601_96 temp601_95))
(assert (= temp601_97 (select ARGNAME_stride_NAMEEND_VAL temp601_96)))
(assert (= temp601_98 #x0000000000000002))
(assert (= temp601_99 temp601_98))
(assert (= temp601_100 (select ARGNAME_stride_NAMEEND_VAL temp601_99)))
(assert (= temp601_101 #x0000000000000003))
(assert (= temp601_102 temp601_101))
(assert (= temp601_103 (select ARGNAME_stride_NAMEEND_VAL temp601_102)))
(assert (= temp601_104 #x0000000000000004))
(assert (= temp601_105 temp601_104))
(assert (= temp601_106 (select ARGNAME_stride_NAMEEND_VAL temp601_105)))
(assert (= temp601_107 #x0000000000000005))
(assert (= temp601_108 temp601_107))
(assert (= temp601_109 (select ARGNAME_stride_NAMEEND_VAL temp601_108)))
(assert (= temp601_110 #x0000000000000000))
(assert (= temp601_111 #x0000000000000000))
(assert (= temp601_112 temp601_111))
(assert (= temp601_113 (select ARGNAME_stride_NAMEEND_VAL temp601_112)))
(assert (= temp601_114 #x0000000000000000))
(assert (= temp601_115 #x0000000000000001))
(assert (= temp601_116 temp601_115))
(assert (= temp601_117 (select ARGNAME_stride_NAMEEND_VAL temp601_116)))
(assert (= temp601_118 #x0000000000000000))
(assert (= temp601_119 #x0000000000000002))
(assert (= temp601_120 temp601_119))
(assert (= temp601_121 (select ARGNAME_stride_NAMEEND_VAL temp601_120)))
(assert (= temp601_122 #x0000000000000000))
(assert (= temp601_123 #x0000000000000003))
(assert (= temp601_124 temp601_123))
(assert (= temp601_125 (select ARGNAME_stride_NAMEEND_VAL temp601_124)))
(assert (= temp601_126 #x0000000000000000))
(assert (= temp601_127 #x0000000000000004))
(assert (= temp601_128 temp601_127))
(assert (= temp601_129 (select ARGNAME_stride_NAMEEND_VAL temp601_128)))
(assert (= temp601_130 #x0000000000000000))
(assert (= temp601_131 #x0000000000000005))
(assert (= temp601_132 temp601_131))
(assert (= temp601_133 (select ARGNAME_stride_NAMEEND_VAL temp601_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp601_113 temp601_110)
             (bvsle temp601_117 temp601_114)
             (bvsle temp601_121 temp601_118)
             (bvsle temp601_125 temp601_122)
             (bvsle temp601_129 temp601_126)
             (bvsle temp601_133 temp601_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_134 #x0000000000000000))
(assert (= var1322807 temp601_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_135 #x0000000000000001))
(assert (= var1322819 temp601_135))
(assert (= temp601_136 #x0000000000000000))
(assert (= var1310898 temp601_136))
(assert (= temp601_137 #x0000000000000000))
(assert (= temp601_138 temp601_137))
(assert (= temp601_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_138)))
(assert (= temp601_140 #x0000000000000001))
(assert (= temp601_141 temp601_140))
(assert (= temp601_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_141)))
(assert (= temp601_143 #x0000000000000002))
(assert (= temp601_144 temp601_143))
(assert (= temp601_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_144)))
(assert (= temp601_146 #x0000000000000003))
(assert (= temp601_147 temp601_146))
(assert (= temp601_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_147)))
(assert (= temp601_149 #x0000000000000004))
(assert (= temp601_150 temp601_149))
(assert (= temp601_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_150)))
(assert (= temp601_152 #x0000000000000005))
(assert (= temp601_153 temp601_152))
(assert (= temp601_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_153)))
(assert (= temp601_156 var1310898))
(assert (= temp601_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_156)))
(assert (= temp601_155 temp601_157))
(assert (= var1322852
   (ite (bvslt temp601_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_158 #x0000000000000000))
(assert (= var1322852 temp601_158))
(assert (= temp601_159 #x0000000000000000))
(assert (= var1310898 temp601_159))
(assert (= temp601_161 var1310898))
(assert (= temp601_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_161)))
(assert (= temp601_160 temp601_162))
(assert (= var1322874 (bvsmod temp601_160 ARGNAME_groups_NAMEEND)))
(assert (= temp601_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp601_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp601_164 #x0000000000000001))
(assert (= var1322875 temp601_164))
(assert (= temp601_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp601_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_166 #x0000000000000001))
(assert (= var1322895 temp601_166))
(assert (= temp601_167 #x0000000000000001))
(assert (= var1311786 temp601_167))
(assert (= temp601_168 #x0000000000000000))
(assert (= temp601_169 temp601_168))
(assert (= temp601_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_169)))
(assert (= temp601_171 #x0000000000000001))
(assert (= temp601_172 temp601_171))
(assert (= temp601_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_172)))
(assert (= temp601_174 #x0000000000000002))
(assert (= temp601_175 temp601_174))
(assert (= temp601_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_175)))
(assert (= temp601_177 #x0000000000000003))
(assert (= temp601_178 temp601_177))
(assert (= temp601_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_178)))
(assert (= temp601_180 #x0000000000000004))
(assert (= temp601_181 temp601_180))
(assert (= temp601_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_181)))
(assert (= temp601_183 #x0000000000000005))
(assert (= temp601_184 temp601_183))
(assert (= temp601_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_184)))
(assert (= temp601_186 #x0000000000000000))
(assert (= temp601_187
   (ite (bvslt var1311786 temp601_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp601_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_187)))
(assert (= var1322903 temp601_188))
(assert (bvslt (ite (bvslt var1311786 temp601_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp601_189 #x0000000000000001))
(assert (= var1311786 temp601_189))
(assert (= temp601_191 var1311786))
(assert (= temp601_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_191)))
(assert (= temp601_190 temp601_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp601_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp601_193 #x0000000000000001))
(assert (= var1322908 temp601_193))
(assert (= temp601_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp601_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_195 #x0000000000000001))
(assert (= var1322975 temp601_195))
(assert (= temp601_196 #x0000000000000000))
(assert (= var1310898 temp601_196))
(assert (= temp601_197 #x0000000000000000))
(assert (= temp601_198 temp601_197))
(assert (= temp601_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp601_198)))
(assert (= temp601_200 #x0000000000000001))
(assert (= temp601_201 temp601_200))
(assert (= temp601_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp601_201)))
(assert (= temp601_203 #x0000000000000002))
(assert (= temp601_204 temp601_203))
(assert (= temp601_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp601_204)))
(assert (= temp601_206 #x0000000000000003))
(assert (= temp601_207 temp601_206))
(assert (= temp601_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp601_207)))
(assert (= temp601_209 #x0000000000000004))
(assert (= temp601_210 temp601_209))
(assert (= temp601_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp601_210)))
(assert (= temp601_212 #x0000000000000005))
(assert (= temp601_213 temp601_212))
(assert (= temp601_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp601_213)))
(assert (= temp601_215 #x0000000000000000))
(assert (= temp601_216
   (ite (bvslt var1310898 temp601_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp601_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp601_216)))
(assert (= var1322977 temp601_217))
(assert (bvslt (ite (bvslt var1310898 temp601_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp601_218 #x0000000000000000))
(assert (= var1310898 temp601_218))
(assert (= temp601_220 var1310898))
(assert (= temp601_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_220)))
(assert (= temp601_219 temp601_221))
(assert (= var1322980
   (ite (= var1322977 temp601_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp601_222 #x0000000000000001))
(assert (= var1322980 temp601_222))
(assert (= temp601_223 #x0000000000000002))
(assert (= var1848169 temp601_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp601_225 #x0000000000000001))
(assert (= var1323065 temp601_225))
(assert (= temp601_226 #x0000000000000001))
(assert (= var3486735 temp601_226))
(assert (= temp601_227 #x0000000000000001))
(assert (= var3814415 temp601_227))
(assert (= temp601_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp601_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_229 #x0000000000000001))
(assert (= var79986 temp601_229))
(assert (= temp601_230 #x0000000000000001))
(assert (= var80116 temp601_230))
(assert (= var4796905 var80116))
(assert (= temp601_231 #x0000000000000000))
(assert (= var4784306 temp601_231))
(assert (= temp601_232 #x0000000000000000))
(assert (= temp601_233
   (ite (bvslt var4784306 temp601_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp601_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_233)))
(assert (= var4796924 temp601_234))
(assert (bvslt (ite (bvslt var4784306 temp601_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp601_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp601_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp601_236 #x0000000000000001))
(assert (= var4796925 temp601_236))
(assert (= temp601_237 #x0000000000000000))
(assert (= var4996927 temp601_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp601_238 #x0000000000000002))
(assert (= var5125763 temp601_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_239 #x0000000000000000))
(assert (= var5191324 temp601_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp601_240 #x0000000000000000))
(assert (= var5386640 temp601_240))
(assert (= temp601_241 #x0000000000000001))
(assert (= var79986 temp601_241))
(model-add temp601_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp601_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp601_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






