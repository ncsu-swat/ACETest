(declare-fun temp784_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp784_2 () (_ BitVec 64))
(declare-fun temp784_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp784_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp784_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp784_6 () (_ BitVec 64))
(declare-fun temp784_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp784_8 () (_ BitVec 64))
(declare-fun temp784_9 () (_ BitVec 64))
(declare-fun temp784_10 () (_ BitVec 64))
(declare-fun temp784_11 () (_ BitVec 64))
(declare-fun temp784_12 () (_ BitVec 64))
(declare-fun temp784_13 () (_ BitVec 64))
(declare-fun temp784_14 () (_ BitVec 64))
(declare-fun temp784_15 () (_ BitVec 64))
(declare-fun temp784_16 () (_ BitVec 64))
(declare-fun temp784_17 () (_ BitVec 64))
(declare-fun temp784_18 () (_ BitVec 64))
(declare-fun temp784_19 () (_ BitVec 64))
(declare-fun temp784_20 () (_ BitVec 64))
(declare-fun temp784_21 () (_ BitVec 64))
(declare-fun temp784_22 () (_ BitVec 64))
(declare-fun temp784_23 () (_ BitVec 64))
(declare-fun temp784_24 () (_ BitVec 64))
(declare-fun temp784_25 () (_ BitVec 64))
(declare-fun temp784_26 () (_ BitVec 64))
(declare-fun temp784_27 () (_ BitVec 64))
(declare-fun temp784_28 () (_ BitVec 64))
(declare-fun temp784_29 () (_ BitVec 64))
(declare-fun temp784_30 () (_ BitVec 64))
(declare-fun temp784_31 () (_ BitVec 64))
(declare-fun temp784_32 () (_ BitVec 64))
(declare-fun temp784_33 () (_ BitVec 64))
(declare-fun temp784_34 () (_ BitVec 64))
(declare-fun temp784_35 () (_ BitVec 64))
(declare-fun temp784_36 () (_ BitVec 64))
(declare-fun temp784_37 () (_ BitVec 64))
(declare-fun temp784_38 () (_ BitVec 64))
(declare-fun temp784_39 () (_ BitVec 64))
(declare-fun temp784_40 () (_ BitVec 64))
(declare-fun temp784_41 () (_ BitVec 64))
(declare-fun temp784_42 () (_ BitVec 64))
(declare-fun temp784_43 () (_ BitVec 64))
(declare-fun temp784_44 () (_ BitVec 64))
(declare-fun temp784_45 () (_ BitVec 64))
(declare-fun temp784_46 () (_ BitVec 64))
(declare-fun temp784_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp784_48 () (_ BitVec 64))
(declare-fun temp784_49 () (_ BitVec 64))
(declare-fun temp784_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp784_51 () (_ BitVec 64))
(declare-fun temp784_52 () (_ BitVec 64))
(declare-fun temp784_53 () (_ BitVec 64))
(declare-fun temp784_54 () (_ BitVec 64))
(declare-fun temp784_55 () (_ BitVec 64))
(declare-fun temp784_56 () (_ BitVec 64))
(declare-fun temp784_57 () (_ BitVec 64))
(declare-fun temp784_58 () (_ BitVec 64))
(declare-fun temp784_59 () (_ BitVec 64))
(declare-fun temp784_60 () (_ BitVec 64))
(declare-fun temp784_61 () (_ BitVec 64))
(declare-fun temp784_62 () (_ BitVec 64))
(declare-fun temp784_63 () (_ BitVec 64))
(declare-fun temp784_64 () (_ BitVec 64))
(declare-fun temp784_65 () (_ BitVec 64))
(declare-fun temp784_66 () (_ BitVec 64))
(declare-fun temp784_67 () (_ BitVec 64))
(declare-fun temp784_68 () (_ BitVec 64))
(declare-fun temp784_69 () (_ BitVec 64))
(declare-fun temp784_70 () (_ BitVec 64))
(declare-fun temp784_71 () (_ BitVec 64))
(declare-fun temp784_72 () (_ BitVec 64))
(declare-fun temp784_73 () (_ BitVec 64))
(declare-fun temp784_74 () (_ BitVec 64))
(declare-fun temp784_75 () (_ BitVec 64))
(declare-fun temp784_76 () (_ BitVec 64))
(declare-fun temp784_77 () (_ BitVec 64))
(declare-fun temp784_78 () (_ BitVec 64))
(declare-fun temp784_79 () (_ BitVec 64))
(declare-fun temp784_80 () (_ BitVec 64))
(declare-fun temp784_81 () (_ BitVec 64))
(declare-fun temp784_82 () (_ BitVec 64))
(declare-fun temp784_83 () (_ BitVec 64))
(declare-fun temp784_84 () (_ BitVec 64))
(declare-fun temp784_85 () (_ BitVec 64))
(declare-fun temp784_86 () (_ BitVec 64))
(declare-fun temp784_87 () (_ BitVec 64))
(declare-fun temp784_88 () (_ BitVec 64))
(declare-fun temp784_89 () (_ BitVec 64))
(declare-fun temp784_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp784_91 () (_ BitVec 64))
(declare-fun temp784_92 () (_ BitVec 64))
(declare-fun temp784_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp784_94 () (_ BitVec 64))
(declare-fun temp784_95 () (_ BitVec 64))
(declare-fun temp784_96 () (_ BitVec 64))
(declare-fun temp784_97 () (_ BitVec 64))
(declare-fun temp784_98 () (_ BitVec 64))
(declare-fun temp784_99 () (_ BitVec 64))
(declare-fun temp784_100 () (_ BitVec 64))
(declare-fun temp784_101 () (_ BitVec 64))
(declare-fun temp784_102 () (_ BitVec 64))
(declare-fun temp784_103 () (_ BitVec 64))
(declare-fun temp784_104 () (_ BitVec 64))
(declare-fun temp784_105 () (_ BitVec 64))
(declare-fun temp784_106 () (_ BitVec 64))
(declare-fun temp784_107 () (_ BitVec 64))
(declare-fun temp784_108 () (_ BitVec 64))
(declare-fun temp784_109 () (_ BitVec 64))
(declare-fun temp784_110 () (_ BitVec 64))
(declare-fun temp784_111 () (_ BitVec 64))
(declare-fun temp784_112 () (_ BitVec 64))
(declare-fun temp784_113 () (_ BitVec 64))
(declare-fun temp784_114 () (_ BitVec 64))
(declare-fun temp784_115 () (_ BitVec 64))
(declare-fun temp784_116 () (_ BitVec 64))
(declare-fun temp784_117 () (_ BitVec 64))
(declare-fun temp784_118 () (_ BitVec 64))
(declare-fun temp784_119 () (_ BitVec 64))
(declare-fun temp784_120 () (_ BitVec 64))
(declare-fun temp784_121 () (_ BitVec 64))
(declare-fun temp784_122 () (_ BitVec 64))
(declare-fun temp784_123 () (_ BitVec 64))
(declare-fun temp784_124 () (_ BitVec 64))
(declare-fun temp784_125 () (_ BitVec 64))
(declare-fun temp784_126 () (_ BitVec 64))
(declare-fun temp784_127 () (_ BitVec 64))
(declare-fun temp784_128 () (_ BitVec 64))
(declare-fun temp784_129 () (_ BitVec 64))
(declare-fun temp784_130 () (_ BitVec 64))
(declare-fun temp784_131 () (_ BitVec 64))
(declare-fun temp784_132 () (_ BitVec 64))
(declare-fun temp784_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp784_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp784_135 () (_ BitVec 64))
(declare-fun temp784_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp784_137 () (_ BitVec 64))
(declare-fun temp784_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp784_139 () (_ BitVec 64))
(declare-fun temp784_140 () (_ BitVec 64))
(declare-fun temp784_141 () (_ BitVec 64))
(declare-fun temp784_142 () (_ BitVec 64))
(declare-fun temp784_143 () (_ BitVec 64))
(declare-fun temp784_144 () (_ BitVec 64))
(declare-fun temp784_145 () (_ BitVec 64))
(declare-fun temp784_146 () (_ BitVec 64))
(declare-fun temp784_147 () (_ BitVec 64))
(declare-fun temp784_148 () (_ BitVec 64))
(declare-fun temp784_149 () (_ BitVec 64))
(declare-fun temp784_150 () (_ BitVec 64))
(declare-fun temp784_151 () (_ BitVec 64))
(declare-fun temp784_152 () (_ BitVec 64))
(declare-fun temp784_153 () (_ BitVec 64))
(declare-fun temp784_154 () (_ BitVec 64))
(declare-fun temp784_156 () (_ BitVec 64))
(declare-fun temp784_157 () (_ BitVec 64))
(declare-fun temp784_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp784_158 () (_ BitVec 64))
(declare-fun temp784_159 () (_ BitVec 64))
(declare-fun temp784_161 () (_ BitVec 64))
(declare-fun temp784_162 () (_ BitVec 64))
(declare-fun temp784_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp784_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp784_164 () (_ BitVec 64))
(declare-fun temp784_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp784_166 () (_ BitVec 64))
(declare-fun temp784_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp784_168 () (_ BitVec 64))
(declare-fun temp784_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp784_170 () (_ BitVec 64))
(declare-fun temp784_171 () (_ BitVec 64))
(declare-fun temp784_172 () (_ BitVec 64))
(declare-fun temp784_173 () (_ BitVec 64))
(declare-fun temp784_174 () (_ BitVec 64))
(declare-fun temp784_175 () (_ BitVec 64))
(declare-fun temp784_176 () (_ BitVec 64))
(declare-fun temp784_177 () (_ BitVec 64))
(declare-fun temp784_178 () (_ BitVec 64))
(declare-fun temp784_179 () (_ BitVec 64))
(declare-fun temp784_180 () (_ BitVec 64))
(declare-fun temp784_181 () (_ BitVec 64))
(declare-fun temp784_182 () (_ BitVec 64))
(declare-fun temp784_183 () (_ BitVec 64))
(declare-fun temp784_184 () (_ BitVec 64))
(declare-fun temp784_185 () (_ BitVec 64))
(declare-fun temp784_186 () (_ BitVec 64))
(declare-fun temp784_187 () (_ BitVec 64))
(declare-fun temp784_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp784_189 () (_ BitVec 64))
(declare-fun temp784_191 () (_ BitVec 64))
(declare-fun temp784_192 () (_ BitVec 64))
(declare-fun temp784_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp784_193 () (_ BitVec 64))
(declare-fun temp784_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp784_195 () (_ BitVec 64))
(declare-fun temp784_196 () (_ BitVec 64))
(declare-fun temp784_197 () (_ BitVec 64))
(declare-fun temp784_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp784_199 () (_ BitVec 64))
(declare-fun temp784_200 () (_ BitVec 64))
(declare-fun temp784_201 () (_ BitVec 64))
(declare-fun temp784_202 () (_ BitVec 64))
(declare-fun temp784_203 () (_ BitVec 64))
(declare-fun temp784_204 () (_ BitVec 64))
(declare-fun temp784_205 () (_ BitVec 64))
(declare-fun temp784_206 () (_ BitVec 64))
(declare-fun temp784_207 () (_ BitVec 64))
(declare-fun temp784_208 () (_ BitVec 64))
(declare-fun temp784_209 () (_ BitVec 64))
(declare-fun temp784_210 () (_ BitVec 64))
(declare-fun temp784_211 () (_ BitVec 64))
(declare-fun temp784_212 () (_ BitVec 64))
(declare-fun temp784_213 () (_ BitVec 64))
(declare-fun temp784_214 () (_ BitVec 64))
(declare-fun temp784_215 () (_ BitVec 64))
(declare-fun temp784_216 () (_ BitVec 64))
(declare-fun temp784_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp784_218 () (_ BitVec 64))
(declare-fun temp784_220 () (_ BitVec 64))
(declare-fun temp784_221 () (_ BitVec 64))
(declare-fun temp784_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp784_222 () (_ BitVec 64))
(declare-fun temp784_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp784_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp784_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp784_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp784_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp784_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp784_229 () (_ BitVec 64))
(declare-fun temp784_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp784_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp784_232 () (_ BitVec 64))
(declare-fun temp784_233 () (_ BitVec 64))
(declare-fun temp784_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp784_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp784_236 () (_ BitVec 64))
(declare-fun temp784_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp784_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp784_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp784_241 () (_ BitVec 64))
(declare-fun temp784_240 () (_ BitVec 64))
(declare-fun temp784_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp784_243 () (_ BitVec 64))
(declare-fun temp784_244 () (_ BitVec 64))
(declare-fun temp784_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp784_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp784_247 () (_ BitVec 64))
(declare-fun temp784_248 () (_ BitVec 64))
(assert (= temp784_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp784_1)))
(assert (= temp784_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp784_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_3 #x0000000000000000))
(assert (= var79869 temp784_3))
(assert (= temp784_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp784_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_5 #x0000000000000000))
(assert (= var79914 temp784_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp784_6 #x0000000000000000))
(assert (= temp784_7 temp784_6))
(assert (= temp784_8 (select ARGNAME_padding_NAMEEND_VAL temp784_7)))
(assert (= temp784_9 #x0000000000000001))
(assert (= temp784_10 temp784_9))
(assert (= temp784_11 (select ARGNAME_padding_NAMEEND_VAL temp784_10)))
(assert (= temp784_12 #x0000000000000002))
(assert (= temp784_13 temp784_12))
(assert (= temp784_14 (select ARGNAME_padding_NAMEEND_VAL temp784_13)))
(assert (= temp784_15 #x0000000000000003))
(assert (= temp784_16 temp784_15))
(assert (= temp784_17 (select ARGNAME_padding_NAMEEND_VAL temp784_16)))
(assert (= temp784_18 #x0000000000000004))
(assert (= temp784_19 temp784_18))
(assert (= temp784_20 (select ARGNAME_padding_NAMEEND_VAL temp784_19)))
(assert (= temp784_21 #x0000000000000005))
(assert (= temp784_22 temp784_21))
(assert (= temp784_23 (select ARGNAME_padding_NAMEEND_VAL temp784_22)))
(assert (= temp784_24 #x0000000000000000))
(assert (= temp784_25 #x0000000000000000))
(assert (= temp784_26 temp784_25))
(assert (= temp784_27 (select ARGNAME_padding_NAMEEND_VAL temp784_26)))
(assert (= temp784_28 #x0000000000000000))
(assert (= temp784_29 #x0000000000000001))
(assert (= temp784_30 temp784_29))
(assert (= temp784_31 (select ARGNAME_padding_NAMEEND_VAL temp784_30)))
(assert (= temp784_32 #x0000000000000000))
(assert (= temp784_33 #x0000000000000002))
(assert (= temp784_34 temp784_33))
(assert (= temp784_35 (select ARGNAME_padding_NAMEEND_VAL temp784_34)))
(assert (= temp784_36 #x0000000000000000))
(assert (= temp784_37 #x0000000000000003))
(assert (= temp784_38 temp784_37))
(assert (= temp784_39 (select ARGNAME_padding_NAMEEND_VAL temp784_38)))
(assert (= temp784_40 #x0000000000000000))
(assert (= temp784_41 #x0000000000000004))
(assert (= temp784_42 temp784_41))
(assert (= temp784_43 (select ARGNAME_padding_NAMEEND_VAL temp784_42)))
(assert (= temp784_44 #x0000000000000000))
(assert (= temp784_45 #x0000000000000005))
(assert (= temp784_46 temp784_45))
(assert (= temp784_47 (select ARGNAME_padding_NAMEEND_VAL temp784_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp784_27 temp784_24)
             (bvslt temp784_31 temp784_28)
             (bvslt temp784_35 temp784_32)
             (bvslt temp784_39 temp784_36)
             (bvslt temp784_43 temp784_40)
             (bvslt temp784_47 temp784_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_48 #x0000000000000000))
(assert (= var1322786 temp784_48))
(assert (= temp784_49 #x0000000000000000))
(assert (= temp784_50 temp784_49))
(assert (= temp784_51 (select ARGNAME_output_padding_NAMEEND_VAL temp784_50)))
(assert (= temp784_52 #x0000000000000001))
(assert (= temp784_53 temp784_52))
(assert (= temp784_54 (select ARGNAME_output_padding_NAMEEND_VAL temp784_53)))
(assert (= temp784_55 #x0000000000000002))
(assert (= temp784_56 temp784_55))
(assert (= temp784_57 (select ARGNAME_output_padding_NAMEEND_VAL temp784_56)))
(assert (= temp784_58 #x0000000000000003))
(assert (= temp784_59 temp784_58))
(assert (= temp784_60 (select ARGNAME_output_padding_NAMEEND_VAL temp784_59)))
(assert (= temp784_61 #x0000000000000004))
(assert (= temp784_62 temp784_61))
(assert (= temp784_63 (select ARGNAME_output_padding_NAMEEND_VAL temp784_62)))
(assert (= temp784_64 #x0000000000000005))
(assert (= temp784_65 temp784_64))
(assert (= temp784_66 (select ARGNAME_output_padding_NAMEEND_VAL temp784_65)))
(assert (= temp784_67 #x0000000000000000))
(assert (= temp784_68 #x0000000000000000))
(assert (= temp784_69 temp784_68))
(assert (= temp784_70 (select ARGNAME_output_padding_NAMEEND_VAL temp784_69)))
(assert (= temp784_71 #x0000000000000000))
(assert (= temp784_72 #x0000000000000001))
(assert (= temp784_73 temp784_72))
(assert (= temp784_74 (select ARGNAME_output_padding_NAMEEND_VAL temp784_73)))
(assert (= temp784_75 #x0000000000000000))
(assert (= temp784_76 #x0000000000000002))
(assert (= temp784_77 temp784_76))
(assert (= temp784_78 (select ARGNAME_output_padding_NAMEEND_VAL temp784_77)))
(assert (= temp784_79 #x0000000000000000))
(assert (= temp784_80 #x0000000000000003))
(assert (= temp784_81 temp784_80))
(assert (= temp784_82 (select ARGNAME_output_padding_NAMEEND_VAL temp784_81)))
(assert (= temp784_83 #x0000000000000000))
(assert (= temp784_84 #x0000000000000004))
(assert (= temp784_85 temp784_84))
(assert (= temp784_86 (select ARGNAME_output_padding_NAMEEND_VAL temp784_85)))
(assert (= temp784_87 #x0000000000000000))
(assert (= temp784_88 #x0000000000000005))
(assert (= temp784_89 temp784_88))
(assert (= temp784_90 (select ARGNAME_output_padding_NAMEEND_VAL temp784_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp784_70 temp784_67)
             (bvslt temp784_74 temp784_71)
             (bvslt temp784_78 temp784_75)
             (bvslt temp784_82 temp784_79)
             (bvslt temp784_86 temp784_83)
             (bvslt temp784_90 temp784_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_91 #x0000000000000000))
(assert (= var1322797 temp784_91))
(assert (= temp784_92 #x0000000000000000))
(assert (= temp784_93 temp784_92))
(assert (= temp784_94 (select ARGNAME_stride_NAMEEND_VAL temp784_93)))
(assert (= temp784_95 #x0000000000000001))
(assert (= temp784_96 temp784_95))
(assert (= temp784_97 (select ARGNAME_stride_NAMEEND_VAL temp784_96)))
(assert (= temp784_98 #x0000000000000002))
(assert (= temp784_99 temp784_98))
(assert (= temp784_100 (select ARGNAME_stride_NAMEEND_VAL temp784_99)))
(assert (= temp784_101 #x0000000000000003))
(assert (= temp784_102 temp784_101))
(assert (= temp784_103 (select ARGNAME_stride_NAMEEND_VAL temp784_102)))
(assert (= temp784_104 #x0000000000000004))
(assert (= temp784_105 temp784_104))
(assert (= temp784_106 (select ARGNAME_stride_NAMEEND_VAL temp784_105)))
(assert (= temp784_107 #x0000000000000005))
(assert (= temp784_108 temp784_107))
(assert (= temp784_109 (select ARGNAME_stride_NAMEEND_VAL temp784_108)))
(assert (= temp784_110 #x0000000000000000))
(assert (= temp784_111 #x0000000000000000))
(assert (= temp784_112 temp784_111))
(assert (= temp784_113 (select ARGNAME_stride_NAMEEND_VAL temp784_112)))
(assert (= temp784_114 #x0000000000000000))
(assert (= temp784_115 #x0000000000000001))
(assert (= temp784_116 temp784_115))
(assert (= temp784_117 (select ARGNAME_stride_NAMEEND_VAL temp784_116)))
(assert (= temp784_118 #x0000000000000000))
(assert (= temp784_119 #x0000000000000002))
(assert (= temp784_120 temp784_119))
(assert (= temp784_121 (select ARGNAME_stride_NAMEEND_VAL temp784_120)))
(assert (= temp784_122 #x0000000000000000))
(assert (= temp784_123 #x0000000000000003))
(assert (= temp784_124 temp784_123))
(assert (= temp784_125 (select ARGNAME_stride_NAMEEND_VAL temp784_124)))
(assert (= temp784_126 #x0000000000000000))
(assert (= temp784_127 #x0000000000000004))
(assert (= temp784_128 temp784_127))
(assert (= temp784_129 (select ARGNAME_stride_NAMEEND_VAL temp784_128)))
(assert (= temp784_130 #x0000000000000000))
(assert (= temp784_131 #x0000000000000005))
(assert (= temp784_132 temp784_131))
(assert (= temp784_133 (select ARGNAME_stride_NAMEEND_VAL temp784_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp784_113 temp784_110)
             (bvsle temp784_117 temp784_114)
             (bvsle temp784_121 temp784_118)
             (bvsle temp784_125 temp784_122)
             (bvsle temp784_129 temp784_126)
             (bvsle temp784_133 temp784_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_134 #x0000000000000000))
(assert (= var1322807 temp784_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_135 #x0000000000000001))
(assert (= var1322819 temp784_135))
(assert (= temp784_136 #x0000000000000000))
(assert (= var1310898 temp784_136))
(assert (= temp784_137 #x0000000000000000))
(assert (= temp784_138 temp784_137))
(assert (= temp784_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_138)))
(assert (= temp784_140 #x0000000000000001))
(assert (= temp784_141 temp784_140))
(assert (= temp784_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_141)))
(assert (= temp784_143 #x0000000000000002))
(assert (= temp784_144 temp784_143))
(assert (= temp784_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_144)))
(assert (= temp784_146 #x0000000000000003))
(assert (= temp784_147 temp784_146))
(assert (= temp784_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_147)))
(assert (= temp784_149 #x0000000000000004))
(assert (= temp784_150 temp784_149))
(assert (= temp784_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_150)))
(assert (= temp784_152 #x0000000000000005))
(assert (= temp784_153 temp784_152))
(assert (= temp784_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_153)))
(assert (= temp784_156 var1310898))
(assert (= temp784_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_156)))
(assert (= temp784_155 temp784_157))
(assert (= var1322852
   (ite (bvslt temp784_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_158 #x0000000000000000))
(assert (= var1322852 temp784_158))
(assert (= temp784_159 #x0000000000000000))
(assert (= var1310898 temp784_159))
(assert (= temp784_161 var1310898))
(assert (= temp784_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_161)))
(assert (= temp784_160 temp784_162))
(assert (= var1322874 (bvsmod temp784_160 ARGNAME_groups_NAMEEND)))
(assert (= temp784_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp784_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp784_164 #x0000000000000001))
(assert (= var1322875 temp784_164))
(assert (= temp784_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp784_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_166 #x0000000000000001))
(assert (= var1322895 temp784_166))
(assert (= temp784_167 #x0000000000000001))
(assert (= var1311786 temp784_167))
(assert (= temp784_168 #x0000000000000000))
(assert (= temp784_169 temp784_168))
(assert (= temp784_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp784_169)))
(assert (= temp784_171 #x0000000000000001))
(assert (= temp784_172 temp784_171))
(assert (= temp784_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp784_172)))
(assert (= temp784_174 #x0000000000000002))
(assert (= temp784_175 temp784_174))
(assert (= temp784_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp784_175)))
(assert (= temp784_177 #x0000000000000003))
(assert (= temp784_178 temp784_177))
(assert (= temp784_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp784_178)))
(assert (= temp784_180 #x0000000000000004))
(assert (= temp784_181 temp784_180))
(assert (= temp784_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp784_181)))
(assert (= temp784_183 #x0000000000000005))
(assert (= temp784_184 temp784_183))
(assert (= temp784_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp784_184)))
(assert (= temp784_186 #x0000000000000000))
(assert (= temp784_187
   (ite (bvslt var1311786 temp784_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp784_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp784_187)))
(assert (= var1322903 temp784_188))
(assert (bvslt (ite (bvslt var1311786 temp784_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp784_189 #x0000000000000001))
(assert (= var1311786 temp784_189))
(assert (= temp784_191 var1311786))
(assert (= temp784_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_191)))
(assert (= temp784_190 temp784_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp784_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp784_193 #x0000000000000001))
(assert (= var1322908 temp784_193))
(assert (= temp784_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp784_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_195 #x0000000000000001))
(assert (= var1322975 temp784_195))
(assert (= temp784_196 #x0000000000000000))
(assert (= var1310898 temp784_196))
(assert (= temp784_197 #x0000000000000000))
(assert (= temp784_198 temp784_197))
(assert (= temp784_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp784_198)))
(assert (= temp784_200 #x0000000000000001))
(assert (= temp784_201 temp784_200))
(assert (= temp784_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp784_201)))
(assert (= temp784_203 #x0000000000000002))
(assert (= temp784_204 temp784_203))
(assert (= temp784_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp784_204)))
(assert (= temp784_206 #x0000000000000003))
(assert (= temp784_207 temp784_206))
(assert (= temp784_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp784_207)))
(assert (= temp784_209 #x0000000000000004))
(assert (= temp784_210 temp784_209))
(assert (= temp784_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp784_210)))
(assert (= temp784_212 #x0000000000000005))
(assert (= temp784_213 temp784_212))
(assert (= temp784_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp784_213)))
(assert (= temp784_215 #x0000000000000000))
(assert (= temp784_216
   (ite (bvslt var1310898 temp784_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp784_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp784_216)))
(assert (= var1322977 temp784_217))
(assert (bvslt (ite (bvslt var1310898 temp784_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp784_218 #x0000000000000000))
(assert (= var1310898 temp784_218))
(assert (= temp784_220 var1310898))
(assert (= temp784_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp784_220)))
(assert (= temp784_219 temp784_221))
(assert (= var1322980
   (ite (= var1322977 temp784_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp784_222 #x0000000000000001))
(assert (= var1322980 temp784_222))
(assert (= temp784_223 #x0000000000000002))
(assert (= var1848169 temp784_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp784_225 #x0000000000000001))
(assert (= var1323065 temp784_225))
(assert (= temp784_226 #x0000000000000001))
(assert (= var3486735 temp784_226))
(assert (= temp784_227 #x0000000000000001))
(assert (= var3814415 temp784_227))
(assert (= temp784_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp784_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_229 #x0000000000000001))
(assert (= var79986 temp784_229))
(assert (= temp784_230 #x0000000000000001))
(assert (= var80116 temp784_230))
(assert (= var4796905 var80116))
(assert (= temp784_231 #x0000000000000000))
(assert (= var4784306 temp784_231))
(assert (= temp784_232 #x0000000000000000))
(assert (= temp784_233
   (ite (bvslt var4784306 temp784_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp784_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp784_233)))
(assert (= var4796924 temp784_234))
(assert (bvslt (ite (bvslt var4784306 temp784_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp784_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp784_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp784_236 #x0000000000000001))
(assert (= var4796925 temp784_236))
(assert (= temp784_237 #x0000000000000000))
(assert (= var4996927 temp784_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp784_238 #x0000000000000002))
(assert (= var5125763 temp784_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp784_239 #x0000000000000000))
(assert (= var5191324 temp784_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp784_241 #xffffffffffffffff))
(assert (= temp784_240 temp784_241))
(assert (= temp784_242 #x0000000000000001))
(assert (= var66602 temp784_242))
(assert (= temp784_243 #x0000000000000000))
(assert (= temp784_244
   (ite (bvslt var66602 temp784_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp784_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp784_244)))
(assert (= var80523 temp784_245))
(assert (bvslt (ite (bvslt var66602 temp784_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp784_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp784_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp784_247 #x0000000000000000))
(assert (= var80524 temp784_247))
(assert (= temp784_248 #x0000000000000001))
(assert (= var79986 temp784_248))
(model-add temp784_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp784_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp784_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






