(declare-fun temp1265_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1265_2 () (_ BitVec 64))
(declare-fun temp1265_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1265_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1265_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1265_6 () (_ BitVec 64))
(declare-fun temp1265_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_8 () (_ BitVec 64))
(declare-fun temp1265_9 () (_ BitVec 64))
(declare-fun temp1265_10 () (_ BitVec 64))
(declare-fun temp1265_11 () (_ BitVec 64))
(declare-fun temp1265_12 () (_ BitVec 64))
(declare-fun temp1265_13 () (_ BitVec 64))
(declare-fun temp1265_14 () (_ BitVec 64))
(declare-fun temp1265_15 () (_ BitVec 64))
(declare-fun temp1265_16 () (_ BitVec 64))
(declare-fun temp1265_17 () (_ BitVec 64))
(declare-fun temp1265_18 () (_ BitVec 64))
(declare-fun temp1265_19 () (_ BitVec 64))
(declare-fun temp1265_20 () (_ BitVec 64))
(declare-fun temp1265_21 () (_ BitVec 64))
(declare-fun temp1265_22 () (_ BitVec 64))
(declare-fun temp1265_23 () (_ BitVec 64))
(declare-fun temp1265_24 () (_ BitVec 64))
(declare-fun temp1265_25 () (_ BitVec 64))
(declare-fun temp1265_26 () (_ BitVec 64))
(declare-fun temp1265_27 () (_ BitVec 64))
(declare-fun temp1265_28 () (_ BitVec 64))
(declare-fun temp1265_29 () (_ BitVec 64))
(declare-fun temp1265_30 () (_ BitVec 64))
(declare-fun temp1265_31 () (_ BitVec 64))
(declare-fun temp1265_32 () (_ BitVec 64))
(declare-fun temp1265_33 () (_ BitVec 64))
(declare-fun temp1265_34 () (_ BitVec 64))
(declare-fun temp1265_35 () (_ BitVec 64))
(declare-fun temp1265_36 () (_ BitVec 64))
(declare-fun temp1265_37 () (_ BitVec 64))
(declare-fun temp1265_38 () (_ BitVec 64))
(declare-fun temp1265_39 () (_ BitVec 64))
(declare-fun temp1265_40 () (_ BitVec 64))
(declare-fun temp1265_41 () (_ BitVec 64))
(declare-fun temp1265_42 () (_ BitVec 64))
(declare-fun temp1265_43 () (_ BitVec 64))
(declare-fun temp1265_44 () (_ BitVec 64))
(declare-fun temp1265_45 () (_ BitVec 64))
(declare-fun temp1265_46 () (_ BitVec 64))
(declare-fun temp1265_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1265_48 () (_ BitVec 64))
(declare-fun temp1265_49 () (_ BitVec 64))
(declare-fun temp1265_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_51 () (_ BitVec 64))
(declare-fun temp1265_52 () (_ BitVec 64))
(declare-fun temp1265_53 () (_ BitVec 64))
(declare-fun temp1265_54 () (_ BitVec 64))
(declare-fun temp1265_55 () (_ BitVec 64))
(declare-fun temp1265_56 () (_ BitVec 64))
(declare-fun temp1265_57 () (_ BitVec 64))
(declare-fun temp1265_58 () (_ BitVec 64))
(declare-fun temp1265_59 () (_ BitVec 64))
(declare-fun temp1265_60 () (_ BitVec 64))
(declare-fun temp1265_61 () (_ BitVec 64))
(declare-fun temp1265_62 () (_ BitVec 64))
(declare-fun temp1265_63 () (_ BitVec 64))
(declare-fun temp1265_64 () (_ BitVec 64))
(declare-fun temp1265_65 () (_ BitVec 64))
(declare-fun temp1265_66 () (_ BitVec 64))
(declare-fun temp1265_67 () (_ BitVec 64))
(declare-fun temp1265_68 () (_ BitVec 64))
(declare-fun temp1265_69 () (_ BitVec 64))
(declare-fun temp1265_70 () (_ BitVec 64))
(declare-fun temp1265_71 () (_ BitVec 64))
(declare-fun temp1265_72 () (_ BitVec 64))
(declare-fun temp1265_73 () (_ BitVec 64))
(declare-fun temp1265_74 () (_ BitVec 64))
(declare-fun temp1265_75 () (_ BitVec 64))
(declare-fun temp1265_76 () (_ BitVec 64))
(declare-fun temp1265_77 () (_ BitVec 64))
(declare-fun temp1265_78 () (_ BitVec 64))
(declare-fun temp1265_79 () (_ BitVec 64))
(declare-fun temp1265_80 () (_ BitVec 64))
(declare-fun temp1265_81 () (_ BitVec 64))
(declare-fun temp1265_82 () (_ BitVec 64))
(declare-fun temp1265_83 () (_ BitVec 64))
(declare-fun temp1265_84 () (_ BitVec 64))
(declare-fun temp1265_85 () (_ BitVec 64))
(declare-fun temp1265_86 () (_ BitVec 64))
(declare-fun temp1265_87 () (_ BitVec 64))
(declare-fun temp1265_88 () (_ BitVec 64))
(declare-fun temp1265_89 () (_ BitVec 64))
(declare-fun temp1265_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1265_91 () (_ BitVec 64))
(declare-fun temp1265_92 () (_ BitVec 64))
(declare-fun temp1265_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_94 () (_ BitVec 64))
(declare-fun temp1265_95 () (_ BitVec 64))
(declare-fun temp1265_96 () (_ BitVec 64))
(declare-fun temp1265_97 () (_ BitVec 64))
(declare-fun temp1265_98 () (_ BitVec 64))
(declare-fun temp1265_99 () (_ BitVec 64))
(declare-fun temp1265_100 () (_ BitVec 64))
(declare-fun temp1265_101 () (_ BitVec 64))
(declare-fun temp1265_102 () (_ BitVec 64))
(declare-fun temp1265_103 () (_ BitVec 64))
(declare-fun temp1265_104 () (_ BitVec 64))
(declare-fun temp1265_105 () (_ BitVec 64))
(declare-fun temp1265_106 () (_ BitVec 64))
(declare-fun temp1265_107 () (_ BitVec 64))
(declare-fun temp1265_108 () (_ BitVec 64))
(declare-fun temp1265_109 () (_ BitVec 64))
(declare-fun temp1265_110 () (_ BitVec 64))
(declare-fun temp1265_111 () (_ BitVec 64))
(declare-fun temp1265_112 () (_ BitVec 64))
(declare-fun temp1265_113 () (_ BitVec 64))
(declare-fun temp1265_114 () (_ BitVec 64))
(declare-fun temp1265_115 () (_ BitVec 64))
(declare-fun temp1265_116 () (_ BitVec 64))
(declare-fun temp1265_117 () (_ BitVec 64))
(declare-fun temp1265_118 () (_ BitVec 64))
(declare-fun temp1265_119 () (_ BitVec 64))
(declare-fun temp1265_120 () (_ BitVec 64))
(declare-fun temp1265_121 () (_ BitVec 64))
(declare-fun temp1265_122 () (_ BitVec 64))
(declare-fun temp1265_123 () (_ BitVec 64))
(declare-fun temp1265_124 () (_ BitVec 64))
(declare-fun temp1265_125 () (_ BitVec 64))
(declare-fun temp1265_126 () (_ BitVec 64))
(declare-fun temp1265_127 () (_ BitVec 64))
(declare-fun temp1265_128 () (_ BitVec 64))
(declare-fun temp1265_129 () (_ BitVec 64))
(declare-fun temp1265_130 () (_ BitVec 64))
(declare-fun temp1265_131 () (_ BitVec 64))
(declare-fun temp1265_132 () (_ BitVec 64))
(declare-fun temp1265_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1265_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1265_135 () (_ BitVec 64))
(declare-fun temp1265_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1265_137 () (_ BitVec 64))
(declare-fun temp1265_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_139 () (_ BitVec 64))
(declare-fun temp1265_140 () (_ BitVec 64))
(declare-fun temp1265_141 () (_ BitVec 64))
(declare-fun temp1265_142 () (_ BitVec 64))
(declare-fun temp1265_143 () (_ BitVec 64))
(declare-fun temp1265_144 () (_ BitVec 64))
(declare-fun temp1265_145 () (_ BitVec 64))
(declare-fun temp1265_146 () (_ BitVec 64))
(declare-fun temp1265_147 () (_ BitVec 64))
(declare-fun temp1265_148 () (_ BitVec 64))
(declare-fun temp1265_149 () (_ BitVec 64))
(declare-fun temp1265_150 () (_ BitVec 64))
(declare-fun temp1265_151 () (_ BitVec 64))
(declare-fun temp1265_152 () (_ BitVec 64))
(declare-fun temp1265_153 () (_ BitVec 64))
(declare-fun temp1265_154 () (_ BitVec 64))
(declare-fun temp1265_156 () (_ BitVec 64))
(declare-fun temp1265_157 () (_ BitVec 64))
(declare-fun temp1265_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1265_158 () (_ BitVec 64))
(declare-fun temp1265_159 () (_ BitVec 64))
(declare-fun temp1265_161 () (_ BitVec 64))
(declare-fun temp1265_162 () (_ BitVec 64))
(declare-fun temp1265_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1265_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1265_164 () (_ BitVec 64))
(declare-fun temp1265_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1265_166 () (_ BitVec 64))
(declare-fun temp1265_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1265_168 () (_ BitVec 64))
(declare-fun temp1265_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_170 () (_ BitVec 64))
(declare-fun temp1265_171 () (_ BitVec 64))
(declare-fun temp1265_172 () (_ BitVec 64))
(declare-fun temp1265_173 () (_ BitVec 64))
(declare-fun temp1265_174 () (_ BitVec 64))
(declare-fun temp1265_175 () (_ BitVec 64))
(declare-fun temp1265_176 () (_ BitVec 64))
(declare-fun temp1265_177 () (_ BitVec 64))
(declare-fun temp1265_178 () (_ BitVec 64))
(declare-fun temp1265_179 () (_ BitVec 64))
(declare-fun temp1265_180 () (_ BitVec 64))
(declare-fun temp1265_181 () (_ BitVec 64))
(declare-fun temp1265_182 () (_ BitVec 64))
(declare-fun temp1265_183 () (_ BitVec 64))
(declare-fun temp1265_184 () (_ BitVec 64))
(declare-fun temp1265_185 () (_ BitVec 64))
(declare-fun temp1265_186 () (_ BitVec 64))
(declare-fun temp1265_187 () (_ BitVec 64))
(declare-fun temp1265_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1265_189 () (_ BitVec 64))
(declare-fun temp1265_191 () (_ BitVec 64))
(declare-fun temp1265_192 () (_ BitVec 64))
(declare-fun temp1265_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1265_193 () (_ BitVec 64))
(declare-fun temp1265_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1265_195 () (_ BitVec 64))
(declare-fun temp1265_196 () (_ BitVec 64))
(declare-fun temp1265_197 () (_ BitVec 64))
(declare-fun temp1265_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_199 () (_ BitVec 64))
(declare-fun temp1265_200 () (_ BitVec 64))
(declare-fun temp1265_201 () (_ BitVec 64))
(declare-fun temp1265_202 () (_ BitVec 64))
(declare-fun temp1265_203 () (_ BitVec 64))
(declare-fun temp1265_204 () (_ BitVec 64))
(declare-fun temp1265_205 () (_ BitVec 64))
(declare-fun temp1265_206 () (_ BitVec 64))
(declare-fun temp1265_207 () (_ BitVec 64))
(declare-fun temp1265_208 () (_ BitVec 64))
(declare-fun temp1265_209 () (_ BitVec 64))
(declare-fun temp1265_210 () (_ BitVec 64))
(declare-fun temp1265_211 () (_ BitVec 64))
(declare-fun temp1265_212 () (_ BitVec 64))
(declare-fun temp1265_213 () (_ BitVec 64))
(declare-fun temp1265_214 () (_ BitVec 64))
(declare-fun temp1265_215 () (_ BitVec 64))
(declare-fun temp1265_216 () (_ BitVec 64))
(declare-fun temp1265_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1265_218 () (_ BitVec 64))
(declare-fun temp1265_220 () (_ BitVec 64))
(declare-fun temp1265_221 () (_ BitVec 64))
(declare-fun temp1265_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1265_222 () (_ BitVec 64))
(declare-fun temp1265_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1265_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1265_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1265_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1265_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1265_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1265_229 () (_ BitVec 64))
(declare-fun temp1265_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1265_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1265_232 () (_ BitVec 64))
(declare-fun temp1265_233 () (_ BitVec 64))
(declare-fun temp1265_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1265_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1265_236 () (_ BitVec 64))
(declare-fun temp1265_237 () (_ BitVec 64))
(declare-fun var5050621 () (_ BitVec 64))
(declare-fun var5050566 () (_ BitVec 64))
(declare-fun var4996900 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1265_238 () (_ BitVec 64))
(declare-fun var5256835 () (_ BitVec 64))
(declare-fun var5256837 () (_ BitVec 64))
(declare-fun var5322380 () (_ BitVec 64))
(declare-fun var5322381 () (_ BitVec 64))
(declare-fun var5322394 () (_ BitVec 64))
(declare-fun var5322396 () (_ BitVec 64))
(declare-fun temp1265_239 () (_ BitVec 64))
(declare-fun var5322421 () (_ BitVec 64))
(declare-fun var5322423 () (_ BitVec 64))
(declare-fun var5443411 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp1265_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp1265_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp1265_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp1265_244 () (_ BitVec 64))
(declare-fun temp1265_243 () (_ BitVec 64))
(declare-fun temp1265_245 () (_ BitVec 64))
(declare-fun var8261098 () (_ BitVec 64))
(declare-fun temp1265_247 () (_ BitVec 64))
(declare-fun temp1265_246 () (_ BitVec 64))
(declare-fun temp1265_248 () (_ BitVec 64))
(assert (= temp1265_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1265_1)))
(assert (= temp1265_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1265_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_3 #x0000000000000000))
(assert (= var79869 temp1265_3))
(assert (= temp1265_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1265_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_5 #x0000000000000000))
(assert (= var79914 temp1265_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1265_6 #x0000000000000000))
(assert (= temp1265_7 temp1265_6))
(assert (= temp1265_8 (select ARGNAME_padding_NAMEEND_VAL temp1265_7)))
(assert (= temp1265_9 #x0000000000000001))
(assert (= temp1265_10 temp1265_9))
(assert (= temp1265_11 (select ARGNAME_padding_NAMEEND_VAL temp1265_10)))
(assert (= temp1265_12 #x0000000000000002))
(assert (= temp1265_13 temp1265_12))
(assert (= temp1265_14 (select ARGNAME_padding_NAMEEND_VAL temp1265_13)))
(assert (= temp1265_15 #x0000000000000003))
(assert (= temp1265_16 temp1265_15))
(assert (= temp1265_17 (select ARGNAME_padding_NAMEEND_VAL temp1265_16)))
(assert (= temp1265_18 #x0000000000000004))
(assert (= temp1265_19 temp1265_18))
(assert (= temp1265_20 (select ARGNAME_padding_NAMEEND_VAL temp1265_19)))
(assert (= temp1265_21 #x0000000000000005))
(assert (= temp1265_22 temp1265_21))
(assert (= temp1265_23 (select ARGNAME_padding_NAMEEND_VAL temp1265_22)))
(assert (= temp1265_24 #x0000000000000000))
(assert (= temp1265_25 #x0000000000000000))
(assert (= temp1265_26 temp1265_25))
(assert (= temp1265_27 (select ARGNAME_padding_NAMEEND_VAL temp1265_26)))
(assert (= temp1265_28 #x0000000000000000))
(assert (= temp1265_29 #x0000000000000001))
(assert (= temp1265_30 temp1265_29))
(assert (= temp1265_31 (select ARGNAME_padding_NAMEEND_VAL temp1265_30)))
(assert (= temp1265_32 #x0000000000000000))
(assert (= temp1265_33 #x0000000000000002))
(assert (= temp1265_34 temp1265_33))
(assert (= temp1265_35 (select ARGNAME_padding_NAMEEND_VAL temp1265_34)))
(assert (= temp1265_36 #x0000000000000000))
(assert (= temp1265_37 #x0000000000000003))
(assert (= temp1265_38 temp1265_37))
(assert (= temp1265_39 (select ARGNAME_padding_NAMEEND_VAL temp1265_38)))
(assert (= temp1265_40 #x0000000000000000))
(assert (= temp1265_41 #x0000000000000004))
(assert (= temp1265_42 temp1265_41))
(assert (= temp1265_43 (select ARGNAME_padding_NAMEEND_VAL temp1265_42)))
(assert (= temp1265_44 #x0000000000000000))
(assert (= temp1265_45 #x0000000000000005))
(assert (= temp1265_46 temp1265_45))
(assert (= temp1265_47 (select ARGNAME_padding_NAMEEND_VAL temp1265_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1265_27 temp1265_24)
             (bvslt temp1265_31 temp1265_28)
             (bvslt temp1265_35 temp1265_32)
             (bvslt temp1265_39 temp1265_36)
             (bvslt temp1265_43 temp1265_40)
             (bvslt temp1265_47 temp1265_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_48 #x0000000000000000))
(assert (= var1322786 temp1265_48))
(assert (= temp1265_49 #x0000000000000000))
(assert (= temp1265_50 temp1265_49))
(assert (= temp1265_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_50)))
(assert (= temp1265_52 #x0000000000000001))
(assert (= temp1265_53 temp1265_52))
(assert (= temp1265_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_53)))
(assert (= temp1265_55 #x0000000000000002))
(assert (= temp1265_56 temp1265_55))
(assert (= temp1265_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_56)))
(assert (= temp1265_58 #x0000000000000003))
(assert (= temp1265_59 temp1265_58))
(assert (= temp1265_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_59)))
(assert (= temp1265_61 #x0000000000000004))
(assert (= temp1265_62 temp1265_61))
(assert (= temp1265_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_62)))
(assert (= temp1265_64 #x0000000000000005))
(assert (= temp1265_65 temp1265_64))
(assert (= temp1265_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_65)))
(assert (= temp1265_67 #x0000000000000000))
(assert (= temp1265_68 #x0000000000000000))
(assert (= temp1265_69 temp1265_68))
(assert (= temp1265_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_69)))
(assert (= temp1265_71 #x0000000000000000))
(assert (= temp1265_72 #x0000000000000001))
(assert (= temp1265_73 temp1265_72))
(assert (= temp1265_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_73)))
(assert (= temp1265_75 #x0000000000000000))
(assert (= temp1265_76 #x0000000000000002))
(assert (= temp1265_77 temp1265_76))
(assert (= temp1265_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_77)))
(assert (= temp1265_79 #x0000000000000000))
(assert (= temp1265_80 #x0000000000000003))
(assert (= temp1265_81 temp1265_80))
(assert (= temp1265_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_81)))
(assert (= temp1265_83 #x0000000000000000))
(assert (= temp1265_84 #x0000000000000004))
(assert (= temp1265_85 temp1265_84))
(assert (= temp1265_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_85)))
(assert (= temp1265_87 #x0000000000000000))
(assert (= temp1265_88 #x0000000000000005))
(assert (= temp1265_89 temp1265_88))
(assert (= temp1265_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1265_70 temp1265_67)
             (bvslt temp1265_74 temp1265_71)
             (bvslt temp1265_78 temp1265_75)
             (bvslt temp1265_82 temp1265_79)
             (bvslt temp1265_86 temp1265_83)
             (bvslt temp1265_90 temp1265_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_91 #x0000000000000000))
(assert (= var1322797 temp1265_91))
(assert (= temp1265_92 #x0000000000000000))
(assert (= temp1265_93 temp1265_92))
(assert (= temp1265_94 (select ARGNAME_stride_NAMEEND_VAL temp1265_93)))
(assert (= temp1265_95 #x0000000000000001))
(assert (= temp1265_96 temp1265_95))
(assert (= temp1265_97 (select ARGNAME_stride_NAMEEND_VAL temp1265_96)))
(assert (= temp1265_98 #x0000000000000002))
(assert (= temp1265_99 temp1265_98))
(assert (= temp1265_100 (select ARGNAME_stride_NAMEEND_VAL temp1265_99)))
(assert (= temp1265_101 #x0000000000000003))
(assert (= temp1265_102 temp1265_101))
(assert (= temp1265_103 (select ARGNAME_stride_NAMEEND_VAL temp1265_102)))
(assert (= temp1265_104 #x0000000000000004))
(assert (= temp1265_105 temp1265_104))
(assert (= temp1265_106 (select ARGNAME_stride_NAMEEND_VAL temp1265_105)))
(assert (= temp1265_107 #x0000000000000005))
(assert (= temp1265_108 temp1265_107))
(assert (= temp1265_109 (select ARGNAME_stride_NAMEEND_VAL temp1265_108)))
(assert (= temp1265_110 #x0000000000000000))
(assert (= temp1265_111 #x0000000000000000))
(assert (= temp1265_112 temp1265_111))
(assert (= temp1265_113 (select ARGNAME_stride_NAMEEND_VAL temp1265_112)))
(assert (= temp1265_114 #x0000000000000000))
(assert (= temp1265_115 #x0000000000000001))
(assert (= temp1265_116 temp1265_115))
(assert (= temp1265_117 (select ARGNAME_stride_NAMEEND_VAL temp1265_116)))
(assert (= temp1265_118 #x0000000000000000))
(assert (= temp1265_119 #x0000000000000002))
(assert (= temp1265_120 temp1265_119))
(assert (= temp1265_121 (select ARGNAME_stride_NAMEEND_VAL temp1265_120)))
(assert (= temp1265_122 #x0000000000000000))
(assert (= temp1265_123 #x0000000000000003))
(assert (= temp1265_124 temp1265_123))
(assert (= temp1265_125 (select ARGNAME_stride_NAMEEND_VAL temp1265_124)))
(assert (= temp1265_126 #x0000000000000000))
(assert (= temp1265_127 #x0000000000000004))
(assert (= temp1265_128 temp1265_127))
(assert (= temp1265_129 (select ARGNAME_stride_NAMEEND_VAL temp1265_128)))
(assert (= temp1265_130 #x0000000000000000))
(assert (= temp1265_131 #x0000000000000005))
(assert (= temp1265_132 temp1265_131))
(assert (= temp1265_133 (select ARGNAME_stride_NAMEEND_VAL temp1265_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1265_113 temp1265_110)
             (bvsle temp1265_117 temp1265_114)
             (bvsle temp1265_121 temp1265_118)
             (bvsle temp1265_125 temp1265_122)
             (bvsle temp1265_129 temp1265_126)
             (bvsle temp1265_133 temp1265_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_134 #x0000000000000000))
(assert (= var1322807 temp1265_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_135 #x0000000000000001))
(assert (= var1322819 temp1265_135))
(assert (= temp1265_136 #x0000000000000000))
(assert (= var1310898 temp1265_136))
(assert (= temp1265_137 #x0000000000000000))
(assert (= temp1265_138 temp1265_137))
(assert (= temp1265_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_138)))
(assert (= temp1265_140 #x0000000000000001))
(assert (= temp1265_141 temp1265_140))
(assert (= temp1265_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_141)))
(assert (= temp1265_143 #x0000000000000002))
(assert (= temp1265_144 temp1265_143))
(assert (= temp1265_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_144)))
(assert (= temp1265_146 #x0000000000000003))
(assert (= temp1265_147 temp1265_146))
(assert (= temp1265_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_147)))
(assert (= temp1265_149 #x0000000000000004))
(assert (= temp1265_150 temp1265_149))
(assert (= temp1265_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_150)))
(assert (= temp1265_152 #x0000000000000005))
(assert (= temp1265_153 temp1265_152))
(assert (= temp1265_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_153)))
(assert (= temp1265_156 var1310898))
(assert (= temp1265_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_156)))
(assert (= temp1265_155 temp1265_157))
(assert (= var1322852
   (ite (bvslt temp1265_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_158 #x0000000000000000))
(assert (= var1322852 temp1265_158))
(assert (= temp1265_159 #x0000000000000000))
(assert (= var1310898 temp1265_159))
(assert (= temp1265_161 var1310898))
(assert (= temp1265_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_161)))
(assert (= temp1265_160 temp1265_162))
(assert (= var1322874 (bvsmod temp1265_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1265_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1265_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1265_164 #x0000000000000001))
(assert (= var1322875 temp1265_164))
(assert (= temp1265_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1265_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_166 #x0000000000000001))
(assert (= var1322895 temp1265_166))
(assert (= temp1265_167 #x0000000000000001))
(assert (= var1311786 temp1265_167))
(assert (= temp1265_168 #x0000000000000000))
(assert (= temp1265_169 temp1265_168))
(assert (= temp1265_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_169)))
(assert (= temp1265_171 #x0000000000000001))
(assert (= temp1265_172 temp1265_171))
(assert (= temp1265_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_172)))
(assert (= temp1265_174 #x0000000000000002))
(assert (= temp1265_175 temp1265_174))
(assert (= temp1265_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_175)))
(assert (= temp1265_177 #x0000000000000003))
(assert (= temp1265_178 temp1265_177))
(assert (= temp1265_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_178)))
(assert (= temp1265_180 #x0000000000000004))
(assert (= temp1265_181 temp1265_180))
(assert (= temp1265_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_181)))
(assert (= temp1265_183 #x0000000000000005))
(assert (= temp1265_184 temp1265_183))
(assert (= temp1265_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_184)))
(assert (= temp1265_186 #x0000000000000000))
(assert (= temp1265_187
   (ite (bvslt var1311786 temp1265_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1265_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_187)))
(assert (= var1322903 temp1265_188))
(assert (bvslt (ite (bvslt var1311786 temp1265_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1265_189 #x0000000000000001))
(assert (= var1311786 temp1265_189))
(assert (= temp1265_191 var1311786))
(assert (= temp1265_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_191)))
(assert (= temp1265_190 temp1265_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1265_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1265_193 #x0000000000000001))
(assert (= var1322908 temp1265_193))
(assert (= temp1265_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1265_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_195 #x0000000000000001))
(assert (= var1322975 temp1265_195))
(assert (= temp1265_196 #x0000000000000000))
(assert (= var1310898 temp1265_196))
(assert (= temp1265_197 #x0000000000000000))
(assert (= temp1265_198 temp1265_197))
(assert (= temp1265_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1265_198)))
(assert (= temp1265_200 #x0000000000000001))
(assert (= temp1265_201 temp1265_200))
(assert (= temp1265_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1265_201)))
(assert (= temp1265_203 #x0000000000000002))
(assert (= temp1265_204 temp1265_203))
(assert (= temp1265_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1265_204)))
(assert (= temp1265_206 #x0000000000000003))
(assert (= temp1265_207 temp1265_206))
(assert (= temp1265_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1265_207)))
(assert (= temp1265_209 #x0000000000000004))
(assert (= temp1265_210 temp1265_209))
(assert (= temp1265_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1265_210)))
(assert (= temp1265_212 #x0000000000000005))
(assert (= temp1265_213 temp1265_212))
(assert (= temp1265_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1265_213)))
(assert (= temp1265_215 #x0000000000000000))
(assert (= temp1265_216
   (ite (bvslt var1310898 temp1265_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1265_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1265_216)))
(assert (= var1322977 temp1265_217))
(assert (bvslt (ite (bvslt var1310898 temp1265_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1265_218 #x0000000000000000))
(assert (= var1310898 temp1265_218))
(assert (= temp1265_220 var1310898))
(assert (= temp1265_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_220)))
(assert (= temp1265_219 temp1265_221))
(assert (= var1322980
   (ite (= var1322977 temp1265_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1265_222 #x0000000000000001))
(assert (= var1322980 temp1265_222))
(assert (= temp1265_223 #x0000000000000002))
(assert (= var1848169 temp1265_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1265_225 #x0000000000000001))
(assert (= var1323065 temp1265_225))
(assert (= temp1265_226 #x0000000000000001))
(assert (= var3486735 temp1265_226))
(assert (= temp1265_227 #x0000000000000001))
(assert (= var3814415 temp1265_227))
(assert (= temp1265_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1265_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_229 #x0000000000000001))
(assert (= var79986 temp1265_229))
(assert (= temp1265_230 #x0000000000000001))
(assert (= var80116 temp1265_230))
(assert (= var4796905 var80116))
(assert (= temp1265_231 #x0000000000000000))
(assert (= var4784306 temp1265_231))
(assert (= temp1265_232 #x0000000000000000))
(assert (= temp1265_233
   (ite (bvslt var4784306 temp1265_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1265_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_233)))
(assert (= var4796924 temp1265_234))
(assert (bvslt (ite (bvslt var4784306 temp1265_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1265_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1265_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1265_236 #x0000000000000001))
(assert (= var4796925 temp1265_236))
(assert (= temp1265_237 #x0000000000000000))
(assert (= var5050621 temp1265_237))
(assert (= var5050566 var5050621))
(assert (= var4996900 var5050566))
(assert (= var4996927 var4996900))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1265_238 #x0000000000000002))
(assert (= var5256835 temp1265_238))
(assert (= var5256837 (bvsub ARGNAME_weight_NAMEEND_DIM var5256835)))
(assert (= var5322380 var5256835))
(assert (= var5322381 var5256837))
(assert (= var5322394 (bvadd var5322381 var5322380)))
(assert (= var5322396
   (ite (bvsgt var5322394 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_239 #x0000000000000000))
(assert (= var5322396 temp1265_239))
(assert (= var5322421 var5322380))
(assert (= var5322423 var5322381))
(assert (= var5443411 var5322423))
(assert (= var5845392 var80129))
(assert (= temp1265_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp1265_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp1265_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp1265_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_244 #x0000000000000001))
(assert (= temp1265_243 temp1265_244))
(assert (= temp1265_245 #x0000000000000001))
(assert (= var8261098 temp1265_245))
(assert (= temp1265_247 #xffffffffffffffff))
(assert (= temp1265_246 temp1265_247))
(assert (= temp1265_248 #x0000000000000001))
(assert (= var79986 temp1265_248))
(model-add temp1265_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1265_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1265_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






