(declare-fun temp1228_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1228_2 () (_ BitVec 64))
(declare-fun temp1228_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1228_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1228_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1228_6 () (_ BitVec 64))
(declare-fun temp1228_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1228_8 () (_ BitVec 64))
(declare-fun temp1228_9 () (_ BitVec 64))
(declare-fun temp1228_10 () (_ BitVec 64))
(declare-fun temp1228_11 () (_ BitVec 64))
(declare-fun temp1228_12 () (_ BitVec 64))
(declare-fun temp1228_13 () (_ BitVec 64))
(declare-fun temp1228_14 () (_ BitVec 64))
(declare-fun temp1228_15 () (_ BitVec 64))
(declare-fun temp1228_16 () (_ BitVec 64))
(declare-fun temp1228_17 () (_ BitVec 64))
(declare-fun temp1228_18 () (_ BitVec 64))
(declare-fun temp1228_19 () (_ BitVec 64))
(declare-fun temp1228_20 () (_ BitVec 64))
(declare-fun temp1228_21 () (_ BitVec 64))
(declare-fun temp1228_22 () (_ BitVec 64))
(declare-fun temp1228_23 () (_ BitVec 64))
(declare-fun temp1228_24 () (_ BitVec 64))
(declare-fun temp1228_25 () (_ BitVec 64))
(declare-fun temp1228_26 () (_ BitVec 64))
(declare-fun temp1228_27 () (_ BitVec 64))
(declare-fun temp1228_28 () (_ BitVec 64))
(declare-fun temp1228_29 () (_ BitVec 64))
(declare-fun temp1228_30 () (_ BitVec 64))
(declare-fun temp1228_31 () (_ BitVec 64))
(declare-fun temp1228_32 () (_ BitVec 64))
(declare-fun temp1228_33 () (_ BitVec 64))
(declare-fun temp1228_34 () (_ BitVec 64))
(declare-fun temp1228_35 () (_ BitVec 64))
(declare-fun temp1228_36 () (_ BitVec 64))
(declare-fun temp1228_37 () (_ BitVec 64))
(declare-fun temp1228_38 () (_ BitVec 64))
(declare-fun temp1228_39 () (_ BitVec 64))
(declare-fun temp1228_40 () (_ BitVec 64))
(declare-fun temp1228_41 () (_ BitVec 64))
(declare-fun temp1228_42 () (_ BitVec 64))
(declare-fun temp1228_43 () (_ BitVec 64))
(declare-fun temp1228_44 () (_ BitVec 64))
(declare-fun temp1228_45 () (_ BitVec 64))
(declare-fun temp1228_46 () (_ BitVec 64))
(declare-fun temp1228_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1228_48 () (_ BitVec 64))
(declare-fun temp1228_49 () (_ BitVec 64))
(declare-fun temp1228_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1228_51 () (_ BitVec 64))
(declare-fun temp1228_52 () (_ BitVec 64))
(declare-fun temp1228_53 () (_ BitVec 64))
(declare-fun temp1228_54 () (_ BitVec 64))
(declare-fun temp1228_55 () (_ BitVec 64))
(declare-fun temp1228_56 () (_ BitVec 64))
(declare-fun temp1228_57 () (_ BitVec 64))
(declare-fun temp1228_58 () (_ BitVec 64))
(declare-fun temp1228_59 () (_ BitVec 64))
(declare-fun temp1228_60 () (_ BitVec 64))
(declare-fun temp1228_61 () (_ BitVec 64))
(declare-fun temp1228_62 () (_ BitVec 64))
(declare-fun temp1228_63 () (_ BitVec 64))
(declare-fun temp1228_64 () (_ BitVec 64))
(declare-fun temp1228_65 () (_ BitVec 64))
(declare-fun temp1228_66 () (_ BitVec 64))
(declare-fun temp1228_67 () (_ BitVec 64))
(declare-fun temp1228_68 () (_ BitVec 64))
(declare-fun temp1228_69 () (_ BitVec 64))
(declare-fun temp1228_70 () (_ BitVec 64))
(declare-fun temp1228_71 () (_ BitVec 64))
(declare-fun temp1228_72 () (_ BitVec 64))
(declare-fun temp1228_73 () (_ BitVec 64))
(declare-fun temp1228_74 () (_ BitVec 64))
(declare-fun temp1228_75 () (_ BitVec 64))
(declare-fun temp1228_76 () (_ BitVec 64))
(declare-fun temp1228_77 () (_ BitVec 64))
(declare-fun temp1228_78 () (_ BitVec 64))
(declare-fun temp1228_79 () (_ BitVec 64))
(declare-fun temp1228_80 () (_ BitVec 64))
(declare-fun temp1228_81 () (_ BitVec 64))
(declare-fun temp1228_82 () (_ BitVec 64))
(declare-fun temp1228_83 () (_ BitVec 64))
(declare-fun temp1228_84 () (_ BitVec 64))
(declare-fun temp1228_85 () (_ BitVec 64))
(declare-fun temp1228_86 () (_ BitVec 64))
(declare-fun temp1228_87 () (_ BitVec 64))
(declare-fun temp1228_88 () (_ BitVec 64))
(declare-fun temp1228_89 () (_ BitVec 64))
(declare-fun temp1228_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1228_91 () (_ BitVec 64))
(declare-fun temp1228_92 () (_ BitVec 64))
(declare-fun temp1228_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1228_94 () (_ BitVec 64))
(declare-fun temp1228_95 () (_ BitVec 64))
(declare-fun temp1228_96 () (_ BitVec 64))
(declare-fun temp1228_97 () (_ BitVec 64))
(declare-fun temp1228_98 () (_ BitVec 64))
(declare-fun temp1228_99 () (_ BitVec 64))
(declare-fun temp1228_100 () (_ BitVec 64))
(declare-fun temp1228_101 () (_ BitVec 64))
(declare-fun temp1228_102 () (_ BitVec 64))
(declare-fun temp1228_103 () (_ BitVec 64))
(declare-fun temp1228_104 () (_ BitVec 64))
(declare-fun temp1228_105 () (_ BitVec 64))
(declare-fun temp1228_106 () (_ BitVec 64))
(declare-fun temp1228_107 () (_ BitVec 64))
(declare-fun temp1228_108 () (_ BitVec 64))
(declare-fun temp1228_109 () (_ BitVec 64))
(declare-fun temp1228_110 () (_ BitVec 64))
(declare-fun temp1228_111 () (_ BitVec 64))
(declare-fun temp1228_112 () (_ BitVec 64))
(declare-fun temp1228_113 () (_ BitVec 64))
(declare-fun temp1228_114 () (_ BitVec 64))
(declare-fun temp1228_115 () (_ BitVec 64))
(declare-fun temp1228_116 () (_ BitVec 64))
(declare-fun temp1228_117 () (_ BitVec 64))
(declare-fun temp1228_118 () (_ BitVec 64))
(declare-fun temp1228_119 () (_ BitVec 64))
(declare-fun temp1228_120 () (_ BitVec 64))
(declare-fun temp1228_121 () (_ BitVec 64))
(declare-fun temp1228_122 () (_ BitVec 64))
(declare-fun temp1228_123 () (_ BitVec 64))
(declare-fun temp1228_124 () (_ BitVec 64))
(declare-fun temp1228_125 () (_ BitVec 64))
(declare-fun temp1228_126 () (_ BitVec 64))
(declare-fun temp1228_127 () (_ BitVec 64))
(declare-fun temp1228_128 () (_ BitVec 64))
(declare-fun temp1228_129 () (_ BitVec 64))
(declare-fun temp1228_130 () (_ BitVec 64))
(declare-fun temp1228_131 () (_ BitVec 64))
(declare-fun temp1228_132 () (_ BitVec 64))
(declare-fun temp1228_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1228_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1228_135 () (_ BitVec 64))
(declare-fun temp1228_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1228_137 () (_ BitVec 64))
(declare-fun temp1228_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1228_139 () (_ BitVec 64))
(declare-fun temp1228_140 () (_ BitVec 64))
(declare-fun temp1228_141 () (_ BitVec 64))
(declare-fun temp1228_142 () (_ BitVec 64))
(declare-fun temp1228_143 () (_ BitVec 64))
(declare-fun temp1228_144 () (_ BitVec 64))
(declare-fun temp1228_145 () (_ BitVec 64))
(declare-fun temp1228_146 () (_ BitVec 64))
(declare-fun temp1228_147 () (_ BitVec 64))
(declare-fun temp1228_148 () (_ BitVec 64))
(declare-fun temp1228_149 () (_ BitVec 64))
(declare-fun temp1228_150 () (_ BitVec 64))
(declare-fun temp1228_151 () (_ BitVec 64))
(declare-fun temp1228_152 () (_ BitVec 64))
(declare-fun temp1228_153 () (_ BitVec 64))
(declare-fun temp1228_154 () (_ BitVec 64))
(declare-fun temp1228_156 () (_ BitVec 64))
(declare-fun temp1228_157 () (_ BitVec 64))
(declare-fun temp1228_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1228_158 () (_ BitVec 64))
(declare-fun temp1228_159 () (_ BitVec 64))
(declare-fun temp1228_161 () (_ BitVec 64))
(declare-fun temp1228_162 () (_ BitVec 64))
(declare-fun temp1228_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1228_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1228_164 () (_ BitVec 64))
(declare-fun temp1228_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1228_166 () (_ BitVec 64))
(declare-fun temp1228_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1228_168 () (_ BitVec 64))
(declare-fun temp1228_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1228_170 () (_ BitVec 64))
(declare-fun temp1228_171 () (_ BitVec 64))
(declare-fun temp1228_172 () (_ BitVec 64))
(declare-fun temp1228_173 () (_ BitVec 64))
(declare-fun temp1228_174 () (_ BitVec 64))
(declare-fun temp1228_175 () (_ BitVec 64))
(declare-fun temp1228_176 () (_ BitVec 64))
(declare-fun temp1228_177 () (_ BitVec 64))
(declare-fun temp1228_178 () (_ BitVec 64))
(declare-fun temp1228_179 () (_ BitVec 64))
(declare-fun temp1228_180 () (_ BitVec 64))
(declare-fun temp1228_181 () (_ BitVec 64))
(declare-fun temp1228_182 () (_ BitVec 64))
(declare-fun temp1228_183 () (_ BitVec 64))
(declare-fun temp1228_184 () (_ BitVec 64))
(declare-fun temp1228_185 () (_ BitVec 64))
(declare-fun temp1228_186 () (_ BitVec 64))
(declare-fun temp1228_187 () (_ BitVec 64))
(declare-fun temp1228_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1228_189 () (_ BitVec 64))
(declare-fun temp1228_191 () (_ BitVec 64))
(declare-fun temp1228_192 () (_ BitVec 64))
(declare-fun temp1228_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1228_193 () (_ BitVec 64))
(declare-fun temp1228_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1228_195 () (_ BitVec 64))
(declare-fun temp1228_196 () (_ BitVec 64))
(declare-fun temp1228_197 () (_ BitVec 64))
(declare-fun temp1228_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1228_199 () (_ BitVec 64))
(declare-fun temp1228_200 () (_ BitVec 64))
(declare-fun temp1228_201 () (_ BitVec 64))
(declare-fun temp1228_202 () (_ BitVec 64))
(declare-fun temp1228_203 () (_ BitVec 64))
(declare-fun temp1228_204 () (_ BitVec 64))
(declare-fun temp1228_205 () (_ BitVec 64))
(declare-fun temp1228_206 () (_ BitVec 64))
(declare-fun temp1228_207 () (_ BitVec 64))
(declare-fun temp1228_208 () (_ BitVec 64))
(declare-fun temp1228_209 () (_ BitVec 64))
(declare-fun temp1228_210 () (_ BitVec 64))
(declare-fun temp1228_211 () (_ BitVec 64))
(declare-fun temp1228_212 () (_ BitVec 64))
(declare-fun temp1228_213 () (_ BitVec 64))
(declare-fun temp1228_214 () (_ BitVec 64))
(declare-fun temp1228_215 () (_ BitVec 64))
(declare-fun temp1228_216 () (_ BitVec 64))
(declare-fun temp1228_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1228_218 () (_ BitVec 64))
(declare-fun temp1228_220 () (_ BitVec 64))
(declare-fun temp1228_221 () (_ BitVec 64))
(declare-fun temp1228_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1228_222 () (_ BitVec 64))
(declare-fun temp1228_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1228_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1228_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1228_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1228_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1228_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1228_229 () (_ BitVec 64))
(declare-fun temp1228_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1228_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1228_232 () (_ BitVec 64))
(declare-fun temp1228_233 () (_ BitVec 64))
(declare-fun temp1228_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1228_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1228_236 () (_ BitVec 64))
(declare-fun temp1228_237 () (_ BitVec 64))
(declare-fun var5050621 () (_ BitVec 64))
(declare-fun var5050566 () (_ BitVec 64))
(declare-fun var4996900 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1228_238 () (_ BitVec 64))
(declare-fun var5256835 () (_ BitVec 64))
(declare-fun var5256837 () (_ BitVec 64))
(declare-fun var5322380 () (_ BitVec 64))
(declare-fun var5322381 () (_ BitVec 64))
(declare-fun var5322394 () (_ BitVec 64))
(declare-fun var5322396 () (_ BitVec 64))
(declare-fun temp1228_239 () (_ BitVec 64))
(declare-fun var5322421 () (_ BitVec 64))
(declare-fun var5322423 () (_ BitVec 64))
(declare-fun var5443411 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp1228_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp1228_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp1228_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6766412 () (_ BitVec 64))
(declare-fun var6766413 () (_ BitVec 64))
(declare-fun var6766414 () (_ BitVec 64))
(declare-fun temp1228_244 () (_ BitVec 64))
(declare-fun temp1228_243 () (_ BitVec 64))
(declare-fun temp1228_245 () (_ BitVec 64))
(declare-fun var8064490 () (_ BitVec 64))
(declare-fun temp1228_247 () (_ BitVec 64))
(declare-fun temp1228_246 () (_ BitVec 64))
(declare-fun temp1228_248 () (_ BitVec 64))
(assert (= temp1228_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1228_1)))
(assert (= temp1228_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1228_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_3 #x0000000000000000))
(assert (= var79869 temp1228_3))
(assert (= temp1228_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1228_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_5 #x0000000000000000))
(assert (= var79914 temp1228_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1228_6 #x0000000000000000))
(assert (= temp1228_7 temp1228_6))
(assert (= temp1228_8 (select ARGNAME_padding_NAMEEND_VAL temp1228_7)))
(assert (= temp1228_9 #x0000000000000001))
(assert (= temp1228_10 temp1228_9))
(assert (= temp1228_11 (select ARGNAME_padding_NAMEEND_VAL temp1228_10)))
(assert (= temp1228_12 #x0000000000000002))
(assert (= temp1228_13 temp1228_12))
(assert (= temp1228_14 (select ARGNAME_padding_NAMEEND_VAL temp1228_13)))
(assert (= temp1228_15 #x0000000000000003))
(assert (= temp1228_16 temp1228_15))
(assert (= temp1228_17 (select ARGNAME_padding_NAMEEND_VAL temp1228_16)))
(assert (= temp1228_18 #x0000000000000004))
(assert (= temp1228_19 temp1228_18))
(assert (= temp1228_20 (select ARGNAME_padding_NAMEEND_VAL temp1228_19)))
(assert (= temp1228_21 #x0000000000000005))
(assert (= temp1228_22 temp1228_21))
(assert (= temp1228_23 (select ARGNAME_padding_NAMEEND_VAL temp1228_22)))
(assert (= temp1228_24 #x0000000000000000))
(assert (= temp1228_25 #x0000000000000000))
(assert (= temp1228_26 temp1228_25))
(assert (= temp1228_27 (select ARGNAME_padding_NAMEEND_VAL temp1228_26)))
(assert (= temp1228_28 #x0000000000000000))
(assert (= temp1228_29 #x0000000000000001))
(assert (= temp1228_30 temp1228_29))
(assert (= temp1228_31 (select ARGNAME_padding_NAMEEND_VAL temp1228_30)))
(assert (= temp1228_32 #x0000000000000000))
(assert (= temp1228_33 #x0000000000000002))
(assert (= temp1228_34 temp1228_33))
(assert (= temp1228_35 (select ARGNAME_padding_NAMEEND_VAL temp1228_34)))
(assert (= temp1228_36 #x0000000000000000))
(assert (= temp1228_37 #x0000000000000003))
(assert (= temp1228_38 temp1228_37))
(assert (= temp1228_39 (select ARGNAME_padding_NAMEEND_VAL temp1228_38)))
(assert (= temp1228_40 #x0000000000000000))
(assert (= temp1228_41 #x0000000000000004))
(assert (= temp1228_42 temp1228_41))
(assert (= temp1228_43 (select ARGNAME_padding_NAMEEND_VAL temp1228_42)))
(assert (= temp1228_44 #x0000000000000000))
(assert (= temp1228_45 #x0000000000000005))
(assert (= temp1228_46 temp1228_45))
(assert (= temp1228_47 (select ARGNAME_padding_NAMEEND_VAL temp1228_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1228_27 temp1228_24)
             (bvslt temp1228_31 temp1228_28)
             (bvslt temp1228_35 temp1228_32)
             (bvslt temp1228_39 temp1228_36)
             (bvslt temp1228_43 temp1228_40)
             (bvslt temp1228_47 temp1228_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_48 #x0000000000000000))
(assert (= var1322786 temp1228_48))
(assert (= temp1228_49 #x0000000000000000))
(assert (= temp1228_50 temp1228_49))
(assert (= temp1228_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_50)))
(assert (= temp1228_52 #x0000000000000001))
(assert (= temp1228_53 temp1228_52))
(assert (= temp1228_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_53)))
(assert (= temp1228_55 #x0000000000000002))
(assert (= temp1228_56 temp1228_55))
(assert (= temp1228_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_56)))
(assert (= temp1228_58 #x0000000000000003))
(assert (= temp1228_59 temp1228_58))
(assert (= temp1228_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_59)))
(assert (= temp1228_61 #x0000000000000004))
(assert (= temp1228_62 temp1228_61))
(assert (= temp1228_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_62)))
(assert (= temp1228_64 #x0000000000000005))
(assert (= temp1228_65 temp1228_64))
(assert (= temp1228_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_65)))
(assert (= temp1228_67 #x0000000000000000))
(assert (= temp1228_68 #x0000000000000000))
(assert (= temp1228_69 temp1228_68))
(assert (= temp1228_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_69)))
(assert (= temp1228_71 #x0000000000000000))
(assert (= temp1228_72 #x0000000000000001))
(assert (= temp1228_73 temp1228_72))
(assert (= temp1228_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_73)))
(assert (= temp1228_75 #x0000000000000000))
(assert (= temp1228_76 #x0000000000000002))
(assert (= temp1228_77 temp1228_76))
(assert (= temp1228_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_77)))
(assert (= temp1228_79 #x0000000000000000))
(assert (= temp1228_80 #x0000000000000003))
(assert (= temp1228_81 temp1228_80))
(assert (= temp1228_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_81)))
(assert (= temp1228_83 #x0000000000000000))
(assert (= temp1228_84 #x0000000000000004))
(assert (= temp1228_85 temp1228_84))
(assert (= temp1228_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_85)))
(assert (= temp1228_87 #x0000000000000000))
(assert (= temp1228_88 #x0000000000000005))
(assert (= temp1228_89 temp1228_88))
(assert (= temp1228_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1228_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1228_70 temp1228_67)
             (bvslt temp1228_74 temp1228_71)
             (bvslt temp1228_78 temp1228_75)
             (bvslt temp1228_82 temp1228_79)
             (bvslt temp1228_86 temp1228_83)
             (bvslt temp1228_90 temp1228_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_91 #x0000000000000000))
(assert (= var1322797 temp1228_91))
(assert (= temp1228_92 #x0000000000000000))
(assert (= temp1228_93 temp1228_92))
(assert (= temp1228_94 (select ARGNAME_stride_NAMEEND_VAL temp1228_93)))
(assert (= temp1228_95 #x0000000000000001))
(assert (= temp1228_96 temp1228_95))
(assert (= temp1228_97 (select ARGNAME_stride_NAMEEND_VAL temp1228_96)))
(assert (= temp1228_98 #x0000000000000002))
(assert (= temp1228_99 temp1228_98))
(assert (= temp1228_100 (select ARGNAME_stride_NAMEEND_VAL temp1228_99)))
(assert (= temp1228_101 #x0000000000000003))
(assert (= temp1228_102 temp1228_101))
(assert (= temp1228_103 (select ARGNAME_stride_NAMEEND_VAL temp1228_102)))
(assert (= temp1228_104 #x0000000000000004))
(assert (= temp1228_105 temp1228_104))
(assert (= temp1228_106 (select ARGNAME_stride_NAMEEND_VAL temp1228_105)))
(assert (= temp1228_107 #x0000000000000005))
(assert (= temp1228_108 temp1228_107))
(assert (= temp1228_109 (select ARGNAME_stride_NAMEEND_VAL temp1228_108)))
(assert (= temp1228_110 #x0000000000000000))
(assert (= temp1228_111 #x0000000000000000))
(assert (= temp1228_112 temp1228_111))
(assert (= temp1228_113 (select ARGNAME_stride_NAMEEND_VAL temp1228_112)))
(assert (= temp1228_114 #x0000000000000000))
(assert (= temp1228_115 #x0000000000000001))
(assert (= temp1228_116 temp1228_115))
(assert (= temp1228_117 (select ARGNAME_stride_NAMEEND_VAL temp1228_116)))
(assert (= temp1228_118 #x0000000000000000))
(assert (= temp1228_119 #x0000000000000002))
(assert (= temp1228_120 temp1228_119))
(assert (= temp1228_121 (select ARGNAME_stride_NAMEEND_VAL temp1228_120)))
(assert (= temp1228_122 #x0000000000000000))
(assert (= temp1228_123 #x0000000000000003))
(assert (= temp1228_124 temp1228_123))
(assert (= temp1228_125 (select ARGNAME_stride_NAMEEND_VAL temp1228_124)))
(assert (= temp1228_126 #x0000000000000000))
(assert (= temp1228_127 #x0000000000000004))
(assert (= temp1228_128 temp1228_127))
(assert (= temp1228_129 (select ARGNAME_stride_NAMEEND_VAL temp1228_128)))
(assert (= temp1228_130 #x0000000000000000))
(assert (= temp1228_131 #x0000000000000005))
(assert (= temp1228_132 temp1228_131))
(assert (= temp1228_133 (select ARGNAME_stride_NAMEEND_VAL temp1228_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1228_113 temp1228_110)
             (bvsle temp1228_117 temp1228_114)
             (bvsle temp1228_121 temp1228_118)
             (bvsle temp1228_125 temp1228_122)
             (bvsle temp1228_129 temp1228_126)
             (bvsle temp1228_133 temp1228_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_134 #x0000000000000000))
(assert (= var1322807 temp1228_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_135 #x0000000000000001))
(assert (= var1322819 temp1228_135))
(assert (= temp1228_136 #x0000000000000000))
(assert (= var1310898 temp1228_136))
(assert (= temp1228_137 #x0000000000000000))
(assert (= temp1228_138 temp1228_137))
(assert (= temp1228_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_138)))
(assert (= temp1228_140 #x0000000000000001))
(assert (= temp1228_141 temp1228_140))
(assert (= temp1228_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_141)))
(assert (= temp1228_143 #x0000000000000002))
(assert (= temp1228_144 temp1228_143))
(assert (= temp1228_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_144)))
(assert (= temp1228_146 #x0000000000000003))
(assert (= temp1228_147 temp1228_146))
(assert (= temp1228_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_147)))
(assert (= temp1228_149 #x0000000000000004))
(assert (= temp1228_150 temp1228_149))
(assert (= temp1228_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_150)))
(assert (= temp1228_152 #x0000000000000005))
(assert (= temp1228_153 temp1228_152))
(assert (= temp1228_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_153)))
(assert (= temp1228_156 var1310898))
(assert (= temp1228_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_156)))
(assert (= temp1228_155 temp1228_157))
(assert (= var1322852
   (ite (bvslt temp1228_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_158 #x0000000000000000))
(assert (= var1322852 temp1228_158))
(assert (= temp1228_159 #x0000000000000000))
(assert (= var1310898 temp1228_159))
(assert (= temp1228_161 var1310898))
(assert (= temp1228_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_161)))
(assert (= temp1228_160 temp1228_162))
(assert (= var1322874 (bvsmod temp1228_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1228_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1228_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1228_164 #x0000000000000001))
(assert (= var1322875 temp1228_164))
(assert (= temp1228_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1228_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_166 #x0000000000000001))
(assert (= var1322895 temp1228_166))
(assert (= temp1228_167 #x0000000000000001))
(assert (= var1311786 temp1228_167))
(assert (= temp1228_168 #x0000000000000000))
(assert (= temp1228_169 temp1228_168))
(assert (= temp1228_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1228_169)))
(assert (= temp1228_171 #x0000000000000001))
(assert (= temp1228_172 temp1228_171))
(assert (= temp1228_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1228_172)))
(assert (= temp1228_174 #x0000000000000002))
(assert (= temp1228_175 temp1228_174))
(assert (= temp1228_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1228_175)))
(assert (= temp1228_177 #x0000000000000003))
(assert (= temp1228_178 temp1228_177))
(assert (= temp1228_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1228_178)))
(assert (= temp1228_180 #x0000000000000004))
(assert (= temp1228_181 temp1228_180))
(assert (= temp1228_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1228_181)))
(assert (= temp1228_183 #x0000000000000005))
(assert (= temp1228_184 temp1228_183))
(assert (= temp1228_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1228_184)))
(assert (= temp1228_186 #x0000000000000000))
(assert (= temp1228_187
   (ite (bvslt var1311786 temp1228_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1228_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1228_187)))
(assert (= var1322903 temp1228_188))
(assert (bvslt (ite (bvslt var1311786 temp1228_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1228_189 #x0000000000000001))
(assert (= var1311786 temp1228_189))
(assert (= temp1228_191 var1311786))
(assert (= temp1228_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_191)))
(assert (= temp1228_190 temp1228_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1228_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1228_193 #x0000000000000001))
(assert (= var1322908 temp1228_193))
(assert (= temp1228_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1228_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_195 #x0000000000000001))
(assert (= var1322975 temp1228_195))
(assert (= temp1228_196 #x0000000000000000))
(assert (= var1310898 temp1228_196))
(assert (= temp1228_197 #x0000000000000000))
(assert (= temp1228_198 temp1228_197))
(assert (= temp1228_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1228_198)))
(assert (= temp1228_200 #x0000000000000001))
(assert (= temp1228_201 temp1228_200))
(assert (= temp1228_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1228_201)))
(assert (= temp1228_203 #x0000000000000002))
(assert (= temp1228_204 temp1228_203))
(assert (= temp1228_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1228_204)))
(assert (= temp1228_206 #x0000000000000003))
(assert (= temp1228_207 temp1228_206))
(assert (= temp1228_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1228_207)))
(assert (= temp1228_209 #x0000000000000004))
(assert (= temp1228_210 temp1228_209))
(assert (= temp1228_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1228_210)))
(assert (= temp1228_212 #x0000000000000005))
(assert (= temp1228_213 temp1228_212))
(assert (= temp1228_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1228_213)))
(assert (= temp1228_215 #x0000000000000000))
(assert (= temp1228_216
   (ite (bvslt var1310898 temp1228_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1228_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1228_216)))
(assert (= var1322977 temp1228_217))
(assert (bvslt (ite (bvslt var1310898 temp1228_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1228_218 #x0000000000000000))
(assert (= var1310898 temp1228_218))
(assert (= temp1228_220 var1310898))
(assert (= temp1228_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1228_220)))
(assert (= temp1228_219 temp1228_221))
(assert (= var1322980
   (ite (= var1322977 temp1228_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1228_222 #x0000000000000001))
(assert (= var1322980 temp1228_222))
(assert (= temp1228_223 #x0000000000000002))
(assert (= var1848169 temp1228_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1228_225 #x0000000000000001))
(assert (= var1323065 temp1228_225))
(assert (= temp1228_226 #x0000000000000001))
(assert (= var3486735 temp1228_226))
(assert (= temp1228_227 #x0000000000000001))
(assert (= var3814415 temp1228_227))
(assert (= temp1228_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1228_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_229 #x0000000000000001))
(assert (= var79986 temp1228_229))
(assert (= temp1228_230 #x0000000000000001))
(assert (= var80116 temp1228_230))
(assert (= var4796905 var80116))
(assert (= temp1228_231 #x0000000000000000))
(assert (= var4784306 temp1228_231))
(assert (= temp1228_232 #x0000000000000000))
(assert (= temp1228_233
   (ite (bvslt var4784306 temp1228_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1228_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1228_233)))
(assert (= var4796924 temp1228_234))
(assert (bvslt (ite (bvslt var4784306 temp1228_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1228_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1228_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1228_236 #x0000000000000001))
(assert (= var4796925 temp1228_236))
(assert (= temp1228_237 #x0000000000000000))
(assert (= var5050621 temp1228_237))
(assert (= var5050566 var5050621))
(assert (= var4996900 var5050566))
(assert (= var4996927 var4996900))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1228_238 #x0000000000000002))
(assert (= var5256835 temp1228_238))
(assert (= var5256837 (bvsub ARGNAME_weight_NAMEEND_DIM var5256835)))
(assert (= var5322380 var5256835))
(assert (= var5322381 var5256837))
(assert (= var5322394 (bvadd var5322381 var5322380)))
(assert (= var5322396
   (ite (bvsgt var5322394 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_239 #x0000000000000000))
(assert (= var5322396 temp1228_239))
(assert (= var5322421 var5322380))
(assert (= var5322423 var5322381))
(assert (= var5443411 var5322423))
(assert (= var5845392 var80129))
(assert (= temp1228_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp1228_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp1228_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1228_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp1228_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6766412 var80315))
(assert (= var6766413 var80317))
(assert (= var6766414 var80319))
(assert (= temp1228_244 #x0000000000000001))
(assert (= temp1228_243 temp1228_244))
(assert (= temp1228_245 #x0000000000000001))
(assert (= var8064490 temp1228_245))
(assert (= temp1228_247 #xffffffffffffffff))
(assert (= temp1228_246 temp1228_247))
(assert (= temp1228_248 #x0000000000000001))
(assert (= var79986 temp1228_248))
(model-add temp1228_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1228_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1228_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






