(declare-fun temp456_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp456_2 () (_ BitVec 64))
(declare-fun temp456_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp456_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp456_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp456_6 () (_ BitVec 64))
(declare-fun temp456_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_8 () (_ BitVec 64))
(declare-fun temp456_9 () (_ BitVec 64))
(declare-fun temp456_10 () (_ BitVec 64))
(declare-fun temp456_11 () (_ BitVec 64))
(declare-fun temp456_12 () (_ BitVec 64))
(declare-fun temp456_13 () (_ BitVec 64))
(declare-fun temp456_14 () (_ BitVec 64))
(declare-fun temp456_15 () (_ BitVec 64))
(declare-fun temp456_16 () (_ BitVec 64))
(declare-fun temp456_17 () (_ BitVec 64))
(declare-fun temp456_18 () (_ BitVec 64))
(declare-fun temp456_19 () (_ BitVec 64))
(declare-fun temp456_20 () (_ BitVec 64))
(declare-fun temp456_21 () (_ BitVec 64))
(declare-fun temp456_22 () (_ BitVec 64))
(declare-fun temp456_23 () (_ BitVec 64))
(declare-fun temp456_24 () (_ BitVec 64))
(declare-fun temp456_25 () (_ BitVec 64))
(declare-fun temp456_26 () (_ BitVec 64))
(declare-fun temp456_27 () (_ BitVec 64))
(declare-fun temp456_28 () (_ BitVec 64))
(declare-fun temp456_29 () (_ BitVec 64))
(declare-fun temp456_30 () (_ BitVec 64))
(declare-fun temp456_31 () (_ BitVec 64))
(declare-fun temp456_32 () (_ BitVec 64))
(declare-fun temp456_33 () (_ BitVec 64))
(declare-fun temp456_34 () (_ BitVec 64))
(declare-fun temp456_35 () (_ BitVec 64))
(declare-fun temp456_36 () (_ BitVec 64))
(declare-fun temp456_37 () (_ BitVec 64))
(declare-fun temp456_38 () (_ BitVec 64))
(declare-fun temp456_39 () (_ BitVec 64))
(declare-fun temp456_40 () (_ BitVec 64))
(declare-fun temp456_41 () (_ BitVec 64))
(declare-fun temp456_42 () (_ BitVec 64))
(declare-fun temp456_43 () (_ BitVec 64))
(declare-fun temp456_44 () (_ BitVec 64))
(declare-fun temp456_45 () (_ BitVec 64))
(declare-fun temp456_46 () (_ BitVec 64))
(declare-fun temp456_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp456_48 () (_ BitVec 64))
(declare-fun temp456_49 () (_ BitVec 64))
(declare-fun temp456_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_51 () (_ BitVec 64))
(declare-fun temp456_52 () (_ BitVec 64))
(declare-fun temp456_53 () (_ BitVec 64))
(declare-fun temp456_54 () (_ BitVec 64))
(declare-fun temp456_55 () (_ BitVec 64))
(declare-fun temp456_56 () (_ BitVec 64))
(declare-fun temp456_57 () (_ BitVec 64))
(declare-fun temp456_58 () (_ BitVec 64))
(declare-fun temp456_59 () (_ BitVec 64))
(declare-fun temp456_60 () (_ BitVec 64))
(declare-fun temp456_61 () (_ BitVec 64))
(declare-fun temp456_62 () (_ BitVec 64))
(declare-fun temp456_63 () (_ BitVec 64))
(declare-fun temp456_64 () (_ BitVec 64))
(declare-fun temp456_65 () (_ BitVec 64))
(declare-fun temp456_66 () (_ BitVec 64))
(declare-fun temp456_67 () (_ BitVec 64))
(declare-fun temp456_68 () (_ BitVec 64))
(declare-fun temp456_69 () (_ BitVec 64))
(declare-fun temp456_70 () (_ BitVec 64))
(declare-fun temp456_71 () (_ BitVec 64))
(declare-fun temp456_72 () (_ BitVec 64))
(declare-fun temp456_73 () (_ BitVec 64))
(declare-fun temp456_74 () (_ BitVec 64))
(declare-fun temp456_75 () (_ BitVec 64))
(declare-fun temp456_76 () (_ BitVec 64))
(declare-fun temp456_77 () (_ BitVec 64))
(declare-fun temp456_78 () (_ BitVec 64))
(declare-fun temp456_79 () (_ BitVec 64))
(declare-fun temp456_80 () (_ BitVec 64))
(declare-fun temp456_81 () (_ BitVec 64))
(declare-fun temp456_82 () (_ BitVec 64))
(declare-fun temp456_83 () (_ BitVec 64))
(declare-fun temp456_84 () (_ BitVec 64))
(declare-fun temp456_85 () (_ BitVec 64))
(declare-fun temp456_86 () (_ BitVec 64))
(declare-fun temp456_87 () (_ BitVec 64))
(declare-fun temp456_88 () (_ BitVec 64))
(declare-fun temp456_89 () (_ BitVec 64))
(declare-fun temp456_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp456_91 () (_ BitVec 64))
(declare-fun temp456_92 () (_ BitVec 64))
(declare-fun temp456_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_94 () (_ BitVec 64))
(declare-fun temp456_95 () (_ BitVec 64))
(declare-fun temp456_96 () (_ BitVec 64))
(declare-fun temp456_97 () (_ BitVec 64))
(declare-fun temp456_98 () (_ BitVec 64))
(declare-fun temp456_99 () (_ BitVec 64))
(declare-fun temp456_100 () (_ BitVec 64))
(declare-fun temp456_101 () (_ BitVec 64))
(declare-fun temp456_102 () (_ BitVec 64))
(declare-fun temp456_103 () (_ BitVec 64))
(declare-fun temp456_104 () (_ BitVec 64))
(declare-fun temp456_105 () (_ BitVec 64))
(declare-fun temp456_106 () (_ BitVec 64))
(declare-fun temp456_107 () (_ BitVec 64))
(declare-fun temp456_108 () (_ BitVec 64))
(declare-fun temp456_109 () (_ BitVec 64))
(declare-fun temp456_110 () (_ BitVec 64))
(declare-fun temp456_111 () (_ BitVec 64))
(declare-fun temp456_112 () (_ BitVec 64))
(declare-fun temp456_113 () (_ BitVec 64))
(declare-fun temp456_114 () (_ BitVec 64))
(declare-fun temp456_115 () (_ BitVec 64))
(declare-fun temp456_116 () (_ BitVec 64))
(declare-fun temp456_117 () (_ BitVec 64))
(declare-fun temp456_118 () (_ BitVec 64))
(declare-fun temp456_119 () (_ BitVec 64))
(declare-fun temp456_120 () (_ BitVec 64))
(declare-fun temp456_121 () (_ BitVec 64))
(declare-fun temp456_122 () (_ BitVec 64))
(declare-fun temp456_123 () (_ BitVec 64))
(declare-fun temp456_124 () (_ BitVec 64))
(declare-fun temp456_125 () (_ BitVec 64))
(declare-fun temp456_126 () (_ BitVec 64))
(declare-fun temp456_127 () (_ BitVec 64))
(declare-fun temp456_128 () (_ BitVec 64))
(declare-fun temp456_129 () (_ BitVec 64))
(declare-fun temp456_130 () (_ BitVec 64))
(declare-fun temp456_131 () (_ BitVec 64))
(declare-fun temp456_132 () (_ BitVec 64))
(declare-fun temp456_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp456_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp456_135 () (_ BitVec 64))
(declare-fun temp456_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp456_137 () (_ BitVec 64))
(declare-fun temp456_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_139 () (_ BitVec 64))
(declare-fun temp456_140 () (_ BitVec 64))
(declare-fun temp456_141 () (_ BitVec 64))
(declare-fun temp456_142 () (_ BitVec 64))
(declare-fun temp456_143 () (_ BitVec 64))
(declare-fun temp456_144 () (_ BitVec 64))
(declare-fun temp456_145 () (_ BitVec 64))
(declare-fun temp456_146 () (_ BitVec 64))
(declare-fun temp456_147 () (_ BitVec 64))
(declare-fun temp456_148 () (_ BitVec 64))
(declare-fun temp456_149 () (_ BitVec 64))
(declare-fun temp456_150 () (_ BitVec 64))
(declare-fun temp456_151 () (_ BitVec 64))
(declare-fun temp456_152 () (_ BitVec 64))
(declare-fun temp456_153 () (_ BitVec 64))
(declare-fun temp456_154 () (_ BitVec 64))
(declare-fun temp456_156 () (_ BitVec 64))
(declare-fun temp456_157 () (_ BitVec 64))
(declare-fun temp456_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp456_158 () (_ BitVec 64))
(declare-fun temp456_159 () (_ BitVec 64))
(declare-fun temp456_161 () (_ BitVec 64))
(declare-fun temp456_162 () (_ BitVec 64))
(declare-fun temp456_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp456_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp456_164 () (_ BitVec 64))
(declare-fun temp456_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp456_166 () (_ BitVec 64))
(declare-fun temp456_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp456_168 () (_ BitVec 64))
(declare-fun temp456_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_170 () (_ BitVec 64))
(declare-fun temp456_171 () (_ BitVec 64))
(declare-fun temp456_172 () (_ BitVec 64))
(declare-fun temp456_173 () (_ BitVec 64))
(declare-fun temp456_174 () (_ BitVec 64))
(declare-fun temp456_175 () (_ BitVec 64))
(declare-fun temp456_176 () (_ BitVec 64))
(declare-fun temp456_177 () (_ BitVec 64))
(declare-fun temp456_178 () (_ BitVec 64))
(declare-fun temp456_179 () (_ BitVec 64))
(declare-fun temp456_180 () (_ BitVec 64))
(declare-fun temp456_181 () (_ BitVec 64))
(declare-fun temp456_182 () (_ BitVec 64))
(declare-fun temp456_183 () (_ BitVec 64))
(declare-fun temp456_184 () (_ BitVec 64))
(declare-fun temp456_185 () (_ BitVec 64))
(declare-fun temp456_186 () (_ BitVec 64))
(declare-fun temp456_187 () (_ BitVec 64))
(declare-fun temp456_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp456_189 () (_ BitVec 64))
(declare-fun temp456_191 () (_ BitVec 64))
(declare-fun temp456_192 () (_ BitVec 64))
(declare-fun temp456_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp456_193 () (_ BitVec 64))
(declare-fun temp456_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp456_195 () (_ BitVec 64))
(declare-fun temp456_196 () (_ BitVec 64))
(declare-fun temp456_197 () (_ BitVec 64))
(declare-fun temp456_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_199 () (_ BitVec 64))
(declare-fun temp456_200 () (_ BitVec 64))
(declare-fun temp456_201 () (_ BitVec 64))
(declare-fun temp456_202 () (_ BitVec 64))
(declare-fun temp456_203 () (_ BitVec 64))
(declare-fun temp456_204 () (_ BitVec 64))
(declare-fun temp456_205 () (_ BitVec 64))
(declare-fun temp456_206 () (_ BitVec 64))
(declare-fun temp456_207 () (_ BitVec 64))
(declare-fun temp456_208 () (_ BitVec 64))
(declare-fun temp456_209 () (_ BitVec 64))
(declare-fun temp456_210 () (_ BitVec 64))
(declare-fun temp456_211 () (_ BitVec 64))
(declare-fun temp456_212 () (_ BitVec 64))
(declare-fun temp456_213 () (_ BitVec 64))
(declare-fun temp456_214 () (_ BitVec 64))
(declare-fun temp456_215 () (_ BitVec 64))
(declare-fun temp456_216 () (_ BitVec 64))
(declare-fun temp456_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp456_218 () (_ BitVec 64))
(declare-fun temp456_220 () (_ BitVec 64))
(declare-fun temp456_221 () (_ BitVec 64))
(declare-fun temp456_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp456_222 () (_ BitVec 64))
(declare-fun temp456_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp456_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp456_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp456_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp456_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp456_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp456_229 () (_ BitVec 64))
(declare-fun temp456_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp456_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp456_232 () (_ BitVec 64))
(declare-fun temp456_233 () (_ BitVec 64))
(declare-fun temp456_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp456_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp456_236 () (_ BitVec 64))
(declare-fun temp456_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp456_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp456_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp456_240 () (_ BitVec 64))
(declare-fun temp456_241 () (_ BitVec 64))
(declare-fun var6566676 () (_ BitVec 64))
(declare-fun var6566643 () (_ BitVec 64))
(declare-fun var6435207 () (_ BitVec 64))
(declare-fun var6435203 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp456_242 () (_ BitVec 64))
(assert (= temp456_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp456_1)))
(assert (= temp456_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp456_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_3 #x0000000000000000))
(assert (= var79869 temp456_3))
(assert (= temp456_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp456_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_5 #x0000000000000000))
(assert (= var79914 temp456_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp456_6 #x0000000000000000))
(assert (= temp456_7 temp456_6))
(assert (= temp456_8 (select ARGNAME_padding_NAMEEND_VAL temp456_7)))
(assert (= temp456_9 #x0000000000000001))
(assert (= temp456_10 temp456_9))
(assert (= temp456_11 (select ARGNAME_padding_NAMEEND_VAL temp456_10)))
(assert (= temp456_12 #x0000000000000002))
(assert (= temp456_13 temp456_12))
(assert (= temp456_14 (select ARGNAME_padding_NAMEEND_VAL temp456_13)))
(assert (= temp456_15 #x0000000000000003))
(assert (= temp456_16 temp456_15))
(assert (= temp456_17 (select ARGNAME_padding_NAMEEND_VAL temp456_16)))
(assert (= temp456_18 #x0000000000000004))
(assert (= temp456_19 temp456_18))
(assert (= temp456_20 (select ARGNAME_padding_NAMEEND_VAL temp456_19)))
(assert (= temp456_21 #x0000000000000005))
(assert (= temp456_22 temp456_21))
(assert (= temp456_23 (select ARGNAME_padding_NAMEEND_VAL temp456_22)))
(assert (= temp456_24 #x0000000000000000))
(assert (= temp456_25 #x0000000000000000))
(assert (= temp456_26 temp456_25))
(assert (= temp456_27 (select ARGNAME_padding_NAMEEND_VAL temp456_26)))
(assert (= temp456_28 #x0000000000000000))
(assert (= temp456_29 #x0000000000000001))
(assert (= temp456_30 temp456_29))
(assert (= temp456_31 (select ARGNAME_padding_NAMEEND_VAL temp456_30)))
(assert (= temp456_32 #x0000000000000000))
(assert (= temp456_33 #x0000000000000002))
(assert (= temp456_34 temp456_33))
(assert (= temp456_35 (select ARGNAME_padding_NAMEEND_VAL temp456_34)))
(assert (= temp456_36 #x0000000000000000))
(assert (= temp456_37 #x0000000000000003))
(assert (= temp456_38 temp456_37))
(assert (= temp456_39 (select ARGNAME_padding_NAMEEND_VAL temp456_38)))
(assert (= temp456_40 #x0000000000000000))
(assert (= temp456_41 #x0000000000000004))
(assert (= temp456_42 temp456_41))
(assert (= temp456_43 (select ARGNAME_padding_NAMEEND_VAL temp456_42)))
(assert (= temp456_44 #x0000000000000000))
(assert (= temp456_45 #x0000000000000005))
(assert (= temp456_46 temp456_45))
(assert (= temp456_47 (select ARGNAME_padding_NAMEEND_VAL temp456_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp456_27 temp456_24)
             (bvslt temp456_31 temp456_28)
             (bvslt temp456_35 temp456_32)
             (bvslt temp456_39 temp456_36)
             (bvslt temp456_43 temp456_40)
             (bvslt temp456_47 temp456_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_48 #x0000000000000000))
(assert (= var1322786 temp456_48))
(assert (= temp456_49 #x0000000000000000))
(assert (= temp456_50 temp456_49))
(assert (= temp456_51 (select ARGNAME_output_padding_NAMEEND_VAL temp456_50)))
(assert (= temp456_52 #x0000000000000001))
(assert (= temp456_53 temp456_52))
(assert (= temp456_54 (select ARGNAME_output_padding_NAMEEND_VAL temp456_53)))
(assert (= temp456_55 #x0000000000000002))
(assert (= temp456_56 temp456_55))
(assert (= temp456_57 (select ARGNAME_output_padding_NAMEEND_VAL temp456_56)))
(assert (= temp456_58 #x0000000000000003))
(assert (= temp456_59 temp456_58))
(assert (= temp456_60 (select ARGNAME_output_padding_NAMEEND_VAL temp456_59)))
(assert (= temp456_61 #x0000000000000004))
(assert (= temp456_62 temp456_61))
(assert (= temp456_63 (select ARGNAME_output_padding_NAMEEND_VAL temp456_62)))
(assert (= temp456_64 #x0000000000000005))
(assert (= temp456_65 temp456_64))
(assert (= temp456_66 (select ARGNAME_output_padding_NAMEEND_VAL temp456_65)))
(assert (= temp456_67 #x0000000000000000))
(assert (= temp456_68 #x0000000000000000))
(assert (= temp456_69 temp456_68))
(assert (= temp456_70 (select ARGNAME_output_padding_NAMEEND_VAL temp456_69)))
(assert (= temp456_71 #x0000000000000000))
(assert (= temp456_72 #x0000000000000001))
(assert (= temp456_73 temp456_72))
(assert (= temp456_74 (select ARGNAME_output_padding_NAMEEND_VAL temp456_73)))
(assert (= temp456_75 #x0000000000000000))
(assert (= temp456_76 #x0000000000000002))
(assert (= temp456_77 temp456_76))
(assert (= temp456_78 (select ARGNAME_output_padding_NAMEEND_VAL temp456_77)))
(assert (= temp456_79 #x0000000000000000))
(assert (= temp456_80 #x0000000000000003))
(assert (= temp456_81 temp456_80))
(assert (= temp456_82 (select ARGNAME_output_padding_NAMEEND_VAL temp456_81)))
(assert (= temp456_83 #x0000000000000000))
(assert (= temp456_84 #x0000000000000004))
(assert (= temp456_85 temp456_84))
(assert (= temp456_86 (select ARGNAME_output_padding_NAMEEND_VAL temp456_85)))
(assert (= temp456_87 #x0000000000000000))
(assert (= temp456_88 #x0000000000000005))
(assert (= temp456_89 temp456_88))
(assert (= temp456_90 (select ARGNAME_output_padding_NAMEEND_VAL temp456_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp456_70 temp456_67)
             (bvslt temp456_74 temp456_71)
             (bvslt temp456_78 temp456_75)
             (bvslt temp456_82 temp456_79)
             (bvslt temp456_86 temp456_83)
             (bvslt temp456_90 temp456_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_91 #x0000000000000000))
(assert (= var1322797 temp456_91))
(assert (= temp456_92 #x0000000000000000))
(assert (= temp456_93 temp456_92))
(assert (= temp456_94 (select ARGNAME_stride_NAMEEND_VAL temp456_93)))
(assert (= temp456_95 #x0000000000000001))
(assert (= temp456_96 temp456_95))
(assert (= temp456_97 (select ARGNAME_stride_NAMEEND_VAL temp456_96)))
(assert (= temp456_98 #x0000000000000002))
(assert (= temp456_99 temp456_98))
(assert (= temp456_100 (select ARGNAME_stride_NAMEEND_VAL temp456_99)))
(assert (= temp456_101 #x0000000000000003))
(assert (= temp456_102 temp456_101))
(assert (= temp456_103 (select ARGNAME_stride_NAMEEND_VAL temp456_102)))
(assert (= temp456_104 #x0000000000000004))
(assert (= temp456_105 temp456_104))
(assert (= temp456_106 (select ARGNAME_stride_NAMEEND_VAL temp456_105)))
(assert (= temp456_107 #x0000000000000005))
(assert (= temp456_108 temp456_107))
(assert (= temp456_109 (select ARGNAME_stride_NAMEEND_VAL temp456_108)))
(assert (= temp456_110 #x0000000000000000))
(assert (= temp456_111 #x0000000000000000))
(assert (= temp456_112 temp456_111))
(assert (= temp456_113 (select ARGNAME_stride_NAMEEND_VAL temp456_112)))
(assert (= temp456_114 #x0000000000000000))
(assert (= temp456_115 #x0000000000000001))
(assert (= temp456_116 temp456_115))
(assert (= temp456_117 (select ARGNAME_stride_NAMEEND_VAL temp456_116)))
(assert (= temp456_118 #x0000000000000000))
(assert (= temp456_119 #x0000000000000002))
(assert (= temp456_120 temp456_119))
(assert (= temp456_121 (select ARGNAME_stride_NAMEEND_VAL temp456_120)))
(assert (= temp456_122 #x0000000000000000))
(assert (= temp456_123 #x0000000000000003))
(assert (= temp456_124 temp456_123))
(assert (= temp456_125 (select ARGNAME_stride_NAMEEND_VAL temp456_124)))
(assert (= temp456_126 #x0000000000000000))
(assert (= temp456_127 #x0000000000000004))
(assert (= temp456_128 temp456_127))
(assert (= temp456_129 (select ARGNAME_stride_NAMEEND_VAL temp456_128)))
(assert (= temp456_130 #x0000000000000000))
(assert (= temp456_131 #x0000000000000005))
(assert (= temp456_132 temp456_131))
(assert (= temp456_133 (select ARGNAME_stride_NAMEEND_VAL temp456_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp456_113 temp456_110)
             (bvsle temp456_117 temp456_114)
             (bvsle temp456_121 temp456_118)
             (bvsle temp456_125 temp456_122)
             (bvsle temp456_129 temp456_126)
             (bvsle temp456_133 temp456_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_134 #x0000000000000000))
(assert (= var1322807 temp456_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_135 #x0000000000000001))
(assert (= var1322819 temp456_135))
(assert (= temp456_136 #x0000000000000000))
(assert (= var1310898 temp456_136))
(assert (= temp456_137 #x0000000000000000))
(assert (= temp456_138 temp456_137))
(assert (= temp456_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_138)))
(assert (= temp456_140 #x0000000000000001))
(assert (= temp456_141 temp456_140))
(assert (= temp456_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_141)))
(assert (= temp456_143 #x0000000000000002))
(assert (= temp456_144 temp456_143))
(assert (= temp456_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_144)))
(assert (= temp456_146 #x0000000000000003))
(assert (= temp456_147 temp456_146))
(assert (= temp456_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_147)))
(assert (= temp456_149 #x0000000000000004))
(assert (= temp456_150 temp456_149))
(assert (= temp456_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_150)))
(assert (= temp456_152 #x0000000000000005))
(assert (= temp456_153 temp456_152))
(assert (= temp456_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_153)))
(assert (= temp456_156 var1310898))
(assert (= temp456_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_156)))
(assert (= temp456_155 temp456_157))
(assert (= var1322852
   (ite (bvslt temp456_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_158 #x0000000000000000))
(assert (= var1322852 temp456_158))
(assert (= temp456_159 #x0000000000000000))
(assert (= var1310898 temp456_159))
(assert (= temp456_161 var1310898))
(assert (= temp456_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_161)))
(assert (= temp456_160 temp456_162))
(assert (= var1322874 (bvsmod temp456_160 ARGNAME_groups_NAMEEND)))
(assert (= temp456_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp456_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp456_164 #x0000000000000001))
(assert (= var1322875 temp456_164))
(assert (= temp456_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp456_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_166 #x0000000000000001))
(assert (= var1322895 temp456_166))
(assert (= temp456_167 #x0000000000000001))
(assert (= var1311786 temp456_167))
(assert (= temp456_168 #x0000000000000000))
(assert (= temp456_169 temp456_168))
(assert (= temp456_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_169)))
(assert (= temp456_171 #x0000000000000001))
(assert (= temp456_172 temp456_171))
(assert (= temp456_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_172)))
(assert (= temp456_174 #x0000000000000002))
(assert (= temp456_175 temp456_174))
(assert (= temp456_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_175)))
(assert (= temp456_177 #x0000000000000003))
(assert (= temp456_178 temp456_177))
(assert (= temp456_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_178)))
(assert (= temp456_180 #x0000000000000004))
(assert (= temp456_181 temp456_180))
(assert (= temp456_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_181)))
(assert (= temp456_183 #x0000000000000005))
(assert (= temp456_184 temp456_183))
(assert (= temp456_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_184)))
(assert (= temp456_186 #x0000000000000000))
(assert (= temp456_187
   (ite (bvslt var1311786 temp456_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp456_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_187)))
(assert (= var1322903 temp456_188))
(assert (bvslt (ite (bvslt var1311786 temp456_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp456_189 #x0000000000000001))
(assert (= var1311786 temp456_189))
(assert (= temp456_191 var1311786))
(assert (= temp456_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_191)))
(assert (= temp456_190 temp456_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp456_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp456_193 #x0000000000000001))
(assert (= var1322908 temp456_193))
(assert (= temp456_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp456_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_195 #x0000000000000001))
(assert (= var1322975 temp456_195))
(assert (= temp456_196 #x0000000000000000))
(assert (= var1310898 temp456_196))
(assert (= temp456_197 #x0000000000000000))
(assert (= temp456_198 temp456_197))
(assert (= temp456_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp456_198)))
(assert (= temp456_200 #x0000000000000001))
(assert (= temp456_201 temp456_200))
(assert (= temp456_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp456_201)))
(assert (= temp456_203 #x0000000000000002))
(assert (= temp456_204 temp456_203))
(assert (= temp456_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp456_204)))
(assert (= temp456_206 #x0000000000000003))
(assert (= temp456_207 temp456_206))
(assert (= temp456_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp456_207)))
(assert (= temp456_209 #x0000000000000004))
(assert (= temp456_210 temp456_209))
(assert (= temp456_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp456_210)))
(assert (= temp456_212 #x0000000000000005))
(assert (= temp456_213 temp456_212))
(assert (= temp456_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp456_213)))
(assert (= temp456_215 #x0000000000000000))
(assert (= temp456_216
   (ite (bvslt var1310898 temp456_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp456_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp456_216)))
(assert (= var1322977 temp456_217))
(assert (bvslt (ite (bvslt var1310898 temp456_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp456_218 #x0000000000000000))
(assert (= var1310898 temp456_218))
(assert (= temp456_220 var1310898))
(assert (= temp456_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_220)))
(assert (= temp456_219 temp456_221))
(assert (= var1322980
   (ite (= var1322977 temp456_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp456_222 #x0000000000000001))
(assert (= var1322980 temp456_222))
(assert (= temp456_223 #x0000000000000002))
(assert (= var1848169 temp456_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp456_225 #x0000000000000001))
(assert (= var1323065 temp456_225))
(assert (= temp456_226 #x0000000000000001))
(assert (= var3486735 temp456_226))
(assert (= temp456_227 #x0000000000000001))
(assert (= var3814415 temp456_227))
(assert (= temp456_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp456_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_229 #x0000000000000001))
(assert (= var79986 temp456_229))
(assert (= temp456_230 #x0000000000000001))
(assert (= var80116 temp456_230))
(assert (= var4796905 var80116))
(assert (= temp456_231 #x0000000000000000))
(assert (= var4784306 temp456_231))
(assert (= temp456_232 #x0000000000000000))
(assert (= temp456_233
   (ite (bvslt var4784306 temp456_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp456_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_233)))
(assert (= var4796924 temp456_234))
(assert (bvslt (ite (bvslt var4784306 temp456_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp456_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp456_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp456_236 #x0000000000000001))
(assert (= var4796925 temp456_236))
(assert (= temp456_237 #x0000000000000000))
(assert (= var4996927 temp456_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp456_238 #x0000000000000002))
(assert (= var5125763 temp456_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_239 #x0000000000000000))
(assert (= var5191324 temp456_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp456_240 #x0000000000000001))
(assert (= var79986 temp456_240))
(assert (= temp456_241 #x0000000000000000))
(assert (= var6566676 temp456_241))
(assert (= var6566643 var6566676))
(assert (= var6435207 var6566643))
(assert (= var6435203 var6435207))
(assert (= var81597 var6435203))
(assert (= temp456_242 #x0000000000000000))
(assert (= var81597 temp456_242))
(model-add temp456_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp456_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp456_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






