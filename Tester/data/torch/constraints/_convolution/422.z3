(declare-fun temp561_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp561_2 () (_ BitVec 64))
(declare-fun temp561_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp561_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp561_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp561_6 () (_ BitVec 64))
(declare-fun temp561_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_8 () (_ BitVec 64))
(declare-fun temp561_9 () (_ BitVec 64))
(declare-fun temp561_10 () (_ BitVec 64))
(declare-fun temp561_11 () (_ BitVec 64))
(declare-fun temp561_12 () (_ BitVec 64))
(declare-fun temp561_13 () (_ BitVec 64))
(declare-fun temp561_14 () (_ BitVec 64))
(declare-fun temp561_15 () (_ BitVec 64))
(declare-fun temp561_16 () (_ BitVec 64))
(declare-fun temp561_17 () (_ BitVec 64))
(declare-fun temp561_18 () (_ BitVec 64))
(declare-fun temp561_19 () (_ BitVec 64))
(declare-fun temp561_20 () (_ BitVec 64))
(declare-fun temp561_21 () (_ BitVec 64))
(declare-fun temp561_22 () (_ BitVec 64))
(declare-fun temp561_23 () (_ BitVec 64))
(declare-fun temp561_24 () (_ BitVec 64))
(declare-fun temp561_25 () (_ BitVec 64))
(declare-fun temp561_26 () (_ BitVec 64))
(declare-fun temp561_27 () (_ BitVec 64))
(declare-fun temp561_28 () (_ BitVec 64))
(declare-fun temp561_29 () (_ BitVec 64))
(declare-fun temp561_30 () (_ BitVec 64))
(declare-fun temp561_31 () (_ BitVec 64))
(declare-fun temp561_32 () (_ BitVec 64))
(declare-fun temp561_33 () (_ BitVec 64))
(declare-fun temp561_34 () (_ BitVec 64))
(declare-fun temp561_35 () (_ BitVec 64))
(declare-fun temp561_36 () (_ BitVec 64))
(declare-fun temp561_37 () (_ BitVec 64))
(declare-fun temp561_38 () (_ BitVec 64))
(declare-fun temp561_39 () (_ BitVec 64))
(declare-fun temp561_40 () (_ BitVec 64))
(declare-fun temp561_41 () (_ BitVec 64))
(declare-fun temp561_42 () (_ BitVec 64))
(declare-fun temp561_43 () (_ BitVec 64))
(declare-fun temp561_44 () (_ BitVec 64))
(declare-fun temp561_45 () (_ BitVec 64))
(declare-fun temp561_46 () (_ BitVec 64))
(declare-fun temp561_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp561_48 () (_ BitVec 64))
(declare-fun temp561_49 () (_ BitVec 64))
(declare-fun temp561_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_51 () (_ BitVec 64))
(declare-fun temp561_52 () (_ BitVec 64))
(declare-fun temp561_53 () (_ BitVec 64))
(declare-fun temp561_54 () (_ BitVec 64))
(declare-fun temp561_55 () (_ BitVec 64))
(declare-fun temp561_56 () (_ BitVec 64))
(declare-fun temp561_57 () (_ BitVec 64))
(declare-fun temp561_58 () (_ BitVec 64))
(declare-fun temp561_59 () (_ BitVec 64))
(declare-fun temp561_60 () (_ BitVec 64))
(declare-fun temp561_61 () (_ BitVec 64))
(declare-fun temp561_62 () (_ BitVec 64))
(declare-fun temp561_63 () (_ BitVec 64))
(declare-fun temp561_64 () (_ BitVec 64))
(declare-fun temp561_65 () (_ BitVec 64))
(declare-fun temp561_66 () (_ BitVec 64))
(declare-fun temp561_67 () (_ BitVec 64))
(declare-fun temp561_68 () (_ BitVec 64))
(declare-fun temp561_69 () (_ BitVec 64))
(declare-fun temp561_70 () (_ BitVec 64))
(declare-fun temp561_71 () (_ BitVec 64))
(declare-fun temp561_72 () (_ BitVec 64))
(declare-fun temp561_73 () (_ BitVec 64))
(declare-fun temp561_74 () (_ BitVec 64))
(declare-fun temp561_75 () (_ BitVec 64))
(declare-fun temp561_76 () (_ BitVec 64))
(declare-fun temp561_77 () (_ BitVec 64))
(declare-fun temp561_78 () (_ BitVec 64))
(declare-fun temp561_79 () (_ BitVec 64))
(declare-fun temp561_80 () (_ BitVec 64))
(declare-fun temp561_81 () (_ BitVec 64))
(declare-fun temp561_82 () (_ BitVec 64))
(declare-fun temp561_83 () (_ BitVec 64))
(declare-fun temp561_84 () (_ BitVec 64))
(declare-fun temp561_85 () (_ BitVec 64))
(declare-fun temp561_86 () (_ BitVec 64))
(declare-fun temp561_87 () (_ BitVec 64))
(declare-fun temp561_88 () (_ BitVec 64))
(declare-fun temp561_89 () (_ BitVec 64))
(declare-fun temp561_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp561_91 () (_ BitVec 64))
(declare-fun temp561_92 () (_ BitVec 64))
(declare-fun temp561_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_94 () (_ BitVec 64))
(declare-fun temp561_95 () (_ BitVec 64))
(declare-fun temp561_96 () (_ BitVec 64))
(declare-fun temp561_97 () (_ BitVec 64))
(declare-fun temp561_98 () (_ BitVec 64))
(declare-fun temp561_99 () (_ BitVec 64))
(declare-fun temp561_100 () (_ BitVec 64))
(declare-fun temp561_101 () (_ BitVec 64))
(declare-fun temp561_102 () (_ BitVec 64))
(declare-fun temp561_103 () (_ BitVec 64))
(declare-fun temp561_104 () (_ BitVec 64))
(declare-fun temp561_105 () (_ BitVec 64))
(declare-fun temp561_106 () (_ BitVec 64))
(declare-fun temp561_107 () (_ BitVec 64))
(declare-fun temp561_108 () (_ BitVec 64))
(declare-fun temp561_109 () (_ BitVec 64))
(declare-fun temp561_110 () (_ BitVec 64))
(declare-fun temp561_111 () (_ BitVec 64))
(declare-fun temp561_112 () (_ BitVec 64))
(declare-fun temp561_113 () (_ BitVec 64))
(declare-fun temp561_114 () (_ BitVec 64))
(declare-fun temp561_115 () (_ BitVec 64))
(declare-fun temp561_116 () (_ BitVec 64))
(declare-fun temp561_117 () (_ BitVec 64))
(declare-fun temp561_118 () (_ BitVec 64))
(declare-fun temp561_119 () (_ BitVec 64))
(declare-fun temp561_120 () (_ BitVec 64))
(declare-fun temp561_121 () (_ BitVec 64))
(declare-fun temp561_122 () (_ BitVec 64))
(declare-fun temp561_123 () (_ BitVec 64))
(declare-fun temp561_124 () (_ BitVec 64))
(declare-fun temp561_125 () (_ BitVec 64))
(declare-fun temp561_126 () (_ BitVec 64))
(declare-fun temp561_127 () (_ BitVec 64))
(declare-fun temp561_128 () (_ BitVec 64))
(declare-fun temp561_129 () (_ BitVec 64))
(declare-fun temp561_130 () (_ BitVec 64))
(declare-fun temp561_131 () (_ BitVec 64))
(declare-fun temp561_132 () (_ BitVec 64))
(declare-fun temp561_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp561_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp561_135 () (_ BitVec 64))
(declare-fun temp561_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp561_137 () (_ BitVec 64))
(declare-fun temp561_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_139 () (_ BitVec 64))
(declare-fun temp561_140 () (_ BitVec 64))
(declare-fun temp561_141 () (_ BitVec 64))
(declare-fun temp561_142 () (_ BitVec 64))
(declare-fun temp561_143 () (_ BitVec 64))
(declare-fun temp561_144 () (_ BitVec 64))
(declare-fun temp561_145 () (_ BitVec 64))
(declare-fun temp561_146 () (_ BitVec 64))
(declare-fun temp561_147 () (_ BitVec 64))
(declare-fun temp561_148 () (_ BitVec 64))
(declare-fun temp561_149 () (_ BitVec 64))
(declare-fun temp561_150 () (_ BitVec 64))
(declare-fun temp561_151 () (_ BitVec 64))
(declare-fun temp561_152 () (_ BitVec 64))
(declare-fun temp561_153 () (_ BitVec 64))
(declare-fun temp561_154 () (_ BitVec 64))
(declare-fun temp561_156 () (_ BitVec 64))
(declare-fun temp561_157 () (_ BitVec 64))
(declare-fun temp561_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp561_158 () (_ BitVec 64))
(declare-fun temp561_159 () (_ BitVec 64))
(declare-fun temp561_161 () (_ BitVec 64))
(declare-fun temp561_162 () (_ BitVec 64))
(declare-fun temp561_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp561_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp561_164 () (_ BitVec 64))
(declare-fun temp561_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp561_166 () (_ BitVec 64))
(declare-fun temp561_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp561_168 () (_ BitVec 64))
(declare-fun temp561_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_170 () (_ BitVec 64))
(declare-fun temp561_171 () (_ BitVec 64))
(declare-fun temp561_172 () (_ BitVec 64))
(declare-fun temp561_173 () (_ BitVec 64))
(declare-fun temp561_174 () (_ BitVec 64))
(declare-fun temp561_175 () (_ BitVec 64))
(declare-fun temp561_176 () (_ BitVec 64))
(declare-fun temp561_177 () (_ BitVec 64))
(declare-fun temp561_178 () (_ BitVec 64))
(declare-fun temp561_179 () (_ BitVec 64))
(declare-fun temp561_180 () (_ BitVec 64))
(declare-fun temp561_181 () (_ BitVec 64))
(declare-fun temp561_182 () (_ BitVec 64))
(declare-fun temp561_183 () (_ BitVec 64))
(declare-fun temp561_184 () (_ BitVec 64))
(declare-fun temp561_185 () (_ BitVec 64))
(declare-fun temp561_186 () (_ BitVec 64))
(declare-fun temp561_187 () (_ BitVec 64))
(declare-fun temp561_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp561_189 () (_ BitVec 64))
(declare-fun temp561_191 () (_ BitVec 64))
(declare-fun temp561_192 () (_ BitVec 64))
(declare-fun temp561_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp561_193 () (_ BitVec 64))
(declare-fun temp561_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp561_195 () (_ BitVec 64))
(declare-fun temp561_196 () (_ BitVec 64))
(declare-fun temp561_197 () (_ BitVec 64))
(declare-fun temp561_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_199 () (_ BitVec 64))
(declare-fun temp561_200 () (_ BitVec 64))
(declare-fun temp561_201 () (_ BitVec 64))
(declare-fun temp561_202 () (_ BitVec 64))
(declare-fun temp561_203 () (_ BitVec 64))
(declare-fun temp561_204 () (_ BitVec 64))
(declare-fun temp561_205 () (_ BitVec 64))
(declare-fun temp561_206 () (_ BitVec 64))
(declare-fun temp561_207 () (_ BitVec 64))
(declare-fun temp561_208 () (_ BitVec 64))
(declare-fun temp561_209 () (_ BitVec 64))
(declare-fun temp561_210 () (_ BitVec 64))
(declare-fun temp561_211 () (_ BitVec 64))
(declare-fun temp561_212 () (_ BitVec 64))
(declare-fun temp561_213 () (_ BitVec 64))
(declare-fun temp561_214 () (_ BitVec 64))
(declare-fun temp561_215 () (_ BitVec 64))
(declare-fun temp561_216 () (_ BitVec 64))
(declare-fun temp561_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp561_218 () (_ BitVec 64))
(declare-fun temp561_220 () (_ BitVec 64))
(declare-fun temp561_221 () (_ BitVec 64))
(declare-fun temp561_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp561_222 () (_ BitVec 64))
(declare-fun temp561_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp561_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp561_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp561_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp561_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp561_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp561_229 () (_ BitVec 64))
(declare-fun temp561_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp561_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp561_232 () (_ BitVec 64))
(declare-fun temp561_233 () (_ BitVec 64))
(declare-fun temp561_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp561_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp561_236 () (_ BitVec 64))
(declare-fun temp561_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp561_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp561_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp561_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp561_241 () (_ BitVec 64))
(declare-fun temp561_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp561_243 () (_ BitVec 64))
(assert (= temp561_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp561_1)))
(assert (= temp561_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp561_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_3 #x0000000000000000))
(assert (= var79869 temp561_3))
(assert (= temp561_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp561_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_5 #x0000000000000000))
(assert (= var79914 temp561_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp561_6 #x0000000000000000))
(assert (= temp561_7 temp561_6))
(assert (= temp561_8 (select ARGNAME_padding_NAMEEND_VAL temp561_7)))
(assert (= temp561_9 #x0000000000000001))
(assert (= temp561_10 temp561_9))
(assert (= temp561_11 (select ARGNAME_padding_NAMEEND_VAL temp561_10)))
(assert (= temp561_12 #x0000000000000002))
(assert (= temp561_13 temp561_12))
(assert (= temp561_14 (select ARGNAME_padding_NAMEEND_VAL temp561_13)))
(assert (= temp561_15 #x0000000000000003))
(assert (= temp561_16 temp561_15))
(assert (= temp561_17 (select ARGNAME_padding_NAMEEND_VAL temp561_16)))
(assert (= temp561_18 #x0000000000000004))
(assert (= temp561_19 temp561_18))
(assert (= temp561_20 (select ARGNAME_padding_NAMEEND_VAL temp561_19)))
(assert (= temp561_21 #x0000000000000005))
(assert (= temp561_22 temp561_21))
(assert (= temp561_23 (select ARGNAME_padding_NAMEEND_VAL temp561_22)))
(assert (= temp561_24 #x0000000000000000))
(assert (= temp561_25 #x0000000000000000))
(assert (= temp561_26 temp561_25))
(assert (= temp561_27 (select ARGNAME_padding_NAMEEND_VAL temp561_26)))
(assert (= temp561_28 #x0000000000000000))
(assert (= temp561_29 #x0000000000000001))
(assert (= temp561_30 temp561_29))
(assert (= temp561_31 (select ARGNAME_padding_NAMEEND_VAL temp561_30)))
(assert (= temp561_32 #x0000000000000000))
(assert (= temp561_33 #x0000000000000002))
(assert (= temp561_34 temp561_33))
(assert (= temp561_35 (select ARGNAME_padding_NAMEEND_VAL temp561_34)))
(assert (= temp561_36 #x0000000000000000))
(assert (= temp561_37 #x0000000000000003))
(assert (= temp561_38 temp561_37))
(assert (= temp561_39 (select ARGNAME_padding_NAMEEND_VAL temp561_38)))
(assert (= temp561_40 #x0000000000000000))
(assert (= temp561_41 #x0000000000000004))
(assert (= temp561_42 temp561_41))
(assert (= temp561_43 (select ARGNAME_padding_NAMEEND_VAL temp561_42)))
(assert (= temp561_44 #x0000000000000000))
(assert (= temp561_45 #x0000000000000005))
(assert (= temp561_46 temp561_45))
(assert (= temp561_47 (select ARGNAME_padding_NAMEEND_VAL temp561_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp561_27 temp561_24)
             (bvslt temp561_31 temp561_28)
             (bvslt temp561_35 temp561_32)
             (bvslt temp561_39 temp561_36)
             (bvslt temp561_43 temp561_40)
             (bvslt temp561_47 temp561_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_48 #x0000000000000000))
(assert (= var1322786 temp561_48))
(assert (= temp561_49 #x0000000000000000))
(assert (= temp561_50 temp561_49))
(assert (= temp561_51 (select ARGNAME_output_padding_NAMEEND_VAL temp561_50)))
(assert (= temp561_52 #x0000000000000001))
(assert (= temp561_53 temp561_52))
(assert (= temp561_54 (select ARGNAME_output_padding_NAMEEND_VAL temp561_53)))
(assert (= temp561_55 #x0000000000000002))
(assert (= temp561_56 temp561_55))
(assert (= temp561_57 (select ARGNAME_output_padding_NAMEEND_VAL temp561_56)))
(assert (= temp561_58 #x0000000000000003))
(assert (= temp561_59 temp561_58))
(assert (= temp561_60 (select ARGNAME_output_padding_NAMEEND_VAL temp561_59)))
(assert (= temp561_61 #x0000000000000004))
(assert (= temp561_62 temp561_61))
(assert (= temp561_63 (select ARGNAME_output_padding_NAMEEND_VAL temp561_62)))
(assert (= temp561_64 #x0000000000000005))
(assert (= temp561_65 temp561_64))
(assert (= temp561_66 (select ARGNAME_output_padding_NAMEEND_VAL temp561_65)))
(assert (= temp561_67 #x0000000000000000))
(assert (= temp561_68 #x0000000000000000))
(assert (= temp561_69 temp561_68))
(assert (= temp561_70 (select ARGNAME_output_padding_NAMEEND_VAL temp561_69)))
(assert (= temp561_71 #x0000000000000000))
(assert (= temp561_72 #x0000000000000001))
(assert (= temp561_73 temp561_72))
(assert (= temp561_74 (select ARGNAME_output_padding_NAMEEND_VAL temp561_73)))
(assert (= temp561_75 #x0000000000000000))
(assert (= temp561_76 #x0000000000000002))
(assert (= temp561_77 temp561_76))
(assert (= temp561_78 (select ARGNAME_output_padding_NAMEEND_VAL temp561_77)))
(assert (= temp561_79 #x0000000000000000))
(assert (= temp561_80 #x0000000000000003))
(assert (= temp561_81 temp561_80))
(assert (= temp561_82 (select ARGNAME_output_padding_NAMEEND_VAL temp561_81)))
(assert (= temp561_83 #x0000000000000000))
(assert (= temp561_84 #x0000000000000004))
(assert (= temp561_85 temp561_84))
(assert (= temp561_86 (select ARGNAME_output_padding_NAMEEND_VAL temp561_85)))
(assert (= temp561_87 #x0000000000000000))
(assert (= temp561_88 #x0000000000000005))
(assert (= temp561_89 temp561_88))
(assert (= temp561_90 (select ARGNAME_output_padding_NAMEEND_VAL temp561_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp561_70 temp561_67)
             (bvslt temp561_74 temp561_71)
             (bvslt temp561_78 temp561_75)
             (bvslt temp561_82 temp561_79)
             (bvslt temp561_86 temp561_83)
             (bvslt temp561_90 temp561_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_91 #x0000000000000000))
(assert (= var1322797 temp561_91))
(assert (= temp561_92 #x0000000000000000))
(assert (= temp561_93 temp561_92))
(assert (= temp561_94 (select ARGNAME_stride_NAMEEND_VAL temp561_93)))
(assert (= temp561_95 #x0000000000000001))
(assert (= temp561_96 temp561_95))
(assert (= temp561_97 (select ARGNAME_stride_NAMEEND_VAL temp561_96)))
(assert (= temp561_98 #x0000000000000002))
(assert (= temp561_99 temp561_98))
(assert (= temp561_100 (select ARGNAME_stride_NAMEEND_VAL temp561_99)))
(assert (= temp561_101 #x0000000000000003))
(assert (= temp561_102 temp561_101))
(assert (= temp561_103 (select ARGNAME_stride_NAMEEND_VAL temp561_102)))
(assert (= temp561_104 #x0000000000000004))
(assert (= temp561_105 temp561_104))
(assert (= temp561_106 (select ARGNAME_stride_NAMEEND_VAL temp561_105)))
(assert (= temp561_107 #x0000000000000005))
(assert (= temp561_108 temp561_107))
(assert (= temp561_109 (select ARGNAME_stride_NAMEEND_VAL temp561_108)))
(assert (= temp561_110 #x0000000000000000))
(assert (= temp561_111 #x0000000000000000))
(assert (= temp561_112 temp561_111))
(assert (= temp561_113 (select ARGNAME_stride_NAMEEND_VAL temp561_112)))
(assert (= temp561_114 #x0000000000000000))
(assert (= temp561_115 #x0000000000000001))
(assert (= temp561_116 temp561_115))
(assert (= temp561_117 (select ARGNAME_stride_NAMEEND_VAL temp561_116)))
(assert (= temp561_118 #x0000000000000000))
(assert (= temp561_119 #x0000000000000002))
(assert (= temp561_120 temp561_119))
(assert (= temp561_121 (select ARGNAME_stride_NAMEEND_VAL temp561_120)))
(assert (= temp561_122 #x0000000000000000))
(assert (= temp561_123 #x0000000000000003))
(assert (= temp561_124 temp561_123))
(assert (= temp561_125 (select ARGNAME_stride_NAMEEND_VAL temp561_124)))
(assert (= temp561_126 #x0000000000000000))
(assert (= temp561_127 #x0000000000000004))
(assert (= temp561_128 temp561_127))
(assert (= temp561_129 (select ARGNAME_stride_NAMEEND_VAL temp561_128)))
(assert (= temp561_130 #x0000000000000000))
(assert (= temp561_131 #x0000000000000005))
(assert (= temp561_132 temp561_131))
(assert (= temp561_133 (select ARGNAME_stride_NAMEEND_VAL temp561_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp561_113 temp561_110)
             (bvsle temp561_117 temp561_114)
             (bvsle temp561_121 temp561_118)
             (bvsle temp561_125 temp561_122)
             (bvsle temp561_129 temp561_126)
             (bvsle temp561_133 temp561_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_134 #x0000000000000000))
(assert (= var1322807 temp561_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_135 #x0000000000000001))
(assert (= var1322819 temp561_135))
(assert (= temp561_136 #x0000000000000000))
(assert (= var1310898 temp561_136))
(assert (= temp561_137 #x0000000000000000))
(assert (= temp561_138 temp561_137))
(assert (= temp561_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_138)))
(assert (= temp561_140 #x0000000000000001))
(assert (= temp561_141 temp561_140))
(assert (= temp561_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_141)))
(assert (= temp561_143 #x0000000000000002))
(assert (= temp561_144 temp561_143))
(assert (= temp561_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_144)))
(assert (= temp561_146 #x0000000000000003))
(assert (= temp561_147 temp561_146))
(assert (= temp561_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_147)))
(assert (= temp561_149 #x0000000000000004))
(assert (= temp561_150 temp561_149))
(assert (= temp561_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_150)))
(assert (= temp561_152 #x0000000000000005))
(assert (= temp561_153 temp561_152))
(assert (= temp561_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_153)))
(assert (= temp561_156 var1310898))
(assert (= temp561_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_156)))
(assert (= temp561_155 temp561_157))
(assert (= var1322852
   (ite (bvslt temp561_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_158 #x0000000000000000))
(assert (= var1322852 temp561_158))
(assert (= temp561_159 #x0000000000000000))
(assert (= var1310898 temp561_159))
(assert (= temp561_161 var1310898))
(assert (= temp561_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_161)))
(assert (= temp561_160 temp561_162))
(assert (= var1322874 (bvsmod temp561_160 ARGNAME_groups_NAMEEND)))
(assert (= temp561_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp561_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp561_164 #x0000000000000001))
(assert (= var1322875 temp561_164))
(assert (= temp561_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp561_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_166 #x0000000000000001))
(assert (= var1322895 temp561_166))
(assert (= temp561_167 #x0000000000000001))
(assert (= var1311786 temp561_167))
(assert (= temp561_168 #x0000000000000000))
(assert (= temp561_169 temp561_168))
(assert (= temp561_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_169)))
(assert (= temp561_171 #x0000000000000001))
(assert (= temp561_172 temp561_171))
(assert (= temp561_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_172)))
(assert (= temp561_174 #x0000000000000002))
(assert (= temp561_175 temp561_174))
(assert (= temp561_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_175)))
(assert (= temp561_177 #x0000000000000003))
(assert (= temp561_178 temp561_177))
(assert (= temp561_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_178)))
(assert (= temp561_180 #x0000000000000004))
(assert (= temp561_181 temp561_180))
(assert (= temp561_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_181)))
(assert (= temp561_183 #x0000000000000005))
(assert (= temp561_184 temp561_183))
(assert (= temp561_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_184)))
(assert (= temp561_186 #x0000000000000000))
(assert (= temp561_187
   (ite (bvslt var1311786 temp561_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp561_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_187)))
(assert (= var1322903 temp561_188))
(assert (bvslt (ite (bvslt var1311786 temp561_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp561_189 #x0000000000000001))
(assert (= var1311786 temp561_189))
(assert (= temp561_191 var1311786))
(assert (= temp561_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_191)))
(assert (= temp561_190 temp561_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp561_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp561_193 #x0000000000000001))
(assert (= var1322908 temp561_193))
(assert (= temp561_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp561_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_195 #x0000000000000001))
(assert (= var1322975 temp561_195))
(assert (= temp561_196 #x0000000000000000))
(assert (= var1310898 temp561_196))
(assert (= temp561_197 #x0000000000000000))
(assert (= temp561_198 temp561_197))
(assert (= temp561_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp561_198)))
(assert (= temp561_200 #x0000000000000001))
(assert (= temp561_201 temp561_200))
(assert (= temp561_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp561_201)))
(assert (= temp561_203 #x0000000000000002))
(assert (= temp561_204 temp561_203))
(assert (= temp561_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp561_204)))
(assert (= temp561_206 #x0000000000000003))
(assert (= temp561_207 temp561_206))
(assert (= temp561_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp561_207)))
(assert (= temp561_209 #x0000000000000004))
(assert (= temp561_210 temp561_209))
(assert (= temp561_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp561_210)))
(assert (= temp561_212 #x0000000000000005))
(assert (= temp561_213 temp561_212))
(assert (= temp561_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp561_213)))
(assert (= temp561_215 #x0000000000000000))
(assert (= temp561_216
   (ite (bvslt var1310898 temp561_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp561_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp561_216)))
(assert (= var1322977 temp561_217))
(assert (bvslt (ite (bvslt var1310898 temp561_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp561_218 #x0000000000000000))
(assert (= var1310898 temp561_218))
(assert (= temp561_220 var1310898))
(assert (= temp561_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_220)))
(assert (= temp561_219 temp561_221))
(assert (= var1322980
   (ite (= var1322977 temp561_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp561_222 #x0000000000000001))
(assert (= var1322980 temp561_222))
(assert (= temp561_223 #x0000000000000002))
(assert (= var1848169 temp561_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp561_225 #x0000000000000001))
(assert (= var1323065 temp561_225))
(assert (= temp561_226 #x0000000000000001))
(assert (= var3486735 temp561_226))
(assert (= temp561_227 #x0000000000000001))
(assert (= var3814415 temp561_227))
(assert (= temp561_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp561_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_229 #x0000000000000001))
(assert (= var79986 temp561_229))
(assert (= temp561_230 #x0000000000000001))
(assert (= var80116 temp561_230))
(assert (= var4796905 var80116))
(assert (= temp561_231 #x0000000000000000))
(assert (= var4784306 temp561_231))
(assert (= temp561_232 #x0000000000000000))
(assert (= temp561_233
   (ite (bvslt var4784306 temp561_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp561_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_233)))
(assert (= var4796924 temp561_234))
(assert (bvslt (ite (bvslt var4784306 temp561_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp561_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp561_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp561_236 #x0000000000000001))
(assert (= var4796925 temp561_236))
(assert (= temp561_237 #x0000000000000000))
(assert (= var4996927 temp561_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp561_238 #x0000000000000002))
(assert (= var5125763 temp561_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_239 #x0000000000000000))
(assert (= var5191324 temp561_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp561_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp561_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_241 #x0000000000000000))
(assert (= var81342 temp561_241))
(assert (= temp561_242 #x0000000000000002))
(assert (= var5977731 temp561_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp561_243 #x0000000000000001))
(assert (= var79986 temp561_243))
(model-add temp561_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp561_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp561_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






