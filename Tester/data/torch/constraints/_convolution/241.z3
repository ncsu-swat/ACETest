(declare-fun temp320_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp320_2 () (_ BitVec 64))
(declare-fun temp320_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp320_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp320_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp320_6 () (_ BitVec 64))
(declare-fun temp320_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp320_8 () (_ BitVec 64))
(declare-fun temp320_9 () (_ BitVec 64))
(declare-fun temp320_10 () (_ BitVec 64))
(declare-fun temp320_11 () (_ BitVec 64))
(declare-fun temp320_12 () (_ BitVec 64))
(declare-fun temp320_13 () (_ BitVec 64))
(declare-fun temp320_14 () (_ BitVec 64))
(declare-fun temp320_15 () (_ BitVec 64))
(declare-fun temp320_16 () (_ BitVec 64))
(declare-fun temp320_17 () (_ BitVec 64))
(declare-fun temp320_18 () (_ BitVec 64))
(declare-fun temp320_19 () (_ BitVec 64))
(declare-fun temp320_20 () (_ BitVec 64))
(declare-fun temp320_21 () (_ BitVec 64))
(declare-fun temp320_22 () (_ BitVec 64))
(declare-fun temp320_23 () (_ BitVec 64))
(declare-fun temp320_24 () (_ BitVec 64))
(declare-fun temp320_25 () (_ BitVec 64))
(declare-fun temp320_26 () (_ BitVec 64))
(declare-fun temp320_27 () (_ BitVec 64))
(declare-fun temp320_28 () (_ BitVec 64))
(declare-fun temp320_29 () (_ BitVec 64))
(declare-fun temp320_30 () (_ BitVec 64))
(declare-fun temp320_31 () (_ BitVec 64))
(declare-fun temp320_32 () (_ BitVec 64))
(declare-fun temp320_33 () (_ BitVec 64))
(declare-fun temp320_34 () (_ BitVec 64))
(declare-fun temp320_35 () (_ BitVec 64))
(declare-fun temp320_36 () (_ BitVec 64))
(declare-fun temp320_37 () (_ BitVec 64))
(declare-fun temp320_38 () (_ BitVec 64))
(declare-fun temp320_39 () (_ BitVec 64))
(declare-fun temp320_40 () (_ BitVec 64))
(declare-fun temp320_41 () (_ BitVec 64))
(declare-fun temp320_42 () (_ BitVec 64))
(declare-fun temp320_43 () (_ BitVec 64))
(declare-fun temp320_44 () (_ BitVec 64))
(declare-fun temp320_45 () (_ BitVec 64))
(declare-fun temp320_46 () (_ BitVec 64))
(declare-fun temp320_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp320_48 () (_ BitVec 64))
(declare-fun temp320_49 () (_ BitVec 64))
(declare-fun temp320_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp320_51 () (_ BitVec 64))
(declare-fun temp320_52 () (_ BitVec 64))
(declare-fun temp320_53 () (_ BitVec 64))
(declare-fun temp320_54 () (_ BitVec 64))
(declare-fun temp320_55 () (_ BitVec 64))
(declare-fun temp320_56 () (_ BitVec 64))
(declare-fun temp320_57 () (_ BitVec 64))
(declare-fun temp320_58 () (_ BitVec 64))
(declare-fun temp320_59 () (_ BitVec 64))
(declare-fun temp320_60 () (_ BitVec 64))
(declare-fun temp320_61 () (_ BitVec 64))
(declare-fun temp320_62 () (_ BitVec 64))
(declare-fun temp320_63 () (_ BitVec 64))
(declare-fun temp320_64 () (_ BitVec 64))
(declare-fun temp320_65 () (_ BitVec 64))
(declare-fun temp320_66 () (_ BitVec 64))
(declare-fun temp320_67 () (_ BitVec 64))
(declare-fun temp320_68 () (_ BitVec 64))
(declare-fun temp320_69 () (_ BitVec 64))
(declare-fun temp320_70 () (_ BitVec 64))
(declare-fun temp320_71 () (_ BitVec 64))
(declare-fun temp320_72 () (_ BitVec 64))
(declare-fun temp320_73 () (_ BitVec 64))
(declare-fun temp320_74 () (_ BitVec 64))
(declare-fun temp320_75 () (_ BitVec 64))
(declare-fun temp320_76 () (_ BitVec 64))
(declare-fun temp320_77 () (_ BitVec 64))
(declare-fun temp320_78 () (_ BitVec 64))
(declare-fun temp320_79 () (_ BitVec 64))
(declare-fun temp320_80 () (_ BitVec 64))
(declare-fun temp320_81 () (_ BitVec 64))
(declare-fun temp320_82 () (_ BitVec 64))
(declare-fun temp320_83 () (_ BitVec 64))
(declare-fun temp320_84 () (_ BitVec 64))
(declare-fun temp320_85 () (_ BitVec 64))
(declare-fun temp320_86 () (_ BitVec 64))
(declare-fun temp320_87 () (_ BitVec 64))
(declare-fun temp320_88 () (_ BitVec 64))
(declare-fun temp320_89 () (_ BitVec 64))
(declare-fun temp320_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp320_91 () (_ BitVec 64))
(declare-fun temp320_92 () (_ BitVec 64))
(declare-fun temp320_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp320_94 () (_ BitVec 64))
(declare-fun temp320_95 () (_ BitVec 64))
(declare-fun temp320_96 () (_ BitVec 64))
(declare-fun temp320_97 () (_ BitVec 64))
(declare-fun temp320_98 () (_ BitVec 64))
(declare-fun temp320_99 () (_ BitVec 64))
(declare-fun temp320_100 () (_ BitVec 64))
(declare-fun temp320_101 () (_ BitVec 64))
(declare-fun temp320_102 () (_ BitVec 64))
(declare-fun temp320_103 () (_ BitVec 64))
(declare-fun temp320_104 () (_ BitVec 64))
(declare-fun temp320_105 () (_ BitVec 64))
(declare-fun temp320_106 () (_ BitVec 64))
(declare-fun temp320_107 () (_ BitVec 64))
(declare-fun temp320_108 () (_ BitVec 64))
(declare-fun temp320_109 () (_ BitVec 64))
(declare-fun temp320_110 () (_ BitVec 64))
(declare-fun temp320_111 () (_ BitVec 64))
(declare-fun temp320_112 () (_ BitVec 64))
(declare-fun temp320_113 () (_ BitVec 64))
(declare-fun temp320_114 () (_ BitVec 64))
(declare-fun temp320_115 () (_ BitVec 64))
(declare-fun temp320_116 () (_ BitVec 64))
(declare-fun temp320_117 () (_ BitVec 64))
(declare-fun temp320_118 () (_ BitVec 64))
(declare-fun temp320_119 () (_ BitVec 64))
(declare-fun temp320_120 () (_ BitVec 64))
(declare-fun temp320_121 () (_ BitVec 64))
(declare-fun temp320_122 () (_ BitVec 64))
(declare-fun temp320_123 () (_ BitVec 64))
(declare-fun temp320_124 () (_ BitVec 64))
(declare-fun temp320_125 () (_ BitVec 64))
(declare-fun temp320_126 () (_ BitVec 64))
(declare-fun temp320_127 () (_ BitVec 64))
(declare-fun temp320_128 () (_ BitVec 64))
(declare-fun temp320_129 () (_ BitVec 64))
(declare-fun temp320_130 () (_ BitVec 64))
(declare-fun temp320_131 () (_ BitVec 64))
(declare-fun temp320_132 () (_ BitVec 64))
(declare-fun temp320_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp320_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp320_135 () (_ BitVec 64))
(declare-fun temp320_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp320_137 () (_ BitVec 64))
(declare-fun temp320_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp320_139 () (_ BitVec 64))
(declare-fun temp320_140 () (_ BitVec 64))
(declare-fun temp320_141 () (_ BitVec 64))
(declare-fun temp320_142 () (_ BitVec 64))
(declare-fun temp320_143 () (_ BitVec 64))
(declare-fun temp320_144 () (_ BitVec 64))
(declare-fun temp320_145 () (_ BitVec 64))
(declare-fun temp320_146 () (_ BitVec 64))
(declare-fun temp320_147 () (_ BitVec 64))
(declare-fun temp320_148 () (_ BitVec 64))
(declare-fun temp320_149 () (_ BitVec 64))
(declare-fun temp320_150 () (_ BitVec 64))
(declare-fun temp320_151 () (_ BitVec 64))
(declare-fun temp320_152 () (_ BitVec 64))
(declare-fun temp320_153 () (_ BitVec 64))
(declare-fun temp320_154 () (_ BitVec 64))
(declare-fun temp320_156 () (_ BitVec 64))
(declare-fun temp320_157 () (_ BitVec 64))
(declare-fun temp320_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp320_158 () (_ BitVec 64))
(declare-fun temp320_159 () (_ BitVec 64))
(declare-fun temp320_161 () (_ BitVec 64))
(declare-fun temp320_162 () (_ BitVec 64))
(declare-fun temp320_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp320_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp320_164 () (_ BitVec 64))
(declare-fun temp320_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp320_166 () (_ BitVec 64))
(declare-fun temp320_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp320_168 () (_ BitVec 64))
(declare-fun temp320_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp320_170 () (_ BitVec 64))
(declare-fun temp320_171 () (_ BitVec 64))
(declare-fun temp320_172 () (_ BitVec 64))
(declare-fun temp320_173 () (_ BitVec 64))
(declare-fun temp320_174 () (_ BitVec 64))
(declare-fun temp320_175 () (_ BitVec 64))
(declare-fun temp320_176 () (_ BitVec 64))
(declare-fun temp320_177 () (_ BitVec 64))
(declare-fun temp320_178 () (_ BitVec 64))
(declare-fun temp320_179 () (_ BitVec 64))
(declare-fun temp320_180 () (_ BitVec 64))
(declare-fun temp320_181 () (_ BitVec 64))
(declare-fun temp320_182 () (_ BitVec 64))
(declare-fun temp320_183 () (_ BitVec 64))
(declare-fun temp320_184 () (_ BitVec 64))
(declare-fun temp320_185 () (_ BitVec 64))
(declare-fun temp320_186 () (_ BitVec 64))
(declare-fun temp320_187 () (_ BitVec 64))
(declare-fun temp320_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp320_189 () (_ BitVec 64))
(declare-fun temp320_191 () (_ BitVec 64))
(declare-fun temp320_192 () (_ BitVec 64))
(declare-fun temp320_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp320_193 () (_ BitVec 64))
(declare-fun temp320_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp320_195 () (_ BitVec 64))
(declare-fun temp320_196 () (_ BitVec 64))
(declare-fun temp320_197 () (_ BitVec 64))
(declare-fun temp320_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp320_199 () (_ BitVec 64))
(declare-fun temp320_200 () (_ BitVec 64))
(declare-fun temp320_201 () (_ BitVec 64))
(declare-fun temp320_202 () (_ BitVec 64))
(declare-fun temp320_203 () (_ BitVec 64))
(declare-fun temp320_204 () (_ BitVec 64))
(declare-fun temp320_205 () (_ BitVec 64))
(declare-fun temp320_206 () (_ BitVec 64))
(declare-fun temp320_207 () (_ BitVec 64))
(declare-fun temp320_208 () (_ BitVec 64))
(declare-fun temp320_209 () (_ BitVec 64))
(declare-fun temp320_210 () (_ BitVec 64))
(declare-fun temp320_211 () (_ BitVec 64))
(declare-fun temp320_212 () (_ BitVec 64))
(declare-fun temp320_213 () (_ BitVec 64))
(declare-fun temp320_214 () (_ BitVec 64))
(declare-fun temp320_215 () (_ BitVec 64))
(declare-fun temp320_216 () (_ BitVec 64))
(declare-fun temp320_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp320_218 () (_ BitVec 64))
(declare-fun temp320_220 () (_ BitVec 64))
(declare-fun temp320_221 () (_ BitVec 64))
(declare-fun temp320_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp320_222 () (_ BitVec 64))
(declare-fun temp320_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp320_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp320_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp320_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp320_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp320_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp320_229 () (_ BitVec 64))
(declare-fun temp320_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp320_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp320_232 () (_ BitVec 64))
(declare-fun temp320_233 () (_ BitVec 64))
(declare-fun temp320_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp320_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp320_236 () (_ BitVec 64))
(declare-fun temp320_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp320_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp320_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5779856 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun temp320_240 () (_ BitVec 64))
(declare-fun var6369680 () (_ BitVec 64))
(declare-fun temp320_241 () (_ BitVec 64))
(declare-fun temp320_242 () (_ BitVec 64))
(declare-fun var7811860 () (_ BitVec 64))
(declare-fun var7811827 () (_ BitVec 64))
(declare-fun var7680391 () (_ BitVec 64))
(declare-fun var7680387 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp320_243 () (_ BitVec 64))
(assert (= temp320_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp320_1)))
(assert (= temp320_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp320_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_3 #x0000000000000000))
(assert (= var79869 temp320_3))
(assert (= temp320_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp320_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_5 #x0000000000000000))
(assert (= var79914 temp320_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp320_6 #x0000000000000000))
(assert (= temp320_7 temp320_6))
(assert (= temp320_8 (select ARGNAME_padding_NAMEEND_VAL temp320_7)))
(assert (= temp320_9 #x0000000000000001))
(assert (= temp320_10 temp320_9))
(assert (= temp320_11 (select ARGNAME_padding_NAMEEND_VAL temp320_10)))
(assert (= temp320_12 #x0000000000000002))
(assert (= temp320_13 temp320_12))
(assert (= temp320_14 (select ARGNAME_padding_NAMEEND_VAL temp320_13)))
(assert (= temp320_15 #x0000000000000003))
(assert (= temp320_16 temp320_15))
(assert (= temp320_17 (select ARGNAME_padding_NAMEEND_VAL temp320_16)))
(assert (= temp320_18 #x0000000000000004))
(assert (= temp320_19 temp320_18))
(assert (= temp320_20 (select ARGNAME_padding_NAMEEND_VAL temp320_19)))
(assert (= temp320_21 #x0000000000000005))
(assert (= temp320_22 temp320_21))
(assert (= temp320_23 (select ARGNAME_padding_NAMEEND_VAL temp320_22)))
(assert (= temp320_24 #x0000000000000000))
(assert (= temp320_25 #x0000000000000000))
(assert (= temp320_26 temp320_25))
(assert (= temp320_27 (select ARGNAME_padding_NAMEEND_VAL temp320_26)))
(assert (= temp320_28 #x0000000000000000))
(assert (= temp320_29 #x0000000000000001))
(assert (= temp320_30 temp320_29))
(assert (= temp320_31 (select ARGNAME_padding_NAMEEND_VAL temp320_30)))
(assert (= temp320_32 #x0000000000000000))
(assert (= temp320_33 #x0000000000000002))
(assert (= temp320_34 temp320_33))
(assert (= temp320_35 (select ARGNAME_padding_NAMEEND_VAL temp320_34)))
(assert (= temp320_36 #x0000000000000000))
(assert (= temp320_37 #x0000000000000003))
(assert (= temp320_38 temp320_37))
(assert (= temp320_39 (select ARGNAME_padding_NAMEEND_VAL temp320_38)))
(assert (= temp320_40 #x0000000000000000))
(assert (= temp320_41 #x0000000000000004))
(assert (= temp320_42 temp320_41))
(assert (= temp320_43 (select ARGNAME_padding_NAMEEND_VAL temp320_42)))
(assert (= temp320_44 #x0000000000000000))
(assert (= temp320_45 #x0000000000000005))
(assert (= temp320_46 temp320_45))
(assert (= temp320_47 (select ARGNAME_padding_NAMEEND_VAL temp320_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp320_27 temp320_24)
             (bvslt temp320_31 temp320_28)
             (bvslt temp320_35 temp320_32)
             (bvslt temp320_39 temp320_36)
             (bvslt temp320_43 temp320_40)
             (bvslt temp320_47 temp320_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_48 #x0000000000000000))
(assert (= var1322786 temp320_48))
(assert (= temp320_49 #x0000000000000000))
(assert (= temp320_50 temp320_49))
(assert (= temp320_51 (select ARGNAME_output_padding_NAMEEND_VAL temp320_50)))
(assert (= temp320_52 #x0000000000000001))
(assert (= temp320_53 temp320_52))
(assert (= temp320_54 (select ARGNAME_output_padding_NAMEEND_VAL temp320_53)))
(assert (= temp320_55 #x0000000000000002))
(assert (= temp320_56 temp320_55))
(assert (= temp320_57 (select ARGNAME_output_padding_NAMEEND_VAL temp320_56)))
(assert (= temp320_58 #x0000000000000003))
(assert (= temp320_59 temp320_58))
(assert (= temp320_60 (select ARGNAME_output_padding_NAMEEND_VAL temp320_59)))
(assert (= temp320_61 #x0000000000000004))
(assert (= temp320_62 temp320_61))
(assert (= temp320_63 (select ARGNAME_output_padding_NAMEEND_VAL temp320_62)))
(assert (= temp320_64 #x0000000000000005))
(assert (= temp320_65 temp320_64))
(assert (= temp320_66 (select ARGNAME_output_padding_NAMEEND_VAL temp320_65)))
(assert (= temp320_67 #x0000000000000000))
(assert (= temp320_68 #x0000000000000000))
(assert (= temp320_69 temp320_68))
(assert (= temp320_70 (select ARGNAME_output_padding_NAMEEND_VAL temp320_69)))
(assert (= temp320_71 #x0000000000000000))
(assert (= temp320_72 #x0000000000000001))
(assert (= temp320_73 temp320_72))
(assert (= temp320_74 (select ARGNAME_output_padding_NAMEEND_VAL temp320_73)))
(assert (= temp320_75 #x0000000000000000))
(assert (= temp320_76 #x0000000000000002))
(assert (= temp320_77 temp320_76))
(assert (= temp320_78 (select ARGNAME_output_padding_NAMEEND_VAL temp320_77)))
(assert (= temp320_79 #x0000000000000000))
(assert (= temp320_80 #x0000000000000003))
(assert (= temp320_81 temp320_80))
(assert (= temp320_82 (select ARGNAME_output_padding_NAMEEND_VAL temp320_81)))
(assert (= temp320_83 #x0000000000000000))
(assert (= temp320_84 #x0000000000000004))
(assert (= temp320_85 temp320_84))
(assert (= temp320_86 (select ARGNAME_output_padding_NAMEEND_VAL temp320_85)))
(assert (= temp320_87 #x0000000000000000))
(assert (= temp320_88 #x0000000000000005))
(assert (= temp320_89 temp320_88))
(assert (= temp320_90 (select ARGNAME_output_padding_NAMEEND_VAL temp320_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp320_70 temp320_67)
             (bvslt temp320_74 temp320_71)
             (bvslt temp320_78 temp320_75)
             (bvslt temp320_82 temp320_79)
             (bvslt temp320_86 temp320_83)
             (bvslt temp320_90 temp320_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_91 #x0000000000000000))
(assert (= var1322797 temp320_91))
(assert (= temp320_92 #x0000000000000000))
(assert (= temp320_93 temp320_92))
(assert (= temp320_94 (select ARGNAME_stride_NAMEEND_VAL temp320_93)))
(assert (= temp320_95 #x0000000000000001))
(assert (= temp320_96 temp320_95))
(assert (= temp320_97 (select ARGNAME_stride_NAMEEND_VAL temp320_96)))
(assert (= temp320_98 #x0000000000000002))
(assert (= temp320_99 temp320_98))
(assert (= temp320_100 (select ARGNAME_stride_NAMEEND_VAL temp320_99)))
(assert (= temp320_101 #x0000000000000003))
(assert (= temp320_102 temp320_101))
(assert (= temp320_103 (select ARGNAME_stride_NAMEEND_VAL temp320_102)))
(assert (= temp320_104 #x0000000000000004))
(assert (= temp320_105 temp320_104))
(assert (= temp320_106 (select ARGNAME_stride_NAMEEND_VAL temp320_105)))
(assert (= temp320_107 #x0000000000000005))
(assert (= temp320_108 temp320_107))
(assert (= temp320_109 (select ARGNAME_stride_NAMEEND_VAL temp320_108)))
(assert (= temp320_110 #x0000000000000000))
(assert (= temp320_111 #x0000000000000000))
(assert (= temp320_112 temp320_111))
(assert (= temp320_113 (select ARGNAME_stride_NAMEEND_VAL temp320_112)))
(assert (= temp320_114 #x0000000000000000))
(assert (= temp320_115 #x0000000000000001))
(assert (= temp320_116 temp320_115))
(assert (= temp320_117 (select ARGNAME_stride_NAMEEND_VAL temp320_116)))
(assert (= temp320_118 #x0000000000000000))
(assert (= temp320_119 #x0000000000000002))
(assert (= temp320_120 temp320_119))
(assert (= temp320_121 (select ARGNAME_stride_NAMEEND_VAL temp320_120)))
(assert (= temp320_122 #x0000000000000000))
(assert (= temp320_123 #x0000000000000003))
(assert (= temp320_124 temp320_123))
(assert (= temp320_125 (select ARGNAME_stride_NAMEEND_VAL temp320_124)))
(assert (= temp320_126 #x0000000000000000))
(assert (= temp320_127 #x0000000000000004))
(assert (= temp320_128 temp320_127))
(assert (= temp320_129 (select ARGNAME_stride_NAMEEND_VAL temp320_128)))
(assert (= temp320_130 #x0000000000000000))
(assert (= temp320_131 #x0000000000000005))
(assert (= temp320_132 temp320_131))
(assert (= temp320_133 (select ARGNAME_stride_NAMEEND_VAL temp320_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp320_113 temp320_110)
             (bvsle temp320_117 temp320_114)
             (bvsle temp320_121 temp320_118)
             (bvsle temp320_125 temp320_122)
             (bvsle temp320_129 temp320_126)
             (bvsle temp320_133 temp320_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_134 #x0000000000000000))
(assert (= var1322807 temp320_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_135 #x0000000000000001))
(assert (= var1322819 temp320_135))
(assert (= temp320_136 #x0000000000000000))
(assert (= var1310898 temp320_136))
(assert (= temp320_137 #x0000000000000000))
(assert (= temp320_138 temp320_137))
(assert (= temp320_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_138)))
(assert (= temp320_140 #x0000000000000001))
(assert (= temp320_141 temp320_140))
(assert (= temp320_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_141)))
(assert (= temp320_143 #x0000000000000002))
(assert (= temp320_144 temp320_143))
(assert (= temp320_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_144)))
(assert (= temp320_146 #x0000000000000003))
(assert (= temp320_147 temp320_146))
(assert (= temp320_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_147)))
(assert (= temp320_149 #x0000000000000004))
(assert (= temp320_150 temp320_149))
(assert (= temp320_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_150)))
(assert (= temp320_152 #x0000000000000005))
(assert (= temp320_153 temp320_152))
(assert (= temp320_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_153)))
(assert (= temp320_156 var1310898))
(assert (= temp320_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_156)))
(assert (= temp320_155 temp320_157))
(assert (= var1322852
   (ite (bvslt temp320_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_158 #x0000000000000000))
(assert (= var1322852 temp320_158))
(assert (= temp320_159 #x0000000000000000))
(assert (= var1310898 temp320_159))
(assert (= temp320_161 var1310898))
(assert (= temp320_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_161)))
(assert (= temp320_160 temp320_162))
(assert (= var1322874 (bvsmod temp320_160 ARGNAME_groups_NAMEEND)))
(assert (= temp320_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp320_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_164 #x0000000000000001))
(assert (= var1322875 temp320_164))
(assert (= temp320_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp320_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_166 #x0000000000000001))
(assert (= var1322895 temp320_166))
(assert (= temp320_167 #x0000000000000001))
(assert (= var1311786 temp320_167))
(assert (= temp320_168 #x0000000000000000))
(assert (= temp320_169 temp320_168))
(assert (= temp320_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_169)))
(assert (= temp320_171 #x0000000000000001))
(assert (= temp320_172 temp320_171))
(assert (= temp320_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_172)))
(assert (= temp320_174 #x0000000000000002))
(assert (= temp320_175 temp320_174))
(assert (= temp320_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_175)))
(assert (= temp320_177 #x0000000000000003))
(assert (= temp320_178 temp320_177))
(assert (= temp320_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_178)))
(assert (= temp320_180 #x0000000000000004))
(assert (= temp320_181 temp320_180))
(assert (= temp320_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_181)))
(assert (= temp320_183 #x0000000000000005))
(assert (= temp320_184 temp320_183))
(assert (= temp320_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_184)))
(assert (= temp320_186 #x0000000000000000))
(assert (= temp320_187
   (ite (bvslt var1311786 temp320_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp320_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_187)))
(assert (= var1322903 temp320_188))
(assert (bvslt (ite (bvslt var1311786 temp320_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp320_189 #x0000000000000001))
(assert (= var1311786 temp320_189))
(assert (= temp320_191 var1311786))
(assert (= temp320_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_191)))
(assert (= temp320_190 temp320_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp320_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_193 #x0000000000000001))
(assert (= var1322908 temp320_193))
(assert (= temp320_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp320_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_195 #x0000000000000001))
(assert (= var1322975 temp320_195))
(assert (= temp320_196 #x0000000000000000))
(assert (= var1310898 temp320_196))
(assert (= temp320_197 #x0000000000000000))
(assert (= temp320_198 temp320_197))
(assert (= temp320_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp320_198)))
(assert (= temp320_200 #x0000000000000001))
(assert (= temp320_201 temp320_200))
(assert (= temp320_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp320_201)))
(assert (= temp320_203 #x0000000000000002))
(assert (= temp320_204 temp320_203))
(assert (= temp320_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp320_204)))
(assert (= temp320_206 #x0000000000000003))
(assert (= temp320_207 temp320_206))
(assert (= temp320_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp320_207)))
(assert (= temp320_209 #x0000000000000004))
(assert (= temp320_210 temp320_209))
(assert (= temp320_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp320_210)))
(assert (= temp320_212 #x0000000000000005))
(assert (= temp320_213 temp320_212))
(assert (= temp320_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp320_213)))
(assert (= temp320_215 #x0000000000000000))
(assert (= temp320_216
   (ite (bvslt var1310898 temp320_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp320_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp320_216)))
(assert (= var1322977 temp320_217))
(assert (bvslt (ite (bvslt var1310898 temp320_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp320_218 #x0000000000000000))
(assert (= var1310898 temp320_218))
(assert (= temp320_220 var1310898))
(assert (= temp320_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp320_220)))
(assert (= temp320_219 temp320_221))
(assert (= var1322980
   (ite (= var1322977 temp320_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_222 #x0000000000000001))
(assert (= var1322980 temp320_222))
(assert (= temp320_223 #x0000000000000002))
(assert (= var1848169 temp320_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp320_225 #x0000000000000001))
(assert (= var1323065 temp320_225))
(assert (= temp320_226 #x0000000000000001))
(assert (= var3486735 temp320_226))
(assert (= temp320_227 #x0000000000000001))
(assert (= var3814415 temp320_227))
(assert (= temp320_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp320_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_229 #x0000000000000001))
(assert (= var79986 temp320_229))
(assert (= temp320_230 #x0000000000000001))
(assert (= var80116 temp320_230))
(assert (= var4796905 var80116))
(assert (= temp320_231 #x0000000000000000))
(assert (= var4784306 temp320_231))
(assert (= temp320_232 #x0000000000000000))
(assert (= temp320_233
   (ite (bvslt var4784306 temp320_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp320_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_233)))
(assert (= var4796924 temp320_234))
(assert (bvslt (ite (bvslt var4784306 temp320_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp320_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp320_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_236 #x0000000000000001))
(assert (= var4796925 temp320_236))
(assert (= temp320_237 #x0000000000000000))
(assert (= var4996927 temp320_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp320_238 #x0000000000000002))
(assert (= var5125763 temp320_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_239 #x0000000000000000))
(assert (= var5191324 temp320_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5779856 var80129))
(assert (= var6042000 var80129))
(assert (= temp320_240 #x0000000000000000))
(assert (= var6369680 temp320_240))
(assert (= temp320_241 #x0000000000000001))
(assert (= var79986 temp320_241))
(assert (= temp320_242 #x0000000000000000))
(assert (= var7811860 temp320_242))
(assert (= var7811827 var7811860))
(assert (= var7680391 var7811827))
(assert (= var7680387 var7680391))
(assert (= var81597 var7680387))
(assert (= temp320_243 #x0000000000000000))
(assert (= var81597 temp320_243))
(model-add temp320_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp320_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp320_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






