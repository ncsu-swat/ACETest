(declare-fun temp386_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp386_2 () (_ BitVec 64))
(declare-fun temp386_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp386_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp386_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp386_6 () (_ BitVec 64))
(declare-fun temp386_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_8 () (_ BitVec 64))
(declare-fun temp386_9 () (_ BitVec 64))
(declare-fun temp386_10 () (_ BitVec 64))
(declare-fun temp386_11 () (_ BitVec 64))
(declare-fun temp386_12 () (_ BitVec 64))
(declare-fun temp386_13 () (_ BitVec 64))
(declare-fun temp386_14 () (_ BitVec 64))
(declare-fun temp386_15 () (_ BitVec 64))
(declare-fun temp386_16 () (_ BitVec 64))
(declare-fun temp386_17 () (_ BitVec 64))
(declare-fun temp386_18 () (_ BitVec 64))
(declare-fun temp386_19 () (_ BitVec 64))
(declare-fun temp386_20 () (_ BitVec 64))
(declare-fun temp386_21 () (_ BitVec 64))
(declare-fun temp386_22 () (_ BitVec 64))
(declare-fun temp386_23 () (_ BitVec 64))
(declare-fun temp386_24 () (_ BitVec 64))
(declare-fun temp386_25 () (_ BitVec 64))
(declare-fun temp386_26 () (_ BitVec 64))
(declare-fun temp386_27 () (_ BitVec 64))
(declare-fun temp386_28 () (_ BitVec 64))
(declare-fun temp386_29 () (_ BitVec 64))
(declare-fun temp386_30 () (_ BitVec 64))
(declare-fun temp386_31 () (_ BitVec 64))
(declare-fun temp386_32 () (_ BitVec 64))
(declare-fun temp386_33 () (_ BitVec 64))
(declare-fun temp386_34 () (_ BitVec 64))
(declare-fun temp386_35 () (_ BitVec 64))
(declare-fun temp386_36 () (_ BitVec 64))
(declare-fun temp386_37 () (_ BitVec 64))
(declare-fun temp386_38 () (_ BitVec 64))
(declare-fun temp386_39 () (_ BitVec 64))
(declare-fun temp386_40 () (_ BitVec 64))
(declare-fun temp386_41 () (_ BitVec 64))
(declare-fun temp386_42 () (_ BitVec 64))
(declare-fun temp386_43 () (_ BitVec 64))
(declare-fun temp386_44 () (_ BitVec 64))
(declare-fun temp386_45 () (_ BitVec 64))
(declare-fun temp386_46 () (_ BitVec 64))
(declare-fun temp386_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp386_48 () (_ BitVec 64))
(declare-fun temp386_49 () (_ BitVec 64))
(declare-fun temp386_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_51 () (_ BitVec 64))
(declare-fun temp386_52 () (_ BitVec 64))
(declare-fun temp386_53 () (_ BitVec 64))
(declare-fun temp386_54 () (_ BitVec 64))
(declare-fun temp386_55 () (_ BitVec 64))
(declare-fun temp386_56 () (_ BitVec 64))
(declare-fun temp386_57 () (_ BitVec 64))
(declare-fun temp386_58 () (_ BitVec 64))
(declare-fun temp386_59 () (_ BitVec 64))
(declare-fun temp386_60 () (_ BitVec 64))
(declare-fun temp386_61 () (_ BitVec 64))
(declare-fun temp386_62 () (_ BitVec 64))
(declare-fun temp386_63 () (_ BitVec 64))
(declare-fun temp386_64 () (_ BitVec 64))
(declare-fun temp386_65 () (_ BitVec 64))
(declare-fun temp386_66 () (_ BitVec 64))
(declare-fun temp386_67 () (_ BitVec 64))
(declare-fun temp386_68 () (_ BitVec 64))
(declare-fun temp386_69 () (_ BitVec 64))
(declare-fun temp386_70 () (_ BitVec 64))
(declare-fun temp386_71 () (_ BitVec 64))
(declare-fun temp386_72 () (_ BitVec 64))
(declare-fun temp386_73 () (_ BitVec 64))
(declare-fun temp386_74 () (_ BitVec 64))
(declare-fun temp386_75 () (_ BitVec 64))
(declare-fun temp386_76 () (_ BitVec 64))
(declare-fun temp386_77 () (_ BitVec 64))
(declare-fun temp386_78 () (_ BitVec 64))
(declare-fun temp386_79 () (_ BitVec 64))
(declare-fun temp386_80 () (_ BitVec 64))
(declare-fun temp386_81 () (_ BitVec 64))
(declare-fun temp386_82 () (_ BitVec 64))
(declare-fun temp386_83 () (_ BitVec 64))
(declare-fun temp386_84 () (_ BitVec 64))
(declare-fun temp386_85 () (_ BitVec 64))
(declare-fun temp386_86 () (_ BitVec 64))
(declare-fun temp386_87 () (_ BitVec 64))
(declare-fun temp386_88 () (_ BitVec 64))
(declare-fun temp386_89 () (_ BitVec 64))
(declare-fun temp386_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp386_91 () (_ BitVec 64))
(declare-fun temp386_92 () (_ BitVec 64))
(declare-fun temp386_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_94 () (_ BitVec 64))
(declare-fun temp386_95 () (_ BitVec 64))
(declare-fun temp386_96 () (_ BitVec 64))
(declare-fun temp386_97 () (_ BitVec 64))
(declare-fun temp386_98 () (_ BitVec 64))
(declare-fun temp386_99 () (_ BitVec 64))
(declare-fun temp386_100 () (_ BitVec 64))
(declare-fun temp386_101 () (_ BitVec 64))
(declare-fun temp386_102 () (_ BitVec 64))
(declare-fun temp386_103 () (_ BitVec 64))
(declare-fun temp386_104 () (_ BitVec 64))
(declare-fun temp386_105 () (_ BitVec 64))
(declare-fun temp386_106 () (_ BitVec 64))
(declare-fun temp386_107 () (_ BitVec 64))
(declare-fun temp386_108 () (_ BitVec 64))
(declare-fun temp386_109 () (_ BitVec 64))
(declare-fun temp386_110 () (_ BitVec 64))
(declare-fun temp386_111 () (_ BitVec 64))
(declare-fun temp386_112 () (_ BitVec 64))
(declare-fun temp386_113 () (_ BitVec 64))
(declare-fun temp386_114 () (_ BitVec 64))
(declare-fun temp386_115 () (_ BitVec 64))
(declare-fun temp386_116 () (_ BitVec 64))
(declare-fun temp386_117 () (_ BitVec 64))
(declare-fun temp386_118 () (_ BitVec 64))
(declare-fun temp386_119 () (_ BitVec 64))
(declare-fun temp386_120 () (_ BitVec 64))
(declare-fun temp386_121 () (_ BitVec 64))
(declare-fun temp386_122 () (_ BitVec 64))
(declare-fun temp386_123 () (_ BitVec 64))
(declare-fun temp386_124 () (_ BitVec 64))
(declare-fun temp386_125 () (_ BitVec 64))
(declare-fun temp386_126 () (_ BitVec 64))
(declare-fun temp386_127 () (_ BitVec 64))
(declare-fun temp386_128 () (_ BitVec 64))
(declare-fun temp386_129 () (_ BitVec 64))
(declare-fun temp386_130 () (_ BitVec 64))
(declare-fun temp386_131 () (_ BitVec 64))
(declare-fun temp386_132 () (_ BitVec 64))
(declare-fun temp386_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp386_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp386_135 () (_ BitVec 64))
(declare-fun temp386_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp386_137 () (_ BitVec 64))
(declare-fun temp386_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_139 () (_ BitVec 64))
(declare-fun temp386_140 () (_ BitVec 64))
(declare-fun temp386_141 () (_ BitVec 64))
(declare-fun temp386_142 () (_ BitVec 64))
(declare-fun temp386_143 () (_ BitVec 64))
(declare-fun temp386_144 () (_ BitVec 64))
(declare-fun temp386_145 () (_ BitVec 64))
(declare-fun temp386_146 () (_ BitVec 64))
(declare-fun temp386_147 () (_ BitVec 64))
(declare-fun temp386_148 () (_ BitVec 64))
(declare-fun temp386_149 () (_ BitVec 64))
(declare-fun temp386_150 () (_ BitVec 64))
(declare-fun temp386_151 () (_ BitVec 64))
(declare-fun temp386_152 () (_ BitVec 64))
(declare-fun temp386_153 () (_ BitVec 64))
(declare-fun temp386_154 () (_ BitVec 64))
(declare-fun temp386_156 () (_ BitVec 64))
(declare-fun temp386_157 () (_ BitVec 64))
(declare-fun temp386_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp386_158 () (_ BitVec 64))
(declare-fun temp386_159 () (_ BitVec 64))
(declare-fun temp386_161 () (_ BitVec 64))
(declare-fun temp386_162 () (_ BitVec 64))
(declare-fun temp386_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp386_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp386_164 () (_ BitVec 64))
(declare-fun temp386_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp386_166 () (_ BitVec 64))
(declare-fun temp386_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp386_168 () (_ BitVec 64))
(declare-fun temp386_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_170 () (_ BitVec 64))
(declare-fun temp386_171 () (_ BitVec 64))
(declare-fun temp386_172 () (_ BitVec 64))
(declare-fun temp386_173 () (_ BitVec 64))
(declare-fun temp386_174 () (_ BitVec 64))
(declare-fun temp386_175 () (_ BitVec 64))
(declare-fun temp386_176 () (_ BitVec 64))
(declare-fun temp386_177 () (_ BitVec 64))
(declare-fun temp386_178 () (_ BitVec 64))
(declare-fun temp386_179 () (_ BitVec 64))
(declare-fun temp386_180 () (_ BitVec 64))
(declare-fun temp386_181 () (_ BitVec 64))
(declare-fun temp386_182 () (_ BitVec 64))
(declare-fun temp386_183 () (_ BitVec 64))
(declare-fun temp386_184 () (_ BitVec 64))
(declare-fun temp386_185 () (_ BitVec 64))
(declare-fun temp386_186 () (_ BitVec 64))
(declare-fun temp386_187 () (_ BitVec 64))
(declare-fun temp386_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp386_189 () (_ BitVec 64))
(declare-fun temp386_191 () (_ BitVec 64))
(declare-fun temp386_192 () (_ BitVec 64))
(declare-fun temp386_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp386_193 () (_ BitVec 64))
(declare-fun temp386_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp386_195 () (_ BitVec 64))
(declare-fun temp386_196 () (_ BitVec 64))
(declare-fun temp386_197 () (_ BitVec 64))
(declare-fun temp386_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_199 () (_ BitVec 64))
(declare-fun temp386_200 () (_ BitVec 64))
(declare-fun temp386_201 () (_ BitVec 64))
(declare-fun temp386_202 () (_ BitVec 64))
(declare-fun temp386_203 () (_ BitVec 64))
(declare-fun temp386_204 () (_ BitVec 64))
(declare-fun temp386_205 () (_ BitVec 64))
(declare-fun temp386_206 () (_ BitVec 64))
(declare-fun temp386_207 () (_ BitVec 64))
(declare-fun temp386_208 () (_ BitVec 64))
(declare-fun temp386_209 () (_ BitVec 64))
(declare-fun temp386_210 () (_ BitVec 64))
(declare-fun temp386_211 () (_ BitVec 64))
(declare-fun temp386_212 () (_ BitVec 64))
(declare-fun temp386_213 () (_ BitVec 64))
(declare-fun temp386_214 () (_ BitVec 64))
(declare-fun temp386_215 () (_ BitVec 64))
(declare-fun temp386_216 () (_ BitVec 64))
(declare-fun temp386_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp386_218 () (_ BitVec 64))
(declare-fun temp386_220 () (_ BitVec 64))
(declare-fun temp386_221 () (_ BitVec 64))
(declare-fun temp386_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp386_222 () (_ BitVec 64))
(declare-fun temp386_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp386_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp386_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp386_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp386_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp386_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp386_229 () (_ BitVec 64))
(declare-fun temp386_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp386_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp386_232 () (_ BitVec 64))
(declare-fun temp386_233 () (_ BitVec 64))
(declare-fun temp386_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp386_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp386_236 () (_ BitVec 64))
(declare-fun temp386_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp386_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp386_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp386_240 () (_ BitVec 64))
(assert (= temp386_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp386_1)))
(assert (= temp386_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp386_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_3 #x0000000000000000))
(assert (= var79869 temp386_3))
(assert (= temp386_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp386_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_5 #x0000000000000000))
(assert (= var79914 temp386_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp386_6 #x0000000000000000))
(assert (= temp386_7 temp386_6))
(assert (= temp386_8 (select ARGNAME_padding_NAMEEND_VAL temp386_7)))
(assert (= temp386_9 #x0000000000000001))
(assert (= temp386_10 temp386_9))
(assert (= temp386_11 (select ARGNAME_padding_NAMEEND_VAL temp386_10)))
(assert (= temp386_12 #x0000000000000002))
(assert (= temp386_13 temp386_12))
(assert (= temp386_14 (select ARGNAME_padding_NAMEEND_VAL temp386_13)))
(assert (= temp386_15 #x0000000000000003))
(assert (= temp386_16 temp386_15))
(assert (= temp386_17 (select ARGNAME_padding_NAMEEND_VAL temp386_16)))
(assert (= temp386_18 #x0000000000000004))
(assert (= temp386_19 temp386_18))
(assert (= temp386_20 (select ARGNAME_padding_NAMEEND_VAL temp386_19)))
(assert (= temp386_21 #x0000000000000005))
(assert (= temp386_22 temp386_21))
(assert (= temp386_23 (select ARGNAME_padding_NAMEEND_VAL temp386_22)))
(assert (= temp386_24 #x0000000000000000))
(assert (= temp386_25 #x0000000000000000))
(assert (= temp386_26 temp386_25))
(assert (= temp386_27 (select ARGNAME_padding_NAMEEND_VAL temp386_26)))
(assert (= temp386_28 #x0000000000000000))
(assert (= temp386_29 #x0000000000000001))
(assert (= temp386_30 temp386_29))
(assert (= temp386_31 (select ARGNAME_padding_NAMEEND_VAL temp386_30)))
(assert (= temp386_32 #x0000000000000000))
(assert (= temp386_33 #x0000000000000002))
(assert (= temp386_34 temp386_33))
(assert (= temp386_35 (select ARGNAME_padding_NAMEEND_VAL temp386_34)))
(assert (= temp386_36 #x0000000000000000))
(assert (= temp386_37 #x0000000000000003))
(assert (= temp386_38 temp386_37))
(assert (= temp386_39 (select ARGNAME_padding_NAMEEND_VAL temp386_38)))
(assert (= temp386_40 #x0000000000000000))
(assert (= temp386_41 #x0000000000000004))
(assert (= temp386_42 temp386_41))
(assert (= temp386_43 (select ARGNAME_padding_NAMEEND_VAL temp386_42)))
(assert (= temp386_44 #x0000000000000000))
(assert (= temp386_45 #x0000000000000005))
(assert (= temp386_46 temp386_45))
(assert (= temp386_47 (select ARGNAME_padding_NAMEEND_VAL temp386_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp386_27 temp386_24)
             (bvslt temp386_31 temp386_28)
             (bvslt temp386_35 temp386_32)
             (bvslt temp386_39 temp386_36)
             (bvslt temp386_43 temp386_40)
             (bvslt temp386_47 temp386_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_48 #x0000000000000000))
(assert (= var1322786 temp386_48))
(assert (= temp386_49 #x0000000000000000))
(assert (= temp386_50 temp386_49))
(assert (= temp386_51 (select ARGNAME_output_padding_NAMEEND_VAL temp386_50)))
(assert (= temp386_52 #x0000000000000001))
(assert (= temp386_53 temp386_52))
(assert (= temp386_54 (select ARGNAME_output_padding_NAMEEND_VAL temp386_53)))
(assert (= temp386_55 #x0000000000000002))
(assert (= temp386_56 temp386_55))
(assert (= temp386_57 (select ARGNAME_output_padding_NAMEEND_VAL temp386_56)))
(assert (= temp386_58 #x0000000000000003))
(assert (= temp386_59 temp386_58))
(assert (= temp386_60 (select ARGNAME_output_padding_NAMEEND_VAL temp386_59)))
(assert (= temp386_61 #x0000000000000004))
(assert (= temp386_62 temp386_61))
(assert (= temp386_63 (select ARGNAME_output_padding_NAMEEND_VAL temp386_62)))
(assert (= temp386_64 #x0000000000000005))
(assert (= temp386_65 temp386_64))
(assert (= temp386_66 (select ARGNAME_output_padding_NAMEEND_VAL temp386_65)))
(assert (= temp386_67 #x0000000000000000))
(assert (= temp386_68 #x0000000000000000))
(assert (= temp386_69 temp386_68))
(assert (= temp386_70 (select ARGNAME_output_padding_NAMEEND_VAL temp386_69)))
(assert (= temp386_71 #x0000000000000000))
(assert (= temp386_72 #x0000000000000001))
(assert (= temp386_73 temp386_72))
(assert (= temp386_74 (select ARGNAME_output_padding_NAMEEND_VAL temp386_73)))
(assert (= temp386_75 #x0000000000000000))
(assert (= temp386_76 #x0000000000000002))
(assert (= temp386_77 temp386_76))
(assert (= temp386_78 (select ARGNAME_output_padding_NAMEEND_VAL temp386_77)))
(assert (= temp386_79 #x0000000000000000))
(assert (= temp386_80 #x0000000000000003))
(assert (= temp386_81 temp386_80))
(assert (= temp386_82 (select ARGNAME_output_padding_NAMEEND_VAL temp386_81)))
(assert (= temp386_83 #x0000000000000000))
(assert (= temp386_84 #x0000000000000004))
(assert (= temp386_85 temp386_84))
(assert (= temp386_86 (select ARGNAME_output_padding_NAMEEND_VAL temp386_85)))
(assert (= temp386_87 #x0000000000000000))
(assert (= temp386_88 #x0000000000000005))
(assert (= temp386_89 temp386_88))
(assert (= temp386_90 (select ARGNAME_output_padding_NAMEEND_VAL temp386_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp386_70 temp386_67)
             (bvslt temp386_74 temp386_71)
             (bvslt temp386_78 temp386_75)
             (bvslt temp386_82 temp386_79)
             (bvslt temp386_86 temp386_83)
             (bvslt temp386_90 temp386_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_91 #x0000000000000000))
(assert (= var1322797 temp386_91))
(assert (= temp386_92 #x0000000000000000))
(assert (= temp386_93 temp386_92))
(assert (= temp386_94 (select ARGNAME_stride_NAMEEND_VAL temp386_93)))
(assert (= temp386_95 #x0000000000000001))
(assert (= temp386_96 temp386_95))
(assert (= temp386_97 (select ARGNAME_stride_NAMEEND_VAL temp386_96)))
(assert (= temp386_98 #x0000000000000002))
(assert (= temp386_99 temp386_98))
(assert (= temp386_100 (select ARGNAME_stride_NAMEEND_VAL temp386_99)))
(assert (= temp386_101 #x0000000000000003))
(assert (= temp386_102 temp386_101))
(assert (= temp386_103 (select ARGNAME_stride_NAMEEND_VAL temp386_102)))
(assert (= temp386_104 #x0000000000000004))
(assert (= temp386_105 temp386_104))
(assert (= temp386_106 (select ARGNAME_stride_NAMEEND_VAL temp386_105)))
(assert (= temp386_107 #x0000000000000005))
(assert (= temp386_108 temp386_107))
(assert (= temp386_109 (select ARGNAME_stride_NAMEEND_VAL temp386_108)))
(assert (= temp386_110 #x0000000000000000))
(assert (= temp386_111 #x0000000000000000))
(assert (= temp386_112 temp386_111))
(assert (= temp386_113 (select ARGNAME_stride_NAMEEND_VAL temp386_112)))
(assert (= temp386_114 #x0000000000000000))
(assert (= temp386_115 #x0000000000000001))
(assert (= temp386_116 temp386_115))
(assert (= temp386_117 (select ARGNAME_stride_NAMEEND_VAL temp386_116)))
(assert (= temp386_118 #x0000000000000000))
(assert (= temp386_119 #x0000000000000002))
(assert (= temp386_120 temp386_119))
(assert (= temp386_121 (select ARGNAME_stride_NAMEEND_VAL temp386_120)))
(assert (= temp386_122 #x0000000000000000))
(assert (= temp386_123 #x0000000000000003))
(assert (= temp386_124 temp386_123))
(assert (= temp386_125 (select ARGNAME_stride_NAMEEND_VAL temp386_124)))
(assert (= temp386_126 #x0000000000000000))
(assert (= temp386_127 #x0000000000000004))
(assert (= temp386_128 temp386_127))
(assert (= temp386_129 (select ARGNAME_stride_NAMEEND_VAL temp386_128)))
(assert (= temp386_130 #x0000000000000000))
(assert (= temp386_131 #x0000000000000005))
(assert (= temp386_132 temp386_131))
(assert (= temp386_133 (select ARGNAME_stride_NAMEEND_VAL temp386_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp386_113 temp386_110)
             (bvsle temp386_117 temp386_114)
             (bvsle temp386_121 temp386_118)
             (bvsle temp386_125 temp386_122)
             (bvsle temp386_129 temp386_126)
             (bvsle temp386_133 temp386_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_134 #x0000000000000000))
(assert (= var1322807 temp386_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_135 #x0000000000000001))
(assert (= var1322819 temp386_135))
(assert (= temp386_136 #x0000000000000000))
(assert (= var1310898 temp386_136))
(assert (= temp386_137 #x0000000000000000))
(assert (= temp386_138 temp386_137))
(assert (= temp386_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_138)))
(assert (= temp386_140 #x0000000000000001))
(assert (= temp386_141 temp386_140))
(assert (= temp386_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_141)))
(assert (= temp386_143 #x0000000000000002))
(assert (= temp386_144 temp386_143))
(assert (= temp386_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_144)))
(assert (= temp386_146 #x0000000000000003))
(assert (= temp386_147 temp386_146))
(assert (= temp386_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_147)))
(assert (= temp386_149 #x0000000000000004))
(assert (= temp386_150 temp386_149))
(assert (= temp386_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_150)))
(assert (= temp386_152 #x0000000000000005))
(assert (= temp386_153 temp386_152))
(assert (= temp386_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_153)))
(assert (= temp386_156 var1310898))
(assert (= temp386_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_156)))
(assert (= temp386_155 temp386_157))
(assert (= var1322852
   (ite (bvslt temp386_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_158 #x0000000000000000))
(assert (= var1322852 temp386_158))
(assert (= temp386_159 #x0000000000000000))
(assert (= var1310898 temp386_159))
(assert (= temp386_161 var1310898))
(assert (= temp386_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_161)))
(assert (= temp386_160 temp386_162))
(assert (= var1322874 (bvsmod temp386_160 ARGNAME_groups_NAMEEND)))
(assert (= temp386_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp386_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_164 #x0000000000000001))
(assert (= var1322875 temp386_164))
(assert (= temp386_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp386_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_166 #x0000000000000001))
(assert (= var1322895 temp386_166))
(assert (= temp386_167 #x0000000000000001))
(assert (= var1311786 temp386_167))
(assert (= temp386_168 #x0000000000000000))
(assert (= temp386_169 temp386_168))
(assert (= temp386_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_169)))
(assert (= temp386_171 #x0000000000000001))
(assert (= temp386_172 temp386_171))
(assert (= temp386_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_172)))
(assert (= temp386_174 #x0000000000000002))
(assert (= temp386_175 temp386_174))
(assert (= temp386_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_175)))
(assert (= temp386_177 #x0000000000000003))
(assert (= temp386_178 temp386_177))
(assert (= temp386_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_178)))
(assert (= temp386_180 #x0000000000000004))
(assert (= temp386_181 temp386_180))
(assert (= temp386_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_181)))
(assert (= temp386_183 #x0000000000000005))
(assert (= temp386_184 temp386_183))
(assert (= temp386_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_184)))
(assert (= temp386_186 #x0000000000000000))
(assert (= temp386_187
   (ite (bvslt var1311786 temp386_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp386_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_187)))
(assert (= var1322903 temp386_188))
(assert (bvslt (ite (bvslt var1311786 temp386_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp386_189 #x0000000000000001))
(assert (= var1311786 temp386_189))
(assert (= temp386_191 var1311786))
(assert (= temp386_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_191)))
(assert (= temp386_190 temp386_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp386_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_193 #x0000000000000001))
(assert (= var1322908 temp386_193))
(assert (= temp386_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp386_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_195 #x0000000000000001))
(assert (= var1322975 temp386_195))
(assert (= temp386_196 #x0000000000000000))
(assert (= var1310898 temp386_196))
(assert (= temp386_197 #x0000000000000000))
(assert (= temp386_198 temp386_197))
(assert (= temp386_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp386_198)))
(assert (= temp386_200 #x0000000000000001))
(assert (= temp386_201 temp386_200))
(assert (= temp386_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp386_201)))
(assert (= temp386_203 #x0000000000000002))
(assert (= temp386_204 temp386_203))
(assert (= temp386_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp386_204)))
(assert (= temp386_206 #x0000000000000003))
(assert (= temp386_207 temp386_206))
(assert (= temp386_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp386_207)))
(assert (= temp386_209 #x0000000000000004))
(assert (= temp386_210 temp386_209))
(assert (= temp386_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp386_210)))
(assert (= temp386_212 #x0000000000000005))
(assert (= temp386_213 temp386_212))
(assert (= temp386_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp386_213)))
(assert (= temp386_215 #x0000000000000000))
(assert (= temp386_216
   (ite (bvslt var1310898 temp386_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp386_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp386_216)))
(assert (= var1322977 temp386_217))
(assert (bvslt (ite (bvslt var1310898 temp386_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp386_218 #x0000000000000000))
(assert (= var1310898 temp386_218))
(assert (= temp386_220 var1310898))
(assert (= temp386_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_220)))
(assert (= temp386_219 temp386_221))
(assert (= var1322980
   (ite (= var1322977 temp386_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_222 #x0000000000000001))
(assert (= var1322980 temp386_222))
(assert (= temp386_223 #x0000000000000002))
(assert (= var1848169 temp386_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp386_225 #x0000000000000001))
(assert (= var1323065 temp386_225))
(assert (= temp386_226 #x0000000000000001))
(assert (= var3486735 temp386_226))
(assert (= temp386_227 #x0000000000000001))
(assert (= var3814415 temp386_227))
(assert (= temp386_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp386_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_229 #x0000000000000001))
(assert (= var79986 temp386_229))
(assert (= temp386_230 #x0000000000000001))
(assert (= var80116 temp386_230))
(assert (= var4796905 var80116))
(assert (= temp386_231 #x0000000000000000))
(assert (= var4784306 temp386_231))
(assert (= temp386_232 #x0000000000000000))
(assert (= temp386_233
   (ite (bvslt var4784306 temp386_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp386_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_233)))
(assert (= var4796924 temp386_234))
(assert (bvslt (ite (bvslt var4784306 temp386_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp386_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp386_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_236 #x0000000000000001))
(assert (= var4796925 temp386_236))
(assert (= temp386_237 #x0000000000000000))
(assert (= var4996927 temp386_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp386_238 #x0000000000000002))
(assert (= var5125763 temp386_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_239 #x0000000000000000))
(assert (= var5191324 temp386_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp386_240 #x0000000000000001))
(assert (= var79986 temp386_240))
(model-add temp386_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp386_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp386_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






