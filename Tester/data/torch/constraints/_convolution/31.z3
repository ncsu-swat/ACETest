(declare-fun temp41_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp41_2 () (_ BitVec 64))
(declare-fun temp41_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp41_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp41_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp41_6 () (_ BitVec 64))
(declare-fun temp41_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_8 () (_ BitVec 64))
(declare-fun temp41_9 () (_ BitVec 64))
(declare-fun temp41_10 () (_ BitVec 64))
(declare-fun temp41_11 () (_ BitVec 64))
(declare-fun temp41_12 () (_ BitVec 64))
(declare-fun temp41_13 () (_ BitVec 64))
(declare-fun temp41_14 () (_ BitVec 64))
(declare-fun temp41_15 () (_ BitVec 64))
(declare-fun temp41_16 () (_ BitVec 64))
(declare-fun temp41_17 () (_ BitVec 64))
(declare-fun temp41_18 () (_ BitVec 64))
(declare-fun temp41_19 () (_ BitVec 64))
(declare-fun temp41_20 () (_ BitVec 64))
(declare-fun temp41_21 () (_ BitVec 64))
(declare-fun temp41_22 () (_ BitVec 64))
(declare-fun temp41_23 () (_ BitVec 64))
(declare-fun temp41_24 () (_ BitVec 64))
(declare-fun temp41_25 () (_ BitVec 64))
(declare-fun temp41_26 () (_ BitVec 64))
(declare-fun temp41_27 () (_ BitVec 64))
(declare-fun temp41_28 () (_ BitVec 64))
(declare-fun temp41_29 () (_ BitVec 64))
(declare-fun temp41_30 () (_ BitVec 64))
(declare-fun temp41_31 () (_ BitVec 64))
(declare-fun temp41_32 () (_ BitVec 64))
(declare-fun temp41_33 () (_ BitVec 64))
(declare-fun temp41_34 () (_ BitVec 64))
(declare-fun temp41_35 () (_ BitVec 64))
(declare-fun temp41_36 () (_ BitVec 64))
(declare-fun temp41_37 () (_ BitVec 64))
(declare-fun temp41_38 () (_ BitVec 64))
(declare-fun temp41_39 () (_ BitVec 64))
(declare-fun temp41_40 () (_ BitVec 64))
(declare-fun temp41_41 () (_ BitVec 64))
(declare-fun temp41_42 () (_ BitVec 64))
(declare-fun temp41_43 () (_ BitVec 64))
(declare-fun temp41_44 () (_ BitVec 64))
(declare-fun temp41_45 () (_ BitVec 64))
(declare-fun temp41_46 () (_ BitVec 64))
(declare-fun temp41_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp41_48 () (_ BitVec 64))
(declare-fun temp41_49 () (_ BitVec 64))
(declare-fun temp41_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_51 () (_ BitVec 64))
(declare-fun temp41_52 () (_ BitVec 64))
(declare-fun temp41_53 () (_ BitVec 64))
(declare-fun temp41_54 () (_ BitVec 64))
(declare-fun temp41_55 () (_ BitVec 64))
(declare-fun temp41_56 () (_ BitVec 64))
(declare-fun temp41_57 () (_ BitVec 64))
(declare-fun temp41_58 () (_ BitVec 64))
(declare-fun temp41_59 () (_ BitVec 64))
(declare-fun temp41_60 () (_ BitVec 64))
(declare-fun temp41_61 () (_ BitVec 64))
(declare-fun temp41_62 () (_ BitVec 64))
(declare-fun temp41_63 () (_ BitVec 64))
(declare-fun temp41_64 () (_ BitVec 64))
(declare-fun temp41_65 () (_ BitVec 64))
(declare-fun temp41_66 () (_ BitVec 64))
(declare-fun temp41_67 () (_ BitVec 64))
(declare-fun temp41_68 () (_ BitVec 64))
(declare-fun temp41_69 () (_ BitVec 64))
(declare-fun temp41_70 () (_ BitVec 64))
(declare-fun temp41_71 () (_ BitVec 64))
(declare-fun temp41_72 () (_ BitVec 64))
(declare-fun temp41_73 () (_ BitVec 64))
(declare-fun temp41_74 () (_ BitVec 64))
(declare-fun temp41_75 () (_ BitVec 64))
(declare-fun temp41_76 () (_ BitVec 64))
(declare-fun temp41_77 () (_ BitVec 64))
(declare-fun temp41_78 () (_ BitVec 64))
(declare-fun temp41_79 () (_ BitVec 64))
(declare-fun temp41_80 () (_ BitVec 64))
(declare-fun temp41_81 () (_ BitVec 64))
(declare-fun temp41_82 () (_ BitVec 64))
(declare-fun temp41_83 () (_ BitVec 64))
(declare-fun temp41_84 () (_ BitVec 64))
(declare-fun temp41_85 () (_ BitVec 64))
(declare-fun temp41_86 () (_ BitVec 64))
(declare-fun temp41_87 () (_ BitVec 64))
(declare-fun temp41_88 () (_ BitVec 64))
(declare-fun temp41_89 () (_ BitVec 64))
(declare-fun temp41_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp41_91 () (_ BitVec 64))
(declare-fun temp41_92 () (_ BitVec 64))
(declare-fun temp41_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_94 () (_ BitVec 64))
(declare-fun temp41_95 () (_ BitVec 64))
(declare-fun temp41_96 () (_ BitVec 64))
(declare-fun temp41_97 () (_ BitVec 64))
(declare-fun temp41_98 () (_ BitVec 64))
(declare-fun temp41_99 () (_ BitVec 64))
(declare-fun temp41_100 () (_ BitVec 64))
(declare-fun temp41_101 () (_ BitVec 64))
(declare-fun temp41_102 () (_ BitVec 64))
(declare-fun temp41_103 () (_ BitVec 64))
(declare-fun temp41_104 () (_ BitVec 64))
(declare-fun temp41_105 () (_ BitVec 64))
(declare-fun temp41_106 () (_ BitVec 64))
(declare-fun temp41_107 () (_ BitVec 64))
(declare-fun temp41_108 () (_ BitVec 64))
(declare-fun temp41_109 () (_ BitVec 64))
(declare-fun temp41_110 () (_ BitVec 64))
(declare-fun temp41_111 () (_ BitVec 64))
(declare-fun temp41_112 () (_ BitVec 64))
(declare-fun temp41_113 () (_ BitVec 64))
(declare-fun temp41_114 () (_ BitVec 64))
(declare-fun temp41_115 () (_ BitVec 64))
(declare-fun temp41_116 () (_ BitVec 64))
(declare-fun temp41_117 () (_ BitVec 64))
(declare-fun temp41_118 () (_ BitVec 64))
(declare-fun temp41_119 () (_ BitVec 64))
(declare-fun temp41_120 () (_ BitVec 64))
(declare-fun temp41_121 () (_ BitVec 64))
(declare-fun temp41_122 () (_ BitVec 64))
(declare-fun temp41_123 () (_ BitVec 64))
(declare-fun temp41_124 () (_ BitVec 64))
(declare-fun temp41_125 () (_ BitVec 64))
(declare-fun temp41_126 () (_ BitVec 64))
(declare-fun temp41_127 () (_ BitVec 64))
(declare-fun temp41_128 () (_ BitVec 64))
(declare-fun temp41_129 () (_ BitVec 64))
(declare-fun temp41_130 () (_ BitVec 64))
(declare-fun temp41_131 () (_ BitVec 64))
(declare-fun temp41_132 () (_ BitVec 64))
(declare-fun temp41_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp41_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp41_135 () (_ BitVec 64))
(declare-fun temp41_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp41_137 () (_ BitVec 64))
(declare-fun temp41_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_139 () (_ BitVec 64))
(declare-fun temp41_140 () (_ BitVec 64))
(declare-fun temp41_141 () (_ BitVec 64))
(declare-fun temp41_142 () (_ BitVec 64))
(declare-fun temp41_143 () (_ BitVec 64))
(declare-fun temp41_144 () (_ BitVec 64))
(declare-fun temp41_145 () (_ BitVec 64))
(declare-fun temp41_146 () (_ BitVec 64))
(declare-fun temp41_147 () (_ BitVec 64))
(declare-fun temp41_148 () (_ BitVec 64))
(declare-fun temp41_149 () (_ BitVec 64))
(declare-fun temp41_150 () (_ BitVec 64))
(declare-fun temp41_151 () (_ BitVec 64))
(declare-fun temp41_152 () (_ BitVec 64))
(declare-fun temp41_153 () (_ BitVec 64))
(declare-fun temp41_154 () (_ BitVec 64))
(declare-fun temp41_156 () (_ BitVec 64))
(declare-fun temp41_157 () (_ BitVec 64))
(declare-fun temp41_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp41_158 () (_ BitVec 64))
(declare-fun temp41_159 () (_ BitVec 64))
(declare-fun temp41_161 () (_ BitVec 64))
(declare-fun temp41_162 () (_ BitVec 64))
(declare-fun temp41_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp41_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp41_164 () (_ BitVec 64))
(declare-fun temp41_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp41_166 () (_ BitVec 64))
(declare-fun temp41_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp41_168 () (_ BitVec 64))
(declare-fun temp41_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_170 () (_ BitVec 64))
(declare-fun temp41_171 () (_ BitVec 64))
(declare-fun temp41_172 () (_ BitVec 64))
(declare-fun temp41_173 () (_ BitVec 64))
(declare-fun temp41_174 () (_ BitVec 64))
(declare-fun temp41_175 () (_ BitVec 64))
(declare-fun temp41_176 () (_ BitVec 64))
(declare-fun temp41_177 () (_ BitVec 64))
(declare-fun temp41_178 () (_ BitVec 64))
(declare-fun temp41_179 () (_ BitVec 64))
(declare-fun temp41_180 () (_ BitVec 64))
(declare-fun temp41_181 () (_ BitVec 64))
(declare-fun temp41_182 () (_ BitVec 64))
(declare-fun temp41_183 () (_ BitVec 64))
(declare-fun temp41_184 () (_ BitVec 64))
(declare-fun temp41_185 () (_ BitVec 64))
(declare-fun temp41_186 () (_ BitVec 64))
(declare-fun temp41_187 () (_ BitVec 64))
(declare-fun temp41_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp41_189 () (_ BitVec 64))
(declare-fun temp41_191 () (_ BitVec 64))
(declare-fun temp41_192 () (_ BitVec 64))
(declare-fun temp41_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp41_193 () (_ BitVec 64))
(declare-fun temp41_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp41_195 () (_ BitVec 64))
(declare-fun temp41_196 () (_ BitVec 64))
(declare-fun temp41_197 () (_ BitVec 64))
(declare-fun temp41_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_199 () (_ BitVec 64))
(declare-fun temp41_200 () (_ BitVec 64))
(declare-fun temp41_201 () (_ BitVec 64))
(declare-fun temp41_202 () (_ BitVec 64))
(declare-fun temp41_203 () (_ BitVec 64))
(declare-fun temp41_204 () (_ BitVec 64))
(declare-fun temp41_205 () (_ BitVec 64))
(declare-fun temp41_206 () (_ BitVec 64))
(declare-fun temp41_207 () (_ BitVec 64))
(declare-fun temp41_208 () (_ BitVec 64))
(declare-fun temp41_209 () (_ BitVec 64))
(declare-fun temp41_210 () (_ BitVec 64))
(declare-fun temp41_211 () (_ BitVec 64))
(declare-fun temp41_212 () (_ BitVec 64))
(declare-fun temp41_213 () (_ BitVec 64))
(declare-fun temp41_214 () (_ BitVec 64))
(declare-fun temp41_215 () (_ BitVec 64))
(declare-fun temp41_216 () (_ BitVec 64))
(declare-fun temp41_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp41_218 () (_ BitVec 64))
(declare-fun temp41_220 () (_ BitVec 64))
(declare-fun temp41_221 () (_ BitVec 64))
(declare-fun temp41_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp41_222 () (_ BitVec 64))
(declare-fun temp41_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp41_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp41_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp41_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp41_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp41_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp41_229 () (_ BitVec 64))
(declare-fun temp41_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp41_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp41_232 () (_ BitVec 64))
(declare-fun temp41_233 () (_ BitVec 64))
(declare-fun temp41_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp41_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp41_236 () (_ BitVec 64))
(declare-fun temp41_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp41_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp41_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp41_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp41_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp41_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6635340 () (_ BitVec 64))
(declare-fun var6635341 () (_ BitVec 64))
(declare-fun var6635342 () (_ BitVec 64))
(declare-fun temp41_243 () (_ BitVec 64))
(assert (= temp41_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp41_1)))
(assert (= temp41_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp41_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_3 #x0000000000000000))
(assert (= var79869 temp41_3))
(assert (= temp41_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp41_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_5 #x0000000000000000))
(assert (= var79914 temp41_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp41_6 #x0000000000000000))
(assert (= temp41_7 temp41_6))
(assert (= temp41_8 (select ARGNAME_padding_NAMEEND_VAL temp41_7)))
(assert (= temp41_9 #x0000000000000001))
(assert (= temp41_10 temp41_9))
(assert (= temp41_11 (select ARGNAME_padding_NAMEEND_VAL temp41_10)))
(assert (= temp41_12 #x0000000000000002))
(assert (= temp41_13 temp41_12))
(assert (= temp41_14 (select ARGNAME_padding_NAMEEND_VAL temp41_13)))
(assert (= temp41_15 #x0000000000000003))
(assert (= temp41_16 temp41_15))
(assert (= temp41_17 (select ARGNAME_padding_NAMEEND_VAL temp41_16)))
(assert (= temp41_18 #x0000000000000004))
(assert (= temp41_19 temp41_18))
(assert (= temp41_20 (select ARGNAME_padding_NAMEEND_VAL temp41_19)))
(assert (= temp41_21 #x0000000000000005))
(assert (= temp41_22 temp41_21))
(assert (= temp41_23 (select ARGNAME_padding_NAMEEND_VAL temp41_22)))
(assert (= temp41_24 #x0000000000000000))
(assert (= temp41_25 #x0000000000000000))
(assert (= temp41_26 temp41_25))
(assert (= temp41_27 (select ARGNAME_padding_NAMEEND_VAL temp41_26)))
(assert (= temp41_28 #x0000000000000000))
(assert (= temp41_29 #x0000000000000001))
(assert (= temp41_30 temp41_29))
(assert (= temp41_31 (select ARGNAME_padding_NAMEEND_VAL temp41_30)))
(assert (= temp41_32 #x0000000000000000))
(assert (= temp41_33 #x0000000000000002))
(assert (= temp41_34 temp41_33))
(assert (= temp41_35 (select ARGNAME_padding_NAMEEND_VAL temp41_34)))
(assert (= temp41_36 #x0000000000000000))
(assert (= temp41_37 #x0000000000000003))
(assert (= temp41_38 temp41_37))
(assert (= temp41_39 (select ARGNAME_padding_NAMEEND_VAL temp41_38)))
(assert (= temp41_40 #x0000000000000000))
(assert (= temp41_41 #x0000000000000004))
(assert (= temp41_42 temp41_41))
(assert (= temp41_43 (select ARGNAME_padding_NAMEEND_VAL temp41_42)))
(assert (= temp41_44 #x0000000000000000))
(assert (= temp41_45 #x0000000000000005))
(assert (= temp41_46 temp41_45))
(assert (= temp41_47 (select ARGNAME_padding_NAMEEND_VAL temp41_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp41_27 temp41_24)
             (bvslt temp41_31 temp41_28)
             (bvslt temp41_35 temp41_32)
             (bvslt temp41_39 temp41_36)
             (bvslt temp41_43 temp41_40)
             (bvslt temp41_47 temp41_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_48 #x0000000000000000))
(assert (= var1322786 temp41_48))
(assert (= temp41_49 #x0000000000000000))
(assert (= temp41_50 temp41_49))
(assert (= temp41_51 (select ARGNAME_output_padding_NAMEEND_VAL temp41_50)))
(assert (= temp41_52 #x0000000000000001))
(assert (= temp41_53 temp41_52))
(assert (= temp41_54 (select ARGNAME_output_padding_NAMEEND_VAL temp41_53)))
(assert (= temp41_55 #x0000000000000002))
(assert (= temp41_56 temp41_55))
(assert (= temp41_57 (select ARGNAME_output_padding_NAMEEND_VAL temp41_56)))
(assert (= temp41_58 #x0000000000000003))
(assert (= temp41_59 temp41_58))
(assert (= temp41_60 (select ARGNAME_output_padding_NAMEEND_VAL temp41_59)))
(assert (= temp41_61 #x0000000000000004))
(assert (= temp41_62 temp41_61))
(assert (= temp41_63 (select ARGNAME_output_padding_NAMEEND_VAL temp41_62)))
(assert (= temp41_64 #x0000000000000005))
(assert (= temp41_65 temp41_64))
(assert (= temp41_66 (select ARGNAME_output_padding_NAMEEND_VAL temp41_65)))
(assert (= temp41_67 #x0000000000000000))
(assert (= temp41_68 #x0000000000000000))
(assert (= temp41_69 temp41_68))
(assert (= temp41_70 (select ARGNAME_output_padding_NAMEEND_VAL temp41_69)))
(assert (= temp41_71 #x0000000000000000))
(assert (= temp41_72 #x0000000000000001))
(assert (= temp41_73 temp41_72))
(assert (= temp41_74 (select ARGNAME_output_padding_NAMEEND_VAL temp41_73)))
(assert (= temp41_75 #x0000000000000000))
(assert (= temp41_76 #x0000000000000002))
(assert (= temp41_77 temp41_76))
(assert (= temp41_78 (select ARGNAME_output_padding_NAMEEND_VAL temp41_77)))
(assert (= temp41_79 #x0000000000000000))
(assert (= temp41_80 #x0000000000000003))
(assert (= temp41_81 temp41_80))
(assert (= temp41_82 (select ARGNAME_output_padding_NAMEEND_VAL temp41_81)))
(assert (= temp41_83 #x0000000000000000))
(assert (= temp41_84 #x0000000000000004))
(assert (= temp41_85 temp41_84))
(assert (= temp41_86 (select ARGNAME_output_padding_NAMEEND_VAL temp41_85)))
(assert (= temp41_87 #x0000000000000000))
(assert (= temp41_88 #x0000000000000005))
(assert (= temp41_89 temp41_88))
(assert (= temp41_90 (select ARGNAME_output_padding_NAMEEND_VAL temp41_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp41_70 temp41_67)
             (bvslt temp41_74 temp41_71)
             (bvslt temp41_78 temp41_75)
             (bvslt temp41_82 temp41_79)
             (bvslt temp41_86 temp41_83)
             (bvslt temp41_90 temp41_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_91 #x0000000000000000))
(assert (= var1322797 temp41_91))
(assert (= temp41_92 #x0000000000000000))
(assert (= temp41_93 temp41_92))
(assert (= temp41_94 (select ARGNAME_stride_NAMEEND_VAL temp41_93)))
(assert (= temp41_95 #x0000000000000001))
(assert (= temp41_96 temp41_95))
(assert (= temp41_97 (select ARGNAME_stride_NAMEEND_VAL temp41_96)))
(assert (= temp41_98 #x0000000000000002))
(assert (= temp41_99 temp41_98))
(assert (= temp41_100 (select ARGNAME_stride_NAMEEND_VAL temp41_99)))
(assert (= temp41_101 #x0000000000000003))
(assert (= temp41_102 temp41_101))
(assert (= temp41_103 (select ARGNAME_stride_NAMEEND_VAL temp41_102)))
(assert (= temp41_104 #x0000000000000004))
(assert (= temp41_105 temp41_104))
(assert (= temp41_106 (select ARGNAME_stride_NAMEEND_VAL temp41_105)))
(assert (= temp41_107 #x0000000000000005))
(assert (= temp41_108 temp41_107))
(assert (= temp41_109 (select ARGNAME_stride_NAMEEND_VAL temp41_108)))
(assert (= temp41_110 #x0000000000000000))
(assert (= temp41_111 #x0000000000000000))
(assert (= temp41_112 temp41_111))
(assert (= temp41_113 (select ARGNAME_stride_NAMEEND_VAL temp41_112)))
(assert (= temp41_114 #x0000000000000000))
(assert (= temp41_115 #x0000000000000001))
(assert (= temp41_116 temp41_115))
(assert (= temp41_117 (select ARGNAME_stride_NAMEEND_VAL temp41_116)))
(assert (= temp41_118 #x0000000000000000))
(assert (= temp41_119 #x0000000000000002))
(assert (= temp41_120 temp41_119))
(assert (= temp41_121 (select ARGNAME_stride_NAMEEND_VAL temp41_120)))
(assert (= temp41_122 #x0000000000000000))
(assert (= temp41_123 #x0000000000000003))
(assert (= temp41_124 temp41_123))
(assert (= temp41_125 (select ARGNAME_stride_NAMEEND_VAL temp41_124)))
(assert (= temp41_126 #x0000000000000000))
(assert (= temp41_127 #x0000000000000004))
(assert (= temp41_128 temp41_127))
(assert (= temp41_129 (select ARGNAME_stride_NAMEEND_VAL temp41_128)))
(assert (= temp41_130 #x0000000000000000))
(assert (= temp41_131 #x0000000000000005))
(assert (= temp41_132 temp41_131))
(assert (= temp41_133 (select ARGNAME_stride_NAMEEND_VAL temp41_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp41_113 temp41_110)
             (bvsle temp41_117 temp41_114)
             (bvsle temp41_121 temp41_118)
             (bvsle temp41_125 temp41_122)
             (bvsle temp41_129 temp41_126)
             (bvsle temp41_133 temp41_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_134 #x0000000000000000))
(assert (= var1322807 temp41_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_135 #x0000000000000001))
(assert (= var1322819 temp41_135))
(assert (= temp41_136 #x0000000000000000))
(assert (= var1310898 temp41_136))
(assert (= temp41_137 #x0000000000000000))
(assert (= temp41_138 temp41_137))
(assert (= temp41_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_138)))
(assert (= temp41_140 #x0000000000000001))
(assert (= temp41_141 temp41_140))
(assert (= temp41_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_141)))
(assert (= temp41_143 #x0000000000000002))
(assert (= temp41_144 temp41_143))
(assert (= temp41_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_144)))
(assert (= temp41_146 #x0000000000000003))
(assert (= temp41_147 temp41_146))
(assert (= temp41_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_147)))
(assert (= temp41_149 #x0000000000000004))
(assert (= temp41_150 temp41_149))
(assert (= temp41_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_150)))
(assert (= temp41_152 #x0000000000000005))
(assert (= temp41_153 temp41_152))
(assert (= temp41_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_153)))
(assert (= temp41_156 var1310898))
(assert (= temp41_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_156)))
(assert (= temp41_155 temp41_157))
(assert (= var1322852
   (ite (bvslt temp41_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_158 #x0000000000000000))
(assert (= var1322852 temp41_158))
(assert (= temp41_159 #x0000000000000000))
(assert (= var1310898 temp41_159))
(assert (= temp41_161 var1310898))
(assert (= temp41_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_161)))
(assert (= temp41_160 temp41_162))
(assert (= var1322874 (bvsmod temp41_160 ARGNAME_groups_NAMEEND)))
(assert (= temp41_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp41_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp41_164 #x0000000000000001))
(assert (= var1322875 temp41_164))
(assert (= temp41_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp41_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_166 #x0000000000000001))
(assert (= var1322895 temp41_166))
(assert (= temp41_167 #x0000000000000001))
(assert (= var1311786 temp41_167))
(assert (= temp41_168 #x0000000000000000))
(assert (= temp41_169 temp41_168))
(assert (= temp41_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_169)))
(assert (= temp41_171 #x0000000000000001))
(assert (= temp41_172 temp41_171))
(assert (= temp41_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_172)))
(assert (= temp41_174 #x0000000000000002))
(assert (= temp41_175 temp41_174))
(assert (= temp41_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_175)))
(assert (= temp41_177 #x0000000000000003))
(assert (= temp41_178 temp41_177))
(assert (= temp41_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_178)))
(assert (= temp41_180 #x0000000000000004))
(assert (= temp41_181 temp41_180))
(assert (= temp41_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_181)))
(assert (= temp41_183 #x0000000000000005))
(assert (= temp41_184 temp41_183))
(assert (= temp41_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_184)))
(assert (= temp41_186 #x0000000000000000))
(assert (= temp41_187
   (ite (bvslt var1311786 temp41_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp41_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_187)))
(assert (= var1322903 temp41_188))
(assert (bvslt (ite (bvslt var1311786 temp41_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp41_189 #x0000000000000001))
(assert (= var1311786 temp41_189))
(assert (= temp41_191 var1311786))
(assert (= temp41_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_191)))
(assert (= temp41_190 temp41_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp41_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp41_193 #x0000000000000001))
(assert (= var1322908 temp41_193))
(assert (= temp41_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp41_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_195 #x0000000000000001))
(assert (= var1322975 temp41_195))
(assert (= temp41_196 #x0000000000000000))
(assert (= var1310898 temp41_196))
(assert (= temp41_197 #x0000000000000000))
(assert (= temp41_198 temp41_197))
(assert (= temp41_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp41_198)))
(assert (= temp41_200 #x0000000000000001))
(assert (= temp41_201 temp41_200))
(assert (= temp41_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp41_201)))
(assert (= temp41_203 #x0000000000000002))
(assert (= temp41_204 temp41_203))
(assert (= temp41_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp41_204)))
(assert (= temp41_206 #x0000000000000003))
(assert (= temp41_207 temp41_206))
(assert (= temp41_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp41_207)))
(assert (= temp41_209 #x0000000000000004))
(assert (= temp41_210 temp41_209))
(assert (= temp41_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp41_210)))
(assert (= temp41_212 #x0000000000000005))
(assert (= temp41_213 temp41_212))
(assert (= temp41_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp41_213)))
(assert (= temp41_215 #x0000000000000000))
(assert (= temp41_216
   (ite (bvslt var1310898 temp41_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp41_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp41_216)))
(assert (= var1322977 temp41_217))
(assert (bvslt (ite (bvslt var1310898 temp41_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp41_218 #x0000000000000000))
(assert (= var1310898 temp41_218))
(assert (= temp41_220 var1310898))
(assert (= temp41_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_220)))
(assert (= temp41_219 temp41_221))
(assert (= var1322980
   (ite (= var1322977 temp41_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp41_222 #x0000000000000001))
(assert (= var1322980 temp41_222))
(assert (= temp41_223 #x0000000000000002))
(assert (= var1848169 temp41_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp41_225 #x0000000000000001))
(assert (= var1323065 temp41_225))
(assert (= temp41_226 #x0000000000000001))
(assert (= var3486735 temp41_226))
(assert (= temp41_227 #x0000000000000001))
(assert (= var3814415 temp41_227))
(assert (= temp41_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp41_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_229 #x0000000000000001))
(assert (= var79986 temp41_229))
(assert (= temp41_230 #x0000000000000001))
(assert (= var80116 temp41_230))
(assert (= var4796905 var80116))
(assert (= temp41_231 #x0000000000000000))
(assert (= var4784306 temp41_231))
(assert (= temp41_232 #x0000000000000000))
(assert (= temp41_233
   (ite (bvslt var4784306 temp41_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp41_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_233)))
(assert (= var4796924 temp41_234))
(assert (bvslt (ite (bvslt var4784306 temp41_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp41_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp41_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp41_236 #x0000000000000001))
(assert (= var4796925 temp41_236))
(assert (= temp41_237 #x0000000000000000))
(assert (= var4996927 temp41_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp41_238 #x0000000000000002))
(assert (= var5125763 temp41_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_239 #x0000000000000000))
(assert (= var5191324 temp41_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp41_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp41_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp41_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp41_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6635340 var80315))
(assert (= var6635341 var80317))
(assert (= var6635342 var80319))
(assert (= temp41_243 #x0000000000000001))
(assert (= var79986 temp41_243))
(model-add temp41_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp41_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp41_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






