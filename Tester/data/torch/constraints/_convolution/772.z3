(declare-fun temp1026_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1026_2 () (_ BitVec 64))
(declare-fun temp1026_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1026_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1026_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1026_6 () (_ BitVec 64))
(declare-fun temp1026_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1026_8 () (_ BitVec 64))
(declare-fun temp1026_9 () (_ BitVec 64))
(declare-fun temp1026_10 () (_ BitVec 64))
(declare-fun temp1026_11 () (_ BitVec 64))
(declare-fun temp1026_12 () (_ BitVec 64))
(declare-fun temp1026_13 () (_ BitVec 64))
(declare-fun temp1026_14 () (_ BitVec 64))
(declare-fun temp1026_15 () (_ BitVec 64))
(declare-fun temp1026_16 () (_ BitVec 64))
(declare-fun temp1026_17 () (_ BitVec 64))
(declare-fun temp1026_18 () (_ BitVec 64))
(declare-fun temp1026_19 () (_ BitVec 64))
(declare-fun temp1026_20 () (_ BitVec 64))
(declare-fun temp1026_21 () (_ BitVec 64))
(declare-fun temp1026_22 () (_ BitVec 64))
(declare-fun temp1026_23 () (_ BitVec 64))
(declare-fun temp1026_24 () (_ BitVec 64))
(declare-fun temp1026_25 () (_ BitVec 64))
(declare-fun temp1026_26 () (_ BitVec 64))
(declare-fun temp1026_27 () (_ BitVec 64))
(declare-fun temp1026_28 () (_ BitVec 64))
(declare-fun temp1026_29 () (_ BitVec 64))
(declare-fun temp1026_30 () (_ BitVec 64))
(declare-fun temp1026_31 () (_ BitVec 64))
(declare-fun temp1026_32 () (_ BitVec 64))
(declare-fun temp1026_33 () (_ BitVec 64))
(declare-fun temp1026_34 () (_ BitVec 64))
(declare-fun temp1026_35 () (_ BitVec 64))
(declare-fun temp1026_36 () (_ BitVec 64))
(declare-fun temp1026_37 () (_ BitVec 64))
(declare-fun temp1026_38 () (_ BitVec 64))
(declare-fun temp1026_39 () (_ BitVec 64))
(declare-fun temp1026_40 () (_ BitVec 64))
(declare-fun temp1026_41 () (_ BitVec 64))
(declare-fun temp1026_42 () (_ BitVec 64))
(declare-fun temp1026_43 () (_ BitVec 64))
(declare-fun temp1026_44 () (_ BitVec 64))
(declare-fun temp1026_45 () (_ BitVec 64))
(declare-fun temp1026_46 () (_ BitVec 64))
(declare-fun temp1026_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1026_48 () (_ BitVec 64))
(declare-fun temp1026_49 () (_ BitVec 64))
(declare-fun temp1026_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1026_51 () (_ BitVec 64))
(declare-fun temp1026_52 () (_ BitVec 64))
(declare-fun temp1026_53 () (_ BitVec 64))
(declare-fun temp1026_54 () (_ BitVec 64))
(declare-fun temp1026_55 () (_ BitVec 64))
(declare-fun temp1026_56 () (_ BitVec 64))
(declare-fun temp1026_57 () (_ BitVec 64))
(declare-fun temp1026_58 () (_ BitVec 64))
(declare-fun temp1026_59 () (_ BitVec 64))
(declare-fun temp1026_60 () (_ BitVec 64))
(declare-fun temp1026_61 () (_ BitVec 64))
(declare-fun temp1026_62 () (_ BitVec 64))
(declare-fun temp1026_63 () (_ BitVec 64))
(declare-fun temp1026_64 () (_ BitVec 64))
(declare-fun temp1026_65 () (_ BitVec 64))
(declare-fun temp1026_66 () (_ BitVec 64))
(declare-fun temp1026_67 () (_ BitVec 64))
(declare-fun temp1026_68 () (_ BitVec 64))
(declare-fun temp1026_69 () (_ BitVec 64))
(declare-fun temp1026_70 () (_ BitVec 64))
(declare-fun temp1026_71 () (_ BitVec 64))
(declare-fun temp1026_72 () (_ BitVec 64))
(declare-fun temp1026_73 () (_ BitVec 64))
(declare-fun temp1026_74 () (_ BitVec 64))
(declare-fun temp1026_75 () (_ BitVec 64))
(declare-fun temp1026_76 () (_ BitVec 64))
(declare-fun temp1026_77 () (_ BitVec 64))
(declare-fun temp1026_78 () (_ BitVec 64))
(declare-fun temp1026_79 () (_ BitVec 64))
(declare-fun temp1026_80 () (_ BitVec 64))
(declare-fun temp1026_81 () (_ BitVec 64))
(declare-fun temp1026_82 () (_ BitVec 64))
(declare-fun temp1026_83 () (_ BitVec 64))
(declare-fun temp1026_84 () (_ BitVec 64))
(declare-fun temp1026_85 () (_ BitVec 64))
(declare-fun temp1026_86 () (_ BitVec 64))
(declare-fun temp1026_87 () (_ BitVec 64))
(declare-fun temp1026_88 () (_ BitVec 64))
(declare-fun temp1026_89 () (_ BitVec 64))
(declare-fun temp1026_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1026_91 () (_ BitVec 64))
(declare-fun temp1026_92 () (_ BitVec 64))
(declare-fun temp1026_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1026_94 () (_ BitVec 64))
(declare-fun temp1026_95 () (_ BitVec 64))
(declare-fun temp1026_96 () (_ BitVec 64))
(declare-fun temp1026_97 () (_ BitVec 64))
(declare-fun temp1026_98 () (_ BitVec 64))
(declare-fun temp1026_99 () (_ BitVec 64))
(declare-fun temp1026_100 () (_ BitVec 64))
(declare-fun temp1026_101 () (_ BitVec 64))
(declare-fun temp1026_102 () (_ BitVec 64))
(declare-fun temp1026_103 () (_ BitVec 64))
(declare-fun temp1026_104 () (_ BitVec 64))
(declare-fun temp1026_105 () (_ BitVec 64))
(declare-fun temp1026_106 () (_ BitVec 64))
(declare-fun temp1026_107 () (_ BitVec 64))
(declare-fun temp1026_108 () (_ BitVec 64))
(declare-fun temp1026_109 () (_ BitVec 64))
(declare-fun temp1026_110 () (_ BitVec 64))
(declare-fun temp1026_111 () (_ BitVec 64))
(declare-fun temp1026_112 () (_ BitVec 64))
(declare-fun temp1026_113 () (_ BitVec 64))
(declare-fun temp1026_114 () (_ BitVec 64))
(declare-fun temp1026_115 () (_ BitVec 64))
(declare-fun temp1026_116 () (_ BitVec 64))
(declare-fun temp1026_117 () (_ BitVec 64))
(declare-fun temp1026_118 () (_ BitVec 64))
(declare-fun temp1026_119 () (_ BitVec 64))
(declare-fun temp1026_120 () (_ BitVec 64))
(declare-fun temp1026_121 () (_ BitVec 64))
(declare-fun temp1026_122 () (_ BitVec 64))
(declare-fun temp1026_123 () (_ BitVec 64))
(declare-fun temp1026_124 () (_ BitVec 64))
(declare-fun temp1026_125 () (_ BitVec 64))
(declare-fun temp1026_126 () (_ BitVec 64))
(declare-fun temp1026_127 () (_ BitVec 64))
(declare-fun temp1026_128 () (_ BitVec 64))
(declare-fun temp1026_129 () (_ BitVec 64))
(declare-fun temp1026_130 () (_ BitVec 64))
(declare-fun temp1026_131 () (_ BitVec 64))
(declare-fun temp1026_132 () (_ BitVec 64))
(declare-fun temp1026_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1026_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1026_135 () (_ BitVec 64))
(declare-fun temp1026_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1026_137 () (_ BitVec 64))
(declare-fun temp1026_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1026_139 () (_ BitVec 64))
(declare-fun temp1026_140 () (_ BitVec 64))
(declare-fun temp1026_141 () (_ BitVec 64))
(declare-fun temp1026_142 () (_ BitVec 64))
(declare-fun temp1026_143 () (_ BitVec 64))
(declare-fun temp1026_144 () (_ BitVec 64))
(declare-fun temp1026_145 () (_ BitVec 64))
(declare-fun temp1026_146 () (_ BitVec 64))
(declare-fun temp1026_147 () (_ BitVec 64))
(declare-fun temp1026_148 () (_ BitVec 64))
(declare-fun temp1026_149 () (_ BitVec 64))
(declare-fun temp1026_150 () (_ BitVec 64))
(declare-fun temp1026_151 () (_ BitVec 64))
(declare-fun temp1026_152 () (_ BitVec 64))
(declare-fun temp1026_153 () (_ BitVec 64))
(declare-fun temp1026_154 () (_ BitVec 64))
(declare-fun temp1026_156 () (_ BitVec 64))
(declare-fun temp1026_157 () (_ BitVec 64))
(declare-fun temp1026_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1026_158 () (_ BitVec 64))
(declare-fun temp1026_159 () (_ BitVec 64))
(declare-fun temp1026_161 () (_ BitVec 64))
(declare-fun temp1026_162 () (_ BitVec 64))
(declare-fun temp1026_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1026_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1026_164 () (_ BitVec 64))
(declare-fun temp1026_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1026_166 () (_ BitVec 64))
(declare-fun temp1026_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1026_168 () (_ BitVec 64))
(declare-fun temp1026_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1026_170 () (_ BitVec 64))
(declare-fun temp1026_171 () (_ BitVec 64))
(declare-fun temp1026_172 () (_ BitVec 64))
(declare-fun temp1026_173 () (_ BitVec 64))
(declare-fun temp1026_174 () (_ BitVec 64))
(declare-fun temp1026_175 () (_ BitVec 64))
(declare-fun temp1026_176 () (_ BitVec 64))
(declare-fun temp1026_177 () (_ BitVec 64))
(declare-fun temp1026_178 () (_ BitVec 64))
(declare-fun temp1026_179 () (_ BitVec 64))
(declare-fun temp1026_180 () (_ BitVec 64))
(declare-fun temp1026_181 () (_ BitVec 64))
(declare-fun temp1026_182 () (_ BitVec 64))
(declare-fun temp1026_183 () (_ BitVec 64))
(declare-fun temp1026_184 () (_ BitVec 64))
(declare-fun temp1026_185 () (_ BitVec 64))
(declare-fun temp1026_186 () (_ BitVec 64))
(declare-fun temp1026_187 () (_ BitVec 64))
(declare-fun temp1026_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1026_189 () (_ BitVec 64))
(declare-fun temp1026_191 () (_ BitVec 64))
(declare-fun temp1026_192 () (_ BitVec 64))
(declare-fun temp1026_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1026_193 () (_ BitVec 64))
(declare-fun temp1026_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1026_195 () (_ BitVec 64))
(declare-fun temp1026_196 () (_ BitVec 64))
(declare-fun temp1026_197 () (_ BitVec 64))
(declare-fun temp1026_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1026_199 () (_ BitVec 64))
(declare-fun temp1026_200 () (_ BitVec 64))
(declare-fun temp1026_201 () (_ BitVec 64))
(declare-fun temp1026_202 () (_ BitVec 64))
(declare-fun temp1026_203 () (_ BitVec 64))
(declare-fun temp1026_204 () (_ BitVec 64))
(declare-fun temp1026_205 () (_ BitVec 64))
(declare-fun temp1026_206 () (_ BitVec 64))
(declare-fun temp1026_207 () (_ BitVec 64))
(declare-fun temp1026_208 () (_ BitVec 64))
(declare-fun temp1026_209 () (_ BitVec 64))
(declare-fun temp1026_210 () (_ BitVec 64))
(declare-fun temp1026_211 () (_ BitVec 64))
(declare-fun temp1026_212 () (_ BitVec 64))
(declare-fun temp1026_213 () (_ BitVec 64))
(declare-fun temp1026_214 () (_ BitVec 64))
(declare-fun temp1026_215 () (_ BitVec 64))
(declare-fun temp1026_216 () (_ BitVec 64))
(declare-fun temp1026_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1026_218 () (_ BitVec 64))
(declare-fun temp1026_220 () (_ BitVec 64))
(declare-fun temp1026_221 () (_ BitVec 64))
(declare-fun temp1026_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1026_222 () (_ BitVec 64))
(declare-fun temp1026_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1026_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1026_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1026_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1026_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1026_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1026_229 () (_ BitVec 64))
(declare-fun temp1026_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1026_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1026_232 () (_ BitVec 64))
(declare-fun temp1026_233 () (_ BitVec 64))
(declare-fun temp1026_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1026_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1026_236 () (_ BitVec 64))
(declare-fun temp1026_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1026_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1026_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun var6107536 () (_ BitVec 64))
(declare-fun temp1026_240 () (_ BitVec 64))
(declare-fun var6435216 () (_ BitVec 64))
(declare-fun temp1026_241 () (_ BitVec 64))
(assert (= temp1026_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1026_1)))
(assert (= temp1026_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1026_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_3 #x0000000000000000))
(assert (= var79869 temp1026_3))
(assert (= temp1026_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1026_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_5 #x0000000000000000))
(assert (= var79914 temp1026_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1026_6 #x0000000000000000))
(assert (= temp1026_7 temp1026_6))
(assert (= temp1026_8 (select ARGNAME_padding_NAMEEND_VAL temp1026_7)))
(assert (= temp1026_9 #x0000000000000001))
(assert (= temp1026_10 temp1026_9))
(assert (= temp1026_11 (select ARGNAME_padding_NAMEEND_VAL temp1026_10)))
(assert (= temp1026_12 #x0000000000000002))
(assert (= temp1026_13 temp1026_12))
(assert (= temp1026_14 (select ARGNAME_padding_NAMEEND_VAL temp1026_13)))
(assert (= temp1026_15 #x0000000000000003))
(assert (= temp1026_16 temp1026_15))
(assert (= temp1026_17 (select ARGNAME_padding_NAMEEND_VAL temp1026_16)))
(assert (= temp1026_18 #x0000000000000004))
(assert (= temp1026_19 temp1026_18))
(assert (= temp1026_20 (select ARGNAME_padding_NAMEEND_VAL temp1026_19)))
(assert (= temp1026_21 #x0000000000000005))
(assert (= temp1026_22 temp1026_21))
(assert (= temp1026_23 (select ARGNAME_padding_NAMEEND_VAL temp1026_22)))
(assert (= temp1026_24 #x0000000000000000))
(assert (= temp1026_25 #x0000000000000000))
(assert (= temp1026_26 temp1026_25))
(assert (= temp1026_27 (select ARGNAME_padding_NAMEEND_VAL temp1026_26)))
(assert (= temp1026_28 #x0000000000000000))
(assert (= temp1026_29 #x0000000000000001))
(assert (= temp1026_30 temp1026_29))
(assert (= temp1026_31 (select ARGNAME_padding_NAMEEND_VAL temp1026_30)))
(assert (= temp1026_32 #x0000000000000000))
(assert (= temp1026_33 #x0000000000000002))
(assert (= temp1026_34 temp1026_33))
(assert (= temp1026_35 (select ARGNAME_padding_NAMEEND_VAL temp1026_34)))
(assert (= temp1026_36 #x0000000000000000))
(assert (= temp1026_37 #x0000000000000003))
(assert (= temp1026_38 temp1026_37))
(assert (= temp1026_39 (select ARGNAME_padding_NAMEEND_VAL temp1026_38)))
(assert (= temp1026_40 #x0000000000000000))
(assert (= temp1026_41 #x0000000000000004))
(assert (= temp1026_42 temp1026_41))
(assert (= temp1026_43 (select ARGNAME_padding_NAMEEND_VAL temp1026_42)))
(assert (= temp1026_44 #x0000000000000000))
(assert (= temp1026_45 #x0000000000000005))
(assert (= temp1026_46 temp1026_45))
(assert (= temp1026_47 (select ARGNAME_padding_NAMEEND_VAL temp1026_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1026_27 temp1026_24)
             (bvslt temp1026_31 temp1026_28)
             (bvslt temp1026_35 temp1026_32)
             (bvslt temp1026_39 temp1026_36)
             (bvslt temp1026_43 temp1026_40)
             (bvslt temp1026_47 temp1026_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_48 #x0000000000000000))
(assert (= var1322786 temp1026_48))
(assert (= temp1026_49 #x0000000000000000))
(assert (= temp1026_50 temp1026_49))
(assert (= temp1026_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_50)))
(assert (= temp1026_52 #x0000000000000001))
(assert (= temp1026_53 temp1026_52))
(assert (= temp1026_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_53)))
(assert (= temp1026_55 #x0000000000000002))
(assert (= temp1026_56 temp1026_55))
(assert (= temp1026_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_56)))
(assert (= temp1026_58 #x0000000000000003))
(assert (= temp1026_59 temp1026_58))
(assert (= temp1026_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_59)))
(assert (= temp1026_61 #x0000000000000004))
(assert (= temp1026_62 temp1026_61))
(assert (= temp1026_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_62)))
(assert (= temp1026_64 #x0000000000000005))
(assert (= temp1026_65 temp1026_64))
(assert (= temp1026_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_65)))
(assert (= temp1026_67 #x0000000000000000))
(assert (= temp1026_68 #x0000000000000000))
(assert (= temp1026_69 temp1026_68))
(assert (= temp1026_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_69)))
(assert (= temp1026_71 #x0000000000000000))
(assert (= temp1026_72 #x0000000000000001))
(assert (= temp1026_73 temp1026_72))
(assert (= temp1026_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_73)))
(assert (= temp1026_75 #x0000000000000000))
(assert (= temp1026_76 #x0000000000000002))
(assert (= temp1026_77 temp1026_76))
(assert (= temp1026_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_77)))
(assert (= temp1026_79 #x0000000000000000))
(assert (= temp1026_80 #x0000000000000003))
(assert (= temp1026_81 temp1026_80))
(assert (= temp1026_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_81)))
(assert (= temp1026_83 #x0000000000000000))
(assert (= temp1026_84 #x0000000000000004))
(assert (= temp1026_85 temp1026_84))
(assert (= temp1026_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_85)))
(assert (= temp1026_87 #x0000000000000000))
(assert (= temp1026_88 #x0000000000000005))
(assert (= temp1026_89 temp1026_88))
(assert (= temp1026_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1026_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1026_70 temp1026_67)
             (bvslt temp1026_74 temp1026_71)
             (bvslt temp1026_78 temp1026_75)
             (bvslt temp1026_82 temp1026_79)
             (bvslt temp1026_86 temp1026_83)
             (bvslt temp1026_90 temp1026_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_91 #x0000000000000000))
(assert (= var1322797 temp1026_91))
(assert (= temp1026_92 #x0000000000000000))
(assert (= temp1026_93 temp1026_92))
(assert (= temp1026_94 (select ARGNAME_stride_NAMEEND_VAL temp1026_93)))
(assert (= temp1026_95 #x0000000000000001))
(assert (= temp1026_96 temp1026_95))
(assert (= temp1026_97 (select ARGNAME_stride_NAMEEND_VAL temp1026_96)))
(assert (= temp1026_98 #x0000000000000002))
(assert (= temp1026_99 temp1026_98))
(assert (= temp1026_100 (select ARGNAME_stride_NAMEEND_VAL temp1026_99)))
(assert (= temp1026_101 #x0000000000000003))
(assert (= temp1026_102 temp1026_101))
(assert (= temp1026_103 (select ARGNAME_stride_NAMEEND_VAL temp1026_102)))
(assert (= temp1026_104 #x0000000000000004))
(assert (= temp1026_105 temp1026_104))
(assert (= temp1026_106 (select ARGNAME_stride_NAMEEND_VAL temp1026_105)))
(assert (= temp1026_107 #x0000000000000005))
(assert (= temp1026_108 temp1026_107))
(assert (= temp1026_109 (select ARGNAME_stride_NAMEEND_VAL temp1026_108)))
(assert (= temp1026_110 #x0000000000000000))
(assert (= temp1026_111 #x0000000000000000))
(assert (= temp1026_112 temp1026_111))
(assert (= temp1026_113 (select ARGNAME_stride_NAMEEND_VAL temp1026_112)))
(assert (= temp1026_114 #x0000000000000000))
(assert (= temp1026_115 #x0000000000000001))
(assert (= temp1026_116 temp1026_115))
(assert (= temp1026_117 (select ARGNAME_stride_NAMEEND_VAL temp1026_116)))
(assert (= temp1026_118 #x0000000000000000))
(assert (= temp1026_119 #x0000000000000002))
(assert (= temp1026_120 temp1026_119))
(assert (= temp1026_121 (select ARGNAME_stride_NAMEEND_VAL temp1026_120)))
(assert (= temp1026_122 #x0000000000000000))
(assert (= temp1026_123 #x0000000000000003))
(assert (= temp1026_124 temp1026_123))
(assert (= temp1026_125 (select ARGNAME_stride_NAMEEND_VAL temp1026_124)))
(assert (= temp1026_126 #x0000000000000000))
(assert (= temp1026_127 #x0000000000000004))
(assert (= temp1026_128 temp1026_127))
(assert (= temp1026_129 (select ARGNAME_stride_NAMEEND_VAL temp1026_128)))
(assert (= temp1026_130 #x0000000000000000))
(assert (= temp1026_131 #x0000000000000005))
(assert (= temp1026_132 temp1026_131))
(assert (= temp1026_133 (select ARGNAME_stride_NAMEEND_VAL temp1026_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1026_113 temp1026_110)
             (bvsle temp1026_117 temp1026_114)
             (bvsle temp1026_121 temp1026_118)
             (bvsle temp1026_125 temp1026_122)
             (bvsle temp1026_129 temp1026_126)
             (bvsle temp1026_133 temp1026_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_134 #x0000000000000000))
(assert (= var1322807 temp1026_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_135 #x0000000000000001))
(assert (= var1322819 temp1026_135))
(assert (= temp1026_136 #x0000000000000000))
(assert (= var1310898 temp1026_136))
(assert (= temp1026_137 #x0000000000000000))
(assert (= temp1026_138 temp1026_137))
(assert (= temp1026_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_138)))
(assert (= temp1026_140 #x0000000000000001))
(assert (= temp1026_141 temp1026_140))
(assert (= temp1026_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_141)))
(assert (= temp1026_143 #x0000000000000002))
(assert (= temp1026_144 temp1026_143))
(assert (= temp1026_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_144)))
(assert (= temp1026_146 #x0000000000000003))
(assert (= temp1026_147 temp1026_146))
(assert (= temp1026_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_147)))
(assert (= temp1026_149 #x0000000000000004))
(assert (= temp1026_150 temp1026_149))
(assert (= temp1026_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_150)))
(assert (= temp1026_152 #x0000000000000005))
(assert (= temp1026_153 temp1026_152))
(assert (= temp1026_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_153)))
(assert (= temp1026_156 var1310898))
(assert (= temp1026_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_156)))
(assert (= temp1026_155 temp1026_157))
(assert (= var1322852
   (ite (bvslt temp1026_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_158 #x0000000000000000))
(assert (= var1322852 temp1026_158))
(assert (= temp1026_159 #x0000000000000000))
(assert (= var1310898 temp1026_159))
(assert (= temp1026_161 var1310898))
(assert (= temp1026_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_161)))
(assert (= temp1026_160 temp1026_162))
(assert (= var1322874 (bvsmod temp1026_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1026_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1026_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1026_164 #x0000000000000001))
(assert (= var1322875 temp1026_164))
(assert (= temp1026_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1026_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_166 #x0000000000000001))
(assert (= var1322895 temp1026_166))
(assert (= temp1026_167 #x0000000000000001))
(assert (= var1311786 temp1026_167))
(assert (= temp1026_168 #x0000000000000000))
(assert (= temp1026_169 temp1026_168))
(assert (= temp1026_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1026_169)))
(assert (= temp1026_171 #x0000000000000001))
(assert (= temp1026_172 temp1026_171))
(assert (= temp1026_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1026_172)))
(assert (= temp1026_174 #x0000000000000002))
(assert (= temp1026_175 temp1026_174))
(assert (= temp1026_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1026_175)))
(assert (= temp1026_177 #x0000000000000003))
(assert (= temp1026_178 temp1026_177))
(assert (= temp1026_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1026_178)))
(assert (= temp1026_180 #x0000000000000004))
(assert (= temp1026_181 temp1026_180))
(assert (= temp1026_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1026_181)))
(assert (= temp1026_183 #x0000000000000005))
(assert (= temp1026_184 temp1026_183))
(assert (= temp1026_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1026_184)))
(assert (= temp1026_186 #x0000000000000000))
(assert (= temp1026_187
   (ite (bvslt var1311786 temp1026_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1026_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1026_187)))
(assert (= var1322903 temp1026_188))
(assert (bvslt (ite (bvslt var1311786 temp1026_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1026_189 #x0000000000000001))
(assert (= var1311786 temp1026_189))
(assert (= temp1026_191 var1311786))
(assert (= temp1026_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_191)))
(assert (= temp1026_190 temp1026_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1026_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1026_193 #x0000000000000001))
(assert (= var1322908 temp1026_193))
(assert (= temp1026_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1026_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_195 #x0000000000000001))
(assert (= var1322975 temp1026_195))
(assert (= temp1026_196 #x0000000000000000))
(assert (= var1310898 temp1026_196))
(assert (= temp1026_197 #x0000000000000000))
(assert (= temp1026_198 temp1026_197))
(assert (= temp1026_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1026_198)))
(assert (= temp1026_200 #x0000000000000001))
(assert (= temp1026_201 temp1026_200))
(assert (= temp1026_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1026_201)))
(assert (= temp1026_203 #x0000000000000002))
(assert (= temp1026_204 temp1026_203))
(assert (= temp1026_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1026_204)))
(assert (= temp1026_206 #x0000000000000003))
(assert (= temp1026_207 temp1026_206))
(assert (= temp1026_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1026_207)))
(assert (= temp1026_209 #x0000000000000004))
(assert (= temp1026_210 temp1026_209))
(assert (= temp1026_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1026_210)))
(assert (= temp1026_212 #x0000000000000005))
(assert (= temp1026_213 temp1026_212))
(assert (= temp1026_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1026_213)))
(assert (= temp1026_215 #x0000000000000000))
(assert (= temp1026_216
   (ite (bvslt var1310898 temp1026_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1026_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1026_216)))
(assert (= var1322977 temp1026_217))
(assert (bvslt (ite (bvslt var1310898 temp1026_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1026_218 #x0000000000000000))
(assert (= var1310898 temp1026_218))
(assert (= temp1026_220 var1310898))
(assert (= temp1026_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1026_220)))
(assert (= temp1026_219 temp1026_221))
(assert (= var1322980
   (ite (= var1322977 temp1026_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1026_222 #x0000000000000001))
(assert (= var1322980 temp1026_222))
(assert (= temp1026_223 #x0000000000000002))
(assert (= var1848169 temp1026_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1026_225 #x0000000000000001))
(assert (= var1323065 temp1026_225))
(assert (= temp1026_226 #x0000000000000001))
(assert (= var3486735 temp1026_226))
(assert (= temp1026_227 #x0000000000000001))
(assert (= var3814415 temp1026_227))
(assert (= temp1026_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1026_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_229 #x0000000000000001))
(assert (= var79986 temp1026_229))
(assert (= temp1026_230 #x0000000000000001))
(assert (= var80116 temp1026_230))
(assert (= var4796905 var80116))
(assert (= temp1026_231 #x0000000000000000))
(assert (= var4784306 temp1026_231))
(assert (= temp1026_232 #x0000000000000000))
(assert (= temp1026_233
   (ite (bvslt var4784306 temp1026_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1026_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1026_233)))
(assert (= var4796924 temp1026_234))
(assert (bvslt (ite (bvslt var4784306 temp1026_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1026_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1026_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1026_236 #x0000000000000001))
(assert (= var4796925 temp1026_236))
(assert (= temp1026_237 #x0000000000000000))
(assert (= var4996927 temp1026_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1026_238 #x0000000000000002))
(assert (= var5125763 temp1026_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1026_239 #x0000000000000000))
(assert (= var5191324 temp1026_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5845392 var80129))
(assert (= var6107536 var80129))
(assert (= temp1026_240 #x0000000000000000))
(assert (= var6435216 temp1026_240))
(assert (= temp1026_241 #x0000000000000001))
(assert (= var79986 temp1026_241))
(model-add temp1026_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1026_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1026_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






