(declare-fun temp338_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp338_2 () (_ BitVec 64))
(declare-fun temp338_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp338_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp338_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp338_6 () (_ BitVec 64))
(declare-fun temp338_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_8 () (_ BitVec 64))
(declare-fun temp338_9 () (_ BitVec 64))
(declare-fun temp338_10 () (_ BitVec 64))
(declare-fun temp338_11 () (_ BitVec 64))
(declare-fun temp338_12 () (_ BitVec 64))
(declare-fun temp338_13 () (_ BitVec 64))
(declare-fun temp338_14 () (_ BitVec 64))
(declare-fun temp338_15 () (_ BitVec 64))
(declare-fun temp338_16 () (_ BitVec 64))
(declare-fun temp338_17 () (_ BitVec 64))
(declare-fun temp338_18 () (_ BitVec 64))
(declare-fun temp338_19 () (_ BitVec 64))
(declare-fun temp338_20 () (_ BitVec 64))
(declare-fun temp338_21 () (_ BitVec 64))
(declare-fun temp338_22 () (_ BitVec 64))
(declare-fun temp338_23 () (_ BitVec 64))
(declare-fun temp338_24 () (_ BitVec 64))
(declare-fun temp338_25 () (_ BitVec 64))
(declare-fun temp338_26 () (_ BitVec 64))
(declare-fun temp338_27 () (_ BitVec 64))
(declare-fun temp338_28 () (_ BitVec 64))
(declare-fun temp338_29 () (_ BitVec 64))
(declare-fun temp338_30 () (_ BitVec 64))
(declare-fun temp338_31 () (_ BitVec 64))
(declare-fun temp338_32 () (_ BitVec 64))
(declare-fun temp338_33 () (_ BitVec 64))
(declare-fun temp338_34 () (_ BitVec 64))
(declare-fun temp338_35 () (_ BitVec 64))
(declare-fun temp338_36 () (_ BitVec 64))
(declare-fun temp338_37 () (_ BitVec 64))
(declare-fun temp338_38 () (_ BitVec 64))
(declare-fun temp338_39 () (_ BitVec 64))
(declare-fun temp338_40 () (_ BitVec 64))
(declare-fun temp338_41 () (_ BitVec 64))
(declare-fun temp338_42 () (_ BitVec 64))
(declare-fun temp338_43 () (_ BitVec 64))
(declare-fun temp338_44 () (_ BitVec 64))
(declare-fun temp338_45 () (_ BitVec 64))
(declare-fun temp338_46 () (_ BitVec 64))
(declare-fun temp338_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp338_48 () (_ BitVec 64))
(declare-fun temp338_49 () (_ BitVec 64))
(declare-fun temp338_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_51 () (_ BitVec 64))
(declare-fun temp338_52 () (_ BitVec 64))
(declare-fun temp338_53 () (_ BitVec 64))
(declare-fun temp338_54 () (_ BitVec 64))
(declare-fun temp338_55 () (_ BitVec 64))
(declare-fun temp338_56 () (_ BitVec 64))
(declare-fun temp338_57 () (_ BitVec 64))
(declare-fun temp338_58 () (_ BitVec 64))
(declare-fun temp338_59 () (_ BitVec 64))
(declare-fun temp338_60 () (_ BitVec 64))
(declare-fun temp338_61 () (_ BitVec 64))
(declare-fun temp338_62 () (_ BitVec 64))
(declare-fun temp338_63 () (_ BitVec 64))
(declare-fun temp338_64 () (_ BitVec 64))
(declare-fun temp338_65 () (_ BitVec 64))
(declare-fun temp338_66 () (_ BitVec 64))
(declare-fun temp338_67 () (_ BitVec 64))
(declare-fun temp338_68 () (_ BitVec 64))
(declare-fun temp338_69 () (_ BitVec 64))
(declare-fun temp338_70 () (_ BitVec 64))
(declare-fun temp338_71 () (_ BitVec 64))
(declare-fun temp338_72 () (_ BitVec 64))
(declare-fun temp338_73 () (_ BitVec 64))
(declare-fun temp338_74 () (_ BitVec 64))
(declare-fun temp338_75 () (_ BitVec 64))
(declare-fun temp338_76 () (_ BitVec 64))
(declare-fun temp338_77 () (_ BitVec 64))
(declare-fun temp338_78 () (_ BitVec 64))
(declare-fun temp338_79 () (_ BitVec 64))
(declare-fun temp338_80 () (_ BitVec 64))
(declare-fun temp338_81 () (_ BitVec 64))
(declare-fun temp338_82 () (_ BitVec 64))
(declare-fun temp338_83 () (_ BitVec 64))
(declare-fun temp338_84 () (_ BitVec 64))
(declare-fun temp338_85 () (_ BitVec 64))
(declare-fun temp338_86 () (_ BitVec 64))
(declare-fun temp338_87 () (_ BitVec 64))
(declare-fun temp338_88 () (_ BitVec 64))
(declare-fun temp338_89 () (_ BitVec 64))
(declare-fun temp338_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp338_91 () (_ BitVec 64))
(declare-fun temp338_92 () (_ BitVec 64))
(declare-fun temp338_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_94 () (_ BitVec 64))
(declare-fun temp338_95 () (_ BitVec 64))
(declare-fun temp338_96 () (_ BitVec 64))
(declare-fun temp338_97 () (_ BitVec 64))
(declare-fun temp338_98 () (_ BitVec 64))
(declare-fun temp338_99 () (_ BitVec 64))
(declare-fun temp338_100 () (_ BitVec 64))
(declare-fun temp338_101 () (_ BitVec 64))
(declare-fun temp338_102 () (_ BitVec 64))
(declare-fun temp338_103 () (_ BitVec 64))
(declare-fun temp338_104 () (_ BitVec 64))
(declare-fun temp338_105 () (_ BitVec 64))
(declare-fun temp338_106 () (_ BitVec 64))
(declare-fun temp338_107 () (_ BitVec 64))
(declare-fun temp338_108 () (_ BitVec 64))
(declare-fun temp338_109 () (_ BitVec 64))
(declare-fun temp338_110 () (_ BitVec 64))
(declare-fun temp338_111 () (_ BitVec 64))
(declare-fun temp338_112 () (_ BitVec 64))
(declare-fun temp338_113 () (_ BitVec 64))
(declare-fun temp338_114 () (_ BitVec 64))
(declare-fun temp338_115 () (_ BitVec 64))
(declare-fun temp338_116 () (_ BitVec 64))
(declare-fun temp338_117 () (_ BitVec 64))
(declare-fun temp338_118 () (_ BitVec 64))
(declare-fun temp338_119 () (_ BitVec 64))
(declare-fun temp338_120 () (_ BitVec 64))
(declare-fun temp338_121 () (_ BitVec 64))
(declare-fun temp338_122 () (_ BitVec 64))
(declare-fun temp338_123 () (_ BitVec 64))
(declare-fun temp338_124 () (_ BitVec 64))
(declare-fun temp338_125 () (_ BitVec 64))
(declare-fun temp338_126 () (_ BitVec 64))
(declare-fun temp338_127 () (_ BitVec 64))
(declare-fun temp338_128 () (_ BitVec 64))
(declare-fun temp338_129 () (_ BitVec 64))
(declare-fun temp338_130 () (_ BitVec 64))
(declare-fun temp338_131 () (_ BitVec 64))
(declare-fun temp338_132 () (_ BitVec 64))
(declare-fun temp338_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp338_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp338_135 () (_ BitVec 64))
(declare-fun temp338_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp338_137 () (_ BitVec 64))
(declare-fun temp338_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_139 () (_ BitVec 64))
(declare-fun temp338_140 () (_ BitVec 64))
(declare-fun temp338_141 () (_ BitVec 64))
(declare-fun temp338_142 () (_ BitVec 64))
(declare-fun temp338_143 () (_ BitVec 64))
(declare-fun temp338_144 () (_ BitVec 64))
(declare-fun temp338_145 () (_ BitVec 64))
(declare-fun temp338_146 () (_ BitVec 64))
(declare-fun temp338_147 () (_ BitVec 64))
(declare-fun temp338_148 () (_ BitVec 64))
(declare-fun temp338_149 () (_ BitVec 64))
(declare-fun temp338_150 () (_ BitVec 64))
(declare-fun temp338_151 () (_ BitVec 64))
(declare-fun temp338_152 () (_ BitVec 64))
(declare-fun temp338_153 () (_ BitVec 64))
(declare-fun temp338_154 () (_ BitVec 64))
(declare-fun temp338_156 () (_ BitVec 64))
(declare-fun temp338_157 () (_ BitVec 64))
(declare-fun temp338_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp338_158 () (_ BitVec 64))
(declare-fun temp338_159 () (_ BitVec 64))
(declare-fun temp338_161 () (_ BitVec 64))
(declare-fun temp338_162 () (_ BitVec 64))
(declare-fun temp338_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp338_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp338_164 () (_ BitVec 64))
(declare-fun temp338_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp338_166 () (_ BitVec 64))
(declare-fun temp338_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp338_168 () (_ BitVec 64))
(declare-fun temp338_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_170 () (_ BitVec 64))
(declare-fun temp338_171 () (_ BitVec 64))
(declare-fun temp338_172 () (_ BitVec 64))
(declare-fun temp338_173 () (_ BitVec 64))
(declare-fun temp338_174 () (_ BitVec 64))
(declare-fun temp338_175 () (_ BitVec 64))
(declare-fun temp338_176 () (_ BitVec 64))
(declare-fun temp338_177 () (_ BitVec 64))
(declare-fun temp338_178 () (_ BitVec 64))
(declare-fun temp338_179 () (_ BitVec 64))
(declare-fun temp338_180 () (_ BitVec 64))
(declare-fun temp338_181 () (_ BitVec 64))
(declare-fun temp338_182 () (_ BitVec 64))
(declare-fun temp338_183 () (_ BitVec 64))
(declare-fun temp338_184 () (_ BitVec 64))
(declare-fun temp338_185 () (_ BitVec 64))
(declare-fun temp338_186 () (_ BitVec 64))
(declare-fun temp338_187 () (_ BitVec 64))
(declare-fun temp338_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp338_189 () (_ BitVec 64))
(declare-fun temp338_191 () (_ BitVec 64))
(declare-fun temp338_192 () (_ BitVec 64))
(declare-fun temp338_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp338_193 () (_ BitVec 64))
(declare-fun temp338_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp338_195 () (_ BitVec 64))
(declare-fun temp338_196 () (_ BitVec 64))
(declare-fun temp338_197 () (_ BitVec 64))
(declare-fun temp338_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_199 () (_ BitVec 64))
(declare-fun temp338_200 () (_ BitVec 64))
(declare-fun temp338_201 () (_ BitVec 64))
(declare-fun temp338_202 () (_ BitVec 64))
(declare-fun temp338_203 () (_ BitVec 64))
(declare-fun temp338_204 () (_ BitVec 64))
(declare-fun temp338_205 () (_ BitVec 64))
(declare-fun temp338_206 () (_ BitVec 64))
(declare-fun temp338_207 () (_ BitVec 64))
(declare-fun temp338_208 () (_ BitVec 64))
(declare-fun temp338_209 () (_ BitVec 64))
(declare-fun temp338_210 () (_ BitVec 64))
(declare-fun temp338_211 () (_ BitVec 64))
(declare-fun temp338_212 () (_ BitVec 64))
(declare-fun temp338_213 () (_ BitVec 64))
(declare-fun temp338_214 () (_ BitVec 64))
(declare-fun temp338_215 () (_ BitVec 64))
(declare-fun temp338_216 () (_ BitVec 64))
(declare-fun temp338_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp338_218 () (_ BitVec 64))
(declare-fun temp338_220 () (_ BitVec 64))
(declare-fun temp338_221 () (_ BitVec 64))
(declare-fun temp338_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp338_222 () (_ BitVec 64))
(declare-fun temp338_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp338_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp338_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp338_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp338_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp338_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp338_229 () (_ BitVec 64))
(declare-fun temp338_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp338_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp338_232 () (_ BitVec 64))
(declare-fun temp338_233 () (_ BitVec 64))
(declare-fun temp338_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp338_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp338_236 () (_ BitVec 64))
(declare-fun temp338_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp338_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp338_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp338_240 () (_ BitVec 64))
(assert (= temp338_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp338_1)))
(assert (= temp338_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp338_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_3 #x0000000000000000))
(assert (= var79869 temp338_3))
(assert (= temp338_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp338_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_5 #x0000000000000000))
(assert (= var79914 temp338_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp338_6 #x0000000000000000))
(assert (= temp338_7 temp338_6))
(assert (= temp338_8 (select ARGNAME_padding_NAMEEND_VAL temp338_7)))
(assert (= temp338_9 #x0000000000000001))
(assert (= temp338_10 temp338_9))
(assert (= temp338_11 (select ARGNAME_padding_NAMEEND_VAL temp338_10)))
(assert (= temp338_12 #x0000000000000002))
(assert (= temp338_13 temp338_12))
(assert (= temp338_14 (select ARGNAME_padding_NAMEEND_VAL temp338_13)))
(assert (= temp338_15 #x0000000000000003))
(assert (= temp338_16 temp338_15))
(assert (= temp338_17 (select ARGNAME_padding_NAMEEND_VAL temp338_16)))
(assert (= temp338_18 #x0000000000000004))
(assert (= temp338_19 temp338_18))
(assert (= temp338_20 (select ARGNAME_padding_NAMEEND_VAL temp338_19)))
(assert (= temp338_21 #x0000000000000005))
(assert (= temp338_22 temp338_21))
(assert (= temp338_23 (select ARGNAME_padding_NAMEEND_VAL temp338_22)))
(assert (= temp338_24 #x0000000000000000))
(assert (= temp338_25 #x0000000000000000))
(assert (= temp338_26 temp338_25))
(assert (= temp338_27 (select ARGNAME_padding_NAMEEND_VAL temp338_26)))
(assert (= temp338_28 #x0000000000000000))
(assert (= temp338_29 #x0000000000000001))
(assert (= temp338_30 temp338_29))
(assert (= temp338_31 (select ARGNAME_padding_NAMEEND_VAL temp338_30)))
(assert (= temp338_32 #x0000000000000000))
(assert (= temp338_33 #x0000000000000002))
(assert (= temp338_34 temp338_33))
(assert (= temp338_35 (select ARGNAME_padding_NAMEEND_VAL temp338_34)))
(assert (= temp338_36 #x0000000000000000))
(assert (= temp338_37 #x0000000000000003))
(assert (= temp338_38 temp338_37))
(assert (= temp338_39 (select ARGNAME_padding_NAMEEND_VAL temp338_38)))
(assert (= temp338_40 #x0000000000000000))
(assert (= temp338_41 #x0000000000000004))
(assert (= temp338_42 temp338_41))
(assert (= temp338_43 (select ARGNAME_padding_NAMEEND_VAL temp338_42)))
(assert (= temp338_44 #x0000000000000000))
(assert (= temp338_45 #x0000000000000005))
(assert (= temp338_46 temp338_45))
(assert (= temp338_47 (select ARGNAME_padding_NAMEEND_VAL temp338_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp338_27 temp338_24)
             (bvslt temp338_31 temp338_28)
             (bvslt temp338_35 temp338_32)
             (bvslt temp338_39 temp338_36)
             (bvslt temp338_43 temp338_40)
             (bvslt temp338_47 temp338_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_48 #x0000000000000000))
(assert (= var1322786 temp338_48))
(assert (= temp338_49 #x0000000000000000))
(assert (= temp338_50 temp338_49))
(assert (= temp338_51 (select ARGNAME_output_padding_NAMEEND_VAL temp338_50)))
(assert (= temp338_52 #x0000000000000001))
(assert (= temp338_53 temp338_52))
(assert (= temp338_54 (select ARGNAME_output_padding_NAMEEND_VAL temp338_53)))
(assert (= temp338_55 #x0000000000000002))
(assert (= temp338_56 temp338_55))
(assert (= temp338_57 (select ARGNAME_output_padding_NAMEEND_VAL temp338_56)))
(assert (= temp338_58 #x0000000000000003))
(assert (= temp338_59 temp338_58))
(assert (= temp338_60 (select ARGNAME_output_padding_NAMEEND_VAL temp338_59)))
(assert (= temp338_61 #x0000000000000004))
(assert (= temp338_62 temp338_61))
(assert (= temp338_63 (select ARGNAME_output_padding_NAMEEND_VAL temp338_62)))
(assert (= temp338_64 #x0000000000000005))
(assert (= temp338_65 temp338_64))
(assert (= temp338_66 (select ARGNAME_output_padding_NAMEEND_VAL temp338_65)))
(assert (= temp338_67 #x0000000000000000))
(assert (= temp338_68 #x0000000000000000))
(assert (= temp338_69 temp338_68))
(assert (= temp338_70 (select ARGNAME_output_padding_NAMEEND_VAL temp338_69)))
(assert (= temp338_71 #x0000000000000000))
(assert (= temp338_72 #x0000000000000001))
(assert (= temp338_73 temp338_72))
(assert (= temp338_74 (select ARGNAME_output_padding_NAMEEND_VAL temp338_73)))
(assert (= temp338_75 #x0000000000000000))
(assert (= temp338_76 #x0000000000000002))
(assert (= temp338_77 temp338_76))
(assert (= temp338_78 (select ARGNAME_output_padding_NAMEEND_VAL temp338_77)))
(assert (= temp338_79 #x0000000000000000))
(assert (= temp338_80 #x0000000000000003))
(assert (= temp338_81 temp338_80))
(assert (= temp338_82 (select ARGNAME_output_padding_NAMEEND_VAL temp338_81)))
(assert (= temp338_83 #x0000000000000000))
(assert (= temp338_84 #x0000000000000004))
(assert (= temp338_85 temp338_84))
(assert (= temp338_86 (select ARGNAME_output_padding_NAMEEND_VAL temp338_85)))
(assert (= temp338_87 #x0000000000000000))
(assert (= temp338_88 #x0000000000000005))
(assert (= temp338_89 temp338_88))
(assert (= temp338_90 (select ARGNAME_output_padding_NAMEEND_VAL temp338_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp338_70 temp338_67)
             (bvslt temp338_74 temp338_71)
             (bvslt temp338_78 temp338_75)
             (bvslt temp338_82 temp338_79)
             (bvslt temp338_86 temp338_83)
             (bvslt temp338_90 temp338_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_91 #x0000000000000000))
(assert (= var1322797 temp338_91))
(assert (= temp338_92 #x0000000000000000))
(assert (= temp338_93 temp338_92))
(assert (= temp338_94 (select ARGNAME_stride_NAMEEND_VAL temp338_93)))
(assert (= temp338_95 #x0000000000000001))
(assert (= temp338_96 temp338_95))
(assert (= temp338_97 (select ARGNAME_stride_NAMEEND_VAL temp338_96)))
(assert (= temp338_98 #x0000000000000002))
(assert (= temp338_99 temp338_98))
(assert (= temp338_100 (select ARGNAME_stride_NAMEEND_VAL temp338_99)))
(assert (= temp338_101 #x0000000000000003))
(assert (= temp338_102 temp338_101))
(assert (= temp338_103 (select ARGNAME_stride_NAMEEND_VAL temp338_102)))
(assert (= temp338_104 #x0000000000000004))
(assert (= temp338_105 temp338_104))
(assert (= temp338_106 (select ARGNAME_stride_NAMEEND_VAL temp338_105)))
(assert (= temp338_107 #x0000000000000005))
(assert (= temp338_108 temp338_107))
(assert (= temp338_109 (select ARGNAME_stride_NAMEEND_VAL temp338_108)))
(assert (= temp338_110 #x0000000000000000))
(assert (= temp338_111 #x0000000000000000))
(assert (= temp338_112 temp338_111))
(assert (= temp338_113 (select ARGNAME_stride_NAMEEND_VAL temp338_112)))
(assert (= temp338_114 #x0000000000000000))
(assert (= temp338_115 #x0000000000000001))
(assert (= temp338_116 temp338_115))
(assert (= temp338_117 (select ARGNAME_stride_NAMEEND_VAL temp338_116)))
(assert (= temp338_118 #x0000000000000000))
(assert (= temp338_119 #x0000000000000002))
(assert (= temp338_120 temp338_119))
(assert (= temp338_121 (select ARGNAME_stride_NAMEEND_VAL temp338_120)))
(assert (= temp338_122 #x0000000000000000))
(assert (= temp338_123 #x0000000000000003))
(assert (= temp338_124 temp338_123))
(assert (= temp338_125 (select ARGNAME_stride_NAMEEND_VAL temp338_124)))
(assert (= temp338_126 #x0000000000000000))
(assert (= temp338_127 #x0000000000000004))
(assert (= temp338_128 temp338_127))
(assert (= temp338_129 (select ARGNAME_stride_NAMEEND_VAL temp338_128)))
(assert (= temp338_130 #x0000000000000000))
(assert (= temp338_131 #x0000000000000005))
(assert (= temp338_132 temp338_131))
(assert (= temp338_133 (select ARGNAME_stride_NAMEEND_VAL temp338_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp338_113 temp338_110)
             (bvsle temp338_117 temp338_114)
             (bvsle temp338_121 temp338_118)
             (bvsle temp338_125 temp338_122)
             (bvsle temp338_129 temp338_126)
             (bvsle temp338_133 temp338_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_134 #x0000000000000000))
(assert (= var1322807 temp338_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_135 #x0000000000000001))
(assert (= var1322819 temp338_135))
(assert (= temp338_136 #x0000000000000000))
(assert (= var1310898 temp338_136))
(assert (= temp338_137 #x0000000000000000))
(assert (= temp338_138 temp338_137))
(assert (= temp338_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_138)))
(assert (= temp338_140 #x0000000000000001))
(assert (= temp338_141 temp338_140))
(assert (= temp338_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_141)))
(assert (= temp338_143 #x0000000000000002))
(assert (= temp338_144 temp338_143))
(assert (= temp338_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_144)))
(assert (= temp338_146 #x0000000000000003))
(assert (= temp338_147 temp338_146))
(assert (= temp338_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_147)))
(assert (= temp338_149 #x0000000000000004))
(assert (= temp338_150 temp338_149))
(assert (= temp338_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_150)))
(assert (= temp338_152 #x0000000000000005))
(assert (= temp338_153 temp338_152))
(assert (= temp338_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_153)))
(assert (= temp338_156 var1310898))
(assert (= temp338_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_156)))
(assert (= temp338_155 temp338_157))
(assert (= var1322852
   (ite (bvslt temp338_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_158 #x0000000000000000))
(assert (= var1322852 temp338_158))
(assert (= temp338_159 #x0000000000000000))
(assert (= var1310898 temp338_159))
(assert (= temp338_161 var1310898))
(assert (= temp338_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_161)))
(assert (= temp338_160 temp338_162))
(assert (= var1322874 (bvsmod temp338_160 ARGNAME_groups_NAMEEND)))
(assert (= temp338_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp338_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_164 #x0000000000000001))
(assert (= var1322875 temp338_164))
(assert (= temp338_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp338_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_166 #x0000000000000001))
(assert (= var1322895 temp338_166))
(assert (= temp338_167 #x0000000000000001))
(assert (= var1311786 temp338_167))
(assert (= temp338_168 #x0000000000000000))
(assert (= temp338_169 temp338_168))
(assert (= temp338_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_169)))
(assert (= temp338_171 #x0000000000000001))
(assert (= temp338_172 temp338_171))
(assert (= temp338_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_172)))
(assert (= temp338_174 #x0000000000000002))
(assert (= temp338_175 temp338_174))
(assert (= temp338_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_175)))
(assert (= temp338_177 #x0000000000000003))
(assert (= temp338_178 temp338_177))
(assert (= temp338_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_178)))
(assert (= temp338_180 #x0000000000000004))
(assert (= temp338_181 temp338_180))
(assert (= temp338_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_181)))
(assert (= temp338_183 #x0000000000000005))
(assert (= temp338_184 temp338_183))
(assert (= temp338_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_184)))
(assert (= temp338_186 #x0000000000000000))
(assert (= temp338_187
   (ite (bvslt var1311786 temp338_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp338_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_187)))
(assert (= var1322903 temp338_188))
(assert (bvslt (ite (bvslt var1311786 temp338_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp338_189 #x0000000000000001))
(assert (= var1311786 temp338_189))
(assert (= temp338_191 var1311786))
(assert (= temp338_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_191)))
(assert (= temp338_190 temp338_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp338_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_193 #x0000000000000001))
(assert (= var1322908 temp338_193))
(assert (= temp338_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp338_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_195 #x0000000000000001))
(assert (= var1322975 temp338_195))
(assert (= temp338_196 #x0000000000000000))
(assert (= var1310898 temp338_196))
(assert (= temp338_197 #x0000000000000000))
(assert (= temp338_198 temp338_197))
(assert (= temp338_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp338_198)))
(assert (= temp338_200 #x0000000000000001))
(assert (= temp338_201 temp338_200))
(assert (= temp338_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp338_201)))
(assert (= temp338_203 #x0000000000000002))
(assert (= temp338_204 temp338_203))
(assert (= temp338_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp338_204)))
(assert (= temp338_206 #x0000000000000003))
(assert (= temp338_207 temp338_206))
(assert (= temp338_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp338_207)))
(assert (= temp338_209 #x0000000000000004))
(assert (= temp338_210 temp338_209))
(assert (= temp338_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp338_210)))
(assert (= temp338_212 #x0000000000000005))
(assert (= temp338_213 temp338_212))
(assert (= temp338_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp338_213)))
(assert (= temp338_215 #x0000000000000000))
(assert (= temp338_216
   (ite (bvslt var1310898 temp338_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp338_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp338_216)))
(assert (= var1322977 temp338_217))
(assert (bvslt (ite (bvslt var1310898 temp338_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp338_218 #x0000000000000000))
(assert (= var1310898 temp338_218))
(assert (= temp338_220 var1310898))
(assert (= temp338_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_220)))
(assert (= temp338_219 temp338_221))
(assert (= var1322980
   (ite (= var1322977 temp338_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_222 #x0000000000000001))
(assert (= var1322980 temp338_222))
(assert (= temp338_223 #x0000000000000002))
(assert (= var1848169 temp338_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp338_225 #x0000000000000001))
(assert (= var1323065 temp338_225))
(assert (= temp338_226 #x0000000000000001))
(assert (= var3486735 temp338_226))
(assert (= temp338_227 #x0000000000000001))
(assert (= var3814415 temp338_227))
(assert (= temp338_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp338_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_229 #x0000000000000001))
(assert (= var79986 temp338_229))
(assert (= temp338_230 #x0000000000000001))
(assert (= var80116 temp338_230))
(assert (= var4796905 var80116))
(assert (= temp338_231 #x0000000000000000))
(assert (= var4784306 temp338_231))
(assert (= temp338_232 #x0000000000000000))
(assert (= temp338_233
   (ite (bvslt var4784306 temp338_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp338_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_233)))
(assert (= var4796924 temp338_234))
(assert (bvslt (ite (bvslt var4784306 temp338_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp338_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp338_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_236 #x0000000000000001))
(assert (= var4796925 temp338_236))
(assert (= temp338_237 #x0000000000000000))
(assert (= var4996927 temp338_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp338_238 #x0000000000000002))
(assert (= var5125763 temp338_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_239 #x0000000000000000))
(assert (= var5191324 temp338_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp338_240 #x0000000000000001))
(assert (= var79986 temp338_240))
(model-add temp338_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp338_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp338_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






