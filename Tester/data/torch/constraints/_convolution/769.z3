(declare-fun temp1022_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1022_2 () (_ BitVec 64))
(declare-fun temp1022_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1022_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1022_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1022_6 () (_ BitVec 64))
(declare-fun temp1022_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1022_8 () (_ BitVec 64))
(declare-fun temp1022_9 () (_ BitVec 64))
(declare-fun temp1022_10 () (_ BitVec 64))
(declare-fun temp1022_11 () (_ BitVec 64))
(declare-fun temp1022_12 () (_ BitVec 64))
(declare-fun temp1022_13 () (_ BitVec 64))
(declare-fun temp1022_14 () (_ BitVec 64))
(declare-fun temp1022_15 () (_ BitVec 64))
(declare-fun temp1022_16 () (_ BitVec 64))
(declare-fun temp1022_17 () (_ BitVec 64))
(declare-fun temp1022_18 () (_ BitVec 64))
(declare-fun temp1022_19 () (_ BitVec 64))
(declare-fun temp1022_20 () (_ BitVec 64))
(declare-fun temp1022_21 () (_ BitVec 64))
(declare-fun temp1022_22 () (_ BitVec 64))
(declare-fun temp1022_23 () (_ BitVec 64))
(declare-fun temp1022_24 () (_ BitVec 64))
(declare-fun temp1022_25 () (_ BitVec 64))
(declare-fun temp1022_26 () (_ BitVec 64))
(declare-fun temp1022_27 () (_ BitVec 64))
(declare-fun temp1022_28 () (_ BitVec 64))
(declare-fun temp1022_29 () (_ BitVec 64))
(declare-fun temp1022_30 () (_ BitVec 64))
(declare-fun temp1022_31 () (_ BitVec 64))
(declare-fun temp1022_32 () (_ BitVec 64))
(declare-fun temp1022_33 () (_ BitVec 64))
(declare-fun temp1022_34 () (_ BitVec 64))
(declare-fun temp1022_35 () (_ BitVec 64))
(declare-fun temp1022_36 () (_ BitVec 64))
(declare-fun temp1022_37 () (_ BitVec 64))
(declare-fun temp1022_38 () (_ BitVec 64))
(declare-fun temp1022_39 () (_ BitVec 64))
(declare-fun temp1022_40 () (_ BitVec 64))
(declare-fun temp1022_41 () (_ BitVec 64))
(declare-fun temp1022_42 () (_ BitVec 64))
(declare-fun temp1022_43 () (_ BitVec 64))
(declare-fun temp1022_44 () (_ BitVec 64))
(declare-fun temp1022_45 () (_ BitVec 64))
(declare-fun temp1022_46 () (_ BitVec 64))
(declare-fun temp1022_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1022_48 () (_ BitVec 64))
(declare-fun temp1022_49 () (_ BitVec 64))
(declare-fun temp1022_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1022_51 () (_ BitVec 64))
(declare-fun temp1022_52 () (_ BitVec 64))
(declare-fun temp1022_53 () (_ BitVec 64))
(declare-fun temp1022_54 () (_ BitVec 64))
(declare-fun temp1022_55 () (_ BitVec 64))
(declare-fun temp1022_56 () (_ BitVec 64))
(declare-fun temp1022_57 () (_ BitVec 64))
(declare-fun temp1022_58 () (_ BitVec 64))
(declare-fun temp1022_59 () (_ BitVec 64))
(declare-fun temp1022_60 () (_ BitVec 64))
(declare-fun temp1022_61 () (_ BitVec 64))
(declare-fun temp1022_62 () (_ BitVec 64))
(declare-fun temp1022_63 () (_ BitVec 64))
(declare-fun temp1022_64 () (_ BitVec 64))
(declare-fun temp1022_65 () (_ BitVec 64))
(declare-fun temp1022_66 () (_ BitVec 64))
(declare-fun temp1022_67 () (_ BitVec 64))
(declare-fun temp1022_68 () (_ BitVec 64))
(declare-fun temp1022_69 () (_ BitVec 64))
(declare-fun temp1022_70 () (_ BitVec 64))
(declare-fun temp1022_71 () (_ BitVec 64))
(declare-fun temp1022_72 () (_ BitVec 64))
(declare-fun temp1022_73 () (_ BitVec 64))
(declare-fun temp1022_74 () (_ BitVec 64))
(declare-fun temp1022_75 () (_ BitVec 64))
(declare-fun temp1022_76 () (_ BitVec 64))
(declare-fun temp1022_77 () (_ BitVec 64))
(declare-fun temp1022_78 () (_ BitVec 64))
(declare-fun temp1022_79 () (_ BitVec 64))
(declare-fun temp1022_80 () (_ BitVec 64))
(declare-fun temp1022_81 () (_ BitVec 64))
(declare-fun temp1022_82 () (_ BitVec 64))
(declare-fun temp1022_83 () (_ BitVec 64))
(declare-fun temp1022_84 () (_ BitVec 64))
(declare-fun temp1022_85 () (_ BitVec 64))
(declare-fun temp1022_86 () (_ BitVec 64))
(declare-fun temp1022_87 () (_ BitVec 64))
(declare-fun temp1022_88 () (_ BitVec 64))
(declare-fun temp1022_89 () (_ BitVec 64))
(declare-fun temp1022_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1022_91 () (_ BitVec 64))
(declare-fun temp1022_92 () (_ BitVec 64))
(declare-fun temp1022_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1022_94 () (_ BitVec 64))
(declare-fun temp1022_95 () (_ BitVec 64))
(declare-fun temp1022_96 () (_ BitVec 64))
(declare-fun temp1022_97 () (_ BitVec 64))
(declare-fun temp1022_98 () (_ BitVec 64))
(declare-fun temp1022_99 () (_ BitVec 64))
(declare-fun temp1022_100 () (_ BitVec 64))
(declare-fun temp1022_101 () (_ BitVec 64))
(declare-fun temp1022_102 () (_ BitVec 64))
(declare-fun temp1022_103 () (_ BitVec 64))
(declare-fun temp1022_104 () (_ BitVec 64))
(declare-fun temp1022_105 () (_ BitVec 64))
(declare-fun temp1022_106 () (_ BitVec 64))
(declare-fun temp1022_107 () (_ BitVec 64))
(declare-fun temp1022_108 () (_ BitVec 64))
(declare-fun temp1022_109 () (_ BitVec 64))
(declare-fun temp1022_110 () (_ BitVec 64))
(declare-fun temp1022_111 () (_ BitVec 64))
(declare-fun temp1022_112 () (_ BitVec 64))
(declare-fun temp1022_113 () (_ BitVec 64))
(declare-fun temp1022_114 () (_ BitVec 64))
(declare-fun temp1022_115 () (_ BitVec 64))
(declare-fun temp1022_116 () (_ BitVec 64))
(declare-fun temp1022_117 () (_ BitVec 64))
(declare-fun temp1022_118 () (_ BitVec 64))
(declare-fun temp1022_119 () (_ BitVec 64))
(declare-fun temp1022_120 () (_ BitVec 64))
(declare-fun temp1022_121 () (_ BitVec 64))
(declare-fun temp1022_122 () (_ BitVec 64))
(declare-fun temp1022_123 () (_ BitVec 64))
(declare-fun temp1022_124 () (_ BitVec 64))
(declare-fun temp1022_125 () (_ BitVec 64))
(declare-fun temp1022_126 () (_ BitVec 64))
(declare-fun temp1022_127 () (_ BitVec 64))
(declare-fun temp1022_128 () (_ BitVec 64))
(declare-fun temp1022_129 () (_ BitVec 64))
(declare-fun temp1022_130 () (_ BitVec 64))
(declare-fun temp1022_131 () (_ BitVec 64))
(declare-fun temp1022_132 () (_ BitVec 64))
(declare-fun temp1022_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1022_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1022_135 () (_ BitVec 64))
(declare-fun temp1022_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1022_137 () (_ BitVec 64))
(declare-fun temp1022_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1022_139 () (_ BitVec 64))
(declare-fun temp1022_140 () (_ BitVec 64))
(declare-fun temp1022_141 () (_ BitVec 64))
(declare-fun temp1022_142 () (_ BitVec 64))
(declare-fun temp1022_143 () (_ BitVec 64))
(declare-fun temp1022_144 () (_ BitVec 64))
(declare-fun temp1022_145 () (_ BitVec 64))
(declare-fun temp1022_146 () (_ BitVec 64))
(declare-fun temp1022_147 () (_ BitVec 64))
(declare-fun temp1022_148 () (_ BitVec 64))
(declare-fun temp1022_149 () (_ BitVec 64))
(declare-fun temp1022_150 () (_ BitVec 64))
(declare-fun temp1022_151 () (_ BitVec 64))
(declare-fun temp1022_152 () (_ BitVec 64))
(declare-fun temp1022_153 () (_ BitVec 64))
(declare-fun temp1022_154 () (_ BitVec 64))
(declare-fun temp1022_156 () (_ BitVec 64))
(declare-fun temp1022_157 () (_ BitVec 64))
(declare-fun temp1022_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1022_158 () (_ BitVec 64))
(declare-fun temp1022_159 () (_ BitVec 64))
(declare-fun temp1022_161 () (_ BitVec 64))
(declare-fun temp1022_162 () (_ BitVec 64))
(declare-fun temp1022_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1022_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1022_164 () (_ BitVec 64))
(declare-fun temp1022_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1022_166 () (_ BitVec 64))
(declare-fun temp1022_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1022_168 () (_ BitVec 64))
(declare-fun temp1022_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1022_170 () (_ BitVec 64))
(declare-fun temp1022_171 () (_ BitVec 64))
(declare-fun temp1022_172 () (_ BitVec 64))
(declare-fun temp1022_173 () (_ BitVec 64))
(declare-fun temp1022_174 () (_ BitVec 64))
(declare-fun temp1022_175 () (_ BitVec 64))
(declare-fun temp1022_176 () (_ BitVec 64))
(declare-fun temp1022_177 () (_ BitVec 64))
(declare-fun temp1022_178 () (_ BitVec 64))
(declare-fun temp1022_179 () (_ BitVec 64))
(declare-fun temp1022_180 () (_ BitVec 64))
(declare-fun temp1022_181 () (_ BitVec 64))
(declare-fun temp1022_182 () (_ BitVec 64))
(declare-fun temp1022_183 () (_ BitVec 64))
(declare-fun temp1022_184 () (_ BitVec 64))
(declare-fun temp1022_185 () (_ BitVec 64))
(declare-fun temp1022_186 () (_ BitVec 64))
(declare-fun temp1022_187 () (_ BitVec 64))
(declare-fun temp1022_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1022_189 () (_ BitVec 64))
(declare-fun temp1022_191 () (_ BitVec 64))
(declare-fun temp1022_192 () (_ BitVec 64))
(declare-fun temp1022_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1022_193 () (_ BitVec 64))
(declare-fun temp1022_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1022_195 () (_ BitVec 64))
(declare-fun temp1022_196 () (_ BitVec 64))
(declare-fun temp1022_197 () (_ BitVec 64))
(declare-fun temp1022_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1022_199 () (_ BitVec 64))
(declare-fun temp1022_200 () (_ BitVec 64))
(declare-fun temp1022_201 () (_ BitVec 64))
(declare-fun temp1022_202 () (_ BitVec 64))
(declare-fun temp1022_203 () (_ BitVec 64))
(declare-fun temp1022_204 () (_ BitVec 64))
(declare-fun temp1022_205 () (_ BitVec 64))
(declare-fun temp1022_206 () (_ BitVec 64))
(declare-fun temp1022_207 () (_ BitVec 64))
(declare-fun temp1022_208 () (_ BitVec 64))
(declare-fun temp1022_209 () (_ BitVec 64))
(declare-fun temp1022_210 () (_ BitVec 64))
(declare-fun temp1022_211 () (_ BitVec 64))
(declare-fun temp1022_212 () (_ BitVec 64))
(declare-fun temp1022_213 () (_ BitVec 64))
(declare-fun temp1022_214 () (_ BitVec 64))
(declare-fun temp1022_215 () (_ BitVec 64))
(declare-fun temp1022_216 () (_ BitVec 64))
(declare-fun temp1022_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1022_218 () (_ BitVec 64))
(declare-fun temp1022_220 () (_ BitVec 64))
(declare-fun temp1022_221 () (_ BitVec 64))
(declare-fun temp1022_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1022_222 () (_ BitVec 64))
(declare-fun temp1022_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1022_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1022_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1022_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1022_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1022_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1022_229 () (_ BitVec 64))
(declare-fun temp1022_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1022_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1022_232 () (_ BitVec 64))
(declare-fun temp1022_233 () (_ BitVec 64))
(declare-fun temp1022_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1022_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1022_236 () (_ BitVec 64))
(declare-fun temp1022_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1022_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1022_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1022_240 () (_ BitVec 64))
(assert (= temp1022_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1022_1)))
(assert (= temp1022_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1022_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_3 #x0000000000000000))
(assert (= var79869 temp1022_3))
(assert (= temp1022_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1022_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_5 #x0000000000000000))
(assert (= var79914 temp1022_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1022_6 #x0000000000000000))
(assert (= temp1022_7 temp1022_6))
(assert (= temp1022_8 (select ARGNAME_padding_NAMEEND_VAL temp1022_7)))
(assert (= temp1022_9 #x0000000000000001))
(assert (= temp1022_10 temp1022_9))
(assert (= temp1022_11 (select ARGNAME_padding_NAMEEND_VAL temp1022_10)))
(assert (= temp1022_12 #x0000000000000002))
(assert (= temp1022_13 temp1022_12))
(assert (= temp1022_14 (select ARGNAME_padding_NAMEEND_VAL temp1022_13)))
(assert (= temp1022_15 #x0000000000000003))
(assert (= temp1022_16 temp1022_15))
(assert (= temp1022_17 (select ARGNAME_padding_NAMEEND_VAL temp1022_16)))
(assert (= temp1022_18 #x0000000000000004))
(assert (= temp1022_19 temp1022_18))
(assert (= temp1022_20 (select ARGNAME_padding_NAMEEND_VAL temp1022_19)))
(assert (= temp1022_21 #x0000000000000005))
(assert (= temp1022_22 temp1022_21))
(assert (= temp1022_23 (select ARGNAME_padding_NAMEEND_VAL temp1022_22)))
(assert (= temp1022_24 #x0000000000000000))
(assert (= temp1022_25 #x0000000000000000))
(assert (= temp1022_26 temp1022_25))
(assert (= temp1022_27 (select ARGNAME_padding_NAMEEND_VAL temp1022_26)))
(assert (= temp1022_28 #x0000000000000000))
(assert (= temp1022_29 #x0000000000000001))
(assert (= temp1022_30 temp1022_29))
(assert (= temp1022_31 (select ARGNAME_padding_NAMEEND_VAL temp1022_30)))
(assert (= temp1022_32 #x0000000000000000))
(assert (= temp1022_33 #x0000000000000002))
(assert (= temp1022_34 temp1022_33))
(assert (= temp1022_35 (select ARGNAME_padding_NAMEEND_VAL temp1022_34)))
(assert (= temp1022_36 #x0000000000000000))
(assert (= temp1022_37 #x0000000000000003))
(assert (= temp1022_38 temp1022_37))
(assert (= temp1022_39 (select ARGNAME_padding_NAMEEND_VAL temp1022_38)))
(assert (= temp1022_40 #x0000000000000000))
(assert (= temp1022_41 #x0000000000000004))
(assert (= temp1022_42 temp1022_41))
(assert (= temp1022_43 (select ARGNAME_padding_NAMEEND_VAL temp1022_42)))
(assert (= temp1022_44 #x0000000000000000))
(assert (= temp1022_45 #x0000000000000005))
(assert (= temp1022_46 temp1022_45))
(assert (= temp1022_47 (select ARGNAME_padding_NAMEEND_VAL temp1022_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1022_27 temp1022_24)
             (bvslt temp1022_31 temp1022_28)
             (bvslt temp1022_35 temp1022_32)
             (bvslt temp1022_39 temp1022_36)
             (bvslt temp1022_43 temp1022_40)
             (bvslt temp1022_47 temp1022_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_48 #x0000000000000000))
(assert (= var1322786 temp1022_48))
(assert (= temp1022_49 #x0000000000000000))
(assert (= temp1022_50 temp1022_49))
(assert (= temp1022_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_50)))
(assert (= temp1022_52 #x0000000000000001))
(assert (= temp1022_53 temp1022_52))
(assert (= temp1022_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_53)))
(assert (= temp1022_55 #x0000000000000002))
(assert (= temp1022_56 temp1022_55))
(assert (= temp1022_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_56)))
(assert (= temp1022_58 #x0000000000000003))
(assert (= temp1022_59 temp1022_58))
(assert (= temp1022_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_59)))
(assert (= temp1022_61 #x0000000000000004))
(assert (= temp1022_62 temp1022_61))
(assert (= temp1022_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_62)))
(assert (= temp1022_64 #x0000000000000005))
(assert (= temp1022_65 temp1022_64))
(assert (= temp1022_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_65)))
(assert (= temp1022_67 #x0000000000000000))
(assert (= temp1022_68 #x0000000000000000))
(assert (= temp1022_69 temp1022_68))
(assert (= temp1022_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_69)))
(assert (= temp1022_71 #x0000000000000000))
(assert (= temp1022_72 #x0000000000000001))
(assert (= temp1022_73 temp1022_72))
(assert (= temp1022_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_73)))
(assert (= temp1022_75 #x0000000000000000))
(assert (= temp1022_76 #x0000000000000002))
(assert (= temp1022_77 temp1022_76))
(assert (= temp1022_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_77)))
(assert (= temp1022_79 #x0000000000000000))
(assert (= temp1022_80 #x0000000000000003))
(assert (= temp1022_81 temp1022_80))
(assert (= temp1022_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_81)))
(assert (= temp1022_83 #x0000000000000000))
(assert (= temp1022_84 #x0000000000000004))
(assert (= temp1022_85 temp1022_84))
(assert (= temp1022_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_85)))
(assert (= temp1022_87 #x0000000000000000))
(assert (= temp1022_88 #x0000000000000005))
(assert (= temp1022_89 temp1022_88))
(assert (= temp1022_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1022_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1022_70 temp1022_67)
             (bvslt temp1022_74 temp1022_71)
             (bvslt temp1022_78 temp1022_75)
             (bvslt temp1022_82 temp1022_79)
             (bvslt temp1022_86 temp1022_83)
             (bvslt temp1022_90 temp1022_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_91 #x0000000000000000))
(assert (= var1322797 temp1022_91))
(assert (= temp1022_92 #x0000000000000000))
(assert (= temp1022_93 temp1022_92))
(assert (= temp1022_94 (select ARGNAME_stride_NAMEEND_VAL temp1022_93)))
(assert (= temp1022_95 #x0000000000000001))
(assert (= temp1022_96 temp1022_95))
(assert (= temp1022_97 (select ARGNAME_stride_NAMEEND_VAL temp1022_96)))
(assert (= temp1022_98 #x0000000000000002))
(assert (= temp1022_99 temp1022_98))
(assert (= temp1022_100 (select ARGNAME_stride_NAMEEND_VAL temp1022_99)))
(assert (= temp1022_101 #x0000000000000003))
(assert (= temp1022_102 temp1022_101))
(assert (= temp1022_103 (select ARGNAME_stride_NAMEEND_VAL temp1022_102)))
(assert (= temp1022_104 #x0000000000000004))
(assert (= temp1022_105 temp1022_104))
(assert (= temp1022_106 (select ARGNAME_stride_NAMEEND_VAL temp1022_105)))
(assert (= temp1022_107 #x0000000000000005))
(assert (= temp1022_108 temp1022_107))
(assert (= temp1022_109 (select ARGNAME_stride_NAMEEND_VAL temp1022_108)))
(assert (= temp1022_110 #x0000000000000000))
(assert (= temp1022_111 #x0000000000000000))
(assert (= temp1022_112 temp1022_111))
(assert (= temp1022_113 (select ARGNAME_stride_NAMEEND_VAL temp1022_112)))
(assert (= temp1022_114 #x0000000000000000))
(assert (= temp1022_115 #x0000000000000001))
(assert (= temp1022_116 temp1022_115))
(assert (= temp1022_117 (select ARGNAME_stride_NAMEEND_VAL temp1022_116)))
(assert (= temp1022_118 #x0000000000000000))
(assert (= temp1022_119 #x0000000000000002))
(assert (= temp1022_120 temp1022_119))
(assert (= temp1022_121 (select ARGNAME_stride_NAMEEND_VAL temp1022_120)))
(assert (= temp1022_122 #x0000000000000000))
(assert (= temp1022_123 #x0000000000000003))
(assert (= temp1022_124 temp1022_123))
(assert (= temp1022_125 (select ARGNAME_stride_NAMEEND_VAL temp1022_124)))
(assert (= temp1022_126 #x0000000000000000))
(assert (= temp1022_127 #x0000000000000004))
(assert (= temp1022_128 temp1022_127))
(assert (= temp1022_129 (select ARGNAME_stride_NAMEEND_VAL temp1022_128)))
(assert (= temp1022_130 #x0000000000000000))
(assert (= temp1022_131 #x0000000000000005))
(assert (= temp1022_132 temp1022_131))
(assert (= temp1022_133 (select ARGNAME_stride_NAMEEND_VAL temp1022_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1022_113 temp1022_110)
             (bvsle temp1022_117 temp1022_114)
             (bvsle temp1022_121 temp1022_118)
             (bvsle temp1022_125 temp1022_122)
             (bvsle temp1022_129 temp1022_126)
             (bvsle temp1022_133 temp1022_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_134 #x0000000000000000))
(assert (= var1322807 temp1022_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_135 #x0000000000000001))
(assert (= var1322819 temp1022_135))
(assert (= temp1022_136 #x0000000000000000))
(assert (= var1310898 temp1022_136))
(assert (= temp1022_137 #x0000000000000000))
(assert (= temp1022_138 temp1022_137))
(assert (= temp1022_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_138)))
(assert (= temp1022_140 #x0000000000000001))
(assert (= temp1022_141 temp1022_140))
(assert (= temp1022_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_141)))
(assert (= temp1022_143 #x0000000000000002))
(assert (= temp1022_144 temp1022_143))
(assert (= temp1022_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_144)))
(assert (= temp1022_146 #x0000000000000003))
(assert (= temp1022_147 temp1022_146))
(assert (= temp1022_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_147)))
(assert (= temp1022_149 #x0000000000000004))
(assert (= temp1022_150 temp1022_149))
(assert (= temp1022_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_150)))
(assert (= temp1022_152 #x0000000000000005))
(assert (= temp1022_153 temp1022_152))
(assert (= temp1022_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_153)))
(assert (= temp1022_156 var1310898))
(assert (= temp1022_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_156)))
(assert (= temp1022_155 temp1022_157))
(assert (= var1322852
   (ite (bvslt temp1022_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_158 #x0000000000000000))
(assert (= var1322852 temp1022_158))
(assert (= temp1022_159 #x0000000000000000))
(assert (= var1310898 temp1022_159))
(assert (= temp1022_161 var1310898))
(assert (= temp1022_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_161)))
(assert (= temp1022_160 temp1022_162))
(assert (= var1322874 (bvsmod temp1022_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1022_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1022_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1022_164 #x0000000000000001))
(assert (= var1322875 temp1022_164))
(assert (= temp1022_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1022_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_166 #x0000000000000001))
(assert (= var1322895 temp1022_166))
(assert (= temp1022_167 #x0000000000000001))
(assert (= var1311786 temp1022_167))
(assert (= temp1022_168 #x0000000000000000))
(assert (= temp1022_169 temp1022_168))
(assert (= temp1022_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1022_169)))
(assert (= temp1022_171 #x0000000000000001))
(assert (= temp1022_172 temp1022_171))
(assert (= temp1022_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1022_172)))
(assert (= temp1022_174 #x0000000000000002))
(assert (= temp1022_175 temp1022_174))
(assert (= temp1022_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1022_175)))
(assert (= temp1022_177 #x0000000000000003))
(assert (= temp1022_178 temp1022_177))
(assert (= temp1022_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1022_178)))
(assert (= temp1022_180 #x0000000000000004))
(assert (= temp1022_181 temp1022_180))
(assert (= temp1022_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1022_181)))
(assert (= temp1022_183 #x0000000000000005))
(assert (= temp1022_184 temp1022_183))
(assert (= temp1022_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1022_184)))
(assert (= temp1022_186 #x0000000000000000))
(assert (= temp1022_187
   (ite (bvslt var1311786 temp1022_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1022_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1022_187)))
(assert (= var1322903 temp1022_188))
(assert (bvslt (ite (bvslt var1311786 temp1022_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1022_189 #x0000000000000001))
(assert (= var1311786 temp1022_189))
(assert (= temp1022_191 var1311786))
(assert (= temp1022_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_191)))
(assert (= temp1022_190 temp1022_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1022_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1022_193 #x0000000000000001))
(assert (= var1322908 temp1022_193))
(assert (= temp1022_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1022_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_195 #x0000000000000001))
(assert (= var1322975 temp1022_195))
(assert (= temp1022_196 #x0000000000000000))
(assert (= var1310898 temp1022_196))
(assert (= temp1022_197 #x0000000000000000))
(assert (= temp1022_198 temp1022_197))
(assert (= temp1022_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1022_198)))
(assert (= temp1022_200 #x0000000000000001))
(assert (= temp1022_201 temp1022_200))
(assert (= temp1022_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1022_201)))
(assert (= temp1022_203 #x0000000000000002))
(assert (= temp1022_204 temp1022_203))
(assert (= temp1022_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1022_204)))
(assert (= temp1022_206 #x0000000000000003))
(assert (= temp1022_207 temp1022_206))
(assert (= temp1022_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1022_207)))
(assert (= temp1022_209 #x0000000000000004))
(assert (= temp1022_210 temp1022_209))
(assert (= temp1022_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1022_210)))
(assert (= temp1022_212 #x0000000000000005))
(assert (= temp1022_213 temp1022_212))
(assert (= temp1022_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1022_213)))
(assert (= temp1022_215 #x0000000000000000))
(assert (= temp1022_216
   (ite (bvslt var1310898 temp1022_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1022_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1022_216)))
(assert (= var1322977 temp1022_217))
(assert (bvslt (ite (bvslt var1310898 temp1022_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1022_218 #x0000000000000000))
(assert (= var1310898 temp1022_218))
(assert (= temp1022_220 var1310898))
(assert (= temp1022_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1022_220)))
(assert (= temp1022_219 temp1022_221))
(assert (= var1322980
   (ite (= var1322977 temp1022_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1022_222 #x0000000000000001))
(assert (= var1322980 temp1022_222))
(assert (= temp1022_223 #x0000000000000002))
(assert (= var1848169 temp1022_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1022_225 #x0000000000000001))
(assert (= var1323065 temp1022_225))
(assert (= temp1022_226 #x0000000000000001))
(assert (= var3486735 temp1022_226))
(assert (= temp1022_227 #x0000000000000001))
(assert (= var3814415 temp1022_227))
(assert (= temp1022_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1022_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_229 #x0000000000000001))
(assert (= var79986 temp1022_229))
(assert (= temp1022_230 #x0000000000000001))
(assert (= var80116 temp1022_230))
(assert (= var4796905 var80116))
(assert (= temp1022_231 #x0000000000000000))
(assert (= var4784306 temp1022_231))
(assert (= temp1022_232 #x0000000000000000))
(assert (= temp1022_233
   (ite (bvslt var4784306 temp1022_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1022_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1022_233)))
(assert (= var4796924 temp1022_234))
(assert (bvslt (ite (bvslt var4784306 temp1022_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1022_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1022_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1022_236 #x0000000000000001))
(assert (= var4796925 temp1022_236))
(assert (= temp1022_237 #x0000000000000000))
(assert (= var4996927 temp1022_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1022_238 #x0000000000000002))
(assert (= var5125763 temp1022_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_239 #x0000000000000000))
(assert (= var5191324 temp1022_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1022_240 #x0000000000000001))
(assert (= var79986 temp1022_240))
(model-add temp1022_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1022_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1022_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






