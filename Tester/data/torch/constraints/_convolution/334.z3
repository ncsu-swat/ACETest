(declare-fun temp444_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp444_2 () (_ BitVec 64))
(declare-fun temp444_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp444_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp444_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp444_6 () (_ BitVec 64))
(declare-fun temp444_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_8 () (_ BitVec 64))
(declare-fun temp444_9 () (_ BitVec 64))
(declare-fun temp444_10 () (_ BitVec 64))
(declare-fun temp444_11 () (_ BitVec 64))
(declare-fun temp444_12 () (_ BitVec 64))
(declare-fun temp444_13 () (_ BitVec 64))
(declare-fun temp444_14 () (_ BitVec 64))
(declare-fun temp444_15 () (_ BitVec 64))
(declare-fun temp444_16 () (_ BitVec 64))
(declare-fun temp444_17 () (_ BitVec 64))
(declare-fun temp444_18 () (_ BitVec 64))
(declare-fun temp444_19 () (_ BitVec 64))
(declare-fun temp444_20 () (_ BitVec 64))
(declare-fun temp444_21 () (_ BitVec 64))
(declare-fun temp444_22 () (_ BitVec 64))
(declare-fun temp444_23 () (_ BitVec 64))
(declare-fun temp444_24 () (_ BitVec 64))
(declare-fun temp444_25 () (_ BitVec 64))
(declare-fun temp444_26 () (_ BitVec 64))
(declare-fun temp444_27 () (_ BitVec 64))
(declare-fun temp444_28 () (_ BitVec 64))
(declare-fun temp444_29 () (_ BitVec 64))
(declare-fun temp444_30 () (_ BitVec 64))
(declare-fun temp444_31 () (_ BitVec 64))
(declare-fun temp444_32 () (_ BitVec 64))
(declare-fun temp444_33 () (_ BitVec 64))
(declare-fun temp444_34 () (_ BitVec 64))
(declare-fun temp444_35 () (_ BitVec 64))
(declare-fun temp444_36 () (_ BitVec 64))
(declare-fun temp444_37 () (_ BitVec 64))
(declare-fun temp444_38 () (_ BitVec 64))
(declare-fun temp444_39 () (_ BitVec 64))
(declare-fun temp444_40 () (_ BitVec 64))
(declare-fun temp444_41 () (_ BitVec 64))
(declare-fun temp444_42 () (_ BitVec 64))
(declare-fun temp444_43 () (_ BitVec 64))
(declare-fun temp444_44 () (_ BitVec 64))
(declare-fun temp444_45 () (_ BitVec 64))
(declare-fun temp444_46 () (_ BitVec 64))
(declare-fun temp444_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp444_48 () (_ BitVec 64))
(declare-fun temp444_49 () (_ BitVec 64))
(declare-fun temp444_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_51 () (_ BitVec 64))
(declare-fun temp444_52 () (_ BitVec 64))
(declare-fun temp444_53 () (_ BitVec 64))
(declare-fun temp444_54 () (_ BitVec 64))
(declare-fun temp444_55 () (_ BitVec 64))
(declare-fun temp444_56 () (_ BitVec 64))
(declare-fun temp444_57 () (_ BitVec 64))
(declare-fun temp444_58 () (_ BitVec 64))
(declare-fun temp444_59 () (_ BitVec 64))
(declare-fun temp444_60 () (_ BitVec 64))
(declare-fun temp444_61 () (_ BitVec 64))
(declare-fun temp444_62 () (_ BitVec 64))
(declare-fun temp444_63 () (_ BitVec 64))
(declare-fun temp444_64 () (_ BitVec 64))
(declare-fun temp444_65 () (_ BitVec 64))
(declare-fun temp444_66 () (_ BitVec 64))
(declare-fun temp444_67 () (_ BitVec 64))
(declare-fun temp444_68 () (_ BitVec 64))
(declare-fun temp444_69 () (_ BitVec 64))
(declare-fun temp444_70 () (_ BitVec 64))
(declare-fun temp444_71 () (_ BitVec 64))
(declare-fun temp444_72 () (_ BitVec 64))
(declare-fun temp444_73 () (_ BitVec 64))
(declare-fun temp444_74 () (_ BitVec 64))
(declare-fun temp444_75 () (_ BitVec 64))
(declare-fun temp444_76 () (_ BitVec 64))
(declare-fun temp444_77 () (_ BitVec 64))
(declare-fun temp444_78 () (_ BitVec 64))
(declare-fun temp444_79 () (_ BitVec 64))
(declare-fun temp444_80 () (_ BitVec 64))
(declare-fun temp444_81 () (_ BitVec 64))
(declare-fun temp444_82 () (_ BitVec 64))
(declare-fun temp444_83 () (_ BitVec 64))
(declare-fun temp444_84 () (_ BitVec 64))
(declare-fun temp444_85 () (_ BitVec 64))
(declare-fun temp444_86 () (_ BitVec 64))
(declare-fun temp444_87 () (_ BitVec 64))
(declare-fun temp444_88 () (_ BitVec 64))
(declare-fun temp444_89 () (_ BitVec 64))
(declare-fun temp444_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp444_91 () (_ BitVec 64))
(declare-fun temp444_92 () (_ BitVec 64))
(declare-fun temp444_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_94 () (_ BitVec 64))
(declare-fun temp444_95 () (_ BitVec 64))
(declare-fun temp444_96 () (_ BitVec 64))
(declare-fun temp444_97 () (_ BitVec 64))
(declare-fun temp444_98 () (_ BitVec 64))
(declare-fun temp444_99 () (_ BitVec 64))
(declare-fun temp444_100 () (_ BitVec 64))
(declare-fun temp444_101 () (_ BitVec 64))
(declare-fun temp444_102 () (_ BitVec 64))
(declare-fun temp444_103 () (_ BitVec 64))
(declare-fun temp444_104 () (_ BitVec 64))
(declare-fun temp444_105 () (_ BitVec 64))
(declare-fun temp444_106 () (_ BitVec 64))
(declare-fun temp444_107 () (_ BitVec 64))
(declare-fun temp444_108 () (_ BitVec 64))
(declare-fun temp444_109 () (_ BitVec 64))
(declare-fun temp444_110 () (_ BitVec 64))
(declare-fun temp444_111 () (_ BitVec 64))
(declare-fun temp444_112 () (_ BitVec 64))
(declare-fun temp444_113 () (_ BitVec 64))
(declare-fun temp444_114 () (_ BitVec 64))
(declare-fun temp444_115 () (_ BitVec 64))
(declare-fun temp444_116 () (_ BitVec 64))
(declare-fun temp444_117 () (_ BitVec 64))
(declare-fun temp444_118 () (_ BitVec 64))
(declare-fun temp444_119 () (_ BitVec 64))
(declare-fun temp444_120 () (_ BitVec 64))
(declare-fun temp444_121 () (_ BitVec 64))
(declare-fun temp444_122 () (_ BitVec 64))
(declare-fun temp444_123 () (_ BitVec 64))
(declare-fun temp444_124 () (_ BitVec 64))
(declare-fun temp444_125 () (_ BitVec 64))
(declare-fun temp444_126 () (_ BitVec 64))
(declare-fun temp444_127 () (_ BitVec 64))
(declare-fun temp444_128 () (_ BitVec 64))
(declare-fun temp444_129 () (_ BitVec 64))
(declare-fun temp444_130 () (_ BitVec 64))
(declare-fun temp444_131 () (_ BitVec 64))
(declare-fun temp444_132 () (_ BitVec 64))
(declare-fun temp444_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp444_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp444_135 () (_ BitVec 64))
(declare-fun temp444_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp444_137 () (_ BitVec 64))
(declare-fun temp444_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_139 () (_ BitVec 64))
(declare-fun temp444_140 () (_ BitVec 64))
(declare-fun temp444_141 () (_ BitVec 64))
(declare-fun temp444_142 () (_ BitVec 64))
(declare-fun temp444_143 () (_ BitVec 64))
(declare-fun temp444_144 () (_ BitVec 64))
(declare-fun temp444_145 () (_ BitVec 64))
(declare-fun temp444_146 () (_ BitVec 64))
(declare-fun temp444_147 () (_ BitVec 64))
(declare-fun temp444_148 () (_ BitVec 64))
(declare-fun temp444_149 () (_ BitVec 64))
(declare-fun temp444_150 () (_ BitVec 64))
(declare-fun temp444_151 () (_ BitVec 64))
(declare-fun temp444_152 () (_ BitVec 64))
(declare-fun temp444_153 () (_ BitVec 64))
(declare-fun temp444_154 () (_ BitVec 64))
(declare-fun temp444_156 () (_ BitVec 64))
(declare-fun temp444_157 () (_ BitVec 64))
(declare-fun temp444_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp444_158 () (_ BitVec 64))
(declare-fun temp444_159 () (_ BitVec 64))
(declare-fun temp444_161 () (_ BitVec 64))
(declare-fun temp444_162 () (_ BitVec 64))
(declare-fun temp444_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp444_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp444_164 () (_ BitVec 64))
(declare-fun temp444_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp444_166 () (_ BitVec 64))
(declare-fun temp444_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp444_168 () (_ BitVec 64))
(declare-fun temp444_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_170 () (_ BitVec 64))
(declare-fun temp444_171 () (_ BitVec 64))
(declare-fun temp444_172 () (_ BitVec 64))
(declare-fun temp444_173 () (_ BitVec 64))
(declare-fun temp444_174 () (_ BitVec 64))
(declare-fun temp444_175 () (_ BitVec 64))
(declare-fun temp444_176 () (_ BitVec 64))
(declare-fun temp444_177 () (_ BitVec 64))
(declare-fun temp444_178 () (_ BitVec 64))
(declare-fun temp444_179 () (_ BitVec 64))
(declare-fun temp444_180 () (_ BitVec 64))
(declare-fun temp444_181 () (_ BitVec 64))
(declare-fun temp444_182 () (_ BitVec 64))
(declare-fun temp444_183 () (_ BitVec 64))
(declare-fun temp444_184 () (_ BitVec 64))
(declare-fun temp444_185 () (_ BitVec 64))
(declare-fun temp444_186 () (_ BitVec 64))
(declare-fun temp444_187 () (_ BitVec 64))
(declare-fun temp444_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp444_189 () (_ BitVec 64))
(declare-fun temp444_191 () (_ BitVec 64))
(declare-fun temp444_192 () (_ BitVec 64))
(declare-fun temp444_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp444_193 () (_ BitVec 64))
(declare-fun temp444_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp444_195 () (_ BitVec 64))
(declare-fun temp444_196 () (_ BitVec 64))
(declare-fun temp444_197 () (_ BitVec 64))
(declare-fun temp444_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_199 () (_ BitVec 64))
(declare-fun temp444_200 () (_ BitVec 64))
(declare-fun temp444_201 () (_ BitVec 64))
(declare-fun temp444_202 () (_ BitVec 64))
(declare-fun temp444_203 () (_ BitVec 64))
(declare-fun temp444_204 () (_ BitVec 64))
(declare-fun temp444_205 () (_ BitVec 64))
(declare-fun temp444_206 () (_ BitVec 64))
(declare-fun temp444_207 () (_ BitVec 64))
(declare-fun temp444_208 () (_ BitVec 64))
(declare-fun temp444_209 () (_ BitVec 64))
(declare-fun temp444_210 () (_ BitVec 64))
(declare-fun temp444_211 () (_ BitVec 64))
(declare-fun temp444_212 () (_ BitVec 64))
(declare-fun temp444_213 () (_ BitVec 64))
(declare-fun temp444_214 () (_ BitVec 64))
(declare-fun temp444_215 () (_ BitVec 64))
(declare-fun temp444_216 () (_ BitVec 64))
(declare-fun temp444_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp444_218 () (_ BitVec 64))
(declare-fun temp444_220 () (_ BitVec 64))
(declare-fun temp444_221 () (_ BitVec 64))
(declare-fun temp444_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp444_222 () (_ BitVec 64))
(declare-fun temp444_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp444_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp444_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp444_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp444_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp444_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp444_229 () (_ BitVec 64))
(declare-fun temp444_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp444_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp444_232 () (_ BitVec 64))
(declare-fun temp444_233 () (_ BitVec 64))
(declare-fun temp444_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp444_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp444_236 () (_ BitVec 64))
(declare-fun temp444_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp444_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp444_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun var6107536 () (_ BitVec 64))
(declare-fun temp444_240 () (_ BitVec 64))
(assert (= temp444_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp444_1)))
(assert (= temp444_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp444_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_3 #x0000000000000000))
(assert (= var79869 temp444_3))
(assert (= temp444_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp444_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_5 #x0000000000000000))
(assert (= var79914 temp444_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp444_6 #x0000000000000000))
(assert (= temp444_7 temp444_6))
(assert (= temp444_8 (select ARGNAME_padding_NAMEEND_VAL temp444_7)))
(assert (= temp444_9 #x0000000000000001))
(assert (= temp444_10 temp444_9))
(assert (= temp444_11 (select ARGNAME_padding_NAMEEND_VAL temp444_10)))
(assert (= temp444_12 #x0000000000000002))
(assert (= temp444_13 temp444_12))
(assert (= temp444_14 (select ARGNAME_padding_NAMEEND_VAL temp444_13)))
(assert (= temp444_15 #x0000000000000003))
(assert (= temp444_16 temp444_15))
(assert (= temp444_17 (select ARGNAME_padding_NAMEEND_VAL temp444_16)))
(assert (= temp444_18 #x0000000000000004))
(assert (= temp444_19 temp444_18))
(assert (= temp444_20 (select ARGNAME_padding_NAMEEND_VAL temp444_19)))
(assert (= temp444_21 #x0000000000000005))
(assert (= temp444_22 temp444_21))
(assert (= temp444_23 (select ARGNAME_padding_NAMEEND_VAL temp444_22)))
(assert (= temp444_24 #x0000000000000000))
(assert (= temp444_25 #x0000000000000000))
(assert (= temp444_26 temp444_25))
(assert (= temp444_27 (select ARGNAME_padding_NAMEEND_VAL temp444_26)))
(assert (= temp444_28 #x0000000000000000))
(assert (= temp444_29 #x0000000000000001))
(assert (= temp444_30 temp444_29))
(assert (= temp444_31 (select ARGNAME_padding_NAMEEND_VAL temp444_30)))
(assert (= temp444_32 #x0000000000000000))
(assert (= temp444_33 #x0000000000000002))
(assert (= temp444_34 temp444_33))
(assert (= temp444_35 (select ARGNAME_padding_NAMEEND_VAL temp444_34)))
(assert (= temp444_36 #x0000000000000000))
(assert (= temp444_37 #x0000000000000003))
(assert (= temp444_38 temp444_37))
(assert (= temp444_39 (select ARGNAME_padding_NAMEEND_VAL temp444_38)))
(assert (= temp444_40 #x0000000000000000))
(assert (= temp444_41 #x0000000000000004))
(assert (= temp444_42 temp444_41))
(assert (= temp444_43 (select ARGNAME_padding_NAMEEND_VAL temp444_42)))
(assert (= temp444_44 #x0000000000000000))
(assert (= temp444_45 #x0000000000000005))
(assert (= temp444_46 temp444_45))
(assert (= temp444_47 (select ARGNAME_padding_NAMEEND_VAL temp444_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp444_27 temp444_24)
             (bvslt temp444_31 temp444_28)
             (bvslt temp444_35 temp444_32)
             (bvslt temp444_39 temp444_36)
             (bvslt temp444_43 temp444_40)
             (bvslt temp444_47 temp444_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_48 #x0000000000000000))
(assert (= var1322786 temp444_48))
(assert (= temp444_49 #x0000000000000000))
(assert (= temp444_50 temp444_49))
(assert (= temp444_51 (select ARGNAME_output_padding_NAMEEND_VAL temp444_50)))
(assert (= temp444_52 #x0000000000000001))
(assert (= temp444_53 temp444_52))
(assert (= temp444_54 (select ARGNAME_output_padding_NAMEEND_VAL temp444_53)))
(assert (= temp444_55 #x0000000000000002))
(assert (= temp444_56 temp444_55))
(assert (= temp444_57 (select ARGNAME_output_padding_NAMEEND_VAL temp444_56)))
(assert (= temp444_58 #x0000000000000003))
(assert (= temp444_59 temp444_58))
(assert (= temp444_60 (select ARGNAME_output_padding_NAMEEND_VAL temp444_59)))
(assert (= temp444_61 #x0000000000000004))
(assert (= temp444_62 temp444_61))
(assert (= temp444_63 (select ARGNAME_output_padding_NAMEEND_VAL temp444_62)))
(assert (= temp444_64 #x0000000000000005))
(assert (= temp444_65 temp444_64))
(assert (= temp444_66 (select ARGNAME_output_padding_NAMEEND_VAL temp444_65)))
(assert (= temp444_67 #x0000000000000000))
(assert (= temp444_68 #x0000000000000000))
(assert (= temp444_69 temp444_68))
(assert (= temp444_70 (select ARGNAME_output_padding_NAMEEND_VAL temp444_69)))
(assert (= temp444_71 #x0000000000000000))
(assert (= temp444_72 #x0000000000000001))
(assert (= temp444_73 temp444_72))
(assert (= temp444_74 (select ARGNAME_output_padding_NAMEEND_VAL temp444_73)))
(assert (= temp444_75 #x0000000000000000))
(assert (= temp444_76 #x0000000000000002))
(assert (= temp444_77 temp444_76))
(assert (= temp444_78 (select ARGNAME_output_padding_NAMEEND_VAL temp444_77)))
(assert (= temp444_79 #x0000000000000000))
(assert (= temp444_80 #x0000000000000003))
(assert (= temp444_81 temp444_80))
(assert (= temp444_82 (select ARGNAME_output_padding_NAMEEND_VAL temp444_81)))
(assert (= temp444_83 #x0000000000000000))
(assert (= temp444_84 #x0000000000000004))
(assert (= temp444_85 temp444_84))
(assert (= temp444_86 (select ARGNAME_output_padding_NAMEEND_VAL temp444_85)))
(assert (= temp444_87 #x0000000000000000))
(assert (= temp444_88 #x0000000000000005))
(assert (= temp444_89 temp444_88))
(assert (= temp444_90 (select ARGNAME_output_padding_NAMEEND_VAL temp444_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp444_70 temp444_67)
             (bvslt temp444_74 temp444_71)
             (bvslt temp444_78 temp444_75)
             (bvslt temp444_82 temp444_79)
             (bvslt temp444_86 temp444_83)
             (bvslt temp444_90 temp444_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_91 #x0000000000000000))
(assert (= var1322797 temp444_91))
(assert (= temp444_92 #x0000000000000000))
(assert (= temp444_93 temp444_92))
(assert (= temp444_94 (select ARGNAME_stride_NAMEEND_VAL temp444_93)))
(assert (= temp444_95 #x0000000000000001))
(assert (= temp444_96 temp444_95))
(assert (= temp444_97 (select ARGNAME_stride_NAMEEND_VAL temp444_96)))
(assert (= temp444_98 #x0000000000000002))
(assert (= temp444_99 temp444_98))
(assert (= temp444_100 (select ARGNAME_stride_NAMEEND_VAL temp444_99)))
(assert (= temp444_101 #x0000000000000003))
(assert (= temp444_102 temp444_101))
(assert (= temp444_103 (select ARGNAME_stride_NAMEEND_VAL temp444_102)))
(assert (= temp444_104 #x0000000000000004))
(assert (= temp444_105 temp444_104))
(assert (= temp444_106 (select ARGNAME_stride_NAMEEND_VAL temp444_105)))
(assert (= temp444_107 #x0000000000000005))
(assert (= temp444_108 temp444_107))
(assert (= temp444_109 (select ARGNAME_stride_NAMEEND_VAL temp444_108)))
(assert (= temp444_110 #x0000000000000000))
(assert (= temp444_111 #x0000000000000000))
(assert (= temp444_112 temp444_111))
(assert (= temp444_113 (select ARGNAME_stride_NAMEEND_VAL temp444_112)))
(assert (= temp444_114 #x0000000000000000))
(assert (= temp444_115 #x0000000000000001))
(assert (= temp444_116 temp444_115))
(assert (= temp444_117 (select ARGNAME_stride_NAMEEND_VAL temp444_116)))
(assert (= temp444_118 #x0000000000000000))
(assert (= temp444_119 #x0000000000000002))
(assert (= temp444_120 temp444_119))
(assert (= temp444_121 (select ARGNAME_stride_NAMEEND_VAL temp444_120)))
(assert (= temp444_122 #x0000000000000000))
(assert (= temp444_123 #x0000000000000003))
(assert (= temp444_124 temp444_123))
(assert (= temp444_125 (select ARGNAME_stride_NAMEEND_VAL temp444_124)))
(assert (= temp444_126 #x0000000000000000))
(assert (= temp444_127 #x0000000000000004))
(assert (= temp444_128 temp444_127))
(assert (= temp444_129 (select ARGNAME_stride_NAMEEND_VAL temp444_128)))
(assert (= temp444_130 #x0000000000000000))
(assert (= temp444_131 #x0000000000000005))
(assert (= temp444_132 temp444_131))
(assert (= temp444_133 (select ARGNAME_stride_NAMEEND_VAL temp444_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp444_113 temp444_110)
             (bvsle temp444_117 temp444_114)
             (bvsle temp444_121 temp444_118)
             (bvsle temp444_125 temp444_122)
             (bvsle temp444_129 temp444_126)
             (bvsle temp444_133 temp444_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_134 #x0000000000000000))
(assert (= var1322807 temp444_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_135 #x0000000000000001))
(assert (= var1322819 temp444_135))
(assert (= temp444_136 #x0000000000000000))
(assert (= var1310898 temp444_136))
(assert (= temp444_137 #x0000000000000000))
(assert (= temp444_138 temp444_137))
(assert (= temp444_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_138)))
(assert (= temp444_140 #x0000000000000001))
(assert (= temp444_141 temp444_140))
(assert (= temp444_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_141)))
(assert (= temp444_143 #x0000000000000002))
(assert (= temp444_144 temp444_143))
(assert (= temp444_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_144)))
(assert (= temp444_146 #x0000000000000003))
(assert (= temp444_147 temp444_146))
(assert (= temp444_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_147)))
(assert (= temp444_149 #x0000000000000004))
(assert (= temp444_150 temp444_149))
(assert (= temp444_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_150)))
(assert (= temp444_152 #x0000000000000005))
(assert (= temp444_153 temp444_152))
(assert (= temp444_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_153)))
(assert (= temp444_156 var1310898))
(assert (= temp444_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_156)))
(assert (= temp444_155 temp444_157))
(assert (= var1322852
   (ite (bvslt temp444_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_158 #x0000000000000000))
(assert (= var1322852 temp444_158))
(assert (= temp444_159 #x0000000000000000))
(assert (= var1310898 temp444_159))
(assert (= temp444_161 var1310898))
(assert (= temp444_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_161)))
(assert (= temp444_160 temp444_162))
(assert (= var1322874 (bvsmod temp444_160 ARGNAME_groups_NAMEEND)))
(assert (= temp444_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp444_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_164 #x0000000000000001))
(assert (= var1322875 temp444_164))
(assert (= temp444_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp444_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_166 #x0000000000000001))
(assert (= var1322895 temp444_166))
(assert (= temp444_167 #x0000000000000001))
(assert (= var1311786 temp444_167))
(assert (= temp444_168 #x0000000000000000))
(assert (= temp444_169 temp444_168))
(assert (= temp444_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_169)))
(assert (= temp444_171 #x0000000000000001))
(assert (= temp444_172 temp444_171))
(assert (= temp444_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_172)))
(assert (= temp444_174 #x0000000000000002))
(assert (= temp444_175 temp444_174))
(assert (= temp444_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_175)))
(assert (= temp444_177 #x0000000000000003))
(assert (= temp444_178 temp444_177))
(assert (= temp444_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_178)))
(assert (= temp444_180 #x0000000000000004))
(assert (= temp444_181 temp444_180))
(assert (= temp444_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_181)))
(assert (= temp444_183 #x0000000000000005))
(assert (= temp444_184 temp444_183))
(assert (= temp444_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_184)))
(assert (= temp444_186 #x0000000000000000))
(assert (= temp444_187
   (ite (bvslt var1311786 temp444_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp444_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_187)))
(assert (= var1322903 temp444_188))
(assert (bvslt (ite (bvslt var1311786 temp444_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp444_189 #x0000000000000001))
(assert (= var1311786 temp444_189))
(assert (= temp444_191 var1311786))
(assert (= temp444_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_191)))
(assert (= temp444_190 temp444_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp444_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_193 #x0000000000000001))
(assert (= var1322908 temp444_193))
(assert (= temp444_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp444_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_195 #x0000000000000001))
(assert (= var1322975 temp444_195))
(assert (= temp444_196 #x0000000000000000))
(assert (= var1310898 temp444_196))
(assert (= temp444_197 #x0000000000000000))
(assert (= temp444_198 temp444_197))
(assert (= temp444_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp444_198)))
(assert (= temp444_200 #x0000000000000001))
(assert (= temp444_201 temp444_200))
(assert (= temp444_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp444_201)))
(assert (= temp444_203 #x0000000000000002))
(assert (= temp444_204 temp444_203))
(assert (= temp444_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp444_204)))
(assert (= temp444_206 #x0000000000000003))
(assert (= temp444_207 temp444_206))
(assert (= temp444_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp444_207)))
(assert (= temp444_209 #x0000000000000004))
(assert (= temp444_210 temp444_209))
(assert (= temp444_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp444_210)))
(assert (= temp444_212 #x0000000000000005))
(assert (= temp444_213 temp444_212))
(assert (= temp444_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp444_213)))
(assert (= temp444_215 #x0000000000000000))
(assert (= temp444_216
   (ite (bvslt var1310898 temp444_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp444_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp444_216)))
(assert (= var1322977 temp444_217))
(assert (bvslt (ite (bvslt var1310898 temp444_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp444_218 #x0000000000000000))
(assert (= var1310898 temp444_218))
(assert (= temp444_220 var1310898))
(assert (= temp444_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_220)))
(assert (= temp444_219 temp444_221))
(assert (= var1322980
   (ite (= var1322977 temp444_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_222 #x0000000000000001))
(assert (= var1322980 temp444_222))
(assert (= temp444_223 #x0000000000000002))
(assert (= var1848169 temp444_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp444_225 #x0000000000000001))
(assert (= var1323065 temp444_225))
(assert (= temp444_226 #x0000000000000001))
(assert (= var3486735 temp444_226))
(assert (= temp444_227 #x0000000000000001))
(assert (= var3814415 temp444_227))
(assert (= temp444_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp444_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_229 #x0000000000000001))
(assert (= var79986 temp444_229))
(assert (= temp444_230 #x0000000000000001))
(assert (= var80116 temp444_230))
(assert (= var4796905 var80116))
(assert (= temp444_231 #x0000000000000000))
(assert (= var4784306 temp444_231))
(assert (= temp444_232 #x0000000000000000))
(assert (= temp444_233
   (ite (bvslt var4784306 temp444_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp444_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_233)))
(assert (= var4796924 temp444_234))
(assert (bvslt (ite (bvslt var4784306 temp444_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp444_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp444_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_236 #x0000000000000001))
(assert (= var4796925 temp444_236))
(assert (= temp444_237 #x0000000000000000))
(assert (= var4996927 temp444_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp444_238 #x0000000000000002))
(assert (= var5125763 temp444_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_239 #x0000000000000000))
(assert (= var5191324 temp444_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5845392 var80129))
(assert (= var6107536 var80129))
(assert (= temp444_240 #x0000000000000001))
(assert (= var79986 temp444_240))
(model-add temp444_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp444_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp444_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






