(declare-fun temp1052_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1052_2 () (_ BitVec 64))
(declare-fun temp1052_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1052_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1052_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1052_6 () (_ BitVec 64))
(declare-fun temp1052_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_8 () (_ BitVec 64))
(declare-fun temp1052_9 () (_ BitVec 64))
(declare-fun temp1052_10 () (_ BitVec 64))
(declare-fun temp1052_11 () (_ BitVec 64))
(declare-fun temp1052_12 () (_ BitVec 64))
(declare-fun temp1052_13 () (_ BitVec 64))
(declare-fun temp1052_14 () (_ BitVec 64))
(declare-fun temp1052_15 () (_ BitVec 64))
(declare-fun temp1052_16 () (_ BitVec 64))
(declare-fun temp1052_17 () (_ BitVec 64))
(declare-fun temp1052_18 () (_ BitVec 64))
(declare-fun temp1052_19 () (_ BitVec 64))
(declare-fun temp1052_20 () (_ BitVec 64))
(declare-fun temp1052_21 () (_ BitVec 64))
(declare-fun temp1052_22 () (_ BitVec 64))
(declare-fun temp1052_23 () (_ BitVec 64))
(declare-fun temp1052_24 () (_ BitVec 64))
(declare-fun temp1052_25 () (_ BitVec 64))
(declare-fun temp1052_26 () (_ BitVec 64))
(declare-fun temp1052_27 () (_ BitVec 64))
(declare-fun temp1052_28 () (_ BitVec 64))
(declare-fun temp1052_29 () (_ BitVec 64))
(declare-fun temp1052_30 () (_ BitVec 64))
(declare-fun temp1052_31 () (_ BitVec 64))
(declare-fun temp1052_32 () (_ BitVec 64))
(declare-fun temp1052_33 () (_ BitVec 64))
(declare-fun temp1052_34 () (_ BitVec 64))
(declare-fun temp1052_35 () (_ BitVec 64))
(declare-fun temp1052_36 () (_ BitVec 64))
(declare-fun temp1052_37 () (_ BitVec 64))
(declare-fun temp1052_38 () (_ BitVec 64))
(declare-fun temp1052_39 () (_ BitVec 64))
(declare-fun temp1052_40 () (_ BitVec 64))
(declare-fun temp1052_41 () (_ BitVec 64))
(declare-fun temp1052_42 () (_ BitVec 64))
(declare-fun temp1052_43 () (_ BitVec 64))
(declare-fun temp1052_44 () (_ BitVec 64))
(declare-fun temp1052_45 () (_ BitVec 64))
(declare-fun temp1052_46 () (_ BitVec 64))
(declare-fun temp1052_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1052_48 () (_ BitVec 64))
(declare-fun temp1052_49 () (_ BitVec 64))
(declare-fun temp1052_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_51 () (_ BitVec 64))
(declare-fun temp1052_52 () (_ BitVec 64))
(declare-fun temp1052_53 () (_ BitVec 64))
(declare-fun temp1052_54 () (_ BitVec 64))
(declare-fun temp1052_55 () (_ BitVec 64))
(declare-fun temp1052_56 () (_ BitVec 64))
(declare-fun temp1052_57 () (_ BitVec 64))
(declare-fun temp1052_58 () (_ BitVec 64))
(declare-fun temp1052_59 () (_ BitVec 64))
(declare-fun temp1052_60 () (_ BitVec 64))
(declare-fun temp1052_61 () (_ BitVec 64))
(declare-fun temp1052_62 () (_ BitVec 64))
(declare-fun temp1052_63 () (_ BitVec 64))
(declare-fun temp1052_64 () (_ BitVec 64))
(declare-fun temp1052_65 () (_ BitVec 64))
(declare-fun temp1052_66 () (_ BitVec 64))
(declare-fun temp1052_67 () (_ BitVec 64))
(declare-fun temp1052_68 () (_ BitVec 64))
(declare-fun temp1052_69 () (_ BitVec 64))
(declare-fun temp1052_70 () (_ BitVec 64))
(declare-fun temp1052_71 () (_ BitVec 64))
(declare-fun temp1052_72 () (_ BitVec 64))
(declare-fun temp1052_73 () (_ BitVec 64))
(declare-fun temp1052_74 () (_ BitVec 64))
(declare-fun temp1052_75 () (_ BitVec 64))
(declare-fun temp1052_76 () (_ BitVec 64))
(declare-fun temp1052_77 () (_ BitVec 64))
(declare-fun temp1052_78 () (_ BitVec 64))
(declare-fun temp1052_79 () (_ BitVec 64))
(declare-fun temp1052_80 () (_ BitVec 64))
(declare-fun temp1052_81 () (_ BitVec 64))
(declare-fun temp1052_82 () (_ BitVec 64))
(declare-fun temp1052_83 () (_ BitVec 64))
(declare-fun temp1052_84 () (_ BitVec 64))
(declare-fun temp1052_85 () (_ BitVec 64))
(declare-fun temp1052_86 () (_ BitVec 64))
(declare-fun temp1052_87 () (_ BitVec 64))
(declare-fun temp1052_88 () (_ BitVec 64))
(declare-fun temp1052_89 () (_ BitVec 64))
(declare-fun temp1052_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1052_91 () (_ BitVec 64))
(declare-fun temp1052_92 () (_ BitVec 64))
(declare-fun temp1052_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_94 () (_ BitVec 64))
(declare-fun temp1052_95 () (_ BitVec 64))
(declare-fun temp1052_96 () (_ BitVec 64))
(declare-fun temp1052_97 () (_ BitVec 64))
(declare-fun temp1052_98 () (_ BitVec 64))
(declare-fun temp1052_99 () (_ BitVec 64))
(declare-fun temp1052_100 () (_ BitVec 64))
(declare-fun temp1052_101 () (_ BitVec 64))
(declare-fun temp1052_102 () (_ BitVec 64))
(declare-fun temp1052_103 () (_ BitVec 64))
(declare-fun temp1052_104 () (_ BitVec 64))
(declare-fun temp1052_105 () (_ BitVec 64))
(declare-fun temp1052_106 () (_ BitVec 64))
(declare-fun temp1052_107 () (_ BitVec 64))
(declare-fun temp1052_108 () (_ BitVec 64))
(declare-fun temp1052_109 () (_ BitVec 64))
(declare-fun temp1052_110 () (_ BitVec 64))
(declare-fun temp1052_111 () (_ BitVec 64))
(declare-fun temp1052_112 () (_ BitVec 64))
(declare-fun temp1052_113 () (_ BitVec 64))
(declare-fun temp1052_114 () (_ BitVec 64))
(declare-fun temp1052_115 () (_ BitVec 64))
(declare-fun temp1052_116 () (_ BitVec 64))
(declare-fun temp1052_117 () (_ BitVec 64))
(declare-fun temp1052_118 () (_ BitVec 64))
(declare-fun temp1052_119 () (_ BitVec 64))
(declare-fun temp1052_120 () (_ BitVec 64))
(declare-fun temp1052_121 () (_ BitVec 64))
(declare-fun temp1052_122 () (_ BitVec 64))
(declare-fun temp1052_123 () (_ BitVec 64))
(declare-fun temp1052_124 () (_ BitVec 64))
(declare-fun temp1052_125 () (_ BitVec 64))
(declare-fun temp1052_126 () (_ BitVec 64))
(declare-fun temp1052_127 () (_ BitVec 64))
(declare-fun temp1052_128 () (_ BitVec 64))
(declare-fun temp1052_129 () (_ BitVec 64))
(declare-fun temp1052_130 () (_ BitVec 64))
(declare-fun temp1052_131 () (_ BitVec 64))
(declare-fun temp1052_132 () (_ BitVec 64))
(declare-fun temp1052_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1052_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1052_135 () (_ BitVec 64))
(declare-fun temp1052_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1052_137 () (_ BitVec 64))
(declare-fun temp1052_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_139 () (_ BitVec 64))
(declare-fun temp1052_140 () (_ BitVec 64))
(declare-fun temp1052_141 () (_ BitVec 64))
(declare-fun temp1052_142 () (_ BitVec 64))
(declare-fun temp1052_143 () (_ BitVec 64))
(declare-fun temp1052_144 () (_ BitVec 64))
(declare-fun temp1052_145 () (_ BitVec 64))
(declare-fun temp1052_146 () (_ BitVec 64))
(declare-fun temp1052_147 () (_ BitVec 64))
(declare-fun temp1052_148 () (_ BitVec 64))
(declare-fun temp1052_149 () (_ BitVec 64))
(declare-fun temp1052_150 () (_ BitVec 64))
(declare-fun temp1052_151 () (_ BitVec 64))
(declare-fun temp1052_152 () (_ BitVec 64))
(declare-fun temp1052_153 () (_ BitVec 64))
(declare-fun temp1052_154 () (_ BitVec 64))
(declare-fun temp1052_156 () (_ BitVec 64))
(declare-fun temp1052_157 () (_ BitVec 64))
(declare-fun temp1052_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1052_158 () (_ BitVec 64))
(declare-fun temp1052_159 () (_ BitVec 64))
(declare-fun temp1052_161 () (_ BitVec 64))
(declare-fun temp1052_162 () (_ BitVec 64))
(declare-fun temp1052_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1052_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1052_164 () (_ BitVec 64))
(declare-fun temp1052_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1052_166 () (_ BitVec 64))
(declare-fun temp1052_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1052_168 () (_ BitVec 64))
(declare-fun temp1052_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_170 () (_ BitVec 64))
(declare-fun temp1052_171 () (_ BitVec 64))
(declare-fun temp1052_172 () (_ BitVec 64))
(declare-fun temp1052_173 () (_ BitVec 64))
(declare-fun temp1052_174 () (_ BitVec 64))
(declare-fun temp1052_175 () (_ BitVec 64))
(declare-fun temp1052_176 () (_ BitVec 64))
(declare-fun temp1052_177 () (_ BitVec 64))
(declare-fun temp1052_178 () (_ BitVec 64))
(declare-fun temp1052_179 () (_ BitVec 64))
(declare-fun temp1052_180 () (_ BitVec 64))
(declare-fun temp1052_181 () (_ BitVec 64))
(declare-fun temp1052_182 () (_ BitVec 64))
(declare-fun temp1052_183 () (_ BitVec 64))
(declare-fun temp1052_184 () (_ BitVec 64))
(declare-fun temp1052_185 () (_ BitVec 64))
(declare-fun temp1052_186 () (_ BitVec 64))
(declare-fun temp1052_187 () (_ BitVec 64))
(declare-fun temp1052_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1052_189 () (_ BitVec 64))
(declare-fun temp1052_191 () (_ BitVec 64))
(declare-fun temp1052_192 () (_ BitVec 64))
(declare-fun temp1052_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1052_193 () (_ BitVec 64))
(declare-fun temp1052_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1052_195 () (_ BitVec 64))
(declare-fun temp1052_196 () (_ BitVec 64))
(declare-fun temp1052_197 () (_ BitVec 64))
(declare-fun temp1052_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_199 () (_ BitVec 64))
(declare-fun temp1052_200 () (_ BitVec 64))
(declare-fun temp1052_201 () (_ BitVec 64))
(declare-fun temp1052_202 () (_ BitVec 64))
(declare-fun temp1052_203 () (_ BitVec 64))
(declare-fun temp1052_204 () (_ BitVec 64))
(declare-fun temp1052_205 () (_ BitVec 64))
(declare-fun temp1052_206 () (_ BitVec 64))
(declare-fun temp1052_207 () (_ BitVec 64))
(declare-fun temp1052_208 () (_ BitVec 64))
(declare-fun temp1052_209 () (_ BitVec 64))
(declare-fun temp1052_210 () (_ BitVec 64))
(declare-fun temp1052_211 () (_ BitVec 64))
(declare-fun temp1052_212 () (_ BitVec 64))
(declare-fun temp1052_213 () (_ BitVec 64))
(declare-fun temp1052_214 () (_ BitVec 64))
(declare-fun temp1052_215 () (_ BitVec 64))
(declare-fun temp1052_216 () (_ BitVec 64))
(declare-fun temp1052_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1052_218 () (_ BitVec 64))
(declare-fun temp1052_220 () (_ BitVec 64))
(declare-fun temp1052_221 () (_ BitVec 64))
(declare-fun temp1052_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1052_222 () (_ BitVec 64))
(declare-fun temp1052_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1052_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1052_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1052_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1052_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1052_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1052_229 () (_ BitVec 64))
(declare-fun temp1052_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1052_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1052_232 () (_ BitVec 64))
(declare-fun temp1052_233 () (_ BitVec 64))
(declare-fun temp1052_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1052_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1052_236 () (_ BitVec 64))
(declare-fun temp1052_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1052_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1052_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1052_240 () (_ BitVec 64))
(declare-fun temp1052_241 () (_ BitVec 64))
(declare-fun var6304532 () (_ BitVec 64))
(declare-fun var6304499 () (_ BitVec 64))
(declare-fun var6173063 () (_ BitVec 64))
(declare-fun var6173059 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1052_242 () (_ BitVec 64))
(assert (= temp1052_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1052_1)))
(assert (= temp1052_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1052_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_3 #x0000000000000000))
(assert (= var79869 temp1052_3))
(assert (= temp1052_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1052_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_5 #x0000000000000000))
(assert (= var79914 temp1052_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1052_6 #x0000000000000000))
(assert (= temp1052_7 temp1052_6))
(assert (= temp1052_8 (select ARGNAME_padding_NAMEEND_VAL temp1052_7)))
(assert (= temp1052_9 #x0000000000000001))
(assert (= temp1052_10 temp1052_9))
(assert (= temp1052_11 (select ARGNAME_padding_NAMEEND_VAL temp1052_10)))
(assert (= temp1052_12 #x0000000000000002))
(assert (= temp1052_13 temp1052_12))
(assert (= temp1052_14 (select ARGNAME_padding_NAMEEND_VAL temp1052_13)))
(assert (= temp1052_15 #x0000000000000003))
(assert (= temp1052_16 temp1052_15))
(assert (= temp1052_17 (select ARGNAME_padding_NAMEEND_VAL temp1052_16)))
(assert (= temp1052_18 #x0000000000000004))
(assert (= temp1052_19 temp1052_18))
(assert (= temp1052_20 (select ARGNAME_padding_NAMEEND_VAL temp1052_19)))
(assert (= temp1052_21 #x0000000000000005))
(assert (= temp1052_22 temp1052_21))
(assert (= temp1052_23 (select ARGNAME_padding_NAMEEND_VAL temp1052_22)))
(assert (= temp1052_24 #x0000000000000000))
(assert (= temp1052_25 #x0000000000000000))
(assert (= temp1052_26 temp1052_25))
(assert (= temp1052_27 (select ARGNAME_padding_NAMEEND_VAL temp1052_26)))
(assert (= temp1052_28 #x0000000000000000))
(assert (= temp1052_29 #x0000000000000001))
(assert (= temp1052_30 temp1052_29))
(assert (= temp1052_31 (select ARGNAME_padding_NAMEEND_VAL temp1052_30)))
(assert (= temp1052_32 #x0000000000000000))
(assert (= temp1052_33 #x0000000000000002))
(assert (= temp1052_34 temp1052_33))
(assert (= temp1052_35 (select ARGNAME_padding_NAMEEND_VAL temp1052_34)))
(assert (= temp1052_36 #x0000000000000000))
(assert (= temp1052_37 #x0000000000000003))
(assert (= temp1052_38 temp1052_37))
(assert (= temp1052_39 (select ARGNAME_padding_NAMEEND_VAL temp1052_38)))
(assert (= temp1052_40 #x0000000000000000))
(assert (= temp1052_41 #x0000000000000004))
(assert (= temp1052_42 temp1052_41))
(assert (= temp1052_43 (select ARGNAME_padding_NAMEEND_VAL temp1052_42)))
(assert (= temp1052_44 #x0000000000000000))
(assert (= temp1052_45 #x0000000000000005))
(assert (= temp1052_46 temp1052_45))
(assert (= temp1052_47 (select ARGNAME_padding_NAMEEND_VAL temp1052_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1052_27 temp1052_24)
             (bvslt temp1052_31 temp1052_28)
             (bvslt temp1052_35 temp1052_32)
             (bvslt temp1052_39 temp1052_36)
             (bvslt temp1052_43 temp1052_40)
             (bvslt temp1052_47 temp1052_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_48 #x0000000000000000))
(assert (= var1322786 temp1052_48))
(assert (= temp1052_49 #x0000000000000000))
(assert (= temp1052_50 temp1052_49))
(assert (= temp1052_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_50)))
(assert (= temp1052_52 #x0000000000000001))
(assert (= temp1052_53 temp1052_52))
(assert (= temp1052_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_53)))
(assert (= temp1052_55 #x0000000000000002))
(assert (= temp1052_56 temp1052_55))
(assert (= temp1052_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_56)))
(assert (= temp1052_58 #x0000000000000003))
(assert (= temp1052_59 temp1052_58))
(assert (= temp1052_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_59)))
(assert (= temp1052_61 #x0000000000000004))
(assert (= temp1052_62 temp1052_61))
(assert (= temp1052_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_62)))
(assert (= temp1052_64 #x0000000000000005))
(assert (= temp1052_65 temp1052_64))
(assert (= temp1052_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_65)))
(assert (= temp1052_67 #x0000000000000000))
(assert (= temp1052_68 #x0000000000000000))
(assert (= temp1052_69 temp1052_68))
(assert (= temp1052_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_69)))
(assert (= temp1052_71 #x0000000000000000))
(assert (= temp1052_72 #x0000000000000001))
(assert (= temp1052_73 temp1052_72))
(assert (= temp1052_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_73)))
(assert (= temp1052_75 #x0000000000000000))
(assert (= temp1052_76 #x0000000000000002))
(assert (= temp1052_77 temp1052_76))
(assert (= temp1052_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_77)))
(assert (= temp1052_79 #x0000000000000000))
(assert (= temp1052_80 #x0000000000000003))
(assert (= temp1052_81 temp1052_80))
(assert (= temp1052_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_81)))
(assert (= temp1052_83 #x0000000000000000))
(assert (= temp1052_84 #x0000000000000004))
(assert (= temp1052_85 temp1052_84))
(assert (= temp1052_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_85)))
(assert (= temp1052_87 #x0000000000000000))
(assert (= temp1052_88 #x0000000000000005))
(assert (= temp1052_89 temp1052_88))
(assert (= temp1052_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1052_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1052_70 temp1052_67)
             (bvslt temp1052_74 temp1052_71)
             (bvslt temp1052_78 temp1052_75)
             (bvslt temp1052_82 temp1052_79)
             (bvslt temp1052_86 temp1052_83)
             (bvslt temp1052_90 temp1052_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_91 #x0000000000000000))
(assert (= var1322797 temp1052_91))
(assert (= temp1052_92 #x0000000000000000))
(assert (= temp1052_93 temp1052_92))
(assert (= temp1052_94 (select ARGNAME_stride_NAMEEND_VAL temp1052_93)))
(assert (= temp1052_95 #x0000000000000001))
(assert (= temp1052_96 temp1052_95))
(assert (= temp1052_97 (select ARGNAME_stride_NAMEEND_VAL temp1052_96)))
(assert (= temp1052_98 #x0000000000000002))
(assert (= temp1052_99 temp1052_98))
(assert (= temp1052_100 (select ARGNAME_stride_NAMEEND_VAL temp1052_99)))
(assert (= temp1052_101 #x0000000000000003))
(assert (= temp1052_102 temp1052_101))
(assert (= temp1052_103 (select ARGNAME_stride_NAMEEND_VAL temp1052_102)))
(assert (= temp1052_104 #x0000000000000004))
(assert (= temp1052_105 temp1052_104))
(assert (= temp1052_106 (select ARGNAME_stride_NAMEEND_VAL temp1052_105)))
(assert (= temp1052_107 #x0000000000000005))
(assert (= temp1052_108 temp1052_107))
(assert (= temp1052_109 (select ARGNAME_stride_NAMEEND_VAL temp1052_108)))
(assert (= temp1052_110 #x0000000000000000))
(assert (= temp1052_111 #x0000000000000000))
(assert (= temp1052_112 temp1052_111))
(assert (= temp1052_113 (select ARGNAME_stride_NAMEEND_VAL temp1052_112)))
(assert (= temp1052_114 #x0000000000000000))
(assert (= temp1052_115 #x0000000000000001))
(assert (= temp1052_116 temp1052_115))
(assert (= temp1052_117 (select ARGNAME_stride_NAMEEND_VAL temp1052_116)))
(assert (= temp1052_118 #x0000000000000000))
(assert (= temp1052_119 #x0000000000000002))
(assert (= temp1052_120 temp1052_119))
(assert (= temp1052_121 (select ARGNAME_stride_NAMEEND_VAL temp1052_120)))
(assert (= temp1052_122 #x0000000000000000))
(assert (= temp1052_123 #x0000000000000003))
(assert (= temp1052_124 temp1052_123))
(assert (= temp1052_125 (select ARGNAME_stride_NAMEEND_VAL temp1052_124)))
(assert (= temp1052_126 #x0000000000000000))
(assert (= temp1052_127 #x0000000000000004))
(assert (= temp1052_128 temp1052_127))
(assert (= temp1052_129 (select ARGNAME_stride_NAMEEND_VAL temp1052_128)))
(assert (= temp1052_130 #x0000000000000000))
(assert (= temp1052_131 #x0000000000000005))
(assert (= temp1052_132 temp1052_131))
(assert (= temp1052_133 (select ARGNAME_stride_NAMEEND_VAL temp1052_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1052_113 temp1052_110)
             (bvsle temp1052_117 temp1052_114)
             (bvsle temp1052_121 temp1052_118)
             (bvsle temp1052_125 temp1052_122)
             (bvsle temp1052_129 temp1052_126)
             (bvsle temp1052_133 temp1052_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_134 #x0000000000000000))
(assert (= var1322807 temp1052_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_135 #x0000000000000001))
(assert (= var1322819 temp1052_135))
(assert (= temp1052_136 #x0000000000000000))
(assert (= var1310898 temp1052_136))
(assert (= temp1052_137 #x0000000000000000))
(assert (= temp1052_138 temp1052_137))
(assert (= temp1052_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_138)))
(assert (= temp1052_140 #x0000000000000001))
(assert (= temp1052_141 temp1052_140))
(assert (= temp1052_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_141)))
(assert (= temp1052_143 #x0000000000000002))
(assert (= temp1052_144 temp1052_143))
(assert (= temp1052_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_144)))
(assert (= temp1052_146 #x0000000000000003))
(assert (= temp1052_147 temp1052_146))
(assert (= temp1052_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_147)))
(assert (= temp1052_149 #x0000000000000004))
(assert (= temp1052_150 temp1052_149))
(assert (= temp1052_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_150)))
(assert (= temp1052_152 #x0000000000000005))
(assert (= temp1052_153 temp1052_152))
(assert (= temp1052_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_153)))
(assert (= temp1052_156 var1310898))
(assert (= temp1052_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_156)))
(assert (= temp1052_155 temp1052_157))
(assert (= var1322852
   (ite (bvslt temp1052_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_158 #x0000000000000000))
(assert (= var1322852 temp1052_158))
(assert (= temp1052_159 #x0000000000000000))
(assert (= var1310898 temp1052_159))
(assert (= temp1052_161 var1310898))
(assert (= temp1052_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_161)))
(assert (= temp1052_160 temp1052_162))
(assert (= var1322874 (bvsmod temp1052_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1052_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1052_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1052_164 #x0000000000000001))
(assert (= var1322875 temp1052_164))
(assert (= temp1052_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1052_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_166 #x0000000000000001))
(assert (= var1322895 temp1052_166))
(assert (= temp1052_167 #x0000000000000001))
(assert (= var1311786 temp1052_167))
(assert (= temp1052_168 #x0000000000000000))
(assert (= temp1052_169 temp1052_168))
(assert (= temp1052_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_169)))
(assert (= temp1052_171 #x0000000000000001))
(assert (= temp1052_172 temp1052_171))
(assert (= temp1052_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_172)))
(assert (= temp1052_174 #x0000000000000002))
(assert (= temp1052_175 temp1052_174))
(assert (= temp1052_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_175)))
(assert (= temp1052_177 #x0000000000000003))
(assert (= temp1052_178 temp1052_177))
(assert (= temp1052_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_178)))
(assert (= temp1052_180 #x0000000000000004))
(assert (= temp1052_181 temp1052_180))
(assert (= temp1052_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_181)))
(assert (= temp1052_183 #x0000000000000005))
(assert (= temp1052_184 temp1052_183))
(assert (= temp1052_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_184)))
(assert (= temp1052_186 #x0000000000000000))
(assert (= temp1052_187
   (ite (bvslt var1311786 temp1052_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1052_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_187)))
(assert (= var1322903 temp1052_188))
(assert (bvslt (ite (bvslt var1311786 temp1052_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1052_189 #x0000000000000001))
(assert (= var1311786 temp1052_189))
(assert (= temp1052_191 var1311786))
(assert (= temp1052_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_191)))
(assert (= temp1052_190 temp1052_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1052_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1052_193 #x0000000000000001))
(assert (= var1322908 temp1052_193))
(assert (= temp1052_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1052_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_195 #x0000000000000001))
(assert (= var1322975 temp1052_195))
(assert (= temp1052_196 #x0000000000000000))
(assert (= var1310898 temp1052_196))
(assert (= temp1052_197 #x0000000000000000))
(assert (= temp1052_198 temp1052_197))
(assert (= temp1052_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1052_198)))
(assert (= temp1052_200 #x0000000000000001))
(assert (= temp1052_201 temp1052_200))
(assert (= temp1052_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1052_201)))
(assert (= temp1052_203 #x0000000000000002))
(assert (= temp1052_204 temp1052_203))
(assert (= temp1052_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1052_204)))
(assert (= temp1052_206 #x0000000000000003))
(assert (= temp1052_207 temp1052_206))
(assert (= temp1052_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1052_207)))
(assert (= temp1052_209 #x0000000000000004))
(assert (= temp1052_210 temp1052_209))
(assert (= temp1052_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1052_210)))
(assert (= temp1052_212 #x0000000000000005))
(assert (= temp1052_213 temp1052_212))
(assert (= temp1052_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1052_213)))
(assert (= temp1052_215 #x0000000000000000))
(assert (= temp1052_216
   (ite (bvslt var1310898 temp1052_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1052_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1052_216)))
(assert (= var1322977 temp1052_217))
(assert (bvslt (ite (bvslt var1310898 temp1052_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1052_218 #x0000000000000000))
(assert (= var1310898 temp1052_218))
(assert (= temp1052_220 var1310898))
(assert (= temp1052_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_220)))
(assert (= temp1052_219 temp1052_221))
(assert (= var1322980
   (ite (= var1322977 temp1052_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1052_222 #x0000000000000001))
(assert (= var1322980 temp1052_222))
(assert (= temp1052_223 #x0000000000000002))
(assert (= var1848169 temp1052_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1052_225 #x0000000000000001))
(assert (= var1323065 temp1052_225))
(assert (= temp1052_226 #x0000000000000001))
(assert (= var3486735 temp1052_226))
(assert (= temp1052_227 #x0000000000000001))
(assert (= var3814415 temp1052_227))
(assert (= temp1052_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1052_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_229 #x0000000000000001))
(assert (= var79986 temp1052_229))
(assert (= temp1052_230 #x0000000000000001))
(assert (= var80116 temp1052_230))
(assert (= var4796905 var80116))
(assert (= temp1052_231 #x0000000000000000))
(assert (= var4784306 temp1052_231))
(assert (= temp1052_232 #x0000000000000000))
(assert (= temp1052_233
   (ite (bvslt var4784306 temp1052_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1052_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_233)))
(assert (= var4796924 temp1052_234))
(assert (bvslt (ite (bvslt var4784306 temp1052_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1052_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1052_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1052_236 #x0000000000000001))
(assert (= var4796925 temp1052_236))
(assert (= temp1052_237 #x0000000000000000))
(assert (= var4996927 temp1052_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1052_238 #x0000000000000002))
(assert (= var5125763 temp1052_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_239 #x0000000000000000))
(assert (= var5191324 temp1052_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1052_240 #x0000000000000001))
(assert (= var79986 temp1052_240))
(assert (= temp1052_241 #x0000000000000000))
(assert (= var6304532 temp1052_241))
(assert (= var6304499 var6304532))
(assert (= var6173063 var6304499))
(assert (= var6173059 var6173063))
(assert (= var81597 var6173059))
(assert (= temp1052_242 #x0000000000000000))
(assert (= var81597 temp1052_242))
(model-add temp1052_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1052_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1052_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






