(declare-fun temp838_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp838_2 () (_ BitVec 64))
(declare-fun temp838_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp838_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp838_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp838_6 () (_ BitVec 64))
(declare-fun temp838_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_8 () (_ BitVec 64))
(declare-fun temp838_9 () (_ BitVec 64))
(declare-fun temp838_10 () (_ BitVec 64))
(declare-fun temp838_11 () (_ BitVec 64))
(declare-fun temp838_12 () (_ BitVec 64))
(declare-fun temp838_13 () (_ BitVec 64))
(declare-fun temp838_14 () (_ BitVec 64))
(declare-fun temp838_15 () (_ BitVec 64))
(declare-fun temp838_16 () (_ BitVec 64))
(declare-fun temp838_17 () (_ BitVec 64))
(declare-fun temp838_18 () (_ BitVec 64))
(declare-fun temp838_19 () (_ BitVec 64))
(declare-fun temp838_20 () (_ BitVec 64))
(declare-fun temp838_21 () (_ BitVec 64))
(declare-fun temp838_22 () (_ BitVec 64))
(declare-fun temp838_23 () (_ BitVec 64))
(declare-fun temp838_24 () (_ BitVec 64))
(declare-fun temp838_25 () (_ BitVec 64))
(declare-fun temp838_26 () (_ BitVec 64))
(declare-fun temp838_27 () (_ BitVec 64))
(declare-fun temp838_28 () (_ BitVec 64))
(declare-fun temp838_29 () (_ BitVec 64))
(declare-fun temp838_30 () (_ BitVec 64))
(declare-fun temp838_31 () (_ BitVec 64))
(declare-fun temp838_32 () (_ BitVec 64))
(declare-fun temp838_33 () (_ BitVec 64))
(declare-fun temp838_34 () (_ BitVec 64))
(declare-fun temp838_35 () (_ BitVec 64))
(declare-fun temp838_36 () (_ BitVec 64))
(declare-fun temp838_37 () (_ BitVec 64))
(declare-fun temp838_38 () (_ BitVec 64))
(declare-fun temp838_39 () (_ BitVec 64))
(declare-fun temp838_40 () (_ BitVec 64))
(declare-fun temp838_41 () (_ BitVec 64))
(declare-fun temp838_42 () (_ BitVec 64))
(declare-fun temp838_43 () (_ BitVec 64))
(declare-fun temp838_44 () (_ BitVec 64))
(declare-fun temp838_45 () (_ BitVec 64))
(declare-fun temp838_46 () (_ BitVec 64))
(declare-fun temp838_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp838_48 () (_ BitVec 64))
(declare-fun temp838_49 () (_ BitVec 64))
(declare-fun temp838_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_51 () (_ BitVec 64))
(declare-fun temp838_52 () (_ BitVec 64))
(declare-fun temp838_53 () (_ BitVec 64))
(declare-fun temp838_54 () (_ BitVec 64))
(declare-fun temp838_55 () (_ BitVec 64))
(declare-fun temp838_56 () (_ BitVec 64))
(declare-fun temp838_57 () (_ BitVec 64))
(declare-fun temp838_58 () (_ BitVec 64))
(declare-fun temp838_59 () (_ BitVec 64))
(declare-fun temp838_60 () (_ BitVec 64))
(declare-fun temp838_61 () (_ BitVec 64))
(declare-fun temp838_62 () (_ BitVec 64))
(declare-fun temp838_63 () (_ BitVec 64))
(declare-fun temp838_64 () (_ BitVec 64))
(declare-fun temp838_65 () (_ BitVec 64))
(declare-fun temp838_66 () (_ BitVec 64))
(declare-fun temp838_67 () (_ BitVec 64))
(declare-fun temp838_68 () (_ BitVec 64))
(declare-fun temp838_69 () (_ BitVec 64))
(declare-fun temp838_70 () (_ BitVec 64))
(declare-fun temp838_71 () (_ BitVec 64))
(declare-fun temp838_72 () (_ BitVec 64))
(declare-fun temp838_73 () (_ BitVec 64))
(declare-fun temp838_74 () (_ BitVec 64))
(declare-fun temp838_75 () (_ BitVec 64))
(declare-fun temp838_76 () (_ BitVec 64))
(declare-fun temp838_77 () (_ BitVec 64))
(declare-fun temp838_78 () (_ BitVec 64))
(declare-fun temp838_79 () (_ BitVec 64))
(declare-fun temp838_80 () (_ BitVec 64))
(declare-fun temp838_81 () (_ BitVec 64))
(declare-fun temp838_82 () (_ BitVec 64))
(declare-fun temp838_83 () (_ BitVec 64))
(declare-fun temp838_84 () (_ BitVec 64))
(declare-fun temp838_85 () (_ BitVec 64))
(declare-fun temp838_86 () (_ BitVec 64))
(declare-fun temp838_87 () (_ BitVec 64))
(declare-fun temp838_88 () (_ BitVec 64))
(declare-fun temp838_89 () (_ BitVec 64))
(declare-fun temp838_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp838_91 () (_ BitVec 64))
(declare-fun temp838_92 () (_ BitVec 64))
(declare-fun temp838_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_94 () (_ BitVec 64))
(declare-fun temp838_95 () (_ BitVec 64))
(declare-fun temp838_96 () (_ BitVec 64))
(declare-fun temp838_97 () (_ BitVec 64))
(declare-fun temp838_98 () (_ BitVec 64))
(declare-fun temp838_99 () (_ BitVec 64))
(declare-fun temp838_100 () (_ BitVec 64))
(declare-fun temp838_101 () (_ BitVec 64))
(declare-fun temp838_102 () (_ BitVec 64))
(declare-fun temp838_103 () (_ BitVec 64))
(declare-fun temp838_104 () (_ BitVec 64))
(declare-fun temp838_105 () (_ BitVec 64))
(declare-fun temp838_106 () (_ BitVec 64))
(declare-fun temp838_107 () (_ BitVec 64))
(declare-fun temp838_108 () (_ BitVec 64))
(declare-fun temp838_109 () (_ BitVec 64))
(declare-fun temp838_110 () (_ BitVec 64))
(declare-fun temp838_111 () (_ BitVec 64))
(declare-fun temp838_112 () (_ BitVec 64))
(declare-fun temp838_113 () (_ BitVec 64))
(declare-fun temp838_114 () (_ BitVec 64))
(declare-fun temp838_115 () (_ BitVec 64))
(declare-fun temp838_116 () (_ BitVec 64))
(declare-fun temp838_117 () (_ BitVec 64))
(declare-fun temp838_118 () (_ BitVec 64))
(declare-fun temp838_119 () (_ BitVec 64))
(declare-fun temp838_120 () (_ BitVec 64))
(declare-fun temp838_121 () (_ BitVec 64))
(declare-fun temp838_122 () (_ BitVec 64))
(declare-fun temp838_123 () (_ BitVec 64))
(declare-fun temp838_124 () (_ BitVec 64))
(declare-fun temp838_125 () (_ BitVec 64))
(declare-fun temp838_126 () (_ BitVec 64))
(declare-fun temp838_127 () (_ BitVec 64))
(declare-fun temp838_128 () (_ BitVec 64))
(declare-fun temp838_129 () (_ BitVec 64))
(declare-fun temp838_130 () (_ BitVec 64))
(declare-fun temp838_131 () (_ BitVec 64))
(declare-fun temp838_132 () (_ BitVec 64))
(declare-fun temp838_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp838_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp838_135 () (_ BitVec 64))
(declare-fun temp838_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp838_137 () (_ BitVec 64))
(declare-fun temp838_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_139 () (_ BitVec 64))
(declare-fun temp838_140 () (_ BitVec 64))
(declare-fun temp838_141 () (_ BitVec 64))
(declare-fun temp838_142 () (_ BitVec 64))
(declare-fun temp838_143 () (_ BitVec 64))
(declare-fun temp838_144 () (_ BitVec 64))
(declare-fun temp838_145 () (_ BitVec 64))
(declare-fun temp838_146 () (_ BitVec 64))
(declare-fun temp838_147 () (_ BitVec 64))
(declare-fun temp838_148 () (_ BitVec 64))
(declare-fun temp838_149 () (_ BitVec 64))
(declare-fun temp838_150 () (_ BitVec 64))
(declare-fun temp838_151 () (_ BitVec 64))
(declare-fun temp838_152 () (_ BitVec 64))
(declare-fun temp838_153 () (_ BitVec 64))
(declare-fun temp838_154 () (_ BitVec 64))
(declare-fun temp838_156 () (_ BitVec 64))
(declare-fun temp838_157 () (_ BitVec 64))
(declare-fun temp838_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp838_158 () (_ BitVec 64))
(declare-fun temp838_159 () (_ BitVec 64))
(declare-fun temp838_161 () (_ BitVec 64))
(declare-fun temp838_162 () (_ BitVec 64))
(declare-fun temp838_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp838_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp838_164 () (_ BitVec 64))
(declare-fun temp838_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp838_166 () (_ BitVec 64))
(declare-fun temp838_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp838_168 () (_ BitVec 64))
(declare-fun temp838_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_170 () (_ BitVec 64))
(declare-fun temp838_171 () (_ BitVec 64))
(declare-fun temp838_172 () (_ BitVec 64))
(declare-fun temp838_173 () (_ BitVec 64))
(declare-fun temp838_174 () (_ BitVec 64))
(declare-fun temp838_175 () (_ BitVec 64))
(declare-fun temp838_176 () (_ BitVec 64))
(declare-fun temp838_177 () (_ BitVec 64))
(declare-fun temp838_178 () (_ BitVec 64))
(declare-fun temp838_179 () (_ BitVec 64))
(declare-fun temp838_180 () (_ BitVec 64))
(declare-fun temp838_181 () (_ BitVec 64))
(declare-fun temp838_182 () (_ BitVec 64))
(declare-fun temp838_183 () (_ BitVec 64))
(declare-fun temp838_184 () (_ BitVec 64))
(declare-fun temp838_185 () (_ BitVec 64))
(declare-fun temp838_186 () (_ BitVec 64))
(declare-fun temp838_187 () (_ BitVec 64))
(declare-fun temp838_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp838_189 () (_ BitVec 64))
(declare-fun temp838_191 () (_ BitVec 64))
(declare-fun temp838_192 () (_ BitVec 64))
(declare-fun temp838_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp838_193 () (_ BitVec 64))
(declare-fun temp838_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp838_195 () (_ BitVec 64))
(declare-fun temp838_196 () (_ BitVec 64))
(declare-fun temp838_197 () (_ BitVec 64))
(declare-fun temp838_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_199 () (_ BitVec 64))
(declare-fun temp838_200 () (_ BitVec 64))
(declare-fun temp838_201 () (_ BitVec 64))
(declare-fun temp838_202 () (_ BitVec 64))
(declare-fun temp838_203 () (_ BitVec 64))
(declare-fun temp838_204 () (_ BitVec 64))
(declare-fun temp838_205 () (_ BitVec 64))
(declare-fun temp838_206 () (_ BitVec 64))
(declare-fun temp838_207 () (_ BitVec 64))
(declare-fun temp838_208 () (_ BitVec 64))
(declare-fun temp838_209 () (_ BitVec 64))
(declare-fun temp838_210 () (_ BitVec 64))
(declare-fun temp838_211 () (_ BitVec 64))
(declare-fun temp838_212 () (_ BitVec 64))
(declare-fun temp838_213 () (_ BitVec 64))
(declare-fun temp838_214 () (_ BitVec 64))
(declare-fun temp838_215 () (_ BitVec 64))
(declare-fun temp838_216 () (_ BitVec 64))
(declare-fun temp838_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp838_218 () (_ BitVec 64))
(declare-fun temp838_220 () (_ BitVec 64))
(declare-fun temp838_221 () (_ BitVec 64))
(declare-fun temp838_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp838_222 () (_ BitVec 64))
(declare-fun temp838_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp838_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp838_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp838_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp838_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp838_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp838_229 () (_ BitVec 64))
(declare-fun temp838_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp838_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp838_232 () (_ BitVec 64))
(declare-fun temp838_233 () (_ BitVec 64))
(declare-fun temp838_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp838_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp838_236 () (_ BitVec 64))
(declare-fun temp838_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp838_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp838_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp838_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80889 () (_ BitVec 64))
(declare-fun temp838_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80891 () (_ BitVec 64))
(declare-fun temp838_242 () (_ BitVec 64))
(assert (= temp838_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp838_1)))
(assert (= temp838_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp838_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_3 #x0000000000000000))
(assert (= var79869 temp838_3))
(assert (= temp838_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp838_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_5 #x0000000000000000))
(assert (= var79914 temp838_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp838_6 #x0000000000000000))
(assert (= temp838_7 temp838_6))
(assert (= temp838_8 (select ARGNAME_padding_NAMEEND_VAL temp838_7)))
(assert (= temp838_9 #x0000000000000001))
(assert (= temp838_10 temp838_9))
(assert (= temp838_11 (select ARGNAME_padding_NAMEEND_VAL temp838_10)))
(assert (= temp838_12 #x0000000000000002))
(assert (= temp838_13 temp838_12))
(assert (= temp838_14 (select ARGNAME_padding_NAMEEND_VAL temp838_13)))
(assert (= temp838_15 #x0000000000000003))
(assert (= temp838_16 temp838_15))
(assert (= temp838_17 (select ARGNAME_padding_NAMEEND_VAL temp838_16)))
(assert (= temp838_18 #x0000000000000004))
(assert (= temp838_19 temp838_18))
(assert (= temp838_20 (select ARGNAME_padding_NAMEEND_VAL temp838_19)))
(assert (= temp838_21 #x0000000000000005))
(assert (= temp838_22 temp838_21))
(assert (= temp838_23 (select ARGNAME_padding_NAMEEND_VAL temp838_22)))
(assert (= temp838_24 #x0000000000000000))
(assert (= temp838_25 #x0000000000000000))
(assert (= temp838_26 temp838_25))
(assert (= temp838_27 (select ARGNAME_padding_NAMEEND_VAL temp838_26)))
(assert (= temp838_28 #x0000000000000000))
(assert (= temp838_29 #x0000000000000001))
(assert (= temp838_30 temp838_29))
(assert (= temp838_31 (select ARGNAME_padding_NAMEEND_VAL temp838_30)))
(assert (= temp838_32 #x0000000000000000))
(assert (= temp838_33 #x0000000000000002))
(assert (= temp838_34 temp838_33))
(assert (= temp838_35 (select ARGNAME_padding_NAMEEND_VAL temp838_34)))
(assert (= temp838_36 #x0000000000000000))
(assert (= temp838_37 #x0000000000000003))
(assert (= temp838_38 temp838_37))
(assert (= temp838_39 (select ARGNAME_padding_NAMEEND_VAL temp838_38)))
(assert (= temp838_40 #x0000000000000000))
(assert (= temp838_41 #x0000000000000004))
(assert (= temp838_42 temp838_41))
(assert (= temp838_43 (select ARGNAME_padding_NAMEEND_VAL temp838_42)))
(assert (= temp838_44 #x0000000000000000))
(assert (= temp838_45 #x0000000000000005))
(assert (= temp838_46 temp838_45))
(assert (= temp838_47 (select ARGNAME_padding_NAMEEND_VAL temp838_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp838_27 temp838_24)
             (bvslt temp838_31 temp838_28)
             (bvslt temp838_35 temp838_32)
             (bvslt temp838_39 temp838_36)
             (bvslt temp838_43 temp838_40)
             (bvslt temp838_47 temp838_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_48 #x0000000000000000))
(assert (= var1322786 temp838_48))
(assert (= temp838_49 #x0000000000000000))
(assert (= temp838_50 temp838_49))
(assert (= temp838_51 (select ARGNAME_output_padding_NAMEEND_VAL temp838_50)))
(assert (= temp838_52 #x0000000000000001))
(assert (= temp838_53 temp838_52))
(assert (= temp838_54 (select ARGNAME_output_padding_NAMEEND_VAL temp838_53)))
(assert (= temp838_55 #x0000000000000002))
(assert (= temp838_56 temp838_55))
(assert (= temp838_57 (select ARGNAME_output_padding_NAMEEND_VAL temp838_56)))
(assert (= temp838_58 #x0000000000000003))
(assert (= temp838_59 temp838_58))
(assert (= temp838_60 (select ARGNAME_output_padding_NAMEEND_VAL temp838_59)))
(assert (= temp838_61 #x0000000000000004))
(assert (= temp838_62 temp838_61))
(assert (= temp838_63 (select ARGNAME_output_padding_NAMEEND_VAL temp838_62)))
(assert (= temp838_64 #x0000000000000005))
(assert (= temp838_65 temp838_64))
(assert (= temp838_66 (select ARGNAME_output_padding_NAMEEND_VAL temp838_65)))
(assert (= temp838_67 #x0000000000000000))
(assert (= temp838_68 #x0000000000000000))
(assert (= temp838_69 temp838_68))
(assert (= temp838_70 (select ARGNAME_output_padding_NAMEEND_VAL temp838_69)))
(assert (= temp838_71 #x0000000000000000))
(assert (= temp838_72 #x0000000000000001))
(assert (= temp838_73 temp838_72))
(assert (= temp838_74 (select ARGNAME_output_padding_NAMEEND_VAL temp838_73)))
(assert (= temp838_75 #x0000000000000000))
(assert (= temp838_76 #x0000000000000002))
(assert (= temp838_77 temp838_76))
(assert (= temp838_78 (select ARGNAME_output_padding_NAMEEND_VAL temp838_77)))
(assert (= temp838_79 #x0000000000000000))
(assert (= temp838_80 #x0000000000000003))
(assert (= temp838_81 temp838_80))
(assert (= temp838_82 (select ARGNAME_output_padding_NAMEEND_VAL temp838_81)))
(assert (= temp838_83 #x0000000000000000))
(assert (= temp838_84 #x0000000000000004))
(assert (= temp838_85 temp838_84))
(assert (= temp838_86 (select ARGNAME_output_padding_NAMEEND_VAL temp838_85)))
(assert (= temp838_87 #x0000000000000000))
(assert (= temp838_88 #x0000000000000005))
(assert (= temp838_89 temp838_88))
(assert (= temp838_90 (select ARGNAME_output_padding_NAMEEND_VAL temp838_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp838_70 temp838_67)
             (bvslt temp838_74 temp838_71)
             (bvslt temp838_78 temp838_75)
             (bvslt temp838_82 temp838_79)
             (bvslt temp838_86 temp838_83)
             (bvslt temp838_90 temp838_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_91 #x0000000000000000))
(assert (= var1322797 temp838_91))
(assert (= temp838_92 #x0000000000000000))
(assert (= temp838_93 temp838_92))
(assert (= temp838_94 (select ARGNAME_stride_NAMEEND_VAL temp838_93)))
(assert (= temp838_95 #x0000000000000001))
(assert (= temp838_96 temp838_95))
(assert (= temp838_97 (select ARGNAME_stride_NAMEEND_VAL temp838_96)))
(assert (= temp838_98 #x0000000000000002))
(assert (= temp838_99 temp838_98))
(assert (= temp838_100 (select ARGNAME_stride_NAMEEND_VAL temp838_99)))
(assert (= temp838_101 #x0000000000000003))
(assert (= temp838_102 temp838_101))
(assert (= temp838_103 (select ARGNAME_stride_NAMEEND_VAL temp838_102)))
(assert (= temp838_104 #x0000000000000004))
(assert (= temp838_105 temp838_104))
(assert (= temp838_106 (select ARGNAME_stride_NAMEEND_VAL temp838_105)))
(assert (= temp838_107 #x0000000000000005))
(assert (= temp838_108 temp838_107))
(assert (= temp838_109 (select ARGNAME_stride_NAMEEND_VAL temp838_108)))
(assert (= temp838_110 #x0000000000000000))
(assert (= temp838_111 #x0000000000000000))
(assert (= temp838_112 temp838_111))
(assert (= temp838_113 (select ARGNAME_stride_NAMEEND_VAL temp838_112)))
(assert (= temp838_114 #x0000000000000000))
(assert (= temp838_115 #x0000000000000001))
(assert (= temp838_116 temp838_115))
(assert (= temp838_117 (select ARGNAME_stride_NAMEEND_VAL temp838_116)))
(assert (= temp838_118 #x0000000000000000))
(assert (= temp838_119 #x0000000000000002))
(assert (= temp838_120 temp838_119))
(assert (= temp838_121 (select ARGNAME_stride_NAMEEND_VAL temp838_120)))
(assert (= temp838_122 #x0000000000000000))
(assert (= temp838_123 #x0000000000000003))
(assert (= temp838_124 temp838_123))
(assert (= temp838_125 (select ARGNAME_stride_NAMEEND_VAL temp838_124)))
(assert (= temp838_126 #x0000000000000000))
(assert (= temp838_127 #x0000000000000004))
(assert (= temp838_128 temp838_127))
(assert (= temp838_129 (select ARGNAME_stride_NAMEEND_VAL temp838_128)))
(assert (= temp838_130 #x0000000000000000))
(assert (= temp838_131 #x0000000000000005))
(assert (= temp838_132 temp838_131))
(assert (= temp838_133 (select ARGNAME_stride_NAMEEND_VAL temp838_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp838_113 temp838_110)
             (bvsle temp838_117 temp838_114)
             (bvsle temp838_121 temp838_118)
             (bvsle temp838_125 temp838_122)
             (bvsle temp838_129 temp838_126)
             (bvsle temp838_133 temp838_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_134 #x0000000000000000))
(assert (= var1322807 temp838_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_135 #x0000000000000001))
(assert (= var1322819 temp838_135))
(assert (= temp838_136 #x0000000000000000))
(assert (= var1310898 temp838_136))
(assert (= temp838_137 #x0000000000000000))
(assert (= temp838_138 temp838_137))
(assert (= temp838_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_138)))
(assert (= temp838_140 #x0000000000000001))
(assert (= temp838_141 temp838_140))
(assert (= temp838_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_141)))
(assert (= temp838_143 #x0000000000000002))
(assert (= temp838_144 temp838_143))
(assert (= temp838_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_144)))
(assert (= temp838_146 #x0000000000000003))
(assert (= temp838_147 temp838_146))
(assert (= temp838_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_147)))
(assert (= temp838_149 #x0000000000000004))
(assert (= temp838_150 temp838_149))
(assert (= temp838_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_150)))
(assert (= temp838_152 #x0000000000000005))
(assert (= temp838_153 temp838_152))
(assert (= temp838_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_153)))
(assert (= temp838_156 var1310898))
(assert (= temp838_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_156)))
(assert (= temp838_155 temp838_157))
(assert (= var1322852
   (ite (bvslt temp838_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_158 #x0000000000000000))
(assert (= var1322852 temp838_158))
(assert (= temp838_159 #x0000000000000000))
(assert (= var1310898 temp838_159))
(assert (= temp838_161 var1310898))
(assert (= temp838_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_161)))
(assert (= temp838_160 temp838_162))
(assert (= var1322874 (bvsmod temp838_160 ARGNAME_groups_NAMEEND)))
(assert (= temp838_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp838_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_164 #x0000000000000001))
(assert (= var1322875 temp838_164))
(assert (= temp838_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp838_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_166 #x0000000000000001))
(assert (= var1322895 temp838_166))
(assert (= temp838_167 #x0000000000000001))
(assert (= var1311786 temp838_167))
(assert (= temp838_168 #x0000000000000000))
(assert (= temp838_169 temp838_168))
(assert (= temp838_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_169)))
(assert (= temp838_171 #x0000000000000001))
(assert (= temp838_172 temp838_171))
(assert (= temp838_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_172)))
(assert (= temp838_174 #x0000000000000002))
(assert (= temp838_175 temp838_174))
(assert (= temp838_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_175)))
(assert (= temp838_177 #x0000000000000003))
(assert (= temp838_178 temp838_177))
(assert (= temp838_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_178)))
(assert (= temp838_180 #x0000000000000004))
(assert (= temp838_181 temp838_180))
(assert (= temp838_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_181)))
(assert (= temp838_183 #x0000000000000005))
(assert (= temp838_184 temp838_183))
(assert (= temp838_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_184)))
(assert (= temp838_186 #x0000000000000000))
(assert (= temp838_187
   (ite (bvslt var1311786 temp838_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp838_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_187)))
(assert (= var1322903 temp838_188))
(assert (bvslt (ite (bvslt var1311786 temp838_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp838_189 #x0000000000000001))
(assert (= var1311786 temp838_189))
(assert (= temp838_191 var1311786))
(assert (= temp838_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_191)))
(assert (= temp838_190 temp838_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp838_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_193 #x0000000000000001))
(assert (= var1322908 temp838_193))
(assert (= temp838_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp838_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_195 #x0000000000000001))
(assert (= var1322975 temp838_195))
(assert (= temp838_196 #x0000000000000000))
(assert (= var1310898 temp838_196))
(assert (= temp838_197 #x0000000000000000))
(assert (= temp838_198 temp838_197))
(assert (= temp838_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp838_198)))
(assert (= temp838_200 #x0000000000000001))
(assert (= temp838_201 temp838_200))
(assert (= temp838_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp838_201)))
(assert (= temp838_203 #x0000000000000002))
(assert (= temp838_204 temp838_203))
(assert (= temp838_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp838_204)))
(assert (= temp838_206 #x0000000000000003))
(assert (= temp838_207 temp838_206))
(assert (= temp838_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp838_207)))
(assert (= temp838_209 #x0000000000000004))
(assert (= temp838_210 temp838_209))
(assert (= temp838_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp838_210)))
(assert (= temp838_212 #x0000000000000005))
(assert (= temp838_213 temp838_212))
(assert (= temp838_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp838_213)))
(assert (= temp838_215 #x0000000000000000))
(assert (= temp838_216
   (ite (bvslt var1310898 temp838_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp838_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp838_216)))
(assert (= var1322977 temp838_217))
(assert (bvslt (ite (bvslt var1310898 temp838_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp838_218 #x0000000000000000))
(assert (= var1310898 temp838_218))
(assert (= temp838_220 var1310898))
(assert (= temp838_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_220)))
(assert (= temp838_219 temp838_221))
(assert (= var1322980
   (ite (= var1322977 temp838_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_222 #x0000000000000001))
(assert (= var1322980 temp838_222))
(assert (= temp838_223 #x0000000000000002))
(assert (= var1848169 temp838_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp838_225 #x0000000000000001))
(assert (= var1323065 temp838_225))
(assert (= temp838_226 #x0000000000000001))
(assert (= var3486735 temp838_226))
(assert (= temp838_227 #x0000000000000001))
(assert (= var3814415 temp838_227))
(assert (= temp838_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp838_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_229 #x0000000000000001))
(assert (= var79986 temp838_229))
(assert (= temp838_230 #x0000000000000001))
(assert (= var80116 temp838_230))
(assert (= var4796905 var80116))
(assert (= temp838_231 #x0000000000000000))
(assert (= var4784306 temp838_231))
(assert (= temp838_232 #x0000000000000000))
(assert (= temp838_233
   (ite (bvslt var4784306 temp838_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp838_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_233)))
(assert (= var4796924 temp838_234))
(assert (bvslt (ite (bvslt var4784306 temp838_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp838_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp838_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_236 #x0000000000000001))
(assert (= var4796925 temp838_236))
(assert (= temp838_237 #x0000000000000000))
(assert (= var4996927 temp838_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp838_238 #x0000000000000002))
(assert (= var5125763 temp838_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_239 #x0000000000000000))
(assert (= var5191324 temp838_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp838_240 #x0000000000000000))
(assert (= var80889
   (ite (distinct ARGNAME_benchmark_NAMEEND temp838_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_241 #x0000000000000000))
(assert (= var80891
   (ite (distinct ARGNAME_deterministic_NAMEEND temp838_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_242 #x0000000000000001))
(assert (= var79986 temp838_242))
(model-add temp838_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp838_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp838_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






