(declare-fun temp832_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp832_2 () (_ BitVec 64))
(declare-fun temp832_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp832_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp832_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp832_6 () (_ BitVec 64))
(declare-fun temp832_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp832_8 () (_ BitVec 64))
(declare-fun temp832_9 () (_ BitVec 64))
(declare-fun temp832_10 () (_ BitVec 64))
(declare-fun temp832_11 () (_ BitVec 64))
(declare-fun temp832_12 () (_ BitVec 64))
(declare-fun temp832_13 () (_ BitVec 64))
(declare-fun temp832_14 () (_ BitVec 64))
(declare-fun temp832_15 () (_ BitVec 64))
(declare-fun temp832_16 () (_ BitVec 64))
(declare-fun temp832_17 () (_ BitVec 64))
(declare-fun temp832_18 () (_ BitVec 64))
(declare-fun temp832_19 () (_ BitVec 64))
(declare-fun temp832_20 () (_ BitVec 64))
(declare-fun temp832_21 () (_ BitVec 64))
(declare-fun temp832_22 () (_ BitVec 64))
(declare-fun temp832_23 () (_ BitVec 64))
(declare-fun temp832_24 () (_ BitVec 64))
(declare-fun temp832_25 () (_ BitVec 64))
(declare-fun temp832_26 () (_ BitVec 64))
(declare-fun temp832_27 () (_ BitVec 64))
(declare-fun temp832_28 () (_ BitVec 64))
(declare-fun temp832_29 () (_ BitVec 64))
(declare-fun temp832_30 () (_ BitVec 64))
(declare-fun temp832_31 () (_ BitVec 64))
(declare-fun temp832_32 () (_ BitVec 64))
(declare-fun temp832_33 () (_ BitVec 64))
(declare-fun temp832_34 () (_ BitVec 64))
(declare-fun temp832_35 () (_ BitVec 64))
(declare-fun temp832_36 () (_ BitVec 64))
(declare-fun temp832_37 () (_ BitVec 64))
(declare-fun temp832_38 () (_ BitVec 64))
(declare-fun temp832_39 () (_ BitVec 64))
(declare-fun temp832_40 () (_ BitVec 64))
(declare-fun temp832_41 () (_ BitVec 64))
(declare-fun temp832_42 () (_ BitVec 64))
(declare-fun temp832_43 () (_ BitVec 64))
(declare-fun temp832_44 () (_ BitVec 64))
(declare-fun temp832_45 () (_ BitVec 64))
(declare-fun temp832_46 () (_ BitVec 64))
(declare-fun temp832_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp832_48 () (_ BitVec 64))
(declare-fun temp832_49 () (_ BitVec 64))
(declare-fun temp832_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp832_51 () (_ BitVec 64))
(declare-fun temp832_52 () (_ BitVec 64))
(declare-fun temp832_53 () (_ BitVec 64))
(declare-fun temp832_54 () (_ BitVec 64))
(declare-fun temp832_55 () (_ BitVec 64))
(declare-fun temp832_56 () (_ BitVec 64))
(declare-fun temp832_57 () (_ BitVec 64))
(declare-fun temp832_58 () (_ BitVec 64))
(declare-fun temp832_59 () (_ BitVec 64))
(declare-fun temp832_60 () (_ BitVec 64))
(declare-fun temp832_61 () (_ BitVec 64))
(declare-fun temp832_62 () (_ BitVec 64))
(declare-fun temp832_63 () (_ BitVec 64))
(declare-fun temp832_64 () (_ BitVec 64))
(declare-fun temp832_65 () (_ BitVec 64))
(declare-fun temp832_66 () (_ BitVec 64))
(declare-fun temp832_67 () (_ BitVec 64))
(declare-fun temp832_68 () (_ BitVec 64))
(declare-fun temp832_69 () (_ BitVec 64))
(declare-fun temp832_70 () (_ BitVec 64))
(declare-fun temp832_71 () (_ BitVec 64))
(declare-fun temp832_72 () (_ BitVec 64))
(declare-fun temp832_73 () (_ BitVec 64))
(declare-fun temp832_74 () (_ BitVec 64))
(declare-fun temp832_75 () (_ BitVec 64))
(declare-fun temp832_76 () (_ BitVec 64))
(declare-fun temp832_77 () (_ BitVec 64))
(declare-fun temp832_78 () (_ BitVec 64))
(declare-fun temp832_79 () (_ BitVec 64))
(declare-fun temp832_80 () (_ BitVec 64))
(declare-fun temp832_81 () (_ BitVec 64))
(declare-fun temp832_82 () (_ BitVec 64))
(declare-fun temp832_83 () (_ BitVec 64))
(declare-fun temp832_84 () (_ BitVec 64))
(declare-fun temp832_85 () (_ BitVec 64))
(declare-fun temp832_86 () (_ BitVec 64))
(declare-fun temp832_87 () (_ BitVec 64))
(declare-fun temp832_88 () (_ BitVec 64))
(declare-fun temp832_89 () (_ BitVec 64))
(declare-fun temp832_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp832_91 () (_ BitVec 64))
(declare-fun temp832_92 () (_ BitVec 64))
(declare-fun temp832_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp832_94 () (_ BitVec 64))
(declare-fun temp832_95 () (_ BitVec 64))
(declare-fun temp832_96 () (_ BitVec 64))
(declare-fun temp832_97 () (_ BitVec 64))
(declare-fun temp832_98 () (_ BitVec 64))
(declare-fun temp832_99 () (_ BitVec 64))
(declare-fun temp832_100 () (_ BitVec 64))
(declare-fun temp832_101 () (_ BitVec 64))
(declare-fun temp832_102 () (_ BitVec 64))
(declare-fun temp832_103 () (_ BitVec 64))
(declare-fun temp832_104 () (_ BitVec 64))
(declare-fun temp832_105 () (_ BitVec 64))
(declare-fun temp832_106 () (_ BitVec 64))
(declare-fun temp832_107 () (_ BitVec 64))
(declare-fun temp832_108 () (_ BitVec 64))
(declare-fun temp832_109 () (_ BitVec 64))
(declare-fun temp832_110 () (_ BitVec 64))
(declare-fun temp832_111 () (_ BitVec 64))
(declare-fun temp832_112 () (_ BitVec 64))
(declare-fun temp832_113 () (_ BitVec 64))
(declare-fun temp832_114 () (_ BitVec 64))
(declare-fun temp832_115 () (_ BitVec 64))
(declare-fun temp832_116 () (_ BitVec 64))
(declare-fun temp832_117 () (_ BitVec 64))
(declare-fun temp832_118 () (_ BitVec 64))
(declare-fun temp832_119 () (_ BitVec 64))
(declare-fun temp832_120 () (_ BitVec 64))
(declare-fun temp832_121 () (_ BitVec 64))
(declare-fun temp832_122 () (_ BitVec 64))
(declare-fun temp832_123 () (_ BitVec 64))
(declare-fun temp832_124 () (_ BitVec 64))
(declare-fun temp832_125 () (_ BitVec 64))
(declare-fun temp832_126 () (_ BitVec 64))
(declare-fun temp832_127 () (_ BitVec 64))
(declare-fun temp832_128 () (_ BitVec 64))
(declare-fun temp832_129 () (_ BitVec 64))
(declare-fun temp832_130 () (_ BitVec 64))
(declare-fun temp832_131 () (_ BitVec 64))
(declare-fun temp832_132 () (_ BitVec 64))
(declare-fun temp832_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp832_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp832_135 () (_ BitVec 64))
(declare-fun temp832_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp832_137 () (_ BitVec 64))
(declare-fun temp832_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp832_139 () (_ BitVec 64))
(declare-fun temp832_140 () (_ BitVec 64))
(declare-fun temp832_141 () (_ BitVec 64))
(declare-fun temp832_142 () (_ BitVec 64))
(declare-fun temp832_143 () (_ BitVec 64))
(declare-fun temp832_144 () (_ BitVec 64))
(declare-fun temp832_145 () (_ BitVec 64))
(declare-fun temp832_146 () (_ BitVec 64))
(declare-fun temp832_147 () (_ BitVec 64))
(declare-fun temp832_148 () (_ BitVec 64))
(declare-fun temp832_149 () (_ BitVec 64))
(declare-fun temp832_150 () (_ BitVec 64))
(declare-fun temp832_151 () (_ BitVec 64))
(declare-fun temp832_152 () (_ BitVec 64))
(declare-fun temp832_153 () (_ BitVec 64))
(declare-fun temp832_154 () (_ BitVec 64))
(declare-fun temp832_156 () (_ BitVec 64))
(declare-fun temp832_157 () (_ BitVec 64))
(declare-fun temp832_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp832_158 () (_ BitVec 64))
(declare-fun temp832_159 () (_ BitVec 64))
(declare-fun temp832_161 () (_ BitVec 64))
(declare-fun temp832_162 () (_ BitVec 64))
(declare-fun temp832_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp832_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp832_164 () (_ BitVec 64))
(declare-fun temp832_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp832_166 () (_ BitVec 64))
(declare-fun temp832_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp832_168 () (_ BitVec 64))
(declare-fun temp832_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp832_170 () (_ BitVec 64))
(declare-fun temp832_171 () (_ BitVec 64))
(declare-fun temp832_172 () (_ BitVec 64))
(declare-fun temp832_173 () (_ BitVec 64))
(declare-fun temp832_174 () (_ BitVec 64))
(declare-fun temp832_175 () (_ BitVec 64))
(declare-fun temp832_176 () (_ BitVec 64))
(declare-fun temp832_177 () (_ BitVec 64))
(declare-fun temp832_178 () (_ BitVec 64))
(declare-fun temp832_179 () (_ BitVec 64))
(declare-fun temp832_180 () (_ BitVec 64))
(declare-fun temp832_181 () (_ BitVec 64))
(declare-fun temp832_182 () (_ BitVec 64))
(declare-fun temp832_183 () (_ BitVec 64))
(declare-fun temp832_184 () (_ BitVec 64))
(declare-fun temp832_185 () (_ BitVec 64))
(declare-fun temp832_186 () (_ BitVec 64))
(declare-fun temp832_187 () (_ BitVec 64))
(declare-fun temp832_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp832_189 () (_ BitVec 64))
(declare-fun temp832_191 () (_ BitVec 64))
(declare-fun temp832_192 () (_ BitVec 64))
(declare-fun temp832_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp832_193 () (_ BitVec 64))
(declare-fun temp832_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp832_195 () (_ BitVec 64))
(declare-fun temp832_196 () (_ BitVec 64))
(declare-fun temp832_197 () (_ BitVec 64))
(declare-fun temp832_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp832_199 () (_ BitVec 64))
(declare-fun temp832_200 () (_ BitVec 64))
(declare-fun temp832_201 () (_ BitVec 64))
(declare-fun temp832_202 () (_ BitVec 64))
(declare-fun temp832_203 () (_ BitVec 64))
(declare-fun temp832_204 () (_ BitVec 64))
(declare-fun temp832_205 () (_ BitVec 64))
(declare-fun temp832_206 () (_ BitVec 64))
(declare-fun temp832_207 () (_ BitVec 64))
(declare-fun temp832_208 () (_ BitVec 64))
(declare-fun temp832_209 () (_ BitVec 64))
(declare-fun temp832_210 () (_ BitVec 64))
(declare-fun temp832_211 () (_ BitVec 64))
(declare-fun temp832_212 () (_ BitVec 64))
(declare-fun temp832_213 () (_ BitVec 64))
(declare-fun temp832_214 () (_ BitVec 64))
(declare-fun temp832_215 () (_ BitVec 64))
(declare-fun temp832_216 () (_ BitVec 64))
(declare-fun temp832_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp832_218 () (_ BitVec 64))
(declare-fun temp832_220 () (_ BitVec 64))
(declare-fun temp832_221 () (_ BitVec 64))
(declare-fun temp832_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp832_222 () (_ BitVec 64))
(declare-fun temp832_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp832_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp832_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp832_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp832_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp832_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp832_229 () (_ BitVec 64))
(declare-fun temp832_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp832_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp832_232 () (_ BitVec 64))
(declare-fun temp832_233 () (_ BitVec 64))
(declare-fun temp832_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp832_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp832_236 () (_ BitVec 64))
(declare-fun temp832_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp832_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp832_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp832_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80889 () (_ BitVec 64))
(declare-fun temp832_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80891 () (_ BitVec 64))
(declare-fun temp832_242 () (_ BitVec 64))
(assert (= temp832_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp832_1)))
(assert (= temp832_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp832_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_3 #x0000000000000000))
(assert (= var79869 temp832_3))
(assert (= temp832_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp832_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_5 #x0000000000000000))
(assert (= var79914 temp832_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp832_6 #x0000000000000000))
(assert (= temp832_7 temp832_6))
(assert (= temp832_8 (select ARGNAME_padding_NAMEEND_VAL temp832_7)))
(assert (= temp832_9 #x0000000000000001))
(assert (= temp832_10 temp832_9))
(assert (= temp832_11 (select ARGNAME_padding_NAMEEND_VAL temp832_10)))
(assert (= temp832_12 #x0000000000000002))
(assert (= temp832_13 temp832_12))
(assert (= temp832_14 (select ARGNAME_padding_NAMEEND_VAL temp832_13)))
(assert (= temp832_15 #x0000000000000003))
(assert (= temp832_16 temp832_15))
(assert (= temp832_17 (select ARGNAME_padding_NAMEEND_VAL temp832_16)))
(assert (= temp832_18 #x0000000000000004))
(assert (= temp832_19 temp832_18))
(assert (= temp832_20 (select ARGNAME_padding_NAMEEND_VAL temp832_19)))
(assert (= temp832_21 #x0000000000000005))
(assert (= temp832_22 temp832_21))
(assert (= temp832_23 (select ARGNAME_padding_NAMEEND_VAL temp832_22)))
(assert (= temp832_24 #x0000000000000000))
(assert (= temp832_25 #x0000000000000000))
(assert (= temp832_26 temp832_25))
(assert (= temp832_27 (select ARGNAME_padding_NAMEEND_VAL temp832_26)))
(assert (= temp832_28 #x0000000000000000))
(assert (= temp832_29 #x0000000000000001))
(assert (= temp832_30 temp832_29))
(assert (= temp832_31 (select ARGNAME_padding_NAMEEND_VAL temp832_30)))
(assert (= temp832_32 #x0000000000000000))
(assert (= temp832_33 #x0000000000000002))
(assert (= temp832_34 temp832_33))
(assert (= temp832_35 (select ARGNAME_padding_NAMEEND_VAL temp832_34)))
(assert (= temp832_36 #x0000000000000000))
(assert (= temp832_37 #x0000000000000003))
(assert (= temp832_38 temp832_37))
(assert (= temp832_39 (select ARGNAME_padding_NAMEEND_VAL temp832_38)))
(assert (= temp832_40 #x0000000000000000))
(assert (= temp832_41 #x0000000000000004))
(assert (= temp832_42 temp832_41))
(assert (= temp832_43 (select ARGNAME_padding_NAMEEND_VAL temp832_42)))
(assert (= temp832_44 #x0000000000000000))
(assert (= temp832_45 #x0000000000000005))
(assert (= temp832_46 temp832_45))
(assert (= temp832_47 (select ARGNAME_padding_NAMEEND_VAL temp832_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp832_27 temp832_24)
             (bvslt temp832_31 temp832_28)
             (bvslt temp832_35 temp832_32)
             (bvslt temp832_39 temp832_36)
             (bvslt temp832_43 temp832_40)
             (bvslt temp832_47 temp832_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_48 #x0000000000000000))
(assert (= var1322786 temp832_48))
(assert (= temp832_49 #x0000000000000000))
(assert (= temp832_50 temp832_49))
(assert (= temp832_51 (select ARGNAME_output_padding_NAMEEND_VAL temp832_50)))
(assert (= temp832_52 #x0000000000000001))
(assert (= temp832_53 temp832_52))
(assert (= temp832_54 (select ARGNAME_output_padding_NAMEEND_VAL temp832_53)))
(assert (= temp832_55 #x0000000000000002))
(assert (= temp832_56 temp832_55))
(assert (= temp832_57 (select ARGNAME_output_padding_NAMEEND_VAL temp832_56)))
(assert (= temp832_58 #x0000000000000003))
(assert (= temp832_59 temp832_58))
(assert (= temp832_60 (select ARGNAME_output_padding_NAMEEND_VAL temp832_59)))
(assert (= temp832_61 #x0000000000000004))
(assert (= temp832_62 temp832_61))
(assert (= temp832_63 (select ARGNAME_output_padding_NAMEEND_VAL temp832_62)))
(assert (= temp832_64 #x0000000000000005))
(assert (= temp832_65 temp832_64))
(assert (= temp832_66 (select ARGNAME_output_padding_NAMEEND_VAL temp832_65)))
(assert (= temp832_67 #x0000000000000000))
(assert (= temp832_68 #x0000000000000000))
(assert (= temp832_69 temp832_68))
(assert (= temp832_70 (select ARGNAME_output_padding_NAMEEND_VAL temp832_69)))
(assert (= temp832_71 #x0000000000000000))
(assert (= temp832_72 #x0000000000000001))
(assert (= temp832_73 temp832_72))
(assert (= temp832_74 (select ARGNAME_output_padding_NAMEEND_VAL temp832_73)))
(assert (= temp832_75 #x0000000000000000))
(assert (= temp832_76 #x0000000000000002))
(assert (= temp832_77 temp832_76))
(assert (= temp832_78 (select ARGNAME_output_padding_NAMEEND_VAL temp832_77)))
(assert (= temp832_79 #x0000000000000000))
(assert (= temp832_80 #x0000000000000003))
(assert (= temp832_81 temp832_80))
(assert (= temp832_82 (select ARGNAME_output_padding_NAMEEND_VAL temp832_81)))
(assert (= temp832_83 #x0000000000000000))
(assert (= temp832_84 #x0000000000000004))
(assert (= temp832_85 temp832_84))
(assert (= temp832_86 (select ARGNAME_output_padding_NAMEEND_VAL temp832_85)))
(assert (= temp832_87 #x0000000000000000))
(assert (= temp832_88 #x0000000000000005))
(assert (= temp832_89 temp832_88))
(assert (= temp832_90 (select ARGNAME_output_padding_NAMEEND_VAL temp832_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp832_70 temp832_67)
             (bvslt temp832_74 temp832_71)
             (bvslt temp832_78 temp832_75)
             (bvslt temp832_82 temp832_79)
             (bvslt temp832_86 temp832_83)
             (bvslt temp832_90 temp832_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_91 #x0000000000000000))
(assert (= var1322797 temp832_91))
(assert (= temp832_92 #x0000000000000000))
(assert (= temp832_93 temp832_92))
(assert (= temp832_94 (select ARGNAME_stride_NAMEEND_VAL temp832_93)))
(assert (= temp832_95 #x0000000000000001))
(assert (= temp832_96 temp832_95))
(assert (= temp832_97 (select ARGNAME_stride_NAMEEND_VAL temp832_96)))
(assert (= temp832_98 #x0000000000000002))
(assert (= temp832_99 temp832_98))
(assert (= temp832_100 (select ARGNAME_stride_NAMEEND_VAL temp832_99)))
(assert (= temp832_101 #x0000000000000003))
(assert (= temp832_102 temp832_101))
(assert (= temp832_103 (select ARGNAME_stride_NAMEEND_VAL temp832_102)))
(assert (= temp832_104 #x0000000000000004))
(assert (= temp832_105 temp832_104))
(assert (= temp832_106 (select ARGNAME_stride_NAMEEND_VAL temp832_105)))
(assert (= temp832_107 #x0000000000000005))
(assert (= temp832_108 temp832_107))
(assert (= temp832_109 (select ARGNAME_stride_NAMEEND_VAL temp832_108)))
(assert (= temp832_110 #x0000000000000000))
(assert (= temp832_111 #x0000000000000000))
(assert (= temp832_112 temp832_111))
(assert (= temp832_113 (select ARGNAME_stride_NAMEEND_VAL temp832_112)))
(assert (= temp832_114 #x0000000000000000))
(assert (= temp832_115 #x0000000000000001))
(assert (= temp832_116 temp832_115))
(assert (= temp832_117 (select ARGNAME_stride_NAMEEND_VAL temp832_116)))
(assert (= temp832_118 #x0000000000000000))
(assert (= temp832_119 #x0000000000000002))
(assert (= temp832_120 temp832_119))
(assert (= temp832_121 (select ARGNAME_stride_NAMEEND_VAL temp832_120)))
(assert (= temp832_122 #x0000000000000000))
(assert (= temp832_123 #x0000000000000003))
(assert (= temp832_124 temp832_123))
(assert (= temp832_125 (select ARGNAME_stride_NAMEEND_VAL temp832_124)))
(assert (= temp832_126 #x0000000000000000))
(assert (= temp832_127 #x0000000000000004))
(assert (= temp832_128 temp832_127))
(assert (= temp832_129 (select ARGNAME_stride_NAMEEND_VAL temp832_128)))
(assert (= temp832_130 #x0000000000000000))
(assert (= temp832_131 #x0000000000000005))
(assert (= temp832_132 temp832_131))
(assert (= temp832_133 (select ARGNAME_stride_NAMEEND_VAL temp832_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp832_113 temp832_110)
             (bvsle temp832_117 temp832_114)
             (bvsle temp832_121 temp832_118)
             (bvsle temp832_125 temp832_122)
             (bvsle temp832_129 temp832_126)
             (bvsle temp832_133 temp832_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_134 #x0000000000000000))
(assert (= var1322807 temp832_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_135 #x0000000000000001))
(assert (= var1322819 temp832_135))
(assert (= temp832_136 #x0000000000000000))
(assert (= var1310898 temp832_136))
(assert (= temp832_137 #x0000000000000000))
(assert (= temp832_138 temp832_137))
(assert (= temp832_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_138)))
(assert (= temp832_140 #x0000000000000001))
(assert (= temp832_141 temp832_140))
(assert (= temp832_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_141)))
(assert (= temp832_143 #x0000000000000002))
(assert (= temp832_144 temp832_143))
(assert (= temp832_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_144)))
(assert (= temp832_146 #x0000000000000003))
(assert (= temp832_147 temp832_146))
(assert (= temp832_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_147)))
(assert (= temp832_149 #x0000000000000004))
(assert (= temp832_150 temp832_149))
(assert (= temp832_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_150)))
(assert (= temp832_152 #x0000000000000005))
(assert (= temp832_153 temp832_152))
(assert (= temp832_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_153)))
(assert (= temp832_156 var1310898))
(assert (= temp832_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_156)))
(assert (= temp832_155 temp832_157))
(assert (= var1322852
   (ite (bvslt temp832_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_158 #x0000000000000000))
(assert (= var1322852 temp832_158))
(assert (= temp832_159 #x0000000000000000))
(assert (= var1310898 temp832_159))
(assert (= temp832_161 var1310898))
(assert (= temp832_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_161)))
(assert (= temp832_160 temp832_162))
(assert (= var1322874 (bvsmod temp832_160 ARGNAME_groups_NAMEEND)))
(assert (= temp832_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp832_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp832_164 #x0000000000000001))
(assert (= var1322875 temp832_164))
(assert (= temp832_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp832_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_166 #x0000000000000001))
(assert (= var1322895 temp832_166))
(assert (= temp832_167 #x0000000000000001))
(assert (= var1311786 temp832_167))
(assert (= temp832_168 #x0000000000000000))
(assert (= temp832_169 temp832_168))
(assert (= temp832_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp832_169)))
(assert (= temp832_171 #x0000000000000001))
(assert (= temp832_172 temp832_171))
(assert (= temp832_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp832_172)))
(assert (= temp832_174 #x0000000000000002))
(assert (= temp832_175 temp832_174))
(assert (= temp832_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp832_175)))
(assert (= temp832_177 #x0000000000000003))
(assert (= temp832_178 temp832_177))
(assert (= temp832_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp832_178)))
(assert (= temp832_180 #x0000000000000004))
(assert (= temp832_181 temp832_180))
(assert (= temp832_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp832_181)))
(assert (= temp832_183 #x0000000000000005))
(assert (= temp832_184 temp832_183))
(assert (= temp832_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp832_184)))
(assert (= temp832_186 #x0000000000000000))
(assert (= temp832_187
   (ite (bvslt var1311786 temp832_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp832_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp832_187)))
(assert (= var1322903 temp832_188))
(assert (bvslt (ite (bvslt var1311786 temp832_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp832_189 #x0000000000000001))
(assert (= var1311786 temp832_189))
(assert (= temp832_191 var1311786))
(assert (= temp832_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_191)))
(assert (= temp832_190 temp832_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp832_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp832_193 #x0000000000000001))
(assert (= var1322908 temp832_193))
(assert (= temp832_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp832_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_195 #x0000000000000001))
(assert (= var1322975 temp832_195))
(assert (= temp832_196 #x0000000000000000))
(assert (= var1310898 temp832_196))
(assert (= temp832_197 #x0000000000000000))
(assert (= temp832_198 temp832_197))
(assert (= temp832_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp832_198)))
(assert (= temp832_200 #x0000000000000001))
(assert (= temp832_201 temp832_200))
(assert (= temp832_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp832_201)))
(assert (= temp832_203 #x0000000000000002))
(assert (= temp832_204 temp832_203))
(assert (= temp832_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp832_204)))
(assert (= temp832_206 #x0000000000000003))
(assert (= temp832_207 temp832_206))
(assert (= temp832_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp832_207)))
(assert (= temp832_209 #x0000000000000004))
(assert (= temp832_210 temp832_209))
(assert (= temp832_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp832_210)))
(assert (= temp832_212 #x0000000000000005))
(assert (= temp832_213 temp832_212))
(assert (= temp832_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp832_213)))
(assert (= temp832_215 #x0000000000000000))
(assert (= temp832_216
   (ite (bvslt var1310898 temp832_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp832_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp832_216)))
(assert (= var1322977 temp832_217))
(assert (bvslt (ite (bvslt var1310898 temp832_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp832_218 #x0000000000000000))
(assert (= var1310898 temp832_218))
(assert (= temp832_220 var1310898))
(assert (= temp832_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp832_220)))
(assert (= temp832_219 temp832_221))
(assert (= var1322980
   (ite (= var1322977 temp832_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp832_222 #x0000000000000001))
(assert (= var1322980 temp832_222))
(assert (= temp832_223 #x0000000000000002))
(assert (= var1848169 temp832_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp832_225 #x0000000000000001))
(assert (= var1323065 temp832_225))
(assert (= temp832_226 #x0000000000000001))
(assert (= var3486735 temp832_226))
(assert (= temp832_227 #x0000000000000001))
(assert (= var3814415 temp832_227))
(assert (= temp832_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp832_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_229 #x0000000000000001))
(assert (= var79986 temp832_229))
(assert (= temp832_230 #x0000000000000001))
(assert (= var80116 temp832_230))
(assert (= var4796905 var80116))
(assert (= temp832_231 #x0000000000000000))
(assert (= var4784306 temp832_231))
(assert (= temp832_232 #x0000000000000000))
(assert (= temp832_233
   (ite (bvslt var4784306 temp832_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp832_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp832_233)))
(assert (= var4796924 temp832_234))
(assert (bvslt (ite (bvslt var4784306 temp832_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp832_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp832_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp832_236 #x0000000000000001))
(assert (= var4796925 temp832_236))
(assert (= temp832_237 #x0000000000000000))
(assert (= var4996927 temp832_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp832_238 #x0000000000000002))
(assert (= var5125763 temp832_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_239 #x0000000000000000))
(assert (= var5191324 temp832_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp832_240 #x0000000000000000))
(assert (= var80889
   (ite (distinct ARGNAME_benchmark_NAMEEND temp832_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_241 #x0000000000000000))
(assert (= var80891
   (ite (distinct ARGNAME_deterministic_NAMEEND temp832_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp832_242 #x0000000000000001))
(assert (= var79986 temp832_242))
(model-add temp832_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp832_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp832_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






