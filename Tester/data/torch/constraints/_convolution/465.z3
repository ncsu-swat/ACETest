(declare-fun temp618_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp618_2 () (_ BitVec 64))
(declare-fun temp618_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp618_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp618_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp618_6 () (_ BitVec 64))
(declare-fun temp618_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp618_8 () (_ BitVec 64))
(declare-fun temp618_9 () (_ BitVec 64))
(declare-fun temp618_10 () (_ BitVec 64))
(declare-fun temp618_11 () (_ BitVec 64))
(declare-fun temp618_12 () (_ BitVec 64))
(declare-fun temp618_13 () (_ BitVec 64))
(declare-fun temp618_14 () (_ BitVec 64))
(declare-fun temp618_15 () (_ BitVec 64))
(declare-fun temp618_16 () (_ BitVec 64))
(declare-fun temp618_17 () (_ BitVec 64))
(declare-fun temp618_18 () (_ BitVec 64))
(declare-fun temp618_19 () (_ BitVec 64))
(declare-fun temp618_20 () (_ BitVec 64))
(declare-fun temp618_21 () (_ BitVec 64))
(declare-fun temp618_22 () (_ BitVec 64))
(declare-fun temp618_23 () (_ BitVec 64))
(declare-fun temp618_24 () (_ BitVec 64))
(declare-fun temp618_25 () (_ BitVec 64))
(declare-fun temp618_26 () (_ BitVec 64))
(declare-fun temp618_27 () (_ BitVec 64))
(declare-fun temp618_28 () (_ BitVec 64))
(declare-fun temp618_29 () (_ BitVec 64))
(declare-fun temp618_30 () (_ BitVec 64))
(declare-fun temp618_31 () (_ BitVec 64))
(declare-fun temp618_32 () (_ BitVec 64))
(declare-fun temp618_33 () (_ BitVec 64))
(declare-fun temp618_34 () (_ BitVec 64))
(declare-fun temp618_35 () (_ BitVec 64))
(declare-fun temp618_36 () (_ BitVec 64))
(declare-fun temp618_37 () (_ BitVec 64))
(declare-fun temp618_38 () (_ BitVec 64))
(declare-fun temp618_39 () (_ BitVec 64))
(declare-fun temp618_40 () (_ BitVec 64))
(declare-fun temp618_41 () (_ BitVec 64))
(declare-fun temp618_42 () (_ BitVec 64))
(declare-fun temp618_43 () (_ BitVec 64))
(declare-fun temp618_44 () (_ BitVec 64))
(declare-fun temp618_45 () (_ BitVec 64))
(declare-fun temp618_46 () (_ BitVec 64))
(declare-fun temp618_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp618_48 () (_ BitVec 64))
(declare-fun temp618_49 () (_ BitVec 64))
(declare-fun temp618_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp618_51 () (_ BitVec 64))
(declare-fun temp618_52 () (_ BitVec 64))
(declare-fun temp618_53 () (_ BitVec 64))
(declare-fun temp618_54 () (_ BitVec 64))
(declare-fun temp618_55 () (_ BitVec 64))
(declare-fun temp618_56 () (_ BitVec 64))
(declare-fun temp618_57 () (_ BitVec 64))
(declare-fun temp618_58 () (_ BitVec 64))
(declare-fun temp618_59 () (_ BitVec 64))
(declare-fun temp618_60 () (_ BitVec 64))
(declare-fun temp618_61 () (_ BitVec 64))
(declare-fun temp618_62 () (_ BitVec 64))
(declare-fun temp618_63 () (_ BitVec 64))
(declare-fun temp618_64 () (_ BitVec 64))
(declare-fun temp618_65 () (_ BitVec 64))
(declare-fun temp618_66 () (_ BitVec 64))
(declare-fun temp618_67 () (_ BitVec 64))
(declare-fun temp618_68 () (_ BitVec 64))
(declare-fun temp618_69 () (_ BitVec 64))
(declare-fun temp618_70 () (_ BitVec 64))
(declare-fun temp618_71 () (_ BitVec 64))
(declare-fun temp618_72 () (_ BitVec 64))
(declare-fun temp618_73 () (_ BitVec 64))
(declare-fun temp618_74 () (_ BitVec 64))
(declare-fun temp618_75 () (_ BitVec 64))
(declare-fun temp618_76 () (_ BitVec 64))
(declare-fun temp618_77 () (_ BitVec 64))
(declare-fun temp618_78 () (_ BitVec 64))
(declare-fun temp618_79 () (_ BitVec 64))
(declare-fun temp618_80 () (_ BitVec 64))
(declare-fun temp618_81 () (_ BitVec 64))
(declare-fun temp618_82 () (_ BitVec 64))
(declare-fun temp618_83 () (_ BitVec 64))
(declare-fun temp618_84 () (_ BitVec 64))
(declare-fun temp618_85 () (_ BitVec 64))
(declare-fun temp618_86 () (_ BitVec 64))
(declare-fun temp618_87 () (_ BitVec 64))
(declare-fun temp618_88 () (_ BitVec 64))
(declare-fun temp618_89 () (_ BitVec 64))
(declare-fun temp618_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp618_91 () (_ BitVec 64))
(declare-fun temp618_92 () (_ BitVec 64))
(declare-fun temp618_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp618_94 () (_ BitVec 64))
(declare-fun temp618_95 () (_ BitVec 64))
(declare-fun temp618_96 () (_ BitVec 64))
(declare-fun temp618_97 () (_ BitVec 64))
(declare-fun temp618_98 () (_ BitVec 64))
(declare-fun temp618_99 () (_ BitVec 64))
(declare-fun temp618_100 () (_ BitVec 64))
(declare-fun temp618_101 () (_ BitVec 64))
(declare-fun temp618_102 () (_ BitVec 64))
(declare-fun temp618_103 () (_ BitVec 64))
(declare-fun temp618_104 () (_ BitVec 64))
(declare-fun temp618_105 () (_ BitVec 64))
(declare-fun temp618_106 () (_ BitVec 64))
(declare-fun temp618_107 () (_ BitVec 64))
(declare-fun temp618_108 () (_ BitVec 64))
(declare-fun temp618_109 () (_ BitVec 64))
(declare-fun temp618_110 () (_ BitVec 64))
(declare-fun temp618_111 () (_ BitVec 64))
(declare-fun temp618_112 () (_ BitVec 64))
(declare-fun temp618_113 () (_ BitVec 64))
(declare-fun temp618_114 () (_ BitVec 64))
(declare-fun temp618_115 () (_ BitVec 64))
(declare-fun temp618_116 () (_ BitVec 64))
(declare-fun temp618_117 () (_ BitVec 64))
(declare-fun temp618_118 () (_ BitVec 64))
(declare-fun temp618_119 () (_ BitVec 64))
(declare-fun temp618_120 () (_ BitVec 64))
(declare-fun temp618_121 () (_ BitVec 64))
(declare-fun temp618_122 () (_ BitVec 64))
(declare-fun temp618_123 () (_ BitVec 64))
(declare-fun temp618_124 () (_ BitVec 64))
(declare-fun temp618_125 () (_ BitVec 64))
(declare-fun temp618_126 () (_ BitVec 64))
(declare-fun temp618_127 () (_ BitVec 64))
(declare-fun temp618_128 () (_ BitVec 64))
(declare-fun temp618_129 () (_ BitVec 64))
(declare-fun temp618_130 () (_ BitVec 64))
(declare-fun temp618_131 () (_ BitVec 64))
(declare-fun temp618_132 () (_ BitVec 64))
(declare-fun temp618_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp618_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp618_135 () (_ BitVec 64))
(declare-fun temp618_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp618_137 () (_ BitVec 64))
(declare-fun temp618_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp618_139 () (_ BitVec 64))
(declare-fun temp618_140 () (_ BitVec 64))
(declare-fun temp618_141 () (_ BitVec 64))
(declare-fun temp618_142 () (_ BitVec 64))
(declare-fun temp618_143 () (_ BitVec 64))
(declare-fun temp618_144 () (_ BitVec 64))
(declare-fun temp618_145 () (_ BitVec 64))
(declare-fun temp618_146 () (_ BitVec 64))
(declare-fun temp618_147 () (_ BitVec 64))
(declare-fun temp618_148 () (_ BitVec 64))
(declare-fun temp618_149 () (_ BitVec 64))
(declare-fun temp618_150 () (_ BitVec 64))
(declare-fun temp618_151 () (_ BitVec 64))
(declare-fun temp618_152 () (_ BitVec 64))
(declare-fun temp618_153 () (_ BitVec 64))
(declare-fun temp618_154 () (_ BitVec 64))
(declare-fun temp618_156 () (_ BitVec 64))
(declare-fun temp618_157 () (_ BitVec 64))
(declare-fun temp618_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp618_158 () (_ BitVec 64))
(declare-fun temp618_159 () (_ BitVec 64))
(declare-fun temp618_161 () (_ BitVec 64))
(declare-fun temp618_162 () (_ BitVec 64))
(declare-fun temp618_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp618_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp618_164 () (_ BitVec 64))
(declare-fun temp618_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp618_166 () (_ BitVec 64))
(declare-fun temp618_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp618_168 () (_ BitVec 64))
(declare-fun temp618_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp618_170 () (_ BitVec 64))
(declare-fun temp618_171 () (_ BitVec 64))
(declare-fun temp618_172 () (_ BitVec 64))
(declare-fun temp618_173 () (_ BitVec 64))
(declare-fun temp618_174 () (_ BitVec 64))
(declare-fun temp618_175 () (_ BitVec 64))
(declare-fun temp618_176 () (_ BitVec 64))
(declare-fun temp618_177 () (_ BitVec 64))
(declare-fun temp618_178 () (_ BitVec 64))
(declare-fun temp618_179 () (_ BitVec 64))
(declare-fun temp618_180 () (_ BitVec 64))
(declare-fun temp618_181 () (_ BitVec 64))
(declare-fun temp618_182 () (_ BitVec 64))
(declare-fun temp618_183 () (_ BitVec 64))
(declare-fun temp618_184 () (_ BitVec 64))
(declare-fun temp618_185 () (_ BitVec 64))
(declare-fun temp618_186 () (_ BitVec 64))
(declare-fun temp618_187 () (_ BitVec 64))
(declare-fun temp618_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp618_189 () (_ BitVec 64))
(declare-fun temp618_191 () (_ BitVec 64))
(declare-fun temp618_192 () (_ BitVec 64))
(declare-fun temp618_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp618_193 () (_ BitVec 64))
(declare-fun temp618_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp618_195 () (_ BitVec 64))
(declare-fun temp618_196 () (_ BitVec 64))
(declare-fun temp618_197 () (_ BitVec 64))
(declare-fun temp618_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp618_199 () (_ BitVec 64))
(declare-fun temp618_200 () (_ BitVec 64))
(declare-fun temp618_201 () (_ BitVec 64))
(declare-fun temp618_202 () (_ BitVec 64))
(declare-fun temp618_203 () (_ BitVec 64))
(declare-fun temp618_204 () (_ BitVec 64))
(declare-fun temp618_205 () (_ BitVec 64))
(declare-fun temp618_206 () (_ BitVec 64))
(declare-fun temp618_207 () (_ BitVec 64))
(declare-fun temp618_208 () (_ BitVec 64))
(declare-fun temp618_209 () (_ BitVec 64))
(declare-fun temp618_210 () (_ BitVec 64))
(declare-fun temp618_211 () (_ BitVec 64))
(declare-fun temp618_212 () (_ BitVec 64))
(declare-fun temp618_213 () (_ BitVec 64))
(declare-fun temp618_214 () (_ BitVec 64))
(declare-fun temp618_215 () (_ BitVec 64))
(declare-fun temp618_216 () (_ BitVec 64))
(declare-fun temp618_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp618_218 () (_ BitVec 64))
(declare-fun temp618_220 () (_ BitVec 64))
(declare-fun temp618_221 () (_ BitVec 64))
(declare-fun temp618_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp618_222 () (_ BitVec 64))
(declare-fun temp618_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp618_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp618_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp618_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp618_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp618_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp618_229 () (_ BitVec 64))
(declare-fun temp618_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp618_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp618_232 () (_ BitVec 64))
(declare-fun temp618_233 () (_ BitVec 64))
(declare-fun temp618_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp618_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp618_236 () (_ BitVec 64))
(declare-fun temp618_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp618_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp618_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp618_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp618_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp618_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp618_243 () (_ BitVec 64))
(assert (= temp618_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp618_1)))
(assert (= temp618_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp618_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_3 #x0000000000000000))
(assert (= var79869 temp618_3))
(assert (= temp618_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp618_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_5 #x0000000000000000))
(assert (= var79914 temp618_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp618_6 #x0000000000000000))
(assert (= temp618_7 temp618_6))
(assert (= temp618_8 (select ARGNAME_padding_NAMEEND_VAL temp618_7)))
(assert (= temp618_9 #x0000000000000001))
(assert (= temp618_10 temp618_9))
(assert (= temp618_11 (select ARGNAME_padding_NAMEEND_VAL temp618_10)))
(assert (= temp618_12 #x0000000000000002))
(assert (= temp618_13 temp618_12))
(assert (= temp618_14 (select ARGNAME_padding_NAMEEND_VAL temp618_13)))
(assert (= temp618_15 #x0000000000000003))
(assert (= temp618_16 temp618_15))
(assert (= temp618_17 (select ARGNAME_padding_NAMEEND_VAL temp618_16)))
(assert (= temp618_18 #x0000000000000004))
(assert (= temp618_19 temp618_18))
(assert (= temp618_20 (select ARGNAME_padding_NAMEEND_VAL temp618_19)))
(assert (= temp618_21 #x0000000000000005))
(assert (= temp618_22 temp618_21))
(assert (= temp618_23 (select ARGNAME_padding_NAMEEND_VAL temp618_22)))
(assert (= temp618_24 #x0000000000000000))
(assert (= temp618_25 #x0000000000000000))
(assert (= temp618_26 temp618_25))
(assert (= temp618_27 (select ARGNAME_padding_NAMEEND_VAL temp618_26)))
(assert (= temp618_28 #x0000000000000000))
(assert (= temp618_29 #x0000000000000001))
(assert (= temp618_30 temp618_29))
(assert (= temp618_31 (select ARGNAME_padding_NAMEEND_VAL temp618_30)))
(assert (= temp618_32 #x0000000000000000))
(assert (= temp618_33 #x0000000000000002))
(assert (= temp618_34 temp618_33))
(assert (= temp618_35 (select ARGNAME_padding_NAMEEND_VAL temp618_34)))
(assert (= temp618_36 #x0000000000000000))
(assert (= temp618_37 #x0000000000000003))
(assert (= temp618_38 temp618_37))
(assert (= temp618_39 (select ARGNAME_padding_NAMEEND_VAL temp618_38)))
(assert (= temp618_40 #x0000000000000000))
(assert (= temp618_41 #x0000000000000004))
(assert (= temp618_42 temp618_41))
(assert (= temp618_43 (select ARGNAME_padding_NAMEEND_VAL temp618_42)))
(assert (= temp618_44 #x0000000000000000))
(assert (= temp618_45 #x0000000000000005))
(assert (= temp618_46 temp618_45))
(assert (= temp618_47 (select ARGNAME_padding_NAMEEND_VAL temp618_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp618_27 temp618_24)
             (bvslt temp618_31 temp618_28)
             (bvslt temp618_35 temp618_32)
             (bvslt temp618_39 temp618_36)
             (bvslt temp618_43 temp618_40)
             (bvslt temp618_47 temp618_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_48 #x0000000000000000))
(assert (= var1322786 temp618_48))
(assert (= temp618_49 #x0000000000000000))
(assert (= temp618_50 temp618_49))
(assert (= temp618_51 (select ARGNAME_output_padding_NAMEEND_VAL temp618_50)))
(assert (= temp618_52 #x0000000000000001))
(assert (= temp618_53 temp618_52))
(assert (= temp618_54 (select ARGNAME_output_padding_NAMEEND_VAL temp618_53)))
(assert (= temp618_55 #x0000000000000002))
(assert (= temp618_56 temp618_55))
(assert (= temp618_57 (select ARGNAME_output_padding_NAMEEND_VAL temp618_56)))
(assert (= temp618_58 #x0000000000000003))
(assert (= temp618_59 temp618_58))
(assert (= temp618_60 (select ARGNAME_output_padding_NAMEEND_VAL temp618_59)))
(assert (= temp618_61 #x0000000000000004))
(assert (= temp618_62 temp618_61))
(assert (= temp618_63 (select ARGNAME_output_padding_NAMEEND_VAL temp618_62)))
(assert (= temp618_64 #x0000000000000005))
(assert (= temp618_65 temp618_64))
(assert (= temp618_66 (select ARGNAME_output_padding_NAMEEND_VAL temp618_65)))
(assert (= temp618_67 #x0000000000000000))
(assert (= temp618_68 #x0000000000000000))
(assert (= temp618_69 temp618_68))
(assert (= temp618_70 (select ARGNAME_output_padding_NAMEEND_VAL temp618_69)))
(assert (= temp618_71 #x0000000000000000))
(assert (= temp618_72 #x0000000000000001))
(assert (= temp618_73 temp618_72))
(assert (= temp618_74 (select ARGNAME_output_padding_NAMEEND_VAL temp618_73)))
(assert (= temp618_75 #x0000000000000000))
(assert (= temp618_76 #x0000000000000002))
(assert (= temp618_77 temp618_76))
(assert (= temp618_78 (select ARGNAME_output_padding_NAMEEND_VAL temp618_77)))
(assert (= temp618_79 #x0000000000000000))
(assert (= temp618_80 #x0000000000000003))
(assert (= temp618_81 temp618_80))
(assert (= temp618_82 (select ARGNAME_output_padding_NAMEEND_VAL temp618_81)))
(assert (= temp618_83 #x0000000000000000))
(assert (= temp618_84 #x0000000000000004))
(assert (= temp618_85 temp618_84))
(assert (= temp618_86 (select ARGNAME_output_padding_NAMEEND_VAL temp618_85)))
(assert (= temp618_87 #x0000000000000000))
(assert (= temp618_88 #x0000000000000005))
(assert (= temp618_89 temp618_88))
(assert (= temp618_90 (select ARGNAME_output_padding_NAMEEND_VAL temp618_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp618_70 temp618_67)
             (bvslt temp618_74 temp618_71)
             (bvslt temp618_78 temp618_75)
             (bvslt temp618_82 temp618_79)
             (bvslt temp618_86 temp618_83)
             (bvslt temp618_90 temp618_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_91 #x0000000000000000))
(assert (= var1322797 temp618_91))
(assert (= temp618_92 #x0000000000000000))
(assert (= temp618_93 temp618_92))
(assert (= temp618_94 (select ARGNAME_stride_NAMEEND_VAL temp618_93)))
(assert (= temp618_95 #x0000000000000001))
(assert (= temp618_96 temp618_95))
(assert (= temp618_97 (select ARGNAME_stride_NAMEEND_VAL temp618_96)))
(assert (= temp618_98 #x0000000000000002))
(assert (= temp618_99 temp618_98))
(assert (= temp618_100 (select ARGNAME_stride_NAMEEND_VAL temp618_99)))
(assert (= temp618_101 #x0000000000000003))
(assert (= temp618_102 temp618_101))
(assert (= temp618_103 (select ARGNAME_stride_NAMEEND_VAL temp618_102)))
(assert (= temp618_104 #x0000000000000004))
(assert (= temp618_105 temp618_104))
(assert (= temp618_106 (select ARGNAME_stride_NAMEEND_VAL temp618_105)))
(assert (= temp618_107 #x0000000000000005))
(assert (= temp618_108 temp618_107))
(assert (= temp618_109 (select ARGNAME_stride_NAMEEND_VAL temp618_108)))
(assert (= temp618_110 #x0000000000000000))
(assert (= temp618_111 #x0000000000000000))
(assert (= temp618_112 temp618_111))
(assert (= temp618_113 (select ARGNAME_stride_NAMEEND_VAL temp618_112)))
(assert (= temp618_114 #x0000000000000000))
(assert (= temp618_115 #x0000000000000001))
(assert (= temp618_116 temp618_115))
(assert (= temp618_117 (select ARGNAME_stride_NAMEEND_VAL temp618_116)))
(assert (= temp618_118 #x0000000000000000))
(assert (= temp618_119 #x0000000000000002))
(assert (= temp618_120 temp618_119))
(assert (= temp618_121 (select ARGNAME_stride_NAMEEND_VAL temp618_120)))
(assert (= temp618_122 #x0000000000000000))
(assert (= temp618_123 #x0000000000000003))
(assert (= temp618_124 temp618_123))
(assert (= temp618_125 (select ARGNAME_stride_NAMEEND_VAL temp618_124)))
(assert (= temp618_126 #x0000000000000000))
(assert (= temp618_127 #x0000000000000004))
(assert (= temp618_128 temp618_127))
(assert (= temp618_129 (select ARGNAME_stride_NAMEEND_VAL temp618_128)))
(assert (= temp618_130 #x0000000000000000))
(assert (= temp618_131 #x0000000000000005))
(assert (= temp618_132 temp618_131))
(assert (= temp618_133 (select ARGNAME_stride_NAMEEND_VAL temp618_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp618_113 temp618_110)
             (bvsle temp618_117 temp618_114)
             (bvsle temp618_121 temp618_118)
             (bvsle temp618_125 temp618_122)
             (bvsle temp618_129 temp618_126)
             (bvsle temp618_133 temp618_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_134 #x0000000000000000))
(assert (= var1322807 temp618_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_135 #x0000000000000001))
(assert (= var1322819 temp618_135))
(assert (= temp618_136 #x0000000000000000))
(assert (= var1310898 temp618_136))
(assert (= temp618_137 #x0000000000000000))
(assert (= temp618_138 temp618_137))
(assert (= temp618_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_138)))
(assert (= temp618_140 #x0000000000000001))
(assert (= temp618_141 temp618_140))
(assert (= temp618_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_141)))
(assert (= temp618_143 #x0000000000000002))
(assert (= temp618_144 temp618_143))
(assert (= temp618_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_144)))
(assert (= temp618_146 #x0000000000000003))
(assert (= temp618_147 temp618_146))
(assert (= temp618_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_147)))
(assert (= temp618_149 #x0000000000000004))
(assert (= temp618_150 temp618_149))
(assert (= temp618_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_150)))
(assert (= temp618_152 #x0000000000000005))
(assert (= temp618_153 temp618_152))
(assert (= temp618_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_153)))
(assert (= temp618_156 var1310898))
(assert (= temp618_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_156)))
(assert (= temp618_155 temp618_157))
(assert (= var1322852
   (ite (bvslt temp618_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_158 #x0000000000000000))
(assert (= var1322852 temp618_158))
(assert (= temp618_159 #x0000000000000000))
(assert (= var1310898 temp618_159))
(assert (= temp618_161 var1310898))
(assert (= temp618_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_161)))
(assert (= temp618_160 temp618_162))
(assert (= var1322874 (bvsmod temp618_160 ARGNAME_groups_NAMEEND)))
(assert (= temp618_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp618_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp618_164 #x0000000000000001))
(assert (= var1322875 temp618_164))
(assert (= temp618_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp618_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_166 #x0000000000000001))
(assert (= var1322895 temp618_166))
(assert (= temp618_167 #x0000000000000001))
(assert (= var1311786 temp618_167))
(assert (= temp618_168 #x0000000000000000))
(assert (= temp618_169 temp618_168))
(assert (= temp618_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp618_169)))
(assert (= temp618_171 #x0000000000000001))
(assert (= temp618_172 temp618_171))
(assert (= temp618_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp618_172)))
(assert (= temp618_174 #x0000000000000002))
(assert (= temp618_175 temp618_174))
(assert (= temp618_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp618_175)))
(assert (= temp618_177 #x0000000000000003))
(assert (= temp618_178 temp618_177))
(assert (= temp618_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp618_178)))
(assert (= temp618_180 #x0000000000000004))
(assert (= temp618_181 temp618_180))
(assert (= temp618_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp618_181)))
(assert (= temp618_183 #x0000000000000005))
(assert (= temp618_184 temp618_183))
(assert (= temp618_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp618_184)))
(assert (= temp618_186 #x0000000000000000))
(assert (= temp618_187
   (ite (bvslt var1311786 temp618_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp618_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp618_187)))
(assert (= var1322903 temp618_188))
(assert (bvslt (ite (bvslt var1311786 temp618_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp618_189 #x0000000000000001))
(assert (= var1311786 temp618_189))
(assert (= temp618_191 var1311786))
(assert (= temp618_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_191)))
(assert (= temp618_190 temp618_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp618_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp618_193 #x0000000000000001))
(assert (= var1322908 temp618_193))
(assert (= temp618_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp618_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_195 #x0000000000000001))
(assert (= var1322975 temp618_195))
(assert (= temp618_196 #x0000000000000000))
(assert (= var1310898 temp618_196))
(assert (= temp618_197 #x0000000000000000))
(assert (= temp618_198 temp618_197))
(assert (= temp618_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp618_198)))
(assert (= temp618_200 #x0000000000000001))
(assert (= temp618_201 temp618_200))
(assert (= temp618_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp618_201)))
(assert (= temp618_203 #x0000000000000002))
(assert (= temp618_204 temp618_203))
(assert (= temp618_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp618_204)))
(assert (= temp618_206 #x0000000000000003))
(assert (= temp618_207 temp618_206))
(assert (= temp618_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp618_207)))
(assert (= temp618_209 #x0000000000000004))
(assert (= temp618_210 temp618_209))
(assert (= temp618_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp618_210)))
(assert (= temp618_212 #x0000000000000005))
(assert (= temp618_213 temp618_212))
(assert (= temp618_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp618_213)))
(assert (= temp618_215 #x0000000000000000))
(assert (= temp618_216
   (ite (bvslt var1310898 temp618_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp618_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp618_216)))
(assert (= var1322977 temp618_217))
(assert (bvslt (ite (bvslt var1310898 temp618_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp618_218 #x0000000000000000))
(assert (= var1310898 temp618_218))
(assert (= temp618_220 var1310898))
(assert (= temp618_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp618_220)))
(assert (= temp618_219 temp618_221))
(assert (= var1322980
   (ite (= var1322977 temp618_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp618_222 #x0000000000000001))
(assert (= var1322980 temp618_222))
(assert (= temp618_223 #x0000000000000002))
(assert (= var1848169 temp618_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp618_225 #x0000000000000001))
(assert (= var1323065 temp618_225))
(assert (= temp618_226 #x0000000000000001))
(assert (= var3486735 temp618_226))
(assert (= temp618_227 #x0000000000000001))
(assert (= var3814415 temp618_227))
(assert (= temp618_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp618_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_229 #x0000000000000001))
(assert (= var79986 temp618_229))
(assert (= temp618_230 #x0000000000000001))
(assert (= var80116 temp618_230))
(assert (= var4796905 var80116))
(assert (= temp618_231 #x0000000000000000))
(assert (= var4784306 temp618_231))
(assert (= temp618_232 #x0000000000000000))
(assert (= temp618_233
   (ite (bvslt var4784306 temp618_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp618_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp618_233)))
(assert (= var4796924 temp618_234))
(assert (bvslt (ite (bvslt var4784306 temp618_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp618_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp618_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp618_236 #x0000000000000001))
(assert (= var4796925 temp618_236))
(assert (= temp618_237 #x0000000000000000))
(assert (= var4996927 temp618_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp618_238 #x0000000000000002))
(assert (= var5125763 temp618_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_239 #x0000000000000000))
(assert (= var5191324 temp618_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp618_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp618_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp618_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp618_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp618_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp618_243 #x0000000000000001))
(assert (= var79986 temp618_243))
(model-add temp618_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp618_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp618_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






