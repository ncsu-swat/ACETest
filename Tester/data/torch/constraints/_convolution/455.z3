(declare-fun temp605_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp605_2 () (_ BitVec 64))
(declare-fun temp605_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp605_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp605_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp605_6 () (_ BitVec 64))
(declare-fun temp605_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_8 () (_ BitVec 64))
(declare-fun temp605_9 () (_ BitVec 64))
(declare-fun temp605_10 () (_ BitVec 64))
(declare-fun temp605_11 () (_ BitVec 64))
(declare-fun temp605_12 () (_ BitVec 64))
(declare-fun temp605_13 () (_ BitVec 64))
(declare-fun temp605_14 () (_ BitVec 64))
(declare-fun temp605_15 () (_ BitVec 64))
(declare-fun temp605_16 () (_ BitVec 64))
(declare-fun temp605_17 () (_ BitVec 64))
(declare-fun temp605_18 () (_ BitVec 64))
(declare-fun temp605_19 () (_ BitVec 64))
(declare-fun temp605_20 () (_ BitVec 64))
(declare-fun temp605_21 () (_ BitVec 64))
(declare-fun temp605_22 () (_ BitVec 64))
(declare-fun temp605_23 () (_ BitVec 64))
(declare-fun temp605_24 () (_ BitVec 64))
(declare-fun temp605_25 () (_ BitVec 64))
(declare-fun temp605_26 () (_ BitVec 64))
(declare-fun temp605_27 () (_ BitVec 64))
(declare-fun temp605_28 () (_ BitVec 64))
(declare-fun temp605_29 () (_ BitVec 64))
(declare-fun temp605_30 () (_ BitVec 64))
(declare-fun temp605_31 () (_ BitVec 64))
(declare-fun temp605_32 () (_ BitVec 64))
(declare-fun temp605_33 () (_ BitVec 64))
(declare-fun temp605_34 () (_ BitVec 64))
(declare-fun temp605_35 () (_ BitVec 64))
(declare-fun temp605_36 () (_ BitVec 64))
(declare-fun temp605_37 () (_ BitVec 64))
(declare-fun temp605_38 () (_ BitVec 64))
(declare-fun temp605_39 () (_ BitVec 64))
(declare-fun temp605_40 () (_ BitVec 64))
(declare-fun temp605_41 () (_ BitVec 64))
(declare-fun temp605_42 () (_ BitVec 64))
(declare-fun temp605_43 () (_ BitVec 64))
(declare-fun temp605_44 () (_ BitVec 64))
(declare-fun temp605_45 () (_ BitVec 64))
(declare-fun temp605_46 () (_ BitVec 64))
(declare-fun temp605_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp605_48 () (_ BitVec 64))
(declare-fun temp605_49 () (_ BitVec 64))
(declare-fun temp605_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_51 () (_ BitVec 64))
(declare-fun temp605_52 () (_ BitVec 64))
(declare-fun temp605_53 () (_ BitVec 64))
(declare-fun temp605_54 () (_ BitVec 64))
(declare-fun temp605_55 () (_ BitVec 64))
(declare-fun temp605_56 () (_ BitVec 64))
(declare-fun temp605_57 () (_ BitVec 64))
(declare-fun temp605_58 () (_ BitVec 64))
(declare-fun temp605_59 () (_ BitVec 64))
(declare-fun temp605_60 () (_ BitVec 64))
(declare-fun temp605_61 () (_ BitVec 64))
(declare-fun temp605_62 () (_ BitVec 64))
(declare-fun temp605_63 () (_ BitVec 64))
(declare-fun temp605_64 () (_ BitVec 64))
(declare-fun temp605_65 () (_ BitVec 64))
(declare-fun temp605_66 () (_ BitVec 64))
(declare-fun temp605_67 () (_ BitVec 64))
(declare-fun temp605_68 () (_ BitVec 64))
(declare-fun temp605_69 () (_ BitVec 64))
(declare-fun temp605_70 () (_ BitVec 64))
(declare-fun temp605_71 () (_ BitVec 64))
(declare-fun temp605_72 () (_ BitVec 64))
(declare-fun temp605_73 () (_ BitVec 64))
(declare-fun temp605_74 () (_ BitVec 64))
(declare-fun temp605_75 () (_ BitVec 64))
(declare-fun temp605_76 () (_ BitVec 64))
(declare-fun temp605_77 () (_ BitVec 64))
(declare-fun temp605_78 () (_ BitVec 64))
(declare-fun temp605_79 () (_ BitVec 64))
(declare-fun temp605_80 () (_ BitVec 64))
(declare-fun temp605_81 () (_ BitVec 64))
(declare-fun temp605_82 () (_ BitVec 64))
(declare-fun temp605_83 () (_ BitVec 64))
(declare-fun temp605_84 () (_ BitVec 64))
(declare-fun temp605_85 () (_ BitVec 64))
(declare-fun temp605_86 () (_ BitVec 64))
(declare-fun temp605_87 () (_ BitVec 64))
(declare-fun temp605_88 () (_ BitVec 64))
(declare-fun temp605_89 () (_ BitVec 64))
(declare-fun temp605_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp605_91 () (_ BitVec 64))
(declare-fun temp605_92 () (_ BitVec 64))
(declare-fun temp605_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_94 () (_ BitVec 64))
(declare-fun temp605_95 () (_ BitVec 64))
(declare-fun temp605_96 () (_ BitVec 64))
(declare-fun temp605_97 () (_ BitVec 64))
(declare-fun temp605_98 () (_ BitVec 64))
(declare-fun temp605_99 () (_ BitVec 64))
(declare-fun temp605_100 () (_ BitVec 64))
(declare-fun temp605_101 () (_ BitVec 64))
(declare-fun temp605_102 () (_ BitVec 64))
(declare-fun temp605_103 () (_ BitVec 64))
(declare-fun temp605_104 () (_ BitVec 64))
(declare-fun temp605_105 () (_ BitVec 64))
(declare-fun temp605_106 () (_ BitVec 64))
(declare-fun temp605_107 () (_ BitVec 64))
(declare-fun temp605_108 () (_ BitVec 64))
(declare-fun temp605_109 () (_ BitVec 64))
(declare-fun temp605_110 () (_ BitVec 64))
(declare-fun temp605_111 () (_ BitVec 64))
(declare-fun temp605_112 () (_ BitVec 64))
(declare-fun temp605_113 () (_ BitVec 64))
(declare-fun temp605_114 () (_ BitVec 64))
(declare-fun temp605_115 () (_ BitVec 64))
(declare-fun temp605_116 () (_ BitVec 64))
(declare-fun temp605_117 () (_ BitVec 64))
(declare-fun temp605_118 () (_ BitVec 64))
(declare-fun temp605_119 () (_ BitVec 64))
(declare-fun temp605_120 () (_ BitVec 64))
(declare-fun temp605_121 () (_ BitVec 64))
(declare-fun temp605_122 () (_ BitVec 64))
(declare-fun temp605_123 () (_ BitVec 64))
(declare-fun temp605_124 () (_ BitVec 64))
(declare-fun temp605_125 () (_ BitVec 64))
(declare-fun temp605_126 () (_ BitVec 64))
(declare-fun temp605_127 () (_ BitVec 64))
(declare-fun temp605_128 () (_ BitVec 64))
(declare-fun temp605_129 () (_ BitVec 64))
(declare-fun temp605_130 () (_ BitVec 64))
(declare-fun temp605_131 () (_ BitVec 64))
(declare-fun temp605_132 () (_ BitVec 64))
(declare-fun temp605_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp605_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp605_135 () (_ BitVec 64))
(declare-fun temp605_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp605_137 () (_ BitVec 64))
(declare-fun temp605_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_139 () (_ BitVec 64))
(declare-fun temp605_140 () (_ BitVec 64))
(declare-fun temp605_141 () (_ BitVec 64))
(declare-fun temp605_142 () (_ BitVec 64))
(declare-fun temp605_143 () (_ BitVec 64))
(declare-fun temp605_144 () (_ BitVec 64))
(declare-fun temp605_145 () (_ BitVec 64))
(declare-fun temp605_146 () (_ BitVec 64))
(declare-fun temp605_147 () (_ BitVec 64))
(declare-fun temp605_148 () (_ BitVec 64))
(declare-fun temp605_149 () (_ BitVec 64))
(declare-fun temp605_150 () (_ BitVec 64))
(declare-fun temp605_151 () (_ BitVec 64))
(declare-fun temp605_152 () (_ BitVec 64))
(declare-fun temp605_153 () (_ BitVec 64))
(declare-fun temp605_154 () (_ BitVec 64))
(declare-fun temp605_156 () (_ BitVec 64))
(declare-fun temp605_157 () (_ BitVec 64))
(declare-fun temp605_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp605_158 () (_ BitVec 64))
(declare-fun temp605_159 () (_ BitVec 64))
(declare-fun temp605_161 () (_ BitVec 64))
(declare-fun temp605_162 () (_ BitVec 64))
(declare-fun temp605_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp605_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp605_164 () (_ BitVec 64))
(declare-fun temp605_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp605_166 () (_ BitVec 64))
(declare-fun temp605_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp605_168 () (_ BitVec 64))
(declare-fun temp605_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_170 () (_ BitVec 64))
(declare-fun temp605_171 () (_ BitVec 64))
(declare-fun temp605_172 () (_ BitVec 64))
(declare-fun temp605_173 () (_ BitVec 64))
(declare-fun temp605_174 () (_ BitVec 64))
(declare-fun temp605_175 () (_ BitVec 64))
(declare-fun temp605_176 () (_ BitVec 64))
(declare-fun temp605_177 () (_ BitVec 64))
(declare-fun temp605_178 () (_ BitVec 64))
(declare-fun temp605_179 () (_ BitVec 64))
(declare-fun temp605_180 () (_ BitVec 64))
(declare-fun temp605_181 () (_ BitVec 64))
(declare-fun temp605_182 () (_ BitVec 64))
(declare-fun temp605_183 () (_ BitVec 64))
(declare-fun temp605_184 () (_ BitVec 64))
(declare-fun temp605_185 () (_ BitVec 64))
(declare-fun temp605_186 () (_ BitVec 64))
(declare-fun temp605_187 () (_ BitVec 64))
(declare-fun temp605_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp605_189 () (_ BitVec 64))
(declare-fun temp605_191 () (_ BitVec 64))
(declare-fun temp605_192 () (_ BitVec 64))
(declare-fun temp605_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp605_193 () (_ BitVec 64))
(declare-fun temp605_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp605_195 () (_ BitVec 64))
(declare-fun temp605_196 () (_ BitVec 64))
(declare-fun temp605_197 () (_ BitVec 64))
(declare-fun temp605_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_199 () (_ BitVec 64))
(declare-fun temp605_200 () (_ BitVec 64))
(declare-fun temp605_201 () (_ BitVec 64))
(declare-fun temp605_202 () (_ BitVec 64))
(declare-fun temp605_203 () (_ BitVec 64))
(declare-fun temp605_204 () (_ BitVec 64))
(declare-fun temp605_205 () (_ BitVec 64))
(declare-fun temp605_206 () (_ BitVec 64))
(declare-fun temp605_207 () (_ BitVec 64))
(declare-fun temp605_208 () (_ BitVec 64))
(declare-fun temp605_209 () (_ BitVec 64))
(declare-fun temp605_210 () (_ BitVec 64))
(declare-fun temp605_211 () (_ BitVec 64))
(declare-fun temp605_212 () (_ BitVec 64))
(declare-fun temp605_213 () (_ BitVec 64))
(declare-fun temp605_214 () (_ BitVec 64))
(declare-fun temp605_215 () (_ BitVec 64))
(declare-fun temp605_216 () (_ BitVec 64))
(declare-fun temp605_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp605_218 () (_ BitVec 64))
(declare-fun temp605_220 () (_ BitVec 64))
(declare-fun temp605_221 () (_ BitVec 64))
(declare-fun temp605_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp605_222 () (_ BitVec 64))
(declare-fun temp605_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp605_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp605_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp605_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp605_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp605_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp605_229 () (_ BitVec 64))
(declare-fun temp605_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp605_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp605_232 () (_ BitVec 64))
(declare-fun temp605_233 () (_ BitVec 64))
(declare-fun temp605_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp605_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp605_236 () (_ BitVec 64))
(declare-fun temp605_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp605_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp605_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp605_240 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp605_241 () (_ BitVec 64))
(assert (= temp605_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp605_1)))
(assert (= temp605_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp605_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_3 #x0000000000000000))
(assert (= var79869 temp605_3))
(assert (= temp605_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp605_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_5 #x0000000000000000))
(assert (= var79914 temp605_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp605_6 #x0000000000000000))
(assert (= temp605_7 temp605_6))
(assert (= temp605_8 (select ARGNAME_padding_NAMEEND_VAL temp605_7)))
(assert (= temp605_9 #x0000000000000001))
(assert (= temp605_10 temp605_9))
(assert (= temp605_11 (select ARGNAME_padding_NAMEEND_VAL temp605_10)))
(assert (= temp605_12 #x0000000000000002))
(assert (= temp605_13 temp605_12))
(assert (= temp605_14 (select ARGNAME_padding_NAMEEND_VAL temp605_13)))
(assert (= temp605_15 #x0000000000000003))
(assert (= temp605_16 temp605_15))
(assert (= temp605_17 (select ARGNAME_padding_NAMEEND_VAL temp605_16)))
(assert (= temp605_18 #x0000000000000004))
(assert (= temp605_19 temp605_18))
(assert (= temp605_20 (select ARGNAME_padding_NAMEEND_VAL temp605_19)))
(assert (= temp605_21 #x0000000000000005))
(assert (= temp605_22 temp605_21))
(assert (= temp605_23 (select ARGNAME_padding_NAMEEND_VAL temp605_22)))
(assert (= temp605_24 #x0000000000000000))
(assert (= temp605_25 #x0000000000000000))
(assert (= temp605_26 temp605_25))
(assert (= temp605_27 (select ARGNAME_padding_NAMEEND_VAL temp605_26)))
(assert (= temp605_28 #x0000000000000000))
(assert (= temp605_29 #x0000000000000001))
(assert (= temp605_30 temp605_29))
(assert (= temp605_31 (select ARGNAME_padding_NAMEEND_VAL temp605_30)))
(assert (= temp605_32 #x0000000000000000))
(assert (= temp605_33 #x0000000000000002))
(assert (= temp605_34 temp605_33))
(assert (= temp605_35 (select ARGNAME_padding_NAMEEND_VAL temp605_34)))
(assert (= temp605_36 #x0000000000000000))
(assert (= temp605_37 #x0000000000000003))
(assert (= temp605_38 temp605_37))
(assert (= temp605_39 (select ARGNAME_padding_NAMEEND_VAL temp605_38)))
(assert (= temp605_40 #x0000000000000000))
(assert (= temp605_41 #x0000000000000004))
(assert (= temp605_42 temp605_41))
(assert (= temp605_43 (select ARGNAME_padding_NAMEEND_VAL temp605_42)))
(assert (= temp605_44 #x0000000000000000))
(assert (= temp605_45 #x0000000000000005))
(assert (= temp605_46 temp605_45))
(assert (= temp605_47 (select ARGNAME_padding_NAMEEND_VAL temp605_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp605_27 temp605_24)
             (bvslt temp605_31 temp605_28)
             (bvslt temp605_35 temp605_32)
             (bvslt temp605_39 temp605_36)
             (bvslt temp605_43 temp605_40)
             (bvslt temp605_47 temp605_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_48 #x0000000000000000))
(assert (= var1322786 temp605_48))
(assert (= temp605_49 #x0000000000000000))
(assert (= temp605_50 temp605_49))
(assert (= temp605_51 (select ARGNAME_output_padding_NAMEEND_VAL temp605_50)))
(assert (= temp605_52 #x0000000000000001))
(assert (= temp605_53 temp605_52))
(assert (= temp605_54 (select ARGNAME_output_padding_NAMEEND_VAL temp605_53)))
(assert (= temp605_55 #x0000000000000002))
(assert (= temp605_56 temp605_55))
(assert (= temp605_57 (select ARGNAME_output_padding_NAMEEND_VAL temp605_56)))
(assert (= temp605_58 #x0000000000000003))
(assert (= temp605_59 temp605_58))
(assert (= temp605_60 (select ARGNAME_output_padding_NAMEEND_VAL temp605_59)))
(assert (= temp605_61 #x0000000000000004))
(assert (= temp605_62 temp605_61))
(assert (= temp605_63 (select ARGNAME_output_padding_NAMEEND_VAL temp605_62)))
(assert (= temp605_64 #x0000000000000005))
(assert (= temp605_65 temp605_64))
(assert (= temp605_66 (select ARGNAME_output_padding_NAMEEND_VAL temp605_65)))
(assert (= temp605_67 #x0000000000000000))
(assert (= temp605_68 #x0000000000000000))
(assert (= temp605_69 temp605_68))
(assert (= temp605_70 (select ARGNAME_output_padding_NAMEEND_VAL temp605_69)))
(assert (= temp605_71 #x0000000000000000))
(assert (= temp605_72 #x0000000000000001))
(assert (= temp605_73 temp605_72))
(assert (= temp605_74 (select ARGNAME_output_padding_NAMEEND_VAL temp605_73)))
(assert (= temp605_75 #x0000000000000000))
(assert (= temp605_76 #x0000000000000002))
(assert (= temp605_77 temp605_76))
(assert (= temp605_78 (select ARGNAME_output_padding_NAMEEND_VAL temp605_77)))
(assert (= temp605_79 #x0000000000000000))
(assert (= temp605_80 #x0000000000000003))
(assert (= temp605_81 temp605_80))
(assert (= temp605_82 (select ARGNAME_output_padding_NAMEEND_VAL temp605_81)))
(assert (= temp605_83 #x0000000000000000))
(assert (= temp605_84 #x0000000000000004))
(assert (= temp605_85 temp605_84))
(assert (= temp605_86 (select ARGNAME_output_padding_NAMEEND_VAL temp605_85)))
(assert (= temp605_87 #x0000000000000000))
(assert (= temp605_88 #x0000000000000005))
(assert (= temp605_89 temp605_88))
(assert (= temp605_90 (select ARGNAME_output_padding_NAMEEND_VAL temp605_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp605_70 temp605_67)
             (bvslt temp605_74 temp605_71)
             (bvslt temp605_78 temp605_75)
             (bvslt temp605_82 temp605_79)
             (bvslt temp605_86 temp605_83)
             (bvslt temp605_90 temp605_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_91 #x0000000000000000))
(assert (= var1322797 temp605_91))
(assert (= temp605_92 #x0000000000000000))
(assert (= temp605_93 temp605_92))
(assert (= temp605_94 (select ARGNAME_stride_NAMEEND_VAL temp605_93)))
(assert (= temp605_95 #x0000000000000001))
(assert (= temp605_96 temp605_95))
(assert (= temp605_97 (select ARGNAME_stride_NAMEEND_VAL temp605_96)))
(assert (= temp605_98 #x0000000000000002))
(assert (= temp605_99 temp605_98))
(assert (= temp605_100 (select ARGNAME_stride_NAMEEND_VAL temp605_99)))
(assert (= temp605_101 #x0000000000000003))
(assert (= temp605_102 temp605_101))
(assert (= temp605_103 (select ARGNAME_stride_NAMEEND_VAL temp605_102)))
(assert (= temp605_104 #x0000000000000004))
(assert (= temp605_105 temp605_104))
(assert (= temp605_106 (select ARGNAME_stride_NAMEEND_VAL temp605_105)))
(assert (= temp605_107 #x0000000000000005))
(assert (= temp605_108 temp605_107))
(assert (= temp605_109 (select ARGNAME_stride_NAMEEND_VAL temp605_108)))
(assert (= temp605_110 #x0000000000000000))
(assert (= temp605_111 #x0000000000000000))
(assert (= temp605_112 temp605_111))
(assert (= temp605_113 (select ARGNAME_stride_NAMEEND_VAL temp605_112)))
(assert (= temp605_114 #x0000000000000000))
(assert (= temp605_115 #x0000000000000001))
(assert (= temp605_116 temp605_115))
(assert (= temp605_117 (select ARGNAME_stride_NAMEEND_VAL temp605_116)))
(assert (= temp605_118 #x0000000000000000))
(assert (= temp605_119 #x0000000000000002))
(assert (= temp605_120 temp605_119))
(assert (= temp605_121 (select ARGNAME_stride_NAMEEND_VAL temp605_120)))
(assert (= temp605_122 #x0000000000000000))
(assert (= temp605_123 #x0000000000000003))
(assert (= temp605_124 temp605_123))
(assert (= temp605_125 (select ARGNAME_stride_NAMEEND_VAL temp605_124)))
(assert (= temp605_126 #x0000000000000000))
(assert (= temp605_127 #x0000000000000004))
(assert (= temp605_128 temp605_127))
(assert (= temp605_129 (select ARGNAME_stride_NAMEEND_VAL temp605_128)))
(assert (= temp605_130 #x0000000000000000))
(assert (= temp605_131 #x0000000000000005))
(assert (= temp605_132 temp605_131))
(assert (= temp605_133 (select ARGNAME_stride_NAMEEND_VAL temp605_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp605_113 temp605_110)
             (bvsle temp605_117 temp605_114)
             (bvsle temp605_121 temp605_118)
             (bvsle temp605_125 temp605_122)
             (bvsle temp605_129 temp605_126)
             (bvsle temp605_133 temp605_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_134 #x0000000000000000))
(assert (= var1322807 temp605_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_135 #x0000000000000001))
(assert (= var1322819 temp605_135))
(assert (= temp605_136 #x0000000000000000))
(assert (= var1310898 temp605_136))
(assert (= temp605_137 #x0000000000000000))
(assert (= temp605_138 temp605_137))
(assert (= temp605_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_138)))
(assert (= temp605_140 #x0000000000000001))
(assert (= temp605_141 temp605_140))
(assert (= temp605_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_141)))
(assert (= temp605_143 #x0000000000000002))
(assert (= temp605_144 temp605_143))
(assert (= temp605_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_144)))
(assert (= temp605_146 #x0000000000000003))
(assert (= temp605_147 temp605_146))
(assert (= temp605_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_147)))
(assert (= temp605_149 #x0000000000000004))
(assert (= temp605_150 temp605_149))
(assert (= temp605_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_150)))
(assert (= temp605_152 #x0000000000000005))
(assert (= temp605_153 temp605_152))
(assert (= temp605_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_153)))
(assert (= temp605_156 var1310898))
(assert (= temp605_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_156)))
(assert (= temp605_155 temp605_157))
(assert (= var1322852
   (ite (bvslt temp605_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_158 #x0000000000000000))
(assert (= var1322852 temp605_158))
(assert (= temp605_159 #x0000000000000000))
(assert (= var1310898 temp605_159))
(assert (= temp605_161 var1310898))
(assert (= temp605_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_161)))
(assert (= temp605_160 temp605_162))
(assert (= var1322874 (bvsmod temp605_160 ARGNAME_groups_NAMEEND)))
(assert (= temp605_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp605_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_164 #x0000000000000001))
(assert (= var1322875 temp605_164))
(assert (= temp605_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp605_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_166 #x0000000000000001))
(assert (= var1322895 temp605_166))
(assert (= temp605_167 #x0000000000000001))
(assert (= var1311786 temp605_167))
(assert (= temp605_168 #x0000000000000000))
(assert (= temp605_169 temp605_168))
(assert (= temp605_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_169)))
(assert (= temp605_171 #x0000000000000001))
(assert (= temp605_172 temp605_171))
(assert (= temp605_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_172)))
(assert (= temp605_174 #x0000000000000002))
(assert (= temp605_175 temp605_174))
(assert (= temp605_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_175)))
(assert (= temp605_177 #x0000000000000003))
(assert (= temp605_178 temp605_177))
(assert (= temp605_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_178)))
(assert (= temp605_180 #x0000000000000004))
(assert (= temp605_181 temp605_180))
(assert (= temp605_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_181)))
(assert (= temp605_183 #x0000000000000005))
(assert (= temp605_184 temp605_183))
(assert (= temp605_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_184)))
(assert (= temp605_186 #x0000000000000000))
(assert (= temp605_187
   (ite (bvslt var1311786 temp605_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp605_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_187)))
(assert (= var1322903 temp605_188))
(assert (bvslt (ite (bvslt var1311786 temp605_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp605_189 #x0000000000000001))
(assert (= var1311786 temp605_189))
(assert (= temp605_191 var1311786))
(assert (= temp605_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_191)))
(assert (= temp605_190 temp605_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp605_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_193 #x0000000000000001))
(assert (= var1322908 temp605_193))
(assert (= temp605_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp605_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_195 #x0000000000000001))
(assert (= var1322975 temp605_195))
(assert (= temp605_196 #x0000000000000000))
(assert (= var1310898 temp605_196))
(assert (= temp605_197 #x0000000000000000))
(assert (= temp605_198 temp605_197))
(assert (= temp605_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp605_198)))
(assert (= temp605_200 #x0000000000000001))
(assert (= temp605_201 temp605_200))
(assert (= temp605_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp605_201)))
(assert (= temp605_203 #x0000000000000002))
(assert (= temp605_204 temp605_203))
(assert (= temp605_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp605_204)))
(assert (= temp605_206 #x0000000000000003))
(assert (= temp605_207 temp605_206))
(assert (= temp605_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp605_207)))
(assert (= temp605_209 #x0000000000000004))
(assert (= temp605_210 temp605_209))
(assert (= temp605_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp605_210)))
(assert (= temp605_212 #x0000000000000005))
(assert (= temp605_213 temp605_212))
(assert (= temp605_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp605_213)))
(assert (= temp605_215 #x0000000000000000))
(assert (= temp605_216
   (ite (bvslt var1310898 temp605_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp605_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp605_216)))
(assert (= var1322977 temp605_217))
(assert (bvslt (ite (bvslt var1310898 temp605_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp605_218 #x0000000000000000))
(assert (= var1310898 temp605_218))
(assert (= temp605_220 var1310898))
(assert (= temp605_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_220)))
(assert (= temp605_219 temp605_221))
(assert (= var1322980
   (ite (= var1322977 temp605_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_222 #x0000000000000001))
(assert (= var1322980 temp605_222))
(assert (= temp605_223 #x0000000000000002))
(assert (= var1848169 temp605_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp605_225 #x0000000000000001))
(assert (= var1323065 temp605_225))
(assert (= temp605_226 #x0000000000000001))
(assert (= var3486735 temp605_226))
(assert (= temp605_227 #x0000000000000001))
(assert (= var3814415 temp605_227))
(assert (= temp605_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp605_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_229 #x0000000000000001))
(assert (= var79986 temp605_229))
(assert (= temp605_230 #x0000000000000001))
(assert (= var80116 temp605_230))
(assert (= var4796905 var80116))
(assert (= temp605_231 #x0000000000000000))
(assert (= var4784306 temp605_231))
(assert (= temp605_232 #x0000000000000000))
(assert (= temp605_233
   (ite (bvslt var4784306 temp605_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp605_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_233)))
(assert (= var4796924 temp605_234))
(assert (bvslt (ite (bvslt var4784306 temp605_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp605_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp605_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_236 #x0000000000000001))
(assert (= var4796925 temp605_236))
(assert (= temp605_237 #x0000000000000000))
(assert (= var4996927 temp605_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp605_238 #x0000000000000002))
(assert (= var5125763 temp605_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_239 #x0000000000000000))
(assert (= var5191324 temp605_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp605_240 #x0000000000000000))
(assert (= var5386640 temp605_240))
(assert (= temp605_241 #x0000000000000001))
(assert (= var79986 temp605_241))
(model-add temp605_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp605_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp605_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






