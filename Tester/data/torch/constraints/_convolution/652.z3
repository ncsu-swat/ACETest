(declare-fun temp866_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp866_2 () (_ BitVec 64))
(declare-fun temp866_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp866_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp866_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp866_6 () (_ BitVec 64))
(declare-fun temp866_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_8 () (_ BitVec 64))
(declare-fun temp866_9 () (_ BitVec 64))
(declare-fun temp866_10 () (_ BitVec 64))
(declare-fun temp866_11 () (_ BitVec 64))
(declare-fun temp866_12 () (_ BitVec 64))
(declare-fun temp866_13 () (_ BitVec 64))
(declare-fun temp866_14 () (_ BitVec 64))
(declare-fun temp866_15 () (_ BitVec 64))
(declare-fun temp866_16 () (_ BitVec 64))
(declare-fun temp866_17 () (_ BitVec 64))
(declare-fun temp866_18 () (_ BitVec 64))
(declare-fun temp866_19 () (_ BitVec 64))
(declare-fun temp866_20 () (_ BitVec 64))
(declare-fun temp866_21 () (_ BitVec 64))
(declare-fun temp866_22 () (_ BitVec 64))
(declare-fun temp866_23 () (_ BitVec 64))
(declare-fun temp866_24 () (_ BitVec 64))
(declare-fun temp866_25 () (_ BitVec 64))
(declare-fun temp866_26 () (_ BitVec 64))
(declare-fun temp866_27 () (_ BitVec 64))
(declare-fun temp866_28 () (_ BitVec 64))
(declare-fun temp866_29 () (_ BitVec 64))
(declare-fun temp866_30 () (_ BitVec 64))
(declare-fun temp866_31 () (_ BitVec 64))
(declare-fun temp866_32 () (_ BitVec 64))
(declare-fun temp866_33 () (_ BitVec 64))
(declare-fun temp866_34 () (_ BitVec 64))
(declare-fun temp866_35 () (_ BitVec 64))
(declare-fun temp866_36 () (_ BitVec 64))
(declare-fun temp866_37 () (_ BitVec 64))
(declare-fun temp866_38 () (_ BitVec 64))
(declare-fun temp866_39 () (_ BitVec 64))
(declare-fun temp866_40 () (_ BitVec 64))
(declare-fun temp866_41 () (_ BitVec 64))
(declare-fun temp866_42 () (_ BitVec 64))
(declare-fun temp866_43 () (_ BitVec 64))
(declare-fun temp866_44 () (_ BitVec 64))
(declare-fun temp866_45 () (_ BitVec 64))
(declare-fun temp866_46 () (_ BitVec 64))
(declare-fun temp866_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp866_48 () (_ BitVec 64))
(declare-fun temp866_49 () (_ BitVec 64))
(declare-fun temp866_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_51 () (_ BitVec 64))
(declare-fun temp866_52 () (_ BitVec 64))
(declare-fun temp866_53 () (_ BitVec 64))
(declare-fun temp866_54 () (_ BitVec 64))
(declare-fun temp866_55 () (_ BitVec 64))
(declare-fun temp866_56 () (_ BitVec 64))
(declare-fun temp866_57 () (_ BitVec 64))
(declare-fun temp866_58 () (_ BitVec 64))
(declare-fun temp866_59 () (_ BitVec 64))
(declare-fun temp866_60 () (_ BitVec 64))
(declare-fun temp866_61 () (_ BitVec 64))
(declare-fun temp866_62 () (_ BitVec 64))
(declare-fun temp866_63 () (_ BitVec 64))
(declare-fun temp866_64 () (_ BitVec 64))
(declare-fun temp866_65 () (_ BitVec 64))
(declare-fun temp866_66 () (_ BitVec 64))
(declare-fun temp866_67 () (_ BitVec 64))
(declare-fun temp866_68 () (_ BitVec 64))
(declare-fun temp866_69 () (_ BitVec 64))
(declare-fun temp866_70 () (_ BitVec 64))
(declare-fun temp866_71 () (_ BitVec 64))
(declare-fun temp866_72 () (_ BitVec 64))
(declare-fun temp866_73 () (_ BitVec 64))
(declare-fun temp866_74 () (_ BitVec 64))
(declare-fun temp866_75 () (_ BitVec 64))
(declare-fun temp866_76 () (_ BitVec 64))
(declare-fun temp866_77 () (_ BitVec 64))
(declare-fun temp866_78 () (_ BitVec 64))
(declare-fun temp866_79 () (_ BitVec 64))
(declare-fun temp866_80 () (_ BitVec 64))
(declare-fun temp866_81 () (_ BitVec 64))
(declare-fun temp866_82 () (_ BitVec 64))
(declare-fun temp866_83 () (_ BitVec 64))
(declare-fun temp866_84 () (_ BitVec 64))
(declare-fun temp866_85 () (_ BitVec 64))
(declare-fun temp866_86 () (_ BitVec 64))
(declare-fun temp866_87 () (_ BitVec 64))
(declare-fun temp866_88 () (_ BitVec 64))
(declare-fun temp866_89 () (_ BitVec 64))
(declare-fun temp866_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp866_91 () (_ BitVec 64))
(declare-fun temp866_92 () (_ BitVec 64))
(declare-fun temp866_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_94 () (_ BitVec 64))
(declare-fun temp866_95 () (_ BitVec 64))
(declare-fun temp866_96 () (_ BitVec 64))
(declare-fun temp866_97 () (_ BitVec 64))
(declare-fun temp866_98 () (_ BitVec 64))
(declare-fun temp866_99 () (_ BitVec 64))
(declare-fun temp866_100 () (_ BitVec 64))
(declare-fun temp866_101 () (_ BitVec 64))
(declare-fun temp866_102 () (_ BitVec 64))
(declare-fun temp866_103 () (_ BitVec 64))
(declare-fun temp866_104 () (_ BitVec 64))
(declare-fun temp866_105 () (_ BitVec 64))
(declare-fun temp866_106 () (_ BitVec 64))
(declare-fun temp866_107 () (_ BitVec 64))
(declare-fun temp866_108 () (_ BitVec 64))
(declare-fun temp866_109 () (_ BitVec 64))
(declare-fun temp866_110 () (_ BitVec 64))
(declare-fun temp866_111 () (_ BitVec 64))
(declare-fun temp866_112 () (_ BitVec 64))
(declare-fun temp866_113 () (_ BitVec 64))
(declare-fun temp866_114 () (_ BitVec 64))
(declare-fun temp866_115 () (_ BitVec 64))
(declare-fun temp866_116 () (_ BitVec 64))
(declare-fun temp866_117 () (_ BitVec 64))
(declare-fun temp866_118 () (_ BitVec 64))
(declare-fun temp866_119 () (_ BitVec 64))
(declare-fun temp866_120 () (_ BitVec 64))
(declare-fun temp866_121 () (_ BitVec 64))
(declare-fun temp866_122 () (_ BitVec 64))
(declare-fun temp866_123 () (_ BitVec 64))
(declare-fun temp866_124 () (_ BitVec 64))
(declare-fun temp866_125 () (_ BitVec 64))
(declare-fun temp866_126 () (_ BitVec 64))
(declare-fun temp866_127 () (_ BitVec 64))
(declare-fun temp866_128 () (_ BitVec 64))
(declare-fun temp866_129 () (_ BitVec 64))
(declare-fun temp866_130 () (_ BitVec 64))
(declare-fun temp866_131 () (_ BitVec 64))
(declare-fun temp866_132 () (_ BitVec 64))
(declare-fun temp866_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp866_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp866_135 () (_ BitVec 64))
(declare-fun temp866_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp866_137 () (_ BitVec 64))
(declare-fun temp866_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_139 () (_ BitVec 64))
(declare-fun temp866_140 () (_ BitVec 64))
(declare-fun temp866_141 () (_ BitVec 64))
(declare-fun temp866_142 () (_ BitVec 64))
(declare-fun temp866_143 () (_ BitVec 64))
(declare-fun temp866_144 () (_ BitVec 64))
(declare-fun temp866_145 () (_ BitVec 64))
(declare-fun temp866_146 () (_ BitVec 64))
(declare-fun temp866_147 () (_ BitVec 64))
(declare-fun temp866_148 () (_ BitVec 64))
(declare-fun temp866_149 () (_ BitVec 64))
(declare-fun temp866_150 () (_ BitVec 64))
(declare-fun temp866_151 () (_ BitVec 64))
(declare-fun temp866_152 () (_ BitVec 64))
(declare-fun temp866_153 () (_ BitVec 64))
(declare-fun temp866_154 () (_ BitVec 64))
(declare-fun temp866_156 () (_ BitVec 64))
(declare-fun temp866_157 () (_ BitVec 64))
(declare-fun temp866_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp866_158 () (_ BitVec 64))
(declare-fun temp866_159 () (_ BitVec 64))
(declare-fun temp866_161 () (_ BitVec 64))
(declare-fun temp866_162 () (_ BitVec 64))
(declare-fun temp866_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp866_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp866_164 () (_ BitVec 64))
(declare-fun temp866_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp866_166 () (_ BitVec 64))
(declare-fun temp866_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp866_168 () (_ BitVec 64))
(declare-fun temp866_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_170 () (_ BitVec 64))
(declare-fun temp866_171 () (_ BitVec 64))
(declare-fun temp866_172 () (_ BitVec 64))
(declare-fun temp866_173 () (_ BitVec 64))
(declare-fun temp866_174 () (_ BitVec 64))
(declare-fun temp866_175 () (_ BitVec 64))
(declare-fun temp866_176 () (_ BitVec 64))
(declare-fun temp866_177 () (_ BitVec 64))
(declare-fun temp866_178 () (_ BitVec 64))
(declare-fun temp866_179 () (_ BitVec 64))
(declare-fun temp866_180 () (_ BitVec 64))
(declare-fun temp866_181 () (_ BitVec 64))
(declare-fun temp866_182 () (_ BitVec 64))
(declare-fun temp866_183 () (_ BitVec 64))
(declare-fun temp866_184 () (_ BitVec 64))
(declare-fun temp866_185 () (_ BitVec 64))
(declare-fun temp866_186 () (_ BitVec 64))
(declare-fun temp866_187 () (_ BitVec 64))
(declare-fun temp866_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp866_189 () (_ BitVec 64))
(declare-fun temp866_191 () (_ BitVec 64))
(declare-fun temp866_192 () (_ BitVec 64))
(declare-fun temp866_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp866_193 () (_ BitVec 64))
(declare-fun temp866_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp866_195 () (_ BitVec 64))
(declare-fun temp866_196 () (_ BitVec 64))
(declare-fun temp866_197 () (_ BitVec 64))
(declare-fun temp866_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_199 () (_ BitVec 64))
(declare-fun temp866_200 () (_ BitVec 64))
(declare-fun temp866_201 () (_ BitVec 64))
(declare-fun temp866_202 () (_ BitVec 64))
(declare-fun temp866_203 () (_ BitVec 64))
(declare-fun temp866_204 () (_ BitVec 64))
(declare-fun temp866_205 () (_ BitVec 64))
(declare-fun temp866_206 () (_ BitVec 64))
(declare-fun temp866_207 () (_ BitVec 64))
(declare-fun temp866_208 () (_ BitVec 64))
(declare-fun temp866_209 () (_ BitVec 64))
(declare-fun temp866_210 () (_ BitVec 64))
(declare-fun temp866_211 () (_ BitVec 64))
(declare-fun temp866_212 () (_ BitVec 64))
(declare-fun temp866_213 () (_ BitVec 64))
(declare-fun temp866_214 () (_ BitVec 64))
(declare-fun temp866_215 () (_ BitVec 64))
(declare-fun temp866_216 () (_ BitVec 64))
(declare-fun temp866_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp866_218 () (_ BitVec 64))
(declare-fun temp866_220 () (_ BitVec 64))
(declare-fun temp866_221 () (_ BitVec 64))
(declare-fun temp866_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp866_222 () (_ BitVec 64))
(declare-fun temp866_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp866_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp866_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp866_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp866_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp866_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp866_229 () (_ BitVec 64))
(declare-fun temp866_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp866_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp866_232 () (_ BitVec 64))
(declare-fun temp866_233 () (_ BitVec 64))
(declare-fun temp866_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp866_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp866_236 () (_ BitVec 64))
(declare-fun temp866_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp866_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp866_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun temp866_240 () (_ BitVec 64))
(assert (= temp866_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp866_1)))
(assert (= temp866_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp866_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_3 #x0000000000000000))
(assert (= var79869 temp866_3))
(assert (= temp866_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp866_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_5 #x0000000000000000))
(assert (= var79914 temp866_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp866_6 #x0000000000000000))
(assert (= temp866_7 temp866_6))
(assert (= temp866_8 (select ARGNAME_padding_NAMEEND_VAL temp866_7)))
(assert (= temp866_9 #x0000000000000001))
(assert (= temp866_10 temp866_9))
(assert (= temp866_11 (select ARGNAME_padding_NAMEEND_VAL temp866_10)))
(assert (= temp866_12 #x0000000000000002))
(assert (= temp866_13 temp866_12))
(assert (= temp866_14 (select ARGNAME_padding_NAMEEND_VAL temp866_13)))
(assert (= temp866_15 #x0000000000000003))
(assert (= temp866_16 temp866_15))
(assert (= temp866_17 (select ARGNAME_padding_NAMEEND_VAL temp866_16)))
(assert (= temp866_18 #x0000000000000004))
(assert (= temp866_19 temp866_18))
(assert (= temp866_20 (select ARGNAME_padding_NAMEEND_VAL temp866_19)))
(assert (= temp866_21 #x0000000000000005))
(assert (= temp866_22 temp866_21))
(assert (= temp866_23 (select ARGNAME_padding_NAMEEND_VAL temp866_22)))
(assert (= temp866_24 #x0000000000000000))
(assert (= temp866_25 #x0000000000000000))
(assert (= temp866_26 temp866_25))
(assert (= temp866_27 (select ARGNAME_padding_NAMEEND_VAL temp866_26)))
(assert (= temp866_28 #x0000000000000000))
(assert (= temp866_29 #x0000000000000001))
(assert (= temp866_30 temp866_29))
(assert (= temp866_31 (select ARGNAME_padding_NAMEEND_VAL temp866_30)))
(assert (= temp866_32 #x0000000000000000))
(assert (= temp866_33 #x0000000000000002))
(assert (= temp866_34 temp866_33))
(assert (= temp866_35 (select ARGNAME_padding_NAMEEND_VAL temp866_34)))
(assert (= temp866_36 #x0000000000000000))
(assert (= temp866_37 #x0000000000000003))
(assert (= temp866_38 temp866_37))
(assert (= temp866_39 (select ARGNAME_padding_NAMEEND_VAL temp866_38)))
(assert (= temp866_40 #x0000000000000000))
(assert (= temp866_41 #x0000000000000004))
(assert (= temp866_42 temp866_41))
(assert (= temp866_43 (select ARGNAME_padding_NAMEEND_VAL temp866_42)))
(assert (= temp866_44 #x0000000000000000))
(assert (= temp866_45 #x0000000000000005))
(assert (= temp866_46 temp866_45))
(assert (= temp866_47 (select ARGNAME_padding_NAMEEND_VAL temp866_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp866_27 temp866_24)
             (bvslt temp866_31 temp866_28)
             (bvslt temp866_35 temp866_32)
             (bvslt temp866_39 temp866_36)
             (bvslt temp866_43 temp866_40)
             (bvslt temp866_47 temp866_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_48 #x0000000000000000))
(assert (= var1322786 temp866_48))
(assert (= temp866_49 #x0000000000000000))
(assert (= temp866_50 temp866_49))
(assert (= temp866_51 (select ARGNAME_output_padding_NAMEEND_VAL temp866_50)))
(assert (= temp866_52 #x0000000000000001))
(assert (= temp866_53 temp866_52))
(assert (= temp866_54 (select ARGNAME_output_padding_NAMEEND_VAL temp866_53)))
(assert (= temp866_55 #x0000000000000002))
(assert (= temp866_56 temp866_55))
(assert (= temp866_57 (select ARGNAME_output_padding_NAMEEND_VAL temp866_56)))
(assert (= temp866_58 #x0000000000000003))
(assert (= temp866_59 temp866_58))
(assert (= temp866_60 (select ARGNAME_output_padding_NAMEEND_VAL temp866_59)))
(assert (= temp866_61 #x0000000000000004))
(assert (= temp866_62 temp866_61))
(assert (= temp866_63 (select ARGNAME_output_padding_NAMEEND_VAL temp866_62)))
(assert (= temp866_64 #x0000000000000005))
(assert (= temp866_65 temp866_64))
(assert (= temp866_66 (select ARGNAME_output_padding_NAMEEND_VAL temp866_65)))
(assert (= temp866_67 #x0000000000000000))
(assert (= temp866_68 #x0000000000000000))
(assert (= temp866_69 temp866_68))
(assert (= temp866_70 (select ARGNAME_output_padding_NAMEEND_VAL temp866_69)))
(assert (= temp866_71 #x0000000000000000))
(assert (= temp866_72 #x0000000000000001))
(assert (= temp866_73 temp866_72))
(assert (= temp866_74 (select ARGNAME_output_padding_NAMEEND_VAL temp866_73)))
(assert (= temp866_75 #x0000000000000000))
(assert (= temp866_76 #x0000000000000002))
(assert (= temp866_77 temp866_76))
(assert (= temp866_78 (select ARGNAME_output_padding_NAMEEND_VAL temp866_77)))
(assert (= temp866_79 #x0000000000000000))
(assert (= temp866_80 #x0000000000000003))
(assert (= temp866_81 temp866_80))
(assert (= temp866_82 (select ARGNAME_output_padding_NAMEEND_VAL temp866_81)))
(assert (= temp866_83 #x0000000000000000))
(assert (= temp866_84 #x0000000000000004))
(assert (= temp866_85 temp866_84))
(assert (= temp866_86 (select ARGNAME_output_padding_NAMEEND_VAL temp866_85)))
(assert (= temp866_87 #x0000000000000000))
(assert (= temp866_88 #x0000000000000005))
(assert (= temp866_89 temp866_88))
(assert (= temp866_90 (select ARGNAME_output_padding_NAMEEND_VAL temp866_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp866_70 temp866_67)
             (bvslt temp866_74 temp866_71)
             (bvslt temp866_78 temp866_75)
             (bvslt temp866_82 temp866_79)
             (bvslt temp866_86 temp866_83)
             (bvslt temp866_90 temp866_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_91 #x0000000000000000))
(assert (= var1322797 temp866_91))
(assert (= temp866_92 #x0000000000000000))
(assert (= temp866_93 temp866_92))
(assert (= temp866_94 (select ARGNAME_stride_NAMEEND_VAL temp866_93)))
(assert (= temp866_95 #x0000000000000001))
(assert (= temp866_96 temp866_95))
(assert (= temp866_97 (select ARGNAME_stride_NAMEEND_VAL temp866_96)))
(assert (= temp866_98 #x0000000000000002))
(assert (= temp866_99 temp866_98))
(assert (= temp866_100 (select ARGNAME_stride_NAMEEND_VAL temp866_99)))
(assert (= temp866_101 #x0000000000000003))
(assert (= temp866_102 temp866_101))
(assert (= temp866_103 (select ARGNAME_stride_NAMEEND_VAL temp866_102)))
(assert (= temp866_104 #x0000000000000004))
(assert (= temp866_105 temp866_104))
(assert (= temp866_106 (select ARGNAME_stride_NAMEEND_VAL temp866_105)))
(assert (= temp866_107 #x0000000000000005))
(assert (= temp866_108 temp866_107))
(assert (= temp866_109 (select ARGNAME_stride_NAMEEND_VAL temp866_108)))
(assert (= temp866_110 #x0000000000000000))
(assert (= temp866_111 #x0000000000000000))
(assert (= temp866_112 temp866_111))
(assert (= temp866_113 (select ARGNAME_stride_NAMEEND_VAL temp866_112)))
(assert (= temp866_114 #x0000000000000000))
(assert (= temp866_115 #x0000000000000001))
(assert (= temp866_116 temp866_115))
(assert (= temp866_117 (select ARGNAME_stride_NAMEEND_VAL temp866_116)))
(assert (= temp866_118 #x0000000000000000))
(assert (= temp866_119 #x0000000000000002))
(assert (= temp866_120 temp866_119))
(assert (= temp866_121 (select ARGNAME_stride_NAMEEND_VAL temp866_120)))
(assert (= temp866_122 #x0000000000000000))
(assert (= temp866_123 #x0000000000000003))
(assert (= temp866_124 temp866_123))
(assert (= temp866_125 (select ARGNAME_stride_NAMEEND_VAL temp866_124)))
(assert (= temp866_126 #x0000000000000000))
(assert (= temp866_127 #x0000000000000004))
(assert (= temp866_128 temp866_127))
(assert (= temp866_129 (select ARGNAME_stride_NAMEEND_VAL temp866_128)))
(assert (= temp866_130 #x0000000000000000))
(assert (= temp866_131 #x0000000000000005))
(assert (= temp866_132 temp866_131))
(assert (= temp866_133 (select ARGNAME_stride_NAMEEND_VAL temp866_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp866_113 temp866_110)
             (bvsle temp866_117 temp866_114)
             (bvsle temp866_121 temp866_118)
             (bvsle temp866_125 temp866_122)
             (bvsle temp866_129 temp866_126)
             (bvsle temp866_133 temp866_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_134 #x0000000000000000))
(assert (= var1322807 temp866_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_135 #x0000000000000001))
(assert (= var1322819 temp866_135))
(assert (= temp866_136 #x0000000000000000))
(assert (= var1310898 temp866_136))
(assert (= temp866_137 #x0000000000000000))
(assert (= temp866_138 temp866_137))
(assert (= temp866_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_138)))
(assert (= temp866_140 #x0000000000000001))
(assert (= temp866_141 temp866_140))
(assert (= temp866_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_141)))
(assert (= temp866_143 #x0000000000000002))
(assert (= temp866_144 temp866_143))
(assert (= temp866_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_144)))
(assert (= temp866_146 #x0000000000000003))
(assert (= temp866_147 temp866_146))
(assert (= temp866_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_147)))
(assert (= temp866_149 #x0000000000000004))
(assert (= temp866_150 temp866_149))
(assert (= temp866_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_150)))
(assert (= temp866_152 #x0000000000000005))
(assert (= temp866_153 temp866_152))
(assert (= temp866_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_153)))
(assert (= temp866_156 var1310898))
(assert (= temp866_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_156)))
(assert (= temp866_155 temp866_157))
(assert (= var1322852
   (ite (bvslt temp866_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_158 #x0000000000000000))
(assert (= var1322852 temp866_158))
(assert (= temp866_159 #x0000000000000000))
(assert (= var1310898 temp866_159))
(assert (= temp866_161 var1310898))
(assert (= temp866_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_161)))
(assert (= temp866_160 temp866_162))
(assert (= var1322874 (bvsmod temp866_160 ARGNAME_groups_NAMEEND)))
(assert (= temp866_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp866_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_164 #x0000000000000001))
(assert (= var1322875 temp866_164))
(assert (= temp866_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp866_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_166 #x0000000000000001))
(assert (= var1322895 temp866_166))
(assert (= temp866_167 #x0000000000000001))
(assert (= var1311786 temp866_167))
(assert (= temp866_168 #x0000000000000000))
(assert (= temp866_169 temp866_168))
(assert (= temp866_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_169)))
(assert (= temp866_171 #x0000000000000001))
(assert (= temp866_172 temp866_171))
(assert (= temp866_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_172)))
(assert (= temp866_174 #x0000000000000002))
(assert (= temp866_175 temp866_174))
(assert (= temp866_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_175)))
(assert (= temp866_177 #x0000000000000003))
(assert (= temp866_178 temp866_177))
(assert (= temp866_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_178)))
(assert (= temp866_180 #x0000000000000004))
(assert (= temp866_181 temp866_180))
(assert (= temp866_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_181)))
(assert (= temp866_183 #x0000000000000005))
(assert (= temp866_184 temp866_183))
(assert (= temp866_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_184)))
(assert (= temp866_186 #x0000000000000000))
(assert (= temp866_187
   (ite (bvslt var1311786 temp866_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp866_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_187)))
(assert (= var1322903 temp866_188))
(assert (bvslt (ite (bvslt var1311786 temp866_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp866_189 #x0000000000000001))
(assert (= var1311786 temp866_189))
(assert (= temp866_191 var1311786))
(assert (= temp866_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_191)))
(assert (= temp866_190 temp866_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp866_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_193 #x0000000000000001))
(assert (= var1322908 temp866_193))
(assert (= temp866_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp866_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_195 #x0000000000000001))
(assert (= var1322975 temp866_195))
(assert (= temp866_196 #x0000000000000000))
(assert (= var1310898 temp866_196))
(assert (= temp866_197 #x0000000000000000))
(assert (= temp866_198 temp866_197))
(assert (= temp866_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp866_198)))
(assert (= temp866_200 #x0000000000000001))
(assert (= temp866_201 temp866_200))
(assert (= temp866_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp866_201)))
(assert (= temp866_203 #x0000000000000002))
(assert (= temp866_204 temp866_203))
(assert (= temp866_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp866_204)))
(assert (= temp866_206 #x0000000000000003))
(assert (= temp866_207 temp866_206))
(assert (= temp866_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp866_207)))
(assert (= temp866_209 #x0000000000000004))
(assert (= temp866_210 temp866_209))
(assert (= temp866_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp866_210)))
(assert (= temp866_212 #x0000000000000005))
(assert (= temp866_213 temp866_212))
(assert (= temp866_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp866_213)))
(assert (= temp866_215 #x0000000000000000))
(assert (= temp866_216
   (ite (bvslt var1310898 temp866_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp866_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp866_216)))
(assert (= var1322977 temp866_217))
(assert (bvslt (ite (bvslt var1310898 temp866_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp866_218 #x0000000000000000))
(assert (= var1310898 temp866_218))
(assert (= temp866_220 var1310898))
(assert (= temp866_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_220)))
(assert (= temp866_219 temp866_221))
(assert (= var1322980
   (ite (= var1322977 temp866_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_222 #x0000000000000001))
(assert (= var1322980 temp866_222))
(assert (= temp866_223 #x0000000000000002))
(assert (= var1848169 temp866_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp866_225 #x0000000000000001))
(assert (= var1323065 temp866_225))
(assert (= temp866_226 #x0000000000000001))
(assert (= var3486735 temp866_226))
(assert (= temp866_227 #x0000000000000001))
(assert (= var3814415 temp866_227))
(assert (= temp866_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp866_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_229 #x0000000000000001))
(assert (= var79986 temp866_229))
(assert (= temp866_230 #x0000000000000001))
(assert (= var80116 temp866_230))
(assert (= var4796905 var80116))
(assert (= temp866_231 #x0000000000000000))
(assert (= var4784306 temp866_231))
(assert (= temp866_232 #x0000000000000000))
(assert (= temp866_233
   (ite (bvslt var4784306 temp866_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp866_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_233)))
(assert (= var4796924 temp866_234))
(assert (bvslt (ite (bvslt var4784306 temp866_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp866_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp866_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_236 #x0000000000000001))
(assert (= var4796925 temp866_236))
(assert (= temp866_237 #x0000000000000000))
(assert (= var4996927 temp866_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp866_238 #x0000000000000002))
(assert (= var5125763 temp866_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_239 #x0000000000000000))
(assert (= var5191324 temp866_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5976464 var80129))
(assert (= var6238608 var80129))
(assert (= temp866_240 #x0000000000000001))
(assert (= var79986 temp866_240))
(model-add temp866_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp866_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp866_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






