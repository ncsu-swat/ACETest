(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(declare-fun temp0_49 () (_ BitVec 64))
(declare-fun temp0_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_51 () (_ BitVec 64))
(declare-fun temp0_52 () (_ BitVec 64))
(declare-fun temp0_53 () (_ BitVec 64))
(declare-fun temp0_54 () (_ BitVec 64))
(declare-fun temp0_55 () (_ BitVec 64))
(declare-fun temp0_56 () (_ BitVec 64))
(declare-fun temp0_57 () (_ BitVec 64))
(declare-fun temp0_58 () (_ BitVec 64))
(declare-fun temp0_59 () (_ BitVec 64))
(declare-fun temp0_60 () (_ BitVec 64))
(declare-fun temp0_61 () (_ BitVec 64))
(declare-fun temp0_62 () (_ BitVec 64))
(declare-fun temp0_63 () (_ BitVec 64))
(declare-fun temp0_64 () (_ BitVec 64))
(declare-fun temp0_65 () (_ BitVec 64))
(declare-fun temp0_66 () (_ BitVec 64))
(declare-fun temp0_67 () (_ BitVec 64))
(declare-fun temp0_68 () (_ BitVec 64))
(declare-fun temp0_69 () (_ BitVec 64))
(declare-fun temp0_70 () (_ BitVec 64))
(declare-fun temp0_71 () (_ BitVec 64))
(declare-fun temp0_72 () (_ BitVec 64))
(declare-fun temp0_73 () (_ BitVec 64))
(declare-fun temp0_74 () (_ BitVec 64))
(declare-fun temp0_75 () (_ BitVec 64))
(declare-fun temp0_76 () (_ BitVec 64))
(declare-fun temp0_77 () (_ BitVec 64))
(declare-fun temp0_78 () (_ BitVec 64))
(declare-fun temp0_79 () (_ BitVec 64))
(declare-fun temp0_80 () (_ BitVec 64))
(declare-fun temp0_81 () (_ BitVec 64))
(declare-fun temp0_82 () (_ BitVec 64))
(declare-fun temp0_83 () (_ BitVec 64))
(declare-fun temp0_84 () (_ BitVec 64))
(declare-fun temp0_85 () (_ BitVec 64))
(declare-fun temp0_86 () (_ BitVec 64))
(declare-fun temp0_87 () (_ BitVec 64))
(declare-fun temp0_88 () (_ BitVec 64))
(declare-fun temp0_89 () (_ BitVec 64))
(declare-fun temp0_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp0_91 () (_ BitVec 64))
(declare-fun temp0_92 () (_ BitVec 64))
(declare-fun temp0_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_94 () (_ BitVec 64))
(declare-fun temp0_95 () (_ BitVec 64))
(declare-fun temp0_96 () (_ BitVec 64))
(declare-fun temp0_97 () (_ BitVec 64))
(declare-fun temp0_98 () (_ BitVec 64))
(declare-fun temp0_99 () (_ BitVec 64))
(declare-fun temp0_100 () (_ BitVec 64))
(declare-fun temp0_101 () (_ BitVec 64))
(declare-fun temp0_102 () (_ BitVec 64))
(declare-fun temp0_103 () (_ BitVec 64))
(declare-fun temp0_104 () (_ BitVec 64))
(declare-fun temp0_105 () (_ BitVec 64))
(declare-fun temp0_106 () (_ BitVec 64))
(declare-fun temp0_107 () (_ BitVec 64))
(declare-fun temp0_108 () (_ BitVec 64))
(declare-fun temp0_109 () (_ BitVec 64))
(declare-fun temp0_110 () (_ BitVec 64))
(declare-fun temp0_111 () (_ BitVec 64))
(declare-fun temp0_112 () (_ BitVec 64))
(declare-fun temp0_113 () (_ BitVec 64))
(declare-fun temp0_114 () (_ BitVec 64))
(declare-fun temp0_115 () (_ BitVec 64))
(declare-fun temp0_116 () (_ BitVec 64))
(declare-fun temp0_117 () (_ BitVec 64))
(declare-fun temp0_118 () (_ BitVec 64))
(declare-fun temp0_119 () (_ BitVec 64))
(declare-fun temp0_120 () (_ BitVec 64))
(declare-fun temp0_121 () (_ BitVec 64))
(declare-fun temp0_122 () (_ BitVec 64))
(declare-fun temp0_123 () (_ BitVec 64))
(declare-fun temp0_124 () (_ BitVec 64))
(declare-fun temp0_125 () (_ BitVec 64))
(declare-fun temp0_126 () (_ BitVec 64))
(declare-fun temp0_127 () (_ BitVec 64))
(declare-fun temp0_128 () (_ BitVec 64))
(declare-fun temp0_129 () (_ BitVec 64))
(declare-fun temp0_130 () (_ BitVec 64))
(declare-fun temp0_131 () (_ BitVec 64))
(declare-fun temp0_132 () (_ BitVec 64))
(declare-fun temp0_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp0_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp0_135 () (_ BitVec 64))
(declare-fun temp0_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp0_137 () (_ BitVec 64))
(declare-fun temp0_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_139 () (_ BitVec 64))
(declare-fun temp0_140 () (_ BitVec 64))
(declare-fun temp0_141 () (_ BitVec 64))
(declare-fun temp0_142 () (_ BitVec 64))
(declare-fun temp0_143 () (_ BitVec 64))
(declare-fun temp0_144 () (_ BitVec 64))
(declare-fun temp0_145 () (_ BitVec 64))
(declare-fun temp0_146 () (_ BitVec 64))
(declare-fun temp0_147 () (_ BitVec 64))
(declare-fun temp0_148 () (_ BitVec 64))
(declare-fun temp0_149 () (_ BitVec 64))
(declare-fun temp0_150 () (_ BitVec 64))
(declare-fun temp0_151 () (_ BitVec 64))
(declare-fun temp0_152 () (_ BitVec 64))
(declare-fun temp0_153 () (_ BitVec 64))
(declare-fun temp0_154 () (_ BitVec 64))
(declare-fun temp0_156 () (_ BitVec 64))
(declare-fun temp0_157 () (_ BitVec 64))
(declare-fun temp0_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp0_158 () (_ BitVec 64))
(declare-fun temp0_159 () (_ BitVec 64))
(declare-fun temp0_161 () (_ BitVec 64))
(declare-fun temp0_162 () (_ BitVec 64))
(declare-fun temp0_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp0_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp0_164 () (_ BitVec 64))
(declare-fun temp0_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp0_166 () (_ BitVec 64))
(declare-fun temp0_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp0_168 () (_ BitVec 64))
(declare-fun temp0_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_170 () (_ BitVec 64))
(declare-fun temp0_171 () (_ BitVec 64))
(declare-fun temp0_172 () (_ BitVec 64))
(declare-fun temp0_173 () (_ BitVec 64))
(declare-fun temp0_174 () (_ BitVec 64))
(declare-fun temp0_175 () (_ BitVec 64))
(declare-fun temp0_176 () (_ BitVec 64))
(declare-fun temp0_177 () (_ BitVec 64))
(declare-fun temp0_178 () (_ BitVec 64))
(declare-fun temp0_179 () (_ BitVec 64))
(declare-fun temp0_180 () (_ BitVec 64))
(declare-fun temp0_181 () (_ BitVec 64))
(declare-fun temp0_182 () (_ BitVec 64))
(declare-fun temp0_183 () (_ BitVec 64))
(declare-fun temp0_184 () (_ BitVec 64))
(declare-fun temp0_185 () (_ BitVec 64))
(declare-fun temp0_186 () (_ BitVec 64))
(declare-fun temp0_187 () (_ BitVec 64))
(declare-fun temp0_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp0_189 () (_ BitVec 64))
(declare-fun temp0_191 () (_ BitVec 64))
(declare-fun temp0_192 () (_ BitVec 64))
(declare-fun temp0_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp0_193 () (_ BitVec 64))
(declare-fun temp0_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp0_195 () (_ BitVec 64))
(declare-fun temp0_196 () (_ BitVec 64))
(declare-fun temp0_197 () (_ BitVec 64))
(declare-fun temp0_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_199 () (_ BitVec 64))
(declare-fun temp0_200 () (_ BitVec 64))
(declare-fun temp0_201 () (_ BitVec 64))
(declare-fun temp0_202 () (_ BitVec 64))
(declare-fun temp0_203 () (_ BitVec 64))
(declare-fun temp0_204 () (_ BitVec 64))
(declare-fun temp0_205 () (_ BitVec 64))
(declare-fun temp0_206 () (_ BitVec 64))
(declare-fun temp0_207 () (_ BitVec 64))
(declare-fun temp0_208 () (_ BitVec 64))
(declare-fun temp0_209 () (_ BitVec 64))
(declare-fun temp0_210 () (_ BitVec 64))
(declare-fun temp0_211 () (_ BitVec 64))
(declare-fun temp0_212 () (_ BitVec 64))
(declare-fun temp0_213 () (_ BitVec 64))
(declare-fun temp0_214 () (_ BitVec 64))
(declare-fun temp0_215 () (_ BitVec 64))
(declare-fun temp0_216 () (_ BitVec 64))
(declare-fun temp0_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp0_218 () (_ BitVec 64))
(declare-fun temp0_220 () (_ BitVec 64))
(declare-fun temp0_221 () (_ BitVec 64))
(declare-fun temp0_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp0_222 () (_ BitVec 64))
(declare-fun temp0_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp0_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp0_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp0_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp0_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp0_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp0_229 () (_ BitVec 64))
(declare-fun temp0_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp0_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp0_232 () (_ BitVec 64))
(declare-fun temp0_233 () (_ BitVec 64))
(declare-fun temp0_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp0_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp0_236 () (_ BitVec 64))
(declare-fun temp0_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp0_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp0_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp0_240 () (_ BitVec 64))
(assert (= temp0_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp0_1)))
(assert (= temp0_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp0_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_3 #x0000000000000000))
(assert (= var79869 temp0_3))
(assert (= temp0_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp0_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_5 #x0000000000000000))
(assert (= var79914 temp0_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp0_6 #x0000000000000000))
(assert (= temp0_7 temp0_6))
(assert (= temp0_8 (select ARGNAME_padding_NAMEEND_VAL temp0_7)))
(assert (= temp0_9 #x0000000000000001))
(assert (= temp0_10 temp0_9))
(assert (= temp0_11 (select ARGNAME_padding_NAMEEND_VAL temp0_10)))
(assert (= temp0_12 #x0000000000000002))
(assert (= temp0_13 temp0_12))
(assert (= temp0_14 (select ARGNAME_padding_NAMEEND_VAL temp0_13)))
(assert (= temp0_15 #x0000000000000003))
(assert (= temp0_16 temp0_15))
(assert (= temp0_17 (select ARGNAME_padding_NAMEEND_VAL temp0_16)))
(assert (= temp0_18 #x0000000000000004))
(assert (= temp0_19 temp0_18))
(assert (= temp0_20 (select ARGNAME_padding_NAMEEND_VAL temp0_19)))
(assert (= temp0_21 #x0000000000000005))
(assert (= temp0_22 temp0_21))
(assert (= temp0_23 (select ARGNAME_padding_NAMEEND_VAL temp0_22)))
(assert (= temp0_24 #x0000000000000000))
(assert (= temp0_25 #x0000000000000000))
(assert (= temp0_26 temp0_25))
(assert (= temp0_27 (select ARGNAME_padding_NAMEEND_VAL temp0_26)))
(assert (= temp0_28 #x0000000000000000))
(assert (= temp0_29 #x0000000000000001))
(assert (= temp0_30 temp0_29))
(assert (= temp0_31 (select ARGNAME_padding_NAMEEND_VAL temp0_30)))
(assert (= temp0_32 #x0000000000000000))
(assert (= temp0_33 #x0000000000000002))
(assert (= temp0_34 temp0_33))
(assert (= temp0_35 (select ARGNAME_padding_NAMEEND_VAL temp0_34)))
(assert (= temp0_36 #x0000000000000000))
(assert (= temp0_37 #x0000000000000003))
(assert (= temp0_38 temp0_37))
(assert (= temp0_39 (select ARGNAME_padding_NAMEEND_VAL temp0_38)))
(assert (= temp0_40 #x0000000000000000))
(assert (= temp0_41 #x0000000000000004))
(assert (= temp0_42 temp0_41))
(assert (= temp0_43 (select ARGNAME_padding_NAMEEND_VAL temp0_42)))
(assert (= temp0_44 #x0000000000000000))
(assert (= temp0_45 #x0000000000000005))
(assert (= temp0_46 temp0_45))
(assert (= temp0_47 (select ARGNAME_padding_NAMEEND_VAL temp0_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp0_27 temp0_24)
             (bvslt temp0_31 temp0_28)
             (bvslt temp0_35 temp0_32)
             (bvslt temp0_39 temp0_36)
             (bvslt temp0_43 temp0_40)
             (bvslt temp0_47 temp0_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_48 #x0000000000000000))
(assert (= var1322786 temp0_48))
(assert (= temp0_49 #x0000000000000000))
(assert (= temp0_50 temp0_49))
(assert (= temp0_51 (select ARGNAME_output_padding_NAMEEND_VAL temp0_50)))
(assert (= temp0_52 #x0000000000000001))
(assert (= temp0_53 temp0_52))
(assert (= temp0_54 (select ARGNAME_output_padding_NAMEEND_VAL temp0_53)))
(assert (= temp0_55 #x0000000000000002))
(assert (= temp0_56 temp0_55))
(assert (= temp0_57 (select ARGNAME_output_padding_NAMEEND_VAL temp0_56)))
(assert (= temp0_58 #x0000000000000003))
(assert (= temp0_59 temp0_58))
(assert (= temp0_60 (select ARGNAME_output_padding_NAMEEND_VAL temp0_59)))
(assert (= temp0_61 #x0000000000000004))
(assert (= temp0_62 temp0_61))
(assert (= temp0_63 (select ARGNAME_output_padding_NAMEEND_VAL temp0_62)))
(assert (= temp0_64 #x0000000000000005))
(assert (= temp0_65 temp0_64))
(assert (= temp0_66 (select ARGNAME_output_padding_NAMEEND_VAL temp0_65)))
(assert (= temp0_67 #x0000000000000000))
(assert (= temp0_68 #x0000000000000000))
(assert (= temp0_69 temp0_68))
(assert (= temp0_70 (select ARGNAME_output_padding_NAMEEND_VAL temp0_69)))
(assert (= temp0_71 #x0000000000000000))
(assert (= temp0_72 #x0000000000000001))
(assert (= temp0_73 temp0_72))
(assert (= temp0_74 (select ARGNAME_output_padding_NAMEEND_VAL temp0_73)))
(assert (= temp0_75 #x0000000000000000))
(assert (= temp0_76 #x0000000000000002))
(assert (= temp0_77 temp0_76))
(assert (= temp0_78 (select ARGNAME_output_padding_NAMEEND_VAL temp0_77)))
(assert (= temp0_79 #x0000000000000000))
(assert (= temp0_80 #x0000000000000003))
(assert (= temp0_81 temp0_80))
(assert (= temp0_82 (select ARGNAME_output_padding_NAMEEND_VAL temp0_81)))
(assert (= temp0_83 #x0000000000000000))
(assert (= temp0_84 #x0000000000000004))
(assert (= temp0_85 temp0_84))
(assert (= temp0_86 (select ARGNAME_output_padding_NAMEEND_VAL temp0_85)))
(assert (= temp0_87 #x0000000000000000))
(assert (= temp0_88 #x0000000000000005))
(assert (= temp0_89 temp0_88))
(assert (= temp0_90 (select ARGNAME_output_padding_NAMEEND_VAL temp0_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp0_70 temp0_67)
             (bvslt temp0_74 temp0_71)
             (bvslt temp0_78 temp0_75)
             (bvslt temp0_82 temp0_79)
             (bvslt temp0_86 temp0_83)
             (bvslt temp0_90 temp0_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_91 #x0000000000000000))
(assert (= var1322797 temp0_91))
(assert (= temp0_92 #x0000000000000000))
(assert (= temp0_93 temp0_92))
(assert (= temp0_94 (select ARGNAME_stride_NAMEEND_VAL temp0_93)))
(assert (= temp0_95 #x0000000000000001))
(assert (= temp0_96 temp0_95))
(assert (= temp0_97 (select ARGNAME_stride_NAMEEND_VAL temp0_96)))
(assert (= temp0_98 #x0000000000000002))
(assert (= temp0_99 temp0_98))
(assert (= temp0_100 (select ARGNAME_stride_NAMEEND_VAL temp0_99)))
(assert (= temp0_101 #x0000000000000003))
(assert (= temp0_102 temp0_101))
(assert (= temp0_103 (select ARGNAME_stride_NAMEEND_VAL temp0_102)))
(assert (= temp0_104 #x0000000000000004))
(assert (= temp0_105 temp0_104))
(assert (= temp0_106 (select ARGNAME_stride_NAMEEND_VAL temp0_105)))
(assert (= temp0_107 #x0000000000000005))
(assert (= temp0_108 temp0_107))
(assert (= temp0_109 (select ARGNAME_stride_NAMEEND_VAL temp0_108)))
(assert (= temp0_110 #x0000000000000000))
(assert (= temp0_111 #x0000000000000000))
(assert (= temp0_112 temp0_111))
(assert (= temp0_113 (select ARGNAME_stride_NAMEEND_VAL temp0_112)))
(assert (= temp0_114 #x0000000000000000))
(assert (= temp0_115 #x0000000000000001))
(assert (= temp0_116 temp0_115))
(assert (= temp0_117 (select ARGNAME_stride_NAMEEND_VAL temp0_116)))
(assert (= temp0_118 #x0000000000000000))
(assert (= temp0_119 #x0000000000000002))
(assert (= temp0_120 temp0_119))
(assert (= temp0_121 (select ARGNAME_stride_NAMEEND_VAL temp0_120)))
(assert (= temp0_122 #x0000000000000000))
(assert (= temp0_123 #x0000000000000003))
(assert (= temp0_124 temp0_123))
(assert (= temp0_125 (select ARGNAME_stride_NAMEEND_VAL temp0_124)))
(assert (= temp0_126 #x0000000000000000))
(assert (= temp0_127 #x0000000000000004))
(assert (= temp0_128 temp0_127))
(assert (= temp0_129 (select ARGNAME_stride_NAMEEND_VAL temp0_128)))
(assert (= temp0_130 #x0000000000000000))
(assert (= temp0_131 #x0000000000000005))
(assert (= temp0_132 temp0_131))
(assert (= temp0_133 (select ARGNAME_stride_NAMEEND_VAL temp0_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp0_113 temp0_110)
             (bvsle temp0_117 temp0_114)
             (bvsle temp0_121 temp0_118)
             (bvsle temp0_125 temp0_122)
             (bvsle temp0_129 temp0_126)
             (bvsle temp0_133 temp0_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_134 #x0000000000000000))
(assert (= var1322807 temp0_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_135 #x0000000000000001))
(assert (= var1322819 temp0_135))
(assert (= temp0_136 #x0000000000000000))
(assert (= var1310898 temp0_136))
(assert (= temp0_137 #x0000000000000000))
(assert (= temp0_138 temp0_137))
(assert (= temp0_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_138)))
(assert (= temp0_140 #x0000000000000001))
(assert (= temp0_141 temp0_140))
(assert (= temp0_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_141)))
(assert (= temp0_143 #x0000000000000002))
(assert (= temp0_144 temp0_143))
(assert (= temp0_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_144)))
(assert (= temp0_146 #x0000000000000003))
(assert (= temp0_147 temp0_146))
(assert (= temp0_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_147)))
(assert (= temp0_149 #x0000000000000004))
(assert (= temp0_150 temp0_149))
(assert (= temp0_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_150)))
(assert (= temp0_152 #x0000000000000005))
(assert (= temp0_153 temp0_152))
(assert (= temp0_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_153)))
(assert (= temp0_156 var1310898))
(assert (= temp0_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_156)))
(assert (= temp0_155 temp0_157))
(assert (= var1322852
   (ite (bvslt temp0_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_158 #x0000000000000000))
(assert (= var1322852 temp0_158))
(assert (= temp0_159 #x0000000000000000))
(assert (= var1310898 temp0_159))
(assert (= temp0_161 var1310898))
(assert (= temp0_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_161)))
(assert (= temp0_160 temp0_162))
(assert (= var1322874 (bvsmod temp0_160 ARGNAME_groups_NAMEEND)))
(assert (= temp0_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp0_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_164 #x0000000000000001))
(assert (= var1322875 temp0_164))
(assert (= temp0_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp0_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_166 #x0000000000000001))
(assert (= var1322895 temp0_166))
(assert (= temp0_167 #x0000000000000001))
(assert (= var1311786 temp0_167))
(assert (= temp0_168 #x0000000000000000))
(assert (= temp0_169 temp0_168))
(assert (= temp0_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_169)))
(assert (= temp0_171 #x0000000000000001))
(assert (= temp0_172 temp0_171))
(assert (= temp0_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_172)))
(assert (= temp0_174 #x0000000000000002))
(assert (= temp0_175 temp0_174))
(assert (= temp0_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_175)))
(assert (= temp0_177 #x0000000000000003))
(assert (= temp0_178 temp0_177))
(assert (= temp0_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_178)))
(assert (= temp0_180 #x0000000000000004))
(assert (= temp0_181 temp0_180))
(assert (= temp0_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_181)))
(assert (= temp0_183 #x0000000000000005))
(assert (= temp0_184 temp0_183))
(assert (= temp0_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_184)))
(assert (= temp0_186 #x0000000000000000))
(assert (= temp0_187
   (ite (bvslt var1311786 temp0_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp0_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_187)))
(assert (= var1322903 temp0_188))
(assert (bvslt (ite (bvslt var1311786 temp0_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp0_189 #x0000000000000001))
(assert (= var1311786 temp0_189))
(assert (= temp0_191 var1311786))
(assert (= temp0_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_191)))
(assert (= temp0_190 temp0_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp0_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_193 #x0000000000000001))
(assert (= var1322908 temp0_193))
(assert (= temp0_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp0_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_195 #x0000000000000001))
(assert (= var1322975 temp0_195))
(assert (= temp0_196 #x0000000000000000))
(assert (= var1310898 temp0_196))
(assert (= temp0_197 #x0000000000000000))
(assert (= temp0_198 temp0_197))
(assert (= temp0_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp0_198)))
(assert (= temp0_200 #x0000000000000001))
(assert (= temp0_201 temp0_200))
(assert (= temp0_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp0_201)))
(assert (= temp0_203 #x0000000000000002))
(assert (= temp0_204 temp0_203))
(assert (= temp0_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp0_204)))
(assert (= temp0_206 #x0000000000000003))
(assert (= temp0_207 temp0_206))
(assert (= temp0_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp0_207)))
(assert (= temp0_209 #x0000000000000004))
(assert (= temp0_210 temp0_209))
(assert (= temp0_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp0_210)))
(assert (= temp0_212 #x0000000000000005))
(assert (= temp0_213 temp0_212))
(assert (= temp0_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp0_213)))
(assert (= temp0_215 #x0000000000000000))
(assert (= temp0_216
   (ite (bvslt var1310898 temp0_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp0_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp0_216)))
(assert (= var1322977 temp0_217))
(assert (bvslt (ite (bvslt var1310898 temp0_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp0_218 #x0000000000000000))
(assert (= var1310898 temp0_218))
(assert (= temp0_220 var1310898))
(assert (= temp0_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_220)))
(assert (= temp0_219 temp0_221))
(assert (= var1322980
   (ite (= var1322977 temp0_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_222 #x0000000000000001))
(assert (= var1322980 temp0_222))
(assert (= temp0_223 #x0000000000000002))
(assert (= var1848169 temp0_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp0_225 #x0000000000000001))
(assert (= var1323065 temp0_225))
(assert (= temp0_226 #x0000000000000001))
(assert (= var3486735 temp0_226))
(assert (= temp0_227 #x0000000000000001))
(assert (= var3814415 temp0_227))
(assert (= temp0_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp0_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_229 #x0000000000000001))
(assert (= var79986 temp0_229))
(assert (= temp0_230 #x0000000000000001))
(assert (= var80116 temp0_230))
(assert (= var4796905 var80116))
(assert (= temp0_231 #x0000000000000000))
(assert (= var4784306 temp0_231))
(assert (= temp0_232 #x0000000000000000))
(assert (= temp0_233
   (ite (bvslt var4784306 temp0_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp0_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_233)))
(assert (= var4796924 temp0_234))
(assert (bvslt (ite (bvslt var4784306 temp0_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp0_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp0_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_236 #x0000000000000001))
(assert (= var4796925 temp0_236))
(assert (= temp0_237 #x0000000000000000))
(assert (= var4996927 temp0_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp0_238 #x0000000000000002))
(assert (= var5125763 temp0_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_239 #x0000000000000000))
(assert (= var5191324 temp0_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp0_240 #x0000000000000001))
(assert (= var79986 temp0_240))
(model-add temp0_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp0_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp0_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






