(declare-fun temp1065_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1065_2 () (_ BitVec 64))
(declare-fun temp1065_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1065_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1065_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1065_6 () (_ BitVec 64))
(declare-fun temp1065_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_8 () (_ BitVec 64))
(declare-fun temp1065_9 () (_ BitVec 64))
(declare-fun temp1065_10 () (_ BitVec 64))
(declare-fun temp1065_11 () (_ BitVec 64))
(declare-fun temp1065_12 () (_ BitVec 64))
(declare-fun temp1065_13 () (_ BitVec 64))
(declare-fun temp1065_14 () (_ BitVec 64))
(declare-fun temp1065_15 () (_ BitVec 64))
(declare-fun temp1065_16 () (_ BitVec 64))
(declare-fun temp1065_17 () (_ BitVec 64))
(declare-fun temp1065_18 () (_ BitVec 64))
(declare-fun temp1065_19 () (_ BitVec 64))
(declare-fun temp1065_20 () (_ BitVec 64))
(declare-fun temp1065_21 () (_ BitVec 64))
(declare-fun temp1065_22 () (_ BitVec 64))
(declare-fun temp1065_23 () (_ BitVec 64))
(declare-fun temp1065_24 () (_ BitVec 64))
(declare-fun temp1065_25 () (_ BitVec 64))
(declare-fun temp1065_26 () (_ BitVec 64))
(declare-fun temp1065_27 () (_ BitVec 64))
(declare-fun temp1065_28 () (_ BitVec 64))
(declare-fun temp1065_29 () (_ BitVec 64))
(declare-fun temp1065_30 () (_ BitVec 64))
(declare-fun temp1065_31 () (_ BitVec 64))
(declare-fun temp1065_32 () (_ BitVec 64))
(declare-fun temp1065_33 () (_ BitVec 64))
(declare-fun temp1065_34 () (_ BitVec 64))
(declare-fun temp1065_35 () (_ BitVec 64))
(declare-fun temp1065_36 () (_ BitVec 64))
(declare-fun temp1065_37 () (_ BitVec 64))
(declare-fun temp1065_38 () (_ BitVec 64))
(declare-fun temp1065_39 () (_ BitVec 64))
(declare-fun temp1065_40 () (_ BitVec 64))
(declare-fun temp1065_41 () (_ BitVec 64))
(declare-fun temp1065_42 () (_ BitVec 64))
(declare-fun temp1065_43 () (_ BitVec 64))
(declare-fun temp1065_44 () (_ BitVec 64))
(declare-fun temp1065_45 () (_ BitVec 64))
(declare-fun temp1065_46 () (_ BitVec 64))
(declare-fun temp1065_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1065_48 () (_ BitVec 64))
(declare-fun temp1065_49 () (_ BitVec 64))
(declare-fun temp1065_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_51 () (_ BitVec 64))
(declare-fun temp1065_52 () (_ BitVec 64))
(declare-fun temp1065_53 () (_ BitVec 64))
(declare-fun temp1065_54 () (_ BitVec 64))
(declare-fun temp1065_55 () (_ BitVec 64))
(declare-fun temp1065_56 () (_ BitVec 64))
(declare-fun temp1065_57 () (_ BitVec 64))
(declare-fun temp1065_58 () (_ BitVec 64))
(declare-fun temp1065_59 () (_ BitVec 64))
(declare-fun temp1065_60 () (_ BitVec 64))
(declare-fun temp1065_61 () (_ BitVec 64))
(declare-fun temp1065_62 () (_ BitVec 64))
(declare-fun temp1065_63 () (_ BitVec 64))
(declare-fun temp1065_64 () (_ BitVec 64))
(declare-fun temp1065_65 () (_ BitVec 64))
(declare-fun temp1065_66 () (_ BitVec 64))
(declare-fun temp1065_67 () (_ BitVec 64))
(declare-fun temp1065_68 () (_ BitVec 64))
(declare-fun temp1065_69 () (_ BitVec 64))
(declare-fun temp1065_70 () (_ BitVec 64))
(declare-fun temp1065_71 () (_ BitVec 64))
(declare-fun temp1065_72 () (_ BitVec 64))
(declare-fun temp1065_73 () (_ BitVec 64))
(declare-fun temp1065_74 () (_ BitVec 64))
(declare-fun temp1065_75 () (_ BitVec 64))
(declare-fun temp1065_76 () (_ BitVec 64))
(declare-fun temp1065_77 () (_ BitVec 64))
(declare-fun temp1065_78 () (_ BitVec 64))
(declare-fun temp1065_79 () (_ BitVec 64))
(declare-fun temp1065_80 () (_ BitVec 64))
(declare-fun temp1065_81 () (_ BitVec 64))
(declare-fun temp1065_82 () (_ BitVec 64))
(declare-fun temp1065_83 () (_ BitVec 64))
(declare-fun temp1065_84 () (_ BitVec 64))
(declare-fun temp1065_85 () (_ BitVec 64))
(declare-fun temp1065_86 () (_ BitVec 64))
(declare-fun temp1065_87 () (_ BitVec 64))
(declare-fun temp1065_88 () (_ BitVec 64))
(declare-fun temp1065_89 () (_ BitVec 64))
(declare-fun temp1065_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1065_91 () (_ BitVec 64))
(declare-fun temp1065_92 () (_ BitVec 64))
(declare-fun temp1065_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_94 () (_ BitVec 64))
(declare-fun temp1065_95 () (_ BitVec 64))
(declare-fun temp1065_96 () (_ BitVec 64))
(declare-fun temp1065_97 () (_ BitVec 64))
(declare-fun temp1065_98 () (_ BitVec 64))
(declare-fun temp1065_99 () (_ BitVec 64))
(declare-fun temp1065_100 () (_ BitVec 64))
(declare-fun temp1065_101 () (_ BitVec 64))
(declare-fun temp1065_102 () (_ BitVec 64))
(declare-fun temp1065_103 () (_ BitVec 64))
(declare-fun temp1065_104 () (_ BitVec 64))
(declare-fun temp1065_105 () (_ BitVec 64))
(declare-fun temp1065_106 () (_ BitVec 64))
(declare-fun temp1065_107 () (_ BitVec 64))
(declare-fun temp1065_108 () (_ BitVec 64))
(declare-fun temp1065_109 () (_ BitVec 64))
(declare-fun temp1065_110 () (_ BitVec 64))
(declare-fun temp1065_111 () (_ BitVec 64))
(declare-fun temp1065_112 () (_ BitVec 64))
(declare-fun temp1065_113 () (_ BitVec 64))
(declare-fun temp1065_114 () (_ BitVec 64))
(declare-fun temp1065_115 () (_ BitVec 64))
(declare-fun temp1065_116 () (_ BitVec 64))
(declare-fun temp1065_117 () (_ BitVec 64))
(declare-fun temp1065_118 () (_ BitVec 64))
(declare-fun temp1065_119 () (_ BitVec 64))
(declare-fun temp1065_120 () (_ BitVec 64))
(declare-fun temp1065_121 () (_ BitVec 64))
(declare-fun temp1065_122 () (_ BitVec 64))
(declare-fun temp1065_123 () (_ BitVec 64))
(declare-fun temp1065_124 () (_ BitVec 64))
(declare-fun temp1065_125 () (_ BitVec 64))
(declare-fun temp1065_126 () (_ BitVec 64))
(declare-fun temp1065_127 () (_ BitVec 64))
(declare-fun temp1065_128 () (_ BitVec 64))
(declare-fun temp1065_129 () (_ BitVec 64))
(declare-fun temp1065_130 () (_ BitVec 64))
(declare-fun temp1065_131 () (_ BitVec 64))
(declare-fun temp1065_132 () (_ BitVec 64))
(declare-fun temp1065_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1065_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1065_135 () (_ BitVec 64))
(declare-fun temp1065_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1065_137 () (_ BitVec 64))
(declare-fun temp1065_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_139 () (_ BitVec 64))
(declare-fun temp1065_140 () (_ BitVec 64))
(declare-fun temp1065_141 () (_ BitVec 64))
(declare-fun temp1065_142 () (_ BitVec 64))
(declare-fun temp1065_143 () (_ BitVec 64))
(declare-fun temp1065_144 () (_ BitVec 64))
(declare-fun temp1065_145 () (_ BitVec 64))
(declare-fun temp1065_146 () (_ BitVec 64))
(declare-fun temp1065_147 () (_ BitVec 64))
(declare-fun temp1065_148 () (_ BitVec 64))
(declare-fun temp1065_149 () (_ BitVec 64))
(declare-fun temp1065_150 () (_ BitVec 64))
(declare-fun temp1065_151 () (_ BitVec 64))
(declare-fun temp1065_152 () (_ BitVec 64))
(declare-fun temp1065_153 () (_ BitVec 64))
(declare-fun temp1065_154 () (_ BitVec 64))
(declare-fun temp1065_156 () (_ BitVec 64))
(declare-fun temp1065_157 () (_ BitVec 64))
(declare-fun temp1065_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1065_158 () (_ BitVec 64))
(declare-fun temp1065_159 () (_ BitVec 64))
(declare-fun temp1065_161 () (_ BitVec 64))
(declare-fun temp1065_162 () (_ BitVec 64))
(declare-fun temp1065_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1065_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1065_164 () (_ BitVec 64))
(declare-fun temp1065_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1065_166 () (_ BitVec 64))
(declare-fun temp1065_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1065_168 () (_ BitVec 64))
(declare-fun temp1065_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_170 () (_ BitVec 64))
(declare-fun temp1065_171 () (_ BitVec 64))
(declare-fun temp1065_172 () (_ BitVec 64))
(declare-fun temp1065_173 () (_ BitVec 64))
(declare-fun temp1065_174 () (_ BitVec 64))
(declare-fun temp1065_175 () (_ BitVec 64))
(declare-fun temp1065_176 () (_ BitVec 64))
(declare-fun temp1065_177 () (_ BitVec 64))
(declare-fun temp1065_178 () (_ BitVec 64))
(declare-fun temp1065_179 () (_ BitVec 64))
(declare-fun temp1065_180 () (_ BitVec 64))
(declare-fun temp1065_181 () (_ BitVec 64))
(declare-fun temp1065_182 () (_ BitVec 64))
(declare-fun temp1065_183 () (_ BitVec 64))
(declare-fun temp1065_184 () (_ BitVec 64))
(declare-fun temp1065_185 () (_ BitVec 64))
(declare-fun temp1065_186 () (_ BitVec 64))
(declare-fun temp1065_187 () (_ BitVec 64))
(declare-fun temp1065_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1065_189 () (_ BitVec 64))
(declare-fun temp1065_191 () (_ BitVec 64))
(declare-fun temp1065_192 () (_ BitVec 64))
(declare-fun temp1065_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1065_193 () (_ BitVec 64))
(declare-fun temp1065_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1065_195 () (_ BitVec 64))
(declare-fun temp1065_196 () (_ BitVec 64))
(declare-fun temp1065_197 () (_ BitVec 64))
(declare-fun temp1065_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_199 () (_ BitVec 64))
(declare-fun temp1065_200 () (_ BitVec 64))
(declare-fun temp1065_201 () (_ BitVec 64))
(declare-fun temp1065_202 () (_ BitVec 64))
(declare-fun temp1065_203 () (_ BitVec 64))
(declare-fun temp1065_204 () (_ BitVec 64))
(declare-fun temp1065_205 () (_ BitVec 64))
(declare-fun temp1065_206 () (_ BitVec 64))
(declare-fun temp1065_207 () (_ BitVec 64))
(declare-fun temp1065_208 () (_ BitVec 64))
(declare-fun temp1065_209 () (_ BitVec 64))
(declare-fun temp1065_210 () (_ BitVec 64))
(declare-fun temp1065_211 () (_ BitVec 64))
(declare-fun temp1065_212 () (_ BitVec 64))
(declare-fun temp1065_213 () (_ BitVec 64))
(declare-fun temp1065_214 () (_ BitVec 64))
(declare-fun temp1065_215 () (_ BitVec 64))
(declare-fun temp1065_216 () (_ BitVec 64))
(declare-fun temp1065_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1065_218 () (_ BitVec 64))
(declare-fun temp1065_220 () (_ BitVec 64))
(declare-fun temp1065_221 () (_ BitVec 64))
(declare-fun temp1065_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1065_222 () (_ BitVec 64))
(declare-fun temp1065_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1065_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1065_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1065_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1065_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1065_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1065_229 () (_ BitVec 64))
(declare-fun temp1065_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1065_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1065_232 () (_ BitVec 64))
(declare-fun temp1065_233 () (_ BitVec 64))
(declare-fun temp1065_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1065_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1065_236 () (_ BitVec 64))
(declare-fun temp1065_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1065_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1065_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1065_240 () (_ BitVec 64))
(assert (= temp1065_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1065_1)))
(assert (= temp1065_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1065_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_3 #x0000000000000000))
(assert (= var79869 temp1065_3))
(assert (= temp1065_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1065_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_5 #x0000000000000000))
(assert (= var79914 temp1065_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1065_6 #x0000000000000000))
(assert (= temp1065_7 temp1065_6))
(assert (= temp1065_8 (select ARGNAME_padding_NAMEEND_VAL temp1065_7)))
(assert (= temp1065_9 #x0000000000000001))
(assert (= temp1065_10 temp1065_9))
(assert (= temp1065_11 (select ARGNAME_padding_NAMEEND_VAL temp1065_10)))
(assert (= temp1065_12 #x0000000000000002))
(assert (= temp1065_13 temp1065_12))
(assert (= temp1065_14 (select ARGNAME_padding_NAMEEND_VAL temp1065_13)))
(assert (= temp1065_15 #x0000000000000003))
(assert (= temp1065_16 temp1065_15))
(assert (= temp1065_17 (select ARGNAME_padding_NAMEEND_VAL temp1065_16)))
(assert (= temp1065_18 #x0000000000000004))
(assert (= temp1065_19 temp1065_18))
(assert (= temp1065_20 (select ARGNAME_padding_NAMEEND_VAL temp1065_19)))
(assert (= temp1065_21 #x0000000000000005))
(assert (= temp1065_22 temp1065_21))
(assert (= temp1065_23 (select ARGNAME_padding_NAMEEND_VAL temp1065_22)))
(assert (= temp1065_24 #x0000000000000000))
(assert (= temp1065_25 #x0000000000000000))
(assert (= temp1065_26 temp1065_25))
(assert (= temp1065_27 (select ARGNAME_padding_NAMEEND_VAL temp1065_26)))
(assert (= temp1065_28 #x0000000000000000))
(assert (= temp1065_29 #x0000000000000001))
(assert (= temp1065_30 temp1065_29))
(assert (= temp1065_31 (select ARGNAME_padding_NAMEEND_VAL temp1065_30)))
(assert (= temp1065_32 #x0000000000000000))
(assert (= temp1065_33 #x0000000000000002))
(assert (= temp1065_34 temp1065_33))
(assert (= temp1065_35 (select ARGNAME_padding_NAMEEND_VAL temp1065_34)))
(assert (= temp1065_36 #x0000000000000000))
(assert (= temp1065_37 #x0000000000000003))
(assert (= temp1065_38 temp1065_37))
(assert (= temp1065_39 (select ARGNAME_padding_NAMEEND_VAL temp1065_38)))
(assert (= temp1065_40 #x0000000000000000))
(assert (= temp1065_41 #x0000000000000004))
(assert (= temp1065_42 temp1065_41))
(assert (= temp1065_43 (select ARGNAME_padding_NAMEEND_VAL temp1065_42)))
(assert (= temp1065_44 #x0000000000000000))
(assert (= temp1065_45 #x0000000000000005))
(assert (= temp1065_46 temp1065_45))
(assert (= temp1065_47 (select ARGNAME_padding_NAMEEND_VAL temp1065_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1065_27 temp1065_24)
             (bvslt temp1065_31 temp1065_28)
             (bvslt temp1065_35 temp1065_32)
             (bvslt temp1065_39 temp1065_36)
             (bvslt temp1065_43 temp1065_40)
             (bvslt temp1065_47 temp1065_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_48 #x0000000000000000))
(assert (= var1322786 temp1065_48))
(assert (= temp1065_49 #x0000000000000000))
(assert (= temp1065_50 temp1065_49))
(assert (= temp1065_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_50)))
(assert (= temp1065_52 #x0000000000000001))
(assert (= temp1065_53 temp1065_52))
(assert (= temp1065_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_53)))
(assert (= temp1065_55 #x0000000000000002))
(assert (= temp1065_56 temp1065_55))
(assert (= temp1065_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_56)))
(assert (= temp1065_58 #x0000000000000003))
(assert (= temp1065_59 temp1065_58))
(assert (= temp1065_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_59)))
(assert (= temp1065_61 #x0000000000000004))
(assert (= temp1065_62 temp1065_61))
(assert (= temp1065_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_62)))
(assert (= temp1065_64 #x0000000000000005))
(assert (= temp1065_65 temp1065_64))
(assert (= temp1065_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_65)))
(assert (= temp1065_67 #x0000000000000000))
(assert (= temp1065_68 #x0000000000000000))
(assert (= temp1065_69 temp1065_68))
(assert (= temp1065_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_69)))
(assert (= temp1065_71 #x0000000000000000))
(assert (= temp1065_72 #x0000000000000001))
(assert (= temp1065_73 temp1065_72))
(assert (= temp1065_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_73)))
(assert (= temp1065_75 #x0000000000000000))
(assert (= temp1065_76 #x0000000000000002))
(assert (= temp1065_77 temp1065_76))
(assert (= temp1065_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_77)))
(assert (= temp1065_79 #x0000000000000000))
(assert (= temp1065_80 #x0000000000000003))
(assert (= temp1065_81 temp1065_80))
(assert (= temp1065_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_81)))
(assert (= temp1065_83 #x0000000000000000))
(assert (= temp1065_84 #x0000000000000004))
(assert (= temp1065_85 temp1065_84))
(assert (= temp1065_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_85)))
(assert (= temp1065_87 #x0000000000000000))
(assert (= temp1065_88 #x0000000000000005))
(assert (= temp1065_89 temp1065_88))
(assert (= temp1065_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1065_70 temp1065_67)
             (bvslt temp1065_74 temp1065_71)
             (bvslt temp1065_78 temp1065_75)
             (bvslt temp1065_82 temp1065_79)
             (bvslt temp1065_86 temp1065_83)
             (bvslt temp1065_90 temp1065_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_91 #x0000000000000000))
(assert (= var1322797 temp1065_91))
(assert (= temp1065_92 #x0000000000000000))
(assert (= temp1065_93 temp1065_92))
(assert (= temp1065_94 (select ARGNAME_stride_NAMEEND_VAL temp1065_93)))
(assert (= temp1065_95 #x0000000000000001))
(assert (= temp1065_96 temp1065_95))
(assert (= temp1065_97 (select ARGNAME_stride_NAMEEND_VAL temp1065_96)))
(assert (= temp1065_98 #x0000000000000002))
(assert (= temp1065_99 temp1065_98))
(assert (= temp1065_100 (select ARGNAME_stride_NAMEEND_VAL temp1065_99)))
(assert (= temp1065_101 #x0000000000000003))
(assert (= temp1065_102 temp1065_101))
(assert (= temp1065_103 (select ARGNAME_stride_NAMEEND_VAL temp1065_102)))
(assert (= temp1065_104 #x0000000000000004))
(assert (= temp1065_105 temp1065_104))
(assert (= temp1065_106 (select ARGNAME_stride_NAMEEND_VAL temp1065_105)))
(assert (= temp1065_107 #x0000000000000005))
(assert (= temp1065_108 temp1065_107))
(assert (= temp1065_109 (select ARGNAME_stride_NAMEEND_VAL temp1065_108)))
(assert (= temp1065_110 #x0000000000000000))
(assert (= temp1065_111 #x0000000000000000))
(assert (= temp1065_112 temp1065_111))
(assert (= temp1065_113 (select ARGNAME_stride_NAMEEND_VAL temp1065_112)))
(assert (= temp1065_114 #x0000000000000000))
(assert (= temp1065_115 #x0000000000000001))
(assert (= temp1065_116 temp1065_115))
(assert (= temp1065_117 (select ARGNAME_stride_NAMEEND_VAL temp1065_116)))
(assert (= temp1065_118 #x0000000000000000))
(assert (= temp1065_119 #x0000000000000002))
(assert (= temp1065_120 temp1065_119))
(assert (= temp1065_121 (select ARGNAME_stride_NAMEEND_VAL temp1065_120)))
(assert (= temp1065_122 #x0000000000000000))
(assert (= temp1065_123 #x0000000000000003))
(assert (= temp1065_124 temp1065_123))
(assert (= temp1065_125 (select ARGNAME_stride_NAMEEND_VAL temp1065_124)))
(assert (= temp1065_126 #x0000000000000000))
(assert (= temp1065_127 #x0000000000000004))
(assert (= temp1065_128 temp1065_127))
(assert (= temp1065_129 (select ARGNAME_stride_NAMEEND_VAL temp1065_128)))
(assert (= temp1065_130 #x0000000000000000))
(assert (= temp1065_131 #x0000000000000005))
(assert (= temp1065_132 temp1065_131))
(assert (= temp1065_133 (select ARGNAME_stride_NAMEEND_VAL temp1065_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1065_113 temp1065_110)
             (bvsle temp1065_117 temp1065_114)
             (bvsle temp1065_121 temp1065_118)
             (bvsle temp1065_125 temp1065_122)
             (bvsle temp1065_129 temp1065_126)
             (bvsle temp1065_133 temp1065_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_134 #x0000000000000000))
(assert (= var1322807 temp1065_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_135 #x0000000000000001))
(assert (= var1322819 temp1065_135))
(assert (= temp1065_136 #x0000000000000000))
(assert (= var1310898 temp1065_136))
(assert (= temp1065_137 #x0000000000000000))
(assert (= temp1065_138 temp1065_137))
(assert (= temp1065_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_138)))
(assert (= temp1065_140 #x0000000000000001))
(assert (= temp1065_141 temp1065_140))
(assert (= temp1065_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_141)))
(assert (= temp1065_143 #x0000000000000002))
(assert (= temp1065_144 temp1065_143))
(assert (= temp1065_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_144)))
(assert (= temp1065_146 #x0000000000000003))
(assert (= temp1065_147 temp1065_146))
(assert (= temp1065_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_147)))
(assert (= temp1065_149 #x0000000000000004))
(assert (= temp1065_150 temp1065_149))
(assert (= temp1065_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_150)))
(assert (= temp1065_152 #x0000000000000005))
(assert (= temp1065_153 temp1065_152))
(assert (= temp1065_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_153)))
(assert (= temp1065_156 var1310898))
(assert (= temp1065_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_156)))
(assert (= temp1065_155 temp1065_157))
(assert (= var1322852
   (ite (bvslt temp1065_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_158 #x0000000000000000))
(assert (= var1322852 temp1065_158))
(assert (= temp1065_159 #x0000000000000000))
(assert (= var1310898 temp1065_159))
(assert (= temp1065_161 var1310898))
(assert (= temp1065_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_161)))
(assert (= temp1065_160 temp1065_162))
(assert (= var1322874 (bvsmod temp1065_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1065_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1065_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1065_164 #x0000000000000001))
(assert (= var1322875 temp1065_164))
(assert (= temp1065_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1065_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_166 #x0000000000000001))
(assert (= var1322895 temp1065_166))
(assert (= temp1065_167 #x0000000000000001))
(assert (= var1311786 temp1065_167))
(assert (= temp1065_168 #x0000000000000000))
(assert (= temp1065_169 temp1065_168))
(assert (= temp1065_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_169)))
(assert (= temp1065_171 #x0000000000000001))
(assert (= temp1065_172 temp1065_171))
(assert (= temp1065_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_172)))
(assert (= temp1065_174 #x0000000000000002))
(assert (= temp1065_175 temp1065_174))
(assert (= temp1065_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_175)))
(assert (= temp1065_177 #x0000000000000003))
(assert (= temp1065_178 temp1065_177))
(assert (= temp1065_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_178)))
(assert (= temp1065_180 #x0000000000000004))
(assert (= temp1065_181 temp1065_180))
(assert (= temp1065_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_181)))
(assert (= temp1065_183 #x0000000000000005))
(assert (= temp1065_184 temp1065_183))
(assert (= temp1065_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_184)))
(assert (= temp1065_186 #x0000000000000000))
(assert (= temp1065_187
   (ite (bvslt var1311786 temp1065_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1065_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_187)))
(assert (= var1322903 temp1065_188))
(assert (bvslt (ite (bvslt var1311786 temp1065_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1065_189 #x0000000000000001))
(assert (= var1311786 temp1065_189))
(assert (= temp1065_191 var1311786))
(assert (= temp1065_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_191)))
(assert (= temp1065_190 temp1065_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1065_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1065_193 #x0000000000000001))
(assert (= var1322908 temp1065_193))
(assert (= temp1065_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1065_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_195 #x0000000000000001))
(assert (= var1322975 temp1065_195))
(assert (= temp1065_196 #x0000000000000000))
(assert (= var1310898 temp1065_196))
(assert (= temp1065_197 #x0000000000000000))
(assert (= temp1065_198 temp1065_197))
(assert (= temp1065_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1065_198)))
(assert (= temp1065_200 #x0000000000000001))
(assert (= temp1065_201 temp1065_200))
(assert (= temp1065_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1065_201)))
(assert (= temp1065_203 #x0000000000000002))
(assert (= temp1065_204 temp1065_203))
(assert (= temp1065_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1065_204)))
(assert (= temp1065_206 #x0000000000000003))
(assert (= temp1065_207 temp1065_206))
(assert (= temp1065_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1065_207)))
(assert (= temp1065_209 #x0000000000000004))
(assert (= temp1065_210 temp1065_209))
(assert (= temp1065_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1065_210)))
(assert (= temp1065_212 #x0000000000000005))
(assert (= temp1065_213 temp1065_212))
(assert (= temp1065_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1065_213)))
(assert (= temp1065_215 #x0000000000000000))
(assert (= temp1065_216
   (ite (bvslt var1310898 temp1065_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1065_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1065_216)))
(assert (= var1322977 temp1065_217))
(assert (bvslt (ite (bvslt var1310898 temp1065_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1065_218 #x0000000000000000))
(assert (= var1310898 temp1065_218))
(assert (= temp1065_220 var1310898))
(assert (= temp1065_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_220)))
(assert (= temp1065_219 temp1065_221))
(assert (= var1322980
   (ite (= var1322977 temp1065_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1065_222 #x0000000000000001))
(assert (= var1322980 temp1065_222))
(assert (= temp1065_223 #x0000000000000002))
(assert (= var1848169 temp1065_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1065_225 #x0000000000000001))
(assert (= var1323065 temp1065_225))
(assert (= temp1065_226 #x0000000000000001))
(assert (= var3486735 temp1065_226))
(assert (= temp1065_227 #x0000000000000001))
(assert (= var3814415 temp1065_227))
(assert (= temp1065_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1065_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_229 #x0000000000000001))
(assert (= var79986 temp1065_229))
(assert (= temp1065_230 #x0000000000000001))
(assert (= var80116 temp1065_230))
(assert (= var4796905 var80116))
(assert (= temp1065_231 #x0000000000000000))
(assert (= var4784306 temp1065_231))
(assert (= temp1065_232 #x0000000000000000))
(assert (= temp1065_233
   (ite (bvslt var4784306 temp1065_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1065_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_233)))
(assert (= var4796924 temp1065_234))
(assert (bvslt (ite (bvslt var4784306 temp1065_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1065_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1065_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1065_236 #x0000000000000001))
(assert (= var4796925 temp1065_236))
(assert (= temp1065_237 #x0000000000000000))
(assert (= var4996927 temp1065_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1065_238 #x0000000000000002))
(assert (= var5125763 temp1065_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_239 #x0000000000000000))
(assert (= var5191324 temp1065_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1065_240 #x0000000000000001))
(assert (= var79986 temp1065_240))
(model-add temp1065_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1065_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1065_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






