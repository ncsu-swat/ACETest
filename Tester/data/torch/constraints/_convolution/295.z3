(declare-fun temp392_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp392_2 () (_ BitVec 64))
(declare-fun temp392_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp392_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp392_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp392_6 () (_ BitVec 64))
(declare-fun temp392_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp392_8 () (_ BitVec 64))
(declare-fun temp392_9 () (_ BitVec 64))
(declare-fun temp392_10 () (_ BitVec 64))
(declare-fun temp392_11 () (_ BitVec 64))
(declare-fun temp392_12 () (_ BitVec 64))
(declare-fun temp392_13 () (_ BitVec 64))
(declare-fun temp392_14 () (_ BitVec 64))
(declare-fun temp392_15 () (_ BitVec 64))
(declare-fun temp392_16 () (_ BitVec 64))
(declare-fun temp392_17 () (_ BitVec 64))
(declare-fun temp392_18 () (_ BitVec 64))
(declare-fun temp392_19 () (_ BitVec 64))
(declare-fun temp392_20 () (_ BitVec 64))
(declare-fun temp392_21 () (_ BitVec 64))
(declare-fun temp392_22 () (_ BitVec 64))
(declare-fun temp392_23 () (_ BitVec 64))
(declare-fun temp392_24 () (_ BitVec 64))
(declare-fun temp392_25 () (_ BitVec 64))
(declare-fun temp392_26 () (_ BitVec 64))
(declare-fun temp392_27 () (_ BitVec 64))
(declare-fun temp392_28 () (_ BitVec 64))
(declare-fun temp392_29 () (_ BitVec 64))
(declare-fun temp392_30 () (_ BitVec 64))
(declare-fun temp392_31 () (_ BitVec 64))
(declare-fun temp392_32 () (_ BitVec 64))
(declare-fun temp392_33 () (_ BitVec 64))
(declare-fun temp392_34 () (_ BitVec 64))
(declare-fun temp392_35 () (_ BitVec 64))
(declare-fun temp392_36 () (_ BitVec 64))
(declare-fun temp392_37 () (_ BitVec 64))
(declare-fun temp392_38 () (_ BitVec 64))
(declare-fun temp392_39 () (_ BitVec 64))
(declare-fun temp392_40 () (_ BitVec 64))
(declare-fun temp392_41 () (_ BitVec 64))
(declare-fun temp392_42 () (_ BitVec 64))
(declare-fun temp392_43 () (_ BitVec 64))
(declare-fun temp392_44 () (_ BitVec 64))
(declare-fun temp392_45 () (_ BitVec 64))
(declare-fun temp392_46 () (_ BitVec 64))
(declare-fun temp392_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp392_48 () (_ BitVec 64))
(declare-fun temp392_49 () (_ BitVec 64))
(declare-fun temp392_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp392_51 () (_ BitVec 64))
(declare-fun temp392_52 () (_ BitVec 64))
(declare-fun temp392_53 () (_ BitVec 64))
(declare-fun temp392_54 () (_ BitVec 64))
(declare-fun temp392_55 () (_ BitVec 64))
(declare-fun temp392_56 () (_ BitVec 64))
(declare-fun temp392_57 () (_ BitVec 64))
(declare-fun temp392_58 () (_ BitVec 64))
(declare-fun temp392_59 () (_ BitVec 64))
(declare-fun temp392_60 () (_ BitVec 64))
(declare-fun temp392_61 () (_ BitVec 64))
(declare-fun temp392_62 () (_ BitVec 64))
(declare-fun temp392_63 () (_ BitVec 64))
(declare-fun temp392_64 () (_ BitVec 64))
(declare-fun temp392_65 () (_ BitVec 64))
(declare-fun temp392_66 () (_ BitVec 64))
(declare-fun temp392_67 () (_ BitVec 64))
(declare-fun temp392_68 () (_ BitVec 64))
(declare-fun temp392_69 () (_ BitVec 64))
(declare-fun temp392_70 () (_ BitVec 64))
(declare-fun temp392_71 () (_ BitVec 64))
(declare-fun temp392_72 () (_ BitVec 64))
(declare-fun temp392_73 () (_ BitVec 64))
(declare-fun temp392_74 () (_ BitVec 64))
(declare-fun temp392_75 () (_ BitVec 64))
(declare-fun temp392_76 () (_ BitVec 64))
(declare-fun temp392_77 () (_ BitVec 64))
(declare-fun temp392_78 () (_ BitVec 64))
(declare-fun temp392_79 () (_ BitVec 64))
(declare-fun temp392_80 () (_ BitVec 64))
(declare-fun temp392_81 () (_ BitVec 64))
(declare-fun temp392_82 () (_ BitVec 64))
(declare-fun temp392_83 () (_ BitVec 64))
(declare-fun temp392_84 () (_ BitVec 64))
(declare-fun temp392_85 () (_ BitVec 64))
(declare-fun temp392_86 () (_ BitVec 64))
(declare-fun temp392_87 () (_ BitVec 64))
(declare-fun temp392_88 () (_ BitVec 64))
(declare-fun temp392_89 () (_ BitVec 64))
(declare-fun temp392_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp392_91 () (_ BitVec 64))
(declare-fun temp392_92 () (_ BitVec 64))
(declare-fun temp392_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp392_94 () (_ BitVec 64))
(declare-fun temp392_95 () (_ BitVec 64))
(declare-fun temp392_96 () (_ BitVec 64))
(declare-fun temp392_97 () (_ BitVec 64))
(declare-fun temp392_98 () (_ BitVec 64))
(declare-fun temp392_99 () (_ BitVec 64))
(declare-fun temp392_100 () (_ BitVec 64))
(declare-fun temp392_101 () (_ BitVec 64))
(declare-fun temp392_102 () (_ BitVec 64))
(declare-fun temp392_103 () (_ BitVec 64))
(declare-fun temp392_104 () (_ BitVec 64))
(declare-fun temp392_105 () (_ BitVec 64))
(declare-fun temp392_106 () (_ BitVec 64))
(declare-fun temp392_107 () (_ BitVec 64))
(declare-fun temp392_108 () (_ BitVec 64))
(declare-fun temp392_109 () (_ BitVec 64))
(declare-fun temp392_110 () (_ BitVec 64))
(declare-fun temp392_111 () (_ BitVec 64))
(declare-fun temp392_112 () (_ BitVec 64))
(declare-fun temp392_113 () (_ BitVec 64))
(declare-fun temp392_114 () (_ BitVec 64))
(declare-fun temp392_115 () (_ BitVec 64))
(declare-fun temp392_116 () (_ BitVec 64))
(declare-fun temp392_117 () (_ BitVec 64))
(declare-fun temp392_118 () (_ BitVec 64))
(declare-fun temp392_119 () (_ BitVec 64))
(declare-fun temp392_120 () (_ BitVec 64))
(declare-fun temp392_121 () (_ BitVec 64))
(declare-fun temp392_122 () (_ BitVec 64))
(declare-fun temp392_123 () (_ BitVec 64))
(declare-fun temp392_124 () (_ BitVec 64))
(declare-fun temp392_125 () (_ BitVec 64))
(declare-fun temp392_126 () (_ BitVec 64))
(declare-fun temp392_127 () (_ BitVec 64))
(declare-fun temp392_128 () (_ BitVec 64))
(declare-fun temp392_129 () (_ BitVec 64))
(declare-fun temp392_130 () (_ BitVec 64))
(declare-fun temp392_131 () (_ BitVec 64))
(declare-fun temp392_132 () (_ BitVec 64))
(declare-fun temp392_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp392_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp392_135 () (_ BitVec 64))
(declare-fun temp392_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp392_137 () (_ BitVec 64))
(declare-fun temp392_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp392_139 () (_ BitVec 64))
(declare-fun temp392_140 () (_ BitVec 64))
(declare-fun temp392_141 () (_ BitVec 64))
(declare-fun temp392_142 () (_ BitVec 64))
(declare-fun temp392_143 () (_ BitVec 64))
(declare-fun temp392_144 () (_ BitVec 64))
(declare-fun temp392_145 () (_ BitVec 64))
(declare-fun temp392_146 () (_ BitVec 64))
(declare-fun temp392_147 () (_ BitVec 64))
(declare-fun temp392_148 () (_ BitVec 64))
(declare-fun temp392_149 () (_ BitVec 64))
(declare-fun temp392_150 () (_ BitVec 64))
(declare-fun temp392_151 () (_ BitVec 64))
(declare-fun temp392_152 () (_ BitVec 64))
(declare-fun temp392_153 () (_ BitVec 64))
(declare-fun temp392_154 () (_ BitVec 64))
(declare-fun temp392_156 () (_ BitVec 64))
(declare-fun temp392_157 () (_ BitVec 64))
(declare-fun temp392_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp392_158 () (_ BitVec 64))
(declare-fun temp392_159 () (_ BitVec 64))
(declare-fun temp392_161 () (_ BitVec 64))
(declare-fun temp392_162 () (_ BitVec 64))
(declare-fun temp392_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp392_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp392_164 () (_ BitVec 64))
(declare-fun temp392_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp392_166 () (_ BitVec 64))
(declare-fun temp392_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp392_168 () (_ BitVec 64))
(declare-fun temp392_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp392_170 () (_ BitVec 64))
(declare-fun temp392_171 () (_ BitVec 64))
(declare-fun temp392_172 () (_ BitVec 64))
(declare-fun temp392_173 () (_ BitVec 64))
(declare-fun temp392_174 () (_ BitVec 64))
(declare-fun temp392_175 () (_ BitVec 64))
(declare-fun temp392_176 () (_ BitVec 64))
(declare-fun temp392_177 () (_ BitVec 64))
(declare-fun temp392_178 () (_ BitVec 64))
(declare-fun temp392_179 () (_ BitVec 64))
(declare-fun temp392_180 () (_ BitVec 64))
(declare-fun temp392_181 () (_ BitVec 64))
(declare-fun temp392_182 () (_ BitVec 64))
(declare-fun temp392_183 () (_ BitVec 64))
(declare-fun temp392_184 () (_ BitVec 64))
(declare-fun temp392_185 () (_ BitVec 64))
(declare-fun temp392_186 () (_ BitVec 64))
(declare-fun temp392_187 () (_ BitVec 64))
(declare-fun temp392_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp392_189 () (_ BitVec 64))
(declare-fun temp392_191 () (_ BitVec 64))
(declare-fun temp392_192 () (_ BitVec 64))
(declare-fun temp392_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp392_193 () (_ BitVec 64))
(declare-fun temp392_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp392_195 () (_ BitVec 64))
(declare-fun temp392_196 () (_ BitVec 64))
(declare-fun temp392_197 () (_ BitVec 64))
(declare-fun temp392_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp392_199 () (_ BitVec 64))
(declare-fun temp392_200 () (_ BitVec 64))
(declare-fun temp392_201 () (_ BitVec 64))
(declare-fun temp392_202 () (_ BitVec 64))
(declare-fun temp392_203 () (_ BitVec 64))
(declare-fun temp392_204 () (_ BitVec 64))
(declare-fun temp392_205 () (_ BitVec 64))
(declare-fun temp392_206 () (_ BitVec 64))
(declare-fun temp392_207 () (_ BitVec 64))
(declare-fun temp392_208 () (_ BitVec 64))
(declare-fun temp392_209 () (_ BitVec 64))
(declare-fun temp392_210 () (_ BitVec 64))
(declare-fun temp392_211 () (_ BitVec 64))
(declare-fun temp392_212 () (_ BitVec 64))
(declare-fun temp392_213 () (_ BitVec 64))
(declare-fun temp392_214 () (_ BitVec 64))
(declare-fun temp392_215 () (_ BitVec 64))
(declare-fun temp392_216 () (_ BitVec 64))
(declare-fun temp392_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp392_218 () (_ BitVec 64))
(declare-fun temp392_220 () (_ BitVec 64))
(declare-fun temp392_221 () (_ BitVec 64))
(declare-fun temp392_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp392_222 () (_ BitVec 64))
(declare-fun temp392_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp392_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp392_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp392_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp392_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp392_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp392_229 () (_ BitVec 64))
(declare-fun temp392_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp392_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp392_232 () (_ BitVec 64))
(declare-fun temp392_233 () (_ BitVec 64))
(declare-fun temp392_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp392_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp392_236 () (_ BitVec 64))
(declare-fun temp392_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp392_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp392_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp392_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp392_241 () (_ BitVec 64))
(declare-fun temp392_242 () (_ BitVec 64))
(declare-fun var8074004 () (_ BitVec 64))
(declare-fun var8073971 () (_ BitVec 64))
(declare-fun var7942535 () (_ BitVec 64))
(declare-fun var7942531 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp392_243 () (_ BitVec 64))
(assert (= temp392_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp392_1)))
(assert (= temp392_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp392_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_3 #x0000000000000000))
(assert (= var79869 temp392_3))
(assert (= temp392_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp392_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_5 #x0000000000000000))
(assert (= var79914 temp392_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp392_6 #x0000000000000000))
(assert (= temp392_7 temp392_6))
(assert (= temp392_8 (select ARGNAME_padding_NAMEEND_VAL temp392_7)))
(assert (= temp392_9 #x0000000000000001))
(assert (= temp392_10 temp392_9))
(assert (= temp392_11 (select ARGNAME_padding_NAMEEND_VAL temp392_10)))
(assert (= temp392_12 #x0000000000000002))
(assert (= temp392_13 temp392_12))
(assert (= temp392_14 (select ARGNAME_padding_NAMEEND_VAL temp392_13)))
(assert (= temp392_15 #x0000000000000003))
(assert (= temp392_16 temp392_15))
(assert (= temp392_17 (select ARGNAME_padding_NAMEEND_VAL temp392_16)))
(assert (= temp392_18 #x0000000000000004))
(assert (= temp392_19 temp392_18))
(assert (= temp392_20 (select ARGNAME_padding_NAMEEND_VAL temp392_19)))
(assert (= temp392_21 #x0000000000000005))
(assert (= temp392_22 temp392_21))
(assert (= temp392_23 (select ARGNAME_padding_NAMEEND_VAL temp392_22)))
(assert (= temp392_24 #x0000000000000000))
(assert (= temp392_25 #x0000000000000000))
(assert (= temp392_26 temp392_25))
(assert (= temp392_27 (select ARGNAME_padding_NAMEEND_VAL temp392_26)))
(assert (= temp392_28 #x0000000000000000))
(assert (= temp392_29 #x0000000000000001))
(assert (= temp392_30 temp392_29))
(assert (= temp392_31 (select ARGNAME_padding_NAMEEND_VAL temp392_30)))
(assert (= temp392_32 #x0000000000000000))
(assert (= temp392_33 #x0000000000000002))
(assert (= temp392_34 temp392_33))
(assert (= temp392_35 (select ARGNAME_padding_NAMEEND_VAL temp392_34)))
(assert (= temp392_36 #x0000000000000000))
(assert (= temp392_37 #x0000000000000003))
(assert (= temp392_38 temp392_37))
(assert (= temp392_39 (select ARGNAME_padding_NAMEEND_VAL temp392_38)))
(assert (= temp392_40 #x0000000000000000))
(assert (= temp392_41 #x0000000000000004))
(assert (= temp392_42 temp392_41))
(assert (= temp392_43 (select ARGNAME_padding_NAMEEND_VAL temp392_42)))
(assert (= temp392_44 #x0000000000000000))
(assert (= temp392_45 #x0000000000000005))
(assert (= temp392_46 temp392_45))
(assert (= temp392_47 (select ARGNAME_padding_NAMEEND_VAL temp392_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp392_27 temp392_24)
             (bvslt temp392_31 temp392_28)
             (bvslt temp392_35 temp392_32)
             (bvslt temp392_39 temp392_36)
             (bvslt temp392_43 temp392_40)
             (bvslt temp392_47 temp392_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_48 #x0000000000000000))
(assert (= var1322786 temp392_48))
(assert (= temp392_49 #x0000000000000000))
(assert (= temp392_50 temp392_49))
(assert (= temp392_51 (select ARGNAME_output_padding_NAMEEND_VAL temp392_50)))
(assert (= temp392_52 #x0000000000000001))
(assert (= temp392_53 temp392_52))
(assert (= temp392_54 (select ARGNAME_output_padding_NAMEEND_VAL temp392_53)))
(assert (= temp392_55 #x0000000000000002))
(assert (= temp392_56 temp392_55))
(assert (= temp392_57 (select ARGNAME_output_padding_NAMEEND_VAL temp392_56)))
(assert (= temp392_58 #x0000000000000003))
(assert (= temp392_59 temp392_58))
(assert (= temp392_60 (select ARGNAME_output_padding_NAMEEND_VAL temp392_59)))
(assert (= temp392_61 #x0000000000000004))
(assert (= temp392_62 temp392_61))
(assert (= temp392_63 (select ARGNAME_output_padding_NAMEEND_VAL temp392_62)))
(assert (= temp392_64 #x0000000000000005))
(assert (= temp392_65 temp392_64))
(assert (= temp392_66 (select ARGNAME_output_padding_NAMEEND_VAL temp392_65)))
(assert (= temp392_67 #x0000000000000000))
(assert (= temp392_68 #x0000000000000000))
(assert (= temp392_69 temp392_68))
(assert (= temp392_70 (select ARGNAME_output_padding_NAMEEND_VAL temp392_69)))
(assert (= temp392_71 #x0000000000000000))
(assert (= temp392_72 #x0000000000000001))
(assert (= temp392_73 temp392_72))
(assert (= temp392_74 (select ARGNAME_output_padding_NAMEEND_VAL temp392_73)))
(assert (= temp392_75 #x0000000000000000))
(assert (= temp392_76 #x0000000000000002))
(assert (= temp392_77 temp392_76))
(assert (= temp392_78 (select ARGNAME_output_padding_NAMEEND_VAL temp392_77)))
(assert (= temp392_79 #x0000000000000000))
(assert (= temp392_80 #x0000000000000003))
(assert (= temp392_81 temp392_80))
(assert (= temp392_82 (select ARGNAME_output_padding_NAMEEND_VAL temp392_81)))
(assert (= temp392_83 #x0000000000000000))
(assert (= temp392_84 #x0000000000000004))
(assert (= temp392_85 temp392_84))
(assert (= temp392_86 (select ARGNAME_output_padding_NAMEEND_VAL temp392_85)))
(assert (= temp392_87 #x0000000000000000))
(assert (= temp392_88 #x0000000000000005))
(assert (= temp392_89 temp392_88))
(assert (= temp392_90 (select ARGNAME_output_padding_NAMEEND_VAL temp392_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp392_70 temp392_67)
             (bvslt temp392_74 temp392_71)
             (bvslt temp392_78 temp392_75)
             (bvslt temp392_82 temp392_79)
             (bvslt temp392_86 temp392_83)
             (bvslt temp392_90 temp392_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_91 #x0000000000000000))
(assert (= var1322797 temp392_91))
(assert (= temp392_92 #x0000000000000000))
(assert (= temp392_93 temp392_92))
(assert (= temp392_94 (select ARGNAME_stride_NAMEEND_VAL temp392_93)))
(assert (= temp392_95 #x0000000000000001))
(assert (= temp392_96 temp392_95))
(assert (= temp392_97 (select ARGNAME_stride_NAMEEND_VAL temp392_96)))
(assert (= temp392_98 #x0000000000000002))
(assert (= temp392_99 temp392_98))
(assert (= temp392_100 (select ARGNAME_stride_NAMEEND_VAL temp392_99)))
(assert (= temp392_101 #x0000000000000003))
(assert (= temp392_102 temp392_101))
(assert (= temp392_103 (select ARGNAME_stride_NAMEEND_VAL temp392_102)))
(assert (= temp392_104 #x0000000000000004))
(assert (= temp392_105 temp392_104))
(assert (= temp392_106 (select ARGNAME_stride_NAMEEND_VAL temp392_105)))
(assert (= temp392_107 #x0000000000000005))
(assert (= temp392_108 temp392_107))
(assert (= temp392_109 (select ARGNAME_stride_NAMEEND_VAL temp392_108)))
(assert (= temp392_110 #x0000000000000000))
(assert (= temp392_111 #x0000000000000000))
(assert (= temp392_112 temp392_111))
(assert (= temp392_113 (select ARGNAME_stride_NAMEEND_VAL temp392_112)))
(assert (= temp392_114 #x0000000000000000))
(assert (= temp392_115 #x0000000000000001))
(assert (= temp392_116 temp392_115))
(assert (= temp392_117 (select ARGNAME_stride_NAMEEND_VAL temp392_116)))
(assert (= temp392_118 #x0000000000000000))
(assert (= temp392_119 #x0000000000000002))
(assert (= temp392_120 temp392_119))
(assert (= temp392_121 (select ARGNAME_stride_NAMEEND_VAL temp392_120)))
(assert (= temp392_122 #x0000000000000000))
(assert (= temp392_123 #x0000000000000003))
(assert (= temp392_124 temp392_123))
(assert (= temp392_125 (select ARGNAME_stride_NAMEEND_VAL temp392_124)))
(assert (= temp392_126 #x0000000000000000))
(assert (= temp392_127 #x0000000000000004))
(assert (= temp392_128 temp392_127))
(assert (= temp392_129 (select ARGNAME_stride_NAMEEND_VAL temp392_128)))
(assert (= temp392_130 #x0000000000000000))
(assert (= temp392_131 #x0000000000000005))
(assert (= temp392_132 temp392_131))
(assert (= temp392_133 (select ARGNAME_stride_NAMEEND_VAL temp392_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp392_113 temp392_110)
             (bvsle temp392_117 temp392_114)
             (bvsle temp392_121 temp392_118)
             (bvsle temp392_125 temp392_122)
             (bvsle temp392_129 temp392_126)
             (bvsle temp392_133 temp392_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_134 #x0000000000000000))
(assert (= var1322807 temp392_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_135 #x0000000000000001))
(assert (= var1322819 temp392_135))
(assert (= temp392_136 #x0000000000000000))
(assert (= var1310898 temp392_136))
(assert (= temp392_137 #x0000000000000000))
(assert (= temp392_138 temp392_137))
(assert (= temp392_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_138)))
(assert (= temp392_140 #x0000000000000001))
(assert (= temp392_141 temp392_140))
(assert (= temp392_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_141)))
(assert (= temp392_143 #x0000000000000002))
(assert (= temp392_144 temp392_143))
(assert (= temp392_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_144)))
(assert (= temp392_146 #x0000000000000003))
(assert (= temp392_147 temp392_146))
(assert (= temp392_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_147)))
(assert (= temp392_149 #x0000000000000004))
(assert (= temp392_150 temp392_149))
(assert (= temp392_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_150)))
(assert (= temp392_152 #x0000000000000005))
(assert (= temp392_153 temp392_152))
(assert (= temp392_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_153)))
(assert (= temp392_156 var1310898))
(assert (= temp392_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_156)))
(assert (= temp392_155 temp392_157))
(assert (= var1322852
   (ite (bvslt temp392_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_158 #x0000000000000000))
(assert (= var1322852 temp392_158))
(assert (= temp392_159 #x0000000000000000))
(assert (= var1310898 temp392_159))
(assert (= temp392_161 var1310898))
(assert (= temp392_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_161)))
(assert (= temp392_160 temp392_162))
(assert (= var1322874 (bvsmod temp392_160 ARGNAME_groups_NAMEEND)))
(assert (= temp392_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp392_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp392_164 #x0000000000000001))
(assert (= var1322875 temp392_164))
(assert (= temp392_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp392_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_166 #x0000000000000001))
(assert (= var1322895 temp392_166))
(assert (= temp392_167 #x0000000000000001))
(assert (= var1311786 temp392_167))
(assert (= temp392_168 #x0000000000000000))
(assert (= temp392_169 temp392_168))
(assert (= temp392_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp392_169)))
(assert (= temp392_171 #x0000000000000001))
(assert (= temp392_172 temp392_171))
(assert (= temp392_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp392_172)))
(assert (= temp392_174 #x0000000000000002))
(assert (= temp392_175 temp392_174))
(assert (= temp392_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp392_175)))
(assert (= temp392_177 #x0000000000000003))
(assert (= temp392_178 temp392_177))
(assert (= temp392_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp392_178)))
(assert (= temp392_180 #x0000000000000004))
(assert (= temp392_181 temp392_180))
(assert (= temp392_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp392_181)))
(assert (= temp392_183 #x0000000000000005))
(assert (= temp392_184 temp392_183))
(assert (= temp392_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp392_184)))
(assert (= temp392_186 #x0000000000000000))
(assert (= temp392_187
   (ite (bvslt var1311786 temp392_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp392_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp392_187)))
(assert (= var1322903 temp392_188))
(assert (bvslt (ite (bvslt var1311786 temp392_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp392_189 #x0000000000000001))
(assert (= var1311786 temp392_189))
(assert (= temp392_191 var1311786))
(assert (= temp392_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_191)))
(assert (= temp392_190 temp392_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp392_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp392_193 #x0000000000000001))
(assert (= var1322908 temp392_193))
(assert (= temp392_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp392_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_195 #x0000000000000001))
(assert (= var1322975 temp392_195))
(assert (= temp392_196 #x0000000000000000))
(assert (= var1310898 temp392_196))
(assert (= temp392_197 #x0000000000000000))
(assert (= temp392_198 temp392_197))
(assert (= temp392_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp392_198)))
(assert (= temp392_200 #x0000000000000001))
(assert (= temp392_201 temp392_200))
(assert (= temp392_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp392_201)))
(assert (= temp392_203 #x0000000000000002))
(assert (= temp392_204 temp392_203))
(assert (= temp392_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp392_204)))
(assert (= temp392_206 #x0000000000000003))
(assert (= temp392_207 temp392_206))
(assert (= temp392_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp392_207)))
(assert (= temp392_209 #x0000000000000004))
(assert (= temp392_210 temp392_209))
(assert (= temp392_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp392_210)))
(assert (= temp392_212 #x0000000000000005))
(assert (= temp392_213 temp392_212))
(assert (= temp392_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp392_213)))
(assert (= temp392_215 #x0000000000000000))
(assert (= temp392_216
   (ite (bvslt var1310898 temp392_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp392_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp392_216)))
(assert (= var1322977 temp392_217))
(assert (bvslt (ite (bvslt var1310898 temp392_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp392_218 #x0000000000000000))
(assert (= var1310898 temp392_218))
(assert (= temp392_220 var1310898))
(assert (= temp392_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp392_220)))
(assert (= temp392_219 temp392_221))
(assert (= var1322980
   (ite (= var1322977 temp392_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp392_222 #x0000000000000001))
(assert (= var1322980 temp392_222))
(assert (= temp392_223 #x0000000000000002))
(assert (= var1848169 temp392_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp392_225 #x0000000000000001))
(assert (= var1323065 temp392_225))
(assert (= temp392_226 #x0000000000000001))
(assert (= var3486735 temp392_226))
(assert (= temp392_227 #x0000000000000001))
(assert (= var3814415 temp392_227))
(assert (= temp392_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp392_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_229 #x0000000000000001))
(assert (= var79986 temp392_229))
(assert (= temp392_230 #x0000000000000001))
(assert (= var80116 temp392_230))
(assert (= var4796905 var80116))
(assert (= temp392_231 #x0000000000000000))
(assert (= var4784306 temp392_231))
(assert (= temp392_232 #x0000000000000000))
(assert (= temp392_233
   (ite (bvslt var4784306 temp392_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp392_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp392_233)))
(assert (= var4796924 temp392_234))
(assert (bvslt (ite (bvslt var4784306 temp392_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp392_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp392_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp392_236 #x0000000000000001))
(assert (= var4796925 temp392_236))
(assert (= temp392_237 #x0000000000000000))
(assert (= var4996927 temp392_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp392_238 #x0000000000000002))
(assert (= var5125763 temp392_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp392_239 #x0000000000000000))
(assert (= var5191324 temp392_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp392_240 #x0000000000000000))
(assert (= var6631824 temp392_240))
(assert (= temp392_241 #x0000000000000001))
(assert (= var79986 temp392_241))
(assert (= temp392_242 #x0000000000000000))
(assert (= var8074004 temp392_242))
(assert (= var8073971 var8074004))
(assert (= var7942535 var8073971))
(assert (= var7942531 var7942535))
(assert (= var81597 var7942531))
(assert (= temp392_243 #x0000000000000000))
(assert (= var81597 temp392_243))
(model-add temp392_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp392_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp392_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






