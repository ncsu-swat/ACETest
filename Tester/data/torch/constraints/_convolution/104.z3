(declare-fun temp137_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp137_2 () (_ BitVec 64))
(declare-fun temp137_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp137_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp137_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp137_6 () (_ BitVec 64))
(declare-fun temp137_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp137_8 () (_ BitVec 64))
(declare-fun temp137_9 () (_ BitVec 64))
(declare-fun temp137_10 () (_ BitVec 64))
(declare-fun temp137_11 () (_ BitVec 64))
(declare-fun temp137_12 () (_ BitVec 64))
(declare-fun temp137_13 () (_ BitVec 64))
(declare-fun temp137_14 () (_ BitVec 64))
(declare-fun temp137_15 () (_ BitVec 64))
(declare-fun temp137_16 () (_ BitVec 64))
(declare-fun temp137_17 () (_ BitVec 64))
(declare-fun temp137_18 () (_ BitVec 64))
(declare-fun temp137_19 () (_ BitVec 64))
(declare-fun temp137_20 () (_ BitVec 64))
(declare-fun temp137_21 () (_ BitVec 64))
(declare-fun temp137_22 () (_ BitVec 64))
(declare-fun temp137_23 () (_ BitVec 64))
(declare-fun temp137_24 () (_ BitVec 64))
(declare-fun temp137_25 () (_ BitVec 64))
(declare-fun temp137_26 () (_ BitVec 64))
(declare-fun temp137_27 () (_ BitVec 64))
(declare-fun temp137_28 () (_ BitVec 64))
(declare-fun temp137_29 () (_ BitVec 64))
(declare-fun temp137_30 () (_ BitVec 64))
(declare-fun temp137_31 () (_ BitVec 64))
(declare-fun temp137_32 () (_ BitVec 64))
(declare-fun temp137_33 () (_ BitVec 64))
(declare-fun temp137_34 () (_ BitVec 64))
(declare-fun temp137_35 () (_ BitVec 64))
(declare-fun temp137_36 () (_ BitVec 64))
(declare-fun temp137_37 () (_ BitVec 64))
(declare-fun temp137_38 () (_ BitVec 64))
(declare-fun temp137_39 () (_ BitVec 64))
(declare-fun temp137_40 () (_ BitVec 64))
(declare-fun temp137_41 () (_ BitVec 64))
(declare-fun temp137_42 () (_ BitVec 64))
(declare-fun temp137_43 () (_ BitVec 64))
(declare-fun temp137_44 () (_ BitVec 64))
(declare-fun temp137_45 () (_ BitVec 64))
(declare-fun temp137_46 () (_ BitVec 64))
(declare-fun temp137_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp137_48 () (_ BitVec 64))
(declare-fun temp137_49 () (_ BitVec 64))
(declare-fun temp137_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp137_51 () (_ BitVec 64))
(declare-fun temp137_52 () (_ BitVec 64))
(declare-fun temp137_53 () (_ BitVec 64))
(declare-fun temp137_54 () (_ BitVec 64))
(declare-fun temp137_55 () (_ BitVec 64))
(declare-fun temp137_56 () (_ BitVec 64))
(declare-fun temp137_57 () (_ BitVec 64))
(declare-fun temp137_58 () (_ BitVec 64))
(declare-fun temp137_59 () (_ BitVec 64))
(declare-fun temp137_60 () (_ BitVec 64))
(declare-fun temp137_61 () (_ BitVec 64))
(declare-fun temp137_62 () (_ BitVec 64))
(declare-fun temp137_63 () (_ BitVec 64))
(declare-fun temp137_64 () (_ BitVec 64))
(declare-fun temp137_65 () (_ BitVec 64))
(declare-fun temp137_66 () (_ BitVec 64))
(declare-fun temp137_67 () (_ BitVec 64))
(declare-fun temp137_68 () (_ BitVec 64))
(declare-fun temp137_69 () (_ BitVec 64))
(declare-fun temp137_70 () (_ BitVec 64))
(declare-fun temp137_71 () (_ BitVec 64))
(declare-fun temp137_72 () (_ BitVec 64))
(declare-fun temp137_73 () (_ BitVec 64))
(declare-fun temp137_74 () (_ BitVec 64))
(declare-fun temp137_75 () (_ BitVec 64))
(declare-fun temp137_76 () (_ BitVec 64))
(declare-fun temp137_77 () (_ BitVec 64))
(declare-fun temp137_78 () (_ BitVec 64))
(declare-fun temp137_79 () (_ BitVec 64))
(declare-fun temp137_80 () (_ BitVec 64))
(declare-fun temp137_81 () (_ BitVec 64))
(declare-fun temp137_82 () (_ BitVec 64))
(declare-fun temp137_83 () (_ BitVec 64))
(declare-fun temp137_84 () (_ BitVec 64))
(declare-fun temp137_85 () (_ BitVec 64))
(declare-fun temp137_86 () (_ BitVec 64))
(declare-fun temp137_87 () (_ BitVec 64))
(declare-fun temp137_88 () (_ BitVec 64))
(declare-fun temp137_89 () (_ BitVec 64))
(declare-fun temp137_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp137_91 () (_ BitVec 64))
(declare-fun temp137_92 () (_ BitVec 64))
(declare-fun temp137_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp137_94 () (_ BitVec 64))
(declare-fun temp137_95 () (_ BitVec 64))
(declare-fun temp137_96 () (_ BitVec 64))
(declare-fun temp137_97 () (_ BitVec 64))
(declare-fun temp137_98 () (_ BitVec 64))
(declare-fun temp137_99 () (_ BitVec 64))
(declare-fun temp137_100 () (_ BitVec 64))
(declare-fun temp137_101 () (_ BitVec 64))
(declare-fun temp137_102 () (_ BitVec 64))
(declare-fun temp137_103 () (_ BitVec 64))
(declare-fun temp137_104 () (_ BitVec 64))
(declare-fun temp137_105 () (_ BitVec 64))
(declare-fun temp137_106 () (_ BitVec 64))
(declare-fun temp137_107 () (_ BitVec 64))
(declare-fun temp137_108 () (_ BitVec 64))
(declare-fun temp137_109 () (_ BitVec 64))
(declare-fun temp137_110 () (_ BitVec 64))
(declare-fun temp137_111 () (_ BitVec 64))
(declare-fun temp137_112 () (_ BitVec 64))
(declare-fun temp137_113 () (_ BitVec 64))
(declare-fun temp137_114 () (_ BitVec 64))
(declare-fun temp137_115 () (_ BitVec 64))
(declare-fun temp137_116 () (_ BitVec 64))
(declare-fun temp137_117 () (_ BitVec 64))
(declare-fun temp137_118 () (_ BitVec 64))
(declare-fun temp137_119 () (_ BitVec 64))
(declare-fun temp137_120 () (_ BitVec 64))
(declare-fun temp137_121 () (_ BitVec 64))
(declare-fun temp137_122 () (_ BitVec 64))
(declare-fun temp137_123 () (_ BitVec 64))
(declare-fun temp137_124 () (_ BitVec 64))
(declare-fun temp137_125 () (_ BitVec 64))
(declare-fun temp137_126 () (_ BitVec 64))
(declare-fun temp137_127 () (_ BitVec 64))
(declare-fun temp137_128 () (_ BitVec 64))
(declare-fun temp137_129 () (_ BitVec 64))
(declare-fun temp137_130 () (_ BitVec 64))
(declare-fun temp137_131 () (_ BitVec 64))
(declare-fun temp137_132 () (_ BitVec 64))
(declare-fun temp137_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp137_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp137_135 () (_ BitVec 64))
(declare-fun temp137_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp137_137 () (_ BitVec 64))
(declare-fun temp137_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp137_139 () (_ BitVec 64))
(declare-fun temp137_140 () (_ BitVec 64))
(declare-fun temp137_141 () (_ BitVec 64))
(declare-fun temp137_142 () (_ BitVec 64))
(declare-fun temp137_143 () (_ BitVec 64))
(declare-fun temp137_144 () (_ BitVec 64))
(declare-fun temp137_145 () (_ BitVec 64))
(declare-fun temp137_146 () (_ BitVec 64))
(declare-fun temp137_147 () (_ BitVec 64))
(declare-fun temp137_148 () (_ BitVec 64))
(declare-fun temp137_149 () (_ BitVec 64))
(declare-fun temp137_150 () (_ BitVec 64))
(declare-fun temp137_151 () (_ BitVec 64))
(declare-fun temp137_152 () (_ BitVec 64))
(declare-fun temp137_153 () (_ BitVec 64))
(declare-fun temp137_154 () (_ BitVec 64))
(declare-fun temp137_156 () (_ BitVec 64))
(declare-fun temp137_157 () (_ BitVec 64))
(declare-fun temp137_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp137_158 () (_ BitVec 64))
(declare-fun temp137_159 () (_ BitVec 64))
(declare-fun temp137_161 () (_ BitVec 64))
(declare-fun temp137_162 () (_ BitVec 64))
(declare-fun temp137_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp137_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp137_164 () (_ BitVec 64))
(declare-fun temp137_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp137_166 () (_ BitVec 64))
(declare-fun temp137_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp137_168 () (_ BitVec 64))
(declare-fun temp137_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp137_170 () (_ BitVec 64))
(declare-fun temp137_171 () (_ BitVec 64))
(declare-fun temp137_172 () (_ BitVec 64))
(declare-fun temp137_173 () (_ BitVec 64))
(declare-fun temp137_174 () (_ BitVec 64))
(declare-fun temp137_175 () (_ BitVec 64))
(declare-fun temp137_176 () (_ BitVec 64))
(declare-fun temp137_177 () (_ BitVec 64))
(declare-fun temp137_178 () (_ BitVec 64))
(declare-fun temp137_179 () (_ BitVec 64))
(declare-fun temp137_180 () (_ BitVec 64))
(declare-fun temp137_181 () (_ BitVec 64))
(declare-fun temp137_182 () (_ BitVec 64))
(declare-fun temp137_183 () (_ BitVec 64))
(declare-fun temp137_184 () (_ BitVec 64))
(declare-fun temp137_185 () (_ BitVec 64))
(declare-fun temp137_186 () (_ BitVec 64))
(declare-fun temp137_187 () (_ BitVec 64))
(declare-fun temp137_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp137_189 () (_ BitVec 64))
(declare-fun temp137_191 () (_ BitVec 64))
(declare-fun temp137_192 () (_ BitVec 64))
(declare-fun temp137_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp137_193 () (_ BitVec 64))
(declare-fun temp137_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp137_195 () (_ BitVec 64))
(declare-fun temp137_196 () (_ BitVec 64))
(declare-fun temp137_197 () (_ BitVec 64))
(declare-fun temp137_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp137_199 () (_ BitVec 64))
(declare-fun temp137_200 () (_ BitVec 64))
(declare-fun temp137_201 () (_ BitVec 64))
(declare-fun temp137_202 () (_ BitVec 64))
(declare-fun temp137_203 () (_ BitVec 64))
(declare-fun temp137_204 () (_ BitVec 64))
(declare-fun temp137_205 () (_ BitVec 64))
(declare-fun temp137_206 () (_ BitVec 64))
(declare-fun temp137_207 () (_ BitVec 64))
(declare-fun temp137_208 () (_ BitVec 64))
(declare-fun temp137_209 () (_ BitVec 64))
(declare-fun temp137_210 () (_ BitVec 64))
(declare-fun temp137_211 () (_ BitVec 64))
(declare-fun temp137_212 () (_ BitVec 64))
(declare-fun temp137_213 () (_ BitVec 64))
(declare-fun temp137_214 () (_ BitVec 64))
(declare-fun temp137_215 () (_ BitVec 64))
(declare-fun temp137_216 () (_ BitVec 64))
(declare-fun temp137_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp137_218 () (_ BitVec 64))
(declare-fun temp137_220 () (_ BitVec 64))
(declare-fun temp137_221 () (_ BitVec 64))
(declare-fun temp137_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp137_222 () (_ BitVec 64))
(declare-fun temp137_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp137_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp137_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp137_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp137_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp137_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp137_229 () (_ BitVec 64))
(declare-fun temp137_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp137_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp137_232 () (_ BitVec 64))
(declare-fun temp137_233 () (_ BitVec 64))
(declare-fun temp137_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp137_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp137_236 () (_ BitVec 64))
(declare-fun temp137_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp137_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp137_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp137_241 () (_ BitVec 64))
(declare-fun temp137_240 () (_ BitVec 64))
(declare-fun temp137_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp137_243 () (_ BitVec 64))
(declare-fun temp137_244 () (_ BitVec 64))
(declare-fun temp137_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp137_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp137_247 () (_ BitVec 64))
(declare-fun temp137_249 () (_ BitVec 64))
(declare-fun temp137_248 () (_ BitVec 64))
(declare-fun temp137_250 () (_ BitVec 64))
(assert (= temp137_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp137_1)))
(assert (= temp137_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp137_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_3 #x0000000000000000))
(assert (= var79869 temp137_3))
(assert (= temp137_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp137_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_5 #x0000000000000000))
(assert (= var79914 temp137_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp137_6 #x0000000000000000))
(assert (= temp137_7 temp137_6))
(assert (= temp137_8 (select ARGNAME_padding_NAMEEND_VAL temp137_7)))
(assert (= temp137_9 #x0000000000000001))
(assert (= temp137_10 temp137_9))
(assert (= temp137_11 (select ARGNAME_padding_NAMEEND_VAL temp137_10)))
(assert (= temp137_12 #x0000000000000002))
(assert (= temp137_13 temp137_12))
(assert (= temp137_14 (select ARGNAME_padding_NAMEEND_VAL temp137_13)))
(assert (= temp137_15 #x0000000000000003))
(assert (= temp137_16 temp137_15))
(assert (= temp137_17 (select ARGNAME_padding_NAMEEND_VAL temp137_16)))
(assert (= temp137_18 #x0000000000000004))
(assert (= temp137_19 temp137_18))
(assert (= temp137_20 (select ARGNAME_padding_NAMEEND_VAL temp137_19)))
(assert (= temp137_21 #x0000000000000005))
(assert (= temp137_22 temp137_21))
(assert (= temp137_23 (select ARGNAME_padding_NAMEEND_VAL temp137_22)))
(assert (= temp137_24 #x0000000000000000))
(assert (= temp137_25 #x0000000000000000))
(assert (= temp137_26 temp137_25))
(assert (= temp137_27 (select ARGNAME_padding_NAMEEND_VAL temp137_26)))
(assert (= temp137_28 #x0000000000000000))
(assert (= temp137_29 #x0000000000000001))
(assert (= temp137_30 temp137_29))
(assert (= temp137_31 (select ARGNAME_padding_NAMEEND_VAL temp137_30)))
(assert (= temp137_32 #x0000000000000000))
(assert (= temp137_33 #x0000000000000002))
(assert (= temp137_34 temp137_33))
(assert (= temp137_35 (select ARGNAME_padding_NAMEEND_VAL temp137_34)))
(assert (= temp137_36 #x0000000000000000))
(assert (= temp137_37 #x0000000000000003))
(assert (= temp137_38 temp137_37))
(assert (= temp137_39 (select ARGNAME_padding_NAMEEND_VAL temp137_38)))
(assert (= temp137_40 #x0000000000000000))
(assert (= temp137_41 #x0000000000000004))
(assert (= temp137_42 temp137_41))
(assert (= temp137_43 (select ARGNAME_padding_NAMEEND_VAL temp137_42)))
(assert (= temp137_44 #x0000000000000000))
(assert (= temp137_45 #x0000000000000005))
(assert (= temp137_46 temp137_45))
(assert (= temp137_47 (select ARGNAME_padding_NAMEEND_VAL temp137_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp137_27 temp137_24)
             (bvslt temp137_31 temp137_28)
             (bvslt temp137_35 temp137_32)
             (bvslt temp137_39 temp137_36)
             (bvslt temp137_43 temp137_40)
             (bvslt temp137_47 temp137_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_48 #x0000000000000000))
(assert (= var1322786 temp137_48))
(assert (= temp137_49 #x0000000000000000))
(assert (= temp137_50 temp137_49))
(assert (= temp137_51 (select ARGNAME_output_padding_NAMEEND_VAL temp137_50)))
(assert (= temp137_52 #x0000000000000001))
(assert (= temp137_53 temp137_52))
(assert (= temp137_54 (select ARGNAME_output_padding_NAMEEND_VAL temp137_53)))
(assert (= temp137_55 #x0000000000000002))
(assert (= temp137_56 temp137_55))
(assert (= temp137_57 (select ARGNAME_output_padding_NAMEEND_VAL temp137_56)))
(assert (= temp137_58 #x0000000000000003))
(assert (= temp137_59 temp137_58))
(assert (= temp137_60 (select ARGNAME_output_padding_NAMEEND_VAL temp137_59)))
(assert (= temp137_61 #x0000000000000004))
(assert (= temp137_62 temp137_61))
(assert (= temp137_63 (select ARGNAME_output_padding_NAMEEND_VAL temp137_62)))
(assert (= temp137_64 #x0000000000000005))
(assert (= temp137_65 temp137_64))
(assert (= temp137_66 (select ARGNAME_output_padding_NAMEEND_VAL temp137_65)))
(assert (= temp137_67 #x0000000000000000))
(assert (= temp137_68 #x0000000000000000))
(assert (= temp137_69 temp137_68))
(assert (= temp137_70 (select ARGNAME_output_padding_NAMEEND_VAL temp137_69)))
(assert (= temp137_71 #x0000000000000000))
(assert (= temp137_72 #x0000000000000001))
(assert (= temp137_73 temp137_72))
(assert (= temp137_74 (select ARGNAME_output_padding_NAMEEND_VAL temp137_73)))
(assert (= temp137_75 #x0000000000000000))
(assert (= temp137_76 #x0000000000000002))
(assert (= temp137_77 temp137_76))
(assert (= temp137_78 (select ARGNAME_output_padding_NAMEEND_VAL temp137_77)))
(assert (= temp137_79 #x0000000000000000))
(assert (= temp137_80 #x0000000000000003))
(assert (= temp137_81 temp137_80))
(assert (= temp137_82 (select ARGNAME_output_padding_NAMEEND_VAL temp137_81)))
(assert (= temp137_83 #x0000000000000000))
(assert (= temp137_84 #x0000000000000004))
(assert (= temp137_85 temp137_84))
(assert (= temp137_86 (select ARGNAME_output_padding_NAMEEND_VAL temp137_85)))
(assert (= temp137_87 #x0000000000000000))
(assert (= temp137_88 #x0000000000000005))
(assert (= temp137_89 temp137_88))
(assert (= temp137_90 (select ARGNAME_output_padding_NAMEEND_VAL temp137_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp137_70 temp137_67)
             (bvslt temp137_74 temp137_71)
             (bvslt temp137_78 temp137_75)
             (bvslt temp137_82 temp137_79)
             (bvslt temp137_86 temp137_83)
             (bvslt temp137_90 temp137_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_91 #x0000000000000000))
(assert (= var1322797 temp137_91))
(assert (= temp137_92 #x0000000000000000))
(assert (= temp137_93 temp137_92))
(assert (= temp137_94 (select ARGNAME_stride_NAMEEND_VAL temp137_93)))
(assert (= temp137_95 #x0000000000000001))
(assert (= temp137_96 temp137_95))
(assert (= temp137_97 (select ARGNAME_stride_NAMEEND_VAL temp137_96)))
(assert (= temp137_98 #x0000000000000002))
(assert (= temp137_99 temp137_98))
(assert (= temp137_100 (select ARGNAME_stride_NAMEEND_VAL temp137_99)))
(assert (= temp137_101 #x0000000000000003))
(assert (= temp137_102 temp137_101))
(assert (= temp137_103 (select ARGNAME_stride_NAMEEND_VAL temp137_102)))
(assert (= temp137_104 #x0000000000000004))
(assert (= temp137_105 temp137_104))
(assert (= temp137_106 (select ARGNAME_stride_NAMEEND_VAL temp137_105)))
(assert (= temp137_107 #x0000000000000005))
(assert (= temp137_108 temp137_107))
(assert (= temp137_109 (select ARGNAME_stride_NAMEEND_VAL temp137_108)))
(assert (= temp137_110 #x0000000000000000))
(assert (= temp137_111 #x0000000000000000))
(assert (= temp137_112 temp137_111))
(assert (= temp137_113 (select ARGNAME_stride_NAMEEND_VAL temp137_112)))
(assert (= temp137_114 #x0000000000000000))
(assert (= temp137_115 #x0000000000000001))
(assert (= temp137_116 temp137_115))
(assert (= temp137_117 (select ARGNAME_stride_NAMEEND_VAL temp137_116)))
(assert (= temp137_118 #x0000000000000000))
(assert (= temp137_119 #x0000000000000002))
(assert (= temp137_120 temp137_119))
(assert (= temp137_121 (select ARGNAME_stride_NAMEEND_VAL temp137_120)))
(assert (= temp137_122 #x0000000000000000))
(assert (= temp137_123 #x0000000000000003))
(assert (= temp137_124 temp137_123))
(assert (= temp137_125 (select ARGNAME_stride_NAMEEND_VAL temp137_124)))
(assert (= temp137_126 #x0000000000000000))
(assert (= temp137_127 #x0000000000000004))
(assert (= temp137_128 temp137_127))
(assert (= temp137_129 (select ARGNAME_stride_NAMEEND_VAL temp137_128)))
(assert (= temp137_130 #x0000000000000000))
(assert (= temp137_131 #x0000000000000005))
(assert (= temp137_132 temp137_131))
(assert (= temp137_133 (select ARGNAME_stride_NAMEEND_VAL temp137_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp137_113 temp137_110)
             (bvsle temp137_117 temp137_114)
             (bvsle temp137_121 temp137_118)
             (bvsle temp137_125 temp137_122)
             (bvsle temp137_129 temp137_126)
             (bvsle temp137_133 temp137_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_134 #x0000000000000000))
(assert (= var1322807 temp137_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_135 #x0000000000000001))
(assert (= var1322819 temp137_135))
(assert (= temp137_136 #x0000000000000000))
(assert (= var1310898 temp137_136))
(assert (= temp137_137 #x0000000000000000))
(assert (= temp137_138 temp137_137))
(assert (= temp137_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_138)))
(assert (= temp137_140 #x0000000000000001))
(assert (= temp137_141 temp137_140))
(assert (= temp137_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_141)))
(assert (= temp137_143 #x0000000000000002))
(assert (= temp137_144 temp137_143))
(assert (= temp137_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_144)))
(assert (= temp137_146 #x0000000000000003))
(assert (= temp137_147 temp137_146))
(assert (= temp137_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_147)))
(assert (= temp137_149 #x0000000000000004))
(assert (= temp137_150 temp137_149))
(assert (= temp137_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_150)))
(assert (= temp137_152 #x0000000000000005))
(assert (= temp137_153 temp137_152))
(assert (= temp137_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_153)))
(assert (= temp137_156 var1310898))
(assert (= temp137_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_156)))
(assert (= temp137_155 temp137_157))
(assert (= var1322852
   (ite (bvslt temp137_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_158 #x0000000000000000))
(assert (= var1322852 temp137_158))
(assert (= temp137_159 #x0000000000000000))
(assert (= var1310898 temp137_159))
(assert (= temp137_161 var1310898))
(assert (= temp137_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_161)))
(assert (= temp137_160 temp137_162))
(assert (= var1322874 (bvsmod temp137_160 ARGNAME_groups_NAMEEND)))
(assert (= temp137_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp137_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp137_164 #x0000000000000001))
(assert (= var1322875 temp137_164))
(assert (= temp137_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp137_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_166 #x0000000000000001))
(assert (= var1322895 temp137_166))
(assert (= temp137_167 #x0000000000000001))
(assert (= var1311786 temp137_167))
(assert (= temp137_168 #x0000000000000000))
(assert (= temp137_169 temp137_168))
(assert (= temp137_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp137_169)))
(assert (= temp137_171 #x0000000000000001))
(assert (= temp137_172 temp137_171))
(assert (= temp137_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp137_172)))
(assert (= temp137_174 #x0000000000000002))
(assert (= temp137_175 temp137_174))
(assert (= temp137_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp137_175)))
(assert (= temp137_177 #x0000000000000003))
(assert (= temp137_178 temp137_177))
(assert (= temp137_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp137_178)))
(assert (= temp137_180 #x0000000000000004))
(assert (= temp137_181 temp137_180))
(assert (= temp137_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp137_181)))
(assert (= temp137_183 #x0000000000000005))
(assert (= temp137_184 temp137_183))
(assert (= temp137_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp137_184)))
(assert (= temp137_186 #x0000000000000000))
(assert (= temp137_187
   (ite (bvslt var1311786 temp137_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp137_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp137_187)))
(assert (= var1322903 temp137_188))
(assert (bvslt (ite (bvslt var1311786 temp137_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp137_189 #x0000000000000001))
(assert (= var1311786 temp137_189))
(assert (= temp137_191 var1311786))
(assert (= temp137_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_191)))
(assert (= temp137_190 temp137_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp137_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp137_193 #x0000000000000001))
(assert (= var1322908 temp137_193))
(assert (= temp137_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp137_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_195 #x0000000000000001))
(assert (= var1322975 temp137_195))
(assert (= temp137_196 #x0000000000000000))
(assert (= var1310898 temp137_196))
(assert (= temp137_197 #x0000000000000000))
(assert (= temp137_198 temp137_197))
(assert (= temp137_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp137_198)))
(assert (= temp137_200 #x0000000000000001))
(assert (= temp137_201 temp137_200))
(assert (= temp137_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp137_201)))
(assert (= temp137_203 #x0000000000000002))
(assert (= temp137_204 temp137_203))
(assert (= temp137_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp137_204)))
(assert (= temp137_206 #x0000000000000003))
(assert (= temp137_207 temp137_206))
(assert (= temp137_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp137_207)))
(assert (= temp137_209 #x0000000000000004))
(assert (= temp137_210 temp137_209))
(assert (= temp137_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp137_210)))
(assert (= temp137_212 #x0000000000000005))
(assert (= temp137_213 temp137_212))
(assert (= temp137_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp137_213)))
(assert (= temp137_215 #x0000000000000000))
(assert (= temp137_216
   (ite (bvslt var1310898 temp137_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp137_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp137_216)))
(assert (= var1322977 temp137_217))
(assert (bvslt (ite (bvslt var1310898 temp137_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp137_218 #x0000000000000000))
(assert (= var1310898 temp137_218))
(assert (= temp137_220 var1310898))
(assert (= temp137_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp137_220)))
(assert (= temp137_219 temp137_221))
(assert (= var1322980
   (ite (= var1322977 temp137_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp137_222 #x0000000000000001))
(assert (= var1322980 temp137_222))
(assert (= temp137_223 #x0000000000000002))
(assert (= var1848169 temp137_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp137_225 #x0000000000000001))
(assert (= var1323065 temp137_225))
(assert (= temp137_226 #x0000000000000001))
(assert (= var3486735 temp137_226))
(assert (= temp137_227 #x0000000000000001))
(assert (= var3814415 temp137_227))
(assert (= temp137_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp137_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_229 #x0000000000000001))
(assert (= var79986 temp137_229))
(assert (= temp137_230 #x0000000000000001))
(assert (= var80116 temp137_230))
(assert (= var4796905 var80116))
(assert (= temp137_231 #x0000000000000000))
(assert (= var4784306 temp137_231))
(assert (= temp137_232 #x0000000000000000))
(assert (= temp137_233
   (ite (bvslt var4784306 temp137_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp137_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp137_233)))
(assert (= var4796924 temp137_234))
(assert (bvslt (ite (bvslt var4784306 temp137_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp137_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp137_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp137_236 #x0000000000000001))
(assert (= var4796925 temp137_236))
(assert (= temp137_237 #x0000000000000000))
(assert (= var4996927 temp137_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp137_238 #x0000000000000002))
(assert (= var5125763 temp137_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp137_239 #x0000000000000000))
(assert (= var5191324 temp137_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp137_241 #xffffffffffffffff))
(assert (= temp137_240 temp137_241))
(assert (= temp137_242 #x0000000000000001))
(assert (= var66602 temp137_242))
(assert (= temp137_243 #x0000000000000000))
(assert (= temp137_244
   (ite (bvslt var66602 temp137_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp137_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp137_244)))
(assert (= var80523 temp137_245))
(assert (bvslt (ite (bvslt var66602 temp137_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp137_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp137_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp137_247 #x0000000000000001))
(assert (= var80524 temp137_247))
(assert (= temp137_249 #xffffffffffffffff))
(assert (= temp137_248 temp137_249))
(assert (= temp137_250 #x0000000000000001))
(assert (= var79986 temp137_250))
(model-add temp137_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp137_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp137_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






