(declare-fun temp664_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp664_2 () (_ BitVec 64))
(declare-fun temp664_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp664_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp664_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp664_6 () (_ BitVec 64))
(declare-fun temp664_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp664_8 () (_ BitVec 64))
(declare-fun temp664_9 () (_ BitVec 64))
(declare-fun temp664_10 () (_ BitVec 64))
(declare-fun temp664_11 () (_ BitVec 64))
(declare-fun temp664_12 () (_ BitVec 64))
(declare-fun temp664_13 () (_ BitVec 64))
(declare-fun temp664_14 () (_ BitVec 64))
(declare-fun temp664_15 () (_ BitVec 64))
(declare-fun temp664_16 () (_ BitVec 64))
(declare-fun temp664_17 () (_ BitVec 64))
(declare-fun temp664_18 () (_ BitVec 64))
(declare-fun temp664_19 () (_ BitVec 64))
(declare-fun temp664_20 () (_ BitVec 64))
(declare-fun temp664_21 () (_ BitVec 64))
(declare-fun temp664_22 () (_ BitVec 64))
(declare-fun temp664_23 () (_ BitVec 64))
(declare-fun temp664_24 () (_ BitVec 64))
(declare-fun temp664_25 () (_ BitVec 64))
(declare-fun temp664_26 () (_ BitVec 64))
(declare-fun temp664_27 () (_ BitVec 64))
(declare-fun temp664_28 () (_ BitVec 64))
(declare-fun temp664_29 () (_ BitVec 64))
(declare-fun temp664_30 () (_ BitVec 64))
(declare-fun temp664_31 () (_ BitVec 64))
(declare-fun temp664_32 () (_ BitVec 64))
(declare-fun temp664_33 () (_ BitVec 64))
(declare-fun temp664_34 () (_ BitVec 64))
(declare-fun temp664_35 () (_ BitVec 64))
(declare-fun temp664_36 () (_ BitVec 64))
(declare-fun temp664_37 () (_ BitVec 64))
(declare-fun temp664_38 () (_ BitVec 64))
(declare-fun temp664_39 () (_ BitVec 64))
(declare-fun temp664_40 () (_ BitVec 64))
(declare-fun temp664_41 () (_ BitVec 64))
(declare-fun temp664_42 () (_ BitVec 64))
(declare-fun temp664_43 () (_ BitVec 64))
(declare-fun temp664_44 () (_ BitVec 64))
(declare-fun temp664_45 () (_ BitVec 64))
(declare-fun temp664_46 () (_ BitVec 64))
(declare-fun temp664_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp664_48 () (_ BitVec 64))
(declare-fun temp664_49 () (_ BitVec 64))
(declare-fun temp664_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp664_51 () (_ BitVec 64))
(declare-fun temp664_52 () (_ BitVec 64))
(declare-fun temp664_53 () (_ BitVec 64))
(declare-fun temp664_54 () (_ BitVec 64))
(declare-fun temp664_55 () (_ BitVec 64))
(declare-fun temp664_56 () (_ BitVec 64))
(declare-fun temp664_57 () (_ BitVec 64))
(declare-fun temp664_58 () (_ BitVec 64))
(declare-fun temp664_59 () (_ BitVec 64))
(declare-fun temp664_60 () (_ BitVec 64))
(declare-fun temp664_61 () (_ BitVec 64))
(declare-fun temp664_62 () (_ BitVec 64))
(declare-fun temp664_63 () (_ BitVec 64))
(declare-fun temp664_64 () (_ BitVec 64))
(declare-fun temp664_65 () (_ BitVec 64))
(declare-fun temp664_66 () (_ BitVec 64))
(declare-fun temp664_67 () (_ BitVec 64))
(declare-fun temp664_68 () (_ BitVec 64))
(declare-fun temp664_69 () (_ BitVec 64))
(declare-fun temp664_70 () (_ BitVec 64))
(declare-fun temp664_71 () (_ BitVec 64))
(declare-fun temp664_72 () (_ BitVec 64))
(declare-fun temp664_73 () (_ BitVec 64))
(declare-fun temp664_74 () (_ BitVec 64))
(declare-fun temp664_75 () (_ BitVec 64))
(declare-fun temp664_76 () (_ BitVec 64))
(declare-fun temp664_77 () (_ BitVec 64))
(declare-fun temp664_78 () (_ BitVec 64))
(declare-fun temp664_79 () (_ BitVec 64))
(declare-fun temp664_80 () (_ BitVec 64))
(declare-fun temp664_81 () (_ BitVec 64))
(declare-fun temp664_82 () (_ BitVec 64))
(declare-fun temp664_83 () (_ BitVec 64))
(declare-fun temp664_84 () (_ BitVec 64))
(declare-fun temp664_85 () (_ BitVec 64))
(declare-fun temp664_86 () (_ BitVec 64))
(declare-fun temp664_87 () (_ BitVec 64))
(declare-fun temp664_88 () (_ BitVec 64))
(declare-fun temp664_89 () (_ BitVec 64))
(declare-fun temp664_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp664_91 () (_ BitVec 64))
(declare-fun temp664_92 () (_ BitVec 64))
(declare-fun temp664_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp664_94 () (_ BitVec 64))
(declare-fun temp664_95 () (_ BitVec 64))
(declare-fun temp664_96 () (_ BitVec 64))
(declare-fun temp664_97 () (_ BitVec 64))
(declare-fun temp664_98 () (_ BitVec 64))
(declare-fun temp664_99 () (_ BitVec 64))
(declare-fun temp664_100 () (_ BitVec 64))
(declare-fun temp664_101 () (_ BitVec 64))
(declare-fun temp664_102 () (_ BitVec 64))
(declare-fun temp664_103 () (_ BitVec 64))
(declare-fun temp664_104 () (_ BitVec 64))
(declare-fun temp664_105 () (_ BitVec 64))
(declare-fun temp664_106 () (_ BitVec 64))
(declare-fun temp664_107 () (_ BitVec 64))
(declare-fun temp664_108 () (_ BitVec 64))
(declare-fun temp664_109 () (_ BitVec 64))
(declare-fun temp664_110 () (_ BitVec 64))
(declare-fun temp664_111 () (_ BitVec 64))
(declare-fun temp664_112 () (_ BitVec 64))
(declare-fun temp664_113 () (_ BitVec 64))
(declare-fun temp664_114 () (_ BitVec 64))
(declare-fun temp664_115 () (_ BitVec 64))
(declare-fun temp664_116 () (_ BitVec 64))
(declare-fun temp664_117 () (_ BitVec 64))
(declare-fun temp664_118 () (_ BitVec 64))
(declare-fun temp664_119 () (_ BitVec 64))
(declare-fun temp664_120 () (_ BitVec 64))
(declare-fun temp664_121 () (_ BitVec 64))
(declare-fun temp664_122 () (_ BitVec 64))
(declare-fun temp664_123 () (_ BitVec 64))
(declare-fun temp664_124 () (_ BitVec 64))
(declare-fun temp664_125 () (_ BitVec 64))
(declare-fun temp664_126 () (_ BitVec 64))
(declare-fun temp664_127 () (_ BitVec 64))
(declare-fun temp664_128 () (_ BitVec 64))
(declare-fun temp664_129 () (_ BitVec 64))
(declare-fun temp664_130 () (_ BitVec 64))
(declare-fun temp664_131 () (_ BitVec 64))
(declare-fun temp664_132 () (_ BitVec 64))
(declare-fun temp664_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp664_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp664_135 () (_ BitVec 64))
(declare-fun temp664_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp664_137 () (_ BitVec 64))
(declare-fun temp664_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp664_139 () (_ BitVec 64))
(declare-fun temp664_140 () (_ BitVec 64))
(declare-fun temp664_141 () (_ BitVec 64))
(declare-fun temp664_142 () (_ BitVec 64))
(declare-fun temp664_143 () (_ BitVec 64))
(declare-fun temp664_144 () (_ BitVec 64))
(declare-fun temp664_145 () (_ BitVec 64))
(declare-fun temp664_146 () (_ BitVec 64))
(declare-fun temp664_147 () (_ BitVec 64))
(declare-fun temp664_148 () (_ BitVec 64))
(declare-fun temp664_149 () (_ BitVec 64))
(declare-fun temp664_150 () (_ BitVec 64))
(declare-fun temp664_151 () (_ BitVec 64))
(declare-fun temp664_152 () (_ BitVec 64))
(declare-fun temp664_153 () (_ BitVec 64))
(declare-fun temp664_154 () (_ BitVec 64))
(declare-fun temp664_156 () (_ BitVec 64))
(declare-fun temp664_157 () (_ BitVec 64))
(declare-fun temp664_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp664_158 () (_ BitVec 64))
(declare-fun temp664_159 () (_ BitVec 64))
(declare-fun temp664_161 () (_ BitVec 64))
(declare-fun temp664_162 () (_ BitVec 64))
(declare-fun temp664_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp664_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp664_164 () (_ BitVec 64))
(declare-fun temp664_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp664_166 () (_ BitVec 64))
(declare-fun temp664_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp664_168 () (_ BitVec 64))
(declare-fun temp664_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp664_170 () (_ BitVec 64))
(declare-fun temp664_171 () (_ BitVec 64))
(declare-fun temp664_172 () (_ BitVec 64))
(declare-fun temp664_173 () (_ BitVec 64))
(declare-fun temp664_174 () (_ BitVec 64))
(declare-fun temp664_175 () (_ BitVec 64))
(declare-fun temp664_176 () (_ BitVec 64))
(declare-fun temp664_177 () (_ BitVec 64))
(declare-fun temp664_178 () (_ BitVec 64))
(declare-fun temp664_179 () (_ BitVec 64))
(declare-fun temp664_180 () (_ BitVec 64))
(declare-fun temp664_181 () (_ BitVec 64))
(declare-fun temp664_182 () (_ BitVec 64))
(declare-fun temp664_183 () (_ BitVec 64))
(declare-fun temp664_184 () (_ BitVec 64))
(declare-fun temp664_185 () (_ BitVec 64))
(declare-fun temp664_186 () (_ BitVec 64))
(declare-fun temp664_187 () (_ BitVec 64))
(declare-fun temp664_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp664_189 () (_ BitVec 64))
(declare-fun temp664_191 () (_ BitVec 64))
(declare-fun temp664_192 () (_ BitVec 64))
(declare-fun temp664_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp664_193 () (_ BitVec 64))
(declare-fun temp664_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp664_195 () (_ BitVec 64))
(declare-fun temp664_196 () (_ BitVec 64))
(declare-fun temp664_197 () (_ BitVec 64))
(declare-fun temp664_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp664_199 () (_ BitVec 64))
(declare-fun temp664_200 () (_ BitVec 64))
(declare-fun temp664_201 () (_ BitVec 64))
(declare-fun temp664_202 () (_ BitVec 64))
(declare-fun temp664_203 () (_ BitVec 64))
(declare-fun temp664_204 () (_ BitVec 64))
(declare-fun temp664_205 () (_ BitVec 64))
(declare-fun temp664_206 () (_ BitVec 64))
(declare-fun temp664_207 () (_ BitVec 64))
(declare-fun temp664_208 () (_ BitVec 64))
(declare-fun temp664_209 () (_ BitVec 64))
(declare-fun temp664_210 () (_ BitVec 64))
(declare-fun temp664_211 () (_ BitVec 64))
(declare-fun temp664_212 () (_ BitVec 64))
(declare-fun temp664_213 () (_ BitVec 64))
(declare-fun temp664_214 () (_ BitVec 64))
(declare-fun temp664_215 () (_ BitVec 64))
(declare-fun temp664_216 () (_ BitVec 64))
(declare-fun temp664_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp664_218 () (_ BitVec 64))
(declare-fun temp664_220 () (_ BitVec 64))
(declare-fun temp664_221 () (_ BitVec 64))
(declare-fun temp664_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp664_222 () (_ BitVec 64))
(declare-fun temp664_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp664_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp664_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp664_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp664_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp664_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp664_229 () (_ BitVec 64))
(declare-fun temp664_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp664_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp664_232 () (_ BitVec 64))
(declare-fun temp664_233 () (_ BitVec 64))
(declare-fun temp664_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp664_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp664_236 () (_ BitVec 64))
(declare-fun temp664_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp664_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp664_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp664_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp664_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp664_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp664_243 () (_ BitVec 64))
(assert (= temp664_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp664_1)))
(assert (= temp664_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp664_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_3 #x0000000000000000))
(assert (= var79869 temp664_3))
(assert (= temp664_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp664_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_5 #x0000000000000000))
(assert (= var79914 temp664_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp664_6 #x0000000000000000))
(assert (= temp664_7 temp664_6))
(assert (= temp664_8 (select ARGNAME_padding_NAMEEND_VAL temp664_7)))
(assert (= temp664_9 #x0000000000000001))
(assert (= temp664_10 temp664_9))
(assert (= temp664_11 (select ARGNAME_padding_NAMEEND_VAL temp664_10)))
(assert (= temp664_12 #x0000000000000002))
(assert (= temp664_13 temp664_12))
(assert (= temp664_14 (select ARGNAME_padding_NAMEEND_VAL temp664_13)))
(assert (= temp664_15 #x0000000000000003))
(assert (= temp664_16 temp664_15))
(assert (= temp664_17 (select ARGNAME_padding_NAMEEND_VAL temp664_16)))
(assert (= temp664_18 #x0000000000000004))
(assert (= temp664_19 temp664_18))
(assert (= temp664_20 (select ARGNAME_padding_NAMEEND_VAL temp664_19)))
(assert (= temp664_21 #x0000000000000005))
(assert (= temp664_22 temp664_21))
(assert (= temp664_23 (select ARGNAME_padding_NAMEEND_VAL temp664_22)))
(assert (= temp664_24 #x0000000000000000))
(assert (= temp664_25 #x0000000000000000))
(assert (= temp664_26 temp664_25))
(assert (= temp664_27 (select ARGNAME_padding_NAMEEND_VAL temp664_26)))
(assert (= temp664_28 #x0000000000000000))
(assert (= temp664_29 #x0000000000000001))
(assert (= temp664_30 temp664_29))
(assert (= temp664_31 (select ARGNAME_padding_NAMEEND_VAL temp664_30)))
(assert (= temp664_32 #x0000000000000000))
(assert (= temp664_33 #x0000000000000002))
(assert (= temp664_34 temp664_33))
(assert (= temp664_35 (select ARGNAME_padding_NAMEEND_VAL temp664_34)))
(assert (= temp664_36 #x0000000000000000))
(assert (= temp664_37 #x0000000000000003))
(assert (= temp664_38 temp664_37))
(assert (= temp664_39 (select ARGNAME_padding_NAMEEND_VAL temp664_38)))
(assert (= temp664_40 #x0000000000000000))
(assert (= temp664_41 #x0000000000000004))
(assert (= temp664_42 temp664_41))
(assert (= temp664_43 (select ARGNAME_padding_NAMEEND_VAL temp664_42)))
(assert (= temp664_44 #x0000000000000000))
(assert (= temp664_45 #x0000000000000005))
(assert (= temp664_46 temp664_45))
(assert (= temp664_47 (select ARGNAME_padding_NAMEEND_VAL temp664_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp664_27 temp664_24)
             (bvslt temp664_31 temp664_28)
             (bvslt temp664_35 temp664_32)
             (bvslt temp664_39 temp664_36)
             (bvslt temp664_43 temp664_40)
             (bvslt temp664_47 temp664_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_48 #x0000000000000000))
(assert (= var1322786 temp664_48))
(assert (= temp664_49 #x0000000000000000))
(assert (= temp664_50 temp664_49))
(assert (= temp664_51 (select ARGNAME_output_padding_NAMEEND_VAL temp664_50)))
(assert (= temp664_52 #x0000000000000001))
(assert (= temp664_53 temp664_52))
(assert (= temp664_54 (select ARGNAME_output_padding_NAMEEND_VAL temp664_53)))
(assert (= temp664_55 #x0000000000000002))
(assert (= temp664_56 temp664_55))
(assert (= temp664_57 (select ARGNAME_output_padding_NAMEEND_VAL temp664_56)))
(assert (= temp664_58 #x0000000000000003))
(assert (= temp664_59 temp664_58))
(assert (= temp664_60 (select ARGNAME_output_padding_NAMEEND_VAL temp664_59)))
(assert (= temp664_61 #x0000000000000004))
(assert (= temp664_62 temp664_61))
(assert (= temp664_63 (select ARGNAME_output_padding_NAMEEND_VAL temp664_62)))
(assert (= temp664_64 #x0000000000000005))
(assert (= temp664_65 temp664_64))
(assert (= temp664_66 (select ARGNAME_output_padding_NAMEEND_VAL temp664_65)))
(assert (= temp664_67 #x0000000000000000))
(assert (= temp664_68 #x0000000000000000))
(assert (= temp664_69 temp664_68))
(assert (= temp664_70 (select ARGNAME_output_padding_NAMEEND_VAL temp664_69)))
(assert (= temp664_71 #x0000000000000000))
(assert (= temp664_72 #x0000000000000001))
(assert (= temp664_73 temp664_72))
(assert (= temp664_74 (select ARGNAME_output_padding_NAMEEND_VAL temp664_73)))
(assert (= temp664_75 #x0000000000000000))
(assert (= temp664_76 #x0000000000000002))
(assert (= temp664_77 temp664_76))
(assert (= temp664_78 (select ARGNAME_output_padding_NAMEEND_VAL temp664_77)))
(assert (= temp664_79 #x0000000000000000))
(assert (= temp664_80 #x0000000000000003))
(assert (= temp664_81 temp664_80))
(assert (= temp664_82 (select ARGNAME_output_padding_NAMEEND_VAL temp664_81)))
(assert (= temp664_83 #x0000000000000000))
(assert (= temp664_84 #x0000000000000004))
(assert (= temp664_85 temp664_84))
(assert (= temp664_86 (select ARGNAME_output_padding_NAMEEND_VAL temp664_85)))
(assert (= temp664_87 #x0000000000000000))
(assert (= temp664_88 #x0000000000000005))
(assert (= temp664_89 temp664_88))
(assert (= temp664_90 (select ARGNAME_output_padding_NAMEEND_VAL temp664_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp664_70 temp664_67)
             (bvslt temp664_74 temp664_71)
             (bvslt temp664_78 temp664_75)
             (bvslt temp664_82 temp664_79)
             (bvslt temp664_86 temp664_83)
             (bvslt temp664_90 temp664_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_91 #x0000000000000000))
(assert (= var1322797 temp664_91))
(assert (= temp664_92 #x0000000000000000))
(assert (= temp664_93 temp664_92))
(assert (= temp664_94 (select ARGNAME_stride_NAMEEND_VAL temp664_93)))
(assert (= temp664_95 #x0000000000000001))
(assert (= temp664_96 temp664_95))
(assert (= temp664_97 (select ARGNAME_stride_NAMEEND_VAL temp664_96)))
(assert (= temp664_98 #x0000000000000002))
(assert (= temp664_99 temp664_98))
(assert (= temp664_100 (select ARGNAME_stride_NAMEEND_VAL temp664_99)))
(assert (= temp664_101 #x0000000000000003))
(assert (= temp664_102 temp664_101))
(assert (= temp664_103 (select ARGNAME_stride_NAMEEND_VAL temp664_102)))
(assert (= temp664_104 #x0000000000000004))
(assert (= temp664_105 temp664_104))
(assert (= temp664_106 (select ARGNAME_stride_NAMEEND_VAL temp664_105)))
(assert (= temp664_107 #x0000000000000005))
(assert (= temp664_108 temp664_107))
(assert (= temp664_109 (select ARGNAME_stride_NAMEEND_VAL temp664_108)))
(assert (= temp664_110 #x0000000000000000))
(assert (= temp664_111 #x0000000000000000))
(assert (= temp664_112 temp664_111))
(assert (= temp664_113 (select ARGNAME_stride_NAMEEND_VAL temp664_112)))
(assert (= temp664_114 #x0000000000000000))
(assert (= temp664_115 #x0000000000000001))
(assert (= temp664_116 temp664_115))
(assert (= temp664_117 (select ARGNAME_stride_NAMEEND_VAL temp664_116)))
(assert (= temp664_118 #x0000000000000000))
(assert (= temp664_119 #x0000000000000002))
(assert (= temp664_120 temp664_119))
(assert (= temp664_121 (select ARGNAME_stride_NAMEEND_VAL temp664_120)))
(assert (= temp664_122 #x0000000000000000))
(assert (= temp664_123 #x0000000000000003))
(assert (= temp664_124 temp664_123))
(assert (= temp664_125 (select ARGNAME_stride_NAMEEND_VAL temp664_124)))
(assert (= temp664_126 #x0000000000000000))
(assert (= temp664_127 #x0000000000000004))
(assert (= temp664_128 temp664_127))
(assert (= temp664_129 (select ARGNAME_stride_NAMEEND_VAL temp664_128)))
(assert (= temp664_130 #x0000000000000000))
(assert (= temp664_131 #x0000000000000005))
(assert (= temp664_132 temp664_131))
(assert (= temp664_133 (select ARGNAME_stride_NAMEEND_VAL temp664_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp664_113 temp664_110)
             (bvsle temp664_117 temp664_114)
             (bvsle temp664_121 temp664_118)
             (bvsle temp664_125 temp664_122)
             (bvsle temp664_129 temp664_126)
             (bvsle temp664_133 temp664_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_134 #x0000000000000000))
(assert (= var1322807 temp664_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_135 #x0000000000000001))
(assert (= var1322819 temp664_135))
(assert (= temp664_136 #x0000000000000000))
(assert (= var1310898 temp664_136))
(assert (= temp664_137 #x0000000000000000))
(assert (= temp664_138 temp664_137))
(assert (= temp664_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_138)))
(assert (= temp664_140 #x0000000000000001))
(assert (= temp664_141 temp664_140))
(assert (= temp664_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_141)))
(assert (= temp664_143 #x0000000000000002))
(assert (= temp664_144 temp664_143))
(assert (= temp664_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_144)))
(assert (= temp664_146 #x0000000000000003))
(assert (= temp664_147 temp664_146))
(assert (= temp664_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_147)))
(assert (= temp664_149 #x0000000000000004))
(assert (= temp664_150 temp664_149))
(assert (= temp664_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_150)))
(assert (= temp664_152 #x0000000000000005))
(assert (= temp664_153 temp664_152))
(assert (= temp664_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_153)))
(assert (= temp664_156 var1310898))
(assert (= temp664_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_156)))
(assert (= temp664_155 temp664_157))
(assert (= var1322852
   (ite (bvslt temp664_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_158 #x0000000000000000))
(assert (= var1322852 temp664_158))
(assert (= temp664_159 #x0000000000000000))
(assert (= var1310898 temp664_159))
(assert (= temp664_161 var1310898))
(assert (= temp664_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_161)))
(assert (= temp664_160 temp664_162))
(assert (= var1322874 (bvsmod temp664_160 ARGNAME_groups_NAMEEND)))
(assert (= temp664_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp664_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp664_164 #x0000000000000001))
(assert (= var1322875 temp664_164))
(assert (= temp664_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp664_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_166 #x0000000000000001))
(assert (= var1322895 temp664_166))
(assert (= temp664_167 #x0000000000000001))
(assert (= var1311786 temp664_167))
(assert (= temp664_168 #x0000000000000000))
(assert (= temp664_169 temp664_168))
(assert (= temp664_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp664_169)))
(assert (= temp664_171 #x0000000000000001))
(assert (= temp664_172 temp664_171))
(assert (= temp664_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp664_172)))
(assert (= temp664_174 #x0000000000000002))
(assert (= temp664_175 temp664_174))
(assert (= temp664_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp664_175)))
(assert (= temp664_177 #x0000000000000003))
(assert (= temp664_178 temp664_177))
(assert (= temp664_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp664_178)))
(assert (= temp664_180 #x0000000000000004))
(assert (= temp664_181 temp664_180))
(assert (= temp664_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp664_181)))
(assert (= temp664_183 #x0000000000000005))
(assert (= temp664_184 temp664_183))
(assert (= temp664_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp664_184)))
(assert (= temp664_186 #x0000000000000000))
(assert (= temp664_187
   (ite (bvslt var1311786 temp664_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp664_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp664_187)))
(assert (= var1322903 temp664_188))
(assert (bvslt (ite (bvslt var1311786 temp664_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp664_189 #x0000000000000001))
(assert (= var1311786 temp664_189))
(assert (= temp664_191 var1311786))
(assert (= temp664_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_191)))
(assert (= temp664_190 temp664_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp664_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp664_193 #x0000000000000001))
(assert (= var1322908 temp664_193))
(assert (= temp664_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp664_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_195 #x0000000000000001))
(assert (= var1322975 temp664_195))
(assert (= temp664_196 #x0000000000000000))
(assert (= var1310898 temp664_196))
(assert (= temp664_197 #x0000000000000000))
(assert (= temp664_198 temp664_197))
(assert (= temp664_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp664_198)))
(assert (= temp664_200 #x0000000000000001))
(assert (= temp664_201 temp664_200))
(assert (= temp664_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp664_201)))
(assert (= temp664_203 #x0000000000000002))
(assert (= temp664_204 temp664_203))
(assert (= temp664_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp664_204)))
(assert (= temp664_206 #x0000000000000003))
(assert (= temp664_207 temp664_206))
(assert (= temp664_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp664_207)))
(assert (= temp664_209 #x0000000000000004))
(assert (= temp664_210 temp664_209))
(assert (= temp664_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp664_210)))
(assert (= temp664_212 #x0000000000000005))
(assert (= temp664_213 temp664_212))
(assert (= temp664_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp664_213)))
(assert (= temp664_215 #x0000000000000000))
(assert (= temp664_216
   (ite (bvslt var1310898 temp664_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp664_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp664_216)))
(assert (= var1322977 temp664_217))
(assert (bvslt (ite (bvslt var1310898 temp664_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp664_218 #x0000000000000000))
(assert (= var1310898 temp664_218))
(assert (= temp664_220 var1310898))
(assert (= temp664_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp664_220)))
(assert (= temp664_219 temp664_221))
(assert (= var1322980
   (ite (= var1322977 temp664_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp664_222 #x0000000000000001))
(assert (= var1322980 temp664_222))
(assert (= temp664_223 #x0000000000000002))
(assert (= var1848169 temp664_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp664_225 #x0000000000000001))
(assert (= var1323065 temp664_225))
(assert (= temp664_226 #x0000000000000001))
(assert (= var3486735 temp664_226))
(assert (= temp664_227 #x0000000000000001))
(assert (= var3814415 temp664_227))
(assert (= temp664_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp664_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_229 #x0000000000000001))
(assert (= var79986 temp664_229))
(assert (= temp664_230 #x0000000000000001))
(assert (= var80116 temp664_230))
(assert (= var4796905 var80116))
(assert (= temp664_231 #x0000000000000000))
(assert (= var4784306 temp664_231))
(assert (= temp664_232 #x0000000000000000))
(assert (= temp664_233
   (ite (bvslt var4784306 temp664_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp664_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp664_233)))
(assert (= var4796924 temp664_234))
(assert (bvslt (ite (bvslt var4784306 temp664_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp664_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp664_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp664_236 #x0000000000000001))
(assert (= var4796925 temp664_236))
(assert (= temp664_237 #x0000000000000000))
(assert (= var4996927 temp664_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp664_238 #x0000000000000002))
(assert (= var5125763 temp664_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_239 #x0000000000000000))
(assert (= var5191324 temp664_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp664_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp664_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp664_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp664_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp664_243 #x0000000000000001))
(assert (= var79986 temp664_243))
(model-add temp664_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp664_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp664_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






