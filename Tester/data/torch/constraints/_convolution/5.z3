(declare-fun temp6_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp6_2 () (_ BitVec 64))
(declare-fun temp6_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp6_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp6_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp6_6 () (_ BitVec 64))
(declare-fun temp6_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_8 () (_ BitVec 64))
(declare-fun temp6_9 () (_ BitVec 64))
(declare-fun temp6_10 () (_ BitVec 64))
(declare-fun temp6_11 () (_ BitVec 64))
(declare-fun temp6_12 () (_ BitVec 64))
(declare-fun temp6_13 () (_ BitVec 64))
(declare-fun temp6_14 () (_ BitVec 64))
(declare-fun temp6_15 () (_ BitVec 64))
(declare-fun temp6_16 () (_ BitVec 64))
(declare-fun temp6_17 () (_ BitVec 64))
(declare-fun temp6_18 () (_ BitVec 64))
(declare-fun temp6_19 () (_ BitVec 64))
(declare-fun temp6_20 () (_ BitVec 64))
(declare-fun temp6_21 () (_ BitVec 64))
(declare-fun temp6_22 () (_ BitVec 64))
(declare-fun temp6_23 () (_ BitVec 64))
(declare-fun temp6_24 () (_ BitVec 64))
(declare-fun temp6_25 () (_ BitVec 64))
(declare-fun temp6_26 () (_ BitVec 64))
(declare-fun temp6_27 () (_ BitVec 64))
(declare-fun temp6_28 () (_ BitVec 64))
(declare-fun temp6_29 () (_ BitVec 64))
(declare-fun temp6_30 () (_ BitVec 64))
(declare-fun temp6_31 () (_ BitVec 64))
(declare-fun temp6_32 () (_ BitVec 64))
(declare-fun temp6_33 () (_ BitVec 64))
(declare-fun temp6_34 () (_ BitVec 64))
(declare-fun temp6_35 () (_ BitVec 64))
(declare-fun temp6_36 () (_ BitVec 64))
(declare-fun temp6_37 () (_ BitVec 64))
(declare-fun temp6_38 () (_ BitVec 64))
(declare-fun temp6_39 () (_ BitVec 64))
(declare-fun temp6_40 () (_ BitVec 64))
(declare-fun temp6_41 () (_ BitVec 64))
(declare-fun temp6_42 () (_ BitVec 64))
(declare-fun temp6_43 () (_ BitVec 64))
(declare-fun temp6_44 () (_ BitVec 64))
(declare-fun temp6_45 () (_ BitVec 64))
(declare-fun temp6_46 () (_ BitVec 64))
(declare-fun temp6_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp6_48 () (_ BitVec 64))
(declare-fun temp6_49 () (_ BitVec 64))
(declare-fun temp6_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_51 () (_ BitVec 64))
(declare-fun temp6_52 () (_ BitVec 64))
(declare-fun temp6_53 () (_ BitVec 64))
(declare-fun temp6_54 () (_ BitVec 64))
(declare-fun temp6_55 () (_ BitVec 64))
(declare-fun temp6_56 () (_ BitVec 64))
(declare-fun temp6_57 () (_ BitVec 64))
(declare-fun temp6_58 () (_ BitVec 64))
(declare-fun temp6_59 () (_ BitVec 64))
(declare-fun temp6_60 () (_ BitVec 64))
(declare-fun temp6_61 () (_ BitVec 64))
(declare-fun temp6_62 () (_ BitVec 64))
(declare-fun temp6_63 () (_ BitVec 64))
(declare-fun temp6_64 () (_ BitVec 64))
(declare-fun temp6_65 () (_ BitVec 64))
(declare-fun temp6_66 () (_ BitVec 64))
(declare-fun temp6_67 () (_ BitVec 64))
(declare-fun temp6_68 () (_ BitVec 64))
(declare-fun temp6_69 () (_ BitVec 64))
(declare-fun temp6_70 () (_ BitVec 64))
(declare-fun temp6_71 () (_ BitVec 64))
(declare-fun temp6_72 () (_ BitVec 64))
(declare-fun temp6_73 () (_ BitVec 64))
(declare-fun temp6_74 () (_ BitVec 64))
(declare-fun temp6_75 () (_ BitVec 64))
(declare-fun temp6_76 () (_ BitVec 64))
(declare-fun temp6_77 () (_ BitVec 64))
(declare-fun temp6_78 () (_ BitVec 64))
(declare-fun temp6_79 () (_ BitVec 64))
(declare-fun temp6_80 () (_ BitVec 64))
(declare-fun temp6_81 () (_ BitVec 64))
(declare-fun temp6_82 () (_ BitVec 64))
(declare-fun temp6_83 () (_ BitVec 64))
(declare-fun temp6_84 () (_ BitVec 64))
(declare-fun temp6_85 () (_ BitVec 64))
(declare-fun temp6_86 () (_ BitVec 64))
(declare-fun temp6_87 () (_ BitVec 64))
(declare-fun temp6_88 () (_ BitVec 64))
(declare-fun temp6_89 () (_ BitVec 64))
(declare-fun temp6_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp6_91 () (_ BitVec 64))
(declare-fun temp6_92 () (_ BitVec 64))
(declare-fun temp6_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_94 () (_ BitVec 64))
(declare-fun temp6_95 () (_ BitVec 64))
(declare-fun temp6_96 () (_ BitVec 64))
(declare-fun temp6_97 () (_ BitVec 64))
(declare-fun temp6_98 () (_ BitVec 64))
(declare-fun temp6_99 () (_ BitVec 64))
(declare-fun temp6_100 () (_ BitVec 64))
(declare-fun temp6_101 () (_ BitVec 64))
(declare-fun temp6_102 () (_ BitVec 64))
(declare-fun temp6_103 () (_ BitVec 64))
(declare-fun temp6_104 () (_ BitVec 64))
(declare-fun temp6_105 () (_ BitVec 64))
(declare-fun temp6_106 () (_ BitVec 64))
(declare-fun temp6_107 () (_ BitVec 64))
(declare-fun temp6_108 () (_ BitVec 64))
(declare-fun temp6_109 () (_ BitVec 64))
(declare-fun temp6_110 () (_ BitVec 64))
(declare-fun temp6_111 () (_ BitVec 64))
(declare-fun temp6_112 () (_ BitVec 64))
(declare-fun temp6_113 () (_ BitVec 64))
(declare-fun temp6_114 () (_ BitVec 64))
(declare-fun temp6_115 () (_ BitVec 64))
(declare-fun temp6_116 () (_ BitVec 64))
(declare-fun temp6_117 () (_ BitVec 64))
(declare-fun temp6_118 () (_ BitVec 64))
(declare-fun temp6_119 () (_ BitVec 64))
(declare-fun temp6_120 () (_ BitVec 64))
(declare-fun temp6_121 () (_ BitVec 64))
(declare-fun temp6_122 () (_ BitVec 64))
(declare-fun temp6_123 () (_ BitVec 64))
(declare-fun temp6_124 () (_ BitVec 64))
(declare-fun temp6_125 () (_ BitVec 64))
(declare-fun temp6_126 () (_ BitVec 64))
(declare-fun temp6_127 () (_ BitVec 64))
(declare-fun temp6_128 () (_ BitVec 64))
(declare-fun temp6_129 () (_ BitVec 64))
(declare-fun temp6_130 () (_ BitVec 64))
(declare-fun temp6_131 () (_ BitVec 64))
(declare-fun temp6_132 () (_ BitVec 64))
(declare-fun temp6_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp6_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp6_135 () (_ BitVec 64))
(declare-fun temp6_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp6_137 () (_ BitVec 64))
(declare-fun temp6_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_139 () (_ BitVec 64))
(declare-fun temp6_140 () (_ BitVec 64))
(declare-fun temp6_141 () (_ BitVec 64))
(declare-fun temp6_142 () (_ BitVec 64))
(declare-fun temp6_143 () (_ BitVec 64))
(declare-fun temp6_144 () (_ BitVec 64))
(declare-fun temp6_145 () (_ BitVec 64))
(declare-fun temp6_146 () (_ BitVec 64))
(declare-fun temp6_147 () (_ BitVec 64))
(declare-fun temp6_148 () (_ BitVec 64))
(declare-fun temp6_149 () (_ BitVec 64))
(declare-fun temp6_150 () (_ BitVec 64))
(declare-fun temp6_151 () (_ BitVec 64))
(declare-fun temp6_152 () (_ BitVec 64))
(declare-fun temp6_153 () (_ BitVec 64))
(declare-fun temp6_154 () (_ BitVec 64))
(declare-fun temp6_156 () (_ BitVec 64))
(declare-fun temp6_157 () (_ BitVec 64))
(declare-fun temp6_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp6_158 () (_ BitVec 64))
(declare-fun temp6_159 () (_ BitVec 64))
(declare-fun temp6_161 () (_ BitVec 64))
(declare-fun temp6_162 () (_ BitVec 64))
(declare-fun temp6_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp6_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp6_164 () (_ BitVec 64))
(declare-fun temp6_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp6_166 () (_ BitVec 64))
(declare-fun temp6_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp6_168 () (_ BitVec 64))
(declare-fun temp6_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_170 () (_ BitVec 64))
(declare-fun temp6_171 () (_ BitVec 64))
(declare-fun temp6_172 () (_ BitVec 64))
(declare-fun temp6_173 () (_ BitVec 64))
(declare-fun temp6_174 () (_ BitVec 64))
(declare-fun temp6_175 () (_ BitVec 64))
(declare-fun temp6_176 () (_ BitVec 64))
(declare-fun temp6_177 () (_ BitVec 64))
(declare-fun temp6_178 () (_ BitVec 64))
(declare-fun temp6_179 () (_ BitVec 64))
(declare-fun temp6_180 () (_ BitVec 64))
(declare-fun temp6_181 () (_ BitVec 64))
(declare-fun temp6_182 () (_ BitVec 64))
(declare-fun temp6_183 () (_ BitVec 64))
(declare-fun temp6_184 () (_ BitVec 64))
(declare-fun temp6_185 () (_ BitVec 64))
(declare-fun temp6_186 () (_ BitVec 64))
(declare-fun temp6_187 () (_ BitVec 64))
(declare-fun temp6_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp6_189 () (_ BitVec 64))
(declare-fun temp6_191 () (_ BitVec 64))
(declare-fun temp6_192 () (_ BitVec 64))
(declare-fun temp6_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp6_193 () (_ BitVec 64))
(declare-fun temp6_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp6_195 () (_ BitVec 64))
(declare-fun temp6_196 () (_ BitVec 64))
(declare-fun temp6_197 () (_ BitVec 64))
(declare-fun temp6_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_199 () (_ BitVec 64))
(declare-fun temp6_200 () (_ BitVec 64))
(declare-fun temp6_201 () (_ BitVec 64))
(declare-fun temp6_202 () (_ BitVec 64))
(declare-fun temp6_203 () (_ BitVec 64))
(declare-fun temp6_204 () (_ BitVec 64))
(declare-fun temp6_205 () (_ BitVec 64))
(declare-fun temp6_206 () (_ BitVec 64))
(declare-fun temp6_207 () (_ BitVec 64))
(declare-fun temp6_208 () (_ BitVec 64))
(declare-fun temp6_209 () (_ BitVec 64))
(declare-fun temp6_210 () (_ BitVec 64))
(declare-fun temp6_211 () (_ BitVec 64))
(declare-fun temp6_212 () (_ BitVec 64))
(declare-fun temp6_213 () (_ BitVec 64))
(declare-fun temp6_214 () (_ BitVec 64))
(declare-fun temp6_215 () (_ BitVec 64))
(declare-fun temp6_216 () (_ BitVec 64))
(declare-fun temp6_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp6_218 () (_ BitVec 64))
(declare-fun temp6_220 () (_ BitVec 64))
(declare-fun temp6_221 () (_ BitVec 64))
(declare-fun temp6_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp6_222 () (_ BitVec 64))
(declare-fun temp6_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp6_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp6_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp6_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp6_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp6_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp6_229 () (_ BitVec 64))
(declare-fun temp6_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp6_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp6_232 () (_ BitVec 64))
(declare-fun temp6_233 () (_ BitVec 64))
(declare-fun temp6_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp6_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp6_236 () (_ BitVec 64))
(declare-fun temp6_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp6_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp6_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp6_240 () (_ BitVec 64))
(assert (= temp6_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp6_1)))
(assert (= temp6_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp6_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_3 #x0000000000000000))
(assert (= var79869 temp6_3))
(assert (= temp6_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp6_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_5 #x0000000000000000))
(assert (= var79914 temp6_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp6_6 #x0000000000000000))
(assert (= temp6_7 temp6_6))
(assert (= temp6_8 (select ARGNAME_padding_NAMEEND_VAL temp6_7)))
(assert (= temp6_9 #x0000000000000001))
(assert (= temp6_10 temp6_9))
(assert (= temp6_11 (select ARGNAME_padding_NAMEEND_VAL temp6_10)))
(assert (= temp6_12 #x0000000000000002))
(assert (= temp6_13 temp6_12))
(assert (= temp6_14 (select ARGNAME_padding_NAMEEND_VAL temp6_13)))
(assert (= temp6_15 #x0000000000000003))
(assert (= temp6_16 temp6_15))
(assert (= temp6_17 (select ARGNAME_padding_NAMEEND_VAL temp6_16)))
(assert (= temp6_18 #x0000000000000004))
(assert (= temp6_19 temp6_18))
(assert (= temp6_20 (select ARGNAME_padding_NAMEEND_VAL temp6_19)))
(assert (= temp6_21 #x0000000000000005))
(assert (= temp6_22 temp6_21))
(assert (= temp6_23 (select ARGNAME_padding_NAMEEND_VAL temp6_22)))
(assert (= temp6_24 #x0000000000000000))
(assert (= temp6_25 #x0000000000000000))
(assert (= temp6_26 temp6_25))
(assert (= temp6_27 (select ARGNAME_padding_NAMEEND_VAL temp6_26)))
(assert (= temp6_28 #x0000000000000000))
(assert (= temp6_29 #x0000000000000001))
(assert (= temp6_30 temp6_29))
(assert (= temp6_31 (select ARGNAME_padding_NAMEEND_VAL temp6_30)))
(assert (= temp6_32 #x0000000000000000))
(assert (= temp6_33 #x0000000000000002))
(assert (= temp6_34 temp6_33))
(assert (= temp6_35 (select ARGNAME_padding_NAMEEND_VAL temp6_34)))
(assert (= temp6_36 #x0000000000000000))
(assert (= temp6_37 #x0000000000000003))
(assert (= temp6_38 temp6_37))
(assert (= temp6_39 (select ARGNAME_padding_NAMEEND_VAL temp6_38)))
(assert (= temp6_40 #x0000000000000000))
(assert (= temp6_41 #x0000000000000004))
(assert (= temp6_42 temp6_41))
(assert (= temp6_43 (select ARGNAME_padding_NAMEEND_VAL temp6_42)))
(assert (= temp6_44 #x0000000000000000))
(assert (= temp6_45 #x0000000000000005))
(assert (= temp6_46 temp6_45))
(assert (= temp6_47 (select ARGNAME_padding_NAMEEND_VAL temp6_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp6_27 temp6_24)
             (bvslt temp6_31 temp6_28)
             (bvslt temp6_35 temp6_32)
             (bvslt temp6_39 temp6_36)
             (bvslt temp6_43 temp6_40)
             (bvslt temp6_47 temp6_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_48 #x0000000000000000))
(assert (= var1322786 temp6_48))
(assert (= temp6_49 #x0000000000000000))
(assert (= temp6_50 temp6_49))
(assert (= temp6_51 (select ARGNAME_output_padding_NAMEEND_VAL temp6_50)))
(assert (= temp6_52 #x0000000000000001))
(assert (= temp6_53 temp6_52))
(assert (= temp6_54 (select ARGNAME_output_padding_NAMEEND_VAL temp6_53)))
(assert (= temp6_55 #x0000000000000002))
(assert (= temp6_56 temp6_55))
(assert (= temp6_57 (select ARGNAME_output_padding_NAMEEND_VAL temp6_56)))
(assert (= temp6_58 #x0000000000000003))
(assert (= temp6_59 temp6_58))
(assert (= temp6_60 (select ARGNAME_output_padding_NAMEEND_VAL temp6_59)))
(assert (= temp6_61 #x0000000000000004))
(assert (= temp6_62 temp6_61))
(assert (= temp6_63 (select ARGNAME_output_padding_NAMEEND_VAL temp6_62)))
(assert (= temp6_64 #x0000000000000005))
(assert (= temp6_65 temp6_64))
(assert (= temp6_66 (select ARGNAME_output_padding_NAMEEND_VAL temp6_65)))
(assert (= temp6_67 #x0000000000000000))
(assert (= temp6_68 #x0000000000000000))
(assert (= temp6_69 temp6_68))
(assert (= temp6_70 (select ARGNAME_output_padding_NAMEEND_VAL temp6_69)))
(assert (= temp6_71 #x0000000000000000))
(assert (= temp6_72 #x0000000000000001))
(assert (= temp6_73 temp6_72))
(assert (= temp6_74 (select ARGNAME_output_padding_NAMEEND_VAL temp6_73)))
(assert (= temp6_75 #x0000000000000000))
(assert (= temp6_76 #x0000000000000002))
(assert (= temp6_77 temp6_76))
(assert (= temp6_78 (select ARGNAME_output_padding_NAMEEND_VAL temp6_77)))
(assert (= temp6_79 #x0000000000000000))
(assert (= temp6_80 #x0000000000000003))
(assert (= temp6_81 temp6_80))
(assert (= temp6_82 (select ARGNAME_output_padding_NAMEEND_VAL temp6_81)))
(assert (= temp6_83 #x0000000000000000))
(assert (= temp6_84 #x0000000000000004))
(assert (= temp6_85 temp6_84))
(assert (= temp6_86 (select ARGNAME_output_padding_NAMEEND_VAL temp6_85)))
(assert (= temp6_87 #x0000000000000000))
(assert (= temp6_88 #x0000000000000005))
(assert (= temp6_89 temp6_88))
(assert (= temp6_90 (select ARGNAME_output_padding_NAMEEND_VAL temp6_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp6_70 temp6_67)
             (bvslt temp6_74 temp6_71)
             (bvslt temp6_78 temp6_75)
             (bvslt temp6_82 temp6_79)
             (bvslt temp6_86 temp6_83)
             (bvslt temp6_90 temp6_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_91 #x0000000000000000))
(assert (= var1322797 temp6_91))
(assert (= temp6_92 #x0000000000000000))
(assert (= temp6_93 temp6_92))
(assert (= temp6_94 (select ARGNAME_stride_NAMEEND_VAL temp6_93)))
(assert (= temp6_95 #x0000000000000001))
(assert (= temp6_96 temp6_95))
(assert (= temp6_97 (select ARGNAME_stride_NAMEEND_VAL temp6_96)))
(assert (= temp6_98 #x0000000000000002))
(assert (= temp6_99 temp6_98))
(assert (= temp6_100 (select ARGNAME_stride_NAMEEND_VAL temp6_99)))
(assert (= temp6_101 #x0000000000000003))
(assert (= temp6_102 temp6_101))
(assert (= temp6_103 (select ARGNAME_stride_NAMEEND_VAL temp6_102)))
(assert (= temp6_104 #x0000000000000004))
(assert (= temp6_105 temp6_104))
(assert (= temp6_106 (select ARGNAME_stride_NAMEEND_VAL temp6_105)))
(assert (= temp6_107 #x0000000000000005))
(assert (= temp6_108 temp6_107))
(assert (= temp6_109 (select ARGNAME_stride_NAMEEND_VAL temp6_108)))
(assert (= temp6_110 #x0000000000000000))
(assert (= temp6_111 #x0000000000000000))
(assert (= temp6_112 temp6_111))
(assert (= temp6_113 (select ARGNAME_stride_NAMEEND_VAL temp6_112)))
(assert (= temp6_114 #x0000000000000000))
(assert (= temp6_115 #x0000000000000001))
(assert (= temp6_116 temp6_115))
(assert (= temp6_117 (select ARGNAME_stride_NAMEEND_VAL temp6_116)))
(assert (= temp6_118 #x0000000000000000))
(assert (= temp6_119 #x0000000000000002))
(assert (= temp6_120 temp6_119))
(assert (= temp6_121 (select ARGNAME_stride_NAMEEND_VAL temp6_120)))
(assert (= temp6_122 #x0000000000000000))
(assert (= temp6_123 #x0000000000000003))
(assert (= temp6_124 temp6_123))
(assert (= temp6_125 (select ARGNAME_stride_NAMEEND_VAL temp6_124)))
(assert (= temp6_126 #x0000000000000000))
(assert (= temp6_127 #x0000000000000004))
(assert (= temp6_128 temp6_127))
(assert (= temp6_129 (select ARGNAME_stride_NAMEEND_VAL temp6_128)))
(assert (= temp6_130 #x0000000000000000))
(assert (= temp6_131 #x0000000000000005))
(assert (= temp6_132 temp6_131))
(assert (= temp6_133 (select ARGNAME_stride_NAMEEND_VAL temp6_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp6_113 temp6_110)
             (bvsle temp6_117 temp6_114)
             (bvsle temp6_121 temp6_118)
             (bvsle temp6_125 temp6_122)
             (bvsle temp6_129 temp6_126)
             (bvsle temp6_133 temp6_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_134 #x0000000000000000))
(assert (= var1322807 temp6_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_135 #x0000000000000001))
(assert (= var1322819 temp6_135))
(assert (= temp6_136 #x0000000000000000))
(assert (= var1310898 temp6_136))
(assert (= temp6_137 #x0000000000000000))
(assert (= temp6_138 temp6_137))
(assert (= temp6_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_138)))
(assert (= temp6_140 #x0000000000000001))
(assert (= temp6_141 temp6_140))
(assert (= temp6_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_141)))
(assert (= temp6_143 #x0000000000000002))
(assert (= temp6_144 temp6_143))
(assert (= temp6_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_144)))
(assert (= temp6_146 #x0000000000000003))
(assert (= temp6_147 temp6_146))
(assert (= temp6_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_147)))
(assert (= temp6_149 #x0000000000000004))
(assert (= temp6_150 temp6_149))
(assert (= temp6_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_150)))
(assert (= temp6_152 #x0000000000000005))
(assert (= temp6_153 temp6_152))
(assert (= temp6_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_153)))
(assert (= temp6_156 var1310898))
(assert (= temp6_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_156)))
(assert (= temp6_155 temp6_157))
(assert (= var1322852
   (ite (bvslt temp6_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_158 #x0000000000000000))
(assert (= var1322852 temp6_158))
(assert (= temp6_159 #x0000000000000000))
(assert (= var1310898 temp6_159))
(assert (= temp6_161 var1310898))
(assert (= temp6_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_161)))
(assert (= temp6_160 temp6_162))
(assert (= var1322874 (bvsmod temp6_160 ARGNAME_groups_NAMEEND)))
(assert (= temp6_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp6_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_164 #x0000000000000001))
(assert (= var1322875 temp6_164))
(assert (= temp6_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp6_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_166 #x0000000000000001))
(assert (= var1322895 temp6_166))
(assert (= temp6_167 #x0000000000000001))
(assert (= var1311786 temp6_167))
(assert (= temp6_168 #x0000000000000000))
(assert (= temp6_169 temp6_168))
(assert (= temp6_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_169)))
(assert (= temp6_171 #x0000000000000001))
(assert (= temp6_172 temp6_171))
(assert (= temp6_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_172)))
(assert (= temp6_174 #x0000000000000002))
(assert (= temp6_175 temp6_174))
(assert (= temp6_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_175)))
(assert (= temp6_177 #x0000000000000003))
(assert (= temp6_178 temp6_177))
(assert (= temp6_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_178)))
(assert (= temp6_180 #x0000000000000004))
(assert (= temp6_181 temp6_180))
(assert (= temp6_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_181)))
(assert (= temp6_183 #x0000000000000005))
(assert (= temp6_184 temp6_183))
(assert (= temp6_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_184)))
(assert (= temp6_186 #x0000000000000000))
(assert (= temp6_187
   (ite (bvslt var1311786 temp6_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp6_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_187)))
(assert (= var1322903 temp6_188))
(assert (bvslt (ite (bvslt var1311786 temp6_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp6_189 #x0000000000000001))
(assert (= var1311786 temp6_189))
(assert (= temp6_191 var1311786))
(assert (= temp6_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_191)))
(assert (= temp6_190 temp6_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp6_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_193 #x0000000000000001))
(assert (= var1322908 temp6_193))
(assert (= temp6_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp6_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_195 #x0000000000000001))
(assert (= var1322975 temp6_195))
(assert (= temp6_196 #x0000000000000000))
(assert (= var1310898 temp6_196))
(assert (= temp6_197 #x0000000000000000))
(assert (= temp6_198 temp6_197))
(assert (= temp6_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp6_198)))
(assert (= temp6_200 #x0000000000000001))
(assert (= temp6_201 temp6_200))
(assert (= temp6_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp6_201)))
(assert (= temp6_203 #x0000000000000002))
(assert (= temp6_204 temp6_203))
(assert (= temp6_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp6_204)))
(assert (= temp6_206 #x0000000000000003))
(assert (= temp6_207 temp6_206))
(assert (= temp6_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp6_207)))
(assert (= temp6_209 #x0000000000000004))
(assert (= temp6_210 temp6_209))
(assert (= temp6_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp6_210)))
(assert (= temp6_212 #x0000000000000005))
(assert (= temp6_213 temp6_212))
(assert (= temp6_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp6_213)))
(assert (= temp6_215 #x0000000000000000))
(assert (= temp6_216
   (ite (bvslt var1310898 temp6_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp6_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp6_216)))
(assert (= var1322977 temp6_217))
(assert (bvslt (ite (bvslt var1310898 temp6_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp6_218 #x0000000000000000))
(assert (= var1310898 temp6_218))
(assert (= temp6_220 var1310898))
(assert (= temp6_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_220)))
(assert (= temp6_219 temp6_221))
(assert (= var1322980
   (ite (= var1322977 temp6_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_222 #x0000000000000001))
(assert (= var1322980 temp6_222))
(assert (= temp6_223 #x0000000000000002))
(assert (= var1848169 temp6_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp6_225 #x0000000000000001))
(assert (= var1323065 temp6_225))
(assert (= temp6_226 #x0000000000000001))
(assert (= var3486735 temp6_226))
(assert (= temp6_227 #x0000000000000001))
(assert (= var3814415 temp6_227))
(assert (= temp6_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp6_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_229 #x0000000000000001))
(assert (= var79986 temp6_229))
(assert (= temp6_230 #x0000000000000001))
(assert (= var80116 temp6_230))
(assert (= var4796905 var80116))
(assert (= temp6_231 #x0000000000000000))
(assert (= var4784306 temp6_231))
(assert (= temp6_232 #x0000000000000000))
(assert (= temp6_233
   (ite (bvslt var4784306 temp6_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp6_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_233)))
(assert (= var4796924 temp6_234))
(assert (bvslt (ite (bvslt var4784306 temp6_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp6_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp6_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_236 #x0000000000000001))
(assert (= var4796925 temp6_236))
(assert (= temp6_237 #x0000000000000000))
(assert (= var4996927 temp6_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp6_238 #x0000000000000002))
(assert (= var5125763 temp6_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_239 #x0000000000000000))
(assert (= var5191324 temp6_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp6_240 #x0000000000000001))
(assert (= var79986 temp6_240))
(model-add temp6_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp6_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp6_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






