(declare-fun temp16_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp16_2 () (_ BitVec 64))
(declare-fun temp16_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp16_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp16_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp16_6 () (_ BitVec 64))
(declare-fun temp16_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_8 () (_ BitVec 64))
(declare-fun temp16_9 () (_ BitVec 64))
(declare-fun temp16_10 () (_ BitVec 64))
(declare-fun temp16_11 () (_ BitVec 64))
(declare-fun temp16_12 () (_ BitVec 64))
(declare-fun temp16_13 () (_ BitVec 64))
(declare-fun temp16_14 () (_ BitVec 64))
(declare-fun temp16_15 () (_ BitVec 64))
(declare-fun temp16_16 () (_ BitVec 64))
(declare-fun temp16_17 () (_ BitVec 64))
(declare-fun temp16_18 () (_ BitVec 64))
(declare-fun temp16_19 () (_ BitVec 64))
(declare-fun temp16_20 () (_ BitVec 64))
(declare-fun temp16_21 () (_ BitVec 64))
(declare-fun temp16_22 () (_ BitVec 64))
(declare-fun temp16_23 () (_ BitVec 64))
(declare-fun temp16_24 () (_ BitVec 64))
(declare-fun temp16_25 () (_ BitVec 64))
(declare-fun temp16_26 () (_ BitVec 64))
(declare-fun temp16_27 () (_ BitVec 64))
(declare-fun temp16_28 () (_ BitVec 64))
(declare-fun temp16_29 () (_ BitVec 64))
(declare-fun temp16_30 () (_ BitVec 64))
(declare-fun temp16_31 () (_ BitVec 64))
(declare-fun temp16_32 () (_ BitVec 64))
(declare-fun temp16_33 () (_ BitVec 64))
(declare-fun temp16_34 () (_ BitVec 64))
(declare-fun temp16_35 () (_ BitVec 64))
(declare-fun temp16_36 () (_ BitVec 64))
(declare-fun temp16_37 () (_ BitVec 64))
(declare-fun temp16_38 () (_ BitVec 64))
(declare-fun temp16_39 () (_ BitVec 64))
(declare-fun temp16_40 () (_ BitVec 64))
(declare-fun temp16_41 () (_ BitVec 64))
(declare-fun temp16_42 () (_ BitVec 64))
(declare-fun temp16_43 () (_ BitVec 64))
(declare-fun temp16_44 () (_ BitVec 64))
(declare-fun temp16_45 () (_ BitVec 64))
(declare-fun temp16_46 () (_ BitVec 64))
(declare-fun temp16_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp16_48 () (_ BitVec 64))
(declare-fun temp16_49 () (_ BitVec 64))
(declare-fun temp16_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_51 () (_ BitVec 64))
(declare-fun temp16_52 () (_ BitVec 64))
(declare-fun temp16_53 () (_ BitVec 64))
(declare-fun temp16_54 () (_ BitVec 64))
(declare-fun temp16_55 () (_ BitVec 64))
(declare-fun temp16_56 () (_ BitVec 64))
(declare-fun temp16_57 () (_ BitVec 64))
(declare-fun temp16_58 () (_ BitVec 64))
(declare-fun temp16_59 () (_ BitVec 64))
(declare-fun temp16_60 () (_ BitVec 64))
(declare-fun temp16_61 () (_ BitVec 64))
(declare-fun temp16_62 () (_ BitVec 64))
(declare-fun temp16_63 () (_ BitVec 64))
(declare-fun temp16_64 () (_ BitVec 64))
(declare-fun temp16_65 () (_ BitVec 64))
(declare-fun temp16_66 () (_ BitVec 64))
(declare-fun temp16_67 () (_ BitVec 64))
(declare-fun temp16_68 () (_ BitVec 64))
(declare-fun temp16_69 () (_ BitVec 64))
(declare-fun temp16_70 () (_ BitVec 64))
(declare-fun temp16_71 () (_ BitVec 64))
(declare-fun temp16_72 () (_ BitVec 64))
(declare-fun temp16_73 () (_ BitVec 64))
(declare-fun temp16_74 () (_ BitVec 64))
(declare-fun temp16_75 () (_ BitVec 64))
(declare-fun temp16_76 () (_ BitVec 64))
(declare-fun temp16_77 () (_ BitVec 64))
(declare-fun temp16_78 () (_ BitVec 64))
(declare-fun temp16_79 () (_ BitVec 64))
(declare-fun temp16_80 () (_ BitVec 64))
(declare-fun temp16_81 () (_ BitVec 64))
(declare-fun temp16_82 () (_ BitVec 64))
(declare-fun temp16_83 () (_ BitVec 64))
(declare-fun temp16_84 () (_ BitVec 64))
(declare-fun temp16_85 () (_ BitVec 64))
(declare-fun temp16_86 () (_ BitVec 64))
(declare-fun temp16_87 () (_ BitVec 64))
(declare-fun temp16_88 () (_ BitVec 64))
(declare-fun temp16_89 () (_ BitVec 64))
(declare-fun temp16_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp16_91 () (_ BitVec 64))
(declare-fun temp16_92 () (_ BitVec 64))
(declare-fun temp16_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_94 () (_ BitVec 64))
(declare-fun temp16_95 () (_ BitVec 64))
(declare-fun temp16_96 () (_ BitVec 64))
(declare-fun temp16_97 () (_ BitVec 64))
(declare-fun temp16_98 () (_ BitVec 64))
(declare-fun temp16_99 () (_ BitVec 64))
(declare-fun temp16_100 () (_ BitVec 64))
(declare-fun temp16_101 () (_ BitVec 64))
(declare-fun temp16_102 () (_ BitVec 64))
(declare-fun temp16_103 () (_ BitVec 64))
(declare-fun temp16_104 () (_ BitVec 64))
(declare-fun temp16_105 () (_ BitVec 64))
(declare-fun temp16_106 () (_ BitVec 64))
(declare-fun temp16_107 () (_ BitVec 64))
(declare-fun temp16_108 () (_ BitVec 64))
(declare-fun temp16_109 () (_ BitVec 64))
(declare-fun temp16_110 () (_ BitVec 64))
(declare-fun temp16_111 () (_ BitVec 64))
(declare-fun temp16_112 () (_ BitVec 64))
(declare-fun temp16_113 () (_ BitVec 64))
(declare-fun temp16_114 () (_ BitVec 64))
(declare-fun temp16_115 () (_ BitVec 64))
(declare-fun temp16_116 () (_ BitVec 64))
(declare-fun temp16_117 () (_ BitVec 64))
(declare-fun temp16_118 () (_ BitVec 64))
(declare-fun temp16_119 () (_ BitVec 64))
(declare-fun temp16_120 () (_ BitVec 64))
(declare-fun temp16_121 () (_ BitVec 64))
(declare-fun temp16_122 () (_ BitVec 64))
(declare-fun temp16_123 () (_ BitVec 64))
(declare-fun temp16_124 () (_ BitVec 64))
(declare-fun temp16_125 () (_ BitVec 64))
(declare-fun temp16_126 () (_ BitVec 64))
(declare-fun temp16_127 () (_ BitVec 64))
(declare-fun temp16_128 () (_ BitVec 64))
(declare-fun temp16_129 () (_ BitVec 64))
(declare-fun temp16_130 () (_ BitVec 64))
(declare-fun temp16_131 () (_ BitVec 64))
(declare-fun temp16_132 () (_ BitVec 64))
(declare-fun temp16_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp16_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp16_135 () (_ BitVec 64))
(declare-fun temp16_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp16_137 () (_ BitVec 64))
(declare-fun temp16_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_139 () (_ BitVec 64))
(declare-fun temp16_140 () (_ BitVec 64))
(declare-fun temp16_141 () (_ BitVec 64))
(declare-fun temp16_142 () (_ BitVec 64))
(declare-fun temp16_143 () (_ BitVec 64))
(declare-fun temp16_144 () (_ BitVec 64))
(declare-fun temp16_145 () (_ BitVec 64))
(declare-fun temp16_146 () (_ BitVec 64))
(declare-fun temp16_147 () (_ BitVec 64))
(declare-fun temp16_148 () (_ BitVec 64))
(declare-fun temp16_149 () (_ BitVec 64))
(declare-fun temp16_150 () (_ BitVec 64))
(declare-fun temp16_151 () (_ BitVec 64))
(declare-fun temp16_152 () (_ BitVec 64))
(declare-fun temp16_153 () (_ BitVec 64))
(declare-fun temp16_154 () (_ BitVec 64))
(declare-fun temp16_156 () (_ BitVec 64))
(declare-fun temp16_157 () (_ BitVec 64))
(declare-fun temp16_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp16_158 () (_ BitVec 64))
(declare-fun temp16_159 () (_ BitVec 64))
(declare-fun temp16_161 () (_ BitVec 64))
(declare-fun temp16_162 () (_ BitVec 64))
(declare-fun temp16_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp16_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp16_164 () (_ BitVec 64))
(declare-fun temp16_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp16_166 () (_ BitVec 64))
(declare-fun temp16_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp16_168 () (_ BitVec 64))
(declare-fun temp16_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_170 () (_ BitVec 64))
(declare-fun temp16_171 () (_ BitVec 64))
(declare-fun temp16_172 () (_ BitVec 64))
(declare-fun temp16_173 () (_ BitVec 64))
(declare-fun temp16_174 () (_ BitVec 64))
(declare-fun temp16_175 () (_ BitVec 64))
(declare-fun temp16_176 () (_ BitVec 64))
(declare-fun temp16_177 () (_ BitVec 64))
(declare-fun temp16_178 () (_ BitVec 64))
(declare-fun temp16_179 () (_ BitVec 64))
(declare-fun temp16_180 () (_ BitVec 64))
(declare-fun temp16_181 () (_ BitVec 64))
(declare-fun temp16_182 () (_ BitVec 64))
(declare-fun temp16_183 () (_ BitVec 64))
(declare-fun temp16_184 () (_ BitVec 64))
(declare-fun temp16_185 () (_ BitVec 64))
(declare-fun temp16_186 () (_ BitVec 64))
(declare-fun temp16_187 () (_ BitVec 64))
(declare-fun temp16_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp16_189 () (_ BitVec 64))
(declare-fun temp16_191 () (_ BitVec 64))
(declare-fun temp16_192 () (_ BitVec 64))
(declare-fun temp16_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp16_193 () (_ BitVec 64))
(declare-fun temp16_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp16_195 () (_ BitVec 64))
(declare-fun temp16_196 () (_ BitVec 64))
(declare-fun temp16_197 () (_ BitVec 64))
(declare-fun temp16_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_199 () (_ BitVec 64))
(declare-fun temp16_200 () (_ BitVec 64))
(declare-fun temp16_201 () (_ BitVec 64))
(declare-fun temp16_202 () (_ BitVec 64))
(declare-fun temp16_203 () (_ BitVec 64))
(declare-fun temp16_204 () (_ BitVec 64))
(declare-fun temp16_205 () (_ BitVec 64))
(declare-fun temp16_206 () (_ BitVec 64))
(declare-fun temp16_207 () (_ BitVec 64))
(declare-fun temp16_208 () (_ BitVec 64))
(declare-fun temp16_209 () (_ BitVec 64))
(declare-fun temp16_210 () (_ BitVec 64))
(declare-fun temp16_211 () (_ BitVec 64))
(declare-fun temp16_212 () (_ BitVec 64))
(declare-fun temp16_213 () (_ BitVec 64))
(declare-fun temp16_214 () (_ BitVec 64))
(declare-fun temp16_215 () (_ BitVec 64))
(declare-fun temp16_216 () (_ BitVec 64))
(declare-fun temp16_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp16_218 () (_ BitVec 64))
(declare-fun temp16_220 () (_ BitVec 64))
(declare-fun temp16_221 () (_ BitVec 64))
(declare-fun temp16_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp16_222 () (_ BitVec 64))
(declare-fun temp16_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp16_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp16_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp16_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp16_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp16_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp16_229 () (_ BitVec 64))
(declare-fun temp16_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp16_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp16_232 () (_ BitVec 64))
(declare-fun temp16_233 () (_ BitVec 64))
(declare-fun temp16_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp16_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp16_236 () (_ BitVec 64))
(declare-fun temp16_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp16_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp16_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp16_240 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp16_241 () (_ BitVec 64))
(assert (= temp16_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp16_1)))
(assert (= temp16_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp16_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_3 #x0000000000000000))
(assert (= var79869 temp16_3))
(assert (= temp16_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp16_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_5 #x0000000000000000))
(assert (= var79914 temp16_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp16_6 #x0000000000000000))
(assert (= temp16_7 temp16_6))
(assert (= temp16_8 (select ARGNAME_padding_NAMEEND_VAL temp16_7)))
(assert (= temp16_9 #x0000000000000001))
(assert (= temp16_10 temp16_9))
(assert (= temp16_11 (select ARGNAME_padding_NAMEEND_VAL temp16_10)))
(assert (= temp16_12 #x0000000000000002))
(assert (= temp16_13 temp16_12))
(assert (= temp16_14 (select ARGNAME_padding_NAMEEND_VAL temp16_13)))
(assert (= temp16_15 #x0000000000000003))
(assert (= temp16_16 temp16_15))
(assert (= temp16_17 (select ARGNAME_padding_NAMEEND_VAL temp16_16)))
(assert (= temp16_18 #x0000000000000004))
(assert (= temp16_19 temp16_18))
(assert (= temp16_20 (select ARGNAME_padding_NAMEEND_VAL temp16_19)))
(assert (= temp16_21 #x0000000000000005))
(assert (= temp16_22 temp16_21))
(assert (= temp16_23 (select ARGNAME_padding_NAMEEND_VAL temp16_22)))
(assert (= temp16_24 #x0000000000000000))
(assert (= temp16_25 #x0000000000000000))
(assert (= temp16_26 temp16_25))
(assert (= temp16_27 (select ARGNAME_padding_NAMEEND_VAL temp16_26)))
(assert (= temp16_28 #x0000000000000000))
(assert (= temp16_29 #x0000000000000001))
(assert (= temp16_30 temp16_29))
(assert (= temp16_31 (select ARGNAME_padding_NAMEEND_VAL temp16_30)))
(assert (= temp16_32 #x0000000000000000))
(assert (= temp16_33 #x0000000000000002))
(assert (= temp16_34 temp16_33))
(assert (= temp16_35 (select ARGNAME_padding_NAMEEND_VAL temp16_34)))
(assert (= temp16_36 #x0000000000000000))
(assert (= temp16_37 #x0000000000000003))
(assert (= temp16_38 temp16_37))
(assert (= temp16_39 (select ARGNAME_padding_NAMEEND_VAL temp16_38)))
(assert (= temp16_40 #x0000000000000000))
(assert (= temp16_41 #x0000000000000004))
(assert (= temp16_42 temp16_41))
(assert (= temp16_43 (select ARGNAME_padding_NAMEEND_VAL temp16_42)))
(assert (= temp16_44 #x0000000000000000))
(assert (= temp16_45 #x0000000000000005))
(assert (= temp16_46 temp16_45))
(assert (= temp16_47 (select ARGNAME_padding_NAMEEND_VAL temp16_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp16_27 temp16_24)
             (bvslt temp16_31 temp16_28)
             (bvslt temp16_35 temp16_32)
             (bvslt temp16_39 temp16_36)
             (bvslt temp16_43 temp16_40)
             (bvslt temp16_47 temp16_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_48 #x0000000000000000))
(assert (= var1322786 temp16_48))
(assert (= temp16_49 #x0000000000000000))
(assert (= temp16_50 temp16_49))
(assert (= temp16_51 (select ARGNAME_output_padding_NAMEEND_VAL temp16_50)))
(assert (= temp16_52 #x0000000000000001))
(assert (= temp16_53 temp16_52))
(assert (= temp16_54 (select ARGNAME_output_padding_NAMEEND_VAL temp16_53)))
(assert (= temp16_55 #x0000000000000002))
(assert (= temp16_56 temp16_55))
(assert (= temp16_57 (select ARGNAME_output_padding_NAMEEND_VAL temp16_56)))
(assert (= temp16_58 #x0000000000000003))
(assert (= temp16_59 temp16_58))
(assert (= temp16_60 (select ARGNAME_output_padding_NAMEEND_VAL temp16_59)))
(assert (= temp16_61 #x0000000000000004))
(assert (= temp16_62 temp16_61))
(assert (= temp16_63 (select ARGNAME_output_padding_NAMEEND_VAL temp16_62)))
(assert (= temp16_64 #x0000000000000005))
(assert (= temp16_65 temp16_64))
(assert (= temp16_66 (select ARGNAME_output_padding_NAMEEND_VAL temp16_65)))
(assert (= temp16_67 #x0000000000000000))
(assert (= temp16_68 #x0000000000000000))
(assert (= temp16_69 temp16_68))
(assert (= temp16_70 (select ARGNAME_output_padding_NAMEEND_VAL temp16_69)))
(assert (= temp16_71 #x0000000000000000))
(assert (= temp16_72 #x0000000000000001))
(assert (= temp16_73 temp16_72))
(assert (= temp16_74 (select ARGNAME_output_padding_NAMEEND_VAL temp16_73)))
(assert (= temp16_75 #x0000000000000000))
(assert (= temp16_76 #x0000000000000002))
(assert (= temp16_77 temp16_76))
(assert (= temp16_78 (select ARGNAME_output_padding_NAMEEND_VAL temp16_77)))
(assert (= temp16_79 #x0000000000000000))
(assert (= temp16_80 #x0000000000000003))
(assert (= temp16_81 temp16_80))
(assert (= temp16_82 (select ARGNAME_output_padding_NAMEEND_VAL temp16_81)))
(assert (= temp16_83 #x0000000000000000))
(assert (= temp16_84 #x0000000000000004))
(assert (= temp16_85 temp16_84))
(assert (= temp16_86 (select ARGNAME_output_padding_NAMEEND_VAL temp16_85)))
(assert (= temp16_87 #x0000000000000000))
(assert (= temp16_88 #x0000000000000005))
(assert (= temp16_89 temp16_88))
(assert (= temp16_90 (select ARGNAME_output_padding_NAMEEND_VAL temp16_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp16_70 temp16_67)
             (bvslt temp16_74 temp16_71)
             (bvslt temp16_78 temp16_75)
             (bvslt temp16_82 temp16_79)
             (bvslt temp16_86 temp16_83)
             (bvslt temp16_90 temp16_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_91 #x0000000000000000))
(assert (= var1322797 temp16_91))
(assert (= temp16_92 #x0000000000000000))
(assert (= temp16_93 temp16_92))
(assert (= temp16_94 (select ARGNAME_stride_NAMEEND_VAL temp16_93)))
(assert (= temp16_95 #x0000000000000001))
(assert (= temp16_96 temp16_95))
(assert (= temp16_97 (select ARGNAME_stride_NAMEEND_VAL temp16_96)))
(assert (= temp16_98 #x0000000000000002))
(assert (= temp16_99 temp16_98))
(assert (= temp16_100 (select ARGNAME_stride_NAMEEND_VAL temp16_99)))
(assert (= temp16_101 #x0000000000000003))
(assert (= temp16_102 temp16_101))
(assert (= temp16_103 (select ARGNAME_stride_NAMEEND_VAL temp16_102)))
(assert (= temp16_104 #x0000000000000004))
(assert (= temp16_105 temp16_104))
(assert (= temp16_106 (select ARGNAME_stride_NAMEEND_VAL temp16_105)))
(assert (= temp16_107 #x0000000000000005))
(assert (= temp16_108 temp16_107))
(assert (= temp16_109 (select ARGNAME_stride_NAMEEND_VAL temp16_108)))
(assert (= temp16_110 #x0000000000000000))
(assert (= temp16_111 #x0000000000000000))
(assert (= temp16_112 temp16_111))
(assert (= temp16_113 (select ARGNAME_stride_NAMEEND_VAL temp16_112)))
(assert (= temp16_114 #x0000000000000000))
(assert (= temp16_115 #x0000000000000001))
(assert (= temp16_116 temp16_115))
(assert (= temp16_117 (select ARGNAME_stride_NAMEEND_VAL temp16_116)))
(assert (= temp16_118 #x0000000000000000))
(assert (= temp16_119 #x0000000000000002))
(assert (= temp16_120 temp16_119))
(assert (= temp16_121 (select ARGNAME_stride_NAMEEND_VAL temp16_120)))
(assert (= temp16_122 #x0000000000000000))
(assert (= temp16_123 #x0000000000000003))
(assert (= temp16_124 temp16_123))
(assert (= temp16_125 (select ARGNAME_stride_NAMEEND_VAL temp16_124)))
(assert (= temp16_126 #x0000000000000000))
(assert (= temp16_127 #x0000000000000004))
(assert (= temp16_128 temp16_127))
(assert (= temp16_129 (select ARGNAME_stride_NAMEEND_VAL temp16_128)))
(assert (= temp16_130 #x0000000000000000))
(assert (= temp16_131 #x0000000000000005))
(assert (= temp16_132 temp16_131))
(assert (= temp16_133 (select ARGNAME_stride_NAMEEND_VAL temp16_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp16_113 temp16_110)
             (bvsle temp16_117 temp16_114)
             (bvsle temp16_121 temp16_118)
             (bvsle temp16_125 temp16_122)
             (bvsle temp16_129 temp16_126)
             (bvsle temp16_133 temp16_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_134 #x0000000000000000))
(assert (= var1322807 temp16_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_135 #x0000000000000001))
(assert (= var1322819 temp16_135))
(assert (= temp16_136 #x0000000000000000))
(assert (= var1310898 temp16_136))
(assert (= temp16_137 #x0000000000000000))
(assert (= temp16_138 temp16_137))
(assert (= temp16_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_138)))
(assert (= temp16_140 #x0000000000000001))
(assert (= temp16_141 temp16_140))
(assert (= temp16_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_141)))
(assert (= temp16_143 #x0000000000000002))
(assert (= temp16_144 temp16_143))
(assert (= temp16_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_144)))
(assert (= temp16_146 #x0000000000000003))
(assert (= temp16_147 temp16_146))
(assert (= temp16_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_147)))
(assert (= temp16_149 #x0000000000000004))
(assert (= temp16_150 temp16_149))
(assert (= temp16_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_150)))
(assert (= temp16_152 #x0000000000000005))
(assert (= temp16_153 temp16_152))
(assert (= temp16_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_153)))
(assert (= temp16_156 var1310898))
(assert (= temp16_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_156)))
(assert (= temp16_155 temp16_157))
(assert (= var1322852
   (ite (bvslt temp16_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_158 #x0000000000000000))
(assert (= var1322852 temp16_158))
(assert (= temp16_159 #x0000000000000000))
(assert (= var1310898 temp16_159))
(assert (= temp16_161 var1310898))
(assert (= temp16_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_161)))
(assert (= temp16_160 temp16_162))
(assert (= var1322874 (bvsmod temp16_160 ARGNAME_groups_NAMEEND)))
(assert (= temp16_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp16_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_164 #x0000000000000001))
(assert (= var1322875 temp16_164))
(assert (= temp16_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp16_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_166 #x0000000000000001))
(assert (= var1322895 temp16_166))
(assert (= temp16_167 #x0000000000000001))
(assert (= var1311786 temp16_167))
(assert (= temp16_168 #x0000000000000000))
(assert (= temp16_169 temp16_168))
(assert (= temp16_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_169)))
(assert (= temp16_171 #x0000000000000001))
(assert (= temp16_172 temp16_171))
(assert (= temp16_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_172)))
(assert (= temp16_174 #x0000000000000002))
(assert (= temp16_175 temp16_174))
(assert (= temp16_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_175)))
(assert (= temp16_177 #x0000000000000003))
(assert (= temp16_178 temp16_177))
(assert (= temp16_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_178)))
(assert (= temp16_180 #x0000000000000004))
(assert (= temp16_181 temp16_180))
(assert (= temp16_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_181)))
(assert (= temp16_183 #x0000000000000005))
(assert (= temp16_184 temp16_183))
(assert (= temp16_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_184)))
(assert (= temp16_186 #x0000000000000000))
(assert (= temp16_187
   (ite (bvslt var1311786 temp16_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp16_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_187)))
(assert (= var1322903 temp16_188))
(assert (bvslt (ite (bvslt var1311786 temp16_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp16_189 #x0000000000000001))
(assert (= var1311786 temp16_189))
(assert (= temp16_191 var1311786))
(assert (= temp16_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_191)))
(assert (= temp16_190 temp16_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp16_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_193 #x0000000000000001))
(assert (= var1322908 temp16_193))
(assert (= temp16_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp16_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_195 #x0000000000000001))
(assert (= var1322975 temp16_195))
(assert (= temp16_196 #x0000000000000000))
(assert (= var1310898 temp16_196))
(assert (= temp16_197 #x0000000000000000))
(assert (= temp16_198 temp16_197))
(assert (= temp16_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp16_198)))
(assert (= temp16_200 #x0000000000000001))
(assert (= temp16_201 temp16_200))
(assert (= temp16_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp16_201)))
(assert (= temp16_203 #x0000000000000002))
(assert (= temp16_204 temp16_203))
(assert (= temp16_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp16_204)))
(assert (= temp16_206 #x0000000000000003))
(assert (= temp16_207 temp16_206))
(assert (= temp16_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp16_207)))
(assert (= temp16_209 #x0000000000000004))
(assert (= temp16_210 temp16_209))
(assert (= temp16_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp16_210)))
(assert (= temp16_212 #x0000000000000005))
(assert (= temp16_213 temp16_212))
(assert (= temp16_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp16_213)))
(assert (= temp16_215 #x0000000000000000))
(assert (= temp16_216
   (ite (bvslt var1310898 temp16_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp16_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp16_216)))
(assert (= var1322977 temp16_217))
(assert (bvslt (ite (bvslt var1310898 temp16_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp16_218 #x0000000000000000))
(assert (= var1310898 temp16_218))
(assert (= temp16_220 var1310898))
(assert (= temp16_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_220)))
(assert (= temp16_219 temp16_221))
(assert (= var1322980
   (ite (= var1322977 temp16_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_222 #x0000000000000001))
(assert (= var1322980 temp16_222))
(assert (= temp16_223 #x0000000000000002))
(assert (= var1848169 temp16_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp16_225 #x0000000000000001))
(assert (= var1323065 temp16_225))
(assert (= temp16_226 #x0000000000000001))
(assert (= var3486735 temp16_226))
(assert (= temp16_227 #x0000000000000001))
(assert (= var3814415 temp16_227))
(assert (= temp16_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp16_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_229 #x0000000000000001))
(assert (= var79986 temp16_229))
(assert (= temp16_230 #x0000000000000001))
(assert (= var80116 temp16_230))
(assert (= var4796905 var80116))
(assert (= temp16_231 #x0000000000000000))
(assert (= var4784306 temp16_231))
(assert (= temp16_232 #x0000000000000000))
(assert (= temp16_233
   (ite (bvslt var4784306 temp16_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp16_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_233)))
(assert (= var4796924 temp16_234))
(assert (bvslt (ite (bvslt var4784306 temp16_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp16_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp16_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_236 #x0000000000000001))
(assert (= var4796925 temp16_236))
(assert (= temp16_237 #x0000000000000000))
(assert (= var4996927 temp16_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp16_238 #x0000000000000002))
(assert (= var5125763 temp16_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_239 #x0000000000000000))
(assert (= var5191324 temp16_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp16_240 #x0000000000000000))
(assert (= var5386640 temp16_240))
(assert (= temp16_241 #x0000000000000001))
(assert (= var79986 temp16_241))
(model-add temp16_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp16_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp16_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






