(declare-fun temp780_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp780_2 () (_ BitVec 64))
(declare-fun temp780_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp780_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp780_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp780_6 () (_ BitVec 64))
(declare-fun temp780_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_8 () (_ BitVec 64))
(declare-fun temp780_9 () (_ BitVec 64))
(declare-fun temp780_10 () (_ BitVec 64))
(declare-fun temp780_11 () (_ BitVec 64))
(declare-fun temp780_12 () (_ BitVec 64))
(declare-fun temp780_13 () (_ BitVec 64))
(declare-fun temp780_14 () (_ BitVec 64))
(declare-fun temp780_15 () (_ BitVec 64))
(declare-fun temp780_16 () (_ BitVec 64))
(declare-fun temp780_17 () (_ BitVec 64))
(declare-fun temp780_18 () (_ BitVec 64))
(declare-fun temp780_19 () (_ BitVec 64))
(declare-fun temp780_20 () (_ BitVec 64))
(declare-fun temp780_21 () (_ BitVec 64))
(declare-fun temp780_22 () (_ BitVec 64))
(declare-fun temp780_23 () (_ BitVec 64))
(declare-fun temp780_24 () (_ BitVec 64))
(declare-fun temp780_25 () (_ BitVec 64))
(declare-fun temp780_26 () (_ BitVec 64))
(declare-fun temp780_27 () (_ BitVec 64))
(declare-fun temp780_28 () (_ BitVec 64))
(declare-fun temp780_29 () (_ BitVec 64))
(declare-fun temp780_30 () (_ BitVec 64))
(declare-fun temp780_31 () (_ BitVec 64))
(declare-fun temp780_32 () (_ BitVec 64))
(declare-fun temp780_33 () (_ BitVec 64))
(declare-fun temp780_34 () (_ BitVec 64))
(declare-fun temp780_35 () (_ BitVec 64))
(declare-fun temp780_36 () (_ BitVec 64))
(declare-fun temp780_37 () (_ BitVec 64))
(declare-fun temp780_38 () (_ BitVec 64))
(declare-fun temp780_39 () (_ BitVec 64))
(declare-fun temp780_40 () (_ BitVec 64))
(declare-fun temp780_41 () (_ BitVec 64))
(declare-fun temp780_42 () (_ BitVec 64))
(declare-fun temp780_43 () (_ BitVec 64))
(declare-fun temp780_44 () (_ BitVec 64))
(declare-fun temp780_45 () (_ BitVec 64))
(declare-fun temp780_46 () (_ BitVec 64))
(declare-fun temp780_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp780_48 () (_ BitVec 64))
(declare-fun temp780_49 () (_ BitVec 64))
(declare-fun temp780_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_51 () (_ BitVec 64))
(declare-fun temp780_52 () (_ BitVec 64))
(declare-fun temp780_53 () (_ BitVec 64))
(declare-fun temp780_54 () (_ BitVec 64))
(declare-fun temp780_55 () (_ BitVec 64))
(declare-fun temp780_56 () (_ BitVec 64))
(declare-fun temp780_57 () (_ BitVec 64))
(declare-fun temp780_58 () (_ BitVec 64))
(declare-fun temp780_59 () (_ BitVec 64))
(declare-fun temp780_60 () (_ BitVec 64))
(declare-fun temp780_61 () (_ BitVec 64))
(declare-fun temp780_62 () (_ BitVec 64))
(declare-fun temp780_63 () (_ BitVec 64))
(declare-fun temp780_64 () (_ BitVec 64))
(declare-fun temp780_65 () (_ BitVec 64))
(declare-fun temp780_66 () (_ BitVec 64))
(declare-fun temp780_67 () (_ BitVec 64))
(declare-fun temp780_68 () (_ BitVec 64))
(declare-fun temp780_69 () (_ BitVec 64))
(declare-fun temp780_70 () (_ BitVec 64))
(declare-fun temp780_71 () (_ BitVec 64))
(declare-fun temp780_72 () (_ BitVec 64))
(declare-fun temp780_73 () (_ BitVec 64))
(declare-fun temp780_74 () (_ BitVec 64))
(declare-fun temp780_75 () (_ BitVec 64))
(declare-fun temp780_76 () (_ BitVec 64))
(declare-fun temp780_77 () (_ BitVec 64))
(declare-fun temp780_78 () (_ BitVec 64))
(declare-fun temp780_79 () (_ BitVec 64))
(declare-fun temp780_80 () (_ BitVec 64))
(declare-fun temp780_81 () (_ BitVec 64))
(declare-fun temp780_82 () (_ BitVec 64))
(declare-fun temp780_83 () (_ BitVec 64))
(declare-fun temp780_84 () (_ BitVec 64))
(declare-fun temp780_85 () (_ BitVec 64))
(declare-fun temp780_86 () (_ BitVec 64))
(declare-fun temp780_87 () (_ BitVec 64))
(declare-fun temp780_88 () (_ BitVec 64))
(declare-fun temp780_89 () (_ BitVec 64))
(declare-fun temp780_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp780_91 () (_ BitVec 64))
(declare-fun temp780_92 () (_ BitVec 64))
(declare-fun temp780_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_94 () (_ BitVec 64))
(declare-fun temp780_95 () (_ BitVec 64))
(declare-fun temp780_96 () (_ BitVec 64))
(declare-fun temp780_97 () (_ BitVec 64))
(declare-fun temp780_98 () (_ BitVec 64))
(declare-fun temp780_99 () (_ BitVec 64))
(declare-fun temp780_100 () (_ BitVec 64))
(declare-fun temp780_101 () (_ BitVec 64))
(declare-fun temp780_102 () (_ BitVec 64))
(declare-fun temp780_103 () (_ BitVec 64))
(declare-fun temp780_104 () (_ BitVec 64))
(declare-fun temp780_105 () (_ BitVec 64))
(declare-fun temp780_106 () (_ BitVec 64))
(declare-fun temp780_107 () (_ BitVec 64))
(declare-fun temp780_108 () (_ BitVec 64))
(declare-fun temp780_109 () (_ BitVec 64))
(declare-fun temp780_110 () (_ BitVec 64))
(declare-fun temp780_111 () (_ BitVec 64))
(declare-fun temp780_112 () (_ BitVec 64))
(declare-fun temp780_113 () (_ BitVec 64))
(declare-fun temp780_114 () (_ BitVec 64))
(declare-fun temp780_115 () (_ BitVec 64))
(declare-fun temp780_116 () (_ BitVec 64))
(declare-fun temp780_117 () (_ BitVec 64))
(declare-fun temp780_118 () (_ BitVec 64))
(declare-fun temp780_119 () (_ BitVec 64))
(declare-fun temp780_120 () (_ BitVec 64))
(declare-fun temp780_121 () (_ BitVec 64))
(declare-fun temp780_122 () (_ BitVec 64))
(declare-fun temp780_123 () (_ BitVec 64))
(declare-fun temp780_124 () (_ BitVec 64))
(declare-fun temp780_125 () (_ BitVec 64))
(declare-fun temp780_126 () (_ BitVec 64))
(declare-fun temp780_127 () (_ BitVec 64))
(declare-fun temp780_128 () (_ BitVec 64))
(declare-fun temp780_129 () (_ BitVec 64))
(declare-fun temp780_130 () (_ BitVec 64))
(declare-fun temp780_131 () (_ BitVec 64))
(declare-fun temp780_132 () (_ BitVec 64))
(declare-fun temp780_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp780_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp780_135 () (_ BitVec 64))
(declare-fun temp780_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp780_137 () (_ BitVec 64))
(declare-fun temp780_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_139 () (_ BitVec 64))
(declare-fun temp780_140 () (_ BitVec 64))
(declare-fun temp780_141 () (_ BitVec 64))
(declare-fun temp780_142 () (_ BitVec 64))
(declare-fun temp780_143 () (_ BitVec 64))
(declare-fun temp780_144 () (_ BitVec 64))
(declare-fun temp780_145 () (_ BitVec 64))
(declare-fun temp780_146 () (_ BitVec 64))
(declare-fun temp780_147 () (_ BitVec 64))
(declare-fun temp780_148 () (_ BitVec 64))
(declare-fun temp780_149 () (_ BitVec 64))
(declare-fun temp780_150 () (_ BitVec 64))
(declare-fun temp780_151 () (_ BitVec 64))
(declare-fun temp780_152 () (_ BitVec 64))
(declare-fun temp780_153 () (_ BitVec 64))
(declare-fun temp780_154 () (_ BitVec 64))
(declare-fun temp780_156 () (_ BitVec 64))
(declare-fun temp780_157 () (_ BitVec 64))
(declare-fun temp780_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp780_158 () (_ BitVec 64))
(declare-fun temp780_159 () (_ BitVec 64))
(declare-fun temp780_161 () (_ BitVec 64))
(declare-fun temp780_162 () (_ BitVec 64))
(declare-fun temp780_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp780_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp780_164 () (_ BitVec 64))
(declare-fun temp780_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp780_166 () (_ BitVec 64))
(declare-fun temp780_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp780_168 () (_ BitVec 64))
(declare-fun temp780_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_170 () (_ BitVec 64))
(declare-fun temp780_171 () (_ BitVec 64))
(declare-fun temp780_172 () (_ BitVec 64))
(declare-fun temp780_173 () (_ BitVec 64))
(declare-fun temp780_174 () (_ BitVec 64))
(declare-fun temp780_175 () (_ BitVec 64))
(declare-fun temp780_176 () (_ BitVec 64))
(declare-fun temp780_177 () (_ BitVec 64))
(declare-fun temp780_178 () (_ BitVec 64))
(declare-fun temp780_179 () (_ BitVec 64))
(declare-fun temp780_180 () (_ BitVec 64))
(declare-fun temp780_181 () (_ BitVec 64))
(declare-fun temp780_182 () (_ BitVec 64))
(declare-fun temp780_183 () (_ BitVec 64))
(declare-fun temp780_184 () (_ BitVec 64))
(declare-fun temp780_185 () (_ BitVec 64))
(declare-fun temp780_186 () (_ BitVec 64))
(declare-fun temp780_187 () (_ BitVec 64))
(declare-fun temp780_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp780_189 () (_ BitVec 64))
(declare-fun temp780_191 () (_ BitVec 64))
(declare-fun temp780_192 () (_ BitVec 64))
(declare-fun temp780_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp780_193 () (_ BitVec 64))
(declare-fun temp780_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp780_195 () (_ BitVec 64))
(declare-fun temp780_196 () (_ BitVec 64))
(declare-fun temp780_197 () (_ BitVec 64))
(declare-fun temp780_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_199 () (_ BitVec 64))
(declare-fun temp780_200 () (_ BitVec 64))
(declare-fun temp780_201 () (_ BitVec 64))
(declare-fun temp780_202 () (_ BitVec 64))
(declare-fun temp780_203 () (_ BitVec 64))
(declare-fun temp780_204 () (_ BitVec 64))
(declare-fun temp780_205 () (_ BitVec 64))
(declare-fun temp780_206 () (_ BitVec 64))
(declare-fun temp780_207 () (_ BitVec 64))
(declare-fun temp780_208 () (_ BitVec 64))
(declare-fun temp780_209 () (_ BitVec 64))
(declare-fun temp780_210 () (_ BitVec 64))
(declare-fun temp780_211 () (_ BitVec 64))
(declare-fun temp780_212 () (_ BitVec 64))
(declare-fun temp780_213 () (_ BitVec 64))
(declare-fun temp780_214 () (_ BitVec 64))
(declare-fun temp780_215 () (_ BitVec 64))
(declare-fun temp780_216 () (_ BitVec 64))
(declare-fun temp780_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp780_218 () (_ BitVec 64))
(declare-fun temp780_220 () (_ BitVec 64))
(declare-fun temp780_221 () (_ BitVec 64))
(declare-fun temp780_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp780_222 () (_ BitVec 64))
(declare-fun temp780_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp780_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp780_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp780_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp780_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp780_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp780_229 () (_ BitVec 64))
(declare-fun temp780_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp780_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp780_232 () (_ BitVec 64))
(declare-fun temp780_233 () (_ BitVec 64))
(declare-fun temp780_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp780_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp780_236 () (_ BitVec 64))
(declare-fun temp780_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp780_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp780_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp780_241 () (_ BitVec 64))
(declare-fun temp780_240 () (_ BitVec 64))
(declare-fun temp780_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp780_243 () (_ BitVec 64))
(declare-fun temp780_244 () (_ BitVec 64))
(declare-fun temp780_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp780_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp780_247 () (_ BitVec 64))
(declare-fun temp780_248 () (_ BitVec 64))
(declare-fun temp780_249 () (_ BitVec 64))
(declare-fun var6435604 () (_ BitVec 64))
(declare-fun var6435571 () (_ BitVec 64))
(declare-fun var6304135 () (_ BitVec 64))
(declare-fun var6304131 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp780_250 () (_ BitVec 64))
(assert (= temp780_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp780_1)))
(assert (= temp780_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp780_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_3 #x0000000000000000))
(assert (= var79869 temp780_3))
(assert (= temp780_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp780_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_5 #x0000000000000000))
(assert (= var79914 temp780_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp780_6 #x0000000000000000))
(assert (= temp780_7 temp780_6))
(assert (= temp780_8 (select ARGNAME_padding_NAMEEND_VAL temp780_7)))
(assert (= temp780_9 #x0000000000000001))
(assert (= temp780_10 temp780_9))
(assert (= temp780_11 (select ARGNAME_padding_NAMEEND_VAL temp780_10)))
(assert (= temp780_12 #x0000000000000002))
(assert (= temp780_13 temp780_12))
(assert (= temp780_14 (select ARGNAME_padding_NAMEEND_VAL temp780_13)))
(assert (= temp780_15 #x0000000000000003))
(assert (= temp780_16 temp780_15))
(assert (= temp780_17 (select ARGNAME_padding_NAMEEND_VAL temp780_16)))
(assert (= temp780_18 #x0000000000000004))
(assert (= temp780_19 temp780_18))
(assert (= temp780_20 (select ARGNAME_padding_NAMEEND_VAL temp780_19)))
(assert (= temp780_21 #x0000000000000005))
(assert (= temp780_22 temp780_21))
(assert (= temp780_23 (select ARGNAME_padding_NAMEEND_VAL temp780_22)))
(assert (= temp780_24 #x0000000000000000))
(assert (= temp780_25 #x0000000000000000))
(assert (= temp780_26 temp780_25))
(assert (= temp780_27 (select ARGNAME_padding_NAMEEND_VAL temp780_26)))
(assert (= temp780_28 #x0000000000000000))
(assert (= temp780_29 #x0000000000000001))
(assert (= temp780_30 temp780_29))
(assert (= temp780_31 (select ARGNAME_padding_NAMEEND_VAL temp780_30)))
(assert (= temp780_32 #x0000000000000000))
(assert (= temp780_33 #x0000000000000002))
(assert (= temp780_34 temp780_33))
(assert (= temp780_35 (select ARGNAME_padding_NAMEEND_VAL temp780_34)))
(assert (= temp780_36 #x0000000000000000))
(assert (= temp780_37 #x0000000000000003))
(assert (= temp780_38 temp780_37))
(assert (= temp780_39 (select ARGNAME_padding_NAMEEND_VAL temp780_38)))
(assert (= temp780_40 #x0000000000000000))
(assert (= temp780_41 #x0000000000000004))
(assert (= temp780_42 temp780_41))
(assert (= temp780_43 (select ARGNAME_padding_NAMEEND_VAL temp780_42)))
(assert (= temp780_44 #x0000000000000000))
(assert (= temp780_45 #x0000000000000005))
(assert (= temp780_46 temp780_45))
(assert (= temp780_47 (select ARGNAME_padding_NAMEEND_VAL temp780_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp780_27 temp780_24)
             (bvslt temp780_31 temp780_28)
             (bvslt temp780_35 temp780_32)
             (bvslt temp780_39 temp780_36)
             (bvslt temp780_43 temp780_40)
             (bvslt temp780_47 temp780_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_48 #x0000000000000000))
(assert (= var1322786 temp780_48))
(assert (= temp780_49 #x0000000000000000))
(assert (= temp780_50 temp780_49))
(assert (= temp780_51 (select ARGNAME_output_padding_NAMEEND_VAL temp780_50)))
(assert (= temp780_52 #x0000000000000001))
(assert (= temp780_53 temp780_52))
(assert (= temp780_54 (select ARGNAME_output_padding_NAMEEND_VAL temp780_53)))
(assert (= temp780_55 #x0000000000000002))
(assert (= temp780_56 temp780_55))
(assert (= temp780_57 (select ARGNAME_output_padding_NAMEEND_VAL temp780_56)))
(assert (= temp780_58 #x0000000000000003))
(assert (= temp780_59 temp780_58))
(assert (= temp780_60 (select ARGNAME_output_padding_NAMEEND_VAL temp780_59)))
(assert (= temp780_61 #x0000000000000004))
(assert (= temp780_62 temp780_61))
(assert (= temp780_63 (select ARGNAME_output_padding_NAMEEND_VAL temp780_62)))
(assert (= temp780_64 #x0000000000000005))
(assert (= temp780_65 temp780_64))
(assert (= temp780_66 (select ARGNAME_output_padding_NAMEEND_VAL temp780_65)))
(assert (= temp780_67 #x0000000000000000))
(assert (= temp780_68 #x0000000000000000))
(assert (= temp780_69 temp780_68))
(assert (= temp780_70 (select ARGNAME_output_padding_NAMEEND_VAL temp780_69)))
(assert (= temp780_71 #x0000000000000000))
(assert (= temp780_72 #x0000000000000001))
(assert (= temp780_73 temp780_72))
(assert (= temp780_74 (select ARGNAME_output_padding_NAMEEND_VAL temp780_73)))
(assert (= temp780_75 #x0000000000000000))
(assert (= temp780_76 #x0000000000000002))
(assert (= temp780_77 temp780_76))
(assert (= temp780_78 (select ARGNAME_output_padding_NAMEEND_VAL temp780_77)))
(assert (= temp780_79 #x0000000000000000))
(assert (= temp780_80 #x0000000000000003))
(assert (= temp780_81 temp780_80))
(assert (= temp780_82 (select ARGNAME_output_padding_NAMEEND_VAL temp780_81)))
(assert (= temp780_83 #x0000000000000000))
(assert (= temp780_84 #x0000000000000004))
(assert (= temp780_85 temp780_84))
(assert (= temp780_86 (select ARGNAME_output_padding_NAMEEND_VAL temp780_85)))
(assert (= temp780_87 #x0000000000000000))
(assert (= temp780_88 #x0000000000000005))
(assert (= temp780_89 temp780_88))
(assert (= temp780_90 (select ARGNAME_output_padding_NAMEEND_VAL temp780_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp780_70 temp780_67)
             (bvslt temp780_74 temp780_71)
             (bvslt temp780_78 temp780_75)
             (bvslt temp780_82 temp780_79)
             (bvslt temp780_86 temp780_83)
             (bvslt temp780_90 temp780_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_91 #x0000000000000000))
(assert (= var1322797 temp780_91))
(assert (= temp780_92 #x0000000000000000))
(assert (= temp780_93 temp780_92))
(assert (= temp780_94 (select ARGNAME_stride_NAMEEND_VAL temp780_93)))
(assert (= temp780_95 #x0000000000000001))
(assert (= temp780_96 temp780_95))
(assert (= temp780_97 (select ARGNAME_stride_NAMEEND_VAL temp780_96)))
(assert (= temp780_98 #x0000000000000002))
(assert (= temp780_99 temp780_98))
(assert (= temp780_100 (select ARGNAME_stride_NAMEEND_VAL temp780_99)))
(assert (= temp780_101 #x0000000000000003))
(assert (= temp780_102 temp780_101))
(assert (= temp780_103 (select ARGNAME_stride_NAMEEND_VAL temp780_102)))
(assert (= temp780_104 #x0000000000000004))
(assert (= temp780_105 temp780_104))
(assert (= temp780_106 (select ARGNAME_stride_NAMEEND_VAL temp780_105)))
(assert (= temp780_107 #x0000000000000005))
(assert (= temp780_108 temp780_107))
(assert (= temp780_109 (select ARGNAME_stride_NAMEEND_VAL temp780_108)))
(assert (= temp780_110 #x0000000000000000))
(assert (= temp780_111 #x0000000000000000))
(assert (= temp780_112 temp780_111))
(assert (= temp780_113 (select ARGNAME_stride_NAMEEND_VAL temp780_112)))
(assert (= temp780_114 #x0000000000000000))
(assert (= temp780_115 #x0000000000000001))
(assert (= temp780_116 temp780_115))
(assert (= temp780_117 (select ARGNAME_stride_NAMEEND_VAL temp780_116)))
(assert (= temp780_118 #x0000000000000000))
(assert (= temp780_119 #x0000000000000002))
(assert (= temp780_120 temp780_119))
(assert (= temp780_121 (select ARGNAME_stride_NAMEEND_VAL temp780_120)))
(assert (= temp780_122 #x0000000000000000))
(assert (= temp780_123 #x0000000000000003))
(assert (= temp780_124 temp780_123))
(assert (= temp780_125 (select ARGNAME_stride_NAMEEND_VAL temp780_124)))
(assert (= temp780_126 #x0000000000000000))
(assert (= temp780_127 #x0000000000000004))
(assert (= temp780_128 temp780_127))
(assert (= temp780_129 (select ARGNAME_stride_NAMEEND_VAL temp780_128)))
(assert (= temp780_130 #x0000000000000000))
(assert (= temp780_131 #x0000000000000005))
(assert (= temp780_132 temp780_131))
(assert (= temp780_133 (select ARGNAME_stride_NAMEEND_VAL temp780_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp780_113 temp780_110)
             (bvsle temp780_117 temp780_114)
             (bvsle temp780_121 temp780_118)
             (bvsle temp780_125 temp780_122)
             (bvsle temp780_129 temp780_126)
             (bvsle temp780_133 temp780_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_134 #x0000000000000000))
(assert (= var1322807 temp780_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_135 #x0000000000000001))
(assert (= var1322819 temp780_135))
(assert (= temp780_136 #x0000000000000000))
(assert (= var1310898 temp780_136))
(assert (= temp780_137 #x0000000000000000))
(assert (= temp780_138 temp780_137))
(assert (= temp780_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_138)))
(assert (= temp780_140 #x0000000000000001))
(assert (= temp780_141 temp780_140))
(assert (= temp780_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_141)))
(assert (= temp780_143 #x0000000000000002))
(assert (= temp780_144 temp780_143))
(assert (= temp780_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_144)))
(assert (= temp780_146 #x0000000000000003))
(assert (= temp780_147 temp780_146))
(assert (= temp780_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_147)))
(assert (= temp780_149 #x0000000000000004))
(assert (= temp780_150 temp780_149))
(assert (= temp780_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_150)))
(assert (= temp780_152 #x0000000000000005))
(assert (= temp780_153 temp780_152))
(assert (= temp780_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_153)))
(assert (= temp780_156 var1310898))
(assert (= temp780_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_156)))
(assert (= temp780_155 temp780_157))
(assert (= var1322852
   (ite (bvslt temp780_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_158 #x0000000000000000))
(assert (= var1322852 temp780_158))
(assert (= temp780_159 #x0000000000000000))
(assert (= var1310898 temp780_159))
(assert (= temp780_161 var1310898))
(assert (= temp780_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_161)))
(assert (= temp780_160 temp780_162))
(assert (= var1322874 (bvsmod temp780_160 ARGNAME_groups_NAMEEND)))
(assert (= temp780_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp780_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_164 #x0000000000000001))
(assert (= var1322875 temp780_164))
(assert (= temp780_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp780_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_166 #x0000000000000001))
(assert (= var1322895 temp780_166))
(assert (= temp780_167 #x0000000000000001))
(assert (= var1311786 temp780_167))
(assert (= temp780_168 #x0000000000000000))
(assert (= temp780_169 temp780_168))
(assert (= temp780_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_169)))
(assert (= temp780_171 #x0000000000000001))
(assert (= temp780_172 temp780_171))
(assert (= temp780_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_172)))
(assert (= temp780_174 #x0000000000000002))
(assert (= temp780_175 temp780_174))
(assert (= temp780_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_175)))
(assert (= temp780_177 #x0000000000000003))
(assert (= temp780_178 temp780_177))
(assert (= temp780_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_178)))
(assert (= temp780_180 #x0000000000000004))
(assert (= temp780_181 temp780_180))
(assert (= temp780_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_181)))
(assert (= temp780_183 #x0000000000000005))
(assert (= temp780_184 temp780_183))
(assert (= temp780_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_184)))
(assert (= temp780_186 #x0000000000000000))
(assert (= temp780_187
   (ite (bvslt var1311786 temp780_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp780_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_187)))
(assert (= var1322903 temp780_188))
(assert (bvslt (ite (bvslt var1311786 temp780_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp780_189 #x0000000000000001))
(assert (= var1311786 temp780_189))
(assert (= temp780_191 var1311786))
(assert (= temp780_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_191)))
(assert (= temp780_190 temp780_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp780_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_193 #x0000000000000001))
(assert (= var1322908 temp780_193))
(assert (= temp780_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp780_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_195 #x0000000000000001))
(assert (= var1322975 temp780_195))
(assert (= temp780_196 #x0000000000000000))
(assert (= var1310898 temp780_196))
(assert (= temp780_197 #x0000000000000000))
(assert (= temp780_198 temp780_197))
(assert (= temp780_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp780_198)))
(assert (= temp780_200 #x0000000000000001))
(assert (= temp780_201 temp780_200))
(assert (= temp780_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp780_201)))
(assert (= temp780_203 #x0000000000000002))
(assert (= temp780_204 temp780_203))
(assert (= temp780_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp780_204)))
(assert (= temp780_206 #x0000000000000003))
(assert (= temp780_207 temp780_206))
(assert (= temp780_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp780_207)))
(assert (= temp780_209 #x0000000000000004))
(assert (= temp780_210 temp780_209))
(assert (= temp780_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp780_210)))
(assert (= temp780_212 #x0000000000000005))
(assert (= temp780_213 temp780_212))
(assert (= temp780_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp780_213)))
(assert (= temp780_215 #x0000000000000000))
(assert (= temp780_216
   (ite (bvslt var1310898 temp780_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp780_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp780_216)))
(assert (= var1322977 temp780_217))
(assert (bvslt (ite (bvslt var1310898 temp780_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp780_218 #x0000000000000000))
(assert (= var1310898 temp780_218))
(assert (= temp780_220 var1310898))
(assert (= temp780_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_220)))
(assert (= temp780_219 temp780_221))
(assert (= var1322980
   (ite (= var1322977 temp780_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_222 #x0000000000000001))
(assert (= var1322980 temp780_222))
(assert (= temp780_223 #x0000000000000002))
(assert (= var1848169 temp780_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp780_225 #x0000000000000001))
(assert (= var1323065 temp780_225))
(assert (= temp780_226 #x0000000000000001))
(assert (= var3486735 temp780_226))
(assert (= temp780_227 #x0000000000000001))
(assert (= var3814415 temp780_227))
(assert (= temp780_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp780_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_229 #x0000000000000001))
(assert (= var79986 temp780_229))
(assert (= temp780_230 #x0000000000000001))
(assert (= var80116 temp780_230))
(assert (= var4796905 var80116))
(assert (= temp780_231 #x0000000000000000))
(assert (= var4784306 temp780_231))
(assert (= temp780_232 #x0000000000000000))
(assert (= temp780_233
   (ite (bvslt var4784306 temp780_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp780_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_233)))
(assert (= var4796924 temp780_234))
(assert (bvslt (ite (bvslt var4784306 temp780_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp780_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp780_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_236 #x0000000000000001))
(assert (= var4796925 temp780_236))
(assert (= temp780_237 #x0000000000000000))
(assert (= var4996927 temp780_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp780_238 #x0000000000000002))
(assert (= var5125763 temp780_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_239 #x0000000000000000))
(assert (= var5191324 temp780_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp780_241 #xffffffffffffffff))
(assert (= temp780_240 temp780_241))
(assert (= temp780_242 #x0000000000000001))
(assert (= var66602 temp780_242))
(assert (= temp780_243 #x0000000000000000))
(assert (= temp780_244
   (ite (bvslt var66602 temp780_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp780_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_244)))
(assert (= var80523 temp780_245))
(assert (bvslt (ite (bvslt var66602 temp780_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp780_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp780_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_247 #x0000000000000000))
(assert (= var80524 temp780_247))
(assert (= temp780_248 #x0000000000000001))
(assert (= var79986 temp780_248))
(assert (= temp780_249 #x0000000000000000))
(assert (= var6435604 temp780_249))
(assert (= var6435571 var6435604))
(assert (= var6304135 var6435571))
(assert (= var6304131 var6304135))
(assert (= var81597 var6304131))
(assert (= temp780_250 #x0000000000000000))
(assert (= var81597 temp780_250))
(model-add temp780_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp780_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp780_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






