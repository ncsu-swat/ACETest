(declare-fun temp288_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp288_2 () (_ BitVec 64))
(declare-fun temp288_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp288_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp288_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp288_6 () (_ BitVec 64))
(declare-fun temp288_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_8 () (_ BitVec 64))
(declare-fun temp288_9 () (_ BitVec 64))
(declare-fun temp288_10 () (_ BitVec 64))
(declare-fun temp288_11 () (_ BitVec 64))
(declare-fun temp288_12 () (_ BitVec 64))
(declare-fun temp288_13 () (_ BitVec 64))
(declare-fun temp288_14 () (_ BitVec 64))
(declare-fun temp288_15 () (_ BitVec 64))
(declare-fun temp288_16 () (_ BitVec 64))
(declare-fun temp288_17 () (_ BitVec 64))
(declare-fun temp288_18 () (_ BitVec 64))
(declare-fun temp288_19 () (_ BitVec 64))
(declare-fun temp288_20 () (_ BitVec 64))
(declare-fun temp288_21 () (_ BitVec 64))
(declare-fun temp288_22 () (_ BitVec 64))
(declare-fun temp288_23 () (_ BitVec 64))
(declare-fun temp288_24 () (_ BitVec 64))
(declare-fun temp288_25 () (_ BitVec 64))
(declare-fun temp288_26 () (_ BitVec 64))
(declare-fun temp288_27 () (_ BitVec 64))
(declare-fun temp288_28 () (_ BitVec 64))
(declare-fun temp288_29 () (_ BitVec 64))
(declare-fun temp288_30 () (_ BitVec 64))
(declare-fun temp288_31 () (_ BitVec 64))
(declare-fun temp288_32 () (_ BitVec 64))
(declare-fun temp288_33 () (_ BitVec 64))
(declare-fun temp288_34 () (_ BitVec 64))
(declare-fun temp288_35 () (_ BitVec 64))
(declare-fun temp288_36 () (_ BitVec 64))
(declare-fun temp288_37 () (_ BitVec 64))
(declare-fun temp288_38 () (_ BitVec 64))
(declare-fun temp288_39 () (_ BitVec 64))
(declare-fun temp288_40 () (_ BitVec 64))
(declare-fun temp288_41 () (_ BitVec 64))
(declare-fun temp288_42 () (_ BitVec 64))
(declare-fun temp288_43 () (_ BitVec 64))
(declare-fun temp288_44 () (_ BitVec 64))
(declare-fun temp288_45 () (_ BitVec 64))
(declare-fun temp288_46 () (_ BitVec 64))
(declare-fun temp288_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp288_48 () (_ BitVec 64))
(declare-fun temp288_49 () (_ BitVec 64))
(declare-fun temp288_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_51 () (_ BitVec 64))
(declare-fun temp288_52 () (_ BitVec 64))
(declare-fun temp288_53 () (_ BitVec 64))
(declare-fun temp288_54 () (_ BitVec 64))
(declare-fun temp288_55 () (_ BitVec 64))
(declare-fun temp288_56 () (_ BitVec 64))
(declare-fun temp288_57 () (_ BitVec 64))
(declare-fun temp288_58 () (_ BitVec 64))
(declare-fun temp288_59 () (_ BitVec 64))
(declare-fun temp288_60 () (_ BitVec 64))
(declare-fun temp288_61 () (_ BitVec 64))
(declare-fun temp288_62 () (_ BitVec 64))
(declare-fun temp288_63 () (_ BitVec 64))
(declare-fun temp288_64 () (_ BitVec 64))
(declare-fun temp288_65 () (_ BitVec 64))
(declare-fun temp288_66 () (_ BitVec 64))
(declare-fun temp288_67 () (_ BitVec 64))
(declare-fun temp288_68 () (_ BitVec 64))
(declare-fun temp288_69 () (_ BitVec 64))
(declare-fun temp288_70 () (_ BitVec 64))
(declare-fun temp288_71 () (_ BitVec 64))
(declare-fun temp288_72 () (_ BitVec 64))
(declare-fun temp288_73 () (_ BitVec 64))
(declare-fun temp288_74 () (_ BitVec 64))
(declare-fun temp288_75 () (_ BitVec 64))
(declare-fun temp288_76 () (_ BitVec 64))
(declare-fun temp288_77 () (_ BitVec 64))
(declare-fun temp288_78 () (_ BitVec 64))
(declare-fun temp288_79 () (_ BitVec 64))
(declare-fun temp288_80 () (_ BitVec 64))
(declare-fun temp288_81 () (_ BitVec 64))
(declare-fun temp288_82 () (_ BitVec 64))
(declare-fun temp288_83 () (_ BitVec 64))
(declare-fun temp288_84 () (_ BitVec 64))
(declare-fun temp288_85 () (_ BitVec 64))
(declare-fun temp288_86 () (_ BitVec 64))
(declare-fun temp288_87 () (_ BitVec 64))
(declare-fun temp288_88 () (_ BitVec 64))
(declare-fun temp288_89 () (_ BitVec 64))
(declare-fun temp288_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp288_91 () (_ BitVec 64))
(declare-fun temp288_92 () (_ BitVec 64))
(declare-fun temp288_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_94 () (_ BitVec 64))
(declare-fun temp288_95 () (_ BitVec 64))
(declare-fun temp288_96 () (_ BitVec 64))
(declare-fun temp288_97 () (_ BitVec 64))
(declare-fun temp288_98 () (_ BitVec 64))
(declare-fun temp288_99 () (_ BitVec 64))
(declare-fun temp288_100 () (_ BitVec 64))
(declare-fun temp288_101 () (_ BitVec 64))
(declare-fun temp288_102 () (_ BitVec 64))
(declare-fun temp288_103 () (_ BitVec 64))
(declare-fun temp288_104 () (_ BitVec 64))
(declare-fun temp288_105 () (_ BitVec 64))
(declare-fun temp288_106 () (_ BitVec 64))
(declare-fun temp288_107 () (_ BitVec 64))
(declare-fun temp288_108 () (_ BitVec 64))
(declare-fun temp288_109 () (_ BitVec 64))
(declare-fun temp288_110 () (_ BitVec 64))
(declare-fun temp288_111 () (_ BitVec 64))
(declare-fun temp288_112 () (_ BitVec 64))
(declare-fun temp288_113 () (_ BitVec 64))
(declare-fun temp288_114 () (_ BitVec 64))
(declare-fun temp288_115 () (_ BitVec 64))
(declare-fun temp288_116 () (_ BitVec 64))
(declare-fun temp288_117 () (_ BitVec 64))
(declare-fun temp288_118 () (_ BitVec 64))
(declare-fun temp288_119 () (_ BitVec 64))
(declare-fun temp288_120 () (_ BitVec 64))
(declare-fun temp288_121 () (_ BitVec 64))
(declare-fun temp288_122 () (_ BitVec 64))
(declare-fun temp288_123 () (_ BitVec 64))
(declare-fun temp288_124 () (_ BitVec 64))
(declare-fun temp288_125 () (_ BitVec 64))
(declare-fun temp288_126 () (_ BitVec 64))
(declare-fun temp288_127 () (_ BitVec 64))
(declare-fun temp288_128 () (_ BitVec 64))
(declare-fun temp288_129 () (_ BitVec 64))
(declare-fun temp288_130 () (_ BitVec 64))
(declare-fun temp288_131 () (_ BitVec 64))
(declare-fun temp288_132 () (_ BitVec 64))
(declare-fun temp288_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp288_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp288_135 () (_ BitVec 64))
(declare-fun temp288_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp288_137 () (_ BitVec 64))
(declare-fun temp288_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_139 () (_ BitVec 64))
(declare-fun temp288_140 () (_ BitVec 64))
(declare-fun temp288_141 () (_ BitVec 64))
(declare-fun temp288_142 () (_ BitVec 64))
(declare-fun temp288_143 () (_ BitVec 64))
(declare-fun temp288_144 () (_ BitVec 64))
(declare-fun temp288_145 () (_ BitVec 64))
(declare-fun temp288_146 () (_ BitVec 64))
(declare-fun temp288_147 () (_ BitVec 64))
(declare-fun temp288_148 () (_ BitVec 64))
(declare-fun temp288_149 () (_ BitVec 64))
(declare-fun temp288_150 () (_ BitVec 64))
(declare-fun temp288_151 () (_ BitVec 64))
(declare-fun temp288_152 () (_ BitVec 64))
(declare-fun temp288_153 () (_ BitVec 64))
(declare-fun temp288_154 () (_ BitVec 64))
(declare-fun temp288_156 () (_ BitVec 64))
(declare-fun temp288_157 () (_ BitVec 64))
(declare-fun temp288_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp288_158 () (_ BitVec 64))
(declare-fun temp288_159 () (_ BitVec 64))
(declare-fun temp288_161 () (_ BitVec 64))
(declare-fun temp288_162 () (_ BitVec 64))
(declare-fun temp288_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp288_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp288_164 () (_ BitVec 64))
(declare-fun temp288_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp288_166 () (_ BitVec 64))
(declare-fun temp288_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp288_168 () (_ BitVec 64))
(declare-fun temp288_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_170 () (_ BitVec 64))
(declare-fun temp288_171 () (_ BitVec 64))
(declare-fun temp288_172 () (_ BitVec 64))
(declare-fun temp288_173 () (_ BitVec 64))
(declare-fun temp288_174 () (_ BitVec 64))
(declare-fun temp288_175 () (_ BitVec 64))
(declare-fun temp288_176 () (_ BitVec 64))
(declare-fun temp288_177 () (_ BitVec 64))
(declare-fun temp288_178 () (_ BitVec 64))
(declare-fun temp288_179 () (_ BitVec 64))
(declare-fun temp288_180 () (_ BitVec 64))
(declare-fun temp288_181 () (_ BitVec 64))
(declare-fun temp288_182 () (_ BitVec 64))
(declare-fun temp288_183 () (_ BitVec 64))
(declare-fun temp288_184 () (_ BitVec 64))
(declare-fun temp288_185 () (_ BitVec 64))
(declare-fun temp288_186 () (_ BitVec 64))
(declare-fun temp288_187 () (_ BitVec 64))
(declare-fun temp288_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp288_189 () (_ BitVec 64))
(declare-fun temp288_191 () (_ BitVec 64))
(declare-fun temp288_192 () (_ BitVec 64))
(declare-fun temp288_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp288_193 () (_ BitVec 64))
(declare-fun temp288_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp288_195 () (_ BitVec 64))
(declare-fun temp288_196 () (_ BitVec 64))
(declare-fun temp288_197 () (_ BitVec 64))
(declare-fun temp288_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_199 () (_ BitVec 64))
(declare-fun temp288_200 () (_ BitVec 64))
(declare-fun temp288_201 () (_ BitVec 64))
(declare-fun temp288_202 () (_ BitVec 64))
(declare-fun temp288_203 () (_ BitVec 64))
(declare-fun temp288_204 () (_ BitVec 64))
(declare-fun temp288_205 () (_ BitVec 64))
(declare-fun temp288_206 () (_ BitVec 64))
(declare-fun temp288_207 () (_ BitVec 64))
(declare-fun temp288_208 () (_ BitVec 64))
(declare-fun temp288_209 () (_ BitVec 64))
(declare-fun temp288_210 () (_ BitVec 64))
(declare-fun temp288_211 () (_ BitVec 64))
(declare-fun temp288_212 () (_ BitVec 64))
(declare-fun temp288_213 () (_ BitVec 64))
(declare-fun temp288_214 () (_ BitVec 64))
(declare-fun temp288_215 () (_ BitVec 64))
(declare-fun temp288_216 () (_ BitVec 64))
(declare-fun temp288_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp288_218 () (_ BitVec 64))
(declare-fun temp288_220 () (_ BitVec 64))
(declare-fun temp288_221 () (_ BitVec 64))
(declare-fun temp288_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp288_222 () (_ BitVec 64))
(declare-fun temp288_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp288_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp288_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp288_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp288_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp288_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp288_229 () (_ BitVec 64))
(declare-fun temp288_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp288_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp288_232 () (_ BitVec 64))
(declare-fun temp288_233 () (_ BitVec 64))
(declare-fun temp288_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp288_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp288_236 () (_ BitVec 64))
(declare-fun temp288_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp288_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp288_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp288_240 () (_ BitVec 64))
(declare-fun temp288_241 () (_ BitVec 64))
(declare-fun var7418644 () (_ BitVec 64))
(declare-fun var7418611 () (_ BitVec 64))
(declare-fun var7287175 () (_ BitVec 64))
(declare-fun var7287171 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp288_242 () (_ BitVec 64))
(assert (= temp288_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp288_1)))
(assert (= temp288_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp288_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_3 #x0000000000000000))
(assert (= var79869 temp288_3))
(assert (= temp288_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp288_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_5 #x0000000000000000))
(assert (= var79914 temp288_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp288_6 #x0000000000000000))
(assert (= temp288_7 temp288_6))
(assert (= temp288_8 (select ARGNAME_padding_NAMEEND_VAL temp288_7)))
(assert (= temp288_9 #x0000000000000001))
(assert (= temp288_10 temp288_9))
(assert (= temp288_11 (select ARGNAME_padding_NAMEEND_VAL temp288_10)))
(assert (= temp288_12 #x0000000000000002))
(assert (= temp288_13 temp288_12))
(assert (= temp288_14 (select ARGNAME_padding_NAMEEND_VAL temp288_13)))
(assert (= temp288_15 #x0000000000000003))
(assert (= temp288_16 temp288_15))
(assert (= temp288_17 (select ARGNAME_padding_NAMEEND_VAL temp288_16)))
(assert (= temp288_18 #x0000000000000004))
(assert (= temp288_19 temp288_18))
(assert (= temp288_20 (select ARGNAME_padding_NAMEEND_VAL temp288_19)))
(assert (= temp288_21 #x0000000000000005))
(assert (= temp288_22 temp288_21))
(assert (= temp288_23 (select ARGNAME_padding_NAMEEND_VAL temp288_22)))
(assert (= temp288_24 #x0000000000000000))
(assert (= temp288_25 #x0000000000000000))
(assert (= temp288_26 temp288_25))
(assert (= temp288_27 (select ARGNAME_padding_NAMEEND_VAL temp288_26)))
(assert (= temp288_28 #x0000000000000000))
(assert (= temp288_29 #x0000000000000001))
(assert (= temp288_30 temp288_29))
(assert (= temp288_31 (select ARGNAME_padding_NAMEEND_VAL temp288_30)))
(assert (= temp288_32 #x0000000000000000))
(assert (= temp288_33 #x0000000000000002))
(assert (= temp288_34 temp288_33))
(assert (= temp288_35 (select ARGNAME_padding_NAMEEND_VAL temp288_34)))
(assert (= temp288_36 #x0000000000000000))
(assert (= temp288_37 #x0000000000000003))
(assert (= temp288_38 temp288_37))
(assert (= temp288_39 (select ARGNAME_padding_NAMEEND_VAL temp288_38)))
(assert (= temp288_40 #x0000000000000000))
(assert (= temp288_41 #x0000000000000004))
(assert (= temp288_42 temp288_41))
(assert (= temp288_43 (select ARGNAME_padding_NAMEEND_VAL temp288_42)))
(assert (= temp288_44 #x0000000000000000))
(assert (= temp288_45 #x0000000000000005))
(assert (= temp288_46 temp288_45))
(assert (= temp288_47 (select ARGNAME_padding_NAMEEND_VAL temp288_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp288_27 temp288_24)
             (bvslt temp288_31 temp288_28)
             (bvslt temp288_35 temp288_32)
             (bvslt temp288_39 temp288_36)
             (bvslt temp288_43 temp288_40)
             (bvslt temp288_47 temp288_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_48 #x0000000000000000))
(assert (= var1322786 temp288_48))
(assert (= temp288_49 #x0000000000000000))
(assert (= temp288_50 temp288_49))
(assert (= temp288_51 (select ARGNAME_output_padding_NAMEEND_VAL temp288_50)))
(assert (= temp288_52 #x0000000000000001))
(assert (= temp288_53 temp288_52))
(assert (= temp288_54 (select ARGNAME_output_padding_NAMEEND_VAL temp288_53)))
(assert (= temp288_55 #x0000000000000002))
(assert (= temp288_56 temp288_55))
(assert (= temp288_57 (select ARGNAME_output_padding_NAMEEND_VAL temp288_56)))
(assert (= temp288_58 #x0000000000000003))
(assert (= temp288_59 temp288_58))
(assert (= temp288_60 (select ARGNAME_output_padding_NAMEEND_VAL temp288_59)))
(assert (= temp288_61 #x0000000000000004))
(assert (= temp288_62 temp288_61))
(assert (= temp288_63 (select ARGNAME_output_padding_NAMEEND_VAL temp288_62)))
(assert (= temp288_64 #x0000000000000005))
(assert (= temp288_65 temp288_64))
(assert (= temp288_66 (select ARGNAME_output_padding_NAMEEND_VAL temp288_65)))
(assert (= temp288_67 #x0000000000000000))
(assert (= temp288_68 #x0000000000000000))
(assert (= temp288_69 temp288_68))
(assert (= temp288_70 (select ARGNAME_output_padding_NAMEEND_VAL temp288_69)))
(assert (= temp288_71 #x0000000000000000))
(assert (= temp288_72 #x0000000000000001))
(assert (= temp288_73 temp288_72))
(assert (= temp288_74 (select ARGNAME_output_padding_NAMEEND_VAL temp288_73)))
(assert (= temp288_75 #x0000000000000000))
(assert (= temp288_76 #x0000000000000002))
(assert (= temp288_77 temp288_76))
(assert (= temp288_78 (select ARGNAME_output_padding_NAMEEND_VAL temp288_77)))
(assert (= temp288_79 #x0000000000000000))
(assert (= temp288_80 #x0000000000000003))
(assert (= temp288_81 temp288_80))
(assert (= temp288_82 (select ARGNAME_output_padding_NAMEEND_VAL temp288_81)))
(assert (= temp288_83 #x0000000000000000))
(assert (= temp288_84 #x0000000000000004))
(assert (= temp288_85 temp288_84))
(assert (= temp288_86 (select ARGNAME_output_padding_NAMEEND_VAL temp288_85)))
(assert (= temp288_87 #x0000000000000000))
(assert (= temp288_88 #x0000000000000005))
(assert (= temp288_89 temp288_88))
(assert (= temp288_90 (select ARGNAME_output_padding_NAMEEND_VAL temp288_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp288_70 temp288_67)
             (bvslt temp288_74 temp288_71)
             (bvslt temp288_78 temp288_75)
             (bvslt temp288_82 temp288_79)
             (bvslt temp288_86 temp288_83)
             (bvslt temp288_90 temp288_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_91 #x0000000000000000))
(assert (= var1322797 temp288_91))
(assert (= temp288_92 #x0000000000000000))
(assert (= temp288_93 temp288_92))
(assert (= temp288_94 (select ARGNAME_stride_NAMEEND_VAL temp288_93)))
(assert (= temp288_95 #x0000000000000001))
(assert (= temp288_96 temp288_95))
(assert (= temp288_97 (select ARGNAME_stride_NAMEEND_VAL temp288_96)))
(assert (= temp288_98 #x0000000000000002))
(assert (= temp288_99 temp288_98))
(assert (= temp288_100 (select ARGNAME_stride_NAMEEND_VAL temp288_99)))
(assert (= temp288_101 #x0000000000000003))
(assert (= temp288_102 temp288_101))
(assert (= temp288_103 (select ARGNAME_stride_NAMEEND_VAL temp288_102)))
(assert (= temp288_104 #x0000000000000004))
(assert (= temp288_105 temp288_104))
(assert (= temp288_106 (select ARGNAME_stride_NAMEEND_VAL temp288_105)))
(assert (= temp288_107 #x0000000000000005))
(assert (= temp288_108 temp288_107))
(assert (= temp288_109 (select ARGNAME_stride_NAMEEND_VAL temp288_108)))
(assert (= temp288_110 #x0000000000000000))
(assert (= temp288_111 #x0000000000000000))
(assert (= temp288_112 temp288_111))
(assert (= temp288_113 (select ARGNAME_stride_NAMEEND_VAL temp288_112)))
(assert (= temp288_114 #x0000000000000000))
(assert (= temp288_115 #x0000000000000001))
(assert (= temp288_116 temp288_115))
(assert (= temp288_117 (select ARGNAME_stride_NAMEEND_VAL temp288_116)))
(assert (= temp288_118 #x0000000000000000))
(assert (= temp288_119 #x0000000000000002))
(assert (= temp288_120 temp288_119))
(assert (= temp288_121 (select ARGNAME_stride_NAMEEND_VAL temp288_120)))
(assert (= temp288_122 #x0000000000000000))
(assert (= temp288_123 #x0000000000000003))
(assert (= temp288_124 temp288_123))
(assert (= temp288_125 (select ARGNAME_stride_NAMEEND_VAL temp288_124)))
(assert (= temp288_126 #x0000000000000000))
(assert (= temp288_127 #x0000000000000004))
(assert (= temp288_128 temp288_127))
(assert (= temp288_129 (select ARGNAME_stride_NAMEEND_VAL temp288_128)))
(assert (= temp288_130 #x0000000000000000))
(assert (= temp288_131 #x0000000000000005))
(assert (= temp288_132 temp288_131))
(assert (= temp288_133 (select ARGNAME_stride_NAMEEND_VAL temp288_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp288_113 temp288_110)
             (bvsle temp288_117 temp288_114)
             (bvsle temp288_121 temp288_118)
             (bvsle temp288_125 temp288_122)
             (bvsle temp288_129 temp288_126)
             (bvsle temp288_133 temp288_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_134 #x0000000000000000))
(assert (= var1322807 temp288_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_135 #x0000000000000001))
(assert (= var1322819 temp288_135))
(assert (= temp288_136 #x0000000000000000))
(assert (= var1310898 temp288_136))
(assert (= temp288_137 #x0000000000000000))
(assert (= temp288_138 temp288_137))
(assert (= temp288_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_138)))
(assert (= temp288_140 #x0000000000000001))
(assert (= temp288_141 temp288_140))
(assert (= temp288_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_141)))
(assert (= temp288_143 #x0000000000000002))
(assert (= temp288_144 temp288_143))
(assert (= temp288_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_144)))
(assert (= temp288_146 #x0000000000000003))
(assert (= temp288_147 temp288_146))
(assert (= temp288_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_147)))
(assert (= temp288_149 #x0000000000000004))
(assert (= temp288_150 temp288_149))
(assert (= temp288_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_150)))
(assert (= temp288_152 #x0000000000000005))
(assert (= temp288_153 temp288_152))
(assert (= temp288_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_153)))
(assert (= temp288_156 var1310898))
(assert (= temp288_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_156)))
(assert (= temp288_155 temp288_157))
(assert (= var1322852
   (ite (bvslt temp288_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_158 #x0000000000000000))
(assert (= var1322852 temp288_158))
(assert (= temp288_159 #x0000000000000000))
(assert (= var1310898 temp288_159))
(assert (= temp288_161 var1310898))
(assert (= temp288_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_161)))
(assert (= temp288_160 temp288_162))
(assert (= var1322874 (bvsmod temp288_160 ARGNAME_groups_NAMEEND)))
(assert (= temp288_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp288_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp288_164 #x0000000000000001))
(assert (= var1322875 temp288_164))
(assert (= temp288_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp288_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_166 #x0000000000000001))
(assert (= var1322895 temp288_166))
(assert (= temp288_167 #x0000000000000001))
(assert (= var1311786 temp288_167))
(assert (= temp288_168 #x0000000000000000))
(assert (= temp288_169 temp288_168))
(assert (= temp288_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_169)))
(assert (= temp288_171 #x0000000000000001))
(assert (= temp288_172 temp288_171))
(assert (= temp288_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_172)))
(assert (= temp288_174 #x0000000000000002))
(assert (= temp288_175 temp288_174))
(assert (= temp288_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_175)))
(assert (= temp288_177 #x0000000000000003))
(assert (= temp288_178 temp288_177))
(assert (= temp288_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_178)))
(assert (= temp288_180 #x0000000000000004))
(assert (= temp288_181 temp288_180))
(assert (= temp288_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_181)))
(assert (= temp288_183 #x0000000000000005))
(assert (= temp288_184 temp288_183))
(assert (= temp288_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_184)))
(assert (= temp288_186 #x0000000000000000))
(assert (= temp288_187
   (ite (bvslt var1311786 temp288_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp288_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_187)))
(assert (= var1322903 temp288_188))
(assert (bvslt (ite (bvslt var1311786 temp288_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp288_189 #x0000000000000001))
(assert (= var1311786 temp288_189))
(assert (= temp288_191 var1311786))
(assert (= temp288_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_191)))
(assert (= temp288_190 temp288_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp288_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp288_193 #x0000000000000001))
(assert (= var1322908 temp288_193))
(assert (= temp288_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp288_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_195 #x0000000000000001))
(assert (= var1322975 temp288_195))
(assert (= temp288_196 #x0000000000000000))
(assert (= var1310898 temp288_196))
(assert (= temp288_197 #x0000000000000000))
(assert (= temp288_198 temp288_197))
(assert (= temp288_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp288_198)))
(assert (= temp288_200 #x0000000000000001))
(assert (= temp288_201 temp288_200))
(assert (= temp288_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp288_201)))
(assert (= temp288_203 #x0000000000000002))
(assert (= temp288_204 temp288_203))
(assert (= temp288_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp288_204)))
(assert (= temp288_206 #x0000000000000003))
(assert (= temp288_207 temp288_206))
(assert (= temp288_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp288_207)))
(assert (= temp288_209 #x0000000000000004))
(assert (= temp288_210 temp288_209))
(assert (= temp288_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp288_210)))
(assert (= temp288_212 #x0000000000000005))
(assert (= temp288_213 temp288_212))
(assert (= temp288_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp288_213)))
(assert (= temp288_215 #x0000000000000000))
(assert (= temp288_216
   (ite (bvslt var1310898 temp288_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp288_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp288_216)))
(assert (= var1322977 temp288_217))
(assert (bvslt (ite (bvslt var1310898 temp288_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp288_218 #x0000000000000000))
(assert (= var1310898 temp288_218))
(assert (= temp288_220 var1310898))
(assert (= temp288_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_220)))
(assert (= temp288_219 temp288_221))
(assert (= var1322980
   (ite (= var1322977 temp288_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp288_222 #x0000000000000001))
(assert (= var1322980 temp288_222))
(assert (= temp288_223 #x0000000000000002))
(assert (= var1848169 temp288_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp288_225 #x0000000000000001))
(assert (= var1323065 temp288_225))
(assert (= temp288_226 #x0000000000000001))
(assert (= var3486735 temp288_226))
(assert (= temp288_227 #x0000000000000001))
(assert (= var3814415 temp288_227))
(assert (= temp288_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp288_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_229 #x0000000000000001))
(assert (= var79986 temp288_229))
(assert (= temp288_230 #x0000000000000001))
(assert (= var80116 temp288_230))
(assert (= var4796905 var80116))
(assert (= temp288_231 #x0000000000000000))
(assert (= var4784306 temp288_231))
(assert (= temp288_232 #x0000000000000000))
(assert (= temp288_233
   (ite (bvslt var4784306 temp288_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp288_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_233)))
(assert (= var4796924 temp288_234))
(assert (bvslt (ite (bvslt var4784306 temp288_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp288_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp288_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp288_236 #x0000000000000001))
(assert (= var4796925 temp288_236))
(assert (= temp288_237 #x0000000000000000))
(assert (= var4996927 temp288_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp288_238 #x0000000000000002))
(assert (= var5125763 temp288_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_239 #x0000000000000000))
(assert (= var5191324 temp288_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp288_240 #x0000000000000001))
(assert (= var79986 temp288_240))
(assert (= temp288_241 #x0000000000000000))
(assert (= var7418644 temp288_241))
(assert (= var7418611 var7418644))
(assert (= var7287175 var7418611))
(assert (= var7287171 var7287175))
(assert (= var81597 var7287171))
(assert (= temp288_242 #x0000000000000000))
(assert (= var81597 temp288_242))
(model-add temp288_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp288_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp288_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






