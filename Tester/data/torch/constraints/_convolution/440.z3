(declare-fun temp585_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp585_2 () (_ BitVec 64))
(declare-fun temp585_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp585_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp585_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp585_6 () (_ BitVec 64))
(declare-fun temp585_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp585_8 () (_ BitVec 64))
(declare-fun temp585_9 () (_ BitVec 64))
(declare-fun temp585_10 () (_ BitVec 64))
(declare-fun temp585_11 () (_ BitVec 64))
(declare-fun temp585_12 () (_ BitVec 64))
(declare-fun temp585_13 () (_ BitVec 64))
(declare-fun temp585_14 () (_ BitVec 64))
(declare-fun temp585_15 () (_ BitVec 64))
(declare-fun temp585_16 () (_ BitVec 64))
(declare-fun temp585_17 () (_ BitVec 64))
(declare-fun temp585_18 () (_ BitVec 64))
(declare-fun temp585_19 () (_ BitVec 64))
(declare-fun temp585_20 () (_ BitVec 64))
(declare-fun temp585_21 () (_ BitVec 64))
(declare-fun temp585_22 () (_ BitVec 64))
(declare-fun temp585_23 () (_ BitVec 64))
(declare-fun temp585_24 () (_ BitVec 64))
(declare-fun temp585_25 () (_ BitVec 64))
(declare-fun temp585_26 () (_ BitVec 64))
(declare-fun temp585_27 () (_ BitVec 64))
(declare-fun temp585_28 () (_ BitVec 64))
(declare-fun temp585_29 () (_ BitVec 64))
(declare-fun temp585_30 () (_ BitVec 64))
(declare-fun temp585_31 () (_ BitVec 64))
(declare-fun temp585_32 () (_ BitVec 64))
(declare-fun temp585_33 () (_ BitVec 64))
(declare-fun temp585_34 () (_ BitVec 64))
(declare-fun temp585_35 () (_ BitVec 64))
(declare-fun temp585_36 () (_ BitVec 64))
(declare-fun temp585_37 () (_ BitVec 64))
(declare-fun temp585_38 () (_ BitVec 64))
(declare-fun temp585_39 () (_ BitVec 64))
(declare-fun temp585_40 () (_ BitVec 64))
(declare-fun temp585_41 () (_ BitVec 64))
(declare-fun temp585_42 () (_ BitVec 64))
(declare-fun temp585_43 () (_ BitVec 64))
(declare-fun temp585_44 () (_ BitVec 64))
(declare-fun temp585_45 () (_ BitVec 64))
(declare-fun temp585_46 () (_ BitVec 64))
(declare-fun temp585_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp585_48 () (_ BitVec 64))
(declare-fun temp585_49 () (_ BitVec 64))
(declare-fun temp585_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp585_51 () (_ BitVec 64))
(declare-fun temp585_52 () (_ BitVec 64))
(declare-fun temp585_53 () (_ BitVec 64))
(declare-fun temp585_54 () (_ BitVec 64))
(declare-fun temp585_55 () (_ BitVec 64))
(declare-fun temp585_56 () (_ BitVec 64))
(declare-fun temp585_57 () (_ BitVec 64))
(declare-fun temp585_58 () (_ BitVec 64))
(declare-fun temp585_59 () (_ BitVec 64))
(declare-fun temp585_60 () (_ BitVec 64))
(declare-fun temp585_61 () (_ BitVec 64))
(declare-fun temp585_62 () (_ BitVec 64))
(declare-fun temp585_63 () (_ BitVec 64))
(declare-fun temp585_64 () (_ BitVec 64))
(declare-fun temp585_65 () (_ BitVec 64))
(declare-fun temp585_66 () (_ BitVec 64))
(declare-fun temp585_67 () (_ BitVec 64))
(declare-fun temp585_68 () (_ BitVec 64))
(declare-fun temp585_69 () (_ BitVec 64))
(declare-fun temp585_70 () (_ BitVec 64))
(declare-fun temp585_71 () (_ BitVec 64))
(declare-fun temp585_72 () (_ BitVec 64))
(declare-fun temp585_73 () (_ BitVec 64))
(declare-fun temp585_74 () (_ BitVec 64))
(declare-fun temp585_75 () (_ BitVec 64))
(declare-fun temp585_76 () (_ BitVec 64))
(declare-fun temp585_77 () (_ BitVec 64))
(declare-fun temp585_78 () (_ BitVec 64))
(declare-fun temp585_79 () (_ BitVec 64))
(declare-fun temp585_80 () (_ BitVec 64))
(declare-fun temp585_81 () (_ BitVec 64))
(declare-fun temp585_82 () (_ BitVec 64))
(declare-fun temp585_83 () (_ BitVec 64))
(declare-fun temp585_84 () (_ BitVec 64))
(declare-fun temp585_85 () (_ BitVec 64))
(declare-fun temp585_86 () (_ BitVec 64))
(declare-fun temp585_87 () (_ BitVec 64))
(declare-fun temp585_88 () (_ BitVec 64))
(declare-fun temp585_89 () (_ BitVec 64))
(declare-fun temp585_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp585_91 () (_ BitVec 64))
(declare-fun temp585_92 () (_ BitVec 64))
(declare-fun temp585_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp585_94 () (_ BitVec 64))
(declare-fun temp585_95 () (_ BitVec 64))
(declare-fun temp585_96 () (_ BitVec 64))
(declare-fun temp585_97 () (_ BitVec 64))
(declare-fun temp585_98 () (_ BitVec 64))
(declare-fun temp585_99 () (_ BitVec 64))
(declare-fun temp585_100 () (_ BitVec 64))
(declare-fun temp585_101 () (_ BitVec 64))
(declare-fun temp585_102 () (_ BitVec 64))
(declare-fun temp585_103 () (_ BitVec 64))
(declare-fun temp585_104 () (_ BitVec 64))
(declare-fun temp585_105 () (_ BitVec 64))
(declare-fun temp585_106 () (_ BitVec 64))
(declare-fun temp585_107 () (_ BitVec 64))
(declare-fun temp585_108 () (_ BitVec 64))
(declare-fun temp585_109 () (_ BitVec 64))
(declare-fun temp585_110 () (_ BitVec 64))
(declare-fun temp585_111 () (_ BitVec 64))
(declare-fun temp585_112 () (_ BitVec 64))
(declare-fun temp585_113 () (_ BitVec 64))
(declare-fun temp585_114 () (_ BitVec 64))
(declare-fun temp585_115 () (_ BitVec 64))
(declare-fun temp585_116 () (_ BitVec 64))
(declare-fun temp585_117 () (_ BitVec 64))
(declare-fun temp585_118 () (_ BitVec 64))
(declare-fun temp585_119 () (_ BitVec 64))
(declare-fun temp585_120 () (_ BitVec 64))
(declare-fun temp585_121 () (_ BitVec 64))
(declare-fun temp585_122 () (_ BitVec 64))
(declare-fun temp585_123 () (_ BitVec 64))
(declare-fun temp585_124 () (_ BitVec 64))
(declare-fun temp585_125 () (_ BitVec 64))
(declare-fun temp585_126 () (_ BitVec 64))
(declare-fun temp585_127 () (_ BitVec 64))
(declare-fun temp585_128 () (_ BitVec 64))
(declare-fun temp585_129 () (_ BitVec 64))
(declare-fun temp585_130 () (_ BitVec 64))
(declare-fun temp585_131 () (_ BitVec 64))
(declare-fun temp585_132 () (_ BitVec 64))
(declare-fun temp585_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp585_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp585_135 () (_ BitVec 64))
(declare-fun temp585_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp585_137 () (_ BitVec 64))
(declare-fun temp585_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp585_139 () (_ BitVec 64))
(declare-fun temp585_140 () (_ BitVec 64))
(declare-fun temp585_141 () (_ BitVec 64))
(declare-fun temp585_142 () (_ BitVec 64))
(declare-fun temp585_143 () (_ BitVec 64))
(declare-fun temp585_144 () (_ BitVec 64))
(declare-fun temp585_145 () (_ BitVec 64))
(declare-fun temp585_146 () (_ BitVec 64))
(declare-fun temp585_147 () (_ BitVec 64))
(declare-fun temp585_148 () (_ BitVec 64))
(declare-fun temp585_149 () (_ BitVec 64))
(declare-fun temp585_150 () (_ BitVec 64))
(declare-fun temp585_151 () (_ BitVec 64))
(declare-fun temp585_152 () (_ BitVec 64))
(declare-fun temp585_153 () (_ BitVec 64))
(declare-fun temp585_154 () (_ BitVec 64))
(declare-fun temp585_156 () (_ BitVec 64))
(declare-fun temp585_157 () (_ BitVec 64))
(declare-fun temp585_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp585_158 () (_ BitVec 64))
(declare-fun temp585_159 () (_ BitVec 64))
(declare-fun temp585_161 () (_ BitVec 64))
(declare-fun temp585_162 () (_ BitVec 64))
(declare-fun temp585_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp585_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp585_164 () (_ BitVec 64))
(declare-fun temp585_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp585_166 () (_ BitVec 64))
(declare-fun temp585_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp585_168 () (_ BitVec 64))
(declare-fun temp585_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp585_170 () (_ BitVec 64))
(declare-fun temp585_171 () (_ BitVec 64))
(declare-fun temp585_172 () (_ BitVec 64))
(declare-fun temp585_173 () (_ BitVec 64))
(declare-fun temp585_174 () (_ BitVec 64))
(declare-fun temp585_175 () (_ BitVec 64))
(declare-fun temp585_176 () (_ BitVec 64))
(declare-fun temp585_177 () (_ BitVec 64))
(declare-fun temp585_178 () (_ BitVec 64))
(declare-fun temp585_179 () (_ BitVec 64))
(declare-fun temp585_180 () (_ BitVec 64))
(declare-fun temp585_181 () (_ BitVec 64))
(declare-fun temp585_182 () (_ BitVec 64))
(declare-fun temp585_183 () (_ BitVec 64))
(declare-fun temp585_184 () (_ BitVec 64))
(declare-fun temp585_185 () (_ BitVec 64))
(declare-fun temp585_186 () (_ BitVec 64))
(declare-fun temp585_187 () (_ BitVec 64))
(declare-fun temp585_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp585_189 () (_ BitVec 64))
(declare-fun temp585_191 () (_ BitVec 64))
(declare-fun temp585_192 () (_ BitVec 64))
(declare-fun temp585_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp585_193 () (_ BitVec 64))
(declare-fun temp585_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp585_195 () (_ BitVec 64))
(declare-fun temp585_196 () (_ BitVec 64))
(declare-fun temp585_197 () (_ BitVec 64))
(declare-fun temp585_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp585_199 () (_ BitVec 64))
(declare-fun temp585_200 () (_ BitVec 64))
(declare-fun temp585_201 () (_ BitVec 64))
(declare-fun temp585_202 () (_ BitVec 64))
(declare-fun temp585_203 () (_ BitVec 64))
(declare-fun temp585_204 () (_ BitVec 64))
(declare-fun temp585_205 () (_ BitVec 64))
(declare-fun temp585_206 () (_ BitVec 64))
(declare-fun temp585_207 () (_ BitVec 64))
(declare-fun temp585_208 () (_ BitVec 64))
(declare-fun temp585_209 () (_ BitVec 64))
(declare-fun temp585_210 () (_ BitVec 64))
(declare-fun temp585_211 () (_ BitVec 64))
(declare-fun temp585_212 () (_ BitVec 64))
(declare-fun temp585_213 () (_ BitVec 64))
(declare-fun temp585_214 () (_ BitVec 64))
(declare-fun temp585_215 () (_ BitVec 64))
(declare-fun temp585_216 () (_ BitVec 64))
(declare-fun temp585_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp585_218 () (_ BitVec 64))
(declare-fun temp585_220 () (_ BitVec 64))
(declare-fun temp585_221 () (_ BitVec 64))
(declare-fun temp585_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp585_222 () (_ BitVec 64))
(declare-fun temp585_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp585_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp585_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp585_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp585_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp585_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp585_229 () (_ BitVec 64))
(declare-fun temp585_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp585_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp585_232 () (_ BitVec 64))
(declare-fun temp585_233 () (_ BitVec 64))
(declare-fun temp585_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp585_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp585_236 () (_ BitVec 64))
(declare-fun temp585_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp585_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp585_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp585_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp585_241 () (_ BitVec 64))
(declare-fun temp585_242 () (_ BitVec 64))
(assert (= temp585_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp585_1)))
(assert (= temp585_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp585_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_3 #x0000000000000000))
(assert (= var79869 temp585_3))
(assert (= temp585_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp585_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_5 #x0000000000000000))
(assert (= var79914 temp585_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp585_6 #x0000000000000000))
(assert (= temp585_7 temp585_6))
(assert (= temp585_8 (select ARGNAME_padding_NAMEEND_VAL temp585_7)))
(assert (= temp585_9 #x0000000000000001))
(assert (= temp585_10 temp585_9))
(assert (= temp585_11 (select ARGNAME_padding_NAMEEND_VAL temp585_10)))
(assert (= temp585_12 #x0000000000000002))
(assert (= temp585_13 temp585_12))
(assert (= temp585_14 (select ARGNAME_padding_NAMEEND_VAL temp585_13)))
(assert (= temp585_15 #x0000000000000003))
(assert (= temp585_16 temp585_15))
(assert (= temp585_17 (select ARGNAME_padding_NAMEEND_VAL temp585_16)))
(assert (= temp585_18 #x0000000000000004))
(assert (= temp585_19 temp585_18))
(assert (= temp585_20 (select ARGNAME_padding_NAMEEND_VAL temp585_19)))
(assert (= temp585_21 #x0000000000000005))
(assert (= temp585_22 temp585_21))
(assert (= temp585_23 (select ARGNAME_padding_NAMEEND_VAL temp585_22)))
(assert (= temp585_24 #x0000000000000000))
(assert (= temp585_25 #x0000000000000000))
(assert (= temp585_26 temp585_25))
(assert (= temp585_27 (select ARGNAME_padding_NAMEEND_VAL temp585_26)))
(assert (= temp585_28 #x0000000000000000))
(assert (= temp585_29 #x0000000000000001))
(assert (= temp585_30 temp585_29))
(assert (= temp585_31 (select ARGNAME_padding_NAMEEND_VAL temp585_30)))
(assert (= temp585_32 #x0000000000000000))
(assert (= temp585_33 #x0000000000000002))
(assert (= temp585_34 temp585_33))
(assert (= temp585_35 (select ARGNAME_padding_NAMEEND_VAL temp585_34)))
(assert (= temp585_36 #x0000000000000000))
(assert (= temp585_37 #x0000000000000003))
(assert (= temp585_38 temp585_37))
(assert (= temp585_39 (select ARGNAME_padding_NAMEEND_VAL temp585_38)))
(assert (= temp585_40 #x0000000000000000))
(assert (= temp585_41 #x0000000000000004))
(assert (= temp585_42 temp585_41))
(assert (= temp585_43 (select ARGNAME_padding_NAMEEND_VAL temp585_42)))
(assert (= temp585_44 #x0000000000000000))
(assert (= temp585_45 #x0000000000000005))
(assert (= temp585_46 temp585_45))
(assert (= temp585_47 (select ARGNAME_padding_NAMEEND_VAL temp585_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp585_27 temp585_24)
             (bvslt temp585_31 temp585_28)
             (bvslt temp585_35 temp585_32)
             (bvslt temp585_39 temp585_36)
             (bvslt temp585_43 temp585_40)
             (bvslt temp585_47 temp585_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_48 #x0000000000000000))
(assert (= var1322786 temp585_48))
(assert (= temp585_49 #x0000000000000000))
(assert (= temp585_50 temp585_49))
(assert (= temp585_51 (select ARGNAME_output_padding_NAMEEND_VAL temp585_50)))
(assert (= temp585_52 #x0000000000000001))
(assert (= temp585_53 temp585_52))
(assert (= temp585_54 (select ARGNAME_output_padding_NAMEEND_VAL temp585_53)))
(assert (= temp585_55 #x0000000000000002))
(assert (= temp585_56 temp585_55))
(assert (= temp585_57 (select ARGNAME_output_padding_NAMEEND_VAL temp585_56)))
(assert (= temp585_58 #x0000000000000003))
(assert (= temp585_59 temp585_58))
(assert (= temp585_60 (select ARGNAME_output_padding_NAMEEND_VAL temp585_59)))
(assert (= temp585_61 #x0000000000000004))
(assert (= temp585_62 temp585_61))
(assert (= temp585_63 (select ARGNAME_output_padding_NAMEEND_VAL temp585_62)))
(assert (= temp585_64 #x0000000000000005))
(assert (= temp585_65 temp585_64))
(assert (= temp585_66 (select ARGNAME_output_padding_NAMEEND_VAL temp585_65)))
(assert (= temp585_67 #x0000000000000000))
(assert (= temp585_68 #x0000000000000000))
(assert (= temp585_69 temp585_68))
(assert (= temp585_70 (select ARGNAME_output_padding_NAMEEND_VAL temp585_69)))
(assert (= temp585_71 #x0000000000000000))
(assert (= temp585_72 #x0000000000000001))
(assert (= temp585_73 temp585_72))
(assert (= temp585_74 (select ARGNAME_output_padding_NAMEEND_VAL temp585_73)))
(assert (= temp585_75 #x0000000000000000))
(assert (= temp585_76 #x0000000000000002))
(assert (= temp585_77 temp585_76))
(assert (= temp585_78 (select ARGNAME_output_padding_NAMEEND_VAL temp585_77)))
(assert (= temp585_79 #x0000000000000000))
(assert (= temp585_80 #x0000000000000003))
(assert (= temp585_81 temp585_80))
(assert (= temp585_82 (select ARGNAME_output_padding_NAMEEND_VAL temp585_81)))
(assert (= temp585_83 #x0000000000000000))
(assert (= temp585_84 #x0000000000000004))
(assert (= temp585_85 temp585_84))
(assert (= temp585_86 (select ARGNAME_output_padding_NAMEEND_VAL temp585_85)))
(assert (= temp585_87 #x0000000000000000))
(assert (= temp585_88 #x0000000000000005))
(assert (= temp585_89 temp585_88))
(assert (= temp585_90 (select ARGNAME_output_padding_NAMEEND_VAL temp585_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp585_70 temp585_67)
             (bvslt temp585_74 temp585_71)
             (bvslt temp585_78 temp585_75)
             (bvslt temp585_82 temp585_79)
             (bvslt temp585_86 temp585_83)
             (bvslt temp585_90 temp585_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_91 #x0000000000000000))
(assert (= var1322797 temp585_91))
(assert (= temp585_92 #x0000000000000000))
(assert (= temp585_93 temp585_92))
(assert (= temp585_94 (select ARGNAME_stride_NAMEEND_VAL temp585_93)))
(assert (= temp585_95 #x0000000000000001))
(assert (= temp585_96 temp585_95))
(assert (= temp585_97 (select ARGNAME_stride_NAMEEND_VAL temp585_96)))
(assert (= temp585_98 #x0000000000000002))
(assert (= temp585_99 temp585_98))
(assert (= temp585_100 (select ARGNAME_stride_NAMEEND_VAL temp585_99)))
(assert (= temp585_101 #x0000000000000003))
(assert (= temp585_102 temp585_101))
(assert (= temp585_103 (select ARGNAME_stride_NAMEEND_VAL temp585_102)))
(assert (= temp585_104 #x0000000000000004))
(assert (= temp585_105 temp585_104))
(assert (= temp585_106 (select ARGNAME_stride_NAMEEND_VAL temp585_105)))
(assert (= temp585_107 #x0000000000000005))
(assert (= temp585_108 temp585_107))
(assert (= temp585_109 (select ARGNAME_stride_NAMEEND_VAL temp585_108)))
(assert (= temp585_110 #x0000000000000000))
(assert (= temp585_111 #x0000000000000000))
(assert (= temp585_112 temp585_111))
(assert (= temp585_113 (select ARGNAME_stride_NAMEEND_VAL temp585_112)))
(assert (= temp585_114 #x0000000000000000))
(assert (= temp585_115 #x0000000000000001))
(assert (= temp585_116 temp585_115))
(assert (= temp585_117 (select ARGNAME_stride_NAMEEND_VAL temp585_116)))
(assert (= temp585_118 #x0000000000000000))
(assert (= temp585_119 #x0000000000000002))
(assert (= temp585_120 temp585_119))
(assert (= temp585_121 (select ARGNAME_stride_NAMEEND_VAL temp585_120)))
(assert (= temp585_122 #x0000000000000000))
(assert (= temp585_123 #x0000000000000003))
(assert (= temp585_124 temp585_123))
(assert (= temp585_125 (select ARGNAME_stride_NAMEEND_VAL temp585_124)))
(assert (= temp585_126 #x0000000000000000))
(assert (= temp585_127 #x0000000000000004))
(assert (= temp585_128 temp585_127))
(assert (= temp585_129 (select ARGNAME_stride_NAMEEND_VAL temp585_128)))
(assert (= temp585_130 #x0000000000000000))
(assert (= temp585_131 #x0000000000000005))
(assert (= temp585_132 temp585_131))
(assert (= temp585_133 (select ARGNAME_stride_NAMEEND_VAL temp585_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp585_113 temp585_110)
             (bvsle temp585_117 temp585_114)
             (bvsle temp585_121 temp585_118)
             (bvsle temp585_125 temp585_122)
             (bvsle temp585_129 temp585_126)
             (bvsle temp585_133 temp585_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_134 #x0000000000000000))
(assert (= var1322807 temp585_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_135 #x0000000000000001))
(assert (= var1322819 temp585_135))
(assert (= temp585_136 #x0000000000000000))
(assert (= var1310898 temp585_136))
(assert (= temp585_137 #x0000000000000000))
(assert (= temp585_138 temp585_137))
(assert (= temp585_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_138)))
(assert (= temp585_140 #x0000000000000001))
(assert (= temp585_141 temp585_140))
(assert (= temp585_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_141)))
(assert (= temp585_143 #x0000000000000002))
(assert (= temp585_144 temp585_143))
(assert (= temp585_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_144)))
(assert (= temp585_146 #x0000000000000003))
(assert (= temp585_147 temp585_146))
(assert (= temp585_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_147)))
(assert (= temp585_149 #x0000000000000004))
(assert (= temp585_150 temp585_149))
(assert (= temp585_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_150)))
(assert (= temp585_152 #x0000000000000005))
(assert (= temp585_153 temp585_152))
(assert (= temp585_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_153)))
(assert (= temp585_156 var1310898))
(assert (= temp585_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_156)))
(assert (= temp585_155 temp585_157))
(assert (= var1322852
   (ite (bvslt temp585_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_158 #x0000000000000000))
(assert (= var1322852 temp585_158))
(assert (= temp585_159 #x0000000000000000))
(assert (= var1310898 temp585_159))
(assert (= temp585_161 var1310898))
(assert (= temp585_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_161)))
(assert (= temp585_160 temp585_162))
(assert (= var1322874 (bvsmod temp585_160 ARGNAME_groups_NAMEEND)))
(assert (= temp585_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp585_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp585_164 #x0000000000000001))
(assert (= var1322875 temp585_164))
(assert (= temp585_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp585_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_166 #x0000000000000001))
(assert (= var1322895 temp585_166))
(assert (= temp585_167 #x0000000000000001))
(assert (= var1311786 temp585_167))
(assert (= temp585_168 #x0000000000000000))
(assert (= temp585_169 temp585_168))
(assert (= temp585_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp585_169)))
(assert (= temp585_171 #x0000000000000001))
(assert (= temp585_172 temp585_171))
(assert (= temp585_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp585_172)))
(assert (= temp585_174 #x0000000000000002))
(assert (= temp585_175 temp585_174))
(assert (= temp585_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp585_175)))
(assert (= temp585_177 #x0000000000000003))
(assert (= temp585_178 temp585_177))
(assert (= temp585_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp585_178)))
(assert (= temp585_180 #x0000000000000004))
(assert (= temp585_181 temp585_180))
(assert (= temp585_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp585_181)))
(assert (= temp585_183 #x0000000000000005))
(assert (= temp585_184 temp585_183))
(assert (= temp585_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp585_184)))
(assert (= temp585_186 #x0000000000000000))
(assert (= temp585_187
   (ite (bvslt var1311786 temp585_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp585_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp585_187)))
(assert (= var1322903 temp585_188))
(assert (bvslt (ite (bvslt var1311786 temp585_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp585_189 #x0000000000000001))
(assert (= var1311786 temp585_189))
(assert (= temp585_191 var1311786))
(assert (= temp585_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_191)))
(assert (= temp585_190 temp585_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp585_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp585_193 #x0000000000000001))
(assert (= var1322908 temp585_193))
(assert (= temp585_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp585_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_195 #x0000000000000001))
(assert (= var1322975 temp585_195))
(assert (= temp585_196 #x0000000000000000))
(assert (= var1310898 temp585_196))
(assert (= temp585_197 #x0000000000000000))
(assert (= temp585_198 temp585_197))
(assert (= temp585_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp585_198)))
(assert (= temp585_200 #x0000000000000001))
(assert (= temp585_201 temp585_200))
(assert (= temp585_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp585_201)))
(assert (= temp585_203 #x0000000000000002))
(assert (= temp585_204 temp585_203))
(assert (= temp585_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp585_204)))
(assert (= temp585_206 #x0000000000000003))
(assert (= temp585_207 temp585_206))
(assert (= temp585_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp585_207)))
(assert (= temp585_209 #x0000000000000004))
(assert (= temp585_210 temp585_209))
(assert (= temp585_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp585_210)))
(assert (= temp585_212 #x0000000000000005))
(assert (= temp585_213 temp585_212))
(assert (= temp585_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp585_213)))
(assert (= temp585_215 #x0000000000000000))
(assert (= temp585_216
   (ite (bvslt var1310898 temp585_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp585_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp585_216)))
(assert (= var1322977 temp585_217))
(assert (bvslt (ite (bvslt var1310898 temp585_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp585_218 #x0000000000000000))
(assert (= var1310898 temp585_218))
(assert (= temp585_220 var1310898))
(assert (= temp585_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp585_220)))
(assert (= temp585_219 temp585_221))
(assert (= var1322980
   (ite (= var1322977 temp585_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp585_222 #x0000000000000001))
(assert (= var1322980 temp585_222))
(assert (= temp585_223 #x0000000000000002))
(assert (= var1848169 temp585_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp585_225 #x0000000000000001))
(assert (= var1323065 temp585_225))
(assert (= temp585_226 #x0000000000000001))
(assert (= var3486735 temp585_226))
(assert (= temp585_227 #x0000000000000001))
(assert (= var3814415 temp585_227))
(assert (= temp585_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp585_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_229 #x0000000000000001))
(assert (= var79986 temp585_229))
(assert (= temp585_230 #x0000000000000001))
(assert (= var80116 temp585_230))
(assert (= var4796905 var80116))
(assert (= temp585_231 #x0000000000000000))
(assert (= var4784306 temp585_231))
(assert (= temp585_232 #x0000000000000000))
(assert (= temp585_233
   (ite (bvslt var4784306 temp585_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp585_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp585_233)))
(assert (= var4796924 temp585_234))
(assert (bvslt (ite (bvslt var4784306 temp585_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp585_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp585_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp585_236 #x0000000000000001))
(assert (= var4796925 temp585_236))
(assert (= temp585_237 #x0000000000000000))
(assert (= var4996927 temp585_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp585_238 #x0000000000000002))
(assert (= var5125763 temp585_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_239 #x0000000000000000))
(assert (= var5191324 temp585_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp585_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp585_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp585_241 #x0000000000000000))
(assert (= var81342 temp585_241))
(assert (= temp585_242 #x0000000000000001))
(assert (= var79986 temp585_242))
(model-add temp585_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp585_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp585_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






