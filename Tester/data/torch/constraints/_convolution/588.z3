(declare-fun temp781_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp781_2 () (_ BitVec 64))
(declare-fun temp781_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp781_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp781_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp781_6 () (_ BitVec 64))
(declare-fun temp781_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp781_8 () (_ BitVec 64))
(declare-fun temp781_9 () (_ BitVec 64))
(declare-fun temp781_10 () (_ BitVec 64))
(declare-fun temp781_11 () (_ BitVec 64))
(declare-fun temp781_12 () (_ BitVec 64))
(declare-fun temp781_13 () (_ BitVec 64))
(declare-fun temp781_14 () (_ BitVec 64))
(declare-fun temp781_15 () (_ BitVec 64))
(declare-fun temp781_16 () (_ BitVec 64))
(declare-fun temp781_17 () (_ BitVec 64))
(declare-fun temp781_18 () (_ BitVec 64))
(declare-fun temp781_19 () (_ BitVec 64))
(declare-fun temp781_20 () (_ BitVec 64))
(declare-fun temp781_21 () (_ BitVec 64))
(declare-fun temp781_22 () (_ BitVec 64))
(declare-fun temp781_23 () (_ BitVec 64))
(declare-fun temp781_24 () (_ BitVec 64))
(declare-fun temp781_25 () (_ BitVec 64))
(declare-fun temp781_26 () (_ BitVec 64))
(declare-fun temp781_27 () (_ BitVec 64))
(declare-fun temp781_28 () (_ BitVec 64))
(declare-fun temp781_29 () (_ BitVec 64))
(declare-fun temp781_30 () (_ BitVec 64))
(declare-fun temp781_31 () (_ BitVec 64))
(declare-fun temp781_32 () (_ BitVec 64))
(declare-fun temp781_33 () (_ BitVec 64))
(declare-fun temp781_34 () (_ BitVec 64))
(declare-fun temp781_35 () (_ BitVec 64))
(declare-fun temp781_36 () (_ BitVec 64))
(declare-fun temp781_37 () (_ BitVec 64))
(declare-fun temp781_38 () (_ BitVec 64))
(declare-fun temp781_39 () (_ BitVec 64))
(declare-fun temp781_40 () (_ BitVec 64))
(declare-fun temp781_41 () (_ BitVec 64))
(declare-fun temp781_42 () (_ BitVec 64))
(declare-fun temp781_43 () (_ BitVec 64))
(declare-fun temp781_44 () (_ BitVec 64))
(declare-fun temp781_45 () (_ BitVec 64))
(declare-fun temp781_46 () (_ BitVec 64))
(declare-fun temp781_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp781_48 () (_ BitVec 64))
(declare-fun temp781_49 () (_ BitVec 64))
(declare-fun temp781_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp781_51 () (_ BitVec 64))
(declare-fun temp781_52 () (_ BitVec 64))
(declare-fun temp781_53 () (_ BitVec 64))
(declare-fun temp781_54 () (_ BitVec 64))
(declare-fun temp781_55 () (_ BitVec 64))
(declare-fun temp781_56 () (_ BitVec 64))
(declare-fun temp781_57 () (_ BitVec 64))
(declare-fun temp781_58 () (_ BitVec 64))
(declare-fun temp781_59 () (_ BitVec 64))
(declare-fun temp781_60 () (_ BitVec 64))
(declare-fun temp781_61 () (_ BitVec 64))
(declare-fun temp781_62 () (_ BitVec 64))
(declare-fun temp781_63 () (_ BitVec 64))
(declare-fun temp781_64 () (_ BitVec 64))
(declare-fun temp781_65 () (_ BitVec 64))
(declare-fun temp781_66 () (_ BitVec 64))
(declare-fun temp781_67 () (_ BitVec 64))
(declare-fun temp781_68 () (_ BitVec 64))
(declare-fun temp781_69 () (_ BitVec 64))
(declare-fun temp781_70 () (_ BitVec 64))
(declare-fun temp781_71 () (_ BitVec 64))
(declare-fun temp781_72 () (_ BitVec 64))
(declare-fun temp781_73 () (_ BitVec 64))
(declare-fun temp781_74 () (_ BitVec 64))
(declare-fun temp781_75 () (_ BitVec 64))
(declare-fun temp781_76 () (_ BitVec 64))
(declare-fun temp781_77 () (_ BitVec 64))
(declare-fun temp781_78 () (_ BitVec 64))
(declare-fun temp781_79 () (_ BitVec 64))
(declare-fun temp781_80 () (_ BitVec 64))
(declare-fun temp781_81 () (_ BitVec 64))
(declare-fun temp781_82 () (_ BitVec 64))
(declare-fun temp781_83 () (_ BitVec 64))
(declare-fun temp781_84 () (_ BitVec 64))
(declare-fun temp781_85 () (_ BitVec 64))
(declare-fun temp781_86 () (_ BitVec 64))
(declare-fun temp781_87 () (_ BitVec 64))
(declare-fun temp781_88 () (_ BitVec 64))
(declare-fun temp781_89 () (_ BitVec 64))
(declare-fun temp781_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp781_91 () (_ BitVec 64))
(declare-fun temp781_92 () (_ BitVec 64))
(declare-fun temp781_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp781_94 () (_ BitVec 64))
(declare-fun temp781_95 () (_ BitVec 64))
(declare-fun temp781_96 () (_ BitVec 64))
(declare-fun temp781_97 () (_ BitVec 64))
(declare-fun temp781_98 () (_ BitVec 64))
(declare-fun temp781_99 () (_ BitVec 64))
(declare-fun temp781_100 () (_ BitVec 64))
(declare-fun temp781_101 () (_ BitVec 64))
(declare-fun temp781_102 () (_ BitVec 64))
(declare-fun temp781_103 () (_ BitVec 64))
(declare-fun temp781_104 () (_ BitVec 64))
(declare-fun temp781_105 () (_ BitVec 64))
(declare-fun temp781_106 () (_ BitVec 64))
(declare-fun temp781_107 () (_ BitVec 64))
(declare-fun temp781_108 () (_ BitVec 64))
(declare-fun temp781_109 () (_ BitVec 64))
(declare-fun temp781_110 () (_ BitVec 64))
(declare-fun temp781_111 () (_ BitVec 64))
(declare-fun temp781_112 () (_ BitVec 64))
(declare-fun temp781_113 () (_ BitVec 64))
(declare-fun temp781_114 () (_ BitVec 64))
(declare-fun temp781_115 () (_ BitVec 64))
(declare-fun temp781_116 () (_ BitVec 64))
(declare-fun temp781_117 () (_ BitVec 64))
(declare-fun temp781_118 () (_ BitVec 64))
(declare-fun temp781_119 () (_ BitVec 64))
(declare-fun temp781_120 () (_ BitVec 64))
(declare-fun temp781_121 () (_ BitVec 64))
(declare-fun temp781_122 () (_ BitVec 64))
(declare-fun temp781_123 () (_ BitVec 64))
(declare-fun temp781_124 () (_ BitVec 64))
(declare-fun temp781_125 () (_ BitVec 64))
(declare-fun temp781_126 () (_ BitVec 64))
(declare-fun temp781_127 () (_ BitVec 64))
(declare-fun temp781_128 () (_ BitVec 64))
(declare-fun temp781_129 () (_ BitVec 64))
(declare-fun temp781_130 () (_ BitVec 64))
(declare-fun temp781_131 () (_ BitVec 64))
(declare-fun temp781_132 () (_ BitVec 64))
(declare-fun temp781_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp781_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp781_135 () (_ BitVec 64))
(declare-fun temp781_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp781_137 () (_ BitVec 64))
(declare-fun temp781_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp781_139 () (_ BitVec 64))
(declare-fun temp781_140 () (_ BitVec 64))
(declare-fun temp781_141 () (_ BitVec 64))
(declare-fun temp781_142 () (_ BitVec 64))
(declare-fun temp781_143 () (_ BitVec 64))
(declare-fun temp781_144 () (_ BitVec 64))
(declare-fun temp781_145 () (_ BitVec 64))
(declare-fun temp781_146 () (_ BitVec 64))
(declare-fun temp781_147 () (_ BitVec 64))
(declare-fun temp781_148 () (_ BitVec 64))
(declare-fun temp781_149 () (_ BitVec 64))
(declare-fun temp781_150 () (_ BitVec 64))
(declare-fun temp781_151 () (_ BitVec 64))
(declare-fun temp781_152 () (_ BitVec 64))
(declare-fun temp781_153 () (_ BitVec 64))
(declare-fun temp781_154 () (_ BitVec 64))
(declare-fun temp781_156 () (_ BitVec 64))
(declare-fun temp781_157 () (_ BitVec 64))
(declare-fun temp781_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp781_158 () (_ BitVec 64))
(declare-fun temp781_159 () (_ BitVec 64))
(declare-fun temp781_161 () (_ BitVec 64))
(declare-fun temp781_162 () (_ BitVec 64))
(declare-fun temp781_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp781_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp781_164 () (_ BitVec 64))
(declare-fun temp781_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp781_166 () (_ BitVec 64))
(declare-fun temp781_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp781_168 () (_ BitVec 64))
(declare-fun temp781_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp781_170 () (_ BitVec 64))
(declare-fun temp781_171 () (_ BitVec 64))
(declare-fun temp781_172 () (_ BitVec 64))
(declare-fun temp781_173 () (_ BitVec 64))
(declare-fun temp781_174 () (_ BitVec 64))
(declare-fun temp781_175 () (_ BitVec 64))
(declare-fun temp781_176 () (_ BitVec 64))
(declare-fun temp781_177 () (_ BitVec 64))
(declare-fun temp781_178 () (_ BitVec 64))
(declare-fun temp781_179 () (_ BitVec 64))
(declare-fun temp781_180 () (_ BitVec 64))
(declare-fun temp781_181 () (_ BitVec 64))
(declare-fun temp781_182 () (_ BitVec 64))
(declare-fun temp781_183 () (_ BitVec 64))
(declare-fun temp781_184 () (_ BitVec 64))
(declare-fun temp781_185 () (_ BitVec 64))
(declare-fun temp781_186 () (_ BitVec 64))
(declare-fun temp781_187 () (_ BitVec 64))
(declare-fun temp781_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp781_189 () (_ BitVec 64))
(declare-fun temp781_191 () (_ BitVec 64))
(declare-fun temp781_192 () (_ BitVec 64))
(declare-fun temp781_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp781_193 () (_ BitVec 64))
(declare-fun temp781_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp781_195 () (_ BitVec 64))
(declare-fun temp781_196 () (_ BitVec 64))
(declare-fun temp781_197 () (_ BitVec 64))
(declare-fun temp781_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp781_199 () (_ BitVec 64))
(declare-fun temp781_200 () (_ BitVec 64))
(declare-fun temp781_201 () (_ BitVec 64))
(declare-fun temp781_202 () (_ BitVec 64))
(declare-fun temp781_203 () (_ BitVec 64))
(declare-fun temp781_204 () (_ BitVec 64))
(declare-fun temp781_205 () (_ BitVec 64))
(declare-fun temp781_206 () (_ BitVec 64))
(declare-fun temp781_207 () (_ BitVec 64))
(declare-fun temp781_208 () (_ BitVec 64))
(declare-fun temp781_209 () (_ BitVec 64))
(declare-fun temp781_210 () (_ BitVec 64))
(declare-fun temp781_211 () (_ BitVec 64))
(declare-fun temp781_212 () (_ BitVec 64))
(declare-fun temp781_213 () (_ BitVec 64))
(declare-fun temp781_214 () (_ BitVec 64))
(declare-fun temp781_215 () (_ BitVec 64))
(declare-fun temp781_216 () (_ BitVec 64))
(declare-fun temp781_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp781_218 () (_ BitVec 64))
(declare-fun temp781_220 () (_ BitVec 64))
(declare-fun temp781_221 () (_ BitVec 64))
(declare-fun temp781_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp781_222 () (_ BitVec 64))
(declare-fun temp781_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp781_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp781_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp781_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp781_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp781_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp781_229 () (_ BitVec 64))
(declare-fun temp781_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp781_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp781_232 () (_ BitVec 64))
(declare-fun temp781_233 () (_ BitVec 64))
(declare-fun temp781_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp781_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp781_236 () (_ BitVec 64))
(declare-fun temp781_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp781_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp781_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp781_241 () (_ BitVec 64))
(declare-fun temp781_240 () (_ BitVec 64))
(declare-fun temp781_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp781_243 () (_ BitVec 64))
(declare-fun temp781_244 () (_ BitVec 64))
(declare-fun temp781_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp781_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp781_247 () (_ BitVec 64))
(declare-fun temp781_248 () (_ BitVec 64))
(assert (= temp781_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp781_1)))
(assert (= temp781_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp781_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_3 #x0000000000000000))
(assert (= var79869 temp781_3))
(assert (= temp781_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp781_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_5 #x0000000000000000))
(assert (= var79914 temp781_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp781_6 #x0000000000000000))
(assert (= temp781_7 temp781_6))
(assert (= temp781_8 (select ARGNAME_padding_NAMEEND_VAL temp781_7)))
(assert (= temp781_9 #x0000000000000001))
(assert (= temp781_10 temp781_9))
(assert (= temp781_11 (select ARGNAME_padding_NAMEEND_VAL temp781_10)))
(assert (= temp781_12 #x0000000000000002))
(assert (= temp781_13 temp781_12))
(assert (= temp781_14 (select ARGNAME_padding_NAMEEND_VAL temp781_13)))
(assert (= temp781_15 #x0000000000000003))
(assert (= temp781_16 temp781_15))
(assert (= temp781_17 (select ARGNAME_padding_NAMEEND_VAL temp781_16)))
(assert (= temp781_18 #x0000000000000004))
(assert (= temp781_19 temp781_18))
(assert (= temp781_20 (select ARGNAME_padding_NAMEEND_VAL temp781_19)))
(assert (= temp781_21 #x0000000000000005))
(assert (= temp781_22 temp781_21))
(assert (= temp781_23 (select ARGNAME_padding_NAMEEND_VAL temp781_22)))
(assert (= temp781_24 #x0000000000000000))
(assert (= temp781_25 #x0000000000000000))
(assert (= temp781_26 temp781_25))
(assert (= temp781_27 (select ARGNAME_padding_NAMEEND_VAL temp781_26)))
(assert (= temp781_28 #x0000000000000000))
(assert (= temp781_29 #x0000000000000001))
(assert (= temp781_30 temp781_29))
(assert (= temp781_31 (select ARGNAME_padding_NAMEEND_VAL temp781_30)))
(assert (= temp781_32 #x0000000000000000))
(assert (= temp781_33 #x0000000000000002))
(assert (= temp781_34 temp781_33))
(assert (= temp781_35 (select ARGNAME_padding_NAMEEND_VAL temp781_34)))
(assert (= temp781_36 #x0000000000000000))
(assert (= temp781_37 #x0000000000000003))
(assert (= temp781_38 temp781_37))
(assert (= temp781_39 (select ARGNAME_padding_NAMEEND_VAL temp781_38)))
(assert (= temp781_40 #x0000000000000000))
(assert (= temp781_41 #x0000000000000004))
(assert (= temp781_42 temp781_41))
(assert (= temp781_43 (select ARGNAME_padding_NAMEEND_VAL temp781_42)))
(assert (= temp781_44 #x0000000000000000))
(assert (= temp781_45 #x0000000000000005))
(assert (= temp781_46 temp781_45))
(assert (= temp781_47 (select ARGNAME_padding_NAMEEND_VAL temp781_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp781_27 temp781_24)
             (bvslt temp781_31 temp781_28)
             (bvslt temp781_35 temp781_32)
             (bvslt temp781_39 temp781_36)
             (bvslt temp781_43 temp781_40)
             (bvslt temp781_47 temp781_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_48 #x0000000000000000))
(assert (= var1322786 temp781_48))
(assert (= temp781_49 #x0000000000000000))
(assert (= temp781_50 temp781_49))
(assert (= temp781_51 (select ARGNAME_output_padding_NAMEEND_VAL temp781_50)))
(assert (= temp781_52 #x0000000000000001))
(assert (= temp781_53 temp781_52))
(assert (= temp781_54 (select ARGNAME_output_padding_NAMEEND_VAL temp781_53)))
(assert (= temp781_55 #x0000000000000002))
(assert (= temp781_56 temp781_55))
(assert (= temp781_57 (select ARGNAME_output_padding_NAMEEND_VAL temp781_56)))
(assert (= temp781_58 #x0000000000000003))
(assert (= temp781_59 temp781_58))
(assert (= temp781_60 (select ARGNAME_output_padding_NAMEEND_VAL temp781_59)))
(assert (= temp781_61 #x0000000000000004))
(assert (= temp781_62 temp781_61))
(assert (= temp781_63 (select ARGNAME_output_padding_NAMEEND_VAL temp781_62)))
(assert (= temp781_64 #x0000000000000005))
(assert (= temp781_65 temp781_64))
(assert (= temp781_66 (select ARGNAME_output_padding_NAMEEND_VAL temp781_65)))
(assert (= temp781_67 #x0000000000000000))
(assert (= temp781_68 #x0000000000000000))
(assert (= temp781_69 temp781_68))
(assert (= temp781_70 (select ARGNAME_output_padding_NAMEEND_VAL temp781_69)))
(assert (= temp781_71 #x0000000000000000))
(assert (= temp781_72 #x0000000000000001))
(assert (= temp781_73 temp781_72))
(assert (= temp781_74 (select ARGNAME_output_padding_NAMEEND_VAL temp781_73)))
(assert (= temp781_75 #x0000000000000000))
(assert (= temp781_76 #x0000000000000002))
(assert (= temp781_77 temp781_76))
(assert (= temp781_78 (select ARGNAME_output_padding_NAMEEND_VAL temp781_77)))
(assert (= temp781_79 #x0000000000000000))
(assert (= temp781_80 #x0000000000000003))
(assert (= temp781_81 temp781_80))
(assert (= temp781_82 (select ARGNAME_output_padding_NAMEEND_VAL temp781_81)))
(assert (= temp781_83 #x0000000000000000))
(assert (= temp781_84 #x0000000000000004))
(assert (= temp781_85 temp781_84))
(assert (= temp781_86 (select ARGNAME_output_padding_NAMEEND_VAL temp781_85)))
(assert (= temp781_87 #x0000000000000000))
(assert (= temp781_88 #x0000000000000005))
(assert (= temp781_89 temp781_88))
(assert (= temp781_90 (select ARGNAME_output_padding_NAMEEND_VAL temp781_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp781_70 temp781_67)
             (bvslt temp781_74 temp781_71)
             (bvslt temp781_78 temp781_75)
             (bvslt temp781_82 temp781_79)
             (bvslt temp781_86 temp781_83)
             (bvslt temp781_90 temp781_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_91 #x0000000000000000))
(assert (= var1322797 temp781_91))
(assert (= temp781_92 #x0000000000000000))
(assert (= temp781_93 temp781_92))
(assert (= temp781_94 (select ARGNAME_stride_NAMEEND_VAL temp781_93)))
(assert (= temp781_95 #x0000000000000001))
(assert (= temp781_96 temp781_95))
(assert (= temp781_97 (select ARGNAME_stride_NAMEEND_VAL temp781_96)))
(assert (= temp781_98 #x0000000000000002))
(assert (= temp781_99 temp781_98))
(assert (= temp781_100 (select ARGNAME_stride_NAMEEND_VAL temp781_99)))
(assert (= temp781_101 #x0000000000000003))
(assert (= temp781_102 temp781_101))
(assert (= temp781_103 (select ARGNAME_stride_NAMEEND_VAL temp781_102)))
(assert (= temp781_104 #x0000000000000004))
(assert (= temp781_105 temp781_104))
(assert (= temp781_106 (select ARGNAME_stride_NAMEEND_VAL temp781_105)))
(assert (= temp781_107 #x0000000000000005))
(assert (= temp781_108 temp781_107))
(assert (= temp781_109 (select ARGNAME_stride_NAMEEND_VAL temp781_108)))
(assert (= temp781_110 #x0000000000000000))
(assert (= temp781_111 #x0000000000000000))
(assert (= temp781_112 temp781_111))
(assert (= temp781_113 (select ARGNAME_stride_NAMEEND_VAL temp781_112)))
(assert (= temp781_114 #x0000000000000000))
(assert (= temp781_115 #x0000000000000001))
(assert (= temp781_116 temp781_115))
(assert (= temp781_117 (select ARGNAME_stride_NAMEEND_VAL temp781_116)))
(assert (= temp781_118 #x0000000000000000))
(assert (= temp781_119 #x0000000000000002))
(assert (= temp781_120 temp781_119))
(assert (= temp781_121 (select ARGNAME_stride_NAMEEND_VAL temp781_120)))
(assert (= temp781_122 #x0000000000000000))
(assert (= temp781_123 #x0000000000000003))
(assert (= temp781_124 temp781_123))
(assert (= temp781_125 (select ARGNAME_stride_NAMEEND_VAL temp781_124)))
(assert (= temp781_126 #x0000000000000000))
(assert (= temp781_127 #x0000000000000004))
(assert (= temp781_128 temp781_127))
(assert (= temp781_129 (select ARGNAME_stride_NAMEEND_VAL temp781_128)))
(assert (= temp781_130 #x0000000000000000))
(assert (= temp781_131 #x0000000000000005))
(assert (= temp781_132 temp781_131))
(assert (= temp781_133 (select ARGNAME_stride_NAMEEND_VAL temp781_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp781_113 temp781_110)
             (bvsle temp781_117 temp781_114)
             (bvsle temp781_121 temp781_118)
             (bvsle temp781_125 temp781_122)
             (bvsle temp781_129 temp781_126)
             (bvsle temp781_133 temp781_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_134 #x0000000000000000))
(assert (= var1322807 temp781_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_135 #x0000000000000001))
(assert (= var1322819 temp781_135))
(assert (= temp781_136 #x0000000000000000))
(assert (= var1310898 temp781_136))
(assert (= temp781_137 #x0000000000000000))
(assert (= temp781_138 temp781_137))
(assert (= temp781_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_138)))
(assert (= temp781_140 #x0000000000000001))
(assert (= temp781_141 temp781_140))
(assert (= temp781_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_141)))
(assert (= temp781_143 #x0000000000000002))
(assert (= temp781_144 temp781_143))
(assert (= temp781_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_144)))
(assert (= temp781_146 #x0000000000000003))
(assert (= temp781_147 temp781_146))
(assert (= temp781_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_147)))
(assert (= temp781_149 #x0000000000000004))
(assert (= temp781_150 temp781_149))
(assert (= temp781_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_150)))
(assert (= temp781_152 #x0000000000000005))
(assert (= temp781_153 temp781_152))
(assert (= temp781_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_153)))
(assert (= temp781_156 var1310898))
(assert (= temp781_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_156)))
(assert (= temp781_155 temp781_157))
(assert (= var1322852
   (ite (bvslt temp781_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_158 #x0000000000000000))
(assert (= var1322852 temp781_158))
(assert (= temp781_159 #x0000000000000000))
(assert (= var1310898 temp781_159))
(assert (= temp781_161 var1310898))
(assert (= temp781_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_161)))
(assert (= temp781_160 temp781_162))
(assert (= var1322874 (bvsmod temp781_160 ARGNAME_groups_NAMEEND)))
(assert (= temp781_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp781_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp781_164 #x0000000000000001))
(assert (= var1322875 temp781_164))
(assert (= temp781_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp781_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_166 #x0000000000000001))
(assert (= var1322895 temp781_166))
(assert (= temp781_167 #x0000000000000001))
(assert (= var1311786 temp781_167))
(assert (= temp781_168 #x0000000000000000))
(assert (= temp781_169 temp781_168))
(assert (= temp781_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp781_169)))
(assert (= temp781_171 #x0000000000000001))
(assert (= temp781_172 temp781_171))
(assert (= temp781_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp781_172)))
(assert (= temp781_174 #x0000000000000002))
(assert (= temp781_175 temp781_174))
(assert (= temp781_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp781_175)))
(assert (= temp781_177 #x0000000000000003))
(assert (= temp781_178 temp781_177))
(assert (= temp781_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp781_178)))
(assert (= temp781_180 #x0000000000000004))
(assert (= temp781_181 temp781_180))
(assert (= temp781_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp781_181)))
(assert (= temp781_183 #x0000000000000005))
(assert (= temp781_184 temp781_183))
(assert (= temp781_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp781_184)))
(assert (= temp781_186 #x0000000000000000))
(assert (= temp781_187
   (ite (bvslt var1311786 temp781_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp781_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp781_187)))
(assert (= var1322903 temp781_188))
(assert (bvslt (ite (bvslt var1311786 temp781_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp781_189 #x0000000000000001))
(assert (= var1311786 temp781_189))
(assert (= temp781_191 var1311786))
(assert (= temp781_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_191)))
(assert (= temp781_190 temp781_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp781_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp781_193 #x0000000000000001))
(assert (= var1322908 temp781_193))
(assert (= temp781_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp781_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_195 #x0000000000000001))
(assert (= var1322975 temp781_195))
(assert (= temp781_196 #x0000000000000000))
(assert (= var1310898 temp781_196))
(assert (= temp781_197 #x0000000000000000))
(assert (= temp781_198 temp781_197))
(assert (= temp781_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp781_198)))
(assert (= temp781_200 #x0000000000000001))
(assert (= temp781_201 temp781_200))
(assert (= temp781_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp781_201)))
(assert (= temp781_203 #x0000000000000002))
(assert (= temp781_204 temp781_203))
(assert (= temp781_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp781_204)))
(assert (= temp781_206 #x0000000000000003))
(assert (= temp781_207 temp781_206))
(assert (= temp781_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp781_207)))
(assert (= temp781_209 #x0000000000000004))
(assert (= temp781_210 temp781_209))
(assert (= temp781_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp781_210)))
(assert (= temp781_212 #x0000000000000005))
(assert (= temp781_213 temp781_212))
(assert (= temp781_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp781_213)))
(assert (= temp781_215 #x0000000000000000))
(assert (= temp781_216
   (ite (bvslt var1310898 temp781_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp781_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp781_216)))
(assert (= var1322977 temp781_217))
(assert (bvslt (ite (bvslt var1310898 temp781_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp781_218 #x0000000000000000))
(assert (= var1310898 temp781_218))
(assert (= temp781_220 var1310898))
(assert (= temp781_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp781_220)))
(assert (= temp781_219 temp781_221))
(assert (= var1322980
   (ite (= var1322977 temp781_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp781_222 #x0000000000000001))
(assert (= var1322980 temp781_222))
(assert (= temp781_223 #x0000000000000002))
(assert (= var1848169 temp781_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp781_225 #x0000000000000001))
(assert (= var1323065 temp781_225))
(assert (= temp781_226 #x0000000000000001))
(assert (= var3486735 temp781_226))
(assert (= temp781_227 #x0000000000000001))
(assert (= var3814415 temp781_227))
(assert (= temp781_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp781_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_229 #x0000000000000001))
(assert (= var79986 temp781_229))
(assert (= temp781_230 #x0000000000000001))
(assert (= var80116 temp781_230))
(assert (= var4796905 var80116))
(assert (= temp781_231 #x0000000000000000))
(assert (= var4784306 temp781_231))
(assert (= temp781_232 #x0000000000000000))
(assert (= temp781_233
   (ite (bvslt var4784306 temp781_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp781_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp781_233)))
(assert (= var4796924 temp781_234))
(assert (bvslt (ite (bvslt var4784306 temp781_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp781_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp781_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp781_236 #x0000000000000001))
(assert (= var4796925 temp781_236))
(assert (= temp781_237 #x0000000000000000))
(assert (= var4996927 temp781_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp781_238 #x0000000000000002))
(assert (= var5125763 temp781_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp781_239 #x0000000000000000))
(assert (= var5191324 temp781_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp781_241 #xffffffffffffffff))
(assert (= temp781_240 temp781_241))
(assert (= temp781_242 #x0000000000000001))
(assert (= var66602 temp781_242))
(assert (= temp781_243 #x0000000000000000))
(assert (= temp781_244
   (ite (bvslt var66602 temp781_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp781_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp781_244)))
(assert (= var80523 temp781_245))
(assert (bvslt (ite (bvslt var66602 temp781_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp781_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp781_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp781_247 #x0000000000000000))
(assert (= var80524 temp781_247))
(assert (= temp781_248 #x0000000000000001))
(assert (= var79986 temp781_248))
(model-add temp781_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp781_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp781_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






