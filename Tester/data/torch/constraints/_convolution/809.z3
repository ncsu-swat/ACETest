(declare-fun temp1076_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1076_2 () (_ BitVec 64))
(declare-fun temp1076_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1076_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1076_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1076_6 () (_ BitVec 64))
(declare-fun temp1076_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_8 () (_ BitVec 64))
(declare-fun temp1076_9 () (_ BitVec 64))
(declare-fun temp1076_10 () (_ BitVec 64))
(declare-fun temp1076_11 () (_ BitVec 64))
(declare-fun temp1076_12 () (_ BitVec 64))
(declare-fun temp1076_13 () (_ BitVec 64))
(declare-fun temp1076_14 () (_ BitVec 64))
(declare-fun temp1076_15 () (_ BitVec 64))
(declare-fun temp1076_16 () (_ BitVec 64))
(declare-fun temp1076_17 () (_ BitVec 64))
(declare-fun temp1076_18 () (_ BitVec 64))
(declare-fun temp1076_19 () (_ BitVec 64))
(declare-fun temp1076_20 () (_ BitVec 64))
(declare-fun temp1076_21 () (_ BitVec 64))
(declare-fun temp1076_22 () (_ BitVec 64))
(declare-fun temp1076_23 () (_ BitVec 64))
(declare-fun temp1076_24 () (_ BitVec 64))
(declare-fun temp1076_25 () (_ BitVec 64))
(declare-fun temp1076_26 () (_ BitVec 64))
(declare-fun temp1076_27 () (_ BitVec 64))
(declare-fun temp1076_28 () (_ BitVec 64))
(declare-fun temp1076_29 () (_ BitVec 64))
(declare-fun temp1076_30 () (_ BitVec 64))
(declare-fun temp1076_31 () (_ BitVec 64))
(declare-fun temp1076_32 () (_ BitVec 64))
(declare-fun temp1076_33 () (_ BitVec 64))
(declare-fun temp1076_34 () (_ BitVec 64))
(declare-fun temp1076_35 () (_ BitVec 64))
(declare-fun temp1076_36 () (_ BitVec 64))
(declare-fun temp1076_37 () (_ BitVec 64))
(declare-fun temp1076_38 () (_ BitVec 64))
(declare-fun temp1076_39 () (_ BitVec 64))
(declare-fun temp1076_40 () (_ BitVec 64))
(declare-fun temp1076_41 () (_ BitVec 64))
(declare-fun temp1076_42 () (_ BitVec 64))
(declare-fun temp1076_43 () (_ BitVec 64))
(declare-fun temp1076_44 () (_ BitVec 64))
(declare-fun temp1076_45 () (_ BitVec 64))
(declare-fun temp1076_46 () (_ BitVec 64))
(declare-fun temp1076_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1076_48 () (_ BitVec 64))
(declare-fun temp1076_49 () (_ BitVec 64))
(declare-fun temp1076_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_51 () (_ BitVec 64))
(declare-fun temp1076_52 () (_ BitVec 64))
(declare-fun temp1076_53 () (_ BitVec 64))
(declare-fun temp1076_54 () (_ BitVec 64))
(declare-fun temp1076_55 () (_ BitVec 64))
(declare-fun temp1076_56 () (_ BitVec 64))
(declare-fun temp1076_57 () (_ BitVec 64))
(declare-fun temp1076_58 () (_ BitVec 64))
(declare-fun temp1076_59 () (_ BitVec 64))
(declare-fun temp1076_60 () (_ BitVec 64))
(declare-fun temp1076_61 () (_ BitVec 64))
(declare-fun temp1076_62 () (_ BitVec 64))
(declare-fun temp1076_63 () (_ BitVec 64))
(declare-fun temp1076_64 () (_ BitVec 64))
(declare-fun temp1076_65 () (_ BitVec 64))
(declare-fun temp1076_66 () (_ BitVec 64))
(declare-fun temp1076_67 () (_ BitVec 64))
(declare-fun temp1076_68 () (_ BitVec 64))
(declare-fun temp1076_69 () (_ BitVec 64))
(declare-fun temp1076_70 () (_ BitVec 64))
(declare-fun temp1076_71 () (_ BitVec 64))
(declare-fun temp1076_72 () (_ BitVec 64))
(declare-fun temp1076_73 () (_ BitVec 64))
(declare-fun temp1076_74 () (_ BitVec 64))
(declare-fun temp1076_75 () (_ BitVec 64))
(declare-fun temp1076_76 () (_ BitVec 64))
(declare-fun temp1076_77 () (_ BitVec 64))
(declare-fun temp1076_78 () (_ BitVec 64))
(declare-fun temp1076_79 () (_ BitVec 64))
(declare-fun temp1076_80 () (_ BitVec 64))
(declare-fun temp1076_81 () (_ BitVec 64))
(declare-fun temp1076_82 () (_ BitVec 64))
(declare-fun temp1076_83 () (_ BitVec 64))
(declare-fun temp1076_84 () (_ BitVec 64))
(declare-fun temp1076_85 () (_ BitVec 64))
(declare-fun temp1076_86 () (_ BitVec 64))
(declare-fun temp1076_87 () (_ BitVec 64))
(declare-fun temp1076_88 () (_ BitVec 64))
(declare-fun temp1076_89 () (_ BitVec 64))
(declare-fun temp1076_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1076_91 () (_ BitVec 64))
(declare-fun temp1076_92 () (_ BitVec 64))
(declare-fun temp1076_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_94 () (_ BitVec 64))
(declare-fun temp1076_95 () (_ BitVec 64))
(declare-fun temp1076_96 () (_ BitVec 64))
(declare-fun temp1076_97 () (_ BitVec 64))
(declare-fun temp1076_98 () (_ BitVec 64))
(declare-fun temp1076_99 () (_ BitVec 64))
(declare-fun temp1076_100 () (_ BitVec 64))
(declare-fun temp1076_101 () (_ BitVec 64))
(declare-fun temp1076_102 () (_ BitVec 64))
(declare-fun temp1076_103 () (_ BitVec 64))
(declare-fun temp1076_104 () (_ BitVec 64))
(declare-fun temp1076_105 () (_ BitVec 64))
(declare-fun temp1076_106 () (_ BitVec 64))
(declare-fun temp1076_107 () (_ BitVec 64))
(declare-fun temp1076_108 () (_ BitVec 64))
(declare-fun temp1076_109 () (_ BitVec 64))
(declare-fun temp1076_110 () (_ BitVec 64))
(declare-fun temp1076_111 () (_ BitVec 64))
(declare-fun temp1076_112 () (_ BitVec 64))
(declare-fun temp1076_113 () (_ BitVec 64))
(declare-fun temp1076_114 () (_ BitVec 64))
(declare-fun temp1076_115 () (_ BitVec 64))
(declare-fun temp1076_116 () (_ BitVec 64))
(declare-fun temp1076_117 () (_ BitVec 64))
(declare-fun temp1076_118 () (_ BitVec 64))
(declare-fun temp1076_119 () (_ BitVec 64))
(declare-fun temp1076_120 () (_ BitVec 64))
(declare-fun temp1076_121 () (_ BitVec 64))
(declare-fun temp1076_122 () (_ BitVec 64))
(declare-fun temp1076_123 () (_ BitVec 64))
(declare-fun temp1076_124 () (_ BitVec 64))
(declare-fun temp1076_125 () (_ BitVec 64))
(declare-fun temp1076_126 () (_ BitVec 64))
(declare-fun temp1076_127 () (_ BitVec 64))
(declare-fun temp1076_128 () (_ BitVec 64))
(declare-fun temp1076_129 () (_ BitVec 64))
(declare-fun temp1076_130 () (_ BitVec 64))
(declare-fun temp1076_131 () (_ BitVec 64))
(declare-fun temp1076_132 () (_ BitVec 64))
(declare-fun temp1076_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1076_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1076_135 () (_ BitVec 64))
(declare-fun temp1076_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1076_137 () (_ BitVec 64))
(declare-fun temp1076_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_139 () (_ BitVec 64))
(declare-fun temp1076_140 () (_ BitVec 64))
(declare-fun temp1076_141 () (_ BitVec 64))
(declare-fun temp1076_142 () (_ BitVec 64))
(declare-fun temp1076_143 () (_ BitVec 64))
(declare-fun temp1076_144 () (_ BitVec 64))
(declare-fun temp1076_145 () (_ BitVec 64))
(declare-fun temp1076_146 () (_ BitVec 64))
(declare-fun temp1076_147 () (_ BitVec 64))
(declare-fun temp1076_148 () (_ BitVec 64))
(declare-fun temp1076_149 () (_ BitVec 64))
(declare-fun temp1076_150 () (_ BitVec 64))
(declare-fun temp1076_151 () (_ BitVec 64))
(declare-fun temp1076_152 () (_ BitVec 64))
(declare-fun temp1076_153 () (_ BitVec 64))
(declare-fun temp1076_154 () (_ BitVec 64))
(declare-fun temp1076_156 () (_ BitVec 64))
(declare-fun temp1076_157 () (_ BitVec 64))
(declare-fun temp1076_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1076_158 () (_ BitVec 64))
(declare-fun temp1076_159 () (_ BitVec 64))
(declare-fun temp1076_161 () (_ BitVec 64))
(declare-fun temp1076_162 () (_ BitVec 64))
(declare-fun temp1076_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1076_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1076_164 () (_ BitVec 64))
(declare-fun temp1076_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1076_166 () (_ BitVec 64))
(declare-fun temp1076_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1076_168 () (_ BitVec 64))
(declare-fun temp1076_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_170 () (_ BitVec 64))
(declare-fun temp1076_171 () (_ BitVec 64))
(declare-fun temp1076_172 () (_ BitVec 64))
(declare-fun temp1076_173 () (_ BitVec 64))
(declare-fun temp1076_174 () (_ BitVec 64))
(declare-fun temp1076_175 () (_ BitVec 64))
(declare-fun temp1076_176 () (_ BitVec 64))
(declare-fun temp1076_177 () (_ BitVec 64))
(declare-fun temp1076_178 () (_ BitVec 64))
(declare-fun temp1076_179 () (_ BitVec 64))
(declare-fun temp1076_180 () (_ BitVec 64))
(declare-fun temp1076_181 () (_ BitVec 64))
(declare-fun temp1076_182 () (_ BitVec 64))
(declare-fun temp1076_183 () (_ BitVec 64))
(declare-fun temp1076_184 () (_ BitVec 64))
(declare-fun temp1076_185 () (_ BitVec 64))
(declare-fun temp1076_186 () (_ BitVec 64))
(declare-fun temp1076_187 () (_ BitVec 64))
(declare-fun temp1076_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1076_189 () (_ BitVec 64))
(declare-fun temp1076_191 () (_ BitVec 64))
(declare-fun temp1076_192 () (_ BitVec 64))
(declare-fun temp1076_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1076_193 () (_ BitVec 64))
(declare-fun temp1076_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1076_195 () (_ BitVec 64))
(declare-fun temp1076_196 () (_ BitVec 64))
(declare-fun temp1076_197 () (_ BitVec 64))
(declare-fun temp1076_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_199 () (_ BitVec 64))
(declare-fun temp1076_200 () (_ BitVec 64))
(declare-fun temp1076_201 () (_ BitVec 64))
(declare-fun temp1076_202 () (_ BitVec 64))
(declare-fun temp1076_203 () (_ BitVec 64))
(declare-fun temp1076_204 () (_ BitVec 64))
(declare-fun temp1076_205 () (_ BitVec 64))
(declare-fun temp1076_206 () (_ BitVec 64))
(declare-fun temp1076_207 () (_ BitVec 64))
(declare-fun temp1076_208 () (_ BitVec 64))
(declare-fun temp1076_209 () (_ BitVec 64))
(declare-fun temp1076_210 () (_ BitVec 64))
(declare-fun temp1076_211 () (_ BitVec 64))
(declare-fun temp1076_212 () (_ BitVec 64))
(declare-fun temp1076_213 () (_ BitVec 64))
(declare-fun temp1076_214 () (_ BitVec 64))
(declare-fun temp1076_215 () (_ BitVec 64))
(declare-fun temp1076_216 () (_ BitVec 64))
(declare-fun temp1076_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1076_218 () (_ BitVec 64))
(declare-fun temp1076_220 () (_ BitVec 64))
(declare-fun temp1076_221 () (_ BitVec 64))
(declare-fun temp1076_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1076_222 () (_ BitVec 64))
(declare-fun temp1076_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1076_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1076_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1076_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1076_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1076_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1076_229 () (_ BitVec 64))
(declare-fun temp1076_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1076_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1076_232 () (_ BitVec 64))
(declare-fun temp1076_233 () (_ BitVec 64))
(declare-fun temp1076_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1076_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1076_236 () (_ BitVec 64))
(declare-fun temp1076_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1076_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1076_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1076_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1076_241 () (_ BitVec 64))
(declare-fun temp1076_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp1076_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp1076_244 () (_ BitVec 64))
(declare-fun temp1076_245 () (_ BitVec 64))
(declare-fun var7156500 () (_ BitVec 64))
(declare-fun var7156467 () (_ BitVec 64))
(declare-fun var7025031 () (_ BitVec 64))
(declare-fun var7025027 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1076_246 () (_ BitVec 64))
(assert (= temp1076_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1076_1)))
(assert (= temp1076_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1076_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_3 #x0000000000000000))
(assert (= var79869 temp1076_3))
(assert (= temp1076_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1076_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_5 #x0000000000000000))
(assert (= var79914 temp1076_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1076_6 #x0000000000000000))
(assert (= temp1076_7 temp1076_6))
(assert (= temp1076_8 (select ARGNAME_padding_NAMEEND_VAL temp1076_7)))
(assert (= temp1076_9 #x0000000000000001))
(assert (= temp1076_10 temp1076_9))
(assert (= temp1076_11 (select ARGNAME_padding_NAMEEND_VAL temp1076_10)))
(assert (= temp1076_12 #x0000000000000002))
(assert (= temp1076_13 temp1076_12))
(assert (= temp1076_14 (select ARGNAME_padding_NAMEEND_VAL temp1076_13)))
(assert (= temp1076_15 #x0000000000000003))
(assert (= temp1076_16 temp1076_15))
(assert (= temp1076_17 (select ARGNAME_padding_NAMEEND_VAL temp1076_16)))
(assert (= temp1076_18 #x0000000000000004))
(assert (= temp1076_19 temp1076_18))
(assert (= temp1076_20 (select ARGNAME_padding_NAMEEND_VAL temp1076_19)))
(assert (= temp1076_21 #x0000000000000005))
(assert (= temp1076_22 temp1076_21))
(assert (= temp1076_23 (select ARGNAME_padding_NAMEEND_VAL temp1076_22)))
(assert (= temp1076_24 #x0000000000000000))
(assert (= temp1076_25 #x0000000000000000))
(assert (= temp1076_26 temp1076_25))
(assert (= temp1076_27 (select ARGNAME_padding_NAMEEND_VAL temp1076_26)))
(assert (= temp1076_28 #x0000000000000000))
(assert (= temp1076_29 #x0000000000000001))
(assert (= temp1076_30 temp1076_29))
(assert (= temp1076_31 (select ARGNAME_padding_NAMEEND_VAL temp1076_30)))
(assert (= temp1076_32 #x0000000000000000))
(assert (= temp1076_33 #x0000000000000002))
(assert (= temp1076_34 temp1076_33))
(assert (= temp1076_35 (select ARGNAME_padding_NAMEEND_VAL temp1076_34)))
(assert (= temp1076_36 #x0000000000000000))
(assert (= temp1076_37 #x0000000000000003))
(assert (= temp1076_38 temp1076_37))
(assert (= temp1076_39 (select ARGNAME_padding_NAMEEND_VAL temp1076_38)))
(assert (= temp1076_40 #x0000000000000000))
(assert (= temp1076_41 #x0000000000000004))
(assert (= temp1076_42 temp1076_41))
(assert (= temp1076_43 (select ARGNAME_padding_NAMEEND_VAL temp1076_42)))
(assert (= temp1076_44 #x0000000000000000))
(assert (= temp1076_45 #x0000000000000005))
(assert (= temp1076_46 temp1076_45))
(assert (= temp1076_47 (select ARGNAME_padding_NAMEEND_VAL temp1076_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1076_27 temp1076_24)
             (bvslt temp1076_31 temp1076_28)
             (bvslt temp1076_35 temp1076_32)
             (bvslt temp1076_39 temp1076_36)
             (bvslt temp1076_43 temp1076_40)
             (bvslt temp1076_47 temp1076_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_48 #x0000000000000000))
(assert (= var1322786 temp1076_48))
(assert (= temp1076_49 #x0000000000000000))
(assert (= temp1076_50 temp1076_49))
(assert (= temp1076_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_50)))
(assert (= temp1076_52 #x0000000000000001))
(assert (= temp1076_53 temp1076_52))
(assert (= temp1076_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_53)))
(assert (= temp1076_55 #x0000000000000002))
(assert (= temp1076_56 temp1076_55))
(assert (= temp1076_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_56)))
(assert (= temp1076_58 #x0000000000000003))
(assert (= temp1076_59 temp1076_58))
(assert (= temp1076_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_59)))
(assert (= temp1076_61 #x0000000000000004))
(assert (= temp1076_62 temp1076_61))
(assert (= temp1076_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_62)))
(assert (= temp1076_64 #x0000000000000005))
(assert (= temp1076_65 temp1076_64))
(assert (= temp1076_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_65)))
(assert (= temp1076_67 #x0000000000000000))
(assert (= temp1076_68 #x0000000000000000))
(assert (= temp1076_69 temp1076_68))
(assert (= temp1076_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_69)))
(assert (= temp1076_71 #x0000000000000000))
(assert (= temp1076_72 #x0000000000000001))
(assert (= temp1076_73 temp1076_72))
(assert (= temp1076_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_73)))
(assert (= temp1076_75 #x0000000000000000))
(assert (= temp1076_76 #x0000000000000002))
(assert (= temp1076_77 temp1076_76))
(assert (= temp1076_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_77)))
(assert (= temp1076_79 #x0000000000000000))
(assert (= temp1076_80 #x0000000000000003))
(assert (= temp1076_81 temp1076_80))
(assert (= temp1076_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_81)))
(assert (= temp1076_83 #x0000000000000000))
(assert (= temp1076_84 #x0000000000000004))
(assert (= temp1076_85 temp1076_84))
(assert (= temp1076_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_85)))
(assert (= temp1076_87 #x0000000000000000))
(assert (= temp1076_88 #x0000000000000005))
(assert (= temp1076_89 temp1076_88))
(assert (= temp1076_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1076_70 temp1076_67)
             (bvslt temp1076_74 temp1076_71)
             (bvslt temp1076_78 temp1076_75)
             (bvslt temp1076_82 temp1076_79)
             (bvslt temp1076_86 temp1076_83)
             (bvslt temp1076_90 temp1076_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_91 #x0000000000000000))
(assert (= var1322797 temp1076_91))
(assert (= temp1076_92 #x0000000000000000))
(assert (= temp1076_93 temp1076_92))
(assert (= temp1076_94 (select ARGNAME_stride_NAMEEND_VAL temp1076_93)))
(assert (= temp1076_95 #x0000000000000001))
(assert (= temp1076_96 temp1076_95))
(assert (= temp1076_97 (select ARGNAME_stride_NAMEEND_VAL temp1076_96)))
(assert (= temp1076_98 #x0000000000000002))
(assert (= temp1076_99 temp1076_98))
(assert (= temp1076_100 (select ARGNAME_stride_NAMEEND_VAL temp1076_99)))
(assert (= temp1076_101 #x0000000000000003))
(assert (= temp1076_102 temp1076_101))
(assert (= temp1076_103 (select ARGNAME_stride_NAMEEND_VAL temp1076_102)))
(assert (= temp1076_104 #x0000000000000004))
(assert (= temp1076_105 temp1076_104))
(assert (= temp1076_106 (select ARGNAME_stride_NAMEEND_VAL temp1076_105)))
(assert (= temp1076_107 #x0000000000000005))
(assert (= temp1076_108 temp1076_107))
(assert (= temp1076_109 (select ARGNAME_stride_NAMEEND_VAL temp1076_108)))
(assert (= temp1076_110 #x0000000000000000))
(assert (= temp1076_111 #x0000000000000000))
(assert (= temp1076_112 temp1076_111))
(assert (= temp1076_113 (select ARGNAME_stride_NAMEEND_VAL temp1076_112)))
(assert (= temp1076_114 #x0000000000000000))
(assert (= temp1076_115 #x0000000000000001))
(assert (= temp1076_116 temp1076_115))
(assert (= temp1076_117 (select ARGNAME_stride_NAMEEND_VAL temp1076_116)))
(assert (= temp1076_118 #x0000000000000000))
(assert (= temp1076_119 #x0000000000000002))
(assert (= temp1076_120 temp1076_119))
(assert (= temp1076_121 (select ARGNAME_stride_NAMEEND_VAL temp1076_120)))
(assert (= temp1076_122 #x0000000000000000))
(assert (= temp1076_123 #x0000000000000003))
(assert (= temp1076_124 temp1076_123))
(assert (= temp1076_125 (select ARGNAME_stride_NAMEEND_VAL temp1076_124)))
(assert (= temp1076_126 #x0000000000000000))
(assert (= temp1076_127 #x0000000000000004))
(assert (= temp1076_128 temp1076_127))
(assert (= temp1076_129 (select ARGNAME_stride_NAMEEND_VAL temp1076_128)))
(assert (= temp1076_130 #x0000000000000000))
(assert (= temp1076_131 #x0000000000000005))
(assert (= temp1076_132 temp1076_131))
(assert (= temp1076_133 (select ARGNAME_stride_NAMEEND_VAL temp1076_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1076_113 temp1076_110)
             (bvsle temp1076_117 temp1076_114)
             (bvsle temp1076_121 temp1076_118)
             (bvsle temp1076_125 temp1076_122)
             (bvsle temp1076_129 temp1076_126)
             (bvsle temp1076_133 temp1076_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_134 #x0000000000000000))
(assert (= var1322807 temp1076_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_135 #x0000000000000001))
(assert (= var1322819 temp1076_135))
(assert (= temp1076_136 #x0000000000000000))
(assert (= var1310898 temp1076_136))
(assert (= temp1076_137 #x0000000000000000))
(assert (= temp1076_138 temp1076_137))
(assert (= temp1076_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_138)))
(assert (= temp1076_140 #x0000000000000001))
(assert (= temp1076_141 temp1076_140))
(assert (= temp1076_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_141)))
(assert (= temp1076_143 #x0000000000000002))
(assert (= temp1076_144 temp1076_143))
(assert (= temp1076_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_144)))
(assert (= temp1076_146 #x0000000000000003))
(assert (= temp1076_147 temp1076_146))
(assert (= temp1076_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_147)))
(assert (= temp1076_149 #x0000000000000004))
(assert (= temp1076_150 temp1076_149))
(assert (= temp1076_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_150)))
(assert (= temp1076_152 #x0000000000000005))
(assert (= temp1076_153 temp1076_152))
(assert (= temp1076_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_153)))
(assert (= temp1076_156 var1310898))
(assert (= temp1076_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_156)))
(assert (= temp1076_155 temp1076_157))
(assert (= var1322852
   (ite (bvslt temp1076_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_158 #x0000000000000000))
(assert (= var1322852 temp1076_158))
(assert (= temp1076_159 #x0000000000000000))
(assert (= var1310898 temp1076_159))
(assert (= temp1076_161 var1310898))
(assert (= temp1076_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_161)))
(assert (= temp1076_160 temp1076_162))
(assert (= var1322874 (bvsmod temp1076_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1076_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1076_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1076_164 #x0000000000000001))
(assert (= var1322875 temp1076_164))
(assert (= temp1076_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1076_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_166 #x0000000000000001))
(assert (= var1322895 temp1076_166))
(assert (= temp1076_167 #x0000000000000001))
(assert (= var1311786 temp1076_167))
(assert (= temp1076_168 #x0000000000000000))
(assert (= temp1076_169 temp1076_168))
(assert (= temp1076_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_169)))
(assert (= temp1076_171 #x0000000000000001))
(assert (= temp1076_172 temp1076_171))
(assert (= temp1076_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_172)))
(assert (= temp1076_174 #x0000000000000002))
(assert (= temp1076_175 temp1076_174))
(assert (= temp1076_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_175)))
(assert (= temp1076_177 #x0000000000000003))
(assert (= temp1076_178 temp1076_177))
(assert (= temp1076_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_178)))
(assert (= temp1076_180 #x0000000000000004))
(assert (= temp1076_181 temp1076_180))
(assert (= temp1076_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_181)))
(assert (= temp1076_183 #x0000000000000005))
(assert (= temp1076_184 temp1076_183))
(assert (= temp1076_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_184)))
(assert (= temp1076_186 #x0000000000000000))
(assert (= temp1076_187
   (ite (bvslt var1311786 temp1076_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1076_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_187)))
(assert (= var1322903 temp1076_188))
(assert (bvslt (ite (bvslt var1311786 temp1076_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1076_189 #x0000000000000001))
(assert (= var1311786 temp1076_189))
(assert (= temp1076_191 var1311786))
(assert (= temp1076_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_191)))
(assert (= temp1076_190 temp1076_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1076_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1076_193 #x0000000000000001))
(assert (= var1322908 temp1076_193))
(assert (= temp1076_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1076_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_195 #x0000000000000001))
(assert (= var1322975 temp1076_195))
(assert (= temp1076_196 #x0000000000000000))
(assert (= var1310898 temp1076_196))
(assert (= temp1076_197 #x0000000000000000))
(assert (= temp1076_198 temp1076_197))
(assert (= temp1076_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1076_198)))
(assert (= temp1076_200 #x0000000000000001))
(assert (= temp1076_201 temp1076_200))
(assert (= temp1076_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1076_201)))
(assert (= temp1076_203 #x0000000000000002))
(assert (= temp1076_204 temp1076_203))
(assert (= temp1076_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1076_204)))
(assert (= temp1076_206 #x0000000000000003))
(assert (= temp1076_207 temp1076_206))
(assert (= temp1076_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1076_207)))
(assert (= temp1076_209 #x0000000000000004))
(assert (= temp1076_210 temp1076_209))
(assert (= temp1076_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1076_210)))
(assert (= temp1076_212 #x0000000000000005))
(assert (= temp1076_213 temp1076_212))
(assert (= temp1076_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1076_213)))
(assert (= temp1076_215 #x0000000000000000))
(assert (= temp1076_216
   (ite (bvslt var1310898 temp1076_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1076_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1076_216)))
(assert (= var1322977 temp1076_217))
(assert (bvslt (ite (bvslt var1310898 temp1076_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1076_218 #x0000000000000000))
(assert (= var1310898 temp1076_218))
(assert (= temp1076_220 var1310898))
(assert (= temp1076_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_220)))
(assert (= temp1076_219 temp1076_221))
(assert (= var1322980
   (ite (= var1322977 temp1076_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1076_222 #x0000000000000001))
(assert (= var1322980 temp1076_222))
(assert (= temp1076_223 #x0000000000000002))
(assert (= var1848169 temp1076_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1076_225 #x0000000000000001))
(assert (= var1323065 temp1076_225))
(assert (= temp1076_226 #x0000000000000001))
(assert (= var3486735 temp1076_226))
(assert (= temp1076_227 #x0000000000000001))
(assert (= var3814415 temp1076_227))
(assert (= temp1076_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1076_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_229 #x0000000000000001))
(assert (= var79986 temp1076_229))
(assert (= temp1076_230 #x0000000000000001))
(assert (= var80116 temp1076_230))
(assert (= var4796905 var80116))
(assert (= temp1076_231 #x0000000000000000))
(assert (= var4784306 temp1076_231))
(assert (= temp1076_232 #x0000000000000000))
(assert (= temp1076_233
   (ite (bvslt var4784306 temp1076_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1076_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_233)))
(assert (= var4796924 temp1076_234))
(assert (bvslt (ite (bvslt var4784306 temp1076_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1076_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1076_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1076_236 #x0000000000000001))
(assert (= var4796925 temp1076_236))
(assert (= temp1076_237 #x0000000000000000))
(assert (= var4996927 temp1076_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1076_238 #x0000000000000002))
(assert (= var5125763 temp1076_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_239 #x0000000000000000))
(assert (= var5191324 temp1076_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1076_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1076_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_241 #x0000000000000001))
(assert (= var81342 temp1076_241))
(assert (= temp1076_242 #x0000000000000002))
(assert (= var5977731 temp1076_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_243 #x0000000000000000))
(assert (= var6043292 temp1076_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp1076_244 #x0000000000000001))
(assert (= var79986 temp1076_244))
(assert (= temp1076_245 #x0000000000000000))
(assert (= var7156500 temp1076_245))
(assert (= var7156467 var7156500))
(assert (= var7025031 var7156467))
(assert (= var7025027 var7025031))
(assert (= var81597 var7025027))
(assert (= temp1076_246 #x0000000000000000))
(assert (= var81597 temp1076_246))
(model-add temp1076_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1076_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1076_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






