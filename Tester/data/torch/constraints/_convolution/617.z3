(declare-fun temp820_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp820_2 () (_ BitVec 64))
(declare-fun temp820_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp820_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp820_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp820_6 () (_ BitVec 64))
(declare-fun temp820_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp820_8 () (_ BitVec 64))
(declare-fun temp820_9 () (_ BitVec 64))
(declare-fun temp820_10 () (_ BitVec 64))
(declare-fun temp820_11 () (_ BitVec 64))
(declare-fun temp820_12 () (_ BitVec 64))
(declare-fun temp820_13 () (_ BitVec 64))
(declare-fun temp820_14 () (_ BitVec 64))
(declare-fun temp820_15 () (_ BitVec 64))
(declare-fun temp820_16 () (_ BitVec 64))
(declare-fun temp820_17 () (_ BitVec 64))
(declare-fun temp820_18 () (_ BitVec 64))
(declare-fun temp820_19 () (_ BitVec 64))
(declare-fun temp820_20 () (_ BitVec 64))
(declare-fun temp820_21 () (_ BitVec 64))
(declare-fun temp820_22 () (_ BitVec 64))
(declare-fun temp820_23 () (_ BitVec 64))
(declare-fun temp820_24 () (_ BitVec 64))
(declare-fun temp820_25 () (_ BitVec 64))
(declare-fun temp820_26 () (_ BitVec 64))
(declare-fun temp820_27 () (_ BitVec 64))
(declare-fun temp820_28 () (_ BitVec 64))
(declare-fun temp820_29 () (_ BitVec 64))
(declare-fun temp820_30 () (_ BitVec 64))
(declare-fun temp820_31 () (_ BitVec 64))
(declare-fun temp820_32 () (_ BitVec 64))
(declare-fun temp820_33 () (_ BitVec 64))
(declare-fun temp820_34 () (_ BitVec 64))
(declare-fun temp820_35 () (_ BitVec 64))
(declare-fun temp820_36 () (_ BitVec 64))
(declare-fun temp820_37 () (_ BitVec 64))
(declare-fun temp820_38 () (_ BitVec 64))
(declare-fun temp820_39 () (_ BitVec 64))
(declare-fun temp820_40 () (_ BitVec 64))
(declare-fun temp820_41 () (_ BitVec 64))
(declare-fun temp820_42 () (_ BitVec 64))
(declare-fun temp820_43 () (_ BitVec 64))
(declare-fun temp820_44 () (_ BitVec 64))
(declare-fun temp820_45 () (_ BitVec 64))
(declare-fun temp820_46 () (_ BitVec 64))
(declare-fun temp820_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp820_48 () (_ BitVec 64))
(declare-fun temp820_49 () (_ BitVec 64))
(declare-fun temp820_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp820_51 () (_ BitVec 64))
(declare-fun temp820_52 () (_ BitVec 64))
(declare-fun temp820_53 () (_ BitVec 64))
(declare-fun temp820_54 () (_ BitVec 64))
(declare-fun temp820_55 () (_ BitVec 64))
(declare-fun temp820_56 () (_ BitVec 64))
(declare-fun temp820_57 () (_ BitVec 64))
(declare-fun temp820_58 () (_ BitVec 64))
(declare-fun temp820_59 () (_ BitVec 64))
(declare-fun temp820_60 () (_ BitVec 64))
(declare-fun temp820_61 () (_ BitVec 64))
(declare-fun temp820_62 () (_ BitVec 64))
(declare-fun temp820_63 () (_ BitVec 64))
(declare-fun temp820_64 () (_ BitVec 64))
(declare-fun temp820_65 () (_ BitVec 64))
(declare-fun temp820_66 () (_ BitVec 64))
(declare-fun temp820_67 () (_ BitVec 64))
(declare-fun temp820_68 () (_ BitVec 64))
(declare-fun temp820_69 () (_ BitVec 64))
(declare-fun temp820_70 () (_ BitVec 64))
(declare-fun temp820_71 () (_ BitVec 64))
(declare-fun temp820_72 () (_ BitVec 64))
(declare-fun temp820_73 () (_ BitVec 64))
(declare-fun temp820_74 () (_ BitVec 64))
(declare-fun temp820_75 () (_ BitVec 64))
(declare-fun temp820_76 () (_ BitVec 64))
(declare-fun temp820_77 () (_ BitVec 64))
(declare-fun temp820_78 () (_ BitVec 64))
(declare-fun temp820_79 () (_ BitVec 64))
(declare-fun temp820_80 () (_ BitVec 64))
(declare-fun temp820_81 () (_ BitVec 64))
(declare-fun temp820_82 () (_ BitVec 64))
(declare-fun temp820_83 () (_ BitVec 64))
(declare-fun temp820_84 () (_ BitVec 64))
(declare-fun temp820_85 () (_ BitVec 64))
(declare-fun temp820_86 () (_ BitVec 64))
(declare-fun temp820_87 () (_ BitVec 64))
(declare-fun temp820_88 () (_ BitVec 64))
(declare-fun temp820_89 () (_ BitVec 64))
(declare-fun temp820_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp820_91 () (_ BitVec 64))
(declare-fun temp820_92 () (_ BitVec 64))
(declare-fun temp820_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp820_94 () (_ BitVec 64))
(declare-fun temp820_95 () (_ BitVec 64))
(declare-fun temp820_96 () (_ BitVec 64))
(declare-fun temp820_97 () (_ BitVec 64))
(declare-fun temp820_98 () (_ BitVec 64))
(declare-fun temp820_99 () (_ BitVec 64))
(declare-fun temp820_100 () (_ BitVec 64))
(declare-fun temp820_101 () (_ BitVec 64))
(declare-fun temp820_102 () (_ BitVec 64))
(declare-fun temp820_103 () (_ BitVec 64))
(declare-fun temp820_104 () (_ BitVec 64))
(declare-fun temp820_105 () (_ BitVec 64))
(declare-fun temp820_106 () (_ BitVec 64))
(declare-fun temp820_107 () (_ BitVec 64))
(declare-fun temp820_108 () (_ BitVec 64))
(declare-fun temp820_109 () (_ BitVec 64))
(declare-fun temp820_110 () (_ BitVec 64))
(declare-fun temp820_111 () (_ BitVec 64))
(declare-fun temp820_112 () (_ BitVec 64))
(declare-fun temp820_113 () (_ BitVec 64))
(declare-fun temp820_114 () (_ BitVec 64))
(declare-fun temp820_115 () (_ BitVec 64))
(declare-fun temp820_116 () (_ BitVec 64))
(declare-fun temp820_117 () (_ BitVec 64))
(declare-fun temp820_118 () (_ BitVec 64))
(declare-fun temp820_119 () (_ BitVec 64))
(declare-fun temp820_120 () (_ BitVec 64))
(declare-fun temp820_121 () (_ BitVec 64))
(declare-fun temp820_122 () (_ BitVec 64))
(declare-fun temp820_123 () (_ BitVec 64))
(declare-fun temp820_124 () (_ BitVec 64))
(declare-fun temp820_125 () (_ BitVec 64))
(declare-fun temp820_126 () (_ BitVec 64))
(declare-fun temp820_127 () (_ BitVec 64))
(declare-fun temp820_128 () (_ BitVec 64))
(declare-fun temp820_129 () (_ BitVec 64))
(declare-fun temp820_130 () (_ BitVec 64))
(declare-fun temp820_131 () (_ BitVec 64))
(declare-fun temp820_132 () (_ BitVec 64))
(declare-fun temp820_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp820_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp820_135 () (_ BitVec 64))
(declare-fun temp820_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp820_137 () (_ BitVec 64))
(declare-fun temp820_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp820_139 () (_ BitVec 64))
(declare-fun temp820_140 () (_ BitVec 64))
(declare-fun temp820_141 () (_ BitVec 64))
(declare-fun temp820_142 () (_ BitVec 64))
(declare-fun temp820_143 () (_ BitVec 64))
(declare-fun temp820_144 () (_ BitVec 64))
(declare-fun temp820_145 () (_ BitVec 64))
(declare-fun temp820_146 () (_ BitVec 64))
(declare-fun temp820_147 () (_ BitVec 64))
(declare-fun temp820_148 () (_ BitVec 64))
(declare-fun temp820_149 () (_ BitVec 64))
(declare-fun temp820_150 () (_ BitVec 64))
(declare-fun temp820_151 () (_ BitVec 64))
(declare-fun temp820_152 () (_ BitVec 64))
(declare-fun temp820_153 () (_ BitVec 64))
(declare-fun temp820_154 () (_ BitVec 64))
(declare-fun temp820_156 () (_ BitVec 64))
(declare-fun temp820_157 () (_ BitVec 64))
(declare-fun temp820_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp820_158 () (_ BitVec 64))
(declare-fun temp820_159 () (_ BitVec 64))
(declare-fun temp820_161 () (_ BitVec 64))
(declare-fun temp820_162 () (_ BitVec 64))
(declare-fun temp820_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp820_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp820_164 () (_ BitVec 64))
(declare-fun temp820_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp820_166 () (_ BitVec 64))
(declare-fun temp820_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp820_168 () (_ BitVec 64))
(declare-fun temp820_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp820_170 () (_ BitVec 64))
(declare-fun temp820_171 () (_ BitVec 64))
(declare-fun temp820_172 () (_ BitVec 64))
(declare-fun temp820_173 () (_ BitVec 64))
(declare-fun temp820_174 () (_ BitVec 64))
(declare-fun temp820_175 () (_ BitVec 64))
(declare-fun temp820_176 () (_ BitVec 64))
(declare-fun temp820_177 () (_ BitVec 64))
(declare-fun temp820_178 () (_ BitVec 64))
(declare-fun temp820_179 () (_ BitVec 64))
(declare-fun temp820_180 () (_ BitVec 64))
(declare-fun temp820_181 () (_ BitVec 64))
(declare-fun temp820_182 () (_ BitVec 64))
(declare-fun temp820_183 () (_ BitVec 64))
(declare-fun temp820_184 () (_ BitVec 64))
(declare-fun temp820_185 () (_ BitVec 64))
(declare-fun temp820_186 () (_ BitVec 64))
(declare-fun temp820_187 () (_ BitVec 64))
(declare-fun temp820_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp820_189 () (_ BitVec 64))
(declare-fun temp820_191 () (_ BitVec 64))
(declare-fun temp820_192 () (_ BitVec 64))
(declare-fun temp820_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp820_193 () (_ BitVec 64))
(declare-fun temp820_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp820_195 () (_ BitVec 64))
(declare-fun temp820_196 () (_ BitVec 64))
(declare-fun temp820_197 () (_ BitVec 64))
(declare-fun temp820_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp820_199 () (_ BitVec 64))
(declare-fun temp820_200 () (_ BitVec 64))
(declare-fun temp820_201 () (_ BitVec 64))
(declare-fun temp820_202 () (_ BitVec 64))
(declare-fun temp820_203 () (_ BitVec 64))
(declare-fun temp820_204 () (_ BitVec 64))
(declare-fun temp820_205 () (_ BitVec 64))
(declare-fun temp820_206 () (_ BitVec 64))
(declare-fun temp820_207 () (_ BitVec 64))
(declare-fun temp820_208 () (_ BitVec 64))
(declare-fun temp820_209 () (_ BitVec 64))
(declare-fun temp820_210 () (_ BitVec 64))
(declare-fun temp820_211 () (_ BitVec 64))
(declare-fun temp820_212 () (_ BitVec 64))
(declare-fun temp820_213 () (_ BitVec 64))
(declare-fun temp820_214 () (_ BitVec 64))
(declare-fun temp820_215 () (_ BitVec 64))
(declare-fun temp820_216 () (_ BitVec 64))
(declare-fun temp820_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp820_218 () (_ BitVec 64))
(declare-fun temp820_220 () (_ BitVec 64))
(declare-fun temp820_221 () (_ BitVec 64))
(declare-fun temp820_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp820_222 () (_ BitVec 64))
(declare-fun temp820_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp820_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp820_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp820_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp820_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp820_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp820_229 () (_ BitVec 64))
(declare-fun temp820_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp820_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp820_232 () (_ BitVec 64))
(declare-fun temp820_233 () (_ BitVec 64))
(declare-fun temp820_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp820_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp820_236 () (_ BitVec 64))
(declare-fun temp820_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp820_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp820_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp820_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80747 () (_ BitVec 64))
(declare-fun temp820_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80749 () (_ BitVec 64))
(declare-fun temp820_242 () (_ BitVec 64))
(declare-fun temp820_243 () (_ BitVec 64))
(declare-fun var7090964 () (_ BitVec 64))
(declare-fun var7090931 () (_ BitVec 64))
(declare-fun var6959495 () (_ BitVec 64))
(declare-fun var6959491 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp820_244 () (_ BitVec 64))
(assert (= temp820_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp820_1)))
(assert (= temp820_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp820_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_3 #x0000000000000000))
(assert (= var79869 temp820_3))
(assert (= temp820_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp820_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_5 #x0000000000000000))
(assert (= var79914 temp820_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp820_6 #x0000000000000000))
(assert (= temp820_7 temp820_6))
(assert (= temp820_8 (select ARGNAME_padding_NAMEEND_VAL temp820_7)))
(assert (= temp820_9 #x0000000000000001))
(assert (= temp820_10 temp820_9))
(assert (= temp820_11 (select ARGNAME_padding_NAMEEND_VAL temp820_10)))
(assert (= temp820_12 #x0000000000000002))
(assert (= temp820_13 temp820_12))
(assert (= temp820_14 (select ARGNAME_padding_NAMEEND_VAL temp820_13)))
(assert (= temp820_15 #x0000000000000003))
(assert (= temp820_16 temp820_15))
(assert (= temp820_17 (select ARGNAME_padding_NAMEEND_VAL temp820_16)))
(assert (= temp820_18 #x0000000000000004))
(assert (= temp820_19 temp820_18))
(assert (= temp820_20 (select ARGNAME_padding_NAMEEND_VAL temp820_19)))
(assert (= temp820_21 #x0000000000000005))
(assert (= temp820_22 temp820_21))
(assert (= temp820_23 (select ARGNAME_padding_NAMEEND_VAL temp820_22)))
(assert (= temp820_24 #x0000000000000000))
(assert (= temp820_25 #x0000000000000000))
(assert (= temp820_26 temp820_25))
(assert (= temp820_27 (select ARGNAME_padding_NAMEEND_VAL temp820_26)))
(assert (= temp820_28 #x0000000000000000))
(assert (= temp820_29 #x0000000000000001))
(assert (= temp820_30 temp820_29))
(assert (= temp820_31 (select ARGNAME_padding_NAMEEND_VAL temp820_30)))
(assert (= temp820_32 #x0000000000000000))
(assert (= temp820_33 #x0000000000000002))
(assert (= temp820_34 temp820_33))
(assert (= temp820_35 (select ARGNAME_padding_NAMEEND_VAL temp820_34)))
(assert (= temp820_36 #x0000000000000000))
(assert (= temp820_37 #x0000000000000003))
(assert (= temp820_38 temp820_37))
(assert (= temp820_39 (select ARGNAME_padding_NAMEEND_VAL temp820_38)))
(assert (= temp820_40 #x0000000000000000))
(assert (= temp820_41 #x0000000000000004))
(assert (= temp820_42 temp820_41))
(assert (= temp820_43 (select ARGNAME_padding_NAMEEND_VAL temp820_42)))
(assert (= temp820_44 #x0000000000000000))
(assert (= temp820_45 #x0000000000000005))
(assert (= temp820_46 temp820_45))
(assert (= temp820_47 (select ARGNAME_padding_NAMEEND_VAL temp820_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp820_27 temp820_24)
             (bvslt temp820_31 temp820_28)
             (bvslt temp820_35 temp820_32)
             (bvslt temp820_39 temp820_36)
             (bvslt temp820_43 temp820_40)
             (bvslt temp820_47 temp820_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_48 #x0000000000000000))
(assert (= var1322786 temp820_48))
(assert (= temp820_49 #x0000000000000000))
(assert (= temp820_50 temp820_49))
(assert (= temp820_51 (select ARGNAME_output_padding_NAMEEND_VAL temp820_50)))
(assert (= temp820_52 #x0000000000000001))
(assert (= temp820_53 temp820_52))
(assert (= temp820_54 (select ARGNAME_output_padding_NAMEEND_VAL temp820_53)))
(assert (= temp820_55 #x0000000000000002))
(assert (= temp820_56 temp820_55))
(assert (= temp820_57 (select ARGNAME_output_padding_NAMEEND_VAL temp820_56)))
(assert (= temp820_58 #x0000000000000003))
(assert (= temp820_59 temp820_58))
(assert (= temp820_60 (select ARGNAME_output_padding_NAMEEND_VAL temp820_59)))
(assert (= temp820_61 #x0000000000000004))
(assert (= temp820_62 temp820_61))
(assert (= temp820_63 (select ARGNAME_output_padding_NAMEEND_VAL temp820_62)))
(assert (= temp820_64 #x0000000000000005))
(assert (= temp820_65 temp820_64))
(assert (= temp820_66 (select ARGNAME_output_padding_NAMEEND_VAL temp820_65)))
(assert (= temp820_67 #x0000000000000000))
(assert (= temp820_68 #x0000000000000000))
(assert (= temp820_69 temp820_68))
(assert (= temp820_70 (select ARGNAME_output_padding_NAMEEND_VAL temp820_69)))
(assert (= temp820_71 #x0000000000000000))
(assert (= temp820_72 #x0000000000000001))
(assert (= temp820_73 temp820_72))
(assert (= temp820_74 (select ARGNAME_output_padding_NAMEEND_VAL temp820_73)))
(assert (= temp820_75 #x0000000000000000))
(assert (= temp820_76 #x0000000000000002))
(assert (= temp820_77 temp820_76))
(assert (= temp820_78 (select ARGNAME_output_padding_NAMEEND_VAL temp820_77)))
(assert (= temp820_79 #x0000000000000000))
(assert (= temp820_80 #x0000000000000003))
(assert (= temp820_81 temp820_80))
(assert (= temp820_82 (select ARGNAME_output_padding_NAMEEND_VAL temp820_81)))
(assert (= temp820_83 #x0000000000000000))
(assert (= temp820_84 #x0000000000000004))
(assert (= temp820_85 temp820_84))
(assert (= temp820_86 (select ARGNAME_output_padding_NAMEEND_VAL temp820_85)))
(assert (= temp820_87 #x0000000000000000))
(assert (= temp820_88 #x0000000000000005))
(assert (= temp820_89 temp820_88))
(assert (= temp820_90 (select ARGNAME_output_padding_NAMEEND_VAL temp820_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp820_70 temp820_67)
             (bvslt temp820_74 temp820_71)
             (bvslt temp820_78 temp820_75)
             (bvslt temp820_82 temp820_79)
             (bvslt temp820_86 temp820_83)
             (bvslt temp820_90 temp820_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_91 #x0000000000000000))
(assert (= var1322797 temp820_91))
(assert (= temp820_92 #x0000000000000000))
(assert (= temp820_93 temp820_92))
(assert (= temp820_94 (select ARGNAME_stride_NAMEEND_VAL temp820_93)))
(assert (= temp820_95 #x0000000000000001))
(assert (= temp820_96 temp820_95))
(assert (= temp820_97 (select ARGNAME_stride_NAMEEND_VAL temp820_96)))
(assert (= temp820_98 #x0000000000000002))
(assert (= temp820_99 temp820_98))
(assert (= temp820_100 (select ARGNAME_stride_NAMEEND_VAL temp820_99)))
(assert (= temp820_101 #x0000000000000003))
(assert (= temp820_102 temp820_101))
(assert (= temp820_103 (select ARGNAME_stride_NAMEEND_VAL temp820_102)))
(assert (= temp820_104 #x0000000000000004))
(assert (= temp820_105 temp820_104))
(assert (= temp820_106 (select ARGNAME_stride_NAMEEND_VAL temp820_105)))
(assert (= temp820_107 #x0000000000000005))
(assert (= temp820_108 temp820_107))
(assert (= temp820_109 (select ARGNAME_stride_NAMEEND_VAL temp820_108)))
(assert (= temp820_110 #x0000000000000000))
(assert (= temp820_111 #x0000000000000000))
(assert (= temp820_112 temp820_111))
(assert (= temp820_113 (select ARGNAME_stride_NAMEEND_VAL temp820_112)))
(assert (= temp820_114 #x0000000000000000))
(assert (= temp820_115 #x0000000000000001))
(assert (= temp820_116 temp820_115))
(assert (= temp820_117 (select ARGNAME_stride_NAMEEND_VAL temp820_116)))
(assert (= temp820_118 #x0000000000000000))
(assert (= temp820_119 #x0000000000000002))
(assert (= temp820_120 temp820_119))
(assert (= temp820_121 (select ARGNAME_stride_NAMEEND_VAL temp820_120)))
(assert (= temp820_122 #x0000000000000000))
(assert (= temp820_123 #x0000000000000003))
(assert (= temp820_124 temp820_123))
(assert (= temp820_125 (select ARGNAME_stride_NAMEEND_VAL temp820_124)))
(assert (= temp820_126 #x0000000000000000))
(assert (= temp820_127 #x0000000000000004))
(assert (= temp820_128 temp820_127))
(assert (= temp820_129 (select ARGNAME_stride_NAMEEND_VAL temp820_128)))
(assert (= temp820_130 #x0000000000000000))
(assert (= temp820_131 #x0000000000000005))
(assert (= temp820_132 temp820_131))
(assert (= temp820_133 (select ARGNAME_stride_NAMEEND_VAL temp820_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp820_113 temp820_110)
             (bvsle temp820_117 temp820_114)
             (bvsle temp820_121 temp820_118)
             (bvsle temp820_125 temp820_122)
             (bvsle temp820_129 temp820_126)
             (bvsle temp820_133 temp820_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_134 #x0000000000000000))
(assert (= var1322807 temp820_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_135 #x0000000000000001))
(assert (= var1322819 temp820_135))
(assert (= temp820_136 #x0000000000000000))
(assert (= var1310898 temp820_136))
(assert (= temp820_137 #x0000000000000000))
(assert (= temp820_138 temp820_137))
(assert (= temp820_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_138)))
(assert (= temp820_140 #x0000000000000001))
(assert (= temp820_141 temp820_140))
(assert (= temp820_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_141)))
(assert (= temp820_143 #x0000000000000002))
(assert (= temp820_144 temp820_143))
(assert (= temp820_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_144)))
(assert (= temp820_146 #x0000000000000003))
(assert (= temp820_147 temp820_146))
(assert (= temp820_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_147)))
(assert (= temp820_149 #x0000000000000004))
(assert (= temp820_150 temp820_149))
(assert (= temp820_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_150)))
(assert (= temp820_152 #x0000000000000005))
(assert (= temp820_153 temp820_152))
(assert (= temp820_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_153)))
(assert (= temp820_156 var1310898))
(assert (= temp820_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_156)))
(assert (= temp820_155 temp820_157))
(assert (= var1322852
   (ite (bvslt temp820_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_158 #x0000000000000000))
(assert (= var1322852 temp820_158))
(assert (= temp820_159 #x0000000000000000))
(assert (= var1310898 temp820_159))
(assert (= temp820_161 var1310898))
(assert (= temp820_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_161)))
(assert (= temp820_160 temp820_162))
(assert (= var1322874 (bvsmod temp820_160 ARGNAME_groups_NAMEEND)))
(assert (= temp820_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp820_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp820_164 #x0000000000000001))
(assert (= var1322875 temp820_164))
(assert (= temp820_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp820_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_166 #x0000000000000001))
(assert (= var1322895 temp820_166))
(assert (= temp820_167 #x0000000000000001))
(assert (= var1311786 temp820_167))
(assert (= temp820_168 #x0000000000000000))
(assert (= temp820_169 temp820_168))
(assert (= temp820_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp820_169)))
(assert (= temp820_171 #x0000000000000001))
(assert (= temp820_172 temp820_171))
(assert (= temp820_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp820_172)))
(assert (= temp820_174 #x0000000000000002))
(assert (= temp820_175 temp820_174))
(assert (= temp820_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp820_175)))
(assert (= temp820_177 #x0000000000000003))
(assert (= temp820_178 temp820_177))
(assert (= temp820_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp820_178)))
(assert (= temp820_180 #x0000000000000004))
(assert (= temp820_181 temp820_180))
(assert (= temp820_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp820_181)))
(assert (= temp820_183 #x0000000000000005))
(assert (= temp820_184 temp820_183))
(assert (= temp820_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp820_184)))
(assert (= temp820_186 #x0000000000000000))
(assert (= temp820_187
   (ite (bvslt var1311786 temp820_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp820_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp820_187)))
(assert (= var1322903 temp820_188))
(assert (bvslt (ite (bvslt var1311786 temp820_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp820_189 #x0000000000000001))
(assert (= var1311786 temp820_189))
(assert (= temp820_191 var1311786))
(assert (= temp820_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_191)))
(assert (= temp820_190 temp820_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp820_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp820_193 #x0000000000000001))
(assert (= var1322908 temp820_193))
(assert (= temp820_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp820_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_195 #x0000000000000001))
(assert (= var1322975 temp820_195))
(assert (= temp820_196 #x0000000000000000))
(assert (= var1310898 temp820_196))
(assert (= temp820_197 #x0000000000000000))
(assert (= temp820_198 temp820_197))
(assert (= temp820_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp820_198)))
(assert (= temp820_200 #x0000000000000001))
(assert (= temp820_201 temp820_200))
(assert (= temp820_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp820_201)))
(assert (= temp820_203 #x0000000000000002))
(assert (= temp820_204 temp820_203))
(assert (= temp820_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp820_204)))
(assert (= temp820_206 #x0000000000000003))
(assert (= temp820_207 temp820_206))
(assert (= temp820_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp820_207)))
(assert (= temp820_209 #x0000000000000004))
(assert (= temp820_210 temp820_209))
(assert (= temp820_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp820_210)))
(assert (= temp820_212 #x0000000000000005))
(assert (= temp820_213 temp820_212))
(assert (= temp820_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp820_213)))
(assert (= temp820_215 #x0000000000000000))
(assert (= temp820_216
   (ite (bvslt var1310898 temp820_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp820_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp820_216)))
(assert (= var1322977 temp820_217))
(assert (bvslt (ite (bvslt var1310898 temp820_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp820_218 #x0000000000000000))
(assert (= var1310898 temp820_218))
(assert (= temp820_220 var1310898))
(assert (= temp820_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp820_220)))
(assert (= temp820_219 temp820_221))
(assert (= var1322980
   (ite (= var1322977 temp820_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp820_222 #x0000000000000001))
(assert (= var1322980 temp820_222))
(assert (= temp820_223 #x0000000000000002))
(assert (= var1848169 temp820_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp820_225 #x0000000000000001))
(assert (= var1323065 temp820_225))
(assert (= temp820_226 #x0000000000000001))
(assert (= var3486735 temp820_226))
(assert (= temp820_227 #x0000000000000001))
(assert (= var3814415 temp820_227))
(assert (= temp820_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp820_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_229 #x0000000000000001))
(assert (= var79986 temp820_229))
(assert (= temp820_230 #x0000000000000001))
(assert (= var80116 temp820_230))
(assert (= var4796905 var80116))
(assert (= temp820_231 #x0000000000000000))
(assert (= var4784306 temp820_231))
(assert (= temp820_232 #x0000000000000000))
(assert (= temp820_233
   (ite (bvslt var4784306 temp820_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp820_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp820_233)))
(assert (= var4796924 temp820_234))
(assert (bvslt (ite (bvslt var4784306 temp820_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp820_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp820_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp820_236 #x0000000000000001))
(assert (= var4796925 temp820_236))
(assert (= temp820_237 #x0000000000000000))
(assert (= var4996927 temp820_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp820_238 #x0000000000000002))
(assert (= var5125763 temp820_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_239 #x0000000000000000))
(assert (= var5191324 temp820_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp820_240 #x0000000000000000))
(assert (= var80747
   (ite (distinct ARGNAME_benchmark_NAMEEND temp820_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_241 #x0000000000000000))
(assert (= var80749
   (ite (distinct ARGNAME_deterministic_NAMEEND temp820_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp820_242 #x0000000000000001))
(assert (= var79986 temp820_242))
(assert (= temp820_243 #x0000000000000000))
(assert (= var7090964 temp820_243))
(assert (= var7090931 var7090964))
(assert (= var6959495 var7090931))
(assert (= var6959491 var6959495))
(assert (= var81597 var6959491))
(assert (= temp820_244 #x0000000000000000))
(assert (= var81597 temp820_244))
(model-add temp820_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp820_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp820_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






