(declare-fun temp79_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp79_2 () (_ BitVec 64))
(declare-fun temp79_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp79_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp79_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp79_6 () (_ BitVec 64))
(declare-fun temp79_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_8 () (_ BitVec 64))
(declare-fun temp79_9 () (_ BitVec 64))
(declare-fun temp79_10 () (_ BitVec 64))
(declare-fun temp79_11 () (_ BitVec 64))
(declare-fun temp79_12 () (_ BitVec 64))
(declare-fun temp79_13 () (_ BitVec 64))
(declare-fun temp79_14 () (_ BitVec 64))
(declare-fun temp79_15 () (_ BitVec 64))
(declare-fun temp79_16 () (_ BitVec 64))
(declare-fun temp79_17 () (_ BitVec 64))
(declare-fun temp79_18 () (_ BitVec 64))
(declare-fun temp79_19 () (_ BitVec 64))
(declare-fun temp79_20 () (_ BitVec 64))
(declare-fun temp79_21 () (_ BitVec 64))
(declare-fun temp79_22 () (_ BitVec 64))
(declare-fun temp79_23 () (_ BitVec 64))
(declare-fun temp79_24 () (_ BitVec 64))
(declare-fun temp79_25 () (_ BitVec 64))
(declare-fun temp79_26 () (_ BitVec 64))
(declare-fun temp79_27 () (_ BitVec 64))
(declare-fun temp79_28 () (_ BitVec 64))
(declare-fun temp79_29 () (_ BitVec 64))
(declare-fun temp79_30 () (_ BitVec 64))
(declare-fun temp79_31 () (_ BitVec 64))
(declare-fun temp79_32 () (_ BitVec 64))
(declare-fun temp79_33 () (_ BitVec 64))
(declare-fun temp79_34 () (_ BitVec 64))
(declare-fun temp79_35 () (_ BitVec 64))
(declare-fun temp79_36 () (_ BitVec 64))
(declare-fun temp79_37 () (_ BitVec 64))
(declare-fun temp79_38 () (_ BitVec 64))
(declare-fun temp79_39 () (_ BitVec 64))
(declare-fun temp79_40 () (_ BitVec 64))
(declare-fun temp79_41 () (_ BitVec 64))
(declare-fun temp79_42 () (_ BitVec 64))
(declare-fun temp79_43 () (_ BitVec 64))
(declare-fun temp79_44 () (_ BitVec 64))
(declare-fun temp79_45 () (_ BitVec 64))
(declare-fun temp79_46 () (_ BitVec 64))
(declare-fun temp79_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp79_48 () (_ BitVec 64))
(declare-fun temp79_49 () (_ BitVec 64))
(declare-fun temp79_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_51 () (_ BitVec 64))
(declare-fun temp79_52 () (_ BitVec 64))
(declare-fun temp79_53 () (_ BitVec 64))
(declare-fun temp79_54 () (_ BitVec 64))
(declare-fun temp79_55 () (_ BitVec 64))
(declare-fun temp79_56 () (_ BitVec 64))
(declare-fun temp79_57 () (_ BitVec 64))
(declare-fun temp79_58 () (_ BitVec 64))
(declare-fun temp79_59 () (_ BitVec 64))
(declare-fun temp79_60 () (_ BitVec 64))
(declare-fun temp79_61 () (_ BitVec 64))
(declare-fun temp79_62 () (_ BitVec 64))
(declare-fun temp79_63 () (_ BitVec 64))
(declare-fun temp79_64 () (_ BitVec 64))
(declare-fun temp79_65 () (_ BitVec 64))
(declare-fun temp79_66 () (_ BitVec 64))
(declare-fun temp79_67 () (_ BitVec 64))
(declare-fun temp79_68 () (_ BitVec 64))
(declare-fun temp79_69 () (_ BitVec 64))
(declare-fun temp79_70 () (_ BitVec 64))
(declare-fun temp79_71 () (_ BitVec 64))
(declare-fun temp79_72 () (_ BitVec 64))
(declare-fun temp79_73 () (_ BitVec 64))
(declare-fun temp79_74 () (_ BitVec 64))
(declare-fun temp79_75 () (_ BitVec 64))
(declare-fun temp79_76 () (_ BitVec 64))
(declare-fun temp79_77 () (_ BitVec 64))
(declare-fun temp79_78 () (_ BitVec 64))
(declare-fun temp79_79 () (_ BitVec 64))
(declare-fun temp79_80 () (_ BitVec 64))
(declare-fun temp79_81 () (_ BitVec 64))
(declare-fun temp79_82 () (_ BitVec 64))
(declare-fun temp79_83 () (_ BitVec 64))
(declare-fun temp79_84 () (_ BitVec 64))
(declare-fun temp79_85 () (_ BitVec 64))
(declare-fun temp79_86 () (_ BitVec 64))
(declare-fun temp79_87 () (_ BitVec 64))
(declare-fun temp79_88 () (_ BitVec 64))
(declare-fun temp79_89 () (_ BitVec 64))
(declare-fun temp79_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp79_91 () (_ BitVec 64))
(declare-fun temp79_92 () (_ BitVec 64))
(declare-fun temp79_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_94 () (_ BitVec 64))
(declare-fun temp79_95 () (_ BitVec 64))
(declare-fun temp79_96 () (_ BitVec 64))
(declare-fun temp79_97 () (_ BitVec 64))
(declare-fun temp79_98 () (_ BitVec 64))
(declare-fun temp79_99 () (_ BitVec 64))
(declare-fun temp79_100 () (_ BitVec 64))
(declare-fun temp79_101 () (_ BitVec 64))
(declare-fun temp79_102 () (_ BitVec 64))
(declare-fun temp79_103 () (_ BitVec 64))
(declare-fun temp79_104 () (_ BitVec 64))
(declare-fun temp79_105 () (_ BitVec 64))
(declare-fun temp79_106 () (_ BitVec 64))
(declare-fun temp79_107 () (_ BitVec 64))
(declare-fun temp79_108 () (_ BitVec 64))
(declare-fun temp79_109 () (_ BitVec 64))
(declare-fun temp79_110 () (_ BitVec 64))
(declare-fun temp79_111 () (_ BitVec 64))
(declare-fun temp79_112 () (_ BitVec 64))
(declare-fun temp79_113 () (_ BitVec 64))
(declare-fun temp79_114 () (_ BitVec 64))
(declare-fun temp79_115 () (_ BitVec 64))
(declare-fun temp79_116 () (_ BitVec 64))
(declare-fun temp79_117 () (_ BitVec 64))
(declare-fun temp79_118 () (_ BitVec 64))
(declare-fun temp79_119 () (_ BitVec 64))
(declare-fun temp79_120 () (_ BitVec 64))
(declare-fun temp79_121 () (_ BitVec 64))
(declare-fun temp79_122 () (_ BitVec 64))
(declare-fun temp79_123 () (_ BitVec 64))
(declare-fun temp79_124 () (_ BitVec 64))
(declare-fun temp79_125 () (_ BitVec 64))
(declare-fun temp79_126 () (_ BitVec 64))
(declare-fun temp79_127 () (_ BitVec 64))
(declare-fun temp79_128 () (_ BitVec 64))
(declare-fun temp79_129 () (_ BitVec 64))
(declare-fun temp79_130 () (_ BitVec 64))
(declare-fun temp79_131 () (_ BitVec 64))
(declare-fun temp79_132 () (_ BitVec 64))
(declare-fun temp79_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp79_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp79_135 () (_ BitVec 64))
(declare-fun temp79_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp79_137 () (_ BitVec 64))
(declare-fun temp79_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_139 () (_ BitVec 64))
(declare-fun temp79_140 () (_ BitVec 64))
(declare-fun temp79_141 () (_ BitVec 64))
(declare-fun temp79_142 () (_ BitVec 64))
(declare-fun temp79_143 () (_ BitVec 64))
(declare-fun temp79_144 () (_ BitVec 64))
(declare-fun temp79_145 () (_ BitVec 64))
(declare-fun temp79_146 () (_ BitVec 64))
(declare-fun temp79_147 () (_ BitVec 64))
(declare-fun temp79_148 () (_ BitVec 64))
(declare-fun temp79_149 () (_ BitVec 64))
(declare-fun temp79_150 () (_ BitVec 64))
(declare-fun temp79_151 () (_ BitVec 64))
(declare-fun temp79_152 () (_ BitVec 64))
(declare-fun temp79_153 () (_ BitVec 64))
(declare-fun temp79_154 () (_ BitVec 64))
(declare-fun temp79_156 () (_ BitVec 64))
(declare-fun temp79_157 () (_ BitVec 64))
(declare-fun temp79_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp79_158 () (_ BitVec 64))
(declare-fun temp79_159 () (_ BitVec 64))
(declare-fun temp79_161 () (_ BitVec 64))
(declare-fun temp79_162 () (_ BitVec 64))
(declare-fun temp79_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp79_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp79_164 () (_ BitVec 64))
(declare-fun temp79_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp79_166 () (_ BitVec 64))
(declare-fun temp79_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp79_168 () (_ BitVec 64))
(declare-fun temp79_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_170 () (_ BitVec 64))
(declare-fun temp79_171 () (_ BitVec 64))
(declare-fun temp79_172 () (_ BitVec 64))
(declare-fun temp79_173 () (_ BitVec 64))
(declare-fun temp79_174 () (_ BitVec 64))
(declare-fun temp79_175 () (_ BitVec 64))
(declare-fun temp79_176 () (_ BitVec 64))
(declare-fun temp79_177 () (_ BitVec 64))
(declare-fun temp79_178 () (_ BitVec 64))
(declare-fun temp79_179 () (_ BitVec 64))
(declare-fun temp79_180 () (_ BitVec 64))
(declare-fun temp79_181 () (_ BitVec 64))
(declare-fun temp79_182 () (_ BitVec 64))
(declare-fun temp79_183 () (_ BitVec 64))
(declare-fun temp79_184 () (_ BitVec 64))
(declare-fun temp79_185 () (_ BitVec 64))
(declare-fun temp79_186 () (_ BitVec 64))
(declare-fun temp79_187 () (_ BitVec 64))
(declare-fun temp79_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp79_189 () (_ BitVec 64))
(declare-fun temp79_191 () (_ BitVec 64))
(declare-fun temp79_192 () (_ BitVec 64))
(declare-fun temp79_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp79_193 () (_ BitVec 64))
(declare-fun temp79_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp79_195 () (_ BitVec 64))
(declare-fun temp79_196 () (_ BitVec 64))
(declare-fun temp79_197 () (_ BitVec 64))
(declare-fun temp79_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_199 () (_ BitVec 64))
(declare-fun temp79_200 () (_ BitVec 64))
(declare-fun temp79_201 () (_ BitVec 64))
(declare-fun temp79_202 () (_ BitVec 64))
(declare-fun temp79_203 () (_ BitVec 64))
(declare-fun temp79_204 () (_ BitVec 64))
(declare-fun temp79_205 () (_ BitVec 64))
(declare-fun temp79_206 () (_ BitVec 64))
(declare-fun temp79_207 () (_ BitVec 64))
(declare-fun temp79_208 () (_ BitVec 64))
(declare-fun temp79_209 () (_ BitVec 64))
(declare-fun temp79_210 () (_ BitVec 64))
(declare-fun temp79_211 () (_ BitVec 64))
(declare-fun temp79_212 () (_ BitVec 64))
(declare-fun temp79_213 () (_ BitVec 64))
(declare-fun temp79_214 () (_ BitVec 64))
(declare-fun temp79_215 () (_ BitVec 64))
(declare-fun temp79_216 () (_ BitVec 64))
(declare-fun temp79_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp79_218 () (_ BitVec 64))
(declare-fun temp79_220 () (_ BitVec 64))
(declare-fun temp79_221 () (_ BitVec 64))
(declare-fun temp79_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp79_222 () (_ BitVec 64))
(declare-fun temp79_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp79_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp79_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp79_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp79_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp79_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp79_229 () (_ BitVec 64))
(declare-fun temp79_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp79_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp79_232 () (_ BitVec 64))
(declare-fun temp79_233 () (_ BitVec 64))
(declare-fun temp79_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp79_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp79_236 () (_ BitVec 64))
(declare-fun temp79_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp79_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp79_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp79_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp79_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp79_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp79_243 () (_ BitVec 64))
(declare-fun temp79_244 () (_ BitVec 64))
(declare-fun var7353108 () (_ BitVec 64))
(declare-fun var7353075 () (_ BitVec 64))
(declare-fun var7221639 () (_ BitVec 64))
(declare-fun var7221635 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp79_245 () (_ BitVec 64))
(assert (= temp79_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp79_1)))
(assert (= temp79_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp79_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_3 #x0000000000000000))
(assert (= var79869 temp79_3))
(assert (= temp79_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp79_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_5 #x0000000000000000))
(assert (= var79914 temp79_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp79_6 #x0000000000000000))
(assert (= temp79_7 temp79_6))
(assert (= temp79_8 (select ARGNAME_padding_NAMEEND_VAL temp79_7)))
(assert (= temp79_9 #x0000000000000001))
(assert (= temp79_10 temp79_9))
(assert (= temp79_11 (select ARGNAME_padding_NAMEEND_VAL temp79_10)))
(assert (= temp79_12 #x0000000000000002))
(assert (= temp79_13 temp79_12))
(assert (= temp79_14 (select ARGNAME_padding_NAMEEND_VAL temp79_13)))
(assert (= temp79_15 #x0000000000000003))
(assert (= temp79_16 temp79_15))
(assert (= temp79_17 (select ARGNAME_padding_NAMEEND_VAL temp79_16)))
(assert (= temp79_18 #x0000000000000004))
(assert (= temp79_19 temp79_18))
(assert (= temp79_20 (select ARGNAME_padding_NAMEEND_VAL temp79_19)))
(assert (= temp79_21 #x0000000000000005))
(assert (= temp79_22 temp79_21))
(assert (= temp79_23 (select ARGNAME_padding_NAMEEND_VAL temp79_22)))
(assert (= temp79_24 #x0000000000000000))
(assert (= temp79_25 #x0000000000000000))
(assert (= temp79_26 temp79_25))
(assert (= temp79_27 (select ARGNAME_padding_NAMEEND_VAL temp79_26)))
(assert (= temp79_28 #x0000000000000000))
(assert (= temp79_29 #x0000000000000001))
(assert (= temp79_30 temp79_29))
(assert (= temp79_31 (select ARGNAME_padding_NAMEEND_VAL temp79_30)))
(assert (= temp79_32 #x0000000000000000))
(assert (= temp79_33 #x0000000000000002))
(assert (= temp79_34 temp79_33))
(assert (= temp79_35 (select ARGNAME_padding_NAMEEND_VAL temp79_34)))
(assert (= temp79_36 #x0000000000000000))
(assert (= temp79_37 #x0000000000000003))
(assert (= temp79_38 temp79_37))
(assert (= temp79_39 (select ARGNAME_padding_NAMEEND_VAL temp79_38)))
(assert (= temp79_40 #x0000000000000000))
(assert (= temp79_41 #x0000000000000004))
(assert (= temp79_42 temp79_41))
(assert (= temp79_43 (select ARGNAME_padding_NAMEEND_VAL temp79_42)))
(assert (= temp79_44 #x0000000000000000))
(assert (= temp79_45 #x0000000000000005))
(assert (= temp79_46 temp79_45))
(assert (= temp79_47 (select ARGNAME_padding_NAMEEND_VAL temp79_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp79_27 temp79_24)
             (bvslt temp79_31 temp79_28)
             (bvslt temp79_35 temp79_32)
             (bvslt temp79_39 temp79_36)
             (bvslt temp79_43 temp79_40)
             (bvslt temp79_47 temp79_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_48 #x0000000000000000))
(assert (= var1322786 temp79_48))
(assert (= temp79_49 #x0000000000000000))
(assert (= temp79_50 temp79_49))
(assert (= temp79_51 (select ARGNAME_output_padding_NAMEEND_VAL temp79_50)))
(assert (= temp79_52 #x0000000000000001))
(assert (= temp79_53 temp79_52))
(assert (= temp79_54 (select ARGNAME_output_padding_NAMEEND_VAL temp79_53)))
(assert (= temp79_55 #x0000000000000002))
(assert (= temp79_56 temp79_55))
(assert (= temp79_57 (select ARGNAME_output_padding_NAMEEND_VAL temp79_56)))
(assert (= temp79_58 #x0000000000000003))
(assert (= temp79_59 temp79_58))
(assert (= temp79_60 (select ARGNAME_output_padding_NAMEEND_VAL temp79_59)))
(assert (= temp79_61 #x0000000000000004))
(assert (= temp79_62 temp79_61))
(assert (= temp79_63 (select ARGNAME_output_padding_NAMEEND_VAL temp79_62)))
(assert (= temp79_64 #x0000000000000005))
(assert (= temp79_65 temp79_64))
(assert (= temp79_66 (select ARGNAME_output_padding_NAMEEND_VAL temp79_65)))
(assert (= temp79_67 #x0000000000000000))
(assert (= temp79_68 #x0000000000000000))
(assert (= temp79_69 temp79_68))
(assert (= temp79_70 (select ARGNAME_output_padding_NAMEEND_VAL temp79_69)))
(assert (= temp79_71 #x0000000000000000))
(assert (= temp79_72 #x0000000000000001))
(assert (= temp79_73 temp79_72))
(assert (= temp79_74 (select ARGNAME_output_padding_NAMEEND_VAL temp79_73)))
(assert (= temp79_75 #x0000000000000000))
(assert (= temp79_76 #x0000000000000002))
(assert (= temp79_77 temp79_76))
(assert (= temp79_78 (select ARGNAME_output_padding_NAMEEND_VAL temp79_77)))
(assert (= temp79_79 #x0000000000000000))
(assert (= temp79_80 #x0000000000000003))
(assert (= temp79_81 temp79_80))
(assert (= temp79_82 (select ARGNAME_output_padding_NAMEEND_VAL temp79_81)))
(assert (= temp79_83 #x0000000000000000))
(assert (= temp79_84 #x0000000000000004))
(assert (= temp79_85 temp79_84))
(assert (= temp79_86 (select ARGNAME_output_padding_NAMEEND_VAL temp79_85)))
(assert (= temp79_87 #x0000000000000000))
(assert (= temp79_88 #x0000000000000005))
(assert (= temp79_89 temp79_88))
(assert (= temp79_90 (select ARGNAME_output_padding_NAMEEND_VAL temp79_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp79_70 temp79_67)
             (bvslt temp79_74 temp79_71)
             (bvslt temp79_78 temp79_75)
             (bvslt temp79_82 temp79_79)
             (bvslt temp79_86 temp79_83)
             (bvslt temp79_90 temp79_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_91 #x0000000000000000))
(assert (= var1322797 temp79_91))
(assert (= temp79_92 #x0000000000000000))
(assert (= temp79_93 temp79_92))
(assert (= temp79_94 (select ARGNAME_stride_NAMEEND_VAL temp79_93)))
(assert (= temp79_95 #x0000000000000001))
(assert (= temp79_96 temp79_95))
(assert (= temp79_97 (select ARGNAME_stride_NAMEEND_VAL temp79_96)))
(assert (= temp79_98 #x0000000000000002))
(assert (= temp79_99 temp79_98))
(assert (= temp79_100 (select ARGNAME_stride_NAMEEND_VAL temp79_99)))
(assert (= temp79_101 #x0000000000000003))
(assert (= temp79_102 temp79_101))
(assert (= temp79_103 (select ARGNAME_stride_NAMEEND_VAL temp79_102)))
(assert (= temp79_104 #x0000000000000004))
(assert (= temp79_105 temp79_104))
(assert (= temp79_106 (select ARGNAME_stride_NAMEEND_VAL temp79_105)))
(assert (= temp79_107 #x0000000000000005))
(assert (= temp79_108 temp79_107))
(assert (= temp79_109 (select ARGNAME_stride_NAMEEND_VAL temp79_108)))
(assert (= temp79_110 #x0000000000000000))
(assert (= temp79_111 #x0000000000000000))
(assert (= temp79_112 temp79_111))
(assert (= temp79_113 (select ARGNAME_stride_NAMEEND_VAL temp79_112)))
(assert (= temp79_114 #x0000000000000000))
(assert (= temp79_115 #x0000000000000001))
(assert (= temp79_116 temp79_115))
(assert (= temp79_117 (select ARGNAME_stride_NAMEEND_VAL temp79_116)))
(assert (= temp79_118 #x0000000000000000))
(assert (= temp79_119 #x0000000000000002))
(assert (= temp79_120 temp79_119))
(assert (= temp79_121 (select ARGNAME_stride_NAMEEND_VAL temp79_120)))
(assert (= temp79_122 #x0000000000000000))
(assert (= temp79_123 #x0000000000000003))
(assert (= temp79_124 temp79_123))
(assert (= temp79_125 (select ARGNAME_stride_NAMEEND_VAL temp79_124)))
(assert (= temp79_126 #x0000000000000000))
(assert (= temp79_127 #x0000000000000004))
(assert (= temp79_128 temp79_127))
(assert (= temp79_129 (select ARGNAME_stride_NAMEEND_VAL temp79_128)))
(assert (= temp79_130 #x0000000000000000))
(assert (= temp79_131 #x0000000000000005))
(assert (= temp79_132 temp79_131))
(assert (= temp79_133 (select ARGNAME_stride_NAMEEND_VAL temp79_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp79_113 temp79_110)
             (bvsle temp79_117 temp79_114)
             (bvsle temp79_121 temp79_118)
             (bvsle temp79_125 temp79_122)
             (bvsle temp79_129 temp79_126)
             (bvsle temp79_133 temp79_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_134 #x0000000000000000))
(assert (= var1322807 temp79_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_135 #x0000000000000001))
(assert (= var1322819 temp79_135))
(assert (= temp79_136 #x0000000000000000))
(assert (= var1310898 temp79_136))
(assert (= temp79_137 #x0000000000000000))
(assert (= temp79_138 temp79_137))
(assert (= temp79_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_138)))
(assert (= temp79_140 #x0000000000000001))
(assert (= temp79_141 temp79_140))
(assert (= temp79_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_141)))
(assert (= temp79_143 #x0000000000000002))
(assert (= temp79_144 temp79_143))
(assert (= temp79_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_144)))
(assert (= temp79_146 #x0000000000000003))
(assert (= temp79_147 temp79_146))
(assert (= temp79_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_147)))
(assert (= temp79_149 #x0000000000000004))
(assert (= temp79_150 temp79_149))
(assert (= temp79_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_150)))
(assert (= temp79_152 #x0000000000000005))
(assert (= temp79_153 temp79_152))
(assert (= temp79_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_153)))
(assert (= temp79_156 var1310898))
(assert (= temp79_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_156)))
(assert (= temp79_155 temp79_157))
(assert (= var1322852
   (ite (bvslt temp79_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_158 #x0000000000000000))
(assert (= var1322852 temp79_158))
(assert (= temp79_159 #x0000000000000000))
(assert (= var1310898 temp79_159))
(assert (= temp79_161 var1310898))
(assert (= temp79_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_161)))
(assert (= temp79_160 temp79_162))
(assert (= var1322874 (bvsmod temp79_160 ARGNAME_groups_NAMEEND)))
(assert (= temp79_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp79_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_164 #x0000000000000001))
(assert (= var1322875 temp79_164))
(assert (= temp79_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp79_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_166 #x0000000000000001))
(assert (= var1322895 temp79_166))
(assert (= temp79_167 #x0000000000000001))
(assert (= var1311786 temp79_167))
(assert (= temp79_168 #x0000000000000000))
(assert (= temp79_169 temp79_168))
(assert (= temp79_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp79_169)))
(assert (= temp79_171 #x0000000000000001))
(assert (= temp79_172 temp79_171))
(assert (= temp79_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp79_172)))
(assert (= temp79_174 #x0000000000000002))
(assert (= temp79_175 temp79_174))
(assert (= temp79_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp79_175)))
(assert (= temp79_177 #x0000000000000003))
(assert (= temp79_178 temp79_177))
(assert (= temp79_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp79_178)))
(assert (= temp79_180 #x0000000000000004))
(assert (= temp79_181 temp79_180))
(assert (= temp79_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp79_181)))
(assert (= temp79_183 #x0000000000000005))
(assert (= temp79_184 temp79_183))
(assert (= temp79_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp79_184)))
(assert (= temp79_186 #x0000000000000000))
(assert (= temp79_187
   (ite (bvslt var1311786 temp79_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp79_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp79_187)))
(assert (= var1322903 temp79_188))
(assert (bvslt (ite (bvslt var1311786 temp79_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp79_189 #x0000000000000001))
(assert (= var1311786 temp79_189))
(assert (= temp79_191 var1311786))
(assert (= temp79_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_191)))
(assert (= temp79_190 temp79_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp79_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_193 #x0000000000000001))
(assert (= var1322908 temp79_193))
(assert (= temp79_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp79_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_195 #x0000000000000001))
(assert (= var1322975 temp79_195))
(assert (= temp79_196 #x0000000000000000))
(assert (= var1310898 temp79_196))
(assert (= temp79_197 #x0000000000000000))
(assert (= temp79_198 temp79_197))
(assert (= temp79_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp79_198)))
(assert (= temp79_200 #x0000000000000001))
(assert (= temp79_201 temp79_200))
(assert (= temp79_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp79_201)))
(assert (= temp79_203 #x0000000000000002))
(assert (= temp79_204 temp79_203))
(assert (= temp79_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp79_204)))
(assert (= temp79_206 #x0000000000000003))
(assert (= temp79_207 temp79_206))
(assert (= temp79_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp79_207)))
(assert (= temp79_209 #x0000000000000004))
(assert (= temp79_210 temp79_209))
(assert (= temp79_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp79_210)))
(assert (= temp79_212 #x0000000000000005))
(assert (= temp79_213 temp79_212))
(assert (= temp79_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp79_213)))
(assert (= temp79_215 #x0000000000000000))
(assert (= temp79_216
   (ite (bvslt var1310898 temp79_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp79_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp79_216)))
(assert (= var1322977 temp79_217))
(assert (bvslt (ite (bvslt var1310898 temp79_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp79_218 #x0000000000000000))
(assert (= var1310898 temp79_218))
(assert (= temp79_220 var1310898))
(assert (= temp79_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_220)))
(assert (= temp79_219 temp79_221))
(assert (= var1322980
   (ite (= var1322977 temp79_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_222 #x0000000000000001))
(assert (= var1322980 temp79_222))
(assert (= temp79_223 #x0000000000000002))
(assert (= var1848169 temp79_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp79_225 #x0000000000000001))
(assert (= var1323065 temp79_225))
(assert (= temp79_226 #x0000000000000001))
(assert (= var3486735 temp79_226))
(assert (= temp79_227 #x0000000000000001))
(assert (= var3814415 temp79_227))
(assert (= temp79_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp79_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_229 #x0000000000000001))
(assert (= var79986 temp79_229))
(assert (= temp79_230 #x0000000000000001))
(assert (= var80116 temp79_230))
(assert (= var4796905 var80116))
(assert (= temp79_231 #x0000000000000000))
(assert (= var4784306 temp79_231))
(assert (= temp79_232 #x0000000000000000))
(assert (= temp79_233
   (ite (bvslt var4784306 temp79_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp79_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp79_233)))
(assert (= var4796924 temp79_234))
(assert (bvslt (ite (bvslt var4784306 temp79_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp79_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp79_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_236 #x0000000000000001))
(assert (= var4796925 temp79_236))
(assert (= temp79_237 #x0000000000000000))
(assert (= var4996927 temp79_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp79_238 #x0000000000000002))
(assert (= var5125763 temp79_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_239 #x0000000000000000))
(assert (= var5191324 temp79_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp79_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp79_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp79_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp79_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_243 #x0000000000000001))
(assert (= var79986 temp79_243))
(assert (= temp79_244 #x0000000000000000))
(assert (= var7353108 temp79_244))
(assert (= var7353075 var7353108))
(assert (= var7221639 var7353075))
(assert (= var7221635 var7221639))
(assert (= var81597 var7221635))
(assert (= temp79_245 #x0000000000000000))
(assert (= var81597 temp79_245))
(model-add temp79_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp79_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp79_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






