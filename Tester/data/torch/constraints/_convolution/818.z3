(declare-fun temp1088_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1088_2 () (_ BitVec 64))
(declare-fun temp1088_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1088_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1088_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1088_6 () (_ BitVec 64))
(declare-fun temp1088_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1088_8 () (_ BitVec 64))
(declare-fun temp1088_9 () (_ BitVec 64))
(declare-fun temp1088_10 () (_ BitVec 64))
(declare-fun temp1088_11 () (_ BitVec 64))
(declare-fun temp1088_12 () (_ BitVec 64))
(declare-fun temp1088_13 () (_ BitVec 64))
(declare-fun temp1088_14 () (_ BitVec 64))
(declare-fun temp1088_15 () (_ BitVec 64))
(declare-fun temp1088_16 () (_ BitVec 64))
(declare-fun temp1088_17 () (_ BitVec 64))
(declare-fun temp1088_18 () (_ BitVec 64))
(declare-fun temp1088_19 () (_ BitVec 64))
(declare-fun temp1088_20 () (_ BitVec 64))
(declare-fun temp1088_21 () (_ BitVec 64))
(declare-fun temp1088_22 () (_ BitVec 64))
(declare-fun temp1088_23 () (_ BitVec 64))
(declare-fun temp1088_24 () (_ BitVec 64))
(declare-fun temp1088_25 () (_ BitVec 64))
(declare-fun temp1088_26 () (_ BitVec 64))
(declare-fun temp1088_27 () (_ BitVec 64))
(declare-fun temp1088_28 () (_ BitVec 64))
(declare-fun temp1088_29 () (_ BitVec 64))
(declare-fun temp1088_30 () (_ BitVec 64))
(declare-fun temp1088_31 () (_ BitVec 64))
(declare-fun temp1088_32 () (_ BitVec 64))
(declare-fun temp1088_33 () (_ BitVec 64))
(declare-fun temp1088_34 () (_ BitVec 64))
(declare-fun temp1088_35 () (_ BitVec 64))
(declare-fun temp1088_36 () (_ BitVec 64))
(declare-fun temp1088_37 () (_ BitVec 64))
(declare-fun temp1088_38 () (_ BitVec 64))
(declare-fun temp1088_39 () (_ BitVec 64))
(declare-fun temp1088_40 () (_ BitVec 64))
(declare-fun temp1088_41 () (_ BitVec 64))
(declare-fun temp1088_42 () (_ BitVec 64))
(declare-fun temp1088_43 () (_ BitVec 64))
(declare-fun temp1088_44 () (_ BitVec 64))
(declare-fun temp1088_45 () (_ BitVec 64))
(declare-fun temp1088_46 () (_ BitVec 64))
(declare-fun temp1088_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1088_48 () (_ BitVec 64))
(declare-fun temp1088_49 () (_ BitVec 64))
(declare-fun temp1088_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1088_51 () (_ BitVec 64))
(declare-fun temp1088_52 () (_ BitVec 64))
(declare-fun temp1088_53 () (_ BitVec 64))
(declare-fun temp1088_54 () (_ BitVec 64))
(declare-fun temp1088_55 () (_ BitVec 64))
(declare-fun temp1088_56 () (_ BitVec 64))
(declare-fun temp1088_57 () (_ BitVec 64))
(declare-fun temp1088_58 () (_ BitVec 64))
(declare-fun temp1088_59 () (_ BitVec 64))
(declare-fun temp1088_60 () (_ BitVec 64))
(declare-fun temp1088_61 () (_ BitVec 64))
(declare-fun temp1088_62 () (_ BitVec 64))
(declare-fun temp1088_63 () (_ BitVec 64))
(declare-fun temp1088_64 () (_ BitVec 64))
(declare-fun temp1088_65 () (_ BitVec 64))
(declare-fun temp1088_66 () (_ BitVec 64))
(declare-fun temp1088_67 () (_ BitVec 64))
(declare-fun temp1088_68 () (_ BitVec 64))
(declare-fun temp1088_69 () (_ BitVec 64))
(declare-fun temp1088_70 () (_ BitVec 64))
(declare-fun temp1088_71 () (_ BitVec 64))
(declare-fun temp1088_72 () (_ BitVec 64))
(declare-fun temp1088_73 () (_ BitVec 64))
(declare-fun temp1088_74 () (_ BitVec 64))
(declare-fun temp1088_75 () (_ BitVec 64))
(declare-fun temp1088_76 () (_ BitVec 64))
(declare-fun temp1088_77 () (_ BitVec 64))
(declare-fun temp1088_78 () (_ BitVec 64))
(declare-fun temp1088_79 () (_ BitVec 64))
(declare-fun temp1088_80 () (_ BitVec 64))
(declare-fun temp1088_81 () (_ BitVec 64))
(declare-fun temp1088_82 () (_ BitVec 64))
(declare-fun temp1088_83 () (_ BitVec 64))
(declare-fun temp1088_84 () (_ BitVec 64))
(declare-fun temp1088_85 () (_ BitVec 64))
(declare-fun temp1088_86 () (_ BitVec 64))
(declare-fun temp1088_87 () (_ BitVec 64))
(declare-fun temp1088_88 () (_ BitVec 64))
(declare-fun temp1088_89 () (_ BitVec 64))
(declare-fun temp1088_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1088_91 () (_ BitVec 64))
(declare-fun temp1088_92 () (_ BitVec 64))
(declare-fun temp1088_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1088_94 () (_ BitVec 64))
(declare-fun temp1088_95 () (_ BitVec 64))
(declare-fun temp1088_96 () (_ BitVec 64))
(declare-fun temp1088_97 () (_ BitVec 64))
(declare-fun temp1088_98 () (_ BitVec 64))
(declare-fun temp1088_99 () (_ BitVec 64))
(declare-fun temp1088_100 () (_ BitVec 64))
(declare-fun temp1088_101 () (_ BitVec 64))
(declare-fun temp1088_102 () (_ BitVec 64))
(declare-fun temp1088_103 () (_ BitVec 64))
(declare-fun temp1088_104 () (_ BitVec 64))
(declare-fun temp1088_105 () (_ BitVec 64))
(declare-fun temp1088_106 () (_ BitVec 64))
(declare-fun temp1088_107 () (_ BitVec 64))
(declare-fun temp1088_108 () (_ BitVec 64))
(declare-fun temp1088_109 () (_ BitVec 64))
(declare-fun temp1088_110 () (_ BitVec 64))
(declare-fun temp1088_111 () (_ BitVec 64))
(declare-fun temp1088_112 () (_ BitVec 64))
(declare-fun temp1088_113 () (_ BitVec 64))
(declare-fun temp1088_114 () (_ BitVec 64))
(declare-fun temp1088_115 () (_ BitVec 64))
(declare-fun temp1088_116 () (_ BitVec 64))
(declare-fun temp1088_117 () (_ BitVec 64))
(declare-fun temp1088_118 () (_ BitVec 64))
(declare-fun temp1088_119 () (_ BitVec 64))
(declare-fun temp1088_120 () (_ BitVec 64))
(declare-fun temp1088_121 () (_ BitVec 64))
(declare-fun temp1088_122 () (_ BitVec 64))
(declare-fun temp1088_123 () (_ BitVec 64))
(declare-fun temp1088_124 () (_ BitVec 64))
(declare-fun temp1088_125 () (_ BitVec 64))
(declare-fun temp1088_126 () (_ BitVec 64))
(declare-fun temp1088_127 () (_ BitVec 64))
(declare-fun temp1088_128 () (_ BitVec 64))
(declare-fun temp1088_129 () (_ BitVec 64))
(declare-fun temp1088_130 () (_ BitVec 64))
(declare-fun temp1088_131 () (_ BitVec 64))
(declare-fun temp1088_132 () (_ BitVec 64))
(declare-fun temp1088_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1088_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1088_135 () (_ BitVec 64))
(declare-fun temp1088_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1088_137 () (_ BitVec 64))
(declare-fun temp1088_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1088_139 () (_ BitVec 64))
(declare-fun temp1088_140 () (_ BitVec 64))
(declare-fun temp1088_141 () (_ BitVec 64))
(declare-fun temp1088_142 () (_ BitVec 64))
(declare-fun temp1088_143 () (_ BitVec 64))
(declare-fun temp1088_144 () (_ BitVec 64))
(declare-fun temp1088_145 () (_ BitVec 64))
(declare-fun temp1088_146 () (_ BitVec 64))
(declare-fun temp1088_147 () (_ BitVec 64))
(declare-fun temp1088_148 () (_ BitVec 64))
(declare-fun temp1088_149 () (_ BitVec 64))
(declare-fun temp1088_150 () (_ BitVec 64))
(declare-fun temp1088_151 () (_ BitVec 64))
(declare-fun temp1088_152 () (_ BitVec 64))
(declare-fun temp1088_153 () (_ BitVec 64))
(declare-fun temp1088_154 () (_ BitVec 64))
(declare-fun temp1088_156 () (_ BitVec 64))
(declare-fun temp1088_157 () (_ BitVec 64))
(declare-fun temp1088_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1088_158 () (_ BitVec 64))
(declare-fun temp1088_159 () (_ BitVec 64))
(declare-fun temp1088_161 () (_ BitVec 64))
(declare-fun temp1088_162 () (_ BitVec 64))
(declare-fun temp1088_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1088_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1088_164 () (_ BitVec 64))
(declare-fun temp1088_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1088_166 () (_ BitVec 64))
(declare-fun temp1088_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1088_168 () (_ BitVec 64))
(declare-fun temp1088_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1088_170 () (_ BitVec 64))
(declare-fun temp1088_171 () (_ BitVec 64))
(declare-fun temp1088_172 () (_ BitVec 64))
(declare-fun temp1088_173 () (_ BitVec 64))
(declare-fun temp1088_174 () (_ BitVec 64))
(declare-fun temp1088_175 () (_ BitVec 64))
(declare-fun temp1088_176 () (_ BitVec 64))
(declare-fun temp1088_177 () (_ BitVec 64))
(declare-fun temp1088_178 () (_ BitVec 64))
(declare-fun temp1088_179 () (_ BitVec 64))
(declare-fun temp1088_180 () (_ BitVec 64))
(declare-fun temp1088_181 () (_ BitVec 64))
(declare-fun temp1088_182 () (_ BitVec 64))
(declare-fun temp1088_183 () (_ BitVec 64))
(declare-fun temp1088_184 () (_ BitVec 64))
(declare-fun temp1088_185 () (_ BitVec 64))
(declare-fun temp1088_186 () (_ BitVec 64))
(declare-fun temp1088_187 () (_ BitVec 64))
(declare-fun temp1088_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1088_189 () (_ BitVec 64))
(declare-fun temp1088_191 () (_ BitVec 64))
(declare-fun temp1088_192 () (_ BitVec 64))
(declare-fun temp1088_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1088_193 () (_ BitVec 64))
(declare-fun temp1088_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1088_195 () (_ BitVec 64))
(declare-fun temp1088_196 () (_ BitVec 64))
(declare-fun temp1088_197 () (_ BitVec 64))
(declare-fun temp1088_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1088_199 () (_ BitVec 64))
(declare-fun temp1088_200 () (_ BitVec 64))
(declare-fun temp1088_201 () (_ BitVec 64))
(declare-fun temp1088_202 () (_ BitVec 64))
(declare-fun temp1088_203 () (_ BitVec 64))
(declare-fun temp1088_204 () (_ BitVec 64))
(declare-fun temp1088_205 () (_ BitVec 64))
(declare-fun temp1088_206 () (_ BitVec 64))
(declare-fun temp1088_207 () (_ BitVec 64))
(declare-fun temp1088_208 () (_ BitVec 64))
(declare-fun temp1088_209 () (_ BitVec 64))
(declare-fun temp1088_210 () (_ BitVec 64))
(declare-fun temp1088_211 () (_ BitVec 64))
(declare-fun temp1088_212 () (_ BitVec 64))
(declare-fun temp1088_213 () (_ BitVec 64))
(declare-fun temp1088_214 () (_ BitVec 64))
(declare-fun temp1088_215 () (_ BitVec 64))
(declare-fun temp1088_216 () (_ BitVec 64))
(declare-fun temp1088_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1088_218 () (_ BitVec 64))
(declare-fun temp1088_220 () (_ BitVec 64))
(declare-fun temp1088_221 () (_ BitVec 64))
(declare-fun temp1088_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1088_222 () (_ BitVec 64))
(declare-fun temp1088_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1088_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1088_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1088_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1088_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1088_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1088_229 () (_ BitVec 64))
(declare-fun temp1088_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1088_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1088_232 () (_ BitVec 64))
(declare-fun temp1088_233 () (_ BitVec 64))
(declare-fun temp1088_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1088_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1088_236 () (_ BitVec 64))
(declare-fun temp1088_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1088_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1088_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1088_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1088_241 () (_ BitVec 64))
(declare-fun temp1088_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var5977733 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043277 () (_ BitVec 64))
(declare-fun var6043290 () (_ BitVec 64))
(declare-fun var6043292 () (_ BitVec 64))
(declare-fun temp1088_243 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun var6043319 () (_ BitVec 64))
(declare-fun var6164307 () (_ BitVec 64))
(declare-fun temp1088_244 () (_ BitVec 64))
(assert (= temp1088_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1088_1)))
(assert (= temp1088_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1088_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_3 #x0000000000000000))
(assert (= var79869 temp1088_3))
(assert (= temp1088_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1088_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_5 #x0000000000000000))
(assert (= var79914 temp1088_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1088_6 #x0000000000000000))
(assert (= temp1088_7 temp1088_6))
(assert (= temp1088_8 (select ARGNAME_padding_NAMEEND_VAL temp1088_7)))
(assert (= temp1088_9 #x0000000000000001))
(assert (= temp1088_10 temp1088_9))
(assert (= temp1088_11 (select ARGNAME_padding_NAMEEND_VAL temp1088_10)))
(assert (= temp1088_12 #x0000000000000002))
(assert (= temp1088_13 temp1088_12))
(assert (= temp1088_14 (select ARGNAME_padding_NAMEEND_VAL temp1088_13)))
(assert (= temp1088_15 #x0000000000000003))
(assert (= temp1088_16 temp1088_15))
(assert (= temp1088_17 (select ARGNAME_padding_NAMEEND_VAL temp1088_16)))
(assert (= temp1088_18 #x0000000000000004))
(assert (= temp1088_19 temp1088_18))
(assert (= temp1088_20 (select ARGNAME_padding_NAMEEND_VAL temp1088_19)))
(assert (= temp1088_21 #x0000000000000005))
(assert (= temp1088_22 temp1088_21))
(assert (= temp1088_23 (select ARGNAME_padding_NAMEEND_VAL temp1088_22)))
(assert (= temp1088_24 #x0000000000000000))
(assert (= temp1088_25 #x0000000000000000))
(assert (= temp1088_26 temp1088_25))
(assert (= temp1088_27 (select ARGNAME_padding_NAMEEND_VAL temp1088_26)))
(assert (= temp1088_28 #x0000000000000000))
(assert (= temp1088_29 #x0000000000000001))
(assert (= temp1088_30 temp1088_29))
(assert (= temp1088_31 (select ARGNAME_padding_NAMEEND_VAL temp1088_30)))
(assert (= temp1088_32 #x0000000000000000))
(assert (= temp1088_33 #x0000000000000002))
(assert (= temp1088_34 temp1088_33))
(assert (= temp1088_35 (select ARGNAME_padding_NAMEEND_VAL temp1088_34)))
(assert (= temp1088_36 #x0000000000000000))
(assert (= temp1088_37 #x0000000000000003))
(assert (= temp1088_38 temp1088_37))
(assert (= temp1088_39 (select ARGNAME_padding_NAMEEND_VAL temp1088_38)))
(assert (= temp1088_40 #x0000000000000000))
(assert (= temp1088_41 #x0000000000000004))
(assert (= temp1088_42 temp1088_41))
(assert (= temp1088_43 (select ARGNAME_padding_NAMEEND_VAL temp1088_42)))
(assert (= temp1088_44 #x0000000000000000))
(assert (= temp1088_45 #x0000000000000005))
(assert (= temp1088_46 temp1088_45))
(assert (= temp1088_47 (select ARGNAME_padding_NAMEEND_VAL temp1088_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1088_27 temp1088_24)
             (bvslt temp1088_31 temp1088_28)
             (bvslt temp1088_35 temp1088_32)
             (bvslt temp1088_39 temp1088_36)
             (bvslt temp1088_43 temp1088_40)
             (bvslt temp1088_47 temp1088_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_48 #x0000000000000000))
(assert (= var1322786 temp1088_48))
(assert (= temp1088_49 #x0000000000000000))
(assert (= temp1088_50 temp1088_49))
(assert (= temp1088_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_50)))
(assert (= temp1088_52 #x0000000000000001))
(assert (= temp1088_53 temp1088_52))
(assert (= temp1088_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_53)))
(assert (= temp1088_55 #x0000000000000002))
(assert (= temp1088_56 temp1088_55))
(assert (= temp1088_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_56)))
(assert (= temp1088_58 #x0000000000000003))
(assert (= temp1088_59 temp1088_58))
(assert (= temp1088_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_59)))
(assert (= temp1088_61 #x0000000000000004))
(assert (= temp1088_62 temp1088_61))
(assert (= temp1088_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_62)))
(assert (= temp1088_64 #x0000000000000005))
(assert (= temp1088_65 temp1088_64))
(assert (= temp1088_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_65)))
(assert (= temp1088_67 #x0000000000000000))
(assert (= temp1088_68 #x0000000000000000))
(assert (= temp1088_69 temp1088_68))
(assert (= temp1088_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_69)))
(assert (= temp1088_71 #x0000000000000000))
(assert (= temp1088_72 #x0000000000000001))
(assert (= temp1088_73 temp1088_72))
(assert (= temp1088_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_73)))
(assert (= temp1088_75 #x0000000000000000))
(assert (= temp1088_76 #x0000000000000002))
(assert (= temp1088_77 temp1088_76))
(assert (= temp1088_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_77)))
(assert (= temp1088_79 #x0000000000000000))
(assert (= temp1088_80 #x0000000000000003))
(assert (= temp1088_81 temp1088_80))
(assert (= temp1088_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_81)))
(assert (= temp1088_83 #x0000000000000000))
(assert (= temp1088_84 #x0000000000000004))
(assert (= temp1088_85 temp1088_84))
(assert (= temp1088_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_85)))
(assert (= temp1088_87 #x0000000000000000))
(assert (= temp1088_88 #x0000000000000005))
(assert (= temp1088_89 temp1088_88))
(assert (= temp1088_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1088_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1088_70 temp1088_67)
             (bvslt temp1088_74 temp1088_71)
             (bvslt temp1088_78 temp1088_75)
             (bvslt temp1088_82 temp1088_79)
             (bvslt temp1088_86 temp1088_83)
             (bvslt temp1088_90 temp1088_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_91 #x0000000000000000))
(assert (= var1322797 temp1088_91))
(assert (= temp1088_92 #x0000000000000000))
(assert (= temp1088_93 temp1088_92))
(assert (= temp1088_94 (select ARGNAME_stride_NAMEEND_VAL temp1088_93)))
(assert (= temp1088_95 #x0000000000000001))
(assert (= temp1088_96 temp1088_95))
(assert (= temp1088_97 (select ARGNAME_stride_NAMEEND_VAL temp1088_96)))
(assert (= temp1088_98 #x0000000000000002))
(assert (= temp1088_99 temp1088_98))
(assert (= temp1088_100 (select ARGNAME_stride_NAMEEND_VAL temp1088_99)))
(assert (= temp1088_101 #x0000000000000003))
(assert (= temp1088_102 temp1088_101))
(assert (= temp1088_103 (select ARGNAME_stride_NAMEEND_VAL temp1088_102)))
(assert (= temp1088_104 #x0000000000000004))
(assert (= temp1088_105 temp1088_104))
(assert (= temp1088_106 (select ARGNAME_stride_NAMEEND_VAL temp1088_105)))
(assert (= temp1088_107 #x0000000000000005))
(assert (= temp1088_108 temp1088_107))
(assert (= temp1088_109 (select ARGNAME_stride_NAMEEND_VAL temp1088_108)))
(assert (= temp1088_110 #x0000000000000000))
(assert (= temp1088_111 #x0000000000000000))
(assert (= temp1088_112 temp1088_111))
(assert (= temp1088_113 (select ARGNAME_stride_NAMEEND_VAL temp1088_112)))
(assert (= temp1088_114 #x0000000000000000))
(assert (= temp1088_115 #x0000000000000001))
(assert (= temp1088_116 temp1088_115))
(assert (= temp1088_117 (select ARGNAME_stride_NAMEEND_VAL temp1088_116)))
(assert (= temp1088_118 #x0000000000000000))
(assert (= temp1088_119 #x0000000000000002))
(assert (= temp1088_120 temp1088_119))
(assert (= temp1088_121 (select ARGNAME_stride_NAMEEND_VAL temp1088_120)))
(assert (= temp1088_122 #x0000000000000000))
(assert (= temp1088_123 #x0000000000000003))
(assert (= temp1088_124 temp1088_123))
(assert (= temp1088_125 (select ARGNAME_stride_NAMEEND_VAL temp1088_124)))
(assert (= temp1088_126 #x0000000000000000))
(assert (= temp1088_127 #x0000000000000004))
(assert (= temp1088_128 temp1088_127))
(assert (= temp1088_129 (select ARGNAME_stride_NAMEEND_VAL temp1088_128)))
(assert (= temp1088_130 #x0000000000000000))
(assert (= temp1088_131 #x0000000000000005))
(assert (= temp1088_132 temp1088_131))
(assert (= temp1088_133 (select ARGNAME_stride_NAMEEND_VAL temp1088_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1088_113 temp1088_110)
             (bvsle temp1088_117 temp1088_114)
             (bvsle temp1088_121 temp1088_118)
             (bvsle temp1088_125 temp1088_122)
             (bvsle temp1088_129 temp1088_126)
             (bvsle temp1088_133 temp1088_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_134 #x0000000000000000))
(assert (= var1322807 temp1088_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_135 #x0000000000000001))
(assert (= var1322819 temp1088_135))
(assert (= temp1088_136 #x0000000000000000))
(assert (= var1310898 temp1088_136))
(assert (= temp1088_137 #x0000000000000000))
(assert (= temp1088_138 temp1088_137))
(assert (= temp1088_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_138)))
(assert (= temp1088_140 #x0000000000000001))
(assert (= temp1088_141 temp1088_140))
(assert (= temp1088_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_141)))
(assert (= temp1088_143 #x0000000000000002))
(assert (= temp1088_144 temp1088_143))
(assert (= temp1088_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_144)))
(assert (= temp1088_146 #x0000000000000003))
(assert (= temp1088_147 temp1088_146))
(assert (= temp1088_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_147)))
(assert (= temp1088_149 #x0000000000000004))
(assert (= temp1088_150 temp1088_149))
(assert (= temp1088_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_150)))
(assert (= temp1088_152 #x0000000000000005))
(assert (= temp1088_153 temp1088_152))
(assert (= temp1088_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_153)))
(assert (= temp1088_156 var1310898))
(assert (= temp1088_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_156)))
(assert (= temp1088_155 temp1088_157))
(assert (= var1322852
   (ite (bvslt temp1088_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_158 #x0000000000000000))
(assert (= var1322852 temp1088_158))
(assert (= temp1088_159 #x0000000000000000))
(assert (= var1310898 temp1088_159))
(assert (= temp1088_161 var1310898))
(assert (= temp1088_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_161)))
(assert (= temp1088_160 temp1088_162))
(assert (= var1322874 (bvsmod temp1088_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1088_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1088_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1088_164 #x0000000000000001))
(assert (= var1322875 temp1088_164))
(assert (= temp1088_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1088_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_166 #x0000000000000001))
(assert (= var1322895 temp1088_166))
(assert (= temp1088_167 #x0000000000000001))
(assert (= var1311786 temp1088_167))
(assert (= temp1088_168 #x0000000000000000))
(assert (= temp1088_169 temp1088_168))
(assert (= temp1088_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1088_169)))
(assert (= temp1088_171 #x0000000000000001))
(assert (= temp1088_172 temp1088_171))
(assert (= temp1088_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1088_172)))
(assert (= temp1088_174 #x0000000000000002))
(assert (= temp1088_175 temp1088_174))
(assert (= temp1088_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1088_175)))
(assert (= temp1088_177 #x0000000000000003))
(assert (= temp1088_178 temp1088_177))
(assert (= temp1088_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1088_178)))
(assert (= temp1088_180 #x0000000000000004))
(assert (= temp1088_181 temp1088_180))
(assert (= temp1088_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1088_181)))
(assert (= temp1088_183 #x0000000000000005))
(assert (= temp1088_184 temp1088_183))
(assert (= temp1088_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1088_184)))
(assert (= temp1088_186 #x0000000000000000))
(assert (= temp1088_187
   (ite (bvslt var1311786 temp1088_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1088_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1088_187)))
(assert (= var1322903 temp1088_188))
(assert (bvslt (ite (bvslt var1311786 temp1088_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1088_189 #x0000000000000001))
(assert (= var1311786 temp1088_189))
(assert (= temp1088_191 var1311786))
(assert (= temp1088_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_191)))
(assert (= temp1088_190 temp1088_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1088_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1088_193 #x0000000000000001))
(assert (= var1322908 temp1088_193))
(assert (= temp1088_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1088_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_195 #x0000000000000001))
(assert (= var1322975 temp1088_195))
(assert (= temp1088_196 #x0000000000000000))
(assert (= var1310898 temp1088_196))
(assert (= temp1088_197 #x0000000000000000))
(assert (= temp1088_198 temp1088_197))
(assert (= temp1088_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1088_198)))
(assert (= temp1088_200 #x0000000000000001))
(assert (= temp1088_201 temp1088_200))
(assert (= temp1088_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1088_201)))
(assert (= temp1088_203 #x0000000000000002))
(assert (= temp1088_204 temp1088_203))
(assert (= temp1088_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1088_204)))
(assert (= temp1088_206 #x0000000000000003))
(assert (= temp1088_207 temp1088_206))
(assert (= temp1088_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1088_207)))
(assert (= temp1088_209 #x0000000000000004))
(assert (= temp1088_210 temp1088_209))
(assert (= temp1088_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1088_210)))
(assert (= temp1088_212 #x0000000000000005))
(assert (= temp1088_213 temp1088_212))
(assert (= temp1088_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1088_213)))
(assert (= temp1088_215 #x0000000000000000))
(assert (= temp1088_216
   (ite (bvslt var1310898 temp1088_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1088_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1088_216)))
(assert (= var1322977 temp1088_217))
(assert (bvslt (ite (bvslt var1310898 temp1088_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1088_218 #x0000000000000000))
(assert (= var1310898 temp1088_218))
(assert (= temp1088_220 var1310898))
(assert (= temp1088_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1088_220)))
(assert (= temp1088_219 temp1088_221))
(assert (= var1322980
   (ite (= var1322977 temp1088_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1088_222 #x0000000000000001))
(assert (= var1322980 temp1088_222))
(assert (= temp1088_223 #x0000000000000002))
(assert (= var1848169 temp1088_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1088_225 #x0000000000000001))
(assert (= var1323065 temp1088_225))
(assert (= temp1088_226 #x0000000000000001))
(assert (= var3486735 temp1088_226))
(assert (= temp1088_227 #x0000000000000001))
(assert (= var3814415 temp1088_227))
(assert (= temp1088_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1088_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_229 #x0000000000000001))
(assert (= var79986 temp1088_229))
(assert (= temp1088_230 #x0000000000000001))
(assert (= var80116 temp1088_230))
(assert (= var4796905 var80116))
(assert (= temp1088_231 #x0000000000000000))
(assert (= var4784306 temp1088_231))
(assert (= temp1088_232 #x0000000000000000))
(assert (= temp1088_233
   (ite (bvslt var4784306 temp1088_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1088_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1088_233)))
(assert (= var4796924 temp1088_234))
(assert (bvslt (ite (bvslt var4784306 temp1088_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1088_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1088_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1088_236 #x0000000000000001))
(assert (= var4796925 temp1088_236))
(assert (= temp1088_237 #x0000000000000000))
(assert (= var4996927 temp1088_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1088_238 #x0000000000000002))
(assert (= var5125763 temp1088_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_239 #x0000000000000000))
(assert (= var5191324 temp1088_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1088_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1088_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_241 #x0000000000000001))
(assert (= var81342 temp1088_241))
(assert (= temp1088_242 #x0000000000000002))
(assert (= var5977731 temp1088_242))
(assert (= var5977733 (bvsub ARGNAME_weight_NAMEEND_DIM var5977731)))
(assert (= var6043276 var5977731))
(assert (= var6043277 var5977733))
(assert (= var6043290 (bvadd var6043277 var6043276)))
(assert (= var6043292
   (ite (bvsgt var6043290 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1088_243 #x0000000000000000))
(assert (= var6043292 temp1088_243))
(assert (= var6043317 var6043276))
(assert (= var6043319 var6043277))
(assert (= var6164307 var6043319))
(assert (= temp1088_244 #x0000000000000001))
(assert (= var79986 temp1088_244))
(model-add temp1088_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1088_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1088_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






