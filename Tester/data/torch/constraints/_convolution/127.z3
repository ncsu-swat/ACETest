(declare-fun temp168_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp168_2 () (_ BitVec 64))
(declare-fun temp168_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp168_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp168_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp168_6 () (_ BitVec 64))
(declare-fun temp168_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp168_8 () (_ BitVec 64))
(declare-fun temp168_9 () (_ BitVec 64))
(declare-fun temp168_10 () (_ BitVec 64))
(declare-fun temp168_11 () (_ BitVec 64))
(declare-fun temp168_12 () (_ BitVec 64))
(declare-fun temp168_13 () (_ BitVec 64))
(declare-fun temp168_14 () (_ BitVec 64))
(declare-fun temp168_15 () (_ BitVec 64))
(declare-fun temp168_16 () (_ BitVec 64))
(declare-fun temp168_17 () (_ BitVec 64))
(declare-fun temp168_18 () (_ BitVec 64))
(declare-fun temp168_19 () (_ BitVec 64))
(declare-fun temp168_20 () (_ BitVec 64))
(declare-fun temp168_21 () (_ BitVec 64))
(declare-fun temp168_22 () (_ BitVec 64))
(declare-fun temp168_23 () (_ BitVec 64))
(declare-fun temp168_24 () (_ BitVec 64))
(declare-fun temp168_25 () (_ BitVec 64))
(declare-fun temp168_26 () (_ BitVec 64))
(declare-fun temp168_27 () (_ BitVec 64))
(declare-fun temp168_28 () (_ BitVec 64))
(declare-fun temp168_29 () (_ BitVec 64))
(declare-fun temp168_30 () (_ BitVec 64))
(declare-fun temp168_31 () (_ BitVec 64))
(declare-fun temp168_32 () (_ BitVec 64))
(declare-fun temp168_33 () (_ BitVec 64))
(declare-fun temp168_34 () (_ BitVec 64))
(declare-fun temp168_35 () (_ BitVec 64))
(declare-fun temp168_36 () (_ BitVec 64))
(declare-fun temp168_37 () (_ BitVec 64))
(declare-fun temp168_38 () (_ BitVec 64))
(declare-fun temp168_39 () (_ BitVec 64))
(declare-fun temp168_40 () (_ BitVec 64))
(declare-fun temp168_41 () (_ BitVec 64))
(declare-fun temp168_42 () (_ BitVec 64))
(declare-fun temp168_43 () (_ BitVec 64))
(declare-fun temp168_44 () (_ BitVec 64))
(declare-fun temp168_45 () (_ BitVec 64))
(declare-fun temp168_46 () (_ BitVec 64))
(declare-fun temp168_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp168_48 () (_ BitVec 64))
(declare-fun temp168_49 () (_ BitVec 64))
(declare-fun temp168_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp168_51 () (_ BitVec 64))
(declare-fun temp168_52 () (_ BitVec 64))
(declare-fun temp168_53 () (_ BitVec 64))
(declare-fun temp168_54 () (_ BitVec 64))
(declare-fun temp168_55 () (_ BitVec 64))
(declare-fun temp168_56 () (_ BitVec 64))
(declare-fun temp168_57 () (_ BitVec 64))
(declare-fun temp168_58 () (_ BitVec 64))
(declare-fun temp168_59 () (_ BitVec 64))
(declare-fun temp168_60 () (_ BitVec 64))
(declare-fun temp168_61 () (_ BitVec 64))
(declare-fun temp168_62 () (_ BitVec 64))
(declare-fun temp168_63 () (_ BitVec 64))
(declare-fun temp168_64 () (_ BitVec 64))
(declare-fun temp168_65 () (_ BitVec 64))
(declare-fun temp168_66 () (_ BitVec 64))
(declare-fun temp168_67 () (_ BitVec 64))
(declare-fun temp168_68 () (_ BitVec 64))
(declare-fun temp168_69 () (_ BitVec 64))
(declare-fun temp168_70 () (_ BitVec 64))
(declare-fun temp168_71 () (_ BitVec 64))
(declare-fun temp168_72 () (_ BitVec 64))
(declare-fun temp168_73 () (_ BitVec 64))
(declare-fun temp168_74 () (_ BitVec 64))
(declare-fun temp168_75 () (_ BitVec 64))
(declare-fun temp168_76 () (_ BitVec 64))
(declare-fun temp168_77 () (_ BitVec 64))
(declare-fun temp168_78 () (_ BitVec 64))
(declare-fun temp168_79 () (_ BitVec 64))
(declare-fun temp168_80 () (_ BitVec 64))
(declare-fun temp168_81 () (_ BitVec 64))
(declare-fun temp168_82 () (_ BitVec 64))
(declare-fun temp168_83 () (_ BitVec 64))
(declare-fun temp168_84 () (_ BitVec 64))
(declare-fun temp168_85 () (_ BitVec 64))
(declare-fun temp168_86 () (_ BitVec 64))
(declare-fun temp168_87 () (_ BitVec 64))
(declare-fun temp168_88 () (_ BitVec 64))
(declare-fun temp168_89 () (_ BitVec 64))
(declare-fun temp168_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp168_91 () (_ BitVec 64))
(declare-fun temp168_92 () (_ BitVec 64))
(declare-fun temp168_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp168_94 () (_ BitVec 64))
(declare-fun temp168_95 () (_ BitVec 64))
(declare-fun temp168_96 () (_ BitVec 64))
(declare-fun temp168_97 () (_ BitVec 64))
(declare-fun temp168_98 () (_ BitVec 64))
(declare-fun temp168_99 () (_ BitVec 64))
(declare-fun temp168_100 () (_ BitVec 64))
(declare-fun temp168_101 () (_ BitVec 64))
(declare-fun temp168_102 () (_ BitVec 64))
(declare-fun temp168_103 () (_ BitVec 64))
(declare-fun temp168_104 () (_ BitVec 64))
(declare-fun temp168_105 () (_ BitVec 64))
(declare-fun temp168_106 () (_ BitVec 64))
(declare-fun temp168_107 () (_ BitVec 64))
(declare-fun temp168_108 () (_ BitVec 64))
(declare-fun temp168_109 () (_ BitVec 64))
(declare-fun temp168_110 () (_ BitVec 64))
(declare-fun temp168_111 () (_ BitVec 64))
(declare-fun temp168_112 () (_ BitVec 64))
(declare-fun temp168_113 () (_ BitVec 64))
(declare-fun temp168_114 () (_ BitVec 64))
(declare-fun temp168_115 () (_ BitVec 64))
(declare-fun temp168_116 () (_ BitVec 64))
(declare-fun temp168_117 () (_ BitVec 64))
(declare-fun temp168_118 () (_ BitVec 64))
(declare-fun temp168_119 () (_ BitVec 64))
(declare-fun temp168_120 () (_ BitVec 64))
(declare-fun temp168_121 () (_ BitVec 64))
(declare-fun temp168_122 () (_ BitVec 64))
(declare-fun temp168_123 () (_ BitVec 64))
(declare-fun temp168_124 () (_ BitVec 64))
(declare-fun temp168_125 () (_ BitVec 64))
(declare-fun temp168_126 () (_ BitVec 64))
(declare-fun temp168_127 () (_ BitVec 64))
(declare-fun temp168_128 () (_ BitVec 64))
(declare-fun temp168_129 () (_ BitVec 64))
(declare-fun temp168_130 () (_ BitVec 64))
(declare-fun temp168_131 () (_ BitVec 64))
(declare-fun temp168_132 () (_ BitVec 64))
(declare-fun temp168_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp168_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp168_135 () (_ BitVec 64))
(declare-fun temp168_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp168_137 () (_ BitVec 64))
(declare-fun temp168_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp168_139 () (_ BitVec 64))
(declare-fun temp168_140 () (_ BitVec 64))
(declare-fun temp168_141 () (_ BitVec 64))
(declare-fun temp168_142 () (_ BitVec 64))
(declare-fun temp168_143 () (_ BitVec 64))
(declare-fun temp168_144 () (_ BitVec 64))
(declare-fun temp168_145 () (_ BitVec 64))
(declare-fun temp168_146 () (_ BitVec 64))
(declare-fun temp168_147 () (_ BitVec 64))
(declare-fun temp168_148 () (_ BitVec 64))
(declare-fun temp168_149 () (_ BitVec 64))
(declare-fun temp168_150 () (_ BitVec 64))
(declare-fun temp168_151 () (_ BitVec 64))
(declare-fun temp168_152 () (_ BitVec 64))
(declare-fun temp168_153 () (_ BitVec 64))
(declare-fun temp168_154 () (_ BitVec 64))
(declare-fun temp168_156 () (_ BitVec 64))
(declare-fun temp168_157 () (_ BitVec 64))
(declare-fun temp168_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp168_158 () (_ BitVec 64))
(declare-fun temp168_159 () (_ BitVec 64))
(declare-fun temp168_161 () (_ BitVec 64))
(declare-fun temp168_162 () (_ BitVec 64))
(declare-fun temp168_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp168_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp168_164 () (_ BitVec 64))
(declare-fun temp168_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp168_166 () (_ BitVec 64))
(declare-fun temp168_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp168_168 () (_ BitVec 64))
(declare-fun temp168_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp168_170 () (_ BitVec 64))
(declare-fun temp168_171 () (_ BitVec 64))
(declare-fun temp168_172 () (_ BitVec 64))
(declare-fun temp168_173 () (_ BitVec 64))
(declare-fun temp168_174 () (_ BitVec 64))
(declare-fun temp168_175 () (_ BitVec 64))
(declare-fun temp168_176 () (_ BitVec 64))
(declare-fun temp168_177 () (_ BitVec 64))
(declare-fun temp168_178 () (_ BitVec 64))
(declare-fun temp168_179 () (_ BitVec 64))
(declare-fun temp168_180 () (_ BitVec 64))
(declare-fun temp168_181 () (_ BitVec 64))
(declare-fun temp168_182 () (_ BitVec 64))
(declare-fun temp168_183 () (_ BitVec 64))
(declare-fun temp168_184 () (_ BitVec 64))
(declare-fun temp168_185 () (_ BitVec 64))
(declare-fun temp168_186 () (_ BitVec 64))
(declare-fun temp168_187 () (_ BitVec 64))
(declare-fun temp168_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp168_189 () (_ BitVec 64))
(declare-fun temp168_191 () (_ BitVec 64))
(declare-fun temp168_192 () (_ BitVec 64))
(declare-fun temp168_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp168_193 () (_ BitVec 64))
(declare-fun temp168_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp168_195 () (_ BitVec 64))
(declare-fun temp168_196 () (_ BitVec 64))
(declare-fun temp168_197 () (_ BitVec 64))
(declare-fun temp168_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp168_199 () (_ BitVec 64))
(declare-fun temp168_200 () (_ BitVec 64))
(declare-fun temp168_201 () (_ BitVec 64))
(declare-fun temp168_202 () (_ BitVec 64))
(declare-fun temp168_203 () (_ BitVec 64))
(declare-fun temp168_204 () (_ BitVec 64))
(declare-fun temp168_205 () (_ BitVec 64))
(declare-fun temp168_206 () (_ BitVec 64))
(declare-fun temp168_207 () (_ BitVec 64))
(declare-fun temp168_208 () (_ BitVec 64))
(declare-fun temp168_209 () (_ BitVec 64))
(declare-fun temp168_210 () (_ BitVec 64))
(declare-fun temp168_211 () (_ BitVec 64))
(declare-fun temp168_212 () (_ BitVec 64))
(declare-fun temp168_213 () (_ BitVec 64))
(declare-fun temp168_214 () (_ BitVec 64))
(declare-fun temp168_215 () (_ BitVec 64))
(declare-fun temp168_216 () (_ BitVec 64))
(declare-fun temp168_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp168_218 () (_ BitVec 64))
(declare-fun temp168_220 () (_ BitVec 64))
(declare-fun temp168_221 () (_ BitVec 64))
(declare-fun temp168_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp168_222 () (_ BitVec 64))
(declare-fun temp168_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp168_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp168_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp168_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp168_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp168_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp168_229 () (_ BitVec 64))
(declare-fun temp168_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp168_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp168_232 () (_ BitVec 64))
(declare-fun temp168_233 () (_ BitVec 64))
(declare-fun temp168_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp168_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp168_236 () (_ BitVec 64))
(declare-fun temp168_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp168_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp168_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp168_241 () (_ BitVec 64))
(declare-fun temp168_240 () (_ BitVec 64))
(declare-fun temp168_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp168_243 () (_ BitVec 64))
(declare-fun temp168_244 () (_ BitVec 64))
(declare-fun temp168_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp168_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp168_247 () (_ BitVec 64))
(declare-fun temp168_248 () (_ BitVec 64))
(declare-fun temp168_249 () (_ BitVec 64))
(declare-fun var6435604 () (_ BitVec 64))
(declare-fun var6435571 () (_ BitVec 64))
(declare-fun var6304135 () (_ BitVec 64))
(declare-fun var6304131 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp168_250 () (_ BitVec 64))
(assert (= temp168_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp168_1)))
(assert (= temp168_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp168_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_3 #x0000000000000000))
(assert (= var79869 temp168_3))
(assert (= temp168_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp168_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_5 #x0000000000000000))
(assert (= var79914 temp168_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp168_6 #x0000000000000000))
(assert (= temp168_7 temp168_6))
(assert (= temp168_8 (select ARGNAME_padding_NAMEEND_VAL temp168_7)))
(assert (= temp168_9 #x0000000000000001))
(assert (= temp168_10 temp168_9))
(assert (= temp168_11 (select ARGNAME_padding_NAMEEND_VAL temp168_10)))
(assert (= temp168_12 #x0000000000000002))
(assert (= temp168_13 temp168_12))
(assert (= temp168_14 (select ARGNAME_padding_NAMEEND_VAL temp168_13)))
(assert (= temp168_15 #x0000000000000003))
(assert (= temp168_16 temp168_15))
(assert (= temp168_17 (select ARGNAME_padding_NAMEEND_VAL temp168_16)))
(assert (= temp168_18 #x0000000000000004))
(assert (= temp168_19 temp168_18))
(assert (= temp168_20 (select ARGNAME_padding_NAMEEND_VAL temp168_19)))
(assert (= temp168_21 #x0000000000000005))
(assert (= temp168_22 temp168_21))
(assert (= temp168_23 (select ARGNAME_padding_NAMEEND_VAL temp168_22)))
(assert (= temp168_24 #x0000000000000000))
(assert (= temp168_25 #x0000000000000000))
(assert (= temp168_26 temp168_25))
(assert (= temp168_27 (select ARGNAME_padding_NAMEEND_VAL temp168_26)))
(assert (= temp168_28 #x0000000000000000))
(assert (= temp168_29 #x0000000000000001))
(assert (= temp168_30 temp168_29))
(assert (= temp168_31 (select ARGNAME_padding_NAMEEND_VAL temp168_30)))
(assert (= temp168_32 #x0000000000000000))
(assert (= temp168_33 #x0000000000000002))
(assert (= temp168_34 temp168_33))
(assert (= temp168_35 (select ARGNAME_padding_NAMEEND_VAL temp168_34)))
(assert (= temp168_36 #x0000000000000000))
(assert (= temp168_37 #x0000000000000003))
(assert (= temp168_38 temp168_37))
(assert (= temp168_39 (select ARGNAME_padding_NAMEEND_VAL temp168_38)))
(assert (= temp168_40 #x0000000000000000))
(assert (= temp168_41 #x0000000000000004))
(assert (= temp168_42 temp168_41))
(assert (= temp168_43 (select ARGNAME_padding_NAMEEND_VAL temp168_42)))
(assert (= temp168_44 #x0000000000000000))
(assert (= temp168_45 #x0000000000000005))
(assert (= temp168_46 temp168_45))
(assert (= temp168_47 (select ARGNAME_padding_NAMEEND_VAL temp168_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp168_27 temp168_24)
             (bvslt temp168_31 temp168_28)
             (bvslt temp168_35 temp168_32)
             (bvslt temp168_39 temp168_36)
             (bvslt temp168_43 temp168_40)
             (bvslt temp168_47 temp168_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_48 #x0000000000000000))
(assert (= var1322786 temp168_48))
(assert (= temp168_49 #x0000000000000000))
(assert (= temp168_50 temp168_49))
(assert (= temp168_51 (select ARGNAME_output_padding_NAMEEND_VAL temp168_50)))
(assert (= temp168_52 #x0000000000000001))
(assert (= temp168_53 temp168_52))
(assert (= temp168_54 (select ARGNAME_output_padding_NAMEEND_VAL temp168_53)))
(assert (= temp168_55 #x0000000000000002))
(assert (= temp168_56 temp168_55))
(assert (= temp168_57 (select ARGNAME_output_padding_NAMEEND_VAL temp168_56)))
(assert (= temp168_58 #x0000000000000003))
(assert (= temp168_59 temp168_58))
(assert (= temp168_60 (select ARGNAME_output_padding_NAMEEND_VAL temp168_59)))
(assert (= temp168_61 #x0000000000000004))
(assert (= temp168_62 temp168_61))
(assert (= temp168_63 (select ARGNAME_output_padding_NAMEEND_VAL temp168_62)))
(assert (= temp168_64 #x0000000000000005))
(assert (= temp168_65 temp168_64))
(assert (= temp168_66 (select ARGNAME_output_padding_NAMEEND_VAL temp168_65)))
(assert (= temp168_67 #x0000000000000000))
(assert (= temp168_68 #x0000000000000000))
(assert (= temp168_69 temp168_68))
(assert (= temp168_70 (select ARGNAME_output_padding_NAMEEND_VAL temp168_69)))
(assert (= temp168_71 #x0000000000000000))
(assert (= temp168_72 #x0000000000000001))
(assert (= temp168_73 temp168_72))
(assert (= temp168_74 (select ARGNAME_output_padding_NAMEEND_VAL temp168_73)))
(assert (= temp168_75 #x0000000000000000))
(assert (= temp168_76 #x0000000000000002))
(assert (= temp168_77 temp168_76))
(assert (= temp168_78 (select ARGNAME_output_padding_NAMEEND_VAL temp168_77)))
(assert (= temp168_79 #x0000000000000000))
(assert (= temp168_80 #x0000000000000003))
(assert (= temp168_81 temp168_80))
(assert (= temp168_82 (select ARGNAME_output_padding_NAMEEND_VAL temp168_81)))
(assert (= temp168_83 #x0000000000000000))
(assert (= temp168_84 #x0000000000000004))
(assert (= temp168_85 temp168_84))
(assert (= temp168_86 (select ARGNAME_output_padding_NAMEEND_VAL temp168_85)))
(assert (= temp168_87 #x0000000000000000))
(assert (= temp168_88 #x0000000000000005))
(assert (= temp168_89 temp168_88))
(assert (= temp168_90 (select ARGNAME_output_padding_NAMEEND_VAL temp168_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp168_70 temp168_67)
             (bvslt temp168_74 temp168_71)
             (bvslt temp168_78 temp168_75)
             (bvslt temp168_82 temp168_79)
             (bvslt temp168_86 temp168_83)
             (bvslt temp168_90 temp168_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_91 #x0000000000000000))
(assert (= var1322797 temp168_91))
(assert (= temp168_92 #x0000000000000000))
(assert (= temp168_93 temp168_92))
(assert (= temp168_94 (select ARGNAME_stride_NAMEEND_VAL temp168_93)))
(assert (= temp168_95 #x0000000000000001))
(assert (= temp168_96 temp168_95))
(assert (= temp168_97 (select ARGNAME_stride_NAMEEND_VAL temp168_96)))
(assert (= temp168_98 #x0000000000000002))
(assert (= temp168_99 temp168_98))
(assert (= temp168_100 (select ARGNAME_stride_NAMEEND_VAL temp168_99)))
(assert (= temp168_101 #x0000000000000003))
(assert (= temp168_102 temp168_101))
(assert (= temp168_103 (select ARGNAME_stride_NAMEEND_VAL temp168_102)))
(assert (= temp168_104 #x0000000000000004))
(assert (= temp168_105 temp168_104))
(assert (= temp168_106 (select ARGNAME_stride_NAMEEND_VAL temp168_105)))
(assert (= temp168_107 #x0000000000000005))
(assert (= temp168_108 temp168_107))
(assert (= temp168_109 (select ARGNAME_stride_NAMEEND_VAL temp168_108)))
(assert (= temp168_110 #x0000000000000000))
(assert (= temp168_111 #x0000000000000000))
(assert (= temp168_112 temp168_111))
(assert (= temp168_113 (select ARGNAME_stride_NAMEEND_VAL temp168_112)))
(assert (= temp168_114 #x0000000000000000))
(assert (= temp168_115 #x0000000000000001))
(assert (= temp168_116 temp168_115))
(assert (= temp168_117 (select ARGNAME_stride_NAMEEND_VAL temp168_116)))
(assert (= temp168_118 #x0000000000000000))
(assert (= temp168_119 #x0000000000000002))
(assert (= temp168_120 temp168_119))
(assert (= temp168_121 (select ARGNAME_stride_NAMEEND_VAL temp168_120)))
(assert (= temp168_122 #x0000000000000000))
(assert (= temp168_123 #x0000000000000003))
(assert (= temp168_124 temp168_123))
(assert (= temp168_125 (select ARGNAME_stride_NAMEEND_VAL temp168_124)))
(assert (= temp168_126 #x0000000000000000))
(assert (= temp168_127 #x0000000000000004))
(assert (= temp168_128 temp168_127))
(assert (= temp168_129 (select ARGNAME_stride_NAMEEND_VAL temp168_128)))
(assert (= temp168_130 #x0000000000000000))
(assert (= temp168_131 #x0000000000000005))
(assert (= temp168_132 temp168_131))
(assert (= temp168_133 (select ARGNAME_stride_NAMEEND_VAL temp168_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp168_113 temp168_110)
             (bvsle temp168_117 temp168_114)
             (bvsle temp168_121 temp168_118)
             (bvsle temp168_125 temp168_122)
             (bvsle temp168_129 temp168_126)
             (bvsle temp168_133 temp168_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_134 #x0000000000000000))
(assert (= var1322807 temp168_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_135 #x0000000000000001))
(assert (= var1322819 temp168_135))
(assert (= temp168_136 #x0000000000000000))
(assert (= var1310898 temp168_136))
(assert (= temp168_137 #x0000000000000000))
(assert (= temp168_138 temp168_137))
(assert (= temp168_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_138)))
(assert (= temp168_140 #x0000000000000001))
(assert (= temp168_141 temp168_140))
(assert (= temp168_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_141)))
(assert (= temp168_143 #x0000000000000002))
(assert (= temp168_144 temp168_143))
(assert (= temp168_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_144)))
(assert (= temp168_146 #x0000000000000003))
(assert (= temp168_147 temp168_146))
(assert (= temp168_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_147)))
(assert (= temp168_149 #x0000000000000004))
(assert (= temp168_150 temp168_149))
(assert (= temp168_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_150)))
(assert (= temp168_152 #x0000000000000005))
(assert (= temp168_153 temp168_152))
(assert (= temp168_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_153)))
(assert (= temp168_156 var1310898))
(assert (= temp168_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_156)))
(assert (= temp168_155 temp168_157))
(assert (= var1322852
   (ite (bvslt temp168_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_158 #x0000000000000000))
(assert (= var1322852 temp168_158))
(assert (= temp168_159 #x0000000000000000))
(assert (= var1310898 temp168_159))
(assert (= temp168_161 var1310898))
(assert (= temp168_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_161)))
(assert (= temp168_160 temp168_162))
(assert (= var1322874 (bvsmod temp168_160 ARGNAME_groups_NAMEEND)))
(assert (= temp168_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp168_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_164 #x0000000000000001))
(assert (= var1322875 temp168_164))
(assert (= temp168_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp168_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_166 #x0000000000000001))
(assert (= var1322895 temp168_166))
(assert (= temp168_167 #x0000000000000001))
(assert (= var1311786 temp168_167))
(assert (= temp168_168 #x0000000000000000))
(assert (= temp168_169 temp168_168))
(assert (= temp168_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_169)))
(assert (= temp168_171 #x0000000000000001))
(assert (= temp168_172 temp168_171))
(assert (= temp168_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_172)))
(assert (= temp168_174 #x0000000000000002))
(assert (= temp168_175 temp168_174))
(assert (= temp168_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_175)))
(assert (= temp168_177 #x0000000000000003))
(assert (= temp168_178 temp168_177))
(assert (= temp168_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_178)))
(assert (= temp168_180 #x0000000000000004))
(assert (= temp168_181 temp168_180))
(assert (= temp168_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_181)))
(assert (= temp168_183 #x0000000000000005))
(assert (= temp168_184 temp168_183))
(assert (= temp168_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_184)))
(assert (= temp168_186 #x0000000000000000))
(assert (= temp168_187
   (ite (bvslt var1311786 temp168_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp168_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_187)))
(assert (= var1322903 temp168_188))
(assert (bvslt (ite (bvslt var1311786 temp168_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp168_189 #x0000000000000001))
(assert (= var1311786 temp168_189))
(assert (= temp168_191 var1311786))
(assert (= temp168_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_191)))
(assert (= temp168_190 temp168_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp168_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_193 #x0000000000000001))
(assert (= var1322908 temp168_193))
(assert (= temp168_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp168_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_195 #x0000000000000001))
(assert (= var1322975 temp168_195))
(assert (= temp168_196 #x0000000000000000))
(assert (= var1310898 temp168_196))
(assert (= temp168_197 #x0000000000000000))
(assert (= temp168_198 temp168_197))
(assert (= temp168_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp168_198)))
(assert (= temp168_200 #x0000000000000001))
(assert (= temp168_201 temp168_200))
(assert (= temp168_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp168_201)))
(assert (= temp168_203 #x0000000000000002))
(assert (= temp168_204 temp168_203))
(assert (= temp168_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp168_204)))
(assert (= temp168_206 #x0000000000000003))
(assert (= temp168_207 temp168_206))
(assert (= temp168_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp168_207)))
(assert (= temp168_209 #x0000000000000004))
(assert (= temp168_210 temp168_209))
(assert (= temp168_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp168_210)))
(assert (= temp168_212 #x0000000000000005))
(assert (= temp168_213 temp168_212))
(assert (= temp168_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp168_213)))
(assert (= temp168_215 #x0000000000000000))
(assert (= temp168_216
   (ite (bvslt var1310898 temp168_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp168_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp168_216)))
(assert (= var1322977 temp168_217))
(assert (bvslt (ite (bvslt var1310898 temp168_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp168_218 #x0000000000000000))
(assert (= var1310898 temp168_218))
(assert (= temp168_220 var1310898))
(assert (= temp168_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp168_220)))
(assert (= temp168_219 temp168_221))
(assert (= var1322980
   (ite (= var1322977 temp168_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_222 #x0000000000000001))
(assert (= var1322980 temp168_222))
(assert (= temp168_223 #x0000000000000002))
(assert (= var1848169 temp168_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp168_225 #x0000000000000001))
(assert (= var1323065 temp168_225))
(assert (= temp168_226 #x0000000000000001))
(assert (= var3486735 temp168_226))
(assert (= temp168_227 #x0000000000000001))
(assert (= var3814415 temp168_227))
(assert (= temp168_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp168_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_229 #x0000000000000001))
(assert (= var79986 temp168_229))
(assert (= temp168_230 #x0000000000000001))
(assert (= var80116 temp168_230))
(assert (= var4796905 var80116))
(assert (= temp168_231 #x0000000000000000))
(assert (= var4784306 temp168_231))
(assert (= temp168_232 #x0000000000000000))
(assert (= temp168_233
   (ite (bvslt var4784306 temp168_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp168_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_233)))
(assert (= var4796924 temp168_234))
(assert (bvslt (ite (bvslt var4784306 temp168_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp168_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp168_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_236 #x0000000000000001))
(assert (= var4796925 temp168_236))
(assert (= temp168_237 #x0000000000000000))
(assert (= var4996927 temp168_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp168_238 #x0000000000000002))
(assert (= var5125763 temp168_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_239 #x0000000000000000))
(assert (= var5191324 temp168_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp168_241 #xffffffffffffffff))
(assert (= temp168_240 temp168_241))
(assert (= temp168_242 #x0000000000000001))
(assert (= var66602 temp168_242))
(assert (= temp168_243 #x0000000000000000))
(assert (= temp168_244
   (ite (bvslt var66602 temp168_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp168_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_244)))
(assert (= var80523 temp168_245))
(assert (bvslt (ite (bvslt var66602 temp168_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp168_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp168_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_247 #x0000000000000000))
(assert (= var80524 temp168_247))
(assert (= temp168_248 #x0000000000000001))
(assert (= var79986 temp168_248))
(assert (= temp168_249 #x0000000000000000))
(assert (= var6435604 temp168_249))
(assert (= var6435571 var6435604))
(assert (= var6304135 var6435571))
(assert (= var6304131 var6304135))
(assert (= var81597 var6304131))
(assert (= temp168_250 #x0000000000000000))
(assert (= var81597 temp168_250))
(model-add temp168_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp168_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp168_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






