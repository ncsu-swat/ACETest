(declare-fun temp766_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp766_2 () (_ BitVec 64))
(declare-fun temp766_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp766_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp766_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp766_6 () (_ BitVec 64))
(declare-fun temp766_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_8 () (_ BitVec 64))
(declare-fun temp766_9 () (_ BitVec 64))
(declare-fun temp766_10 () (_ BitVec 64))
(declare-fun temp766_11 () (_ BitVec 64))
(declare-fun temp766_12 () (_ BitVec 64))
(declare-fun temp766_13 () (_ BitVec 64))
(declare-fun temp766_14 () (_ BitVec 64))
(declare-fun temp766_15 () (_ BitVec 64))
(declare-fun temp766_16 () (_ BitVec 64))
(declare-fun temp766_17 () (_ BitVec 64))
(declare-fun temp766_18 () (_ BitVec 64))
(declare-fun temp766_19 () (_ BitVec 64))
(declare-fun temp766_20 () (_ BitVec 64))
(declare-fun temp766_21 () (_ BitVec 64))
(declare-fun temp766_22 () (_ BitVec 64))
(declare-fun temp766_23 () (_ BitVec 64))
(declare-fun temp766_24 () (_ BitVec 64))
(declare-fun temp766_25 () (_ BitVec 64))
(declare-fun temp766_26 () (_ BitVec 64))
(declare-fun temp766_27 () (_ BitVec 64))
(declare-fun temp766_28 () (_ BitVec 64))
(declare-fun temp766_29 () (_ BitVec 64))
(declare-fun temp766_30 () (_ BitVec 64))
(declare-fun temp766_31 () (_ BitVec 64))
(declare-fun temp766_32 () (_ BitVec 64))
(declare-fun temp766_33 () (_ BitVec 64))
(declare-fun temp766_34 () (_ BitVec 64))
(declare-fun temp766_35 () (_ BitVec 64))
(declare-fun temp766_36 () (_ BitVec 64))
(declare-fun temp766_37 () (_ BitVec 64))
(declare-fun temp766_38 () (_ BitVec 64))
(declare-fun temp766_39 () (_ BitVec 64))
(declare-fun temp766_40 () (_ BitVec 64))
(declare-fun temp766_41 () (_ BitVec 64))
(declare-fun temp766_42 () (_ BitVec 64))
(declare-fun temp766_43 () (_ BitVec 64))
(declare-fun temp766_44 () (_ BitVec 64))
(declare-fun temp766_45 () (_ BitVec 64))
(declare-fun temp766_46 () (_ BitVec 64))
(declare-fun temp766_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp766_48 () (_ BitVec 64))
(declare-fun temp766_49 () (_ BitVec 64))
(declare-fun temp766_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_51 () (_ BitVec 64))
(declare-fun temp766_52 () (_ BitVec 64))
(declare-fun temp766_53 () (_ BitVec 64))
(declare-fun temp766_54 () (_ BitVec 64))
(declare-fun temp766_55 () (_ BitVec 64))
(declare-fun temp766_56 () (_ BitVec 64))
(declare-fun temp766_57 () (_ BitVec 64))
(declare-fun temp766_58 () (_ BitVec 64))
(declare-fun temp766_59 () (_ BitVec 64))
(declare-fun temp766_60 () (_ BitVec 64))
(declare-fun temp766_61 () (_ BitVec 64))
(declare-fun temp766_62 () (_ BitVec 64))
(declare-fun temp766_63 () (_ BitVec 64))
(declare-fun temp766_64 () (_ BitVec 64))
(declare-fun temp766_65 () (_ BitVec 64))
(declare-fun temp766_66 () (_ BitVec 64))
(declare-fun temp766_67 () (_ BitVec 64))
(declare-fun temp766_68 () (_ BitVec 64))
(declare-fun temp766_69 () (_ BitVec 64))
(declare-fun temp766_70 () (_ BitVec 64))
(declare-fun temp766_71 () (_ BitVec 64))
(declare-fun temp766_72 () (_ BitVec 64))
(declare-fun temp766_73 () (_ BitVec 64))
(declare-fun temp766_74 () (_ BitVec 64))
(declare-fun temp766_75 () (_ BitVec 64))
(declare-fun temp766_76 () (_ BitVec 64))
(declare-fun temp766_77 () (_ BitVec 64))
(declare-fun temp766_78 () (_ BitVec 64))
(declare-fun temp766_79 () (_ BitVec 64))
(declare-fun temp766_80 () (_ BitVec 64))
(declare-fun temp766_81 () (_ BitVec 64))
(declare-fun temp766_82 () (_ BitVec 64))
(declare-fun temp766_83 () (_ BitVec 64))
(declare-fun temp766_84 () (_ BitVec 64))
(declare-fun temp766_85 () (_ BitVec 64))
(declare-fun temp766_86 () (_ BitVec 64))
(declare-fun temp766_87 () (_ BitVec 64))
(declare-fun temp766_88 () (_ BitVec 64))
(declare-fun temp766_89 () (_ BitVec 64))
(declare-fun temp766_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp766_91 () (_ BitVec 64))
(declare-fun temp766_92 () (_ BitVec 64))
(declare-fun temp766_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_94 () (_ BitVec 64))
(declare-fun temp766_95 () (_ BitVec 64))
(declare-fun temp766_96 () (_ BitVec 64))
(declare-fun temp766_97 () (_ BitVec 64))
(declare-fun temp766_98 () (_ BitVec 64))
(declare-fun temp766_99 () (_ BitVec 64))
(declare-fun temp766_100 () (_ BitVec 64))
(declare-fun temp766_101 () (_ BitVec 64))
(declare-fun temp766_102 () (_ BitVec 64))
(declare-fun temp766_103 () (_ BitVec 64))
(declare-fun temp766_104 () (_ BitVec 64))
(declare-fun temp766_105 () (_ BitVec 64))
(declare-fun temp766_106 () (_ BitVec 64))
(declare-fun temp766_107 () (_ BitVec 64))
(declare-fun temp766_108 () (_ BitVec 64))
(declare-fun temp766_109 () (_ BitVec 64))
(declare-fun temp766_110 () (_ BitVec 64))
(declare-fun temp766_111 () (_ BitVec 64))
(declare-fun temp766_112 () (_ BitVec 64))
(declare-fun temp766_113 () (_ BitVec 64))
(declare-fun temp766_114 () (_ BitVec 64))
(declare-fun temp766_115 () (_ BitVec 64))
(declare-fun temp766_116 () (_ BitVec 64))
(declare-fun temp766_117 () (_ BitVec 64))
(declare-fun temp766_118 () (_ BitVec 64))
(declare-fun temp766_119 () (_ BitVec 64))
(declare-fun temp766_120 () (_ BitVec 64))
(declare-fun temp766_121 () (_ BitVec 64))
(declare-fun temp766_122 () (_ BitVec 64))
(declare-fun temp766_123 () (_ BitVec 64))
(declare-fun temp766_124 () (_ BitVec 64))
(declare-fun temp766_125 () (_ BitVec 64))
(declare-fun temp766_126 () (_ BitVec 64))
(declare-fun temp766_127 () (_ BitVec 64))
(declare-fun temp766_128 () (_ BitVec 64))
(declare-fun temp766_129 () (_ BitVec 64))
(declare-fun temp766_130 () (_ BitVec 64))
(declare-fun temp766_131 () (_ BitVec 64))
(declare-fun temp766_132 () (_ BitVec 64))
(declare-fun temp766_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp766_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp766_135 () (_ BitVec 64))
(declare-fun temp766_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp766_137 () (_ BitVec 64))
(declare-fun temp766_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_139 () (_ BitVec 64))
(declare-fun temp766_140 () (_ BitVec 64))
(declare-fun temp766_141 () (_ BitVec 64))
(declare-fun temp766_142 () (_ BitVec 64))
(declare-fun temp766_143 () (_ BitVec 64))
(declare-fun temp766_144 () (_ BitVec 64))
(declare-fun temp766_145 () (_ BitVec 64))
(declare-fun temp766_146 () (_ BitVec 64))
(declare-fun temp766_147 () (_ BitVec 64))
(declare-fun temp766_148 () (_ BitVec 64))
(declare-fun temp766_149 () (_ BitVec 64))
(declare-fun temp766_150 () (_ BitVec 64))
(declare-fun temp766_151 () (_ BitVec 64))
(declare-fun temp766_152 () (_ BitVec 64))
(declare-fun temp766_153 () (_ BitVec 64))
(declare-fun temp766_154 () (_ BitVec 64))
(declare-fun temp766_156 () (_ BitVec 64))
(declare-fun temp766_157 () (_ BitVec 64))
(declare-fun temp766_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp766_158 () (_ BitVec 64))
(declare-fun temp766_159 () (_ BitVec 64))
(declare-fun temp766_161 () (_ BitVec 64))
(declare-fun temp766_162 () (_ BitVec 64))
(declare-fun temp766_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp766_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp766_164 () (_ BitVec 64))
(declare-fun temp766_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp766_166 () (_ BitVec 64))
(declare-fun temp766_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp766_168 () (_ BitVec 64))
(declare-fun temp766_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_170 () (_ BitVec 64))
(declare-fun temp766_171 () (_ BitVec 64))
(declare-fun temp766_172 () (_ BitVec 64))
(declare-fun temp766_173 () (_ BitVec 64))
(declare-fun temp766_174 () (_ BitVec 64))
(declare-fun temp766_175 () (_ BitVec 64))
(declare-fun temp766_176 () (_ BitVec 64))
(declare-fun temp766_177 () (_ BitVec 64))
(declare-fun temp766_178 () (_ BitVec 64))
(declare-fun temp766_179 () (_ BitVec 64))
(declare-fun temp766_180 () (_ BitVec 64))
(declare-fun temp766_181 () (_ BitVec 64))
(declare-fun temp766_182 () (_ BitVec 64))
(declare-fun temp766_183 () (_ BitVec 64))
(declare-fun temp766_184 () (_ BitVec 64))
(declare-fun temp766_185 () (_ BitVec 64))
(declare-fun temp766_186 () (_ BitVec 64))
(declare-fun temp766_187 () (_ BitVec 64))
(declare-fun temp766_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp766_189 () (_ BitVec 64))
(declare-fun temp766_191 () (_ BitVec 64))
(declare-fun temp766_192 () (_ BitVec 64))
(declare-fun temp766_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp766_193 () (_ BitVec 64))
(declare-fun temp766_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp766_195 () (_ BitVec 64))
(declare-fun temp766_196 () (_ BitVec 64))
(declare-fun temp766_197 () (_ BitVec 64))
(declare-fun temp766_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_199 () (_ BitVec 64))
(declare-fun temp766_200 () (_ BitVec 64))
(declare-fun temp766_201 () (_ BitVec 64))
(declare-fun temp766_202 () (_ BitVec 64))
(declare-fun temp766_203 () (_ BitVec 64))
(declare-fun temp766_204 () (_ BitVec 64))
(declare-fun temp766_205 () (_ BitVec 64))
(declare-fun temp766_206 () (_ BitVec 64))
(declare-fun temp766_207 () (_ BitVec 64))
(declare-fun temp766_208 () (_ BitVec 64))
(declare-fun temp766_209 () (_ BitVec 64))
(declare-fun temp766_210 () (_ BitVec 64))
(declare-fun temp766_211 () (_ BitVec 64))
(declare-fun temp766_212 () (_ BitVec 64))
(declare-fun temp766_213 () (_ BitVec 64))
(declare-fun temp766_214 () (_ BitVec 64))
(declare-fun temp766_215 () (_ BitVec 64))
(declare-fun temp766_216 () (_ BitVec 64))
(declare-fun temp766_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp766_218 () (_ BitVec 64))
(declare-fun temp766_220 () (_ BitVec 64))
(declare-fun temp766_221 () (_ BitVec 64))
(declare-fun temp766_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp766_222 () (_ BitVec 64))
(declare-fun temp766_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp766_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp766_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp766_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp766_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp766_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp766_229 () (_ BitVec 64))
(declare-fun temp766_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp766_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp766_232 () (_ BitVec 64))
(declare-fun temp766_233 () (_ BitVec 64))
(declare-fun temp766_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp766_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp766_236 () (_ BitVec 64))
(declare-fun temp766_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp766_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp766_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp766_241 () (_ BitVec 64))
(declare-fun temp766_240 () (_ BitVec 64))
(declare-fun temp766_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp766_243 () (_ BitVec 64))
(declare-fun temp766_244 () (_ BitVec 64))
(declare-fun temp766_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp766_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp766_247 () (_ BitVec 64))
(declare-fun temp766_248 () (_ BitVec 64))
(assert (= temp766_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp766_1)))
(assert (= temp766_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp766_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_3 #x0000000000000000))
(assert (= var79869 temp766_3))
(assert (= temp766_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp766_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_5 #x0000000000000000))
(assert (= var79914 temp766_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp766_6 #x0000000000000000))
(assert (= temp766_7 temp766_6))
(assert (= temp766_8 (select ARGNAME_padding_NAMEEND_VAL temp766_7)))
(assert (= temp766_9 #x0000000000000001))
(assert (= temp766_10 temp766_9))
(assert (= temp766_11 (select ARGNAME_padding_NAMEEND_VAL temp766_10)))
(assert (= temp766_12 #x0000000000000002))
(assert (= temp766_13 temp766_12))
(assert (= temp766_14 (select ARGNAME_padding_NAMEEND_VAL temp766_13)))
(assert (= temp766_15 #x0000000000000003))
(assert (= temp766_16 temp766_15))
(assert (= temp766_17 (select ARGNAME_padding_NAMEEND_VAL temp766_16)))
(assert (= temp766_18 #x0000000000000004))
(assert (= temp766_19 temp766_18))
(assert (= temp766_20 (select ARGNAME_padding_NAMEEND_VAL temp766_19)))
(assert (= temp766_21 #x0000000000000005))
(assert (= temp766_22 temp766_21))
(assert (= temp766_23 (select ARGNAME_padding_NAMEEND_VAL temp766_22)))
(assert (= temp766_24 #x0000000000000000))
(assert (= temp766_25 #x0000000000000000))
(assert (= temp766_26 temp766_25))
(assert (= temp766_27 (select ARGNAME_padding_NAMEEND_VAL temp766_26)))
(assert (= temp766_28 #x0000000000000000))
(assert (= temp766_29 #x0000000000000001))
(assert (= temp766_30 temp766_29))
(assert (= temp766_31 (select ARGNAME_padding_NAMEEND_VAL temp766_30)))
(assert (= temp766_32 #x0000000000000000))
(assert (= temp766_33 #x0000000000000002))
(assert (= temp766_34 temp766_33))
(assert (= temp766_35 (select ARGNAME_padding_NAMEEND_VAL temp766_34)))
(assert (= temp766_36 #x0000000000000000))
(assert (= temp766_37 #x0000000000000003))
(assert (= temp766_38 temp766_37))
(assert (= temp766_39 (select ARGNAME_padding_NAMEEND_VAL temp766_38)))
(assert (= temp766_40 #x0000000000000000))
(assert (= temp766_41 #x0000000000000004))
(assert (= temp766_42 temp766_41))
(assert (= temp766_43 (select ARGNAME_padding_NAMEEND_VAL temp766_42)))
(assert (= temp766_44 #x0000000000000000))
(assert (= temp766_45 #x0000000000000005))
(assert (= temp766_46 temp766_45))
(assert (= temp766_47 (select ARGNAME_padding_NAMEEND_VAL temp766_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp766_27 temp766_24)
             (bvslt temp766_31 temp766_28)
             (bvslt temp766_35 temp766_32)
             (bvslt temp766_39 temp766_36)
             (bvslt temp766_43 temp766_40)
             (bvslt temp766_47 temp766_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_48 #x0000000000000000))
(assert (= var1322786 temp766_48))
(assert (= temp766_49 #x0000000000000000))
(assert (= temp766_50 temp766_49))
(assert (= temp766_51 (select ARGNAME_output_padding_NAMEEND_VAL temp766_50)))
(assert (= temp766_52 #x0000000000000001))
(assert (= temp766_53 temp766_52))
(assert (= temp766_54 (select ARGNAME_output_padding_NAMEEND_VAL temp766_53)))
(assert (= temp766_55 #x0000000000000002))
(assert (= temp766_56 temp766_55))
(assert (= temp766_57 (select ARGNAME_output_padding_NAMEEND_VAL temp766_56)))
(assert (= temp766_58 #x0000000000000003))
(assert (= temp766_59 temp766_58))
(assert (= temp766_60 (select ARGNAME_output_padding_NAMEEND_VAL temp766_59)))
(assert (= temp766_61 #x0000000000000004))
(assert (= temp766_62 temp766_61))
(assert (= temp766_63 (select ARGNAME_output_padding_NAMEEND_VAL temp766_62)))
(assert (= temp766_64 #x0000000000000005))
(assert (= temp766_65 temp766_64))
(assert (= temp766_66 (select ARGNAME_output_padding_NAMEEND_VAL temp766_65)))
(assert (= temp766_67 #x0000000000000000))
(assert (= temp766_68 #x0000000000000000))
(assert (= temp766_69 temp766_68))
(assert (= temp766_70 (select ARGNAME_output_padding_NAMEEND_VAL temp766_69)))
(assert (= temp766_71 #x0000000000000000))
(assert (= temp766_72 #x0000000000000001))
(assert (= temp766_73 temp766_72))
(assert (= temp766_74 (select ARGNAME_output_padding_NAMEEND_VAL temp766_73)))
(assert (= temp766_75 #x0000000000000000))
(assert (= temp766_76 #x0000000000000002))
(assert (= temp766_77 temp766_76))
(assert (= temp766_78 (select ARGNAME_output_padding_NAMEEND_VAL temp766_77)))
(assert (= temp766_79 #x0000000000000000))
(assert (= temp766_80 #x0000000000000003))
(assert (= temp766_81 temp766_80))
(assert (= temp766_82 (select ARGNAME_output_padding_NAMEEND_VAL temp766_81)))
(assert (= temp766_83 #x0000000000000000))
(assert (= temp766_84 #x0000000000000004))
(assert (= temp766_85 temp766_84))
(assert (= temp766_86 (select ARGNAME_output_padding_NAMEEND_VAL temp766_85)))
(assert (= temp766_87 #x0000000000000000))
(assert (= temp766_88 #x0000000000000005))
(assert (= temp766_89 temp766_88))
(assert (= temp766_90 (select ARGNAME_output_padding_NAMEEND_VAL temp766_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp766_70 temp766_67)
             (bvslt temp766_74 temp766_71)
             (bvslt temp766_78 temp766_75)
             (bvslt temp766_82 temp766_79)
             (bvslt temp766_86 temp766_83)
             (bvslt temp766_90 temp766_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_91 #x0000000000000000))
(assert (= var1322797 temp766_91))
(assert (= temp766_92 #x0000000000000000))
(assert (= temp766_93 temp766_92))
(assert (= temp766_94 (select ARGNAME_stride_NAMEEND_VAL temp766_93)))
(assert (= temp766_95 #x0000000000000001))
(assert (= temp766_96 temp766_95))
(assert (= temp766_97 (select ARGNAME_stride_NAMEEND_VAL temp766_96)))
(assert (= temp766_98 #x0000000000000002))
(assert (= temp766_99 temp766_98))
(assert (= temp766_100 (select ARGNAME_stride_NAMEEND_VAL temp766_99)))
(assert (= temp766_101 #x0000000000000003))
(assert (= temp766_102 temp766_101))
(assert (= temp766_103 (select ARGNAME_stride_NAMEEND_VAL temp766_102)))
(assert (= temp766_104 #x0000000000000004))
(assert (= temp766_105 temp766_104))
(assert (= temp766_106 (select ARGNAME_stride_NAMEEND_VAL temp766_105)))
(assert (= temp766_107 #x0000000000000005))
(assert (= temp766_108 temp766_107))
(assert (= temp766_109 (select ARGNAME_stride_NAMEEND_VAL temp766_108)))
(assert (= temp766_110 #x0000000000000000))
(assert (= temp766_111 #x0000000000000000))
(assert (= temp766_112 temp766_111))
(assert (= temp766_113 (select ARGNAME_stride_NAMEEND_VAL temp766_112)))
(assert (= temp766_114 #x0000000000000000))
(assert (= temp766_115 #x0000000000000001))
(assert (= temp766_116 temp766_115))
(assert (= temp766_117 (select ARGNAME_stride_NAMEEND_VAL temp766_116)))
(assert (= temp766_118 #x0000000000000000))
(assert (= temp766_119 #x0000000000000002))
(assert (= temp766_120 temp766_119))
(assert (= temp766_121 (select ARGNAME_stride_NAMEEND_VAL temp766_120)))
(assert (= temp766_122 #x0000000000000000))
(assert (= temp766_123 #x0000000000000003))
(assert (= temp766_124 temp766_123))
(assert (= temp766_125 (select ARGNAME_stride_NAMEEND_VAL temp766_124)))
(assert (= temp766_126 #x0000000000000000))
(assert (= temp766_127 #x0000000000000004))
(assert (= temp766_128 temp766_127))
(assert (= temp766_129 (select ARGNAME_stride_NAMEEND_VAL temp766_128)))
(assert (= temp766_130 #x0000000000000000))
(assert (= temp766_131 #x0000000000000005))
(assert (= temp766_132 temp766_131))
(assert (= temp766_133 (select ARGNAME_stride_NAMEEND_VAL temp766_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp766_113 temp766_110)
             (bvsle temp766_117 temp766_114)
             (bvsle temp766_121 temp766_118)
             (bvsle temp766_125 temp766_122)
             (bvsle temp766_129 temp766_126)
             (bvsle temp766_133 temp766_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_134 #x0000000000000000))
(assert (= var1322807 temp766_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_135 #x0000000000000001))
(assert (= var1322819 temp766_135))
(assert (= temp766_136 #x0000000000000000))
(assert (= var1310898 temp766_136))
(assert (= temp766_137 #x0000000000000000))
(assert (= temp766_138 temp766_137))
(assert (= temp766_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_138)))
(assert (= temp766_140 #x0000000000000001))
(assert (= temp766_141 temp766_140))
(assert (= temp766_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_141)))
(assert (= temp766_143 #x0000000000000002))
(assert (= temp766_144 temp766_143))
(assert (= temp766_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_144)))
(assert (= temp766_146 #x0000000000000003))
(assert (= temp766_147 temp766_146))
(assert (= temp766_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_147)))
(assert (= temp766_149 #x0000000000000004))
(assert (= temp766_150 temp766_149))
(assert (= temp766_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_150)))
(assert (= temp766_152 #x0000000000000005))
(assert (= temp766_153 temp766_152))
(assert (= temp766_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_153)))
(assert (= temp766_156 var1310898))
(assert (= temp766_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_156)))
(assert (= temp766_155 temp766_157))
(assert (= var1322852
   (ite (bvslt temp766_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_158 #x0000000000000000))
(assert (= var1322852 temp766_158))
(assert (= temp766_159 #x0000000000000000))
(assert (= var1310898 temp766_159))
(assert (= temp766_161 var1310898))
(assert (= temp766_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_161)))
(assert (= temp766_160 temp766_162))
(assert (= var1322874 (bvsmod temp766_160 ARGNAME_groups_NAMEEND)))
(assert (= temp766_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp766_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_164 #x0000000000000001))
(assert (= var1322875 temp766_164))
(assert (= temp766_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp766_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_166 #x0000000000000001))
(assert (= var1322895 temp766_166))
(assert (= temp766_167 #x0000000000000001))
(assert (= var1311786 temp766_167))
(assert (= temp766_168 #x0000000000000000))
(assert (= temp766_169 temp766_168))
(assert (= temp766_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_169)))
(assert (= temp766_171 #x0000000000000001))
(assert (= temp766_172 temp766_171))
(assert (= temp766_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_172)))
(assert (= temp766_174 #x0000000000000002))
(assert (= temp766_175 temp766_174))
(assert (= temp766_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_175)))
(assert (= temp766_177 #x0000000000000003))
(assert (= temp766_178 temp766_177))
(assert (= temp766_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_178)))
(assert (= temp766_180 #x0000000000000004))
(assert (= temp766_181 temp766_180))
(assert (= temp766_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_181)))
(assert (= temp766_183 #x0000000000000005))
(assert (= temp766_184 temp766_183))
(assert (= temp766_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_184)))
(assert (= temp766_186 #x0000000000000000))
(assert (= temp766_187
   (ite (bvslt var1311786 temp766_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp766_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_187)))
(assert (= var1322903 temp766_188))
(assert (bvslt (ite (bvslt var1311786 temp766_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp766_189 #x0000000000000001))
(assert (= var1311786 temp766_189))
(assert (= temp766_191 var1311786))
(assert (= temp766_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_191)))
(assert (= temp766_190 temp766_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp766_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_193 #x0000000000000001))
(assert (= var1322908 temp766_193))
(assert (= temp766_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp766_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_195 #x0000000000000001))
(assert (= var1322975 temp766_195))
(assert (= temp766_196 #x0000000000000000))
(assert (= var1310898 temp766_196))
(assert (= temp766_197 #x0000000000000000))
(assert (= temp766_198 temp766_197))
(assert (= temp766_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp766_198)))
(assert (= temp766_200 #x0000000000000001))
(assert (= temp766_201 temp766_200))
(assert (= temp766_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp766_201)))
(assert (= temp766_203 #x0000000000000002))
(assert (= temp766_204 temp766_203))
(assert (= temp766_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp766_204)))
(assert (= temp766_206 #x0000000000000003))
(assert (= temp766_207 temp766_206))
(assert (= temp766_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp766_207)))
(assert (= temp766_209 #x0000000000000004))
(assert (= temp766_210 temp766_209))
(assert (= temp766_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp766_210)))
(assert (= temp766_212 #x0000000000000005))
(assert (= temp766_213 temp766_212))
(assert (= temp766_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp766_213)))
(assert (= temp766_215 #x0000000000000000))
(assert (= temp766_216
   (ite (bvslt var1310898 temp766_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp766_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp766_216)))
(assert (= var1322977 temp766_217))
(assert (bvslt (ite (bvslt var1310898 temp766_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp766_218 #x0000000000000000))
(assert (= var1310898 temp766_218))
(assert (= temp766_220 var1310898))
(assert (= temp766_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_220)))
(assert (= temp766_219 temp766_221))
(assert (= var1322980
   (ite (= var1322977 temp766_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_222 #x0000000000000001))
(assert (= var1322980 temp766_222))
(assert (= temp766_223 #x0000000000000002))
(assert (= var1848169 temp766_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp766_225 #x0000000000000001))
(assert (= var1323065 temp766_225))
(assert (= temp766_226 #x0000000000000001))
(assert (= var3486735 temp766_226))
(assert (= temp766_227 #x0000000000000001))
(assert (= var3814415 temp766_227))
(assert (= temp766_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp766_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_229 #x0000000000000001))
(assert (= var79986 temp766_229))
(assert (= temp766_230 #x0000000000000001))
(assert (= var80116 temp766_230))
(assert (= var4796905 var80116))
(assert (= temp766_231 #x0000000000000000))
(assert (= var4784306 temp766_231))
(assert (= temp766_232 #x0000000000000000))
(assert (= temp766_233
   (ite (bvslt var4784306 temp766_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp766_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_233)))
(assert (= var4796924 temp766_234))
(assert (bvslt (ite (bvslt var4784306 temp766_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp766_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp766_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_236 #x0000000000000001))
(assert (= var4796925 temp766_236))
(assert (= temp766_237 #x0000000000000000))
(assert (= var4996927 temp766_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp766_238 #x0000000000000002))
(assert (= var5125763 temp766_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_239 #x0000000000000000))
(assert (= var5191324 temp766_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp766_241 #xffffffffffffffff))
(assert (= temp766_240 temp766_241))
(assert (= temp766_242 #x0000000000000001))
(assert (= var66602 temp766_242))
(assert (= temp766_243 #x0000000000000000))
(assert (= temp766_244
   (ite (bvslt var66602 temp766_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp766_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_244)))
(assert (= var80523 temp766_245))
(assert (bvslt (ite (bvslt var66602 temp766_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp766_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp766_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_247 #x0000000000000000))
(assert (= var80524 temp766_247))
(assert (= temp766_248 #x0000000000000001))
(assert (= var79986 temp766_248))
(model-add temp766_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp766_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp766_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






