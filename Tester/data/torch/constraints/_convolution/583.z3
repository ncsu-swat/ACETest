(declare-fun temp774_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp774_2 () (_ BitVec 64))
(declare-fun temp774_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp774_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp774_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp774_6 () (_ BitVec 64))
(declare-fun temp774_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp774_8 () (_ BitVec 64))
(declare-fun temp774_9 () (_ BitVec 64))
(declare-fun temp774_10 () (_ BitVec 64))
(declare-fun temp774_11 () (_ BitVec 64))
(declare-fun temp774_12 () (_ BitVec 64))
(declare-fun temp774_13 () (_ BitVec 64))
(declare-fun temp774_14 () (_ BitVec 64))
(declare-fun temp774_15 () (_ BitVec 64))
(declare-fun temp774_16 () (_ BitVec 64))
(declare-fun temp774_17 () (_ BitVec 64))
(declare-fun temp774_18 () (_ BitVec 64))
(declare-fun temp774_19 () (_ BitVec 64))
(declare-fun temp774_20 () (_ BitVec 64))
(declare-fun temp774_21 () (_ BitVec 64))
(declare-fun temp774_22 () (_ BitVec 64))
(declare-fun temp774_23 () (_ BitVec 64))
(declare-fun temp774_24 () (_ BitVec 64))
(declare-fun temp774_25 () (_ BitVec 64))
(declare-fun temp774_26 () (_ BitVec 64))
(declare-fun temp774_27 () (_ BitVec 64))
(declare-fun temp774_28 () (_ BitVec 64))
(declare-fun temp774_29 () (_ BitVec 64))
(declare-fun temp774_30 () (_ BitVec 64))
(declare-fun temp774_31 () (_ BitVec 64))
(declare-fun temp774_32 () (_ BitVec 64))
(declare-fun temp774_33 () (_ BitVec 64))
(declare-fun temp774_34 () (_ BitVec 64))
(declare-fun temp774_35 () (_ BitVec 64))
(declare-fun temp774_36 () (_ BitVec 64))
(declare-fun temp774_37 () (_ BitVec 64))
(declare-fun temp774_38 () (_ BitVec 64))
(declare-fun temp774_39 () (_ BitVec 64))
(declare-fun temp774_40 () (_ BitVec 64))
(declare-fun temp774_41 () (_ BitVec 64))
(declare-fun temp774_42 () (_ BitVec 64))
(declare-fun temp774_43 () (_ BitVec 64))
(declare-fun temp774_44 () (_ BitVec 64))
(declare-fun temp774_45 () (_ BitVec 64))
(declare-fun temp774_46 () (_ BitVec 64))
(declare-fun temp774_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp774_48 () (_ BitVec 64))
(declare-fun temp774_49 () (_ BitVec 64))
(declare-fun temp774_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp774_51 () (_ BitVec 64))
(declare-fun temp774_52 () (_ BitVec 64))
(declare-fun temp774_53 () (_ BitVec 64))
(declare-fun temp774_54 () (_ BitVec 64))
(declare-fun temp774_55 () (_ BitVec 64))
(declare-fun temp774_56 () (_ BitVec 64))
(declare-fun temp774_57 () (_ BitVec 64))
(declare-fun temp774_58 () (_ BitVec 64))
(declare-fun temp774_59 () (_ BitVec 64))
(declare-fun temp774_60 () (_ BitVec 64))
(declare-fun temp774_61 () (_ BitVec 64))
(declare-fun temp774_62 () (_ BitVec 64))
(declare-fun temp774_63 () (_ BitVec 64))
(declare-fun temp774_64 () (_ BitVec 64))
(declare-fun temp774_65 () (_ BitVec 64))
(declare-fun temp774_66 () (_ BitVec 64))
(declare-fun temp774_67 () (_ BitVec 64))
(declare-fun temp774_68 () (_ BitVec 64))
(declare-fun temp774_69 () (_ BitVec 64))
(declare-fun temp774_70 () (_ BitVec 64))
(declare-fun temp774_71 () (_ BitVec 64))
(declare-fun temp774_72 () (_ BitVec 64))
(declare-fun temp774_73 () (_ BitVec 64))
(declare-fun temp774_74 () (_ BitVec 64))
(declare-fun temp774_75 () (_ BitVec 64))
(declare-fun temp774_76 () (_ BitVec 64))
(declare-fun temp774_77 () (_ BitVec 64))
(declare-fun temp774_78 () (_ BitVec 64))
(declare-fun temp774_79 () (_ BitVec 64))
(declare-fun temp774_80 () (_ BitVec 64))
(declare-fun temp774_81 () (_ BitVec 64))
(declare-fun temp774_82 () (_ BitVec 64))
(declare-fun temp774_83 () (_ BitVec 64))
(declare-fun temp774_84 () (_ BitVec 64))
(declare-fun temp774_85 () (_ BitVec 64))
(declare-fun temp774_86 () (_ BitVec 64))
(declare-fun temp774_87 () (_ BitVec 64))
(declare-fun temp774_88 () (_ BitVec 64))
(declare-fun temp774_89 () (_ BitVec 64))
(declare-fun temp774_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp774_91 () (_ BitVec 64))
(declare-fun temp774_92 () (_ BitVec 64))
(declare-fun temp774_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp774_94 () (_ BitVec 64))
(declare-fun temp774_95 () (_ BitVec 64))
(declare-fun temp774_96 () (_ BitVec 64))
(declare-fun temp774_97 () (_ BitVec 64))
(declare-fun temp774_98 () (_ BitVec 64))
(declare-fun temp774_99 () (_ BitVec 64))
(declare-fun temp774_100 () (_ BitVec 64))
(declare-fun temp774_101 () (_ BitVec 64))
(declare-fun temp774_102 () (_ BitVec 64))
(declare-fun temp774_103 () (_ BitVec 64))
(declare-fun temp774_104 () (_ BitVec 64))
(declare-fun temp774_105 () (_ BitVec 64))
(declare-fun temp774_106 () (_ BitVec 64))
(declare-fun temp774_107 () (_ BitVec 64))
(declare-fun temp774_108 () (_ BitVec 64))
(declare-fun temp774_109 () (_ BitVec 64))
(declare-fun temp774_110 () (_ BitVec 64))
(declare-fun temp774_111 () (_ BitVec 64))
(declare-fun temp774_112 () (_ BitVec 64))
(declare-fun temp774_113 () (_ BitVec 64))
(declare-fun temp774_114 () (_ BitVec 64))
(declare-fun temp774_115 () (_ BitVec 64))
(declare-fun temp774_116 () (_ BitVec 64))
(declare-fun temp774_117 () (_ BitVec 64))
(declare-fun temp774_118 () (_ BitVec 64))
(declare-fun temp774_119 () (_ BitVec 64))
(declare-fun temp774_120 () (_ BitVec 64))
(declare-fun temp774_121 () (_ BitVec 64))
(declare-fun temp774_122 () (_ BitVec 64))
(declare-fun temp774_123 () (_ BitVec 64))
(declare-fun temp774_124 () (_ BitVec 64))
(declare-fun temp774_125 () (_ BitVec 64))
(declare-fun temp774_126 () (_ BitVec 64))
(declare-fun temp774_127 () (_ BitVec 64))
(declare-fun temp774_128 () (_ BitVec 64))
(declare-fun temp774_129 () (_ BitVec 64))
(declare-fun temp774_130 () (_ BitVec 64))
(declare-fun temp774_131 () (_ BitVec 64))
(declare-fun temp774_132 () (_ BitVec 64))
(declare-fun temp774_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp774_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp774_135 () (_ BitVec 64))
(declare-fun temp774_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp774_137 () (_ BitVec 64))
(declare-fun temp774_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp774_139 () (_ BitVec 64))
(declare-fun temp774_140 () (_ BitVec 64))
(declare-fun temp774_141 () (_ BitVec 64))
(declare-fun temp774_142 () (_ BitVec 64))
(declare-fun temp774_143 () (_ BitVec 64))
(declare-fun temp774_144 () (_ BitVec 64))
(declare-fun temp774_145 () (_ BitVec 64))
(declare-fun temp774_146 () (_ BitVec 64))
(declare-fun temp774_147 () (_ BitVec 64))
(declare-fun temp774_148 () (_ BitVec 64))
(declare-fun temp774_149 () (_ BitVec 64))
(declare-fun temp774_150 () (_ BitVec 64))
(declare-fun temp774_151 () (_ BitVec 64))
(declare-fun temp774_152 () (_ BitVec 64))
(declare-fun temp774_153 () (_ BitVec 64))
(declare-fun temp774_154 () (_ BitVec 64))
(declare-fun temp774_156 () (_ BitVec 64))
(declare-fun temp774_157 () (_ BitVec 64))
(declare-fun temp774_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp774_158 () (_ BitVec 64))
(declare-fun temp774_159 () (_ BitVec 64))
(declare-fun temp774_161 () (_ BitVec 64))
(declare-fun temp774_162 () (_ BitVec 64))
(declare-fun temp774_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp774_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp774_164 () (_ BitVec 64))
(declare-fun temp774_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp774_166 () (_ BitVec 64))
(declare-fun temp774_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp774_168 () (_ BitVec 64))
(declare-fun temp774_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp774_170 () (_ BitVec 64))
(declare-fun temp774_171 () (_ BitVec 64))
(declare-fun temp774_172 () (_ BitVec 64))
(declare-fun temp774_173 () (_ BitVec 64))
(declare-fun temp774_174 () (_ BitVec 64))
(declare-fun temp774_175 () (_ BitVec 64))
(declare-fun temp774_176 () (_ BitVec 64))
(declare-fun temp774_177 () (_ BitVec 64))
(declare-fun temp774_178 () (_ BitVec 64))
(declare-fun temp774_179 () (_ BitVec 64))
(declare-fun temp774_180 () (_ BitVec 64))
(declare-fun temp774_181 () (_ BitVec 64))
(declare-fun temp774_182 () (_ BitVec 64))
(declare-fun temp774_183 () (_ BitVec 64))
(declare-fun temp774_184 () (_ BitVec 64))
(declare-fun temp774_185 () (_ BitVec 64))
(declare-fun temp774_186 () (_ BitVec 64))
(declare-fun temp774_187 () (_ BitVec 64))
(declare-fun temp774_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp774_189 () (_ BitVec 64))
(declare-fun temp774_191 () (_ BitVec 64))
(declare-fun temp774_192 () (_ BitVec 64))
(declare-fun temp774_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp774_193 () (_ BitVec 64))
(declare-fun temp774_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp774_195 () (_ BitVec 64))
(declare-fun temp774_196 () (_ BitVec 64))
(declare-fun temp774_197 () (_ BitVec 64))
(declare-fun temp774_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp774_199 () (_ BitVec 64))
(declare-fun temp774_200 () (_ BitVec 64))
(declare-fun temp774_201 () (_ BitVec 64))
(declare-fun temp774_202 () (_ BitVec 64))
(declare-fun temp774_203 () (_ BitVec 64))
(declare-fun temp774_204 () (_ BitVec 64))
(declare-fun temp774_205 () (_ BitVec 64))
(declare-fun temp774_206 () (_ BitVec 64))
(declare-fun temp774_207 () (_ BitVec 64))
(declare-fun temp774_208 () (_ BitVec 64))
(declare-fun temp774_209 () (_ BitVec 64))
(declare-fun temp774_210 () (_ BitVec 64))
(declare-fun temp774_211 () (_ BitVec 64))
(declare-fun temp774_212 () (_ BitVec 64))
(declare-fun temp774_213 () (_ BitVec 64))
(declare-fun temp774_214 () (_ BitVec 64))
(declare-fun temp774_215 () (_ BitVec 64))
(declare-fun temp774_216 () (_ BitVec 64))
(declare-fun temp774_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp774_218 () (_ BitVec 64))
(declare-fun temp774_220 () (_ BitVec 64))
(declare-fun temp774_221 () (_ BitVec 64))
(declare-fun temp774_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp774_222 () (_ BitVec 64))
(declare-fun temp774_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp774_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp774_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp774_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp774_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp774_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp774_229 () (_ BitVec 64))
(declare-fun temp774_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp774_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp774_232 () (_ BitVec 64))
(declare-fun temp774_233 () (_ BitVec 64))
(declare-fun temp774_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp774_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp774_236 () (_ BitVec 64))
(declare-fun temp774_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp774_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp774_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp774_241 () (_ BitVec 64))
(declare-fun temp774_240 () (_ BitVec 64))
(declare-fun temp774_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp774_243 () (_ BitVec 64))
(declare-fun temp774_244 () (_ BitVec 64))
(declare-fun temp774_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp774_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp774_247 () (_ BitVec 64))
(declare-fun temp774_248 () (_ BitVec 64))
(assert (= temp774_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp774_1)))
(assert (= temp774_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp774_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_3 #x0000000000000000))
(assert (= var79869 temp774_3))
(assert (= temp774_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp774_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_5 #x0000000000000000))
(assert (= var79914 temp774_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp774_6 #x0000000000000000))
(assert (= temp774_7 temp774_6))
(assert (= temp774_8 (select ARGNAME_padding_NAMEEND_VAL temp774_7)))
(assert (= temp774_9 #x0000000000000001))
(assert (= temp774_10 temp774_9))
(assert (= temp774_11 (select ARGNAME_padding_NAMEEND_VAL temp774_10)))
(assert (= temp774_12 #x0000000000000002))
(assert (= temp774_13 temp774_12))
(assert (= temp774_14 (select ARGNAME_padding_NAMEEND_VAL temp774_13)))
(assert (= temp774_15 #x0000000000000003))
(assert (= temp774_16 temp774_15))
(assert (= temp774_17 (select ARGNAME_padding_NAMEEND_VAL temp774_16)))
(assert (= temp774_18 #x0000000000000004))
(assert (= temp774_19 temp774_18))
(assert (= temp774_20 (select ARGNAME_padding_NAMEEND_VAL temp774_19)))
(assert (= temp774_21 #x0000000000000005))
(assert (= temp774_22 temp774_21))
(assert (= temp774_23 (select ARGNAME_padding_NAMEEND_VAL temp774_22)))
(assert (= temp774_24 #x0000000000000000))
(assert (= temp774_25 #x0000000000000000))
(assert (= temp774_26 temp774_25))
(assert (= temp774_27 (select ARGNAME_padding_NAMEEND_VAL temp774_26)))
(assert (= temp774_28 #x0000000000000000))
(assert (= temp774_29 #x0000000000000001))
(assert (= temp774_30 temp774_29))
(assert (= temp774_31 (select ARGNAME_padding_NAMEEND_VAL temp774_30)))
(assert (= temp774_32 #x0000000000000000))
(assert (= temp774_33 #x0000000000000002))
(assert (= temp774_34 temp774_33))
(assert (= temp774_35 (select ARGNAME_padding_NAMEEND_VAL temp774_34)))
(assert (= temp774_36 #x0000000000000000))
(assert (= temp774_37 #x0000000000000003))
(assert (= temp774_38 temp774_37))
(assert (= temp774_39 (select ARGNAME_padding_NAMEEND_VAL temp774_38)))
(assert (= temp774_40 #x0000000000000000))
(assert (= temp774_41 #x0000000000000004))
(assert (= temp774_42 temp774_41))
(assert (= temp774_43 (select ARGNAME_padding_NAMEEND_VAL temp774_42)))
(assert (= temp774_44 #x0000000000000000))
(assert (= temp774_45 #x0000000000000005))
(assert (= temp774_46 temp774_45))
(assert (= temp774_47 (select ARGNAME_padding_NAMEEND_VAL temp774_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp774_27 temp774_24)
             (bvslt temp774_31 temp774_28)
             (bvslt temp774_35 temp774_32)
             (bvslt temp774_39 temp774_36)
             (bvslt temp774_43 temp774_40)
             (bvslt temp774_47 temp774_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_48 #x0000000000000000))
(assert (= var1322786 temp774_48))
(assert (= temp774_49 #x0000000000000000))
(assert (= temp774_50 temp774_49))
(assert (= temp774_51 (select ARGNAME_output_padding_NAMEEND_VAL temp774_50)))
(assert (= temp774_52 #x0000000000000001))
(assert (= temp774_53 temp774_52))
(assert (= temp774_54 (select ARGNAME_output_padding_NAMEEND_VAL temp774_53)))
(assert (= temp774_55 #x0000000000000002))
(assert (= temp774_56 temp774_55))
(assert (= temp774_57 (select ARGNAME_output_padding_NAMEEND_VAL temp774_56)))
(assert (= temp774_58 #x0000000000000003))
(assert (= temp774_59 temp774_58))
(assert (= temp774_60 (select ARGNAME_output_padding_NAMEEND_VAL temp774_59)))
(assert (= temp774_61 #x0000000000000004))
(assert (= temp774_62 temp774_61))
(assert (= temp774_63 (select ARGNAME_output_padding_NAMEEND_VAL temp774_62)))
(assert (= temp774_64 #x0000000000000005))
(assert (= temp774_65 temp774_64))
(assert (= temp774_66 (select ARGNAME_output_padding_NAMEEND_VAL temp774_65)))
(assert (= temp774_67 #x0000000000000000))
(assert (= temp774_68 #x0000000000000000))
(assert (= temp774_69 temp774_68))
(assert (= temp774_70 (select ARGNAME_output_padding_NAMEEND_VAL temp774_69)))
(assert (= temp774_71 #x0000000000000000))
(assert (= temp774_72 #x0000000000000001))
(assert (= temp774_73 temp774_72))
(assert (= temp774_74 (select ARGNAME_output_padding_NAMEEND_VAL temp774_73)))
(assert (= temp774_75 #x0000000000000000))
(assert (= temp774_76 #x0000000000000002))
(assert (= temp774_77 temp774_76))
(assert (= temp774_78 (select ARGNAME_output_padding_NAMEEND_VAL temp774_77)))
(assert (= temp774_79 #x0000000000000000))
(assert (= temp774_80 #x0000000000000003))
(assert (= temp774_81 temp774_80))
(assert (= temp774_82 (select ARGNAME_output_padding_NAMEEND_VAL temp774_81)))
(assert (= temp774_83 #x0000000000000000))
(assert (= temp774_84 #x0000000000000004))
(assert (= temp774_85 temp774_84))
(assert (= temp774_86 (select ARGNAME_output_padding_NAMEEND_VAL temp774_85)))
(assert (= temp774_87 #x0000000000000000))
(assert (= temp774_88 #x0000000000000005))
(assert (= temp774_89 temp774_88))
(assert (= temp774_90 (select ARGNAME_output_padding_NAMEEND_VAL temp774_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp774_70 temp774_67)
             (bvslt temp774_74 temp774_71)
             (bvslt temp774_78 temp774_75)
             (bvslt temp774_82 temp774_79)
             (bvslt temp774_86 temp774_83)
             (bvslt temp774_90 temp774_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_91 #x0000000000000000))
(assert (= var1322797 temp774_91))
(assert (= temp774_92 #x0000000000000000))
(assert (= temp774_93 temp774_92))
(assert (= temp774_94 (select ARGNAME_stride_NAMEEND_VAL temp774_93)))
(assert (= temp774_95 #x0000000000000001))
(assert (= temp774_96 temp774_95))
(assert (= temp774_97 (select ARGNAME_stride_NAMEEND_VAL temp774_96)))
(assert (= temp774_98 #x0000000000000002))
(assert (= temp774_99 temp774_98))
(assert (= temp774_100 (select ARGNAME_stride_NAMEEND_VAL temp774_99)))
(assert (= temp774_101 #x0000000000000003))
(assert (= temp774_102 temp774_101))
(assert (= temp774_103 (select ARGNAME_stride_NAMEEND_VAL temp774_102)))
(assert (= temp774_104 #x0000000000000004))
(assert (= temp774_105 temp774_104))
(assert (= temp774_106 (select ARGNAME_stride_NAMEEND_VAL temp774_105)))
(assert (= temp774_107 #x0000000000000005))
(assert (= temp774_108 temp774_107))
(assert (= temp774_109 (select ARGNAME_stride_NAMEEND_VAL temp774_108)))
(assert (= temp774_110 #x0000000000000000))
(assert (= temp774_111 #x0000000000000000))
(assert (= temp774_112 temp774_111))
(assert (= temp774_113 (select ARGNAME_stride_NAMEEND_VAL temp774_112)))
(assert (= temp774_114 #x0000000000000000))
(assert (= temp774_115 #x0000000000000001))
(assert (= temp774_116 temp774_115))
(assert (= temp774_117 (select ARGNAME_stride_NAMEEND_VAL temp774_116)))
(assert (= temp774_118 #x0000000000000000))
(assert (= temp774_119 #x0000000000000002))
(assert (= temp774_120 temp774_119))
(assert (= temp774_121 (select ARGNAME_stride_NAMEEND_VAL temp774_120)))
(assert (= temp774_122 #x0000000000000000))
(assert (= temp774_123 #x0000000000000003))
(assert (= temp774_124 temp774_123))
(assert (= temp774_125 (select ARGNAME_stride_NAMEEND_VAL temp774_124)))
(assert (= temp774_126 #x0000000000000000))
(assert (= temp774_127 #x0000000000000004))
(assert (= temp774_128 temp774_127))
(assert (= temp774_129 (select ARGNAME_stride_NAMEEND_VAL temp774_128)))
(assert (= temp774_130 #x0000000000000000))
(assert (= temp774_131 #x0000000000000005))
(assert (= temp774_132 temp774_131))
(assert (= temp774_133 (select ARGNAME_stride_NAMEEND_VAL temp774_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp774_113 temp774_110)
             (bvsle temp774_117 temp774_114)
             (bvsle temp774_121 temp774_118)
             (bvsle temp774_125 temp774_122)
             (bvsle temp774_129 temp774_126)
             (bvsle temp774_133 temp774_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_134 #x0000000000000000))
(assert (= var1322807 temp774_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_135 #x0000000000000001))
(assert (= var1322819 temp774_135))
(assert (= temp774_136 #x0000000000000000))
(assert (= var1310898 temp774_136))
(assert (= temp774_137 #x0000000000000000))
(assert (= temp774_138 temp774_137))
(assert (= temp774_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_138)))
(assert (= temp774_140 #x0000000000000001))
(assert (= temp774_141 temp774_140))
(assert (= temp774_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_141)))
(assert (= temp774_143 #x0000000000000002))
(assert (= temp774_144 temp774_143))
(assert (= temp774_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_144)))
(assert (= temp774_146 #x0000000000000003))
(assert (= temp774_147 temp774_146))
(assert (= temp774_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_147)))
(assert (= temp774_149 #x0000000000000004))
(assert (= temp774_150 temp774_149))
(assert (= temp774_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_150)))
(assert (= temp774_152 #x0000000000000005))
(assert (= temp774_153 temp774_152))
(assert (= temp774_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_153)))
(assert (= temp774_156 var1310898))
(assert (= temp774_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_156)))
(assert (= temp774_155 temp774_157))
(assert (= var1322852
   (ite (bvslt temp774_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_158 #x0000000000000000))
(assert (= var1322852 temp774_158))
(assert (= temp774_159 #x0000000000000000))
(assert (= var1310898 temp774_159))
(assert (= temp774_161 var1310898))
(assert (= temp774_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_161)))
(assert (= temp774_160 temp774_162))
(assert (= var1322874 (bvsmod temp774_160 ARGNAME_groups_NAMEEND)))
(assert (= temp774_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp774_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp774_164 #x0000000000000001))
(assert (= var1322875 temp774_164))
(assert (= temp774_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp774_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_166 #x0000000000000001))
(assert (= var1322895 temp774_166))
(assert (= temp774_167 #x0000000000000001))
(assert (= var1311786 temp774_167))
(assert (= temp774_168 #x0000000000000000))
(assert (= temp774_169 temp774_168))
(assert (= temp774_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp774_169)))
(assert (= temp774_171 #x0000000000000001))
(assert (= temp774_172 temp774_171))
(assert (= temp774_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp774_172)))
(assert (= temp774_174 #x0000000000000002))
(assert (= temp774_175 temp774_174))
(assert (= temp774_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp774_175)))
(assert (= temp774_177 #x0000000000000003))
(assert (= temp774_178 temp774_177))
(assert (= temp774_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp774_178)))
(assert (= temp774_180 #x0000000000000004))
(assert (= temp774_181 temp774_180))
(assert (= temp774_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp774_181)))
(assert (= temp774_183 #x0000000000000005))
(assert (= temp774_184 temp774_183))
(assert (= temp774_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp774_184)))
(assert (= temp774_186 #x0000000000000000))
(assert (= temp774_187
   (ite (bvslt var1311786 temp774_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp774_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp774_187)))
(assert (= var1322903 temp774_188))
(assert (bvslt (ite (bvslt var1311786 temp774_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp774_189 #x0000000000000001))
(assert (= var1311786 temp774_189))
(assert (= temp774_191 var1311786))
(assert (= temp774_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_191)))
(assert (= temp774_190 temp774_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp774_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp774_193 #x0000000000000001))
(assert (= var1322908 temp774_193))
(assert (= temp774_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp774_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_195 #x0000000000000001))
(assert (= var1322975 temp774_195))
(assert (= temp774_196 #x0000000000000000))
(assert (= var1310898 temp774_196))
(assert (= temp774_197 #x0000000000000000))
(assert (= temp774_198 temp774_197))
(assert (= temp774_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp774_198)))
(assert (= temp774_200 #x0000000000000001))
(assert (= temp774_201 temp774_200))
(assert (= temp774_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp774_201)))
(assert (= temp774_203 #x0000000000000002))
(assert (= temp774_204 temp774_203))
(assert (= temp774_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp774_204)))
(assert (= temp774_206 #x0000000000000003))
(assert (= temp774_207 temp774_206))
(assert (= temp774_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp774_207)))
(assert (= temp774_209 #x0000000000000004))
(assert (= temp774_210 temp774_209))
(assert (= temp774_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp774_210)))
(assert (= temp774_212 #x0000000000000005))
(assert (= temp774_213 temp774_212))
(assert (= temp774_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp774_213)))
(assert (= temp774_215 #x0000000000000000))
(assert (= temp774_216
   (ite (bvslt var1310898 temp774_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp774_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp774_216)))
(assert (= var1322977 temp774_217))
(assert (bvslt (ite (bvslt var1310898 temp774_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp774_218 #x0000000000000000))
(assert (= var1310898 temp774_218))
(assert (= temp774_220 var1310898))
(assert (= temp774_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp774_220)))
(assert (= temp774_219 temp774_221))
(assert (= var1322980
   (ite (= var1322977 temp774_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp774_222 #x0000000000000001))
(assert (= var1322980 temp774_222))
(assert (= temp774_223 #x0000000000000002))
(assert (= var1848169 temp774_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp774_225 #x0000000000000001))
(assert (= var1323065 temp774_225))
(assert (= temp774_226 #x0000000000000001))
(assert (= var3486735 temp774_226))
(assert (= temp774_227 #x0000000000000001))
(assert (= var3814415 temp774_227))
(assert (= temp774_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp774_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_229 #x0000000000000001))
(assert (= var79986 temp774_229))
(assert (= temp774_230 #x0000000000000001))
(assert (= var80116 temp774_230))
(assert (= var4796905 var80116))
(assert (= temp774_231 #x0000000000000000))
(assert (= var4784306 temp774_231))
(assert (= temp774_232 #x0000000000000000))
(assert (= temp774_233
   (ite (bvslt var4784306 temp774_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp774_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp774_233)))
(assert (= var4796924 temp774_234))
(assert (bvslt (ite (bvslt var4784306 temp774_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp774_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp774_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp774_236 #x0000000000000001))
(assert (= var4796925 temp774_236))
(assert (= temp774_237 #x0000000000000000))
(assert (= var4996927 temp774_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp774_238 #x0000000000000002))
(assert (= var5125763 temp774_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp774_239 #x0000000000000000))
(assert (= var5191324 temp774_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp774_241 #xffffffffffffffff))
(assert (= temp774_240 temp774_241))
(assert (= temp774_242 #x0000000000000001))
(assert (= var66602 temp774_242))
(assert (= temp774_243 #x0000000000000000))
(assert (= temp774_244
   (ite (bvslt var66602 temp774_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp774_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp774_244)))
(assert (= var80523 temp774_245))
(assert (bvslt (ite (bvslt var66602 temp774_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp774_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp774_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp774_247 #x0000000000000000))
(assert (= var80524 temp774_247))
(assert (= temp774_248 #x0000000000000001))
(assert (= var79986 temp774_248))
(model-add temp774_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp774_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp774_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






