(declare-fun temp104_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp104_2 () (_ BitVec 64))
(declare-fun temp104_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp104_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp104_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp104_6 () (_ BitVec 64))
(declare-fun temp104_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_8 () (_ BitVec 64))
(declare-fun temp104_9 () (_ BitVec 64))
(declare-fun temp104_10 () (_ BitVec 64))
(declare-fun temp104_11 () (_ BitVec 64))
(declare-fun temp104_12 () (_ BitVec 64))
(declare-fun temp104_13 () (_ BitVec 64))
(declare-fun temp104_14 () (_ BitVec 64))
(declare-fun temp104_15 () (_ BitVec 64))
(declare-fun temp104_16 () (_ BitVec 64))
(declare-fun temp104_17 () (_ BitVec 64))
(declare-fun temp104_18 () (_ BitVec 64))
(declare-fun temp104_19 () (_ BitVec 64))
(declare-fun temp104_20 () (_ BitVec 64))
(declare-fun temp104_21 () (_ BitVec 64))
(declare-fun temp104_22 () (_ BitVec 64))
(declare-fun temp104_23 () (_ BitVec 64))
(declare-fun temp104_24 () (_ BitVec 64))
(declare-fun temp104_25 () (_ BitVec 64))
(declare-fun temp104_26 () (_ BitVec 64))
(declare-fun temp104_27 () (_ BitVec 64))
(declare-fun temp104_28 () (_ BitVec 64))
(declare-fun temp104_29 () (_ BitVec 64))
(declare-fun temp104_30 () (_ BitVec 64))
(declare-fun temp104_31 () (_ BitVec 64))
(declare-fun temp104_32 () (_ BitVec 64))
(declare-fun temp104_33 () (_ BitVec 64))
(declare-fun temp104_34 () (_ BitVec 64))
(declare-fun temp104_35 () (_ BitVec 64))
(declare-fun temp104_36 () (_ BitVec 64))
(declare-fun temp104_37 () (_ BitVec 64))
(declare-fun temp104_38 () (_ BitVec 64))
(declare-fun temp104_39 () (_ BitVec 64))
(declare-fun temp104_40 () (_ BitVec 64))
(declare-fun temp104_41 () (_ BitVec 64))
(declare-fun temp104_42 () (_ BitVec 64))
(declare-fun temp104_43 () (_ BitVec 64))
(declare-fun temp104_44 () (_ BitVec 64))
(declare-fun temp104_45 () (_ BitVec 64))
(declare-fun temp104_46 () (_ BitVec 64))
(declare-fun temp104_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp104_48 () (_ BitVec 64))
(declare-fun temp104_49 () (_ BitVec 64))
(declare-fun temp104_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_51 () (_ BitVec 64))
(declare-fun temp104_52 () (_ BitVec 64))
(declare-fun temp104_53 () (_ BitVec 64))
(declare-fun temp104_54 () (_ BitVec 64))
(declare-fun temp104_55 () (_ BitVec 64))
(declare-fun temp104_56 () (_ BitVec 64))
(declare-fun temp104_57 () (_ BitVec 64))
(declare-fun temp104_58 () (_ BitVec 64))
(declare-fun temp104_59 () (_ BitVec 64))
(declare-fun temp104_60 () (_ BitVec 64))
(declare-fun temp104_61 () (_ BitVec 64))
(declare-fun temp104_62 () (_ BitVec 64))
(declare-fun temp104_63 () (_ BitVec 64))
(declare-fun temp104_64 () (_ BitVec 64))
(declare-fun temp104_65 () (_ BitVec 64))
(declare-fun temp104_66 () (_ BitVec 64))
(declare-fun temp104_67 () (_ BitVec 64))
(declare-fun temp104_68 () (_ BitVec 64))
(declare-fun temp104_69 () (_ BitVec 64))
(declare-fun temp104_70 () (_ BitVec 64))
(declare-fun temp104_71 () (_ BitVec 64))
(declare-fun temp104_72 () (_ BitVec 64))
(declare-fun temp104_73 () (_ BitVec 64))
(declare-fun temp104_74 () (_ BitVec 64))
(declare-fun temp104_75 () (_ BitVec 64))
(declare-fun temp104_76 () (_ BitVec 64))
(declare-fun temp104_77 () (_ BitVec 64))
(declare-fun temp104_78 () (_ BitVec 64))
(declare-fun temp104_79 () (_ BitVec 64))
(declare-fun temp104_80 () (_ BitVec 64))
(declare-fun temp104_81 () (_ BitVec 64))
(declare-fun temp104_82 () (_ BitVec 64))
(declare-fun temp104_83 () (_ BitVec 64))
(declare-fun temp104_84 () (_ BitVec 64))
(declare-fun temp104_85 () (_ BitVec 64))
(declare-fun temp104_86 () (_ BitVec 64))
(declare-fun temp104_87 () (_ BitVec 64))
(declare-fun temp104_88 () (_ BitVec 64))
(declare-fun temp104_89 () (_ BitVec 64))
(declare-fun temp104_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp104_91 () (_ BitVec 64))
(declare-fun temp104_92 () (_ BitVec 64))
(declare-fun temp104_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_94 () (_ BitVec 64))
(declare-fun temp104_95 () (_ BitVec 64))
(declare-fun temp104_96 () (_ BitVec 64))
(declare-fun temp104_97 () (_ BitVec 64))
(declare-fun temp104_98 () (_ BitVec 64))
(declare-fun temp104_99 () (_ BitVec 64))
(declare-fun temp104_100 () (_ BitVec 64))
(declare-fun temp104_101 () (_ BitVec 64))
(declare-fun temp104_102 () (_ BitVec 64))
(declare-fun temp104_103 () (_ BitVec 64))
(declare-fun temp104_104 () (_ BitVec 64))
(declare-fun temp104_105 () (_ BitVec 64))
(declare-fun temp104_106 () (_ BitVec 64))
(declare-fun temp104_107 () (_ BitVec 64))
(declare-fun temp104_108 () (_ BitVec 64))
(declare-fun temp104_109 () (_ BitVec 64))
(declare-fun temp104_110 () (_ BitVec 64))
(declare-fun temp104_111 () (_ BitVec 64))
(declare-fun temp104_112 () (_ BitVec 64))
(declare-fun temp104_113 () (_ BitVec 64))
(declare-fun temp104_114 () (_ BitVec 64))
(declare-fun temp104_115 () (_ BitVec 64))
(declare-fun temp104_116 () (_ BitVec 64))
(declare-fun temp104_117 () (_ BitVec 64))
(declare-fun temp104_118 () (_ BitVec 64))
(declare-fun temp104_119 () (_ BitVec 64))
(declare-fun temp104_120 () (_ BitVec 64))
(declare-fun temp104_121 () (_ BitVec 64))
(declare-fun temp104_122 () (_ BitVec 64))
(declare-fun temp104_123 () (_ BitVec 64))
(declare-fun temp104_124 () (_ BitVec 64))
(declare-fun temp104_125 () (_ BitVec 64))
(declare-fun temp104_126 () (_ BitVec 64))
(declare-fun temp104_127 () (_ BitVec 64))
(declare-fun temp104_128 () (_ BitVec 64))
(declare-fun temp104_129 () (_ BitVec 64))
(declare-fun temp104_130 () (_ BitVec 64))
(declare-fun temp104_131 () (_ BitVec 64))
(declare-fun temp104_132 () (_ BitVec 64))
(declare-fun temp104_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp104_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp104_135 () (_ BitVec 64))
(declare-fun temp104_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp104_137 () (_ BitVec 64))
(declare-fun temp104_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_139 () (_ BitVec 64))
(declare-fun temp104_140 () (_ BitVec 64))
(declare-fun temp104_141 () (_ BitVec 64))
(declare-fun temp104_142 () (_ BitVec 64))
(declare-fun temp104_143 () (_ BitVec 64))
(declare-fun temp104_144 () (_ BitVec 64))
(declare-fun temp104_145 () (_ BitVec 64))
(declare-fun temp104_146 () (_ BitVec 64))
(declare-fun temp104_147 () (_ BitVec 64))
(declare-fun temp104_148 () (_ BitVec 64))
(declare-fun temp104_149 () (_ BitVec 64))
(declare-fun temp104_150 () (_ BitVec 64))
(declare-fun temp104_151 () (_ BitVec 64))
(declare-fun temp104_152 () (_ BitVec 64))
(declare-fun temp104_153 () (_ BitVec 64))
(declare-fun temp104_154 () (_ BitVec 64))
(declare-fun temp104_156 () (_ BitVec 64))
(declare-fun temp104_157 () (_ BitVec 64))
(declare-fun temp104_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp104_158 () (_ BitVec 64))
(declare-fun temp104_159 () (_ BitVec 64))
(declare-fun temp104_161 () (_ BitVec 64))
(declare-fun temp104_162 () (_ BitVec 64))
(declare-fun temp104_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp104_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp104_164 () (_ BitVec 64))
(declare-fun temp104_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp104_166 () (_ BitVec 64))
(declare-fun temp104_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp104_168 () (_ BitVec 64))
(declare-fun temp104_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_170 () (_ BitVec 64))
(declare-fun temp104_171 () (_ BitVec 64))
(declare-fun temp104_172 () (_ BitVec 64))
(declare-fun temp104_173 () (_ BitVec 64))
(declare-fun temp104_174 () (_ BitVec 64))
(declare-fun temp104_175 () (_ BitVec 64))
(declare-fun temp104_176 () (_ BitVec 64))
(declare-fun temp104_177 () (_ BitVec 64))
(declare-fun temp104_178 () (_ BitVec 64))
(declare-fun temp104_179 () (_ BitVec 64))
(declare-fun temp104_180 () (_ BitVec 64))
(declare-fun temp104_181 () (_ BitVec 64))
(declare-fun temp104_182 () (_ BitVec 64))
(declare-fun temp104_183 () (_ BitVec 64))
(declare-fun temp104_184 () (_ BitVec 64))
(declare-fun temp104_185 () (_ BitVec 64))
(declare-fun temp104_186 () (_ BitVec 64))
(declare-fun temp104_187 () (_ BitVec 64))
(declare-fun temp104_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp104_189 () (_ BitVec 64))
(declare-fun temp104_191 () (_ BitVec 64))
(declare-fun temp104_192 () (_ BitVec 64))
(declare-fun temp104_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp104_193 () (_ BitVec 64))
(declare-fun temp104_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp104_195 () (_ BitVec 64))
(declare-fun temp104_196 () (_ BitVec 64))
(declare-fun temp104_197 () (_ BitVec 64))
(declare-fun temp104_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_199 () (_ BitVec 64))
(declare-fun temp104_200 () (_ BitVec 64))
(declare-fun temp104_201 () (_ BitVec 64))
(declare-fun temp104_202 () (_ BitVec 64))
(declare-fun temp104_203 () (_ BitVec 64))
(declare-fun temp104_204 () (_ BitVec 64))
(declare-fun temp104_205 () (_ BitVec 64))
(declare-fun temp104_206 () (_ BitVec 64))
(declare-fun temp104_207 () (_ BitVec 64))
(declare-fun temp104_208 () (_ BitVec 64))
(declare-fun temp104_209 () (_ BitVec 64))
(declare-fun temp104_210 () (_ BitVec 64))
(declare-fun temp104_211 () (_ BitVec 64))
(declare-fun temp104_212 () (_ BitVec 64))
(declare-fun temp104_213 () (_ BitVec 64))
(declare-fun temp104_214 () (_ BitVec 64))
(declare-fun temp104_215 () (_ BitVec 64))
(declare-fun temp104_216 () (_ BitVec 64))
(declare-fun temp104_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp104_218 () (_ BitVec 64))
(declare-fun temp104_220 () (_ BitVec 64))
(declare-fun temp104_221 () (_ BitVec 64))
(declare-fun temp104_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp104_222 () (_ BitVec 64))
(declare-fun temp104_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp104_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp104_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp104_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp104_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp104_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp104_229 () (_ BitVec 64))
(declare-fun temp104_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp104_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp104_232 () (_ BitVec 64))
(declare-fun temp104_233 () (_ BitVec 64))
(declare-fun temp104_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp104_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp104_236 () (_ BitVec 64))
(declare-fun temp104_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp104_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp104_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp104_241 () (_ BitVec 64))
(declare-fun temp104_240 () (_ BitVec 64))
(declare-fun temp104_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp104_243 () (_ BitVec 64))
(declare-fun temp104_244 () (_ BitVec 64))
(declare-fun temp104_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp104_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp104_247 () (_ BitVec 64))
(declare-fun temp104_249 () (_ BitVec 64))
(declare-fun temp104_248 () (_ BitVec 64))
(declare-fun temp104_250 () (_ BitVec 64))
(declare-fun temp104_251 () (_ BitVec 64))
(declare-fun var6435604 () (_ BitVec 64))
(declare-fun var6435571 () (_ BitVec 64))
(declare-fun var6304135 () (_ BitVec 64))
(declare-fun var6304131 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp104_252 () (_ BitVec 64))
(assert (= temp104_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp104_1)))
(assert (= temp104_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp104_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_3 #x0000000000000000))
(assert (= var79869 temp104_3))
(assert (= temp104_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp104_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_5 #x0000000000000000))
(assert (= var79914 temp104_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp104_6 #x0000000000000000))
(assert (= temp104_7 temp104_6))
(assert (= temp104_8 (select ARGNAME_padding_NAMEEND_VAL temp104_7)))
(assert (= temp104_9 #x0000000000000001))
(assert (= temp104_10 temp104_9))
(assert (= temp104_11 (select ARGNAME_padding_NAMEEND_VAL temp104_10)))
(assert (= temp104_12 #x0000000000000002))
(assert (= temp104_13 temp104_12))
(assert (= temp104_14 (select ARGNAME_padding_NAMEEND_VAL temp104_13)))
(assert (= temp104_15 #x0000000000000003))
(assert (= temp104_16 temp104_15))
(assert (= temp104_17 (select ARGNAME_padding_NAMEEND_VAL temp104_16)))
(assert (= temp104_18 #x0000000000000004))
(assert (= temp104_19 temp104_18))
(assert (= temp104_20 (select ARGNAME_padding_NAMEEND_VAL temp104_19)))
(assert (= temp104_21 #x0000000000000005))
(assert (= temp104_22 temp104_21))
(assert (= temp104_23 (select ARGNAME_padding_NAMEEND_VAL temp104_22)))
(assert (= temp104_24 #x0000000000000000))
(assert (= temp104_25 #x0000000000000000))
(assert (= temp104_26 temp104_25))
(assert (= temp104_27 (select ARGNAME_padding_NAMEEND_VAL temp104_26)))
(assert (= temp104_28 #x0000000000000000))
(assert (= temp104_29 #x0000000000000001))
(assert (= temp104_30 temp104_29))
(assert (= temp104_31 (select ARGNAME_padding_NAMEEND_VAL temp104_30)))
(assert (= temp104_32 #x0000000000000000))
(assert (= temp104_33 #x0000000000000002))
(assert (= temp104_34 temp104_33))
(assert (= temp104_35 (select ARGNAME_padding_NAMEEND_VAL temp104_34)))
(assert (= temp104_36 #x0000000000000000))
(assert (= temp104_37 #x0000000000000003))
(assert (= temp104_38 temp104_37))
(assert (= temp104_39 (select ARGNAME_padding_NAMEEND_VAL temp104_38)))
(assert (= temp104_40 #x0000000000000000))
(assert (= temp104_41 #x0000000000000004))
(assert (= temp104_42 temp104_41))
(assert (= temp104_43 (select ARGNAME_padding_NAMEEND_VAL temp104_42)))
(assert (= temp104_44 #x0000000000000000))
(assert (= temp104_45 #x0000000000000005))
(assert (= temp104_46 temp104_45))
(assert (= temp104_47 (select ARGNAME_padding_NAMEEND_VAL temp104_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp104_27 temp104_24)
             (bvslt temp104_31 temp104_28)
             (bvslt temp104_35 temp104_32)
             (bvslt temp104_39 temp104_36)
             (bvslt temp104_43 temp104_40)
             (bvslt temp104_47 temp104_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_48 #x0000000000000000))
(assert (= var1322786 temp104_48))
(assert (= temp104_49 #x0000000000000000))
(assert (= temp104_50 temp104_49))
(assert (= temp104_51 (select ARGNAME_output_padding_NAMEEND_VAL temp104_50)))
(assert (= temp104_52 #x0000000000000001))
(assert (= temp104_53 temp104_52))
(assert (= temp104_54 (select ARGNAME_output_padding_NAMEEND_VAL temp104_53)))
(assert (= temp104_55 #x0000000000000002))
(assert (= temp104_56 temp104_55))
(assert (= temp104_57 (select ARGNAME_output_padding_NAMEEND_VAL temp104_56)))
(assert (= temp104_58 #x0000000000000003))
(assert (= temp104_59 temp104_58))
(assert (= temp104_60 (select ARGNAME_output_padding_NAMEEND_VAL temp104_59)))
(assert (= temp104_61 #x0000000000000004))
(assert (= temp104_62 temp104_61))
(assert (= temp104_63 (select ARGNAME_output_padding_NAMEEND_VAL temp104_62)))
(assert (= temp104_64 #x0000000000000005))
(assert (= temp104_65 temp104_64))
(assert (= temp104_66 (select ARGNAME_output_padding_NAMEEND_VAL temp104_65)))
(assert (= temp104_67 #x0000000000000000))
(assert (= temp104_68 #x0000000000000000))
(assert (= temp104_69 temp104_68))
(assert (= temp104_70 (select ARGNAME_output_padding_NAMEEND_VAL temp104_69)))
(assert (= temp104_71 #x0000000000000000))
(assert (= temp104_72 #x0000000000000001))
(assert (= temp104_73 temp104_72))
(assert (= temp104_74 (select ARGNAME_output_padding_NAMEEND_VAL temp104_73)))
(assert (= temp104_75 #x0000000000000000))
(assert (= temp104_76 #x0000000000000002))
(assert (= temp104_77 temp104_76))
(assert (= temp104_78 (select ARGNAME_output_padding_NAMEEND_VAL temp104_77)))
(assert (= temp104_79 #x0000000000000000))
(assert (= temp104_80 #x0000000000000003))
(assert (= temp104_81 temp104_80))
(assert (= temp104_82 (select ARGNAME_output_padding_NAMEEND_VAL temp104_81)))
(assert (= temp104_83 #x0000000000000000))
(assert (= temp104_84 #x0000000000000004))
(assert (= temp104_85 temp104_84))
(assert (= temp104_86 (select ARGNAME_output_padding_NAMEEND_VAL temp104_85)))
(assert (= temp104_87 #x0000000000000000))
(assert (= temp104_88 #x0000000000000005))
(assert (= temp104_89 temp104_88))
(assert (= temp104_90 (select ARGNAME_output_padding_NAMEEND_VAL temp104_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp104_70 temp104_67)
             (bvslt temp104_74 temp104_71)
             (bvslt temp104_78 temp104_75)
             (bvslt temp104_82 temp104_79)
             (bvslt temp104_86 temp104_83)
             (bvslt temp104_90 temp104_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_91 #x0000000000000000))
(assert (= var1322797 temp104_91))
(assert (= temp104_92 #x0000000000000000))
(assert (= temp104_93 temp104_92))
(assert (= temp104_94 (select ARGNAME_stride_NAMEEND_VAL temp104_93)))
(assert (= temp104_95 #x0000000000000001))
(assert (= temp104_96 temp104_95))
(assert (= temp104_97 (select ARGNAME_stride_NAMEEND_VAL temp104_96)))
(assert (= temp104_98 #x0000000000000002))
(assert (= temp104_99 temp104_98))
(assert (= temp104_100 (select ARGNAME_stride_NAMEEND_VAL temp104_99)))
(assert (= temp104_101 #x0000000000000003))
(assert (= temp104_102 temp104_101))
(assert (= temp104_103 (select ARGNAME_stride_NAMEEND_VAL temp104_102)))
(assert (= temp104_104 #x0000000000000004))
(assert (= temp104_105 temp104_104))
(assert (= temp104_106 (select ARGNAME_stride_NAMEEND_VAL temp104_105)))
(assert (= temp104_107 #x0000000000000005))
(assert (= temp104_108 temp104_107))
(assert (= temp104_109 (select ARGNAME_stride_NAMEEND_VAL temp104_108)))
(assert (= temp104_110 #x0000000000000000))
(assert (= temp104_111 #x0000000000000000))
(assert (= temp104_112 temp104_111))
(assert (= temp104_113 (select ARGNAME_stride_NAMEEND_VAL temp104_112)))
(assert (= temp104_114 #x0000000000000000))
(assert (= temp104_115 #x0000000000000001))
(assert (= temp104_116 temp104_115))
(assert (= temp104_117 (select ARGNAME_stride_NAMEEND_VAL temp104_116)))
(assert (= temp104_118 #x0000000000000000))
(assert (= temp104_119 #x0000000000000002))
(assert (= temp104_120 temp104_119))
(assert (= temp104_121 (select ARGNAME_stride_NAMEEND_VAL temp104_120)))
(assert (= temp104_122 #x0000000000000000))
(assert (= temp104_123 #x0000000000000003))
(assert (= temp104_124 temp104_123))
(assert (= temp104_125 (select ARGNAME_stride_NAMEEND_VAL temp104_124)))
(assert (= temp104_126 #x0000000000000000))
(assert (= temp104_127 #x0000000000000004))
(assert (= temp104_128 temp104_127))
(assert (= temp104_129 (select ARGNAME_stride_NAMEEND_VAL temp104_128)))
(assert (= temp104_130 #x0000000000000000))
(assert (= temp104_131 #x0000000000000005))
(assert (= temp104_132 temp104_131))
(assert (= temp104_133 (select ARGNAME_stride_NAMEEND_VAL temp104_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp104_113 temp104_110)
             (bvsle temp104_117 temp104_114)
             (bvsle temp104_121 temp104_118)
             (bvsle temp104_125 temp104_122)
             (bvsle temp104_129 temp104_126)
             (bvsle temp104_133 temp104_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_134 #x0000000000000000))
(assert (= var1322807 temp104_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_135 #x0000000000000001))
(assert (= var1322819 temp104_135))
(assert (= temp104_136 #x0000000000000000))
(assert (= var1310898 temp104_136))
(assert (= temp104_137 #x0000000000000000))
(assert (= temp104_138 temp104_137))
(assert (= temp104_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_138)))
(assert (= temp104_140 #x0000000000000001))
(assert (= temp104_141 temp104_140))
(assert (= temp104_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_141)))
(assert (= temp104_143 #x0000000000000002))
(assert (= temp104_144 temp104_143))
(assert (= temp104_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_144)))
(assert (= temp104_146 #x0000000000000003))
(assert (= temp104_147 temp104_146))
(assert (= temp104_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_147)))
(assert (= temp104_149 #x0000000000000004))
(assert (= temp104_150 temp104_149))
(assert (= temp104_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_150)))
(assert (= temp104_152 #x0000000000000005))
(assert (= temp104_153 temp104_152))
(assert (= temp104_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_153)))
(assert (= temp104_156 var1310898))
(assert (= temp104_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_156)))
(assert (= temp104_155 temp104_157))
(assert (= var1322852
   (ite (bvslt temp104_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_158 #x0000000000000000))
(assert (= var1322852 temp104_158))
(assert (= temp104_159 #x0000000000000000))
(assert (= var1310898 temp104_159))
(assert (= temp104_161 var1310898))
(assert (= temp104_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_161)))
(assert (= temp104_160 temp104_162))
(assert (= var1322874 (bvsmod temp104_160 ARGNAME_groups_NAMEEND)))
(assert (= temp104_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp104_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp104_164 #x0000000000000001))
(assert (= var1322875 temp104_164))
(assert (= temp104_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp104_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_166 #x0000000000000001))
(assert (= var1322895 temp104_166))
(assert (= temp104_167 #x0000000000000001))
(assert (= var1311786 temp104_167))
(assert (= temp104_168 #x0000000000000000))
(assert (= temp104_169 temp104_168))
(assert (= temp104_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_169)))
(assert (= temp104_171 #x0000000000000001))
(assert (= temp104_172 temp104_171))
(assert (= temp104_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_172)))
(assert (= temp104_174 #x0000000000000002))
(assert (= temp104_175 temp104_174))
(assert (= temp104_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_175)))
(assert (= temp104_177 #x0000000000000003))
(assert (= temp104_178 temp104_177))
(assert (= temp104_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_178)))
(assert (= temp104_180 #x0000000000000004))
(assert (= temp104_181 temp104_180))
(assert (= temp104_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_181)))
(assert (= temp104_183 #x0000000000000005))
(assert (= temp104_184 temp104_183))
(assert (= temp104_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_184)))
(assert (= temp104_186 #x0000000000000000))
(assert (= temp104_187
   (ite (bvslt var1311786 temp104_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp104_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_187)))
(assert (= var1322903 temp104_188))
(assert (bvslt (ite (bvslt var1311786 temp104_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp104_189 #x0000000000000001))
(assert (= var1311786 temp104_189))
(assert (= temp104_191 var1311786))
(assert (= temp104_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_191)))
(assert (= temp104_190 temp104_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp104_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp104_193 #x0000000000000001))
(assert (= var1322908 temp104_193))
(assert (= temp104_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp104_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_195 #x0000000000000001))
(assert (= var1322975 temp104_195))
(assert (= temp104_196 #x0000000000000000))
(assert (= var1310898 temp104_196))
(assert (= temp104_197 #x0000000000000000))
(assert (= temp104_198 temp104_197))
(assert (= temp104_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp104_198)))
(assert (= temp104_200 #x0000000000000001))
(assert (= temp104_201 temp104_200))
(assert (= temp104_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp104_201)))
(assert (= temp104_203 #x0000000000000002))
(assert (= temp104_204 temp104_203))
(assert (= temp104_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp104_204)))
(assert (= temp104_206 #x0000000000000003))
(assert (= temp104_207 temp104_206))
(assert (= temp104_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp104_207)))
(assert (= temp104_209 #x0000000000000004))
(assert (= temp104_210 temp104_209))
(assert (= temp104_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp104_210)))
(assert (= temp104_212 #x0000000000000005))
(assert (= temp104_213 temp104_212))
(assert (= temp104_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp104_213)))
(assert (= temp104_215 #x0000000000000000))
(assert (= temp104_216
   (ite (bvslt var1310898 temp104_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp104_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp104_216)))
(assert (= var1322977 temp104_217))
(assert (bvslt (ite (bvslt var1310898 temp104_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp104_218 #x0000000000000000))
(assert (= var1310898 temp104_218))
(assert (= temp104_220 var1310898))
(assert (= temp104_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_220)))
(assert (= temp104_219 temp104_221))
(assert (= var1322980
   (ite (= var1322977 temp104_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp104_222 #x0000000000000001))
(assert (= var1322980 temp104_222))
(assert (= temp104_223 #x0000000000000002))
(assert (= var1848169 temp104_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp104_225 #x0000000000000001))
(assert (= var1323065 temp104_225))
(assert (= temp104_226 #x0000000000000001))
(assert (= var3486735 temp104_226))
(assert (= temp104_227 #x0000000000000001))
(assert (= var3814415 temp104_227))
(assert (= temp104_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp104_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_229 #x0000000000000001))
(assert (= var79986 temp104_229))
(assert (= temp104_230 #x0000000000000001))
(assert (= var80116 temp104_230))
(assert (= var4796905 var80116))
(assert (= temp104_231 #x0000000000000000))
(assert (= var4784306 temp104_231))
(assert (= temp104_232 #x0000000000000000))
(assert (= temp104_233
   (ite (bvslt var4784306 temp104_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp104_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_233)))
(assert (= var4796924 temp104_234))
(assert (bvslt (ite (bvslt var4784306 temp104_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp104_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp104_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp104_236 #x0000000000000001))
(assert (= var4796925 temp104_236))
(assert (= temp104_237 #x0000000000000000))
(assert (= var4996927 temp104_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp104_238 #x0000000000000002))
(assert (= var5125763 temp104_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_239 #x0000000000000000))
(assert (= var5191324 temp104_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp104_241 #xffffffffffffffff))
(assert (= temp104_240 temp104_241))
(assert (= temp104_242 #x0000000000000001))
(assert (= var66602 temp104_242))
(assert (= temp104_243 #x0000000000000000))
(assert (= temp104_244
   (ite (bvslt var66602 temp104_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp104_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_244)))
(assert (= var80523 temp104_245))
(assert (bvslt (ite (bvslt var66602 temp104_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp104_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp104_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp104_247 #x0000000000000001))
(assert (= var80524 temp104_247))
(assert (= temp104_249 #xffffffffffffffff))
(assert (= temp104_248 temp104_249))
(assert (= temp104_250 #x0000000000000001))
(assert (= var79986 temp104_250))
(assert (= temp104_251 #x0000000000000000))
(assert (= var6435604 temp104_251))
(assert (= var6435571 var6435604))
(assert (= var6304135 var6435571))
(assert (= var6304131 var6304135))
(assert (= var81597 var6304131))
(assert (= temp104_252 #x0000000000000000))
(assert (= var81597 temp104_252))
(model-add temp104_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp104_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp104_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






