(declare-fun temp121_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp121_2 () (_ BitVec 64))
(declare-fun temp121_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp121_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp121_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp121_6 () (_ BitVec 64))
(declare-fun temp121_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp121_8 () (_ BitVec 64))
(declare-fun temp121_9 () (_ BitVec 64))
(declare-fun temp121_10 () (_ BitVec 64))
(declare-fun temp121_11 () (_ BitVec 64))
(declare-fun temp121_12 () (_ BitVec 64))
(declare-fun temp121_13 () (_ BitVec 64))
(declare-fun temp121_14 () (_ BitVec 64))
(declare-fun temp121_15 () (_ BitVec 64))
(declare-fun temp121_16 () (_ BitVec 64))
(declare-fun temp121_17 () (_ BitVec 64))
(declare-fun temp121_18 () (_ BitVec 64))
(declare-fun temp121_19 () (_ BitVec 64))
(declare-fun temp121_20 () (_ BitVec 64))
(declare-fun temp121_21 () (_ BitVec 64))
(declare-fun temp121_22 () (_ BitVec 64))
(declare-fun temp121_23 () (_ BitVec 64))
(declare-fun temp121_24 () (_ BitVec 64))
(declare-fun temp121_25 () (_ BitVec 64))
(declare-fun temp121_26 () (_ BitVec 64))
(declare-fun temp121_27 () (_ BitVec 64))
(declare-fun temp121_28 () (_ BitVec 64))
(declare-fun temp121_29 () (_ BitVec 64))
(declare-fun temp121_30 () (_ BitVec 64))
(declare-fun temp121_31 () (_ BitVec 64))
(declare-fun temp121_32 () (_ BitVec 64))
(declare-fun temp121_33 () (_ BitVec 64))
(declare-fun temp121_34 () (_ BitVec 64))
(declare-fun temp121_35 () (_ BitVec 64))
(declare-fun temp121_36 () (_ BitVec 64))
(declare-fun temp121_37 () (_ BitVec 64))
(declare-fun temp121_38 () (_ BitVec 64))
(declare-fun temp121_39 () (_ BitVec 64))
(declare-fun temp121_40 () (_ BitVec 64))
(declare-fun temp121_41 () (_ BitVec 64))
(declare-fun temp121_42 () (_ BitVec 64))
(declare-fun temp121_43 () (_ BitVec 64))
(declare-fun temp121_44 () (_ BitVec 64))
(declare-fun temp121_45 () (_ BitVec 64))
(declare-fun temp121_46 () (_ BitVec 64))
(declare-fun temp121_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp121_48 () (_ BitVec 64))
(declare-fun temp121_49 () (_ BitVec 64))
(declare-fun temp121_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp121_51 () (_ BitVec 64))
(declare-fun temp121_52 () (_ BitVec 64))
(declare-fun temp121_53 () (_ BitVec 64))
(declare-fun temp121_54 () (_ BitVec 64))
(declare-fun temp121_55 () (_ BitVec 64))
(declare-fun temp121_56 () (_ BitVec 64))
(declare-fun temp121_57 () (_ BitVec 64))
(declare-fun temp121_58 () (_ BitVec 64))
(declare-fun temp121_59 () (_ BitVec 64))
(declare-fun temp121_60 () (_ BitVec 64))
(declare-fun temp121_61 () (_ BitVec 64))
(declare-fun temp121_62 () (_ BitVec 64))
(declare-fun temp121_63 () (_ BitVec 64))
(declare-fun temp121_64 () (_ BitVec 64))
(declare-fun temp121_65 () (_ BitVec 64))
(declare-fun temp121_66 () (_ BitVec 64))
(declare-fun temp121_67 () (_ BitVec 64))
(declare-fun temp121_68 () (_ BitVec 64))
(declare-fun temp121_69 () (_ BitVec 64))
(declare-fun temp121_70 () (_ BitVec 64))
(declare-fun temp121_71 () (_ BitVec 64))
(declare-fun temp121_72 () (_ BitVec 64))
(declare-fun temp121_73 () (_ BitVec 64))
(declare-fun temp121_74 () (_ BitVec 64))
(declare-fun temp121_75 () (_ BitVec 64))
(declare-fun temp121_76 () (_ BitVec 64))
(declare-fun temp121_77 () (_ BitVec 64))
(declare-fun temp121_78 () (_ BitVec 64))
(declare-fun temp121_79 () (_ BitVec 64))
(declare-fun temp121_80 () (_ BitVec 64))
(declare-fun temp121_81 () (_ BitVec 64))
(declare-fun temp121_82 () (_ BitVec 64))
(declare-fun temp121_83 () (_ BitVec 64))
(declare-fun temp121_84 () (_ BitVec 64))
(declare-fun temp121_85 () (_ BitVec 64))
(declare-fun temp121_86 () (_ BitVec 64))
(declare-fun temp121_87 () (_ BitVec 64))
(declare-fun temp121_88 () (_ BitVec 64))
(declare-fun temp121_89 () (_ BitVec 64))
(declare-fun temp121_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp121_91 () (_ BitVec 64))
(declare-fun temp121_92 () (_ BitVec 64))
(declare-fun temp121_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp121_94 () (_ BitVec 64))
(declare-fun temp121_95 () (_ BitVec 64))
(declare-fun temp121_96 () (_ BitVec 64))
(declare-fun temp121_97 () (_ BitVec 64))
(declare-fun temp121_98 () (_ BitVec 64))
(declare-fun temp121_99 () (_ BitVec 64))
(declare-fun temp121_100 () (_ BitVec 64))
(declare-fun temp121_101 () (_ BitVec 64))
(declare-fun temp121_102 () (_ BitVec 64))
(declare-fun temp121_103 () (_ BitVec 64))
(declare-fun temp121_104 () (_ BitVec 64))
(declare-fun temp121_105 () (_ BitVec 64))
(declare-fun temp121_106 () (_ BitVec 64))
(declare-fun temp121_107 () (_ BitVec 64))
(declare-fun temp121_108 () (_ BitVec 64))
(declare-fun temp121_109 () (_ BitVec 64))
(declare-fun temp121_110 () (_ BitVec 64))
(declare-fun temp121_111 () (_ BitVec 64))
(declare-fun temp121_112 () (_ BitVec 64))
(declare-fun temp121_113 () (_ BitVec 64))
(declare-fun temp121_114 () (_ BitVec 64))
(declare-fun temp121_115 () (_ BitVec 64))
(declare-fun temp121_116 () (_ BitVec 64))
(declare-fun temp121_117 () (_ BitVec 64))
(declare-fun temp121_118 () (_ BitVec 64))
(declare-fun temp121_119 () (_ BitVec 64))
(declare-fun temp121_120 () (_ BitVec 64))
(declare-fun temp121_121 () (_ BitVec 64))
(declare-fun temp121_122 () (_ BitVec 64))
(declare-fun temp121_123 () (_ BitVec 64))
(declare-fun temp121_124 () (_ BitVec 64))
(declare-fun temp121_125 () (_ BitVec 64))
(declare-fun temp121_126 () (_ BitVec 64))
(declare-fun temp121_127 () (_ BitVec 64))
(declare-fun temp121_128 () (_ BitVec 64))
(declare-fun temp121_129 () (_ BitVec 64))
(declare-fun temp121_130 () (_ BitVec 64))
(declare-fun temp121_131 () (_ BitVec 64))
(declare-fun temp121_132 () (_ BitVec 64))
(declare-fun temp121_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp121_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp121_135 () (_ BitVec 64))
(declare-fun temp121_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp121_137 () (_ BitVec 64))
(declare-fun temp121_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp121_139 () (_ BitVec 64))
(declare-fun temp121_140 () (_ BitVec 64))
(declare-fun temp121_141 () (_ BitVec 64))
(declare-fun temp121_142 () (_ BitVec 64))
(declare-fun temp121_143 () (_ BitVec 64))
(declare-fun temp121_144 () (_ BitVec 64))
(declare-fun temp121_145 () (_ BitVec 64))
(declare-fun temp121_146 () (_ BitVec 64))
(declare-fun temp121_147 () (_ BitVec 64))
(declare-fun temp121_148 () (_ BitVec 64))
(declare-fun temp121_149 () (_ BitVec 64))
(declare-fun temp121_150 () (_ BitVec 64))
(declare-fun temp121_151 () (_ BitVec 64))
(declare-fun temp121_152 () (_ BitVec 64))
(declare-fun temp121_153 () (_ BitVec 64))
(declare-fun temp121_154 () (_ BitVec 64))
(declare-fun temp121_156 () (_ BitVec 64))
(declare-fun temp121_157 () (_ BitVec 64))
(declare-fun temp121_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp121_158 () (_ BitVec 64))
(declare-fun temp121_159 () (_ BitVec 64))
(declare-fun temp121_161 () (_ BitVec 64))
(declare-fun temp121_162 () (_ BitVec 64))
(declare-fun temp121_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp121_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp121_164 () (_ BitVec 64))
(declare-fun temp121_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp121_166 () (_ BitVec 64))
(declare-fun temp121_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp121_168 () (_ BitVec 64))
(declare-fun temp121_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp121_170 () (_ BitVec 64))
(declare-fun temp121_171 () (_ BitVec 64))
(declare-fun temp121_172 () (_ BitVec 64))
(declare-fun temp121_173 () (_ BitVec 64))
(declare-fun temp121_174 () (_ BitVec 64))
(declare-fun temp121_175 () (_ BitVec 64))
(declare-fun temp121_176 () (_ BitVec 64))
(declare-fun temp121_177 () (_ BitVec 64))
(declare-fun temp121_178 () (_ BitVec 64))
(declare-fun temp121_179 () (_ BitVec 64))
(declare-fun temp121_180 () (_ BitVec 64))
(declare-fun temp121_181 () (_ BitVec 64))
(declare-fun temp121_182 () (_ BitVec 64))
(declare-fun temp121_183 () (_ BitVec 64))
(declare-fun temp121_184 () (_ BitVec 64))
(declare-fun temp121_185 () (_ BitVec 64))
(declare-fun temp121_186 () (_ BitVec 64))
(declare-fun temp121_187 () (_ BitVec 64))
(declare-fun temp121_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp121_189 () (_ BitVec 64))
(declare-fun temp121_191 () (_ BitVec 64))
(declare-fun temp121_192 () (_ BitVec 64))
(declare-fun temp121_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp121_193 () (_ BitVec 64))
(declare-fun temp121_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp121_195 () (_ BitVec 64))
(declare-fun temp121_196 () (_ BitVec 64))
(declare-fun temp121_197 () (_ BitVec 64))
(declare-fun temp121_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp121_199 () (_ BitVec 64))
(declare-fun temp121_200 () (_ BitVec 64))
(declare-fun temp121_201 () (_ BitVec 64))
(declare-fun temp121_202 () (_ BitVec 64))
(declare-fun temp121_203 () (_ BitVec 64))
(declare-fun temp121_204 () (_ BitVec 64))
(declare-fun temp121_205 () (_ BitVec 64))
(declare-fun temp121_206 () (_ BitVec 64))
(declare-fun temp121_207 () (_ BitVec 64))
(declare-fun temp121_208 () (_ BitVec 64))
(declare-fun temp121_209 () (_ BitVec 64))
(declare-fun temp121_210 () (_ BitVec 64))
(declare-fun temp121_211 () (_ BitVec 64))
(declare-fun temp121_212 () (_ BitVec 64))
(declare-fun temp121_213 () (_ BitVec 64))
(declare-fun temp121_214 () (_ BitVec 64))
(declare-fun temp121_215 () (_ BitVec 64))
(declare-fun temp121_216 () (_ BitVec 64))
(declare-fun temp121_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp121_218 () (_ BitVec 64))
(declare-fun temp121_220 () (_ BitVec 64))
(declare-fun temp121_221 () (_ BitVec 64))
(declare-fun temp121_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp121_222 () (_ BitVec 64))
(declare-fun temp121_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp121_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp121_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp121_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp121_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp121_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp121_229 () (_ BitVec 64))
(declare-fun temp121_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp121_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp121_232 () (_ BitVec 64))
(declare-fun temp121_233 () (_ BitVec 64))
(declare-fun temp121_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp121_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp121_236 () (_ BitVec 64))
(declare-fun temp121_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp121_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp121_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp121_241 () (_ BitVec 64))
(declare-fun temp121_240 () (_ BitVec 64))
(declare-fun temp121_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp121_243 () (_ BitVec 64))
(declare-fun temp121_244 () (_ BitVec 64))
(declare-fun temp121_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp121_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp121_247 () (_ BitVec 64))
(declare-fun temp121_249 () (_ BitVec 64))
(declare-fun temp121_248 () (_ BitVec 64))
(declare-fun temp121_250 () (_ BitVec 64))
(assert (= temp121_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp121_1)))
(assert (= temp121_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp121_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_3 #x0000000000000000))
(assert (= var79869 temp121_3))
(assert (= temp121_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp121_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_5 #x0000000000000000))
(assert (= var79914 temp121_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp121_6 #x0000000000000000))
(assert (= temp121_7 temp121_6))
(assert (= temp121_8 (select ARGNAME_padding_NAMEEND_VAL temp121_7)))
(assert (= temp121_9 #x0000000000000001))
(assert (= temp121_10 temp121_9))
(assert (= temp121_11 (select ARGNAME_padding_NAMEEND_VAL temp121_10)))
(assert (= temp121_12 #x0000000000000002))
(assert (= temp121_13 temp121_12))
(assert (= temp121_14 (select ARGNAME_padding_NAMEEND_VAL temp121_13)))
(assert (= temp121_15 #x0000000000000003))
(assert (= temp121_16 temp121_15))
(assert (= temp121_17 (select ARGNAME_padding_NAMEEND_VAL temp121_16)))
(assert (= temp121_18 #x0000000000000004))
(assert (= temp121_19 temp121_18))
(assert (= temp121_20 (select ARGNAME_padding_NAMEEND_VAL temp121_19)))
(assert (= temp121_21 #x0000000000000005))
(assert (= temp121_22 temp121_21))
(assert (= temp121_23 (select ARGNAME_padding_NAMEEND_VAL temp121_22)))
(assert (= temp121_24 #x0000000000000000))
(assert (= temp121_25 #x0000000000000000))
(assert (= temp121_26 temp121_25))
(assert (= temp121_27 (select ARGNAME_padding_NAMEEND_VAL temp121_26)))
(assert (= temp121_28 #x0000000000000000))
(assert (= temp121_29 #x0000000000000001))
(assert (= temp121_30 temp121_29))
(assert (= temp121_31 (select ARGNAME_padding_NAMEEND_VAL temp121_30)))
(assert (= temp121_32 #x0000000000000000))
(assert (= temp121_33 #x0000000000000002))
(assert (= temp121_34 temp121_33))
(assert (= temp121_35 (select ARGNAME_padding_NAMEEND_VAL temp121_34)))
(assert (= temp121_36 #x0000000000000000))
(assert (= temp121_37 #x0000000000000003))
(assert (= temp121_38 temp121_37))
(assert (= temp121_39 (select ARGNAME_padding_NAMEEND_VAL temp121_38)))
(assert (= temp121_40 #x0000000000000000))
(assert (= temp121_41 #x0000000000000004))
(assert (= temp121_42 temp121_41))
(assert (= temp121_43 (select ARGNAME_padding_NAMEEND_VAL temp121_42)))
(assert (= temp121_44 #x0000000000000000))
(assert (= temp121_45 #x0000000000000005))
(assert (= temp121_46 temp121_45))
(assert (= temp121_47 (select ARGNAME_padding_NAMEEND_VAL temp121_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp121_27 temp121_24)
             (bvslt temp121_31 temp121_28)
             (bvslt temp121_35 temp121_32)
             (bvslt temp121_39 temp121_36)
             (bvslt temp121_43 temp121_40)
             (bvslt temp121_47 temp121_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_48 #x0000000000000000))
(assert (= var1322786 temp121_48))
(assert (= temp121_49 #x0000000000000000))
(assert (= temp121_50 temp121_49))
(assert (= temp121_51 (select ARGNAME_output_padding_NAMEEND_VAL temp121_50)))
(assert (= temp121_52 #x0000000000000001))
(assert (= temp121_53 temp121_52))
(assert (= temp121_54 (select ARGNAME_output_padding_NAMEEND_VAL temp121_53)))
(assert (= temp121_55 #x0000000000000002))
(assert (= temp121_56 temp121_55))
(assert (= temp121_57 (select ARGNAME_output_padding_NAMEEND_VAL temp121_56)))
(assert (= temp121_58 #x0000000000000003))
(assert (= temp121_59 temp121_58))
(assert (= temp121_60 (select ARGNAME_output_padding_NAMEEND_VAL temp121_59)))
(assert (= temp121_61 #x0000000000000004))
(assert (= temp121_62 temp121_61))
(assert (= temp121_63 (select ARGNAME_output_padding_NAMEEND_VAL temp121_62)))
(assert (= temp121_64 #x0000000000000005))
(assert (= temp121_65 temp121_64))
(assert (= temp121_66 (select ARGNAME_output_padding_NAMEEND_VAL temp121_65)))
(assert (= temp121_67 #x0000000000000000))
(assert (= temp121_68 #x0000000000000000))
(assert (= temp121_69 temp121_68))
(assert (= temp121_70 (select ARGNAME_output_padding_NAMEEND_VAL temp121_69)))
(assert (= temp121_71 #x0000000000000000))
(assert (= temp121_72 #x0000000000000001))
(assert (= temp121_73 temp121_72))
(assert (= temp121_74 (select ARGNAME_output_padding_NAMEEND_VAL temp121_73)))
(assert (= temp121_75 #x0000000000000000))
(assert (= temp121_76 #x0000000000000002))
(assert (= temp121_77 temp121_76))
(assert (= temp121_78 (select ARGNAME_output_padding_NAMEEND_VAL temp121_77)))
(assert (= temp121_79 #x0000000000000000))
(assert (= temp121_80 #x0000000000000003))
(assert (= temp121_81 temp121_80))
(assert (= temp121_82 (select ARGNAME_output_padding_NAMEEND_VAL temp121_81)))
(assert (= temp121_83 #x0000000000000000))
(assert (= temp121_84 #x0000000000000004))
(assert (= temp121_85 temp121_84))
(assert (= temp121_86 (select ARGNAME_output_padding_NAMEEND_VAL temp121_85)))
(assert (= temp121_87 #x0000000000000000))
(assert (= temp121_88 #x0000000000000005))
(assert (= temp121_89 temp121_88))
(assert (= temp121_90 (select ARGNAME_output_padding_NAMEEND_VAL temp121_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp121_70 temp121_67)
             (bvslt temp121_74 temp121_71)
             (bvslt temp121_78 temp121_75)
             (bvslt temp121_82 temp121_79)
             (bvslt temp121_86 temp121_83)
             (bvslt temp121_90 temp121_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_91 #x0000000000000000))
(assert (= var1322797 temp121_91))
(assert (= temp121_92 #x0000000000000000))
(assert (= temp121_93 temp121_92))
(assert (= temp121_94 (select ARGNAME_stride_NAMEEND_VAL temp121_93)))
(assert (= temp121_95 #x0000000000000001))
(assert (= temp121_96 temp121_95))
(assert (= temp121_97 (select ARGNAME_stride_NAMEEND_VAL temp121_96)))
(assert (= temp121_98 #x0000000000000002))
(assert (= temp121_99 temp121_98))
(assert (= temp121_100 (select ARGNAME_stride_NAMEEND_VAL temp121_99)))
(assert (= temp121_101 #x0000000000000003))
(assert (= temp121_102 temp121_101))
(assert (= temp121_103 (select ARGNAME_stride_NAMEEND_VAL temp121_102)))
(assert (= temp121_104 #x0000000000000004))
(assert (= temp121_105 temp121_104))
(assert (= temp121_106 (select ARGNAME_stride_NAMEEND_VAL temp121_105)))
(assert (= temp121_107 #x0000000000000005))
(assert (= temp121_108 temp121_107))
(assert (= temp121_109 (select ARGNAME_stride_NAMEEND_VAL temp121_108)))
(assert (= temp121_110 #x0000000000000000))
(assert (= temp121_111 #x0000000000000000))
(assert (= temp121_112 temp121_111))
(assert (= temp121_113 (select ARGNAME_stride_NAMEEND_VAL temp121_112)))
(assert (= temp121_114 #x0000000000000000))
(assert (= temp121_115 #x0000000000000001))
(assert (= temp121_116 temp121_115))
(assert (= temp121_117 (select ARGNAME_stride_NAMEEND_VAL temp121_116)))
(assert (= temp121_118 #x0000000000000000))
(assert (= temp121_119 #x0000000000000002))
(assert (= temp121_120 temp121_119))
(assert (= temp121_121 (select ARGNAME_stride_NAMEEND_VAL temp121_120)))
(assert (= temp121_122 #x0000000000000000))
(assert (= temp121_123 #x0000000000000003))
(assert (= temp121_124 temp121_123))
(assert (= temp121_125 (select ARGNAME_stride_NAMEEND_VAL temp121_124)))
(assert (= temp121_126 #x0000000000000000))
(assert (= temp121_127 #x0000000000000004))
(assert (= temp121_128 temp121_127))
(assert (= temp121_129 (select ARGNAME_stride_NAMEEND_VAL temp121_128)))
(assert (= temp121_130 #x0000000000000000))
(assert (= temp121_131 #x0000000000000005))
(assert (= temp121_132 temp121_131))
(assert (= temp121_133 (select ARGNAME_stride_NAMEEND_VAL temp121_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp121_113 temp121_110)
             (bvsle temp121_117 temp121_114)
             (bvsle temp121_121 temp121_118)
             (bvsle temp121_125 temp121_122)
             (bvsle temp121_129 temp121_126)
             (bvsle temp121_133 temp121_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_134 #x0000000000000000))
(assert (= var1322807 temp121_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_135 #x0000000000000001))
(assert (= var1322819 temp121_135))
(assert (= temp121_136 #x0000000000000000))
(assert (= var1310898 temp121_136))
(assert (= temp121_137 #x0000000000000000))
(assert (= temp121_138 temp121_137))
(assert (= temp121_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_138)))
(assert (= temp121_140 #x0000000000000001))
(assert (= temp121_141 temp121_140))
(assert (= temp121_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_141)))
(assert (= temp121_143 #x0000000000000002))
(assert (= temp121_144 temp121_143))
(assert (= temp121_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_144)))
(assert (= temp121_146 #x0000000000000003))
(assert (= temp121_147 temp121_146))
(assert (= temp121_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_147)))
(assert (= temp121_149 #x0000000000000004))
(assert (= temp121_150 temp121_149))
(assert (= temp121_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_150)))
(assert (= temp121_152 #x0000000000000005))
(assert (= temp121_153 temp121_152))
(assert (= temp121_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_153)))
(assert (= temp121_156 var1310898))
(assert (= temp121_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_156)))
(assert (= temp121_155 temp121_157))
(assert (= var1322852
   (ite (bvslt temp121_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_158 #x0000000000000000))
(assert (= var1322852 temp121_158))
(assert (= temp121_159 #x0000000000000000))
(assert (= var1310898 temp121_159))
(assert (= temp121_161 var1310898))
(assert (= temp121_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_161)))
(assert (= temp121_160 temp121_162))
(assert (= var1322874 (bvsmod temp121_160 ARGNAME_groups_NAMEEND)))
(assert (= temp121_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp121_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp121_164 #x0000000000000001))
(assert (= var1322875 temp121_164))
(assert (= temp121_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp121_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_166 #x0000000000000001))
(assert (= var1322895 temp121_166))
(assert (= temp121_167 #x0000000000000001))
(assert (= var1311786 temp121_167))
(assert (= temp121_168 #x0000000000000000))
(assert (= temp121_169 temp121_168))
(assert (= temp121_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp121_169)))
(assert (= temp121_171 #x0000000000000001))
(assert (= temp121_172 temp121_171))
(assert (= temp121_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp121_172)))
(assert (= temp121_174 #x0000000000000002))
(assert (= temp121_175 temp121_174))
(assert (= temp121_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp121_175)))
(assert (= temp121_177 #x0000000000000003))
(assert (= temp121_178 temp121_177))
(assert (= temp121_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp121_178)))
(assert (= temp121_180 #x0000000000000004))
(assert (= temp121_181 temp121_180))
(assert (= temp121_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp121_181)))
(assert (= temp121_183 #x0000000000000005))
(assert (= temp121_184 temp121_183))
(assert (= temp121_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp121_184)))
(assert (= temp121_186 #x0000000000000000))
(assert (= temp121_187
   (ite (bvslt var1311786 temp121_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp121_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp121_187)))
(assert (= var1322903 temp121_188))
(assert (bvslt (ite (bvslt var1311786 temp121_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp121_189 #x0000000000000001))
(assert (= var1311786 temp121_189))
(assert (= temp121_191 var1311786))
(assert (= temp121_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_191)))
(assert (= temp121_190 temp121_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp121_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp121_193 #x0000000000000001))
(assert (= var1322908 temp121_193))
(assert (= temp121_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp121_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_195 #x0000000000000001))
(assert (= var1322975 temp121_195))
(assert (= temp121_196 #x0000000000000000))
(assert (= var1310898 temp121_196))
(assert (= temp121_197 #x0000000000000000))
(assert (= temp121_198 temp121_197))
(assert (= temp121_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp121_198)))
(assert (= temp121_200 #x0000000000000001))
(assert (= temp121_201 temp121_200))
(assert (= temp121_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp121_201)))
(assert (= temp121_203 #x0000000000000002))
(assert (= temp121_204 temp121_203))
(assert (= temp121_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp121_204)))
(assert (= temp121_206 #x0000000000000003))
(assert (= temp121_207 temp121_206))
(assert (= temp121_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp121_207)))
(assert (= temp121_209 #x0000000000000004))
(assert (= temp121_210 temp121_209))
(assert (= temp121_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp121_210)))
(assert (= temp121_212 #x0000000000000005))
(assert (= temp121_213 temp121_212))
(assert (= temp121_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp121_213)))
(assert (= temp121_215 #x0000000000000000))
(assert (= temp121_216
   (ite (bvslt var1310898 temp121_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp121_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp121_216)))
(assert (= var1322977 temp121_217))
(assert (bvslt (ite (bvslt var1310898 temp121_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp121_218 #x0000000000000000))
(assert (= var1310898 temp121_218))
(assert (= temp121_220 var1310898))
(assert (= temp121_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp121_220)))
(assert (= temp121_219 temp121_221))
(assert (= var1322980
   (ite (= var1322977 temp121_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp121_222 #x0000000000000001))
(assert (= var1322980 temp121_222))
(assert (= temp121_223 #x0000000000000002))
(assert (= var1848169 temp121_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp121_225 #x0000000000000001))
(assert (= var1323065 temp121_225))
(assert (= temp121_226 #x0000000000000001))
(assert (= var3486735 temp121_226))
(assert (= temp121_227 #x0000000000000001))
(assert (= var3814415 temp121_227))
(assert (= temp121_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp121_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_229 #x0000000000000001))
(assert (= var79986 temp121_229))
(assert (= temp121_230 #x0000000000000001))
(assert (= var80116 temp121_230))
(assert (= var4796905 var80116))
(assert (= temp121_231 #x0000000000000000))
(assert (= var4784306 temp121_231))
(assert (= temp121_232 #x0000000000000000))
(assert (= temp121_233
   (ite (bvslt var4784306 temp121_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp121_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp121_233)))
(assert (= var4796924 temp121_234))
(assert (bvslt (ite (bvslt var4784306 temp121_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp121_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp121_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp121_236 #x0000000000000001))
(assert (= var4796925 temp121_236))
(assert (= temp121_237 #x0000000000000000))
(assert (= var4996927 temp121_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp121_238 #x0000000000000002))
(assert (= var5125763 temp121_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp121_239 #x0000000000000000))
(assert (= var5191324 temp121_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp121_241 #xffffffffffffffff))
(assert (= temp121_240 temp121_241))
(assert (= temp121_242 #x0000000000000001))
(assert (= var66602 temp121_242))
(assert (= temp121_243 #x0000000000000000))
(assert (= temp121_244
   (ite (bvslt var66602 temp121_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp121_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp121_244)))
(assert (= var80523 temp121_245))
(assert (bvslt (ite (bvslt var66602 temp121_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp121_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp121_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp121_247 #x0000000000000001))
(assert (= var80524 temp121_247))
(assert (= temp121_249 #xffffffffffffffff))
(assert (= temp121_248 temp121_249))
(assert (= temp121_250 #x0000000000000001))
(assert (= var79986 temp121_250))
(model-add temp121_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp121_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp121_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






