(declare-fun temp1002_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1002_2 () (_ BitVec 64))
(declare-fun temp1002_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1002_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1002_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1002_6 () (_ BitVec 64))
(declare-fun temp1002_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1002_8 () (_ BitVec 64))
(declare-fun temp1002_9 () (_ BitVec 64))
(declare-fun temp1002_10 () (_ BitVec 64))
(declare-fun temp1002_11 () (_ BitVec 64))
(declare-fun temp1002_12 () (_ BitVec 64))
(declare-fun temp1002_13 () (_ BitVec 64))
(declare-fun temp1002_14 () (_ BitVec 64))
(declare-fun temp1002_15 () (_ BitVec 64))
(declare-fun temp1002_16 () (_ BitVec 64))
(declare-fun temp1002_17 () (_ BitVec 64))
(declare-fun temp1002_18 () (_ BitVec 64))
(declare-fun temp1002_19 () (_ BitVec 64))
(declare-fun temp1002_20 () (_ BitVec 64))
(declare-fun temp1002_21 () (_ BitVec 64))
(declare-fun temp1002_22 () (_ BitVec 64))
(declare-fun temp1002_23 () (_ BitVec 64))
(declare-fun temp1002_24 () (_ BitVec 64))
(declare-fun temp1002_25 () (_ BitVec 64))
(declare-fun temp1002_26 () (_ BitVec 64))
(declare-fun temp1002_27 () (_ BitVec 64))
(declare-fun temp1002_28 () (_ BitVec 64))
(declare-fun temp1002_29 () (_ BitVec 64))
(declare-fun temp1002_30 () (_ BitVec 64))
(declare-fun temp1002_31 () (_ BitVec 64))
(declare-fun temp1002_32 () (_ BitVec 64))
(declare-fun temp1002_33 () (_ BitVec 64))
(declare-fun temp1002_34 () (_ BitVec 64))
(declare-fun temp1002_35 () (_ BitVec 64))
(declare-fun temp1002_36 () (_ BitVec 64))
(declare-fun temp1002_37 () (_ BitVec 64))
(declare-fun temp1002_38 () (_ BitVec 64))
(declare-fun temp1002_39 () (_ BitVec 64))
(declare-fun temp1002_40 () (_ BitVec 64))
(declare-fun temp1002_41 () (_ BitVec 64))
(declare-fun temp1002_42 () (_ BitVec 64))
(declare-fun temp1002_43 () (_ BitVec 64))
(declare-fun temp1002_44 () (_ BitVec 64))
(declare-fun temp1002_45 () (_ BitVec 64))
(declare-fun temp1002_46 () (_ BitVec 64))
(declare-fun temp1002_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1002_48 () (_ BitVec 64))
(declare-fun temp1002_49 () (_ BitVec 64))
(declare-fun temp1002_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1002_51 () (_ BitVec 64))
(declare-fun temp1002_52 () (_ BitVec 64))
(declare-fun temp1002_53 () (_ BitVec 64))
(declare-fun temp1002_54 () (_ BitVec 64))
(declare-fun temp1002_55 () (_ BitVec 64))
(declare-fun temp1002_56 () (_ BitVec 64))
(declare-fun temp1002_57 () (_ BitVec 64))
(declare-fun temp1002_58 () (_ BitVec 64))
(declare-fun temp1002_59 () (_ BitVec 64))
(declare-fun temp1002_60 () (_ BitVec 64))
(declare-fun temp1002_61 () (_ BitVec 64))
(declare-fun temp1002_62 () (_ BitVec 64))
(declare-fun temp1002_63 () (_ BitVec 64))
(declare-fun temp1002_64 () (_ BitVec 64))
(declare-fun temp1002_65 () (_ BitVec 64))
(declare-fun temp1002_66 () (_ BitVec 64))
(declare-fun temp1002_67 () (_ BitVec 64))
(declare-fun temp1002_68 () (_ BitVec 64))
(declare-fun temp1002_69 () (_ BitVec 64))
(declare-fun temp1002_70 () (_ BitVec 64))
(declare-fun temp1002_71 () (_ BitVec 64))
(declare-fun temp1002_72 () (_ BitVec 64))
(declare-fun temp1002_73 () (_ BitVec 64))
(declare-fun temp1002_74 () (_ BitVec 64))
(declare-fun temp1002_75 () (_ BitVec 64))
(declare-fun temp1002_76 () (_ BitVec 64))
(declare-fun temp1002_77 () (_ BitVec 64))
(declare-fun temp1002_78 () (_ BitVec 64))
(declare-fun temp1002_79 () (_ BitVec 64))
(declare-fun temp1002_80 () (_ BitVec 64))
(declare-fun temp1002_81 () (_ BitVec 64))
(declare-fun temp1002_82 () (_ BitVec 64))
(declare-fun temp1002_83 () (_ BitVec 64))
(declare-fun temp1002_84 () (_ BitVec 64))
(declare-fun temp1002_85 () (_ BitVec 64))
(declare-fun temp1002_86 () (_ BitVec 64))
(declare-fun temp1002_87 () (_ BitVec 64))
(declare-fun temp1002_88 () (_ BitVec 64))
(declare-fun temp1002_89 () (_ BitVec 64))
(declare-fun temp1002_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1002_91 () (_ BitVec 64))
(declare-fun temp1002_92 () (_ BitVec 64))
(declare-fun temp1002_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1002_94 () (_ BitVec 64))
(declare-fun temp1002_95 () (_ BitVec 64))
(declare-fun temp1002_96 () (_ BitVec 64))
(declare-fun temp1002_97 () (_ BitVec 64))
(declare-fun temp1002_98 () (_ BitVec 64))
(declare-fun temp1002_99 () (_ BitVec 64))
(declare-fun temp1002_100 () (_ BitVec 64))
(declare-fun temp1002_101 () (_ BitVec 64))
(declare-fun temp1002_102 () (_ BitVec 64))
(declare-fun temp1002_103 () (_ BitVec 64))
(declare-fun temp1002_104 () (_ BitVec 64))
(declare-fun temp1002_105 () (_ BitVec 64))
(declare-fun temp1002_106 () (_ BitVec 64))
(declare-fun temp1002_107 () (_ BitVec 64))
(declare-fun temp1002_108 () (_ BitVec 64))
(declare-fun temp1002_109 () (_ BitVec 64))
(declare-fun temp1002_110 () (_ BitVec 64))
(declare-fun temp1002_111 () (_ BitVec 64))
(declare-fun temp1002_112 () (_ BitVec 64))
(declare-fun temp1002_113 () (_ BitVec 64))
(declare-fun temp1002_114 () (_ BitVec 64))
(declare-fun temp1002_115 () (_ BitVec 64))
(declare-fun temp1002_116 () (_ BitVec 64))
(declare-fun temp1002_117 () (_ BitVec 64))
(declare-fun temp1002_118 () (_ BitVec 64))
(declare-fun temp1002_119 () (_ BitVec 64))
(declare-fun temp1002_120 () (_ BitVec 64))
(declare-fun temp1002_121 () (_ BitVec 64))
(declare-fun temp1002_122 () (_ BitVec 64))
(declare-fun temp1002_123 () (_ BitVec 64))
(declare-fun temp1002_124 () (_ BitVec 64))
(declare-fun temp1002_125 () (_ BitVec 64))
(declare-fun temp1002_126 () (_ BitVec 64))
(declare-fun temp1002_127 () (_ BitVec 64))
(declare-fun temp1002_128 () (_ BitVec 64))
(declare-fun temp1002_129 () (_ BitVec 64))
(declare-fun temp1002_130 () (_ BitVec 64))
(declare-fun temp1002_131 () (_ BitVec 64))
(declare-fun temp1002_132 () (_ BitVec 64))
(declare-fun temp1002_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1002_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1002_135 () (_ BitVec 64))
(declare-fun temp1002_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1002_137 () (_ BitVec 64))
(declare-fun temp1002_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1002_139 () (_ BitVec 64))
(declare-fun temp1002_140 () (_ BitVec 64))
(declare-fun temp1002_141 () (_ BitVec 64))
(declare-fun temp1002_142 () (_ BitVec 64))
(declare-fun temp1002_143 () (_ BitVec 64))
(declare-fun temp1002_144 () (_ BitVec 64))
(declare-fun temp1002_145 () (_ BitVec 64))
(declare-fun temp1002_146 () (_ BitVec 64))
(declare-fun temp1002_147 () (_ BitVec 64))
(declare-fun temp1002_148 () (_ BitVec 64))
(declare-fun temp1002_149 () (_ BitVec 64))
(declare-fun temp1002_150 () (_ BitVec 64))
(declare-fun temp1002_151 () (_ BitVec 64))
(declare-fun temp1002_152 () (_ BitVec 64))
(declare-fun temp1002_153 () (_ BitVec 64))
(declare-fun temp1002_154 () (_ BitVec 64))
(declare-fun temp1002_156 () (_ BitVec 64))
(declare-fun temp1002_157 () (_ BitVec 64))
(declare-fun temp1002_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1002_158 () (_ BitVec 64))
(declare-fun temp1002_159 () (_ BitVec 64))
(declare-fun temp1002_161 () (_ BitVec 64))
(declare-fun temp1002_162 () (_ BitVec 64))
(declare-fun temp1002_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1002_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1002_164 () (_ BitVec 64))
(declare-fun temp1002_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1002_166 () (_ BitVec 64))
(declare-fun temp1002_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1002_168 () (_ BitVec 64))
(declare-fun temp1002_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1002_170 () (_ BitVec 64))
(declare-fun temp1002_171 () (_ BitVec 64))
(declare-fun temp1002_172 () (_ BitVec 64))
(declare-fun temp1002_173 () (_ BitVec 64))
(declare-fun temp1002_174 () (_ BitVec 64))
(declare-fun temp1002_175 () (_ BitVec 64))
(declare-fun temp1002_176 () (_ BitVec 64))
(declare-fun temp1002_177 () (_ BitVec 64))
(declare-fun temp1002_178 () (_ BitVec 64))
(declare-fun temp1002_179 () (_ BitVec 64))
(declare-fun temp1002_180 () (_ BitVec 64))
(declare-fun temp1002_181 () (_ BitVec 64))
(declare-fun temp1002_182 () (_ BitVec 64))
(declare-fun temp1002_183 () (_ BitVec 64))
(declare-fun temp1002_184 () (_ BitVec 64))
(declare-fun temp1002_185 () (_ BitVec 64))
(declare-fun temp1002_186 () (_ BitVec 64))
(declare-fun temp1002_187 () (_ BitVec 64))
(declare-fun temp1002_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1002_189 () (_ BitVec 64))
(declare-fun temp1002_191 () (_ BitVec 64))
(declare-fun temp1002_192 () (_ BitVec 64))
(declare-fun temp1002_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1002_193 () (_ BitVec 64))
(declare-fun temp1002_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1002_195 () (_ BitVec 64))
(declare-fun temp1002_196 () (_ BitVec 64))
(declare-fun temp1002_197 () (_ BitVec 64))
(declare-fun temp1002_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1002_199 () (_ BitVec 64))
(declare-fun temp1002_200 () (_ BitVec 64))
(declare-fun temp1002_201 () (_ BitVec 64))
(declare-fun temp1002_202 () (_ BitVec 64))
(declare-fun temp1002_203 () (_ BitVec 64))
(declare-fun temp1002_204 () (_ BitVec 64))
(declare-fun temp1002_205 () (_ BitVec 64))
(declare-fun temp1002_206 () (_ BitVec 64))
(declare-fun temp1002_207 () (_ BitVec 64))
(declare-fun temp1002_208 () (_ BitVec 64))
(declare-fun temp1002_209 () (_ BitVec 64))
(declare-fun temp1002_210 () (_ BitVec 64))
(declare-fun temp1002_211 () (_ BitVec 64))
(declare-fun temp1002_212 () (_ BitVec 64))
(declare-fun temp1002_213 () (_ BitVec 64))
(declare-fun temp1002_214 () (_ BitVec 64))
(declare-fun temp1002_215 () (_ BitVec 64))
(declare-fun temp1002_216 () (_ BitVec 64))
(declare-fun temp1002_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1002_218 () (_ BitVec 64))
(declare-fun temp1002_220 () (_ BitVec 64))
(declare-fun temp1002_221 () (_ BitVec 64))
(declare-fun temp1002_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1002_222 () (_ BitVec 64))
(declare-fun temp1002_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1002_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1002_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1002_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1002_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1002_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1002_229 () (_ BitVec 64))
(declare-fun temp1002_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1002_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1002_232 () (_ BitVec 64))
(declare-fun temp1002_233 () (_ BitVec 64))
(declare-fun temp1002_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1002_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1002_236 () (_ BitVec 64))
(declare-fun temp1002_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1002_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1002_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp1002_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp1002_241 () (_ BitVec 64))
(assert (= temp1002_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1002_1)))
(assert (= temp1002_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1002_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_3 #x0000000000000000))
(assert (= var79869 temp1002_3))
(assert (= temp1002_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1002_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_5 #x0000000000000000))
(assert (= var79914 temp1002_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1002_6 #x0000000000000000))
(assert (= temp1002_7 temp1002_6))
(assert (= temp1002_8 (select ARGNAME_padding_NAMEEND_VAL temp1002_7)))
(assert (= temp1002_9 #x0000000000000001))
(assert (= temp1002_10 temp1002_9))
(assert (= temp1002_11 (select ARGNAME_padding_NAMEEND_VAL temp1002_10)))
(assert (= temp1002_12 #x0000000000000002))
(assert (= temp1002_13 temp1002_12))
(assert (= temp1002_14 (select ARGNAME_padding_NAMEEND_VAL temp1002_13)))
(assert (= temp1002_15 #x0000000000000003))
(assert (= temp1002_16 temp1002_15))
(assert (= temp1002_17 (select ARGNAME_padding_NAMEEND_VAL temp1002_16)))
(assert (= temp1002_18 #x0000000000000004))
(assert (= temp1002_19 temp1002_18))
(assert (= temp1002_20 (select ARGNAME_padding_NAMEEND_VAL temp1002_19)))
(assert (= temp1002_21 #x0000000000000005))
(assert (= temp1002_22 temp1002_21))
(assert (= temp1002_23 (select ARGNAME_padding_NAMEEND_VAL temp1002_22)))
(assert (= temp1002_24 #x0000000000000000))
(assert (= temp1002_25 #x0000000000000000))
(assert (= temp1002_26 temp1002_25))
(assert (= temp1002_27 (select ARGNAME_padding_NAMEEND_VAL temp1002_26)))
(assert (= temp1002_28 #x0000000000000000))
(assert (= temp1002_29 #x0000000000000001))
(assert (= temp1002_30 temp1002_29))
(assert (= temp1002_31 (select ARGNAME_padding_NAMEEND_VAL temp1002_30)))
(assert (= temp1002_32 #x0000000000000000))
(assert (= temp1002_33 #x0000000000000002))
(assert (= temp1002_34 temp1002_33))
(assert (= temp1002_35 (select ARGNAME_padding_NAMEEND_VAL temp1002_34)))
(assert (= temp1002_36 #x0000000000000000))
(assert (= temp1002_37 #x0000000000000003))
(assert (= temp1002_38 temp1002_37))
(assert (= temp1002_39 (select ARGNAME_padding_NAMEEND_VAL temp1002_38)))
(assert (= temp1002_40 #x0000000000000000))
(assert (= temp1002_41 #x0000000000000004))
(assert (= temp1002_42 temp1002_41))
(assert (= temp1002_43 (select ARGNAME_padding_NAMEEND_VAL temp1002_42)))
(assert (= temp1002_44 #x0000000000000000))
(assert (= temp1002_45 #x0000000000000005))
(assert (= temp1002_46 temp1002_45))
(assert (= temp1002_47 (select ARGNAME_padding_NAMEEND_VAL temp1002_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1002_27 temp1002_24)
             (bvslt temp1002_31 temp1002_28)
             (bvslt temp1002_35 temp1002_32)
             (bvslt temp1002_39 temp1002_36)
             (bvslt temp1002_43 temp1002_40)
             (bvslt temp1002_47 temp1002_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_48 #x0000000000000000))
(assert (= var1322786 temp1002_48))
(assert (= temp1002_49 #x0000000000000000))
(assert (= temp1002_50 temp1002_49))
(assert (= temp1002_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_50)))
(assert (= temp1002_52 #x0000000000000001))
(assert (= temp1002_53 temp1002_52))
(assert (= temp1002_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_53)))
(assert (= temp1002_55 #x0000000000000002))
(assert (= temp1002_56 temp1002_55))
(assert (= temp1002_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_56)))
(assert (= temp1002_58 #x0000000000000003))
(assert (= temp1002_59 temp1002_58))
(assert (= temp1002_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_59)))
(assert (= temp1002_61 #x0000000000000004))
(assert (= temp1002_62 temp1002_61))
(assert (= temp1002_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_62)))
(assert (= temp1002_64 #x0000000000000005))
(assert (= temp1002_65 temp1002_64))
(assert (= temp1002_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_65)))
(assert (= temp1002_67 #x0000000000000000))
(assert (= temp1002_68 #x0000000000000000))
(assert (= temp1002_69 temp1002_68))
(assert (= temp1002_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_69)))
(assert (= temp1002_71 #x0000000000000000))
(assert (= temp1002_72 #x0000000000000001))
(assert (= temp1002_73 temp1002_72))
(assert (= temp1002_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_73)))
(assert (= temp1002_75 #x0000000000000000))
(assert (= temp1002_76 #x0000000000000002))
(assert (= temp1002_77 temp1002_76))
(assert (= temp1002_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_77)))
(assert (= temp1002_79 #x0000000000000000))
(assert (= temp1002_80 #x0000000000000003))
(assert (= temp1002_81 temp1002_80))
(assert (= temp1002_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_81)))
(assert (= temp1002_83 #x0000000000000000))
(assert (= temp1002_84 #x0000000000000004))
(assert (= temp1002_85 temp1002_84))
(assert (= temp1002_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_85)))
(assert (= temp1002_87 #x0000000000000000))
(assert (= temp1002_88 #x0000000000000005))
(assert (= temp1002_89 temp1002_88))
(assert (= temp1002_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1002_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1002_70 temp1002_67)
             (bvslt temp1002_74 temp1002_71)
             (bvslt temp1002_78 temp1002_75)
             (bvslt temp1002_82 temp1002_79)
             (bvslt temp1002_86 temp1002_83)
             (bvslt temp1002_90 temp1002_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_91 #x0000000000000000))
(assert (= var1322797 temp1002_91))
(assert (= temp1002_92 #x0000000000000000))
(assert (= temp1002_93 temp1002_92))
(assert (= temp1002_94 (select ARGNAME_stride_NAMEEND_VAL temp1002_93)))
(assert (= temp1002_95 #x0000000000000001))
(assert (= temp1002_96 temp1002_95))
(assert (= temp1002_97 (select ARGNAME_stride_NAMEEND_VAL temp1002_96)))
(assert (= temp1002_98 #x0000000000000002))
(assert (= temp1002_99 temp1002_98))
(assert (= temp1002_100 (select ARGNAME_stride_NAMEEND_VAL temp1002_99)))
(assert (= temp1002_101 #x0000000000000003))
(assert (= temp1002_102 temp1002_101))
(assert (= temp1002_103 (select ARGNAME_stride_NAMEEND_VAL temp1002_102)))
(assert (= temp1002_104 #x0000000000000004))
(assert (= temp1002_105 temp1002_104))
(assert (= temp1002_106 (select ARGNAME_stride_NAMEEND_VAL temp1002_105)))
(assert (= temp1002_107 #x0000000000000005))
(assert (= temp1002_108 temp1002_107))
(assert (= temp1002_109 (select ARGNAME_stride_NAMEEND_VAL temp1002_108)))
(assert (= temp1002_110 #x0000000000000000))
(assert (= temp1002_111 #x0000000000000000))
(assert (= temp1002_112 temp1002_111))
(assert (= temp1002_113 (select ARGNAME_stride_NAMEEND_VAL temp1002_112)))
(assert (= temp1002_114 #x0000000000000000))
(assert (= temp1002_115 #x0000000000000001))
(assert (= temp1002_116 temp1002_115))
(assert (= temp1002_117 (select ARGNAME_stride_NAMEEND_VAL temp1002_116)))
(assert (= temp1002_118 #x0000000000000000))
(assert (= temp1002_119 #x0000000000000002))
(assert (= temp1002_120 temp1002_119))
(assert (= temp1002_121 (select ARGNAME_stride_NAMEEND_VAL temp1002_120)))
(assert (= temp1002_122 #x0000000000000000))
(assert (= temp1002_123 #x0000000000000003))
(assert (= temp1002_124 temp1002_123))
(assert (= temp1002_125 (select ARGNAME_stride_NAMEEND_VAL temp1002_124)))
(assert (= temp1002_126 #x0000000000000000))
(assert (= temp1002_127 #x0000000000000004))
(assert (= temp1002_128 temp1002_127))
(assert (= temp1002_129 (select ARGNAME_stride_NAMEEND_VAL temp1002_128)))
(assert (= temp1002_130 #x0000000000000000))
(assert (= temp1002_131 #x0000000000000005))
(assert (= temp1002_132 temp1002_131))
(assert (= temp1002_133 (select ARGNAME_stride_NAMEEND_VAL temp1002_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1002_113 temp1002_110)
             (bvsle temp1002_117 temp1002_114)
             (bvsle temp1002_121 temp1002_118)
             (bvsle temp1002_125 temp1002_122)
             (bvsle temp1002_129 temp1002_126)
             (bvsle temp1002_133 temp1002_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_134 #x0000000000000000))
(assert (= var1322807 temp1002_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_135 #x0000000000000001))
(assert (= var1322819 temp1002_135))
(assert (= temp1002_136 #x0000000000000000))
(assert (= var1310898 temp1002_136))
(assert (= temp1002_137 #x0000000000000000))
(assert (= temp1002_138 temp1002_137))
(assert (= temp1002_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_138)))
(assert (= temp1002_140 #x0000000000000001))
(assert (= temp1002_141 temp1002_140))
(assert (= temp1002_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_141)))
(assert (= temp1002_143 #x0000000000000002))
(assert (= temp1002_144 temp1002_143))
(assert (= temp1002_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_144)))
(assert (= temp1002_146 #x0000000000000003))
(assert (= temp1002_147 temp1002_146))
(assert (= temp1002_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_147)))
(assert (= temp1002_149 #x0000000000000004))
(assert (= temp1002_150 temp1002_149))
(assert (= temp1002_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_150)))
(assert (= temp1002_152 #x0000000000000005))
(assert (= temp1002_153 temp1002_152))
(assert (= temp1002_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_153)))
(assert (= temp1002_156 var1310898))
(assert (= temp1002_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_156)))
(assert (= temp1002_155 temp1002_157))
(assert (= var1322852
   (ite (bvslt temp1002_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_158 #x0000000000000000))
(assert (= var1322852 temp1002_158))
(assert (= temp1002_159 #x0000000000000000))
(assert (= var1310898 temp1002_159))
(assert (= temp1002_161 var1310898))
(assert (= temp1002_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_161)))
(assert (= temp1002_160 temp1002_162))
(assert (= var1322874 (bvsmod temp1002_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1002_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1002_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1002_164 #x0000000000000001))
(assert (= var1322875 temp1002_164))
(assert (= temp1002_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1002_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_166 #x0000000000000001))
(assert (= var1322895 temp1002_166))
(assert (= temp1002_167 #x0000000000000001))
(assert (= var1311786 temp1002_167))
(assert (= temp1002_168 #x0000000000000000))
(assert (= temp1002_169 temp1002_168))
(assert (= temp1002_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1002_169)))
(assert (= temp1002_171 #x0000000000000001))
(assert (= temp1002_172 temp1002_171))
(assert (= temp1002_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1002_172)))
(assert (= temp1002_174 #x0000000000000002))
(assert (= temp1002_175 temp1002_174))
(assert (= temp1002_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1002_175)))
(assert (= temp1002_177 #x0000000000000003))
(assert (= temp1002_178 temp1002_177))
(assert (= temp1002_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1002_178)))
(assert (= temp1002_180 #x0000000000000004))
(assert (= temp1002_181 temp1002_180))
(assert (= temp1002_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1002_181)))
(assert (= temp1002_183 #x0000000000000005))
(assert (= temp1002_184 temp1002_183))
(assert (= temp1002_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1002_184)))
(assert (= temp1002_186 #x0000000000000000))
(assert (= temp1002_187
   (ite (bvslt var1311786 temp1002_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1002_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1002_187)))
(assert (= var1322903 temp1002_188))
(assert (bvslt (ite (bvslt var1311786 temp1002_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1002_189 #x0000000000000001))
(assert (= var1311786 temp1002_189))
(assert (= temp1002_191 var1311786))
(assert (= temp1002_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_191)))
(assert (= temp1002_190 temp1002_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1002_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1002_193 #x0000000000000001))
(assert (= var1322908 temp1002_193))
(assert (= temp1002_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1002_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_195 #x0000000000000001))
(assert (= var1322975 temp1002_195))
(assert (= temp1002_196 #x0000000000000000))
(assert (= var1310898 temp1002_196))
(assert (= temp1002_197 #x0000000000000000))
(assert (= temp1002_198 temp1002_197))
(assert (= temp1002_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1002_198)))
(assert (= temp1002_200 #x0000000000000001))
(assert (= temp1002_201 temp1002_200))
(assert (= temp1002_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1002_201)))
(assert (= temp1002_203 #x0000000000000002))
(assert (= temp1002_204 temp1002_203))
(assert (= temp1002_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1002_204)))
(assert (= temp1002_206 #x0000000000000003))
(assert (= temp1002_207 temp1002_206))
(assert (= temp1002_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1002_207)))
(assert (= temp1002_209 #x0000000000000004))
(assert (= temp1002_210 temp1002_209))
(assert (= temp1002_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1002_210)))
(assert (= temp1002_212 #x0000000000000005))
(assert (= temp1002_213 temp1002_212))
(assert (= temp1002_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1002_213)))
(assert (= temp1002_215 #x0000000000000000))
(assert (= temp1002_216
   (ite (bvslt var1310898 temp1002_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1002_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1002_216)))
(assert (= var1322977 temp1002_217))
(assert (bvslt (ite (bvslt var1310898 temp1002_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1002_218 #x0000000000000000))
(assert (= var1310898 temp1002_218))
(assert (= temp1002_220 var1310898))
(assert (= temp1002_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_220)))
(assert (= temp1002_219 temp1002_221))
(assert (= var1322980
   (ite (= var1322977 temp1002_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1002_222 #x0000000000000001))
(assert (= var1322980 temp1002_222))
(assert (= temp1002_223 #x0000000000000002))
(assert (= var1848169 temp1002_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1002_225 #x0000000000000001))
(assert (= var1323065 temp1002_225))
(assert (= temp1002_226 #x0000000000000001))
(assert (= var3486735 temp1002_226))
(assert (= temp1002_227 #x0000000000000001))
(assert (= var3814415 temp1002_227))
(assert (= temp1002_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1002_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_229 #x0000000000000001))
(assert (= var79986 temp1002_229))
(assert (= temp1002_230 #x0000000000000001))
(assert (= var80116 temp1002_230))
(assert (= var4796905 var80116))
(assert (= temp1002_231 #x0000000000000000))
(assert (= var4784306 temp1002_231))
(assert (= temp1002_232 #x0000000000000000))
(assert (= temp1002_233
   (ite (bvslt var4784306 temp1002_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1002_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1002_233)))
(assert (= var4796924 temp1002_234))
(assert (bvslt (ite (bvslt var4784306 temp1002_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1002_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1002_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1002_236 #x0000000000000001))
(assert (= var4796925 temp1002_236))
(assert (= temp1002_237 #x0000000000000000))
(assert (= var4996927 temp1002_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1002_238 #x0000000000000002))
(assert (= var5125763 temp1002_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_239 #x0000000000000000))
(assert (= var5191324 temp1002_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp1002_240 #x0000000000000000))
(assert (= var6631824 temp1002_240))
(assert (= temp1002_241 #x0000000000000001))
(assert (= var79986 temp1002_241))
(model-add temp1002_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1002_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1002_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






