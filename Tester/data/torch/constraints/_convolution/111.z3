(declare-fun temp146_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp146_2 () (_ BitVec 64))
(declare-fun temp146_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp146_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp146_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp146_6 () (_ BitVec 64))
(declare-fun temp146_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_8 () (_ BitVec 64))
(declare-fun temp146_9 () (_ BitVec 64))
(declare-fun temp146_10 () (_ BitVec 64))
(declare-fun temp146_11 () (_ BitVec 64))
(declare-fun temp146_12 () (_ BitVec 64))
(declare-fun temp146_13 () (_ BitVec 64))
(declare-fun temp146_14 () (_ BitVec 64))
(declare-fun temp146_15 () (_ BitVec 64))
(declare-fun temp146_16 () (_ BitVec 64))
(declare-fun temp146_17 () (_ BitVec 64))
(declare-fun temp146_18 () (_ BitVec 64))
(declare-fun temp146_19 () (_ BitVec 64))
(declare-fun temp146_20 () (_ BitVec 64))
(declare-fun temp146_21 () (_ BitVec 64))
(declare-fun temp146_22 () (_ BitVec 64))
(declare-fun temp146_23 () (_ BitVec 64))
(declare-fun temp146_24 () (_ BitVec 64))
(declare-fun temp146_25 () (_ BitVec 64))
(declare-fun temp146_26 () (_ BitVec 64))
(declare-fun temp146_27 () (_ BitVec 64))
(declare-fun temp146_28 () (_ BitVec 64))
(declare-fun temp146_29 () (_ BitVec 64))
(declare-fun temp146_30 () (_ BitVec 64))
(declare-fun temp146_31 () (_ BitVec 64))
(declare-fun temp146_32 () (_ BitVec 64))
(declare-fun temp146_33 () (_ BitVec 64))
(declare-fun temp146_34 () (_ BitVec 64))
(declare-fun temp146_35 () (_ BitVec 64))
(declare-fun temp146_36 () (_ BitVec 64))
(declare-fun temp146_37 () (_ BitVec 64))
(declare-fun temp146_38 () (_ BitVec 64))
(declare-fun temp146_39 () (_ BitVec 64))
(declare-fun temp146_40 () (_ BitVec 64))
(declare-fun temp146_41 () (_ BitVec 64))
(declare-fun temp146_42 () (_ BitVec 64))
(declare-fun temp146_43 () (_ BitVec 64))
(declare-fun temp146_44 () (_ BitVec 64))
(declare-fun temp146_45 () (_ BitVec 64))
(declare-fun temp146_46 () (_ BitVec 64))
(declare-fun temp146_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp146_48 () (_ BitVec 64))
(declare-fun temp146_49 () (_ BitVec 64))
(declare-fun temp146_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_51 () (_ BitVec 64))
(declare-fun temp146_52 () (_ BitVec 64))
(declare-fun temp146_53 () (_ BitVec 64))
(declare-fun temp146_54 () (_ BitVec 64))
(declare-fun temp146_55 () (_ BitVec 64))
(declare-fun temp146_56 () (_ BitVec 64))
(declare-fun temp146_57 () (_ BitVec 64))
(declare-fun temp146_58 () (_ BitVec 64))
(declare-fun temp146_59 () (_ BitVec 64))
(declare-fun temp146_60 () (_ BitVec 64))
(declare-fun temp146_61 () (_ BitVec 64))
(declare-fun temp146_62 () (_ BitVec 64))
(declare-fun temp146_63 () (_ BitVec 64))
(declare-fun temp146_64 () (_ BitVec 64))
(declare-fun temp146_65 () (_ BitVec 64))
(declare-fun temp146_66 () (_ BitVec 64))
(declare-fun temp146_67 () (_ BitVec 64))
(declare-fun temp146_68 () (_ BitVec 64))
(declare-fun temp146_69 () (_ BitVec 64))
(declare-fun temp146_70 () (_ BitVec 64))
(declare-fun temp146_71 () (_ BitVec 64))
(declare-fun temp146_72 () (_ BitVec 64))
(declare-fun temp146_73 () (_ BitVec 64))
(declare-fun temp146_74 () (_ BitVec 64))
(declare-fun temp146_75 () (_ BitVec 64))
(declare-fun temp146_76 () (_ BitVec 64))
(declare-fun temp146_77 () (_ BitVec 64))
(declare-fun temp146_78 () (_ BitVec 64))
(declare-fun temp146_79 () (_ BitVec 64))
(declare-fun temp146_80 () (_ BitVec 64))
(declare-fun temp146_81 () (_ BitVec 64))
(declare-fun temp146_82 () (_ BitVec 64))
(declare-fun temp146_83 () (_ BitVec 64))
(declare-fun temp146_84 () (_ BitVec 64))
(declare-fun temp146_85 () (_ BitVec 64))
(declare-fun temp146_86 () (_ BitVec 64))
(declare-fun temp146_87 () (_ BitVec 64))
(declare-fun temp146_88 () (_ BitVec 64))
(declare-fun temp146_89 () (_ BitVec 64))
(declare-fun temp146_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp146_91 () (_ BitVec 64))
(declare-fun temp146_92 () (_ BitVec 64))
(declare-fun temp146_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_94 () (_ BitVec 64))
(declare-fun temp146_95 () (_ BitVec 64))
(declare-fun temp146_96 () (_ BitVec 64))
(declare-fun temp146_97 () (_ BitVec 64))
(declare-fun temp146_98 () (_ BitVec 64))
(declare-fun temp146_99 () (_ BitVec 64))
(declare-fun temp146_100 () (_ BitVec 64))
(declare-fun temp146_101 () (_ BitVec 64))
(declare-fun temp146_102 () (_ BitVec 64))
(declare-fun temp146_103 () (_ BitVec 64))
(declare-fun temp146_104 () (_ BitVec 64))
(declare-fun temp146_105 () (_ BitVec 64))
(declare-fun temp146_106 () (_ BitVec 64))
(declare-fun temp146_107 () (_ BitVec 64))
(declare-fun temp146_108 () (_ BitVec 64))
(declare-fun temp146_109 () (_ BitVec 64))
(declare-fun temp146_110 () (_ BitVec 64))
(declare-fun temp146_111 () (_ BitVec 64))
(declare-fun temp146_112 () (_ BitVec 64))
(declare-fun temp146_113 () (_ BitVec 64))
(declare-fun temp146_114 () (_ BitVec 64))
(declare-fun temp146_115 () (_ BitVec 64))
(declare-fun temp146_116 () (_ BitVec 64))
(declare-fun temp146_117 () (_ BitVec 64))
(declare-fun temp146_118 () (_ BitVec 64))
(declare-fun temp146_119 () (_ BitVec 64))
(declare-fun temp146_120 () (_ BitVec 64))
(declare-fun temp146_121 () (_ BitVec 64))
(declare-fun temp146_122 () (_ BitVec 64))
(declare-fun temp146_123 () (_ BitVec 64))
(declare-fun temp146_124 () (_ BitVec 64))
(declare-fun temp146_125 () (_ BitVec 64))
(declare-fun temp146_126 () (_ BitVec 64))
(declare-fun temp146_127 () (_ BitVec 64))
(declare-fun temp146_128 () (_ BitVec 64))
(declare-fun temp146_129 () (_ BitVec 64))
(declare-fun temp146_130 () (_ BitVec 64))
(declare-fun temp146_131 () (_ BitVec 64))
(declare-fun temp146_132 () (_ BitVec 64))
(declare-fun temp146_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp146_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp146_135 () (_ BitVec 64))
(declare-fun temp146_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp146_137 () (_ BitVec 64))
(declare-fun temp146_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_139 () (_ BitVec 64))
(declare-fun temp146_140 () (_ BitVec 64))
(declare-fun temp146_141 () (_ BitVec 64))
(declare-fun temp146_142 () (_ BitVec 64))
(declare-fun temp146_143 () (_ BitVec 64))
(declare-fun temp146_144 () (_ BitVec 64))
(declare-fun temp146_145 () (_ BitVec 64))
(declare-fun temp146_146 () (_ BitVec 64))
(declare-fun temp146_147 () (_ BitVec 64))
(declare-fun temp146_148 () (_ BitVec 64))
(declare-fun temp146_149 () (_ BitVec 64))
(declare-fun temp146_150 () (_ BitVec 64))
(declare-fun temp146_151 () (_ BitVec 64))
(declare-fun temp146_152 () (_ BitVec 64))
(declare-fun temp146_153 () (_ BitVec 64))
(declare-fun temp146_154 () (_ BitVec 64))
(declare-fun temp146_156 () (_ BitVec 64))
(declare-fun temp146_157 () (_ BitVec 64))
(declare-fun temp146_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp146_158 () (_ BitVec 64))
(declare-fun temp146_159 () (_ BitVec 64))
(declare-fun temp146_161 () (_ BitVec 64))
(declare-fun temp146_162 () (_ BitVec 64))
(declare-fun temp146_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp146_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp146_164 () (_ BitVec 64))
(declare-fun temp146_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp146_166 () (_ BitVec 64))
(declare-fun temp146_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp146_168 () (_ BitVec 64))
(declare-fun temp146_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_170 () (_ BitVec 64))
(declare-fun temp146_171 () (_ BitVec 64))
(declare-fun temp146_172 () (_ BitVec 64))
(declare-fun temp146_173 () (_ BitVec 64))
(declare-fun temp146_174 () (_ BitVec 64))
(declare-fun temp146_175 () (_ BitVec 64))
(declare-fun temp146_176 () (_ BitVec 64))
(declare-fun temp146_177 () (_ BitVec 64))
(declare-fun temp146_178 () (_ BitVec 64))
(declare-fun temp146_179 () (_ BitVec 64))
(declare-fun temp146_180 () (_ BitVec 64))
(declare-fun temp146_181 () (_ BitVec 64))
(declare-fun temp146_182 () (_ BitVec 64))
(declare-fun temp146_183 () (_ BitVec 64))
(declare-fun temp146_184 () (_ BitVec 64))
(declare-fun temp146_185 () (_ BitVec 64))
(declare-fun temp146_186 () (_ BitVec 64))
(declare-fun temp146_187 () (_ BitVec 64))
(declare-fun temp146_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp146_189 () (_ BitVec 64))
(declare-fun temp146_191 () (_ BitVec 64))
(declare-fun temp146_192 () (_ BitVec 64))
(declare-fun temp146_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp146_193 () (_ BitVec 64))
(declare-fun temp146_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp146_195 () (_ BitVec 64))
(declare-fun temp146_196 () (_ BitVec 64))
(declare-fun temp146_197 () (_ BitVec 64))
(declare-fun temp146_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_199 () (_ BitVec 64))
(declare-fun temp146_200 () (_ BitVec 64))
(declare-fun temp146_201 () (_ BitVec 64))
(declare-fun temp146_202 () (_ BitVec 64))
(declare-fun temp146_203 () (_ BitVec 64))
(declare-fun temp146_204 () (_ BitVec 64))
(declare-fun temp146_205 () (_ BitVec 64))
(declare-fun temp146_206 () (_ BitVec 64))
(declare-fun temp146_207 () (_ BitVec 64))
(declare-fun temp146_208 () (_ BitVec 64))
(declare-fun temp146_209 () (_ BitVec 64))
(declare-fun temp146_210 () (_ BitVec 64))
(declare-fun temp146_211 () (_ BitVec 64))
(declare-fun temp146_212 () (_ BitVec 64))
(declare-fun temp146_213 () (_ BitVec 64))
(declare-fun temp146_214 () (_ BitVec 64))
(declare-fun temp146_215 () (_ BitVec 64))
(declare-fun temp146_216 () (_ BitVec 64))
(declare-fun temp146_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp146_218 () (_ BitVec 64))
(declare-fun temp146_220 () (_ BitVec 64))
(declare-fun temp146_221 () (_ BitVec 64))
(declare-fun temp146_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp146_222 () (_ BitVec 64))
(declare-fun temp146_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp146_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp146_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp146_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp146_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp146_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp146_229 () (_ BitVec 64))
(declare-fun temp146_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp146_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp146_232 () (_ BitVec 64))
(declare-fun temp146_233 () (_ BitVec 64))
(declare-fun temp146_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp146_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp146_236 () (_ BitVec 64))
(declare-fun temp146_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp146_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp146_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp146_241 () (_ BitVec 64))
(declare-fun temp146_240 () (_ BitVec 64))
(declare-fun temp146_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp146_243 () (_ BitVec 64))
(declare-fun temp146_244 () (_ BitVec 64))
(declare-fun temp146_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp146_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp146_247 () (_ BitVec 64))
(declare-fun temp146_249 () (_ BitVec 64))
(declare-fun temp146_248 () (_ BitVec 64))
(declare-fun temp146_250 () (_ BitVec 64))
(assert (= temp146_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp146_1)))
(assert (= temp146_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp146_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_3 #x0000000000000000))
(assert (= var79869 temp146_3))
(assert (= temp146_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp146_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_5 #x0000000000000000))
(assert (= var79914 temp146_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp146_6 #x0000000000000000))
(assert (= temp146_7 temp146_6))
(assert (= temp146_8 (select ARGNAME_padding_NAMEEND_VAL temp146_7)))
(assert (= temp146_9 #x0000000000000001))
(assert (= temp146_10 temp146_9))
(assert (= temp146_11 (select ARGNAME_padding_NAMEEND_VAL temp146_10)))
(assert (= temp146_12 #x0000000000000002))
(assert (= temp146_13 temp146_12))
(assert (= temp146_14 (select ARGNAME_padding_NAMEEND_VAL temp146_13)))
(assert (= temp146_15 #x0000000000000003))
(assert (= temp146_16 temp146_15))
(assert (= temp146_17 (select ARGNAME_padding_NAMEEND_VAL temp146_16)))
(assert (= temp146_18 #x0000000000000004))
(assert (= temp146_19 temp146_18))
(assert (= temp146_20 (select ARGNAME_padding_NAMEEND_VAL temp146_19)))
(assert (= temp146_21 #x0000000000000005))
(assert (= temp146_22 temp146_21))
(assert (= temp146_23 (select ARGNAME_padding_NAMEEND_VAL temp146_22)))
(assert (= temp146_24 #x0000000000000000))
(assert (= temp146_25 #x0000000000000000))
(assert (= temp146_26 temp146_25))
(assert (= temp146_27 (select ARGNAME_padding_NAMEEND_VAL temp146_26)))
(assert (= temp146_28 #x0000000000000000))
(assert (= temp146_29 #x0000000000000001))
(assert (= temp146_30 temp146_29))
(assert (= temp146_31 (select ARGNAME_padding_NAMEEND_VAL temp146_30)))
(assert (= temp146_32 #x0000000000000000))
(assert (= temp146_33 #x0000000000000002))
(assert (= temp146_34 temp146_33))
(assert (= temp146_35 (select ARGNAME_padding_NAMEEND_VAL temp146_34)))
(assert (= temp146_36 #x0000000000000000))
(assert (= temp146_37 #x0000000000000003))
(assert (= temp146_38 temp146_37))
(assert (= temp146_39 (select ARGNAME_padding_NAMEEND_VAL temp146_38)))
(assert (= temp146_40 #x0000000000000000))
(assert (= temp146_41 #x0000000000000004))
(assert (= temp146_42 temp146_41))
(assert (= temp146_43 (select ARGNAME_padding_NAMEEND_VAL temp146_42)))
(assert (= temp146_44 #x0000000000000000))
(assert (= temp146_45 #x0000000000000005))
(assert (= temp146_46 temp146_45))
(assert (= temp146_47 (select ARGNAME_padding_NAMEEND_VAL temp146_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp146_27 temp146_24)
             (bvslt temp146_31 temp146_28)
             (bvslt temp146_35 temp146_32)
             (bvslt temp146_39 temp146_36)
             (bvslt temp146_43 temp146_40)
             (bvslt temp146_47 temp146_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_48 #x0000000000000000))
(assert (= var1322786 temp146_48))
(assert (= temp146_49 #x0000000000000000))
(assert (= temp146_50 temp146_49))
(assert (= temp146_51 (select ARGNAME_output_padding_NAMEEND_VAL temp146_50)))
(assert (= temp146_52 #x0000000000000001))
(assert (= temp146_53 temp146_52))
(assert (= temp146_54 (select ARGNAME_output_padding_NAMEEND_VAL temp146_53)))
(assert (= temp146_55 #x0000000000000002))
(assert (= temp146_56 temp146_55))
(assert (= temp146_57 (select ARGNAME_output_padding_NAMEEND_VAL temp146_56)))
(assert (= temp146_58 #x0000000000000003))
(assert (= temp146_59 temp146_58))
(assert (= temp146_60 (select ARGNAME_output_padding_NAMEEND_VAL temp146_59)))
(assert (= temp146_61 #x0000000000000004))
(assert (= temp146_62 temp146_61))
(assert (= temp146_63 (select ARGNAME_output_padding_NAMEEND_VAL temp146_62)))
(assert (= temp146_64 #x0000000000000005))
(assert (= temp146_65 temp146_64))
(assert (= temp146_66 (select ARGNAME_output_padding_NAMEEND_VAL temp146_65)))
(assert (= temp146_67 #x0000000000000000))
(assert (= temp146_68 #x0000000000000000))
(assert (= temp146_69 temp146_68))
(assert (= temp146_70 (select ARGNAME_output_padding_NAMEEND_VAL temp146_69)))
(assert (= temp146_71 #x0000000000000000))
(assert (= temp146_72 #x0000000000000001))
(assert (= temp146_73 temp146_72))
(assert (= temp146_74 (select ARGNAME_output_padding_NAMEEND_VAL temp146_73)))
(assert (= temp146_75 #x0000000000000000))
(assert (= temp146_76 #x0000000000000002))
(assert (= temp146_77 temp146_76))
(assert (= temp146_78 (select ARGNAME_output_padding_NAMEEND_VAL temp146_77)))
(assert (= temp146_79 #x0000000000000000))
(assert (= temp146_80 #x0000000000000003))
(assert (= temp146_81 temp146_80))
(assert (= temp146_82 (select ARGNAME_output_padding_NAMEEND_VAL temp146_81)))
(assert (= temp146_83 #x0000000000000000))
(assert (= temp146_84 #x0000000000000004))
(assert (= temp146_85 temp146_84))
(assert (= temp146_86 (select ARGNAME_output_padding_NAMEEND_VAL temp146_85)))
(assert (= temp146_87 #x0000000000000000))
(assert (= temp146_88 #x0000000000000005))
(assert (= temp146_89 temp146_88))
(assert (= temp146_90 (select ARGNAME_output_padding_NAMEEND_VAL temp146_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp146_70 temp146_67)
             (bvslt temp146_74 temp146_71)
             (bvslt temp146_78 temp146_75)
             (bvslt temp146_82 temp146_79)
             (bvslt temp146_86 temp146_83)
             (bvslt temp146_90 temp146_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_91 #x0000000000000000))
(assert (= var1322797 temp146_91))
(assert (= temp146_92 #x0000000000000000))
(assert (= temp146_93 temp146_92))
(assert (= temp146_94 (select ARGNAME_stride_NAMEEND_VAL temp146_93)))
(assert (= temp146_95 #x0000000000000001))
(assert (= temp146_96 temp146_95))
(assert (= temp146_97 (select ARGNAME_stride_NAMEEND_VAL temp146_96)))
(assert (= temp146_98 #x0000000000000002))
(assert (= temp146_99 temp146_98))
(assert (= temp146_100 (select ARGNAME_stride_NAMEEND_VAL temp146_99)))
(assert (= temp146_101 #x0000000000000003))
(assert (= temp146_102 temp146_101))
(assert (= temp146_103 (select ARGNAME_stride_NAMEEND_VAL temp146_102)))
(assert (= temp146_104 #x0000000000000004))
(assert (= temp146_105 temp146_104))
(assert (= temp146_106 (select ARGNAME_stride_NAMEEND_VAL temp146_105)))
(assert (= temp146_107 #x0000000000000005))
(assert (= temp146_108 temp146_107))
(assert (= temp146_109 (select ARGNAME_stride_NAMEEND_VAL temp146_108)))
(assert (= temp146_110 #x0000000000000000))
(assert (= temp146_111 #x0000000000000000))
(assert (= temp146_112 temp146_111))
(assert (= temp146_113 (select ARGNAME_stride_NAMEEND_VAL temp146_112)))
(assert (= temp146_114 #x0000000000000000))
(assert (= temp146_115 #x0000000000000001))
(assert (= temp146_116 temp146_115))
(assert (= temp146_117 (select ARGNAME_stride_NAMEEND_VAL temp146_116)))
(assert (= temp146_118 #x0000000000000000))
(assert (= temp146_119 #x0000000000000002))
(assert (= temp146_120 temp146_119))
(assert (= temp146_121 (select ARGNAME_stride_NAMEEND_VAL temp146_120)))
(assert (= temp146_122 #x0000000000000000))
(assert (= temp146_123 #x0000000000000003))
(assert (= temp146_124 temp146_123))
(assert (= temp146_125 (select ARGNAME_stride_NAMEEND_VAL temp146_124)))
(assert (= temp146_126 #x0000000000000000))
(assert (= temp146_127 #x0000000000000004))
(assert (= temp146_128 temp146_127))
(assert (= temp146_129 (select ARGNAME_stride_NAMEEND_VAL temp146_128)))
(assert (= temp146_130 #x0000000000000000))
(assert (= temp146_131 #x0000000000000005))
(assert (= temp146_132 temp146_131))
(assert (= temp146_133 (select ARGNAME_stride_NAMEEND_VAL temp146_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp146_113 temp146_110)
             (bvsle temp146_117 temp146_114)
             (bvsle temp146_121 temp146_118)
             (bvsle temp146_125 temp146_122)
             (bvsle temp146_129 temp146_126)
             (bvsle temp146_133 temp146_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_134 #x0000000000000000))
(assert (= var1322807 temp146_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_135 #x0000000000000001))
(assert (= var1322819 temp146_135))
(assert (= temp146_136 #x0000000000000000))
(assert (= var1310898 temp146_136))
(assert (= temp146_137 #x0000000000000000))
(assert (= temp146_138 temp146_137))
(assert (= temp146_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_138)))
(assert (= temp146_140 #x0000000000000001))
(assert (= temp146_141 temp146_140))
(assert (= temp146_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_141)))
(assert (= temp146_143 #x0000000000000002))
(assert (= temp146_144 temp146_143))
(assert (= temp146_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_144)))
(assert (= temp146_146 #x0000000000000003))
(assert (= temp146_147 temp146_146))
(assert (= temp146_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_147)))
(assert (= temp146_149 #x0000000000000004))
(assert (= temp146_150 temp146_149))
(assert (= temp146_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_150)))
(assert (= temp146_152 #x0000000000000005))
(assert (= temp146_153 temp146_152))
(assert (= temp146_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_153)))
(assert (= temp146_156 var1310898))
(assert (= temp146_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_156)))
(assert (= temp146_155 temp146_157))
(assert (= var1322852
   (ite (bvslt temp146_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_158 #x0000000000000000))
(assert (= var1322852 temp146_158))
(assert (= temp146_159 #x0000000000000000))
(assert (= var1310898 temp146_159))
(assert (= temp146_161 var1310898))
(assert (= temp146_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_161)))
(assert (= temp146_160 temp146_162))
(assert (= var1322874 (bvsmod temp146_160 ARGNAME_groups_NAMEEND)))
(assert (= temp146_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp146_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_164 #x0000000000000001))
(assert (= var1322875 temp146_164))
(assert (= temp146_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp146_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_166 #x0000000000000001))
(assert (= var1322895 temp146_166))
(assert (= temp146_167 #x0000000000000001))
(assert (= var1311786 temp146_167))
(assert (= temp146_168 #x0000000000000000))
(assert (= temp146_169 temp146_168))
(assert (= temp146_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_169)))
(assert (= temp146_171 #x0000000000000001))
(assert (= temp146_172 temp146_171))
(assert (= temp146_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_172)))
(assert (= temp146_174 #x0000000000000002))
(assert (= temp146_175 temp146_174))
(assert (= temp146_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_175)))
(assert (= temp146_177 #x0000000000000003))
(assert (= temp146_178 temp146_177))
(assert (= temp146_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_178)))
(assert (= temp146_180 #x0000000000000004))
(assert (= temp146_181 temp146_180))
(assert (= temp146_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_181)))
(assert (= temp146_183 #x0000000000000005))
(assert (= temp146_184 temp146_183))
(assert (= temp146_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_184)))
(assert (= temp146_186 #x0000000000000000))
(assert (= temp146_187
   (ite (bvslt var1311786 temp146_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp146_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_187)))
(assert (= var1322903 temp146_188))
(assert (bvslt (ite (bvslt var1311786 temp146_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp146_189 #x0000000000000001))
(assert (= var1311786 temp146_189))
(assert (= temp146_191 var1311786))
(assert (= temp146_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_191)))
(assert (= temp146_190 temp146_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp146_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_193 #x0000000000000001))
(assert (= var1322908 temp146_193))
(assert (= temp146_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp146_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_195 #x0000000000000001))
(assert (= var1322975 temp146_195))
(assert (= temp146_196 #x0000000000000000))
(assert (= var1310898 temp146_196))
(assert (= temp146_197 #x0000000000000000))
(assert (= temp146_198 temp146_197))
(assert (= temp146_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp146_198)))
(assert (= temp146_200 #x0000000000000001))
(assert (= temp146_201 temp146_200))
(assert (= temp146_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp146_201)))
(assert (= temp146_203 #x0000000000000002))
(assert (= temp146_204 temp146_203))
(assert (= temp146_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp146_204)))
(assert (= temp146_206 #x0000000000000003))
(assert (= temp146_207 temp146_206))
(assert (= temp146_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp146_207)))
(assert (= temp146_209 #x0000000000000004))
(assert (= temp146_210 temp146_209))
(assert (= temp146_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp146_210)))
(assert (= temp146_212 #x0000000000000005))
(assert (= temp146_213 temp146_212))
(assert (= temp146_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp146_213)))
(assert (= temp146_215 #x0000000000000000))
(assert (= temp146_216
   (ite (bvslt var1310898 temp146_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp146_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp146_216)))
(assert (= var1322977 temp146_217))
(assert (bvslt (ite (bvslt var1310898 temp146_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp146_218 #x0000000000000000))
(assert (= var1310898 temp146_218))
(assert (= temp146_220 var1310898))
(assert (= temp146_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_220)))
(assert (= temp146_219 temp146_221))
(assert (= var1322980
   (ite (= var1322977 temp146_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_222 #x0000000000000001))
(assert (= var1322980 temp146_222))
(assert (= temp146_223 #x0000000000000002))
(assert (= var1848169 temp146_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp146_225 #x0000000000000001))
(assert (= var1323065 temp146_225))
(assert (= temp146_226 #x0000000000000001))
(assert (= var3486735 temp146_226))
(assert (= temp146_227 #x0000000000000001))
(assert (= var3814415 temp146_227))
(assert (= temp146_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp146_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_229 #x0000000000000001))
(assert (= var79986 temp146_229))
(assert (= temp146_230 #x0000000000000001))
(assert (= var80116 temp146_230))
(assert (= var4796905 var80116))
(assert (= temp146_231 #x0000000000000000))
(assert (= var4784306 temp146_231))
(assert (= temp146_232 #x0000000000000000))
(assert (= temp146_233
   (ite (bvslt var4784306 temp146_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp146_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_233)))
(assert (= var4796924 temp146_234))
(assert (bvslt (ite (bvslt var4784306 temp146_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp146_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp146_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_236 #x0000000000000001))
(assert (= var4796925 temp146_236))
(assert (= temp146_237 #x0000000000000000))
(assert (= var4996927 temp146_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp146_238 #x0000000000000002))
(assert (= var5125763 temp146_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_239 #x0000000000000000))
(assert (= var5191324 temp146_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp146_241 #xffffffffffffffff))
(assert (= temp146_240 temp146_241))
(assert (= temp146_242 #x0000000000000001))
(assert (= var66602 temp146_242))
(assert (= temp146_243 #x0000000000000000))
(assert (= temp146_244
   (ite (bvslt var66602 temp146_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp146_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_244)))
(assert (= var80523 temp146_245))
(assert (bvslt (ite (bvslt var66602 temp146_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp146_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp146_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_247 #x0000000000000001))
(assert (= var80524 temp146_247))
(assert (= temp146_249 #xffffffffffffffff))
(assert (= temp146_248 temp146_249))
(assert (= temp146_250 #x0000000000000001))
(assert (= var79986 temp146_250))
(model-add temp146_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp146_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp146_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






