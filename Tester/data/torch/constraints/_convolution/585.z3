(declare-fun temp777_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp777_2 () (_ BitVec 64))
(declare-fun temp777_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp777_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp777_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp777_6 () (_ BitVec 64))
(declare-fun temp777_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp777_8 () (_ BitVec 64))
(declare-fun temp777_9 () (_ BitVec 64))
(declare-fun temp777_10 () (_ BitVec 64))
(declare-fun temp777_11 () (_ BitVec 64))
(declare-fun temp777_12 () (_ BitVec 64))
(declare-fun temp777_13 () (_ BitVec 64))
(declare-fun temp777_14 () (_ BitVec 64))
(declare-fun temp777_15 () (_ BitVec 64))
(declare-fun temp777_16 () (_ BitVec 64))
(declare-fun temp777_17 () (_ BitVec 64))
(declare-fun temp777_18 () (_ BitVec 64))
(declare-fun temp777_19 () (_ BitVec 64))
(declare-fun temp777_20 () (_ BitVec 64))
(declare-fun temp777_21 () (_ BitVec 64))
(declare-fun temp777_22 () (_ BitVec 64))
(declare-fun temp777_23 () (_ BitVec 64))
(declare-fun temp777_24 () (_ BitVec 64))
(declare-fun temp777_25 () (_ BitVec 64))
(declare-fun temp777_26 () (_ BitVec 64))
(declare-fun temp777_27 () (_ BitVec 64))
(declare-fun temp777_28 () (_ BitVec 64))
(declare-fun temp777_29 () (_ BitVec 64))
(declare-fun temp777_30 () (_ BitVec 64))
(declare-fun temp777_31 () (_ BitVec 64))
(declare-fun temp777_32 () (_ BitVec 64))
(declare-fun temp777_33 () (_ BitVec 64))
(declare-fun temp777_34 () (_ BitVec 64))
(declare-fun temp777_35 () (_ BitVec 64))
(declare-fun temp777_36 () (_ BitVec 64))
(declare-fun temp777_37 () (_ BitVec 64))
(declare-fun temp777_38 () (_ BitVec 64))
(declare-fun temp777_39 () (_ BitVec 64))
(declare-fun temp777_40 () (_ BitVec 64))
(declare-fun temp777_41 () (_ BitVec 64))
(declare-fun temp777_42 () (_ BitVec 64))
(declare-fun temp777_43 () (_ BitVec 64))
(declare-fun temp777_44 () (_ BitVec 64))
(declare-fun temp777_45 () (_ BitVec 64))
(declare-fun temp777_46 () (_ BitVec 64))
(declare-fun temp777_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp777_48 () (_ BitVec 64))
(declare-fun temp777_49 () (_ BitVec 64))
(declare-fun temp777_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp777_51 () (_ BitVec 64))
(declare-fun temp777_52 () (_ BitVec 64))
(declare-fun temp777_53 () (_ BitVec 64))
(declare-fun temp777_54 () (_ BitVec 64))
(declare-fun temp777_55 () (_ BitVec 64))
(declare-fun temp777_56 () (_ BitVec 64))
(declare-fun temp777_57 () (_ BitVec 64))
(declare-fun temp777_58 () (_ BitVec 64))
(declare-fun temp777_59 () (_ BitVec 64))
(declare-fun temp777_60 () (_ BitVec 64))
(declare-fun temp777_61 () (_ BitVec 64))
(declare-fun temp777_62 () (_ BitVec 64))
(declare-fun temp777_63 () (_ BitVec 64))
(declare-fun temp777_64 () (_ BitVec 64))
(declare-fun temp777_65 () (_ BitVec 64))
(declare-fun temp777_66 () (_ BitVec 64))
(declare-fun temp777_67 () (_ BitVec 64))
(declare-fun temp777_68 () (_ BitVec 64))
(declare-fun temp777_69 () (_ BitVec 64))
(declare-fun temp777_70 () (_ BitVec 64))
(declare-fun temp777_71 () (_ BitVec 64))
(declare-fun temp777_72 () (_ BitVec 64))
(declare-fun temp777_73 () (_ BitVec 64))
(declare-fun temp777_74 () (_ BitVec 64))
(declare-fun temp777_75 () (_ BitVec 64))
(declare-fun temp777_76 () (_ BitVec 64))
(declare-fun temp777_77 () (_ BitVec 64))
(declare-fun temp777_78 () (_ BitVec 64))
(declare-fun temp777_79 () (_ BitVec 64))
(declare-fun temp777_80 () (_ BitVec 64))
(declare-fun temp777_81 () (_ BitVec 64))
(declare-fun temp777_82 () (_ BitVec 64))
(declare-fun temp777_83 () (_ BitVec 64))
(declare-fun temp777_84 () (_ BitVec 64))
(declare-fun temp777_85 () (_ BitVec 64))
(declare-fun temp777_86 () (_ BitVec 64))
(declare-fun temp777_87 () (_ BitVec 64))
(declare-fun temp777_88 () (_ BitVec 64))
(declare-fun temp777_89 () (_ BitVec 64))
(declare-fun temp777_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp777_91 () (_ BitVec 64))
(declare-fun temp777_92 () (_ BitVec 64))
(declare-fun temp777_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp777_94 () (_ BitVec 64))
(declare-fun temp777_95 () (_ BitVec 64))
(declare-fun temp777_96 () (_ BitVec 64))
(declare-fun temp777_97 () (_ BitVec 64))
(declare-fun temp777_98 () (_ BitVec 64))
(declare-fun temp777_99 () (_ BitVec 64))
(declare-fun temp777_100 () (_ BitVec 64))
(declare-fun temp777_101 () (_ BitVec 64))
(declare-fun temp777_102 () (_ BitVec 64))
(declare-fun temp777_103 () (_ BitVec 64))
(declare-fun temp777_104 () (_ BitVec 64))
(declare-fun temp777_105 () (_ BitVec 64))
(declare-fun temp777_106 () (_ BitVec 64))
(declare-fun temp777_107 () (_ BitVec 64))
(declare-fun temp777_108 () (_ BitVec 64))
(declare-fun temp777_109 () (_ BitVec 64))
(declare-fun temp777_110 () (_ BitVec 64))
(declare-fun temp777_111 () (_ BitVec 64))
(declare-fun temp777_112 () (_ BitVec 64))
(declare-fun temp777_113 () (_ BitVec 64))
(declare-fun temp777_114 () (_ BitVec 64))
(declare-fun temp777_115 () (_ BitVec 64))
(declare-fun temp777_116 () (_ BitVec 64))
(declare-fun temp777_117 () (_ BitVec 64))
(declare-fun temp777_118 () (_ BitVec 64))
(declare-fun temp777_119 () (_ BitVec 64))
(declare-fun temp777_120 () (_ BitVec 64))
(declare-fun temp777_121 () (_ BitVec 64))
(declare-fun temp777_122 () (_ BitVec 64))
(declare-fun temp777_123 () (_ BitVec 64))
(declare-fun temp777_124 () (_ BitVec 64))
(declare-fun temp777_125 () (_ BitVec 64))
(declare-fun temp777_126 () (_ BitVec 64))
(declare-fun temp777_127 () (_ BitVec 64))
(declare-fun temp777_128 () (_ BitVec 64))
(declare-fun temp777_129 () (_ BitVec 64))
(declare-fun temp777_130 () (_ BitVec 64))
(declare-fun temp777_131 () (_ BitVec 64))
(declare-fun temp777_132 () (_ BitVec 64))
(declare-fun temp777_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp777_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp777_135 () (_ BitVec 64))
(declare-fun temp777_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp777_137 () (_ BitVec 64))
(declare-fun temp777_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp777_139 () (_ BitVec 64))
(declare-fun temp777_140 () (_ BitVec 64))
(declare-fun temp777_141 () (_ BitVec 64))
(declare-fun temp777_142 () (_ BitVec 64))
(declare-fun temp777_143 () (_ BitVec 64))
(declare-fun temp777_144 () (_ BitVec 64))
(declare-fun temp777_145 () (_ BitVec 64))
(declare-fun temp777_146 () (_ BitVec 64))
(declare-fun temp777_147 () (_ BitVec 64))
(declare-fun temp777_148 () (_ BitVec 64))
(declare-fun temp777_149 () (_ BitVec 64))
(declare-fun temp777_150 () (_ BitVec 64))
(declare-fun temp777_151 () (_ BitVec 64))
(declare-fun temp777_152 () (_ BitVec 64))
(declare-fun temp777_153 () (_ BitVec 64))
(declare-fun temp777_154 () (_ BitVec 64))
(declare-fun temp777_156 () (_ BitVec 64))
(declare-fun temp777_157 () (_ BitVec 64))
(declare-fun temp777_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp777_158 () (_ BitVec 64))
(declare-fun temp777_159 () (_ BitVec 64))
(declare-fun temp777_161 () (_ BitVec 64))
(declare-fun temp777_162 () (_ BitVec 64))
(declare-fun temp777_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp777_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp777_164 () (_ BitVec 64))
(declare-fun temp777_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp777_166 () (_ BitVec 64))
(declare-fun temp777_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp777_168 () (_ BitVec 64))
(declare-fun temp777_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp777_170 () (_ BitVec 64))
(declare-fun temp777_171 () (_ BitVec 64))
(declare-fun temp777_172 () (_ BitVec 64))
(declare-fun temp777_173 () (_ BitVec 64))
(declare-fun temp777_174 () (_ BitVec 64))
(declare-fun temp777_175 () (_ BitVec 64))
(declare-fun temp777_176 () (_ BitVec 64))
(declare-fun temp777_177 () (_ BitVec 64))
(declare-fun temp777_178 () (_ BitVec 64))
(declare-fun temp777_179 () (_ BitVec 64))
(declare-fun temp777_180 () (_ BitVec 64))
(declare-fun temp777_181 () (_ BitVec 64))
(declare-fun temp777_182 () (_ BitVec 64))
(declare-fun temp777_183 () (_ BitVec 64))
(declare-fun temp777_184 () (_ BitVec 64))
(declare-fun temp777_185 () (_ BitVec 64))
(declare-fun temp777_186 () (_ BitVec 64))
(declare-fun temp777_187 () (_ BitVec 64))
(declare-fun temp777_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp777_189 () (_ BitVec 64))
(declare-fun temp777_191 () (_ BitVec 64))
(declare-fun temp777_192 () (_ BitVec 64))
(declare-fun temp777_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp777_193 () (_ BitVec 64))
(declare-fun temp777_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp777_195 () (_ BitVec 64))
(declare-fun temp777_196 () (_ BitVec 64))
(declare-fun temp777_197 () (_ BitVec 64))
(declare-fun temp777_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp777_199 () (_ BitVec 64))
(declare-fun temp777_200 () (_ BitVec 64))
(declare-fun temp777_201 () (_ BitVec 64))
(declare-fun temp777_202 () (_ BitVec 64))
(declare-fun temp777_203 () (_ BitVec 64))
(declare-fun temp777_204 () (_ BitVec 64))
(declare-fun temp777_205 () (_ BitVec 64))
(declare-fun temp777_206 () (_ BitVec 64))
(declare-fun temp777_207 () (_ BitVec 64))
(declare-fun temp777_208 () (_ BitVec 64))
(declare-fun temp777_209 () (_ BitVec 64))
(declare-fun temp777_210 () (_ BitVec 64))
(declare-fun temp777_211 () (_ BitVec 64))
(declare-fun temp777_212 () (_ BitVec 64))
(declare-fun temp777_213 () (_ BitVec 64))
(declare-fun temp777_214 () (_ BitVec 64))
(declare-fun temp777_215 () (_ BitVec 64))
(declare-fun temp777_216 () (_ BitVec 64))
(declare-fun temp777_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp777_218 () (_ BitVec 64))
(declare-fun temp777_220 () (_ BitVec 64))
(declare-fun temp777_221 () (_ BitVec 64))
(declare-fun temp777_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp777_222 () (_ BitVec 64))
(declare-fun temp777_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp777_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp777_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp777_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp777_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp777_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp777_229 () (_ BitVec 64))
(declare-fun temp777_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp777_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp777_232 () (_ BitVec 64))
(declare-fun temp777_233 () (_ BitVec 64))
(declare-fun temp777_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp777_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp777_236 () (_ BitVec 64))
(declare-fun temp777_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp777_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp777_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp777_241 () (_ BitVec 64))
(declare-fun temp777_240 () (_ BitVec 64))
(declare-fun temp777_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp777_243 () (_ BitVec 64))
(declare-fun temp777_244 () (_ BitVec 64))
(declare-fun temp777_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp777_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp777_247 () (_ BitVec 64))
(declare-fun temp777_248 () (_ BitVec 64))
(assert (= temp777_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp777_1)))
(assert (= temp777_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp777_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_3 #x0000000000000000))
(assert (= var79869 temp777_3))
(assert (= temp777_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp777_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_5 #x0000000000000000))
(assert (= var79914 temp777_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp777_6 #x0000000000000000))
(assert (= temp777_7 temp777_6))
(assert (= temp777_8 (select ARGNAME_padding_NAMEEND_VAL temp777_7)))
(assert (= temp777_9 #x0000000000000001))
(assert (= temp777_10 temp777_9))
(assert (= temp777_11 (select ARGNAME_padding_NAMEEND_VAL temp777_10)))
(assert (= temp777_12 #x0000000000000002))
(assert (= temp777_13 temp777_12))
(assert (= temp777_14 (select ARGNAME_padding_NAMEEND_VAL temp777_13)))
(assert (= temp777_15 #x0000000000000003))
(assert (= temp777_16 temp777_15))
(assert (= temp777_17 (select ARGNAME_padding_NAMEEND_VAL temp777_16)))
(assert (= temp777_18 #x0000000000000004))
(assert (= temp777_19 temp777_18))
(assert (= temp777_20 (select ARGNAME_padding_NAMEEND_VAL temp777_19)))
(assert (= temp777_21 #x0000000000000005))
(assert (= temp777_22 temp777_21))
(assert (= temp777_23 (select ARGNAME_padding_NAMEEND_VAL temp777_22)))
(assert (= temp777_24 #x0000000000000000))
(assert (= temp777_25 #x0000000000000000))
(assert (= temp777_26 temp777_25))
(assert (= temp777_27 (select ARGNAME_padding_NAMEEND_VAL temp777_26)))
(assert (= temp777_28 #x0000000000000000))
(assert (= temp777_29 #x0000000000000001))
(assert (= temp777_30 temp777_29))
(assert (= temp777_31 (select ARGNAME_padding_NAMEEND_VAL temp777_30)))
(assert (= temp777_32 #x0000000000000000))
(assert (= temp777_33 #x0000000000000002))
(assert (= temp777_34 temp777_33))
(assert (= temp777_35 (select ARGNAME_padding_NAMEEND_VAL temp777_34)))
(assert (= temp777_36 #x0000000000000000))
(assert (= temp777_37 #x0000000000000003))
(assert (= temp777_38 temp777_37))
(assert (= temp777_39 (select ARGNAME_padding_NAMEEND_VAL temp777_38)))
(assert (= temp777_40 #x0000000000000000))
(assert (= temp777_41 #x0000000000000004))
(assert (= temp777_42 temp777_41))
(assert (= temp777_43 (select ARGNAME_padding_NAMEEND_VAL temp777_42)))
(assert (= temp777_44 #x0000000000000000))
(assert (= temp777_45 #x0000000000000005))
(assert (= temp777_46 temp777_45))
(assert (= temp777_47 (select ARGNAME_padding_NAMEEND_VAL temp777_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp777_27 temp777_24)
             (bvslt temp777_31 temp777_28)
             (bvslt temp777_35 temp777_32)
             (bvslt temp777_39 temp777_36)
             (bvslt temp777_43 temp777_40)
             (bvslt temp777_47 temp777_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_48 #x0000000000000000))
(assert (= var1322786 temp777_48))
(assert (= temp777_49 #x0000000000000000))
(assert (= temp777_50 temp777_49))
(assert (= temp777_51 (select ARGNAME_output_padding_NAMEEND_VAL temp777_50)))
(assert (= temp777_52 #x0000000000000001))
(assert (= temp777_53 temp777_52))
(assert (= temp777_54 (select ARGNAME_output_padding_NAMEEND_VAL temp777_53)))
(assert (= temp777_55 #x0000000000000002))
(assert (= temp777_56 temp777_55))
(assert (= temp777_57 (select ARGNAME_output_padding_NAMEEND_VAL temp777_56)))
(assert (= temp777_58 #x0000000000000003))
(assert (= temp777_59 temp777_58))
(assert (= temp777_60 (select ARGNAME_output_padding_NAMEEND_VAL temp777_59)))
(assert (= temp777_61 #x0000000000000004))
(assert (= temp777_62 temp777_61))
(assert (= temp777_63 (select ARGNAME_output_padding_NAMEEND_VAL temp777_62)))
(assert (= temp777_64 #x0000000000000005))
(assert (= temp777_65 temp777_64))
(assert (= temp777_66 (select ARGNAME_output_padding_NAMEEND_VAL temp777_65)))
(assert (= temp777_67 #x0000000000000000))
(assert (= temp777_68 #x0000000000000000))
(assert (= temp777_69 temp777_68))
(assert (= temp777_70 (select ARGNAME_output_padding_NAMEEND_VAL temp777_69)))
(assert (= temp777_71 #x0000000000000000))
(assert (= temp777_72 #x0000000000000001))
(assert (= temp777_73 temp777_72))
(assert (= temp777_74 (select ARGNAME_output_padding_NAMEEND_VAL temp777_73)))
(assert (= temp777_75 #x0000000000000000))
(assert (= temp777_76 #x0000000000000002))
(assert (= temp777_77 temp777_76))
(assert (= temp777_78 (select ARGNAME_output_padding_NAMEEND_VAL temp777_77)))
(assert (= temp777_79 #x0000000000000000))
(assert (= temp777_80 #x0000000000000003))
(assert (= temp777_81 temp777_80))
(assert (= temp777_82 (select ARGNAME_output_padding_NAMEEND_VAL temp777_81)))
(assert (= temp777_83 #x0000000000000000))
(assert (= temp777_84 #x0000000000000004))
(assert (= temp777_85 temp777_84))
(assert (= temp777_86 (select ARGNAME_output_padding_NAMEEND_VAL temp777_85)))
(assert (= temp777_87 #x0000000000000000))
(assert (= temp777_88 #x0000000000000005))
(assert (= temp777_89 temp777_88))
(assert (= temp777_90 (select ARGNAME_output_padding_NAMEEND_VAL temp777_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp777_70 temp777_67)
             (bvslt temp777_74 temp777_71)
             (bvslt temp777_78 temp777_75)
             (bvslt temp777_82 temp777_79)
             (bvslt temp777_86 temp777_83)
             (bvslt temp777_90 temp777_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_91 #x0000000000000000))
(assert (= var1322797 temp777_91))
(assert (= temp777_92 #x0000000000000000))
(assert (= temp777_93 temp777_92))
(assert (= temp777_94 (select ARGNAME_stride_NAMEEND_VAL temp777_93)))
(assert (= temp777_95 #x0000000000000001))
(assert (= temp777_96 temp777_95))
(assert (= temp777_97 (select ARGNAME_stride_NAMEEND_VAL temp777_96)))
(assert (= temp777_98 #x0000000000000002))
(assert (= temp777_99 temp777_98))
(assert (= temp777_100 (select ARGNAME_stride_NAMEEND_VAL temp777_99)))
(assert (= temp777_101 #x0000000000000003))
(assert (= temp777_102 temp777_101))
(assert (= temp777_103 (select ARGNAME_stride_NAMEEND_VAL temp777_102)))
(assert (= temp777_104 #x0000000000000004))
(assert (= temp777_105 temp777_104))
(assert (= temp777_106 (select ARGNAME_stride_NAMEEND_VAL temp777_105)))
(assert (= temp777_107 #x0000000000000005))
(assert (= temp777_108 temp777_107))
(assert (= temp777_109 (select ARGNAME_stride_NAMEEND_VAL temp777_108)))
(assert (= temp777_110 #x0000000000000000))
(assert (= temp777_111 #x0000000000000000))
(assert (= temp777_112 temp777_111))
(assert (= temp777_113 (select ARGNAME_stride_NAMEEND_VAL temp777_112)))
(assert (= temp777_114 #x0000000000000000))
(assert (= temp777_115 #x0000000000000001))
(assert (= temp777_116 temp777_115))
(assert (= temp777_117 (select ARGNAME_stride_NAMEEND_VAL temp777_116)))
(assert (= temp777_118 #x0000000000000000))
(assert (= temp777_119 #x0000000000000002))
(assert (= temp777_120 temp777_119))
(assert (= temp777_121 (select ARGNAME_stride_NAMEEND_VAL temp777_120)))
(assert (= temp777_122 #x0000000000000000))
(assert (= temp777_123 #x0000000000000003))
(assert (= temp777_124 temp777_123))
(assert (= temp777_125 (select ARGNAME_stride_NAMEEND_VAL temp777_124)))
(assert (= temp777_126 #x0000000000000000))
(assert (= temp777_127 #x0000000000000004))
(assert (= temp777_128 temp777_127))
(assert (= temp777_129 (select ARGNAME_stride_NAMEEND_VAL temp777_128)))
(assert (= temp777_130 #x0000000000000000))
(assert (= temp777_131 #x0000000000000005))
(assert (= temp777_132 temp777_131))
(assert (= temp777_133 (select ARGNAME_stride_NAMEEND_VAL temp777_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp777_113 temp777_110)
             (bvsle temp777_117 temp777_114)
             (bvsle temp777_121 temp777_118)
             (bvsle temp777_125 temp777_122)
             (bvsle temp777_129 temp777_126)
             (bvsle temp777_133 temp777_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_134 #x0000000000000000))
(assert (= var1322807 temp777_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_135 #x0000000000000001))
(assert (= var1322819 temp777_135))
(assert (= temp777_136 #x0000000000000000))
(assert (= var1310898 temp777_136))
(assert (= temp777_137 #x0000000000000000))
(assert (= temp777_138 temp777_137))
(assert (= temp777_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_138)))
(assert (= temp777_140 #x0000000000000001))
(assert (= temp777_141 temp777_140))
(assert (= temp777_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_141)))
(assert (= temp777_143 #x0000000000000002))
(assert (= temp777_144 temp777_143))
(assert (= temp777_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_144)))
(assert (= temp777_146 #x0000000000000003))
(assert (= temp777_147 temp777_146))
(assert (= temp777_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_147)))
(assert (= temp777_149 #x0000000000000004))
(assert (= temp777_150 temp777_149))
(assert (= temp777_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_150)))
(assert (= temp777_152 #x0000000000000005))
(assert (= temp777_153 temp777_152))
(assert (= temp777_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_153)))
(assert (= temp777_156 var1310898))
(assert (= temp777_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_156)))
(assert (= temp777_155 temp777_157))
(assert (= var1322852
   (ite (bvslt temp777_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_158 #x0000000000000000))
(assert (= var1322852 temp777_158))
(assert (= temp777_159 #x0000000000000000))
(assert (= var1310898 temp777_159))
(assert (= temp777_161 var1310898))
(assert (= temp777_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_161)))
(assert (= temp777_160 temp777_162))
(assert (= var1322874 (bvsmod temp777_160 ARGNAME_groups_NAMEEND)))
(assert (= temp777_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp777_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp777_164 #x0000000000000001))
(assert (= var1322875 temp777_164))
(assert (= temp777_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp777_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_166 #x0000000000000001))
(assert (= var1322895 temp777_166))
(assert (= temp777_167 #x0000000000000001))
(assert (= var1311786 temp777_167))
(assert (= temp777_168 #x0000000000000000))
(assert (= temp777_169 temp777_168))
(assert (= temp777_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp777_169)))
(assert (= temp777_171 #x0000000000000001))
(assert (= temp777_172 temp777_171))
(assert (= temp777_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp777_172)))
(assert (= temp777_174 #x0000000000000002))
(assert (= temp777_175 temp777_174))
(assert (= temp777_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp777_175)))
(assert (= temp777_177 #x0000000000000003))
(assert (= temp777_178 temp777_177))
(assert (= temp777_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp777_178)))
(assert (= temp777_180 #x0000000000000004))
(assert (= temp777_181 temp777_180))
(assert (= temp777_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp777_181)))
(assert (= temp777_183 #x0000000000000005))
(assert (= temp777_184 temp777_183))
(assert (= temp777_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp777_184)))
(assert (= temp777_186 #x0000000000000000))
(assert (= temp777_187
   (ite (bvslt var1311786 temp777_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp777_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp777_187)))
(assert (= var1322903 temp777_188))
(assert (bvslt (ite (bvslt var1311786 temp777_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp777_189 #x0000000000000001))
(assert (= var1311786 temp777_189))
(assert (= temp777_191 var1311786))
(assert (= temp777_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_191)))
(assert (= temp777_190 temp777_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp777_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp777_193 #x0000000000000001))
(assert (= var1322908 temp777_193))
(assert (= temp777_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp777_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_195 #x0000000000000001))
(assert (= var1322975 temp777_195))
(assert (= temp777_196 #x0000000000000000))
(assert (= var1310898 temp777_196))
(assert (= temp777_197 #x0000000000000000))
(assert (= temp777_198 temp777_197))
(assert (= temp777_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp777_198)))
(assert (= temp777_200 #x0000000000000001))
(assert (= temp777_201 temp777_200))
(assert (= temp777_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp777_201)))
(assert (= temp777_203 #x0000000000000002))
(assert (= temp777_204 temp777_203))
(assert (= temp777_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp777_204)))
(assert (= temp777_206 #x0000000000000003))
(assert (= temp777_207 temp777_206))
(assert (= temp777_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp777_207)))
(assert (= temp777_209 #x0000000000000004))
(assert (= temp777_210 temp777_209))
(assert (= temp777_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp777_210)))
(assert (= temp777_212 #x0000000000000005))
(assert (= temp777_213 temp777_212))
(assert (= temp777_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp777_213)))
(assert (= temp777_215 #x0000000000000000))
(assert (= temp777_216
   (ite (bvslt var1310898 temp777_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp777_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp777_216)))
(assert (= var1322977 temp777_217))
(assert (bvslt (ite (bvslt var1310898 temp777_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp777_218 #x0000000000000000))
(assert (= var1310898 temp777_218))
(assert (= temp777_220 var1310898))
(assert (= temp777_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp777_220)))
(assert (= temp777_219 temp777_221))
(assert (= var1322980
   (ite (= var1322977 temp777_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp777_222 #x0000000000000001))
(assert (= var1322980 temp777_222))
(assert (= temp777_223 #x0000000000000002))
(assert (= var1848169 temp777_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp777_225 #x0000000000000001))
(assert (= var1323065 temp777_225))
(assert (= temp777_226 #x0000000000000001))
(assert (= var3486735 temp777_226))
(assert (= temp777_227 #x0000000000000001))
(assert (= var3814415 temp777_227))
(assert (= temp777_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp777_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_229 #x0000000000000001))
(assert (= var79986 temp777_229))
(assert (= temp777_230 #x0000000000000001))
(assert (= var80116 temp777_230))
(assert (= var4796905 var80116))
(assert (= temp777_231 #x0000000000000000))
(assert (= var4784306 temp777_231))
(assert (= temp777_232 #x0000000000000000))
(assert (= temp777_233
   (ite (bvslt var4784306 temp777_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp777_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp777_233)))
(assert (= var4796924 temp777_234))
(assert (bvslt (ite (bvslt var4784306 temp777_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp777_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp777_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp777_236 #x0000000000000001))
(assert (= var4796925 temp777_236))
(assert (= temp777_237 #x0000000000000000))
(assert (= var4996927 temp777_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp777_238 #x0000000000000002))
(assert (= var5125763 temp777_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp777_239 #x0000000000000000))
(assert (= var5191324 temp777_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp777_241 #xffffffffffffffff))
(assert (= temp777_240 temp777_241))
(assert (= temp777_242 #x0000000000000001))
(assert (= var66602 temp777_242))
(assert (= temp777_243 #x0000000000000000))
(assert (= temp777_244
   (ite (bvslt var66602 temp777_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp777_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp777_244)))
(assert (= var80523 temp777_245))
(assert (bvslt (ite (bvslt var66602 temp777_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp777_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp777_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp777_247 #x0000000000000000))
(assert (= var80524 temp777_247))
(assert (= temp777_248 #x0000000000000001))
(assert (= var79986 temp777_248))
(model-add temp777_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp777_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp777_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






