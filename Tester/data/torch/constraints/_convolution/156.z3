(declare-fun temp206_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp206_2 () (_ BitVec 64))
(declare-fun temp206_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp206_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp206_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp206_6 () (_ BitVec 64))
(declare-fun temp206_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp206_8 () (_ BitVec 64))
(declare-fun temp206_9 () (_ BitVec 64))
(declare-fun temp206_10 () (_ BitVec 64))
(declare-fun temp206_11 () (_ BitVec 64))
(declare-fun temp206_12 () (_ BitVec 64))
(declare-fun temp206_13 () (_ BitVec 64))
(declare-fun temp206_14 () (_ BitVec 64))
(declare-fun temp206_15 () (_ BitVec 64))
(declare-fun temp206_16 () (_ BitVec 64))
(declare-fun temp206_17 () (_ BitVec 64))
(declare-fun temp206_18 () (_ BitVec 64))
(declare-fun temp206_19 () (_ BitVec 64))
(declare-fun temp206_20 () (_ BitVec 64))
(declare-fun temp206_21 () (_ BitVec 64))
(declare-fun temp206_22 () (_ BitVec 64))
(declare-fun temp206_23 () (_ BitVec 64))
(declare-fun temp206_24 () (_ BitVec 64))
(declare-fun temp206_25 () (_ BitVec 64))
(declare-fun temp206_26 () (_ BitVec 64))
(declare-fun temp206_27 () (_ BitVec 64))
(declare-fun temp206_28 () (_ BitVec 64))
(declare-fun temp206_29 () (_ BitVec 64))
(declare-fun temp206_30 () (_ BitVec 64))
(declare-fun temp206_31 () (_ BitVec 64))
(declare-fun temp206_32 () (_ BitVec 64))
(declare-fun temp206_33 () (_ BitVec 64))
(declare-fun temp206_34 () (_ BitVec 64))
(declare-fun temp206_35 () (_ BitVec 64))
(declare-fun temp206_36 () (_ BitVec 64))
(declare-fun temp206_37 () (_ BitVec 64))
(declare-fun temp206_38 () (_ BitVec 64))
(declare-fun temp206_39 () (_ BitVec 64))
(declare-fun temp206_40 () (_ BitVec 64))
(declare-fun temp206_41 () (_ BitVec 64))
(declare-fun temp206_42 () (_ BitVec 64))
(declare-fun temp206_43 () (_ BitVec 64))
(declare-fun temp206_44 () (_ BitVec 64))
(declare-fun temp206_45 () (_ BitVec 64))
(declare-fun temp206_46 () (_ BitVec 64))
(declare-fun temp206_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp206_48 () (_ BitVec 64))
(declare-fun temp206_49 () (_ BitVec 64))
(declare-fun temp206_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp206_51 () (_ BitVec 64))
(declare-fun temp206_52 () (_ BitVec 64))
(declare-fun temp206_53 () (_ BitVec 64))
(declare-fun temp206_54 () (_ BitVec 64))
(declare-fun temp206_55 () (_ BitVec 64))
(declare-fun temp206_56 () (_ BitVec 64))
(declare-fun temp206_57 () (_ BitVec 64))
(declare-fun temp206_58 () (_ BitVec 64))
(declare-fun temp206_59 () (_ BitVec 64))
(declare-fun temp206_60 () (_ BitVec 64))
(declare-fun temp206_61 () (_ BitVec 64))
(declare-fun temp206_62 () (_ BitVec 64))
(declare-fun temp206_63 () (_ BitVec 64))
(declare-fun temp206_64 () (_ BitVec 64))
(declare-fun temp206_65 () (_ BitVec 64))
(declare-fun temp206_66 () (_ BitVec 64))
(declare-fun temp206_67 () (_ BitVec 64))
(declare-fun temp206_68 () (_ BitVec 64))
(declare-fun temp206_69 () (_ BitVec 64))
(declare-fun temp206_70 () (_ BitVec 64))
(declare-fun temp206_71 () (_ BitVec 64))
(declare-fun temp206_72 () (_ BitVec 64))
(declare-fun temp206_73 () (_ BitVec 64))
(declare-fun temp206_74 () (_ BitVec 64))
(declare-fun temp206_75 () (_ BitVec 64))
(declare-fun temp206_76 () (_ BitVec 64))
(declare-fun temp206_77 () (_ BitVec 64))
(declare-fun temp206_78 () (_ BitVec 64))
(declare-fun temp206_79 () (_ BitVec 64))
(declare-fun temp206_80 () (_ BitVec 64))
(declare-fun temp206_81 () (_ BitVec 64))
(declare-fun temp206_82 () (_ BitVec 64))
(declare-fun temp206_83 () (_ BitVec 64))
(declare-fun temp206_84 () (_ BitVec 64))
(declare-fun temp206_85 () (_ BitVec 64))
(declare-fun temp206_86 () (_ BitVec 64))
(declare-fun temp206_87 () (_ BitVec 64))
(declare-fun temp206_88 () (_ BitVec 64))
(declare-fun temp206_89 () (_ BitVec 64))
(declare-fun temp206_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp206_91 () (_ BitVec 64))
(declare-fun temp206_92 () (_ BitVec 64))
(declare-fun temp206_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp206_94 () (_ BitVec 64))
(declare-fun temp206_95 () (_ BitVec 64))
(declare-fun temp206_96 () (_ BitVec 64))
(declare-fun temp206_97 () (_ BitVec 64))
(declare-fun temp206_98 () (_ BitVec 64))
(declare-fun temp206_99 () (_ BitVec 64))
(declare-fun temp206_100 () (_ BitVec 64))
(declare-fun temp206_101 () (_ BitVec 64))
(declare-fun temp206_102 () (_ BitVec 64))
(declare-fun temp206_103 () (_ BitVec 64))
(declare-fun temp206_104 () (_ BitVec 64))
(declare-fun temp206_105 () (_ BitVec 64))
(declare-fun temp206_106 () (_ BitVec 64))
(declare-fun temp206_107 () (_ BitVec 64))
(declare-fun temp206_108 () (_ BitVec 64))
(declare-fun temp206_109 () (_ BitVec 64))
(declare-fun temp206_110 () (_ BitVec 64))
(declare-fun temp206_111 () (_ BitVec 64))
(declare-fun temp206_112 () (_ BitVec 64))
(declare-fun temp206_113 () (_ BitVec 64))
(declare-fun temp206_114 () (_ BitVec 64))
(declare-fun temp206_115 () (_ BitVec 64))
(declare-fun temp206_116 () (_ BitVec 64))
(declare-fun temp206_117 () (_ BitVec 64))
(declare-fun temp206_118 () (_ BitVec 64))
(declare-fun temp206_119 () (_ BitVec 64))
(declare-fun temp206_120 () (_ BitVec 64))
(declare-fun temp206_121 () (_ BitVec 64))
(declare-fun temp206_122 () (_ BitVec 64))
(declare-fun temp206_123 () (_ BitVec 64))
(declare-fun temp206_124 () (_ BitVec 64))
(declare-fun temp206_125 () (_ BitVec 64))
(declare-fun temp206_126 () (_ BitVec 64))
(declare-fun temp206_127 () (_ BitVec 64))
(declare-fun temp206_128 () (_ BitVec 64))
(declare-fun temp206_129 () (_ BitVec 64))
(declare-fun temp206_130 () (_ BitVec 64))
(declare-fun temp206_131 () (_ BitVec 64))
(declare-fun temp206_132 () (_ BitVec 64))
(declare-fun temp206_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp206_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp206_135 () (_ BitVec 64))
(declare-fun temp206_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp206_137 () (_ BitVec 64))
(declare-fun temp206_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp206_139 () (_ BitVec 64))
(declare-fun temp206_140 () (_ BitVec 64))
(declare-fun temp206_141 () (_ BitVec 64))
(declare-fun temp206_142 () (_ BitVec 64))
(declare-fun temp206_143 () (_ BitVec 64))
(declare-fun temp206_144 () (_ BitVec 64))
(declare-fun temp206_145 () (_ BitVec 64))
(declare-fun temp206_146 () (_ BitVec 64))
(declare-fun temp206_147 () (_ BitVec 64))
(declare-fun temp206_148 () (_ BitVec 64))
(declare-fun temp206_149 () (_ BitVec 64))
(declare-fun temp206_150 () (_ BitVec 64))
(declare-fun temp206_151 () (_ BitVec 64))
(declare-fun temp206_152 () (_ BitVec 64))
(declare-fun temp206_153 () (_ BitVec 64))
(declare-fun temp206_154 () (_ BitVec 64))
(declare-fun temp206_156 () (_ BitVec 64))
(declare-fun temp206_157 () (_ BitVec 64))
(declare-fun temp206_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp206_158 () (_ BitVec 64))
(declare-fun temp206_159 () (_ BitVec 64))
(declare-fun temp206_161 () (_ BitVec 64))
(declare-fun temp206_162 () (_ BitVec 64))
(declare-fun temp206_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp206_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp206_164 () (_ BitVec 64))
(declare-fun temp206_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp206_166 () (_ BitVec 64))
(declare-fun temp206_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp206_168 () (_ BitVec 64))
(declare-fun temp206_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp206_170 () (_ BitVec 64))
(declare-fun temp206_171 () (_ BitVec 64))
(declare-fun temp206_172 () (_ BitVec 64))
(declare-fun temp206_173 () (_ BitVec 64))
(declare-fun temp206_174 () (_ BitVec 64))
(declare-fun temp206_175 () (_ BitVec 64))
(declare-fun temp206_176 () (_ BitVec 64))
(declare-fun temp206_177 () (_ BitVec 64))
(declare-fun temp206_178 () (_ BitVec 64))
(declare-fun temp206_179 () (_ BitVec 64))
(declare-fun temp206_180 () (_ BitVec 64))
(declare-fun temp206_181 () (_ BitVec 64))
(declare-fun temp206_182 () (_ BitVec 64))
(declare-fun temp206_183 () (_ BitVec 64))
(declare-fun temp206_184 () (_ BitVec 64))
(declare-fun temp206_185 () (_ BitVec 64))
(declare-fun temp206_186 () (_ BitVec 64))
(declare-fun temp206_187 () (_ BitVec 64))
(declare-fun temp206_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp206_189 () (_ BitVec 64))
(declare-fun temp206_191 () (_ BitVec 64))
(declare-fun temp206_192 () (_ BitVec 64))
(declare-fun temp206_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp206_193 () (_ BitVec 64))
(declare-fun temp206_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp206_195 () (_ BitVec 64))
(declare-fun temp206_196 () (_ BitVec 64))
(declare-fun temp206_197 () (_ BitVec 64))
(declare-fun temp206_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp206_199 () (_ BitVec 64))
(declare-fun temp206_200 () (_ BitVec 64))
(declare-fun temp206_201 () (_ BitVec 64))
(declare-fun temp206_202 () (_ BitVec 64))
(declare-fun temp206_203 () (_ BitVec 64))
(declare-fun temp206_204 () (_ BitVec 64))
(declare-fun temp206_205 () (_ BitVec 64))
(declare-fun temp206_206 () (_ BitVec 64))
(declare-fun temp206_207 () (_ BitVec 64))
(declare-fun temp206_208 () (_ BitVec 64))
(declare-fun temp206_209 () (_ BitVec 64))
(declare-fun temp206_210 () (_ BitVec 64))
(declare-fun temp206_211 () (_ BitVec 64))
(declare-fun temp206_212 () (_ BitVec 64))
(declare-fun temp206_213 () (_ BitVec 64))
(declare-fun temp206_214 () (_ BitVec 64))
(declare-fun temp206_215 () (_ BitVec 64))
(declare-fun temp206_216 () (_ BitVec 64))
(declare-fun temp206_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp206_218 () (_ BitVec 64))
(declare-fun temp206_220 () (_ BitVec 64))
(declare-fun temp206_221 () (_ BitVec 64))
(declare-fun temp206_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp206_222 () (_ BitVec 64))
(declare-fun temp206_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp206_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp206_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp206_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp206_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp206_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp206_229 () (_ BitVec 64))
(declare-fun temp206_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp206_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp206_232 () (_ BitVec 64))
(declare-fun temp206_233 () (_ BitVec 64))
(declare-fun temp206_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp206_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp206_236 () (_ BitVec 64))
(declare-fun temp206_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp206_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp206_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp206_241 () (_ BitVec 64))
(declare-fun temp206_240 () (_ BitVec 64))
(declare-fun temp206_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp206_243 () (_ BitVec 64))
(declare-fun temp206_244 () (_ BitVec 64))
(declare-fun temp206_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp206_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp206_247 () (_ BitVec 64))
(declare-fun temp206_248 () (_ BitVec 64))
(assert (= temp206_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp206_1)))
(assert (= temp206_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp206_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_3 #x0000000000000000))
(assert (= var79869 temp206_3))
(assert (= temp206_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp206_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_5 #x0000000000000000))
(assert (= var79914 temp206_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp206_6 #x0000000000000000))
(assert (= temp206_7 temp206_6))
(assert (= temp206_8 (select ARGNAME_padding_NAMEEND_VAL temp206_7)))
(assert (= temp206_9 #x0000000000000001))
(assert (= temp206_10 temp206_9))
(assert (= temp206_11 (select ARGNAME_padding_NAMEEND_VAL temp206_10)))
(assert (= temp206_12 #x0000000000000002))
(assert (= temp206_13 temp206_12))
(assert (= temp206_14 (select ARGNAME_padding_NAMEEND_VAL temp206_13)))
(assert (= temp206_15 #x0000000000000003))
(assert (= temp206_16 temp206_15))
(assert (= temp206_17 (select ARGNAME_padding_NAMEEND_VAL temp206_16)))
(assert (= temp206_18 #x0000000000000004))
(assert (= temp206_19 temp206_18))
(assert (= temp206_20 (select ARGNAME_padding_NAMEEND_VAL temp206_19)))
(assert (= temp206_21 #x0000000000000005))
(assert (= temp206_22 temp206_21))
(assert (= temp206_23 (select ARGNAME_padding_NAMEEND_VAL temp206_22)))
(assert (= temp206_24 #x0000000000000000))
(assert (= temp206_25 #x0000000000000000))
(assert (= temp206_26 temp206_25))
(assert (= temp206_27 (select ARGNAME_padding_NAMEEND_VAL temp206_26)))
(assert (= temp206_28 #x0000000000000000))
(assert (= temp206_29 #x0000000000000001))
(assert (= temp206_30 temp206_29))
(assert (= temp206_31 (select ARGNAME_padding_NAMEEND_VAL temp206_30)))
(assert (= temp206_32 #x0000000000000000))
(assert (= temp206_33 #x0000000000000002))
(assert (= temp206_34 temp206_33))
(assert (= temp206_35 (select ARGNAME_padding_NAMEEND_VAL temp206_34)))
(assert (= temp206_36 #x0000000000000000))
(assert (= temp206_37 #x0000000000000003))
(assert (= temp206_38 temp206_37))
(assert (= temp206_39 (select ARGNAME_padding_NAMEEND_VAL temp206_38)))
(assert (= temp206_40 #x0000000000000000))
(assert (= temp206_41 #x0000000000000004))
(assert (= temp206_42 temp206_41))
(assert (= temp206_43 (select ARGNAME_padding_NAMEEND_VAL temp206_42)))
(assert (= temp206_44 #x0000000000000000))
(assert (= temp206_45 #x0000000000000005))
(assert (= temp206_46 temp206_45))
(assert (= temp206_47 (select ARGNAME_padding_NAMEEND_VAL temp206_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp206_27 temp206_24)
             (bvslt temp206_31 temp206_28)
             (bvslt temp206_35 temp206_32)
             (bvslt temp206_39 temp206_36)
             (bvslt temp206_43 temp206_40)
             (bvslt temp206_47 temp206_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_48 #x0000000000000000))
(assert (= var1322786 temp206_48))
(assert (= temp206_49 #x0000000000000000))
(assert (= temp206_50 temp206_49))
(assert (= temp206_51 (select ARGNAME_output_padding_NAMEEND_VAL temp206_50)))
(assert (= temp206_52 #x0000000000000001))
(assert (= temp206_53 temp206_52))
(assert (= temp206_54 (select ARGNAME_output_padding_NAMEEND_VAL temp206_53)))
(assert (= temp206_55 #x0000000000000002))
(assert (= temp206_56 temp206_55))
(assert (= temp206_57 (select ARGNAME_output_padding_NAMEEND_VAL temp206_56)))
(assert (= temp206_58 #x0000000000000003))
(assert (= temp206_59 temp206_58))
(assert (= temp206_60 (select ARGNAME_output_padding_NAMEEND_VAL temp206_59)))
(assert (= temp206_61 #x0000000000000004))
(assert (= temp206_62 temp206_61))
(assert (= temp206_63 (select ARGNAME_output_padding_NAMEEND_VAL temp206_62)))
(assert (= temp206_64 #x0000000000000005))
(assert (= temp206_65 temp206_64))
(assert (= temp206_66 (select ARGNAME_output_padding_NAMEEND_VAL temp206_65)))
(assert (= temp206_67 #x0000000000000000))
(assert (= temp206_68 #x0000000000000000))
(assert (= temp206_69 temp206_68))
(assert (= temp206_70 (select ARGNAME_output_padding_NAMEEND_VAL temp206_69)))
(assert (= temp206_71 #x0000000000000000))
(assert (= temp206_72 #x0000000000000001))
(assert (= temp206_73 temp206_72))
(assert (= temp206_74 (select ARGNAME_output_padding_NAMEEND_VAL temp206_73)))
(assert (= temp206_75 #x0000000000000000))
(assert (= temp206_76 #x0000000000000002))
(assert (= temp206_77 temp206_76))
(assert (= temp206_78 (select ARGNAME_output_padding_NAMEEND_VAL temp206_77)))
(assert (= temp206_79 #x0000000000000000))
(assert (= temp206_80 #x0000000000000003))
(assert (= temp206_81 temp206_80))
(assert (= temp206_82 (select ARGNAME_output_padding_NAMEEND_VAL temp206_81)))
(assert (= temp206_83 #x0000000000000000))
(assert (= temp206_84 #x0000000000000004))
(assert (= temp206_85 temp206_84))
(assert (= temp206_86 (select ARGNAME_output_padding_NAMEEND_VAL temp206_85)))
(assert (= temp206_87 #x0000000000000000))
(assert (= temp206_88 #x0000000000000005))
(assert (= temp206_89 temp206_88))
(assert (= temp206_90 (select ARGNAME_output_padding_NAMEEND_VAL temp206_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp206_70 temp206_67)
             (bvslt temp206_74 temp206_71)
             (bvslt temp206_78 temp206_75)
             (bvslt temp206_82 temp206_79)
             (bvslt temp206_86 temp206_83)
             (bvslt temp206_90 temp206_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_91 #x0000000000000000))
(assert (= var1322797 temp206_91))
(assert (= temp206_92 #x0000000000000000))
(assert (= temp206_93 temp206_92))
(assert (= temp206_94 (select ARGNAME_stride_NAMEEND_VAL temp206_93)))
(assert (= temp206_95 #x0000000000000001))
(assert (= temp206_96 temp206_95))
(assert (= temp206_97 (select ARGNAME_stride_NAMEEND_VAL temp206_96)))
(assert (= temp206_98 #x0000000000000002))
(assert (= temp206_99 temp206_98))
(assert (= temp206_100 (select ARGNAME_stride_NAMEEND_VAL temp206_99)))
(assert (= temp206_101 #x0000000000000003))
(assert (= temp206_102 temp206_101))
(assert (= temp206_103 (select ARGNAME_stride_NAMEEND_VAL temp206_102)))
(assert (= temp206_104 #x0000000000000004))
(assert (= temp206_105 temp206_104))
(assert (= temp206_106 (select ARGNAME_stride_NAMEEND_VAL temp206_105)))
(assert (= temp206_107 #x0000000000000005))
(assert (= temp206_108 temp206_107))
(assert (= temp206_109 (select ARGNAME_stride_NAMEEND_VAL temp206_108)))
(assert (= temp206_110 #x0000000000000000))
(assert (= temp206_111 #x0000000000000000))
(assert (= temp206_112 temp206_111))
(assert (= temp206_113 (select ARGNAME_stride_NAMEEND_VAL temp206_112)))
(assert (= temp206_114 #x0000000000000000))
(assert (= temp206_115 #x0000000000000001))
(assert (= temp206_116 temp206_115))
(assert (= temp206_117 (select ARGNAME_stride_NAMEEND_VAL temp206_116)))
(assert (= temp206_118 #x0000000000000000))
(assert (= temp206_119 #x0000000000000002))
(assert (= temp206_120 temp206_119))
(assert (= temp206_121 (select ARGNAME_stride_NAMEEND_VAL temp206_120)))
(assert (= temp206_122 #x0000000000000000))
(assert (= temp206_123 #x0000000000000003))
(assert (= temp206_124 temp206_123))
(assert (= temp206_125 (select ARGNAME_stride_NAMEEND_VAL temp206_124)))
(assert (= temp206_126 #x0000000000000000))
(assert (= temp206_127 #x0000000000000004))
(assert (= temp206_128 temp206_127))
(assert (= temp206_129 (select ARGNAME_stride_NAMEEND_VAL temp206_128)))
(assert (= temp206_130 #x0000000000000000))
(assert (= temp206_131 #x0000000000000005))
(assert (= temp206_132 temp206_131))
(assert (= temp206_133 (select ARGNAME_stride_NAMEEND_VAL temp206_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp206_113 temp206_110)
             (bvsle temp206_117 temp206_114)
             (bvsle temp206_121 temp206_118)
             (bvsle temp206_125 temp206_122)
             (bvsle temp206_129 temp206_126)
             (bvsle temp206_133 temp206_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_134 #x0000000000000000))
(assert (= var1322807 temp206_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_135 #x0000000000000001))
(assert (= var1322819 temp206_135))
(assert (= temp206_136 #x0000000000000000))
(assert (= var1310898 temp206_136))
(assert (= temp206_137 #x0000000000000000))
(assert (= temp206_138 temp206_137))
(assert (= temp206_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_138)))
(assert (= temp206_140 #x0000000000000001))
(assert (= temp206_141 temp206_140))
(assert (= temp206_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_141)))
(assert (= temp206_143 #x0000000000000002))
(assert (= temp206_144 temp206_143))
(assert (= temp206_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_144)))
(assert (= temp206_146 #x0000000000000003))
(assert (= temp206_147 temp206_146))
(assert (= temp206_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_147)))
(assert (= temp206_149 #x0000000000000004))
(assert (= temp206_150 temp206_149))
(assert (= temp206_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_150)))
(assert (= temp206_152 #x0000000000000005))
(assert (= temp206_153 temp206_152))
(assert (= temp206_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_153)))
(assert (= temp206_156 var1310898))
(assert (= temp206_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_156)))
(assert (= temp206_155 temp206_157))
(assert (= var1322852
   (ite (bvslt temp206_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_158 #x0000000000000000))
(assert (= var1322852 temp206_158))
(assert (= temp206_159 #x0000000000000000))
(assert (= var1310898 temp206_159))
(assert (= temp206_161 var1310898))
(assert (= temp206_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_161)))
(assert (= temp206_160 temp206_162))
(assert (= var1322874 (bvsmod temp206_160 ARGNAME_groups_NAMEEND)))
(assert (= temp206_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp206_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp206_164 #x0000000000000001))
(assert (= var1322875 temp206_164))
(assert (= temp206_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp206_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_166 #x0000000000000001))
(assert (= var1322895 temp206_166))
(assert (= temp206_167 #x0000000000000001))
(assert (= var1311786 temp206_167))
(assert (= temp206_168 #x0000000000000000))
(assert (= temp206_169 temp206_168))
(assert (= temp206_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp206_169)))
(assert (= temp206_171 #x0000000000000001))
(assert (= temp206_172 temp206_171))
(assert (= temp206_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp206_172)))
(assert (= temp206_174 #x0000000000000002))
(assert (= temp206_175 temp206_174))
(assert (= temp206_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp206_175)))
(assert (= temp206_177 #x0000000000000003))
(assert (= temp206_178 temp206_177))
(assert (= temp206_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp206_178)))
(assert (= temp206_180 #x0000000000000004))
(assert (= temp206_181 temp206_180))
(assert (= temp206_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp206_181)))
(assert (= temp206_183 #x0000000000000005))
(assert (= temp206_184 temp206_183))
(assert (= temp206_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp206_184)))
(assert (= temp206_186 #x0000000000000000))
(assert (= temp206_187
   (ite (bvslt var1311786 temp206_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp206_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp206_187)))
(assert (= var1322903 temp206_188))
(assert (bvslt (ite (bvslt var1311786 temp206_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp206_189 #x0000000000000001))
(assert (= var1311786 temp206_189))
(assert (= temp206_191 var1311786))
(assert (= temp206_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_191)))
(assert (= temp206_190 temp206_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp206_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp206_193 #x0000000000000001))
(assert (= var1322908 temp206_193))
(assert (= temp206_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp206_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_195 #x0000000000000001))
(assert (= var1322975 temp206_195))
(assert (= temp206_196 #x0000000000000000))
(assert (= var1310898 temp206_196))
(assert (= temp206_197 #x0000000000000000))
(assert (= temp206_198 temp206_197))
(assert (= temp206_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp206_198)))
(assert (= temp206_200 #x0000000000000001))
(assert (= temp206_201 temp206_200))
(assert (= temp206_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp206_201)))
(assert (= temp206_203 #x0000000000000002))
(assert (= temp206_204 temp206_203))
(assert (= temp206_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp206_204)))
(assert (= temp206_206 #x0000000000000003))
(assert (= temp206_207 temp206_206))
(assert (= temp206_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp206_207)))
(assert (= temp206_209 #x0000000000000004))
(assert (= temp206_210 temp206_209))
(assert (= temp206_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp206_210)))
(assert (= temp206_212 #x0000000000000005))
(assert (= temp206_213 temp206_212))
(assert (= temp206_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp206_213)))
(assert (= temp206_215 #x0000000000000000))
(assert (= temp206_216
   (ite (bvslt var1310898 temp206_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp206_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp206_216)))
(assert (= var1322977 temp206_217))
(assert (bvslt (ite (bvslt var1310898 temp206_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp206_218 #x0000000000000000))
(assert (= var1310898 temp206_218))
(assert (= temp206_220 var1310898))
(assert (= temp206_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_220)))
(assert (= temp206_219 temp206_221))
(assert (= var1322980
   (ite (= var1322977 temp206_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp206_222 #x0000000000000001))
(assert (= var1322980 temp206_222))
(assert (= temp206_223 #x0000000000000002))
(assert (= var1848169 temp206_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp206_225 #x0000000000000001))
(assert (= var1323065 temp206_225))
(assert (= temp206_226 #x0000000000000001))
(assert (= var3486735 temp206_226))
(assert (= temp206_227 #x0000000000000001))
(assert (= var3814415 temp206_227))
(assert (= temp206_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp206_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_229 #x0000000000000001))
(assert (= var79986 temp206_229))
(assert (= temp206_230 #x0000000000000001))
(assert (= var80116 temp206_230))
(assert (= var4796905 var80116))
(assert (= temp206_231 #x0000000000000000))
(assert (= var4784306 temp206_231))
(assert (= temp206_232 #x0000000000000000))
(assert (= temp206_233
   (ite (bvslt var4784306 temp206_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp206_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp206_233)))
(assert (= var4796924 temp206_234))
(assert (bvslt (ite (bvslt var4784306 temp206_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp206_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp206_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp206_236 #x0000000000000001))
(assert (= var4796925 temp206_236))
(assert (= temp206_237 #x0000000000000000))
(assert (= var4996927 temp206_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp206_238 #x0000000000000002))
(assert (= var5125763 temp206_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_239 #x0000000000000000))
(assert (= var5191324 temp206_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp206_241 #xffffffffffffffff))
(assert (= temp206_240 temp206_241))
(assert (= temp206_242 #x0000000000000001))
(assert (= var66602 temp206_242))
(assert (= temp206_243 #x0000000000000000))
(assert (= temp206_244
   (ite (bvslt var66602 temp206_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp206_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp206_244)))
(assert (= var80523 temp206_245))
(assert (bvslt (ite (bvslt var66602 temp206_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp206_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp206_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp206_247 #x0000000000000000))
(assert (= var80524 temp206_247))
(assert (= temp206_248 #x0000000000000001))
(assert (= var79986 temp206_248))
(model-add temp206_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp206_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp206_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






