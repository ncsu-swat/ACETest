(declare-fun temp1042_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1042_2 () (_ BitVec 64))
(declare-fun temp1042_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1042_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1042_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1042_6 () (_ BitVec 64))
(declare-fun temp1042_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1042_8 () (_ BitVec 64))
(declare-fun temp1042_9 () (_ BitVec 64))
(declare-fun temp1042_10 () (_ BitVec 64))
(declare-fun temp1042_11 () (_ BitVec 64))
(declare-fun temp1042_12 () (_ BitVec 64))
(declare-fun temp1042_13 () (_ BitVec 64))
(declare-fun temp1042_14 () (_ BitVec 64))
(declare-fun temp1042_15 () (_ BitVec 64))
(declare-fun temp1042_16 () (_ BitVec 64))
(declare-fun temp1042_17 () (_ BitVec 64))
(declare-fun temp1042_18 () (_ BitVec 64))
(declare-fun temp1042_19 () (_ BitVec 64))
(declare-fun temp1042_20 () (_ BitVec 64))
(declare-fun temp1042_21 () (_ BitVec 64))
(declare-fun temp1042_22 () (_ BitVec 64))
(declare-fun temp1042_23 () (_ BitVec 64))
(declare-fun temp1042_24 () (_ BitVec 64))
(declare-fun temp1042_25 () (_ BitVec 64))
(declare-fun temp1042_26 () (_ BitVec 64))
(declare-fun temp1042_27 () (_ BitVec 64))
(declare-fun temp1042_28 () (_ BitVec 64))
(declare-fun temp1042_29 () (_ BitVec 64))
(declare-fun temp1042_30 () (_ BitVec 64))
(declare-fun temp1042_31 () (_ BitVec 64))
(declare-fun temp1042_32 () (_ BitVec 64))
(declare-fun temp1042_33 () (_ BitVec 64))
(declare-fun temp1042_34 () (_ BitVec 64))
(declare-fun temp1042_35 () (_ BitVec 64))
(declare-fun temp1042_36 () (_ BitVec 64))
(declare-fun temp1042_37 () (_ BitVec 64))
(declare-fun temp1042_38 () (_ BitVec 64))
(declare-fun temp1042_39 () (_ BitVec 64))
(declare-fun temp1042_40 () (_ BitVec 64))
(declare-fun temp1042_41 () (_ BitVec 64))
(declare-fun temp1042_42 () (_ BitVec 64))
(declare-fun temp1042_43 () (_ BitVec 64))
(declare-fun temp1042_44 () (_ BitVec 64))
(declare-fun temp1042_45 () (_ BitVec 64))
(declare-fun temp1042_46 () (_ BitVec 64))
(declare-fun temp1042_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1042_48 () (_ BitVec 64))
(declare-fun temp1042_49 () (_ BitVec 64))
(declare-fun temp1042_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1042_51 () (_ BitVec 64))
(declare-fun temp1042_52 () (_ BitVec 64))
(declare-fun temp1042_53 () (_ BitVec 64))
(declare-fun temp1042_54 () (_ BitVec 64))
(declare-fun temp1042_55 () (_ BitVec 64))
(declare-fun temp1042_56 () (_ BitVec 64))
(declare-fun temp1042_57 () (_ BitVec 64))
(declare-fun temp1042_58 () (_ BitVec 64))
(declare-fun temp1042_59 () (_ BitVec 64))
(declare-fun temp1042_60 () (_ BitVec 64))
(declare-fun temp1042_61 () (_ BitVec 64))
(declare-fun temp1042_62 () (_ BitVec 64))
(declare-fun temp1042_63 () (_ BitVec 64))
(declare-fun temp1042_64 () (_ BitVec 64))
(declare-fun temp1042_65 () (_ BitVec 64))
(declare-fun temp1042_66 () (_ BitVec 64))
(declare-fun temp1042_67 () (_ BitVec 64))
(declare-fun temp1042_68 () (_ BitVec 64))
(declare-fun temp1042_69 () (_ BitVec 64))
(declare-fun temp1042_70 () (_ BitVec 64))
(declare-fun temp1042_71 () (_ BitVec 64))
(declare-fun temp1042_72 () (_ BitVec 64))
(declare-fun temp1042_73 () (_ BitVec 64))
(declare-fun temp1042_74 () (_ BitVec 64))
(declare-fun temp1042_75 () (_ BitVec 64))
(declare-fun temp1042_76 () (_ BitVec 64))
(declare-fun temp1042_77 () (_ BitVec 64))
(declare-fun temp1042_78 () (_ BitVec 64))
(declare-fun temp1042_79 () (_ BitVec 64))
(declare-fun temp1042_80 () (_ BitVec 64))
(declare-fun temp1042_81 () (_ BitVec 64))
(declare-fun temp1042_82 () (_ BitVec 64))
(declare-fun temp1042_83 () (_ BitVec 64))
(declare-fun temp1042_84 () (_ BitVec 64))
(declare-fun temp1042_85 () (_ BitVec 64))
(declare-fun temp1042_86 () (_ BitVec 64))
(declare-fun temp1042_87 () (_ BitVec 64))
(declare-fun temp1042_88 () (_ BitVec 64))
(declare-fun temp1042_89 () (_ BitVec 64))
(declare-fun temp1042_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1042_91 () (_ BitVec 64))
(declare-fun temp1042_92 () (_ BitVec 64))
(declare-fun temp1042_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1042_94 () (_ BitVec 64))
(declare-fun temp1042_95 () (_ BitVec 64))
(declare-fun temp1042_96 () (_ BitVec 64))
(declare-fun temp1042_97 () (_ BitVec 64))
(declare-fun temp1042_98 () (_ BitVec 64))
(declare-fun temp1042_99 () (_ BitVec 64))
(declare-fun temp1042_100 () (_ BitVec 64))
(declare-fun temp1042_101 () (_ BitVec 64))
(declare-fun temp1042_102 () (_ BitVec 64))
(declare-fun temp1042_103 () (_ BitVec 64))
(declare-fun temp1042_104 () (_ BitVec 64))
(declare-fun temp1042_105 () (_ BitVec 64))
(declare-fun temp1042_106 () (_ BitVec 64))
(declare-fun temp1042_107 () (_ BitVec 64))
(declare-fun temp1042_108 () (_ BitVec 64))
(declare-fun temp1042_109 () (_ BitVec 64))
(declare-fun temp1042_110 () (_ BitVec 64))
(declare-fun temp1042_111 () (_ BitVec 64))
(declare-fun temp1042_112 () (_ BitVec 64))
(declare-fun temp1042_113 () (_ BitVec 64))
(declare-fun temp1042_114 () (_ BitVec 64))
(declare-fun temp1042_115 () (_ BitVec 64))
(declare-fun temp1042_116 () (_ BitVec 64))
(declare-fun temp1042_117 () (_ BitVec 64))
(declare-fun temp1042_118 () (_ BitVec 64))
(declare-fun temp1042_119 () (_ BitVec 64))
(declare-fun temp1042_120 () (_ BitVec 64))
(declare-fun temp1042_121 () (_ BitVec 64))
(declare-fun temp1042_122 () (_ BitVec 64))
(declare-fun temp1042_123 () (_ BitVec 64))
(declare-fun temp1042_124 () (_ BitVec 64))
(declare-fun temp1042_125 () (_ BitVec 64))
(declare-fun temp1042_126 () (_ BitVec 64))
(declare-fun temp1042_127 () (_ BitVec 64))
(declare-fun temp1042_128 () (_ BitVec 64))
(declare-fun temp1042_129 () (_ BitVec 64))
(declare-fun temp1042_130 () (_ BitVec 64))
(declare-fun temp1042_131 () (_ BitVec 64))
(declare-fun temp1042_132 () (_ BitVec 64))
(declare-fun temp1042_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1042_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1042_135 () (_ BitVec 64))
(declare-fun temp1042_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1042_137 () (_ BitVec 64))
(declare-fun temp1042_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1042_139 () (_ BitVec 64))
(declare-fun temp1042_140 () (_ BitVec 64))
(declare-fun temp1042_141 () (_ BitVec 64))
(declare-fun temp1042_142 () (_ BitVec 64))
(declare-fun temp1042_143 () (_ BitVec 64))
(declare-fun temp1042_144 () (_ BitVec 64))
(declare-fun temp1042_145 () (_ BitVec 64))
(declare-fun temp1042_146 () (_ BitVec 64))
(declare-fun temp1042_147 () (_ BitVec 64))
(declare-fun temp1042_148 () (_ BitVec 64))
(declare-fun temp1042_149 () (_ BitVec 64))
(declare-fun temp1042_150 () (_ BitVec 64))
(declare-fun temp1042_151 () (_ BitVec 64))
(declare-fun temp1042_152 () (_ BitVec 64))
(declare-fun temp1042_153 () (_ BitVec 64))
(declare-fun temp1042_154 () (_ BitVec 64))
(declare-fun temp1042_156 () (_ BitVec 64))
(declare-fun temp1042_157 () (_ BitVec 64))
(declare-fun temp1042_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1042_158 () (_ BitVec 64))
(declare-fun temp1042_159 () (_ BitVec 64))
(declare-fun temp1042_161 () (_ BitVec 64))
(declare-fun temp1042_162 () (_ BitVec 64))
(declare-fun temp1042_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1042_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1042_164 () (_ BitVec 64))
(declare-fun temp1042_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1042_166 () (_ BitVec 64))
(declare-fun temp1042_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1042_168 () (_ BitVec 64))
(declare-fun temp1042_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1042_170 () (_ BitVec 64))
(declare-fun temp1042_171 () (_ BitVec 64))
(declare-fun temp1042_172 () (_ BitVec 64))
(declare-fun temp1042_173 () (_ BitVec 64))
(declare-fun temp1042_174 () (_ BitVec 64))
(declare-fun temp1042_175 () (_ BitVec 64))
(declare-fun temp1042_176 () (_ BitVec 64))
(declare-fun temp1042_177 () (_ BitVec 64))
(declare-fun temp1042_178 () (_ BitVec 64))
(declare-fun temp1042_179 () (_ BitVec 64))
(declare-fun temp1042_180 () (_ BitVec 64))
(declare-fun temp1042_181 () (_ BitVec 64))
(declare-fun temp1042_182 () (_ BitVec 64))
(declare-fun temp1042_183 () (_ BitVec 64))
(declare-fun temp1042_184 () (_ BitVec 64))
(declare-fun temp1042_185 () (_ BitVec 64))
(declare-fun temp1042_186 () (_ BitVec 64))
(declare-fun temp1042_187 () (_ BitVec 64))
(declare-fun temp1042_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1042_189 () (_ BitVec 64))
(declare-fun temp1042_191 () (_ BitVec 64))
(declare-fun temp1042_192 () (_ BitVec 64))
(declare-fun temp1042_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1042_193 () (_ BitVec 64))
(declare-fun temp1042_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1042_195 () (_ BitVec 64))
(declare-fun temp1042_196 () (_ BitVec 64))
(declare-fun temp1042_197 () (_ BitVec 64))
(declare-fun temp1042_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1042_199 () (_ BitVec 64))
(declare-fun temp1042_200 () (_ BitVec 64))
(declare-fun temp1042_201 () (_ BitVec 64))
(declare-fun temp1042_202 () (_ BitVec 64))
(declare-fun temp1042_203 () (_ BitVec 64))
(declare-fun temp1042_204 () (_ BitVec 64))
(declare-fun temp1042_205 () (_ BitVec 64))
(declare-fun temp1042_206 () (_ BitVec 64))
(declare-fun temp1042_207 () (_ BitVec 64))
(declare-fun temp1042_208 () (_ BitVec 64))
(declare-fun temp1042_209 () (_ BitVec 64))
(declare-fun temp1042_210 () (_ BitVec 64))
(declare-fun temp1042_211 () (_ BitVec 64))
(declare-fun temp1042_212 () (_ BitVec 64))
(declare-fun temp1042_213 () (_ BitVec 64))
(declare-fun temp1042_214 () (_ BitVec 64))
(declare-fun temp1042_215 () (_ BitVec 64))
(declare-fun temp1042_216 () (_ BitVec 64))
(declare-fun temp1042_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1042_218 () (_ BitVec 64))
(declare-fun temp1042_220 () (_ BitVec 64))
(declare-fun temp1042_221 () (_ BitVec 64))
(declare-fun temp1042_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1042_222 () (_ BitVec 64))
(declare-fun temp1042_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1042_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1042_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1042_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1042_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1042_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1042_229 () (_ BitVec 64))
(declare-fun temp1042_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1042_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1042_232 () (_ BitVec 64))
(declare-fun temp1042_233 () (_ BitVec 64))
(declare-fun temp1042_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1042_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1042_236 () (_ BitVec 64))
(declare-fun temp1042_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1042_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1042_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1042_240 () (_ BitVec 64))
(assert (= temp1042_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1042_1)))
(assert (= temp1042_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1042_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_3 #x0000000000000000))
(assert (= var79869 temp1042_3))
(assert (= temp1042_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1042_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_5 #x0000000000000000))
(assert (= var79914 temp1042_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1042_6 #x0000000000000000))
(assert (= temp1042_7 temp1042_6))
(assert (= temp1042_8 (select ARGNAME_padding_NAMEEND_VAL temp1042_7)))
(assert (= temp1042_9 #x0000000000000001))
(assert (= temp1042_10 temp1042_9))
(assert (= temp1042_11 (select ARGNAME_padding_NAMEEND_VAL temp1042_10)))
(assert (= temp1042_12 #x0000000000000002))
(assert (= temp1042_13 temp1042_12))
(assert (= temp1042_14 (select ARGNAME_padding_NAMEEND_VAL temp1042_13)))
(assert (= temp1042_15 #x0000000000000003))
(assert (= temp1042_16 temp1042_15))
(assert (= temp1042_17 (select ARGNAME_padding_NAMEEND_VAL temp1042_16)))
(assert (= temp1042_18 #x0000000000000004))
(assert (= temp1042_19 temp1042_18))
(assert (= temp1042_20 (select ARGNAME_padding_NAMEEND_VAL temp1042_19)))
(assert (= temp1042_21 #x0000000000000005))
(assert (= temp1042_22 temp1042_21))
(assert (= temp1042_23 (select ARGNAME_padding_NAMEEND_VAL temp1042_22)))
(assert (= temp1042_24 #x0000000000000000))
(assert (= temp1042_25 #x0000000000000000))
(assert (= temp1042_26 temp1042_25))
(assert (= temp1042_27 (select ARGNAME_padding_NAMEEND_VAL temp1042_26)))
(assert (= temp1042_28 #x0000000000000000))
(assert (= temp1042_29 #x0000000000000001))
(assert (= temp1042_30 temp1042_29))
(assert (= temp1042_31 (select ARGNAME_padding_NAMEEND_VAL temp1042_30)))
(assert (= temp1042_32 #x0000000000000000))
(assert (= temp1042_33 #x0000000000000002))
(assert (= temp1042_34 temp1042_33))
(assert (= temp1042_35 (select ARGNAME_padding_NAMEEND_VAL temp1042_34)))
(assert (= temp1042_36 #x0000000000000000))
(assert (= temp1042_37 #x0000000000000003))
(assert (= temp1042_38 temp1042_37))
(assert (= temp1042_39 (select ARGNAME_padding_NAMEEND_VAL temp1042_38)))
(assert (= temp1042_40 #x0000000000000000))
(assert (= temp1042_41 #x0000000000000004))
(assert (= temp1042_42 temp1042_41))
(assert (= temp1042_43 (select ARGNAME_padding_NAMEEND_VAL temp1042_42)))
(assert (= temp1042_44 #x0000000000000000))
(assert (= temp1042_45 #x0000000000000005))
(assert (= temp1042_46 temp1042_45))
(assert (= temp1042_47 (select ARGNAME_padding_NAMEEND_VAL temp1042_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1042_27 temp1042_24)
             (bvslt temp1042_31 temp1042_28)
             (bvslt temp1042_35 temp1042_32)
             (bvslt temp1042_39 temp1042_36)
             (bvslt temp1042_43 temp1042_40)
             (bvslt temp1042_47 temp1042_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_48 #x0000000000000000))
(assert (= var1322786 temp1042_48))
(assert (= temp1042_49 #x0000000000000000))
(assert (= temp1042_50 temp1042_49))
(assert (= temp1042_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_50)))
(assert (= temp1042_52 #x0000000000000001))
(assert (= temp1042_53 temp1042_52))
(assert (= temp1042_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_53)))
(assert (= temp1042_55 #x0000000000000002))
(assert (= temp1042_56 temp1042_55))
(assert (= temp1042_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_56)))
(assert (= temp1042_58 #x0000000000000003))
(assert (= temp1042_59 temp1042_58))
(assert (= temp1042_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_59)))
(assert (= temp1042_61 #x0000000000000004))
(assert (= temp1042_62 temp1042_61))
(assert (= temp1042_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_62)))
(assert (= temp1042_64 #x0000000000000005))
(assert (= temp1042_65 temp1042_64))
(assert (= temp1042_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_65)))
(assert (= temp1042_67 #x0000000000000000))
(assert (= temp1042_68 #x0000000000000000))
(assert (= temp1042_69 temp1042_68))
(assert (= temp1042_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_69)))
(assert (= temp1042_71 #x0000000000000000))
(assert (= temp1042_72 #x0000000000000001))
(assert (= temp1042_73 temp1042_72))
(assert (= temp1042_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_73)))
(assert (= temp1042_75 #x0000000000000000))
(assert (= temp1042_76 #x0000000000000002))
(assert (= temp1042_77 temp1042_76))
(assert (= temp1042_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_77)))
(assert (= temp1042_79 #x0000000000000000))
(assert (= temp1042_80 #x0000000000000003))
(assert (= temp1042_81 temp1042_80))
(assert (= temp1042_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_81)))
(assert (= temp1042_83 #x0000000000000000))
(assert (= temp1042_84 #x0000000000000004))
(assert (= temp1042_85 temp1042_84))
(assert (= temp1042_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_85)))
(assert (= temp1042_87 #x0000000000000000))
(assert (= temp1042_88 #x0000000000000005))
(assert (= temp1042_89 temp1042_88))
(assert (= temp1042_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1042_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1042_70 temp1042_67)
             (bvslt temp1042_74 temp1042_71)
             (bvslt temp1042_78 temp1042_75)
             (bvslt temp1042_82 temp1042_79)
             (bvslt temp1042_86 temp1042_83)
             (bvslt temp1042_90 temp1042_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_91 #x0000000000000000))
(assert (= var1322797 temp1042_91))
(assert (= temp1042_92 #x0000000000000000))
(assert (= temp1042_93 temp1042_92))
(assert (= temp1042_94 (select ARGNAME_stride_NAMEEND_VAL temp1042_93)))
(assert (= temp1042_95 #x0000000000000001))
(assert (= temp1042_96 temp1042_95))
(assert (= temp1042_97 (select ARGNAME_stride_NAMEEND_VAL temp1042_96)))
(assert (= temp1042_98 #x0000000000000002))
(assert (= temp1042_99 temp1042_98))
(assert (= temp1042_100 (select ARGNAME_stride_NAMEEND_VAL temp1042_99)))
(assert (= temp1042_101 #x0000000000000003))
(assert (= temp1042_102 temp1042_101))
(assert (= temp1042_103 (select ARGNAME_stride_NAMEEND_VAL temp1042_102)))
(assert (= temp1042_104 #x0000000000000004))
(assert (= temp1042_105 temp1042_104))
(assert (= temp1042_106 (select ARGNAME_stride_NAMEEND_VAL temp1042_105)))
(assert (= temp1042_107 #x0000000000000005))
(assert (= temp1042_108 temp1042_107))
(assert (= temp1042_109 (select ARGNAME_stride_NAMEEND_VAL temp1042_108)))
(assert (= temp1042_110 #x0000000000000000))
(assert (= temp1042_111 #x0000000000000000))
(assert (= temp1042_112 temp1042_111))
(assert (= temp1042_113 (select ARGNAME_stride_NAMEEND_VAL temp1042_112)))
(assert (= temp1042_114 #x0000000000000000))
(assert (= temp1042_115 #x0000000000000001))
(assert (= temp1042_116 temp1042_115))
(assert (= temp1042_117 (select ARGNAME_stride_NAMEEND_VAL temp1042_116)))
(assert (= temp1042_118 #x0000000000000000))
(assert (= temp1042_119 #x0000000000000002))
(assert (= temp1042_120 temp1042_119))
(assert (= temp1042_121 (select ARGNAME_stride_NAMEEND_VAL temp1042_120)))
(assert (= temp1042_122 #x0000000000000000))
(assert (= temp1042_123 #x0000000000000003))
(assert (= temp1042_124 temp1042_123))
(assert (= temp1042_125 (select ARGNAME_stride_NAMEEND_VAL temp1042_124)))
(assert (= temp1042_126 #x0000000000000000))
(assert (= temp1042_127 #x0000000000000004))
(assert (= temp1042_128 temp1042_127))
(assert (= temp1042_129 (select ARGNAME_stride_NAMEEND_VAL temp1042_128)))
(assert (= temp1042_130 #x0000000000000000))
(assert (= temp1042_131 #x0000000000000005))
(assert (= temp1042_132 temp1042_131))
(assert (= temp1042_133 (select ARGNAME_stride_NAMEEND_VAL temp1042_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1042_113 temp1042_110)
             (bvsle temp1042_117 temp1042_114)
             (bvsle temp1042_121 temp1042_118)
             (bvsle temp1042_125 temp1042_122)
             (bvsle temp1042_129 temp1042_126)
             (bvsle temp1042_133 temp1042_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_134 #x0000000000000000))
(assert (= var1322807 temp1042_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_135 #x0000000000000001))
(assert (= var1322819 temp1042_135))
(assert (= temp1042_136 #x0000000000000000))
(assert (= var1310898 temp1042_136))
(assert (= temp1042_137 #x0000000000000000))
(assert (= temp1042_138 temp1042_137))
(assert (= temp1042_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_138)))
(assert (= temp1042_140 #x0000000000000001))
(assert (= temp1042_141 temp1042_140))
(assert (= temp1042_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_141)))
(assert (= temp1042_143 #x0000000000000002))
(assert (= temp1042_144 temp1042_143))
(assert (= temp1042_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_144)))
(assert (= temp1042_146 #x0000000000000003))
(assert (= temp1042_147 temp1042_146))
(assert (= temp1042_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_147)))
(assert (= temp1042_149 #x0000000000000004))
(assert (= temp1042_150 temp1042_149))
(assert (= temp1042_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_150)))
(assert (= temp1042_152 #x0000000000000005))
(assert (= temp1042_153 temp1042_152))
(assert (= temp1042_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_153)))
(assert (= temp1042_156 var1310898))
(assert (= temp1042_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_156)))
(assert (= temp1042_155 temp1042_157))
(assert (= var1322852
   (ite (bvslt temp1042_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_158 #x0000000000000000))
(assert (= var1322852 temp1042_158))
(assert (= temp1042_159 #x0000000000000000))
(assert (= var1310898 temp1042_159))
(assert (= temp1042_161 var1310898))
(assert (= temp1042_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_161)))
(assert (= temp1042_160 temp1042_162))
(assert (= var1322874 (bvsmod temp1042_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1042_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1042_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_164 #x0000000000000001))
(assert (= var1322875 temp1042_164))
(assert (= temp1042_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1042_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_166 #x0000000000000001))
(assert (= var1322895 temp1042_166))
(assert (= temp1042_167 #x0000000000000001))
(assert (= var1311786 temp1042_167))
(assert (= temp1042_168 #x0000000000000000))
(assert (= temp1042_169 temp1042_168))
(assert (= temp1042_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_169)))
(assert (= temp1042_171 #x0000000000000001))
(assert (= temp1042_172 temp1042_171))
(assert (= temp1042_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_172)))
(assert (= temp1042_174 #x0000000000000002))
(assert (= temp1042_175 temp1042_174))
(assert (= temp1042_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_175)))
(assert (= temp1042_177 #x0000000000000003))
(assert (= temp1042_178 temp1042_177))
(assert (= temp1042_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_178)))
(assert (= temp1042_180 #x0000000000000004))
(assert (= temp1042_181 temp1042_180))
(assert (= temp1042_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_181)))
(assert (= temp1042_183 #x0000000000000005))
(assert (= temp1042_184 temp1042_183))
(assert (= temp1042_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_184)))
(assert (= temp1042_186 #x0000000000000000))
(assert (= temp1042_187
   (ite (bvslt var1311786 temp1042_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1042_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_187)))
(assert (= var1322903 temp1042_188))
(assert (bvslt (ite (bvslt var1311786 temp1042_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1042_189 #x0000000000000001))
(assert (= var1311786 temp1042_189))
(assert (= temp1042_191 var1311786))
(assert (= temp1042_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_191)))
(assert (= temp1042_190 temp1042_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1042_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_193 #x0000000000000001))
(assert (= var1322908 temp1042_193))
(assert (= temp1042_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1042_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_195 #x0000000000000001))
(assert (= var1322975 temp1042_195))
(assert (= temp1042_196 #x0000000000000000))
(assert (= var1310898 temp1042_196))
(assert (= temp1042_197 #x0000000000000000))
(assert (= temp1042_198 temp1042_197))
(assert (= temp1042_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1042_198)))
(assert (= temp1042_200 #x0000000000000001))
(assert (= temp1042_201 temp1042_200))
(assert (= temp1042_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1042_201)))
(assert (= temp1042_203 #x0000000000000002))
(assert (= temp1042_204 temp1042_203))
(assert (= temp1042_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1042_204)))
(assert (= temp1042_206 #x0000000000000003))
(assert (= temp1042_207 temp1042_206))
(assert (= temp1042_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1042_207)))
(assert (= temp1042_209 #x0000000000000004))
(assert (= temp1042_210 temp1042_209))
(assert (= temp1042_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1042_210)))
(assert (= temp1042_212 #x0000000000000005))
(assert (= temp1042_213 temp1042_212))
(assert (= temp1042_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1042_213)))
(assert (= temp1042_215 #x0000000000000000))
(assert (= temp1042_216
   (ite (bvslt var1310898 temp1042_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1042_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1042_216)))
(assert (= var1322977 temp1042_217))
(assert (bvslt (ite (bvslt var1310898 temp1042_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1042_218 #x0000000000000000))
(assert (= var1310898 temp1042_218))
(assert (= temp1042_220 var1310898))
(assert (= temp1042_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1042_220)))
(assert (= temp1042_219 temp1042_221))
(assert (= var1322980
   (ite (= var1322977 temp1042_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_222 #x0000000000000001))
(assert (= var1322980 temp1042_222))
(assert (= temp1042_223 #x0000000000000002))
(assert (= var1848169 temp1042_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1042_225 #x0000000000000001))
(assert (= var1323065 temp1042_225))
(assert (= temp1042_226 #x0000000000000001))
(assert (= var3486735 temp1042_226))
(assert (= temp1042_227 #x0000000000000001))
(assert (= var3814415 temp1042_227))
(assert (= temp1042_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1042_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_229 #x0000000000000001))
(assert (= var79986 temp1042_229))
(assert (= temp1042_230 #x0000000000000001))
(assert (= var80116 temp1042_230))
(assert (= var4796905 var80116))
(assert (= temp1042_231 #x0000000000000000))
(assert (= var4784306 temp1042_231))
(assert (= temp1042_232 #x0000000000000000))
(assert (= temp1042_233
   (ite (bvslt var4784306 temp1042_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1042_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_233)))
(assert (= var4796924 temp1042_234))
(assert (bvslt (ite (bvslt var4784306 temp1042_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1042_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1042_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_236 #x0000000000000001))
(assert (= var4796925 temp1042_236))
(assert (= temp1042_237 #x0000000000000000))
(assert (= var4996927 temp1042_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1042_238 #x0000000000000002))
(assert (= var5125763 temp1042_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_239 #x0000000000000000))
(assert (= var5191324 temp1042_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1042_240 #x0000000000000001))
(assert (= var79986 temp1042_240))
(model-add temp1042_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1042_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1042_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






