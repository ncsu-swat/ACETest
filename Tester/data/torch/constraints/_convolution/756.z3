(declare-fun temp1005_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1005_2 () (_ BitVec 64))
(declare-fun temp1005_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1005_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1005_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1005_6 () (_ BitVec 64))
(declare-fun temp1005_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_8 () (_ BitVec 64))
(declare-fun temp1005_9 () (_ BitVec 64))
(declare-fun temp1005_10 () (_ BitVec 64))
(declare-fun temp1005_11 () (_ BitVec 64))
(declare-fun temp1005_12 () (_ BitVec 64))
(declare-fun temp1005_13 () (_ BitVec 64))
(declare-fun temp1005_14 () (_ BitVec 64))
(declare-fun temp1005_15 () (_ BitVec 64))
(declare-fun temp1005_16 () (_ BitVec 64))
(declare-fun temp1005_17 () (_ BitVec 64))
(declare-fun temp1005_18 () (_ BitVec 64))
(declare-fun temp1005_19 () (_ BitVec 64))
(declare-fun temp1005_20 () (_ BitVec 64))
(declare-fun temp1005_21 () (_ BitVec 64))
(declare-fun temp1005_22 () (_ BitVec 64))
(declare-fun temp1005_23 () (_ BitVec 64))
(declare-fun temp1005_24 () (_ BitVec 64))
(declare-fun temp1005_25 () (_ BitVec 64))
(declare-fun temp1005_26 () (_ BitVec 64))
(declare-fun temp1005_27 () (_ BitVec 64))
(declare-fun temp1005_28 () (_ BitVec 64))
(declare-fun temp1005_29 () (_ BitVec 64))
(declare-fun temp1005_30 () (_ BitVec 64))
(declare-fun temp1005_31 () (_ BitVec 64))
(declare-fun temp1005_32 () (_ BitVec 64))
(declare-fun temp1005_33 () (_ BitVec 64))
(declare-fun temp1005_34 () (_ BitVec 64))
(declare-fun temp1005_35 () (_ BitVec 64))
(declare-fun temp1005_36 () (_ BitVec 64))
(declare-fun temp1005_37 () (_ BitVec 64))
(declare-fun temp1005_38 () (_ BitVec 64))
(declare-fun temp1005_39 () (_ BitVec 64))
(declare-fun temp1005_40 () (_ BitVec 64))
(declare-fun temp1005_41 () (_ BitVec 64))
(declare-fun temp1005_42 () (_ BitVec 64))
(declare-fun temp1005_43 () (_ BitVec 64))
(declare-fun temp1005_44 () (_ BitVec 64))
(declare-fun temp1005_45 () (_ BitVec 64))
(declare-fun temp1005_46 () (_ BitVec 64))
(declare-fun temp1005_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1005_48 () (_ BitVec 64))
(declare-fun temp1005_49 () (_ BitVec 64))
(declare-fun temp1005_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_51 () (_ BitVec 64))
(declare-fun temp1005_52 () (_ BitVec 64))
(declare-fun temp1005_53 () (_ BitVec 64))
(declare-fun temp1005_54 () (_ BitVec 64))
(declare-fun temp1005_55 () (_ BitVec 64))
(declare-fun temp1005_56 () (_ BitVec 64))
(declare-fun temp1005_57 () (_ BitVec 64))
(declare-fun temp1005_58 () (_ BitVec 64))
(declare-fun temp1005_59 () (_ BitVec 64))
(declare-fun temp1005_60 () (_ BitVec 64))
(declare-fun temp1005_61 () (_ BitVec 64))
(declare-fun temp1005_62 () (_ BitVec 64))
(declare-fun temp1005_63 () (_ BitVec 64))
(declare-fun temp1005_64 () (_ BitVec 64))
(declare-fun temp1005_65 () (_ BitVec 64))
(declare-fun temp1005_66 () (_ BitVec 64))
(declare-fun temp1005_67 () (_ BitVec 64))
(declare-fun temp1005_68 () (_ BitVec 64))
(declare-fun temp1005_69 () (_ BitVec 64))
(declare-fun temp1005_70 () (_ BitVec 64))
(declare-fun temp1005_71 () (_ BitVec 64))
(declare-fun temp1005_72 () (_ BitVec 64))
(declare-fun temp1005_73 () (_ BitVec 64))
(declare-fun temp1005_74 () (_ BitVec 64))
(declare-fun temp1005_75 () (_ BitVec 64))
(declare-fun temp1005_76 () (_ BitVec 64))
(declare-fun temp1005_77 () (_ BitVec 64))
(declare-fun temp1005_78 () (_ BitVec 64))
(declare-fun temp1005_79 () (_ BitVec 64))
(declare-fun temp1005_80 () (_ BitVec 64))
(declare-fun temp1005_81 () (_ BitVec 64))
(declare-fun temp1005_82 () (_ BitVec 64))
(declare-fun temp1005_83 () (_ BitVec 64))
(declare-fun temp1005_84 () (_ BitVec 64))
(declare-fun temp1005_85 () (_ BitVec 64))
(declare-fun temp1005_86 () (_ BitVec 64))
(declare-fun temp1005_87 () (_ BitVec 64))
(declare-fun temp1005_88 () (_ BitVec 64))
(declare-fun temp1005_89 () (_ BitVec 64))
(declare-fun temp1005_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1005_91 () (_ BitVec 64))
(declare-fun temp1005_92 () (_ BitVec 64))
(declare-fun temp1005_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_94 () (_ BitVec 64))
(declare-fun temp1005_95 () (_ BitVec 64))
(declare-fun temp1005_96 () (_ BitVec 64))
(declare-fun temp1005_97 () (_ BitVec 64))
(declare-fun temp1005_98 () (_ BitVec 64))
(declare-fun temp1005_99 () (_ BitVec 64))
(declare-fun temp1005_100 () (_ BitVec 64))
(declare-fun temp1005_101 () (_ BitVec 64))
(declare-fun temp1005_102 () (_ BitVec 64))
(declare-fun temp1005_103 () (_ BitVec 64))
(declare-fun temp1005_104 () (_ BitVec 64))
(declare-fun temp1005_105 () (_ BitVec 64))
(declare-fun temp1005_106 () (_ BitVec 64))
(declare-fun temp1005_107 () (_ BitVec 64))
(declare-fun temp1005_108 () (_ BitVec 64))
(declare-fun temp1005_109 () (_ BitVec 64))
(declare-fun temp1005_110 () (_ BitVec 64))
(declare-fun temp1005_111 () (_ BitVec 64))
(declare-fun temp1005_112 () (_ BitVec 64))
(declare-fun temp1005_113 () (_ BitVec 64))
(declare-fun temp1005_114 () (_ BitVec 64))
(declare-fun temp1005_115 () (_ BitVec 64))
(declare-fun temp1005_116 () (_ BitVec 64))
(declare-fun temp1005_117 () (_ BitVec 64))
(declare-fun temp1005_118 () (_ BitVec 64))
(declare-fun temp1005_119 () (_ BitVec 64))
(declare-fun temp1005_120 () (_ BitVec 64))
(declare-fun temp1005_121 () (_ BitVec 64))
(declare-fun temp1005_122 () (_ BitVec 64))
(declare-fun temp1005_123 () (_ BitVec 64))
(declare-fun temp1005_124 () (_ BitVec 64))
(declare-fun temp1005_125 () (_ BitVec 64))
(declare-fun temp1005_126 () (_ BitVec 64))
(declare-fun temp1005_127 () (_ BitVec 64))
(declare-fun temp1005_128 () (_ BitVec 64))
(declare-fun temp1005_129 () (_ BitVec 64))
(declare-fun temp1005_130 () (_ BitVec 64))
(declare-fun temp1005_131 () (_ BitVec 64))
(declare-fun temp1005_132 () (_ BitVec 64))
(declare-fun temp1005_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1005_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1005_135 () (_ BitVec 64))
(declare-fun temp1005_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1005_137 () (_ BitVec 64))
(declare-fun temp1005_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_139 () (_ BitVec 64))
(declare-fun temp1005_140 () (_ BitVec 64))
(declare-fun temp1005_141 () (_ BitVec 64))
(declare-fun temp1005_142 () (_ BitVec 64))
(declare-fun temp1005_143 () (_ BitVec 64))
(declare-fun temp1005_144 () (_ BitVec 64))
(declare-fun temp1005_145 () (_ BitVec 64))
(declare-fun temp1005_146 () (_ BitVec 64))
(declare-fun temp1005_147 () (_ BitVec 64))
(declare-fun temp1005_148 () (_ BitVec 64))
(declare-fun temp1005_149 () (_ BitVec 64))
(declare-fun temp1005_150 () (_ BitVec 64))
(declare-fun temp1005_151 () (_ BitVec 64))
(declare-fun temp1005_152 () (_ BitVec 64))
(declare-fun temp1005_153 () (_ BitVec 64))
(declare-fun temp1005_154 () (_ BitVec 64))
(declare-fun temp1005_156 () (_ BitVec 64))
(declare-fun temp1005_157 () (_ BitVec 64))
(declare-fun temp1005_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1005_158 () (_ BitVec 64))
(declare-fun temp1005_159 () (_ BitVec 64))
(declare-fun temp1005_161 () (_ BitVec 64))
(declare-fun temp1005_162 () (_ BitVec 64))
(declare-fun temp1005_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1005_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1005_164 () (_ BitVec 64))
(declare-fun temp1005_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1005_166 () (_ BitVec 64))
(declare-fun temp1005_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1005_168 () (_ BitVec 64))
(declare-fun temp1005_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_170 () (_ BitVec 64))
(declare-fun temp1005_171 () (_ BitVec 64))
(declare-fun temp1005_172 () (_ BitVec 64))
(declare-fun temp1005_173 () (_ BitVec 64))
(declare-fun temp1005_174 () (_ BitVec 64))
(declare-fun temp1005_175 () (_ BitVec 64))
(declare-fun temp1005_176 () (_ BitVec 64))
(declare-fun temp1005_177 () (_ BitVec 64))
(declare-fun temp1005_178 () (_ BitVec 64))
(declare-fun temp1005_179 () (_ BitVec 64))
(declare-fun temp1005_180 () (_ BitVec 64))
(declare-fun temp1005_181 () (_ BitVec 64))
(declare-fun temp1005_182 () (_ BitVec 64))
(declare-fun temp1005_183 () (_ BitVec 64))
(declare-fun temp1005_184 () (_ BitVec 64))
(declare-fun temp1005_185 () (_ BitVec 64))
(declare-fun temp1005_186 () (_ BitVec 64))
(declare-fun temp1005_187 () (_ BitVec 64))
(declare-fun temp1005_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1005_189 () (_ BitVec 64))
(declare-fun temp1005_191 () (_ BitVec 64))
(declare-fun temp1005_192 () (_ BitVec 64))
(declare-fun temp1005_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1005_193 () (_ BitVec 64))
(declare-fun temp1005_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1005_195 () (_ BitVec 64))
(declare-fun temp1005_196 () (_ BitVec 64))
(declare-fun temp1005_197 () (_ BitVec 64))
(declare-fun temp1005_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_199 () (_ BitVec 64))
(declare-fun temp1005_200 () (_ BitVec 64))
(declare-fun temp1005_201 () (_ BitVec 64))
(declare-fun temp1005_202 () (_ BitVec 64))
(declare-fun temp1005_203 () (_ BitVec 64))
(declare-fun temp1005_204 () (_ BitVec 64))
(declare-fun temp1005_205 () (_ BitVec 64))
(declare-fun temp1005_206 () (_ BitVec 64))
(declare-fun temp1005_207 () (_ BitVec 64))
(declare-fun temp1005_208 () (_ BitVec 64))
(declare-fun temp1005_209 () (_ BitVec 64))
(declare-fun temp1005_210 () (_ BitVec 64))
(declare-fun temp1005_211 () (_ BitVec 64))
(declare-fun temp1005_212 () (_ BitVec 64))
(declare-fun temp1005_213 () (_ BitVec 64))
(declare-fun temp1005_214 () (_ BitVec 64))
(declare-fun temp1005_215 () (_ BitVec 64))
(declare-fun temp1005_216 () (_ BitVec 64))
(declare-fun temp1005_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1005_218 () (_ BitVec 64))
(declare-fun temp1005_220 () (_ BitVec 64))
(declare-fun temp1005_221 () (_ BitVec 64))
(declare-fun temp1005_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1005_222 () (_ BitVec 64))
(declare-fun temp1005_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1005_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1005_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1005_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1005_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1005_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1005_229 () (_ BitVec 64))
(declare-fun temp1005_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1005_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1005_232 () (_ BitVec 64))
(declare-fun temp1005_233 () (_ BitVec 64))
(declare-fun temp1005_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1005_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1005_236 () (_ BitVec 64))
(declare-fun temp1005_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1005_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1005_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp1005_240 () (_ BitVec 64))
(declare-fun var6631824 () (_ BitVec 64))
(declare-fun temp1005_241 () (_ BitVec 64))
(assert (= temp1005_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1005_1)))
(assert (= temp1005_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1005_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_3 #x0000000000000000))
(assert (= var79869 temp1005_3))
(assert (= temp1005_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1005_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_5 #x0000000000000000))
(assert (= var79914 temp1005_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1005_6 #x0000000000000000))
(assert (= temp1005_7 temp1005_6))
(assert (= temp1005_8 (select ARGNAME_padding_NAMEEND_VAL temp1005_7)))
(assert (= temp1005_9 #x0000000000000001))
(assert (= temp1005_10 temp1005_9))
(assert (= temp1005_11 (select ARGNAME_padding_NAMEEND_VAL temp1005_10)))
(assert (= temp1005_12 #x0000000000000002))
(assert (= temp1005_13 temp1005_12))
(assert (= temp1005_14 (select ARGNAME_padding_NAMEEND_VAL temp1005_13)))
(assert (= temp1005_15 #x0000000000000003))
(assert (= temp1005_16 temp1005_15))
(assert (= temp1005_17 (select ARGNAME_padding_NAMEEND_VAL temp1005_16)))
(assert (= temp1005_18 #x0000000000000004))
(assert (= temp1005_19 temp1005_18))
(assert (= temp1005_20 (select ARGNAME_padding_NAMEEND_VAL temp1005_19)))
(assert (= temp1005_21 #x0000000000000005))
(assert (= temp1005_22 temp1005_21))
(assert (= temp1005_23 (select ARGNAME_padding_NAMEEND_VAL temp1005_22)))
(assert (= temp1005_24 #x0000000000000000))
(assert (= temp1005_25 #x0000000000000000))
(assert (= temp1005_26 temp1005_25))
(assert (= temp1005_27 (select ARGNAME_padding_NAMEEND_VAL temp1005_26)))
(assert (= temp1005_28 #x0000000000000000))
(assert (= temp1005_29 #x0000000000000001))
(assert (= temp1005_30 temp1005_29))
(assert (= temp1005_31 (select ARGNAME_padding_NAMEEND_VAL temp1005_30)))
(assert (= temp1005_32 #x0000000000000000))
(assert (= temp1005_33 #x0000000000000002))
(assert (= temp1005_34 temp1005_33))
(assert (= temp1005_35 (select ARGNAME_padding_NAMEEND_VAL temp1005_34)))
(assert (= temp1005_36 #x0000000000000000))
(assert (= temp1005_37 #x0000000000000003))
(assert (= temp1005_38 temp1005_37))
(assert (= temp1005_39 (select ARGNAME_padding_NAMEEND_VAL temp1005_38)))
(assert (= temp1005_40 #x0000000000000000))
(assert (= temp1005_41 #x0000000000000004))
(assert (= temp1005_42 temp1005_41))
(assert (= temp1005_43 (select ARGNAME_padding_NAMEEND_VAL temp1005_42)))
(assert (= temp1005_44 #x0000000000000000))
(assert (= temp1005_45 #x0000000000000005))
(assert (= temp1005_46 temp1005_45))
(assert (= temp1005_47 (select ARGNAME_padding_NAMEEND_VAL temp1005_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1005_27 temp1005_24)
             (bvslt temp1005_31 temp1005_28)
             (bvslt temp1005_35 temp1005_32)
             (bvslt temp1005_39 temp1005_36)
             (bvslt temp1005_43 temp1005_40)
             (bvslt temp1005_47 temp1005_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_48 #x0000000000000000))
(assert (= var1322786 temp1005_48))
(assert (= temp1005_49 #x0000000000000000))
(assert (= temp1005_50 temp1005_49))
(assert (= temp1005_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_50)))
(assert (= temp1005_52 #x0000000000000001))
(assert (= temp1005_53 temp1005_52))
(assert (= temp1005_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_53)))
(assert (= temp1005_55 #x0000000000000002))
(assert (= temp1005_56 temp1005_55))
(assert (= temp1005_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_56)))
(assert (= temp1005_58 #x0000000000000003))
(assert (= temp1005_59 temp1005_58))
(assert (= temp1005_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_59)))
(assert (= temp1005_61 #x0000000000000004))
(assert (= temp1005_62 temp1005_61))
(assert (= temp1005_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_62)))
(assert (= temp1005_64 #x0000000000000005))
(assert (= temp1005_65 temp1005_64))
(assert (= temp1005_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_65)))
(assert (= temp1005_67 #x0000000000000000))
(assert (= temp1005_68 #x0000000000000000))
(assert (= temp1005_69 temp1005_68))
(assert (= temp1005_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_69)))
(assert (= temp1005_71 #x0000000000000000))
(assert (= temp1005_72 #x0000000000000001))
(assert (= temp1005_73 temp1005_72))
(assert (= temp1005_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_73)))
(assert (= temp1005_75 #x0000000000000000))
(assert (= temp1005_76 #x0000000000000002))
(assert (= temp1005_77 temp1005_76))
(assert (= temp1005_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_77)))
(assert (= temp1005_79 #x0000000000000000))
(assert (= temp1005_80 #x0000000000000003))
(assert (= temp1005_81 temp1005_80))
(assert (= temp1005_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_81)))
(assert (= temp1005_83 #x0000000000000000))
(assert (= temp1005_84 #x0000000000000004))
(assert (= temp1005_85 temp1005_84))
(assert (= temp1005_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_85)))
(assert (= temp1005_87 #x0000000000000000))
(assert (= temp1005_88 #x0000000000000005))
(assert (= temp1005_89 temp1005_88))
(assert (= temp1005_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1005_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1005_70 temp1005_67)
             (bvslt temp1005_74 temp1005_71)
             (bvslt temp1005_78 temp1005_75)
             (bvslt temp1005_82 temp1005_79)
             (bvslt temp1005_86 temp1005_83)
             (bvslt temp1005_90 temp1005_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_91 #x0000000000000000))
(assert (= var1322797 temp1005_91))
(assert (= temp1005_92 #x0000000000000000))
(assert (= temp1005_93 temp1005_92))
(assert (= temp1005_94 (select ARGNAME_stride_NAMEEND_VAL temp1005_93)))
(assert (= temp1005_95 #x0000000000000001))
(assert (= temp1005_96 temp1005_95))
(assert (= temp1005_97 (select ARGNAME_stride_NAMEEND_VAL temp1005_96)))
(assert (= temp1005_98 #x0000000000000002))
(assert (= temp1005_99 temp1005_98))
(assert (= temp1005_100 (select ARGNAME_stride_NAMEEND_VAL temp1005_99)))
(assert (= temp1005_101 #x0000000000000003))
(assert (= temp1005_102 temp1005_101))
(assert (= temp1005_103 (select ARGNAME_stride_NAMEEND_VAL temp1005_102)))
(assert (= temp1005_104 #x0000000000000004))
(assert (= temp1005_105 temp1005_104))
(assert (= temp1005_106 (select ARGNAME_stride_NAMEEND_VAL temp1005_105)))
(assert (= temp1005_107 #x0000000000000005))
(assert (= temp1005_108 temp1005_107))
(assert (= temp1005_109 (select ARGNAME_stride_NAMEEND_VAL temp1005_108)))
(assert (= temp1005_110 #x0000000000000000))
(assert (= temp1005_111 #x0000000000000000))
(assert (= temp1005_112 temp1005_111))
(assert (= temp1005_113 (select ARGNAME_stride_NAMEEND_VAL temp1005_112)))
(assert (= temp1005_114 #x0000000000000000))
(assert (= temp1005_115 #x0000000000000001))
(assert (= temp1005_116 temp1005_115))
(assert (= temp1005_117 (select ARGNAME_stride_NAMEEND_VAL temp1005_116)))
(assert (= temp1005_118 #x0000000000000000))
(assert (= temp1005_119 #x0000000000000002))
(assert (= temp1005_120 temp1005_119))
(assert (= temp1005_121 (select ARGNAME_stride_NAMEEND_VAL temp1005_120)))
(assert (= temp1005_122 #x0000000000000000))
(assert (= temp1005_123 #x0000000000000003))
(assert (= temp1005_124 temp1005_123))
(assert (= temp1005_125 (select ARGNAME_stride_NAMEEND_VAL temp1005_124)))
(assert (= temp1005_126 #x0000000000000000))
(assert (= temp1005_127 #x0000000000000004))
(assert (= temp1005_128 temp1005_127))
(assert (= temp1005_129 (select ARGNAME_stride_NAMEEND_VAL temp1005_128)))
(assert (= temp1005_130 #x0000000000000000))
(assert (= temp1005_131 #x0000000000000005))
(assert (= temp1005_132 temp1005_131))
(assert (= temp1005_133 (select ARGNAME_stride_NAMEEND_VAL temp1005_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1005_113 temp1005_110)
             (bvsle temp1005_117 temp1005_114)
             (bvsle temp1005_121 temp1005_118)
             (bvsle temp1005_125 temp1005_122)
             (bvsle temp1005_129 temp1005_126)
             (bvsle temp1005_133 temp1005_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_134 #x0000000000000000))
(assert (= var1322807 temp1005_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_135 #x0000000000000001))
(assert (= var1322819 temp1005_135))
(assert (= temp1005_136 #x0000000000000000))
(assert (= var1310898 temp1005_136))
(assert (= temp1005_137 #x0000000000000000))
(assert (= temp1005_138 temp1005_137))
(assert (= temp1005_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_138)))
(assert (= temp1005_140 #x0000000000000001))
(assert (= temp1005_141 temp1005_140))
(assert (= temp1005_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_141)))
(assert (= temp1005_143 #x0000000000000002))
(assert (= temp1005_144 temp1005_143))
(assert (= temp1005_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_144)))
(assert (= temp1005_146 #x0000000000000003))
(assert (= temp1005_147 temp1005_146))
(assert (= temp1005_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_147)))
(assert (= temp1005_149 #x0000000000000004))
(assert (= temp1005_150 temp1005_149))
(assert (= temp1005_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_150)))
(assert (= temp1005_152 #x0000000000000005))
(assert (= temp1005_153 temp1005_152))
(assert (= temp1005_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_153)))
(assert (= temp1005_156 var1310898))
(assert (= temp1005_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_156)))
(assert (= temp1005_155 temp1005_157))
(assert (= var1322852
   (ite (bvslt temp1005_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_158 #x0000000000000000))
(assert (= var1322852 temp1005_158))
(assert (= temp1005_159 #x0000000000000000))
(assert (= var1310898 temp1005_159))
(assert (= temp1005_161 var1310898))
(assert (= temp1005_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_161)))
(assert (= temp1005_160 temp1005_162))
(assert (= var1322874 (bvsmod temp1005_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1005_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1005_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_164 #x0000000000000001))
(assert (= var1322875 temp1005_164))
(assert (= temp1005_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1005_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_166 #x0000000000000001))
(assert (= var1322895 temp1005_166))
(assert (= temp1005_167 #x0000000000000001))
(assert (= var1311786 temp1005_167))
(assert (= temp1005_168 #x0000000000000000))
(assert (= temp1005_169 temp1005_168))
(assert (= temp1005_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1005_169)))
(assert (= temp1005_171 #x0000000000000001))
(assert (= temp1005_172 temp1005_171))
(assert (= temp1005_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1005_172)))
(assert (= temp1005_174 #x0000000000000002))
(assert (= temp1005_175 temp1005_174))
(assert (= temp1005_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1005_175)))
(assert (= temp1005_177 #x0000000000000003))
(assert (= temp1005_178 temp1005_177))
(assert (= temp1005_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1005_178)))
(assert (= temp1005_180 #x0000000000000004))
(assert (= temp1005_181 temp1005_180))
(assert (= temp1005_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1005_181)))
(assert (= temp1005_183 #x0000000000000005))
(assert (= temp1005_184 temp1005_183))
(assert (= temp1005_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1005_184)))
(assert (= temp1005_186 #x0000000000000000))
(assert (= temp1005_187
   (ite (bvslt var1311786 temp1005_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1005_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1005_187)))
(assert (= var1322903 temp1005_188))
(assert (bvslt (ite (bvslt var1311786 temp1005_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1005_189 #x0000000000000001))
(assert (= var1311786 temp1005_189))
(assert (= temp1005_191 var1311786))
(assert (= temp1005_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_191)))
(assert (= temp1005_190 temp1005_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1005_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_193 #x0000000000000001))
(assert (= var1322908 temp1005_193))
(assert (= temp1005_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1005_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_195 #x0000000000000001))
(assert (= var1322975 temp1005_195))
(assert (= temp1005_196 #x0000000000000000))
(assert (= var1310898 temp1005_196))
(assert (= temp1005_197 #x0000000000000000))
(assert (= temp1005_198 temp1005_197))
(assert (= temp1005_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1005_198)))
(assert (= temp1005_200 #x0000000000000001))
(assert (= temp1005_201 temp1005_200))
(assert (= temp1005_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1005_201)))
(assert (= temp1005_203 #x0000000000000002))
(assert (= temp1005_204 temp1005_203))
(assert (= temp1005_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1005_204)))
(assert (= temp1005_206 #x0000000000000003))
(assert (= temp1005_207 temp1005_206))
(assert (= temp1005_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1005_207)))
(assert (= temp1005_209 #x0000000000000004))
(assert (= temp1005_210 temp1005_209))
(assert (= temp1005_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1005_210)))
(assert (= temp1005_212 #x0000000000000005))
(assert (= temp1005_213 temp1005_212))
(assert (= temp1005_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1005_213)))
(assert (= temp1005_215 #x0000000000000000))
(assert (= temp1005_216
   (ite (bvslt var1310898 temp1005_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1005_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1005_216)))
(assert (= var1322977 temp1005_217))
(assert (bvslt (ite (bvslt var1310898 temp1005_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1005_218 #x0000000000000000))
(assert (= var1310898 temp1005_218))
(assert (= temp1005_220 var1310898))
(assert (= temp1005_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_220)))
(assert (= temp1005_219 temp1005_221))
(assert (= var1322980
   (ite (= var1322977 temp1005_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_222 #x0000000000000001))
(assert (= var1322980 temp1005_222))
(assert (= temp1005_223 #x0000000000000002))
(assert (= var1848169 temp1005_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1005_225 #x0000000000000001))
(assert (= var1323065 temp1005_225))
(assert (= temp1005_226 #x0000000000000001))
(assert (= var3486735 temp1005_226))
(assert (= temp1005_227 #x0000000000000001))
(assert (= var3814415 temp1005_227))
(assert (= temp1005_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1005_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_229 #x0000000000000001))
(assert (= var79986 temp1005_229))
(assert (= temp1005_230 #x0000000000000001))
(assert (= var80116 temp1005_230))
(assert (= var4796905 var80116))
(assert (= temp1005_231 #x0000000000000000))
(assert (= var4784306 temp1005_231))
(assert (= temp1005_232 #x0000000000000000))
(assert (= temp1005_233
   (ite (bvslt var4784306 temp1005_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1005_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1005_233)))
(assert (= var4796924 temp1005_234))
(assert (bvslt (ite (bvslt var4784306 temp1005_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1005_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1005_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_236 #x0000000000000001))
(assert (= var4796925 temp1005_236))
(assert (= temp1005_237 #x0000000000000000))
(assert (= var4996927 temp1005_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1005_238 #x0000000000000002))
(assert (= var5125763 temp1005_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_239 #x0000000000000000))
(assert (= var5191324 temp1005_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6042000 var80129))
(assert (= var6304144 var80129))
(assert (= temp1005_240 #x0000000000000000))
(assert (= var6631824 temp1005_240))
(assert (= temp1005_241 #x0000000000000001))
(assert (= var79986 temp1005_241))
(model-add temp1005_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1005_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1005_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






