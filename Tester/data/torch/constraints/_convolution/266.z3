(declare-fun temp353_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp353_2 () (_ BitVec 64))
(declare-fun temp353_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp353_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp353_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp353_6 () (_ BitVec 64))
(declare-fun temp353_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_8 () (_ BitVec 64))
(declare-fun temp353_9 () (_ BitVec 64))
(declare-fun temp353_10 () (_ BitVec 64))
(declare-fun temp353_11 () (_ BitVec 64))
(declare-fun temp353_12 () (_ BitVec 64))
(declare-fun temp353_13 () (_ BitVec 64))
(declare-fun temp353_14 () (_ BitVec 64))
(declare-fun temp353_15 () (_ BitVec 64))
(declare-fun temp353_16 () (_ BitVec 64))
(declare-fun temp353_17 () (_ BitVec 64))
(declare-fun temp353_18 () (_ BitVec 64))
(declare-fun temp353_19 () (_ BitVec 64))
(declare-fun temp353_20 () (_ BitVec 64))
(declare-fun temp353_21 () (_ BitVec 64))
(declare-fun temp353_22 () (_ BitVec 64))
(declare-fun temp353_23 () (_ BitVec 64))
(declare-fun temp353_24 () (_ BitVec 64))
(declare-fun temp353_25 () (_ BitVec 64))
(declare-fun temp353_26 () (_ BitVec 64))
(declare-fun temp353_27 () (_ BitVec 64))
(declare-fun temp353_28 () (_ BitVec 64))
(declare-fun temp353_29 () (_ BitVec 64))
(declare-fun temp353_30 () (_ BitVec 64))
(declare-fun temp353_31 () (_ BitVec 64))
(declare-fun temp353_32 () (_ BitVec 64))
(declare-fun temp353_33 () (_ BitVec 64))
(declare-fun temp353_34 () (_ BitVec 64))
(declare-fun temp353_35 () (_ BitVec 64))
(declare-fun temp353_36 () (_ BitVec 64))
(declare-fun temp353_37 () (_ BitVec 64))
(declare-fun temp353_38 () (_ BitVec 64))
(declare-fun temp353_39 () (_ BitVec 64))
(declare-fun temp353_40 () (_ BitVec 64))
(declare-fun temp353_41 () (_ BitVec 64))
(declare-fun temp353_42 () (_ BitVec 64))
(declare-fun temp353_43 () (_ BitVec 64))
(declare-fun temp353_44 () (_ BitVec 64))
(declare-fun temp353_45 () (_ BitVec 64))
(declare-fun temp353_46 () (_ BitVec 64))
(declare-fun temp353_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp353_48 () (_ BitVec 64))
(declare-fun temp353_49 () (_ BitVec 64))
(declare-fun temp353_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_51 () (_ BitVec 64))
(declare-fun temp353_52 () (_ BitVec 64))
(declare-fun temp353_53 () (_ BitVec 64))
(declare-fun temp353_54 () (_ BitVec 64))
(declare-fun temp353_55 () (_ BitVec 64))
(declare-fun temp353_56 () (_ BitVec 64))
(declare-fun temp353_57 () (_ BitVec 64))
(declare-fun temp353_58 () (_ BitVec 64))
(declare-fun temp353_59 () (_ BitVec 64))
(declare-fun temp353_60 () (_ BitVec 64))
(declare-fun temp353_61 () (_ BitVec 64))
(declare-fun temp353_62 () (_ BitVec 64))
(declare-fun temp353_63 () (_ BitVec 64))
(declare-fun temp353_64 () (_ BitVec 64))
(declare-fun temp353_65 () (_ BitVec 64))
(declare-fun temp353_66 () (_ BitVec 64))
(declare-fun temp353_67 () (_ BitVec 64))
(declare-fun temp353_68 () (_ BitVec 64))
(declare-fun temp353_69 () (_ BitVec 64))
(declare-fun temp353_70 () (_ BitVec 64))
(declare-fun temp353_71 () (_ BitVec 64))
(declare-fun temp353_72 () (_ BitVec 64))
(declare-fun temp353_73 () (_ BitVec 64))
(declare-fun temp353_74 () (_ BitVec 64))
(declare-fun temp353_75 () (_ BitVec 64))
(declare-fun temp353_76 () (_ BitVec 64))
(declare-fun temp353_77 () (_ BitVec 64))
(declare-fun temp353_78 () (_ BitVec 64))
(declare-fun temp353_79 () (_ BitVec 64))
(declare-fun temp353_80 () (_ BitVec 64))
(declare-fun temp353_81 () (_ BitVec 64))
(declare-fun temp353_82 () (_ BitVec 64))
(declare-fun temp353_83 () (_ BitVec 64))
(declare-fun temp353_84 () (_ BitVec 64))
(declare-fun temp353_85 () (_ BitVec 64))
(declare-fun temp353_86 () (_ BitVec 64))
(declare-fun temp353_87 () (_ BitVec 64))
(declare-fun temp353_88 () (_ BitVec 64))
(declare-fun temp353_89 () (_ BitVec 64))
(declare-fun temp353_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp353_91 () (_ BitVec 64))
(declare-fun temp353_92 () (_ BitVec 64))
(declare-fun temp353_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_94 () (_ BitVec 64))
(declare-fun temp353_95 () (_ BitVec 64))
(declare-fun temp353_96 () (_ BitVec 64))
(declare-fun temp353_97 () (_ BitVec 64))
(declare-fun temp353_98 () (_ BitVec 64))
(declare-fun temp353_99 () (_ BitVec 64))
(declare-fun temp353_100 () (_ BitVec 64))
(declare-fun temp353_101 () (_ BitVec 64))
(declare-fun temp353_102 () (_ BitVec 64))
(declare-fun temp353_103 () (_ BitVec 64))
(declare-fun temp353_104 () (_ BitVec 64))
(declare-fun temp353_105 () (_ BitVec 64))
(declare-fun temp353_106 () (_ BitVec 64))
(declare-fun temp353_107 () (_ BitVec 64))
(declare-fun temp353_108 () (_ BitVec 64))
(declare-fun temp353_109 () (_ BitVec 64))
(declare-fun temp353_110 () (_ BitVec 64))
(declare-fun temp353_111 () (_ BitVec 64))
(declare-fun temp353_112 () (_ BitVec 64))
(declare-fun temp353_113 () (_ BitVec 64))
(declare-fun temp353_114 () (_ BitVec 64))
(declare-fun temp353_115 () (_ BitVec 64))
(declare-fun temp353_116 () (_ BitVec 64))
(declare-fun temp353_117 () (_ BitVec 64))
(declare-fun temp353_118 () (_ BitVec 64))
(declare-fun temp353_119 () (_ BitVec 64))
(declare-fun temp353_120 () (_ BitVec 64))
(declare-fun temp353_121 () (_ BitVec 64))
(declare-fun temp353_122 () (_ BitVec 64))
(declare-fun temp353_123 () (_ BitVec 64))
(declare-fun temp353_124 () (_ BitVec 64))
(declare-fun temp353_125 () (_ BitVec 64))
(declare-fun temp353_126 () (_ BitVec 64))
(declare-fun temp353_127 () (_ BitVec 64))
(declare-fun temp353_128 () (_ BitVec 64))
(declare-fun temp353_129 () (_ BitVec 64))
(declare-fun temp353_130 () (_ BitVec 64))
(declare-fun temp353_131 () (_ BitVec 64))
(declare-fun temp353_132 () (_ BitVec 64))
(declare-fun temp353_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp353_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp353_135 () (_ BitVec 64))
(declare-fun temp353_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp353_137 () (_ BitVec 64))
(declare-fun temp353_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_139 () (_ BitVec 64))
(declare-fun temp353_140 () (_ BitVec 64))
(declare-fun temp353_141 () (_ BitVec 64))
(declare-fun temp353_142 () (_ BitVec 64))
(declare-fun temp353_143 () (_ BitVec 64))
(declare-fun temp353_144 () (_ BitVec 64))
(declare-fun temp353_145 () (_ BitVec 64))
(declare-fun temp353_146 () (_ BitVec 64))
(declare-fun temp353_147 () (_ BitVec 64))
(declare-fun temp353_148 () (_ BitVec 64))
(declare-fun temp353_149 () (_ BitVec 64))
(declare-fun temp353_150 () (_ BitVec 64))
(declare-fun temp353_151 () (_ BitVec 64))
(declare-fun temp353_152 () (_ BitVec 64))
(declare-fun temp353_153 () (_ BitVec 64))
(declare-fun temp353_154 () (_ BitVec 64))
(declare-fun temp353_156 () (_ BitVec 64))
(declare-fun temp353_157 () (_ BitVec 64))
(declare-fun temp353_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp353_158 () (_ BitVec 64))
(declare-fun temp353_159 () (_ BitVec 64))
(declare-fun temp353_161 () (_ BitVec 64))
(declare-fun temp353_162 () (_ BitVec 64))
(declare-fun temp353_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp353_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp353_164 () (_ BitVec 64))
(declare-fun temp353_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp353_166 () (_ BitVec 64))
(declare-fun temp353_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp353_168 () (_ BitVec 64))
(declare-fun temp353_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_170 () (_ BitVec 64))
(declare-fun temp353_171 () (_ BitVec 64))
(declare-fun temp353_172 () (_ BitVec 64))
(declare-fun temp353_173 () (_ BitVec 64))
(declare-fun temp353_174 () (_ BitVec 64))
(declare-fun temp353_175 () (_ BitVec 64))
(declare-fun temp353_176 () (_ BitVec 64))
(declare-fun temp353_177 () (_ BitVec 64))
(declare-fun temp353_178 () (_ BitVec 64))
(declare-fun temp353_179 () (_ BitVec 64))
(declare-fun temp353_180 () (_ BitVec 64))
(declare-fun temp353_181 () (_ BitVec 64))
(declare-fun temp353_182 () (_ BitVec 64))
(declare-fun temp353_183 () (_ BitVec 64))
(declare-fun temp353_184 () (_ BitVec 64))
(declare-fun temp353_185 () (_ BitVec 64))
(declare-fun temp353_186 () (_ BitVec 64))
(declare-fun temp353_187 () (_ BitVec 64))
(declare-fun temp353_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp353_189 () (_ BitVec 64))
(declare-fun temp353_191 () (_ BitVec 64))
(declare-fun temp353_192 () (_ BitVec 64))
(declare-fun temp353_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp353_193 () (_ BitVec 64))
(declare-fun temp353_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp353_195 () (_ BitVec 64))
(declare-fun temp353_196 () (_ BitVec 64))
(declare-fun temp353_197 () (_ BitVec 64))
(declare-fun temp353_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_199 () (_ BitVec 64))
(declare-fun temp353_200 () (_ BitVec 64))
(declare-fun temp353_201 () (_ BitVec 64))
(declare-fun temp353_202 () (_ BitVec 64))
(declare-fun temp353_203 () (_ BitVec 64))
(declare-fun temp353_204 () (_ BitVec 64))
(declare-fun temp353_205 () (_ BitVec 64))
(declare-fun temp353_206 () (_ BitVec 64))
(declare-fun temp353_207 () (_ BitVec 64))
(declare-fun temp353_208 () (_ BitVec 64))
(declare-fun temp353_209 () (_ BitVec 64))
(declare-fun temp353_210 () (_ BitVec 64))
(declare-fun temp353_211 () (_ BitVec 64))
(declare-fun temp353_212 () (_ BitVec 64))
(declare-fun temp353_213 () (_ BitVec 64))
(declare-fun temp353_214 () (_ BitVec 64))
(declare-fun temp353_215 () (_ BitVec 64))
(declare-fun temp353_216 () (_ BitVec 64))
(declare-fun temp353_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp353_218 () (_ BitVec 64))
(declare-fun temp353_220 () (_ BitVec 64))
(declare-fun temp353_221 () (_ BitVec 64))
(declare-fun temp353_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp353_222 () (_ BitVec 64))
(declare-fun temp353_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp353_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp353_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp353_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp353_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp353_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp353_229 () (_ BitVec 64))
(declare-fun temp353_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp353_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp353_232 () (_ BitVec 64))
(declare-fun temp353_233 () (_ BitVec 64))
(declare-fun temp353_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp353_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp353_236 () (_ BitVec 64))
(declare-fun temp353_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp353_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp353_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun temp353_240 () (_ BitVec 64))
(assert (= temp353_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp353_1)))
(assert (= temp353_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp353_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_3 #x0000000000000000))
(assert (= var79869 temp353_3))
(assert (= temp353_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp353_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_5 #x0000000000000000))
(assert (= var79914 temp353_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp353_6 #x0000000000000000))
(assert (= temp353_7 temp353_6))
(assert (= temp353_8 (select ARGNAME_padding_NAMEEND_VAL temp353_7)))
(assert (= temp353_9 #x0000000000000001))
(assert (= temp353_10 temp353_9))
(assert (= temp353_11 (select ARGNAME_padding_NAMEEND_VAL temp353_10)))
(assert (= temp353_12 #x0000000000000002))
(assert (= temp353_13 temp353_12))
(assert (= temp353_14 (select ARGNAME_padding_NAMEEND_VAL temp353_13)))
(assert (= temp353_15 #x0000000000000003))
(assert (= temp353_16 temp353_15))
(assert (= temp353_17 (select ARGNAME_padding_NAMEEND_VAL temp353_16)))
(assert (= temp353_18 #x0000000000000004))
(assert (= temp353_19 temp353_18))
(assert (= temp353_20 (select ARGNAME_padding_NAMEEND_VAL temp353_19)))
(assert (= temp353_21 #x0000000000000005))
(assert (= temp353_22 temp353_21))
(assert (= temp353_23 (select ARGNAME_padding_NAMEEND_VAL temp353_22)))
(assert (= temp353_24 #x0000000000000000))
(assert (= temp353_25 #x0000000000000000))
(assert (= temp353_26 temp353_25))
(assert (= temp353_27 (select ARGNAME_padding_NAMEEND_VAL temp353_26)))
(assert (= temp353_28 #x0000000000000000))
(assert (= temp353_29 #x0000000000000001))
(assert (= temp353_30 temp353_29))
(assert (= temp353_31 (select ARGNAME_padding_NAMEEND_VAL temp353_30)))
(assert (= temp353_32 #x0000000000000000))
(assert (= temp353_33 #x0000000000000002))
(assert (= temp353_34 temp353_33))
(assert (= temp353_35 (select ARGNAME_padding_NAMEEND_VAL temp353_34)))
(assert (= temp353_36 #x0000000000000000))
(assert (= temp353_37 #x0000000000000003))
(assert (= temp353_38 temp353_37))
(assert (= temp353_39 (select ARGNAME_padding_NAMEEND_VAL temp353_38)))
(assert (= temp353_40 #x0000000000000000))
(assert (= temp353_41 #x0000000000000004))
(assert (= temp353_42 temp353_41))
(assert (= temp353_43 (select ARGNAME_padding_NAMEEND_VAL temp353_42)))
(assert (= temp353_44 #x0000000000000000))
(assert (= temp353_45 #x0000000000000005))
(assert (= temp353_46 temp353_45))
(assert (= temp353_47 (select ARGNAME_padding_NAMEEND_VAL temp353_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp353_27 temp353_24)
             (bvslt temp353_31 temp353_28)
             (bvslt temp353_35 temp353_32)
             (bvslt temp353_39 temp353_36)
             (bvslt temp353_43 temp353_40)
             (bvslt temp353_47 temp353_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_48 #x0000000000000000))
(assert (= var1322786 temp353_48))
(assert (= temp353_49 #x0000000000000000))
(assert (= temp353_50 temp353_49))
(assert (= temp353_51 (select ARGNAME_output_padding_NAMEEND_VAL temp353_50)))
(assert (= temp353_52 #x0000000000000001))
(assert (= temp353_53 temp353_52))
(assert (= temp353_54 (select ARGNAME_output_padding_NAMEEND_VAL temp353_53)))
(assert (= temp353_55 #x0000000000000002))
(assert (= temp353_56 temp353_55))
(assert (= temp353_57 (select ARGNAME_output_padding_NAMEEND_VAL temp353_56)))
(assert (= temp353_58 #x0000000000000003))
(assert (= temp353_59 temp353_58))
(assert (= temp353_60 (select ARGNAME_output_padding_NAMEEND_VAL temp353_59)))
(assert (= temp353_61 #x0000000000000004))
(assert (= temp353_62 temp353_61))
(assert (= temp353_63 (select ARGNAME_output_padding_NAMEEND_VAL temp353_62)))
(assert (= temp353_64 #x0000000000000005))
(assert (= temp353_65 temp353_64))
(assert (= temp353_66 (select ARGNAME_output_padding_NAMEEND_VAL temp353_65)))
(assert (= temp353_67 #x0000000000000000))
(assert (= temp353_68 #x0000000000000000))
(assert (= temp353_69 temp353_68))
(assert (= temp353_70 (select ARGNAME_output_padding_NAMEEND_VAL temp353_69)))
(assert (= temp353_71 #x0000000000000000))
(assert (= temp353_72 #x0000000000000001))
(assert (= temp353_73 temp353_72))
(assert (= temp353_74 (select ARGNAME_output_padding_NAMEEND_VAL temp353_73)))
(assert (= temp353_75 #x0000000000000000))
(assert (= temp353_76 #x0000000000000002))
(assert (= temp353_77 temp353_76))
(assert (= temp353_78 (select ARGNAME_output_padding_NAMEEND_VAL temp353_77)))
(assert (= temp353_79 #x0000000000000000))
(assert (= temp353_80 #x0000000000000003))
(assert (= temp353_81 temp353_80))
(assert (= temp353_82 (select ARGNAME_output_padding_NAMEEND_VAL temp353_81)))
(assert (= temp353_83 #x0000000000000000))
(assert (= temp353_84 #x0000000000000004))
(assert (= temp353_85 temp353_84))
(assert (= temp353_86 (select ARGNAME_output_padding_NAMEEND_VAL temp353_85)))
(assert (= temp353_87 #x0000000000000000))
(assert (= temp353_88 #x0000000000000005))
(assert (= temp353_89 temp353_88))
(assert (= temp353_90 (select ARGNAME_output_padding_NAMEEND_VAL temp353_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp353_70 temp353_67)
             (bvslt temp353_74 temp353_71)
             (bvslt temp353_78 temp353_75)
             (bvslt temp353_82 temp353_79)
             (bvslt temp353_86 temp353_83)
             (bvslt temp353_90 temp353_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_91 #x0000000000000000))
(assert (= var1322797 temp353_91))
(assert (= temp353_92 #x0000000000000000))
(assert (= temp353_93 temp353_92))
(assert (= temp353_94 (select ARGNAME_stride_NAMEEND_VAL temp353_93)))
(assert (= temp353_95 #x0000000000000001))
(assert (= temp353_96 temp353_95))
(assert (= temp353_97 (select ARGNAME_stride_NAMEEND_VAL temp353_96)))
(assert (= temp353_98 #x0000000000000002))
(assert (= temp353_99 temp353_98))
(assert (= temp353_100 (select ARGNAME_stride_NAMEEND_VAL temp353_99)))
(assert (= temp353_101 #x0000000000000003))
(assert (= temp353_102 temp353_101))
(assert (= temp353_103 (select ARGNAME_stride_NAMEEND_VAL temp353_102)))
(assert (= temp353_104 #x0000000000000004))
(assert (= temp353_105 temp353_104))
(assert (= temp353_106 (select ARGNAME_stride_NAMEEND_VAL temp353_105)))
(assert (= temp353_107 #x0000000000000005))
(assert (= temp353_108 temp353_107))
(assert (= temp353_109 (select ARGNAME_stride_NAMEEND_VAL temp353_108)))
(assert (= temp353_110 #x0000000000000000))
(assert (= temp353_111 #x0000000000000000))
(assert (= temp353_112 temp353_111))
(assert (= temp353_113 (select ARGNAME_stride_NAMEEND_VAL temp353_112)))
(assert (= temp353_114 #x0000000000000000))
(assert (= temp353_115 #x0000000000000001))
(assert (= temp353_116 temp353_115))
(assert (= temp353_117 (select ARGNAME_stride_NAMEEND_VAL temp353_116)))
(assert (= temp353_118 #x0000000000000000))
(assert (= temp353_119 #x0000000000000002))
(assert (= temp353_120 temp353_119))
(assert (= temp353_121 (select ARGNAME_stride_NAMEEND_VAL temp353_120)))
(assert (= temp353_122 #x0000000000000000))
(assert (= temp353_123 #x0000000000000003))
(assert (= temp353_124 temp353_123))
(assert (= temp353_125 (select ARGNAME_stride_NAMEEND_VAL temp353_124)))
(assert (= temp353_126 #x0000000000000000))
(assert (= temp353_127 #x0000000000000004))
(assert (= temp353_128 temp353_127))
(assert (= temp353_129 (select ARGNAME_stride_NAMEEND_VAL temp353_128)))
(assert (= temp353_130 #x0000000000000000))
(assert (= temp353_131 #x0000000000000005))
(assert (= temp353_132 temp353_131))
(assert (= temp353_133 (select ARGNAME_stride_NAMEEND_VAL temp353_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp353_113 temp353_110)
             (bvsle temp353_117 temp353_114)
             (bvsle temp353_121 temp353_118)
             (bvsle temp353_125 temp353_122)
             (bvsle temp353_129 temp353_126)
             (bvsle temp353_133 temp353_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_134 #x0000000000000000))
(assert (= var1322807 temp353_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_135 #x0000000000000001))
(assert (= var1322819 temp353_135))
(assert (= temp353_136 #x0000000000000000))
(assert (= var1310898 temp353_136))
(assert (= temp353_137 #x0000000000000000))
(assert (= temp353_138 temp353_137))
(assert (= temp353_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_138)))
(assert (= temp353_140 #x0000000000000001))
(assert (= temp353_141 temp353_140))
(assert (= temp353_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_141)))
(assert (= temp353_143 #x0000000000000002))
(assert (= temp353_144 temp353_143))
(assert (= temp353_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_144)))
(assert (= temp353_146 #x0000000000000003))
(assert (= temp353_147 temp353_146))
(assert (= temp353_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_147)))
(assert (= temp353_149 #x0000000000000004))
(assert (= temp353_150 temp353_149))
(assert (= temp353_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_150)))
(assert (= temp353_152 #x0000000000000005))
(assert (= temp353_153 temp353_152))
(assert (= temp353_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_153)))
(assert (= temp353_156 var1310898))
(assert (= temp353_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_156)))
(assert (= temp353_155 temp353_157))
(assert (= var1322852
   (ite (bvslt temp353_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_158 #x0000000000000000))
(assert (= var1322852 temp353_158))
(assert (= temp353_159 #x0000000000000000))
(assert (= var1310898 temp353_159))
(assert (= temp353_161 var1310898))
(assert (= temp353_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_161)))
(assert (= temp353_160 temp353_162))
(assert (= var1322874 (bvsmod temp353_160 ARGNAME_groups_NAMEEND)))
(assert (= temp353_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp353_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp353_164 #x0000000000000001))
(assert (= var1322875 temp353_164))
(assert (= temp353_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp353_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_166 #x0000000000000001))
(assert (= var1322895 temp353_166))
(assert (= temp353_167 #x0000000000000001))
(assert (= var1311786 temp353_167))
(assert (= temp353_168 #x0000000000000000))
(assert (= temp353_169 temp353_168))
(assert (= temp353_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_169)))
(assert (= temp353_171 #x0000000000000001))
(assert (= temp353_172 temp353_171))
(assert (= temp353_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_172)))
(assert (= temp353_174 #x0000000000000002))
(assert (= temp353_175 temp353_174))
(assert (= temp353_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_175)))
(assert (= temp353_177 #x0000000000000003))
(assert (= temp353_178 temp353_177))
(assert (= temp353_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_178)))
(assert (= temp353_180 #x0000000000000004))
(assert (= temp353_181 temp353_180))
(assert (= temp353_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_181)))
(assert (= temp353_183 #x0000000000000005))
(assert (= temp353_184 temp353_183))
(assert (= temp353_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_184)))
(assert (= temp353_186 #x0000000000000000))
(assert (= temp353_187
   (ite (bvslt var1311786 temp353_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp353_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_187)))
(assert (= var1322903 temp353_188))
(assert (bvslt (ite (bvslt var1311786 temp353_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp353_189 #x0000000000000001))
(assert (= var1311786 temp353_189))
(assert (= temp353_191 var1311786))
(assert (= temp353_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_191)))
(assert (= temp353_190 temp353_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp353_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp353_193 #x0000000000000001))
(assert (= var1322908 temp353_193))
(assert (= temp353_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp353_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_195 #x0000000000000001))
(assert (= var1322975 temp353_195))
(assert (= temp353_196 #x0000000000000000))
(assert (= var1310898 temp353_196))
(assert (= temp353_197 #x0000000000000000))
(assert (= temp353_198 temp353_197))
(assert (= temp353_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp353_198)))
(assert (= temp353_200 #x0000000000000001))
(assert (= temp353_201 temp353_200))
(assert (= temp353_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp353_201)))
(assert (= temp353_203 #x0000000000000002))
(assert (= temp353_204 temp353_203))
(assert (= temp353_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp353_204)))
(assert (= temp353_206 #x0000000000000003))
(assert (= temp353_207 temp353_206))
(assert (= temp353_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp353_207)))
(assert (= temp353_209 #x0000000000000004))
(assert (= temp353_210 temp353_209))
(assert (= temp353_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp353_210)))
(assert (= temp353_212 #x0000000000000005))
(assert (= temp353_213 temp353_212))
(assert (= temp353_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp353_213)))
(assert (= temp353_215 #x0000000000000000))
(assert (= temp353_216
   (ite (bvslt var1310898 temp353_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp353_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp353_216)))
(assert (= var1322977 temp353_217))
(assert (bvslt (ite (bvslt var1310898 temp353_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp353_218 #x0000000000000000))
(assert (= var1310898 temp353_218))
(assert (= temp353_220 var1310898))
(assert (= temp353_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_220)))
(assert (= temp353_219 temp353_221))
(assert (= var1322980
   (ite (= var1322977 temp353_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp353_222 #x0000000000000001))
(assert (= var1322980 temp353_222))
(assert (= temp353_223 #x0000000000000002))
(assert (= var1848169 temp353_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp353_225 #x0000000000000001))
(assert (= var1323065 temp353_225))
(assert (= temp353_226 #x0000000000000001))
(assert (= var3486735 temp353_226))
(assert (= temp353_227 #x0000000000000001))
(assert (= var3814415 temp353_227))
(assert (= temp353_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp353_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_229 #x0000000000000001))
(assert (= var79986 temp353_229))
(assert (= temp353_230 #x0000000000000001))
(assert (= var80116 temp353_230))
(assert (= var4796905 var80116))
(assert (= temp353_231 #x0000000000000000))
(assert (= var4784306 temp353_231))
(assert (= temp353_232 #x0000000000000000))
(assert (= temp353_233
   (ite (bvslt var4784306 temp353_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp353_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_233)))
(assert (= var4796924 temp353_234))
(assert (bvslt (ite (bvslt var4784306 temp353_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp353_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp353_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp353_236 #x0000000000000001))
(assert (= var4796925 temp353_236))
(assert (= temp353_237 #x0000000000000000))
(assert (= var4996927 temp353_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp353_238 #x0000000000000002))
(assert (= var5125763 temp353_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_239 #x0000000000000000))
(assert (= var5191324 temp353_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6238608 var80129))
(assert (= var6500752 var80129))
(assert (= temp353_240 #x0000000000000001))
(assert (= var79986 temp353_240))
(model-add temp353_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp353_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp353_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






