(declare-fun temp672_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp672_2 () (_ BitVec 64))
(declare-fun temp672_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp672_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp672_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp672_6 () (_ BitVec 64))
(declare-fun temp672_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_8 () (_ BitVec 64))
(declare-fun temp672_9 () (_ BitVec 64))
(declare-fun temp672_10 () (_ BitVec 64))
(declare-fun temp672_11 () (_ BitVec 64))
(declare-fun temp672_12 () (_ BitVec 64))
(declare-fun temp672_13 () (_ BitVec 64))
(declare-fun temp672_14 () (_ BitVec 64))
(declare-fun temp672_15 () (_ BitVec 64))
(declare-fun temp672_16 () (_ BitVec 64))
(declare-fun temp672_17 () (_ BitVec 64))
(declare-fun temp672_18 () (_ BitVec 64))
(declare-fun temp672_19 () (_ BitVec 64))
(declare-fun temp672_20 () (_ BitVec 64))
(declare-fun temp672_21 () (_ BitVec 64))
(declare-fun temp672_22 () (_ BitVec 64))
(declare-fun temp672_23 () (_ BitVec 64))
(declare-fun temp672_24 () (_ BitVec 64))
(declare-fun temp672_25 () (_ BitVec 64))
(declare-fun temp672_26 () (_ BitVec 64))
(declare-fun temp672_27 () (_ BitVec 64))
(declare-fun temp672_28 () (_ BitVec 64))
(declare-fun temp672_29 () (_ BitVec 64))
(declare-fun temp672_30 () (_ BitVec 64))
(declare-fun temp672_31 () (_ BitVec 64))
(declare-fun temp672_32 () (_ BitVec 64))
(declare-fun temp672_33 () (_ BitVec 64))
(declare-fun temp672_34 () (_ BitVec 64))
(declare-fun temp672_35 () (_ BitVec 64))
(declare-fun temp672_36 () (_ BitVec 64))
(declare-fun temp672_37 () (_ BitVec 64))
(declare-fun temp672_38 () (_ BitVec 64))
(declare-fun temp672_39 () (_ BitVec 64))
(declare-fun temp672_40 () (_ BitVec 64))
(declare-fun temp672_41 () (_ BitVec 64))
(declare-fun temp672_42 () (_ BitVec 64))
(declare-fun temp672_43 () (_ BitVec 64))
(declare-fun temp672_44 () (_ BitVec 64))
(declare-fun temp672_45 () (_ BitVec 64))
(declare-fun temp672_46 () (_ BitVec 64))
(declare-fun temp672_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp672_48 () (_ BitVec 64))
(declare-fun temp672_49 () (_ BitVec 64))
(declare-fun temp672_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_51 () (_ BitVec 64))
(declare-fun temp672_52 () (_ BitVec 64))
(declare-fun temp672_53 () (_ BitVec 64))
(declare-fun temp672_54 () (_ BitVec 64))
(declare-fun temp672_55 () (_ BitVec 64))
(declare-fun temp672_56 () (_ BitVec 64))
(declare-fun temp672_57 () (_ BitVec 64))
(declare-fun temp672_58 () (_ BitVec 64))
(declare-fun temp672_59 () (_ BitVec 64))
(declare-fun temp672_60 () (_ BitVec 64))
(declare-fun temp672_61 () (_ BitVec 64))
(declare-fun temp672_62 () (_ BitVec 64))
(declare-fun temp672_63 () (_ BitVec 64))
(declare-fun temp672_64 () (_ BitVec 64))
(declare-fun temp672_65 () (_ BitVec 64))
(declare-fun temp672_66 () (_ BitVec 64))
(declare-fun temp672_67 () (_ BitVec 64))
(declare-fun temp672_68 () (_ BitVec 64))
(declare-fun temp672_69 () (_ BitVec 64))
(declare-fun temp672_70 () (_ BitVec 64))
(declare-fun temp672_71 () (_ BitVec 64))
(declare-fun temp672_72 () (_ BitVec 64))
(declare-fun temp672_73 () (_ BitVec 64))
(declare-fun temp672_74 () (_ BitVec 64))
(declare-fun temp672_75 () (_ BitVec 64))
(declare-fun temp672_76 () (_ BitVec 64))
(declare-fun temp672_77 () (_ BitVec 64))
(declare-fun temp672_78 () (_ BitVec 64))
(declare-fun temp672_79 () (_ BitVec 64))
(declare-fun temp672_80 () (_ BitVec 64))
(declare-fun temp672_81 () (_ BitVec 64))
(declare-fun temp672_82 () (_ BitVec 64))
(declare-fun temp672_83 () (_ BitVec 64))
(declare-fun temp672_84 () (_ BitVec 64))
(declare-fun temp672_85 () (_ BitVec 64))
(declare-fun temp672_86 () (_ BitVec 64))
(declare-fun temp672_87 () (_ BitVec 64))
(declare-fun temp672_88 () (_ BitVec 64))
(declare-fun temp672_89 () (_ BitVec 64))
(declare-fun temp672_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp672_91 () (_ BitVec 64))
(declare-fun temp672_92 () (_ BitVec 64))
(declare-fun temp672_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_94 () (_ BitVec 64))
(declare-fun temp672_95 () (_ BitVec 64))
(declare-fun temp672_96 () (_ BitVec 64))
(declare-fun temp672_97 () (_ BitVec 64))
(declare-fun temp672_98 () (_ BitVec 64))
(declare-fun temp672_99 () (_ BitVec 64))
(declare-fun temp672_100 () (_ BitVec 64))
(declare-fun temp672_101 () (_ BitVec 64))
(declare-fun temp672_102 () (_ BitVec 64))
(declare-fun temp672_103 () (_ BitVec 64))
(declare-fun temp672_104 () (_ BitVec 64))
(declare-fun temp672_105 () (_ BitVec 64))
(declare-fun temp672_106 () (_ BitVec 64))
(declare-fun temp672_107 () (_ BitVec 64))
(declare-fun temp672_108 () (_ BitVec 64))
(declare-fun temp672_109 () (_ BitVec 64))
(declare-fun temp672_110 () (_ BitVec 64))
(declare-fun temp672_111 () (_ BitVec 64))
(declare-fun temp672_112 () (_ BitVec 64))
(declare-fun temp672_113 () (_ BitVec 64))
(declare-fun temp672_114 () (_ BitVec 64))
(declare-fun temp672_115 () (_ BitVec 64))
(declare-fun temp672_116 () (_ BitVec 64))
(declare-fun temp672_117 () (_ BitVec 64))
(declare-fun temp672_118 () (_ BitVec 64))
(declare-fun temp672_119 () (_ BitVec 64))
(declare-fun temp672_120 () (_ BitVec 64))
(declare-fun temp672_121 () (_ BitVec 64))
(declare-fun temp672_122 () (_ BitVec 64))
(declare-fun temp672_123 () (_ BitVec 64))
(declare-fun temp672_124 () (_ BitVec 64))
(declare-fun temp672_125 () (_ BitVec 64))
(declare-fun temp672_126 () (_ BitVec 64))
(declare-fun temp672_127 () (_ BitVec 64))
(declare-fun temp672_128 () (_ BitVec 64))
(declare-fun temp672_129 () (_ BitVec 64))
(declare-fun temp672_130 () (_ BitVec 64))
(declare-fun temp672_131 () (_ BitVec 64))
(declare-fun temp672_132 () (_ BitVec 64))
(declare-fun temp672_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp672_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp672_135 () (_ BitVec 64))
(declare-fun temp672_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp672_137 () (_ BitVec 64))
(declare-fun temp672_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_139 () (_ BitVec 64))
(declare-fun temp672_140 () (_ BitVec 64))
(declare-fun temp672_141 () (_ BitVec 64))
(declare-fun temp672_142 () (_ BitVec 64))
(declare-fun temp672_143 () (_ BitVec 64))
(declare-fun temp672_144 () (_ BitVec 64))
(declare-fun temp672_145 () (_ BitVec 64))
(declare-fun temp672_146 () (_ BitVec 64))
(declare-fun temp672_147 () (_ BitVec 64))
(declare-fun temp672_148 () (_ BitVec 64))
(declare-fun temp672_149 () (_ BitVec 64))
(declare-fun temp672_150 () (_ BitVec 64))
(declare-fun temp672_151 () (_ BitVec 64))
(declare-fun temp672_152 () (_ BitVec 64))
(declare-fun temp672_153 () (_ BitVec 64))
(declare-fun temp672_154 () (_ BitVec 64))
(declare-fun temp672_156 () (_ BitVec 64))
(declare-fun temp672_157 () (_ BitVec 64))
(declare-fun temp672_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp672_158 () (_ BitVec 64))
(declare-fun temp672_159 () (_ BitVec 64))
(declare-fun temp672_161 () (_ BitVec 64))
(declare-fun temp672_162 () (_ BitVec 64))
(declare-fun temp672_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp672_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp672_164 () (_ BitVec 64))
(declare-fun temp672_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp672_166 () (_ BitVec 64))
(declare-fun temp672_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp672_168 () (_ BitVec 64))
(declare-fun temp672_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_170 () (_ BitVec 64))
(declare-fun temp672_171 () (_ BitVec 64))
(declare-fun temp672_172 () (_ BitVec 64))
(declare-fun temp672_173 () (_ BitVec 64))
(declare-fun temp672_174 () (_ BitVec 64))
(declare-fun temp672_175 () (_ BitVec 64))
(declare-fun temp672_176 () (_ BitVec 64))
(declare-fun temp672_177 () (_ BitVec 64))
(declare-fun temp672_178 () (_ BitVec 64))
(declare-fun temp672_179 () (_ BitVec 64))
(declare-fun temp672_180 () (_ BitVec 64))
(declare-fun temp672_181 () (_ BitVec 64))
(declare-fun temp672_182 () (_ BitVec 64))
(declare-fun temp672_183 () (_ BitVec 64))
(declare-fun temp672_184 () (_ BitVec 64))
(declare-fun temp672_185 () (_ BitVec 64))
(declare-fun temp672_186 () (_ BitVec 64))
(declare-fun temp672_187 () (_ BitVec 64))
(declare-fun temp672_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp672_189 () (_ BitVec 64))
(declare-fun temp672_191 () (_ BitVec 64))
(declare-fun temp672_192 () (_ BitVec 64))
(declare-fun temp672_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp672_193 () (_ BitVec 64))
(declare-fun temp672_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp672_195 () (_ BitVec 64))
(declare-fun temp672_196 () (_ BitVec 64))
(declare-fun temp672_197 () (_ BitVec 64))
(declare-fun temp672_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_199 () (_ BitVec 64))
(declare-fun temp672_200 () (_ BitVec 64))
(declare-fun temp672_201 () (_ BitVec 64))
(declare-fun temp672_202 () (_ BitVec 64))
(declare-fun temp672_203 () (_ BitVec 64))
(declare-fun temp672_204 () (_ BitVec 64))
(declare-fun temp672_205 () (_ BitVec 64))
(declare-fun temp672_206 () (_ BitVec 64))
(declare-fun temp672_207 () (_ BitVec 64))
(declare-fun temp672_208 () (_ BitVec 64))
(declare-fun temp672_209 () (_ BitVec 64))
(declare-fun temp672_210 () (_ BitVec 64))
(declare-fun temp672_211 () (_ BitVec 64))
(declare-fun temp672_212 () (_ BitVec 64))
(declare-fun temp672_213 () (_ BitVec 64))
(declare-fun temp672_214 () (_ BitVec 64))
(declare-fun temp672_215 () (_ BitVec 64))
(declare-fun temp672_216 () (_ BitVec 64))
(declare-fun temp672_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp672_218 () (_ BitVec 64))
(declare-fun temp672_220 () (_ BitVec 64))
(declare-fun temp672_221 () (_ BitVec 64))
(declare-fun temp672_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp672_222 () (_ BitVec 64))
(declare-fun temp672_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp672_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp672_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp672_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp672_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp672_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp672_229 () (_ BitVec 64))
(declare-fun temp672_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp672_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp672_232 () (_ BitVec 64))
(declare-fun temp672_233 () (_ BitVec 64))
(declare-fun temp672_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp672_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp672_236 () (_ BitVec 64))
(declare-fun temp672_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp672_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp672_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp672_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp672_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp672_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp672_244 () (_ BitVec 64))
(declare-fun temp672_243 () (_ BitVec 64))
(declare-fun temp672_245 () (_ BitVec 64))
(declare-fun var8130026 () (_ BitVec 64))
(declare-fun temp672_247 () (_ BitVec 64))
(declare-fun temp672_246 () (_ BitVec 64))
(declare-fun temp672_248 () (_ BitVec 64))
(assert (= temp672_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp672_1)))
(assert (= temp672_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp672_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_3 #x0000000000000000))
(assert (= var79869 temp672_3))
(assert (= temp672_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp672_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_5 #x0000000000000000))
(assert (= var79914 temp672_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp672_6 #x0000000000000000))
(assert (= temp672_7 temp672_6))
(assert (= temp672_8 (select ARGNAME_padding_NAMEEND_VAL temp672_7)))
(assert (= temp672_9 #x0000000000000001))
(assert (= temp672_10 temp672_9))
(assert (= temp672_11 (select ARGNAME_padding_NAMEEND_VAL temp672_10)))
(assert (= temp672_12 #x0000000000000002))
(assert (= temp672_13 temp672_12))
(assert (= temp672_14 (select ARGNAME_padding_NAMEEND_VAL temp672_13)))
(assert (= temp672_15 #x0000000000000003))
(assert (= temp672_16 temp672_15))
(assert (= temp672_17 (select ARGNAME_padding_NAMEEND_VAL temp672_16)))
(assert (= temp672_18 #x0000000000000004))
(assert (= temp672_19 temp672_18))
(assert (= temp672_20 (select ARGNAME_padding_NAMEEND_VAL temp672_19)))
(assert (= temp672_21 #x0000000000000005))
(assert (= temp672_22 temp672_21))
(assert (= temp672_23 (select ARGNAME_padding_NAMEEND_VAL temp672_22)))
(assert (= temp672_24 #x0000000000000000))
(assert (= temp672_25 #x0000000000000000))
(assert (= temp672_26 temp672_25))
(assert (= temp672_27 (select ARGNAME_padding_NAMEEND_VAL temp672_26)))
(assert (= temp672_28 #x0000000000000000))
(assert (= temp672_29 #x0000000000000001))
(assert (= temp672_30 temp672_29))
(assert (= temp672_31 (select ARGNAME_padding_NAMEEND_VAL temp672_30)))
(assert (= temp672_32 #x0000000000000000))
(assert (= temp672_33 #x0000000000000002))
(assert (= temp672_34 temp672_33))
(assert (= temp672_35 (select ARGNAME_padding_NAMEEND_VAL temp672_34)))
(assert (= temp672_36 #x0000000000000000))
(assert (= temp672_37 #x0000000000000003))
(assert (= temp672_38 temp672_37))
(assert (= temp672_39 (select ARGNAME_padding_NAMEEND_VAL temp672_38)))
(assert (= temp672_40 #x0000000000000000))
(assert (= temp672_41 #x0000000000000004))
(assert (= temp672_42 temp672_41))
(assert (= temp672_43 (select ARGNAME_padding_NAMEEND_VAL temp672_42)))
(assert (= temp672_44 #x0000000000000000))
(assert (= temp672_45 #x0000000000000005))
(assert (= temp672_46 temp672_45))
(assert (= temp672_47 (select ARGNAME_padding_NAMEEND_VAL temp672_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp672_27 temp672_24)
             (bvslt temp672_31 temp672_28)
             (bvslt temp672_35 temp672_32)
             (bvslt temp672_39 temp672_36)
             (bvslt temp672_43 temp672_40)
             (bvslt temp672_47 temp672_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_48 #x0000000000000000))
(assert (= var1322786 temp672_48))
(assert (= temp672_49 #x0000000000000000))
(assert (= temp672_50 temp672_49))
(assert (= temp672_51 (select ARGNAME_output_padding_NAMEEND_VAL temp672_50)))
(assert (= temp672_52 #x0000000000000001))
(assert (= temp672_53 temp672_52))
(assert (= temp672_54 (select ARGNAME_output_padding_NAMEEND_VAL temp672_53)))
(assert (= temp672_55 #x0000000000000002))
(assert (= temp672_56 temp672_55))
(assert (= temp672_57 (select ARGNAME_output_padding_NAMEEND_VAL temp672_56)))
(assert (= temp672_58 #x0000000000000003))
(assert (= temp672_59 temp672_58))
(assert (= temp672_60 (select ARGNAME_output_padding_NAMEEND_VAL temp672_59)))
(assert (= temp672_61 #x0000000000000004))
(assert (= temp672_62 temp672_61))
(assert (= temp672_63 (select ARGNAME_output_padding_NAMEEND_VAL temp672_62)))
(assert (= temp672_64 #x0000000000000005))
(assert (= temp672_65 temp672_64))
(assert (= temp672_66 (select ARGNAME_output_padding_NAMEEND_VAL temp672_65)))
(assert (= temp672_67 #x0000000000000000))
(assert (= temp672_68 #x0000000000000000))
(assert (= temp672_69 temp672_68))
(assert (= temp672_70 (select ARGNAME_output_padding_NAMEEND_VAL temp672_69)))
(assert (= temp672_71 #x0000000000000000))
(assert (= temp672_72 #x0000000000000001))
(assert (= temp672_73 temp672_72))
(assert (= temp672_74 (select ARGNAME_output_padding_NAMEEND_VAL temp672_73)))
(assert (= temp672_75 #x0000000000000000))
(assert (= temp672_76 #x0000000000000002))
(assert (= temp672_77 temp672_76))
(assert (= temp672_78 (select ARGNAME_output_padding_NAMEEND_VAL temp672_77)))
(assert (= temp672_79 #x0000000000000000))
(assert (= temp672_80 #x0000000000000003))
(assert (= temp672_81 temp672_80))
(assert (= temp672_82 (select ARGNAME_output_padding_NAMEEND_VAL temp672_81)))
(assert (= temp672_83 #x0000000000000000))
(assert (= temp672_84 #x0000000000000004))
(assert (= temp672_85 temp672_84))
(assert (= temp672_86 (select ARGNAME_output_padding_NAMEEND_VAL temp672_85)))
(assert (= temp672_87 #x0000000000000000))
(assert (= temp672_88 #x0000000000000005))
(assert (= temp672_89 temp672_88))
(assert (= temp672_90 (select ARGNAME_output_padding_NAMEEND_VAL temp672_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp672_70 temp672_67)
             (bvslt temp672_74 temp672_71)
             (bvslt temp672_78 temp672_75)
             (bvslt temp672_82 temp672_79)
             (bvslt temp672_86 temp672_83)
             (bvslt temp672_90 temp672_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_91 #x0000000000000000))
(assert (= var1322797 temp672_91))
(assert (= temp672_92 #x0000000000000000))
(assert (= temp672_93 temp672_92))
(assert (= temp672_94 (select ARGNAME_stride_NAMEEND_VAL temp672_93)))
(assert (= temp672_95 #x0000000000000001))
(assert (= temp672_96 temp672_95))
(assert (= temp672_97 (select ARGNAME_stride_NAMEEND_VAL temp672_96)))
(assert (= temp672_98 #x0000000000000002))
(assert (= temp672_99 temp672_98))
(assert (= temp672_100 (select ARGNAME_stride_NAMEEND_VAL temp672_99)))
(assert (= temp672_101 #x0000000000000003))
(assert (= temp672_102 temp672_101))
(assert (= temp672_103 (select ARGNAME_stride_NAMEEND_VAL temp672_102)))
(assert (= temp672_104 #x0000000000000004))
(assert (= temp672_105 temp672_104))
(assert (= temp672_106 (select ARGNAME_stride_NAMEEND_VAL temp672_105)))
(assert (= temp672_107 #x0000000000000005))
(assert (= temp672_108 temp672_107))
(assert (= temp672_109 (select ARGNAME_stride_NAMEEND_VAL temp672_108)))
(assert (= temp672_110 #x0000000000000000))
(assert (= temp672_111 #x0000000000000000))
(assert (= temp672_112 temp672_111))
(assert (= temp672_113 (select ARGNAME_stride_NAMEEND_VAL temp672_112)))
(assert (= temp672_114 #x0000000000000000))
(assert (= temp672_115 #x0000000000000001))
(assert (= temp672_116 temp672_115))
(assert (= temp672_117 (select ARGNAME_stride_NAMEEND_VAL temp672_116)))
(assert (= temp672_118 #x0000000000000000))
(assert (= temp672_119 #x0000000000000002))
(assert (= temp672_120 temp672_119))
(assert (= temp672_121 (select ARGNAME_stride_NAMEEND_VAL temp672_120)))
(assert (= temp672_122 #x0000000000000000))
(assert (= temp672_123 #x0000000000000003))
(assert (= temp672_124 temp672_123))
(assert (= temp672_125 (select ARGNAME_stride_NAMEEND_VAL temp672_124)))
(assert (= temp672_126 #x0000000000000000))
(assert (= temp672_127 #x0000000000000004))
(assert (= temp672_128 temp672_127))
(assert (= temp672_129 (select ARGNAME_stride_NAMEEND_VAL temp672_128)))
(assert (= temp672_130 #x0000000000000000))
(assert (= temp672_131 #x0000000000000005))
(assert (= temp672_132 temp672_131))
(assert (= temp672_133 (select ARGNAME_stride_NAMEEND_VAL temp672_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp672_113 temp672_110)
             (bvsle temp672_117 temp672_114)
             (bvsle temp672_121 temp672_118)
             (bvsle temp672_125 temp672_122)
             (bvsle temp672_129 temp672_126)
             (bvsle temp672_133 temp672_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_134 #x0000000000000000))
(assert (= var1322807 temp672_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_135 #x0000000000000001))
(assert (= var1322819 temp672_135))
(assert (= temp672_136 #x0000000000000000))
(assert (= var1310898 temp672_136))
(assert (= temp672_137 #x0000000000000000))
(assert (= temp672_138 temp672_137))
(assert (= temp672_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_138)))
(assert (= temp672_140 #x0000000000000001))
(assert (= temp672_141 temp672_140))
(assert (= temp672_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_141)))
(assert (= temp672_143 #x0000000000000002))
(assert (= temp672_144 temp672_143))
(assert (= temp672_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_144)))
(assert (= temp672_146 #x0000000000000003))
(assert (= temp672_147 temp672_146))
(assert (= temp672_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_147)))
(assert (= temp672_149 #x0000000000000004))
(assert (= temp672_150 temp672_149))
(assert (= temp672_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_150)))
(assert (= temp672_152 #x0000000000000005))
(assert (= temp672_153 temp672_152))
(assert (= temp672_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_153)))
(assert (= temp672_156 var1310898))
(assert (= temp672_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_156)))
(assert (= temp672_155 temp672_157))
(assert (= var1322852
   (ite (bvslt temp672_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_158 #x0000000000000000))
(assert (= var1322852 temp672_158))
(assert (= temp672_159 #x0000000000000000))
(assert (= var1310898 temp672_159))
(assert (= temp672_161 var1310898))
(assert (= temp672_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_161)))
(assert (= temp672_160 temp672_162))
(assert (= var1322874 (bvsmod temp672_160 ARGNAME_groups_NAMEEND)))
(assert (= temp672_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp672_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp672_164 #x0000000000000001))
(assert (= var1322875 temp672_164))
(assert (= temp672_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp672_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_166 #x0000000000000001))
(assert (= var1322895 temp672_166))
(assert (= temp672_167 #x0000000000000001))
(assert (= var1311786 temp672_167))
(assert (= temp672_168 #x0000000000000000))
(assert (= temp672_169 temp672_168))
(assert (= temp672_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_169)))
(assert (= temp672_171 #x0000000000000001))
(assert (= temp672_172 temp672_171))
(assert (= temp672_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_172)))
(assert (= temp672_174 #x0000000000000002))
(assert (= temp672_175 temp672_174))
(assert (= temp672_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_175)))
(assert (= temp672_177 #x0000000000000003))
(assert (= temp672_178 temp672_177))
(assert (= temp672_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_178)))
(assert (= temp672_180 #x0000000000000004))
(assert (= temp672_181 temp672_180))
(assert (= temp672_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_181)))
(assert (= temp672_183 #x0000000000000005))
(assert (= temp672_184 temp672_183))
(assert (= temp672_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_184)))
(assert (= temp672_186 #x0000000000000000))
(assert (= temp672_187
   (ite (bvslt var1311786 temp672_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp672_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_187)))
(assert (= var1322903 temp672_188))
(assert (bvslt (ite (bvslt var1311786 temp672_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp672_189 #x0000000000000001))
(assert (= var1311786 temp672_189))
(assert (= temp672_191 var1311786))
(assert (= temp672_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_191)))
(assert (= temp672_190 temp672_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp672_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp672_193 #x0000000000000001))
(assert (= var1322908 temp672_193))
(assert (= temp672_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp672_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_195 #x0000000000000001))
(assert (= var1322975 temp672_195))
(assert (= temp672_196 #x0000000000000000))
(assert (= var1310898 temp672_196))
(assert (= temp672_197 #x0000000000000000))
(assert (= temp672_198 temp672_197))
(assert (= temp672_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp672_198)))
(assert (= temp672_200 #x0000000000000001))
(assert (= temp672_201 temp672_200))
(assert (= temp672_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp672_201)))
(assert (= temp672_203 #x0000000000000002))
(assert (= temp672_204 temp672_203))
(assert (= temp672_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp672_204)))
(assert (= temp672_206 #x0000000000000003))
(assert (= temp672_207 temp672_206))
(assert (= temp672_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp672_207)))
(assert (= temp672_209 #x0000000000000004))
(assert (= temp672_210 temp672_209))
(assert (= temp672_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp672_210)))
(assert (= temp672_212 #x0000000000000005))
(assert (= temp672_213 temp672_212))
(assert (= temp672_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp672_213)))
(assert (= temp672_215 #x0000000000000000))
(assert (= temp672_216
   (ite (bvslt var1310898 temp672_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp672_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp672_216)))
(assert (= var1322977 temp672_217))
(assert (bvslt (ite (bvslt var1310898 temp672_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp672_218 #x0000000000000000))
(assert (= var1310898 temp672_218))
(assert (= temp672_220 var1310898))
(assert (= temp672_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_220)))
(assert (= temp672_219 temp672_221))
(assert (= var1322980
   (ite (= var1322977 temp672_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp672_222 #x0000000000000001))
(assert (= var1322980 temp672_222))
(assert (= temp672_223 #x0000000000000002))
(assert (= var1848169 temp672_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp672_225 #x0000000000000001))
(assert (= var1323065 temp672_225))
(assert (= temp672_226 #x0000000000000001))
(assert (= var3486735 temp672_226))
(assert (= temp672_227 #x0000000000000001))
(assert (= var3814415 temp672_227))
(assert (= temp672_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp672_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_229 #x0000000000000001))
(assert (= var79986 temp672_229))
(assert (= temp672_230 #x0000000000000001))
(assert (= var80116 temp672_230))
(assert (= var4796905 var80116))
(assert (= temp672_231 #x0000000000000000))
(assert (= var4784306 temp672_231))
(assert (= temp672_232 #x0000000000000000))
(assert (= temp672_233
   (ite (bvslt var4784306 temp672_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp672_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_233)))
(assert (= var4796924 temp672_234))
(assert (bvslt (ite (bvslt var4784306 temp672_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp672_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp672_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp672_236 #x0000000000000001))
(assert (= var4796925 temp672_236))
(assert (= temp672_237 #x0000000000000000))
(assert (= var4996927 temp672_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp672_238 #x0000000000000002))
(assert (= var5125763 temp672_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_239 #x0000000000000000))
(assert (= var5191324 temp672_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp672_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp672_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp672_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp672_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_244 #x0000000000000001))
(assert (= temp672_243 temp672_244))
(assert (= temp672_245 #x0000000000000001))
(assert (= var8130026 temp672_245))
(assert (= temp672_247 #xffffffffffffffff))
(assert (= temp672_246 temp672_247))
(assert (= temp672_248 #x0000000000000001))
(assert (= var79986 temp672_248))
(model-add temp672_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp672_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp672_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






