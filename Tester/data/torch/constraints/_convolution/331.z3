(declare-fun temp440_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp440_2 () (_ BitVec 64))
(declare-fun temp440_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp440_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp440_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp440_6 () (_ BitVec 64))
(declare-fun temp440_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp440_8 () (_ BitVec 64))
(declare-fun temp440_9 () (_ BitVec 64))
(declare-fun temp440_10 () (_ BitVec 64))
(declare-fun temp440_11 () (_ BitVec 64))
(declare-fun temp440_12 () (_ BitVec 64))
(declare-fun temp440_13 () (_ BitVec 64))
(declare-fun temp440_14 () (_ BitVec 64))
(declare-fun temp440_15 () (_ BitVec 64))
(declare-fun temp440_16 () (_ BitVec 64))
(declare-fun temp440_17 () (_ BitVec 64))
(declare-fun temp440_18 () (_ BitVec 64))
(declare-fun temp440_19 () (_ BitVec 64))
(declare-fun temp440_20 () (_ BitVec 64))
(declare-fun temp440_21 () (_ BitVec 64))
(declare-fun temp440_22 () (_ BitVec 64))
(declare-fun temp440_23 () (_ BitVec 64))
(declare-fun temp440_24 () (_ BitVec 64))
(declare-fun temp440_25 () (_ BitVec 64))
(declare-fun temp440_26 () (_ BitVec 64))
(declare-fun temp440_27 () (_ BitVec 64))
(declare-fun temp440_28 () (_ BitVec 64))
(declare-fun temp440_29 () (_ BitVec 64))
(declare-fun temp440_30 () (_ BitVec 64))
(declare-fun temp440_31 () (_ BitVec 64))
(declare-fun temp440_32 () (_ BitVec 64))
(declare-fun temp440_33 () (_ BitVec 64))
(declare-fun temp440_34 () (_ BitVec 64))
(declare-fun temp440_35 () (_ BitVec 64))
(declare-fun temp440_36 () (_ BitVec 64))
(declare-fun temp440_37 () (_ BitVec 64))
(declare-fun temp440_38 () (_ BitVec 64))
(declare-fun temp440_39 () (_ BitVec 64))
(declare-fun temp440_40 () (_ BitVec 64))
(declare-fun temp440_41 () (_ BitVec 64))
(declare-fun temp440_42 () (_ BitVec 64))
(declare-fun temp440_43 () (_ BitVec 64))
(declare-fun temp440_44 () (_ BitVec 64))
(declare-fun temp440_45 () (_ BitVec 64))
(declare-fun temp440_46 () (_ BitVec 64))
(declare-fun temp440_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp440_48 () (_ BitVec 64))
(declare-fun temp440_49 () (_ BitVec 64))
(declare-fun temp440_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp440_51 () (_ BitVec 64))
(declare-fun temp440_52 () (_ BitVec 64))
(declare-fun temp440_53 () (_ BitVec 64))
(declare-fun temp440_54 () (_ BitVec 64))
(declare-fun temp440_55 () (_ BitVec 64))
(declare-fun temp440_56 () (_ BitVec 64))
(declare-fun temp440_57 () (_ BitVec 64))
(declare-fun temp440_58 () (_ BitVec 64))
(declare-fun temp440_59 () (_ BitVec 64))
(declare-fun temp440_60 () (_ BitVec 64))
(declare-fun temp440_61 () (_ BitVec 64))
(declare-fun temp440_62 () (_ BitVec 64))
(declare-fun temp440_63 () (_ BitVec 64))
(declare-fun temp440_64 () (_ BitVec 64))
(declare-fun temp440_65 () (_ BitVec 64))
(declare-fun temp440_66 () (_ BitVec 64))
(declare-fun temp440_67 () (_ BitVec 64))
(declare-fun temp440_68 () (_ BitVec 64))
(declare-fun temp440_69 () (_ BitVec 64))
(declare-fun temp440_70 () (_ BitVec 64))
(declare-fun temp440_71 () (_ BitVec 64))
(declare-fun temp440_72 () (_ BitVec 64))
(declare-fun temp440_73 () (_ BitVec 64))
(declare-fun temp440_74 () (_ BitVec 64))
(declare-fun temp440_75 () (_ BitVec 64))
(declare-fun temp440_76 () (_ BitVec 64))
(declare-fun temp440_77 () (_ BitVec 64))
(declare-fun temp440_78 () (_ BitVec 64))
(declare-fun temp440_79 () (_ BitVec 64))
(declare-fun temp440_80 () (_ BitVec 64))
(declare-fun temp440_81 () (_ BitVec 64))
(declare-fun temp440_82 () (_ BitVec 64))
(declare-fun temp440_83 () (_ BitVec 64))
(declare-fun temp440_84 () (_ BitVec 64))
(declare-fun temp440_85 () (_ BitVec 64))
(declare-fun temp440_86 () (_ BitVec 64))
(declare-fun temp440_87 () (_ BitVec 64))
(declare-fun temp440_88 () (_ BitVec 64))
(declare-fun temp440_89 () (_ BitVec 64))
(declare-fun temp440_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp440_91 () (_ BitVec 64))
(declare-fun temp440_92 () (_ BitVec 64))
(declare-fun temp440_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp440_94 () (_ BitVec 64))
(declare-fun temp440_95 () (_ BitVec 64))
(declare-fun temp440_96 () (_ BitVec 64))
(declare-fun temp440_97 () (_ BitVec 64))
(declare-fun temp440_98 () (_ BitVec 64))
(declare-fun temp440_99 () (_ BitVec 64))
(declare-fun temp440_100 () (_ BitVec 64))
(declare-fun temp440_101 () (_ BitVec 64))
(declare-fun temp440_102 () (_ BitVec 64))
(declare-fun temp440_103 () (_ BitVec 64))
(declare-fun temp440_104 () (_ BitVec 64))
(declare-fun temp440_105 () (_ BitVec 64))
(declare-fun temp440_106 () (_ BitVec 64))
(declare-fun temp440_107 () (_ BitVec 64))
(declare-fun temp440_108 () (_ BitVec 64))
(declare-fun temp440_109 () (_ BitVec 64))
(declare-fun temp440_110 () (_ BitVec 64))
(declare-fun temp440_111 () (_ BitVec 64))
(declare-fun temp440_112 () (_ BitVec 64))
(declare-fun temp440_113 () (_ BitVec 64))
(declare-fun temp440_114 () (_ BitVec 64))
(declare-fun temp440_115 () (_ BitVec 64))
(declare-fun temp440_116 () (_ BitVec 64))
(declare-fun temp440_117 () (_ BitVec 64))
(declare-fun temp440_118 () (_ BitVec 64))
(declare-fun temp440_119 () (_ BitVec 64))
(declare-fun temp440_120 () (_ BitVec 64))
(declare-fun temp440_121 () (_ BitVec 64))
(declare-fun temp440_122 () (_ BitVec 64))
(declare-fun temp440_123 () (_ BitVec 64))
(declare-fun temp440_124 () (_ BitVec 64))
(declare-fun temp440_125 () (_ BitVec 64))
(declare-fun temp440_126 () (_ BitVec 64))
(declare-fun temp440_127 () (_ BitVec 64))
(declare-fun temp440_128 () (_ BitVec 64))
(declare-fun temp440_129 () (_ BitVec 64))
(declare-fun temp440_130 () (_ BitVec 64))
(declare-fun temp440_131 () (_ BitVec 64))
(declare-fun temp440_132 () (_ BitVec 64))
(declare-fun temp440_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp440_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp440_135 () (_ BitVec 64))
(declare-fun temp440_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp440_137 () (_ BitVec 64))
(declare-fun temp440_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp440_139 () (_ BitVec 64))
(declare-fun temp440_140 () (_ BitVec 64))
(declare-fun temp440_141 () (_ BitVec 64))
(declare-fun temp440_142 () (_ BitVec 64))
(declare-fun temp440_143 () (_ BitVec 64))
(declare-fun temp440_144 () (_ BitVec 64))
(declare-fun temp440_145 () (_ BitVec 64))
(declare-fun temp440_146 () (_ BitVec 64))
(declare-fun temp440_147 () (_ BitVec 64))
(declare-fun temp440_148 () (_ BitVec 64))
(declare-fun temp440_149 () (_ BitVec 64))
(declare-fun temp440_150 () (_ BitVec 64))
(declare-fun temp440_151 () (_ BitVec 64))
(declare-fun temp440_152 () (_ BitVec 64))
(declare-fun temp440_153 () (_ BitVec 64))
(declare-fun temp440_154 () (_ BitVec 64))
(declare-fun temp440_156 () (_ BitVec 64))
(declare-fun temp440_157 () (_ BitVec 64))
(declare-fun temp440_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp440_158 () (_ BitVec 64))
(declare-fun temp440_159 () (_ BitVec 64))
(declare-fun temp440_161 () (_ BitVec 64))
(declare-fun temp440_162 () (_ BitVec 64))
(declare-fun temp440_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp440_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp440_164 () (_ BitVec 64))
(declare-fun temp440_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp440_166 () (_ BitVec 64))
(declare-fun temp440_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp440_168 () (_ BitVec 64))
(declare-fun temp440_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp440_170 () (_ BitVec 64))
(declare-fun temp440_171 () (_ BitVec 64))
(declare-fun temp440_172 () (_ BitVec 64))
(declare-fun temp440_173 () (_ BitVec 64))
(declare-fun temp440_174 () (_ BitVec 64))
(declare-fun temp440_175 () (_ BitVec 64))
(declare-fun temp440_176 () (_ BitVec 64))
(declare-fun temp440_177 () (_ BitVec 64))
(declare-fun temp440_178 () (_ BitVec 64))
(declare-fun temp440_179 () (_ BitVec 64))
(declare-fun temp440_180 () (_ BitVec 64))
(declare-fun temp440_181 () (_ BitVec 64))
(declare-fun temp440_182 () (_ BitVec 64))
(declare-fun temp440_183 () (_ BitVec 64))
(declare-fun temp440_184 () (_ BitVec 64))
(declare-fun temp440_185 () (_ BitVec 64))
(declare-fun temp440_186 () (_ BitVec 64))
(declare-fun temp440_187 () (_ BitVec 64))
(declare-fun temp440_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp440_189 () (_ BitVec 64))
(declare-fun temp440_191 () (_ BitVec 64))
(declare-fun temp440_192 () (_ BitVec 64))
(declare-fun temp440_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp440_193 () (_ BitVec 64))
(declare-fun temp440_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp440_195 () (_ BitVec 64))
(declare-fun temp440_196 () (_ BitVec 64))
(declare-fun temp440_197 () (_ BitVec 64))
(declare-fun temp440_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp440_199 () (_ BitVec 64))
(declare-fun temp440_200 () (_ BitVec 64))
(declare-fun temp440_201 () (_ BitVec 64))
(declare-fun temp440_202 () (_ BitVec 64))
(declare-fun temp440_203 () (_ BitVec 64))
(declare-fun temp440_204 () (_ BitVec 64))
(declare-fun temp440_205 () (_ BitVec 64))
(declare-fun temp440_206 () (_ BitVec 64))
(declare-fun temp440_207 () (_ BitVec 64))
(declare-fun temp440_208 () (_ BitVec 64))
(declare-fun temp440_209 () (_ BitVec 64))
(declare-fun temp440_210 () (_ BitVec 64))
(declare-fun temp440_211 () (_ BitVec 64))
(declare-fun temp440_212 () (_ BitVec 64))
(declare-fun temp440_213 () (_ BitVec 64))
(declare-fun temp440_214 () (_ BitVec 64))
(declare-fun temp440_215 () (_ BitVec 64))
(declare-fun temp440_216 () (_ BitVec 64))
(declare-fun temp440_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp440_218 () (_ BitVec 64))
(declare-fun temp440_220 () (_ BitVec 64))
(declare-fun temp440_221 () (_ BitVec 64))
(declare-fun temp440_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp440_222 () (_ BitVec 64))
(declare-fun temp440_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp440_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp440_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp440_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp440_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp440_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp440_229 () (_ BitVec 64))
(declare-fun temp440_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp440_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp440_232 () (_ BitVec 64))
(declare-fun temp440_233 () (_ BitVec 64))
(declare-fun temp440_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp440_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp440_236 () (_ BitVec 64))
(declare-fun temp440_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp440_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp440_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun var6107536 () (_ BitVec 64))
(declare-fun temp440_240 () (_ BitVec 64))
(declare-fun var6435216 () (_ BitVec 64))
(declare-fun temp440_241 () (_ BitVec 64))
(declare-fun temp440_242 () (_ BitVec 64))
(declare-fun var7877396 () (_ BitVec 64))
(declare-fun var7877363 () (_ BitVec 64))
(declare-fun var7745927 () (_ BitVec 64))
(declare-fun var7745923 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp440_243 () (_ BitVec 64))
(assert (= temp440_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp440_1)))
(assert (= temp440_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp440_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_3 #x0000000000000000))
(assert (= var79869 temp440_3))
(assert (= temp440_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp440_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_5 #x0000000000000000))
(assert (= var79914 temp440_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp440_6 #x0000000000000000))
(assert (= temp440_7 temp440_6))
(assert (= temp440_8 (select ARGNAME_padding_NAMEEND_VAL temp440_7)))
(assert (= temp440_9 #x0000000000000001))
(assert (= temp440_10 temp440_9))
(assert (= temp440_11 (select ARGNAME_padding_NAMEEND_VAL temp440_10)))
(assert (= temp440_12 #x0000000000000002))
(assert (= temp440_13 temp440_12))
(assert (= temp440_14 (select ARGNAME_padding_NAMEEND_VAL temp440_13)))
(assert (= temp440_15 #x0000000000000003))
(assert (= temp440_16 temp440_15))
(assert (= temp440_17 (select ARGNAME_padding_NAMEEND_VAL temp440_16)))
(assert (= temp440_18 #x0000000000000004))
(assert (= temp440_19 temp440_18))
(assert (= temp440_20 (select ARGNAME_padding_NAMEEND_VAL temp440_19)))
(assert (= temp440_21 #x0000000000000005))
(assert (= temp440_22 temp440_21))
(assert (= temp440_23 (select ARGNAME_padding_NAMEEND_VAL temp440_22)))
(assert (= temp440_24 #x0000000000000000))
(assert (= temp440_25 #x0000000000000000))
(assert (= temp440_26 temp440_25))
(assert (= temp440_27 (select ARGNAME_padding_NAMEEND_VAL temp440_26)))
(assert (= temp440_28 #x0000000000000000))
(assert (= temp440_29 #x0000000000000001))
(assert (= temp440_30 temp440_29))
(assert (= temp440_31 (select ARGNAME_padding_NAMEEND_VAL temp440_30)))
(assert (= temp440_32 #x0000000000000000))
(assert (= temp440_33 #x0000000000000002))
(assert (= temp440_34 temp440_33))
(assert (= temp440_35 (select ARGNAME_padding_NAMEEND_VAL temp440_34)))
(assert (= temp440_36 #x0000000000000000))
(assert (= temp440_37 #x0000000000000003))
(assert (= temp440_38 temp440_37))
(assert (= temp440_39 (select ARGNAME_padding_NAMEEND_VAL temp440_38)))
(assert (= temp440_40 #x0000000000000000))
(assert (= temp440_41 #x0000000000000004))
(assert (= temp440_42 temp440_41))
(assert (= temp440_43 (select ARGNAME_padding_NAMEEND_VAL temp440_42)))
(assert (= temp440_44 #x0000000000000000))
(assert (= temp440_45 #x0000000000000005))
(assert (= temp440_46 temp440_45))
(assert (= temp440_47 (select ARGNAME_padding_NAMEEND_VAL temp440_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp440_27 temp440_24)
             (bvslt temp440_31 temp440_28)
             (bvslt temp440_35 temp440_32)
             (bvslt temp440_39 temp440_36)
             (bvslt temp440_43 temp440_40)
             (bvslt temp440_47 temp440_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_48 #x0000000000000000))
(assert (= var1322786 temp440_48))
(assert (= temp440_49 #x0000000000000000))
(assert (= temp440_50 temp440_49))
(assert (= temp440_51 (select ARGNAME_output_padding_NAMEEND_VAL temp440_50)))
(assert (= temp440_52 #x0000000000000001))
(assert (= temp440_53 temp440_52))
(assert (= temp440_54 (select ARGNAME_output_padding_NAMEEND_VAL temp440_53)))
(assert (= temp440_55 #x0000000000000002))
(assert (= temp440_56 temp440_55))
(assert (= temp440_57 (select ARGNAME_output_padding_NAMEEND_VAL temp440_56)))
(assert (= temp440_58 #x0000000000000003))
(assert (= temp440_59 temp440_58))
(assert (= temp440_60 (select ARGNAME_output_padding_NAMEEND_VAL temp440_59)))
(assert (= temp440_61 #x0000000000000004))
(assert (= temp440_62 temp440_61))
(assert (= temp440_63 (select ARGNAME_output_padding_NAMEEND_VAL temp440_62)))
(assert (= temp440_64 #x0000000000000005))
(assert (= temp440_65 temp440_64))
(assert (= temp440_66 (select ARGNAME_output_padding_NAMEEND_VAL temp440_65)))
(assert (= temp440_67 #x0000000000000000))
(assert (= temp440_68 #x0000000000000000))
(assert (= temp440_69 temp440_68))
(assert (= temp440_70 (select ARGNAME_output_padding_NAMEEND_VAL temp440_69)))
(assert (= temp440_71 #x0000000000000000))
(assert (= temp440_72 #x0000000000000001))
(assert (= temp440_73 temp440_72))
(assert (= temp440_74 (select ARGNAME_output_padding_NAMEEND_VAL temp440_73)))
(assert (= temp440_75 #x0000000000000000))
(assert (= temp440_76 #x0000000000000002))
(assert (= temp440_77 temp440_76))
(assert (= temp440_78 (select ARGNAME_output_padding_NAMEEND_VAL temp440_77)))
(assert (= temp440_79 #x0000000000000000))
(assert (= temp440_80 #x0000000000000003))
(assert (= temp440_81 temp440_80))
(assert (= temp440_82 (select ARGNAME_output_padding_NAMEEND_VAL temp440_81)))
(assert (= temp440_83 #x0000000000000000))
(assert (= temp440_84 #x0000000000000004))
(assert (= temp440_85 temp440_84))
(assert (= temp440_86 (select ARGNAME_output_padding_NAMEEND_VAL temp440_85)))
(assert (= temp440_87 #x0000000000000000))
(assert (= temp440_88 #x0000000000000005))
(assert (= temp440_89 temp440_88))
(assert (= temp440_90 (select ARGNAME_output_padding_NAMEEND_VAL temp440_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp440_70 temp440_67)
             (bvslt temp440_74 temp440_71)
             (bvslt temp440_78 temp440_75)
             (bvslt temp440_82 temp440_79)
             (bvslt temp440_86 temp440_83)
             (bvslt temp440_90 temp440_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_91 #x0000000000000000))
(assert (= var1322797 temp440_91))
(assert (= temp440_92 #x0000000000000000))
(assert (= temp440_93 temp440_92))
(assert (= temp440_94 (select ARGNAME_stride_NAMEEND_VAL temp440_93)))
(assert (= temp440_95 #x0000000000000001))
(assert (= temp440_96 temp440_95))
(assert (= temp440_97 (select ARGNAME_stride_NAMEEND_VAL temp440_96)))
(assert (= temp440_98 #x0000000000000002))
(assert (= temp440_99 temp440_98))
(assert (= temp440_100 (select ARGNAME_stride_NAMEEND_VAL temp440_99)))
(assert (= temp440_101 #x0000000000000003))
(assert (= temp440_102 temp440_101))
(assert (= temp440_103 (select ARGNAME_stride_NAMEEND_VAL temp440_102)))
(assert (= temp440_104 #x0000000000000004))
(assert (= temp440_105 temp440_104))
(assert (= temp440_106 (select ARGNAME_stride_NAMEEND_VAL temp440_105)))
(assert (= temp440_107 #x0000000000000005))
(assert (= temp440_108 temp440_107))
(assert (= temp440_109 (select ARGNAME_stride_NAMEEND_VAL temp440_108)))
(assert (= temp440_110 #x0000000000000000))
(assert (= temp440_111 #x0000000000000000))
(assert (= temp440_112 temp440_111))
(assert (= temp440_113 (select ARGNAME_stride_NAMEEND_VAL temp440_112)))
(assert (= temp440_114 #x0000000000000000))
(assert (= temp440_115 #x0000000000000001))
(assert (= temp440_116 temp440_115))
(assert (= temp440_117 (select ARGNAME_stride_NAMEEND_VAL temp440_116)))
(assert (= temp440_118 #x0000000000000000))
(assert (= temp440_119 #x0000000000000002))
(assert (= temp440_120 temp440_119))
(assert (= temp440_121 (select ARGNAME_stride_NAMEEND_VAL temp440_120)))
(assert (= temp440_122 #x0000000000000000))
(assert (= temp440_123 #x0000000000000003))
(assert (= temp440_124 temp440_123))
(assert (= temp440_125 (select ARGNAME_stride_NAMEEND_VAL temp440_124)))
(assert (= temp440_126 #x0000000000000000))
(assert (= temp440_127 #x0000000000000004))
(assert (= temp440_128 temp440_127))
(assert (= temp440_129 (select ARGNAME_stride_NAMEEND_VAL temp440_128)))
(assert (= temp440_130 #x0000000000000000))
(assert (= temp440_131 #x0000000000000005))
(assert (= temp440_132 temp440_131))
(assert (= temp440_133 (select ARGNAME_stride_NAMEEND_VAL temp440_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp440_113 temp440_110)
             (bvsle temp440_117 temp440_114)
             (bvsle temp440_121 temp440_118)
             (bvsle temp440_125 temp440_122)
             (bvsle temp440_129 temp440_126)
             (bvsle temp440_133 temp440_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_134 #x0000000000000000))
(assert (= var1322807 temp440_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_135 #x0000000000000001))
(assert (= var1322819 temp440_135))
(assert (= temp440_136 #x0000000000000000))
(assert (= var1310898 temp440_136))
(assert (= temp440_137 #x0000000000000000))
(assert (= temp440_138 temp440_137))
(assert (= temp440_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_138)))
(assert (= temp440_140 #x0000000000000001))
(assert (= temp440_141 temp440_140))
(assert (= temp440_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_141)))
(assert (= temp440_143 #x0000000000000002))
(assert (= temp440_144 temp440_143))
(assert (= temp440_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_144)))
(assert (= temp440_146 #x0000000000000003))
(assert (= temp440_147 temp440_146))
(assert (= temp440_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_147)))
(assert (= temp440_149 #x0000000000000004))
(assert (= temp440_150 temp440_149))
(assert (= temp440_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_150)))
(assert (= temp440_152 #x0000000000000005))
(assert (= temp440_153 temp440_152))
(assert (= temp440_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_153)))
(assert (= temp440_156 var1310898))
(assert (= temp440_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_156)))
(assert (= temp440_155 temp440_157))
(assert (= var1322852
   (ite (bvslt temp440_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_158 #x0000000000000000))
(assert (= var1322852 temp440_158))
(assert (= temp440_159 #x0000000000000000))
(assert (= var1310898 temp440_159))
(assert (= temp440_161 var1310898))
(assert (= temp440_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_161)))
(assert (= temp440_160 temp440_162))
(assert (= var1322874 (bvsmod temp440_160 ARGNAME_groups_NAMEEND)))
(assert (= temp440_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp440_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp440_164 #x0000000000000001))
(assert (= var1322875 temp440_164))
(assert (= temp440_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp440_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_166 #x0000000000000001))
(assert (= var1322895 temp440_166))
(assert (= temp440_167 #x0000000000000001))
(assert (= var1311786 temp440_167))
(assert (= temp440_168 #x0000000000000000))
(assert (= temp440_169 temp440_168))
(assert (= temp440_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp440_169)))
(assert (= temp440_171 #x0000000000000001))
(assert (= temp440_172 temp440_171))
(assert (= temp440_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp440_172)))
(assert (= temp440_174 #x0000000000000002))
(assert (= temp440_175 temp440_174))
(assert (= temp440_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp440_175)))
(assert (= temp440_177 #x0000000000000003))
(assert (= temp440_178 temp440_177))
(assert (= temp440_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp440_178)))
(assert (= temp440_180 #x0000000000000004))
(assert (= temp440_181 temp440_180))
(assert (= temp440_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp440_181)))
(assert (= temp440_183 #x0000000000000005))
(assert (= temp440_184 temp440_183))
(assert (= temp440_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp440_184)))
(assert (= temp440_186 #x0000000000000000))
(assert (= temp440_187
   (ite (bvslt var1311786 temp440_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp440_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp440_187)))
(assert (= var1322903 temp440_188))
(assert (bvslt (ite (bvslt var1311786 temp440_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp440_189 #x0000000000000001))
(assert (= var1311786 temp440_189))
(assert (= temp440_191 var1311786))
(assert (= temp440_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_191)))
(assert (= temp440_190 temp440_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp440_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp440_193 #x0000000000000001))
(assert (= var1322908 temp440_193))
(assert (= temp440_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp440_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_195 #x0000000000000001))
(assert (= var1322975 temp440_195))
(assert (= temp440_196 #x0000000000000000))
(assert (= var1310898 temp440_196))
(assert (= temp440_197 #x0000000000000000))
(assert (= temp440_198 temp440_197))
(assert (= temp440_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp440_198)))
(assert (= temp440_200 #x0000000000000001))
(assert (= temp440_201 temp440_200))
(assert (= temp440_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp440_201)))
(assert (= temp440_203 #x0000000000000002))
(assert (= temp440_204 temp440_203))
(assert (= temp440_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp440_204)))
(assert (= temp440_206 #x0000000000000003))
(assert (= temp440_207 temp440_206))
(assert (= temp440_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp440_207)))
(assert (= temp440_209 #x0000000000000004))
(assert (= temp440_210 temp440_209))
(assert (= temp440_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp440_210)))
(assert (= temp440_212 #x0000000000000005))
(assert (= temp440_213 temp440_212))
(assert (= temp440_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp440_213)))
(assert (= temp440_215 #x0000000000000000))
(assert (= temp440_216
   (ite (bvslt var1310898 temp440_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp440_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp440_216)))
(assert (= var1322977 temp440_217))
(assert (bvslt (ite (bvslt var1310898 temp440_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp440_218 #x0000000000000000))
(assert (= var1310898 temp440_218))
(assert (= temp440_220 var1310898))
(assert (= temp440_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp440_220)))
(assert (= temp440_219 temp440_221))
(assert (= var1322980
   (ite (= var1322977 temp440_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp440_222 #x0000000000000001))
(assert (= var1322980 temp440_222))
(assert (= temp440_223 #x0000000000000002))
(assert (= var1848169 temp440_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp440_225 #x0000000000000001))
(assert (= var1323065 temp440_225))
(assert (= temp440_226 #x0000000000000001))
(assert (= var3486735 temp440_226))
(assert (= temp440_227 #x0000000000000001))
(assert (= var3814415 temp440_227))
(assert (= temp440_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp440_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_229 #x0000000000000001))
(assert (= var79986 temp440_229))
(assert (= temp440_230 #x0000000000000001))
(assert (= var80116 temp440_230))
(assert (= var4796905 var80116))
(assert (= temp440_231 #x0000000000000000))
(assert (= var4784306 temp440_231))
(assert (= temp440_232 #x0000000000000000))
(assert (= temp440_233
   (ite (bvslt var4784306 temp440_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp440_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp440_233)))
(assert (= var4796924 temp440_234))
(assert (bvslt (ite (bvslt var4784306 temp440_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp440_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp440_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp440_236 #x0000000000000001))
(assert (= var4796925 temp440_236))
(assert (= temp440_237 #x0000000000000000))
(assert (= var4996927 temp440_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp440_238 #x0000000000000002))
(assert (= var5125763 temp440_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp440_239 #x0000000000000000))
(assert (= var5191324 temp440_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5845392 var80129))
(assert (= var6107536 var80129))
(assert (= temp440_240 #x0000000000000000))
(assert (= var6435216 temp440_240))
(assert (= temp440_241 #x0000000000000001))
(assert (= var79986 temp440_241))
(assert (= temp440_242 #x0000000000000000))
(assert (= var7877396 temp440_242))
(assert (= var7877363 var7877396))
(assert (= var7745927 var7877363))
(assert (= var7745923 var7745927))
(assert (= var81597 var7745923))
(assert (= temp440_243 #x0000000000000000))
(assert (= var81597 temp440_243))
(model-add temp440_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp440_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp440_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






