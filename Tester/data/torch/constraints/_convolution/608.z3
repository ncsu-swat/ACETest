(declare-fun temp808_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp808_2 () (_ BitVec 64))
(declare-fun temp808_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp808_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp808_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp808_6 () (_ BitVec 64))
(declare-fun temp808_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_8 () (_ BitVec 64))
(declare-fun temp808_9 () (_ BitVec 64))
(declare-fun temp808_10 () (_ BitVec 64))
(declare-fun temp808_11 () (_ BitVec 64))
(declare-fun temp808_12 () (_ BitVec 64))
(declare-fun temp808_13 () (_ BitVec 64))
(declare-fun temp808_14 () (_ BitVec 64))
(declare-fun temp808_15 () (_ BitVec 64))
(declare-fun temp808_16 () (_ BitVec 64))
(declare-fun temp808_17 () (_ BitVec 64))
(declare-fun temp808_18 () (_ BitVec 64))
(declare-fun temp808_19 () (_ BitVec 64))
(declare-fun temp808_20 () (_ BitVec 64))
(declare-fun temp808_21 () (_ BitVec 64))
(declare-fun temp808_22 () (_ BitVec 64))
(declare-fun temp808_23 () (_ BitVec 64))
(declare-fun temp808_24 () (_ BitVec 64))
(declare-fun temp808_25 () (_ BitVec 64))
(declare-fun temp808_26 () (_ BitVec 64))
(declare-fun temp808_27 () (_ BitVec 64))
(declare-fun temp808_28 () (_ BitVec 64))
(declare-fun temp808_29 () (_ BitVec 64))
(declare-fun temp808_30 () (_ BitVec 64))
(declare-fun temp808_31 () (_ BitVec 64))
(declare-fun temp808_32 () (_ BitVec 64))
(declare-fun temp808_33 () (_ BitVec 64))
(declare-fun temp808_34 () (_ BitVec 64))
(declare-fun temp808_35 () (_ BitVec 64))
(declare-fun temp808_36 () (_ BitVec 64))
(declare-fun temp808_37 () (_ BitVec 64))
(declare-fun temp808_38 () (_ BitVec 64))
(declare-fun temp808_39 () (_ BitVec 64))
(declare-fun temp808_40 () (_ BitVec 64))
(declare-fun temp808_41 () (_ BitVec 64))
(declare-fun temp808_42 () (_ BitVec 64))
(declare-fun temp808_43 () (_ BitVec 64))
(declare-fun temp808_44 () (_ BitVec 64))
(declare-fun temp808_45 () (_ BitVec 64))
(declare-fun temp808_46 () (_ BitVec 64))
(declare-fun temp808_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp808_48 () (_ BitVec 64))
(declare-fun temp808_49 () (_ BitVec 64))
(declare-fun temp808_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_51 () (_ BitVec 64))
(declare-fun temp808_52 () (_ BitVec 64))
(declare-fun temp808_53 () (_ BitVec 64))
(declare-fun temp808_54 () (_ BitVec 64))
(declare-fun temp808_55 () (_ BitVec 64))
(declare-fun temp808_56 () (_ BitVec 64))
(declare-fun temp808_57 () (_ BitVec 64))
(declare-fun temp808_58 () (_ BitVec 64))
(declare-fun temp808_59 () (_ BitVec 64))
(declare-fun temp808_60 () (_ BitVec 64))
(declare-fun temp808_61 () (_ BitVec 64))
(declare-fun temp808_62 () (_ BitVec 64))
(declare-fun temp808_63 () (_ BitVec 64))
(declare-fun temp808_64 () (_ BitVec 64))
(declare-fun temp808_65 () (_ BitVec 64))
(declare-fun temp808_66 () (_ BitVec 64))
(declare-fun temp808_67 () (_ BitVec 64))
(declare-fun temp808_68 () (_ BitVec 64))
(declare-fun temp808_69 () (_ BitVec 64))
(declare-fun temp808_70 () (_ BitVec 64))
(declare-fun temp808_71 () (_ BitVec 64))
(declare-fun temp808_72 () (_ BitVec 64))
(declare-fun temp808_73 () (_ BitVec 64))
(declare-fun temp808_74 () (_ BitVec 64))
(declare-fun temp808_75 () (_ BitVec 64))
(declare-fun temp808_76 () (_ BitVec 64))
(declare-fun temp808_77 () (_ BitVec 64))
(declare-fun temp808_78 () (_ BitVec 64))
(declare-fun temp808_79 () (_ BitVec 64))
(declare-fun temp808_80 () (_ BitVec 64))
(declare-fun temp808_81 () (_ BitVec 64))
(declare-fun temp808_82 () (_ BitVec 64))
(declare-fun temp808_83 () (_ BitVec 64))
(declare-fun temp808_84 () (_ BitVec 64))
(declare-fun temp808_85 () (_ BitVec 64))
(declare-fun temp808_86 () (_ BitVec 64))
(declare-fun temp808_87 () (_ BitVec 64))
(declare-fun temp808_88 () (_ BitVec 64))
(declare-fun temp808_89 () (_ BitVec 64))
(declare-fun temp808_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp808_91 () (_ BitVec 64))
(declare-fun temp808_92 () (_ BitVec 64))
(declare-fun temp808_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_94 () (_ BitVec 64))
(declare-fun temp808_95 () (_ BitVec 64))
(declare-fun temp808_96 () (_ BitVec 64))
(declare-fun temp808_97 () (_ BitVec 64))
(declare-fun temp808_98 () (_ BitVec 64))
(declare-fun temp808_99 () (_ BitVec 64))
(declare-fun temp808_100 () (_ BitVec 64))
(declare-fun temp808_101 () (_ BitVec 64))
(declare-fun temp808_102 () (_ BitVec 64))
(declare-fun temp808_103 () (_ BitVec 64))
(declare-fun temp808_104 () (_ BitVec 64))
(declare-fun temp808_105 () (_ BitVec 64))
(declare-fun temp808_106 () (_ BitVec 64))
(declare-fun temp808_107 () (_ BitVec 64))
(declare-fun temp808_108 () (_ BitVec 64))
(declare-fun temp808_109 () (_ BitVec 64))
(declare-fun temp808_110 () (_ BitVec 64))
(declare-fun temp808_111 () (_ BitVec 64))
(declare-fun temp808_112 () (_ BitVec 64))
(declare-fun temp808_113 () (_ BitVec 64))
(declare-fun temp808_114 () (_ BitVec 64))
(declare-fun temp808_115 () (_ BitVec 64))
(declare-fun temp808_116 () (_ BitVec 64))
(declare-fun temp808_117 () (_ BitVec 64))
(declare-fun temp808_118 () (_ BitVec 64))
(declare-fun temp808_119 () (_ BitVec 64))
(declare-fun temp808_120 () (_ BitVec 64))
(declare-fun temp808_121 () (_ BitVec 64))
(declare-fun temp808_122 () (_ BitVec 64))
(declare-fun temp808_123 () (_ BitVec 64))
(declare-fun temp808_124 () (_ BitVec 64))
(declare-fun temp808_125 () (_ BitVec 64))
(declare-fun temp808_126 () (_ BitVec 64))
(declare-fun temp808_127 () (_ BitVec 64))
(declare-fun temp808_128 () (_ BitVec 64))
(declare-fun temp808_129 () (_ BitVec 64))
(declare-fun temp808_130 () (_ BitVec 64))
(declare-fun temp808_131 () (_ BitVec 64))
(declare-fun temp808_132 () (_ BitVec 64))
(declare-fun temp808_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp808_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp808_135 () (_ BitVec 64))
(declare-fun temp808_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp808_137 () (_ BitVec 64))
(declare-fun temp808_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_139 () (_ BitVec 64))
(declare-fun temp808_140 () (_ BitVec 64))
(declare-fun temp808_141 () (_ BitVec 64))
(declare-fun temp808_142 () (_ BitVec 64))
(declare-fun temp808_143 () (_ BitVec 64))
(declare-fun temp808_144 () (_ BitVec 64))
(declare-fun temp808_145 () (_ BitVec 64))
(declare-fun temp808_146 () (_ BitVec 64))
(declare-fun temp808_147 () (_ BitVec 64))
(declare-fun temp808_148 () (_ BitVec 64))
(declare-fun temp808_149 () (_ BitVec 64))
(declare-fun temp808_150 () (_ BitVec 64))
(declare-fun temp808_151 () (_ BitVec 64))
(declare-fun temp808_152 () (_ BitVec 64))
(declare-fun temp808_153 () (_ BitVec 64))
(declare-fun temp808_154 () (_ BitVec 64))
(declare-fun temp808_156 () (_ BitVec 64))
(declare-fun temp808_157 () (_ BitVec 64))
(declare-fun temp808_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp808_158 () (_ BitVec 64))
(declare-fun temp808_159 () (_ BitVec 64))
(declare-fun temp808_161 () (_ BitVec 64))
(declare-fun temp808_162 () (_ BitVec 64))
(declare-fun temp808_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp808_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp808_164 () (_ BitVec 64))
(declare-fun temp808_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp808_166 () (_ BitVec 64))
(declare-fun temp808_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp808_168 () (_ BitVec 64))
(declare-fun temp808_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_170 () (_ BitVec 64))
(declare-fun temp808_171 () (_ BitVec 64))
(declare-fun temp808_172 () (_ BitVec 64))
(declare-fun temp808_173 () (_ BitVec 64))
(declare-fun temp808_174 () (_ BitVec 64))
(declare-fun temp808_175 () (_ BitVec 64))
(declare-fun temp808_176 () (_ BitVec 64))
(declare-fun temp808_177 () (_ BitVec 64))
(declare-fun temp808_178 () (_ BitVec 64))
(declare-fun temp808_179 () (_ BitVec 64))
(declare-fun temp808_180 () (_ BitVec 64))
(declare-fun temp808_181 () (_ BitVec 64))
(declare-fun temp808_182 () (_ BitVec 64))
(declare-fun temp808_183 () (_ BitVec 64))
(declare-fun temp808_184 () (_ BitVec 64))
(declare-fun temp808_185 () (_ BitVec 64))
(declare-fun temp808_186 () (_ BitVec 64))
(declare-fun temp808_187 () (_ BitVec 64))
(declare-fun temp808_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp808_189 () (_ BitVec 64))
(declare-fun temp808_191 () (_ BitVec 64))
(declare-fun temp808_192 () (_ BitVec 64))
(declare-fun temp808_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp808_193 () (_ BitVec 64))
(declare-fun temp808_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp808_195 () (_ BitVec 64))
(declare-fun temp808_196 () (_ BitVec 64))
(declare-fun temp808_197 () (_ BitVec 64))
(declare-fun temp808_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_199 () (_ BitVec 64))
(declare-fun temp808_200 () (_ BitVec 64))
(declare-fun temp808_201 () (_ BitVec 64))
(declare-fun temp808_202 () (_ BitVec 64))
(declare-fun temp808_203 () (_ BitVec 64))
(declare-fun temp808_204 () (_ BitVec 64))
(declare-fun temp808_205 () (_ BitVec 64))
(declare-fun temp808_206 () (_ BitVec 64))
(declare-fun temp808_207 () (_ BitVec 64))
(declare-fun temp808_208 () (_ BitVec 64))
(declare-fun temp808_209 () (_ BitVec 64))
(declare-fun temp808_210 () (_ BitVec 64))
(declare-fun temp808_211 () (_ BitVec 64))
(declare-fun temp808_212 () (_ BitVec 64))
(declare-fun temp808_213 () (_ BitVec 64))
(declare-fun temp808_214 () (_ BitVec 64))
(declare-fun temp808_215 () (_ BitVec 64))
(declare-fun temp808_216 () (_ BitVec 64))
(declare-fun temp808_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp808_218 () (_ BitVec 64))
(declare-fun temp808_220 () (_ BitVec 64))
(declare-fun temp808_221 () (_ BitVec 64))
(declare-fun temp808_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp808_222 () (_ BitVec 64))
(declare-fun temp808_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp808_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp808_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp808_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp808_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp808_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp808_229 () (_ BitVec 64))
(declare-fun temp808_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp808_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp808_232 () (_ BitVec 64))
(declare-fun temp808_233 () (_ BitVec 64))
(declare-fun temp808_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp808_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp808_236 () (_ BitVec 64))
(declare-fun temp808_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp808_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp808_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp808_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80747 () (_ BitVec 64))
(declare-fun temp808_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80749 () (_ BitVec 64))
(declare-fun temp808_242 () (_ BitVec 64))
(assert (= temp808_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp808_1)))
(assert (= temp808_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp808_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_3 #x0000000000000000))
(assert (= var79869 temp808_3))
(assert (= temp808_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp808_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_5 #x0000000000000000))
(assert (= var79914 temp808_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp808_6 #x0000000000000000))
(assert (= temp808_7 temp808_6))
(assert (= temp808_8 (select ARGNAME_padding_NAMEEND_VAL temp808_7)))
(assert (= temp808_9 #x0000000000000001))
(assert (= temp808_10 temp808_9))
(assert (= temp808_11 (select ARGNAME_padding_NAMEEND_VAL temp808_10)))
(assert (= temp808_12 #x0000000000000002))
(assert (= temp808_13 temp808_12))
(assert (= temp808_14 (select ARGNAME_padding_NAMEEND_VAL temp808_13)))
(assert (= temp808_15 #x0000000000000003))
(assert (= temp808_16 temp808_15))
(assert (= temp808_17 (select ARGNAME_padding_NAMEEND_VAL temp808_16)))
(assert (= temp808_18 #x0000000000000004))
(assert (= temp808_19 temp808_18))
(assert (= temp808_20 (select ARGNAME_padding_NAMEEND_VAL temp808_19)))
(assert (= temp808_21 #x0000000000000005))
(assert (= temp808_22 temp808_21))
(assert (= temp808_23 (select ARGNAME_padding_NAMEEND_VAL temp808_22)))
(assert (= temp808_24 #x0000000000000000))
(assert (= temp808_25 #x0000000000000000))
(assert (= temp808_26 temp808_25))
(assert (= temp808_27 (select ARGNAME_padding_NAMEEND_VAL temp808_26)))
(assert (= temp808_28 #x0000000000000000))
(assert (= temp808_29 #x0000000000000001))
(assert (= temp808_30 temp808_29))
(assert (= temp808_31 (select ARGNAME_padding_NAMEEND_VAL temp808_30)))
(assert (= temp808_32 #x0000000000000000))
(assert (= temp808_33 #x0000000000000002))
(assert (= temp808_34 temp808_33))
(assert (= temp808_35 (select ARGNAME_padding_NAMEEND_VAL temp808_34)))
(assert (= temp808_36 #x0000000000000000))
(assert (= temp808_37 #x0000000000000003))
(assert (= temp808_38 temp808_37))
(assert (= temp808_39 (select ARGNAME_padding_NAMEEND_VAL temp808_38)))
(assert (= temp808_40 #x0000000000000000))
(assert (= temp808_41 #x0000000000000004))
(assert (= temp808_42 temp808_41))
(assert (= temp808_43 (select ARGNAME_padding_NAMEEND_VAL temp808_42)))
(assert (= temp808_44 #x0000000000000000))
(assert (= temp808_45 #x0000000000000005))
(assert (= temp808_46 temp808_45))
(assert (= temp808_47 (select ARGNAME_padding_NAMEEND_VAL temp808_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp808_27 temp808_24)
             (bvslt temp808_31 temp808_28)
             (bvslt temp808_35 temp808_32)
             (bvslt temp808_39 temp808_36)
             (bvslt temp808_43 temp808_40)
             (bvslt temp808_47 temp808_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_48 #x0000000000000000))
(assert (= var1322786 temp808_48))
(assert (= temp808_49 #x0000000000000000))
(assert (= temp808_50 temp808_49))
(assert (= temp808_51 (select ARGNAME_output_padding_NAMEEND_VAL temp808_50)))
(assert (= temp808_52 #x0000000000000001))
(assert (= temp808_53 temp808_52))
(assert (= temp808_54 (select ARGNAME_output_padding_NAMEEND_VAL temp808_53)))
(assert (= temp808_55 #x0000000000000002))
(assert (= temp808_56 temp808_55))
(assert (= temp808_57 (select ARGNAME_output_padding_NAMEEND_VAL temp808_56)))
(assert (= temp808_58 #x0000000000000003))
(assert (= temp808_59 temp808_58))
(assert (= temp808_60 (select ARGNAME_output_padding_NAMEEND_VAL temp808_59)))
(assert (= temp808_61 #x0000000000000004))
(assert (= temp808_62 temp808_61))
(assert (= temp808_63 (select ARGNAME_output_padding_NAMEEND_VAL temp808_62)))
(assert (= temp808_64 #x0000000000000005))
(assert (= temp808_65 temp808_64))
(assert (= temp808_66 (select ARGNAME_output_padding_NAMEEND_VAL temp808_65)))
(assert (= temp808_67 #x0000000000000000))
(assert (= temp808_68 #x0000000000000000))
(assert (= temp808_69 temp808_68))
(assert (= temp808_70 (select ARGNAME_output_padding_NAMEEND_VAL temp808_69)))
(assert (= temp808_71 #x0000000000000000))
(assert (= temp808_72 #x0000000000000001))
(assert (= temp808_73 temp808_72))
(assert (= temp808_74 (select ARGNAME_output_padding_NAMEEND_VAL temp808_73)))
(assert (= temp808_75 #x0000000000000000))
(assert (= temp808_76 #x0000000000000002))
(assert (= temp808_77 temp808_76))
(assert (= temp808_78 (select ARGNAME_output_padding_NAMEEND_VAL temp808_77)))
(assert (= temp808_79 #x0000000000000000))
(assert (= temp808_80 #x0000000000000003))
(assert (= temp808_81 temp808_80))
(assert (= temp808_82 (select ARGNAME_output_padding_NAMEEND_VAL temp808_81)))
(assert (= temp808_83 #x0000000000000000))
(assert (= temp808_84 #x0000000000000004))
(assert (= temp808_85 temp808_84))
(assert (= temp808_86 (select ARGNAME_output_padding_NAMEEND_VAL temp808_85)))
(assert (= temp808_87 #x0000000000000000))
(assert (= temp808_88 #x0000000000000005))
(assert (= temp808_89 temp808_88))
(assert (= temp808_90 (select ARGNAME_output_padding_NAMEEND_VAL temp808_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp808_70 temp808_67)
             (bvslt temp808_74 temp808_71)
             (bvslt temp808_78 temp808_75)
             (bvslt temp808_82 temp808_79)
             (bvslt temp808_86 temp808_83)
             (bvslt temp808_90 temp808_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_91 #x0000000000000000))
(assert (= var1322797 temp808_91))
(assert (= temp808_92 #x0000000000000000))
(assert (= temp808_93 temp808_92))
(assert (= temp808_94 (select ARGNAME_stride_NAMEEND_VAL temp808_93)))
(assert (= temp808_95 #x0000000000000001))
(assert (= temp808_96 temp808_95))
(assert (= temp808_97 (select ARGNAME_stride_NAMEEND_VAL temp808_96)))
(assert (= temp808_98 #x0000000000000002))
(assert (= temp808_99 temp808_98))
(assert (= temp808_100 (select ARGNAME_stride_NAMEEND_VAL temp808_99)))
(assert (= temp808_101 #x0000000000000003))
(assert (= temp808_102 temp808_101))
(assert (= temp808_103 (select ARGNAME_stride_NAMEEND_VAL temp808_102)))
(assert (= temp808_104 #x0000000000000004))
(assert (= temp808_105 temp808_104))
(assert (= temp808_106 (select ARGNAME_stride_NAMEEND_VAL temp808_105)))
(assert (= temp808_107 #x0000000000000005))
(assert (= temp808_108 temp808_107))
(assert (= temp808_109 (select ARGNAME_stride_NAMEEND_VAL temp808_108)))
(assert (= temp808_110 #x0000000000000000))
(assert (= temp808_111 #x0000000000000000))
(assert (= temp808_112 temp808_111))
(assert (= temp808_113 (select ARGNAME_stride_NAMEEND_VAL temp808_112)))
(assert (= temp808_114 #x0000000000000000))
(assert (= temp808_115 #x0000000000000001))
(assert (= temp808_116 temp808_115))
(assert (= temp808_117 (select ARGNAME_stride_NAMEEND_VAL temp808_116)))
(assert (= temp808_118 #x0000000000000000))
(assert (= temp808_119 #x0000000000000002))
(assert (= temp808_120 temp808_119))
(assert (= temp808_121 (select ARGNAME_stride_NAMEEND_VAL temp808_120)))
(assert (= temp808_122 #x0000000000000000))
(assert (= temp808_123 #x0000000000000003))
(assert (= temp808_124 temp808_123))
(assert (= temp808_125 (select ARGNAME_stride_NAMEEND_VAL temp808_124)))
(assert (= temp808_126 #x0000000000000000))
(assert (= temp808_127 #x0000000000000004))
(assert (= temp808_128 temp808_127))
(assert (= temp808_129 (select ARGNAME_stride_NAMEEND_VAL temp808_128)))
(assert (= temp808_130 #x0000000000000000))
(assert (= temp808_131 #x0000000000000005))
(assert (= temp808_132 temp808_131))
(assert (= temp808_133 (select ARGNAME_stride_NAMEEND_VAL temp808_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp808_113 temp808_110)
             (bvsle temp808_117 temp808_114)
             (bvsle temp808_121 temp808_118)
             (bvsle temp808_125 temp808_122)
             (bvsle temp808_129 temp808_126)
             (bvsle temp808_133 temp808_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_134 #x0000000000000000))
(assert (= var1322807 temp808_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_135 #x0000000000000001))
(assert (= var1322819 temp808_135))
(assert (= temp808_136 #x0000000000000000))
(assert (= var1310898 temp808_136))
(assert (= temp808_137 #x0000000000000000))
(assert (= temp808_138 temp808_137))
(assert (= temp808_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_138)))
(assert (= temp808_140 #x0000000000000001))
(assert (= temp808_141 temp808_140))
(assert (= temp808_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_141)))
(assert (= temp808_143 #x0000000000000002))
(assert (= temp808_144 temp808_143))
(assert (= temp808_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_144)))
(assert (= temp808_146 #x0000000000000003))
(assert (= temp808_147 temp808_146))
(assert (= temp808_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_147)))
(assert (= temp808_149 #x0000000000000004))
(assert (= temp808_150 temp808_149))
(assert (= temp808_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_150)))
(assert (= temp808_152 #x0000000000000005))
(assert (= temp808_153 temp808_152))
(assert (= temp808_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_153)))
(assert (= temp808_156 var1310898))
(assert (= temp808_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_156)))
(assert (= temp808_155 temp808_157))
(assert (= var1322852
   (ite (bvslt temp808_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_158 #x0000000000000000))
(assert (= var1322852 temp808_158))
(assert (= temp808_159 #x0000000000000000))
(assert (= var1310898 temp808_159))
(assert (= temp808_161 var1310898))
(assert (= temp808_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_161)))
(assert (= temp808_160 temp808_162))
(assert (= var1322874 (bvsmod temp808_160 ARGNAME_groups_NAMEEND)))
(assert (= temp808_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp808_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_164 #x0000000000000001))
(assert (= var1322875 temp808_164))
(assert (= temp808_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp808_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_166 #x0000000000000001))
(assert (= var1322895 temp808_166))
(assert (= temp808_167 #x0000000000000001))
(assert (= var1311786 temp808_167))
(assert (= temp808_168 #x0000000000000000))
(assert (= temp808_169 temp808_168))
(assert (= temp808_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_169)))
(assert (= temp808_171 #x0000000000000001))
(assert (= temp808_172 temp808_171))
(assert (= temp808_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_172)))
(assert (= temp808_174 #x0000000000000002))
(assert (= temp808_175 temp808_174))
(assert (= temp808_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_175)))
(assert (= temp808_177 #x0000000000000003))
(assert (= temp808_178 temp808_177))
(assert (= temp808_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_178)))
(assert (= temp808_180 #x0000000000000004))
(assert (= temp808_181 temp808_180))
(assert (= temp808_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_181)))
(assert (= temp808_183 #x0000000000000005))
(assert (= temp808_184 temp808_183))
(assert (= temp808_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_184)))
(assert (= temp808_186 #x0000000000000000))
(assert (= temp808_187
   (ite (bvslt var1311786 temp808_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp808_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_187)))
(assert (= var1322903 temp808_188))
(assert (bvslt (ite (bvslt var1311786 temp808_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp808_189 #x0000000000000001))
(assert (= var1311786 temp808_189))
(assert (= temp808_191 var1311786))
(assert (= temp808_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_191)))
(assert (= temp808_190 temp808_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp808_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_193 #x0000000000000001))
(assert (= var1322908 temp808_193))
(assert (= temp808_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp808_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_195 #x0000000000000001))
(assert (= var1322975 temp808_195))
(assert (= temp808_196 #x0000000000000000))
(assert (= var1310898 temp808_196))
(assert (= temp808_197 #x0000000000000000))
(assert (= temp808_198 temp808_197))
(assert (= temp808_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp808_198)))
(assert (= temp808_200 #x0000000000000001))
(assert (= temp808_201 temp808_200))
(assert (= temp808_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp808_201)))
(assert (= temp808_203 #x0000000000000002))
(assert (= temp808_204 temp808_203))
(assert (= temp808_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp808_204)))
(assert (= temp808_206 #x0000000000000003))
(assert (= temp808_207 temp808_206))
(assert (= temp808_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp808_207)))
(assert (= temp808_209 #x0000000000000004))
(assert (= temp808_210 temp808_209))
(assert (= temp808_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp808_210)))
(assert (= temp808_212 #x0000000000000005))
(assert (= temp808_213 temp808_212))
(assert (= temp808_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp808_213)))
(assert (= temp808_215 #x0000000000000000))
(assert (= temp808_216
   (ite (bvslt var1310898 temp808_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp808_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp808_216)))
(assert (= var1322977 temp808_217))
(assert (bvslt (ite (bvslt var1310898 temp808_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp808_218 #x0000000000000000))
(assert (= var1310898 temp808_218))
(assert (= temp808_220 var1310898))
(assert (= temp808_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_220)))
(assert (= temp808_219 temp808_221))
(assert (= var1322980
   (ite (= var1322977 temp808_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_222 #x0000000000000001))
(assert (= var1322980 temp808_222))
(assert (= temp808_223 #x0000000000000002))
(assert (= var1848169 temp808_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp808_225 #x0000000000000001))
(assert (= var1323065 temp808_225))
(assert (= temp808_226 #x0000000000000001))
(assert (= var3486735 temp808_226))
(assert (= temp808_227 #x0000000000000001))
(assert (= var3814415 temp808_227))
(assert (= temp808_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp808_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_229 #x0000000000000001))
(assert (= var79986 temp808_229))
(assert (= temp808_230 #x0000000000000001))
(assert (= var80116 temp808_230))
(assert (= var4796905 var80116))
(assert (= temp808_231 #x0000000000000000))
(assert (= var4784306 temp808_231))
(assert (= temp808_232 #x0000000000000000))
(assert (= temp808_233
   (ite (bvslt var4784306 temp808_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp808_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_233)))
(assert (= var4796924 temp808_234))
(assert (bvslt (ite (bvslt var4784306 temp808_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp808_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp808_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_236 #x0000000000000001))
(assert (= var4796925 temp808_236))
(assert (= temp808_237 #x0000000000000000))
(assert (= var4996927 temp808_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp808_238 #x0000000000000002))
(assert (= var5125763 temp808_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_239 #x0000000000000000))
(assert (= var5191324 temp808_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp808_240 #x0000000000000000))
(assert (= var80747
   (ite (distinct ARGNAME_benchmark_NAMEEND temp808_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_241 #x0000000000000000))
(assert (= var80749
   (ite (distinct ARGNAME_deterministic_NAMEEND temp808_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_242 #x0000000000000001))
(assert (= var79986 temp808_242))
(model-add temp808_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp808_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp808_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






