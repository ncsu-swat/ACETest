(declare-fun temp886_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp886_2 () (_ BitVec 64))
(declare-fun temp886_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp886_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp886_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp886_6 () (_ BitVec 64))
(declare-fun temp886_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_8 () (_ BitVec 64))
(declare-fun temp886_9 () (_ BitVec 64))
(declare-fun temp886_10 () (_ BitVec 64))
(declare-fun temp886_11 () (_ BitVec 64))
(declare-fun temp886_12 () (_ BitVec 64))
(declare-fun temp886_13 () (_ BitVec 64))
(declare-fun temp886_14 () (_ BitVec 64))
(declare-fun temp886_15 () (_ BitVec 64))
(declare-fun temp886_16 () (_ BitVec 64))
(declare-fun temp886_17 () (_ BitVec 64))
(declare-fun temp886_18 () (_ BitVec 64))
(declare-fun temp886_19 () (_ BitVec 64))
(declare-fun temp886_20 () (_ BitVec 64))
(declare-fun temp886_21 () (_ BitVec 64))
(declare-fun temp886_22 () (_ BitVec 64))
(declare-fun temp886_23 () (_ BitVec 64))
(declare-fun temp886_24 () (_ BitVec 64))
(declare-fun temp886_25 () (_ BitVec 64))
(declare-fun temp886_26 () (_ BitVec 64))
(declare-fun temp886_27 () (_ BitVec 64))
(declare-fun temp886_28 () (_ BitVec 64))
(declare-fun temp886_29 () (_ BitVec 64))
(declare-fun temp886_30 () (_ BitVec 64))
(declare-fun temp886_31 () (_ BitVec 64))
(declare-fun temp886_32 () (_ BitVec 64))
(declare-fun temp886_33 () (_ BitVec 64))
(declare-fun temp886_34 () (_ BitVec 64))
(declare-fun temp886_35 () (_ BitVec 64))
(declare-fun temp886_36 () (_ BitVec 64))
(declare-fun temp886_37 () (_ BitVec 64))
(declare-fun temp886_38 () (_ BitVec 64))
(declare-fun temp886_39 () (_ BitVec 64))
(declare-fun temp886_40 () (_ BitVec 64))
(declare-fun temp886_41 () (_ BitVec 64))
(declare-fun temp886_42 () (_ BitVec 64))
(declare-fun temp886_43 () (_ BitVec 64))
(declare-fun temp886_44 () (_ BitVec 64))
(declare-fun temp886_45 () (_ BitVec 64))
(declare-fun temp886_46 () (_ BitVec 64))
(declare-fun temp886_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp886_48 () (_ BitVec 64))
(declare-fun temp886_49 () (_ BitVec 64))
(declare-fun temp886_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_51 () (_ BitVec 64))
(declare-fun temp886_52 () (_ BitVec 64))
(declare-fun temp886_53 () (_ BitVec 64))
(declare-fun temp886_54 () (_ BitVec 64))
(declare-fun temp886_55 () (_ BitVec 64))
(declare-fun temp886_56 () (_ BitVec 64))
(declare-fun temp886_57 () (_ BitVec 64))
(declare-fun temp886_58 () (_ BitVec 64))
(declare-fun temp886_59 () (_ BitVec 64))
(declare-fun temp886_60 () (_ BitVec 64))
(declare-fun temp886_61 () (_ BitVec 64))
(declare-fun temp886_62 () (_ BitVec 64))
(declare-fun temp886_63 () (_ BitVec 64))
(declare-fun temp886_64 () (_ BitVec 64))
(declare-fun temp886_65 () (_ BitVec 64))
(declare-fun temp886_66 () (_ BitVec 64))
(declare-fun temp886_67 () (_ BitVec 64))
(declare-fun temp886_68 () (_ BitVec 64))
(declare-fun temp886_69 () (_ BitVec 64))
(declare-fun temp886_70 () (_ BitVec 64))
(declare-fun temp886_71 () (_ BitVec 64))
(declare-fun temp886_72 () (_ BitVec 64))
(declare-fun temp886_73 () (_ BitVec 64))
(declare-fun temp886_74 () (_ BitVec 64))
(declare-fun temp886_75 () (_ BitVec 64))
(declare-fun temp886_76 () (_ BitVec 64))
(declare-fun temp886_77 () (_ BitVec 64))
(declare-fun temp886_78 () (_ BitVec 64))
(declare-fun temp886_79 () (_ BitVec 64))
(declare-fun temp886_80 () (_ BitVec 64))
(declare-fun temp886_81 () (_ BitVec 64))
(declare-fun temp886_82 () (_ BitVec 64))
(declare-fun temp886_83 () (_ BitVec 64))
(declare-fun temp886_84 () (_ BitVec 64))
(declare-fun temp886_85 () (_ BitVec 64))
(declare-fun temp886_86 () (_ BitVec 64))
(declare-fun temp886_87 () (_ BitVec 64))
(declare-fun temp886_88 () (_ BitVec 64))
(declare-fun temp886_89 () (_ BitVec 64))
(declare-fun temp886_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp886_91 () (_ BitVec 64))
(declare-fun temp886_92 () (_ BitVec 64))
(declare-fun temp886_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_94 () (_ BitVec 64))
(declare-fun temp886_95 () (_ BitVec 64))
(declare-fun temp886_96 () (_ BitVec 64))
(declare-fun temp886_97 () (_ BitVec 64))
(declare-fun temp886_98 () (_ BitVec 64))
(declare-fun temp886_99 () (_ BitVec 64))
(declare-fun temp886_100 () (_ BitVec 64))
(declare-fun temp886_101 () (_ BitVec 64))
(declare-fun temp886_102 () (_ BitVec 64))
(declare-fun temp886_103 () (_ BitVec 64))
(declare-fun temp886_104 () (_ BitVec 64))
(declare-fun temp886_105 () (_ BitVec 64))
(declare-fun temp886_106 () (_ BitVec 64))
(declare-fun temp886_107 () (_ BitVec 64))
(declare-fun temp886_108 () (_ BitVec 64))
(declare-fun temp886_109 () (_ BitVec 64))
(declare-fun temp886_110 () (_ BitVec 64))
(declare-fun temp886_111 () (_ BitVec 64))
(declare-fun temp886_112 () (_ BitVec 64))
(declare-fun temp886_113 () (_ BitVec 64))
(declare-fun temp886_114 () (_ BitVec 64))
(declare-fun temp886_115 () (_ BitVec 64))
(declare-fun temp886_116 () (_ BitVec 64))
(declare-fun temp886_117 () (_ BitVec 64))
(declare-fun temp886_118 () (_ BitVec 64))
(declare-fun temp886_119 () (_ BitVec 64))
(declare-fun temp886_120 () (_ BitVec 64))
(declare-fun temp886_121 () (_ BitVec 64))
(declare-fun temp886_122 () (_ BitVec 64))
(declare-fun temp886_123 () (_ BitVec 64))
(declare-fun temp886_124 () (_ BitVec 64))
(declare-fun temp886_125 () (_ BitVec 64))
(declare-fun temp886_126 () (_ BitVec 64))
(declare-fun temp886_127 () (_ BitVec 64))
(declare-fun temp886_128 () (_ BitVec 64))
(declare-fun temp886_129 () (_ BitVec 64))
(declare-fun temp886_130 () (_ BitVec 64))
(declare-fun temp886_131 () (_ BitVec 64))
(declare-fun temp886_132 () (_ BitVec 64))
(declare-fun temp886_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp886_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp886_135 () (_ BitVec 64))
(declare-fun temp886_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp886_137 () (_ BitVec 64))
(declare-fun temp886_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_139 () (_ BitVec 64))
(declare-fun temp886_140 () (_ BitVec 64))
(declare-fun temp886_141 () (_ BitVec 64))
(declare-fun temp886_142 () (_ BitVec 64))
(declare-fun temp886_143 () (_ BitVec 64))
(declare-fun temp886_144 () (_ BitVec 64))
(declare-fun temp886_145 () (_ BitVec 64))
(declare-fun temp886_146 () (_ BitVec 64))
(declare-fun temp886_147 () (_ BitVec 64))
(declare-fun temp886_148 () (_ BitVec 64))
(declare-fun temp886_149 () (_ BitVec 64))
(declare-fun temp886_150 () (_ BitVec 64))
(declare-fun temp886_151 () (_ BitVec 64))
(declare-fun temp886_152 () (_ BitVec 64))
(declare-fun temp886_153 () (_ BitVec 64))
(declare-fun temp886_154 () (_ BitVec 64))
(declare-fun temp886_156 () (_ BitVec 64))
(declare-fun temp886_157 () (_ BitVec 64))
(declare-fun temp886_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp886_158 () (_ BitVec 64))
(declare-fun temp886_159 () (_ BitVec 64))
(declare-fun temp886_161 () (_ BitVec 64))
(declare-fun temp886_162 () (_ BitVec 64))
(declare-fun temp886_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp886_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp886_164 () (_ BitVec 64))
(declare-fun temp886_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp886_166 () (_ BitVec 64))
(declare-fun temp886_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp886_168 () (_ BitVec 64))
(declare-fun temp886_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_170 () (_ BitVec 64))
(declare-fun temp886_171 () (_ BitVec 64))
(declare-fun temp886_172 () (_ BitVec 64))
(declare-fun temp886_173 () (_ BitVec 64))
(declare-fun temp886_174 () (_ BitVec 64))
(declare-fun temp886_175 () (_ BitVec 64))
(declare-fun temp886_176 () (_ BitVec 64))
(declare-fun temp886_177 () (_ BitVec 64))
(declare-fun temp886_178 () (_ BitVec 64))
(declare-fun temp886_179 () (_ BitVec 64))
(declare-fun temp886_180 () (_ BitVec 64))
(declare-fun temp886_181 () (_ BitVec 64))
(declare-fun temp886_182 () (_ BitVec 64))
(declare-fun temp886_183 () (_ BitVec 64))
(declare-fun temp886_184 () (_ BitVec 64))
(declare-fun temp886_185 () (_ BitVec 64))
(declare-fun temp886_186 () (_ BitVec 64))
(declare-fun temp886_187 () (_ BitVec 64))
(declare-fun temp886_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp886_189 () (_ BitVec 64))
(declare-fun temp886_191 () (_ BitVec 64))
(declare-fun temp886_192 () (_ BitVec 64))
(declare-fun temp886_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp886_193 () (_ BitVec 64))
(declare-fun temp886_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp886_195 () (_ BitVec 64))
(declare-fun temp886_196 () (_ BitVec 64))
(declare-fun temp886_197 () (_ BitVec 64))
(declare-fun temp886_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_199 () (_ BitVec 64))
(declare-fun temp886_200 () (_ BitVec 64))
(declare-fun temp886_201 () (_ BitVec 64))
(declare-fun temp886_202 () (_ BitVec 64))
(declare-fun temp886_203 () (_ BitVec 64))
(declare-fun temp886_204 () (_ BitVec 64))
(declare-fun temp886_205 () (_ BitVec 64))
(declare-fun temp886_206 () (_ BitVec 64))
(declare-fun temp886_207 () (_ BitVec 64))
(declare-fun temp886_208 () (_ BitVec 64))
(declare-fun temp886_209 () (_ BitVec 64))
(declare-fun temp886_210 () (_ BitVec 64))
(declare-fun temp886_211 () (_ BitVec 64))
(declare-fun temp886_212 () (_ BitVec 64))
(declare-fun temp886_213 () (_ BitVec 64))
(declare-fun temp886_214 () (_ BitVec 64))
(declare-fun temp886_215 () (_ BitVec 64))
(declare-fun temp886_216 () (_ BitVec 64))
(declare-fun temp886_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp886_218 () (_ BitVec 64))
(declare-fun temp886_220 () (_ BitVec 64))
(declare-fun temp886_221 () (_ BitVec 64))
(declare-fun temp886_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp886_222 () (_ BitVec 64))
(declare-fun temp886_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp886_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp886_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp886_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp886_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp886_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp886_229 () (_ BitVec 64))
(declare-fun temp886_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp886_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp886_232 () (_ BitVec 64))
(declare-fun temp886_233 () (_ BitVec 64))
(declare-fun temp886_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp886_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp886_236 () (_ BitVec 64))
(declare-fun temp886_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp886_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp886_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6238608 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun temp886_240 () (_ BitVec 64))
(declare-fun var6828432 () (_ BitVec 64))
(declare-fun temp886_241 () (_ BitVec 64))
(assert (= temp886_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp886_1)))
(assert (= temp886_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp886_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_3 #x0000000000000000))
(assert (= var79869 temp886_3))
(assert (= temp886_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp886_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_5 #x0000000000000000))
(assert (= var79914 temp886_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp886_6 #x0000000000000000))
(assert (= temp886_7 temp886_6))
(assert (= temp886_8 (select ARGNAME_padding_NAMEEND_VAL temp886_7)))
(assert (= temp886_9 #x0000000000000001))
(assert (= temp886_10 temp886_9))
(assert (= temp886_11 (select ARGNAME_padding_NAMEEND_VAL temp886_10)))
(assert (= temp886_12 #x0000000000000002))
(assert (= temp886_13 temp886_12))
(assert (= temp886_14 (select ARGNAME_padding_NAMEEND_VAL temp886_13)))
(assert (= temp886_15 #x0000000000000003))
(assert (= temp886_16 temp886_15))
(assert (= temp886_17 (select ARGNAME_padding_NAMEEND_VAL temp886_16)))
(assert (= temp886_18 #x0000000000000004))
(assert (= temp886_19 temp886_18))
(assert (= temp886_20 (select ARGNAME_padding_NAMEEND_VAL temp886_19)))
(assert (= temp886_21 #x0000000000000005))
(assert (= temp886_22 temp886_21))
(assert (= temp886_23 (select ARGNAME_padding_NAMEEND_VAL temp886_22)))
(assert (= temp886_24 #x0000000000000000))
(assert (= temp886_25 #x0000000000000000))
(assert (= temp886_26 temp886_25))
(assert (= temp886_27 (select ARGNAME_padding_NAMEEND_VAL temp886_26)))
(assert (= temp886_28 #x0000000000000000))
(assert (= temp886_29 #x0000000000000001))
(assert (= temp886_30 temp886_29))
(assert (= temp886_31 (select ARGNAME_padding_NAMEEND_VAL temp886_30)))
(assert (= temp886_32 #x0000000000000000))
(assert (= temp886_33 #x0000000000000002))
(assert (= temp886_34 temp886_33))
(assert (= temp886_35 (select ARGNAME_padding_NAMEEND_VAL temp886_34)))
(assert (= temp886_36 #x0000000000000000))
(assert (= temp886_37 #x0000000000000003))
(assert (= temp886_38 temp886_37))
(assert (= temp886_39 (select ARGNAME_padding_NAMEEND_VAL temp886_38)))
(assert (= temp886_40 #x0000000000000000))
(assert (= temp886_41 #x0000000000000004))
(assert (= temp886_42 temp886_41))
(assert (= temp886_43 (select ARGNAME_padding_NAMEEND_VAL temp886_42)))
(assert (= temp886_44 #x0000000000000000))
(assert (= temp886_45 #x0000000000000005))
(assert (= temp886_46 temp886_45))
(assert (= temp886_47 (select ARGNAME_padding_NAMEEND_VAL temp886_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp886_27 temp886_24)
             (bvslt temp886_31 temp886_28)
             (bvslt temp886_35 temp886_32)
             (bvslt temp886_39 temp886_36)
             (bvslt temp886_43 temp886_40)
             (bvslt temp886_47 temp886_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_48 #x0000000000000000))
(assert (= var1322786 temp886_48))
(assert (= temp886_49 #x0000000000000000))
(assert (= temp886_50 temp886_49))
(assert (= temp886_51 (select ARGNAME_output_padding_NAMEEND_VAL temp886_50)))
(assert (= temp886_52 #x0000000000000001))
(assert (= temp886_53 temp886_52))
(assert (= temp886_54 (select ARGNAME_output_padding_NAMEEND_VAL temp886_53)))
(assert (= temp886_55 #x0000000000000002))
(assert (= temp886_56 temp886_55))
(assert (= temp886_57 (select ARGNAME_output_padding_NAMEEND_VAL temp886_56)))
(assert (= temp886_58 #x0000000000000003))
(assert (= temp886_59 temp886_58))
(assert (= temp886_60 (select ARGNAME_output_padding_NAMEEND_VAL temp886_59)))
(assert (= temp886_61 #x0000000000000004))
(assert (= temp886_62 temp886_61))
(assert (= temp886_63 (select ARGNAME_output_padding_NAMEEND_VAL temp886_62)))
(assert (= temp886_64 #x0000000000000005))
(assert (= temp886_65 temp886_64))
(assert (= temp886_66 (select ARGNAME_output_padding_NAMEEND_VAL temp886_65)))
(assert (= temp886_67 #x0000000000000000))
(assert (= temp886_68 #x0000000000000000))
(assert (= temp886_69 temp886_68))
(assert (= temp886_70 (select ARGNAME_output_padding_NAMEEND_VAL temp886_69)))
(assert (= temp886_71 #x0000000000000000))
(assert (= temp886_72 #x0000000000000001))
(assert (= temp886_73 temp886_72))
(assert (= temp886_74 (select ARGNAME_output_padding_NAMEEND_VAL temp886_73)))
(assert (= temp886_75 #x0000000000000000))
(assert (= temp886_76 #x0000000000000002))
(assert (= temp886_77 temp886_76))
(assert (= temp886_78 (select ARGNAME_output_padding_NAMEEND_VAL temp886_77)))
(assert (= temp886_79 #x0000000000000000))
(assert (= temp886_80 #x0000000000000003))
(assert (= temp886_81 temp886_80))
(assert (= temp886_82 (select ARGNAME_output_padding_NAMEEND_VAL temp886_81)))
(assert (= temp886_83 #x0000000000000000))
(assert (= temp886_84 #x0000000000000004))
(assert (= temp886_85 temp886_84))
(assert (= temp886_86 (select ARGNAME_output_padding_NAMEEND_VAL temp886_85)))
(assert (= temp886_87 #x0000000000000000))
(assert (= temp886_88 #x0000000000000005))
(assert (= temp886_89 temp886_88))
(assert (= temp886_90 (select ARGNAME_output_padding_NAMEEND_VAL temp886_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp886_70 temp886_67)
             (bvslt temp886_74 temp886_71)
             (bvslt temp886_78 temp886_75)
             (bvslt temp886_82 temp886_79)
             (bvslt temp886_86 temp886_83)
             (bvslt temp886_90 temp886_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_91 #x0000000000000000))
(assert (= var1322797 temp886_91))
(assert (= temp886_92 #x0000000000000000))
(assert (= temp886_93 temp886_92))
(assert (= temp886_94 (select ARGNAME_stride_NAMEEND_VAL temp886_93)))
(assert (= temp886_95 #x0000000000000001))
(assert (= temp886_96 temp886_95))
(assert (= temp886_97 (select ARGNAME_stride_NAMEEND_VAL temp886_96)))
(assert (= temp886_98 #x0000000000000002))
(assert (= temp886_99 temp886_98))
(assert (= temp886_100 (select ARGNAME_stride_NAMEEND_VAL temp886_99)))
(assert (= temp886_101 #x0000000000000003))
(assert (= temp886_102 temp886_101))
(assert (= temp886_103 (select ARGNAME_stride_NAMEEND_VAL temp886_102)))
(assert (= temp886_104 #x0000000000000004))
(assert (= temp886_105 temp886_104))
(assert (= temp886_106 (select ARGNAME_stride_NAMEEND_VAL temp886_105)))
(assert (= temp886_107 #x0000000000000005))
(assert (= temp886_108 temp886_107))
(assert (= temp886_109 (select ARGNAME_stride_NAMEEND_VAL temp886_108)))
(assert (= temp886_110 #x0000000000000000))
(assert (= temp886_111 #x0000000000000000))
(assert (= temp886_112 temp886_111))
(assert (= temp886_113 (select ARGNAME_stride_NAMEEND_VAL temp886_112)))
(assert (= temp886_114 #x0000000000000000))
(assert (= temp886_115 #x0000000000000001))
(assert (= temp886_116 temp886_115))
(assert (= temp886_117 (select ARGNAME_stride_NAMEEND_VAL temp886_116)))
(assert (= temp886_118 #x0000000000000000))
(assert (= temp886_119 #x0000000000000002))
(assert (= temp886_120 temp886_119))
(assert (= temp886_121 (select ARGNAME_stride_NAMEEND_VAL temp886_120)))
(assert (= temp886_122 #x0000000000000000))
(assert (= temp886_123 #x0000000000000003))
(assert (= temp886_124 temp886_123))
(assert (= temp886_125 (select ARGNAME_stride_NAMEEND_VAL temp886_124)))
(assert (= temp886_126 #x0000000000000000))
(assert (= temp886_127 #x0000000000000004))
(assert (= temp886_128 temp886_127))
(assert (= temp886_129 (select ARGNAME_stride_NAMEEND_VAL temp886_128)))
(assert (= temp886_130 #x0000000000000000))
(assert (= temp886_131 #x0000000000000005))
(assert (= temp886_132 temp886_131))
(assert (= temp886_133 (select ARGNAME_stride_NAMEEND_VAL temp886_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp886_113 temp886_110)
             (bvsle temp886_117 temp886_114)
             (bvsle temp886_121 temp886_118)
             (bvsle temp886_125 temp886_122)
             (bvsle temp886_129 temp886_126)
             (bvsle temp886_133 temp886_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_134 #x0000000000000000))
(assert (= var1322807 temp886_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_135 #x0000000000000001))
(assert (= var1322819 temp886_135))
(assert (= temp886_136 #x0000000000000000))
(assert (= var1310898 temp886_136))
(assert (= temp886_137 #x0000000000000000))
(assert (= temp886_138 temp886_137))
(assert (= temp886_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_138)))
(assert (= temp886_140 #x0000000000000001))
(assert (= temp886_141 temp886_140))
(assert (= temp886_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_141)))
(assert (= temp886_143 #x0000000000000002))
(assert (= temp886_144 temp886_143))
(assert (= temp886_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_144)))
(assert (= temp886_146 #x0000000000000003))
(assert (= temp886_147 temp886_146))
(assert (= temp886_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_147)))
(assert (= temp886_149 #x0000000000000004))
(assert (= temp886_150 temp886_149))
(assert (= temp886_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_150)))
(assert (= temp886_152 #x0000000000000005))
(assert (= temp886_153 temp886_152))
(assert (= temp886_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_153)))
(assert (= temp886_156 var1310898))
(assert (= temp886_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_156)))
(assert (= temp886_155 temp886_157))
(assert (= var1322852
   (ite (bvslt temp886_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_158 #x0000000000000000))
(assert (= var1322852 temp886_158))
(assert (= temp886_159 #x0000000000000000))
(assert (= var1310898 temp886_159))
(assert (= temp886_161 var1310898))
(assert (= temp886_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_161)))
(assert (= temp886_160 temp886_162))
(assert (= var1322874 (bvsmod temp886_160 ARGNAME_groups_NAMEEND)))
(assert (= temp886_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp886_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_164 #x0000000000000001))
(assert (= var1322875 temp886_164))
(assert (= temp886_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp886_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_166 #x0000000000000001))
(assert (= var1322895 temp886_166))
(assert (= temp886_167 #x0000000000000001))
(assert (= var1311786 temp886_167))
(assert (= temp886_168 #x0000000000000000))
(assert (= temp886_169 temp886_168))
(assert (= temp886_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_169)))
(assert (= temp886_171 #x0000000000000001))
(assert (= temp886_172 temp886_171))
(assert (= temp886_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_172)))
(assert (= temp886_174 #x0000000000000002))
(assert (= temp886_175 temp886_174))
(assert (= temp886_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_175)))
(assert (= temp886_177 #x0000000000000003))
(assert (= temp886_178 temp886_177))
(assert (= temp886_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_178)))
(assert (= temp886_180 #x0000000000000004))
(assert (= temp886_181 temp886_180))
(assert (= temp886_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_181)))
(assert (= temp886_183 #x0000000000000005))
(assert (= temp886_184 temp886_183))
(assert (= temp886_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_184)))
(assert (= temp886_186 #x0000000000000000))
(assert (= temp886_187
   (ite (bvslt var1311786 temp886_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp886_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_187)))
(assert (= var1322903 temp886_188))
(assert (bvslt (ite (bvslt var1311786 temp886_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp886_189 #x0000000000000001))
(assert (= var1311786 temp886_189))
(assert (= temp886_191 var1311786))
(assert (= temp886_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_191)))
(assert (= temp886_190 temp886_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp886_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_193 #x0000000000000001))
(assert (= var1322908 temp886_193))
(assert (= temp886_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp886_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_195 #x0000000000000001))
(assert (= var1322975 temp886_195))
(assert (= temp886_196 #x0000000000000000))
(assert (= var1310898 temp886_196))
(assert (= temp886_197 #x0000000000000000))
(assert (= temp886_198 temp886_197))
(assert (= temp886_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp886_198)))
(assert (= temp886_200 #x0000000000000001))
(assert (= temp886_201 temp886_200))
(assert (= temp886_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp886_201)))
(assert (= temp886_203 #x0000000000000002))
(assert (= temp886_204 temp886_203))
(assert (= temp886_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp886_204)))
(assert (= temp886_206 #x0000000000000003))
(assert (= temp886_207 temp886_206))
(assert (= temp886_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp886_207)))
(assert (= temp886_209 #x0000000000000004))
(assert (= temp886_210 temp886_209))
(assert (= temp886_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp886_210)))
(assert (= temp886_212 #x0000000000000005))
(assert (= temp886_213 temp886_212))
(assert (= temp886_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp886_213)))
(assert (= temp886_215 #x0000000000000000))
(assert (= temp886_216
   (ite (bvslt var1310898 temp886_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp886_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp886_216)))
(assert (= var1322977 temp886_217))
(assert (bvslt (ite (bvslt var1310898 temp886_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp886_218 #x0000000000000000))
(assert (= var1310898 temp886_218))
(assert (= temp886_220 var1310898))
(assert (= temp886_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_220)))
(assert (= temp886_219 temp886_221))
(assert (= var1322980
   (ite (= var1322977 temp886_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_222 #x0000000000000001))
(assert (= var1322980 temp886_222))
(assert (= temp886_223 #x0000000000000002))
(assert (= var1848169 temp886_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp886_225 #x0000000000000001))
(assert (= var1323065 temp886_225))
(assert (= temp886_226 #x0000000000000001))
(assert (= var3486735 temp886_226))
(assert (= temp886_227 #x0000000000000001))
(assert (= var3814415 temp886_227))
(assert (= temp886_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp886_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_229 #x0000000000000001))
(assert (= var79986 temp886_229))
(assert (= temp886_230 #x0000000000000001))
(assert (= var80116 temp886_230))
(assert (= var4796905 var80116))
(assert (= temp886_231 #x0000000000000000))
(assert (= var4784306 temp886_231))
(assert (= temp886_232 #x0000000000000000))
(assert (= temp886_233
   (ite (bvslt var4784306 temp886_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp886_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_233)))
(assert (= var4796924 temp886_234))
(assert (bvslt (ite (bvslt var4784306 temp886_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp886_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp886_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_236 #x0000000000000001))
(assert (= var4796925 temp886_236))
(assert (= temp886_237 #x0000000000000000))
(assert (= var4996927 temp886_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp886_238 #x0000000000000002))
(assert (= var5125763 temp886_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_239 #x0000000000000000))
(assert (= var5191324 temp886_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6238608 var80129))
(assert (= var6500752 var80129))
(assert (= temp886_240 #x0000000000000000))
(assert (= var6828432 temp886_240))
(assert (= temp886_241 #x0000000000000001))
(assert (= var79986 temp886_241))
(model-add temp886_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp886_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp886_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






