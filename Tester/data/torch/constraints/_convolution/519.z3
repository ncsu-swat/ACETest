(declare-fun temp689_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp689_2 () (_ BitVec 64))
(declare-fun temp689_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp689_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp689_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp689_6 () (_ BitVec 64))
(declare-fun temp689_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_8 () (_ BitVec 64))
(declare-fun temp689_9 () (_ BitVec 64))
(declare-fun temp689_10 () (_ BitVec 64))
(declare-fun temp689_11 () (_ BitVec 64))
(declare-fun temp689_12 () (_ BitVec 64))
(declare-fun temp689_13 () (_ BitVec 64))
(declare-fun temp689_14 () (_ BitVec 64))
(declare-fun temp689_15 () (_ BitVec 64))
(declare-fun temp689_16 () (_ BitVec 64))
(declare-fun temp689_17 () (_ BitVec 64))
(declare-fun temp689_18 () (_ BitVec 64))
(declare-fun temp689_19 () (_ BitVec 64))
(declare-fun temp689_20 () (_ BitVec 64))
(declare-fun temp689_21 () (_ BitVec 64))
(declare-fun temp689_22 () (_ BitVec 64))
(declare-fun temp689_23 () (_ BitVec 64))
(declare-fun temp689_24 () (_ BitVec 64))
(declare-fun temp689_25 () (_ BitVec 64))
(declare-fun temp689_26 () (_ BitVec 64))
(declare-fun temp689_27 () (_ BitVec 64))
(declare-fun temp689_28 () (_ BitVec 64))
(declare-fun temp689_29 () (_ BitVec 64))
(declare-fun temp689_30 () (_ BitVec 64))
(declare-fun temp689_31 () (_ BitVec 64))
(declare-fun temp689_32 () (_ BitVec 64))
(declare-fun temp689_33 () (_ BitVec 64))
(declare-fun temp689_34 () (_ BitVec 64))
(declare-fun temp689_35 () (_ BitVec 64))
(declare-fun temp689_36 () (_ BitVec 64))
(declare-fun temp689_37 () (_ BitVec 64))
(declare-fun temp689_38 () (_ BitVec 64))
(declare-fun temp689_39 () (_ BitVec 64))
(declare-fun temp689_40 () (_ BitVec 64))
(declare-fun temp689_41 () (_ BitVec 64))
(declare-fun temp689_42 () (_ BitVec 64))
(declare-fun temp689_43 () (_ BitVec 64))
(declare-fun temp689_44 () (_ BitVec 64))
(declare-fun temp689_45 () (_ BitVec 64))
(declare-fun temp689_46 () (_ BitVec 64))
(declare-fun temp689_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp689_48 () (_ BitVec 64))
(declare-fun temp689_49 () (_ BitVec 64))
(declare-fun temp689_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_51 () (_ BitVec 64))
(declare-fun temp689_52 () (_ BitVec 64))
(declare-fun temp689_53 () (_ BitVec 64))
(declare-fun temp689_54 () (_ BitVec 64))
(declare-fun temp689_55 () (_ BitVec 64))
(declare-fun temp689_56 () (_ BitVec 64))
(declare-fun temp689_57 () (_ BitVec 64))
(declare-fun temp689_58 () (_ BitVec 64))
(declare-fun temp689_59 () (_ BitVec 64))
(declare-fun temp689_60 () (_ BitVec 64))
(declare-fun temp689_61 () (_ BitVec 64))
(declare-fun temp689_62 () (_ BitVec 64))
(declare-fun temp689_63 () (_ BitVec 64))
(declare-fun temp689_64 () (_ BitVec 64))
(declare-fun temp689_65 () (_ BitVec 64))
(declare-fun temp689_66 () (_ BitVec 64))
(declare-fun temp689_67 () (_ BitVec 64))
(declare-fun temp689_68 () (_ BitVec 64))
(declare-fun temp689_69 () (_ BitVec 64))
(declare-fun temp689_70 () (_ BitVec 64))
(declare-fun temp689_71 () (_ BitVec 64))
(declare-fun temp689_72 () (_ BitVec 64))
(declare-fun temp689_73 () (_ BitVec 64))
(declare-fun temp689_74 () (_ BitVec 64))
(declare-fun temp689_75 () (_ BitVec 64))
(declare-fun temp689_76 () (_ BitVec 64))
(declare-fun temp689_77 () (_ BitVec 64))
(declare-fun temp689_78 () (_ BitVec 64))
(declare-fun temp689_79 () (_ BitVec 64))
(declare-fun temp689_80 () (_ BitVec 64))
(declare-fun temp689_81 () (_ BitVec 64))
(declare-fun temp689_82 () (_ BitVec 64))
(declare-fun temp689_83 () (_ BitVec 64))
(declare-fun temp689_84 () (_ BitVec 64))
(declare-fun temp689_85 () (_ BitVec 64))
(declare-fun temp689_86 () (_ BitVec 64))
(declare-fun temp689_87 () (_ BitVec 64))
(declare-fun temp689_88 () (_ BitVec 64))
(declare-fun temp689_89 () (_ BitVec 64))
(declare-fun temp689_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp689_91 () (_ BitVec 64))
(declare-fun temp689_92 () (_ BitVec 64))
(declare-fun temp689_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_94 () (_ BitVec 64))
(declare-fun temp689_95 () (_ BitVec 64))
(declare-fun temp689_96 () (_ BitVec 64))
(declare-fun temp689_97 () (_ BitVec 64))
(declare-fun temp689_98 () (_ BitVec 64))
(declare-fun temp689_99 () (_ BitVec 64))
(declare-fun temp689_100 () (_ BitVec 64))
(declare-fun temp689_101 () (_ BitVec 64))
(declare-fun temp689_102 () (_ BitVec 64))
(declare-fun temp689_103 () (_ BitVec 64))
(declare-fun temp689_104 () (_ BitVec 64))
(declare-fun temp689_105 () (_ BitVec 64))
(declare-fun temp689_106 () (_ BitVec 64))
(declare-fun temp689_107 () (_ BitVec 64))
(declare-fun temp689_108 () (_ BitVec 64))
(declare-fun temp689_109 () (_ BitVec 64))
(declare-fun temp689_110 () (_ BitVec 64))
(declare-fun temp689_111 () (_ BitVec 64))
(declare-fun temp689_112 () (_ BitVec 64))
(declare-fun temp689_113 () (_ BitVec 64))
(declare-fun temp689_114 () (_ BitVec 64))
(declare-fun temp689_115 () (_ BitVec 64))
(declare-fun temp689_116 () (_ BitVec 64))
(declare-fun temp689_117 () (_ BitVec 64))
(declare-fun temp689_118 () (_ BitVec 64))
(declare-fun temp689_119 () (_ BitVec 64))
(declare-fun temp689_120 () (_ BitVec 64))
(declare-fun temp689_121 () (_ BitVec 64))
(declare-fun temp689_122 () (_ BitVec 64))
(declare-fun temp689_123 () (_ BitVec 64))
(declare-fun temp689_124 () (_ BitVec 64))
(declare-fun temp689_125 () (_ BitVec 64))
(declare-fun temp689_126 () (_ BitVec 64))
(declare-fun temp689_127 () (_ BitVec 64))
(declare-fun temp689_128 () (_ BitVec 64))
(declare-fun temp689_129 () (_ BitVec 64))
(declare-fun temp689_130 () (_ BitVec 64))
(declare-fun temp689_131 () (_ BitVec 64))
(declare-fun temp689_132 () (_ BitVec 64))
(declare-fun temp689_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp689_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp689_135 () (_ BitVec 64))
(declare-fun temp689_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp689_137 () (_ BitVec 64))
(declare-fun temp689_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_139 () (_ BitVec 64))
(declare-fun temp689_140 () (_ BitVec 64))
(declare-fun temp689_141 () (_ BitVec 64))
(declare-fun temp689_142 () (_ BitVec 64))
(declare-fun temp689_143 () (_ BitVec 64))
(declare-fun temp689_144 () (_ BitVec 64))
(declare-fun temp689_145 () (_ BitVec 64))
(declare-fun temp689_146 () (_ BitVec 64))
(declare-fun temp689_147 () (_ BitVec 64))
(declare-fun temp689_148 () (_ BitVec 64))
(declare-fun temp689_149 () (_ BitVec 64))
(declare-fun temp689_150 () (_ BitVec 64))
(declare-fun temp689_151 () (_ BitVec 64))
(declare-fun temp689_152 () (_ BitVec 64))
(declare-fun temp689_153 () (_ BitVec 64))
(declare-fun temp689_154 () (_ BitVec 64))
(declare-fun temp689_156 () (_ BitVec 64))
(declare-fun temp689_157 () (_ BitVec 64))
(declare-fun temp689_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp689_158 () (_ BitVec 64))
(declare-fun temp689_159 () (_ BitVec 64))
(declare-fun temp689_161 () (_ BitVec 64))
(declare-fun temp689_162 () (_ BitVec 64))
(declare-fun temp689_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp689_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp689_164 () (_ BitVec 64))
(declare-fun temp689_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp689_166 () (_ BitVec 64))
(declare-fun temp689_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp689_168 () (_ BitVec 64))
(declare-fun temp689_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_170 () (_ BitVec 64))
(declare-fun temp689_171 () (_ BitVec 64))
(declare-fun temp689_172 () (_ BitVec 64))
(declare-fun temp689_173 () (_ BitVec 64))
(declare-fun temp689_174 () (_ BitVec 64))
(declare-fun temp689_175 () (_ BitVec 64))
(declare-fun temp689_176 () (_ BitVec 64))
(declare-fun temp689_177 () (_ BitVec 64))
(declare-fun temp689_178 () (_ BitVec 64))
(declare-fun temp689_179 () (_ BitVec 64))
(declare-fun temp689_180 () (_ BitVec 64))
(declare-fun temp689_181 () (_ BitVec 64))
(declare-fun temp689_182 () (_ BitVec 64))
(declare-fun temp689_183 () (_ BitVec 64))
(declare-fun temp689_184 () (_ BitVec 64))
(declare-fun temp689_185 () (_ BitVec 64))
(declare-fun temp689_186 () (_ BitVec 64))
(declare-fun temp689_187 () (_ BitVec 64))
(declare-fun temp689_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp689_189 () (_ BitVec 64))
(declare-fun temp689_191 () (_ BitVec 64))
(declare-fun temp689_192 () (_ BitVec 64))
(declare-fun temp689_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp689_193 () (_ BitVec 64))
(declare-fun temp689_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp689_195 () (_ BitVec 64))
(declare-fun temp689_196 () (_ BitVec 64))
(declare-fun temp689_197 () (_ BitVec 64))
(declare-fun temp689_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_199 () (_ BitVec 64))
(declare-fun temp689_200 () (_ BitVec 64))
(declare-fun temp689_201 () (_ BitVec 64))
(declare-fun temp689_202 () (_ BitVec 64))
(declare-fun temp689_203 () (_ BitVec 64))
(declare-fun temp689_204 () (_ BitVec 64))
(declare-fun temp689_205 () (_ BitVec 64))
(declare-fun temp689_206 () (_ BitVec 64))
(declare-fun temp689_207 () (_ BitVec 64))
(declare-fun temp689_208 () (_ BitVec 64))
(declare-fun temp689_209 () (_ BitVec 64))
(declare-fun temp689_210 () (_ BitVec 64))
(declare-fun temp689_211 () (_ BitVec 64))
(declare-fun temp689_212 () (_ BitVec 64))
(declare-fun temp689_213 () (_ BitVec 64))
(declare-fun temp689_214 () (_ BitVec 64))
(declare-fun temp689_215 () (_ BitVec 64))
(declare-fun temp689_216 () (_ BitVec 64))
(declare-fun temp689_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp689_218 () (_ BitVec 64))
(declare-fun temp689_220 () (_ BitVec 64))
(declare-fun temp689_221 () (_ BitVec 64))
(declare-fun temp689_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp689_222 () (_ BitVec 64))
(declare-fun temp689_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp689_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp689_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp689_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp689_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp689_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp689_229 () (_ BitVec 64))
(declare-fun temp689_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp689_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp689_232 () (_ BitVec 64))
(declare-fun temp689_233 () (_ BitVec 64))
(declare-fun temp689_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp689_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp689_236 () (_ BitVec 64))
(declare-fun temp689_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp689_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp689_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp689_241 () (_ BitVec 64))
(declare-fun temp689_240 () (_ BitVec 64))
(declare-fun temp689_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp689_243 () (_ BitVec 64))
(declare-fun temp689_244 () (_ BitVec 64))
(declare-fun temp689_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp689_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp689_247 () (_ BitVec 64))
(declare-fun temp689_249 () (_ BitVec 64))
(declare-fun temp689_248 () (_ BitVec 64))
(declare-fun temp689_250 () (_ BitVec 64))
(assert (= temp689_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp689_1)))
(assert (= temp689_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp689_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_3 #x0000000000000000))
(assert (= var79869 temp689_3))
(assert (= temp689_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp689_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_5 #x0000000000000000))
(assert (= var79914 temp689_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp689_6 #x0000000000000000))
(assert (= temp689_7 temp689_6))
(assert (= temp689_8 (select ARGNAME_padding_NAMEEND_VAL temp689_7)))
(assert (= temp689_9 #x0000000000000001))
(assert (= temp689_10 temp689_9))
(assert (= temp689_11 (select ARGNAME_padding_NAMEEND_VAL temp689_10)))
(assert (= temp689_12 #x0000000000000002))
(assert (= temp689_13 temp689_12))
(assert (= temp689_14 (select ARGNAME_padding_NAMEEND_VAL temp689_13)))
(assert (= temp689_15 #x0000000000000003))
(assert (= temp689_16 temp689_15))
(assert (= temp689_17 (select ARGNAME_padding_NAMEEND_VAL temp689_16)))
(assert (= temp689_18 #x0000000000000004))
(assert (= temp689_19 temp689_18))
(assert (= temp689_20 (select ARGNAME_padding_NAMEEND_VAL temp689_19)))
(assert (= temp689_21 #x0000000000000005))
(assert (= temp689_22 temp689_21))
(assert (= temp689_23 (select ARGNAME_padding_NAMEEND_VAL temp689_22)))
(assert (= temp689_24 #x0000000000000000))
(assert (= temp689_25 #x0000000000000000))
(assert (= temp689_26 temp689_25))
(assert (= temp689_27 (select ARGNAME_padding_NAMEEND_VAL temp689_26)))
(assert (= temp689_28 #x0000000000000000))
(assert (= temp689_29 #x0000000000000001))
(assert (= temp689_30 temp689_29))
(assert (= temp689_31 (select ARGNAME_padding_NAMEEND_VAL temp689_30)))
(assert (= temp689_32 #x0000000000000000))
(assert (= temp689_33 #x0000000000000002))
(assert (= temp689_34 temp689_33))
(assert (= temp689_35 (select ARGNAME_padding_NAMEEND_VAL temp689_34)))
(assert (= temp689_36 #x0000000000000000))
(assert (= temp689_37 #x0000000000000003))
(assert (= temp689_38 temp689_37))
(assert (= temp689_39 (select ARGNAME_padding_NAMEEND_VAL temp689_38)))
(assert (= temp689_40 #x0000000000000000))
(assert (= temp689_41 #x0000000000000004))
(assert (= temp689_42 temp689_41))
(assert (= temp689_43 (select ARGNAME_padding_NAMEEND_VAL temp689_42)))
(assert (= temp689_44 #x0000000000000000))
(assert (= temp689_45 #x0000000000000005))
(assert (= temp689_46 temp689_45))
(assert (= temp689_47 (select ARGNAME_padding_NAMEEND_VAL temp689_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp689_27 temp689_24)
             (bvslt temp689_31 temp689_28)
             (bvslt temp689_35 temp689_32)
             (bvslt temp689_39 temp689_36)
             (bvslt temp689_43 temp689_40)
             (bvslt temp689_47 temp689_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_48 #x0000000000000000))
(assert (= var1322786 temp689_48))
(assert (= temp689_49 #x0000000000000000))
(assert (= temp689_50 temp689_49))
(assert (= temp689_51 (select ARGNAME_output_padding_NAMEEND_VAL temp689_50)))
(assert (= temp689_52 #x0000000000000001))
(assert (= temp689_53 temp689_52))
(assert (= temp689_54 (select ARGNAME_output_padding_NAMEEND_VAL temp689_53)))
(assert (= temp689_55 #x0000000000000002))
(assert (= temp689_56 temp689_55))
(assert (= temp689_57 (select ARGNAME_output_padding_NAMEEND_VAL temp689_56)))
(assert (= temp689_58 #x0000000000000003))
(assert (= temp689_59 temp689_58))
(assert (= temp689_60 (select ARGNAME_output_padding_NAMEEND_VAL temp689_59)))
(assert (= temp689_61 #x0000000000000004))
(assert (= temp689_62 temp689_61))
(assert (= temp689_63 (select ARGNAME_output_padding_NAMEEND_VAL temp689_62)))
(assert (= temp689_64 #x0000000000000005))
(assert (= temp689_65 temp689_64))
(assert (= temp689_66 (select ARGNAME_output_padding_NAMEEND_VAL temp689_65)))
(assert (= temp689_67 #x0000000000000000))
(assert (= temp689_68 #x0000000000000000))
(assert (= temp689_69 temp689_68))
(assert (= temp689_70 (select ARGNAME_output_padding_NAMEEND_VAL temp689_69)))
(assert (= temp689_71 #x0000000000000000))
(assert (= temp689_72 #x0000000000000001))
(assert (= temp689_73 temp689_72))
(assert (= temp689_74 (select ARGNAME_output_padding_NAMEEND_VAL temp689_73)))
(assert (= temp689_75 #x0000000000000000))
(assert (= temp689_76 #x0000000000000002))
(assert (= temp689_77 temp689_76))
(assert (= temp689_78 (select ARGNAME_output_padding_NAMEEND_VAL temp689_77)))
(assert (= temp689_79 #x0000000000000000))
(assert (= temp689_80 #x0000000000000003))
(assert (= temp689_81 temp689_80))
(assert (= temp689_82 (select ARGNAME_output_padding_NAMEEND_VAL temp689_81)))
(assert (= temp689_83 #x0000000000000000))
(assert (= temp689_84 #x0000000000000004))
(assert (= temp689_85 temp689_84))
(assert (= temp689_86 (select ARGNAME_output_padding_NAMEEND_VAL temp689_85)))
(assert (= temp689_87 #x0000000000000000))
(assert (= temp689_88 #x0000000000000005))
(assert (= temp689_89 temp689_88))
(assert (= temp689_90 (select ARGNAME_output_padding_NAMEEND_VAL temp689_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp689_70 temp689_67)
             (bvslt temp689_74 temp689_71)
             (bvslt temp689_78 temp689_75)
             (bvslt temp689_82 temp689_79)
             (bvslt temp689_86 temp689_83)
             (bvslt temp689_90 temp689_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_91 #x0000000000000000))
(assert (= var1322797 temp689_91))
(assert (= temp689_92 #x0000000000000000))
(assert (= temp689_93 temp689_92))
(assert (= temp689_94 (select ARGNAME_stride_NAMEEND_VAL temp689_93)))
(assert (= temp689_95 #x0000000000000001))
(assert (= temp689_96 temp689_95))
(assert (= temp689_97 (select ARGNAME_stride_NAMEEND_VAL temp689_96)))
(assert (= temp689_98 #x0000000000000002))
(assert (= temp689_99 temp689_98))
(assert (= temp689_100 (select ARGNAME_stride_NAMEEND_VAL temp689_99)))
(assert (= temp689_101 #x0000000000000003))
(assert (= temp689_102 temp689_101))
(assert (= temp689_103 (select ARGNAME_stride_NAMEEND_VAL temp689_102)))
(assert (= temp689_104 #x0000000000000004))
(assert (= temp689_105 temp689_104))
(assert (= temp689_106 (select ARGNAME_stride_NAMEEND_VAL temp689_105)))
(assert (= temp689_107 #x0000000000000005))
(assert (= temp689_108 temp689_107))
(assert (= temp689_109 (select ARGNAME_stride_NAMEEND_VAL temp689_108)))
(assert (= temp689_110 #x0000000000000000))
(assert (= temp689_111 #x0000000000000000))
(assert (= temp689_112 temp689_111))
(assert (= temp689_113 (select ARGNAME_stride_NAMEEND_VAL temp689_112)))
(assert (= temp689_114 #x0000000000000000))
(assert (= temp689_115 #x0000000000000001))
(assert (= temp689_116 temp689_115))
(assert (= temp689_117 (select ARGNAME_stride_NAMEEND_VAL temp689_116)))
(assert (= temp689_118 #x0000000000000000))
(assert (= temp689_119 #x0000000000000002))
(assert (= temp689_120 temp689_119))
(assert (= temp689_121 (select ARGNAME_stride_NAMEEND_VAL temp689_120)))
(assert (= temp689_122 #x0000000000000000))
(assert (= temp689_123 #x0000000000000003))
(assert (= temp689_124 temp689_123))
(assert (= temp689_125 (select ARGNAME_stride_NAMEEND_VAL temp689_124)))
(assert (= temp689_126 #x0000000000000000))
(assert (= temp689_127 #x0000000000000004))
(assert (= temp689_128 temp689_127))
(assert (= temp689_129 (select ARGNAME_stride_NAMEEND_VAL temp689_128)))
(assert (= temp689_130 #x0000000000000000))
(assert (= temp689_131 #x0000000000000005))
(assert (= temp689_132 temp689_131))
(assert (= temp689_133 (select ARGNAME_stride_NAMEEND_VAL temp689_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp689_113 temp689_110)
             (bvsle temp689_117 temp689_114)
             (bvsle temp689_121 temp689_118)
             (bvsle temp689_125 temp689_122)
             (bvsle temp689_129 temp689_126)
             (bvsle temp689_133 temp689_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_134 #x0000000000000000))
(assert (= var1322807 temp689_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_135 #x0000000000000001))
(assert (= var1322819 temp689_135))
(assert (= temp689_136 #x0000000000000000))
(assert (= var1310898 temp689_136))
(assert (= temp689_137 #x0000000000000000))
(assert (= temp689_138 temp689_137))
(assert (= temp689_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_138)))
(assert (= temp689_140 #x0000000000000001))
(assert (= temp689_141 temp689_140))
(assert (= temp689_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_141)))
(assert (= temp689_143 #x0000000000000002))
(assert (= temp689_144 temp689_143))
(assert (= temp689_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_144)))
(assert (= temp689_146 #x0000000000000003))
(assert (= temp689_147 temp689_146))
(assert (= temp689_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_147)))
(assert (= temp689_149 #x0000000000000004))
(assert (= temp689_150 temp689_149))
(assert (= temp689_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_150)))
(assert (= temp689_152 #x0000000000000005))
(assert (= temp689_153 temp689_152))
(assert (= temp689_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_153)))
(assert (= temp689_156 var1310898))
(assert (= temp689_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_156)))
(assert (= temp689_155 temp689_157))
(assert (= var1322852
   (ite (bvslt temp689_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_158 #x0000000000000000))
(assert (= var1322852 temp689_158))
(assert (= temp689_159 #x0000000000000000))
(assert (= var1310898 temp689_159))
(assert (= temp689_161 var1310898))
(assert (= temp689_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_161)))
(assert (= temp689_160 temp689_162))
(assert (= var1322874 (bvsmod temp689_160 ARGNAME_groups_NAMEEND)))
(assert (= temp689_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp689_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp689_164 #x0000000000000001))
(assert (= var1322875 temp689_164))
(assert (= temp689_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp689_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_166 #x0000000000000001))
(assert (= var1322895 temp689_166))
(assert (= temp689_167 #x0000000000000001))
(assert (= var1311786 temp689_167))
(assert (= temp689_168 #x0000000000000000))
(assert (= temp689_169 temp689_168))
(assert (= temp689_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_169)))
(assert (= temp689_171 #x0000000000000001))
(assert (= temp689_172 temp689_171))
(assert (= temp689_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_172)))
(assert (= temp689_174 #x0000000000000002))
(assert (= temp689_175 temp689_174))
(assert (= temp689_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_175)))
(assert (= temp689_177 #x0000000000000003))
(assert (= temp689_178 temp689_177))
(assert (= temp689_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_178)))
(assert (= temp689_180 #x0000000000000004))
(assert (= temp689_181 temp689_180))
(assert (= temp689_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_181)))
(assert (= temp689_183 #x0000000000000005))
(assert (= temp689_184 temp689_183))
(assert (= temp689_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_184)))
(assert (= temp689_186 #x0000000000000000))
(assert (= temp689_187
   (ite (bvslt var1311786 temp689_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp689_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_187)))
(assert (= var1322903 temp689_188))
(assert (bvslt (ite (bvslt var1311786 temp689_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp689_189 #x0000000000000001))
(assert (= var1311786 temp689_189))
(assert (= temp689_191 var1311786))
(assert (= temp689_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_191)))
(assert (= temp689_190 temp689_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp689_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp689_193 #x0000000000000001))
(assert (= var1322908 temp689_193))
(assert (= temp689_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp689_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_195 #x0000000000000001))
(assert (= var1322975 temp689_195))
(assert (= temp689_196 #x0000000000000000))
(assert (= var1310898 temp689_196))
(assert (= temp689_197 #x0000000000000000))
(assert (= temp689_198 temp689_197))
(assert (= temp689_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp689_198)))
(assert (= temp689_200 #x0000000000000001))
(assert (= temp689_201 temp689_200))
(assert (= temp689_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp689_201)))
(assert (= temp689_203 #x0000000000000002))
(assert (= temp689_204 temp689_203))
(assert (= temp689_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp689_204)))
(assert (= temp689_206 #x0000000000000003))
(assert (= temp689_207 temp689_206))
(assert (= temp689_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp689_207)))
(assert (= temp689_209 #x0000000000000004))
(assert (= temp689_210 temp689_209))
(assert (= temp689_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp689_210)))
(assert (= temp689_212 #x0000000000000005))
(assert (= temp689_213 temp689_212))
(assert (= temp689_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp689_213)))
(assert (= temp689_215 #x0000000000000000))
(assert (= temp689_216
   (ite (bvslt var1310898 temp689_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp689_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp689_216)))
(assert (= var1322977 temp689_217))
(assert (bvslt (ite (bvslt var1310898 temp689_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp689_218 #x0000000000000000))
(assert (= var1310898 temp689_218))
(assert (= temp689_220 var1310898))
(assert (= temp689_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_220)))
(assert (= temp689_219 temp689_221))
(assert (= var1322980
   (ite (= var1322977 temp689_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp689_222 #x0000000000000001))
(assert (= var1322980 temp689_222))
(assert (= temp689_223 #x0000000000000002))
(assert (= var1848169 temp689_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp689_225 #x0000000000000001))
(assert (= var1323065 temp689_225))
(assert (= temp689_226 #x0000000000000001))
(assert (= var3486735 temp689_226))
(assert (= temp689_227 #x0000000000000001))
(assert (= var3814415 temp689_227))
(assert (= temp689_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp689_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_229 #x0000000000000001))
(assert (= var79986 temp689_229))
(assert (= temp689_230 #x0000000000000001))
(assert (= var80116 temp689_230))
(assert (= var4796905 var80116))
(assert (= temp689_231 #x0000000000000000))
(assert (= var4784306 temp689_231))
(assert (= temp689_232 #x0000000000000000))
(assert (= temp689_233
   (ite (bvslt var4784306 temp689_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp689_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_233)))
(assert (= var4796924 temp689_234))
(assert (bvslt (ite (bvslt var4784306 temp689_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp689_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp689_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp689_236 #x0000000000000001))
(assert (= var4796925 temp689_236))
(assert (= temp689_237 #x0000000000000000))
(assert (= var4996927 temp689_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp689_238 #x0000000000000002))
(assert (= var5125763 temp689_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_239 #x0000000000000000))
(assert (= var5191324 temp689_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp689_241 #xffffffffffffffff))
(assert (= temp689_240 temp689_241))
(assert (= temp689_242 #x0000000000000001))
(assert (= var66602 temp689_242))
(assert (= temp689_243 #x0000000000000000))
(assert (= temp689_244
   (ite (bvslt var66602 temp689_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp689_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_244)))
(assert (= var80523 temp689_245))
(assert (bvslt (ite (bvslt var66602 temp689_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp689_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp689_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp689_247 #x0000000000000001))
(assert (= var80524 temp689_247))
(assert (= temp689_249 #xffffffffffffffff))
(assert (= temp689_248 temp689_249))
(assert (= temp689_250 #x0000000000000001))
(assert (= var79986 temp689_250))
(model-add temp689_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp689_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp689_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






