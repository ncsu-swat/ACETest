(declare-fun temp801_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp801_2 () (_ BitVec 64))
(declare-fun temp801_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp801_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp801_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp801_6 () (_ BitVec 64))
(declare-fun temp801_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_8 () (_ BitVec 64))
(declare-fun temp801_9 () (_ BitVec 64))
(declare-fun temp801_10 () (_ BitVec 64))
(declare-fun temp801_11 () (_ BitVec 64))
(declare-fun temp801_12 () (_ BitVec 64))
(declare-fun temp801_13 () (_ BitVec 64))
(declare-fun temp801_14 () (_ BitVec 64))
(declare-fun temp801_15 () (_ BitVec 64))
(declare-fun temp801_16 () (_ BitVec 64))
(declare-fun temp801_17 () (_ BitVec 64))
(declare-fun temp801_18 () (_ BitVec 64))
(declare-fun temp801_19 () (_ BitVec 64))
(declare-fun temp801_20 () (_ BitVec 64))
(declare-fun temp801_21 () (_ BitVec 64))
(declare-fun temp801_22 () (_ BitVec 64))
(declare-fun temp801_23 () (_ BitVec 64))
(declare-fun temp801_24 () (_ BitVec 64))
(declare-fun temp801_25 () (_ BitVec 64))
(declare-fun temp801_26 () (_ BitVec 64))
(declare-fun temp801_27 () (_ BitVec 64))
(declare-fun temp801_28 () (_ BitVec 64))
(declare-fun temp801_29 () (_ BitVec 64))
(declare-fun temp801_30 () (_ BitVec 64))
(declare-fun temp801_31 () (_ BitVec 64))
(declare-fun temp801_32 () (_ BitVec 64))
(declare-fun temp801_33 () (_ BitVec 64))
(declare-fun temp801_34 () (_ BitVec 64))
(declare-fun temp801_35 () (_ BitVec 64))
(declare-fun temp801_36 () (_ BitVec 64))
(declare-fun temp801_37 () (_ BitVec 64))
(declare-fun temp801_38 () (_ BitVec 64))
(declare-fun temp801_39 () (_ BitVec 64))
(declare-fun temp801_40 () (_ BitVec 64))
(declare-fun temp801_41 () (_ BitVec 64))
(declare-fun temp801_42 () (_ BitVec 64))
(declare-fun temp801_43 () (_ BitVec 64))
(declare-fun temp801_44 () (_ BitVec 64))
(declare-fun temp801_45 () (_ BitVec 64))
(declare-fun temp801_46 () (_ BitVec 64))
(declare-fun temp801_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp801_48 () (_ BitVec 64))
(declare-fun temp801_49 () (_ BitVec 64))
(declare-fun temp801_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_51 () (_ BitVec 64))
(declare-fun temp801_52 () (_ BitVec 64))
(declare-fun temp801_53 () (_ BitVec 64))
(declare-fun temp801_54 () (_ BitVec 64))
(declare-fun temp801_55 () (_ BitVec 64))
(declare-fun temp801_56 () (_ BitVec 64))
(declare-fun temp801_57 () (_ BitVec 64))
(declare-fun temp801_58 () (_ BitVec 64))
(declare-fun temp801_59 () (_ BitVec 64))
(declare-fun temp801_60 () (_ BitVec 64))
(declare-fun temp801_61 () (_ BitVec 64))
(declare-fun temp801_62 () (_ BitVec 64))
(declare-fun temp801_63 () (_ BitVec 64))
(declare-fun temp801_64 () (_ BitVec 64))
(declare-fun temp801_65 () (_ BitVec 64))
(declare-fun temp801_66 () (_ BitVec 64))
(declare-fun temp801_67 () (_ BitVec 64))
(declare-fun temp801_68 () (_ BitVec 64))
(declare-fun temp801_69 () (_ BitVec 64))
(declare-fun temp801_70 () (_ BitVec 64))
(declare-fun temp801_71 () (_ BitVec 64))
(declare-fun temp801_72 () (_ BitVec 64))
(declare-fun temp801_73 () (_ BitVec 64))
(declare-fun temp801_74 () (_ BitVec 64))
(declare-fun temp801_75 () (_ BitVec 64))
(declare-fun temp801_76 () (_ BitVec 64))
(declare-fun temp801_77 () (_ BitVec 64))
(declare-fun temp801_78 () (_ BitVec 64))
(declare-fun temp801_79 () (_ BitVec 64))
(declare-fun temp801_80 () (_ BitVec 64))
(declare-fun temp801_81 () (_ BitVec 64))
(declare-fun temp801_82 () (_ BitVec 64))
(declare-fun temp801_83 () (_ BitVec 64))
(declare-fun temp801_84 () (_ BitVec 64))
(declare-fun temp801_85 () (_ BitVec 64))
(declare-fun temp801_86 () (_ BitVec 64))
(declare-fun temp801_87 () (_ BitVec 64))
(declare-fun temp801_88 () (_ BitVec 64))
(declare-fun temp801_89 () (_ BitVec 64))
(declare-fun temp801_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp801_91 () (_ BitVec 64))
(declare-fun temp801_92 () (_ BitVec 64))
(declare-fun temp801_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_94 () (_ BitVec 64))
(declare-fun temp801_95 () (_ BitVec 64))
(declare-fun temp801_96 () (_ BitVec 64))
(declare-fun temp801_97 () (_ BitVec 64))
(declare-fun temp801_98 () (_ BitVec 64))
(declare-fun temp801_99 () (_ BitVec 64))
(declare-fun temp801_100 () (_ BitVec 64))
(declare-fun temp801_101 () (_ BitVec 64))
(declare-fun temp801_102 () (_ BitVec 64))
(declare-fun temp801_103 () (_ BitVec 64))
(declare-fun temp801_104 () (_ BitVec 64))
(declare-fun temp801_105 () (_ BitVec 64))
(declare-fun temp801_106 () (_ BitVec 64))
(declare-fun temp801_107 () (_ BitVec 64))
(declare-fun temp801_108 () (_ BitVec 64))
(declare-fun temp801_109 () (_ BitVec 64))
(declare-fun temp801_110 () (_ BitVec 64))
(declare-fun temp801_111 () (_ BitVec 64))
(declare-fun temp801_112 () (_ BitVec 64))
(declare-fun temp801_113 () (_ BitVec 64))
(declare-fun temp801_114 () (_ BitVec 64))
(declare-fun temp801_115 () (_ BitVec 64))
(declare-fun temp801_116 () (_ BitVec 64))
(declare-fun temp801_117 () (_ BitVec 64))
(declare-fun temp801_118 () (_ BitVec 64))
(declare-fun temp801_119 () (_ BitVec 64))
(declare-fun temp801_120 () (_ BitVec 64))
(declare-fun temp801_121 () (_ BitVec 64))
(declare-fun temp801_122 () (_ BitVec 64))
(declare-fun temp801_123 () (_ BitVec 64))
(declare-fun temp801_124 () (_ BitVec 64))
(declare-fun temp801_125 () (_ BitVec 64))
(declare-fun temp801_126 () (_ BitVec 64))
(declare-fun temp801_127 () (_ BitVec 64))
(declare-fun temp801_128 () (_ BitVec 64))
(declare-fun temp801_129 () (_ BitVec 64))
(declare-fun temp801_130 () (_ BitVec 64))
(declare-fun temp801_131 () (_ BitVec 64))
(declare-fun temp801_132 () (_ BitVec 64))
(declare-fun temp801_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp801_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp801_135 () (_ BitVec 64))
(declare-fun temp801_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp801_137 () (_ BitVec 64))
(declare-fun temp801_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_139 () (_ BitVec 64))
(declare-fun temp801_140 () (_ BitVec 64))
(declare-fun temp801_141 () (_ BitVec 64))
(declare-fun temp801_142 () (_ BitVec 64))
(declare-fun temp801_143 () (_ BitVec 64))
(declare-fun temp801_144 () (_ BitVec 64))
(declare-fun temp801_145 () (_ BitVec 64))
(declare-fun temp801_146 () (_ BitVec 64))
(declare-fun temp801_147 () (_ BitVec 64))
(declare-fun temp801_148 () (_ BitVec 64))
(declare-fun temp801_149 () (_ BitVec 64))
(declare-fun temp801_150 () (_ BitVec 64))
(declare-fun temp801_151 () (_ BitVec 64))
(declare-fun temp801_152 () (_ BitVec 64))
(declare-fun temp801_153 () (_ BitVec 64))
(declare-fun temp801_154 () (_ BitVec 64))
(declare-fun temp801_156 () (_ BitVec 64))
(declare-fun temp801_157 () (_ BitVec 64))
(declare-fun temp801_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp801_158 () (_ BitVec 64))
(declare-fun temp801_159 () (_ BitVec 64))
(declare-fun temp801_161 () (_ BitVec 64))
(declare-fun temp801_162 () (_ BitVec 64))
(declare-fun temp801_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp801_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp801_164 () (_ BitVec 64))
(declare-fun temp801_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp801_166 () (_ BitVec 64))
(declare-fun temp801_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp801_168 () (_ BitVec 64))
(declare-fun temp801_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_170 () (_ BitVec 64))
(declare-fun temp801_171 () (_ BitVec 64))
(declare-fun temp801_172 () (_ BitVec 64))
(declare-fun temp801_173 () (_ BitVec 64))
(declare-fun temp801_174 () (_ BitVec 64))
(declare-fun temp801_175 () (_ BitVec 64))
(declare-fun temp801_176 () (_ BitVec 64))
(declare-fun temp801_177 () (_ BitVec 64))
(declare-fun temp801_178 () (_ BitVec 64))
(declare-fun temp801_179 () (_ BitVec 64))
(declare-fun temp801_180 () (_ BitVec 64))
(declare-fun temp801_181 () (_ BitVec 64))
(declare-fun temp801_182 () (_ BitVec 64))
(declare-fun temp801_183 () (_ BitVec 64))
(declare-fun temp801_184 () (_ BitVec 64))
(declare-fun temp801_185 () (_ BitVec 64))
(declare-fun temp801_186 () (_ BitVec 64))
(declare-fun temp801_187 () (_ BitVec 64))
(declare-fun temp801_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp801_189 () (_ BitVec 64))
(declare-fun temp801_191 () (_ BitVec 64))
(declare-fun temp801_192 () (_ BitVec 64))
(declare-fun temp801_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp801_193 () (_ BitVec 64))
(declare-fun temp801_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp801_195 () (_ BitVec 64))
(declare-fun temp801_196 () (_ BitVec 64))
(declare-fun temp801_197 () (_ BitVec 64))
(declare-fun temp801_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_199 () (_ BitVec 64))
(declare-fun temp801_200 () (_ BitVec 64))
(declare-fun temp801_201 () (_ BitVec 64))
(declare-fun temp801_202 () (_ BitVec 64))
(declare-fun temp801_203 () (_ BitVec 64))
(declare-fun temp801_204 () (_ BitVec 64))
(declare-fun temp801_205 () (_ BitVec 64))
(declare-fun temp801_206 () (_ BitVec 64))
(declare-fun temp801_207 () (_ BitVec 64))
(declare-fun temp801_208 () (_ BitVec 64))
(declare-fun temp801_209 () (_ BitVec 64))
(declare-fun temp801_210 () (_ BitVec 64))
(declare-fun temp801_211 () (_ BitVec 64))
(declare-fun temp801_212 () (_ BitVec 64))
(declare-fun temp801_213 () (_ BitVec 64))
(declare-fun temp801_214 () (_ BitVec 64))
(declare-fun temp801_215 () (_ BitVec 64))
(declare-fun temp801_216 () (_ BitVec 64))
(declare-fun temp801_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp801_218 () (_ BitVec 64))
(declare-fun temp801_220 () (_ BitVec 64))
(declare-fun temp801_221 () (_ BitVec 64))
(declare-fun temp801_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp801_222 () (_ BitVec 64))
(declare-fun temp801_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp801_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp801_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp801_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp801_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp801_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp801_229 () (_ BitVec 64))
(declare-fun temp801_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp801_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp801_232 () (_ BitVec 64))
(declare-fun temp801_233 () (_ BitVec 64))
(declare-fun temp801_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp801_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp801_236 () (_ BitVec 64))
(declare-fun temp801_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp801_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp801_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp801_241 () (_ BitVec 64))
(declare-fun temp801_240 () (_ BitVec 64))
(declare-fun temp801_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp801_243 () (_ BitVec 64))
(declare-fun temp801_244 () (_ BitVec 64))
(declare-fun temp801_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp801_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp801_247 () (_ BitVec 64))
(declare-fun temp801_248 () (_ BitVec 64))
(assert (= temp801_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp801_1)))
(assert (= temp801_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp801_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_3 #x0000000000000000))
(assert (= var79869 temp801_3))
(assert (= temp801_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp801_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_5 #x0000000000000000))
(assert (= var79914 temp801_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp801_6 #x0000000000000000))
(assert (= temp801_7 temp801_6))
(assert (= temp801_8 (select ARGNAME_padding_NAMEEND_VAL temp801_7)))
(assert (= temp801_9 #x0000000000000001))
(assert (= temp801_10 temp801_9))
(assert (= temp801_11 (select ARGNAME_padding_NAMEEND_VAL temp801_10)))
(assert (= temp801_12 #x0000000000000002))
(assert (= temp801_13 temp801_12))
(assert (= temp801_14 (select ARGNAME_padding_NAMEEND_VAL temp801_13)))
(assert (= temp801_15 #x0000000000000003))
(assert (= temp801_16 temp801_15))
(assert (= temp801_17 (select ARGNAME_padding_NAMEEND_VAL temp801_16)))
(assert (= temp801_18 #x0000000000000004))
(assert (= temp801_19 temp801_18))
(assert (= temp801_20 (select ARGNAME_padding_NAMEEND_VAL temp801_19)))
(assert (= temp801_21 #x0000000000000005))
(assert (= temp801_22 temp801_21))
(assert (= temp801_23 (select ARGNAME_padding_NAMEEND_VAL temp801_22)))
(assert (= temp801_24 #x0000000000000000))
(assert (= temp801_25 #x0000000000000000))
(assert (= temp801_26 temp801_25))
(assert (= temp801_27 (select ARGNAME_padding_NAMEEND_VAL temp801_26)))
(assert (= temp801_28 #x0000000000000000))
(assert (= temp801_29 #x0000000000000001))
(assert (= temp801_30 temp801_29))
(assert (= temp801_31 (select ARGNAME_padding_NAMEEND_VAL temp801_30)))
(assert (= temp801_32 #x0000000000000000))
(assert (= temp801_33 #x0000000000000002))
(assert (= temp801_34 temp801_33))
(assert (= temp801_35 (select ARGNAME_padding_NAMEEND_VAL temp801_34)))
(assert (= temp801_36 #x0000000000000000))
(assert (= temp801_37 #x0000000000000003))
(assert (= temp801_38 temp801_37))
(assert (= temp801_39 (select ARGNAME_padding_NAMEEND_VAL temp801_38)))
(assert (= temp801_40 #x0000000000000000))
(assert (= temp801_41 #x0000000000000004))
(assert (= temp801_42 temp801_41))
(assert (= temp801_43 (select ARGNAME_padding_NAMEEND_VAL temp801_42)))
(assert (= temp801_44 #x0000000000000000))
(assert (= temp801_45 #x0000000000000005))
(assert (= temp801_46 temp801_45))
(assert (= temp801_47 (select ARGNAME_padding_NAMEEND_VAL temp801_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp801_27 temp801_24)
             (bvslt temp801_31 temp801_28)
             (bvslt temp801_35 temp801_32)
             (bvslt temp801_39 temp801_36)
             (bvslt temp801_43 temp801_40)
             (bvslt temp801_47 temp801_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_48 #x0000000000000000))
(assert (= var1322786 temp801_48))
(assert (= temp801_49 #x0000000000000000))
(assert (= temp801_50 temp801_49))
(assert (= temp801_51 (select ARGNAME_output_padding_NAMEEND_VAL temp801_50)))
(assert (= temp801_52 #x0000000000000001))
(assert (= temp801_53 temp801_52))
(assert (= temp801_54 (select ARGNAME_output_padding_NAMEEND_VAL temp801_53)))
(assert (= temp801_55 #x0000000000000002))
(assert (= temp801_56 temp801_55))
(assert (= temp801_57 (select ARGNAME_output_padding_NAMEEND_VAL temp801_56)))
(assert (= temp801_58 #x0000000000000003))
(assert (= temp801_59 temp801_58))
(assert (= temp801_60 (select ARGNAME_output_padding_NAMEEND_VAL temp801_59)))
(assert (= temp801_61 #x0000000000000004))
(assert (= temp801_62 temp801_61))
(assert (= temp801_63 (select ARGNAME_output_padding_NAMEEND_VAL temp801_62)))
(assert (= temp801_64 #x0000000000000005))
(assert (= temp801_65 temp801_64))
(assert (= temp801_66 (select ARGNAME_output_padding_NAMEEND_VAL temp801_65)))
(assert (= temp801_67 #x0000000000000000))
(assert (= temp801_68 #x0000000000000000))
(assert (= temp801_69 temp801_68))
(assert (= temp801_70 (select ARGNAME_output_padding_NAMEEND_VAL temp801_69)))
(assert (= temp801_71 #x0000000000000000))
(assert (= temp801_72 #x0000000000000001))
(assert (= temp801_73 temp801_72))
(assert (= temp801_74 (select ARGNAME_output_padding_NAMEEND_VAL temp801_73)))
(assert (= temp801_75 #x0000000000000000))
(assert (= temp801_76 #x0000000000000002))
(assert (= temp801_77 temp801_76))
(assert (= temp801_78 (select ARGNAME_output_padding_NAMEEND_VAL temp801_77)))
(assert (= temp801_79 #x0000000000000000))
(assert (= temp801_80 #x0000000000000003))
(assert (= temp801_81 temp801_80))
(assert (= temp801_82 (select ARGNAME_output_padding_NAMEEND_VAL temp801_81)))
(assert (= temp801_83 #x0000000000000000))
(assert (= temp801_84 #x0000000000000004))
(assert (= temp801_85 temp801_84))
(assert (= temp801_86 (select ARGNAME_output_padding_NAMEEND_VAL temp801_85)))
(assert (= temp801_87 #x0000000000000000))
(assert (= temp801_88 #x0000000000000005))
(assert (= temp801_89 temp801_88))
(assert (= temp801_90 (select ARGNAME_output_padding_NAMEEND_VAL temp801_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp801_70 temp801_67)
             (bvslt temp801_74 temp801_71)
             (bvslt temp801_78 temp801_75)
             (bvslt temp801_82 temp801_79)
             (bvslt temp801_86 temp801_83)
             (bvslt temp801_90 temp801_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_91 #x0000000000000000))
(assert (= var1322797 temp801_91))
(assert (= temp801_92 #x0000000000000000))
(assert (= temp801_93 temp801_92))
(assert (= temp801_94 (select ARGNAME_stride_NAMEEND_VAL temp801_93)))
(assert (= temp801_95 #x0000000000000001))
(assert (= temp801_96 temp801_95))
(assert (= temp801_97 (select ARGNAME_stride_NAMEEND_VAL temp801_96)))
(assert (= temp801_98 #x0000000000000002))
(assert (= temp801_99 temp801_98))
(assert (= temp801_100 (select ARGNAME_stride_NAMEEND_VAL temp801_99)))
(assert (= temp801_101 #x0000000000000003))
(assert (= temp801_102 temp801_101))
(assert (= temp801_103 (select ARGNAME_stride_NAMEEND_VAL temp801_102)))
(assert (= temp801_104 #x0000000000000004))
(assert (= temp801_105 temp801_104))
(assert (= temp801_106 (select ARGNAME_stride_NAMEEND_VAL temp801_105)))
(assert (= temp801_107 #x0000000000000005))
(assert (= temp801_108 temp801_107))
(assert (= temp801_109 (select ARGNAME_stride_NAMEEND_VAL temp801_108)))
(assert (= temp801_110 #x0000000000000000))
(assert (= temp801_111 #x0000000000000000))
(assert (= temp801_112 temp801_111))
(assert (= temp801_113 (select ARGNAME_stride_NAMEEND_VAL temp801_112)))
(assert (= temp801_114 #x0000000000000000))
(assert (= temp801_115 #x0000000000000001))
(assert (= temp801_116 temp801_115))
(assert (= temp801_117 (select ARGNAME_stride_NAMEEND_VAL temp801_116)))
(assert (= temp801_118 #x0000000000000000))
(assert (= temp801_119 #x0000000000000002))
(assert (= temp801_120 temp801_119))
(assert (= temp801_121 (select ARGNAME_stride_NAMEEND_VAL temp801_120)))
(assert (= temp801_122 #x0000000000000000))
(assert (= temp801_123 #x0000000000000003))
(assert (= temp801_124 temp801_123))
(assert (= temp801_125 (select ARGNAME_stride_NAMEEND_VAL temp801_124)))
(assert (= temp801_126 #x0000000000000000))
(assert (= temp801_127 #x0000000000000004))
(assert (= temp801_128 temp801_127))
(assert (= temp801_129 (select ARGNAME_stride_NAMEEND_VAL temp801_128)))
(assert (= temp801_130 #x0000000000000000))
(assert (= temp801_131 #x0000000000000005))
(assert (= temp801_132 temp801_131))
(assert (= temp801_133 (select ARGNAME_stride_NAMEEND_VAL temp801_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp801_113 temp801_110)
             (bvsle temp801_117 temp801_114)
             (bvsle temp801_121 temp801_118)
             (bvsle temp801_125 temp801_122)
             (bvsle temp801_129 temp801_126)
             (bvsle temp801_133 temp801_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_134 #x0000000000000000))
(assert (= var1322807 temp801_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_135 #x0000000000000001))
(assert (= var1322819 temp801_135))
(assert (= temp801_136 #x0000000000000000))
(assert (= var1310898 temp801_136))
(assert (= temp801_137 #x0000000000000000))
(assert (= temp801_138 temp801_137))
(assert (= temp801_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_138)))
(assert (= temp801_140 #x0000000000000001))
(assert (= temp801_141 temp801_140))
(assert (= temp801_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_141)))
(assert (= temp801_143 #x0000000000000002))
(assert (= temp801_144 temp801_143))
(assert (= temp801_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_144)))
(assert (= temp801_146 #x0000000000000003))
(assert (= temp801_147 temp801_146))
(assert (= temp801_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_147)))
(assert (= temp801_149 #x0000000000000004))
(assert (= temp801_150 temp801_149))
(assert (= temp801_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_150)))
(assert (= temp801_152 #x0000000000000005))
(assert (= temp801_153 temp801_152))
(assert (= temp801_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_153)))
(assert (= temp801_156 var1310898))
(assert (= temp801_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_156)))
(assert (= temp801_155 temp801_157))
(assert (= var1322852
   (ite (bvslt temp801_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_158 #x0000000000000000))
(assert (= var1322852 temp801_158))
(assert (= temp801_159 #x0000000000000000))
(assert (= var1310898 temp801_159))
(assert (= temp801_161 var1310898))
(assert (= temp801_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_161)))
(assert (= temp801_160 temp801_162))
(assert (= var1322874 (bvsmod temp801_160 ARGNAME_groups_NAMEEND)))
(assert (= temp801_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp801_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp801_164 #x0000000000000001))
(assert (= var1322875 temp801_164))
(assert (= temp801_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp801_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_166 #x0000000000000001))
(assert (= var1322895 temp801_166))
(assert (= temp801_167 #x0000000000000001))
(assert (= var1311786 temp801_167))
(assert (= temp801_168 #x0000000000000000))
(assert (= temp801_169 temp801_168))
(assert (= temp801_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_169)))
(assert (= temp801_171 #x0000000000000001))
(assert (= temp801_172 temp801_171))
(assert (= temp801_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_172)))
(assert (= temp801_174 #x0000000000000002))
(assert (= temp801_175 temp801_174))
(assert (= temp801_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_175)))
(assert (= temp801_177 #x0000000000000003))
(assert (= temp801_178 temp801_177))
(assert (= temp801_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_178)))
(assert (= temp801_180 #x0000000000000004))
(assert (= temp801_181 temp801_180))
(assert (= temp801_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_181)))
(assert (= temp801_183 #x0000000000000005))
(assert (= temp801_184 temp801_183))
(assert (= temp801_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_184)))
(assert (= temp801_186 #x0000000000000000))
(assert (= temp801_187
   (ite (bvslt var1311786 temp801_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp801_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_187)))
(assert (= var1322903 temp801_188))
(assert (bvslt (ite (bvslt var1311786 temp801_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp801_189 #x0000000000000001))
(assert (= var1311786 temp801_189))
(assert (= temp801_191 var1311786))
(assert (= temp801_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_191)))
(assert (= temp801_190 temp801_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp801_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp801_193 #x0000000000000001))
(assert (= var1322908 temp801_193))
(assert (= temp801_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp801_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_195 #x0000000000000001))
(assert (= var1322975 temp801_195))
(assert (= temp801_196 #x0000000000000000))
(assert (= var1310898 temp801_196))
(assert (= temp801_197 #x0000000000000000))
(assert (= temp801_198 temp801_197))
(assert (= temp801_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp801_198)))
(assert (= temp801_200 #x0000000000000001))
(assert (= temp801_201 temp801_200))
(assert (= temp801_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp801_201)))
(assert (= temp801_203 #x0000000000000002))
(assert (= temp801_204 temp801_203))
(assert (= temp801_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp801_204)))
(assert (= temp801_206 #x0000000000000003))
(assert (= temp801_207 temp801_206))
(assert (= temp801_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp801_207)))
(assert (= temp801_209 #x0000000000000004))
(assert (= temp801_210 temp801_209))
(assert (= temp801_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp801_210)))
(assert (= temp801_212 #x0000000000000005))
(assert (= temp801_213 temp801_212))
(assert (= temp801_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp801_213)))
(assert (= temp801_215 #x0000000000000000))
(assert (= temp801_216
   (ite (bvslt var1310898 temp801_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp801_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp801_216)))
(assert (= var1322977 temp801_217))
(assert (bvslt (ite (bvslt var1310898 temp801_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp801_218 #x0000000000000000))
(assert (= var1310898 temp801_218))
(assert (= temp801_220 var1310898))
(assert (= temp801_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_220)))
(assert (= temp801_219 temp801_221))
(assert (= var1322980
   (ite (= var1322977 temp801_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp801_222 #x0000000000000001))
(assert (= var1322980 temp801_222))
(assert (= temp801_223 #x0000000000000002))
(assert (= var1848169 temp801_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp801_225 #x0000000000000001))
(assert (= var1323065 temp801_225))
(assert (= temp801_226 #x0000000000000001))
(assert (= var3486735 temp801_226))
(assert (= temp801_227 #x0000000000000001))
(assert (= var3814415 temp801_227))
(assert (= temp801_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp801_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_229 #x0000000000000001))
(assert (= var79986 temp801_229))
(assert (= temp801_230 #x0000000000000001))
(assert (= var80116 temp801_230))
(assert (= var4796905 var80116))
(assert (= temp801_231 #x0000000000000000))
(assert (= var4784306 temp801_231))
(assert (= temp801_232 #x0000000000000000))
(assert (= temp801_233
   (ite (bvslt var4784306 temp801_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp801_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_233)))
(assert (= var4796924 temp801_234))
(assert (bvslt (ite (bvslt var4784306 temp801_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp801_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp801_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp801_236 #x0000000000000001))
(assert (= var4796925 temp801_236))
(assert (= temp801_237 #x0000000000000000))
(assert (= var4996927 temp801_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp801_238 #x0000000000000002))
(assert (= var5125763 temp801_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_239 #x0000000000000000))
(assert (= var5191324 temp801_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp801_241 #xffffffffffffffff))
(assert (= temp801_240 temp801_241))
(assert (= temp801_242 #x0000000000000001))
(assert (= var66602 temp801_242))
(assert (= temp801_243 #x0000000000000000))
(assert (= temp801_244
   (ite (bvslt var66602 temp801_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp801_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_244)))
(assert (= var80523 temp801_245))
(assert (bvslt (ite (bvslt var66602 temp801_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp801_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp801_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp801_247 #x0000000000000000))
(assert (= var80524 temp801_247))
(assert (= temp801_248 #x0000000000000001))
(assert (= var79986 temp801_248))
(model-add temp801_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp801_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp801_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






