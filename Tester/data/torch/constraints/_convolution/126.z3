(declare-fun temp166_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp166_2 () (_ BitVec 64))
(declare-fun temp166_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp166_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp166_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp166_6 () (_ BitVec 64))
(declare-fun temp166_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp166_8 () (_ BitVec 64))
(declare-fun temp166_9 () (_ BitVec 64))
(declare-fun temp166_10 () (_ BitVec 64))
(declare-fun temp166_11 () (_ BitVec 64))
(declare-fun temp166_12 () (_ BitVec 64))
(declare-fun temp166_13 () (_ BitVec 64))
(declare-fun temp166_14 () (_ BitVec 64))
(declare-fun temp166_15 () (_ BitVec 64))
(declare-fun temp166_16 () (_ BitVec 64))
(declare-fun temp166_17 () (_ BitVec 64))
(declare-fun temp166_18 () (_ BitVec 64))
(declare-fun temp166_19 () (_ BitVec 64))
(declare-fun temp166_20 () (_ BitVec 64))
(declare-fun temp166_21 () (_ BitVec 64))
(declare-fun temp166_22 () (_ BitVec 64))
(declare-fun temp166_23 () (_ BitVec 64))
(declare-fun temp166_24 () (_ BitVec 64))
(declare-fun temp166_25 () (_ BitVec 64))
(declare-fun temp166_26 () (_ BitVec 64))
(declare-fun temp166_27 () (_ BitVec 64))
(declare-fun temp166_28 () (_ BitVec 64))
(declare-fun temp166_29 () (_ BitVec 64))
(declare-fun temp166_30 () (_ BitVec 64))
(declare-fun temp166_31 () (_ BitVec 64))
(declare-fun temp166_32 () (_ BitVec 64))
(declare-fun temp166_33 () (_ BitVec 64))
(declare-fun temp166_34 () (_ BitVec 64))
(declare-fun temp166_35 () (_ BitVec 64))
(declare-fun temp166_36 () (_ BitVec 64))
(declare-fun temp166_37 () (_ BitVec 64))
(declare-fun temp166_38 () (_ BitVec 64))
(declare-fun temp166_39 () (_ BitVec 64))
(declare-fun temp166_40 () (_ BitVec 64))
(declare-fun temp166_41 () (_ BitVec 64))
(declare-fun temp166_42 () (_ BitVec 64))
(declare-fun temp166_43 () (_ BitVec 64))
(declare-fun temp166_44 () (_ BitVec 64))
(declare-fun temp166_45 () (_ BitVec 64))
(declare-fun temp166_46 () (_ BitVec 64))
(declare-fun temp166_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp166_48 () (_ BitVec 64))
(declare-fun temp166_49 () (_ BitVec 64))
(declare-fun temp166_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp166_51 () (_ BitVec 64))
(declare-fun temp166_52 () (_ BitVec 64))
(declare-fun temp166_53 () (_ BitVec 64))
(declare-fun temp166_54 () (_ BitVec 64))
(declare-fun temp166_55 () (_ BitVec 64))
(declare-fun temp166_56 () (_ BitVec 64))
(declare-fun temp166_57 () (_ BitVec 64))
(declare-fun temp166_58 () (_ BitVec 64))
(declare-fun temp166_59 () (_ BitVec 64))
(declare-fun temp166_60 () (_ BitVec 64))
(declare-fun temp166_61 () (_ BitVec 64))
(declare-fun temp166_62 () (_ BitVec 64))
(declare-fun temp166_63 () (_ BitVec 64))
(declare-fun temp166_64 () (_ BitVec 64))
(declare-fun temp166_65 () (_ BitVec 64))
(declare-fun temp166_66 () (_ BitVec 64))
(declare-fun temp166_67 () (_ BitVec 64))
(declare-fun temp166_68 () (_ BitVec 64))
(declare-fun temp166_69 () (_ BitVec 64))
(declare-fun temp166_70 () (_ BitVec 64))
(declare-fun temp166_71 () (_ BitVec 64))
(declare-fun temp166_72 () (_ BitVec 64))
(declare-fun temp166_73 () (_ BitVec 64))
(declare-fun temp166_74 () (_ BitVec 64))
(declare-fun temp166_75 () (_ BitVec 64))
(declare-fun temp166_76 () (_ BitVec 64))
(declare-fun temp166_77 () (_ BitVec 64))
(declare-fun temp166_78 () (_ BitVec 64))
(declare-fun temp166_79 () (_ BitVec 64))
(declare-fun temp166_80 () (_ BitVec 64))
(declare-fun temp166_81 () (_ BitVec 64))
(declare-fun temp166_82 () (_ BitVec 64))
(declare-fun temp166_83 () (_ BitVec 64))
(declare-fun temp166_84 () (_ BitVec 64))
(declare-fun temp166_85 () (_ BitVec 64))
(declare-fun temp166_86 () (_ BitVec 64))
(declare-fun temp166_87 () (_ BitVec 64))
(declare-fun temp166_88 () (_ BitVec 64))
(declare-fun temp166_89 () (_ BitVec 64))
(declare-fun temp166_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp166_91 () (_ BitVec 64))
(declare-fun temp166_92 () (_ BitVec 64))
(declare-fun temp166_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp166_94 () (_ BitVec 64))
(declare-fun temp166_95 () (_ BitVec 64))
(declare-fun temp166_96 () (_ BitVec 64))
(declare-fun temp166_97 () (_ BitVec 64))
(declare-fun temp166_98 () (_ BitVec 64))
(declare-fun temp166_99 () (_ BitVec 64))
(declare-fun temp166_100 () (_ BitVec 64))
(declare-fun temp166_101 () (_ BitVec 64))
(declare-fun temp166_102 () (_ BitVec 64))
(declare-fun temp166_103 () (_ BitVec 64))
(declare-fun temp166_104 () (_ BitVec 64))
(declare-fun temp166_105 () (_ BitVec 64))
(declare-fun temp166_106 () (_ BitVec 64))
(declare-fun temp166_107 () (_ BitVec 64))
(declare-fun temp166_108 () (_ BitVec 64))
(declare-fun temp166_109 () (_ BitVec 64))
(declare-fun temp166_110 () (_ BitVec 64))
(declare-fun temp166_111 () (_ BitVec 64))
(declare-fun temp166_112 () (_ BitVec 64))
(declare-fun temp166_113 () (_ BitVec 64))
(declare-fun temp166_114 () (_ BitVec 64))
(declare-fun temp166_115 () (_ BitVec 64))
(declare-fun temp166_116 () (_ BitVec 64))
(declare-fun temp166_117 () (_ BitVec 64))
(declare-fun temp166_118 () (_ BitVec 64))
(declare-fun temp166_119 () (_ BitVec 64))
(declare-fun temp166_120 () (_ BitVec 64))
(declare-fun temp166_121 () (_ BitVec 64))
(declare-fun temp166_122 () (_ BitVec 64))
(declare-fun temp166_123 () (_ BitVec 64))
(declare-fun temp166_124 () (_ BitVec 64))
(declare-fun temp166_125 () (_ BitVec 64))
(declare-fun temp166_126 () (_ BitVec 64))
(declare-fun temp166_127 () (_ BitVec 64))
(declare-fun temp166_128 () (_ BitVec 64))
(declare-fun temp166_129 () (_ BitVec 64))
(declare-fun temp166_130 () (_ BitVec 64))
(declare-fun temp166_131 () (_ BitVec 64))
(declare-fun temp166_132 () (_ BitVec 64))
(declare-fun temp166_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp166_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp166_135 () (_ BitVec 64))
(declare-fun temp166_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp166_137 () (_ BitVec 64))
(declare-fun temp166_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp166_139 () (_ BitVec 64))
(declare-fun temp166_140 () (_ BitVec 64))
(declare-fun temp166_141 () (_ BitVec 64))
(declare-fun temp166_142 () (_ BitVec 64))
(declare-fun temp166_143 () (_ BitVec 64))
(declare-fun temp166_144 () (_ BitVec 64))
(declare-fun temp166_145 () (_ BitVec 64))
(declare-fun temp166_146 () (_ BitVec 64))
(declare-fun temp166_147 () (_ BitVec 64))
(declare-fun temp166_148 () (_ BitVec 64))
(declare-fun temp166_149 () (_ BitVec 64))
(declare-fun temp166_150 () (_ BitVec 64))
(declare-fun temp166_151 () (_ BitVec 64))
(declare-fun temp166_152 () (_ BitVec 64))
(declare-fun temp166_153 () (_ BitVec 64))
(declare-fun temp166_154 () (_ BitVec 64))
(declare-fun temp166_156 () (_ BitVec 64))
(declare-fun temp166_157 () (_ BitVec 64))
(declare-fun temp166_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp166_158 () (_ BitVec 64))
(declare-fun temp166_159 () (_ BitVec 64))
(declare-fun temp166_161 () (_ BitVec 64))
(declare-fun temp166_162 () (_ BitVec 64))
(declare-fun temp166_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp166_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp166_164 () (_ BitVec 64))
(declare-fun temp166_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp166_166 () (_ BitVec 64))
(declare-fun temp166_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp166_168 () (_ BitVec 64))
(declare-fun temp166_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp166_170 () (_ BitVec 64))
(declare-fun temp166_171 () (_ BitVec 64))
(declare-fun temp166_172 () (_ BitVec 64))
(declare-fun temp166_173 () (_ BitVec 64))
(declare-fun temp166_174 () (_ BitVec 64))
(declare-fun temp166_175 () (_ BitVec 64))
(declare-fun temp166_176 () (_ BitVec 64))
(declare-fun temp166_177 () (_ BitVec 64))
(declare-fun temp166_178 () (_ BitVec 64))
(declare-fun temp166_179 () (_ BitVec 64))
(declare-fun temp166_180 () (_ BitVec 64))
(declare-fun temp166_181 () (_ BitVec 64))
(declare-fun temp166_182 () (_ BitVec 64))
(declare-fun temp166_183 () (_ BitVec 64))
(declare-fun temp166_184 () (_ BitVec 64))
(declare-fun temp166_185 () (_ BitVec 64))
(declare-fun temp166_186 () (_ BitVec 64))
(declare-fun temp166_187 () (_ BitVec 64))
(declare-fun temp166_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp166_189 () (_ BitVec 64))
(declare-fun temp166_191 () (_ BitVec 64))
(declare-fun temp166_192 () (_ BitVec 64))
(declare-fun temp166_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp166_193 () (_ BitVec 64))
(declare-fun temp166_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp166_195 () (_ BitVec 64))
(declare-fun temp166_196 () (_ BitVec 64))
(declare-fun temp166_197 () (_ BitVec 64))
(declare-fun temp166_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp166_199 () (_ BitVec 64))
(declare-fun temp166_200 () (_ BitVec 64))
(declare-fun temp166_201 () (_ BitVec 64))
(declare-fun temp166_202 () (_ BitVec 64))
(declare-fun temp166_203 () (_ BitVec 64))
(declare-fun temp166_204 () (_ BitVec 64))
(declare-fun temp166_205 () (_ BitVec 64))
(declare-fun temp166_206 () (_ BitVec 64))
(declare-fun temp166_207 () (_ BitVec 64))
(declare-fun temp166_208 () (_ BitVec 64))
(declare-fun temp166_209 () (_ BitVec 64))
(declare-fun temp166_210 () (_ BitVec 64))
(declare-fun temp166_211 () (_ BitVec 64))
(declare-fun temp166_212 () (_ BitVec 64))
(declare-fun temp166_213 () (_ BitVec 64))
(declare-fun temp166_214 () (_ BitVec 64))
(declare-fun temp166_215 () (_ BitVec 64))
(declare-fun temp166_216 () (_ BitVec 64))
(declare-fun temp166_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp166_218 () (_ BitVec 64))
(declare-fun temp166_220 () (_ BitVec 64))
(declare-fun temp166_221 () (_ BitVec 64))
(declare-fun temp166_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp166_222 () (_ BitVec 64))
(declare-fun temp166_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp166_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp166_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp166_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp166_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp166_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp166_229 () (_ BitVec 64))
(declare-fun temp166_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp166_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp166_232 () (_ BitVec 64))
(declare-fun temp166_233 () (_ BitVec 64))
(declare-fun temp166_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp166_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp166_236 () (_ BitVec 64))
(declare-fun temp166_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp166_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp166_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp166_241 () (_ BitVec 64))
(declare-fun temp166_240 () (_ BitVec 64))
(declare-fun temp166_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp166_243 () (_ BitVec 64))
(declare-fun temp166_244 () (_ BitVec 64))
(declare-fun temp166_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp166_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp166_247 () (_ BitVec 64))
(declare-fun temp166_248 () (_ BitVec 64))
(assert (= temp166_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp166_1)))
(assert (= temp166_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp166_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_3 #x0000000000000000))
(assert (= var79869 temp166_3))
(assert (= temp166_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp166_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_5 #x0000000000000000))
(assert (= var79914 temp166_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp166_6 #x0000000000000000))
(assert (= temp166_7 temp166_6))
(assert (= temp166_8 (select ARGNAME_padding_NAMEEND_VAL temp166_7)))
(assert (= temp166_9 #x0000000000000001))
(assert (= temp166_10 temp166_9))
(assert (= temp166_11 (select ARGNAME_padding_NAMEEND_VAL temp166_10)))
(assert (= temp166_12 #x0000000000000002))
(assert (= temp166_13 temp166_12))
(assert (= temp166_14 (select ARGNAME_padding_NAMEEND_VAL temp166_13)))
(assert (= temp166_15 #x0000000000000003))
(assert (= temp166_16 temp166_15))
(assert (= temp166_17 (select ARGNAME_padding_NAMEEND_VAL temp166_16)))
(assert (= temp166_18 #x0000000000000004))
(assert (= temp166_19 temp166_18))
(assert (= temp166_20 (select ARGNAME_padding_NAMEEND_VAL temp166_19)))
(assert (= temp166_21 #x0000000000000005))
(assert (= temp166_22 temp166_21))
(assert (= temp166_23 (select ARGNAME_padding_NAMEEND_VAL temp166_22)))
(assert (= temp166_24 #x0000000000000000))
(assert (= temp166_25 #x0000000000000000))
(assert (= temp166_26 temp166_25))
(assert (= temp166_27 (select ARGNAME_padding_NAMEEND_VAL temp166_26)))
(assert (= temp166_28 #x0000000000000000))
(assert (= temp166_29 #x0000000000000001))
(assert (= temp166_30 temp166_29))
(assert (= temp166_31 (select ARGNAME_padding_NAMEEND_VAL temp166_30)))
(assert (= temp166_32 #x0000000000000000))
(assert (= temp166_33 #x0000000000000002))
(assert (= temp166_34 temp166_33))
(assert (= temp166_35 (select ARGNAME_padding_NAMEEND_VAL temp166_34)))
(assert (= temp166_36 #x0000000000000000))
(assert (= temp166_37 #x0000000000000003))
(assert (= temp166_38 temp166_37))
(assert (= temp166_39 (select ARGNAME_padding_NAMEEND_VAL temp166_38)))
(assert (= temp166_40 #x0000000000000000))
(assert (= temp166_41 #x0000000000000004))
(assert (= temp166_42 temp166_41))
(assert (= temp166_43 (select ARGNAME_padding_NAMEEND_VAL temp166_42)))
(assert (= temp166_44 #x0000000000000000))
(assert (= temp166_45 #x0000000000000005))
(assert (= temp166_46 temp166_45))
(assert (= temp166_47 (select ARGNAME_padding_NAMEEND_VAL temp166_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp166_27 temp166_24)
             (bvslt temp166_31 temp166_28)
             (bvslt temp166_35 temp166_32)
             (bvslt temp166_39 temp166_36)
             (bvslt temp166_43 temp166_40)
             (bvslt temp166_47 temp166_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_48 #x0000000000000000))
(assert (= var1322786 temp166_48))
(assert (= temp166_49 #x0000000000000000))
(assert (= temp166_50 temp166_49))
(assert (= temp166_51 (select ARGNAME_output_padding_NAMEEND_VAL temp166_50)))
(assert (= temp166_52 #x0000000000000001))
(assert (= temp166_53 temp166_52))
(assert (= temp166_54 (select ARGNAME_output_padding_NAMEEND_VAL temp166_53)))
(assert (= temp166_55 #x0000000000000002))
(assert (= temp166_56 temp166_55))
(assert (= temp166_57 (select ARGNAME_output_padding_NAMEEND_VAL temp166_56)))
(assert (= temp166_58 #x0000000000000003))
(assert (= temp166_59 temp166_58))
(assert (= temp166_60 (select ARGNAME_output_padding_NAMEEND_VAL temp166_59)))
(assert (= temp166_61 #x0000000000000004))
(assert (= temp166_62 temp166_61))
(assert (= temp166_63 (select ARGNAME_output_padding_NAMEEND_VAL temp166_62)))
(assert (= temp166_64 #x0000000000000005))
(assert (= temp166_65 temp166_64))
(assert (= temp166_66 (select ARGNAME_output_padding_NAMEEND_VAL temp166_65)))
(assert (= temp166_67 #x0000000000000000))
(assert (= temp166_68 #x0000000000000000))
(assert (= temp166_69 temp166_68))
(assert (= temp166_70 (select ARGNAME_output_padding_NAMEEND_VAL temp166_69)))
(assert (= temp166_71 #x0000000000000000))
(assert (= temp166_72 #x0000000000000001))
(assert (= temp166_73 temp166_72))
(assert (= temp166_74 (select ARGNAME_output_padding_NAMEEND_VAL temp166_73)))
(assert (= temp166_75 #x0000000000000000))
(assert (= temp166_76 #x0000000000000002))
(assert (= temp166_77 temp166_76))
(assert (= temp166_78 (select ARGNAME_output_padding_NAMEEND_VAL temp166_77)))
(assert (= temp166_79 #x0000000000000000))
(assert (= temp166_80 #x0000000000000003))
(assert (= temp166_81 temp166_80))
(assert (= temp166_82 (select ARGNAME_output_padding_NAMEEND_VAL temp166_81)))
(assert (= temp166_83 #x0000000000000000))
(assert (= temp166_84 #x0000000000000004))
(assert (= temp166_85 temp166_84))
(assert (= temp166_86 (select ARGNAME_output_padding_NAMEEND_VAL temp166_85)))
(assert (= temp166_87 #x0000000000000000))
(assert (= temp166_88 #x0000000000000005))
(assert (= temp166_89 temp166_88))
(assert (= temp166_90 (select ARGNAME_output_padding_NAMEEND_VAL temp166_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp166_70 temp166_67)
             (bvslt temp166_74 temp166_71)
             (bvslt temp166_78 temp166_75)
             (bvslt temp166_82 temp166_79)
             (bvslt temp166_86 temp166_83)
             (bvslt temp166_90 temp166_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_91 #x0000000000000000))
(assert (= var1322797 temp166_91))
(assert (= temp166_92 #x0000000000000000))
(assert (= temp166_93 temp166_92))
(assert (= temp166_94 (select ARGNAME_stride_NAMEEND_VAL temp166_93)))
(assert (= temp166_95 #x0000000000000001))
(assert (= temp166_96 temp166_95))
(assert (= temp166_97 (select ARGNAME_stride_NAMEEND_VAL temp166_96)))
(assert (= temp166_98 #x0000000000000002))
(assert (= temp166_99 temp166_98))
(assert (= temp166_100 (select ARGNAME_stride_NAMEEND_VAL temp166_99)))
(assert (= temp166_101 #x0000000000000003))
(assert (= temp166_102 temp166_101))
(assert (= temp166_103 (select ARGNAME_stride_NAMEEND_VAL temp166_102)))
(assert (= temp166_104 #x0000000000000004))
(assert (= temp166_105 temp166_104))
(assert (= temp166_106 (select ARGNAME_stride_NAMEEND_VAL temp166_105)))
(assert (= temp166_107 #x0000000000000005))
(assert (= temp166_108 temp166_107))
(assert (= temp166_109 (select ARGNAME_stride_NAMEEND_VAL temp166_108)))
(assert (= temp166_110 #x0000000000000000))
(assert (= temp166_111 #x0000000000000000))
(assert (= temp166_112 temp166_111))
(assert (= temp166_113 (select ARGNAME_stride_NAMEEND_VAL temp166_112)))
(assert (= temp166_114 #x0000000000000000))
(assert (= temp166_115 #x0000000000000001))
(assert (= temp166_116 temp166_115))
(assert (= temp166_117 (select ARGNAME_stride_NAMEEND_VAL temp166_116)))
(assert (= temp166_118 #x0000000000000000))
(assert (= temp166_119 #x0000000000000002))
(assert (= temp166_120 temp166_119))
(assert (= temp166_121 (select ARGNAME_stride_NAMEEND_VAL temp166_120)))
(assert (= temp166_122 #x0000000000000000))
(assert (= temp166_123 #x0000000000000003))
(assert (= temp166_124 temp166_123))
(assert (= temp166_125 (select ARGNAME_stride_NAMEEND_VAL temp166_124)))
(assert (= temp166_126 #x0000000000000000))
(assert (= temp166_127 #x0000000000000004))
(assert (= temp166_128 temp166_127))
(assert (= temp166_129 (select ARGNAME_stride_NAMEEND_VAL temp166_128)))
(assert (= temp166_130 #x0000000000000000))
(assert (= temp166_131 #x0000000000000005))
(assert (= temp166_132 temp166_131))
(assert (= temp166_133 (select ARGNAME_stride_NAMEEND_VAL temp166_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp166_113 temp166_110)
             (bvsle temp166_117 temp166_114)
             (bvsle temp166_121 temp166_118)
             (bvsle temp166_125 temp166_122)
             (bvsle temp166_129 temp166_126)
             (bvsle temp166_133 temp166_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_134 #x0000000000000000))
(assert (= var1322807 temp166_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_135 #x0000000000000001))
(assert (= var1322819 temp166_135))
(assert (= temp166_136 #x0000000000000000))
(assert (= var1310898 temp166_136))
(assert (= temp166_137 #x0000000000000000))
(assert (= temp166_138 temp166_137))
(assert (= temp166_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_138)))
(assert (= temp166_140 #x0000000000000001))
(assert (= temp166_141 temp166_140))
(assert (= temp166_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_141)))
(assert (= temp166_143 #x0000000000000002))
(assert (= temp166_144 temp166_143))
(assert (= temp166_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_144)))
(assert (= temp166_146 #x0000000000000003))
(assert (= temp166_147 temp166_146))
(assert (= temp166_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_147)))
(assert (= temp166_149 #x0000000000000004))
(assert (= temp166_150 temp166_149))
(assert (= temp166_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_150)))
(assert (= temp166_152 #x0000000000000005))
(assert (= temp166_153 temp166_152))
(assert (= temp166_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_153)))
(assert (= temp166_156 var1310898))
(assert (= temp166_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_156)))
(assert (= temp166_155 temp166_157))
(assert (= var1322852
   (ite (bvslt temp166_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_158 #x0000000000000000))
(assert (= var1322852 temp166_158))
(assert (= temp166_159 #x0000000000000000))
(assert (= var1310898 temp166_159))
(assert (= temp166_161 var1310898))
(assert (= temp166_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_161)))
(assert (= temp166_160 temp166_162))
(assert (= var1322874 (bvsmod temp166_160 ARGNAME_groups_NAMEEND)))
(assert (= temp166_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp166_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp166_164 #x0000000000000001))
(assert (= var1322875 temp166_164))
(assert (= temp166_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp166_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_166 #x0000000000000001))
(assert (= var1322895 temp166_166))
(assert (= temp166_167 #x0000000000000001))
(assert (= var1311786 temp166_167))
(assert (= temp166_168 #x0000000000000000))
(assert (= temp166_169 temp166_168))
(assert (= temp166_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp166_169)))
(assert (= temp166_171 #x0000000000000001))
(assert (= temp166_172 temp166_171))
(assert (= temp166_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp166_172)))
(assert (= temp166_174 #x0000000000000002))
(assert (= temp166_175 temp166_174))
(assert (= temp166_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp166_175)))
(assert (= temp166_177 #x0000000000000003))
(assert (= temp166_178 temp166_177))
(assert (= temp166_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp166_178)))
(assert (= temp166_180 #x0000000000000004))
(assert (= temp166_181 temp166_180))
(assert (= temp166_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp166_181)))
(assert (= temp166_183 #x0000000000000005))
(assert (= temp166_184 temp166_183))
(assert (= temp166_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp166_184)))
(assert (= temp166_186 #x0000000000000000))
(assert (= temp166_187
   (ite (bvslt var1311786 temp166_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp166_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp166_187)))
(assert (= var1322903 temp166_188))
(assert (bvslt (ite (bvslt var1311786 temp166_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp166_189 #x0000000000000001))
(assert (= var1311786 temp166_189))
(assert (= temp166_191 var1311786))
(assert (= temp166_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_191)))
(assert (= temp166_190 temp166_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp166_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp166_193 #x0000000000000001))
(assert (= var1322908 temp166_193))
(assert (= temp166_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp166_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_195 #x0000000000000001))
(assert (= var1322975 temp166_195))
(assert (= temp166_196 #x0000000000000000))
(assert (= var1310898 temp166_196))
(assert (= temp166_197 #x0000000000000000))
(assert (= temp166_198 temp166_197))
(assert (= temp166_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp166_198)))
(assert (= temp166_200 #x0000000000000001))
(assert (= temp166_201 temp166_200))
(assert (= temp166_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp166_201)))
(assert (= temp166_203 #x0000000000000002))
(assert (= temp166_204 temp166_203))
(assert (= temp166_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp166_204)))
(assert (= temp166_206 #x0000000000000003))
(assert (= temp166_207 temp166_206))
(assert (= temp166_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp166_207)))
(assert (= temp166_209 #x0000000000000004))
(assert (= temp166_210 temp166_209))
(assert (= temp166_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp166_210)))
(assert (= temp166_212 #x0000000000000005))
(assert (= temp166_213 temp166_212))
(assert (= temp166_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp166_213)))
(assert (= temp166_215 #x0000000000000000))
(assert (= temp166_216
   (ite (bvslt var1310898 temp166_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp166_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp166_216)))
(assert (= var1322977 temp166_217))
(assert (bvslt (ite (bvslt var1310898 temp166_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp166_218 #x0000000000000000))
(assert (= var1310898 temp166_218))
(assert (= temp166_220 var1310898))
(assert (= temp166_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp166_220)))
(assert (= temp166_219 temp166_221))
(assert (= var1322980
   (ite (= var1322977 temp166_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp166_222 #x0000000000000001))
(assert (= var1322980 temp166_222))
(assert (= temp166_223 #x0000000000000002))
(assert (= var1848169 temp166_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp166_225 #x0000000000000001))
(assert (= var1323065 temp166_225))
(assert (= temp166_226 #x0000000000000001))
(assert (= var3486735 temp166_226))
(assert (= temp166_227 #x0000000000000001))
(assert (= var3814415 temp166_227))
(assert (= temp166_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp166_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_229 #x0000000000000001))
(assert (= var79986 temp166_229))
(assert (= temp166_230 #x0000000000000001))
(assert (= var80116 temp166_230))
(assert (= var4796905 var80116))
(assert (= temp166_231 #x0000000000000000))
(assert (= var4784306 temp166_231))
(assert (= temp166_232 #x0000000000000000))
(assert (= temp166_233
   (ite (bvslt var4784306 temp166_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp166_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp166_233)))
(assert (= var4796924 temp166_234))
(assert (bvslt (ite (bvslt var4784306 temp166_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp166_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp166_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp166_236 #x0000000000000001))
(assert (= var4796925 temp166_236))
(assert (= temp166_237 #x0000000000000000))
(assert (= var4996927 temp166_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp166_238 #x0000000000000002))
(assert (= var5125763 temp166_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_239 #x0000000000000000))
(assert (= var5191324 temp166_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp166_241 #xffffffffffffffff))
(assert (= temp166_240 temp166_241))
(assert (= temp166_242 #x0000000000000001))
(assert (= var66602 temp166_242))
(assert (= temp166_243 #x0000000000000000))
(assert (= temp166_244
   (ite (bvslt var66602 temp166_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp166_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp166_244)))
(assert (= var80523 temp166_245))
(assert (bvslt (ite (bvslt var66602 temp166_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp166_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp166_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp166_247 #x0000000000000000))
(assert (= var80524 temp166_247))
(assert (= temp166_248 #x0000000000000001))
(assert (= var79986 temp166_248))
(model-add temp166_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp166_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp166_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






