(declare-fun temp148_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp148_2 () (_ BitVec 64))
(declare-fun temp148_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp148_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp148_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp148_6 () (_ BitVec 64))
(declare-fun temp148_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp148_8 () (_ BitVec 64))
(declare-fun temp148_9 () (_ BitVec 64))
(declare-fun temp148_10 () (_ BitVec 64))
(declare-fun temp148_11 () (_ BitVec 64))
(declare-fun temp148_12 () (_ BitVec 64))
(declare-fun temp148_13 () (_ BitVec 64))
(declare-fun temp148_14 () (_ BitVec 64))
(declare-fun temp148_15 () (_ BitVec 64))
(declare-fun temp148_16 () (_ BitVec 64))
(declare-fun temp148_17 () (_ BitVec 64))
(declare-fun temp148_18 () (_ BitVec 64))
(declare-fun temp148_19 () (_ BitVec 64))
(declare-fun temp148_20 () (_ BitVec 64))
(declare-fun temp148_21 () (_ BitVec 64))
(declare-fun temp148_22 () (_ BitVec 64))
(declare-fun temp148_23 () (_ BitVec 64))
(declare-fun temp148_24 () (_ BitVec 64))
(declare-fun temp148_25 () (_ BitVec 64))
(declare-fun temp148_26 () (_ BitVec 64))
(declare-fun temp148_27 () (_ BitVec 64))
(declare-fun temp148_28 () (_ BitVec 64))
(declare-fun temp148_29 () (_ BitVec 64))
(declare-fun temp148_30 () (_ BitVec 64))
(declare-fun temp148_31 () (_ BitVec 64))
(declare-fun temp148_32 () (_ BitVec 64))
(declare-fun temp148_33 () (_ BitVec 64))
(declare-fun temp148_34 () (_ BitVec 64))
(declare-fun temp148_35 () (_ BitVec 64))
(declare-fun temp148_36 () (_ BitVec 64))
(declare-fun temp148_37 () (_ BitVec 64))
(declare-fun temp148_38 () (_ BitVec 64))
(declare-fun temp148_39 () (_ BitVec 64))
(declare-fun temp148_40 () (_ BitVec 64))
(declare-fun temp148_41 () (_ BitVec 64))
(declare-fun temp148_42 () (_ BitVec 64))
(declare-fun temp148_43 () (_ BitVec 64))
(declare-fun temp148_44 () (_ BitVec 64))
(declare-fun temp148_45 () (_ BitVec 64))
(declare-fun temp148_46 () (_ BitVec 64))
(declare-fun temp148_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp148_48 () (_ BitVec 64))
(declare-fun temp148_49 () (_ BitVec 64))
(declare-fun temp148_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp148_51 () (_ BitVec 64))
(declare-fun temp148_52 () (_ BitVec 64))
(declare-fun temp148_53 () (_ BitVec 64))
(declare-fun temp148_54 () (_ BitVec 64))
(declare-fun temp148_55 () (_ BitVec 64))
(declare-fun temp148_56 () (_ BitVec 64))
(declare-fun temp148_57 () (_ BitVec 64))
(declare-fun temp148_58 () (_ BitVec 64))
(declare-fun temp148_59 () (_ BitVec 64))
(declare-fun temp148_60 () (_ BitVec 64))
(declare-fun temp148_61 () (_ BitVec 64))
(declare-fun temp148_62 () (_ BitVec 64))
(declare-fun temp148_63 () (_ BitVec 64))
(declare-fun temp148_64 () (_ BitVec 64))
(declare-fun temp148_65 () (_ BitVec 64))
(declare-fun temp148_66 () (_ BitVec 64))
(declare-fun temp148_67 () (_ BitVec 64))
(declare-fun temp148_68 () (_ BitVec 64))
(declare-fun temp148_69 () (_ BitVec 64))
(declare-fun temp148_70 () (_ BitVec 64))
(declare-fun temp148_71 () (_ BitVec 64))
(declare-fun temp148_72 () (_ BitVec 64))
(declare-fun temp148_73 () (_ BitVec 64))
(declare-fun temp148_74 () (_ BitVec 64))
(declare-fun temp148_75 () (_ BitVec 64))
(declare-fun temp148_76 () (_ BitVec 64))
(declare-fun temp148_77 () (_ BitVec 64))
(declare-fun temp148_78 () (_ BitVec 64))
(declare-fun temp148_79 () (_ BitVec 64))
(declare-fun temp148_80 () (_ BitVec 64))
(declare-fun temp148_81 () (_ BitVec 64))
(declare-fun temp148_82 () (_ BitVec 64))
(declare-fun temp148_83 () (_ BitVec 64))
(declare-fun temp148_84 () (_ BitVec 64))
(declare-fun temp148_85 () (_ BitVec 64))
(declare-fun temp148_86 () (_ BitVec 64))
(declare-fun temp148_87 () (_ BitVec 64))
(declare-fun temp148_88 () (_ BitVec 64))
(declare-fun temp148_89 () (_ BitVec 64))
(declare-fun temp148_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp148_91 () (_ BitVec 64))
(declare-fun temp148_92 () (_ BitVec 64))
(declare-fun temp148_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp148_94 () (_ BitVec 64))
(declare-fun temp148_95 () (_ BitVec 64))
(declare-fun temp148_96 () (_ BitVec 64))
(declare-fun temp148_97 () (_ BitVec 64))
(declare-fun temp148_98 () (_ BitVec 64))
(declare-fun temp148_99 () (_ BitVec 64))
(declare-fun temp148_100 () (_ BitVec 64))
(declare-fun temp148_101 () (_ BitVec 64))
(declare-fun temp148_102 () (_ BitVec 64))
(declare-fun temp148_103 () (_ BitVec 64))
(declare-fun temp148_104 () (_ BitVec 64))
(declare-fun temp148_105 () (_ BitVec 64))
(declare-fun temp148_106 () (_ BitVec 64))
(declare-fun temp148_107 () (_ BitVec 64))
(declare-fun temp148_108 () (_ BitVec 64))
(declare-fun temp148_109 () (_ BitVec 64))
(declare-fun temp148_110 () (_ BitVec 64))
(declare-fun temp148_111 () (_ BitVec 64))
(declare-fun temp148_112 () (_ BitVec 64))
(declare-fun temp148_113 () (_ BitVec 64))
(declare-fun temp148_114 () (_ BitVec 64))
(declare-fun temp148_115 () (_ BitVec 64))
(declare-fun temp148_116 () (_ BitVec 64))
(declare-fun temp148_117 () (_ BitVec 64))
(declare-fun temp148_118 () (_ BitVec 64))
(declare-fun temp148_119 () (_ BitVec 64))
(declare-fun temp148_120 () (_ BitVec 64))
(declare-fun temp148_121 () (_ BitVec 64))
(declare-fun temp148_122 () (_ BitVec 64))
(declare-fun temp148_123 () (_ BitVec 64))
(declare-fun temp148_124 () (_ BitVec 64))
(declare-fun temp148_125 () (_ BitVec 64))
(declare-fun temp148_126 () (_ BitVec 64))
(declare-fun temp148_127 () (_ BitVec 64))
(declare-fun temp148_128 () (_ BitVec 64))
(declare-fun temp148_129 () (_ BitVec 64))
(declare-fun temp148_130 () (_ BitVec 64))
(declare-fun temp148_131 () (_ BitVec 64))
(declare-fun temp148_132 () (_ BitVec 64))
(declare-fun temp148_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp148_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp148_135 () (_ BitVec 64))
(declare-fun temp148_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp148_137 () (_ BitVec 64))
(declare-fun temp148_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp148_139 () (_ BitVec 64))
(declare-fun temp148_140 () (_ BitVec 64))
(declare-fun temp148_141 () (_ BitVec 64))
(declare-fun temp148_142 () (_ BitVec 64))
(declare-fun temp148_143 () (_ BitVec 64))
(declare-fun temp148_144 () (_ BitVec 64))
(declare-fun temp148_145 () (_ BitVec 64))
(declare-fun temp148_146 () (_ BitVec 64))
(declare-fun temp148_147 () (_ BitVec 64))
(declare-fun temp148_148 () (_ BitVec 64))
(declare-fun temp148_149 () (_ BitVec 64))
(declare-fun temp148_150 () (_ BitVec 64))
(declare-fun temp148_151 () (_ BitVec 64))
(declare-fun temp148_152 () (_ BitVec 64))
(declare-fun temp148_153 () (_ BitVec 64))
(declare-fun temp148_154 () (_ BitVec 64))
(declare-fun temp148_156 () (_ BitVec 64))
(declare-fun temp148_157 () (_ BitVec 64))
(declare-fun temp148_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp148_158 () (_ BitVec 64))
(declare-fun temp148_159 () (_ BitVec 64))
(declare-fun temp148_161 () (_ BitVec 64))
(declare-fun temp148_162 () (_ BitVec 64))
(declare-fun temp148_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp148_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp148_164 () (_ BitVec 64))
(declare-fun temp148_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp148_166 () (_ BitVec 64))
(declare-fun temp148_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp148_168 () (_ BitVec 64))
(declare-fun temp148_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp148_170 () (_ BitVec 64))
(declare-fun temp148_171 () (_ BitVec 64))
(declare-fun temp148_172 () (_ BitVec 64))
(declare-fun temp148_173 () (_ BitVec 64))
(declare-fun temp148_174 () (_ BitVec 64))
(declare-fun temp148_175 () (_ BitVec 64))
(declare-fun temp148_176 () (_ BitVec 64))
(declare-fun temp148_177 () (_ BitVec 64))
(declare-fun temp148_178 () (_ BitVec 64))
(declare-fun temp148_179 () (_ BitVec 64))
(declare-fun temp148_180 () (_ BitVec 64))
(declare-fun temp148_181 () (_ BitVec 64))
(declare-fun temp148_182 () (_ BitVec 64))
(declare-fun temp148_183 () (_ BitVec 64))
(declare-fun temp148_184 () (_ BitVec 64))
(declare-fun temp148_185 () (_ BitVec 64))
(declare-fun temp148_186 () (_ BitVec 64))
(declare-fun temp148_187 () (_ BitVec 64))
(declare-fun temp148_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp148_189 () (_ BitVec 64))
(declare-fun temp148_191 () (_ BitVec 64))
(declare-fun temp148_192 () (_ BitVec 64))
(declare-fun temp148_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp148_193 () (_ BitVec 64))
(declare-fun temp148_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp148_195 () (_ BitVec 64))
(declare-fun temp148_196 () (_ BitVec 64))
(declare-fun temp148_197 () (_ BitVec 64))
(declare-fun temp148_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp148_199 () (_ BitVec 64))
(declare-fun temp148_200 () (_ BitVec 64))
(declare-fun temp148_201 () (_ BitVec 64))
(declare-fun temp148_202 () (_ BitVec 64))
(declare-fun temp148_203 () (_ BitVec 64))
(declare-fun temp148_204 () (_ BitVec 64))
(declare-fun temp148_205 () (_ BitVec 64))
(declare-fun temp148_206 () (_ BitVec 64))
(declare-fun temp148_207 () (_ BitVec 64))
(declare-fun temp148_208 () (_ BitVec 64))
(declare-fun temp148_209 () (_ BitVec 64))
(declare-fun temp148_210 () (_ BitVec 64))
(declare-fun temp148_211 () (_ BitVec 64))
(declare-fun temp148_212 () (_ BitVec 64))
(declare-fun temp148_213 () (_ BitVec 64))
(declare-fun temp148_214 () (_ BitVec 64))
(declare-fun temp148_215 () (_ BitVec 64))
(declare-fun temp148_216 () (_ BitVec 64))
(declare-fun temp148_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp148_218 () (_ BitVec 64))
(declare-fun temp148_220 () (_ BitVec 64))
(declare-fun temp148_221 () (_ BitVec 64))
(declare-fun temp148_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp148_222 () (_ BitVec 64))
(declare-fun temp148_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp148_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp148_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp148_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp148_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp148_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp148_229 () (_ BitVec 64))
(declare-fun temp148_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp148_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp148_232 () (_ BitVec 64))
(declare-fun temp148_233 () (_ BitVec 64))
(declare-fun temp148_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp148_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp148_236 () (_ BitVec 64))
(declare-fun temp148_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp148_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp148_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp148_241 () (_ BitVec 64))
(declare-fun temp148_240 () (_ BitVec 64))
(declare-fun temp148_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp148_243 () (_ BitVec 64))
(declare-fun temp148_244 () (_ BitVec 64))
(declare-fun temp148_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp148_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp148_247 () (_ BitVec 64))
(declare-fun temp148_249 () (_ BitVec 64))
(declare-fun temp148_248 () (_ BitVec 64))
(declare-fun temp148_250 () (_ BitVec 64))
(assert (= temp148_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp148_1)))
(assert (= temp148_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp148_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_3 #x0000000000000000))
(assert (= var79869 temp148_3))
(assert (= temp148_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp148_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_5 #x0000000000000000))
(assert (= var79914 temp148_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp148_6 #x0000000000000000))
(assert (= temp148_7 temp148_6))
(assert (= temp148_8 (select ARGNAME_padding_NAMEEND_VAL temp148_7)))
(assert (= temp148_9 #x0000000000000001))
(assert (= temp148_10 temp148_9))
(assert (= temp148_11 (select ARGNAME_padding_NAMEEND_VAL temp148_10)))
(assert (= temp148_12 #x0000000000000002))
(assert (= temp148_13 temp148_12))
(assert (= temp148_14 (select ARGNAME_padding_NAMEEND_VAL temp148_13)))
(assert (= temp148_15 #x0000000000000003))
(assert (= temp148_16 temp148_15))
(assert (= temp148_17 (select ARGNAME_padding_NAMEEND_VAL temp148_16)))
(assert (= temp148_18 #x0000000000000004))
(assert (= temp148_19 temp148_18))
(assert (= temp148_20 (select ARGNAME_padding_NAMEEND_VAL temp148_19)))
(assert (= temp148_21 #x0000000000000005))
(assert (= temp148_22 temp148_21))
(assert (= temp148_23 (select ARGNAME_padding_NAMEEND_VAL temp148_22)))
(assert (= temp148_24 #x0000000000000000))
(assert (= temp148_25 #x0000000000000000))
(assert (= temp148_26 temp148_25))
(assert (= temp148_27 (select ARGNAME_padding_NAMEEND_VAL temp148_26)))
(assert (= temp148_28 #x0000000000000000))
(assert (= temp148_29 #x0000000000000001))
(assert (= temp148_30 temp148_29))
(assert (= temp148_31 (select ARGNAME_padding_NAMEEND_VAL temp148_30)))
(assert (= temp148_32 #x0000000000000000))
(assert (= temp148_33 #x0000000000000002))
(assert (= temp148_34 temp148_33))
(assert (= temp148_35 (select ARGNAME_padding_NAMEEND_VAL temp148_34)))
(assert (= temp148_36 #x0000000000000000))
(assert (= temp148_37 #x0000000000000003))
(assert (= temp148_38 temp148_37))
(assert (= temp148_39 (select ARGNAME_padding_NAMEEND_VAL temp148_38)))
(assert (= temp148_40 #x0000000000000000))
(assert (= temp148_41 #x0000000000000004))
(assert (= temp148_42 temp148_41))
(assert (= temp148_43 (select ARGNAME_padding_NAMEEND_VAL temp148_42)))
(assert (= temp148_44 #x0000000000000000))
(assert (= temp148_45 #x0000000000000005))
(assert (= temp148_46 temp148_45))
(assert (= temp148_47 (select ARGNAME_padding_NAMEEND_VAL temp148_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp148_27 temp148_24)
             (bvslt temp148_31 temp148_28)
             (bvslt temp148_35 temp148_32)
             (bvslt temp148_39 temp148_36)
             (bvslt temp148_43 temp148_40)
             (bvslt temp148_47 temp148_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_48 #x0000000000000000))
(assert (= var1322786 temp148_48))
(assert (= temp148_49 #x0000000000000000))
(assert (= temp148_50 temp148_49))
(assert (= temp148_51 (select ARGNAME_output_padding_NAMEEND_VAL temp148_50)))
(assert (= temp148_52 #x0000000000000001))
(assert (= temp148_53 temp148_52))
(assert (= temp148_54 (select ARGNAME_output_padding_NAMEEND_VAL temp148_53)))
(assert (= temp148_55 #x0000000000000002))
(assert (= temp148_56 temp148_55))
(assert (= temp148_57 (select ARGNAME_output_padding_NAMEEND_VAL temp148_56)))
(assert (= temp148_58 #x0000000000000003))
(assert (= temp148_59 temp148_58))
(assert (= temp148_60 (select ARGNAME_output_padding_NAMEEND_VAL temp148_59)))
(assert (= temp148_61 #x0000000000000004))
(assert (= temp148_62 temp148_61))
(assert (= temp148_63 (select ARGNAME_output_padding_NAMEEND_VAL temp148_62)))
(assert (= temp148_64 #x0000000000000005))
(assert (= temp148_65 temp148_64))
(assert (= temp148_66 (select ARGNAME_output_padding_NAMEEND_VAL temp148_65)))
(assert (= temp148_67 #x0000000000000000))
(assert (= temp148_68 #x0000000000000000))
(assert (= temp148_69 temp148_68))
(assert (= temp148_70 (select ARGNAME_output_padding_NAMEEND_VAL temp148_69)))
(assert (= temp148_71 #x0000000000000000))
(assert (= temp148_72 #x0000000000000001))
(assert (= temp148_73 temp148_72))
(assert (= temp148_74 (select ARGNAME_output_padding_NAMEEND_VAL temp148_73)))
(assert (= temp148_75 #x0000000000000000))
(assert (= temp148_76 #x0000000000000002))
(assert (= temp148_77 temp148_76))
(assert (= temp148_78 (select ARGNAME_output_padding_NAMEEND_VAL temp148_77)))
(assert (= temp148_79 #x0000000000000000))
(assert (= temp148_80 #x0000000000000003))
(assert (= temp148_81 temp148_80))
(assert (= temp148_82 (select ARGNAME_output_padding_NAMEEND_VAL temp148_81)))
(assert (= temp148_83 #x0000000000000000))
(assert (= temp148_84 #x0000000000000004))
(assert (= temp148_85 temp148_84))
(assert (= temp148_86 (select ARGNAME_output_padding_NAMEEND_VAL temp148_85)))
(assert (= temp148_87 #x0000000000000000))
(assert (= temp148_88 #x0000000000000005))
(assert (= temp148_89 temp148_88))
(assert (= temp148_90 (select ARGNAME_output_padding_NAMEEND_VAL temp148_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp148_70 temp148_67)
             (bvslt temp148_74 temp148_71)
             (bvslt temp148_78 temp148_75)
             (bvslt temp148_82 temp148_79)
             (bvslt temp148_86 temp148_83)
             (bvslt temp148_90 temp148_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_91 #x0000000000000000))
(assert (= var1322797 temp148_91))
(assert (= temp148_92 #x0000000000000000))
(assert (= temp148_93 temp148_92))
(assert (= temp148_94 (select ARGNAME_stride_NAMEEND_VAL temp148_93)))
(assert (= temp148_95 #x0000000000000001))
(assert (= temp148_96 temp148_95))
(assert (= temp148_97 (select ARGNAME_stride_NAMEEND_VAL temp148_96)))
(assert (= temp148_98 #x0000000000000002))
(assert (= temp148_99 temp148_98))
(assert (= temp148_100 (select ARGNAME_stride_NAMEEND_VAL temp148_99)))
(assert (= temp148_101 #x0000000000000003))
(assert (= temp148_102 temp148_101))
(assert (= temp148_103 (select ARGNAME_stride_NAMEEND_VAL temp148_102)))
(assert (= temp148_104 #x0000000000000004))
(assert (= temp148_105 temp148_104))
(assert (= temp148_106 (select ARGNAME_stride_NAMEEND_VAL temp148_105)))
(assert (= temp148_107 #x0000000000000005))
(assert (= temp148_108 temp148_107))
(assert (= temp148_109 (select ARGNAME_stride_NAMEEND_VAL temp148_108)))
(assert (= temp148_110 #x0000000000000000))
(assert (= temp148_111 #x0000000000000000))
(assert (= temp148_112 temp148_111))
(assert (= temp148_113 (select ARGNAME_stride_NAMEEND_VAL temp148_112)))
(assert (= temp148_114 #x0000000000000000))
(assert (= temp148_115 #x0000000000000001))
(assert (= temp148_116 temp148_115))
(assert (= temp148_117 (select ARGNAME_stride_NAMEEND_VAL temp148_116)))
(assert (= temp148_118 #x0000000000000000))
(assert (= temp148_119 #x0000000000000002))
(assert (= temp148_120 temp148_119))
(assert (= temp148_121 (select ARGNAME_stride_NAMEEND_VAL temp148_120)))
(assert (= temp148_122 #x0000000000000000))
(assert (= temp148_123 #x0000000000000003))
(assert (= temp148_124 temp148_123))
(assert (= temp148_125 (select ARGNAME_stride_NAMEEND_VAL temp148_124)))
(assert (= temp148_126 #x0000000000000000))
(assert (= temp148_127 #x0000000000000004))
(assert (= temp148_128 temp148_127))
(assert (= temp148_129 (select ARGNAME_stride_NAMEEND_VAL temp148_128)))
(assert (= temp148_130 #x0000000000000000))
(assert (= temp148_131 #x0000000000000005))
(assert (= temp148_132 temp148_131))
(assert (= temp148_133 (select ARGNAME_stride_NAMEEND_VAL temp148_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp148_113 temp148_110)
             (bvsle temp148_117 temp148_114)
             (bvsle temp148_121 temp148_118)
             (bvsle temp148_125 temp148_122)
             (bvsle temp148_129 temp148_126)
             (bvsle temp148_133 temp148_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_134 #x0000000000000000))
(assert (= var1322807 temp148_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_135 #x0000000000000001))
(assert (= var1322819 temp148_135))
(assert (= temp148_136 #x0000000000000000))
(assert (= var1310898 temp148_136))
(assert (= temp148_137 #x0000000000000000))
(assert (= temp148_138 temp148_137))
(assert (= temp148_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_138)))
(assert (= temp148_140 #x0000000000000001))
(assert (= temp148_141 temp148_140))
(assert (= temp148_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_141)))
(assert (= temp148_143 #x0000000000000002))
(assert (= temp148_144 temp148_143))
(assert (= temp148_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_144)))
(assert (= temp148_146 #x0000000000000003))
(assert (= temp148_147 temp148_146))
(assert (= temp148_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_147)))
(assert (= temp148_149 #x0000000000000004))
(assert (= temp148_150 temp148_149))
(assert (= temp148_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_150)))
(assert (= temp148_152 #x0000000000000005))
(assert (= temp148_153 temp148_152))
(assert (= temp148_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_153)))
(assert (= temp148_156 var1310898))
(assert (= temp148_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_156)))
(assert (= temp148_155 temp148_157))
(assert (= var1322852
   (ite (bvslt temp148_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_158 #x0000000000000000))
(assert (= var1322852 temp148_158))
(assert (= temp148_159 #x0000000000000000))
(assert (= var1310898 temp148_159))
(assert (= temp148_161 var1310898))
(assert (= temp148_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_161)))
(assert (= temp148_160 temp148_162))
(assert (= var1322874 (bvsmod temp148_160 ARGNAME_groups_NAMEEND)))
(assert (= temp148_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp148_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp148_164 #x0000000000000001))
(assert (= var1322875 temp148_164))
(assert (= temp148_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp148_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_166 #x0000000000000001))
(assert (= var1322895 temp148_166))
(assert (= temp148_167 #x0000000000000001))
(assert (= var1311786 temp148_167))
(assert (= temp148_168 #x0000000000000000))
(assert (= temp148_169 temp148_168))
(assert (= temp148_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_169)))
(assert (= temp148_171 #x0000000000000001))
(assert (= temp148_172 temp148_171))
(assert (= temp148_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_172)))
(assert (= temp148_174 #x0000000000000002))
(assert (= temp148_175 temp148_174))
(assert (= temp148_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_175)))
(assert (= temp148_177 #x0000000000000003))
(assert (= temp148_178 temp148_177))
(assert (= temp148_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_178)))
(assert (= temp148_180 #x0000000000000004))
(assert (= temp148_181 temp148_180))
(assert (= temp148_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_181)))
(assert (= temp148_183 #x0000000000000005))
(assert (= temp148_184 temp148_183))
(assert (= temp148_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_184)))
(assert (= temp148_186 #x0000000000000000))
(assert (= temp148_187
   (ite (bvslt var1311786 temp148_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp148_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_187)))
(assert (= var1322903 temp148_188))
(assert (bvslt (ite (bvslt var1311786 temp148_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp148_189 #x0000000000000001))
(assert (= var1311786 temp148_189))
(assert (= temp148_191 var1311786))
(assert (= temp148_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_191)))
(assert (= temp148_190 temp148_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp148_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp148_193 #x0000000000000001))
(assert (= var1322908 temp148_193))
(assert (= temp148_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp148_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_195 #x0000000000000001))
(assert (= var1322975 temp148_195))
(assert (= temp148_196 #x0000000000000000))
(assert (= var1310898 temp148_196))
(assert (= temp148_197 #x0000000000000000))
(assert (= temp148_198 temp148_197))
(assert (= temp148_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp148_198)))
(assert (= temp148_200 #x0000000000000001))
(assert (= temp148_201 temp148_200))
(assert (= temp148_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp148_201)))
(assert (= temp148_203 #x0000000000000002))
(assert (= temp148_204 temp148_203))
(assert (= temp148_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp148_204)))
(assert (= temp148_206 #x0000000000000003))
(assert (= temp148_207 temp148_206))
(assert (= temp148_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp148_207)))
(assert (= temp148_209 #x0000000000000004))
(assert (= temp148_210 temp148_209))
(assert (= temp148_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp148_210)))
(assert (= temp148_212 #x0000000000000005))
(assert (= temp148_213 temp148_212))
(assert (= temp148_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp148_213)))
(assert (= temp148_215 #x0000000000000000))
(assert (= temp148_216
   (ite (bvslt var1310898 temp148_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp148_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp148_216)))
(assert (= var1322977 temp148_217))
(assert (bvslt (ite (bvslt var1310898 temp148_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp148_218 #x0000000000000000))
(assert (= var1310898 temp148_218))
(assert (= temp148_220 var1310898))
(assert (= temp148_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp148_220)))
(assert (= temp148_219 temp148_221))
(assert (= var1322980
   (ite (= var1322977 temp148_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp148_222 #x0000000000000001))
(assert (= var1322980 temp148_222))
(assert (= temp148_223 #x0000000000000002))
(assert (= var1848169 temp148_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp148_225 #x0000000000000001))
(assert (= var1323065 temp148_225))
(assert (= temp148_226 #x0000000000000001))
(assert (= var3486735 temp148_226))
(assert (= temp148_227 #x0000000000000001))
(assert (= var3814415 temp148_227))
(assert (= temp148_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp148_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_229 #x0000000000000001))
(assert (= var79986 temp148_229))
(assert (= temp148_230 #x0000000000000001))
(assert (= var80116 temp148_230))
(assert (= var4796905 var80116))
(assert (= temp148_231 #x0000000000000000))
(assert (= var4784306 temp148_231))
(assert (= temp148_232 #x0000000000000000))
(assert (= temp148_233
   (ite (bvslt var4784306 temp148_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp148_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_233)))
(assert (= var4796924 temp148_234))
(assert (bvslt (ite (bvslt var4784306 temp148_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp148_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp148_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp148_236 #x0000000000000001))
(assert (= var4796925 temp148_236))
(assert (= temp148_237 #x0000000000000000))
(assert (= var4996927 temp148_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp148_238 #x0000000000000002))
(assert (= var5125763 temp148_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_239 #x0000000000000000))
(assert (= var5191324 temp148_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp148_241 #xffffffffffffffff))
(assert (= temp148_240 temp148_241))
(assert (= temp148_242 #x0000000000000001))
(assert (= var66602 temp148_242))
(assert (= temp148_243 #x0000000000000000))
(assert (= temp148_244
   (ite (bvslt var66602 temp148_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp148_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_244)))
(assert (= var80523 temp148_245))
(assert (bvslt (ite (bvslt var66602 temp148_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp148_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp148_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp148_247 #x0000000000000001))
(assert (= var80524 temp148_247))
(assert (= temp148_249 #xffffffffffffffff))
(assert (= temp148_248 temp148_249))
(assert (= temp148_250 #x0000000000000001))
(assert (= var79986 temp148_250))
(model-add temp148_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp148_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp148_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






