(declare-fun temp50_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp50_2 () (_ BitVec 64))
(declare-fun temp50_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp50_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp50_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp50_6 () (_ BitVec 64))
(declare-fun temp50_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_8 () (_ BitVec 64))
(declare-fun temp50_9 () (_ BitVec 64))
(declare-fun temp50_10 () (_ BitVec 64))
(declare-fun temp50_11 () (_ BitVec 64))
(declare-fun temp50_12 () (_ BitVec 64))
(declare-fun temp50_13 () (_ BitVec 64))
(declare-fun temp50_14 () (_ BitVec 64))
(declare-fun temp50_15 () (_ BitVec 64))
(declare-fun temp50_16 () (_ BitVec 64))
(declare-fun temp50_17 () (_ BitVec 64))
(declare-fun temp50_18 () (_ BitVec 64))
(declare-fun temp50_19 () (_ BitVec 64))
(declare-fun temp50_20 () (_ BitVec 64))
(declare-fun temp50_21 () (_ BitVec 64))
(declare-fun temp50_22 () (_ BitVec 64))
(declare-fun temp50_23 () (_ BitVec 64))
(declare-fun temp50_24 () (_ BitVec 64))
(declare-fun temp50_25 () (_ BitVec 64))
(declare-fun temp50_26 () (_ BitVec 64))
(declare-fun temp50_27 () (_ BitVec 64))
(declare-fun temp50_28 () (_ BitVec 64))
(declare-fun temp50_29 () (_ BitVec 64))
(declare-fun temp50_30 () (_ BitVec 64))
(declare-fun temp50_31 () (_ BitVec 64))
(declare-fun temp50_32 () (_ BitVec 64))
(declare-fun temp50_33 () (_ BitVec 64))
(declare-fun temp50_34 () (_ BitVec 64))
(declare-fun temp50_35 () (_ BitVec 64))
(declare-fun temp50_36 () (_ BitVec 64))
(declare-fun temp50_37 () (_ BitVec 64))
(declare-fun temp50_38 () (_ BitVec 64))
(declare-fun temp50_39 () (_ BitVec 64))
(declare-fun temp50_40 () (_ BitVec 64))
(declare-fun temp50_41 () (_ BitVec 64))
(declare-fun temp50_42 () (_ BitVec 64))
(declare-fun temp50_43 () (_ BitVec 64))
(declare-fun temp50_44 () (_ BitVec 64))
(declare-fun temp50_45 () (_ BitVec 64))
(declare-fun temp50_46 () (_ BitVec 64))
(declare-fun temp50_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp50_48 () (_ BitVec 64))
(declare-fun temp50_49 () (_ BitVec 64))
(declare-fun temp50_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_51 () (_ BitVec 64))
(declare-fun temp50_52 () (_ BitVec 64))
(declare-fun temp50_53 () (_ BitVec 64))
(declare-fun temp50_54 () (_ BitVec 64))
(declare-fun temp50_55 () (_ BitVec 64))
(declare-fun temp50_56 () (_ BitVec 64))
(declare-fun temp50_57 () (_ BitVec 64))
(declare-fun temp50_58 () (_ BitVec 64))
(declare-fun temp50_59 () (_ BitVec 64))
(declare-fun temp50_60 () (_ BitVec 64))
(declare-fun temp50_61 () (_ BitVec 64))
(declare-fun temp50_62 () (_ BitVec 64))
(declare-fun temp50_63 () (_ BitVec 64))
(declare-fun temp50_64 () (_ BitVec 64))
(declare-fun temp50_65 () (_ BitVec 64))
(declare-fun temp50_66 () (_ BitVec 64))
(declare-fun temp50_67 () (_ BitVec 64))
(declare-fun temp50_68 () (_ BitVec 64))
(declare-fun temp50_69 () (_ BitVec 64))
(declare-fun temp50_70 () (_ BitVec 64))
(declare-fun temp50_71 () (_ BitVec 64))
(declare-fun temp50_72 () (_ BitVec 64))
(declare-fun temp50_73 () (_ BitVec 64))
(declare-fun temp50_74 () (_ BitVec 64))
(declare-fun temp50_75 () (_ BitVec 64))
(declare-fun temp50_76 () (_ BitVec 64))
(declare-fun temp50_77 () (_ BitVec 64))
(declare-fun temp50_78 () (_ BitVec 64))
(declare-fun temp50_79 () (_ BitVec 64))
(declare-fun temp50_80 () (_ BitVec 64))
(declare-fun temp50_81 () (_ BitVec 64))
(declare-fun temp50_82 () (_ BitVec 64))
(declare-fun temp50_83 () (_ BitVec 64))
(declare-fun temp50_84 () (_ BitVec 64))
(declare-fun temp50_85 () (_ BitVec 64))
(declare-fun temp50_86 () (_ BitVec 64))
(declare-fun temp50_87 () (_ BitVec 64))
(declare-fun temp50_88 () (_ BitVec 64))
(declare-fun temp50_89 () (_ BitVec 64))
(declare-fun temp50_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp50_91 () (_ BitVec 64))
(declare-fun temp50_92 () (_ BitVec 64))
(declare-fun temp50_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_94 () (_ BitVec 64))
(declare-fun temp50_95 () (_ BitVec 64))
(declare-fun temp50_96 () (_ BitVec 64))
(declare-fun temp50_97 () (_ BitVec 64))
(declare-fun temp50_98 () (_ BitVec 64))
(declare-fun temp50_99 () (_ BitVec 64))
(declare-fun temp50_100 () (_ BitVec 64))
(declare-fun temp50_101 () (_ BitVec 64))
(declare-fun temp50_102 () (_ BitVec 64))
(declare-fun temp50_103 () (_ BitVec 64))
(declare-fun temp50_104 () (_ BitVec 64))
(declare-fun temp50_105 () (_ BitVec 64))
(declare-fun temp50_106 () (_ BitVec 64))
(declare-fun temp50_107 () (_ BitVec 64))
(declare-fun temp50_108 () (_ BitVec 64))
(declare-fun temp50_109 () (_ BitVec 64))
(declare-fun temp50_110 () (_ BitVec 64))
(declare-fun temp50_111 () (_ BitVec 64))
(declare-fun temp50_112 () (_ BitVec 64))
(declare-fun temp50_113 () (_ BitVec 64))
(declare-fun temp50_114 () (_ BitVec 64))
(declare-fun temp50_115 () (_ BitVec 64))
(declare-fun temp50_116 () (_ BitVec 64))
(declare-fun temp50_117 () (_ BitVec 64))
(declare-fun temp50_118 () (_ BitVec 64))
(declare-fun temp50_119 () (_ BitVec 64))
(declare-fun temp50_120 () (_ BitVec 64))
(declare-fun temp50_121 () (_ BitVec 64))
(declare-fun temp50_122 () (_ BitVec 64))
(declare-fun temp50_123 () (_ BitVec 64))
(declare-fun temp50_124 () (_ BitVec 64))
(declare-fun temp50_125 () (_ BitVec 64))
(declare-fun temp50_126 () (_ BitVec 64))
(declare-fun temp50_127 () (_ BitVec 64))
(declare-fun temp50_128 () (_ BitVec 64))
(declare-fun temp50_129 () (_ BitVec 64))
(declare-fun temp50_130 () (_ BitVec 64))
(declare-fun temp50_131 () (_ BitVec 64))
(declare-fun temp50_132 () (_ BitVec 64))
(declare-fun temp50_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp50_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp50_135 () (_ BitVec 64))
(declare-fun temp50_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp50_137 () (_ BitVec 64))
(declare-fun temp50_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_139 () (_ BitVec 64))
(declare-fun temp50_140 () (_ BitVec 64))
(declare-fun temp50_141 () (_ BitVec 64))
(declare-fun temp50_142 () (_ BitVec 64))
(declare-fun temp50_143 () (_ BitVec 64))
(declare-fun temp50_144 () (_ BitVec 64))
(declare-fun temp50_145 () (_ BitVec 64))
(declare-fun temp50_146 () (_ BitVec 64))
(declare-fun temp50_147 () (_ BitVec 64))
(declare-fun temp50_148 () (_ BitVec 64))
(declare-fun temp50_149 () (_ BitVec 64))
(declare-fun temp50_150 () (_ BitVec 64))
(declare-fun temp50_151 () (_ BitVec 64))
(declare-fun temp50_152 () (_ BitVec 64))
(declare-fun temp50_153 () (_ BitVec 64))
(declare-fun temp50_154 () (_ BitVec 64))
(declare-fun temp50_156 () (_ BitVec 64))
(declare-fun temp50_157 () (_ BitVec 64))
(declare-fun temp50_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp50_158 () (_ BitVec 64))
(declare-fun temp50_159 () (_ BitVec 64))
(declare-fun temp50_161 () (_ BitVec 64))
(declare-fun temp50_162 () (_ BitVec 64))
(declare-fun temp50_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp50_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp50_164 () (_ BitVec 64))
(declare-fun temp50_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp50_166 () (_ BitVec 64))
(declare-fun temp50_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp50_168 () (_ BitVec 64))
(declare-fun temp50_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_170 () (_ BitVec 64))
(declare-fun temp50_171 () (_ BitVec 64))
(declare-fun temp50_172 () (_ BitVec 64))
(declare-fun temp50_173 () (_ BitVec 64))
(declare-fun temp50_174 () (_ BitVec 64))
(declare-fun temp50_175 () (_ BitVec 64))
(declare-fun temp50_176 () (_ BitVec 64))
(declare-fun temp50_177 () (_ BitVec 64))
(declare-fun temp50_178 () (_ BitVec 64))
(declare-fun temp50_179 () (_ BitVec 64))
(declare-fun temp50_180 () (_ BitVec 64))
(declare-fun temp50_181 () (_ BitVec 64))
(declare-fun temp50_182 () (_ BitVec 64))
(declare-fun temp50_183 () (_ BitVec 64))
(declare-fun temp50_184 () (_ BitVec 64))
(declare-fun temp50_185 () (_ BitVec 64))
(declare-fun temp50_186 () (_ BitVec 64))
(declare-fun temp50_187 () (_ BitVec 64))
(declare-fun temp50_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp50_189 () (_ BitVec 64))
(declare-fun temp50_191 () (_ BitVec 64))
(declare-fun temp50_192 () (_ BitVec 64))
(declare-fun temp50_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp50_193 () (_ BitVec 64))
(declare-fun temp50_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp50_195 () (_ BitVec 64))
(declare-fun temp50_196 () (_ BitVec 64))
(declare-fun temp50_197 () (_ BitVec 64))
(declare-fun temp50_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_199 () (_ BitVec 64))
(declare-fun temp50_200 () (_ BitVec 64))
(declare-fun temp50_201 () (_ BitVec 64))
(declare-fun temp50_202 () (_ BitVec 64))
(declare-fun temp50_203 () (_ BitVec 64))
(declare-fun temp50_204 () (_ BitVec 64))
(declare-fun temp50_205 () (_ BitVec 64))
(declare-fun temp50_206 () (_ BitVec 64))
(declare-fun temp50_207 () (_ BitVec 64))
(declare-fun temp50_208 () (_ BitVec 64))
(declare-fun temp50_209 () (_ BitVec 64))
(declare-fun temp50_210 () (_ BitVec 64))
(declare-fun temp50_211 () (_ BitVec 64))
(declare-fun temp50_212 () (_ BitVec 64))
(declare-fun temp50_213 () (_ BitVec 64))
(declare-fun temp50_214 () (_ BitVec 64))
(declare-fun temp50_215 () (_ BitVec 64))
(declare-fun temp50_216 () (_ BitVec 64))
(declare-fun temp50_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp50_218 () (_ BitVec 64))
(declare-fun temp50_220 () (_ BitVec 64))
(declare-fun temp50_221 () (_ BitVec 64))
(declare-fun temp50_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp50_222 () (_ BitVec 64))
(declare-fun temp50_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp50_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp50_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp50_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp50_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp50_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp50_229 () (_ BitVec 64))
(declare-fun temp50_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp50_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp50_232 () (_ BitVec 64))
(declare-fun temp50_233 () (_ BitVec 64))
(declare-fun temp50_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp50_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp50_236 () (_ BitVec 64))
(declare-fun temp50_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp50_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp50_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp50_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp50_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp50_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6635340 () (_ BitVec 64))
(declare-fun var6635341 () (_ BitVec 64))
(declare-fun var6635342 () (_ BitVec 64))
(declare-fun temp50_244 () (_ BitVec 64))
(declare-fun temp50_243 () (_ BitVec 64))
(declare-fun temp50_245 () (_ BitVec 64))
(declare-fun var7933418 () (_ BitVec 64))
(declare-fun temp50_247 () (_ BitVec 64))
(declare-fun temp50_246 () (_ BitVec 64))
(declare-fun temp50_248 () (_ BitVec 64))
(assert (= temp50_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp50_1)))
(assert (= temp50_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp50_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_3 #x0000000000000000))
(assert (= var79869 temp50_3))
(assert (= temp50_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp50_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_5 #x0000000000000000))
(assert (= var79914 temp50_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp50_6 #x0000000000000000))
(assert (= temp50_7 temp50_6))
(assert (= temp50_8 (select ARGNAME_padding_NAMEEND_VAL temp50_7)))
(assert (= temp50_9 #x0000000000000001))
(assert (= temp50_10 temp50_9))
(assert (= temp50_11 (select ARGNAME_padding_NAMEEND_VAL temp50_10)))
(assert (= temp50_12 #x0000000000000002))
(assert (= temp50_13 temp50_12))
(assert (= temp50_14 (select ARGNAME_padding_NAMEEND_VAL temp50_13)))
(assert (= temp50_15 #x0000000000000003))
(assert (= temp50_16 temp50_15))
(assert (= temp50_17 (select ARGNAME_padding_NAMEEND_VAL temp50_16)))
(assert (= temp50_18 #x0000000000000004))
(assert (= temp50_19 temp50_18))
(assert (= temp50_20 (select ARGNAME_padding_NAMEEND_VAL temp50_19)))
(assert (= temp50_21 #x0000000000000005))
(assert (= temp50_22 temp50_21))
(assert (= temp50_23 (select ARGNAME_padding_NAMEEND_VAL temp50_22)))
(assert (= temp50_24 #x0000000000000000))
(assert (= temp50_25 #x0000000000000000))
(assert (= temp50_26 temp50_25))
(assert (= temp50_27 (select ARGNAME_padding_NAMEEND_VAL temp50_26)))
(assert (= temp50_28 #x0000000000000000))
(assert (= temp50_29 #x0000000000000001))
(assert (= temp50_30 temp50_29))
(assert (= temp50_31 (select ARGNAME_padding_NAMEEND_VAL temp50_30)))
(assert (= temp50_32 #x0000000000000000))
(assert (= temp50_33 #x0000000000000002))
(assert (= temp50_34 temp50_33))
(assert (= temp50_35 (select ARGNAME_padding_NAMEEND_VAL temp50_34)))
(assert (= temp50_36 #x0000000000000000))
(assert (= temp50_37 #x0000000000000003))
(assert (= temp50_38 temp50_37))
(assert (= temp50_39 (select ARGNAME_padding_NAMEEND_VAL temp50_38)))
(assert (= temp50_40 #x0000000000000000))
(assert (= temp50_41 #x0000000000000004))
(assert (= temp50_42 temp50_41))
(assert (= temp50_43 (select ARGNAME_padding_NAMEEND_VAL temp50_42)))
(assert (= temp50_44 #x0000000000000000))
(assert (= temp50_45 #x0000000000000005))
(assert (= temp50_46 temp50_45))
(assert (= temp50_47 (select ARGNAME_padding_NAMEEND_VAL temp50_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp50_27 temp50_24)
             (bvslt temp50_31 temp50_28)
             (bvslt temp50_35 temp50_32)
             (bvslt temp50_39 temp50_36)
             (bvslt temp50_43 temp50_40)
             (bvslt temp50_47 temp50_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_48 #x0000000000000000))
(assert (= var1322786 temp50_48))
(assert (= temp50_49 #x0000000000000000))
(assert (= temp50_50 temp50_49))
(assert (= temp50_51 (select ARGNAME_output_padding_NAMEEND_VAL temp50_50)))
(assert (= temp50_52 #x0000000000000001))
(assert (= temp50_53 temp50_52))
(assert (= temp50_54 (select ARGNAME_output_padding_NAMEEND_VAL temp50_53)))
(assert (= temp50_55 #x0000000000000002))
(assert (= temp50_56 temp50_55))
(assert (= temp50_57 (select ARGNAME_output_padding_NAMEEND_VAL temp50_56)))
(assert (= temp50_58 #x0000000000000003))
(assert (= temp50_59 temp50_58))
(assert (= temp50_60 (select ARGNAME_output_padding_NAMEEND_VAL temp50_59)))
(assert (= temp50_61 #x0000000000000004))
(assert (= temp50_62 temp50_61))
(assert (= temp50_63 (select ARGNAME_output_padding_NAMEEND_VAL temp50_62)))
(assert (= temp50_64 #x0000000000000005))
(assert (= temp50_65 temp50_64))
(assert (= temp50_66 (select ARGNAME_output_padding_NAMEEND_VAL temp50_65)))
(assert (= temp50_67 #x0000000000000000))
(assert (= temp50_68 #x0000000000000000))
(assert (= temp50_69 temp50_68))
(assert (= temp50_70 (select ARGNAME_output_padding_NAMEEND_VAL temp50_69)))
(assert (= temp50_71 #x0000000000000000))
(assert (= temp50_72 #x0000000000000001))
(assert (= temp50_73 temp50_72))
(assert (= temp50_74 (select ARGNAME_output_padding_NAMEEND_VAL temp50_73)))
(assert (= temp50_75 #x0000000000000000))
(assert (= temp50_76 #x0000000000000002))
(assert (= temp50_77 temp50_76))
(assert (= temp50_78 (select ARGNAME_output_padding_NAMEEND_VAL temp50_77)))
(assert (= temp50_79 #x0000000000000000))
(assert (= temp50_80 #x0000000000000003))
(assert (= temp50_81 temp50_80))
(assert (= temp50_82 (select ARGNAME_output_padding_NAMEEND_VAL temp50_81)))
(assert (= temp50_83 #x0000000000000000))
(assert (= temp50_84 #x0000000000000004))
(assert (= temp50_85 temp50_84))
(assert (= temp50_86 (select ARGNAME_output_padding_NAMEEND_VAL temp50_85)))
(assert (= temp50_87 #x0000000000000000))
(assert (= temp50_88 #x0000000000000005))
(assert (= temp50_89 temp50_88))
(assert (= temp50_90 (select ARGNAME_output_padding_NAMEEND_VAL temp50_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp50_70 temp50_67)
             (bvslt temp50_74 temp50_71)
             (bvslt temp50_78 temp50_75)
             (bvslt temp50_82 temp50_79)
             (bvslt temp50_86 temp50_83)
             (bvslt temp50_90 temp50_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_91 #x0000000000000000))
(assert (= var1322797 temp50_91))
(assert (= temp50_92 #x0000000000000000))
(assert (= temp50_93 temp50_92))
(assert (= temp50_94 (select ARGNAME_stride_NAMEEND_VAL temp50_93)))
(assert (= temp50_95 #x0000000000000001))
(assert (= temp50_96 temp50_95))
(assert (= temp50_97 (select ARGNAME_stride_NAMEEND_VAL temp50_96)))
(assert (= temp50_98 #x0000000000000002))
(assert (= temp50_99 temp50_98))
(assert (= temp50_100 (select ARGNAME_stride_NAMEEND_VAL temp50_99)))
(assert (= temp50_101 #x0000000000000003))
(assert (= temp50_102 temp50_101))
(assert (= temp50_103 (select ARGNAME_stride_NAMEEND_VAL temp50_102)))
(assert (= temp50_104 #x0000000000000004))
(assert (= temp50_105 temp50_104))
(assert (= temp50_106 (select ARGNAME_stride_NAMEEND_VAL temp50_105)))
(assert (= temp50_107 #x0000000000000005))
(assert (= temp50_108 temp50_107))
(assert (= temp50_109 (select ARGNAME_stride_NAMEEND_VAL temp50_108)))
(assert (= temp50_110 #x0000000000000000))
(assert (= temp50_111 #x0000000000000000))
(assert (= temp50_112 temp50_111))
(assert (= temp50_113 (select ARGNAME_stride_NAMEEND_VAL temp50_112)))
(assert (= temp50_114 #x0000000000000000))
(assert (= temp50_115 #x0000000000000001))
(assert (= temp50_116 temp50_115))
(assert (= temp50_117 (select ARGNAME_stride_NAMEEND_VAL temp50_116)))
(assert (= temp50_118 #x0000000000000000))
(assert (= temp50_119 #x0000000000000002))
(assert (= temp50_120 temp50_119))
(assert (= temp50_121 (select ARGNAME_stride_NAMEEND_VAL temp50_120)))
(assert (= temp50_122 #x0000000000000000))
(assert (= temp50_123 #x0000000000000003))
(assert (= temp50_124 temp50_123))
(assert (= temp50_125 (select ARGNAME_stride_NAMEEND_VAL temp50_124)))
(assert (= temp50_126 #x0000000000000000))
(assert (= temp50_127 #x0000000000000004))
(assert (= temp50_128 temp50_127))
(assert (= temp50_129 (select ARGNAME_stride_NAMEEND_VAL temp50_128)))
(assert (= temp50_130 #x0000000000000000))
(assert (= temp50_131 #x0000000000000005))
(assert (= temp50_132 temp50_131))
(assert (= temp50_133 (select ARGNAME_stride_NAMEEND_VAL temp50_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp50_113 temp50_110)
             (bvsle temp50_117 temp50_114)
             (bvsle temp50_121 temp50_118)
             (bvsle temp50_125 temp50_122)
             (bvsle temp50_129 temp50_126)
             (bvsle temp50_133 temp50_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_134 #x0000000000000000))
(assert (= var1322807 temp50_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_135 #x0000000000000001))
(assert (= var1322819 temp50_135))
(assert (= temp50_136 #x0000000000000000))
(assert (= var1310898 temp50_136))
(assert (= temp50_137 #x0000000000000000))
(assert (= temp50_138 temp50_137))
(assert (= temp50_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_138)))
(assert (= temp50_140 #x0000000000000001))
(assert (= temp50_141 temp50_140))
(assert (= temp50_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_141)))
(assert (= temp50_143 #x0000000000000002))
(assert (= temp50_144 temp50_143))
(assert (= temp50_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_144)))
(assert (= temp50_146 #x0000000000000003))
(assert (= temp50_147 temp50_146))
(assert (= temp50_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_147)))
(assert (= temp50_149 #x0000000000000004))
(assert (= temp50_150 temp50_149))
(assert (= temp50_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_150)))
(assert (= temp50_152 #x0000000000000005))
(assert (= temp50_153 temp50_152))
(assert (= temp50_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_153)))
(assert (= temp50_156 var1310898))
(assert (= temp50_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_156)))
(assert (= temp50_155 temp50_157))
(assert (= var1322852
   (ite (bvslt temp50_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_158 #x0000000000000000))
(assert (= var1322852 temp50_158))
(assert (= temp50_159 #x0000000000000000))
(assert (= var1310898 temp50_159))
(assert (= temp50_161 var1310898))
(assert (= temp50_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_161)))
(assert (= temp50_160 temp50_162))
(assert (= var1322874 (bvsmod temp50_160 ARGNAME_groups_NAMEEND)))
(assert (= temp50_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp50_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_164 #x0000000000000001))
(assert (= var1322875 temp50_164))
(assert (= temp50_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp50_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_166 #x0000000000000001))
(assert (= var1322895 temp50_166))
(assert (= temp50_167 #x0000000000000001))
(assert (= var1311786 temp50_167))
(assert (= temp50_168 #x0000000000000000))
(assert (= temp50_169 temp50_168))
(assert (= temp50_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_169)))
(assert (= temp50_171 #x0000000000000001))
(assert (= temp50_172 temp50_171))
(assert (= temp50_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_172)))
(assert (= temp50_174 #x0000000000000002))
(assert (= temp50_175 temp50_174))
(assert (= temp50_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_175)))
(assert (= temp50_177 #x0000000000000003))
(assert (= temp50_178 temp50_177))
(assert (= temp50_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_178)))
(assert (= temp50_180 #x0000000000000004))
(assert (= temp50_181 temp50_180))
(assert (= temp50_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_181)))
(assert (= temp50_183 #x0000000000000005))
(assert (= temp50_184 temp50_183))
(assert (= temp50_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_184)))
(assert (= temp50_186 #x0000000000000000))
(assert (= temp50_187
   (ite (bvslt var1311786 temp50_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp50_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_187)))
(assert (= var1322903 temp50_188))
(assert (bvslt (ite (bvslt var1311786 temp50_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp50_189 #x0000000000000001))
(assert (= var1311786 temp50_189))
(assert (= temp50_191 var1311786))
(assert (= temp50_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_191)))
(assert (= temp50_190 temp50_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp50_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_193 #x0000000000000001))
(assert (= var1322908 temp50_193))
(assert (= temp50_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp50_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_195 #x0000000000000001))
(assert (= var1322975 temp50_195))
(assert (= temp50_196 #x0000000000000000))
(assert (= var1310898 temp50_196))
(assert (= temp50_197 #x0000000000000000))
(assert (= temp50_198 temp50_197))
(assert (= temp50_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp50_198)))
(assert (= temp50_200 #x0000000000000001))
(assert (= temp50_201 temp50_200))
(assert (= temp50_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp50_201)))
(assert (= temp50_203 #x0000000000000002))
(assert (= temp50_204 temp50_203))
(assert (= temp50_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp50_204)))
(assert (= temp50_206 #x0000000000000003))
(assert (= temp50_207 temp50_206))
(assert (= temp50_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp50_207)))
(assert (= temp50_209 #x0000000000000004))
(assert (= temp50_210 temp50_209))
(assert (= temp50_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp50_210)))
(assert (= temp50_212 #x0000000000000005))
(assert (= temp50_213 temp50_212))
(assert (= temp50_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp50_213)))
(assert (= temp50_215 #x0000000000000000))
(assert (= temp50_216
   (ite (bvslt var1310898 temp50_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp50_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp50_216)))
(assert (= var1322977 temp50_217))
(assert (bvslt (ite (bvslt var1310898 temp50_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp50_218 #x0000000000000000))
(assert (= var1310898 temp50_218))
(assert (= temp50_220 var1310898))
(assert (= temp50_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_220)))
(assert (= temp50_219 temp50_221))
(assert (= var1322980
   (ite (= var1322977 temp50_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_222 #x0000000000000001))
(assert (= var1322980 temp50_222))
(assert (= temp50_223 #x0000000000000002))
(assert (= var1848169 temp50_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp50_225 #x0000000000000001))
(assert (= var1323065 temp50_225))
(assert (= temp50_226 #x0000000000000001))
(assert (= var3486735 temp50_226))
(assert (= temp50_227 #x0000000000000001))
(assert (= var3814415 temp50_227))
(assert (= temp50_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp50_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_229 #x0000000000000001))
(assert (= var79986 temp50_229))
(assert (= temp50_230 #x0000000000000001))
(assert (= var80116 temp50_230))
(assert (= var4796905 var80116))
(assert (= temp50_231 #x0000000000000000))
(assert (= var4784306 temp50_231))
(assert (= temp50_232 #x0000000000000000))
(assert (= temp50_233
   (ite (bvslt var4784306 temp50_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp50_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_233)))
(assert (= var4796924 temp50_234))
(assert (bvslt (ite (bvslt var4784306 temp50_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp50_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp50_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_236 #x0000000000000001))
(assert (= var4796925 temp50_236))
(assert (= temp50_237 #x0000000000000000))
(assert (= var4996927 temp50_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp50_238 #x0000000000000002))
(assert (= var5125763 temp50_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_239 #x0000000000000000))
(assert (= var5191324 temp50_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp50_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp50_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp50_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp50_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6635340 var80315))
(assert (= var6635341 var80317))
(assert (= var6635342 var80319))
(assert (= temp50_244 #x0000000000000001))
(assert (= temp50_243 temp50_244))
(assert (= temp50_245 #x0000000000000001))
(assert (= var7933418 temp50_245))
(assert (= temp50_247 #xffffffffffffffff))
(assert (= temp50_246 temp50_247))
(assert (= temp50_248 #x0000000000000001))
(assert (= var79986 temp50_248))
(model-add temp50_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp50_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp50_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






