(declare-fun temp1016_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1016_2 () (_ BitVec 64))
(declare-fun temp1016_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1016_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1016_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1016_6 () (_ BitVec 64))
(declare-fun temp1016_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1016_8 () (_ BitVec 64))
(declare-fun temp1016_9 () (_ BitVec 64))
(declare-fun temp1016_10 () (_ BitVec 64))
(declare-fun temp1016_11 () (_ BitVec 64))
(declare-fun temp1016_12 () (_ BitVec 64))
(declare-fun temp1016_13 () (_ BitVec 64))
(declare-fun temp1016_14 () (_ BitVec 64))
(declare-fun temp1016_15 () (_ BitVec 64))
(declare-fun temp1016_16 () (_ BitVec 64))
(declare-fun temp1016_17 () (_ BitVec 64))
(declare-fun temp1016_18 () (_ BitVec 64))
(declare-fun temp1016_19 () (_ BitVec 64))
(declare-fun temp1016_20 () (_ BitVec 64))
(declare-fun temp1016_21 () (_ BitVec 64))
(declare-fun temp1016_22 () (_ BitVec 64))
(declare-fun temp1016_23 () (_ BitVec 64))
(declare-fun temp1016_24 () (_ BitVec 64))
(declare-fun temp1016_25 () (_ BitVec 64))
(declare-fun temp1016_26 () (_ BitVec 64))
(declare-fun temp1016_27 () (_ BitVec 64))
(declare-fun temp1016_28 () (_ BitVec 64))
(declare-fun temp1016_29 () (_ BitVec 64))
(declare-fun temp1016_30 () (_ BitVec 64))
(declare-fun temp1016_31 () (_ BitVec 64))
(declare-fun temp1016_32 () (_ BitVec 64))
(declare-fun temp1016_33 () (_ BitVec 64))
(declare-fun temp1016_34 () (_ BitVec 64))
(declare-fun temp1016_35 () (_ BitVec 64))
(declare-fun temp1016_36 () (_ BitVec 64))
(declare-fun temp1016_37 () (_ BitVec 64))
(declare-fun temp1016_38 () (_ BitVec 64))
(declare-fun temp1016_39 () (_ BitVec 64))
(declare-fun temp1016_40 () (_ BitVec 64))
(declare-fun temp1016_41 () (_ BitVec 64))
(declare-fun temp1016_42 () (_ BitVec 64))
(declare-fun temp1016_43 () (_ BitVec 64))
(declare-fun temp1016_44 () (_ BitVec 64))
(declare-fun temp1016_45 () (_ BitVec 64))
(declare-fun temp1016_46 () (_ BitVec 64))
(declare-fun temp1016_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1016_48 () (_ BitVec 64))
(declare-fun temp1016_49 () (_ BitVec 64))
(declare-fun temp1016_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1016_51 () (_ BitVec 64))
(declare-fun temp1016_52 () (_ BitVec 64))
(declare-fun temp1016_53 () (_ BitVec 64))
(declare-fun temp1016_54 () (_ BitVec 64))
(declare-fun temp1016_55 () (_ BitVec 64))
(declare-fun temp1016_56 () (_ BitVec 64))
(declare-fun temp1016_57 () (_ BitVec 64))
(declare-fun temp1016_58 () (_ BitVec 64))
(declare-fun temp1016_59 () (_ BitVec 64))
(declare-fun temp1016_60 () (_ BitVec 64))
(declare-fun temp1016_61 () (_ BitVec 64))
(declare-fun temp1016_62 () (_ BitVec 64))
(declare-fun temp1016_63 () (_ BitVec 64))
(declare-fun temp1016_64 () (_ BitVec 64))
(declare-fun temp1016_65 () (_ BitVec 64))
(declare-fun temp1016_66 () (_ BitVec 64))
(declare-fun temp1016_67 () (_ BitVec 64))
(declare-fun temp1016_68 () (_ BitVec 64))
(declare-fun temp1016_69 () (_ BitVec 64))
(declare-fun temp1016_70 () (_ BitVec 64))
(declare-fun temp1016_71 () (_ BitVec 64))
(declare-fun temp1016_72 () (_ BitVec 64))
(declare-fun temp1016_73 () (_ BitVec 64))
(declare-fun temp1016_74 () (_ BitVec 64))
(declare-fun temp1016_75 () (_ BitVec 64))
(declare-fun temp1016_76 () (_ BitVec 64))
(declare-fun temp1016_77 () (_ BitVec 64))
(declare-fun temp1016_78 () (_ BitVec 64))
(declare-fun temp1016_79 () (_ BitVec 64))
(declare-fun temp1016_80 () (_ BitVec 64))
(declare-fun temp1016_81 () (_ BitVec 64))
(declare-fun temp1016_82 () (_ BitVec 64))
(declare-fun temp1016_83 () (_ BitVec 64))
(declare-fun temp1016_84 () (_ BitVec 64))
(declare-fun temp1016_85 () (_ BitVec 64))
(declare-fun temp1016_86 () (_ BitVec 64))
(declare-fun temp1016_87 () (_ BitVec 64))
(declare-fun temp1016_88 () (_ BitVec 64))
(declare-fun temp1016_89 () (_ BitVec 64))
(declare-fun temp1016_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1016_91 () (_ BitVec 64))
(declare-fun temp1016_92 () (_ BitVec 64))
(declare-fun temp1016_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1016_94 () (_ BitVec 64))
(declare-fun temp1016_95 () (_ BitVec 64))
(declare-fun temp1016_96 () (_ BitVec 64))
(declare-fun temp1016_97 () (_ BitVec 64))
(declare-fun temp1016_98 () (_ BitVec 64))
(declare-fun temp1016_99 () (_ BitVec 64))
(declare-fun temp1016_100 () (_ BitVec 64))
(declare-fun temp1016_101 () (_ BitVec 64))
(declare-fun temp1016_102 () (_ BitVec 64))
(declare-fun temp1016_103 () (_ BitVec 64))
(declare-fun temp1016_104 () (_ BitVec 64))
(declare-fun temp1016_105 () (_ BitVec 64))
(declare-fun temp1016_106 () (_ BitVec 64))
(declare-fun temp1016_107 () (_ BitVec 64))
(declare-fun temp1016_108 () (_ BitVec 64))
(declare-fun temp1016_109 () (_ BitVec 64))
(declare-fun temp1016_110 () (_ BitVec 64))
(declare-fun temp1016_111 () (_ BitVec 64))
(declare-fun temp1016_112 () (_ BitVec 64))
(declare-fun temp1016_113 () (_ BitVec 64))
(declare-fun temp1016_114 () (_ BitVec 64))
(declare-fun temp1016_115 () (_ BitVec 64))
(declare-fun temp1016_116 () (_ BitVec 64))
(declare-fun temp1016_117 () (_ BitVec 64))
(declare-fun temp1016_118 () (_ BitVec 64))
(declare-fun temp1016_119 () (_ BitVec 64))
(declare-fun temp1016_120 () (_ BitVec 64))
(declare-fun temp1016_121 () (_ BitVec 64))
(declare-fun temp1016_122 () (_ BitVec 64))
(declare-fun temp1016_123 () (_ BitVec 64))
(declare-fun temp1016_124 () (_ BitVec 64))
(declare-fun temp1016_125 () (_ BitVec 64))
(declare-fun temp1016_126 () (_ BitVec 64))
(declare-fun temp1016_127 () (_ BitVec 64))
(declare-fun temp1016_128 () (_ BitVec 64))
(declare-fun temp1016_129 () (_ BitVec 64))
(declare-fun temp1016_130 () (_ BitVec 64))
(declare-fun temp1016_131 () (_ BitVec 64))
(declare-fun temp1016_132 () (_ BitVec 64))
(declare-fun temp1016_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1016_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1016_135 () (_ BitVec 64))
(declare-fun temp1016_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1016_137 () (_ BitVec 64))
(declare-fun temp1016_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1016_139 () (_ BitVec 64))
(declare-fun temp1016_140 () (_ BitVec 64))
(declare-fun temp1016_141 () (_ BitVec 64))
(declare-fun temp1016_142 () (_ BitVec 64))
(declare-fun temp1016_143 () (_ BitVec 64))
(declare-fun temp1016_144 () (_ BitVec 64))
(declare-fun temp1016_145 () (_ BitVec 64))
(declare-fun temp1016_146 () (_ BitVec 64))
(declare-fun temp1016_147 () (_ BitVec 64))
(declare-fun temp1016_148 () (_ BitVec 64))
(declare-fun temp1016_149 () (_ BitVec 64))
(declare-fun temp1016_150 () (_ BitVec 64))
(declare-fun temp1016_151 () (_ BitVec 64))
(declare-fun temp1016_152 () (_ BitVec 64))
(declare-fun temp1016_153 () (_ BitVec 64))
(declare-fun temp1016_154 () (_ BitVec 64))
(declare-fun temp1016_156 () (_ BitVec 64))
(declare-fun temp1016_157 () (_ BitVec 64))
(declare-fun temp1016_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1016_158 () (_ BitVec 64))
(declare-fun temp1016_159 () (_ BitVec 64))
(declare-fun temp1016_161 () (_ BitVec 64))
(declare-fun temp1016_162 () (_ BitVec 64))
(declare-fun temp1016_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1016_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1016_164 () (_ BitVec 64))
(declare-fun temp1016_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1016_166 () (_ BitVec 64))
(declare-fun temp1016_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1016_168 () (_ BitVec 64))
(declare-fun temp1016_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1016_170 () (_ BitVec 64))
(declare-fun temp1016_171 () (_ BitVec 64))
(declare-fun temp1016_172 () (_ BitVec 64))
(declare-fun temp1016_173 () (_ BitVec 64))
(declare-fun temp1016_174 () (_ BitVec 64))
(declare-fun temp1016_175 () (_ BitVec 64))
(declare-fun temp1016_176 () (_ BitVec 64))
(declare-fun temp1016_177 () (_ BitVec 64))
(declare-fun temp1016_178 () (_ BitVec 64))
(declare-fun temp1016_179 () (_ BitVec 64))
(declare-fun temp1016_180 () (_ BitVec 64))
(declare-fun temp1016_181 () (_ BitVec 64))
(declare-fun temp1016_182 () (_ BitVec 64))
(declare-fun temp1016_183 () (_ BitVec 64))
(declare-fun temp1016_184 () (_ BitVec 64))
(declare-fun temp1016_185 () (_ BitVec 64))
(declare-fun temp1016_186 () (_ BitVec 64))
(declare-fun temp1016_187 () (_ BitVec 64))
(declare-fun temp1016_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1016_189 () (_ BitVec 64))
(declare-fun temp1016_191 () (_ BitVec 64))
(declare-fun temp1016_192 () (_ BitVec 64))
(declare-fun temp1016_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1016_193 () (_ BitVec 64))
(declare-fun temp1016_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1016_195 () (_ BitVec 64))
(declare-fun temp1016_196 () (_ BitVec 64))
(declare-fun temp1016_197 () (_ BitVec 64))
(declare-fun temp1016_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1016_199 () (_ BitVec 64))
(declare-fun temp1016_200 () (_ BitVec 64))
(declare-fun temp1016_201 () (_ BitVec 64))
(declare-fun temp1016_202 () (_ BitVec 64))
(declare-fun temp1016_203 () (_ BitVec 64))
(declare-fun temp1016_204 () (_ BitVec 64))
(declare-fun temp1016_205 () (_ BitVec 64))
(declare-fun temp1016_206 () (_ BitVec 64))
(declare-fun temp1016_207 () (_ BitVec 64))
(declare-fun temp1016_208 () (_ BitVec 64))
(declare-fun temp1016_209 () (_ BitVec 64))
(declare-fun temp1016_210 () (_ BitVec 64))
(declare-fun temp1016_211 () (_ BitVec 64))
(declare-fun temp1016_212 () (_ BitVec 64))
(declare-fun temp1016_213 () (_ BitVec 64))
(declare-fun temp1016_214 () (_ BitVec 64))
(declare-fun temp1016_215 () (_ BitVec 64))
(declare-fun temp1016_216 () (_ BitVec 64))
(declare-fun temp1016_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1016_218 () (_ BitVec 64))
(declare-fun temp1016_220 () (_ BitVec 64))
(declare-fun temp1016_221 () (_ BitVec 64))
(declare-fun temp1016_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1016_222 () (_ BitVec 64))
(declare-fun temp1016_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1016_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1016_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1016_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1016_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1016_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1016_229 () (_ BitVec 64))
(declare-fun temp1016_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1016_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1016_232 () (_ BitVec 64))
(declare-fun temp1016_233 () (_ BitVec 64))
(declare-fun temp1016_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1016_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1016_236 () (_ BitVec 64))
(declare-fun temp1016_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1016_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1016_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp1016_240 () (_ BitVec 64))
(assert (= temp1016_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1016_1)))
(assert (= temp1016_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1016_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_3 #x0000000000000000))
(assert (= var79869 temp1016_3))
(assert (= temp1016_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1016_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_5 #x0000000000000000))
(assert (= var79914 temp1016_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1016_6 #x0000000000000000))
(assert (= temp1016_7 temp1016_6))
(assert (= temp1016_8 (select ARGNAME_padding_NAMEEND_VAL temp1016_7)))
(assert (= temp1016_9 #x0000000000000001))
(assert (= temp1016_10 temp1016_9))
(assert (= temp1016_11 (select ARGNAME_padding_NAMEEND_VAL temp1016_10)))
(assert (= temp1016_12 #x0000000000000002))
(assert (= temp1016_13 temp1016_12))
(assert (= temp1016_14 (select ARGNAME_padding_NAMEEND_VAL temp1016_13)))
(assert (= temp1016_15 #x0000000000000003))
(assert (= temp1016_16 temp1016_15))
(assert (= temp1016_17 (select ARGNAME_padding_NAMEEND_VAL temp1016_16)))
(assert (= temp1016_18 #x0000000000000004))
(assert (= temp1016_19 temp1016_18))
(assert (= temp1016_20 (select ARGNAME_padding_NAMEEND_VAL temp1016_19)))
(assert (= temp1016_21 #x0000000000000005))
(assert (= temp1016_22 temp1016_21))
(assert (= temp1016_23 (select ARGNAME_padding_NAMEEND_VAL temp1016_22)))
(assert (= temp1016_24 #x0000000000000000))
(assert (= temp1016_25 #x0000000000000000))
(assert (= temp1016_26 temp1016_25))
(assert (= temp1016_27 (select ARGNAME_padding_NAMEEND_VAL temp1016_26)))
(assert (= temp1016_28 #x0000000000000000))
(assert (= temp1016_29 #x0000000000000001))
(assert (= temp1016_30 temp1016_29))
(assert (= temp1016_31 (select ARGNAME_padding_NAMEEND_VAL temp1016_30)))
(assert (= temp1016_32 #x0000000000000000))
(assert (= temp1016_33 #x0000000000000002))
(assert (= temp1016_34 temp1016_33))
(assert (= temp1016_35 (select ARGNAME_padding_NAMEEND_VAL temp1016_34)))
(assert (= temp1016_36 #x0000000000000000))
(assert (= temp1016_37 #x0000000000000003))
(assert (= temp1016_38 temp1016_37))
(assert (= temp1016_39 (select ARGNAME_padding_NAMEEND_VAL temp1016_38)))
(assert (= temp1016_40 #x0000000000000000))
(assert (= temp1016_41 #x0000000000000004))
(assert (= temp1016_42 temp1016_41))
(assert (= temp1016_43 (select ARGNAME_padding_NAMEEND_VAL temp1016_42)))
(assert (= temp1016_44 #x0000000000000000))
(assert (= temp1016_45 #x0000000000000005))
(assert (= temp1016_46 temp1016_45))
(assert (= temp1016_47 (select ARGNAME_padding_NAMEEND_VAL temp1016_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1016_27 temp1016_24)
             (bvslt temp1016_31 temp1016_28)
             (bvslt temp1016_35 temp1016_32)
             (bvslt temp1016_39 temp1016_36)
             (bvslt temp1016_43 temp1016_40)
             (bvslt temp1016_47 temp1016_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_48 #x0000000000000000))
(assert (= var1322786 temp1016_48))
(assert (= temp1016_49 #x0000000000000000))
(assert (= temp1016_50 temp1016_49))
(assert (= temp1016_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_50)))
(assert (= temp1016_52 #x0000000000000001))
(assert (= temp1016_53 temp1016_52))
(assert (= temp1016_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_53)))
(assert (= temp1016_55 #x0000000000000002))
(assert (= temp1016_56 temp1016_55))
(assert (= temp1016_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_56)))
(assert (= temp1016_58 #x0000000000000003))
(assert (= temp1016_59 temp1016_58))
(assert (= temp1016_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_59)))
(assert (= temp1016_61 #x0000000000000004))
(assert (= temp1016_62 temp1016_61))
(assert (= temp1016_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_62)))
(assert (= temp1016_64 #x0000000000000005))
(assert (= temp1016_65 temp1016_64))
(assert (= temp1016_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_65)))
(assert (= temp1016_67 #x0000000000000000))
(assert (= temp1016_68 #x0000000000000000))
(assert (= temp1016_69 temp1016_68))
(assert (= temp1016_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_69)))
(assert (= temp1016_71 #x0000000000000000))
(assert (= temp1016_72 #x0000000000000001))
(assert (= temp1016_73 temp1016_72))
(assert (= temp1016_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_73)))
(assert (= temp1016_75 #x0000000000000000))
(assert (= temp1016_76 #x0000000000000002))
(assert (= temp1016_77 temp1016_76))
(assert (= temp1016_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_77)))
(assert (= temp1016_79 #x0000000000000000))
(assert (= temp1016_80 #x0000000000000003))
(assert (= temp1016_81 temp1016_80))
(assert (= temp1016_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_81)))
(assert (= temp1016_83 #x0000000000000000))
(assert (= temp1016_84 #x0000000000000004))
(assert (= temp1016_85 temp1016_84))
(assert (= temp1016_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_85)))
(assert (= temp1016_87 #x0000000000000000))
(assert (= temp1016_88 #x0000000000000005))
(assert (= temp1016_89 temp1016_88))
(assert (= temp1016_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1016_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1016_70 temp1016_67)
             (bvslt temp1016_74 temp1016_71)
             (bvslt temp1016_78 temp1016_75)
             (bvslt temp1016_82 temp1016_79)
             (bvslt temp1016_86 temp1016_83)
             (bvslt temp1016_90 temp1016_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_91 #x0000000000000000))
(assert (= var1322797 temp1016_91))
(assert (= temp1016_92 #x0000000000000000))
(assert (= temp1016_93 temp1016_92))
(assert (= temp1016_94 (select ARGNAME_stride_NAMEEND_VAL temp1016_93)))
(assert (= temp1016_95 #x0000000000000001))
(assert (= temp1016_96 temp1016_95))
(assert (= temp1016_97 (select ARGNAME_stride_NAMEEND_VAL temp1016_96)))
(assert (= temp1016_98 #x0000000000000002))
(assert (= temp1016_99 temp1016_98))
(assert (= temp1016_100 (select ARGNAME_stride_NAMEEND_VAL temp1016_99)))
(assert (= temp1016_101 #x0000000000000003))
(assert (= temp1016_102 temp1016_101))
(assert (= temp1016_103 (select ARGNAME_stride_NAMEEND_VAL temp1016_102)))
(assert (= temp1016_104 #x0000000000000004))
(assert (= temp1016_105 temp1016_104))
(assert (= temp1016_106 (select ARGNAME_stride_NAMEEND_VAL temp1016_105)))
(assert (= temp1016_107 #x0000000000000005))
(assert (= temp1016_108 temp1016_107))
(assert (= temp1016_109 (select ARGNAME_stride_NAMEEND_VAL temp1016_108)))
(assert (= temp1016_110 #x0000000000000000))
(assert (= temp1016_111 #x0000000000000000))
(assert (= temp1016_112 temp1016_111))
(assert (= temp1016_113 (select ARGNAME_stride_NAMEEND_VAL temp1016_112)))
(assert (= temp1016_114 #x0000000000000000))
(assert (= temp1016_115 #x0000000000000001))
(assert (= temp1016_116 temp1016_115))
(assert (= temp1016_117 (select ARGNAME_stride_NAMEEND_VAL temp1016_116)))
(assert (= temp1016_118 #x0000000000000000))
(assert (= temp1016_119 #x0000000000000002))
(assert (= temp1016_120 temp1016_119))
(assert (= temp1016_121 (select ARGNAME_stride_NAMEEND_VAL temp1016_120)))
(assert (= temp1016_122 #x0000000000000000))
(assert (= temp1016_123 #x0000000000000003))
(assert (= temp1016_124 temp1016_123))
(assert (= temp1016_125 (select ARGNAME_stride_NAMEEND_VAL temp1016_124)))
(assert (= temp1016_126 #x0000000000000000))
(assert (= temp1016_127 #x0000000000000004))
(assert (= temp1016_128 temp1016_127))
(assert (= temp1016_129 (select ARGNAME_stride_NAMEEND_VAL temp1016_128)))
(assert (= temp1016_130 #x0000000000000000))
(assert (= temp1016_131 #x0000000000000005))
(assert (= temp1016_132 temp1016_131))
(assert (= temp1016_133 (select ARGNAME_stride_NAMEEND_VAL temp1016_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1016_113 temp1016_110)
             (bvsle temp1016_117 temp1016_114)
             (bvsle temp1016_121 temp1016_118)
             (bvsle temp1016_125 temp1016_122)
             (bvsle temp1016_129 temp1016_126)
             (bvsle temp1016_133 temp1016_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_134 #x0000000000000000))
(assert (= var1322807 temp1016_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_135 #x0000000000000001))
(assert (= var1322819 temp1016_135))
(assert (= temp1016_136 #x0000000000000000))
(assert (= var1310898 temp1016_136))
(assert (= temp1016_137 #x0000000000000000))
(assert (= temp1016_138 temp1016_137))
(assert (= temp1016_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_138)))
(assert (= temp1016_140 #x0000000000000001))
(assert (= temp1016_141 temp1016_140))
(assert (= temp1016_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_141)))
(assert (= temp1016_143 #x0000000000000002))
(assert (= temp1016_144 temp1016_143))
(assert (= temp1016_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_144)))
(assert (= temp1016_146 #x0000000000000003))
(assert (= temp1016_147 temp1016_146))
(assert (= temp1016_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_147)))
(assert (= temp1016_149 #x0000000000000004))
(assert (= temp1016_150 temp1016_149))
(assert (= temp1016_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_150)))
(assert (= temp1016_152 #x0000000000000005))
(assert (= temp1016_153 temp1016_152))
(assert (= temp1016_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_153)))
(assert (= temp1016_156 var1310898))
(assert (= temp1016_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_156)))
(assert (= temp1016_155 temp1016_157))
(assert (= var1322852
   (ite (bvslt temp1016_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_158 #x0000000000000000))
(assert (= var1322852 temp1016_158))
(assert (= temp1016_159 #x0000000000000000))
(assert (= var1310898 temp1016_159))
(assert (= temp1016_161 var1310898))
(assert (= temp1016_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_161)))
(assert (= temp1016_160 temp1016_162))
(assert (= var1322874 (bvsmod temp1016_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1016_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1016_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1016_164 #x0000000000000001))
(assert (= var1322875 temp1016_164))
(assert (= temp1016_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1016_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_166 #x0000000000000001))
(assert (= var1322895 temp1016_166))
(assert (= temp1016_167 #x0000000000000001))
(assert (= var1311786 temp1016_167))
(assert (= temp1016_168 #x0000000000000000))
(assert (= temp1016_169 temp1016_168))
(assert (= temp1016_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1016_169)))
(assert (= temp1016_171 #x0000000000000001))
(assert (= temp1016_172 temp1016_171))
(assert (= temp1016_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1016_172)))
(assert (= temp1016_174 #x0000000000000002))
(assert (= temp1016_175 temp1016_174))
(assert (= temp1016_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1016_175)))
(assert (= temp1016_177 #x0000000000000003))
(assert (= temp1016_178 temp1016_177))
(assert (= temp1016_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1016_178)))
(assert (= temp1016_180 #x0000000000000004))
(assert (= temp1016_181 temp1016_180))
(assert (= temp1016_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1016_181)))
(assert (= temp1016_183 #x0000000000000005))
(assert (= temp1016_184 temp1016_183))
(assert (= temp1016_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1016_184)))
(assert (= temp1016_186 #x0000000000000000))
(assert (= temp1016_187
   (ite (bvslt var1311786 temp1016_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1016_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1016_187)))
(assert (= var1322903 temp1016_188))
(assert (bvslt (ite (bvslt var1311786 temp1016_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1016_189 #x0000000000000001))
(assert (= var1311786 temp1016_189))
(assert (= temp1016_191 var1311786))
(assert (= temp1016_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_191)))
(assert (= temp1016_190 temp1016_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1016_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1016_193 #x0000000000000001))
(assert (= var1322908 temp1016_193))
(assert (= temp1016_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1016_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_195 #x0000000000000001))
(assert (= var1322975 temp1016_195))
(assert (= temp1016_196 #x0000000000000000))
(assert (= var1310898 temp1016_196))
(assert (= temp1016_197 #x0000000000000000))
(assert (= temp1016_198 temp1016_197))
(assert (= temp1016_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1016_198)))
(assert (= temp1016_200 #x0000000000000001))
(assert (= temp1016_201 temp1016_200))
(assert (= temp1016_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1016_201)))
(assert (= temp1016_203 #x0000000000000002))
(assert (= temp1016_204 temp1016_203))
(assert (= temp1016_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1016_204)))
(assert (= temp1016_206 #x0000000000000003))
(assert (= temp1016_207 temp1016_206))
(assert (= temp1016_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1016_207)))
(assert (= temp1016_209 #x0000000000000004))
(assert (= temp1016_210 temp1016_209))
(assert (= temp1016_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1016_210)))
(assert (= temp1016_212 #x0000000000000005))
(assert (= temp1016_213 temp1016_212))
(assert (= temp1016_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1016_213)))
(assert (= temp1016_215 #x0000000000000000))
(assert (= temp1016_216
   (ite (bvslt var1310898 temp1016_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1016_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1016_216)))
(assert (= var1322977 temp1016_217))
(assert (bvslt (ite (bvslt var1310898 temp1016_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1016_218 #x0000000000000000))
(assert (= var1310898 temp1016_218))
(assert (= temp1016_220 var1310898))
(assert (= temp1016_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1016_220)))
(assert (= temp1016_219 temp1016_221))
(assert (= var1322980
   (ite (= var1322977 temp1016_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1016_222 #x0000000000000001))
(assert (= var1322980 temp1016_222))
(assert (= temp1016_223 #x0000000000000002))
(assert (= var1848169 temp1016_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1016_225 #x0000000000000001))
(assert (= var1323065 temp1016_225))
(assert (= temp1016_226 #x0000000000000001))
(assert (= var3486735 temp1016_226))
(assert (= temp1016_227 #x0000000000000001))
(assert (= var3814415 temp1016_227))
(assert (= temp1016_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1016_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_229 #x0000000000000001))
(assert (= var79986 temp1016_229))
(assert (= temp1016_230 #x0000000000000001))
(assert (= var80116 temp1016_230))
(assert (= var4796905 var80116))
(assert (= temp1016_231 #x0000000000000000))
(assert (= var4784306 temp1016_231))
(assert (= temp1016_232 #x0000000000000000))
(assert (= temp1016_233
   (ite (bvslt var4784306 temp1016_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1016_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1016_233)))
(assert (= var4796924 temp1016_234))
(assert (bvslt (ite (bvslt var4784306 temp1016_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1016_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1016_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1016_236 #x0000000000000001))
(assert (= var4796925 temp1016_236))
(assert (= temp1016_237 #x0000000000000000))
(assert (= var4996927 temp1016_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1016_238 #x0000000000000002))
(assert (= var5125763 temp1016_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1016_239 #x0000000000000000))
(assert (= var5191324 temp1016_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp1016_240 #x0000000000000001))
(assert (= var79986 temp1016_240))
(model-add temp1016_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1016_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1016_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






