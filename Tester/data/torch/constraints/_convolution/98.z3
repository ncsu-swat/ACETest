(declare-fun temp129_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp129_2 () (_ BitVec 64))
(declare-fun temp129_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp129_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp129_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp129_6 () (_ BitVec 64))
(declare-fun temp129_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp129_8 () (_ BitVec 64))
(declare-fun temp129_9 () (_ BitVec 64))
(declare-fun temp129_10 () (_ BitVec 64))
(declare-fun temp129_11 () (_ BitVec 64))
(declare-fun temp129_12 () (_ BitVec 64))
(declare-fun temp129_13 () (_ BitVec 64))
(declare-fun temp129_14 () (_ BitVec 64))
(declare-fun temp129_15 () (_ BitVec 64))
(declare-fun temp129_16 () (_ BitVec 64))
(declare-fun temp129_17 () (_ BitVec 64))
(declare-fun temp129_18 () (_ BitVec 64))
(declare-fun temp129_19 () (_ BitVec 64))
(declare-fun temp129_20 () (_ BitVec 64))
(declare-fun temp129_21 () (_ BitVec 64))
(declare-fun temp129_22 () (_ BitVec 64))
(declare-fun temp129_23 () (_ BitVec 64))
(declare-fun temp129_24 () (_ BitVec 64))
(declare-fun temp129_25 () (_ BitVec 64))
(declare-fun temp129_26 () (_ BitVec 64))
(declare-fun temp129_27 () (_ BitVec 64))
(declare-fun temp129_28 () (_ BitVec 64))
(declare-fun temp129_29 () (_ BitVec 64))
(declare-fun temp129_30 () (_ BitVec 64))
(declare-fun temp129_31 () (_ BitVec 64))
(declare-fun temp129_32 () (_ BitVec 64))
(declare-fun temp129_33 () (_ BitVec 64))
(declare-fun temp129_34 () (_ BitVec 64))
(declare-fun temp129_35 () (_ BitVec 64))
(declare-fun temp129_36 () (_ BitVec 64))
(declare-fun temp129_37 () (_ BitVec 64))
(declare-fun temp129_38 () (_ BitVec 64))
(declare-fun temp129_39 () (_ BitVec 64))
(declare-fun temp129_40 () (_ BitVec 64))
(declare-fun temp129_41 () (_ BitVec 64))
(declare-fun temp129_42 () (_ BitVec 64))
(declare-fun temp129_43 () (_ BitVec 64))
(declare-fun temp129_44 () (_ BitVec 64))
(declare-fun temp129_45 () (_ BitVec 64))
(declare-fun temp129_46 () (_ BitVec 64))
(declare-fun temp129_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp129_48 () (_ BitVec 64))
(declare-fun temp129_49 () (_ BitVec 64))
(declare-fun temp129_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp129_51 () (_ BitVec 64))
(declare-fun temp129_52 () (_ BitVec 64))
(declare-fun temp129_53 () (_ BitVec 64))
(declare-fun temp129_54 () (_ BitVec 64))
(declare-fun temp129_55 () (_ BitVec 64))
(declare-fun temp129_56 () (_ BitVec 64))
(declare-fun temp129_57 () (_ BitVec 64))
(declare-fun temp129_58 () (_ BitVec 64))
(declare-fun temp129_59 () (_ BitVec 64))
(declare-fun temp129_60 () (_ BitVec 64))
(declare-fun temp129_61 () (_ BitVec 64))
(declare-fun temp129_62 () (_ BitVec 64))
(declare-fun temp129_63 () (_ BitVec 64))
(declare-fun temp129_64 () (_ BitVec 64))
(declare-fun temp129_65 () (_ BitVec 64))
(declare-fun temp129_66 () (_ BitVec 64))
(declare-fun temp129_67 () (_ BitVec 64))
(declare-fun temp129_68 () (_ BitVec 64))
(declare-fun temp129_69 () (_ BitVec 64))
(declare-fun temp129_70 () (_ BitVec 64))
(declare-fun temp129_71 () (_ BitVec 64))
(declare-fun temp129_72 () (_ BitVec 64))
(declare-fun temp129_73 () (_ BitVec 64))
(declare-fun temp129_74 () (_ BitVec 64))
(declare-fun temp129_75 () (_ BitVec 64))
(declare-fun temp129_76 () (_ BitVec 64))
(declare-fun temp129_77 () (_ BitVec 64))
(declare-fun temp129_78 () (_ BitVec 64))
(declare-fun temp129_79 () (_ BitVec 64))
(declare-fun temp129_80 () (_ BitVec 64))
(declare-fun temp129_81 () (_ BitVec 64))
(declare-fun temp129_82 () (_ BitVec 64))
(declare-fun temp129_83 () (_ BitVec 64))
(declare-fun temp129_84 () (_ BitVec 64))
(declare-fun temp129_85 () (_ BitVec 64))
(declare-fun temp129_86 () (_ BitVec 64))
(declare-fun temp129_87 () (_ BitVec 64))
(declare-fun temp129_88 () (_ BitVec 64))
(declare-fun temp129_89 () (_ BitVec 64))
(declare-fun temp129_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp129_91 () (_ BitVec 64))
(declare-fun temp129_92 () (_ BitVec 64))
(declare-fun temp129_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp129_94 () (_ BitVec 64))
(declare-fun temp129_95 () (_ BitVec 64))
(declare-fun temp129_96 () (_ BitVec 64))
(declare-fun temp129_97 () (_ BitVec 64))
(declare-fun temp129_98 () (_ BitVec 64))
(declare-fun temp129_99 () (_ BitVec 64))
(declare-fun temp129_100 () (_ BitVec 64))
(declare-fun temp129_101 () (_ BitVec 64))
(declare-fun temp129_102 () (_ BitVec 64))
(declare-fun temp129_103 () (_ BitVec 64))
(declare-fun temp129_104 () (_ BitVec 64))
(declare-fun temp129_105 () (_ BitVec 64))
(declare-fun temp129_106 () (_ BitVec 64))
(declare-fun temp129_107 () (_ BitVec 64))
(declare-fun temp129_108 () (_ BitVec 64))
(declare-fun temp129_109 () (_ BitVec 64))
(declare-fun temp129_110 () (_ BitVec 64))
(declare-fun temp129_111 () (_ BitVec 64))
(declare-fun temp129_112 () (_ BitVec 64))
(declare-fun temp129_113 () (_ BitVec 64))
(declare-fun temp129_114 () (_ BitVec 64))
(declare-fun temp129_115 () (_ BitVec 64))
(declare-fun temp129_116 () (_ BitVec 64))
(declare-fun temp129_117 () (_ BitVec 64))
(declare-fun temp129_118 () (_ BitVec 64))
(declare-fun temp129_119 () (_ BitVec 64))
(declare-fun temp129_120 () (_ BitVec 64))
(declare-fun temp129_121 () (_ BitVec 64))
(declare-fun temp129_122 () (_ BitVec 64))
(declare-fun temp129_123 () (_ BitVec 64))
(declare-fun temp129_124 () (_ BitVec 64))
(declare-fun temp129_125 () (_ BitVec 64))
(declare-fun temp129_126 () (_ BitVec 64))
(declare-fun temp129_127 () (_ BitVec 64))
(declare-fun temp129_128 () (_ BitVec 64))
(declare-fun temp129_129 () (_ BitVec 64))
(declare-fun temp129_130 () (_ BitVec 64))
(declare-fun temp129_131 () (_ BitVec 64))
(declare-fun temp129_132 () (_ BitVec 64))
(declare-fun temp129_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp129_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp129_135 () (_ BitVec 64))
(declare-fun temp129_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp129_137 () (_ BitVec 64))
(declare-fun temp129_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp129_139 () (_ BitVec 64))
(declare-fun temp129_140 () (_ BitVec 64))
(declare-fun temp129_141 () (_ BitVec 64))
(declare-fun temp129_142 () (_ BitVec 64))
(declare-fun temp129_143 () (_ BitVec 64))
(declare-fun temp129_144 () (_ BitVec 64))
(declare-fun temp129_145 () (_ BitVec 64))
(declare-fun temp129_146 () (_ BitVec 64))
(declare-fun temp129_147 () (_ BitVec 64))
(declare-fun temp129_148 () (_ BitVec 64))
(declare-fun temp129_149 () (_ BitVec 64))
(declare-fun temp129_150 () (_ BitVec 64))
(declare-fun temp129_151 () (_ BitVec 64))
(declare-fun temp129_152 () (_ BitVec 64))
(declare-fun temp129_153 () (_ BitVec 64))
(declare-fun temp129_154 () (_ BitVec 64))
(declare-fun temp129_156 () (_ BitVec 64))
(declare-fun temp129_157 () (_ BitVec 64))
(declare-fun temp129_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp129_158 () (_ BitVec 64))
(declare-fun temp129_159 () (_ BitVec 64))
(declare-fun temp129_161 () (_ BitVec 64))
(declare-fun temp129_162 () (_ BitVec 64))
(declare-fun temp129_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp129_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp129_164 () (_ BitVec 64))
(declare-fun temp129_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp129_166 () (_ BitVec 64))
(declare-fun temp129_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp129_168 () (_ BitVec 64))
(declare-fun temp129_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp129_170 () (_ BitVec 64))
(declare-fun temp129_171 () (_ BitVec 64))
(declare-fun temp129_172 () (_ BitVec 64))
(declare-fun temp129_173 () (_ BitVec 64))
(declare-fun temp129_174 () (_ BitVec 64))
(declare-fun temp129_175 () (_ BitVec 64))
(declare-fun temp129_176 () (_ BitVec 64))
(declare-fun temp129_177 () (_ BitVec 64))
(declare-fun temp129_178 () (_ BitVec 64))
(declare-fun temp129_179 () (_ BitVec 64))
(declare-fun temp129_180 () (_ BitVec 64))
(declare-fun temp129_181 () (_ BitVec 64))
(declare-fun temp129_182 () (_ BitVec 64))
(declare-fun temp129_183 () (_ BitVec 64))
(declare-fun temp129_184 () (_ BitVec 64))
(declare-fun temp129_185 () (_ BitVec 64))
(declare-fun temp129_186 () (_ BitVec 64))
(declare-fun temp129_187 () (_ BitVec 64))
(declare-fun temp129_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp129_189 () (_ BitVec 64))
(declare-fun temp129_191 () (_ BitVec 64))
(declare-fun temp129_192 () (_ BitVec 64))
(declare-fun temp129_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp129_193 () (_ BitVec 64))
(declare-fun temp129_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp129_195 () (_ BitVec 64))
(declare-fun temp129_196 () (_ BitVec 64))
(declare-fun temp129_197 () (_ BitVec 64))
(declare-fun temp129_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp129_199 () (_ BitVec 64))
(declare-fun temp129_200 () (_ BitVec 64))
(declare-fun temp129_201 () (_ BitVec 64))
(declare-fun temp129_202 () (_ BitVec 64))
(declare-fun temp129_203 () (_ BitVec 64))
(declare-fun temp129_204 () (_ BitVec 64))
(declare-fun temp129_205 () (_ BitVec 64))
(declare-fun temp129_206 () (_ BitVec 64))
(declare-fun temp129_207 () (_ BitVec 64))
(declare-fun temp129_208 () (_ BitVec 64))
(declare-fun temp129_209 () (_ BitVec 64))
(declare-fun temp129_210 () (_ BitVec 64))
(declare-fun temp129_211 () (_ BitVec 64))
(declare-fun temp129_212 () (_ BitVec 64))
(declare-fun temp129_213 () (_ BitVec 64))
(declare-fun temp129_214 () (_ BitVec 64))
(declare-fun temp129_215 () (_ BitVec 64))
(declare-fun temp129_216 () (_ BitVec 64))
(declare-fun temp129_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp129_218 () (_ BitVec 64))
(declare-fun temp129_220 () (_ BitVec 64))
(declare-fun temp129_221 () (_ BitVec 64))
(declare-fun temp129_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp129_222 () (_ BitVec 64))
(declare-fun temp129_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp129_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp129_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp129_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp129_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp129_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp129_229 () (_ BitVec 64))
(declare-fun temp129_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp129_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp129_232 () (_ BitVec 64))
(declare-fun temp129_233 () (_ BitVec 64))
(declare-fun temp129_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp129_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp129_236 () (_ BitVec 64))
(declare-fun temp129_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp129_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp129_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp129_241 () (_ BitVec 64))
(declare-fun temp129_240 () (_ BitVec 64))
(declare-fun temp129_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp129_243 () (_ BitVec 64))
(declare-fun temp129_244 () (_ BitVec 64))
(declare-fun temp129_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp129_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp129_247 () (_ BitVec 64))
(declare-fun temp129_249 () (_ BitVec 64))
(declare-fun temp129_248 () (_ BitVec 64))
(declare-fun temp129_250 () (_ BitVec 64))
(assert (= temp129_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp129_1)))
(assert (= temp129_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp129_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_3 #x0000000000000000))
(assert (= var79869 temp129_3))
(assert (= temp129_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp129_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_5 #x0000000000000000))
(assert (= var79914 temp129_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp129_6 #x0000000000000000))
(assert (= temp129_7 temp129_6))
(assert (= temp129_8 (select ARGNAME_padding_NAMEEND_VAL temp129_7)))
(assert (= temp129_9 #x0000000000000001))
(assert (= temp129_10 temp129_9))
(assert (= temp129_11 (select ARGNAME_padding_NAMEEND_VAL temp129_10)))
(assert (= temp129_12 #x0000000000000002))
(assert (= temp129_13 temp129_12))
(assert (= temp129_14 (select ARGNAME_padding_NAMEEND_VAL temp129_13)))
(assert (= temp129_15 #x0000000000000003))
(assert (= temp129_16 temp129_15))
(assert (= temp129_17 (select ARGNAME_padding_NAMEEND_VAL temp129_16)))
(assert (= temp129_18 #x0000000000000004))
(assert (= temp129_19 temp129_18))
(assert (= temp129_20 (select ARGNAME_padding_NAMEEND_VAL temp129_19)))
(assert (= temp129_21 #x0000000000000005))
(assert (= temp129_22 temp129_21))
(assert (= temp129_23 (select ARGNAME_padding_NAMEEND_VAL temp129_22)))
(assert (= temp129_24 #x0000000000000000))
(assert (= temp129_25 #x0000000000000000))
(assert (= temp129_26 temp129_25))
(assert (= temp129_27 (select ARGNAME_padding_NAMEEND_VAL temp129_26)))
(assert (= temp129_28 #x0000000000000000))
(assert (= temp129_29 #x0000000000000001))
(assert (= temp129_30 temp129_29))
(assert (= temp129_31 (select ARGNAME_padding_NAMEEND_VAL temp129_30)))
(assert (= temp129_32 #x0000000000000000))
(assert (= temp129_33 #x0000000000000002))
(assert (= temp129_34 temp129_33))
(assert (= temp129_35 (select ARGNAME_padding_NAMEEND_VAL temp129_34)))
(assert (= temp129_36 #x0000000000000000))
(assert (= temp129_37 #x0000000000000003))
(assert (= temp129_38 temp129_37))
(assert (= temp129_39 (select ARGNAME_padding_NAMEEND_VAL temp129_38)))
(assert (= temp129_40 #x0000000000000000))
(assert (= temp129_41 #x0000000000000004))
(assert (= temp129_42 temp129_41))
(assert (= temp129_43 (select ARGNAME_padding_NAMEEND_VAL temp129_42)))
(assert (= temp129_44 #x0000000000000000))
(assert (= temp129_45 #x0000000000000005))
(assert (= temp129_46 temp129_45))
(assert (= temp129_47 (select ARGNAME_padding_NAMEEND_VAL temp129_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp129_27 temp129_24)
             (bvslt temp129_31 temp129_28)
             (bvslt temp129_35 temp129_32)
             (bvslt temp129_39 temp129_36)
             (bvslt temp129_43 temp129_40)
             (bvslt temp129_47 temp129_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_48 #x0000000000000000))
(assert (= var1322786 temp129_48))
(assert (= temp129_49 #x0000000000000000))
(assert (= temp129_50 temp129_49))
(assert (= temp129_51 (select ARGNAME_output_padding_NAMEEND_VAL temp129_50)))
(assert (= temp129_52 #x0000000000000001))
(assert (= temp129_53 temp129_52))
(assert (= temp129_54 (select ARGNAME_output_padding_NAMEEND_VAL temp129_53)))
(assert (= temp129_55 #x0000000000000002))
(assert (= temp129_56 temp129_55))
(assert (= temp129_57 (select ARGNAME_output_padding_NAMEEND_VAL temp129_56)))
(assert (= temp129_58 #x0000000000000003))
(assert (= temp129_59 temp129_58))
(assert (= temp129_60 (select ARGNAME_output_padding_NAMEEND_VAL temp129_59)))
(assert (= temp129_61 #x0000000000000004))
(assert (= temp129_62 temp129_61))
(assert (= temp129_63 (select ARGNAME_output_padding_NAMEEND_VAL temp129_62)))
(assert (= temp129_64 #x0000000000000005))
(assert (= temp129_65 temp129_64))
(assert (= temp129_66 (select ARGNAME_output_padding_NAMEEND_VAL temp129_65)))
(assert (= temp129_67 #x0000000000000000))
(assert (= temp129_68 #x0000000000000000))
(assert (= temp129_69 temp129_68))
(assert (= temp129_70 (select ARGNAME_output_padding_NAMEEND_VAL temp129_69)))
(assert (= temp129_71 #x0000000000000000))
(assert (= temp129_72 #x0000000000000001))
(assert (= temp129_73 temp129_72))
(assert (= temp129_74 (select ARGNAME_output_padding_NAMEEND_VAL temp129_73)))
(assert (= temp129_75 #x0000000000000000))
(assert (= temp129_76 #x0000000000000002))
(assert (= temp129_77 temp129_76))
(assert (= temp129_78 (select ARGNAME_output_padding_NAMEEND_VAL temp129_77)))
(assert (= temp129_79 #x0000000000000000))
(assert (= temp129_80 #x0000000000000003))
(assert (= temp129_81 temp129_80))
(assert (= temp129_82 (select ARGNAME_output_padding_NAMEEND_VAL temp129_81)))
(assert (= temp129_83 #x0000000000000000))
(assert (= temp129_84 #x0000000000000004))
(assert (= temp129_85 temp129_84))
(assert (= temp129_86 (select ARGNAME_output_padding_NAMEEND_VAL temp129_85)))
(assert (= temp129_87 #x0000000000000000))
(assert (= temp129_88 #x0000000000000005))
(assert (= temp129_89 temp129_88))
(assert (= temp129_90 (select ARGNAME_output_padding_NAMEEND_VAL temp129_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp129_70 temp129_67)
             (bvslt temp129_74 temp129_71)
             (bvslt temp129_78 temp129_75)
             (bvslt temp129_82 temp129_79)
             (bvslt temp129_86 temp129_83)
             (bvslt temp129_90 temp129_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_91 #x0000000000000000))
(assert (= var1322797 temp129_91))
(assert (= temp129_92 #x0000000000000000))
(assert (= temp129_93 temp129_92))
(assert (= temp129_94 (select ARGNAME_stride_NAMEEND_VAL temp129_93)))
(assert (= temp129_95 #x0000000000000001))
(assert (= temp129_96 temp129_95))
(assert (= temp129_97 (select ARGNAME_stride_NAMEEND_VAL temp129_96)))
(assert (= temp129_98 #x0000000000000002))
(assert (= temp129_99 temp129_98))
(assert (= temp129_100 (select ARGNAME_stride_NAMEEND_VAL temp129_99)))
(assert (= temp129_101 #x0000000000000003))
(assert (= temp129_102 temp129_101))
(assert (= temp129_103 (select ARGNAME_stride_NAMEEND_VAL temp129_102)))
(assert (= temp129_104 #x0000000000000004))
(assert (= temp129_105 temp129_104))
(assert (= temp129_106 (select ARGNAME_stride_NAMEEND_VAL temp129_105)))
(assert (= temp129_107 #x0000000000000005))
(assert (= temp129_108 temp129_107))
(assert (= temp129_109 (select ARGNAME_stride_NAMEEND_VAL temp129_108)))
(assert (= temp129_110 #x0000000000000000))
(assert (= temp129_111 #x0000000000000000))
(assert (= temp129_112 temp129_111))
(assert (= temp129_113 (select ARGNAME_stride_NAMEEND_VAL temp129_112)))
(assert (= temp129_114 #x0000000000000000))
(assert (= temp129_115 #x0000000000000001))
(assert (= temp129_116 temp129_115))
(assert (= temp129_117 (select ARGNAME_stride_NAMEEND_VAL temp129_116)))
(assert (= temp129_118 #x0000000000000000))
(assert (= temp129_119 #x0000000000000002))
(assert (= temp129_120 temp129_119))
(assert (= temp129_121 (select ARGNAME_stride_NAMEEND_VAL temp129_120)))
(assert (= temp129_122 #x0000000000000000))
(assert (= temp129_123 #x0000000000000003))
(assert (= temp129_124 temp129_123))
(assert (= temp129_125 (select ARGNAME_stride_NAMEEND_VAL temp129_124)))
(assert (= temp129_126 #x0000000000000000))
(assert (= temp129_127 #x0000000000000004))
(assert (= temp129_128 temp129_127))
(assert (= temp129_129 (select ARGNAME_stride_NAMEEND_VAL temp129_128)))
(assert (= temp129_130 #x0000000000000000))
(assert (= temp129_131 #x0000000000000005))
(assert (= temp129_132 temp129_131))
(assert (= temp129_133 (select ARGNAME_stride_NAMEEND_VAL temp129_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp129_113 temp129_110)
             (bvsle temp129_117 temp129_114)
             (bvsle temp129_121 temp129_118)
             (bvsle temp129_125 temp129_122)
             (bvsle temp129_129 temp129_126)
             (bvsle temp129_133 temp129_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_134 #x0000000000000000))
(assert (= var1322807 temp129_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_135 #x0000000000000001))
(assert (= var1322819 temp129_135))
(assert (= temp129_136 #x0000000000000000))
(assert (= var1310898 temp129_136))
(assert (= temp129_137 #x0000000000000000))
(assert (= temp129_138 temp129_137))
(assert (= temp129_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_138)))
(assert (= temp129_140 #x0000000000000001))
(assert (= temp129_141 temp129_140))
(assert (= temp129_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_141)))
(assert (= temp129_143 #x0000000000000002))
(assert (= temp129_144 temp129_143))
(assert (= temp129_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_144)))
(assert (= temp129_146 #x0000000000000003))
(assert (= temp129_147 temp129_146))
(assert (= temp129_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_147)))
(assert (= temp129_149 #x0000000000000004))
(assert (= temp129_150 temp129_149))
(assert (= temp129_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_150)))
(assert (= temp129_152 #x0000000000000005))
(assert (= temp129_153 temp129_152))
(assert (= temp129_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_153)))
(assert (= temp129_156 var1310898))
(assert (= temp129_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_156)))
(assert (= temp129_155 temp129_157))
(assert (= var1322852
   (ite (bvslt temp129_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_158 #x0000000000000000))
(assert (= var1322852 temp129_158))
(assert (= temp129_159 #x0000000000000000))
(assert (= var1310898 temp129_159))
(assert (= temp129_161 var1310898))
(assert (= temp129_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_161)))
(assert (= temp129_160 temp129_162))
(assert (= var1322874 (bvsmod temp129_160 ARGNAME_groups_NAMEEND)))
(assert (= temp129_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp129_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp129_164 #x0000000000000001))
(assert (= var1322875 temp129_164))
(assert (= temp129_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp129_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_166 #x0000000000000001))
(assert (= var1322895 temp129_166))
(assert (= temp129_167 #x0000000000000001))
(assert (= var1311786 temp129_167))
(assert (= temp129_168 #x0000000000000000))
(assert (= temp129_169 temp129_168))
(assert (= temp129_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp129_169)))
(assert (= temp129_171 #x0000000000000001))
(assert (= temp129_172 temp129_171))
(assert (= temp129_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp129_172)))
(assert (= temp129_174 #x0000000000000002))
(assert (= temp129_175 temp129_174))
(assert (= temp129_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp129_175)))
(assert (= temp129_177 #x0000000000000003))
(assert (= temp129_178 temp129_177))
(assert (= temp129_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp129_178)))
(assert (= temp129_180 #x0000000000000004))
(assert (= temp129_181 temp129_180))
(assert (= temp129_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp129_181)))
(assert (= temp129_183 #x0000000000000005))
(assert (= temp129_184 temp129_183))
(assert (= temp129_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp129_184)))
(assert (= temp129_186 #x0000000000000000))
(assert (= temp129_187
   (ite (bvslt var1311786 temp129_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp129_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp129_187)))
(assert (= var1322903 temp129_188))
(assert (bvslt (ite (bvslt var1311786 temp129_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp129_189 #x0000000000000001))
(assert (= var1311786 temp129_189))
(assert (= temp129_191 var1311786))
(assert (= temp129_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_191)))
(assert (= temp129_190 temp129_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp129_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp129_193 #x0000000000000001))
(assert (= var1322908 temp129_193))
(assert (= temp129_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp129_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_195 #x0000000000000001))
(assert (= var1322975 temp129_195))
(assert (= temp129_196 #x0000000000000000))
(assert (= var1310898 temp129_196))
(assert (= temp129_197 #x0000000000000000))
(assert (= temp129_198 temp129_197))
(assert (= temp129_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp129_198)))
(assert (= temp129_200 #x0000000000000001))
(assert (= temp129_201 temp129_200))
(assert (= temp129_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp129_201)))
(assert (= temp129_203 #x0000000000000002))
(assert (= temp129_204 temp129_203))
(assert (= temp129_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp129_204)))
(assert (= temp129_206 #x0000000000000003))
(assert (= temp129_207 temp129_206))
(assert (= temp129_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp129_207)))
(assert (= temp129_209 #x0000000000000004))
(assert (= temp129_210 temp129_209))
(assert (= temp129_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp129_210)))
(assert (= temp129_212 #x0000000000000005))
(assert (= temp129_213 temp129_212))
(assert (= temp129_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp129_213)))
(assert (= temp129_215 #x0000000000000000))
(assert (= temp129_216
   (ite (bvslt var1310898 temp129_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp129_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp129_216)))
(assert (= var1322977 temp129_217))
(assert (bvslt (ite (bvslt var1310898 temp129_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp129_218 #x0000000000000000))
(assert (= var1310898 temp129_218))
(assert (= temp129_220 var1310898))
(assert (= temp129_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp129_220)))
(assert (= temp129_219 temp129_221))
(assert (= var1322980
   (ite (= var1322977 temp129_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp129_222 #x0000000000000001))
(assert (= var1322980 temp129_222))
(assert (= temp129_223 #x0000000000000002))
(assert (= var1848169 temp129_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp129_225 #x0000000000000001))
(assert (= var1323065 temp129_225))
(assert (= temp129_226 #x0000000000000001))
(assert (= var3486735 temp129_226))
(assert (= temp129_227 #x0000000000000001))
(assert (= var3814415 temp129_227))
(assert (= temp129_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp129_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_229 #x0000000000000001))
(assert (= var79986 temp129_229))
(assert (= temp129_230 #x0000000000000001))
(assert (= var80116 temp129_230))
(assert (= var4796905 var80116))
(assert (= temp129_231 #x0000000000000000))
(assert (= var4784306 temp129_231))
(assert (= temp129_232 #x0000000000000000))
(assert (= temp129_233
   (ite (bvslt var4784306 temp129_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp129_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp129_233)))
(assert (= var4796924 temp129_234))
(assert (bvslt (ite (bvslt var4784306 temp129_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp129_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp129_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp129_236 #x0000000000000001))
(assert (= var4796925 temp129_236))
(assert (= temp129_237 #x0000000000000000))
(assert (= var4996927 temp129_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp129_238 #x0000000000000002))
(assert (= var5125763 temp129_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp129_239 #x0000000000000000))
(assert (= var5191324 temp129_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp129_241 #xffffffffffffffff))
(assert (= temp129_240 temp129_241))
(assert (= temp129_242 #x0000000000000001))
(assert (= var66602 temp129_242))
(assert (= temp129_243 #x0000000000000000))
(assert (= temp129_244
   (ite (bvslt var66602 temp129_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp129_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp129_244)))
(assert (= var80523 temp129_245))
(assert (bvslt (ite (bvslt var66602 temp129_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp129_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp129_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp129_247 #x0000000000000001))
(assert (= var80524 temp129_247))
(assert (= temp129_249 #xffffffffffffffff))
(assert (= temp129_248 temp129_249))
(assert (= temp129_250 #x0000000000000001))
(assert (= var79986 temp129_250))
(model-add temp129_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp129_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp129_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






