(declare-fun temp29_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp29_2 () (_ BitVec 64))
(declare-fun temp29_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp29_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp29_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp29_6 () (_ BitVec 64))
(declare-fun temp29_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_8 () (_ BitVec 64))
(declare-fun temp29_9 () (_ BitVec 64))
(declare-fun temp29_10 () (_ BitVec 64))
(declare-fun temp29_11 () (_ BitVec 64))
(declare-fun temp29_12 () (_ BitVec 64))
(declare-fun temp29_13 () (_ BitVec 64))
(declare-fun temp29_14 () (_ BitVec 64))
(declare-fun temp29_15 () (_ BitVec 64))
(declare-fun temp29_16 () (_ BitVec 64))
(declare-fun temp29_17 () (_ BitVec 64))
(declare-fun temp29_18 () (_ BitVec 64))
(declare-fun temp29_19 () (_ BitVec 64))
(declare-fun temp29_20 () (_ BitVec 64))
(declare-fun temp29_21 () (_ BitVec 64))
(declare-fun temp29_22 () (_ BitVec 64))
(declare-fun temp29_23 () (_ BitVec 64))
(declare-fun temp29_24 () (_ BitVec 64))
(declare-fun temp29_25 () (_ BitVec 64))
(declare-fun temp29_26 () (_ BitVec 64))
(declare-fun temp29_27 () (_ BitVec 64))
(declare-fun temp29_28 () (_ BitVec 64))
(declare-fun temp29_29 () (_ BitVec 64))
(declare-fun temp29_30 () (_ BitVec 64))
(declare-fun temp29_31 () (_ BitVec 64))
(declare-fun temp29_32 () (_ BitVec 64))
(declare-fun temp29_33 () (_ BitVec 64))
(declare-fun temp29_34 () (_ BitVec 64))
(declare-fun temp29_35 () (_ BitVec 64))
(declare-fun temp29_36 () (_ BitVec 64))
(declare-fun temp29_37 () (_ BitVec 64))
(declare-fun temp29_38 () (_ BitVec 64))
(declare-fun temp29_39 () (_ BitVec 64))
(declare-fun temp29_40 () (_ BitVec 64))
(declare-fun temp29_41 () (_ BitVec 64))
(declare-fun temp29_42 () (_ BitVec 64))
(declare-fun temp29_43 () (_ BitVec 64))
(declare-fun temp29_44 () (_ BitVec 64))
(declare-fun temp29_45 () (_ BitVec 64))
(declare-fun temp29_46 () (_ BitVec 64))
(declare-fun temp29_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp29_48 () (_ BitVec 64))
(declare-fun temp29_49 () (_ BitVec 64))
(declare-fun temp29_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_51 () (_ BitVec 64))
(declare-fun temp29_52 () (_ BitVec 64))
(declare-fun temp29_53 () (_ BitVec 64))
(declare-fun temp29_54 () (_ BitVec 64))
(declare-fun temp29_55 () (_ BitVec 64))
(declare-fun temp29_56 () (_ BitVec 64))
(declare-fun temp29_57 () (_ BitVec 64))
(declare-fun temp29_58 () (_ BitVec 64))
(declare-fun temp29_59 () (_ BitVec 64))
(declare-fun temp29_60 () (_ BitVec 64))
(declare-fun temp29_61 () (_ BitVec 64))
(declare-fun temp29_62 () (_ BitVec 64))
(declare-fun temp29_63 () (_ BitVec 64))
(declare-fun temp29_64 () (_ BitVec 64))
(declare-fun temp29_65 () (_ BitVec 64))
(declare-fun temp29_66 () (_ BitVec 64))
(declare-fun temp29_67 () (_ BitVec 64))
(declare-fun temp29_68 () (_ BitVec 64))
(declare-fun temp29_69 () (_ BitVec 64))
(declare-fun temp29_70 () (_ BitVec 64))
(declare-fun temp29_71 () (_ BitVec 64))
(declare-fun temp29_72 () (_ BitVec 64))
(declare-fun temp29_73 () (_ BitVec 64))
(declare-fun temp29_74 () (_ BitVec 64))
(declare-fun temp29_75 () (_ BitVec 64))
(declare-fun temp29_76 () (_ BitVec 64))
(declare-fun temp29_77 () (_ BitVec 64))
(declare-fun temp29_78 () (_ BitVec 64))
(declare-fun temp29_79 () (_ BitVec 64))
(declare-fun temp29_80 () (_ BitVec 64))
(declare-fun temp29_81 () (_ BitVec 64))
(declare-fun temp29_82 () (_ BitVec 64))
(declare-fun temp29_83 () (_ BitVec 64))
(declare-fun temp29_84 () (_ BitVec 64))
(declare-fun temp29_85 () (_ BitVec 64))
(declare-fun temp29_86 () (_ BitVec 64))
(declare-fun temp29_87 () (_ BitVec 64))
(declare-fun temp29_88 () (_ BitVec 64))
(declare-fun temp29_89 () (_ BitVec 64))
(declare-fun temp29_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp29_91 () (_ BitVec 64))
(declare-fun temp29_92 () (_ BitVec 64))
(declare-fun temp29_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_94 () (_ BitVec 64))
(declare-fun temp29_95 () (_ BitVec 64))
(declare-fun temp29_96 () (_ BitVec 64))
(declare-fun temp29_97 () (_ BitVec 64))
(declare-fun temp29_98 () (_ BitVec 64))
(declare-fun temp29_99 () (_ BitVec 64))
(declare-fun temp29_100 () (_ BitVec 64))
(declare-fun temp29_101 () (_ BitVec 64))
(declare-fun temp29_102 () (_ BitVec 64))
(declare-fun temp29_103 () (_ BitVec 64))
(declare-fun temp29_104 () (_ BitVec 64))
(declare-fun temp29_105 () (_ BitVec 64))
(declare-fun temp29_106 () (_ BitVec 64))
(declare-fun temp29_107 () (_ BitVec 64))
(declare-fun temp29_108 () (_ BitVec 64))
(declare-fun temp29_109 () (_ BitVec 64))
(declare-fun temp29_110 () (_ BitVec 64))
(declare-fun temp29_111 () (_ BitVec 64))
(declare-fun temp29_112 () (_ BitVec 64))
(declare-fun temp29_113 () (_ BitVec 64))
(declare-fun temp29_114 () (_ BitVec 64))
(declare-fun temp29_115 () (_ BitVec 64))
(declare-fun temp29_116 () (_ BitVec 64))
(declare-fun temp29_117 () (_ BitVec 64))
(declare-fun temp29_118 () (_ BitVec 64))
(declare-fun temp29_119 () (_ BitVec 64))
(declare-fun temp29_120 () (_ BitVec 64))
(declare-fun temp29_121 () (_ BitVec 64))
(declare-fun temp29_122 () (_ BitVec 64))
(declare-fun temp29_123 () (_ BitVec 64))
(declare-fun temp29_124 () (_ BitVec 64))
(declare-fun temp29_125 () (_ BitVec 64))
(declare-fun temp29_126 () (_ BitVec 64))
(declare-fun temp29_127 () (_ BitVec 64))
(declare-fun temp29_128 () (_ BitVec 64))
(declare-fun temp29_129 () (_ BitVec 64))
(declare-fun temp29_130 () (_ BitVec 64))
(declare-fun temp29_131 () (_ BitVec 64))
(declare-fun temp29_132 () (_ BitVec 64))
(declare-fun temp29_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp29_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp29_135 () (_ BitVec 64))
(declare-fun temp29_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp29_137 () (_ BitVec 64))
(declare-fun temp29_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_139 () (_ BitVec 64))
(declare-fun temp29_140 () (_ BitVec 64))
(declare-fun temp29_141 () (_ BitVec 64))
(declare-fun temp29_142 () (_ BitVec 64))
(declare-fun temp29_143 () (_ BitVec 64))
(declare-fun temp29_144 () (_ BitVec 64))
(declare-fun temp29_145 () (_ BitVec 64))
(declare-fun temp29_146 () (_ BitVec 64))
(declare-fun temp29_147 () (_ BitVec 64))
(declare-fun temp29_148 () (_ BitVec 64))
(declare-fun temp29_149 () (_ BitVec 64))
(declare-fun temp29_150 () (_ BitVec 64))
(declare-fun temp29_151 () (_ BitVec 64))
(declare-fun temp29_152 () (_ BitVec 64))
(declare-fun temp29_153 () (_ BitVec 64))
(declare-fun temp29_154 () (_ BitVec 64))
(declare-fun temp29_156 () (_ BitVec 64))
(declare-fun temp29_157 () (_ BitVec 64))
(declare-fun temp29_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp29_158 () (_ BitVec 64))
(declare-fun temp29_159 () (_ BitVec 64))
(declare-fun temp29_161 () (_ BitVec 64))
(declare-fun temp29_162 () (_ BitVec 64))
(declare-fun temp29_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp29_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp29_164 () (_ BitVec 64))
(declare-fun temp29_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp29_166 () (_ BitVec 64))
(declare-fun temp29_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp29_168 () (_ BitVec 64))
(declare-fun temp29_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_170 () (_ BitVec 64))
(declare-fun temp29_171 () (_ BitVec 64))
(declare-fun temp29_172 () (_ BitVec 64))
(declare-fun temp29_173 () (_ BitVec 64))
(declare-fun temp29_174 () (_ BitVec 64))
(declare-fun temp29_175 () (_ BitVec 64))
(declare-fun temp29_176 () (_ BitVec 64))
(declare-fun temp29_177 () (_ BitVec 64))
(declare-fun temp29_178 () (_ BitVec 64))
(declare-fun temp29_179 () (_ BitVec 64))
(declare-fun temp29_180 () (_ BitVec 64))
(declare-fun temp29_181 () (_ BitVec 64))
(declare-fun temp29_182 () (_ BitVec 64))
(declare-fun temp29_183 () (_ BitVec 64))
(declare-fun temp29_184 () (_ BitVec 64))
(declare-fun temp29_185 () (_ BitVec 64))
(declare-fun temp29_186 () (_ BitVec 64))
(declare-fun temp29_187 () (_ BitVec 64))
(declare-fun temp29_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp29_189 () (_ BitVec 64))
(declare-fun temp29_191 () (_ BitVec 64))
(declare-fun temp29_192 () (_ BitVec 64))
(declare-fun temp29_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp29_193 () (_ BitVec 64))
(declare-fun temp29_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp29_195 () (_ BitVec 64))
(declare-fun temp29_196 () (_ BitVec 64))
(declare-fun temp29_197 () (_ BitVec 64))
(declare-fun temp29_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_199 () (_ BitVec 64))
(declare-fun temp29_200 () (_ BitVec 64))
(declare-fun temp29_201 () (_ BitVec 64))
(declare-fun temp29_202 () (_ BitVec 64))
(declare-fun temp29_203 () (_ BitVec 64))
(declare-fun temp29_204 () (_ BitVec 64))
(declare-fun temp29_205 () (_ BitVec 64))
(declare-fun temp29_206 () (_ BitVec 64))
(declare-fun temp29_207 () (_ BitVec 64))
(declare-fun temp29_208 () (_ BitVec 64))
(declare-fun temp29_209 () (_ BitVec 64))
(declare-fun temp29_210 () (_ BitVec 64))
(declare-fun temp29_211 () (_ BitVec 64))
(declare-fun temp29_212 () (_ BitVec 64))
(declare-fun temp29_213 () (_ BitVec 64))
(declare-fun temp29_214 () (_ BitVec 64))
(declare-fun temp29_215 () (_ BitVec 64))
(declare-fun temp29_216 () (_ BitVec 64))
(declare-fun temp29_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp29_218 () (_ BitVec 64))
(declare-fun temp29_220 () (_ BitVec 64))
(declare-fun temp29_221 () (_ BitVec 64))
(declare-fun temp29_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp29_222 () (_ BitVec 64))
(declare-fun temp29_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp29_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp29_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp29_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp29_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp29_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp29_229 () (_ BitVec 64))
(declare-fun temp29_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp29_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp29_232 () (_ BitVec 64))
(declare-fun temp29_233 () (_ BitVec 64))
(declare-fun temp29_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp29_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp29_236 () (_ BitVec 64))
(declare-fun temp29_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp29_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp29_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp29_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp29_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp29_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp29_243 () (_ BitVec 64))
(assert (= temp29_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp29_1)))
(assert (= temp29_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp29_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_3 #x0000000000000000))
(assert (= var79869 temp29_3))
(assert (= temp29_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp29_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_5 #x0000000000000000))
(assert (= var79914 temp29_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp29_6 #x0000000000000000))
(assert (= temp29_7 temp29_6))
(assert (= temp29_8 (select ARGNAME_padding_NAMEEND_VAL temp29_7)))
(assert (= temp29_9 #x0000000000000001))
(assert (= temp29_10 temp29_9))
(assert (= temp29_11 (select ARGNAME_padding_NAMEEND_VAL temp29_10)))
(assert (= temp29_12 #x0000000000000002))
(assert (= temp29_13 temp29_12))
(assert (= temp29_14 (select ARGNAME_padding_NAMEEND_VAL temp29_13)))
(assert (= temp29_15 #x0000000000000003))
(assert (= temp29_16 temp29_15))
(assert (= temp29_17 (select ARGNAME_padding_NAMEEND_VAL temp29_16)))
(assert (= temp29_18 #x0000000000000004))
(assert (= temp29_19 temp29_18))
(assert (= temp29_20 (select ARGNAME_padding_NAMEEND_VAL temp29_19)))
(assert (= temp29_21 #x0000000000000005))
(assert (= temp29_22 temp29_21))
(assert (= temp29_23 (select ARGNAME_padding_NAMEEND_VAL temp29_22)))
(assert (= temp29_24 #x0000000000000000))
(assert (= temp29_25 #x0000000000000000))
(assert (= temp29_26 temp29_25))
(assert (= temp29_27 (select ARGNAME_padding_NAMEEND_VAL temp29_26)))
(assert (= temp29_28 #x0000000000000000))
(assert (= temp29_29 #x0000000000000001))
(assert (= temp29_30 temp29_29))
(assert (= temp29_31 (select ARGNAME_padding_NAMEEND_VAL temp29_30)))
(assert (= temp29_32 #x0000000000000000))
(assert (= temp29_33 #x0000000000000002))
(assert (= temp29_34 temp29_33))
(assert (= temp29_35 (select ARGNAME_padding_NAMEEND_VAL temp29_34)))
(assert (= temp29_36 #x0000000000000000))
(assert (= temp29_37 #x0000000000000003))
(assert (= temp29_38 temp29_37))
(assert (= temp29_39 (select ARGNAME_padding_NAMEEND_VAL temp29_38)))
(assert (= temp29_40 #x0000000000000000))
(assert (= temp29_41 #x0000000000000004))
(assert (= temp29_42 temp29_41))
(assert (= temp29_43 (select ARGNAME_padding_NAMEEND_VAL temp29_42)))
(assert (= temp29_44 #x0000000000000000))
(assert (= temp29_45 #x0000000000000005))
(assert (= temp29_46 temp29_45))
(assert (= temp29_47 (select ARGNAME_padding_NAMEEND_VAL temp29_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp29_27 temp29_24)
             (bvslt temp29_31 temp29_28)
             (bvslt temp29_35 temp29_32)
             (bvslt temp29_39 temp29_36)
             (bvslt temp29_43 temp29_40)
             (bvslt temp29_47 temp29_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_48 #x0000000000000000))
(assert (= var1322786 temp29_48))
(assert (= temp29_49 #x0000000000000000))
(assert (= temp29_50 temp29_49))
(assert (= temp29_51 (select ARGNAME_output_padding_NAMEEND_VAL temp29_50)))
(assert (= temp29_52 #x0000000000000001))
(assert (= temp29_53 temp29_52))
(assert (= temp29_54 (select ARGNAME_output_padding_NAMEEND_VAL temp29_53)))
(assert (= temp29_55 #x0000000000000002))
(assert (= temp29_56 temp29_55))
(assert (= temp29_57 (select ARGNAME_output_padding_NAMEEND_VAL temp29_56)))
(assert (= temp29_58 #x0000000000000003))
(assert (= temp29_59 temp29_58))
(assert (= temp29_60 (select ARGNAME_output_padding_NAMEEND_VAL temp29_59)))
(assert (= temp29_61 #x0000000000000004))
(assert (= temp29_62 temp29_61))
(assert (= temp29_63 (select ARGNAME_output_padding_NAMEEND_VAL temp29_62)))
(assert (= temp29_64 #x0000000000000005))
(assert (= temp29_65 temp29_64))
(assert (= temp29_66 (select ARGNAME_output_padding_NAMEEND_VAL temp29_65)))
(assert (= temp29_67 #x0000000000000000))
(assert (= temp29_68 #x0000000000000000))
(assert (= temp29_69 temp29_68))
(assert (= temp29_70 (select ARGNAME_output_padding_NAMEEND_VAL temp29_69)))
(assert (= temp29_71 #x0000000000000000))
(assert (= temp29_72 #x0000000000000001))
(assert (= temp29_73 temp29_72))
(assert (= temp29_74 (select ARGNAME_output_padding_NAMEEND_VAL temp29_73)))
(assert (= temp29_75 #x0000000000000000))
(assert (= temp29_76 #x0000000000000002))
(assert (= temp29_77 temp29_76))
(assert (= temp29_78 (select ARGNAME_output_padding_NAMEEND_VAL temp29_77)))
(assert (= temp29_79 #x0000000000000000))
(assert (= temp29_80 #x0000000000000003))
(assert (= temp29_81 temp29_80))
(assert (= temp29_82 (select ARGNAME_output_padding_NAMEEND_VAL temp29_81)))
(assert (= temp29_83 #x0000000000000000))
(assert (= temp29_84 #x0000000000000004))
(assert (= temp29_85 temp29_84))
(assert (= temp29_86 (select ARGNAME_output_padding_NAMEEND_VAL temp29_85)))
(assert (= temp29_87 #x0000000000000000))
(assert (= temp29_88 #x0000000000000005))
(assert (= temp29_89 temp29_88))
(assert (= temp29_90 (select ARGNAME_output_padding_NAMEEND_VAL temp29_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp29_70 temp29_67)
             (bvslt temp29_74 temp29_71)
             (bvslt temp29_78 temp29_75)
             (bvslt temp29_82 temp29_79)
             (bvslt temp29_86 temp29_83)
             (bvslt temp29_90 temp29_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_91 #x0000000000000000))
(assert (= var1322797 temp29_91))
(assert (= temp29_92 #x0000000000000000))
(assert (= temp29_93 temp29_92))
(assert (= temp29_94 (select ARGNAME_stride_NAMEEND_VAL temp29_93)))
(assert (= temp29_95 #x0000000000000001))
(assert (= temp29_96 temp29_95))
(assert (= temp29_97 (select ARGNAME_stride_NAMEEND_VAL temp29_96)))
(assert (= temp29_98 #x0000000000000002))
(assert (= temp29_99 temp29_98))
(assert (= temp29_100 (select ARGNAME_stride_NAMEEND_VAL temp29_99)))
(assert (= temp29_101 #x0000000000000003))
(assert (= temp29_102 temp29_101))
(assert (= temp29_103 (select ARGNAME_stride_NAMEEND_VAL temp29_102)))
(assert (= temp29_104 #x0000000000000004))
(assert (= temp29_105 temp29_104))
(assert (= temp29_106 (select ARGNAME_stride_NAMEEND_VAL temp29_105)))
(assert (= temp29_107 #x0000000000000005))
(assert (= temp29_108 temp29_107))
(assert (= temp29_109 (select ARGNAME_stride_NAMEEND_VAL temp29_108)))
(assert (= temp29_110 #x0000000000000000))
(assert (= temp29_111 #x0000000000000000))
(assert (= temp29_112 temp29_111))
(assert (= temp29_113 (select ARGNAME_stride_NAMEEND_VAL temp29_112)))
(assert (= temp29_114 #x0000000000000000))
(assert (= temp29_115 #x0000000000000001))
(assert (= temp29_116 temp29_115))
(assert (= temp29_117 (select ARGNAME_stride_NAMEEND_VAL temp29_116)))
(assert (= temp29_118 #x0000000000000000))
(assert (= temp29_119 #x0000000000000002))
(assert (= temp29_120 temp29_119))
(assert (= temp29_121 (select ARGNAME_stride_NAMEEND_VAL temp29_120)))
(assert (= temp29_122 #x0000000000000000))
(assert (= temp29_123 #x0000000000000003))
(assert (= temp29_124 temp29_123))
(assert (= temp29_125 (select ARGNAME_stride_NAMEEND_VAL temp29_124)))
(assert (= temp29_126 #x0000000000000000))
(assert (= temp29_127 #x0000000000000004))
(assert (= temp29_128 temp29_127))
(assert (= temp29_129 (select ARGNAME_stride_NAMEEND_VAL temp29_128)))
(assert (= temp29_130 #x0000000000000000))
(assert (= temp29_131 #x0000000000000005))
(assert (= temp29_132 temp29_131))
(assert (= temp29_133 (select ARGNAME_stride_NAMEEND_VAL temp29_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp29_113 temp29_110)
             (bvsle temp29_117 temp29_114)
             (bvsle temp29_121 temp29_118)
             (bvsle temp29_125 temp29_122)
             (bvsle temp29_129 temp29_126)
             (bvsle temp29_133 temp29_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_134 #x0000000000000000))
(assert (= var1322807 temp29_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_135 #x0000000000000001))
(assert (= var1322819 temp29_135))
(assert (= temp29_136 #x0000000000000000))
(assert (= var1310898 temp29_136))
(assert (= temp29_137 #x0000000000000000))
(assert (= temp29_138 temp29_137))
(assert (= temp29_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_138)))
(assert (= temp29_140 #x0000000000000001))
(assert (= temp29_141 temp29_140))
(assert (= temp29_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_141)))
(assert (= temp29_143 #x0000000000000002))
(assert (= temp29_144 temp29_143))
(assert (= temp29_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_144)))
(assert (= temp29_146 #x0000000000000003))
(assert (= temp29_147 temp29_146))
(assert (= temp29_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_147)))
(assert (= temp29_149 #x0000000000000004))
(assert (= temp29_150 temp29_149))
(assert (= temp29_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_150)))
(assert (= temp29_152 #x0000000000000005))
(assert (= temp29_153 temp29_152))
(assert (= temp29_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_153)))
(assert (= temp29_156 var1310898))
(assert (= temp29_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_156)))
(assert (= temp29_155 temp29_157))
(assert (= var1322852
   (ite (bvslt temp29_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_158 #x0000000000000000))
(assert (= var1322852 temp29_158))
(assert (= temp29_159 #x0000000000000000))
(assert (= var1310898 temp29_159))
(assert (= temp29_161 var1310898))
(assert (= temp29_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_161)))
(assert (= temp29_160 temp29_162))
(assert (= var1322874 (bvsmod temp29_160 ARGNAME_groups_NAMEEND)))
(assert (= temp29_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp29_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_164 #x0000000000000001))
(assert (= var1322875 temp29_164))
(assert (= temp29_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp29_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_166 #x0000000000000001))
(assert (= var1322895 temp29_166))
(assert (= temp29_167 #x0000000000000001))
(assert (= var1311786 temp29_167))
(assert (= temp29_168 #x0000000000000000))
(assert (= temp29_169 temp29_168))
(assert (= temp29_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_169)))
(assert (= temp29_171 #x0000000000000001))
(assert (= temp29_172 temp29_171))
(assert (= temp29_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_172)))
(assert (= temp29_174 #x0000000000000002))
(assert (= temp29_175 temp29_174))
(assert (= temp29_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_175)))
(assert (= temp29_177 #x0000000000000003))
(assert (= temp29_178 temp29_177))
(assert (= temp29_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_178)))
(assert (= temp29_180 #x0000000000000004))
(assert (= temp29_181 temp29_180))
(assert (= temp29_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_181)))
(assert (= temp29_183 #x0000000000000005))
(assert (= temp29_184 temp29_183))
(assert (= temp29_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_184)))
(assert (= temp29_186 #x0000000000000000))
(assert (= temp29_187
   (ite (bvslt var1311786 temp29_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp29_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_187)))
(assert (= var1322903 temp29_188))
(assert (bvslt (ite (bvslt var1311786 temp29_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp29_189 #x0000000000000001))
(assert (= var1311786 temp29_189))
(assert (= temp29_191 var1311786))
(assert (= temp29_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_191)))
(assert (= temp29_190 temp29_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp29_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_193 #x0000000000000001))
(assert (= var1322908 temp29_193))
(assert (= temp29_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp29_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_195 #x0000000000000001))
(assert (= var1322975 temp29_195))
(assert (= temp29_196 #x0000000000000000))
(assert (= var1310898 temp29_196))
(assert (= temp29_197 #x0000000000000000))
(assert (= temp29_198 temp29_197))
(assert (= temp29_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp29_198)))
(assert (= temp29_200 #x0000000000000001))
(assert (= temp29_201 temp29_200))
(assert (= temp29_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp29_201)))
(assert (= temp29_203 #x0000000000000002))
(assert (= temp29_204 temp29_203))
(assert (= temp29_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp29_204)))
(assert (= temp29_206 #x0000000000000003))
(assert (= temp29_207 temp29_206))
(assert (= temp29_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp29_207)))
(assert (= temp29_209 #x0000000000000004))
(assert (= temp29_210 temp29_209))
(assert (= temp29_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp29_210)))
(assert (= temp29_212 #x0000000000000005))
(assert (= temp29_213 temp29_212))
(assert (= temp29_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp29_213)))
(assert (= temp29_215 #x0000000000000000))
(assert (= temp29_216
   (ite (bvslt var1310898 temp29_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp29_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp29_216)))
(assert (= var1322977 temp29_217))
(assert (bvslt (ite (bvslt var1310898 temp29_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp29_218 #x0000000000000000))
(assert (= var1310898 temp29_218))
(assert (= temp29_220 var1310898))
(assert (= temp29_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_220)))
(assert (= temp29_219 temp29_221))
(assert (= var1322980
   (ite (= var1322977 temp29_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_222 #x0000000000000001))
(assert (= var1322980 temp29_222))
(assert (= temp29_223 #x0000000000000002))
(assert (= var1848169 temp29_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp29_225 #x0000000000000001))
(assert (= var1323065 temp29_225))
(assert (= temp29_226 #x0000000000000001))
(assert (= var3486735 temp29_226))
(assert (= temp29_227 #x0000000000000001))
(assert (= var3814415 temp29_227))
(assert (= temp29_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp29_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_229 #x0000000000000001))
(assert (= var79986 temp29_229))
(assert (= temp29_230 #x0000000000000001))
(assert (= var80116 temp29_230))
(assert (= var4796905 var80116))
(assert (= temp29_231 #x0000000000000000))
(assert (= var4784306 temp29_231))
(assert (= temp29_232 #x0000000000000000))
(assert (= temp29_233
   (ite (bvslt var4784306 temp29_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp29_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_233)))
(assert (= var4796924 temp29_234))
(assert (bvslt (ite (bvslt var4784306 temp29_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp29_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp29_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_236 #x0000000000000001))
(assert (= var4796925 temp29_236))
(assert (= temp29_237 #x0000000000000000))
(assert (= var4996927 temp29_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp29_238 #x0000000000000002))
(assert (= var5125763 temp29_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_239 #x0000000000000000))
(assert (= var5191324 temp29_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp29_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp29_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp29_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp29_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp29_243 #x0000000000000001))
(assert (= var79986 temp29_243))
(model-add temp29_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp29_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp29_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






