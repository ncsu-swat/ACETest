(declare-fun temp157_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp157_2 () (_ BitVec 64))
(declare-fun temp157_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp157_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp157_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp157_6 () (_ BitVec 64))
(declare-fun temp157_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp157_8 () (_ BitVec 64))
(declare-fun temp157_9 () (_ BitVec 64))
(declare-fun temp157_10 () (_ BitVec 64))
(declare-fun temp157_11 () (_ BitVec 64))
(declare-fun temp157_12 () (_ BitVec 64))
(declare-fun temp157_13 () (_ BitVec 64))
(declare-fun temp157_14 () (_ BitVec 64))
(declare-fun temp157_15 () (_ BitVec 64))
(declare-fun temp157_16 () (_ BitVec 64))
(declare-fun temp157_17 () (_ BitVec 64))
(declare-fun temp157_18 () (_ BitVec 64))
(declare-fun temp157_19 () (_ BitVec 64))
(declare-fun temp157_20 () (_ BitVec 64))
(declare-fun temp157_21 () (_ BitVec 64))
(declare-fun temp157_22 () (_ BitVec 64))
(declare-fun temp157_23 () (_ BitVec 64))
(declare-fun temp157_24 () (_ BitVec 64))
(declare-fun temp157_25 () (_ BitVec 64))
(declare-fun temp157_26 () (_ BitVec 64))
(declare-fun temp157_27 () (_ BitVec 64))
(declare-fun temp157_28 () (_ BitVec 64))
(declare-fun temp157_29 () (_ BitVec 64))
(declare-fun temp157_30 () (_ BitVec 64))
(declare-fun temp157_31 () (_ BitVec 64))
(declare-fun temp157_32 () (_ BitVec 64))
(declare-fun temp157_33 () (_ BitVec 64))
(declare-fun temp157_34 () (_ BitVec 64))
(declare-fun temp157_35 () (_ BitVec 64))
(declare-fun temp157_36 () (_ BitVec 64))
(declare-fun temp157_37 () (_ BitVec 64))
(declare-fun temp157_38 () (_ BitVec 64))
(declare-fun temp157_39 () (_ BitVec 64))
(declare-fun temp157_40 () (_ BitVec 64))
(declare-fun temp157_41 () (_ BitVec 64))
(declare-fun temp157_42 () (_ BitVec 64))
(declare-fun temp157_43 () (_ BitVec 64))
(declare-fun temp157_44 () (_ BitVec 64))
(declare-fun temp157_45 () (_ BitVec 64))
(declare-fun temp157_46 () (_ BitVec 64))
(declare-fun temp157_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp157_48 () (_ BitVec 64))
(declare-fun temp157_49 () (_ BitVec 64))
(declare-fun temp157_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp157_51 () (_ BitVec 64))
(declare-fun temp157_52 () (_ BitVec 64))
(declare-fun temp157_53 () (_ BitVec 64))
(declare-fun temp157_54 () (_ BitVec 64))
(declare-fun temp157_55 () (_ BitVec 64))
(declare-fun temp157_56 () (_ BitVec 64))
(declare-fun temp157_57 () (_ BitVec 64))
(declare-fun temp157_58 () (_ BitVec 64))
(declare-fun temp157_59 () (_ BitVec 64))
(declare-fun temp157_60 () (_ BitVec 64))
(declare-fun temp157_61 () (_ BitVec 64))
(declare-fun temp157_62 () (_ BitVec 64))
(declare-fun temp157_63 () (_ BitVec 64))
(declare-fun temp157_64 () (_ BitVec 64))
(declare-fun temp157_65 () (_ BitVec 64))
(declare-fun temp157_66 () (_ BitVec 64))
(declare-fun temp157_67 () (_ BitVec 64))
(declare-fun temp157_68 () (_ BitVec 64))
(declare-fun temp157_69 () (_ BitVec 64))
(declare-fun temp157_70 () (_ BitVec 64))
(declare-fun temp157_71 () (_ BitVec 64))
(declare-fun temp157_72 () (_ BitVec 64))
(declare-fun temp157_73 () (_ BitVec 64))
(declare-fun temp157_74 () (_ BitVec 64))
(declare-fun temp157_75 () (_ BitVec 64))
(declare-fun temp157_76 () (_ BitVec 64))
(declare-fun temp157_77 () (_ BitVec 64))
(declare-fun temp157_78 () (_ BitVec 64))
(declare-fun temp157_79 () (_ BitVec 64))
(declare-fun temp157_80 () (_ BitVec 64))
(declare-fun temp157_81 () (_ BitVec 64))
(declare-fun temp157_82 () (_ BitVec 64))
(declare-fun temp157_83 () (_ BitVec 64))
(declare-fun temp157_84 () (_ BitVec 64))
(declare-fun temp157_85 () (_ BitVec 64))
(declare-fun temp157_86 () (_ BitVec 64))
(declare-fun temp157_87 () (_ BitVec 64))
(declare-fun temp157_88 () (_ BitVec 64))
(declare-fun temp157_89 () (_ BitVec 64))
(declare-fun temp157_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp157_91 () (_ BitVec 64))
(declare-fun temp157_92 () (_ BitVec 64))
(declare-fun temp157_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp157_94 () (_ BitVec 64))
(declare-fun temp157_95 () (_ BitVec 64))
(declare-fun temp157_96 () (_ BitVec 64))
(declare-fun temp157_97 () (_ BitVec 64))
(declare-fun temp157_98 () (_ BitVec 64))
(declare-fun temp157_99 () (_ BitVec 64))
(declare-fun temp157_100 () (_ BitVec 64))
(declare-fun temp157_101 () (_ BitVec 64))
(declare-fun temp157_102 () (_ BitVec 64))
(declare-fun temp157_103 () (_ BitVec 64))
(declare-fun temp157_104 () (_ BitVec 64))
(declare-fun temp157_105 () (_ BitVec 64))
(declare-fun temp157_106 () (_ BitVec 64))
(declare-fun temp157_107 () (_ BitVec 64))
(declare-fun temp157_108 () (_ BitVec 64))
(declare-fun temp157_109 () (_ BitVec 64))
(declare-fun temp157_110 () (_ BitVec 64))
(declare-fun temp157_111 () (_ BitVec 64))
(declare-fun temp157_112 () (_ BitVec 64))
(declare-fun temp157_113 () (_ BitVec 64))
(declare-fun temp157_114 () (_ BitVec 64))
(declare-fun temp157_115 () (_ BitVec 64))
(declare-fun temp157_116 () (_ BitVec 64))
(declare-fun temp157_117 () (_ BitVec 64))
(declare-fun temp157_118 () (_ BitVec 64))
(declare-fun temp157_119 () (_ BitVec 64))
(declare-fun temp157_120 () (_ BitVec 64))
(declare-fun temp157_121 () (_ BitVec 64))
(declare-fun temp157_122 () (_ BitVec 64))
(declare-fun temp157_123 () (_ BitVec 64))
(declare-fun temp157_124 () (_ BitVec 64))
(declare-fun temp157_125 () (_ BitVec 64))
(declare-fun temp157_126 () (_ BitVec 64))
(declare-fun temp157_127 () (_ BitVec 64))
(declare-fun temp157_128 () (_ BitVec 64))
(declare-fun temp157_129 () (_ BitVec 64))
(declare-fun temp157_130 () (_ BitVec 64))
(declare-fun temp157_131 () (_ BitVec 64))
(declare-fun temp157_132 () (_ BitVec 64))
(declare-fun temp157_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp157_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp157_135 () (_ BitVec 64))
(declare-fun temp157_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp157_137 () (_ BitVec 64))
(declare-fun temp157_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp157_139 () (_ BitVec 64))
(declare-fun temp157_140 () (_ BitVec 64))
(declare-fun temp157_141 () (_ BitVec 64))
(declare-fun temp157_142 () (_ BitVec 64))
(declare-fun temp157_143 () (_ BitVec 64))
(declare-fun temp157_144 () (_ BitVec 64))
(declare-fun temp157_145 () (_ BitVec 64))
(declare-fun temp157_146 () (_ BitVec 64))
(declare-fun temp157_147 () (_ BitVec 64))
(declare-fun temp157_148 () (_ BitVec 64))
(declare-fun temp157_149 () (_ BitVec 64))
(declare-fun temp157_150 () (_ BitVec 64))
(declare-fun temp157_151 () (_ BitVec 64))
(declare-fun temp157_152 () (_ BitVec 64))
(declare-fun temp157_153 () (_ BitVec 64))
(declare-fun temp157_154 () (_ BitVec 64))
(declare-fun temp157_156 () (_ BitVec 64))
(declare-fun temp157_157 () (_ BitVec 64))
(declare-fun temp157_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp157_158 () (_ BitVec 64))
(declare-fun temp157_159 () (_ BitVec 64))
(declare-fun temp157_161 () (_ BitVec 64))
(declare-fun temp157_162 () (_ BitVec 64))
(declare-fun temp157_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp157_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp157_164 () (_ BitVec 64))
(declare-fun temp157_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp157_166 () (_ BitVec 64))
(declare-fun temp157_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp157_168 () (_ BitVec 64))
(declare-fun temp157_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp157_170 () (_ BitVec 64))
(declare-fun temp157_171 () (_ BitVec 64))
(declare-fun temp157_172 () (_ BitVec 64))
(declare-fun temp157_173 () (_ BitVec 64))
(declare-fun temp157_174 () (_ BitVec 64))
(declare-fun temp157_175 () (_ BitVec 64))
(declare-fun temp157_176 () (_ BitVec 64))
(declare-fun temp157_177 () (_ BitVec 64))
(declare-fun temp157_178 () (_ BitVec 64))
(declare-fun temp157_179 () (_ BitVec 64))
(declare-fun temp157_180 () (_ BitVec 64))
(declare-fun temp157_181 () (_ BitVec 64))
(declare-fun temp157_182 () (_ BitVec 64))
(declare-fun temp157_183 () (_ BitVec 64))
(declare-fun temp157_184 () (_ BitVec 64))
(declare-fun temp157_185 () (_ BitVec 64))
(declare-fun temp157_186 () (_ BitVec 64))
(declare-fun temp157_187 () (_ BitVec 64))
(declare-fun temp157_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp157_189 () (_ BitVec 64))
(declare-fun temp157_191 () (_ BitVec 64))
(declare-fun temp157_192 () (_ BitVec 64))
(declare-fun temp157_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp157_193 () (_ BitVec 64))
(declare-fun temp157_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp157_195 () (_ BitVec 64))
(declare-fun temp157_196 () (_ BitVec 64))
(declare-fun temp157_197 () (_ BitVec 64))
(declare-fun temp157_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp157_199 () (_ BitVec 64))
(declare-fun temp157_200 () (_ BitVec 64))
(declare-fun temp157_201 () (_ BitVec 64))
(declare-fun temp157_202 () (_ BitVec 64))
(declare-fun temp157_203 () (_ BitVec 64))
(declare-fun temp157_204 () (_ BitVec 64))
(declare-fun temp157_205 () (_ BitVec 64))
(declare-fun temp157_206 () (_ BitVec 64))
(declare-fun temp157_207 () (_ BitVec 64))
(declare-fun temp157_208 () (_ BitVec 64))
(declare-fun temp157_209 () (_ BitVec 64))
(declare-fun temp157_210 () (_ BitVec 64))
(declare-fun temp157_211 () (_ BitVec 64))
(declare-fun temp157_212 () (_ BitVec 64))
(declare-fun temp157_213 () (_ BitVec 64))
(declare-fun temp157_214 () (_ BitVec 64))
(declare-fun temp157_215 () (_ BitVec 64))
(declare-fun temp157_216 () (_ BitVec 64))
(declare-fun temp157_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp157_218 () (_ BitVec 64))
(declare-fun temp157_220 () (_ BitVec 64))
(declare-fun temp157_221 () (_ BitVec 64))
(declare-fun temp157_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp157_222 () (_ BitVec 64))
(declare-fun temp157_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp157_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp157_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp157_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp157_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp157_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp157_229 () (_ BitVec 64))
(declare-fun temp157_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp157_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp157_232 () (_ BitVec 64))
(declare-fun temp157_233 () (_ BitVec 64))
(declare-fun temp157_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp157_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp157_236 () (_ BitVec 64))
(declare-fun temp157_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp157_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp157_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp157_241 () (_ BitVec 64))
(declare-fun temp157_240 () (_ BitVec 64))
(declare-fun temp157_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp157_243 () (_ BitVec 64))
(declare-fun temp157_244 () (_ BitVec 64))
(declare-fun temp157_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp157_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp157_247 () (_ BitVec 64))
(declare-fun temp157_248 () (_ BitVec 64))
(assert (= temp157_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp157_1)))
(assert (= temp157_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp157_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_3 #x0000000000000000))
(assert (= var79869 temp157_3))
(assert (= temp157_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp157_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_5 #x0000000000000000))
(assert (= var79914 temp157_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp157_6 #x0000000000000000))
(assert (= temp157_7 temp157_6))
(assert (= temp157_8 (select ARGNAME_padding_NAMEEND_VAL temp157_7)))
(assert (= temp157_9 #x0000000000000001))
(assert (= temp157_10 temp157_9))
(assert (= temp157_11 (select ARGNAME_padding_NAMEEND_VAL temp157_10)))
(assert (= temp157_12 #x0000000000000002))
(assert (= temp157_13 temp157_12))
(assert (= temp157_14 (select ARGNAME_padding_NAMEEND_VAL temp157_13)))
(assert (= temp157_15 #x0000000000000003))
(assert (= temp157_16 temp157_15))
(assert (= temp157_17 (select ARGNAME_padding_NAMEEND_VAL temp157_16)))
(assert (= temp157_18 #x0000000000000004))
(assert (= temp157_19 temp157_18))
(assert (= temp157_20 (select ARGNAME_padding_NAMEEND_VAL temp157_19)))
(assert (= temp157_21 #x0000000000000005))
(assert (= temp157_22 temp157_21))
(assert (= temp157_23 (select ARGNAME_padding_NAMEEND_VAL temp157_22)))
(assert (= temp157_24 #x0000000000000000))
(assert (= temp157_25 #x0000000000000000))
(assert (= temp157_26 temp157_25))
(assert (= temp157_27 (select ARGNAME_padding_NAMEEND_VAL temp157_26)))
(assert (= temp157_28 #x0000000000000000))
(assert (= temp157_29 #x0000000000000001))
(assert (= temp157_30 temp157_29))
(assert (= temp157_31 (select ARGNAME_padding_NAMEEND_VAL temp157_30)))
(assert (= temp157_32 #x0000000000000000))
(assert (= temp157_33 #x0000000000000002))
(assert (= temp157_34 temp157_33))
(assert (= temp157_35 (select ARGNAME_padding_NAMEEND_VAL temp157_34)))
(assert (= temp157_36 #x0000000000000000))
(assert (= temp157_37 #x0000000000000003))
(assert (= temp157_38 temp157_37))
(assert (= temp157_39 (select ARGNAME_padding_NAMEEND_VAL temp157_38)))
(assert (= temp157_40 #x0000000000000000))
(assert (= temp157_41 #x0000000000000004))
(assert (= temp157_42 temp157_41))
(assert (= temp157_43 (select ARGNAME_padding_NAMEEND_VAL temp157_42)))
(assert (= temp157_44 #x0000000000000000))
(assert (= temp157_45 #x0000000000000005))
(assert (= temp157_46 temp157_45))
(assert (= temp157_47 (select ARGNAME_padding_NAMEEND_VAL temp157_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp157_27 temp157_24)
             (bvslt temp157_31 temp157_28)
             (bvslt temp157_35 temp157_32)
             (bvslt temp157_39 temp157_36)
             (bvslt temp157_43 temp157_40)
             (bvslt temp157_47 temp157_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_48 #x0000000000000000))
(assert (= var1322786 temp157_48))
(assert (= temp157_49 #x0000000000000000))
(assert (= temp157_50 temp157_49))
(assert (= temp157_51 (select ARGNAME_output_padding_NAMEEND_VAL temp157_50)))
(assert (= temp157_52 #x0000000000000001))
(assert (= temp157_53 temp157_52))
(assert (= temp157_54 (select ARGNAME_output_padding_NAMEEND_VAL temp157_53)))
(assert (= temp157_55 #x0000000000000002))
(assert (= temp157_56 temp157_55))
(assert (= temp157_57 (select ARGNAME_output_padding_NAMEEND_VAL temp157_56)))
(assert (= temp157_58 #x0000000000000003))
(assert (= temp157_59 temp157_58))
(assert (= temp157_60 (select ARGNAME_output_padding_NAMEEND_VAL temp157_59)))
(assert (= temp157_61 #x0000000000000004))
(assert (= temp157_62 temp157_61))
(assert (= temp157_63 (select ARGNAME_output_padding_NAMEEND_VAL temp157_62)))
(assert (= temp157_64 #x0000000000000005))
(assert (= temp157_65 temp157_64))
(assert (= temp157_66 (select ARGNAME_output_padding_NAMEEND_VAL temp157_65)))
(assert (= temp157_67 #x0000000000000000))
(assert (= temp157_68 #x0000000000000000))
(assert (= temp157_69 temp157_68))
(assert (= temp157_70 (select ARGNAME_output_padding_NAMEEND_VAL temp157_69)))
(assert (= temp157_71 #x0000000000000000))
(assert (= temp157_72 #x0000000000000001))
(assert (= temp157_73 temp157_72))
(assert (= temp157_74 (select ARGNAME_output_padding_NAMEEND_VAL temp157_73)))
(assert (= temp157_75 #x0000000000000000))
(assert (= temp157_76 #x0000000000000002))
(assert (= temp157_77 temp157_76))
(assert (= temp157_78 (select ARGNAME_output_padding_NAMEEND_VAL temp157_77)))
(assert (= temp157_79 #x0000000000000000))
(assert (= temp157_80 #x0000000000000003))
(assert (= temp157_81 temp157_80))
(assert (= temp157_82 (select ARGNAME_output_padding_NAMEEND_VAL temp157_81)))
(assert (= temp157_83 #x0000000000000000))
(assert (= temp157_84 #x0000000000000004))
(assert (= temp157_85 temp157_84))
(assert (= temp157_86 (select ARGNAME_output_padding_NAMEEND_VAL temp157_85)))
(assert (= temp157_87 #x0000000000000000))
(assert (= temp157_88 #x0000000000000005))
(assert (= temp157_89 temp157_88))
(assert (= temp157_90 (select ARGNAME_output_padding_NAMEEND_VAL temp157_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp157_70 temp157_67)
             (bvslt temp157_74 temp157_71)
             (bvslt temp157_78 temp157_75)
             (bvslt temp157_82 temp157_79)
             (bvslt temp157_86 temp157_83)
             (bvslt temp157_90 temp157_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_91 #x0000000000000000))
(assert (= var1322797 temp157_91))
(assert (= temp157_92 #x0000000000000000))
(assert (= temp157_93 temp157_92))
(assert (= temp157_94 (select ARGNAME_stride_NAMEEND_VAL temp157_93)))
(assert (= temp157_95 #x0000000000000001))
(assert (= temp157_96 temp157_95))
(assert (= temp157_97 (select ARGNAME_stride_NAMEEND_VAL temp157_96)))
(assert (= temp157_98 #x0000000000000002))
(assert (= temp157_99 temp157_98))
(assert (= temp157_100 (select ARGNAME_stride_NAMEEND_VAL temp157_99)))
(assert (= temp157_101 #x0000000000000003))
(assert (= temp157_102 temp157_101))
(assert (= temp157_103 (select ARGNAME_stride_NAMEEND_VAL temp157_102)))
(assert (= temp157_104 #x0000000000000004))
(assert (= temp157_105 temp157_104))
(assert (= temp157_106 (select ARGNAME_stride_NAMEEND_VAL temp157_105)))
(assert (= temp157_107 #x0000000000000005))
(assert (= temp157_108 temp157_107))
(assert (= temp157_109 (select ARGNAME_stride_NAMEEND_VAL temp157_108)))
(assert (= temp157_110 #x0000000000000000))
(assert (= temp157_111 #x0000000000000000))
(assert (= temp157_112 temp157_111))
(assert (= temp157_113 (select ARGNAME_stride_NAMEEND_VAL temp157_112)))
(assert (= temp157_114 #x0000000000000000))
(assert (= temp157_115 #x0000000000000001))
(assert (= temp157_116 temp157_115))
(assert (= temp157_117 (select ARGNAME_stride_NAMEEND_VAL temp157_116)))
(assert (= temp157_118 #x0000000000000000))
(assert (= temp157_119 #x0000000000000002))
(assert (= temp157_120 temp157_119))
(assert (= temp157_121 (select ARGNAME_stride_NAMEEND_VAL temp157_120)))
(assert (= temp157_122 #x0000000000000000))
(assert (= temp157_123 #x0000000000000003))
(assert (= temp157_124 temp157_123))
(assert (= temp157_125 (select ARGNAME_stride_NAMEEND_VAL temp157_124)))
(assert (= temp157_126 #x0000000000000000))
(assert (= temp157_127 #x0000000000000004))
(assert (= temp157_128 temp157_127))
(assert (= temp157_129 (select ARGNAME_stride_NAMEEND_VAL temp157_128)))
(assert (= temp157_130 #x0000000000000000))
(assert (= temp157_131 #x0000000000000005))
(assert (= temp157_132 temp157_131))
(assert (= temp157_133 (select ARGNAME_stride_NAMEEND_VAL temp157_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp157_113 temp157_110)
             (bvsle temp157_117 temp157_114)
             (bvsle temp157_121 temp157_118)
             (bvsle temp157_125 temp157_122)
             (bvsle temp157_129 temp157_126)
             (bvsle temp157_133 temp157_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_134 #x0000000000000000))
(assert (= var1322807 temp157_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_135 #x0000000000000001))
(assert (= var1322819 temp157_135))
(assert (= temp157_136 #x0000000000000000))
(assert (= var1310898 temp157_136))
(assert (= temp157_137 #x0000000000000000))
(assert (= temp157_138 temp157_137))
(assert (= temp157_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_138)))
(assert (= temp157_140 #x0000000000000001))
(assert (= temp157_141 temp157_140))
(assert (= temp157_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_141)))
(assert (= temp157_143 #x0000000000000002))
(assert (= temp157_144 temp157_143))
(assert (= temp157_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_144)))
(assert (= temp157_146 #x0000000000000003))
(assert (= temp157_147 temp157_146))
(assert (= temp157_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_147)))
(assert (= temp157_149 #x0000000000000004))
(assert (= temp157_150 temp157_149))
(assert (= temp157_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_150)))
(assert (= temp157_152 #x0000000000000005))
(assert (= temp157_153 temp157_152))
(assert (= temp157_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_153)))
(assert (= temp157_156 var1310898))
(assert (= temp157_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_156)))
(assert (= temp157_155 temp157_157))
(assert (= var1322852
   (ite (bvslt temp157_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_158 #x0000000000000000))
(assert (= var1322852 temp157_158))
(assert (= temp157_159 #x0000000000000000))
(assert (= var1310898 temp157_159))
(assert (= temp157_161 var1310898))
(assert (= temp157_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_161)))
(assert (= temp157_160 temp157_162))
(assert (= var1322874 (bvsmod temp157_160 ARGNAME_groups_NAMEEND)))
(assert (= temp157_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp157_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp157_164 #x0000000000000001))
(assert (= var1322875 temp157_164))
(assert (= temp157_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp157_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_166 #x0000000000000001))
(assert (= var1322895 temp157_166))
(assert (= temp157_167 #x0000000000000001))
(assert (= var1311786 temp157_167))
(assert (= temp157_168 #x0000000000000000))
(assert (= temp157_169 temp157_168))
(assert (= temp157_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp157_169)))
(assert (= temp157_171 #x0000000000000001))
(assert (= temp157_172 temp157_171))
(assert (= temp157_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp157_172)))
(assert (= temp157_174 #x0000000000000002))
(assert (= temp157_175 temp157_174))
(assert (= temp157_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp157_175)))
(assert (= temp157_177 #x0000000000000003))
(assert (= temp157_178 temp157_177))
(assert (= temp157_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp157_178)))
(assert (= temp157_180 #x0000000000000004))
(assert (= temp157_181 temp157_180))
(assert (= temp157_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp157_181)))
(assert (= temp157_183 #x0000000000000005))
(assert (= temp157_184 temp157_183))
(assert (= temp157_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp157_184)))
(assert (= temp157_186 #x0000000000000000))
(assert (= temp157_187
   (ite (bvslt var1311786 temp157_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp157_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp157_187)))
(assert (= var1322903 temp157_188))
(assert (bvslt (ite (bvslt var1311786 temp157_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp157_189 #x0000000000000001))
(assert (= var1311786 temp157_189))
(assert (= temp157_191 var1311786))
(assert (= temp157_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_191)))
(assert (= temp157_190 temp157_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp157_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp157_193 #x0000000000000001))
(assert (= var1322908 temp157_193))
(assert (= temp157_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp157_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_195 #x0000000000000001))
(assert (= var1322975 temp157_195))
(assert (= temp157_196 #x0000000000000000))
(assert (= var1310898 temp157_196))
(assert (= temp157_197 #x0000000000000000))
(assert (= temp157_198 temp157_197))
(assert (= temp157_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp157_198)))
(assert (= temp157_200 #x0000000000000001))
(assert (= temp157_201 temp157_200))
(assert (= temp157_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp157_201)))
(assert (= temp157_203 #x0000000000000002))
(assert (= temp157_204 temp157_203))
(assert (= temp157_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp157_204)))
(assert (= temp157_206 #x0000000000000003))
(assert (= temp157_207 temp157_206))
(assert (= temp157_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp157_207)))
(assert (= temp157_209 #x0000000000000004))
(assert (= temp157_210 temp157_209))
(assert (= temp157_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp157_210)))
(assert (= temp157_212 #x0000000000000005))
(assert (= temp157_213 temp157_212))
(assert (= temp157_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp157_213)))
(assert (= temp157_215 #x0000000000000000))
(assert (= temp157_216
   (ite (bvslt var1310898 temp157_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp157_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp157_216)))
(assert (= var1322977 temp157_217))
(assert (bvslt (ite (bvslt var1310898 temp157_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp157_218 #x0000000000000000))
(assert (= var1310898 temp157_218))
(assert (= temp157_220 var1310898))
(assert (= temp157_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp157_220)))
(assert (= temp157_219 temp157_221))
(assert (= var1322980
   (ite (= var1322977 temp157_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp157_222 #x0000000000000001))
(assert (= var1322980 temp157_222))
(assert (= temp157_223 #x0000000000000002))
(assert (= var1848169 temp157_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp157_225 #x0000000000000001))
(assert (= var1323065 temp157_225))
(assert (= temp157_226 #x0000000000000001))
(assert (= var3486735 temp157_226))
(assert (= temp157_227 #x0000000000000001))
(assert (= var3814415 temp157_227))
(assert (= temp157_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp157_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_229 #x0000000000000001))
(assert (= var79986 temp157_229))
(assert (= temp157_230 #x0000000000000001))
(assert (= var80116 temp157_230))
(assert (= var4796905 var80116))
(assert (= temp157_231 #x0000000000000000))
(assert (= var4784306 temp157_231))
(assert (= temp157_232 #x0000000000000000))
(assert (= temp157_233
   (ite (bvslt var4784306 temp157_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp157_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp157_233)))
(assert (= var4796924 temp157_234))
(assert (bvslt (ite (bvslt var4784306 temp157_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp157_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp157_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp157_236 #x0000000000000001))
(assert (= var4796925 temp157_236))
(assert (= temp157_237 #x0000000000000000))
(assert (= var4996927 temp157_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp157_238 #x0000000000000002))
(assert (= var5125763 temp157_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp157_239 #x0000000000000000))
(assert (= var5191324 temp157_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp157_241 #xffffffffffffffff))
(assert (= temp157_240 temp157_241))
(assert (= temp157_242 #x0000000000000001))
(assert (= var66602 temp157_242))
(assert (= temp157_243 #x0000000000000000))
(assert (= temp157_244
   (ite (bvslt var66602 temp157_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp157_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp157_244)))
(assert (= var80523 temp157_245))
(assert (bvslt (ite (bvslt var66602 temp157_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp157_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp157_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp157_247 #x0000000000000000))
(assert (= var80524 temp157_247))
(assert (= temp157_248 #x0000000000000001))
(assert (= var79986 temp157_248))
(model-add temp157_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp157_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp157_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






