(declare-fun temp1152_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1152_2 () (_ BitVec 64))
(declare-fun temp1152_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1152_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1152_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1152_6 () (_ BitVec 64))
(declare-fun temp1152_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1152_8 () (_ BitVec 64))
(declare-fun temp1152_9 () (_ BitVec 64))
(declare-fun temp1152_10 () (_ BitVec 64))
(declare-fun temp1152_11 () (_ BitVec 64))
(declare-fun temp1152_12 () (_ BitVec 64))
(declare-fun temp1152_13 () (_ BitVec 64))
(declare-fun temp1152_14 () (_ BitVec 64))
(declare-fun temp1152_15 () (_ BitVec 64))
(declare-fun temp1152_16 () (_ BitVec 64))
(declare-fun temp1152_17 () (_ BitVec 64))
(declare-fun temp1152_18 () (_ BitVec 64))
(declare-fun temp1152_19 () (_ BitVec 64))
(declare-fun temp1152_20 () (_ BitVec 64))
(declare-fun temp1152_21 () (_ BitVec 64))
(declare-fun temp1152_22 () (_ BitVec 64))
(declare-fun temp1152_23 () (_ BitVec 64))
(declare-fun temp1152_24 () (_ BitVec 64))
(declare-fun temp1152_25 () (_ BitVec 64))
(declare-fun temp1152_26 () (_ BitVec 64))
(declare-fun temp1152_27 () (_ BitVec 64))
(declare-fun temp1152_28 () (_ BitVec 64))
(declare-fun temp1152_29 () (_ BitVec 64))
(declare-fun temp1152_30 () (_ BitVec 64))
(declare-fun temp1152_31 () (_ BitVec 64))
(declare-fun temp1152_32 () (_ BitVec 64))
(declare-fun temp1152_33 () (_ BitVec 64))
(declare-fun temp1152_34 () (_ BitVec 64))
(declare-fun temp1152_35 () (_ BitVec 64))
(declare-fun temp1152_36 () (_ BitVec 64))
(declare-fun temp1152_37 () (_ BitVec 64))
(declare-fun temp1152_38 () (_ BitVec 64))
(declare-fun temp1152_39 () (_ BitVec 64))
(declare-fun temp1152_40 () (_ BitVec 64))
(declare-fun temp1152_41 () (_ BitVec 64))
(declare-fun temp1152_42 () (_ BitVec 64))
(declare-fun temp1152_43 () (_ BitVec 64))
(declare-fun temp1152_44 () (_ BitVec 64))
(declare-fun temp1152_45 () (_ BitVec 64))
(declare-fun temp1152_46 () (_ BitVec 64))
(declare-fun temp1152_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1152_48 () (_ BitVec 64))
(declare-fun temp1152_49 () (_ BitVec 64))
(declare-fun temp1152_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1152_51 () (_ BitVec 64))
(declare-fun temp1152_52 () (_ BitVec 64))
(declare-fun temp1152_53 () (_ BitVec 64))
(declare-fun temp1152_54 () (_ BitVec 64))
(declare-fun temp1152_55 () (_ BitVec 64))
(declare-fun temp1152_56 () (_ BitVec 64))
(declare-fun temp1152_57 () (_ BitVec 64))
(declare-fun temp1152_58 () (_ BitVec 64))
(declare-fun temp1152_59 () (_ BitVec 64))
(declare-fun temp1152_60 () (_ BitVec 64))
(declare-fun temp1152_61 () (_ BitVec 64))
(declare-fun temp1152_62 () (_ BitVec 64))
(declare-fun temp1152_63 () (_ BitVec 64))
(declare-fun temp1152_64 () (_ BitVec 64))
(declare-fun temp1152_65 () (_ BitVec 64))
(declare-fun temp1152_66 () (_ BitVec 64))
(declare-fun temp1152_67 () (_ BitVec 64))
(declare-fun temp1152_68 () (_ BitVec 64))
(declare-fun temp1152_69 () (_ BitVec 64))
(declare-fun temp1152_70 () (_ BitVec 64))
(declare-fun temp1152_71 () (_ BitVec 64))
(declare-fun temp1152_72 () (_ BitVec 64))
(declare-fun temp1152_73 () (_ BitVec 64))
(declare-fun temp1152_74 () (_ BitVec 64))
(declare-fun temp1152_75 () (_ BitVec 64))
(declare-fun temp1152_76 () (_ BitVec 64))
(declare-fun temp1152_77 () (_ BitVec 64))
(declare-fun temp1152_78 () (_ BitVec 64))
(declare-fun temp1152_79 () (_ BitVec 64))
(declare-fun temp1152_80 () (_ BitVec 64))
(declare-fun temp1152_81 () (_ BitVec 64))
(declare-fun temp1152_82 () (_ BitVec 64))
(declare-fun temp1152_83 () (_ BitVec 64))
(declare-fun temp1152_84 () (_ BitVec 64))
(declare-fun temp1152_85 () (_ BitVec 64))
(declare-fun temp1152_86 () (_ BitVec 64))
(declare-fun temp1152_87 () (_ BitVec 64))
(declare-fun temp1152_88 () (_ BitVec 64))
(declare-fun temp1152_89 () (_ BitVec 64))
(declare-fun temp1152_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1152_91 () (_ BitVec 64))
(declare-fun temp1152_92 () (_ BitVec 64))
(declare-fun temp1152_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1152_94 () (_ BitVec 64))
(declare-fun temp1152_95 () (_ BitVec 64))
(declare-fun temp1152_96 () (_ BitVec 64))
(declare-fun temp1152_97 () (_ BitVec 64))
(declare-fun temp1152_98 () (_ BitVec 64))
(declare-fun temp1152_99 () (_ BitVec 64))
(declare-fun temp1152_100 () (_ BitVec 64))
(declare-fun temp1152_101 () (_ BitVec 64))
(declare-fun temp1152_102 () (_ BitVec 64))
(declare-fun temp1152_103 () (_ BitVec 64))
(declare-fun temp1152_104 () (_ BitVec 64))
(declare-fun temp1152_105 () (_ BitVec 64))
(declare-fun temp1152_106 () (_ BitVec 64))
(declare-fun temp1152_107 () (_ BitVec 64))
(declare-fun temp1152_108 () (_ BitVec 64))
(declare-fun temp1152_109 () (_ BitVec 64))
(declare-fun temp1152_110 () (_ BitVec 64))
(declare-fun temp1152_111 () (_ BitVec 64))
(declare-fun temp1152_112 () (_ BitVec 64))
(declare-fun temp1152_113 () (_ BitVec 64))
(declare-fun temp1152_114 () (_ BitVec 64))
(declare-fun temp1152_115 () (_ BitVec 64))
(declare-fun temp1152_116 () (_ BitVec 64))
(declare-fun temp1152_117 () (_ BitVec 64))
(declare-fun temp1152_118 () (_ BitVec 64))
(declare-fun temp1152_119 () (_ BitVec 64))
(declare-fun temp1152_120 () (_ BitVec 64))
(declare-fun temp1152_121 () (_ BitVec 64))
(declare-fun temp1152_122 () (_ BitVec 64))
(declare-fun temp1152_123 () (_ BitVec 64))
(declare-fun temp1152_124 () (_ BitVec 64))
(declare-fun temp1152_125 () (_ BitVec 64))
(declare-fun temp1152_126 () (_ BitVec 64))
(declare-fun temp1152_127 () (_ BitVec 64))
(declare-fun temp1152_128 () (_ BitVec 64))
(declare-fun temp1152_129 () (_ BitVec 64))
(declare-fun temp1152_130 () (_ BitVec 64))
(declare-fun temp1152_131 () (_ BitVec 64))
(declare-fun temp1152_132 () (_ BitVec 64))
(declare-fun temp1152_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1152_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1152_135 () (_ BitVec 64))
(declare-fun temp1152_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1152_137 () (_ BitVec 64))
(declare-fun temp1152_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1152_139 () (_ BitVec 64))
(declare-fun temp1152_140 () (_ BitVec 64))
(declare-fun temp1152_141 () (_ BitVec 64))
(declare-fun temp1152_142 () (_ BitVec 64))
(declare-fun temp1152_143 () (_ BitVec 64))
(declare-fun temp1152_144 () (_ BitVec 64))
(declare-fun temp1152_145 () (_ BitVec 64))
(declare-fun temp1152_146 () (_ BitVec 64))
(declare-fun temp1152_147 () (_ BitVec 64))
(declare-fun temp1152_148 () (_ BitVec 64))
(declare-fun temp1152_149 () (_ BitVec 64))
(declare-fun temp1152_150 () (_ BitVec 64))
(declare-fun temp1152_151 () (_ BitVec 64))
(declare-fun temp1152_152 () (_ BitVec 64))
(declare-fun temp1152_153 () (_ BitVec 64))
(declare-fun temp1152_154 () (_ BitVec 64))
(declare-fun temp1152_156 () (_ BitVec 64))
(declare-fun temp1152_157 () (_ BitVec 64))
(declare-fun temp1152_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1152_158 () (_ BitVec 64))
(declare-fun temp1152_159 () (_ BitVec 64))
(declare-fun temp1152_161 () (_ BitVec 64))
(declare-fun temp1152_162 () (_ BitVec 64))
(declare-fun temp1152_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1152_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1152_164 () (_ BitVec 64))
(declare-fun temp1152_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1152_166 () (_ BitVec 64))
(declare-fun temp1152_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1152_168 () (_ BitVec 64))
(declare-fun temp1152_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1152_170 () (_ BitVec 64))
(declare-fun temp1152_171 () (_ BitVec 64))
(declare-fun temp1152_172 () (_ BitVec 64))
(declare-fun temp1152_173 () (_ BitVec 64))
(declare-fun temp1152_174 () (_ BitVec 64))
(declare-fun temp1152_175 () (_ BitVec 64))
(declare-fun temp1152_176 () (_ BitVec 64))
(declare-fun temp1152_177 () (_ BitVec 64))
(declare-fun temp1152_178 () (_ BitVec 64))
(declare-fun temp1152_179 () (_ BitVec 64))
(declare-fun temp1152_180 () (_ BitVec 64))
(declare-fun temp1152_181 () (_ BitVec 64))
(declare-fun temp1152_182 () (_ BitVec 64))
(declare-fun temp1152_183 () (_ BitVec 64))
(declare-fun temp1152_184 () (_ BitVec 64))
(declare-fun temp1152_185 () (_ BitVec 64))
(declare-fun temp1152_186 () (_ BitVec 64))
(declare-fun temp1152_187 () (_ BitVec 64))
(declare-fun temp1152_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1152_189 () (_ BitVec 64))
(declare-fun temp1152_191 () (_ BitVec 64))
(declare-fun temp1152_192 () (_ BitVec 64))
(declare-fun temp1152_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1152_193 () (_ BitVec 64))
(declare-fun temp1152_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1152_195 () (_ BitVec 64))
(declare-fun temp1152_196 () (_ BitVec 64))
(declare-fun temp1152_197 () (_ BitVec 64))
(declare-fun temp1152_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1152_199 () (_ BitVec 64))
(declare-fun temp1152_200 () (_ BitVec 64))
(declare-fun temp1152_201 () (_ BitVec 64))
(declare-fun temp1152_202 () (_ BitVec 64))
(declare-fun temp1152_203 () (_ BitVec 64))
(declare-fun temp1152_204 () (_ BitVec 64))
(declare-fun temp1152_205 () (_ BitVec 64))
(declare-fun temp1152_206 () (_ BitVec 64))
(declare-fun temp1152_207 () (_ BitVec 64))
(declare-fun temp1152_208 () (_ BitVec 64))
(declare-fun temp1152_209 () (_ BitVec 64))
(declare-fun temp1152_210 () (_ BitVec 64))
(declare-fun temp1152_211 () (_ BitVec 64))
(declare-fun temp1152_212 () (_ BitVec 64))
(declare-fun temp1152_213 () (_ BitVec 64))
(declare-fun temp1152_214 () (_ BitVec 64))
(declare-fun temp1152_215 () (_ BitVec 64))
(declare-fun temp1152_216 () (_ BitVec 64))
(declare-fun temp1152_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1152_218 () (_ BitVec 64))
(declare-fun temp1152_220 () (_ BitVec 64))
(declare-fun temp1152_221 () (_ BitVec 64))
(declare-fun temp1152_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1152_222 () (_ BitVec 64))
(declare-fun temp1152_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1152_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1152_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1152_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1152_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1152_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1152_229 () (_ BitVec 64))
(declare-fun temp1152_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1152_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1152_232 () (_ BitVec 64))
(declare-fun temp1152_233 () (_ BitVec 64))
(declare-fun temp1152_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1152_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1152_236 () (_ BitVec 64))
(declare-fun temp1152_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1152_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1152_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp1152_240 () (_ BitVec 64))
(declare-fun var81342 () (_ BitVec 64))
(declare-fun temp1152_241 () (_ BitVec 64))
(declare-fun temp1152_242 () (_ BitVec 64))
(declare-fun var5977731 () (_ BitVec 64))
(declare-fun var6043276 () (_ BitVec 64))
(declare-fun var6043317 () (_ BitVec 64))
(declare-fun temp1152_243 () (_ BitVec 64))
(assert (= temp1152_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1152_1)))
(assert (= temp1152_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1152_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_3 #x0000000000000000))
(assert (= var79869 temp1152_3))
(assert (= temp1152_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1152_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_5 #x0000000000000000))
(assert (= var79914 temp1152_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1152_6 #x0000000000000000))
(assert (= temp1152_7 temp1152_6))
(assert (= temp1152_8 (select ARGNAME_padding_NAMEEND_VAL temp1152_7)))
(assert (= temp1152_9 #x0000000000000001))
(assert (= temp1152_10 temp1152_9))
(assert (= temp1152_11 (select ARGNAME_padding_NAMEEND_VAL temp1152_10)))
(assert (= temp1152_12 #x0000000000000002))
(assert (= temp1152_13 temp1152_12))
(assert (= temp1152_14 (select ARGNAME_padding_NAMEEND_VAL temp1152_13)))
(assert (= temp1152_15 #x0000000000000003))
(assert (= temp1152_16 temp1152_15))
(assert (= temp1152_17 (select ARGNAME_padding_NAMEEND_VAL temp1152_16)))
(assert (= temp1152_18 #x0000000000000004))
(assert (= temp1152_19 temp1152_18))
(assert (= temp1152_20 (select ARGNAME_padding_NAMEEND_VAL temp1152_19)))
(assert (= temp1152_21 #x0000000000000005))
(assert (= temp1152_22 temp1152_21))
(assert (= temp1152_23 (select ARGNAME_padding_NAMEEND_VAL temp1152_22)))
(assert (= temp1152_24 #x0000000000000000))
(assert (= temp1152_25 #x0000000000000000))
(assert (= temp1152_26 temp1152_25))
(assert (= temp1152_27 (select ARGNAME_padding_NAMEEND_VAL temp1152_26)))
(assert (= temp1152_28 #x0000000000000000))
(assert (= temp1152_29 #x0000000000000001))
(assert (= temp1152_30 temp1152_29))
(assert (= temp1152_31 (select ARGNAME_padding_NAMEEND_VAL temp1152_30)))
(assert (= temp1152_32 #x0000000000000000))
(assert (= temp1152_33 #x0000000000000002))
(assert (= temp1152_34 temp1152_33))
(assert (= temp1152_35 (select ARGNAME_padding_NAMEEND_VAL temp1152_34)))
(assert (= temp1152_36 #x0000000000000000))
(assert (= temp1152_37 #x0000000000000003))
(assert (= temp1152_38 temp1152_37))
(assert (= temp1152_39 (select ARGNAME_padding_NAMEEND_VAL temp1152_38)))
(assert (= temp1152_40 #x0000000000000000))
(assert (= temp1152_41 #x0000000000000004))
(assert (= temp1152_42 temp1152_41))
(assert (= temp1152_43 (select ARGNAME_padding_NAMEEND_VAL temp1152_42)))
(assert (= temp1152_44 #x0000000000000000))
(assert (= temp1152_45 #x0000000000000005))
(assert (= temp1152_46 temp1152_45))
(assert (= temp1152_47 (select ARGNAME_padding_NAMEEND_VAL temp1152_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1152_27 temp1152_24)
             (bvslt temp1152_31 temp1152_28)
             (bvslt temp1152_35 temp1152_32)
             (bvslt temp1152_39 temp1152_36)
             (bvslt temp1152_43 temp1152_40)
             (bvslt temp1152_47 temp1152_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_48 #x0000000000000000))
(assert (= var1322786 temp1152_48))
(assert (= temp1152_49 #x0000000000000000))
(assert (= temp1152_50 temp1152_49))
(assert (= temp1152_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_50)))
(assert (= temp1152_52 #x0000000000000001))
(assert (= temp1152_53 temp1152_52))
(assert (= temp1152_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_53)))
(assert (= temp1152_55 #x0000000000000002))
(assert (= temp1152_56 temp1152_55))
(assert (= temp1152_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_56)))
(assert (= temp1152_58 #x0000000000000003))
(assert (= temp1152_59 temp1152_58))
(assert (= temp1152_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_59)))
(assert (= temp1152_61 #x0000000000000004))
(assert (= temp1152_62 temp1152_61))
(assert (= temp1152_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_62)))
(assert (= temp1152_64 #x0000000000000005))
(assert (= temp1152_65 temp1152_64))
(assert (= temp1152_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_65)))
(assert (= temp1152_67 #x0000000000000000))
(assert (= temp1152_68 #x0000000000000000))
(assert (= temp1152_69 temp1152_68))
(assert (= temp1152_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_69)))
(assert (= temp1152_71 #x0000000000000000))
(assert (= temp1152_72 #x0000000000000001))
(assert (= temp1152_73 temp1152_72))
(assert (= temp1152_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_73)))
(assert (= temp1152_75 #x0000000000000000))
(assert (= temp1152_76 #x0000000000000002))
(assert (= temp1152_77 temp1152_76))
(assert (= temp1152_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_77)))
(assert (= temp1152_79 #x0000000000000000))
(assert (= temp1152_80 #x0000000000000003))
(assert (= temp1152_81 temp1152_80))
(assert (= temp1152_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_81)))
(assert (= temp1152_83 #x0000000000000000))
(assert (= temp1152_84 #x0000000000000004))
(assert (= temp1152_85 temp1152_84))
(assert (= temp1152_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_85)))
(assert (= temp1152_87 #x0000000000000000))
(assert (= temp1152_88 #x0000000000000005))
(assert (= temp1152_89 temp1152_88))
(assert (= temp1152_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1152_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1152_70 temp1152_67)
             (bvslt temp1152_74 temp1152_71)
             (bvslt temp1152_78 temp1152_75)
             (bvslt temp1152_82 temp1152_79)
             (bvslt temp1152_86 temp1152_83)
             (bvslt temp1152_90 temp1152_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_91 #x0000000000000000))
(assert (= var1322797 temp1152_91))
(assert (= temp1152_92 #x0000000000000000))
(assert (= temp1152_93 temp1152_92))
(assert (= temp1152_94 (select ARGNAME_stride_NAMEEND_VAL temp1152_93)))
(assert (= temp1152_95 #x0000000000000001))
(assert (= temp1152_96 temp1152_95))
(assert (= temp1152_97 (select ARGNAME_stride_NAMEEND_VAL temp1152_96)))
(assert (= temp1152_98 #x0000000000000002))
(assert (= temp1152_99 temp1152_98))
(assert (= temp1152_100 (select ARGNAME_stride_NAMEEND_VAL temp1152_99)))
(assert (= temp1152_101 #x0000000000000003))
(assert (= temp1152_102 temp1152_101))
(assert (= temp1152_103 (select ARGNAME_stride_NAMEEND_VAL temp1152_102)))
(assert (= temp1152_104 #x0000000000000004))
(assert (= temp1152_105 temp1152_104))
(assert (= temp1152_106 (select ARGNAME_stride_NAMEEND_VAL temp1152_105)))
(assert (= temp1152_107 #x0000000000000005))
(assert (= temp1152_108 temp1152_107))
(assert (= temp1152_109 (select ARGNAME_stride_NAMEEND_VAL temp1152_108)))
(assert (= temp1152_110 #x0000000000000000))
(assert (= temp1152_111 #x0000000000000000))
(assert (= temp1152_112 temp1152_111))
(assert (= temp1152_113 (select ARGNAME_stride_NAMEEND_VAL temp1152_112)))
(assert (= temp1152_114 #x0000000000000000))
(assert (= temp1152_115 #x0000000000000001))
(assert (= temp1152_116 temp1152_115))
(assert (= temp1152_117 (select ARGNAME_stride_NAMEEND_VAL temp1152_116)))
(assert (= temp1152_118 #x0000000000000000))
(assert (= temp1152_119 #x0000000000000002))
(assert (= temp1152_120 temp1152_119))
(assert (= temp1152_121 (select ARGNAME_stride_NAMEEND_VAL temp1152_120)))
(assert (= temp1152_122 #x0000000000000000))
(assert (= temp1152_123 #x0000000000000003))
(assert (= temp1152_124 temp1152_123))
(assert (= temp1152_125 (select ARGNAME_stride_NAMEEND_VAL temp1152_124)))
(assert (= temp1152_126 #x0000000000000000))
(assert (= temp1152_127 #x0000000000000004))
(assert (= temp1152_128 temp1152_127))
(assert (= temp1152_129 (select ARGNAME_stride_NAMEEND_VAL temp1152_128)))
(assert (= temp1152_130 #x0000000000000000))
(assert (= temp1152_131 #x0000000000000005))
(assert (= temp1152_132 temp1152_131))
(assert (= temp1152_133 (select ARGNAME_stride_NAMEEND_VAL temp1152_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1152_113 temp1152_110)
             (bvsle temp1152_117 temp1152_114)
             (bvsle temp1152_121 temp1152_118)
             (bvsle temp1152_125 temp1152_122)
             (bvsle temp1152_129 temp1152_126)
             (bvsle temp1152_133 temp1152_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_134 #x0000000000000000))
(assert (= var1322807 temp1152_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_135 #x0000000000000001))
(assert (= var1322819 temp1152_135))
(assert (= temp1152_136 #x0000000000000000))
(assert (= var1310898 temp1152_136))
(assert (= temp1152_137 #x0000000000000000))
(assert (= temp1152_138 temp1152_137))
(assert (= temp1152_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_138)))
(assert (= temp1152_140 #x0000000000000001))
(assert (= temp1152_141 temp1152_140))
(assert (= temp1152_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_141)))
(assert (= temp1152_143 #x0000000000000002))
(assert (= temp1152_144 temp1152_143))
(assert (= temp1152_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_144)))
(assert (= temp1152_146 #x0000000000000003))
(assert (= temp1152_147 temp1152_146))
(assert (= temp1152_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_147)))
(assert (= temp1152_149 #x0000000000000004))
(assert (= temp1152_150 temp1152_149))
(assert (= temp1152_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_150)))
(assert (= temp1152_152 #x0000000000000005))
(assert (= temp1152_153 temp1152_152))
(assert (= temp1152_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_153)))
(assert (= temp1152_156 var1310898))
(assert (= temp1152_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_156)))
(assert (= temp1152_155 temp1152_157))
(assert (= var1322852
   (ite (bvslt temp1152_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_158 #x0000000000000000))
(assert (= var1322852 temp1152_158))
(assert (= temp1152_159 #x0000000000000000))
(assert (= var1310898 temp1152_159))
(assert (= temp1152_161 var1310898))
(assert (= temp1152_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_161)))
(assert (= temp1152_160 temp1152_162))
(assert (= var1322874 (bvsmod temp1152_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1152_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1152_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1152_164 #x0000000000000001))
(assert (= var1322875 temp1152_164))
(assert (= temp1152_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1152_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_166 #x0000000000000001))
(assert (= var1322895 temp1152_166))
(assert (= temp1152_167 #x0000000000000001))
(assert (= var1311786 temp1152_167))
(assert (= temp1152_168 #x0000000000000000))
(assert (= temp1152_169 temp1152_168))
(assert (= temp1152_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1152_169)))
(assert (= temp1152_171 #x0000000000000001))
(assert (= temp1152_172 temp1152_171))
(assert (= temp1152_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1152_172)))
(assert (= temp1152_174 #x0000000000000002))
(assert (= temp1152_175 temp1152_174))
(assert (= temp1152_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1152_175)))
(assert (= temp1152_177 #x0000000000000003))
(assert (= temp1152_178 temp1152_177))
(assert (= temp1152_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1152_178)))
(assert (= temp1152_180 #x0000000000000004))
(assert (= temp1152_181 temp1152_180))
(assert (= temp1152_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1152_181)))
(assert (= temp1152_183 #x0000000000000005))
(assert (= temp1152_184 temp1152_183))
(assert (= temp1152_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1152_184)))
(assert (= temp1152_186 #x0000000000000000))
(assert (= temp1152_187
   (ite (bvslt var1311786 temp1152_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1152_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1152_187)))
(assert (= var1322903 temp1152_188))
(assert (bvslt (ite (bvslt var1311786 temp1152_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1152_189 #x0000000000000001))
(assert (= var1311786 temp1152_189))
(assert (= temp1152_191 var1311786))
(assert (= temp1152_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_191)))
(assert (= temp1152_190 temp1152_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1152_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1152_193 #x0000000000000001))
(assert (= var1322908 temp1152_193))
(assert (= temp1152_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1152_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_195 #x0000000000000001))
(assert (= var1322975 temp1152_195))
(assert (= temp1152_196 #x0000000000000000))
(assert (= var1310898 temp1152_196))
(assert (= temp1152_197 #x0000000000000000))
(assert (= temp1152_198 temp1152_197))
(assert (= temp1152_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1152_198)))
(assert (= temp1152_200 #x0000000000000001))
(assert (= temp1152_201 temp1152_200))
(assert (= temp1152_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1152_201)))
(assert (= temp1152_203 #x0000000000000002))
(assert (= temp1152_204 temp1152_203))
(assert (= temp1152_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1152_204)))
(assert (= temp1152_206 #x0000000000000003))
(assert (= temp1152_207 temp1152_206))
(assert (= temp1152_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1152_207)))
(assert (= temp1152_209 #x0000000000000004))
(assert (= temp1152_210 temp1152_209))
(assert (= temp1152_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1152_210)))
(assert (= temp1152_212 #x0000000000000005))
(assert (= temp1152_213 temp1152_212))
(assert (= temp1152_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1152_213)))
(assert (= temp1152_215 #x0000000000000000))
(assert (= temp1152_216
   (ite (bvslt var1310898 temp1152_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1152_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1152_216)))
(assert (= var1322977 temp1152_217))
(assert (bvslt (ite (bvslt var1310898 temp1152_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1152_218 #x0000000000000000))
(assert (= var1310898 temp1152_218))
(assert (= temp1152_220 var1310898))
(assert (= temp1152_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1152_220)))
(assert (= temp1152_219 temp1152_221))
(assert (= var1322980
   (ite (= var1322977 temp1152_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1152_222 #x0000000000000001))
(assert (= var1322980 temp1152_222))
(assert (= temp1152_223 #x0000000000000002))
(assert (= var1848169 temp1152_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1152_225 #x0000000000000001))
(assert (= var1323065 temp1152_225))
(assert (= temp1152_226 #x0000000000000001))
(assert (= var3486735 temp1152_226))
(assert (= temp1152_227 #x0000000000000001))
(assert (= var3814415 temp1152_227))
(assert (= temp1152_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1152_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_229 #x0000000000000001))
(assert (= var79986 temp1152_229))
(assert (= temp1152_230 #x0000000000000001))
(assert (= var80116 temp1152_230))
(assert (= var4796905 var80116))
(assert (= temp1152_231 #x0000000000000000))
(assert (= var4784306 temp1152_231))
(assert (= temp1152_232 #x0000000000000000))
(assert (= temp1152_233
   (ite (bvslt var4784306 temp1152_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1152_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1152_233)))
(assert (= var4796924 temp1152_234))
(assert (bvslt (ite (bvslt var4784306 temp1152_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1152_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1152_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1152_236 #x0000000000000001))
(assert (= var4796925 temp1152_236))
(assert (= temp1152_237 #x0000000000000000))
(assert (= var4996927 temp1152_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1152_238 #x0000000000000002))
(assert (= var5125763 temp1152_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_239 #x0000000000000000))
(assert (= var5191324 temp1152_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5386640 var80129))
(assert (= var5648784 var80129))
(assert (= temp1152_240 #x0000000000000001))
(assert (= var81342
   (ite (= ARGNAME_groups_NAMEEND temp1152_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1152_241 #x0000000000000000))
(assert (= var81342 temp1152_241))
(assert (= temp1152_242 #x0000000000000002))
(assert (= var5977731 temp1152_242))
(assert (= var6043276 var5977731))
(assert (= var6043317 var6043276))
(assert (= temp1152_243 #x0000000000000001))
(assert (= var79986 temp1152_243))
(model-add temp1152_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1152_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1152_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






