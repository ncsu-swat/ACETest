(declare-fun temp678_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp678_2 () (_ BitVec 64))
(declare-fun temp678_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp678_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp678_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp678_6 () (_ BitVec 64))
(declare-fun temp678_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_8 () (_ BitVec 64))
(declare-fun temp678_9 () (_ BitVec 64))
(declare-fun temp678_10 () (_ BitVec 64))
(declare-fun temp678_11 () (_ BitVec 64))
(declare-fun temp678_12 () (_ BitVec 64))
(declare-fun temp678_13 () (_ BitVec 64))
(declare-fun temp678_14 () (_ BitVec 64))
(declare-fun temp678_15 () (_ BitVec 64))
(declare-fun temp678_16 () (_ BitVec 64))
(declare-fun temp678_17 () (_ BitVec 64))
(declare-fun temp678_18 () (_ BitVec 64))
(declare-fun temp678_19 () (_ BitVec 64))
(declare-fun temp678_20 () (_ BitVec 64))
(declare-fun temp678_21 () (_ BitVec 64))
(declare-fun temp678_22 () (_ BitVec 64))
(declare-fun temp678_23 () (_ BitVec 64))
(declare-fun temp678_24 () (_ BitVec 64))
(declare-fun temp678_25 () (_ BitVec 64))
(declare-fun temp678_26 () (_ BitVec 64))
(declare-fun temp678_27 () (_ BitVec 64))
(declare-fun temp678_28 () (_ BitVec 64))
(declare-fun temp678_29 () (_ BitVec 64))
(declare-fun temp678_30 () (_ BitVec 64))
(declare-fun temp678_31 () (_ BitVec 64))
(declare-fun temp678_32 () (_ BitVec 64))
(declare-fun temp678_33 () (_ BitVec 64))
(declare-fun temp678_34 () (_ BitVec 64))
(declare-fun temp678_35 () (_ BitVec 64))
(declare-fun temp678_36 () (_ BitVec 64))
(declare-fun temp678_37 () (_ BitVec 64))
(declare-fun temp678_38 () (_ BitVec 64))
(declare-fun temp678_39 () (_ BitVec 64))
(declare-fun temp678_40 () (_ BitVec 64))
(declare-fun temp678_41 () (_ BitVec 64))
(declare-fun temp678_42 () (_ BitVec 64))
(declare-fun temp678_43 () (_ BitVec 64))
(declare-fun temp678_44 () (_ BitVec 64))
(declare-fun temp678_45 () (_ BitVec 64))
(declare-fun temp678_46 () (_ BitVec 64))
(declare-fun temp678_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp678_48 () (_ BitVec 64))
(declare-fun temp678_49 () (_ BitVec 64))
(declare-fun temp678_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_51 () (_ BitVec 64))
(declare-fun temp678_52 () (_ BitVec 64))
(declare-fun temp678_53 () (_ BitVec 64))
(declare-fun temp678_54 () (_ BitVec 64))
(declare-fun temp678_55 () (_ BitVec 64))
(declare-fun temp678_56 () (_ BitVec 64))
(declare-fun temp678_57 () (_ BitVec 64))
(declare-fun temp678_58 () (_ BitVec 64))
(declare-fun temp678_59 () (_ BitVec 64))
(declare-fun temp678_60 () (_ BitVec 64))
(declare-fun temp678_61 () (_ BitVec 64))
(declare-fun temp678_62 () (_ BitVec 64))
(declare-fun temp678_63 () (_ BitVec 64))
(declare-fun temp678_64 () (_ BitVec 64))
(declare-fun temp678_65 () (_ BitVec 64))
(declare-fun temp678_66 () (_ BitVec 64))
(declare-fun temp678_67 () (_ BitVec 64))
(declare-fun temp678_68 () (_ BitVec 64))
(declare-fun temp678_69 () (_ BitVec 64))
(declare-fun temp678_70 () (_ BitVec 64))
(declare-fun temp678_71 () (_ BitVec 64))
(declare-fun temp678_72 () (_ BitVec 64))
(declare-fun temp678_73 () (_ BitVec 64))
(declare-fun temp678_74 () (_ BitVec 64))
(declare-fun temp678_75 () (_ BitVec 64))
(declare-fun temp678_76 () (_ BitVec 64))
(declare-fun temp678_77 () (_ BitVec 64))
(declare-fun temp678_78 () (_ BitVec 64))
(declare-fun temp678_79 () (_ BitVec 64))
(declare-fun temp678_80 () (_ BitVec 64))
(declare-fun temp678_81 () (_ BitVec 64))
(declare-fun temp678_82 () (_ BitVec 64))
(declare-fun temp678_83 () (_ BitVec 64))
(declare-fun temp678_84 () (_ BitVec 64))
(declare-fun temp678_85 () (_ BitVec 64))
(declare-fun temp678_86 () (_ BitVec 64))
(declare-fun temp678_87 () (_ BitVec 64))
(declare-fun temp678_88 () (_ BitVec 64))
(declare-fun temp678_89 () (_ BitVec 64))
(declare-fun temp678_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp678_91 () (_ BitVec 64))
(declare-fun temp678_92 () (_ BitVec 64))
(declare-fun temp678_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_94 () (_ BitVec 64))
(declare-fun temp678_95 () (_ BitVec 64))
(declare-fun temp678_96 () (_ BitVec 64))
(declare-fun temp678_97 () (_ BitVec 64))
(declare-fun temp678_98 () (_ BitVec 64))
(declare-fun temp678_99 () (_ BitVec 64))
(declare-fun temp678_100 () (_ BitVec 64))
(declare-fun temp678_101 () (_ BitVec 64))
(declare-fun temp678_102 () (_ BitVec 64))
(declare-fun temp678_103 () (_ BitVec 64))
(declare-fun temp678_104 () (_ BitVec 64))
(declare-fun temp678_105 () (_ BitVec 64))
(declare-fun temp678_106 () (_ BitVec 64))
(declare-fun temp678_107 () (_ BitVec 64))
(declare-fun temp678_108 () (_ BitVec 64))
(declare-fun temp678_109 () (_ BitVec 64))
(declare-fun temp678_110 () (_ BitVec 64))
(declare-fun temp678_111 () (_ BitVec 64))
(declare-fun temp678_112 () (_ BitVec 64))
(declare-fun temp678_113 () (_ BitVec 64))
(declare-fun temp678_114 () (_ BitVec 64))
(declare-fun temp678_115 () (_ BitVec 64))
(declare-fun temp678_116 () (_ BitVec 64))
(declare-fun temp678_117 () (_ BitVec 64))
(declare-fun temp678_118 () (_ BitVec 64))
(declare-fun temp678_119 () (_ BitVec 64))
(declare-fun temp678_120 () (_ BitVec 64))
(declare-fun temp678_121 () (_ BitVec 64))
(declare-fun temp678_122 () (_ BitVec 64))
(declare-fun temp678_123 () (_ BitVec 64))
(declare-fun temp678_124 () (_ BitVec 64))
(declare-fun temp678_125 () (_ BitVec 64))
(declare-fun temp678_126 () (_ BitVec 64))
(declare-fun temp678_127 () (_ BitVec 64))
(declare-fun temp678_128 () (_ BitVec 64))
(declare-fun temp678_129 () (_ BitVec 64))
(declare-fun temp678_130 () (_ BitVec 64))
(declare-fun temp678_131 () (_ BitVec 64))
(declare-fun temp678_132 () (_ BitVec 64))
(declare-fun temp678_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp678_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp678_135 () (_ BitVec 64))
(declare-fun temp678_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp678_137 () (_ BitVec 64))
(declare-fun temp678_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_139 () (_ BitVec 64))
(declare-fun temp678_140 () (_ BitVec 64))
(declare-fun temp678_141 () (_ BitVec 64))
(declare-fun temp678_142 () (_ BitVec 64))
(declare-fun temp678_143 () (_ BitVec 64))
(declare-fun temp678_144 () (_ BitVec 64))
(declare-fun temp678_145 () (_ BitVec 64))
(declare-fun temp678_146 () (_ BitVec 64))
(declare-fun temp678_147 () (_ BitVec 64))
(declare-fun temp678_148 () (_ BitVec 64))
(declare-fun temp678_149 () (_ BitVec 64))
(declare-fun temp678_150 () (_ BitVec 64))
(declare-fun temp678_151 () (_ BitVec 64))
(declare-fun temp678_152 () (_ BitVec 64))
(declare-fun temp678_153 () (_ BitVec 64))
(declare-fun temp678_154 () (_ BitVec 64))
(declare-fun temp678_156 () (_ BitVec 64))
(declare-fun temp678_157 () (_ BitVec 64))
(declare-fun temp678_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp678_158 () (_ BitVec 64))
(declare-fun temp678_159 () (_ BitVec 64))
(declare-fun temp678_161 () (_ BitVec 64))
(declare-fun temp678_162 () (_ BitVec 64))
(declare-fun temp678_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp678_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp678_164 () (_ BitVec 64))
(declare-fun temp678_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp678_166 () (_ BitVec 64))
(declare-fun temp678_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp678_168 () (_ BitVec 64))
(declare-fun temp678_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_170 () (_ BitVec 64))
(declare-fun temp678_171 () (_ BitVec 64))
(declare-fun temp678_172 () (_ BitVec 64))
(declare-fun temp678_173 () (_ BitVec 64))
(declare-fun temp678_174 () (_ BitVec 64))
(declare-fun temp678_175 () (_ BitVec 64))
(declare-fun temp678_176 () (_ BitVec 64))
(declare-fun temp678_177 () (_ BitVec 64))
(declare-fun temp678_178 () (_ BitVec 64))
(declare-fun temp678_179 () (_ BitVec 64))
(declare-fun temp678_180 () (_ BitVec 64))
(declare-fun temp678_181 () (_ BitVec 64))
(declare-fun temp678_182 () (_ BitVec 64))
(declare-fun temp678_183 () (_ BitVec 64))
(declare-fun temp678_184 () (_ BitVec 64))
(declare-fun temp678_185 () (_ BitVec 64))
(declare-fun temp678_186 () (_ BitVec 64))
(declare-fun temp678_187 () (_ BitVec 64))
(declare-fun temp678_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp678_189 () (_ BitVec 64))
(declare-fun temp678_191 () (_ BitVec 64))
(declare-fun temp678_192 () (_ BitVec 64))
(declare-fun temp678_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp678_193 () (_ BitVec 64))
(declare-fun temp678_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp678_195 () (_ BitVec 64))
(declare-fun temp678_196 () (_ BitVec 64))
(declare-fun temp678_197 () (_ BitVec 64))
(declare-fun temp678_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_199 () (_ BitVec 64))
(declare-fun temp678_200 () (_ BitVec 64))
(declare-fun temp678_201 () (_ BitVec 64))
(declare-fun temp678_202 () (_ BitVec 64))
(declare-fun temp678_203 () (_ BitVec 64))
(declare-fun temp678_204 () (_ BitVec 64))
(declare-fun temp678_205 () (_ BitVec 64))
(declare-fun temp678_206 () (_ BitVec 64))
(declare-fun temp678_207 () (_ BitVec 64))
(declare-fun temp678_208 () (_ BitVec 64))
(declare-fun temp678_209 () (_ BitVec 64))
(declare-fun temp678_210 () (_ BitVec 64))
(declare-fun temp678_211 () (_ BitVec 64))
(declare-fun temp678_212 () (_ BitVec 64))
(declare-fun temp678_213 () (_ BitVec 64))
(declare-fun temp678_214 () (_ BitVec 64))
(declare-fun temp678_215 () (_ BitVec 64))
(declare-fun temp678_216 () (_ BitVec 64))
(declare-fun temp678_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp678_218 () (_ BitVec 64))
(declare-fun temp678_220 () (_ BitVec 64))
(declare-fun temp678_221 () (_ BitVec 64))
(declare-fun temp678_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp678_222 () (_ BitVec 64))
(declare-fun temp678_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp678_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp678_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp678_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp678_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp678_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp678_229 () (_ BitVec 64))
(declare-fun temp678_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp678_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp678_232 () (_ BitVec 64))
(declare-fun temp678_233 () (_ BitVec 64))
(declare-fun temp678_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp678_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp678_236 () (_ BitVec 64))
(declare-fun temp678_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp678_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp678_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp678_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp678_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp678_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp678_244 () (_ BitVec 64))
(declare-fun temp678_243 () (_ BitVec 64))
(declare-fun temp678_245 () (_ BitVec 64))
(declare-fun var8130026 () (_ BitVec 64))
(declare-fun temp678_247 () (_ BitVec 64))
(declare-fun temp678_246 () (_ BitVec 64))
(declare-fun temp678_248 () (_ BitVec 64))
(assert (= temp678_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp678_1)))
(assert (= temp678_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp678_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_3 #x0000000000000000))
(assert (= var79869 temp678_3))
(assert (= temp678_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp678_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_5 #x0000000000000000))
(assert (= var79914 temp678_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp678_6 #x0000000000000000))
(assert (= temp678_7 temp678_6))
(assert (= temp678_8 (select ARGNAME_padding_NAMEEND_VAL temp678_7)))
(assert (= temp678_9 #x0000000000000001))
(assert (= temp678_10 temp678_9))
(assert (= temp678_11 (select ARGNAME_padding_NAMEEND_VAL temp678_10)))
(assert (= temp678_12 #x0000000000000002))
(assert (= temp678_13 temp678_12))
(assert (= temp678_14 (select ARGNAME_padding_NAMEEND_VAL temp678_13)))
(assert (= temp678_15 #x0000000000000003))
(assert (= temp678_16 temp678_15))
(assert (= temp678_17 (select ARGNAME_padding_NAMEEND_VAL temp678_16)))
(assert (= temp678_18 #x0000000000000004))
(assert (= temp678_19 temp678_18))
(assert (= temp678_20 (select ARGNAME_padding_NAMEEND_VAL temp678_19)))
(assert (= temp678_21 #x0000000000000005))
(assert (= temp678_22 temp678_21))
(assert (= temp678_23 (select ARGNAME_padding_NAMEEND_VAL temp678_22)))
(assert (= temp678_24 #x0000000000000000))
(assert (= temp678_25 #x0000000000000000))
(assert (= temp678_26 temp678_25))
(assert (= temp678_27 (select ARGNAME_padding_NAMEEND_VAL temp678_26)))
(assert (= temp678_28 #x0000000000000000))
(assert (= temp678_29 #x0000000000000001))
(assert (= temp678_30 temp678_29))
(assert (= temp678_31 (select ARGNAME_padding_NAMEEND_VAL temp678_30)))
(assert (= temp678_32 #x0000000000000000))
(assert (= temp678_33 #x0000000000000002))
(assert (= temp678_34 temp678_33))
(assert (= temp678_35 (select ARGNAME_padding_NAMEEND_VAL temp678_34)))
(assert (= temp678_36 #x0000000000000000))
(assert (= temp678_37 #x0000000000000003))
(assert (= temp678_38 temp678_37))
(assert (= temp678_39 (select ARGNAME_padding_NAMEEND_VAL temp678_38)))
(assert (= temp678_40 #x0000000000000000))
(assert (= temp678_41 #x0000000000000004))
(assert (= temp678_42 temp678_41))
(assert (= temp678_43 (select ARGNAME_padding_NAMEEND_VAL temp678_42)))
(assert (= temp678_44 #x0000000000000000))
(assert (= temp678_45 #x0000000000000005))
(assert (= temp678_46 temp678_45))
(assert (= temp678_47 (select ARGNAME_padding_NAMEEND_VAL temp678_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp678_27 temp678_24)
             (bvslt temp678_31 temp678_28)
             (bvslt temp678_35 temp678_32)
             (bvslt temp678_39 temp678_36)
             (bvslt temp678_43 temp678_40)
             (bvslt temp678_47 temp678_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_48 #x0000000000000000))
(assert (= var1322786 temp678_48))
(assert (= temp678_49 #x0000000000000000))
(assert (= temp678_50 temp678_49))
(assert (= temp678_51 (select ARGNAME_output_padding_NAMEEND_VAL temp678_50)))
(assert (= temp678_52 #x0000000000000001))
(assert (= temp678_53 temp678_52))
(assert (= temp678_54 (select ARGNAME_output_padding_NAMEEND_VAL temp678_53)))
(assert (= temp678_55 #x0000000000000002))
(assert (= temp678_56 temp678_55))
(assert (= temp678_57 (select ARGNAME_output_padding_NAMEEND_VAL temp678_56)))
(assert (= temp678_58 #x0000000000000003))
(assert (= temp678_59 temp678_58))
(assert (= temp678_60 (select ARGNAME_output_padding_NAMEEND_VAL temp678_59)))
(assert (= temp678_61 #x0000000000000004))
(assert (= temp678_62 temp678_61))
(assert (= temp678_63 (select ARGNAME_output_padding_NAMEEND_VAL temp678_62)))
(assert (= temp678_64 #x0000000000000005))
(assert (= temp678_65 temp678_64))
(assert (= temp678_66 (select ARGNAME_output_padding_NAMEEND_VAL temp678_65)))
(assert (= temp678_67 #x0000000000000000))
(assert (= temp678_68 #x0000000000000000))
(assert (= temp678_69 temp678_68))
(assert (= temp678_70 (select ARGNAME_output_padding_NAMEEND_VAL temp678_69)))
(assert (= temp678_71 #x0000000000000000))
(assert (= temp678_72 #x0000000000000001))
(assert (= temp678_73 temp678_72))
(assert (= temp678_74 (select ARGNAME_output_padding_NAMEEND_VAL temp678_73)))
(assert (= temp678_75 #x0000000000000000))
(assert (= temp678_76 #x0000000000000002))
(assert (= temp678_77 temp678_76))
(assert (= temp678_78 (select ARGNAME_output_padding_NAMEEND_VAL temp678_77)))
(assert (= temp678_79 #x0000000000000000))
(assert (= temp678_80 #x0000000000000003))
(assert (= temp678_81 temp678_80))
(assert (= temp678_82 (select ARGNAME_output_padding_NAMEEND_VAL temp678_81)))
(assert (= temp678_83 #x0000000000000000))
(assert (= temp678_84 #x0000000000000004))
(assert (= temp678_85 temp678_84))
(assert (= temp678_86 (select ARGNAME_output_padding_NAMEEND_VAL temp678_85)))
(assert (= temp678_87 #x0000000000000000))
(assert (= temp678_88 #x0000000000000005))
(assert (= temp678_89 temp678_88))
(assert (= temp678_90 (select ARGNAME_output_padding_NAMEEND_VAL temp678_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp678_70 temp678_67)
             (bvslt temp678_74 temp678_71)
             (bvslt temp678_78 temp678_75)
             (bvslt temp678_82 temp678_79)
             (bvslt temp678_86 temp678_83)
             (bvslt temp678_90 temp678_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_91 #x0000000000000000))
(assert (= var1322797 temp678_91))
(assert (= temp678_92 #x0000000000000000))
(assert (= temp678_93 temp678_92))
(assert (= temp678_94 (select ARGNAME_stride_NAMEEND_VAL temp678_93)))
(assert (= temp678_95 #x0000000000000001))
(assert (= temp678_96 temp678_95))
(assert (= temp678_97 (select ARGNAME_stride_NAMEEND_VAL temp678_96)))
(assert (= temp678_98 #x0000000000000002))
(assert (= temp678_99 temp678_98))
(assert (= temp678_100 (select ARGNAME_stride_NAMEEND_VAL temp678_99)))
(assert (= temp678_101 #x0000000000000003))
(assert (= temp678_102 temp678_101))
(assert (= temp678_103 (select ARGNAME_stride_NAMEEND_VAL temp678_102)))
(assert (= temp678_104 #x0000000000000004))
(assert (= temp678_105 temp678_104))
(assert (= temp678_106 (select ARGNAME_stride_NAMEEND_VAL temp678_105)))
(assert (= temp678_107 #x0000000000000005))
(assert (= temp678_108 temp678_107))
(assert (= temp678_109 (select ARGNAME_stride_NAMEEND_VAL temp678_108)))
(assert (= temp678_110 #x0000000000000000))
(assert (= temp678_111 #x0000000000000000))
(assert (= temp678_112 temp678_111))
(assert (= temp678_113 (select ARGNAME_stride_NAMEEND_VAL temp678_112)))
(assert (= temp678_114 #x0000000000000000))
(assert (= temp678_115 #x0000000000000001))
(assert (= temp678_116 temp678_115))
(assert (= temp678_117 (select ARGNAME_stride_NAMEEND_VAL temp678_116)))
(assert (= temp678_118 #x0000000000000000))
(assert (= temp678_119 #x0000000000000002))
(assert (= temp678_120 temp678_119))
(assert (= temp678_121 (select ARGNAME_stride_NAMEEND_VAL temp678_120)))
(assert (= temp678_122 #x0000000000000000))
(assert (= temp678_123 #x0000000000000003))
(assert (= temp678_124 temp678_123))
(assert (= temp678_125 (select ARGNAME_stride_NAMEEND_VAL temp678_124)))
(assert (= temp678_126 #x0000000000000000))
(assert (= temp678_127 #x0000000000000004))
(assert (= temp678_128 temp678_127))
(assert (= temp678_129 (select ARGNAME_stride_NAMEEND_VAL temp678_128)))
(assert (= temp678_130 #x0000000000000000))
(assert (= temp678_131 #x0000000000000005))
(assert (= temp678_132 temp678_131))
(assert (= temp678_133 (select ARGNAME_stride_NAMEEND_VAL temp678_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp678_113 temp678_110)
             (bvsle temp678_117 temp678_114)
             (bvsle temp678_121 temp678_118)
             (bvsle temp678_125 temp678_122)
             (bvsle temp678_129 temp678_126)
             (bvsle temp678_133 temp678_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_134 #x0000000000000000))
(assert (= var1322807 temp678_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_135 #x0000000000000001))
(assert (= var1322819 temp678_135))
(assert (= temp678_136 #x0000000000000000))
(assert (= var1310898 temp678_136))
(assert (= temp678_137 #x0000000000000000))
(assert (= temp678_138 temp678_137))
(assert (= temp678_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_138)))
(assert (= temp678_140 #x0000000000000001))
(assert (= temp678_141 temp678_140))
(assert (= temp678_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_141)))
(assert (= temp678_143 #x0000000000000002))
(assert (= temp678_144 temp678_143))
(assert (= temp678_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_144)))
(assert (= temp678_146 #x0000000000000003))
(assert (= temp678_147 temp678_146))
(assert (= temp678_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_147)))
(assert (= temp678_149 #x0000000000000004))
(assert (= temp678_150 temp678_149))
(assert (= temp678_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_150)))
(assert (= temp678_152 #x0000000000000005))
(assert (= temp678_153 temp678_152))
(assert (= temp678_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_153)))
(assert (= temp678_156 var1310898))
(assert (= temp678_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_156)))
(assert (= temp678_155 temp678_157))
(assert (= var1322852
   (ite (bvslt temp678_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_158 #x0000000000000000))
(assert (= var1322852 temp678_158))
(assert (= temp678_159 #x0000000000000000))
(assert (= var1310898 temp678_159))
(assert (= temp678_161 var1310898))
(assert (= temp678_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_161)))
(assert (= temp678_160 temp678_162))
(assert (= var1322874 (bvsmod temp678_160 ARGNAME_groups_NAMEEND)))
(assert (= temp678_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp678_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_164 #x0000000000000001))
(assert (= var1322875 temp678_164))
(assert (= temp678_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp678_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_166 #x0000000000000001))
(assert (= var1322895 temp678_166))
(assert (= temp678_167 #x0000000000000001))
(assert (= var1311786 temp678_167))
(assert (= temp678_168 #x0000000000000000))
(assert (= temp678_169 temp678_168))
(assert (= temp678_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_169)))
(assert (= temp678_171 #x0000000000000001))
(assert (= temp678_172 temp678_171))
(assert (= temp678_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_172)))
(assert (= temp678_174 #x0000000000000002))
(assert (= temp678_175 temp678_174))
(assert (= temp678_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_175)))
(assert (= temp678_177 #x0000000000000003))
(assert (= temp678_178 temp678_177))
(assert (= temp678_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_178)))
(assert (= temp678_180 #x0000000000000004))
(assert (= temp678_181 temp678_180))
(assert (= temp678_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_181)))
(assert (= temp678_183 #x0000000000000005))
(assert (= temp678_184 temp678_183))
(assert (= temp678_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_184)))
(assert (= temp678_186 #x0000000000000000))
(assert (= temp678_187
   (ite (bvslt var1311786 temp678_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp678_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_187)))
(assert (= var1322903 temp678_188))
(assert (bvslt (ite (bvslt var1311786 temp678_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp678_189 #x0000000000000001))
(assert (= var1311786 temp678_189))
(assert (= temp678_191 var1311786))
(assert (= temp678_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_191)))
(assert (= temp678_190 temp678_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp678_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_193 #x0000000000000001))
(assert (= var1322908 temp678_193))
(assert (= temp678_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp678_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_195 #x0000000000000001))
(assert (= var1322975 temp678_195))
(assert (= temp678_196 #x0000000000000000))
(assert (= var1310898 temp678_196))
(assert (= temp678_197 #x0000000000000000))
(assert (= temp678_198 temp678_197))
(assert (= temp678_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp678_198)))
(assert (= temp678_200 #x0000000000000001))
(assert (= temp678_201 temp678_200))
(assert (= temp678_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp678_201)))
(assert (= temp678_203 #x0000000000000002))
(assert (= temp678_204 temp678_203))
(assert (= temp678_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp678_204)))
(assert (= temp678_206 #x0000000000000003))
(assert (= temp678_207 temp678_206))
(assert (= temp678_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp678_207)))
(assert (= temp678_209 #x0000000000000004))
(assert (= temp678_210 temp678_209))
(assert (= temp678_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp678_210)))
(assert (= temp678_212 #x0000000000000005))
(assert (= temp678_213 temp678_212))
(assert (= temp678_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp678_213)))
(assert (= temp678_215 #x0000000000000000))
(assert (= temp678_216
   (ite (bvslt var1310898 temp678_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp678_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp678_216)))
(assert (= var1322977 temp678_217))
(assert (bvslt (ite (bvslt var1310898 temp678_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp678_218 #x0000000000000000))
(assert (= var1310898 temp678_218))
(assert (= temp678_220 var1310898))
(assert (= temp678_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_220)))
(assert (= temp678_219 temp678_221))
(assert (= var1322980
   (ite (= var1322977 temp678_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_222 #x0000000000000001))
(assert (= var1322980 temp678_222))
(assert (= temp678_223 #x0000000000000002))
(assert (= var1848169 temp678_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp678_225 #x0000000000000001))
(assert (= var1323065 temp678_225))
(assert (= temp678_226 #x0000000000000001))
(assert (= var3486735 temp678_226))
(assert (= temp678_227 #x0000000000000001))
(assert (= var3814415 temp678_227))
(assert (= temp678_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp678_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_229 #x0000000000000001))
(assert (= var79986 temp678_229))
(assert (= temp678_230 #x0000000000000001))
(assert (= var80116 temp678_230))
(assert (= var4796905 var80116))
(assert (= temp678_231 #x0000000000000000))
(assert (= var4784306 temp678_231))
(assert (= temp678_232 #x0000000000000000))
(assert (= temp678_233
   (ite (bvslt var4784306 temp678_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp678_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_233)))
(assert (= var4796924 temp678_234))
(assert (bvslt (ite (bvslt var4784306 temp678_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp678_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp678_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_236 #x0000000000000001))
(assert (= var4796925 temp678_236))
(assert (= temp678_237 #x0000000000000000))
(assert (= var4996927 temp678_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp678_238 #x0000000000000002))
(assert (= var5125763 temp678_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_239 #x0000000000000000))
(assert (= var5191324 temp678_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp678_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp678_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp678_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp678_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_244 #x0000000000000001))
(assert (= temp678_243 temp678_244))
(assert (= temp678_245 #x0000000000000001))
(assert (= var8130026 temp678_245))
(assert (= temp678_247 #xffffffffffffffff))
(assert (= temp678_246 temp678_247))
(assert (= temp678_248 #x0000000000000001))
(assert (= var79986 temp678_248))
(model-add temp678_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp678_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp678_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






