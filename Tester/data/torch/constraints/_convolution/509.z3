(declare-fun temp676_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp676_2 () (_ BitVec 64))
(declare-fun temp676_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp676_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp676_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp676_6 () (_ BitVec 64))
(declare-fun temp676_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_8 () (_ BitVec 64))
(declare-fun temp676_9 () (_ BitVec 64))
(declare-fun temp676_10 () (_ BitVec 64))
(declare-fun temp676_11 () (_ BitVec 64))
(declare-fun temp676_12 () (_ BitVec 64))
(declare-fun temp676_13 () (_ BitVec 64))
(declare-fun temp676_14 () (_ BitVec 64))
(declare-fun temp676_15 () (_ BitVec 64))
(declare-fun temp676_16 () (_ BitVec 64))
(declare-fun temp676_17 () (_ BitVec 64))
(declare-fun temp676_18 () (_ BitVec 64))
(declare-fun temp676_19 () (_ BitVec 64))
(declare-fun temp676_20 () (_ BitVec 64))
(declare-fun temp676_21 () (_ BitVec 64))
(declare-fun temp676_22 () (_ BitVec 64))
(declare-fun temp676_23 () (_ BitVec 64))
(declare-fun temp676_24 () (_ BitVec 64))
(declare-fun temp676_25 () (_ BitVec 64))
(declare-fun temp676_26 () (_ BitVec 64))
(declare-fun temp676_27 () (_ BitVec 64))
(declare-fun temp676_28 () (_ BitVec 64))
(declare-fun temp676_29 () (_ BitVec 64))
(declare-fun temp676_30 () (_ BitVec 64))
(declare-fun temp676_31 () (_ BitVec 64))
(declare-fun temp676_32 () (_ BitVec 64))
(declare-fun temp676_33 () (_ BitVec 64))
(declare-fun temp676_34 () (_ BitVec 64))
(declare-fun temp676_35 () (_ BitVec 64))
(declare-fun temp676_36 () (_ BitVec 64))
(declare-fun temp676_37 () (_ BitVec 64))
(declare-fun temp676_38 () (_ BitVec 64))
(declare-fun temp676_39 () (_ BitVec 64))
(declare-fun temp676_40 () (_ BitVec 64))
(declare-fun temp676_41 () (_ BitVec 64))
(declare-fun temp676_42 () (_ BitVec 64))
(declare-fun temp676_43 () (_ BitVec 64))
(declare-fun temp676_44 () (_ BitVec 64))
(declare-fun temp676_45 () (_ BitVec 64))
(declare-fun temp676_46 () (_ BitVec 64))
(declare-fun temp676_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp676_48 () (_ BitVec 64))
(declare-fun temp676_49 () (_ BitVec 64))
(declare-fun temp676_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_51 () (_ BitVec 64))
(declare-fun temp676_52 () (_ BitVec 64))
(declare-fun temp676_53 () (_ BitVec 64))
(declare-fun temp676_54 () (_ BitVec 64))
(declare-fun temp676_55 () (_ BitVec 64))
(declare-fun temp676_56 () (_ BitVec 64))
(declare-fun temp676_57 () (_ BitVec 64))
(declare-fun temp676_58 () (_ BitVec 64))
(declare-fun temp676_59 () (_ BitVec 64))
(declare-fun temp676_60 () (_ BitVec 64))
(declare-fun temp676_61 () (_ BitVec 64))
(declare-fun temp676_62 () (_ BitVec 64))
(declare-fun temp676_63 () (_ BitVec 64))
(declare-fun temp676_64 () (_ BitVec 64))
(declare-fun temp676_65 () (_ BitVec 64))
(declare-fun temp676_66 () (_ BitVec 64))
(declare-fun temp676_67 () (_ BitVec 64))
(declare-fun temp676_68 () (_ BitVec 64))
(declare-fun temp676_69 () (_ BitVec 64))
(declare-fun temp676_70 () (_ BitVec 64))
(declare-fun temp676_71 () (_ BitVec 64))
(declare-fun temp676_72 () (_ BitVec 64))
(declare-fun temp676_73 () (_ BitVec 64))
(declare-fun temp676_74 () (_ BitVec 64))
(declare-fun temp676_75 () (_ BitVec 64))
(declare-fun temp676_76 () (_ BitVec 64))
(declare-fun temp676_77 () (_ BitVec 64))
(declare-fun temp676_78 () (_ BitVec 64))
(declare-fun temp676_79 () (_ BitVec 64))
(declare-fun temp676_80 () (_ BitVec 64))
(declare-fun temp676_81 () (_ BitVec 64))
(declare-fun temp676_82 () (_ BitVec 64))
(declare-fun temp676_83 () (_ BitVec 64))
(declare-fun temp676_84 () (_ BitVec 64))
(declare-fun temp676_85 () (_ BitVec 64))
(declare-fun temp676_86 () (_ BitVec 64))
(declare-fun temp676_87 () (_ BitVec 64))
(declare-fun temp676_88 () (_ BitVec 64))
(declare-fun temp676_89 () (_ BitVec 64))
(declare-fun temp676_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp676_91 () (_ BitVec 64))
(declare-fun temp676_92 () (_ BitVec 64))
(declare-fun temp676_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_94 () (_ BitVec 64))
(declare-fun temp676_95 () (_ BitVec 64))
(declare-fun temp676_96 () (_ BitVec 64))
(declare-fun temp676_97 () (_ BitVec 64))
(declare-fun temp676_98 () (_ BitVec 64))
(declare-fun temp676_99 () (_ BitVec 64))
(declare-fun temp676_100 () (_ BitVec 64))
(declare-fun temp676_101 () (_ BitVec 64))
(declare-fun temp676_102 () (_ BitVec 64))
(declare-fun temp676_103 () (_ BitVec 64))
(declare-fun temp676_104 () (_ BitVec 64))
(declare-fun temp676_105 () (_ BitVec 64))
(declare-fun temp676_106 () (_ BitVec 64))
(declare-fun temp676_107 () (_ BitVec 64))
(declare-fun temp676_108 () (_ BitVec 64))
(declare-fun temp676_109 () (_ BitVec 64))
(declare-fun temp676_110 () (_ BitVec 64))
(declare-fun temp676_111 () (_ BitVec 64))
(declare-fun temp676_112 () (_ BitVec 64))
(declare-fun temp676_113 () (_ BitVec 64))
(declare-fun temp676_114 () (_ BitVec 64))
(declare-fun temp676_115 () (_ BitVec 64))
(declare-fun temp676_116 () (_ BitVec 64))
(declare-fun temp676_117 () (_ BitVec 64))
(declare-fun temp676_118 () (_ BitVec 64))
(declare-fun temp676_119 () (_ BitVec 64))
(declare-fun temp676_120 () (_ BitVec 64))
(declare-fun temp676_121 () (_ BitVec 64))
(declare-fun temp676_122 () (_ BitVec 64))
(declare-fun temp676_123 () (_ BitVec 64))
(declare-fun temp676_124 () (_ BitVec 64))
(declare-fun temp676_125 () (_ BitVec 64))
(declare-fun temp676_126 () (_ BitVec 64))
(declare-fun temp676_127 () (_ BitVec 64))
(declare-fun temp676_128 () (_ BitVec 64))
(declare-fun temp676_129 () (_ BitVec 64))
(declare-fun temp676_130 () (_ BitVec 64))
(declare-fun temp676_131 () (_ BitVec 64))
(declare-fun temp676_132 () (_ BitVec 64))
(declare-fun temp676_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp676_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp676_135 () (_ BitVec 64))
(declare-fun temp676_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp676_137 () (_ BitVec 64))
(declare-fun temp676_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_139 () (_ BitVec 64))
(declare-fun temp676_140 () (_ BitVec 64))
(declare-fun temp676_141 () (_ BitVec 64))
(declare-fun temp676_142 () (_ BitVec 64))
(declare-fun temp676_143 () (_ BitVec 64))
(declare-fun temp676_144 () (_ BitVec 64))
(declare-fun temp676_145 () (_ BitVec 64))
(declare-fun temp676_146 () (_ BitVec 64))
(declare-fun temp676_147 () (_ BitVec 64))
(declare-fun temp676_148 () (_ BitVec 64))
(declare-fun temp676_149 () (_ BitVec 64))
(declare-fun temp676_150 () (_ BitVec 64))
(declare-fun temp676_151 () (_ BitVec 64))
(declare-fun temp676_152 () (_ BitVec 64))
(declare-fun temp676_153 () (_ BitVec 64))
(declare-fun temp676_154 () (_ BitVec 64))
(declare-fun temp676_156 () (_ BitVec 64))
(declare-fun temp676_157 () (_ BitVec 64))
(declare-fun temp676_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp676_158 () (_ BitVec 64))
(declare-fun temp676_159 () (_ BitVec 64))
(declare-fun temp676_161 () (_ BitVec 64))
(declare-fun temp676_162 () (_ BitVec 64))
(declare-fun temp676_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp676_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp676_164 () (_ BitVec 64))
(declare-fun temp676_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp676_166 () (_ BitVec 64))
(declare-fun temp676_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp676_168 () (_ BitVec 64))
(declare-fun temp676_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_170 () (_ BitVec 64))
(declare-fun temp676_171 () (_ BitVec 64))
(declare-fun temp676_172 () (_ BitVec 64))
(declare-fun temp676_173 () (_ BitVec 64))
(declare-fun temp676_174 () (_ BitVec 64))
(declare-fun temp676_175 () (_ BitVec 64))
(declare-fun temp676_176 () (_ BitVec 64))
(declare-fun temp676_177 () (_ BitVec 64))
(declare-fun temp676_178 () (_ BitVec 64))
(declare-fun temp676_179 () (_ BitVec 64))
(declare-fun temp676_180 () (_ BitVec 64))
(declare-fun temp676_181 () (_ BitVec 64))
(declare-fun temp676_182 () (_ BitVec 64))
(declare-fun temp676_183 () (_ BitVec 64))
(declare-fun temp676_184 () (_ BitVec 64))
(declare-fun temp676_185 () (_ BitVec 64))
(declare-fun temp676_186 () (_ BitVec 64))
(declare-fun temp676_187 () (_ BitVec 64))
(declare-fun temp676_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp676_189 () (_ BitVec 64))
(declare-fun temp676_191 () (_ BitVec 64))
(declare-fun temp676_192 () (_ BitVec 64))
(declare-fun temp676_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp676_193 () (_ BitVec 64))
(declare-fun temp676_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp676_195 () (_ BitVec 64))
(declare-fun temp676_196 () (_ BitVec 64))
(declare-fun temp676_197 () (_ BitVec 64))
(declare-fun temp676_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_199 () (_ BitVec 64))
(declare-fun temp676_200 () (_ BitVec 64))
(declare-fun temp676_201 () (_ BitVec 64))
(declare-fun temp676_202 () (_ BitVec 64))
(declare-fun temp676_203 () (_ BitVec 64))
(declare-fun temp676_204 () (_ BitVec 64))
(declare-fun temp676_205 () (_ BitVec 64))
(declare-fun temp676_206 () (_ BitVec 64))
(declare-fun temp676_207 () (_ BitVec 64))
(declare-fun temp676_208 () (_ BitVec 64))
(declare-fun temp676_209 () (_ BitVec 64))
(declare-fun temp676_210 () (_ BitVec 64))
(declare-fun temp676_211 () (_ BitVec 64))
(declare-fun temp676_212 () (_ BitVec 64))
(declare-fun temp676_213 () (_ BitVec 64))
(declare-fun temp676_214 () (_ BitVec 64))
(declare-fun temp676_215 () (_ BitVec 64))
(declare-fun temp676_216 () (_ BitVec 64))
(declare-fun temp676_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp676_218 () (_ BitVec 64))
(declare-fun temp676_220 () (_ BitVec 64))
(declare-fun temp676_221 () (_ BitVec 64))
(declare-fun temp676_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp676_222 () (_ BitVec 64))
(declare-fun temp676_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp676_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp676_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp676_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp676_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp676_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp676_229 () (_ BitVec 64))
(declare-fun temp676_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp676_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp676_232 () (_ BitVec 64))
(declare-fun temp676_233 () (_ BitVec 64))
(declare-fun temp676_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp676_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp676_236 () (_ BitVec 64))
(declare-fun temp676_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp676_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp676_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp676_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp676_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp676_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp676_244 () (_ BitVec 64))
(declare-fun temp676_243 () (_ BitVec 64))
(declare-fun temp676_245 () (_ BitVec 64))
(declare-fun var8130026 () (_ BitVec 64))
(declare-fun temp676_247 () (_ BitVec 64))
(declare-fun temp676_246 () (_ BitVec 64))
(declare-fun temp676_248 () (_ BitVec 64))
(declare-fun temp676_249 () (_ BitVec 64))
(declare-fun var8925972 () (_ BitVec 64))
(declare-fun var8925939 () (_ BitVec 64))
(declare-fun var8794503 () (_ BitVec 64))
(declare-fun var8794499 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp676_250 () (_ BitVec 64))
(assert (= temp676_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp676_1)))
(assert (= temp676_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp676_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_3 #x0000000000000000))
(assert (= var79869 temp676_3))
(assert (= temp676_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp676_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_5 #x0000000000000000))
(assert (= var79914 temp676_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp676_6 #x0000000000000000))
(assert (= temp676_7 temp676_6))
(assert (= temp676_8 (select ARGNAME_padding_NAMEEND_VAL temp676_7)))
(assert (= temp676_9 #x0000000000000001))
(assert (= temp676_10 temp676_9))
(assert (= temp676_11 (select ARGNAME_padding_NAMEEND_VAL temp676_10)))
(assert (= temp676_12 #x0000000000000002))
(assert (= temp676_13 temp676_12))
(assert (= temp676_14 (select ARGNAME_padding_NAMEEND_VAL temp676_13)))
(assert (= temp676_15 #x0000000000000003))
(assert (= temp676_16 temp676_15))
(assert (= temp676_17 (select ARGNAME_padding_NAMEEND_VAL temp676_16)))
(assert (= temp676_18 #x0000000000000004))
(assert (= temp676_19 temp676_18))
(assert (= temp676_20 (select ARGNAME_padding_NAMEEND_VAL temp676_19)))
(assert (= temp676_21 #x0000000000000005))
(assert (= temp676_22 temp676_21))
(assert (= temp676_23 (select ARGNAME_padding_NAMEEND_VAL temp676_22)))
(assert (= temp676_24 #x0000000000000000))
(assert (= temp676_25 #x0000000000000000))
(assert (= temp676_26 temp676_25))
(assert (= temp676_27 (select ARGNAME_padding_NAMEEND_VAL temp676_26)))
(assert (= temp676_28 #x0000000000000000))
(assert (= temp676_29 #x0000000000000001))
(assert (= temp676_30 temp676_29))
(assert (= temp676_31 (select ARGNAME_padding_NAMEEND_VAL temp676_30)))
(assert (= temp676_32 #x0000000000000000))
(assert (= temp676_33 #x0000000000000002))
(assert (= temp676_34 temp676_33))
(assert (= temp676_35 (select ARGNAME_padding_NAMEEND_VAL temp676_34)))
(assert (= temp676_36 #x0000000000000000))
(assert (= temp676_37 #x0000000000000003))
(assert (= temp676_38 temp676_37))
(assert (= temp676_39 (select ARGNAME_padding_NAMEEND_VAL temp676_38)))
(assert (= temp676_40 #x0000000000000000))
(assert (= temp676_41 #x0000000000000004))
(assert (= temp676_42 temp676_41))
(assert (= temp676_43 (select ARGNAME_padding_NAMEEND_VAL temp676_42)))
(assert (= temp676_44 #x0000000000000000))
(assert (= temp676_45 #x0000000000000005))
(assert (= temp676_46 temp676_45))
(assert (= temp676_47 (select ARGNAME_padding_NAMEEND_VAL temp676_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp676_27 temp676_24)
             (bvslt temp676_31 temp676_28)
             (bvslt temp676_35 temp676_32)
             (bvslt temp676_39 temp676_36)
             (bvslt temp676_43 temp676_40)
             (bvslt temp676_47 temp676_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_48 #x0000000000000000))
(assert (= var1322786 temp676_48))
(assert (= temp676_49 #x0000000000000000))
(assert (= temp676_50 temp676_49))
(assert (= temp676_51 (select ARGNAME_output_padding_NAMEEND_VAL temp676_50)))
(assert (= temp676_52 #x0000000000000001))
(assert (= temp676_53 temp676_52))
(assert (= temp676_54 (select ARGNAME_output_padding_NAMEEND_VAL temp676_53)))
(assert (= temp676_55 #x0000000000000002))
(assert (= temp676_56 temp676_55))
(assert (= temp676_57 (select ARGNAME_output_padding_NAMEEND_VAL temp676_56)))
(assert (= temp676_58 #x0000000000000003))
(assert (= temp676_59 temp676_58))
(assert (= temp676_60 (select ARGNAME_output_padding_NAMEEND_VAL temp676_59)))
(assert (= temp676_61 #x0000000000000004))
(assert (= temp676_62 temp676_61))
(assert (= temp676_63 (select ARGNAME_output_padding_NAMEEND_VAL temp676_62)))
(assert (= temp676_64 #x0000000000000005))
(assert (= temp676_65 temp676_64))
(assert (= temp676_66 (select ARGNAME_output_padding_NAMEEND_VAL temp676_65)))
(assert (= temp676_67 #x0000000000000000))
(assert (= temp676_68 #x0000000000000000))
(assert (= temp676_69 temp676_68))
(assert (= temp676_70 (select ARGNAME_output_padding_NAMEEND_VAL temp676_69)))
(assert (= temp676_71 #x0000000000000000))
(assert (= temp676_72 #x0000000000000001))
(assert (= temp676_73 temp676_72))
(assert (= temp676_74 (select ARGNAME_output_padding_NAMEEND_VAL temp676_73)))
(assert (= temp676_75 #x0000000000000000))
(assert (= temp676_76 #x0000000000000002))
(assert (= temp676_77 temp676_76))
(assert (= temp676_78 (select ARGNAME_output_padding_NAMEEND_VAL temp676_77)))
(assert (= temp676_79 #x0000000000000000))
(assert (= temp676_80 #x0000000000000003))
(assert (= temp676_81 temp676_80))
(assert (= temp676_82 (select ARGNAME_output_padding_NAMEEND_VAL temp676_81)))
(assert (= temp676_83 #x0000000000000000))
(assert (= temp676_84 #x0000000000000004))
(assert (= temp676_85 temp676_84))
(assert (= temp676_86 (select ARGNAME_output_padding_NAMEEND_VAL temp676_85)))
(assert (= temp676_87 #x0000000000000000))
(assert (= temp676_88 #x0000000000000005))
(assert (= temp676_89 temp676_88))
(assert (= temp676_90 (select ARGNAME_output_padding_NAMEEND_VAL temp676_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp676_70 temp676_67)
             (bvslt temp676_74 temp676_71)
             (bvslt temp676_78 temp676_75)
             (bvslt temp676_82 temp676_79)
             (bvslt temp676_86 temp676_83)
             (bvslt temp676_90 temp676_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_91 #x0000000000000000))
(assert (= var1322797 temp676_91))
(assert (= temp676_92 #x0000000000000000))
(assert (= temp676_93 temp676_92))
(assert (= temp676_94 (select ARGNAME_stride_NAMEEND_VAL temp676_93)))
(assert (= temp676_95 #x0000000000000001))
(assert (= temp676_96 temp676_95))
(assert (= temp676_97 (select ARGNAME_stride_NAMEEND_VAL temp676_96)))
(assert (= temp676_98 #x0000000000000002))
(assert (= temp676_99 temp676_98))
(assert (= temp676_100 (select ARGNAME_stride_NAMEEND_VAL temp676_99)))
(assert (= temp676_101 #x0000000000000003))
(assert (= temp676_102 temp676_101))
(assert (= temp676_103 (select ARGNAME_stride_NAMEEND_VAL temp676_102)))
(assert (= temp676_104 #x0000000000000004))
(assert (= temp676_105 temp676_104))
(assert (= temp676_106 (select ARGNAME_stride_NAMEEND_VAL temp676_105)))
(assert (= temp676_107 #x0000000000000005))
(assert (= temp676_108 temp676_107))
(assert (= temp676_109 (select ARGNAME_stride_NAMEEND_VAL temp676_108)))
(assert (= temp676_110 #x0000000000000000))
(assert (= temp676_111 #x0000000000000000))
(assert (= temp676_112 temp676_111))
(assert (= temp676_113 (select ARGNAME_stride_NAMEEND_VAL temp676_112)))
(assert (= temp676_114 #x0000000000000000))
(assert (= temp676_115 #x0000000000000001))
(assert (= temp676_116 temp676_115))
(assert (= temp676_117 (select ARGNAME_stride_NAMEEND_VAL temp676_116)))
(assert (= temp676_118 #x0000000000000000))
(assert (= temp676_119 #x0000000000000002))
(assert (= temp676_120 temp676_119))
(assert (= temp676_121 (select ARGNAME_stride_NAMEEND_VAL temp676_120)))
(assert (= temp676_122 #x0000000000000000))
(assert (= temp676_123 #x0000000000000003))
(assert (= temp676_124 temp676_123))
(assert (= temp676_125 (select ARGNAME_stride_NAMEEND_VAL temp676_124)))
(assert (= temp676_126 #x0000000000000000))
(assert (= temp676_127 #x0000000000000004))
(assert (= temp676_128 temp676_127))
(assert (= temp676_129 (select ARGNAME_stride_NAMEEND_VAL temp676_128)))
(assert (= temp676_130 #x0000000000000000))
(assert (= temp676_131 #x0000000000000005))
(assert (= temp676_132 temp676_131))
(assert (= temp676_133 (select ARGNAME_stride_NAMEEND_VAL temp676_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp676_113 temp676_110)
             (bvsle temp676_117 temp676_114)
             (bvsle temp676_121 temp676_118)
             (bvsle temp676_125 temp676_122)
             (bvsle temp676_129 temp676_126)
             (bvsle temp676_133 temp676_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_134 #x0000000000000000))
(assert (= var1322807 temp676_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_135 #x0000000000000001))
(assert (= var1322819 temp676_135))
(assert (= temp676_136 #x0000000000000000))
(assert (= var1310898 temp676_136))
(assert (= temp676_137 #x0000000000000000))
(assert (= temp676_138 temp676_137))
(assert (= temp676_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_138)))
(assert (= temp676_140 #x0000000000000001))
(assert (= temp676_141 temp676_140))
(assert (= temp676_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_141)))
(assert (= temp676_143 #x0000000000000002))
(assert (= temp676_144 temp676_143))
(assert (= temp676_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_144)))
(assert (= temp676_146 #x0000000000000003))
(assert (= temp676_147 temp676_146))
(assert (= temp676_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_147)))
(assert (= temp676_149 #x0000000000000004))
(assert (= temp676_150 temp676_149))
(assert (= temp676_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_150)))
(assert (= temp676_152 #x0000000000000005))
(assert (= temp676_153 temp676_152))
(assert (= temp676_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_153)))
(assert (= temp676_156 var1310898))
(assert (= temp676_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_156)))
(assert (= temp676_155 temp676_157))
(assert (= var1322852
   (ite (bvslt temp676_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_158 #x0000000000000000))
(assert (= var1322852 temp676_158))
(assert (= temp676_159 #x0000000000000000))
(assert (= var1310898 temp676_159))
(assert (= temp676_161 var1310898))
(assert (= temp676_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_161)))
(assert (= temp676_160 temp676_162))
(assert (= var1322874 (bvsmod temp676_160 ARGNAME_groups_NAMEEND)))
(assert (= temp676_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp676_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_164 #x0000000000000001))
(assert (= var1322875 temp676_164))
(assert (= temp676_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp676_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_166 #x0000000000000001))
(assert (= var1322895 temp676_166))
(assert (= temp676_167 #x0000000000000001))
(assert (= var1311786 temp676_167))
(assert (= temp676_168 #x0000000000000000))
(assert (= temp676_169 temp676_168))
(assert (= temp676_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_169)))
(assert (= temp676_171 #x0000000000000001))
(assert (= temp676_172 temp676_171))
(assert (= temp676_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_172)))
(assert (= temp676_174 #x0000000000000002))
(assert (= temp676_175 temp676_174))
(assert (= temp676_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_175)))
(assert (= temp676_177 #x0000000000000003))
(assert (= temp676_178 temp676_177))
(assert (= temp676_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_178)))
(assert (= temp676_180 #x0000000000000004))
(assert (= temp676_181 temp676_180))
(assert (= temp676_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_181)))
(assert (= temp676_183 #x0000000000000005))
(assert (= temp676_184 temp676_183))
(assert (= temp676_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_184)))
(assert (= temp676_186 #x0000000000000000))
(assert (= temp676_187
   (ite (bvslt var1311786 temp676_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp676_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_187)))
(assert (= var1322903 temp676_188))
(assert (bvslt (ite (bvslt var1311786 temp676_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp676_189 #x0000000000000001))
(assert (= var1311786 temp676_189))
(assert (= temp676_191 var1311786))
(assert (= temp676_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_191)))
(assert (= temp676_190 temp676_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp676_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_193 #x0000000000000001))
(assert (= var1322908 temp676_193))
(assert (= temp676_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp676_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_195 #x0000000000000001))
(assert (= var1322975 temp676_195))
(assert (= temp676_196 #x0000000000000000))
(assert (= var1310898 temp676_196))
(assert (= temp676_197 #x0000000000000000))
(assert (= temp676_198 temp676_197))
(assert (= temp676_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp676_198)))
(assert (= temp676_200 #x0000000000000001))
(assert (= temp676_201 temp676_200))
(assert (= temp676_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp676_201)))
(assert (= temp676_203 #x0000000000000002))
(assert (= temp676_204 temp676_203))
(assert (= temp676_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp676_204)))
(assert (= temp676_206 #x0000000000000003))
(assert (= temp676_207 temp676_206))
(assert (= temp676_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp676_207)))
(assert (= temp676_209 #x0000000000000004))
(assert (= temp676_210 temp676_209))
(assert (= temp676_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp676_210)))
(assert (= temp676_212 #x0000000000000005))
(assert (= temp676_213 temp676_212))
(assert (= temp676_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp676_213)))
(assert (= temp676_215 #x0000000000000000))
(assert (= temp676_216
   (ite (bvslt var1310898 temp676_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp676_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp676_216)))
(assert (= var1322977 temp676_217))
(assert (bvslt (ite (bvslt var1310898 temp676_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp676_218 #x0000000000000000))
(assert (= var1310898 temp676_218))
(assert (= temp676_220 var1310898))
(assert (= temp676_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_220)))
(assert (= temp676_219 temp676_221))
(assert (= var1322980
   (ite (= var1322977 temp676_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_222 #x0000000000000001))
(assert (= var1322980 temp676_222))
(assert (= temp676_223 #x0000000000000002))
(assert (= var1848169 temp676_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp676_225 #x0000000000000001))
(assert (= var1323065 temp676_225))
(assert (= temp676_226 #x0000000000000001))
(assert (= var3486735 temp676_226))
(assert (= temp676_227 #x0000000000000001))
(assert (= var3814415 temp676_227))
(assert (= temp676_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp676_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_229 #x0000000000000001))
(assert (= var79986 temp676_229))
(assert (= temp676_230 #x0000000000000001))
(assert (= var80116 temp676_230))
(assert (= var4796905 var80116))
(assert (= temp676_231 #x0000000000000000))
(assert (= var4784306 temp676_231))
(assert (= temp676_232 #x0000000000000000))
(assert (= temp676_233
   (ite (bvslt var4784306 temp676_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp676_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_233)))
(assert (= var4796924 temp676_234))
(assert (bvslt (ite (bvslt var4784306 temp676_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp676_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp676_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_236 #x0000000000000001))
(assert (= var4796925 temp676_236))
(assert (= temp676_237 #x0000000000000000))
(assert (= var4996927 temp676_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp676_238 #x0000000000000002))
(assert (= var5125763 temp676_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_239 #x0000000000000000))
(assert (= var5191324 temp676_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp676_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp676_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp676_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp676_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_244 #x0000000000000001))
(assert (= temp676_243 temp676_244))
(assert (= temp676_245 #x0000000000000001))
(assert (= var8130026 temp676_245))
(assert (= temp676_247 #xffffffffffffffff))
(assert (= temp676_246 temp676_247))
(assert (= temp676_248 #x0000000000000001))
(assert (= var79986 temp676_248))
(assert (= temp676_249 #x0000000000000000))
(assert (= var8925972 temp676_249))
(assert (= var8925939 var8925972))
(assert (= var8794503 var8925939))
(assert (= var8794499 var8794503))
(assert (= var81597 var8794499))
(assert (= temp676_250 #x0000000000000000))
(assert (= var81597 temp676_250))
(model-add temp676_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp676_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp676_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






