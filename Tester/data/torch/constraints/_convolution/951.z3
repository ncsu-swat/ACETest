(declare-fun temp1264_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1264_2 () (_ BitVec 64))
(declare-fun temp1264_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1264_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1264_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1264_6 () (_ BitVec 64))
(declare-fun temp1264_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_8 () (_ BitVec 64))
(declare-fun temp1264_9 () (_ BitVec 64))
(declare-fun temp1264_10 () (_ BitVec 64))
(declare-fun temp1264_11 () (_ BitVec 64))
(declare-fun temp1264_12 () (_ BitVec 64))
(declare-fun temp1264_13 () (_ BitVec 64))
(declare-fun temp1264_14 () (_ BitVec 64))
(declare-fun temp1264_15 () (_ BitVec 64))
(declare-fun temp1264_16 () (_ BitVec 64))
(declare-fun temp1264_17 () (_ BitVec 64))
(declare-fun temp1264_18 () (_ BitVec 64))
(declare-fun temp1264_19 () (_ BitVec 64))
(declare-fun temp1264_20 () (_ BitVec 64))
(declare-fun temp1264_21 () (_ BitVec 64))
(declare-fun temp1264_22 () (_ BitVec 64))
(declare-fun temp1264_23 () (_ BitVec 64))
(declare-fun temp1264_24 () (_ BitVec 64))
(declare-fun temp1264_25 () (_ BitVec 64))
(declare-fun temp1264_26 () (_ BitVec 64))
(declare-fun temp1264_27 () (_ BitVec 64))
(declare-fun temp1264_28 () (_ BitVec 64))
(declare-fun temp1264_29 () (_ BitVec 64))
(declare-fun temp1264_30 () (_ BitVec 64))
(declare-fun temp1264_31 () (_ BitVec 64))
(declare-fun temp1264_32 () (_ BitVec 64))
(declare-fun temp1264_33 () (_ BitVec 64))
(declare-fun temp1264_34 () (_ BitVec 64))
(declare-fun temp1264_35 () (_ BitVec 64))
(declare-fun temp1264_36 () (_ BitVec 64))
(declare-fun temp1264_37 () (_ BitVec 64))
(declare-fun temp1264_38 () (_ BitVec 64))
(declare-fun temp1264_39 () (_ BitVec 64))
(declare-fun temp1264_40 () (_ BitVec 64))
(declare-fun temp1264_41 () (_ BitVec 64))
(declare-fun temp1264_42 () (_ BitVec 64))
(declare-fun temp1264_43 () (_ BitVec 64))
(declare-fun temp1264_44 () (_ BitVec 64))
(declare-fun temp1264_45 () (_ BitVec 64))
(declare-fun temp1264_46 () (_ BitVec 64))
(declare-fun temp1264_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1264_48 () (_ BitVec 64))
(declare-fun temp1264_49 () (_ BitVec 64))
(declare-fun temp1264_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_51 () (_ BitVec 64))
(declare-fun temp1264_52 () (_ BitVec 64))
(declare-fun temp1264_53 () (_ BitVec 64))
(declare-fun temp1264_54 () (_ BitVec 64))
(declare-fun temp1264_55 () (_ BitVec 64))
(declare-fun temp1264_56 () (_ BitVec 64))
(declare-fun temp1264_57 () (_ BitVec 64))
(declare-fun temp1264_58 () (_ BitVec 64))
(declare-fun temp1264_59 () (_ BitVec 64))
(declare-fun temp1264_60 () (_ BitVec 64))
(declare-fun temp1264_61 () (_ BitVec 64))
(declare-fun temp1264_62 () (_ BitVec 64))
(declare-fun temp1264_63 () (_ BitVec 64))
(declare-fun temp1264_64 () (_ BitVec 64))
(declare-fun temp1264_65 () (_ BitVec 64))
(declare-fun temp1264_66 () (_ BitVec 64))
(declare-fun temp1264_67 () (_ BitVec 64))
(declare-fun temp1264_68 () (_ BitVec 64))
(declare-fun temp1264_69 () (_ BitVec 64))
(declare-fun temp1264_70 () (_ BitVec 64))
(declare-fun temp1264_71 () (_ BitVec 64))
(declare-fun temp1264_72 () (_ BitVec 64))
(declare-fun temp1264_73 () (_ BitVec 64))
(declare-fun temp1264_74 () (_ BitVec 64))
(declare-fun temp1264_75 () (_ BitVec 64))
(declare-fun temp1264_76 () (_ BitVec 64))
(declare-fun temp1264_77 () (_ BitVec 64))
(declare-fun temp1264_78 () (_ BitVec 64))
(declare-fun temp1264_79 () (_ BitVec 64))
(declare-fun temp1264_80 () (_ BitVec 64))
(declare-fun temp1264_81 () (_ BitVec 64))
(declare-fun temp1264_82 () (_ BitVec 64))
(declare-fun temp1264_83 () (_ BitVec 64))
(declare-fun temp1264_84 () (_ BitVec 64))
(declare-fun temp1264_85 () (_ BitVec 64))
(declare-fun temp1264_86 () (_ BitVec 64))
(declare-fun temp1264_87 () (_ BitVec 64))
(declare-fun temp1264_88 () (_ BitVec 64))
(declare-fun temp1264_89 () (_ BitVec 64))
(declare-fun temp1264_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1264_91 () (_ BitVec 64))
(declare-fun temp1264_92 () (_ BitVec 64))
(declare-fun temp1264_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_94 () (_ BitVec 64))
(declare-fun temp1264_95 () (_ BitVec 64))
(declare-fun temp1264_96 () (_ BitVec 64))
(declare-fun temp1264_97 () (_ BitVec 64))
(declare-fun temp1264_98 () (_ BitVec 64))
(declare-fun temp1264_99 () (_ BitVec 64))
(declare-fun temp1264_100 () (_ BitVec 64))
(declare-fun temp1264_101 () (_ BitVec 64))
(declare-fun temp1264_102 () (_ BitVec 64))
(declare-fun temp1264_103 () (_ BitVec 64))
(declare-fun temp1264_104 () (_ BitVec 64))
(declare-fun temp1264_105 () (_ BitVec 64))
(declare-fun temp1264_106 () (_ BitVec 64))
(declare-fun temp1264_107 () (_ BitVec 64))
(declare-fun temp1264_108 () (_ BitVec 64))
(declare-fun temp1264_109 () (_ BitVec 64))
(declare-fun temp1264_110 () (_ BitVec 64))
(declare-fun temp1264_111 () (_ BitVec 64))
(declare-fun temp1264_112 () (_ BitVec 64))
(declare-fun temp1264_113 () (_ BitVec 64))
(declare-fun temp1264_114 () (_ BitVec 64))
(declare-fun temp1264_115 () (_ BitVec 64))
(declare-fun temp1264_116 () (_ BitVec 64))
(declare-fun temp1264_117 () (_ BitVec 64))
(declare-fun temp1264_118 () (_ BitVec 64))
(declare-fun temp1264_119 () (_ BitVec 64))
(declare-fun temp1264_120 () (_ BitVec 64))
(declare-fun temp1264_121 () (_ BitVec 64))
(declare-fun temp1264_122 () (_ BitVec 64))
(declare-fun temp1264_123 () (_ BitVec 64))
(declare-fun temp1264_124 () (_ BitVec 64))
(declare-fun temp1264_125 () (_ BitVec 64))
(declare-fun temp1264_126 () (_ BitVec 64))
(declare-fun temp1264_127 () (_ BitVec 64))
(declare-fun temp1264_128 () (_ BitVec 64))
(declare-fun temp1264_129 () (_ BitVec 64))
(declare-fun temp1264_130 () (_ BitVec 64))
(declare-fun temp1264_131 () (_ BitVec 64))
(declare-fun temp1264_132 () (_ BitVec 64))
(declare-fun temp1264_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1264_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1264_135 () (_ BitVec 64))
(declare-fun temp1264_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1264_137 () (_ BitVec 64))
(declare-fun temp1264_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_139 () (_ BitVec 64))
(declare-fun temp1264_140 () (_ BitVec 64))
(declare-fun temp1264_141 () (_ BitVec 64))
(declare-fun temp1264_142 () (_ BitVec 64))
(declare-fun temp1264_143 () (_ BitVec 64))
(declare-fun temp1264_144 () (_ BitVec 64))
(declare-fun temp1264_145 () (_ BitVec 64))
(declare-fun temp1264_146 () (_ BitVec 64))
(declare-fun temp1264_147 () (_ BitVec 64))
(declare-fun temp1264_148 () (_ BitVec 64))
(declare-fun temp1264_149 () (_ BitVec 64))
(declare-fun temp1264_150 () (_ BitVec 64))
(declare-fun temp1264_151 () (_ BitVec 64))
(declare-fun temp1264_152 () (_ BitVec 64))
(declare-fun temp1264_153 () (_ BitVec 64))
(declare-fun temp1264_154 () (_ BitVec 64))
(declare-fun temp1264_156 () (_ BitVec 64))
(declare-fun temp1264_157 () (_ BitVec 64))
(declare-fun temp1264_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1264_158 () (_ BitVec 64))
(declare-fun temp1264_159 () (_ BitVec 64))
(declare-fun temp1264_161 () (_ BitVec 64))
(declare-fun temp1264_162 () (_ BitVec 64))
(declare-fun temp1264_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1264_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1264_164 () (_ BitVec 64))
(declare-fun temp1264_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1264_166 () (_ BitVec 64))
(declare-fun temp1264_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1264_168 () (_ BitVec 64))
(declare-fun temp1264_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_170 () (_ BitVec 64))
(declare-fun temp1264_171 () (_ BitVec 64))
(declare-fun temp1264_172 () (_ BitVec 64))
(declare-fun temp1264_173 () (_ BitVec 64))
(declare-fun temp1264_174 () (_ BitVec 64))
(declare-fun temp1264_175 () (_ BitVec 64))
(declare-fun temp1264_176 () (_ BitVec 64))
(declare-fun temp1264_177 () (_ BitVec 64))
(declare-fun temp1264_178 () (_ BitVec 64))
(declare-fun temp1264_179 () (_ BitVec 64))
(declare-fun temp1264_180 () (_ BitVec 64))
(declare-fun temp1264_181 () (_ BitVec 64))
(declare-fun temp1264_182 () (_ BitVec 64))
(declare-fun temp1264_183 () (_ BitVec 64))
(declare-fun temp1264_184 () (_ BitVec 64))
(declare-fun temp1264_185 () (_ BitVec 64))
(declare-fun temp1264_186 () (_ BitVec 64))
(declare-fun temp1264_187 () (_ BitVec 64))
(declare-fun temp1264_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1264_189 () (_ BitVec 64))
(declare-fun temp1264_191 () (_ BitVec 64))
(declare-fun temp1264_192 () (_ BitVec 64))
(declare-fun temp1264_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1264_193 () (_ BitVec 64))
(declare-fun temp1264_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1264_195 () (_ BitVec 64))
(declare-fun temp1264_196 () (_ BitVec 64))
(declare-fun temp1264_197 () (_ BitVec 64))
(declare-fun temp1264_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_199 () (_ BitVec 64))
(declare-fun temp1264_200 () (_ BitVec 64))
(declare-fun temp1264_201 () (_ BitVec 64))
(declare-fun temp1264_202 () (_ BitVec 64))
(declare-fun temp1264_203 () (_ BitVec 64))
(declare-fun temp1264_204 () (_ BitVec 64))
(declare-fun temp1264_205 () (_ BitVec 64))
(declare-fun temp1264_206 () (_ BitVec 64))
(declare-fun temp1264_207 () (_ BitVec 64))
(declare-fun temp1264_208 () (_ BitVec 64))
(declare-fun temp1264_209 () (_ BitVec 64))
(declare-fun temp1264_210 () (_ BitVec 64))
(declare-fun temp1264_211 () (_ BitVec 64))
(declare-fun temp1264_212 () (_ BitVec 64))
(declare-fun temp1264_213 () (_ BitVec 64))
(declare-fun temp1264_214 () (_ BitVec 64))
(declare-fun temp1264_215 () (_ BitVec 64))
(declare-fun temp1264_216 () (_ BitVec 64))
(declare-fun temp1264_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1264_218 () (_ BitVec 64))
(declare-fun temp1264_220 () (_ BitVec 64))
(declare-fun temp1264_221 () (_ BitVec 64))
(declare-fun temp1264_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1264_222 () (_ BitVec 64))
(declare-fun temp1264_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1264_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1264_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1264_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1264_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1264_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1264_229 () (_ BitVec 64))
(declare-fun temp1264_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1264_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1264_232 () (_ BitVec 64))
(declare-fun temp1264_233 () (_ BitVec 64))
(declare-fun temp1264_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1264_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1264_236 () (_ BitVec 64))
(declare-fun temp1264_237 () (_ BitVec 64))
(declare-fun var5050621 () (_ BitVec 64))
(declare-fun var5050566 () (_ BitVec 64))
(declare-fun var4996900 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1264_238 () (_ BitVec 64))
(declare-fun var5256835 () (_ BitVec 64))
(declare-fun var5256837 () (_ BitVec 64))
(declare-fun var5322380 () (_ BitVec 64))
(declare-fun var5322381 () (_ BitVec 64))
(declare-fun var5322394 () (_ BitVec 64))
(declare-fun var5322396 () (_ BitVec 64))
(declare-fun temp1264_239 () (_ BitVec 64))
(declare-fun var5322421 () (_ BitVec 64))
(declare-fun var5322423 () (_ BitVec 64))
(declare-fun var5443411 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp1264_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp1264_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp1264_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp1264_244 () (_ BitVec 64))
(declare-fun temp1264_243 () (_ BitVec 64))
(declare-fun temp1264_245 () (_ BitVec 64))
(declare-fun var8261098 () (_ BitVec 64))
(declare-fun temp1264_247 () (_ BitVec 64))
(declare-fun temp1264_246 () (_ BitVec 64))
(declare-fun temp1264_248 () (_ BitVec 64))
(declare-fun temp1264_249 () (_ BitVec 64))
(declare-fun var9057044 () (_ BitVec 64))
(declare-fun var9057011 () (_ BitVec 64))
(declare-fun var8925575 () (_ BitVec 64))
(declare-fun var8925571 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1264_250 () (_ BitVec 64))
(assert (= temp1264_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1264_1)))
(assert (= temp1264_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1264_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_3 #x0000000000000000))
(assert (= var79869 temp1264_3))
(assert (= temp1264_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1264_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_5 #x0000000000000000))
(assert (= var79914 temp1264_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1264_6 #x0000000000000000))
(assert (= temp1264_7 temp1264_6))
(assert (= temp1264_8 (select ARGNAME_padding_NAMEEND_VAL temp1264_7)))
(assert (= temp1264_9 #x0000000000000001))
(assert (= temp1264_10 temp1264_9))
(assert (= temp1264_11 (select ARGNAME_padding_NAMEEND_VAL temp1264_10)))
(assert (= temp1264_12 #x0000000000000002))
(assert (= temp1264_13 temp1264_12))
(assert (= temp1264_14 (select ARGNAME_padding_NAMEEND_VAL temp1264_13)))
(assert (= temp1264_15 #x0000000000000003))
(assert (= temp1264_16 temp1264_15))
(assert (= temp1264_17 (select ARGNAME_padding_NAMEEND_VAL temp1264_16)))
(assert (= temp1264_18 #x0000000000000004))
(assert (= temp1264_19 temp1264_18))
(assert (= temp1264_20 (select ARGNAME_padding_NAMEEND_VAL temp1264_19)))
(assert (= temp1264_21 #x0000000000000005))
(assert (= temp1264_22 temp1264_21))
(assert (= temp1264_23 (select ARGNAME_padding_NAMEEND_VAL temp1264_22)))
(assert (= temp1264_24 #x0000000000000000))
(assert (= temp1264_25 #x0000000000000000))
(assert (= temp1264_26 temp1264_25))
(assert (= temp1264_27 (select ARGNAME_padding_NAMEEND_VAL temp1264_26)))
(assert (= temp1264_28 #x0000000000000000))
(assert (= temp1264_29 #x0000000000000001))
(assert (= temp1264_30 temp1264_29))
(assert (= temp1264_31 (select ARGNAME_padding_NAMEEND_VAL temp1264_30)))
(assert (= temp1264_32 #x0000000000000000))
(assert (= temp1264_33 #x0000000000000002))
(assert (= temp1264_34 temp1264_33))
(assert (= temp1264_35 (select ARGNAME_padding_NAMEEND_VAL temp1264_34)))
(assert (= temp1264_36 #x0000000000000000))
(assert (= temp1264_37 #x0000000000000003))
(assert (= temp1264_38 temp1264_37))
(assert (= temp1264_39 (select ARGNAME_padding_NAMEEND_VAL temp1264_38)))
(assert (= temp1264_40 #x0000000000000000))
(assert (= temp1264_41 #x0000000000000004))
(assert (= temp1264_42 temp1264_41))
(assert (= temp1264_43 (select ARGNAME_padding_NAMEEND_VAL temp1264_42)))
(assert (= temp1264_44 #x0000000000000000))
(assert (= temp1264_45 #x0000000000000005))
(assert (= temp1264_46 temp1264_45))
(assert (= temp1264_47 (select ARGNAME_padding_NAMEEND_VAL temp1264_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1264_27 temp1264_24)
             (bvslt temp1264_31 temp1264_28)
             (bvslt temp1264_35 temp1264_32)
             (bvslt temp1264_39 temp1264_36)
             (bvslt temp1264_43 temp1264_40)
             (bvslt temp1264_47 temp1264_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_48 #x0000000000000000))
(assert (= var1322786 temp1264_48))
(assert (= temp1264_49 #x0000000000000000))
(assert (= temp1264_50 temp1264_49))
(assert (= temp1264_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_50)))
(assert (= temp1264_52 #x0000000000000001))
(assert (= temp1264_53 temp1264_52))
(assert (= temp1264_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_53)))
(assert (= temp1264_55 #x0000000000000002))
(assert (= temp1264_56 temp1264_55))
(assert (= temp1264_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_56)))
(assert (= temp1264_58 #x0000000000000003))
(assert (= temp1264_59 temp1264_58))
(assert (= temp1264_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_59)))
(assert (= temp1264_61 #x0000000000000004))
(assert (= temp1264_62 temp1264_61))
(assert (= temp1264_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_62)))
(assert (= temp1264_64 #x0000000000000005))
(assert (= temp1264_65 temp1264_64))
(assert (= temp1264_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_65)))
(assert (= temp1264_67 #x0000000000000000))
(assert (= temp1264_68 #x0000000000000000))
(assert (= temp1264_69 temp1264_68))
(assert (= temp1264_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_69)))
(assert (= temp1264_71 #x0000000000000000))
(assert (= temp1264_72 #x0000000000000001))
(assert (= temp1264_73 temp1264_72))
(assert (= temp1264_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_73)))
(assert (= temp1264_75 #x0000000000000000))
(assert (= temp1264_76 #x0000000000000002))
(assert (= temp1264_77 temp1264_76))
(assert (= temp1264_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_77)))
(assert (= temp1264_79 #x0000000000000000))
(assert (= temp1264_80 #x0000000000000003))
(assert (= temp1264_81 temp1264_80))
(assert (= temp1264_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_81)))
(assert (= temp1264_83 #x0000000000000000))
(assert (= temp1264_84 #x0000000000000004))
(assert (= temp1264_85 temp1264_84))
(assert (= temp1264_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_85)))
(assert (= temp1264_87 #x0000000000000000))
(assert (= temp1264_88 #x0000000000000005))
(assert (= temp1264_89 temp1264_88))
(assert (= temp1264_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1264_70 temp1264_67)
             (bvslt temp1264_74 temp1264_71)
             (bvslt temp1264_78 temp1264_75)
             (bvslt temp1264_82 temp1264_79)
             (bvslt temp1264_86 temp1264_83)
             (bvslt temp1264_90 temp1264_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_91 #x0000000000000000))
(assert (= var1322797 temp1264_91))
(assert (= temp1264_92 #x0000000000000000))
(assert (= temp1264_93 temp1264_92))
(assert (= temp1264_94 (select ARGNAME_stride_NAMEEND_VAL temp1264_93)))
(assert (= temp1264_95 #x0000000000000001))
(assert (= temp1264_96 temp1264_95))
(assert (= temp1264_97 (select ARGNAME_stride_NAMEEND_VAL temp1264_96)))
(assert (= temp1264_98 #x0000000000000002))
(assert (= temp1264_99 temp1264_98))
(assert (= temp1264_100 (select ARGNAME_stride_NAMEEND_VAL temp1264_99)))
(assert (= temp1264_101 #x0000000000000003))
(assert (= temp1264_102 temp1264_101))
(assert (= temp1264_103 (select ARGNAME_stride_NAMEEND_VAL temp1264_102)))
(assert (= temp1264_104 #x0000000000000004))
(assert (= temp1264_105 temp1264_104))
(assert (= temp1264_106 (select ARGNAME_stride_NAMEEND_VAL temp1264_105)))
(assert (= temp1264_107 #x0000000000000005))
(assert (= temp1264_108 temp1264_107))
(assert (= temp1264_109 (select ARGNAME_stride_NAMEEND_VAL temp1264_108)))
(assert (= temp1264_110 #x0000000000000000))
(assert (= temp1264_111 #x0000000000000000))
(assert (= temp1264_112 temp1264_111))
(assert (= temp1264_113 (select ARGNAME_stride_NAMEEND_VAL temp1264_112)))
(assert (= temp1264_114 #x0000000000000000))
(assert (= temp1264_115 #x0000000000000001))
(assert (= temp1264_116 temp1264_115))
(assert (= temp1264_117 (select ARGNAME_stride_NAMEEND_VAL temp1264_116)))
(assert (= temp1264_118 #x0000000000000000))
(assert (= temp1264_119 #x0000000000000002))
(assert (= temp1264_120 temp1264_119))
(assert (= temp1264_121 (select ARGNAME_stride_NAMEEND_VAL temp1264_120)))
(assert (= temp1264_122 #x0000000000000000))
(assert (= temp1264_123 #x0000000000000003))
(assert (= temp1264_124 temp1264_123))
(assert (= temp1264_125 (select ARGNAME_stride_NAMEEND_VAL temp1264_124)))
(assert (= temp1264_126 #x0000000000000000))
(assert (= temp1264_127 #x0000000000000004))
(assert (= temp1264_128 temp1264_127))
(assert (= temp1264_129 (select ARGNAME_stride_NAMEEND_VAL temp1264_128)))
(assert (= temp1264_130 #x0000000000000000))
(assert (= temp1264_131 #x0000000000000005))
(assert (= temp1264_132 temp1264_131))
(assert (= temp1264_133 (select ARGNAME_stride_NAMEEND_VAL temp1264_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1264_113 temp1264_110)
             (bvsle temp1264_117 temp1264_114)
             (bvsle temp1264_121 temp1264_118)
             (bvsle temp1264_125 temp1264_122)
             (bvsle temp1264_129 temp1264_126)
             (bvsle temp1264_133 temp1264_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_134 #x0000000000000000))
(assert (= var1322807 temp1264_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_135 #x0000000000000001))
(assert (= var1322819 temp1264_135))
(assert (= temp1264_136 #x0000000000000000))
(assert (= var1310898 temp1264_136))
(assert (= temp1264_137 #x0000000000000000))
(assert (= temp1264_138 temp1264_137))
(assert (= temp1264_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_138)))
(assert (= temp1264_140 #x0000000000000001))
(assert (= temp1264_141 temp1264_140))
(assert (= temp1264_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_141)))
(assert (= temp1264_143 #x0000000000000002))
(assert (= temp1264_144 temp1264_143))
(assert (= temp1264_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_144)))
(assert (= temp1264_146 #x0000000000000003))
(assert (= temp1264_147 temp1264_146))
(assert (= temp1264_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_147)))
(assert (= temp1264_149 #x0000000000000004))
(assert (= temp1264_150 temp1264_149))
(assert (= temp1264_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_150)))
(assert (= temp1264_152 #x0000000000000005))
(assert (= temp1264_153 temp1264_152))
(assert (= temp1264_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_153)))
(assert (= temp1264_156 var1310898))
(assert (= temp1264_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_156)))
(assert (= temp1264_155 temp1264_157))
(assert (= var1322852
   (ite (bvslt temp1264_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_158 #x0000000000000000))
(assert (= var1322852 temp1264_158))
(assert (= temp1264_159 #x0000000000000000))
(assert (= var1310898 temp1264_159))
(assert (= temp1264_161 var1310898))
(assert (= temp1264_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_161)))
(assert (= temp1264_160 temp1264_162))
(assert (= var1322874 (bvsmod temp1264_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1264_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1264_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_164 #x0000000000000001))
(assert (= var1322875 temp1264_164))
(assert (= temp1264_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1264_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_166 #x0000000000000001))
(assert (= var1322895 temp1264_166))
(assert (= temp1264_167 #x0000000000000001))
(assert (= var1311786 temp1264_167))
(assert (= temp1264_168 #x0000000000000000))
(assert (= temp1264_169 temp1264_168))
(assert (= temp1264_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_169)))
(assert (= temp1264_171 #x0000000000000001))
(assert (= temp1264_172 temp1264_171))
(assert (= temp1264_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_172)))
(assert (= temp1264_174 #x0000000000000002))
(assert (= temp1264_175 temp1264_174))
(assert (= temp1264_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_175)))
(assert (= temp1264_177 #x0000000000000003))
(assert (= temp1264_178 temp1264_177))
(assert (= temp1264_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_178)))
(assert (= temp1264_180 #x0000000000000004))
(assert (= temp1264_181 temp1264_180))
(assert (= temp1264_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_181)))
(assert (= temp1264_183 #x0000000000000005))
(assert (= temp1264_184 temp1264_183))
(assert (= temp1264_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_184)))
(assert (= temp1264_186 #x0000000000000000))
(assert (= temp1264_187
   (ite (bvslt var1311786 temp1264_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1264_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_187)))
(assert (= var1322903 temp1264_188))
(assert (bvslt (ite (bvslt var1311786 temp1264_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1264_189 #x0000000000000001))
(assert (= var1311786 temp1264_189))
(assert (= temp1264_191 var1311786))
(assert (= temp1264_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_191)))
(assert (= temp1264_190 temp1264_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1264_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_193 #x0000000000000001))
(assert (= var1322908 temp1264_193))
(assert (= temp1264_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1264_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_195 #x0000000000000001))
(assert (= var1322975 temp1264_195))
(assert (= temp1264_196 #x0000000000000000))
(assert (= var1310898 temp1264_196))
(assert (= temp1264_197 #x0000000000000000))
(assert (= temp1264_198 temp1264_197))
(assert (= temp1264_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1264_198)))
(assert (= temp1264_200 #x0000000000000001))
(assert (= temp1264_201 temp1264_200))
(assert (= temp1264_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1264_201)))
(assert (= temp1264_203 #x0000000000000002))
(assert (= temp1264_204 temp1264_203))
(assert (= temp1264_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1264_204)))
(assert (= temp1264_206 #x0000000000000003))
(assert (= temp1264_207 temp1264_206))
(assert (= temp1264_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1264_207)))
(assert (= temp1264_209 #x0000000000000004))
(assert (= temp1264_210 temp1264_209))
(assert (= temp1264_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1264_210)))
(assert (= temp1264_212 #x0000000000000005))
(assert (= temp1264_213 temp1264_212))
(assert (= temp1264_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1264_213)))
(assert (= temp1264_215 #x0000000000000000))
(assert (= temp1264_216
   (ite (bvslt var1310898 temp1264_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1264_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1264_216)))
(assert (= var1322977 temp1264_217))
(assert (bvslt (ite (bvslt var1310898 temp1264_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1264_218 #x0000000000000000))
(assert (= var1310898 temp1264_218))
(assert (= temp1264_220 var1310898))
(assert (= temp1264_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_220)))
(assert (= temp1264_219 temp1264_221))
(assert (= var1322980
   (ite (= var1322977 temp1264_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_222 #x0000000000000001))
(assert (= var1322980 temp1264_222))
(assert (= temp1264_223 #x0000000000000002))
(assert (= var1848169 temp1264_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1264_225 #x0000000000000001))
(assert (= var1323065 temp1264_225))
(assert (= temp1264_226 #x0000000000000001))
(assert (= var3486735 temp1264_226))
(assert (= temp1264_227 #x0000000000000001))
(assert (= var3814415 temp1264_227))
(assert (= temp1264_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1264_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_229 #x0000000000000001))
(assert (= var79986 temp1264_229))
(assert (= temp1264_230 #x0000000000000001))
(assert (= var80116 temp1264_230))
(assert (= var4796905 var80116))
(assert (= temp1264_231 #x0000000000000000))
(assert (= var4784306 temp1264_231))
(assert (= temp1264_232 #x0000000000000000))
(assert (= temp1264_233
   (ite (bvslt var4784306 temp1264_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1264_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_233)))
(assert (= var4796924 temp1264_234))
(assert (bvslt (ite (bvslt var4784306 temp1264_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1264_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1264_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_236 #x0000000000000001))
(assert (= var4796925 temp1264_236))
(assert (= temp1264_237 #x0000000000000000))
(assert (= var5050621 temp1264_237))
(assert (= var5050566 var5050621))
(assert (= var4996900 var5050566))
(assert (= var4996927 var4996900))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1264_238 #x0000000000000002))
(assert (= var5256835 temp1264_238))
(assert (= var5256837 (bvsub ARGNAME_weight_NAMEEND_DIM var5256835)))
(assert (= var5322380 var5256835))
(assert (= var5322381 var5256837))
(assert (= var5322394 (bvadd var5322381 var5322380)))
(assert (= var5322396
   (ite (bvsgt var5322394 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_239 #x0000000000000000))
(assert (= var5322396 temp1264_239))
(assert (= var5322421 var5322380))
(assert (= var5322423 var5322381))
(assert (= var5443411 var5322423))
(assert (= var5845392 var80129))
(assert (= temp1264_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp1264_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp1264_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp1264_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_244 #x0000000000000001))
(assert (= temp1264_243 temp1264_244))
(assert (= temp1264_245 #x0000000000000001))
(assert (= var8261098 temp1264_245))
(assert (= temp1264_247 #xffffffffffffffff))
(assert (= temp1264_246 temp1264_247))
(assert (= temp1264_248 #x0000000000000001))
(assert (= var79986 temp1264_248))
(assert (= temp1264_249 #x0000000000000000))
(assert (= var9057044 temp1264_249))
(assert (= var9057011 var9057044))
(assert (= var8925575 var9057011))
(assert (= var8925571 var8925575))
(assert (= var81597 var8925571))
(assert (= temp1264_250 #x0000000000000000))
(assert (= var81597 temp1264_250))
(model-add temp1264_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1264_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1264_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






