(declare-fun temp1028_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1028_2 () (_ BitVec 64))
(declare-fun temp1028_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1028_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp1028_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1028_6 () (_ BitVec 64))
(declare-fun temp1028_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1028_8 () (_ BitVec 64))
(declare-fun temp1028_9 () (_ BitVec 64))
(declare-fun temp1028_10 () (_ BitVec 64))
(declare-fun temp1028_11 () (_ BitVec 64))
(declare-fun temp1028_12 () (_ BitVec 64))
(declare-fun temp1028_13 () (_ BitVec 64))
(declare-fun temp1028_14 () (_ BitVec 64))
(declare-fun temp1028_15 () (_ BitVec 64))
(declare-fun temp1028_16 () (_ BitVec 64))
(declare-fun temp1028_17 () (_ BitVec 64))
(declare-fun temp1028_18 () (_ BitVec 64))
(declare-fun temp1028_19 () (_ BitVec 64))
(declare-fun temp1028_20 () (_ BitVec 64))
(declare-fun temp1028_21 () (_ BitVec 64))
(declare-fun temp1028_22 () (_ BitVec 64))
(declare-fun temp1028_23 () (_ BitVec 64))
(declare-fun temp1028_24 () (_ BitVec 64))
(declare-fun temp1028_25 () (_ BitVec 64))
(declare-fun temp1028_26 () (_ BitVec 64))
(declare-fun temp1028_27 () (_ BitVec 64))
(declare-fun temp1028_28 () (_ BitVec 64))
(declare-fun temp1028_29 () (_ BitVec 64))
(declare-fun temp1028_30 () (_ BitVec 64))
(declare-fun temp1028_31 () (_ BitVec 64))
(declare-fun temp1028_32 () (_ BitVec 64))
(declare-fun temp1028_33 () (_ BitVec 64))
(declare-fun temp1028_34 () (_ BitVec 64))
(declare-fun temp1028_35 () (_ BitVec 64))
(declare-fun temp1028_36 () (_ BitVec 64))
(declare-fun temp1028_37 () (_ BitVec 64))
(declare-fun temp1028_38 () (_ BitVec 64))
(declare-fun temp1028_39 () (_ BitVec 64))
(declare-fun temp1028_40 () (_ BitVec 64))
(declare-fun temp1028_41 () (_ BitVec 64))
(declare-fun temp1028_42 () (_ BitVec 64))
(declare-fun temp1028_43 () (_ BitVec 64))
(declare-fun temp1028_44 () (_ BitVec 64))
(declare-fun temp1028_45 () (_ BitVec 64))
(declare-fun temp1028_46 () (_ BitVec 64))
(declare-fun temp1028_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp1028_48 () (_ BitVec 64))
(declare-fun temp1028_49 () (_ BitVec 64))
(declare-fun temp1028_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1028_51 () (_ BitVec 64))
(declare-fun temp1028_52 () (_ BitVec 64))
(declare-fun temp1028_53 () (_ BitVec 64))
(declare-fun temp1028_54 () (_ BitVec 64))
(declare-fun temp1028_55 () (_ BitVec 64))
(declare-fun temp1028_56 () (_ BitVec 64))
(declare-fun temp1028_57 () (_ BitVec 64))
(declare-fun temp1028_58 () (_ BitVec 64))
(declare-fun temp1028_59 () (_ BitVec 64))
(declare-fun temp1028_60 () (_ BitVec 64))
(declare-fun temp1028_61 () (_ BitVec 64))
(declare-fun temp1028_62 () (_ BitVec 64))
(declare-fun temp1028_63 () (_ BitVec 64))
(declare-fun temp1028_64 () (_ BitVec 64))
(declare-fun temp1028_65 () (_ BitVec 64))
(declare-fun temp1028_66 () (_ BitVec 64))
(declare-fun temp1028_67 () (_ BitVec 64))
(declare-fun temp1028_68 () (_ BitVec 64))
(declare-fun temp1028_69 () (_ BitVec 64))
(declare-fun temp1028_70 () (_ BitVec 64))
(declare-fun temp1028_71 () (_ BitVec 64))
(declare-fun temp1028_72 () (_ BitVec 64))
(declare-fun temp1028_73 () (_ BitVec 64))
(declare-fun temp1028_74 () (_ BitVec 64))
(declare-fun temp1028_75 () (_ BitVec 64))
(declare-fun temp1028_76 () (_ BitVec 64))
(declare-fun temp1028_77 () (_ BitVec 64))
(declare-fun temp1028_78 () (_ BitVec 64))
(declare-fun temp1028_79 () (_ BitVec 64))
(declare-fun temp1028_80 () (_ BitVec 64))
(declare-fun temp1028_81 () (_ BitVec 64))
(declare-fun temp1028_82 () (_ BitVec 64))
(declare-fun temp1028_83 () (_ BitVec 64))
(declare-fun temp1028_84 () (_ BitVec 64))
(declare-fun temp1028_85 () (_ BitVec 64))
(declare-fun temp1028_86 () (_ BitVec 64))
(declare-fun temp1028_87 () (_ BitVec 64))
(declare-fun temp1028_88 () (_ BitVec 64))
(declare-fun temp1028_89 () (_ BitVec 64))
(declare-fun temp1028_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp1028_91 () (_ BitVec 64))
(declare-fun temp1028_92 () (_ BitVec 64))
(declare-fun temp1028_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1028_94 () (_ BitVec 64))
(declare-fun temp1028_95 () (_ BitVec 64))
(declare-fun temp1028_96 () (_ BitVec 64))
(declare-fun temp1028_97 () (_ BitVec 64))
(declare-fun temp1028_98 () (_ BitVec 64))
(declare-fun temp1028_99 () (_ BitVec 64))
(declare-fun temp1028_100 () (_ BitVec 64))
(declare-fun temp1028_101 () (_ BitVec 64))
(declare-fun temp1028_102 () (_ BitVec 64))
(declare-fun temp1028_103 () (_ BitVec 64))
(declare-fun temp1028_104 () (_ BitVec 64))
(declare-fun temp1028_105 () (_ BitVec 64))
(declare-fun temp1028_106 () (_ BitVec 64))
(declare-fun temp1028_107 () (_ BitVec 64))
(declare-fun temp1028_108 () (_ BitVec 64))
(declare-fun temp1028_109 () (_ BitVec 64))
(declare-fun temp1028_110 () (_ BitVec 64))
(declare-fun temp1028_111 () (_ BitVec 64))
(declare-fun temp1028_112 () (_ BitVec 64))
(declare-fun temp1028_113 () (_ BitVec 64))
(declare-fun temp1028_114 () (_ BitVec 64))
(declare-fun temp1028_115 () (_ BitVec 64))
(declare-fun temp1028_116 () (_ BitVec 64))
(declare-fun temp1028_117 () (_ BitVec 64))
(declare-fun temp1028_118 () (_ BitVec 64))
(declare-fun temp1028_119 () (_ BitVec 64))
(declare-fun temp1028_120 () (_ BitVec 64))
(declare-fun temp1028_121 () (_ BitVec 64))
(declare-fun temp1028_122 () (_ BitVec 64))
(declare-fun temp1028_123 () (_ BitVec 64))
(declare-fun temp1028_124 () (_ BitVec 64))
(declare-fun temp1028_125 () (_ BitVec 64))
(declare-fun temp1028_126 () (_ BitVec 64))
(declare-fun temp1028_127 () (_ BitVec 64))
(declare-fun temp1028_128 () (_ BitVec 64))
(declare-fun temp1028_129 () (_ BitVec 64))
(declare-fun temp1028_130 () (_ BitVec 64))
(declare-fun temp1028_131 () (_ BitVec 64))
(declare-fun temp1028_132 () (_ BitVec 64))
(declare-fun temp1028_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp1028_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp1028_135 () (_ BitVec 64))
(declare-fun temp1028_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp1028_137 () (_ BitVec 64))
(declare-fun temp1028_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1028_139 () (_ BitVec 64))
(declare-fun temp1028_140 () (_ BitVec 64))
(declare-fun temp1028_141 () (_ BitVec 64))
(declare-fun temp1028_142 () (_ BitVec 64))
(declare-fun temp1028_143 () (_ BitVec 64))
(declare-fun temp1028_144 () (_ BitVec 64))
(declare-fun temp1028_145 () (_ BitVec 64))
(declare-fun temp1028_146 () (_ BitVec 64))
(declare-fun temp1028_147 () (_ BitVec 64))
(declare-fun temp1028_148 () (_ BitVec 64))
(declare-fun temp1028_149 () (_ BitVec 64))
(declare-fun temp1028_150 () (_ BitVec 64))
(declare-fun temp1028_151 () (_ BitVec 64))
(declare-fun temp1028_152 () (_ BitVec 64))
(declare-fun temp1028_153 () (_ BitVec 64))
(declare-fun temp1028_154 () (_ BitVec 64))
(declare-fun temp1028_156 () (_ BitVec 64))
(declare-fun temp1028_157 () (_ BitVec 64))
(declare-fun temp1028_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp1028_158 () (_ BitVec 64))
(declare-fun temp1028_159 () (_ BitVec 64))
(declare-fun temp1028_161 () (_ BitVec 64))
(declare-fun temp1028_162 () (_ BitVec 64))
(declare-fun temp1028_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp1028_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp1028_164 () (_ BitVec 64))
(declare-fun temp1028_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp1028_166 () (_ BitVec 64))
(declare-fun temp1028_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp1028_168 () (_ BitVec 64))
(declare-fun temp1028_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1028_170 () (_ BitVec 64))
(declare-fun temp1028_171 () (_ BitVec 64))
(declare-fun temp1028_172 () (_ BitVec 64))
(declare-fun temp1028_173 () (_ BitVec 64))
(declare-fun temp1028_174 () (_ BitVec 64))
(declare-fun temp1028_175 () (_ BitVec 64))
(declare-fun temp1028_176 () (_ BitVec 64))
(declare-fun temp1028_177 () (_ BitVec 64))
(declare-fun temp1028_178 () (_ BitVec 64))
(declare-fun temp1028_179 () (_ BitVec 64))
(declare-fun temp1028_180 () (_ BitVec 64))
(declare-fun temp1028_181 () (_ BitVec 64))
(declare-fun temp1028_182 () (_ BitVec 64))
(declare-fun temp1028_183 () (_ BitVec 64))
(declare-fun temp1028_184 () (_ BitVec 64))
(declare-fun temp1028_185 () (_ BitVec 64))
(declare-fun temp1028_186 () (_ BitVec 64))
(declare-fun temp1028_187 () (_ BitVec 64))
(declare-fun temp1028_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp1028_189 () (_ BitVec 64))
(declare-fun temp1028_191 () (_ BitVec 64))
(declare-fun temp1028_192 () (_ BitVec 64))
(declare-fun temp1028_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp1028_193 () (_ BitVec 64))
(declare-fun temp1028_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp1028_195 () (_ BitVec 64))
(declare-fun temp1028_196 () (_ BitVec 64))
(declare-fun temp1028_197 () (_ BitVec 64))
(declare-fun temp1028_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1028_199 () (_ BitVec 64))
(declare-fun temp1028_200 () (_ BitVec 64))
(declare-fun temp1028_201 () (_ BitVec 64))
(declare-fun temp1028_202 () (_ BitVec 64))
(declare-fun temp1028_203 () (_ BitVec 64))
(declare-fun temp1028_204 () (_ BitVec 64))
(declare-fun temp1028_205 () (_ BitVec 64))
(declare-fun temp1028_206 () (_ BitVec 64))
(declare-fun temp1028_207 () (_ BitVec 64))
(declare-fun temp1028_208 () (_ BitVec 64))
(declare-fun temp1028_209 () (_ BitVec 64))
(declare-fun temp1028_210 () (_ BitVec 64))
(declare-fun temp1028_211 () (_ BitVec 64))
(declare-fun temp1028_212 () (_ BitVec 64))
(declare-fun temp1028_213 () (_ BitVec 64))
(declare-fun temp1028_214 () (_ BitVec 64))
(declare-fun temp1028_215 () (_ BitVec 64))
(declare-fun temp1028_216 () (_ BitVec 64))
(declare-fun temp1028_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp1028_218 () (_ BitVec 64))
(declare-fun temp1028_220 () (_ BitVec 64))
(declare-fun temp1028_221 () (_ BitVec 64))
(declare-fun temp1028_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp1028_222 () (_ BitVec 64))
(declare-fun temp1028_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp1028_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp1028_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp1028_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp1028_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp1028_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp1028_229 () (_ BitVec 64))
(declare-fun temp1028_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp1028_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp1028_232 () (_ BitVec 64))
(declare-fun temp1028_233 () (_ BitVec 64))
(declare-fun temp1028_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp1028_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp1028_236 () (_ BitVec 64))
(declare-fun temp1028_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp1028_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp1028_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun var6107536 () (_ BitVec 64))
(declare-fun temp1028_240 () (_ BitVec 64))
(declare-fun var6435216 () (_ BitVec 64))
(declare-fun temp1028_241 () (_ BitVec 64))
(declare-fun temp1028_242 () (_ BitVec 64))
(declare-fun var7877396 () (_ BitVec 64))
(declare-fun var7877363 () (_ BitVec 64))
(declare-fun var7745927 () (_ BitVec 64))
(declare-fun var7745923 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp1028_243 () (_ BitVec 64))
(assert (= temp1028_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp1028_1)))
(assert (= temp1028_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1028_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_3 #x0000000000000000))
(assert (= var79869 temp1028_3))
(assert (= temp1028_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp1028_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_5 #x0000000000000000))
(assert (= var79914 temp1028_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp1028_6 #x0000000000000000))
(assert (= temp1028_7 temp1028_6))
(assert (= temp1028_8 (select ARGNAME_padding_NAMEEND_VAL temp1028_7)))
(assert (= temp1028_9 #x0000000000000001))
(assert (= temp1028_10 temp1028_9))
(assert (= temp1028_11 (select ARGNAME_padding_NAMEEND_VAL temp1028_10)))
(assert (= temp1028_12 #x0000000000000002))
(assert (= temp1028_13 temp1028_12))
(assert (= temp1028_14 (select ARGNAME_padding_NAMEEND_VAL temp1028_13)))
(assert (= temp1028_15 #x0000000000000003))
(assert (= temp1028_16 temp1028_15))
(assert (= temp1028_17 (select ARGNAME_padding_NAMEEND_VAL temp1028_16)))
(assert (= temp1028_18 #x0000000000000004))
(assert (= temp1028_19 temp1028_18))
(assert (= temp1028_20 (select ARGNAME_padding_NAMEEND_VAL temp1028_19)))
(assert (= temp1028_21 #x0000000000000005))
(assert (= temp1028_22 temp1028_21))
(assert (= temp1028_23 (select ARGNAME_padding_NAMEEND_VAL temp1028_22)))
(assert (= temp1028_24 #x0000000000000000))
(assert (= temp1028_25 #x0000000000000000))
(assert (= temp1028_26 temp1028_25))
(assert (= temp1028_27 (select ARGNAME_padding_NAMEEND_VAL temp1028_26)))
(assert (= temp1028_28 #x0000000000000000))
(assert (= temp1028_29 #x0000000000000001))
(assert (= temp1028_30 temp1028_29))
(assert (= temp1028_31 (select ARGNAME_padding_NAMEEND_VAL temp1028_30)))
(assert (= temp1028_32 #x0000000000000000))
(assert (= temp1028_33 #x0000000000000002))
(assert (= temp1028_34 temp1028_33))
(assert (= temp1028_35 (select ARGNAME_padding_NAMEEND_VAL temp1028_34)))
(assert (= temp1028_36 #x0000000000000000))
(assert (= temp1028_37 #x0000000000000003))
(assert (= temp1028_38 temp1028_37))
(assert (= temp1028_39 (select ARGNAME_padding_NAMEEND_VAL temp1028_38)))
(assert (= temp1028_40 #x0000000000000000))
(assert (= temp1028_41 #x0000000000000004))
(assert (= temp1028_42 temp1028_41))
(assert (= temp1028_43 (select ARGNAME_padding_NAMEEND_VAL temp1028_42)))
(assert (= temp1028_44 #x0000000000000000))
(assert (= temp1028_45 #x0000000000000005))
(assert (= temp1028_46 temp1028_45))
(assert (= temp1028_47 (select ARGNAME_padding_NAMEEND_VAL temp1028_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp1028_27 temp1028_24)
             (bvslt temp1028_31 temp1028_28)
             (bvslt temp1028_35 temp1028_32)
             (bvslt temp1028_39 temp1028_36)
             (bvslt temp1028_43 temp1028_40)
             (bvslt temp1028_47 temp1028_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_48 #x0000000000000000))
(assert (= var1322786 temp1028_48))
(assert (= temp1028_49 #x0000000000000000))
(assert (= temp1028_50 temp1028_49))
(assert (= temp1028_51 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_50)))
(assert (= temp1028_52 #x0000000000000001))
(assert (= temp1028_53 temp1028_52))
(assert (= temp1028_54 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_53)))
(assert (= temp1028_55 #x0000000000000002))
(assert (= temp1028_56 temp1028_55))
(assert (= temp1028_57 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_56)))
(assert (= temp1028_58 #x0000000000000003))
(assert (= temp1028_59 temp1028_58))
(assert (= temp1028_60 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_59)))
(assert (= temp1028_61 #x0000000000000004))
(assert (= temp1028_62 temp1028_61))
(assert (= temp1028_63 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_62)))
(assert (= temp1028_64 #x0000000000000005))
(assert (= temp1028_65 temp1028_64))
(assert (= temp1028_66 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_65)))
(assert (= temp1028_67 #x0000000000000000))
(assert (= temp1028_68 #x0000000000000000))
(assert (= temp1028_69 temp1028_68))
(assert (= temp1028_70 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_69)))
(assert (= temp1028_71 #x0000000000000000))
(assert (= temp1028_72 #x0000000000000001))
(assert (= temp1028_73 temp1028_72))
(assert (= temp1028_74 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_73)))
(assert (= temp1028_75 #x0000000000000000))
(assert (= temp1028_76 #x0000000000000002))
(assert (= temp1028_77 temp1028_76))
(assert (= temp1028_78 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_77)))
(assert (= temp1028_79 #x0000000000000000))
(assert (= temp1028_80 #x0000000000000003))
(assert (= temp1028_81 temp1028_80))
(assert (= temp1028_82 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_81)))
(assert (= temp1028_83 #x0000000000000000))
(assert (= temp1028_84 #x0000000000000004))
(assert (= temp1028_85 temp1028_84))
(assert (= temp1028_86 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_85)))
(assert (= temp1028_87 #x0000000000000000))
(assert (= temp1028_88 #x0000000000000005))
(assert (= temp1028_89 temp1028_88))
(assert (= temp1028_90 (select ARGNAME_output_padding_NAMEEND_VAL temp1028_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp1028_70 temp1028_67)
             (bvslt temp1028_74 temp1028_71)
             (bvslt temp1028_78 temp1028_75)
             (bvslt temp1028_82 temp1028_79)
             (bvslt temp1028_86 temp1028_83)
             (bvslt temp1028_90 temp1028_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_91 #x0000000000000000))
(assert (= var1322797 temp1028_91))
(assert (= temp1028_92 #x0000000000000000))
(assert (= temp1028_93 temp1028_92))
(assert (= temp1028_94 (select ARGNAME_stride_NAMEEND_VAL temp1028_93)))
(assert (= temp1028_95 #x0000000000000001))
(assert (= temp1028_96 temp1028_95))
(assert (= temp1028_97 (select ARGNAME_stride_NAMEEND_VAL temp1028_96)))
(assert (= temp1028_98 #x0000000000000002))
(assert (= temp1028_99 temp1028_98))
(assert (= temp1028_100 (select ARGNAME_stride_NAMEEND_VAL temp1028_99)))
(assert (= temp1028_101 #x0000000000000003))
(assert (= temp1028_102 temp1028_101))
(assert (= temp1028_103 (select ARGNAME_stride_NAMEEND_VAL temp1028_102)))
(assert (= temp1028_104 #x0000000000000004))
(assert (= temp1028_105 temp1028_104))
(assert (= temp1028_106 (select ARGNAME_stride_NAMEEND_VAL temp1028_105)))
(assert (= temp1028_107 #x0000000000000005))
(assert (= temp1028_108 temp1028_107))
(assert (= temp1028_109 (select ARGNAME_stride_NAMEEND_VAL temp1028_108)))
(assert (= temp1028_110 #x0000000000000000))
(assert (= temp1028_111 #x0000000000000000))
(assert (= temp1028_112 temp1028_111))
(assert (= temp1028_113 (select ARGNAME_stride_NAMEEND_VAL temp1028_112)))
(assert (= temp1028_114 #x0000000000000000))
(assert (= temp1028_115 #x0000000000000001))
(assert (= temp1028_116 temp1028_115))
(assert (= temp1028_117 (select ARGNAME_stride_NAMEEND_VAL temp1028_116)))
(assert (= temp1028_118 #x0000000000000000))
(assert (= temp1028_119 #x0000000000000002))
(assert (= temp1028_120 temp1028_119))
(assert (= temp1028_121 (select ARGNAME_stride_NAMEEND_VAL temp1028_120)))
(assert (= temp1028_122 #x0000000000000000))
(assert (= temp1028_123 #x0000000000000003))
(assert (= temp1028_124 temp1028_123))
(assert (= temp1028_125 (select ARGNAME_stride_NAMEEND_VAL temp1028_124)))
(assert (= temp1028_126 #x0000000000000000))
(assert (= temp1028_127 #x0000000000000004))
(assert (= temp1028_128 temp1028_127))
(assert (= temp1028_129 (select ARGNAME_stride_NAMEEND_VAL temp1028_128)))
(assert (= temp1028_130 #x0000000000000000))
(assert (= temp1028_131 #x0000000000000005))
(assert (= temp1028_132 temp1028_131))
(assert (= temp1028_133 (select ARGNAME_stride_NAMEEND_VAL temp1028_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp1028_113 temp1028_110)
             (bvsle temp1028_117 temp1028_114)
             (bvsle temp1028_121 temp1028_118)
             (bvsle temp1028_125 temp1028_122)
             (bvsle temp1028_129 temp1028_126)
             (bvsle temp1028_133 temp1028_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_134 #x0000000000000000))
(assert (= var1322807 temp1028_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_135 #x0000000000000001))
(assert (= var1322819 temp1028_135))
(assert (= temp1028_136 #x0000000000000000))
(assert (= var1310898 temp1028_136))
(assert (= temp1028_137 #x0000000000000000))
(assert (= temp1028_138 temp1028_137))
(assert (= temp1028_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_138)))
(assert (= temp1028_140 #x0000000000000001))
(assert (= temp1028_141 temp1028_140))
(assert (= temp1028_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_141)))
(assert (= temp1028_143 #x0000000000000002))
(assert (= temp1028_144 temp1028_143))
(assert (= temp1028_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_144)))
(assert (= temp1028_146 #x0000000000000003))
(assert (= temp1028_147 temp1028_146))
(assert (= temp1028_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_147)))
(assert (= temp1028_149 #x0000000000000004))
(assert (= temp1028_150 temp1028_149))
(assert (= temp1028_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_150)))
(assert (= temp1028_152 #x0000000000000005))
(assert (= temp1028_153 temp1028_152))
(assert (= temp1028_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_153)))
(assert (= temp1028_156 var1310898))
(assert (= temp1028_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_156)))
(assert (= temp1028_155 temp1028_157))
(assert (= var1322852
   (ite (bvslt temp1028_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_158 #x0000000000000000))
(assert (= var1322852 temp1028_158))
(assert (= temp1028_159 #x0000000000000000))
(assert (= var1310898 temp1028_159))
(assert (= temp1028_161 var1310898))
(assert (= temp1028_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_161)))
(assert (= temp1028_160 temp1028_162))
(assert (= var1322874 (bvsmod temp1028_160 ARGNAME_groups_NAMEEND)))
(assert (= temp1028_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp1028_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp1028_164 #x0000000000000001))
(assert (= var1322875 temp1028_164))
(assert (= temp1028_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp1028_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_166 #x0000000000000001))
(assert (= var1322895 temp1028_166))
(assert (= temp1028_167 #x0000000000000001))
(assert (= var1311786 temp1028_167))
(assert (= temp1028_168 #x0000000000000000))
(assert (= temp1028_169 temp1028_168))
(assert (= temp1028_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp1028_169)))
(assert (= temp1028_171 #x0000000000000001))
(assert (= temp1028_172 temp1028_171))
(assert (= temp1028_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp1028_172)))
(assert (= temp1028_174 #x0000000000000002))
(assert (= temp1028_175 temp1028_174))
(assert (= temp1028_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp1028_175)))
(assert (= temp1028_177 #x0000000000000003))
(assert (= temp1028_178 temp1028_177))
(assert (= temp1028_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp1028_178)))
(assert (= temp1028_180 #x0000000000000004))
(assert (= temp1028_181 temp1028_180))
(assert (= temp1028_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp1028_181)))
(assert (= temp1028_183 #x0000000000000005))
(assert (= temp1028_184 temp1028_183))
(assert (= temp1028_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp1028_184)))
(assert (= temp1028_186 #x0000000000000000))
(assert (= temp1028_187
   (ite (bvslt var1311786 temp1028_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp1028_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp1028_187)))
(assert (= var1322903 temp1028_188))
(assert (bvslt (ite (bvslt var1311786 temp1028_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1028_189 #x0000000000000001))
(assert (= var1311786 temp1028_189))
(assert (= temp1028_191 var1311786))
(assert (= temp1028_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_191)))
(assert (= temp1028_190 temp1028_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp1028_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp1028_193 #x0000000000000001))
(assert (= var1322908 temp1028_193))
(assert (= temp1028_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp1028_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_195 #x0000000000000001))
(assert (= var1322975 temp1028_195))
(assert (= temp1028_196 #x0000000000000000))
(assert (= var1310898 temp1028_196))
(assert (= temp1028_197 #x0000000000000000))
(assert (= temp1028_198 temp1028_197))
(assert (= temp1028_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1028_198)))
(assert (= temp1028_200 #x0000000000000001))
(assert (= temp1028_201 temp1028_200))
(assert (= temp1028_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1028_201)))
(assert (= temp1028_203 #x0000000000000002))
(assert (= temp1028_204 temp1028_203))
(assert (= temp1028_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1028_204)))
(assert (= temp1028_206 #x0000000000000003))
(assert (= temp1028_207 temp1028_206))
(assert (= temp1028_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1028_207)))
(assert (= temp1028_209 #x0000000000000004))
(assert (= temp1028_210 temp1028_209))
(assert (= temp1028_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1028_210)))
(assert (= temp1028_212 #x0000000000000005))
(assert (= temp1028_213 temp1028_212))
(assert (= temp1028_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1028_213)))
(assert (= temp1028_215 #x0000000000000000))
(assert (= temp1028_216
   (ite (bvslt var1310898 temp1028_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp1028_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp1028_216)))
(assert (= var1322977 temp1028_217))
(assert (bvslt (ite (bvslt var1310898 temp1028_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp1028_218 #x0000000000000000))
(assert (= var1310898 temp1028_218))
(assert (= temp1028_220 var1310898))
(assert (= temp1028_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_220)))
(assert (= temp1028_219 temp1028_221))
(assert (= var1322980
   (ite (= var1322977 temp1028_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp1028_222 #x0000000000000001))
(assert (= var1322980 temp1028_222))
(assert (= temp1028_223 #x0000000000000002))
(assert (= var1848169 temp1028_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp1028_225 #x0000000000000001))
(assert (= var1323065 temp1028_225))
(assert (= temp1028_226 #x0000000000000001))
(assert (= var3486735 temp1028_226))
(assert (= temp1028_227 #x0000000000000001))
(assert (= var3814415 temp1028_227))
(assert (= temp1028_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1028_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_229 #x0000000000000001))
(assert (= var79986 temp1028_229))
(assert (= temp1028_230 #x0000000000000001))
(assert (= var80116 temp1028_230))
(assert (= var4796905 var80116))
(assert (= temp1028_231 #x0000000000000000))
(assert (= var4784306 temp1028_231))
(assert (= temp1028_232 #x0000000000000000))
(assert (= temp1028_233
   (ite (bvslt var4784306 temp1028_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp1028_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp1028_233)))
(assert (= var4796924 temp1028_234))
(assert (bvslt (ite (bvslt var4784306 temp1028_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1028_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp1028_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1028_236 #x0000000000000001))
(assert (= var4796925 temp1028_236))
(assert (= temp1028_237 #x0000000000000000))
(assert (= var4996927 temp1028_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp1028_238 #x0000000000000002))
(assert (= var5125763 temp1028_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_239 #x0000000000000000))
(assert (= var5191324 temp1028_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5845392 var80129))
(assert (= var6107536 var80129))
(assert (= temp1028_240 #x0000000000000000))
(assert (= var6435216 temp1028_240))
(assert (= temp1028_241 #x0000000000000001))
(assert (= var79986 temp1028_241))
(assert (= temp1028_242 #x0000000000000000))
(assert (= var7877396 temp1028_242))
(assert (= var7877363 var7877396))
(assert (= var7745927 var7877363))
(assert (= var7745923 var7745927))
(assert (= var81597 var7745923))
(assert (= temp1028_243 #x0000000000000000))
(assert (= var81597 temp1028_243))
(model-add temp1028_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1028_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp1028_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






