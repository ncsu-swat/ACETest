(declare-fun temp669_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp669_2 () (_ BitVec 64))
(declare-fun temp669_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp669_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp669_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp669_6 () (_ BitVec 64))
(declare-fun temp669_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp669_8 () (_ BitVec 64))
(declare-fun temp669_9 () (_ BitVec 64))
(declare-fun temp669_10 () (_ BitVec 64))
(declare-fun temp669_11 () (_ BitVec 64))
(declare-fun temp669_12 () (_ BitVec 64))
(declare-fun temp669_13 () (_ BitVec 64))
(declare-fun temp669_14 () (_ BitVec 64))
(declare-fun temp669_15 () (_ BitVec 64))
(declare-fun temp669_16 () (_ BitVec 64))
(declare-fun temp669_17 () (_ BitVec 64))
(declare-fun temp669_18 () (_ BitVec 64))
(declare-fun temp669_19 () (_ BitVec 64))
(declare-fun temp669_20 () (_ BitVec 64))
(declare-fun temp669_21 () (_ BitVec 64))
(declare-fun temp669_22 () (_ BitVec 64))
(declare-fun temp669_23 () (_ BitVec 64))
(declare-fun temp669_24 () (_ BitVec 64))
(declare-fun temp669_25 () (_ BitVec 64))
(declare-fun temp669_26 () (_ BitVec 64))
(declare-fun temp669_27 () (_ BitVec 64))
(declare-fun temp669_28 () (_ BitVec 64))
(declare-fun temp669_29 () (_ BitVec 64))
(declare-fun temp669_30 () (_ BitVec 64))
(declare-fun temp669_31 () (_ BitVec 64))
(declare-fun temp669_32 () (_ BitVec 64))
(declare-fun temp669_33 () (_ BitVec 64))
(declare-fun temp669_34 () (_ BitVec 64))
(declare-fun temp669_35 () (_ BitVec 64))
(declare-fun temp669_36 () (_ BitVec 64))
(declare-fun temp669_37 () (_ BitVec 64))
(declare-fun temp669_38 () (_ BitVec 64))
(declare-fun temp669_39 () (_ BitVec 64))
(declare-fun temp669_40 () (_ BitVec 64))
(declare-fun temp669_41 () (_ BitVec 64))
(declare-fun temp669_42 () (_ BitVec 64))
(declare-fun temp669_43 () (_ BitVec 64))
(declare-fun temp669_44 () (_ BitVec 64))
(declare-fun temp669_45 () (_ BitVec 64))
(declare-fun temp669_46 () (_ BitVec 64))
(declare-fun temp669_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp669_48 () (_ BitVec 64))
(declare-fun temp669_49 () (_ BitVec 64))
(declare-fun temp669_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp669_51 () (_ BitVec 64))
(declare-fun temp669_52 () (_ BitVec 64))
(declare-fun temp669_53 () (_ BitVec 64))
(declare-fun temp669_54 () (_ BitVec 64))
(declare-fun temp669_55 () (_ BitVec 64))
(declare-fun temp669_56 () (_ BitVec 64))
(declare-fun temp669_57 () (_ BitVec 64))
(declare-fun temp669_58 () (_ BitVec 64))
(declare-fun temp669_59 () (_ BitVec 64))
(declare-fun temp669_60 () (_ BitVec 64))
(declare-fun temp669_61 () (_ BitVec 64))
(declare-fun temp669_62 () (_ BitVec 64))
(declare-fun temp669_63 () (_ BitVec 64))
(declare-fun temp669_64 () (_ BitVec 64))
(declare-fun temp669_65 () (_ BitVec 64))
(declare-fun temp669_66 () (_ BitVec 64))
(declare-fun temp669_67 () (_ BitVec 64))
(declare-fun temp669_68 () (_ BitVec 64))
(declare-fun temp669_69 () (_ BitVec 64))
(declare-fun temp669_70 () (_ BitVec 64))
(declare-fun temp669_71 () (_ BitVec 64))
(declare-fun temp669_72 () (_ BitVec 64))
(declare-fun temp669_73 () (_ BitVec 64))
(declare-fun temp669_74 () (_ BitVec 64))
(declare-fun temp669_75 () (_ BitVec 64))
(declare-fun temp669_76 () (_ BitVec 64))
(declare-fun temp669_77 () (_ BitVec 64))
(declare-fun temp669_78 () (_ BitVec 64))
(declare-fun temp669_79 () (_ BitVec 64))
(declare-fun temp669_80 () (_ BitVec 64))
(declare-fun temp669_81 () (_ BitVec 64))
(declare-fun temp669_82 () (_ BitVec 64))
(declare-fun temp669_83 () (_ BitVec 64))
(declare-fun temp669_84 () (_ BitVec 64))
(declare-fun temp669_85 () (_ BitVec 64))
(declare-fun temp669_86 () (_ BitVec 64))
(declare-fun temp669_87 () (_ BitVec 64))
(declare-fun temp669_88 () (_ BitVec 64))
(declare-fun temp669_89 () (_ BitVec 64))
(declare-fun temp669_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp669_91 () (_ BitVec 64))
(declare-fun temp669_92 () (_ BitVec 64))
(declare-fun temp669_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp669_94 () (_ BitVec 64))
(declare-fun temp669_95 () (_ BitVec 64))
(declare-fun temp669_96 () (_ BitVec 64))
(declare-fun temp669_97 () (_ BitVec 64))
(declare-fun temp669_98 () (_ BitVec 64))
(declare-fun temp669_99 () (_ BitVec 64))
(declare-fun temp669_100 () (_ BitVec 64))
(declare-fun temp669_101 () (_ BitVec 64))
(declare-fun temp669_102 () (_ BitVec 64))
(declare-fun temp669_103 () (_ BitVec 64))
(declare-fun temp669_104 () (_ BitVec 64))
(declare-fun temp669_105 () (_ BitVec 64))
(declare-fun temp669_106 () (_ BitVec 64))
(declare-fun temp669_107 () (_ BitVec 64))
(declare-fun temp669_108 () (_ BitVec 64))
(declare-fun temp669_109 () (_ BitVec 64))
(declare-fun temp669_110 () (_ BitVec 64))
(declare-fun temp669_111 () (_ BitVec 64))
(declare-fun temp669_112 () (_ BitVec 64))
(declare-fun temp669_113 () (_ BitVec 64))
(declare-fun temp669_114 () (_ BitVec 64))
(declare-fun temp669_115 () (_ BitVec 64))
(declare-fun temp669_116 () (_ BitVec 64))
(declare-fun temp669_117 () (_ BitVec 64))
(declare-fun temp669_118 () (_ BitVec 64))
(declare-fun temp669_119 () (_ BitVec 64))
(declare-fun temp669_120 () (_ BitVec 64))
(declare-fun temp669_121 () (_ BitVec 64))
(declare-fun temp669_122 () (_ BitVec 64))
(declare-fun temp669_123 () (_ BitVec 64))
(declare-fun temp669_124 () (_ BitVec 64))
(declare-fun temp669_125 () (_ BitVec 64))
(declare-fun temp669_126 () (_ BitVec 64))
(declare-fun temp669_127 () (_ BitVec 64))
(declare-fun temp669_128 () (_ BitVec 64))
(declare-fun temp669_129 () (_ BitVec 64))
(declare-fun temp669_130 () (_ BitVec 64))
(declare-fun temp669_131 () (_ BitVec 64))
(declare-fun temp669_132 () (_ BitVec 64))
(declare-fun temp669_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp669_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp669_135 () (_ BitVec 64))
(declare-fun temp669_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp669_137 () (_ BitVec 64))
(declare-fun temp669_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp669_139 () (_ BitVec 64))
(declare-fun temp669_140 () (_ BitVec 64))
(declare-fun temp669_141 () (_ BitVec 64))
(declare-fun temp669_142 () (_ BitVec 64))
(declare-fun temp669_143 () (_ BitVec 64))
(declare-fun temp669_144 () (_ BitVec 64))
(declare-fun temp669_145 () (_ BitVec 64))
(declare-fun temp669_146 () (_ BitVec 64))
(declare-fun temp669_147 () (_ BitVec 64))
(declare-fun temp669_148 () (_ BitVec 64))
(declare-fun temp669_149 () (_ BitVec 64))
(declare-fun temp669_150 () (_ BitVec 64))
(declare-fun temp669_151 () (_ BitVec 64))
(declare-fun temp669_152 () (_ BitVec 64))
(declare-fun temp669_153 () (_ BitVec 64))
(declare-fun temp669_154 () (_ BitVec 64))
(declare-fun temp669_156 () (_ BitVec 64))
(declare-fun temp669_157 () (_ BitVec 64))
(declare-fun temp669_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp669_158 () (_ BitVec 64))
(declare-fun temp669_159 () (_ BitVec 64))
(declare-fun temp669_161 () (_ BitVec 64))
(declare-fun temp669_162 () (_ BitVec 64))
(declare-fun temp669_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp669_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp669_164 () (_ BitVec 64))
(declare-fun temp669_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp669_166 () (_ BitVec 64))
(declare-fun temp669_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp669_168 () (_ BitVec 64))
(declare-fun temp669_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp669_170 () (_ BitVec 64))
(declare-fun temp669_171 () (_ BitVec 64))
(declare-fun temp669_172 () (_ BitVec 64))
(declare-fun temp669_173 () (_ BitVec 64))
(declare-fun temp669_174 () (_ BitVec 64))
(declare-fun temp669_175 () (_ BitVec 64))
(declare-fun temp669_176 () (_ BitVec 64))
(declare-fun temp669_177 () (_ BitVec 64))
(declare-fun temp669_178 () (_ BitVec 64))
(declare-fun temp669_179 () (_ BitVec 64))
(declare-fun temp669_180 () (_ BitVec 64))
(declare-fun temp669_181 () (_ BitVec 64))
(declare-fun temp669_182 () (_ BitVec 64))
(declare-fun temp669_183 () (_ BitVec 64))
(declare-fun temp669_184 () (_ BitVec 64))
(declare-fun temp669_185 () (_ BitVec 64))
(declare-fun temp669_186 () (_ BitVec 64))
(declare-fun temp669_187 () (_ BitVec 64))
(declare-fun temp669_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp669_189 () (_ BitVec 64))
(declare-fun temp669_191 () (_ BitVec 64))
(declare-fun temp669_192 () (_ BitVec 64))
(declare-fun temp669_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp669_193 () (_ BitVec 64))
(declare-fun temp669_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp669_195 () (_ BitVec 64))
(declare-fun temp669_196 () (_ BitVec 64))
(declare-fun temp669_197 () (_ BitVec 64))
(declare-fun temp669_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp669_199 () (_ BitVec 64))
(declare-fun temp669_200 () (_ BitVec 64))
(declare-fun temp669_201 () (_ BitVec 64))
(declare-fun temp669_202 () (_ BitVec 64))
(declare-fun temp669_203 () (_ BitVec 64))
(declare-fun temp669_204 () (_ BitVec 64))
(declare-fun temp669_205 () (_ BitVec 64))
(declare-fun temp669_206 () (_ BitVec 64))
(declare-fun temp669_207 () (_ BitVec 64))
(declare-fun temp669_208 () (_ BitVec 64))
(declare-fun temp669_209 () (_ BitVec 64))
(declare-fun temp669_210 () (_ BitVec 64))
(declare-fun temp669_211 () (_ BitVec 64))
(declare-fun temp669_212 () (_ BitVec 64))
(declare-fun temp669_213 () (_ BitVec 64))
(declare-fun temp669_214 () (_ BitVec 64))
(declare-fun temp669_215 () (_ BitVec 64))
(declare-fun temp669_216 () (_ BitVec 64))
(declare-fun temp669_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp669_218 () (_ BitVec 64))
(declare-fun temp669_220 () (_ BitVec 64))
(declare-fun temp669_221 () (_ BitVec 64))
(declare-fun temp669_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp669_222 () (_ BitVec 64))
(declare-fun temp669_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp669_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp669_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp669_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp669_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp669_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp669_229 () (_ BitVec 64))
(declare-fun temp669_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp669_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp669_232 () (_ BitVec 64))
(declare-fun temp669_233 () (_ BitVec 64))
(declare-fun temp669_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp669_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp669_236 () (_ BitVec 64))
(declare-fun temp669_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp669_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp669_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp669_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp669_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp669_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp669_243 () (_ BitVec 64))
(assert (= temp669_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp669_1)))
(assert (= temp669_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp669_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_3 #x0000000000000000))
(assert (= var79869 temp669_3))
(assert (= temp669_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp669_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_5 #x0000000000000000))
(assert (= var79914 temp669_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp669_6 #x0000000000000000))
(assert (= temp669_7 temp669_6))
(assert (= temp669_8 (select ARGNAME_padding_NAMEEND_VAL temp669_7)))
(assert (= temp669_9 #x0000000000000001))
(assert (= temp669_10 temp669_9))
(assert (= temp669_11 (select ARGNAME_padding_NAMEEND_VAL temp669_10)))
(assert (= temp669_12 #x0000000000000002))
(assert (= temp669_13 temp669_12))
(assert (= temp669_14 (select ARGNAME_padding_NAMEEND_VAL temp669_13)))
(assert (= temp669_15 #x0000000000000003))
(assert (= temp669_16 temp669_15))
(assert (= temp669_17 (select ARGNAME_padding_NAMEEND_VAL temp669_16)))
(assert (= temp669_18 #x0000000000000004))
(assert (= temp669_19 temp669_18))
(assert (= temp669_20 (select ARGNAME_padding_NAMEEND_VAL temp669_19)))
(assert (= temp669_21 #x0000000000000005))
(assert (= temp669_22 temp669_21))
(assert (= temp669_23 (select ARGNAME_padding_NAMEEND_VAL temp669_22)))
(assert (= temp669_24 #x0000000000000000))
(assert (= temp669_25 #x0000000000000000))
(assert (= temp669_26 temp669_25))
(assert (= temp669_27 (select ARGNAME_padding_NAMEEND_VAL temp669_26)))
(assert (= temp669_28 #x0000000000000000))
(assert (= temp669_29 #x0000000000000001))
(assert (= temp669_30 temp669_29))
(assert (= temp669_31 (select ARGNAME_padding_NAMEEND_VAL temp669_30)))
(assert (= temp669_32 #x0000000000000000))
(assert (= temp669_33 #x0000000000000002))
(assert (= temp669_34 temp669_33))
(assert (= temp669_35 (select ARGNAME_padding_NAMEEND_VAL temp669_34)))
(assert (= temp669_36 #x0000000000000000))
(assert (= temp669_37 #x0000000000000003))
(assert (= temp669_38 temp669_37))
(assert (= temp669_39 (select ARGNAME_padding_NAMEEND_VAL temp669_38)))
(assert (= temp669_40 #x0000000000000000))
(assert (= temp669_41 #x0000000000000004))
(assert (= temp669_42 temp669_41))
(assert (= temp669_43 (select ARGNAME_padding_NAMEEND_VAL temp669_42)))
(assert (= temp669_44 #x0000000000000000))
(assert (= temp669_45 #x0000000000000005))
(assert (= temp669_46 temp669_45))
(assert (= temp669_47 (select ARGNAME_padding_NAMEEND_VAL temp669_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp669_27 temp669_24)
             (bvslt temp669_31 temp669_28)
             (bvslt temp669_35 temp669_32)
             (bvslt temp669_39 temp669_36)
             (bvslt temp669_43 temp669_40)
             (bvslt temp669_47 temp669_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_48 #x0000000000000000))
(assert (= var1322786 temp669_48))
(assert (= temp669_49 #x0000000000000000))
(assert (= temp669_50 temp669_49))
(assert (= temp669_51 (select ARGNAME_output_padding_NAMEEND_VAL temp669_50)))
(assert (= temp669_52 #x0000000000000001))
(assert (= temp669_53 temp669_52))
(assert (= temp669_54 (select ARGNAME_output_padding_NAMEEND_VAL temp669_53)))
(assert (= temp669_55 #x0000000000000002))
(assert (= temp669_56 temp669_55))
(assert (= temp669_57 (select ARGNAME_output_padding_NAMEEND_VAL temp669_56)))
(assert (= temp669_58 #x0000000000000003))
(assert (= temp669_59 temp669_58))
(assert (= temp669_60 (select ARGNAME_output_padding_NAMEEND_VAL temp669_59)))
(assert (= temp669_61 #x0000000000000004))
(assert (= temp669_62 temp669_61))
(assert (= temp669_63 (select ARGNAME_output_padding_NAMEEND_VAL temp669_62)))
(assert (= temp669_64 #x0000000000000005))
(assert (= temp669_65 temp669_64))
(assert (= temp669_66 (select ARGNAME_output_padding_NAMEEND_VAL temp669_65)))
(assert (= temp669_67 #x0000000000000000))
(assert (= temp669_68 #x0000000000000000))
(assert (= temp669_69 temp669_68))
(assert (= temp669_70 (select ARGNAME_output_padding_NAMEEND_VAL temp669_69)))
(assert (= temp669_71 #x0000000000000000))
(assert (= temp669_72 #x0000000000000001))
(assert (= temp669_73 temp669_72))
(assert (= temp669_74 (select ARGNAME_output_padding_NAMEEND_VAL temp669_73)))
(assert (= temp669_75 #x0000000000000000))
(assert (= temp669_76 #x0000000000000002))
(assert (= temp669_77 temp669_76))
(assert (= temp669_78 (select ARGNAME_output_padding_NAMEEND_VAL temp669_77)))
(assert (= temp669_79 #x0000000000000000))
(assert (= temp669_80 #x0000000000000003))
(assert (= temp669_81 temp669_80))
(assert (= temp669_82 (select ARGNAME_output_padding_NAMEEND_VAL temp669_81)))
(assert (= temp669_83 #x0000000000000000))
(assert (= temp669_84 #x0000000000000004))
(assert (= temp669_85 temp669_84))
(assert (= temp669_86 (select ARGNAME_output_padding_NAMEEND_VAL temp669_85)))
(assert (= temp669_87 #x0000000000000000))
(assert (= temp669_88 #x0000000000000005))
(assert (= temp669_89 temp669_88))
(assert (= temp669_90 (select ARGNAME_output_padding_NAMEEND_VAL temp669_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp669_70 temp669_67)
             (bvslt temp669_74 temp669_71)
             (bvslt temp669_78 temp669_75)
             (bvslt temp669_82 temp669_79)
             (bvslt temp669_86 temp669_83)
             (bvslt temp669_90 temp669_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_91 #x0000000000000000))
(assert (= var1322797 temp669_91))
(assert (= temp669_92 #x0000000000000000))
(assert (= temp669_93 temp669_92))
(assert (= temp669_94 (select ARGNAME_stride_NAMEEND_VAL temp669_93)))
(assert (= temp669_95 #x0000000000000001))
(assert (= temp669_96 temp669_95))
(assert (= temp669_97 (select ARGNAME_stride_NAMEEND_VAL temp669_96)))
(assert (= temp669_98 #x0000000000000002))
(assert (= temp669_99 temp669_98))
(assert (= temp669_100 (select ARGNAME_stride_NAMEEND_VAL temp669_99)))
(assert (= temp669_101 #x0000000000000003))
(assert (= temp669_102 temp669_101))
(assert (= temp669_103 (select ARGNAME_stride_NAMEEND_VAL temp669_102)))
(assert (= temp669_104 #x0000000000000004))
(assert (= temp669_105 temp669_104))
(assert (= temp669_106 (select ARGNAME_stride_NAMEEND_VAL temp669_105)))
(assert (= temp669_107 #x0000000000000005))
(assert (= temp669_108 temp669_107))
(assert (= temp669_109 (select ARGNAME_stride_NAMEEND_VAL temp669_108)))
(assert (= temp669_110 #x0000000000000000))
(assert (= temp669_111 #x0000000000000000))
(assert (= temp669_112 temp669_111))
(assert (= temp669_113 (select ARGNAME_stride_NAMEEND_VAL temp669_112)))
(assert (= temp669_114 #x0000000000000000))
(assert (= temp669_115 #x0000000000000001))
(assert (= temp669_116 temp669_115))
(assert (= temp669_117 (select ARGNAME_stride_NAMEEND_VAL temp669_116)))
(assert (= temp669_118 #x0000000000000000))
(assert (= temp669_119 #x0000000000000002))
(assert (= temp669_120 temp669_119))
(assert (= temp669_121 (select ARGNAME_stride_NAMEEND_VAL temp669_120)))
(assert (= temp669_122 #x0000000000000000))
(assert (= temp669_123 #x0000000000000003))
(assert (= temp669_124 temp669_123))
(assert (= temp669_125 (select ARGNAME_stride_NAMEEND_VAL temp669_124)))
(assert (= temp669_126 #x0000000000000000))
(assert (= temp669_127 #x0000000000000004))
(assert (= temp669_128 temp669_127))
(assert (= temp669_129 (select ARGNAME_stride_NAMEEND_VAL temp669_128)))
(assert (= temp669_130 #x0000000000000000))
(assert (= temp669_131 #x0000000000000005))
(assert (= temp669_132 temp669_131))
(assert (= temp669_133 (select ARGNAME_stride_NAMEEND_VAL temp669_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp669_113 temp669_110)
             (bvsle temp669_117 temp669_114)
             (bvsle temp669_121 temp669_118)
             (bvsle temp669_125 temp669_122)
             (bvsle temp669_129 temp669_126)
             (bvsle temp669_133 temp669_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_134 #x0000000000000000))
(assert (= var1322807 temp669_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_135 #x0000000000000001))
(assert (= var1322819 temp669_135))
(assert (= temp669_136 #x0000000000000000))
(assert (= var1310898 temp669_136))
(assert (= temp669_137 #x0000000000000000))
(assert (= temp669_138 temp669_137))
(assert (= temp669_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_138)))
(assert (= temp669_140 #x0000000000000001))
(assert (= temp669_141 temp669_140))
(assert (= temp669_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_141)))
(assert (= temp669_143 #x0000000000000002))
(assert (= temp669_144 temp669_143))
(assert (= temp669_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_144)))
(assert (= temp669_146 #x0000000000000003))
(assert (= temp669_147 temp669_146))
(assert (= temp669_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_147)))
(assert (= temp669_149 #x0000000000000004))
(assert (= temp669_150 temp669_149))
(assert (= temp669_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_150)))
(assert (= temp669_152 #x0000000000000005))
(assert (= temp669_153 temp669_152))
(assert (= temp669_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_153)))
(assert (= temp669_156 var1310898))
(assert (= temp669_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_156)))
(assert (= temp669_155 temp669_157))
(assert (= var1322852
   (ite (bvslt temp669_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_158 #x0000000000000000))
(assert (= var1322852 temp669_158))
(assert (= temp669_159 #x0000000000000000))
(assert (= var1310898 temp669_159))
(assert (= temp669_161 var1310898))
(assert (= temp669_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_161)))
(assert (= temp669_160 temp669_162))
(assert (= var1322874 (bvsmod temp669_160 ARGNAME_groups_NAMEEND)))
(assert (= temp669_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp669_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp669_164 #x0000000000000001))
(assert (= var1322875 temp669_164))
(assert (= temp669_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp669_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_166 #x0000000000000001))
(assert (= var1322895 temp669_166))
(assert (= temp669_167 #x0000000000000001))
(assert (= var1311786 temp669_167))
(assert (= temp669_168 #x0000000000000000))
(assert (= temp669_169 temp669_168))
(assert (= temp669_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp669_169)))
(assert (= temp669_171 #x0000000000000001))
(assert (= temp669_172 temp669_171))
(assert (= temp669_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp669_172)))
(assert (= temp669_174 #x0000000000000002))
(assert (= temp669_175 temp669_174))
(assert (= temp669_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp669_175)))
(assert (= temp669_177 #x0000000000000003))
(assert (= temp669_178 temp669_177))
(assert (= temp669_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp669_178)))
(assert (= temp669_180 #x0000000000000004))
(assert (= temp669_181 temp669_180))
(assert (= temp669_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp669_181)))
(assert (= temp669_183 #x0000000000000005))
(assert (= temp669_184 temp669_183))
(assert (= temp669_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp669_184)))
(assert (= temp669_186 #x0000000000000000))
(assert (= temp669_187
   (ite (bvslt var1311786 temp669_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp669_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp669_187)))
(assert (= var1322903 temp669_188))
(assert (bvslt (ite (bvslt var1311786 temp669_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp669_189 #x0000000000000001))
(assert (= var1311786 temp669_189))
(assert (= temp669_191 var1311786))
(assert (= temp669_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_191)))
(assert (= temp669_190 temp669_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp669_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp669_193 #x0000000000000001))
(assert (= var1322908 temp669_193))
(assert (= temp669_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp669_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_195 #x0000000000000001))
(assert (= var1322975 temp669_195))
(assert (= temp669_196 #x0000000000000000))
(assert (= var1310898 temp669_196))
(assert (= temp669_197 #x0000000000000000))
(assert (= temp669_198 temp669_197))
(assert (= temp669_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp669_198)))
(assert (= temp669_200 #x0000000000000001))
(assert (= temp669_201 temp669_200))
(assert (= temp669_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp669_201)))
(assert (= temp669_203 #x0000000000000002))
(assert (= temp669_204 temp669_203))
(assert (= temp669_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp669_204)))
(assert (= temp669_206 #x0000000000000003))
(assert (= temp669_207 temp669_206))
(assert (= temp669_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp669_207)))
(assert (= temp669_209 #x0000000000000004))
(assert (= temp669_210 temp669_209))
(assert (= temp669_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp669_210)))
(assert (= temp669_212 #x0000000000000005))
(assert (= temp669_213 temp669_212))
(assert (= temp669_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp669_213)))
(assert (= temp669_215 #x0000000000000000))
(assert (= temp669_216
   (ite (bvslt var1310898 temp669_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp669_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp669_216)))
(assert (= var1322977 temp669_217))
(assert (bvslt (ite (bvslt var1310898 temp669_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp669_218 #x0000000000000000))
(assert (= var1310898 temp669_218))
(assert (= temp669_220 var1310898))
(assert (= temp669_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_220)))
(assert (= temp669_219 temp669_221))
(assert (= var1322980
   (ite (= var1322977 temp669_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp669_222 #x0000000000000001))
(assert (= var1322980 temp669_222))
(assert (= temp669_223 #x0000000000000002))
(assert (= var1848169 temp669_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp669_225 #x0000000000000001))
(assert (= var1323065 temp669_225))
(assert (= temp669_226 #x0000000000000001))
(assert (= var3486735 temp669_226))
(assert (= temp669_227 #x0000000000000001))
(assert (= var3814415 temp669_227))
(assert (= temp669_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp669_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_229 #x0000000000000001))
(assert (= var79986 temp669_229))
(assert (= temp669_230 #x0000000000000001))
(assert (= var80116 temp669_230))
(assert (= var4796905 var80116))
(assert (= temp669_231 #x0000000000000000))
(assert (= var4784306 temp669_231))
(assert (= temp669_232 #x0000000000000000))
(assert (= temp669_233
   (ite (bvslt var4784306 temp669_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp669_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp669_233)))
(assert (= var4796924 temp669_234))
(assert (bvslt (ite (bvslt var4784306 temp669_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp669_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp669_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp669_236 #x0000000000000001))
(assert (= var4796925 temp669_236))
(assert (= temp669_237 #x0000000000000000))
(assert (= var4996927 temp669_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp669_238 #x0000000000000002))
(assert (= var5125763 temp669_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_239 #x0000000000000000))
(assert (= var5191324 temp669_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp669_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp669_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp669_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp669_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_243 #x0000000000000001))
(assert (= var79986 temp669_243))
(model-add temp669_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp669_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp669_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






