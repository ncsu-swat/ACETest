(declare-fun temp98_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp98_2 () (_ BitVec 64))
(declare-fun temp98_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp98_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp98_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp98_6 () (_ BitVec 64))
(declare-fun temp98_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_8 () (_ BitVec 64))
(declare-fun temp98_9 () (_ BitVec 64))
(declare-fun temp98_10 () (_ BitVec 64))
(declare-fun temp98_11 () (_ BitVec 64))
(declare-fun temp98_12 () (_ BitVec 64))
(declare-fun temp98_13 () (_ BitVec 64))
(declare-fun temp98_14 () (_ BitVec 64))
(declare-fun temp98_15 () (_ BitVec 64))
(declare-fun temp98_16 () (_ BitVec 64))
(declare-fun temp98_17 () (_ BitVec 64))
(declare-fun temp98_18 () (_ BitVec 64))
(declare-fun temp98_19 () (_ BitVec 64))
(declare-fun temp98_20 () (_ BitVec 64))
(declare-fun temp98_21 () (_ BitVec 64))
(declare-fun temp98_22 () (_ BitVec 64))
(declare-fun temp98_23 () (_ BitVec 64))
(declare-fun temp98_24 () (_ BitVec 64))
(declare-fun temp98_25 () (_ BitVec 64))
(declare-fun temp98_26 () (_ BitVec 64))
(declare-fun temp98_27 () (_ BitVec 64))
(declare-fun temp98_28 () (_ BitVec 64))
(declare-fun temp98_29 () (_ BitVec 64))
(declare-fun temp98_30 () (_ BitVec 64))
(declare-fun temp98_31 () (_ BitVec 64))
(declare-fun temp98_32 () (_ BitVec 64))
(declare-fun temp98_33 () (_ BitVec 64))
(declare-fun temp98_34 () (_ BitVec 64))
(declare-fun temp98_35 () (_ BitVec 64))
(declare-fun temp98_36 () (_ BitVec 64))
(declare-fun temp98_37 () (_ BitVec 64))
(declare-fun temp98_38 () (_ BitVec 64))
(declare-fun temp98_39 () (_ BitVec 64))
(declare-fun temp98_40 () (_ BitVec 64))
(declare-fun temp98_41 () (_ BitVec 64))
(declare-fun temp98_42 () (_ BitVec 64))
(declare-fun temp98_43 () (_ BitVec 64))
(declare-fun temp98_44 () (_ BitVec 64))
(declare-fun temp98_45 () (_ BitVec 64))
(declare-fun temp98_46 () (_ BitVec 64))
(declare-fun temp98_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp98_48 () (_ BitVec 64))
(declare-fun temp98_49 () (_ BitVec 64))
(declare-fun temp98_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_51 () (_ BitVec 64))
(declare-fun temp98_52 () (_ BitVec 64))
(declare-fun temp98_53 () (_ BitVec 64))
(declare-fun temp98_54 () (_ BitVec 64))
(declare-fun temp98_55 () (_ BitVec 64))
(declare-fun temp98_56 () (_ BitVec 64))
(declare-fun temp98_57 () (_ BitVec 64))
(declare-fun temp98_58 () (_ BitVec 64))
(declare-fun temp98_59 () (_ BitVec 64))
(declare-fun temp98_60 () (_ BitVec 64))
(declare-fun temp98_61 () (_ BitVec 64))
(declare-fun temp98_62 () (_ BitVec 64))
(declare-fun temp98_63 () (_ BitVec 64))
(declare-fun temp98_64 () (_ BitVec 64))
(declare-fun temp98_65 () (_ BitVec 64))
(declare-fun temp98_66 () (_ BitVec 64))
(declare-fun temp98_67 () (_ BitVec 64))
(declare-fun temp98_68 () (_ BitVec 64))
(declare-fun temp98_69 () (_ BitVec 64))
(declare-fun temp98_70 () (_ BitVec 64))
(declare-fun temp98_71 () (_ BitVec 64))
(declare-fun temp98_72 () (_ BitVec 64))
(declare-fun temp98_73 () (_ BitVec 64))
(declare-fun temp98_74 () (_ BitVec 64))
(declare-fun temp98_75 () (_ BitVec 64))
(declare-fun temp98_76 () (_ BitVec 64))
(declare-fun temp98_77 () (_ BitVec 64))
(declare-fun temp98_78 () (_ BitVec 64))
(declare-fun temp98_79 () (_ BitVec 64))
(declare-fun temp98_80 () (_ BitVec 64))
(declare-fun temp98_81 () (_ BitVec 64))
(declare-fun temp98_82 () (_ BitVec 64))
(declare-fun temp98_83 () (_ BitVec 64))
(declare-fun temp98_84 () (_ BitVec 64))
(declare-fun temp98_85 () (_ BitVec 64))
(declare-fun temp98_86 () (_ BitVec 64))
(declare-fun temp98_87 () (_ BitVec 64))
(declare-fun temp98_88 () (_ BitVec 64))
(declare-fun temp98_89 () (_ BitVec 64))
(declare-fun temp98_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp98_91 () (_ BitVec 64))
(declare-fun temp98_92 () (_ BitVec 64))
(declare-fun temp98_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_94 () (_ BitVec 64))
(declare-fun temp98_95 () (_ BitVec 64))
(declare-fun temp98_96 () (_ BitVec 64))
(declare-fun temp98_97 () (_ BitVec 64))
(declare-fun temp98_98 () (_ BitVec 64))
(declare-fun temp98_99 () (_ BitVec 64))
(declare-fun temp98_100 () (_ BitVec 64))
(declare-fun temp98_101 () (_ BitVec 64))
(declare-fun temp98_102 () (_ BitVec 64))
(declare-fun temp98_103 () (_ BitVec 64))
(declare-fun temp98_104 () (_ BitVec 64))
(declare-fun temp98_105 () (_ BitVec 64))
(declare-fun temp98_106 () (_ BitVec 64))
(declare-fun temp98_107 () (_ BitVec 64))
(declare-fun temp98_108 () (_ BitVec 64))
(declare-fun temp98_109 () (_ BitVec 64))
(declare-fun temp98_110 () (_ BitVec 64))
(declare-fun temp98_111 () (_ BitVec 64))
(declare-fun temp98_112 () (_ BitVec 64))
(declare-fun temp98_113 () (_ BitVec 64))
(declare-fun temp98_114 () (_ BitVec 64))
(declare-fun temp98_115 () (_ BitVec 64))
(declare-fun temp98_116 () (_ BitVec 64))
(declare-fun temp98_117 () (_ BitVec 64))
(declare-fun temp98_118 () (_ BitVec 64))
(declare-fun temp98_119 () (_ BitVec 64))
(declare-fun temp98_120 () (_ BitVec 64))
(declare-fun temp98_121 () (_ BitVec 64))
(declare-fun temp98_122 () (_ BitVec 64))
(declare-fun temp98_123 () (_ BitVec 64))
(declare-fun temp98_124 () (_ BitVec 64))
(declare-fun temp98_125 () (_ BitVec 64))
(declare-fun temp98_126 () (_ BitVec 64))
(declare-fun temp98_127 () (_ BitVec 64))
(declare-fun temp98_128 () (_ BitVec 64))
(declare-fun temp98_129 () (_ BitVec 64))
(declare-fun temp98_130 () (_ BitVec 64))
(declare-fun temp98_131 () (_ BitVec 64))
(declare-fun temp98_132 () (_ BitVec 64))
(declare-fun temp98_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp98_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp98_135 () (_ BitVec 64))
(declare-fun temp98_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp98_137 () (_ BitVec 64))
(declare-fun temp98_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_139 () (_ BitVec 64))
(declare-fun temp98_140 () (_ BitVec 64))
(declare-fun temp98_141 () (_ BitVec 64))
(declare-fun temp98_142 () (_ BitVec 64))
(declare-fun temp98_143 () (_ BitVec 64))
(declare-fun temp98_144 () (_ BitVec 64))
(declare-fun temp98_145 () (_ BitVec 64))
(declare-fun temp98_146 () (_ BitVec 64))
(declare-fun temp98_147 () (_ BitVec 64))
(declare-fun temp98_148 () (_ BitVec 64))
(declare-fun temp98_149 () (_ BitVec 64))
(declare-fun temp98_150 () (_ BitVec 64))
(declare-fun temp98_151 () (_ BitVec 64))
(declare-fun temp98_152 () (_ BitVec 64))
(declare-fun temp98_153 () (_ BitVec 64))
(declare-fun temp98_154 () (_ BitVec 64))
(declare-fun temp98_156 () (_ BitVec 64))
(declare-fun temp98_157 () (_ BitVec 64))
(declare-fun temp98_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp98_158 () (_ BitVec 64))
(declare-fun temp98_159 () (_ BitVec 64))
(declare-fun temp98_161 () (_ BitVec 64))
(declare-fun temp98_162 () (_ BitVec 64))
(declare-fun temp98_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp98_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp98_164 () (_ BitVec 64))
(declare-fun temp98_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp98_166 () (_ BitVec 64))
(declare-fun temp98_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp98_168 () (_ BitVec 64))
(declare-fun temp98_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_170 () (_ BitVec 64))
(declare-fun temp98_171 () (_ BitVec 64))
(declare-fun temp98_172 () (_ BitVec 64))
(declare-fun temp98_173 () (_ BitVec 64))
(declare-fun temp98_174 () (_ BitVec 64))
(declare-fun temp98_175 () (_ BitVec 64))
(declare-fun temp98_176 () (_ BitVec 64))
(declare-fun temp98_177 () (_ BitVec 64))
(declare-fun temp98_178 () (_ BitVec 64))
(declare-fun temp98_179 () (_ BitVec 64))
(declare-fun temp98_180 () (_ BitVec 64))
(declare-fun temp98_181 () (_ BitVec 64))
(declare-fun temp98_182 () (_ BitVec 64))
(declare-fun temp98_183 () (_ BitVec 64))
(declare-fun temp98_184 () (_ BitVec 64))
(declare-fun temp98_185 () (_ BitVec 64))
(declare-fun temp98_186 () (_ BitVec 64))
(declare-fun temp98_187 () (_ BitVec 64))
(declare-fun temp98_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp98_189 () (_ BitVec 64))
(declare-fun temp98_191 () (_ BitVec 64))
(declare-fun temp98_192 () (_ BitVec 64))
(declare-fun temp98_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp98_193 () (_ BitVec 64))
(declare-fun temp98_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp98_195 () (_ BitVec 64))
(declare-fun temp98_196 () (_ BitVec 64))
(declare-fun temp98_197 () (_ BitVec 64))
(declare-fun temp98_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_199 () (_ BitVec 64))
(declare-fun temp98_200 () (_ BitVec 64))
(declare-fun temp98_201 () (_ BitVec 64))
(declare-fun temp98_202 () (_ BitVec 64))
(declare-fun temp98_203 () (_ BitVec 64))
(declare-fun temp98_204 () (_ BitVec 64))
(declare-fun temp98_205 () (_ BitVec 64))
(declare-fun temp98_206 () (_ BitVec 64))
(declare-fun temp98_207 () (_ BitVec 64))
(declare-fun temp98_208 () (_ BitVec 64))
(declare-fun temp98_209 () (_ BitVec 64))
(declare-fun temp98_210 () (_ BitVec 64))
(declare-fun temp98_211 () (_ BitVec 64))
(declare-fun temp98_212 () (_ BitVec 64))
(declare-fun temp98_213 () (_ BitVec 64))
(declare-fun temp98_214 () (_ BitVec 64))
(declare-fun temp98_215 () (_ BitVec 64))
(declare-fun temp98_216 () (_ BitVec 64))
(declare-fun temp98_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp98_218 () (_ BitVec 64))
(declare-fun temp98_220 () (_ BitVec 64))
(declare-fun temp98_221 () (_ BitVec 64))
(declare-fun temp98_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp98_222 () (_ BitVec 64))
(declare-fun temp98_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp98_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp98_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp98_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp98_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp98_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp98_229 () (_ BitVec 64))
(declare-fun temp98_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp98_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp98_232 () (_ BitVec 64))
(declare-fun temp98_233 () (_ BitVec 64))
(declare-fun temp98_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp98_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp98_236 () (_ BitVec 64))
(declare-fun temp98_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp98_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp98_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp98_241 () (_ BitVec 64))
(declare-fun temp98_240 () (_ BitVec 64))
(declare-fun temp98_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp98_243 () (_ BitVec 64))
(declare-fun temp98_244 () (_ BitVec 64))
(declare-fun temp98_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp98_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp98_247 () (_ BitVec 64))
(declare-fun temp98_249 () (_ BitVec 64))
(declare-fun temp98_248 () (_ BitVec 64))
(declare-fun temp98_250 () (_ BitVec 64))
(assert (= temp98_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp98_1)))
(assert (= temp98_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp98_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_3 #x0000000000000000))
(assert (= var79869 temp98_3))
(assert (= temp98_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp98_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_5 #x0000000000000000))
(assert (= var79914 temp98_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp98_6 #x0000000000000000))
(assert (= temp98_7 temp98_6))
(assert (= temp98_8 (select ARGNAME_padding_NAMEEND_VAL temp98_7)))
(assert (= temp98_9 #x0000000000000001))
(assert (= temp98_10 temp98_9))
(assert (= temp98_11 (select ARGNAME_padding_NAMEEND_VAL temp98_10)))
(assert (= temp98_12 #x0000000000000002))
(assert (= temp98_13 temp98_12))
(assert (= temp98_14 (select ARGNAME_padding_NAMEEND_VAL temp98_13)))
(assert (= temp98_15 #x0000000000000003))
(assert (= temp98_16 temp98_15))
(assert (= temp98_17 (select ARGNAME_padding_NAMEEND_VAL temp98_16)))
(assert (= temp98_18 #x0000000000000004))
(assert (= temp98_19 temp98_18))
(assert (= temp98_20 (select ARGNAME_padding_NAMEEND_VAL temp98_19)))
(assert (= temp98_21 #x0000000000000005))
(assert (= temp98_22 temp98_21))
(assert (= temp98_23 (select ARGNAME_padding_NAMEEND_VAL temp98_22)))
(assert (= temp98_24 #x0000000000000000))
(assert (= temp98_25 #x0000000000000000))
(assert (= temp98_26 temp98_25))
(assert (= temp98_27 (select ARGNAME_padding_NAMEEND_VAL temp98_26)))
(assert (= temp98_28 #x0000000000000000))
(assert (= temp98_29 #x0000000000000001))
(assert (= temp98_30 temp98_29))
(assert (= temp98_31 (select ARGNAME_padding_NAMEEND_VAL temp98_30)))
(assert (= temp98_32 #x0000000000000000))
(assert (= temp98_33 #x0000000000000002))
(assert (= temp98_34 temp98_33))
(assert (= temp98_35 (select ARGNAME_padding_NAMEEND_VAL temp98_34)))
(assert (= temp98_36 #x0000000000000000))
(assert (= temp98_37 #x0000000000000003))
(assert (= temp98_38 temp98_37))
(assert (= temp98_39 (select ARGNAME_padding_NAMEEND_VAL temp98_38)))
(assert (= temp98_40 #x0000000000000000))
(assert (= temp98_41 #x0000000000000004))
(assert (= temp98_42 temp98_41))
(assert (= temp98_43 (select ARGNAME_padding_NAMEEND_VAL temp98_42)))
(assert (= temp98_44 #x0000000000000000))
(assert (= temp98_45 #x0000000000000005))
(assert (= temp98_46 temp98_45))
(assert (= temp98_47 (select ARGNAME_padding_NAMEEND_VAL temp98_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp98_27 temp98_24)
             (bvslt temp98_31 temp98_28)
             (bvslt temp98_35 temp98_32)
             (bvslt temp98_39 temp98_36)
             (bvslt temp98_43 temp98_40)
             (bvslt temp98_47 temp98_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_48 #x0000000000000000))
(assert (= var1322786 temp98_48))
(assert (= temp98_49 #x0000000000000000))
(assert (= temp98_50 temp98_49))
(assert (= temp98_51 (select ARGNAME_output_padding_NAMEEND_VAL temp98_50)))
(assert (= temp98_52 #x0000000000000001))
(assert (= temp98_53 temp98_52))
(assert (= temp98_54 (select ARGNAME_output_padding_NAMEEND_VAL temp98_53)))
(assert (= temp98_55 #x0000000000000002))
(assert (= temp98_56 temp98_55))
(assert (= temp98_57 (select ARGNAME_output_padding_NAMEEND_VAL temp98_56)))
(assert (= temp98_58 #x0000000000000003))
(assert (= temp98_59 temp98_58))
(assert (= temp98_60 (select ARGNAME_output_padding_NAMEEND_VAL temp98_59)))
(assert (= temp98_61 #x0000000000000004))
(assert (= temp98_62 temp98_61))
(assert (= temp98_63 (select ARGNAME_output_padding_NAMEEND_VAL temp98_62)))
(assert (= temp98_64 #x0000000000000005))
(assert (= temp98_65 temp98_64))
(assert (= temp98_66 (select ARGNAME_output_padding_NAMEEND_VAL temp98_65)))
(assert (= temp98_67 #x0000000000000000))
(assert (= temp98_68 #x0000000000000000))
(assert (= temp98_69 temp98_68))
(assert (= temp98_70 (select ARGNAME_output_padding_NAMEEND_VAL temp98_69)))
(assert (= temp98_71 #x0000000000000000))
(assert (= temp98_72 #x0000000000000001))
(assert (= temp98_73 temp98_72))
(assert (= temp98_74 (select ARGNAME_output_padding_NAMEEND_VAL temp98_73)))
(assert (= temp98_75 #x0000000000000000))
(assert (= temp98_76 #x0000000000000002))
(assert (= temp98_77 temp98_76))
(assert (= temp98_78 (select ARGNAME_output_padding_NAMEEND_VAL temp98_77)))
(assert (= temp98_79 #x0000000000000000))
(assert (= temp98_80 #x0000000000000003))
(assert (= temp98_81 temp98_80))
(assert (= temp98_82 (select ARGNAME_output_padding_NAMEEND_VAL temp98_81)))
(assert (= temp98_83 #x0000000000000000))
(assert (= temp98_84 #x0000000000000004))
(assert (= temp98_85 temp98_84))
(assert (= temp98_86 (select ARGNAME_output_padding_NAMEEND_VAL temp98_85)))
(assert (= temp98_87 #x0000000000000000))
(assert (= temp98_88 #x0000000000000005))
(assert (= temp98_89 temp98_88))
(assert (= temp98_90 (select ARGNAME_output_padding_NAMEEND_VAL temp98_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp98_70 temp98_67)
             (bvslt temp98_74 temp98_71)
             (bvslt temp98_78 temp98_75)
             (bvslt temp98_82 temp98_79)
             (bvslt temp98_86 temp98_83)
             (bvslt temp98_90 temp98_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_91 #x0000000000000000))
(assert (= var1322797 temp98_91))
(assert (= temp98_92 #x0000000000000000))
(assert (= temp98_93 temp98_92))
(assert (= temp98_94 (select ARGNAME_stride_NAMEEND_VAL temp98_93)))
(assert (= temp98_95 #x0000000000000001))
(assert (= temp98_96 temp98_95))
(assert (= temp98_97 (select ARGNAME_stride_NAMEEND_VAL temp98_96)))
(assert (= temp98_98 #x0000000000000002))
(assert (= temp98_99 temp98_98))
(assert (= temp98_100 (select ARGNAME_stride_NAMEEND_VAL temp98_99)))
(assert (= temp98_101 #x0000000000000003))
(assert (= temp98_102 temp98_101))
(assert (= temp98_103 (select ARGNAME_stride_NAMEEND_VAL temp98_102)))
(assert (= temp98_104 #x0000000000000004))
(assert (= temp98_105 temp98_104))
(assert (= temp98_106 (select ARGNAME_stride_NAMEEND_VAL temp98_105)))
(assert (= temp98_107 #x0000000000000005))
(assert (= temp98_108 temp98_107))
(assert (= temp98_109 (select ARGNAME_stride_NAMEEND_VAL temp98_108)))
(assert (= temp98_110 #x0000000000000000))
(assert (= temp98_111 #x0000000000000000))
(assert (= temp98_112 temp98_111))
(assert (= temp98_113 (select ARGNAME_stride_NAMEEND_VAL temp98_112)))
(assert (= temp98_114 #x0000000000000000))
(assert (= temp98_115 #x0000000000000001))
(assert (= temp98_116 temp98_115))
(assert (= temp98_117 (select ARGNAME_stride_NAMEEND_VAL temp98_116)))
(assert (= temp98_118 #x0000000000000000))
(assert (= temp98_119 #x0000000000000002))
(assert (= temp98_120 temp98_119))
(assert (= temp98_121 (select ARGNAME_stride_NAMEEND_VAL temp98_120)))
(assert (= temp98_122 #x0000000000000000))
(assert (= temp98_123 #x0000000000000003))
(assert (= temp98_124 temp98_123))
(assert (= temp98_125 (select ARGNAME_stride_NAMEEND_VAL temp98_124)))
(assert (= temp98_126 #x0000000000000000))
(assert (= temp98_127 #x0000000000000004))
(assert (= temp98_128 temp98_127))
(assert (= temp98_129 (select ARGNAME_stride_NAMEEND_VAL temp98_128)))
(assert (= temp98_130 #x0000000000000000))
(assert (= temp98_131 #x0000000000000005))
(assert (= temp98_132 temp98_131))
(assert (= temp98_133 (select ARGNAME_stride_NAMEEND_VAL temp98_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp98_113 temp98_110)
             (bvsle temp98_117 temp98_114)
             (bvsle temp98_121 temp98_118)
             (bvsle temp98_125 temp98_122)
             (bvsle temp98_129 temp98_126)
             (bvsle temp98_133 temp98_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_134 #x0000000000000000))
(assert (= var1322807 temp98_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_135 #x0000000000000001))
(assert (= var1322819 temp98_135))
(assert (= temp98_136 #x0000000000000000))
(assert (= var1310898 temp98_136))
(assert (= temp98_137 #x0000000000000000))
(assert (= temp98_138 temp98_137))
(assert (= temp98_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_138)))
(assert (= temp98_140 #x0000000000000001))
(assert (= temp98_141 temp98_140))
(assert (= temp98_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_141)))
(assert (= temp98_143 #x0000000000000002))
(assert (= temp98_144 temp98_143))
(assert (= temp98_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_144)))
(assert (= temp98_146 #x0000000000000003))
(assert (= temp98_147 temp98_146))
(assert (= temp98_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_147)))
(assert (= temp98_149 #x0000000000000004))
(assert (= temp98_150 temp98_149))
(assert (= temp98_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_150)))
(assert (= temp98_152 #x0000000000000005))
(assert (= temp98_153 temp98_152))
(assert (= temp98_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_153)))
(assert (= temp98_156 var1310898))
(assert (= temp98_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_156)))
(assert (= temp98_155 temp98_157))
(assert (= var1322852
   (ite (bvslt temp98_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_158 #x0000000000000000))
(assert (= var1322852 temp98_158))
(assert (= temp98_159 #x0000000000000000))
(assert (= var1310898 temp98_159))
(assert (= temp98_161 var1310898))
(assert (= temp98_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_161)))
(assert (= temp98_160 temp98_162))
(assert (= var1322874 (bvsmod temp98_160 ARGNAME_groups_NAMEEND)))
(assert (= temp98_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp98_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_164 #x0000000000000001))
(assert (= var1322875 temp98_164))
(assert (= temp98_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp98_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_166 #x0000000000000001))
(assert (= var1322895 temp98_166))
(assert (= temp98_167 #x0000000000000001))
(assert (= var1311786 temp98_167))
(assert (= temp98_168 #x0000000000000000))
(assert (= temp98_169 temp98_168))
(assert (= temp98_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_169)))
(assert (= temp98_171 #x0000000000000001))
(assert (= temp98_172 temp98_171))
(assert (= temp98_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_172)))
(assert (= temp98_174 #x0000000000000002))
(assert (= temp98_175 temp98_174))
(assert (= temp98_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_175)))
(assert (= temp98_177 #x0000000000000003))
(assert (= temp98_178 temp98_177))
(assert (= temp98_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_178)))
(assert (= temp98_180 #x0000000000000004))
(assert (= temp98_181 temp98_180))
(assert (= temp98_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_181)))
(assert (= temp98_183 #x0000000000000005))
(assert (= temp98_184 temp98_183))
(assert (= temp98_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_184)))
(assert (= temp98_186 #x0000000000000000))
(assert (= temp98_187
   (ite (bvslt var1311786 temp98_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp98_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_187)))
(assert (= var1322903 temp98_188))
(assert (bvslt (ite (bvslt var1311786 temp98_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp98_189 #x0000000000000001))
(assert (= var1311786 temp98_189))
(assert (= temp98_191 var1311786))
(assert (= temp98_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_191)))
(assert (= temp98_190 temp98_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp98_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_193 #x0000000000000001))
(assert (= var1322908 temp98_193))
(assert (= temp98_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp98_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_195 #x0000000000000001))
(assert (= var1322975 temp98_195))
(assert (= temp98_196 #x0000000000000000))
(assert (= var1310898 temp98_196))
(assert (= temp98_197 #x0000000000000000))
(assert (= temp98_198 temp98_197))
(assert (= temp98_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp98_198)))
(assert (= temp98_200 #x0000000000000001))
(assert (= temp98_201 temp98_200))
(assert (= temp98_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp98_201)))
(assert (= temp98_203 #x0000000000000002))
(assert (= temp98_204 temp98_203))
(assert (= temp98_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp98_204)))
(assert (= temp98_206 #x0000000000000003))
(assert (= temp98_207 temp98_206))
(assert (= temp98_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp98_207)))
(assert (= temp98_209 #x0000000000000004))
(assert (= temp98_210 temp98_209))
(assert (= temp98_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp98_210)))
(assert (= temp98_212 #x0000000000000005))
(assert (= temp98_213 temp98_212))
(assert (= temp98_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp98_213)))
(assert (= temp98_215 #x0000000000000000))
(assert (= temp98_216
   (ite (bvslt var1310898 temp98_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp98_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp98_216)))
(assert (= var1322977 temp98_217))
(assert (bvslt (ite (bvslt var1310898 temp98_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp98_218 #x0000000000000000))
(assert (= var1310898 temp98_218))
(assert (= temp98_220 var1310898))
(assert (= temp98_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_220)))
(assert (= temp98_219 temp98_221))
(assert (= var1322980
   (ite (= var1322977 temp98_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_222 #x0000000000000001))
(assert (= var1322980 temp98_222))
(assert (= temp98_223 #x0000000000000002))
(assert (= var1848169 temp98_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp98_225 #x0000000000000001))
(assert (= var1323065 temp98_225))
(assert (= temp98_226 #x0000000000000001))
(assert (= var3486735 temp98_226))
(assert (= temp98_227 #x0000000000000001))
(assert (= var3814415 temp98_227))
(assert (= temp98_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp98_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_229 #x0000000000000001))
(assert (= var79986 temp98_229))
(assert (= temp98_230 #x0000000000000001))
(assert (= var80116 temp98_230))
(assert (= var4796905 var80116))
(assert (= temp98_231 #x0000000000000000))
(assert (= var4784306 temp98_231))
(assert (= temp98_232 #x0000000000000000))
(assert (= temp98_233
   (ite (bvslt var4784306 temp98_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp98_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_233)))
(assert (= var4796924 temp98_234))
(assert (bvslt (ite (bvslt var4784306 temp98_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp98_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp98_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_236 #x0000000000000001))
(assert (= var4796925 temp98_236))
(assert (= temp98_237 #x0000000000000000))
(assert (= var4996927 temp98_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp98_238 #x0000000000000002))
(assert (= var5125763 temp98_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_239 #x0000000000000000))
(assert (= var5191324 temp98_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp98_241 #xffffffffffffffff))
(assert (= temp98_240 temp98_241))
(assert (= temp98_242 #x0000000000000001))
(assert (= var66602 temp98_242))
(assert (= temp98_243 #x0000000000000000))
(assert (= temp98_244
   (ite (bvslt var66602 temp98_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp98_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_244)))
(assert (= var80523 temp98_245))
(assert (bvslt (ite (bvslt var66602 temp98_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp98_246 #x0000000000000000))
(assert (= var80524 (ite (= var80523 temp98_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_247 #x0000000000000001))
(assert (= var80524 temp98_247))
(assert (= temp98_249 #xffffffffffffffff))
(assert (= temp98_248 temp98_249))
(assert (= temp98_250 #x0000000000000001))
(assert (= var79986 temp98_250))
(model-add temp98_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp98_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp98_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






