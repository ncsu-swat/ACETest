(declare-fun temp60_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp60_2 () (_ BitVec 64))
(declare-fun temp60_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp60_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp60_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp60_6 () (_ BitVec 64))
(declare-fun temp60_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_8 () (_ BitVec 64))
(declare-fun temp60_9 () (_ BitVec 64))
(declare-fun temp60_10 () (_ BitVec 64))
(declare-fun temp60_11 () (_ BitVec 64))
(declare-fun temp60_12 () (_ BitVec 64))
(declare-fun temp60_13 () (_ BitVec 64))
(declare-fun temp60_14 () (_ BitVec 64))
(declare-fun temp60_15 () (_ BitVec 64))
(declare-fun temp60_16 () (_ BitVec 64))
(declare-fun temp60_17 () (_ BitVec 64))
(declare-fun temp60_18 () (_ BitVec 64))
(declare-fun temp60_19 () (_ BitVec 64))
(declare-fun temp60_20 () (_ BitVec 64))
(declare-fun temp60_21 () (_ BitVec 64))
(declare-fun temp60_22 () (_ BitVec 64))
(declare-fun temp60_23 () (_ BitVec 64))
(declare-fun temp60_24 () (_ BitVec 64))
(declare-fun temp60_25 () (_ BitVec 64))
(declare-fun temp60_26 () (_ BitVec 64))
(declare-fun temp60_27 () (_ BitVec 64))
(declare-fun temp60_28 () (_ BitVec 64))
(declare-fun temp60_29 () (_ BitVec 64))
(declare-fun temp60_30 () (_ BitVec 64))
(declare-fun temp60_31 () (_ BitVec 64))
(declare-fun temp60_32 () (_ BitVec 64))
(declare-fun temp60_33 () (_ BitVec 64))
(declare-fun temp60_34 () (_ BitVec 64))
(declare-fun temp60_35 () (_ BitVec 64))
(declare-fun temp60_36 () (_ BitVec 64))
(declare-fun temp60_37 () (_ BitVec 64))
(declare-fun temp60_38 () (_ BitVec 64))
(declare-fun temp60_39 () (_ BitVec 64))
(declare-fun temp60_40 () (_ BitVec 64))
(declare-fun temp60_41 () (_ BitVec 64))
(declare-fun temp60_42 () (_ BitVec 64))
(declare-fun temp60_43 () (_ BitVec 64))
(declare-fun temp60_44 () (_ BitVec 64))
(declare-fun temp60_45 () (_ BitVec 64))
(declare-fun temp60_46 () (_ BitVec 64))
(declare-fun temp60_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp60_48 () (_ BitVec 64))
(declare-fun temp60_49 () (_ BitVec 64))
(declare-fun temp60_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_51 () (_ BitVec 64))
(declare-fun temp60_52 () (_ BitVec 64))
(declare-fun temp60_53 () (_ BitVec 64))
(declare-fun temp60_54 () (_ BitVec 64))
(declare-fun temp60_55 () (_ BitVec 64))
(declare-fun temp60_56 () (_ BitVec 64))
(declare-fun temp60_57 () (_ BitVec 64))
(declare-fun temp60_58 () (_ BitVec 64))
(declare-fun temp60_59 () (_ BitVec 64))
(declare-fun temp60_60 () (_ BitVec 64))
(declare-fun temp60_61 () (_ BitVec 64))
(declare-fun temp60_62 () (_ BitVec 64))
(declare-fun temp60_63 () (_ BitVec 64))
(declare-fun temp60_64 () (_ BitVec 64))
(declare-fun temp60_65 () (_ BitVec 64))
(declare-fun temp60_66 () (_ BitVec 64))
(declare-fun temp60_67 () (_ BitVec 64))
(declare-fun temp60_68 () (_ BitVec 64))
(declare-fun temp60_69 () (_ BitVec 64))
(declare-fun temp60_70 () (_ BitVec 64))
(declare-fun temp60_71 () (_ BitVec 64))
(declare-fun temp60_72 () (_ BitVec 64))
(declare-fun temp60_73 () (_ BitVec 64))
(declare-fun temp60_74 () (_ BitVec 64))
(declare-fun temp60_75 () (_ BitVec 64))
(declare-fun temp60_76 () (_ BitVec 64))
(declare-fun temp60_77 () (_ BitVec 64))
(declare-fun temp60_78 () (_ BitVec 64))
(declare-fun temp60_79 () (_ BitVec 64))
(declare-fun temp60_80 () (_ BitVec 64))
(declare-fun temp60_81 () (_ BitVec 64))
(declare-fun temp60_82 () (_ BitVec 64))
(declare-fun temp60_83 () (_ BitVec 64))
(declare-fun temp60_84 () (_ BitVec 64))
(declare-fun temp60_85 () (_ BitVec 64))
(declare-fun temp60_86 () (_ BitVec 64))
(declare-fun temp60_87 () (_ BitVec 64))
(declare-fun temp60_88 () (_ BitVec 64))
(declare-fun temp60_89 () (_ BitVec 64))
(declare-fun temp60_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp60_91 () (_ BitVec 64))
(declare-fun temp60_92 () (_ BitVec 64))
(declare-fun temp60_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_94 () (_ BitVec 64))
(declare-fun temp60_95 () (_ BitVec 64))
(declare-fun temp60_96 () (_ BitVec 64))
(declare-fun temp60_97 () (_ BitVec 64))
(declare-fun temp60_98 () (_ BitVec 64))
(declare-fun temp60_99 () (_ BitVec 64))
(declare-fun temp60_100 () (_ BitVec 64))
(declare-fun temp60_101 () (_ BitVec 64))
(declare-fun temp60_102 () (_ BitVec 64))
(declare-fun temp60_103 () (_ BitVec 64))
(declare-fun temp60_104 () (_ BitVec 64))
(declare-fun temp60_105 () (_ BitVec 64))
(declare-fun temp60_106 () (_ BitVec 64))
(declare-fun temp60_107 () (_ BitVec 64))
(declare-fun temp60_108 () (_ BitVec 64))
(declare-fun temp60_109 () (_ BitVec 64))
(declare-fun temp60_110 () (_ BitVec 64))
(declare-fun temp60_111 () (_ BitVec 64))
(declare-fun temp60_112 () (_ BitVec 64))
(declare-fun temp60_113 () (_ BitVec 64))
(declare-fun temp60_114 () (_ BitVec 64))
(declare-fun temp60_115 () (_ BitVec 64))
(declare-fun temp60_116 () (_ BitVec 64))
(declare-fun temp60_117 () (_ BitVec 64))
(declare-fun temp60_118 () (_ BitVec 64))
(declare-fun temp60_119 () (_ BitVec 64))
(declare-fun temp60_120 () (_ BitVec 64))
(declare-fun temp60_121 () (_ BitVec 64))
(declare-fun temp60_122 () (_ BitVec 64))
(declare-fun temp60_123 () (_ BitVec 64))
(declare-fun temp60_124 () (_ BitVec 64))
(declare-fun temp60_125 () (_ BitVec 64))
(declare-fun temp60_126 () (_ BitVec 64))
(declare-fun temp60_127 () (_ BitVec 64))
(declare-fun temp60_128 () (_ BitVec 64))
(declare-fun temp60_129 () (_ BitVec 64))
(declare-fun temp60_130 () (_ BitVec 64))
(declare-fun temp60_131 () (_ BitVec 64))
(declare-fun temp60_132 () (_ BitVec 64))
(declare-fun temp60_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp60_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp60_135 () (_ BitVec 64))
(declare-fun temp60_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp60_137 () (_ BitVec 64))
(declare-fun temp60_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_139 () (_ BitVec 64))
(declare-fun temp60_140 () (_ BitVec 64))
(declare-fun temp60_141 () (_ BitVec 64))
(declare-fun temp60_142 () (_ BitVec 64))
(declare-fun temp60_143 () (_ BitVec 64))
(declare-fun temp60_144 () (_ BitVec 64))
(declare-fun temp60_145 () (_ BitVec 64))
(declare-fun temp60_146 () (_ BitVec 64))
(declare-fun temp60_147 () (_ BitVec 64))
(declare-fun temp60_148 () (_ BitVec 64))
(declare-fun temp60_149 () (_ BitVec 64))
(declare-fun temp60_150 () (_ BitVec 64))
(declare-fun temp60_151 () (_ BitVec 64))
(declare-fun temp60_152 () (_ BitVec 64))
(declare-fun temp60_153 () (_ BitVec 64))
(declare-fun temp60_154 () (_ BitVec 64))
(declare-fun temp60_156 () (_ BitVec 64))
(declare-fun temp60_157 () (_ BitVec 64))
(declare-fun temp60_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp60_158 () (_ BitVec 64))
(declare-fun temp60_159 () (_ BitVec 64))
(declare-fun temp60_161 () (_ BitVec 64))
(declare-fun temp60_162 () (_ BitVec 64))
(declare-fun temp60_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp60_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp60_164 () (_ BitVec 64))
(declare-fun temp60_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp60_166 () (_ BitVec 64))
(declare-fun temp60_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp60_168 () (_ BitVec 64))
(declare-fun temp60_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_170 () (_ BitVec 64))
(declare-fun temp60_171 () (_ BitVec 64))
(declare-fun temp60_172 () (_ BitVec 64))
(declare-fun temp60_173 () (_ BitVec 64))
(declare-fun temp60_174 () (_ BitVec 64))
(declare-fun temp60_175 () (_ BitVec 64))
(declare-fun temp60_176 () (_ BitVec 64))
(declare-fun temp60_177 () (_ BitVec 64))
(declare-fun temp60_178 () (_ BitVec 64))
(declare-fun temp60_179 () (_ BitVec 64))
(declare-fun temp60_180 () (_ BitVec 64))
(declare-fun temp60_181 () (_ BitVec 64))
(declare-fun temp60_182 () (_ BitVec 64))
(declare-fun temp60_183 () (_ BitVec 64))
(declare-fun temp60_184 () (_ BitVec 64))
(declare-fun temp60_185 () (_ BitVec 64))
(declare-fun temp60_186 () (_ BitVec 64))
(declare-fun temp60_187 () (_ BitVec 64))
(declare-fun temp60_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp60_189 () (_ BitVec 64))
(declare-fun temp60_191 () (_ BitVec 64))
(declare-fun temp60_192 () (_ BitVec 64))
(declare-fun temp60_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp60_193 () (_ BitVec 64))
(declare-fun temp60_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp60_195 () (_ BitVec 64))
(declare-fun temp60_196 () (_ BitVec 64))
(declare-fun temp60_197 () (_ BitVec 64))
(declare-fun temp60_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_199 () (_ BitVec 64))
(declare-fun temp60_200 () (_ BitVec 64))
(declare-fun temp60_201 () (_ BitVec 64))
(declare-fun temp60_202 () (_ BitVec 64))
(declare-fun temp60_203 () (_ BitVec 64))
(declare-fun temp60_204 () (_ BitVec 64))
(declare-fun temp60_205 () (_ BitVec 64))
(declare-fun temp60_206 () (_ BitVec 64))
(declare-fun temp60_207 () (_ BitVec 64))
(declare-fun temp60_208 () (_ BitVec 64))
(declare-fun temp60_209 () (_ BitVec 64))
(declare-fun temp60_210 () (_ BitVec 64))
(declare-fun temp60_211 () (_ BitVec 64))
(declare-fun temp60_212 () (_ BitVec 64))
(declare-fun temp60_213 () (_ BitVec 64))
(declare-fun temp60_214 () (_ BitVec 64))
(declare-fun temp60_215 () (_ BitVec 64))
(declare-fun temp60_216 () (_ BitVec 64))
(declare-fun temp60_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp60_218 () (_ BitVec 64))
(declare-fun temp60_220 () (_ BitVec 64))
(declare-fun temp60_221 () (_ BitVec 64))
(declare-fun temp60_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp60_222 () (_ BitVec 64))
(declare-fun temp60_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp60_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp60_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp60_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp60_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp60_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp60_229 () (_ BitVec 64))
(declare-fun temp60_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp60_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp60_232 () (_ BitVec 64))
(declare-fun temp60_233 () (_ BitVec 64))
(declare-fun temp60_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp60_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp60_236 () (_ BitVec 64))
(declare-fun temp60_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp60_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp60_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp60_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp60_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp60_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp60_243 () (_ BitVec 64))
(assert (= temp60_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp60_1)))
(assert (= temp60_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp60_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_3 #x0000000000000000))
(assert (= var79869 temp60_3))
(assert (= temp60_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp60_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_5 #x0000000000000000))
(assert (= var79914 temp60_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp60_6 #x0000000000000000))
(assert (= temp60_7 temp60_6))
(assert (= temp60_8 (select ARGNAME_padding_NAMEEND_VAL temp60_7)))
(assert (= temp60_9 #x0000000000000001))
(assert (= temp60_10 temp60_9))
(assert (= temp60_11 (select ARGNAME_padding_NAMEEND_VAL temp60_10)))
(assert (= temp60_12 #x0000000000000002))
(assert (= temp60_13 temp60_12))
(assert (= temp60_14 (select ARGNAME_padding_NAMEEND_VAL temp60_13)))
(assert (= temp60_15 #x0000000000000003))
(assert (= temp60_16 temp60_15))
(assert (= temp60_17 (select ARGNAME_padding_NAMEEND_VAL temp60_16)))
(assert (= temp60_18 #x0000000000000004))
(assert (= temp60_19 temp60_18))
(assert (= temp60_20 (select ARGNAME_padding_NAMEEND_VAL temp60_19)))
(assert (= temp60_21 #x0000000000000005))
(assert (= temp60_22 temp60_21))
(assert (= temp60_23 (select ARGNAME_padding_NAMEEND_VAL temp60_22)))
(assert (= temp60_24 #x0000000000000000))
(assert (= temp60_25 #x0000000000000000))
(assert (= temp60_26 temp60_25))
(assert (= temp60_27 (select ARGNAME_padding_NAMEEND_VAL temp60_26)))
(assert (= temp60_28 #x0000000000000000))
(assert (= temp60_29 #x0000000000000001))
(assert (= temp60_30 temp60_29))
(assert (= temp60_31 (select ARGNAME_padding_NAMEEND_VAL temp60_30)))
(assert (= temp60_32 #x0000000000000000))
(assert (= temp60_33 #x0000000000000002))
(assert (= temp60_34 temp60_33))
(assert (= temp60_35 (select ARGNAME_padding_NAMEEND_VAL temp60_34)))
(assert (= temp60_36 #x0000000000000000))
(assert (= temp60_37 #x0000000000000003))
(assert (= temp60_38 temp60_37))
(assert (= temp60_39 (select ARGNAME_padding_NAMEEND_VAL temp60_38)))
(assert (= temp60_40 #x0000000000000000))
(assert (= temp60_41 #x0000000000000004))
(assert (= temp60_42 temp60_41))
(assert (= temp60_43 (select ARGNAME_padding_NAMEEND_VAL temp60_42)))
(assert (= temp60_44 #x0000000000000000))
(assert (= temp60_45 #x0000000000000005))
(assert (= temp60_46 temp60_45))
(assert (= temp60_47 (select ARGNAME_padding_NAMEEND_VAL temp60_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp60_27 temp60_24)
             (bvslt temp60_31 temp60_28)
             (bvslt temp60_35 temp60_32)
             (bvslt temp60_39 temp60_36)
             (bvslt temp60_43 temp60_40)
             (bvslt temp60_47 temp60_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_48 #x0000000000000000))
(assert (= var1322786 temp60_48))
(assert (= temp60_49 #x0000000000000000))
(assert (= temp60_50 temp60_49))
(assert (= temp60_51 (select ARGNAME_output_padding_NAMEEND_VAL temp60_50)))
(assert (= temp60_52 #x0000000000000001))
(assert (= temp60_53 temp60_52))
(assert (= temp60_54 (select ARGNAME_output_padding_NAMEEND_VAL temp60_53)))
(assert (= temp60_55 #x0000000000000002))
(assert (= temp60_56 temp60_55))
(assert (= temp60_57 (select ARGNAME_output_padding_NAMEEND_VAL temp60_56)))
(assert (= temp60_58 #x0000000000000003))
(assert (= temp60_59 temp60_58))
(assert (= temp60_60 (select ARGNAME_output_padding_NAMEEND_VAL temp60_59)))
(assert (= temp60_61 #x0000000000000004))
(assert (= temp60_62 temp60_61))
(assert (= temp60_63 (select ARGNAME_output_padding_NAMEEND_VAL temp60_62)))
(assert (= temp60_64 #x0000000000000005))
(assert (= temp60_65 temp60_64))
(assert (= temp60_66 (select ARGNAME_output_padding_NAMEEND_VAL temp60_65)))
(assert (= temp60_67 #x0000000000000000))
(assert (= temp60_68 #x0000000000000000))
(assert (= temp60_69 temp60_68))
(assert (= temp60_70 (select ARGNAME_output_padding_NAMEEND_VAL temp60_69)))
(assert (= temp60_71 #x0000000000000000))
(assert (= temp60_72 #x0000000000000001))
(assert (= temp60_73 temp60_72))
(assert (= temp60_74 (select ARGNAME_output_padding_NAMEEND_VAL temp60_73)))
(assert (= temp60_75 #x0000000000000000))
(assert (= temp60_76 #x0000000000000002))
(assert (= temp60_77 temp60_76))
(assert (= temp60_78 (select ARGNAME_output_padding_NAMEEND_VAL temp60_77)))
(assert (= temp60_79 #x0000000000000000))
(assert (= temp60_80 #x0000000000000003))
(assert (= temp60_81 temp60_80))
(assert (= temp60_82 (select ARGNAME_output_padding_NAMEEND_VAL temp60_81)))
(assert (= temp60_83 #x0000000000000000))
(assert (= temp60_84 #x0000000000000004))
(assert (= temp60_85 temp60_84))
(assert (= temp60_86 (select ARGNAME_output_padding_NAMEEND_VAL temp60_85)))
(assert (= temp60_87 #x0000000000000000))
(assert (= temp60_88 #x0000000000000005))
(assert (= temp60_89 temp60_88))
(assert (= temp60_90 (select ARGNAME_output_padding_NAMEEND_VAL temp60_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp60_70 temp60_67)
             (bvslt temp60_74 temp60_71)
             (bvslt temp60_78 temp60_75)
             (bvslt temp60_82 temp60_79)
             (bvslt temp60_86 temp60_83)
             (bvslt temp60_90 temp60_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_91 #x0000000000000000))
(assert (= var1322797 temp60_91))
(assert (= temp60_92 #x0000000000000000))
(assert (= temp60_93 temp60_92))
(assert (= temp60_94 (select ARGNAME_stride_NAMEEND_VAL temp60_93)))
(assert (= temp60_95 #x0000000000000001))
(assert (= temp60_96 temp60_95))
(assert (= temp60_97 (select ARGNAME_stride_NAMEEND_VAL temp60_96)))
(assert (= temp60_98 #x0000000000000002))
(assert (= temp60_99 temp60_98))
(assert (= temp60_100 (select ARGNAME_stride_NAMEEND_VAL temp60_99)))
(assert (= temp60_101 #x0000000000000003))
(assert (= temp60_102 temp60_101))
(assert (= temp60_103 (select ARGNAME_stride_NAMEEND_VAL temp60_102)))
(assert (= temp60_104 #x0000000000000004))
(assert (= temp60_105 temp60_104))
(assert (= temp60_106 (select ARGNAME_stride_NAMEEND_VAL temp60_105)))
(assert (= temp60_107 #x0000000000000005))
(assert (= temp60_108 temp60_107))
(assert (= temp60_109 (select ARGNAME_stride_NAMEEND_VAL temp60_108)))
(assert (= temp60_110 #x0000000000000000))
(assert (= temp60_111 #x0000000000000000))
(assert (= temp60_112 temp60_111))
(assert (= temp60_113 (select ARGNAME_stride_NAMEEND_VAL temp60_112)))
(assert (= temp60_114 #x0000000000000000))
(assert (= temp60_115 #x0000000000000001))
(assert (= temp60_116 temp60_115))
(assert (= temp60_117 (select ARGNAME_stride_NAMEEND_VAL temp60_116)))
(assert (= temp60_118 #x0000000000000000))
(assert (= temp60_119 #x0000000000000002))
(assert (= temp60_120 temp60_119))
(assert (= temp60_121 (select ARGNAME_stride_NAMEEND_VAL temp60_120)))
(assert (= temp60_122 #x0000000000000000))
(assert (= temp60_123 #x0000000000000003))
(assert (= temp60_124 temp60_123))
(assert (= temp60_125 (select ARGNAME_stride_NAMEEND_VAL temp60_124)))
(assert (= temp60_126 #x0000000000000000))
(assert (= temp60_127 #x0000000000000004))
(assert (= temp60_128 temp60_127))
(assert (= temp60_129 (select ARGNAME_stride_NAMEEND_VAL temp60_128)))
(assert (= temp60_130 #x0000000000000000))
(assert (= temp60_131 #x0000000000000005))
(assert (= temp60_132 temp60_131))
(assert (= temp60_133 (select ARGNAME_stride_NAMEEND_VAL temp60_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp60_113 temp60_110)
             (bvsle temp60_117 temp60_114)
             (bvsle temp60_121 temp60_118)
             (bvsle temp60_125 temp60_122)
             (bvsle temp60_129 temp60_126)
             (bvsle temp60_133 temp60_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_134 #x0000000000000000))
(assert (= var1322807 temp60_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_135 #x0000000000000001))
(assert (= var1322819 temp60_135))
(assert (= temp60_136 #x0000000000000000))
(assert (= var1310898 temp60_136))
(assert (= temp60_137 #x0000000000000000))
(assert (= temp60_138 temp60_137))
(assert (= temp60_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_138)))
(assert (= temp60_140 #x0000000000000001))
(assert (= temp60_141 temp60_140))
(assert (= temp60_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_141)))
(assert (= temp60_143 #x0000000000000002))
(assert (= temp60_144 temp60_143))
(assert (= temp60_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_144)))
(assert (= temp60_146 #x0000000000000003))
(assert (= temp60_147 temp60_146))
(assert (= temp60_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_147)))
(assert (= temp60_149 #x0000000000000004))
(assert (= temp60_150 temp60_149))
(assert (= temp60_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_150)))
(assert (= temp60_152 #x0000000000000005))
(assert (= temp60_153 temp60_152))
(assert (= temp60_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_153)))
(assert (= temp60_156 var1310898))
(assert (= temp60_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_156)))
(assert (= temp60_155 temp60_157))
(assert (= var1322852
   (ite (bvslt temp60_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_158 #x0000000000000000))
(assert (= var1322852 temp60_158))
(assert (= temp60_159 #x0000000000000000))
(assert (= var1310898 temp60_159))
(assert (= temp60_161 var1310898))
(assert (= temp60_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_161)))
(assert (= temp60_160 temp60_162))
(assert (= var1322874 (bvsmod temp60_160 ARGNAME_groups_NAMEEND)))
(assert (= temp60_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp60_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_164 #x0000000000000001))
(assert (= var1322875 temp60_164))
(assert (= temp60_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp60_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_166 #x0000000000000001))
(assert (= var1322895 temp60_166))
(assert (= temp60_167 #x0000000000000001))
(assert (= var1311786 temp60_167))
(assert (= temp60_168 #x0000000000000000))
(assert (= temp60_169 temp60_168))
(assert (= temp60_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_169)))
(assert (= temp60_171 #x0000000000000001))
(assert (= temp60_172 temp60_171))
(assert (= temp60_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_172)))
(assert (= temp60_174 #x0000000000000002))
(assert (= temp60_175 temp60_174))
(assert (= temp60_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_175)))
(assert (= temp60_177 #x0000000000000003))
(assert (= temp60_178 temp60_177))
(assert (= temp60_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_178)))
(assert (= temp60_180 #x0000000000000004))
(assert (= temp60_181 temp60_180))
(assert (= temp60_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_181)))
(assert (= temp60_183 #x0000000000000005))
(assert (= temp60_184 temp60_183))
(assert (= temp60_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_184)))
(assert (= temp60_186 #x0000000000000000))
(assert (= temp60_187
   (ite (bvslt var1311786 temp60_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp60_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_187)))
(assert (= var1322903 temp60_188))
(assert (bvslt (ite (bvslt var1311786 temp60_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp60_189 #x0000000000000001))
(assert (= var1311786 temp60_189))
(assert (= temp60_191 var1311786))
(assert (= temp60_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_191)))
(assert (= temp60_190 temp60_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp60_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_193 #x0000000000000001))
(assert (= var1322908 temp60_193))
(assert (= temp60_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp60_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_195 #x0000000000000001))
(assert (= var1322975 temp60_195))
(assert (= temp60_196 #x0000000000000000))
(assert (= var1310898 temp60_196))
(assert (= temp60_197 #x0000000000000000))
(assert (= temp60_198 temp60_197))
(assert (= temp60_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp60_198)))
(assert (= temp60_200 #x0000000000000001))
(assert (= temp60_201 temp60_200))
(assert (= temp60_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp60_201)))
(assert (= temp60_203 #x0000000000000002))
(assert (= temp60_204 temp60_203))
(assert (= temp60_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp60_204)))
(assert (= temp60_206 #x0000000000000003))
(assert (= temp60_207 temp60_206))
(assert (= temp60_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp60_207)))
(assert (= temp60_209 #x0000000000000004))
(assert (= temp60_210 temp60_209))
(assert (= temp60_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp60_210)))
(assert (= temp60_212 #x0000000000000005))
(assert (= temp60_213 temp60_212))
(assert (= temp60_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp60_213)))
(assert (= temp60_215 #x0000000000000000))
(assert (= temp60_216
   (ite (bvslt var1310898 temp60_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp60_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp60_216)))
(assert (= var1322977 temp60_217))
(assert (bvslt (ite (bvslt var1310898 temp60_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp60_218 #x0000000000000000))
(assert (= var1310898 temp60_218))
(assert (= temp60_220 var1310898))
(assert (= temp60_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_220)))
(assert (= temp60_219 temp60_221))
(assert (= var1322980
   (ite (= var1322977 temp60_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_222 #x0000000000000001))
(assert (= var1322980 temp60_222))
(assert (= temp60_223 #x0000000000000002))
(assert (= var1848169 temp60_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp60_225 #x0000000000000001))
(assert (= var1323065 temp60_225))
(assert (= temp60_226 #x0000000000000001))
(assert (= var3486735 temp60_226))
(assert (= temp60_227 #x0000000000000001))
(assert (= var3814415 temp60_227))
(assert (= temp60_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp60_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_229 #x0000000000000001))
(assert (= var79986 temp60_229))
(assert (= temp60_230 #x0000000000000001))
(assert (= var80116 temp60_230))
(assert (= var4796905 var80116))
(assert (= temp60_231 #x0000000000000000))
(assert (= var4784306 temp60_231))
(assert (= temp60_232 #x0000000000000000))
(assert (= temp60_233
   (ite (bvslt var4784306 temp60_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp60_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_233)))
(assert (= var4796924 temp60_234))
(assert (bvslt (ite (bvslt var4784306 temp60_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp60_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp60_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_236 #x0000000000000001))
(assert (= var4796925 temp60_236))
(assert (= temp60_237 #x0000000000000000))
(assert (= var4996927 temp60_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp60_238 #x0000000000000002))
(assert (= var5125763 temp60_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_239 #x0000000000000000))
(assert (= var5191324 temp60_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp60_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp60_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp60_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp60_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_243 #x0000000000000001))
(assert (= var79986 temp60_243))
(model-add temp60_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp60_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp60_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






