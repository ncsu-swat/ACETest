(declare-fun temp264_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp264_2 () (_ BitVec 64))
(declare-fun temp264_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp264_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp264_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp264_6 () (_ BitVec 64))
(declare-fun temp264_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_8 () (_ BitVec 64))
(declare-fun temp264_9 () (_ BitVec 64))
(declare-fun temp264_10 () (_ BitVec 64))
(declare-fun temp264_11 () (_ BitVec 64))
(declare-fun temp264_12 () (_ BitVec 64))
(declare-fun temp264_13 () (_ BitVec 64))
(declare-fun temp264_14 () (_ BitVec 64))
(declare-fun temp264_15 () (_ BitVec 64))
(declare-fun temp264_16 () (_ BitVec 64))
(declare-fun temp264_17 () (_ BitVec 64))
(declare-fun temp264_18 () (_ BitVec 64))
(declare-fun temp264_19 () (_ BitVec 64))
(declare-fun temp264_20 () (_ BitVec 64))
(declare-fun temp264_21 () (_ BitVec 64))
(declare-fun temp264_22 () (_ BitVec 64))
(declare-fun temp264_23 () (_ BitVec 64))
(declare-fun temp264_24 () (_ BitVec 64))
(declare-fun temp264_25 () (_ BitVec 64))
(declare-fun temp264_26 () (_ BitVec 64))
(declare-fun temp264_27 () (_ BitVec 64))
(declare-fun temp264_28 () (_ BitVec 64))
(declare-fun temp264_29 () (_ BitVec 64))
(declare-fun temp264_30 () (_ BitVec 64))
(declare-fun temp264_31 () (_ BitVec 64))
(declare-fun temp264_32 () (_ BitVec 64))
(declare-fun temp264_33 () (_ BitVec 64))
(declare-fun temp264_34 () (_ BitVec 64))
(declare-fun temp264_35 () (_ BitVec 64))
(declare-fun temp264_36 () (_ BitVec 64))
(declare-fun temp264_37 () (_ BitVec 64))
(declare-fun temp264_38 () (_ BitVec 64))
(declare-fun temp264_39 () (_ BitVec 64))
(declare-fun temp264_40 () (_ BitVec 64))
(declare-fun temp264_41 () (_ BitVec 64))
(declare-fun temp264_42 () (_ BitVec 64))
(declare-fun temp264_43 () (_ BitVec 64))
(declare-fun temp264_44 () (_ BitVec 64))
(declare-fun temp264_45 () (_ BitVec 64))
(declare-fun temp264_46 () (_ BitVec 64))
(declare-fun temp264_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp264_48 () (_ BitVec 64))
(declare-fun temp264_49 () (_ BitVec 64))
(declare-fun temp264_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_51 () (_ BitVec 64))
(declare-fun temp264_52 () (_ BitVec 64))
(declare-fun temp264_53 () (_ BitVec 64))
(declare-fun temp264_54 () (_ BitVec 64))
(declare-fun temp264_55 () (_ BitVec 64))
(declare-fun temp264_56 () (_ BitVec 64))
(declare-fun temp264_57 () (_ BitVec 64))
(declare-fun temp264_58 () (_ BitVec 64))
(declare-fun temp264_59 () (_ BitVec 64))
(declare-fun temp264_60 () (_ BitVec 64))
(declare-fun temp264_61 () (_ BitVec 64))
(declare-fun temp264_62 () (_ BitVec 64))
(declare-fun temp264_63 () (_ BitVec 64))
(declare-fun temp264_64 () (_ BitVec 64))
(declare-fun temp264_65 () (_ BitVec 64))
(declare-fun temp264_66 () (_ BitVec 64))
(declare-fun temp264_67 () (_ BitVec 64))
(declare-fun temp264_68 () (_ BitVec 64))
(declare-fun temp264_69 () (_ BitVec 64))
(declare-fun temp264_70 () (_ BitVec 64))
(declare-fun temp264_71 () (_ BitVec 64))
(declare-fun temp264_72 () (_ BitVec 64))
(declare-fun temp264_73 () (_ BitVec 64))
(declare-fun temp264_74 () (_ BitVec 64))
(declare-fun temp264_75 () (_ BitVec 64))
(declare-fun temp264_76 () (_ BitVec 64))
(declare-fun temp264_77 () (_ BitVec 64))
(declare-fun temp264_78 () (_ BitVec 64))
(declare-fun temp264_79 () (_ BitVec 64))
(declare-fun temp264_80 () (_ BitVec 64))
(declare-fun temp264_81 () (_ BitVec 64))
(declare-fun temp264_82 () (_ BitVec 64))
(declare-fun temp264_83 () (_ BitVec 64))
(declare-fun temp264_84 () (_ BitVec 64))
(declare-fun temp264_85 () (_ BitVec 64))
(declare-fun temp264_86 () (_ BitVec 64))
(declare-fun temp264_87 () (_ BitVec 64))
(declare-fun temp264_88 () (_ BitVec 64))
(declare-fun temp264_89 () (_ BitVec 64))
(declare-fun temp264_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp264_91 () (_ BitVec 64))
(declare-fun temp264_92 () (_ BitVec 64))
(declare-fun temp264_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_94 () (_ BitVec 64))
(declare-fun temp264_95 () (_ BitVec 64))
(declare-fun temp264_96 () (_ BitVec 64))
(declare-fun temp264_97 () (_ BitVec 64))
(declare-fun temp264_98 () (_ BitVec 64))
(declare-fun temp264_99 () (_ BitVec 64))
(declare-fun temp264_100 () (_ BitVec 64))
(declare-fun temp264_101 () (_ BitVec 64))
(declare-fun temp264_102 () (_ BitVec 64))
(declare-fun temp264_103 () (_ BitVec 64))
(declare-fun temp264_104 () (_ BitVec 64))
(declare-fun temp264_105 () (_ BitVec 64))
(declare-fun temp264_106 () (_ BitVec 64))
(declare-fun temp264_107 () (_ BitVec 64))
(declare-fun temp264_108 () (_ BitVec 64))
(declare-fun temp264_109 () (_ BitVec 64))
(declare-fun temp264_110 () (_ BitVec 64))
(declare-fun temp264_111 () (_ BitVec 64))
(declare-fun temp264_112 () (_ BitVec 64))
(declare-fun temp264_113 () (_ BitVec 64))
(declare-fun temp264_114 () (_ BitVec 64))
(declare-fun temp264_115 () (_ BitVec 64))
(declare-fun temp264_116 () (_ BitVec 64))
(declare-fun temp264_117 () (_ BitVec 64))
(declare-fun temp264_118 () (_ BitVec 64))
(declare-fun temp264_119 () (_ BitVec 64))
(declare-fun temp264_120 () (_ BitVec 64))
(declare-fun temp264_121 () (_ BitVec 64))
(declare-fun temp264_122 () (_ BitVec 64))
(declare-fun temp264_123 () (_ BitVec 64))
(declare-fun temp264_124 () (_ BitVec 64))
(declare-fun temp264_125 () (_ BitVec 64))
(declare-fun temp264_126 () (_ BitVec 64))
(declare-fun temp264_127 () (_ BitVec 64))
(declare-fun temp264_128 () (_ BitVec 64))
(declare-fun temp264_129 () (_ BitVec 64))
(declare-fun temp264_130 () (_ BitVec 64))
(declare-fun temp264_131 () (_ BitVec 64))
(declare-fun temp264_132 () (_ BitVec 64))
(declare-fun temp264_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp264_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp264_135 () (_ BitVec 64))
(declare-fun temp264_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp264_137 () (_ BitVec 64))
(declare-fun temp264_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_139 () (_ BitVec 64))
(declare-fun temp264_140 () (_ BitVec 64))
(declare-fun temp264_141 () (_ BitVec 64))
(declare-fun temp264_142 () (_ BitVec 64))
(declare-fun temp264_143 () (_ BitVec 64))
(declare-fun temp264_144 () (_ BitVec 64))
(declare-fun temp264_145 () (_ BitVec 64))
(declare-fun temp264_146 () (_ BitVec 64))
(declare-fun temp264_147 () (_ BitVec 64))
(declare-fun temp264_148 () (_ BitVec 64))
(declare-fun temp264_149 () (_ BitVec 64))
(declare-fun temp264_150 () (_ BitVec 64))
(declare-fun temp264_151 () (_ BitVec 64))
(declare-fun temp264_152 () (_ BitVec 64))
(declare-fun temp264_153 () (_ BitVec 64))
(declare-fun temp264_154 () (_ BitVec 64))
(declare-fun temp264_156 () (_ BitVec 64))
(declare-fun temp264_157 () (_ BitVec 64))
(declare-fun temp264_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp264_158 () (_ BitVec 64))
(declare-fun temp264_159 () (_ BitVec 64))
(declare-fun temp264_161 () (_ BitVec 64))
(declare-fun temp264_162 () (_ BitVec 64))
(declare-fun temp264_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp264_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp264_164 () (_ BitVec 64))
(declare-fun temp264_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp264_166 () (_ BitVec 64))
(declare-fun temp264_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp264_168 () (_ BitVec 64))
(declare-fun temp264_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_170 () (_ BitVec 64))
(declare-fun temp264_171 () (_ BitVec 64))
(declare-fun temp264_172 () (_ BitVec 64))
(declare-fun temp264_173 () (_ BitVec 64))
(declare-fun temp264_174 () (_ BitVec 64))
(declare-fun temp264_175 () (_ BitVec 64))
(declare-fun temp264_176 () (_ BitVec 64))
(declare-fun temp264_177 () (_ BitVec 64))
(declare-fun temp264_178 () (_ BitVec 64))
(declare-fun temp264_179 () (_ BitVec 64))
(declare-fun temp264_180 () (_ BitVec 64))
(declare-fun temp264_181 () (_ BitVec 64))
(declare-fun temp264_182 () (_ BitVec 64))
(declare-fun temp264_183 () (_ BitVec 64))
(declare-fun temp264_184 () (_ BitVec 64))
(declare-fun temp264_185 () (_ BitVec 64))
(declare-fun temp264_186 () (_ BitVec 64))
(declare-fun temp264_187 () (_ BitVec 64))
(declare-fun temp264_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp264_189 () (_ BitVec 64))
(declare-fun temp264_191 () (_ BitVec 64))
(declare-fun temp264_192 () (_ BitVec 64))
(declare-fun temp264_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp264_193 () (_ BitVec 64))
(declare-fun temp264_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp264_195 () (_ BitVec 64))
(declare-fun temp264_196 () (_ BitVec 64))
(declare-fun temp264_197 () (_ BitVec 64))
(declare-fun temp264_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_199 () (_ BitVec 64))
(declare-fun temp264_200 () (_ BitVec 64))
(declare-fun temp264_201 () (_ BitVec 64))
(declare-fun temp264_202 () (_ BitVec 64))
(declare-fun temp264_203 () (_ BitVec 64))
(declare-fun temp264_204 () (_ BitVec 64))
(declare-fun temp264_205 () (_ BitVec 64))
(declare-fun temp264_206 () (_ BitVec 64))
(declare-fun temp264_207 () (_ BitVec 64))
(declare-fun temp264_208 () (_ BitVec 64))
(declare-fun temp264_209 () (_ BitVec 64))
(declare-fun temp264_210 () (_ BitVec 64))
(declare-fun temp264_211 () (_ BitVec 64))
(declare-fun temp264_212 () (_ BitVec 64))
(declare-fun temp264_213 () (_ BitVec 64))
(declare-fun temp264_214 () (_ BitVec 64))
(declare-fun temp264_215 () (_ BitVec 64))
(declare-fun temp264_216 () (_ BitVec 64))
(declare-fun temp264_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp264_218 () (_ BitVec 64))
(declare-fun temp264_220 () (_ BitVec 64))
(declare-fun temp264_221 () (_ BitVec 64))
(declare-fun temp264_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp264_222 () (_ BitVec 64))
(declare-fun temp264_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp264_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp264_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp264_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp264_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp264_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp264_229 () (_ BitVec 64))
(declare-fun temp264_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp264_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp264_232 () (_ BitVec 64))
(declare-fun temp264_233 () (_ BitVec 64))
(declare-fun temp264_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp264_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp264_236 () (_ BitVec 64))
(declare-fun temp264_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp264_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp264_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp264_240 () (_ BitVec 64))
(declare-fun temp264_241 () (_ BitVec 64))
(declare-fun var7156500 () (_ BitVec 64))
(declare-fun var7156467 () (_ BitVec 64))
(declare-fun var7025031 () (_ BitVec 64))
(declare-fun var7025027 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp264_242 () (_ BitVec 64))
(assert (= temp264_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp264_1)))
(assert (= temp264_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp264_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_3 #x0000000000000000))
(assert (= var79869 temp264_3))
(assert (= temp264_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp264_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_5 #x0000000000000000))
(assert (= var79914 temp264_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp264_6 #x0000000000000000))
(assert (= temp264_7 temp264_6))
(assert (= temp264_8 (select ARGNAME_padding_NAMEEND_VAL temp264_7)))
(assert (= temp264_9 #x0000000000000001))
(assert (= temp264_10 temp264_9))
(assert (= temp264_11 (select ARGNAME_padding_NAMEEND_VAL temp264_10)))
(assert (= temp264_12 #x0000000000000002))
(assert (= temp264_13 temp264_12))
(assert (= temp264_14 (select ARGNAME_padding_NAMEEND_VAL temp264_13)))
(assert (= temp264_15 #x0000000000000003))
(assert (= temp264_16 temp264_15))
(assert (= temp264_17 (select ARGNAME_padding_NAMEEND_VAL temp264_16)))
(assert (= temp264_18 #x0000000000000004))
(assert (= temp264_19 temp264_18))
(assert (= temp264_20 (select ARGNAME_padding_NAMEEND_VAL temp264_19)))
(assert (= temp264_21 #x0000000000000005))
(assert (= temp264_22 temp264_21))
(assert (= temp264_23 (select ARGNAME_padding_NAMEEND_VAL temp264_22)))
(assert (= temp264_24 #x0000000000000000))
(assert (= temp264_25 #x0000000000000000))
(assert (= temp264_26 temp264_25))
(assert (= temp264_27 (select ARGNAME_padding_NAMEEND_VAL temp264_26)))
(assert (= temp264_28 #x0000000000000000))
(assert (= temp264_29 #x0000000000000001))
(assert (= temp264_30 temp264_29))
(assert (= temp264_31 (select ARGNAME_padding_NAMEEND_VAL temp264_30)))
(assert (= temp264_32 #x0000000000000000))
(assert (= temp264_33 #x0000000000000002))
(assert (= temp264_34 temp264_33))
(assert (= temp264_35 (select ARGNAME_padding_NAMEEND_VAL temp264_34)))
(assert (= temp264_36 #x0000000000000000))
(assert (= temp264_37 #x0000000000000003))
(assert (= temp264_38 temp264_37))
(assert (= temp264_39 (select ARGNAME_padding_NAMEEND_VAL temp264_38)))
(assert (= temp264_40 #x0000000000000000))
(assert (= temp264_41 #x0000000000000004))
(assert (= temp264_42 temp264_41))
(assert (= temp264_43 (select ARGNAME_padding_NAMEEND_VAL temp264_42)))
(assert (= temp264_44 #x0000000000000000))
(assert (= temp264_45 #x0000000000000005))
(assert (= temp264_46 temp264_45))
(assert (= temp264_47 (select ARGNAME_padding_NAMEEND_VAL temp264_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp264_27 temp264_24)
             (bvslt temp264_31 temp264_28)
             (bvslt temp264_35 temp264_32)
             (bvslt temp264_39 temp264_36)
             (bvslt temp264_43 temp264_40)
             (bvslt temp264_47 temp264_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_48 #x0000000000000000))
(assert (= var1322786 temp264_48))
(assert (= temp264_49 #x0000000000000000))
(assert (= temp264_50 temp264_49))
(assert (= temp264_51 (select ARGNAME_output_padding_NAMEEND_VAL temp264_50)))
(assert (= temp264_52 #x0000000000000001))
(assert (= temp264_53 temp264_52))
(assert (= temp264_54 (select ARGNAME_output_padding_NAMEEND_VAL temp264_53)))
(assert (= temp264_55 #x0000000000000002))
(assert (= temp264_56 temp264_55))
(assert (= temp264_57 (select ARGNAME_output_padding_NAMEEND_VAL temp264_56)))
(assert (= temp264_58 #x0000000000000003))
(assert (= temp264_59 temp264_58))
(assert (= temp264_60 (select ARGNAME_output_padding_NAMEEND_VAL temp264_59)))
(assert (= temp264_61 #x0000000000000004))
(assert (= temp264_62 temp264_61))
(assert (= temp264_63 (select ARGNAME_output_padding_NAMEEND_VAL temp264_62)))
(assert (= temp264_64 #x0000000000000005))
(assert (= temp264_65 temp264_64))
(assert (= temp264_66 (select ARGNAME_output_padding_NAMEEND_VAL temp264_65)))
(assert (= temp264_67 #x0000000000000000))
(assert (= temp264_68 #x0000000000000000))
(assert (= temp264_69 temp264_68))
(assert (= temp264_70 (select ARGNAME_output_padding_NAMEEND_VAL temp264_69)))
(assert (= temp264_71 #x0000000000000000))
(assert (= temp264_72 #x0000000000000001))
(assert (= temp264_73 temp264_72))
(assert (= temp264_74 (select ARGNAME_output_padding_NAMEEND_VAL temp264_73)))
(assert (= temp264_75 #x0000000000000000))
(assert (= temp264_76 #x0000000000000002))
(assert (= temp264_77 temp264_76))
(assert (= temp264_78 (select ARGNAME_output_padding_NAMEEND_VAL temp264_77)))
(assert (= temp264_79 #x0000000000000000))
(assert (= temp264_80 #x0000000000000003))
(assert (= temp264_81 temp264_80))
(assert (= temp264_82 (select ARGNAME_output_padding_NAMEEND_VAL temp264_81)))
(assert (= temp264_83 #x0000000000000000))
(assert (= temp264_84 #x0000000000000004))
(assert (= temp264_85 temp264_84))
(assert (= temp264_86 (select ARGNAME_output_padding_NAMEEND_VAL temp264_85)))
(assert (= temp264_87 #x0000000000000000))
(assert (= temp264_88 #x0000000000000005))
(assert (= temp264_89 temp264_88))
(assert (= temp264_90 (select ARGNAME_output_padding_NAMEEND_VAL temp264_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp264_70 temp264_67)
             (bvslt temp264_74 temp264_71)
             (bvslt temp264_78 temp264_75)
             (bvslt temp264_82 temp264_79)
             (bvslt temp264_86 temp264_83)
             (bvslt temp264_90 temp264_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_91 #x0000000000000000))
(assert (= var1322797 temp264_91))
(assert (= temp264_92 #x0000000000000000))
(assert (= temp264_93 temp264_92))
(assert (= temp264_94 (select ARGNAME_stride_NAMEEND_VAL temp264_93)))
(assert (= temp264_95 #x0000000000000001))
(assert (= temp264_96 temp264_95))
(assert (= temp264_97 (select ARGNAME_stride_NAMEEND_VAL temp264_96)))
(assert (= temp264_98 #x0000000000000002))
(assert (= temp264_99 temp264_98))
(assert (= temp264_100 (select ARGNAME_stride_NAMEEND_VAL temp264_99)))
(assert (= temp264_101 #x0000000000000003))
(assert (= temp264_102 temp264_101))
(assert (= temp264_103 (select ARGNAME_stride_NAMEEND_VAL temp264_102)))
(assert (= temp264_104 #x0000000000000004))
(assert (= temp264_105 temp264_104))
(assert (= temp264_106 (select ARGNAME_stride_NAMEEND_VAL temp264_105)))
(assert (= temp264_107 #x0000000000000005))
(assert (= temp264_108 temp264_107))
(assert (= temp264_109 (select ARGNAME_stride_NAMEEND_VAL temp264_108)))
(assert (= temp264_110 #x0000000000000000))
(assert (= temp264_111 #x0000000000000000))
(assert (= temp264_112 temp264_111))
(assert (= temp264_113 (select ARGNAME_stride_NAMEEND_VAL temp264_112)))
(assert (= temp264_114 #x0000000000000000))
(assert (= temp264_115 #x0000000000000001))
(assert (= temp264_116 temp264_115))
(assert (= temp264_117 (select ARGNAME_stride_NAMEEND_VAL temp264_116)))
(assert (= temp264_118 #x0000000000000000))
(assert (= temp264_119 #x0000000000000002))
(assert (= temp264_120 temp264_119))
(assert (= temp264_121 (select ARGNAME_stride_NAMEEND_VAL temp264_120)))
(assert (= temp264_122 #x0000000000000000))
(assert (= temp264_123 #x0000000000000003))
(assert (= temp264_124 temp264_123))
(assert (= temp264_125 (select ARGNAME_stride_NAMEEND_VAL temp264_124)))
(assert (= temp264_126 #x0000000000000000))
(assert (= temp264_127 #x0000000000000004))
(assert (= temp264_128 temp264_127))
(assert (= temp264_129 (select ARGNAME_stride_NAMEEND_VAL temp264_128)))
(assert (= temp264_130 #x0000000000000000))
(assert (= temp264_131 #x0000000000000005))
(assert (= temp264_132 temp264_131))
(assert (= temp264_133 (select ARGNAME_stride_NAMEEND_VAL temp264_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp264_113 temp264_110)
             (bvsle temp264_117 temp264_114)
             (bvsle temp264_121 temp264_118)
             (bvsle temp264_125 temp264_122)
             (bvsle temp264_129 temp264_126)
             (bvsle temp264_133 temp264_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_134 #x0000000000000000))
(assert (= var1322807 temp264_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_135 #x0000000000000001))
(assert (= var1322819 temp264_135))
(assert (= temp264_136 #x0000000000000000))
(assert (= var1310898 temp264_136))
(assert (= temp264_137 #x0000000000000000))
(assert (= temp264_138 temp264_137))
(assert (= temp264_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_138)))
(assert (= temp264_140 #x0000000000000001))
(assert (= temp264_141 temp264_140))
(assert (= temp264_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_141)))
(assert (= temp264_143 #x0000000000000002))
(assert (= temp264_144 temp264_143))
(assert (= temp264_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_144)))
(assert (= temp264_146 #x0000000000000003))
(assert (= temp264_147 temp264_146))
(assert (= temp264_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_147)))
(assert (= temp264_149 #x0000000000000004))
(assert (= temp264_150 temp264_149))
(assert (= temp264_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_150)))
(assert (= temp264_152 #x0000000000000005))
(assert (= temp264_153 temp264_152))
(assert (= temp264_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_153)))
(assert (= temp264_156 var1310898))
(assert (= temp264_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_156)))
(assert (= temp264_155 temp264_157))
(assert (= var1322852
   (ite (bvslt temp264_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_158 #x0000000000000000))
(assert (= var1322852 temp264_158))
(assert (= temp264_159 #x0000000000000000))
(assert (= var1310898 temp264_159))
(assert (= temp264_161 var1310898))
(assert (= temp264_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_161)))
(assert (= temp264_160 temp264_162))
(assert (= var1322874 (bvsmod temp264_160 ARGNAME_groups_NAMEEND)))
(assert (= temp264_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp264_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp264_164 #x0000000000000001))
(assert (= var1322875 temp264_164))
(assert (= temp264_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp264_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_166 #x0000000000000001))
(assert (= var1322895 temp264_166))
(assert (= temp264_167 #x0000000000000001))
(assert (= var1311786 temp264_167))
(assert (= temp264_168 #x0000000000000000))
(assert (= temp264_169 temp264_168))
(assert (= temp264_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_169)))
(assert (= temp264_171 #x0000000000000001))
(assert (= temp264_172 temp264_171))
(assert (= temp264_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_172)))
(assert (= temp264_174 #x0000000000000002))
(assert (= temp264_175 temp264_174))
(assert (= temp264_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_175)))
(assert (= temp264_177 #x0000000000000003))
(assert (= temp264_178 temp264_177))
(assert (= temp264_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_178)))
(assert (= temp264_180 #x0000000000000004))
(assert (= temp264_181 temp264_180))
(assert (= temp264_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_181)))
(assert (= temp264_183 #x0000000000000005))
(assert (= temp264_184 temp264_183))
(assert (= temp264_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_184)))
(assert (= temp264_186 #x0000000000000000))
(assert (= temp264_187
   (ite (bvslt var1311786 temp264_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp264_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_187)))
(assert (= var1322903 temp264_188))
(assert (bvslt (ite (bvslt var1311786 temp264_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp264_189 #x0000000000000001))
(assert (= var1311786 temp264_189))
(assert (= temp264_191 var1311786))
(assert (= temp264_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_191)))
(assert (= temp264_190 temp264_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp264_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp264_193 #x0000000000000001))
(assert (= var1322908 temp264_193))
(assert (= temp264_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp264_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_195 #x0000000000000001))
(assert (= var1322975 temp264_195))
(assert (= temp264_196 #x0000000000000000))
(assert (= var1310898 temp264_196))
(assert (= temp264_197 #x0000000000000000))
(assert (= temp264_198 temp264_197))
(assert (= temp264_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp264_198)))
(assert (= temp264_200 #x0000000000000001))
(assert (= temp264_201 temp264_200))
(assert (= temp264_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp264_201)))
(assert (= temp264_203 #x0000000000000002))
(assert (= temp264_204 temp264_203))
(assert (= temp264_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp264_204)))
(assert (= temp264_206 #x0000000000000003))
(assert (= temp264_207 temp264_206))
(assert (= temp264_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp264_207)))
(assert (= temp264_209 #x0000000000000004))
(assert (= temp264_210 temp264_209))
(assert (= temp264_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp264_210)))
(assert (= temp264_212 #x0000000000000005))
(assert (= temp264_213 temp264_212))
(assert (= temp264_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp264_213)))
(assert (= temp264_215 #x0000000000000000))
(assert (= temp264_216
   (ite (bvslt var1310898 temp264_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp264_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp264_216)))
(assert (= var1322977 temp264_217))
(assert (bvslt (ite (bvslt var1310898 temp264_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp264_218 #x0000000000000000))
(assert (= var1310898 temp264_218))
(assert (= temp264_220 var1310898))
(assert (= temp264_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_220)))
(assert (= temp264_219 temp264_221))
(assert (= var1322980
   (ite (= var1322977 temp264_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp264_222 #x0000000000000001))
(assert (= var1322980 temp264_222))
(assert (= temp264_223 #x0000000000000002))
(assert (= var1848169 temp264_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp264_225 #x0000000000000001))
(assert (= var1323065 temp264_225))
(assert (= temp264_226 #x0000000000000001))
(assert (= var3486735 temp264_226))
(assert (= temp264_227 #x0000000000000001))
(assert (= var3814415 temp264_227))
(assert (= temp264_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp264_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_229 #x0000000000000001))
(assert (= var79986 temp264_229))
(assert (= temp264_230 #x0000000000000001))
(assert (= var80116 temp264_230))
(assert (= var4796905 var80116))
(assert (= temp264_231 #x0000000000000000))
(assert (= var4784306 temp264_231))
(assert (= temp264_232 #x0000000000000000))
(assert (= temp264_233
   (ite (bvslt var4784306 temp264_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp264_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_233)))
(assert (= var4796924 temp264_234))
(assert (bvslt (ite (bvslt var4784306 temp264_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp264_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp264_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp264_236 #x0000000000000001))
(assert (= var4796925 temp264_236))
(assert (= temp264_237 #x0000000000000000))
(assert (= var4996927 temp264_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp264_238 #x0000000000000002))
(assert (= var5125763 temp264_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_239 #x0000000000000000))
(assert (= var5191324 temp264_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp264_240 #x0000000000000001))
(assert (= var79986 temp264_240))
(assert (= temp264_241 #x0000000000000000))
(assert (= var7156500 temp264_241))
(assert (= var7156467 var7156500))
(assert (= var7025031 var7156467))
(assert (= var7025027 var7025031))
(assert (= var81597 var7025027))
(assert (= temp264_242 #x0000000000000000))
(assert (= var81597 temp264_242))
(model-add temp264_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp264_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp264_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))










