(declare-fun temp108_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp108_2 () (_ BitVec 64))
(declare-fun temp108_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp108_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp108_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp108_6 () (_ BitVec 64))
(declare-fun temp108_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_8 () (_ BitVec 64))
(declare-fun temp108_9 () (_ BitVec 64))
(declare-fun temp108_10 () (_ BitVec 64))
(declare-fun temp108_11 () (_ BitVec 64))
(declare-fun temp108_12 () (_ BitVec 64))
(declare-fun temp108_13 () (_ BitVec 64))
(declare-fun temp108_14 () (_ BitVec 64))
(declare-fun temp108_15 () (_ BitVec 64))
(declare-fun temp108_16 () (_ BitVec 64))
(declare-fun temp108_17 () (_ BitVec 64))
(declare-fun temp108_18 () (_ BitVec 64))
(declare-fun temp108_19 () (_ BitVec 64))
(declare-fun temp108_20 () (_ BitVec 64))
(declare-fun temp108_21 () (_ BitVec 64))
(declare-fun temp108_22 () (_ BitVec 64))
(declare-fun temp108_23 () (_ BitVec 64))
(declare-fun temp108_24 () (_ BitVec 64))
(declare-fun temp108_25 () (_ BitVec 64))
(declare-fun temp108_26 () (_ BitVec 64))
(declare-fun temp108_27 () (_ BitVec 64))
(declare-fun temp108_28 () (_ BitVec 64))
(declare-fun temp108_29 () (_ BitVec 64))
(declare-fun temp108_30 () (_ BitVec 64))
(declare-fun temp108_31 () (_ BitVec 64))
(declare-fun temp108_32 () (_ BitVec 64))
(declare-fun temp108_33 () (_ BitVec 64))
(declare-fun temp108_34 () (_ BitVec 64))
(declare-fun temp108_35 () (_ BitVec 64))
(declare-fun temp108_36 () (_ BitVec 64))
(declare-fun temp108_37 () (_ BitVec 64))
(declare-fun temp108_38 () (_ BitVec 64))
(declare-fun temp108_39 () (_ BitVec 64))
(declare-fun temp108_40 () (_ BitVec 64))
(declare-fun temp108_41 () (_ BitVec 64))
(declare-fun temp108_42 () (_ BitVec 64))
(declare-fun temp108_43 () (_ BitVec 64))
(declare-fun temp108_44 () (_ BitVec 64))
(declare-fun temp108_45 () (_ BitVec 64))
(declare-fun temp108_46 () (_ BitVec 64))
(declare-fun temp108_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp108_48 () (_ BitVec 64))
(declare-fun temp108_49 () (_ BitVec 64))
(declare-fun temp108_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_51 () (_ BitVec 64))
(declare-fun temp108_52 () (_ BitVec 64))
(declare-fun temp108_53 () (_ BitVec 64))
(declare-fun temp108_54 () (_ BitVec 64))
(declare-fun temp108_55 () (_ BitVec 64))
(declare-fun temp108_56 () (_ BitVec 64))
(declare-fun temp108_57 () (_ BitVec 64))
(declare-fun temp108_58 () (_ BitVec 64))
(declare-fun temp108_59 () (_ BitVec 64))
(declare-fun temp108_60 () (_ BitVec 64))
(declare-fun temp108_61 () (_ BitVec 64))
(declare-fun temp108_62 () (_ BitVec 64))
(declare-fun temp108_63 () (_ BitVec 64))
(declare-fun temp108_64 () (_ BitVec 64))
(declare-fun temp108_65 () (_ BitVec 64))
(declare-fun temp108_66 () (_ BitVec 64))
(declare-fun temp108_67 () (_ BitVec 64))
(declare-fun temp108_68 () (_ BitVec 64))
(declare-fun temp108_69 () (_ BitVec 64))
(declare-fun temp108_70 () (_ BitVec 64))
(declare-fun temp108_71 () (_ BitVec 64))
(declare-fun temp108_72 () (_ BitVec 64))
(declare-fun temp108_73 () (_ BitVec 64))
(declare-fun temp108_74 () (_ BitVec 64))
(declare-fun temp108_75 () (_ BitVec 64))
(declare-fun temp108_76 () (_ BitVec 64))
(declare-fun temp108_77 () (_ BitVec 64))
(declare-fun temp108_78 () (_ BitVec 64))
(declare-fun temp108_79 () (_ BitVec 64))
(declare-fun temp108_80 () (_ BitVec 64))
(declare-fun temp108_81 () (_ BitVec 64))
(declare-fun temp108_82 () (_ BitVec 64))
(declare-fun temp108_83 () (_ BitVec 64))
(declare-fun temp108_84 () (_ BitVec 64))
(declare-fun temp108_85 () (_ BitVec 64))
(declare-fun temp108_86 () (_ BitVec 64))
(declare-fun temp108_87 () (_ BitVec 64))
(declare-fun temp108_88 () (_ BitVec 64))
(declare-fun temp108_89 () (_ BitVec 64))
(declare-fun temp108_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp108_91 () (_ BitVec 64))
(declare-fun temp108_92 () (_ BitVec 64))
(declare-fun temp108_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_94 () (_ BitVec 64))
(declare-fun temp108_95 () (_ BitVec 64))
(declare-fun temp108_96 () (_ BitVec 64))
(declare-fun temp108_97 () (_ BitVec 64))
(declare-fun temp108_98 () (_ BitVec 64))
(declare-fun temp108_99 () (_ BitVec 64))
(declare-fun temp108_100 () (_ BitVec 64))
(declare-fun temp108_101 () (_ BitVec 64))
(declare-fun temp108_102 () (_ BitVec 64))
(declare-fun temp108_103 () (_ BitVec 64))
(declare-fun temp108_104 () (_ BitVec 64))
(declare-fun temp108_105 () (_ BitVec 64))
(declare-fun temp108_106 () (_ BitVec 64))
(declare-fun temp108_107 () (_ BitVec 64))
(declare-fun temp108_108 () (_ BitVec 64))
(declare-fun temp108_109 () (_ BitVec 64))
(declare-fun temp108_110 () (_ BitVec 64))
(declare-fun temp108_111 () (_ BitVec 64))
(declare-fun temp108_112 () (_ BitVec 64))
(declare-fun temp108_113 () (_ BitVec 64))
(declare-fun temp108_114 () (_ BitVec 64))
(declare-fun temp108_115 () (_ BitVec 64))
(declare-fun temp108_116 () (_ BitVec 64))
(declare-fun temp108_117 () (_ BitVec 64))
(declare-fun temp108_118 () (_ BitVec 64))
(declare-fun temp108_119 () (_ BitVec 64))
(declare-fun temp108_120 () (_ BitVec 64))
(declare-fun temp108_121 () (_ BitVec 64))
(declare-fun temp108_122 () (_ BitVec 64))
(declare-fun temp108_123 () (_ BitVec 64))
(declare-fun temp108_124 () (_ BitVec 64))
(declare-fun temp108_125 () (_ BitVec 64))
(declare-fun temp108_126 () (_ BitVec 64))
(declare-fun temp108_127 () (_ BitVec 64))
(declare-fun temp108_128 () (_ BitVec 64))
(declare-fun temp108_129 () (_ BitVec 64))
(declare-fun temp108_130 () (_ BitVec 64))
(declare-fun temp108_131 () (_ BitVec 64))
(declare-fun temp108_132 () (_ BitVec 64))
(declare-fun temp108_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp108_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp108_135 () (_ BitVec 64))
(declare-fun temp108_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp108_137 () (_ BitVec 64))
(declare-fun temp108_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_139 () (_ BitVec 64))
(declare-fun temp108_140 () (_ BitVec 64))
(declare-fun temp108_141 () (_ BitVec 64))
(declare-fun temp108_142 () (_ BitVec 64))
(declare-fun temp108_143 () (_ BitVec 64))
(declare-fun temp108_144 () (_ BitVec 64))
(declare-fun temp108_145 () (_ BitVec 64))
(declare-fun temp108_146 () (_ BitVec 64))
(declare-fun temp108_147 () (_ BitVec 64))
(declare-fun temp108_148 () (_ BitVec 64))
(declare-fun temp108_149 () (_ BitVec 64))
(declare-fun temp108_150 () (_ BitVec 64))
(declare-fun temp108_151 () (_ BitVec 64))
(declare-fun temp108_152 () (_ BitVec 64))
(declare-fun temp108_153 () (_ BitVec 64))
(declare-fun temp108_154 () (_ BitVec 64))
(declare-fun temp108_156 () (_ BitVec 64))
(declare-fun temp108_157 () (_ BitVec 64))
(declare-fun temp108_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp108_158 () (_ BitVec 64))
(declare-fun temp108_159 () (_ BitVec 64))
(declare-fun temp108_161 () (_ BitVec 64))
(declare-fun temp108_162 () (_ BitVec 64))
(declare-fun temp108_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp108_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp108_164 () (_ BitVec 64))
(declare-fun temp108_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp108_166 () (_ BitVec 64))
(declare-fun temp108_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp108_168 () (_ BitVec 64))
(declare-fun temp108_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_170 () (_ BitVec 64))
(declare-fun temp108_171 () (_ BitVec 64))
(declare-fun temp108_172 () (_ BitVec 64))
(declare-fun temp108_173 () (_ BitVec 64))
(declare-fun temp108_174 () (_ BitVec 64))
(declare-fun temp108_175 () (_ BitVec 64))
(declare-fun temp108_176 () (_ BitVec 64))
(declare-fun temp108_177 () (_ BitVec 64))
(declare-fun temp108_178 () (_ BitVec 64))
(declare-fun temp108_179 () (_ BitVec 64))
(declare-fun temp108_180 () (_ BitVec 64))
(declare-fun temp108_181 () (_ BitVec 64))
(declare-fun temp108_182 () (_ BitVec 64))
(declare-fun temp108_183 () (_ BitVec 64))
(declare-fun temp108_184 () (_ BitVec 64))
(declare-fun temp108_185 () (_ BitVec 64))
(declare-fun temp108_186 () (_ BitVec 64))
(declare-fun temp108_187 () (_ BitVec 64))
(declare-fun temp108_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp108_189 () (_ BitVec 64))
(declare-fun temp108_191 () (_ BitVec 64))
(declare-fun temp108_192 () (_ BitVec 64))
(declare-fun temp108_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp108_193 () (_ BitVec 64))
(declare-fun temp108_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp108_195 () (_ BitVec 64))
(declare-fun temp108_196 () (_ BitVec 64))
(declare-fun temp108_197 () (_ BitVec 64))
(declare-fun temp108_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_199 () (_ BitVec 64))
(declare-fun temp108_200 () (_ BitVec 64))
(declare-fun temp108_201 () (_ BitVec 64))
(declare-fun temp108_202 () (_ BitVec 64))
(declare-fun temp108_203 () (_ BitVec 64))
(declare-fun temp108_204 () (_ BitVec 64))
(declare-fun temp108_205 () (_ BitVec 64))
(declare-fun temp108_206 () (_ BitVec 64))
(declare-fun temp108_207 () (_ BitVec 64))
(declare-fun temp108_208 () (_ BitVec 64))
(declare-fun temp108_209 () (_ BitVec 64))
(declare-fun temp108_210 () (_ BitVec 64))
(declare-fun temp108_211 () (_ BitVec 64))
(declare-fun temp108_212 () (_ BitVec 64))
(declare-fun temp108_213 () (_ BitVec 64))
(declare-fun temp108_214 () (_ BitVec 64))
(declare-fun temp108_215 () (_ BitVec 64))
(declare-fun temp108_216 () (_ BitVec 64))
(declare-fun temp108_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp108_218 () (_ BitVec 64))
(declare-fun temp108_220 () (_ BitVec 64))
(declare-fun temp108_221 () (_ BitVec 64))
(declare-fun temp108_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp108_222 () (_ BitVec 64))
(declare-fun temp108_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp108_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp108_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp108_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp108_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp108_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp108_229 () (_ BitVec 64))
(declare-fun temp108_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp108_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp108_232 () (_ BitVec 64))
(declare-fun temp108_233 () (_ BitVec 64))
(declare-fun temp108_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp108_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp108_236 () (_ BitVec 64))
(declare-fun temp108_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp108_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp108_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp108_241 () (_ BitVec 64))
(declare-fun temp108_240 () (_ BitVec 64))
(declare-fun temp108_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp108_243 () (_ BitVec 64))
(declare-fun temp108_244 () (_ BitVec 64))
(declare-fun temp108_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp108_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp108_247 () (_ BitVec 64))
(declare-fun temp108_249 () (_ BitVec 64))
(declare-fun temp108_248 () (_ BitVec 64))
(declare-fun temp108_250 () (_ BitVec 64))
(assert (= temp108_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp108_1)))
(assert (= temp108_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp108_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_3 #x0000000000000000))
(assert (= var79869 temp108_3))
(assert (= temp108_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp108_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_5 #x0000000000000000))
(assert (= var79914 temp108_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp108_6 #x0000000000000000))
(assert (= temp108_7 temp108_6))
(assert (= temp108_8 (select ARGNAME_padding_NAMEEND_VAL temp108_7)))
(assert (= temp108_9 #x0000000000000001))
(assert (= temp108_10 temp108_9))
(assert (= temp108_11 (select ARGNAME_padding_NAMEEND_VAL temp108_10)))
(assert (= temp108_12 #x0000000000000002))
(assert (= temp108_13 temp108_12))
(assert (= temp108_14 (select ARGNAME_padding_NAMEEND_VAL temp108_13)))
(assert (= temp108_15 #x0000000000000003))
(assert (= temp108_16 temp108_15))
(assert (= temp108_17 (select ARGNAME_padding_NAMEEND_VAL temp108_16)))
(assert (= temp108_18 #x0000000000000004))
(assert (= temp108_19 temp108_18))
(assert (= temp108_20 (select ARGNAME_padding_NAMEEND_VAL temp108_19)))
(assert (= temp108_21 #x0000000000000005))
(assert (= temp108_22 temp108_21))
(assert (= temp108_23 (select ARGNAME_padding_NAMEEND_VAL temp108_22)))
(assert (= temp108_24 #x0000000000000000))
(assert (= temp108_25 #x0000000000000000))
(assert (= temp108_26 temp108_25))
(assert (= temp108_27 (select ARGNAME_padding_NAMEEND_VAL temp108_26)))
(assert (= temp108_28 #x0000000000000000))
(assert (= temp108_29 #x0000000000000001))
(assert (= temp108_30 temp108_29))
(assert (= temp108_31 (select ARGNAME_padding_NAMEEND_VAL temp108_30)))
(assert (= temp108_32 #x0000000000000000))
(assert (= temp108_33 #x0000000000000002))
(assert (= temp108_34 temp108_33))
(assert (= temp108_35 (select ARGNAME_padding_NAMEEND_VAL temp108_34)))
(assert (= temp108_36 #x0000000000000000))
(assert (= temp108_37 #x0000000000000003))
(assert (= temp108_38 temp108_37))
(assert (= temp108_39 (select ARGNAME_padding_NAMEEND_VAL temp108_38)))
(assert (= temp108_40 #x0000000000000000))
(assert (= temp108_41 #x0000000000000004))
(assert (= temp108_42 temp108_41))
(assert (= temp108_43 (select ARGNAME_padding_NAMEEND_VAL temp108_42)))
(assert (= temp108_44 #x0000000000000000))
(assert (= temp108_45 #x0000000000000005))
(assert (= temp108_46 temp108_45))
(assert (= temp108_47 (select ARGNAME_padding_NAMEEND_VAL temp108_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp108_27 temp108_24)
             (bvslt temp108_31 temp108_28)
             (bvslt temp108_35 temp108_32)
             (bvslt temp108_39 temp108_36)
             (bvslt temp108_43 temp108_40)
             (bvslt temp108_47 temp108_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_48 #x0000000000000000))
(assert (= var1322786 temp108_48))
(assert (= temp108_49 #x0000000000000000))
(assert (= temp108_50 temp108_49))
(assert (= temp108_51 (select ARGNAME_output_padding_NAMEEND_VAL temp108_50)))
(assert (= temp108_52 #x0000000000000001))
(assert (= temp108_53 temp108_52))
(assert (= temp108_54 (select ARGNAME_output_padding_NAMEEND_VAL temp108_53)))
(assert (= temp108_55 #x0000000000000002))
(assert (= temp108_56 temp108_55))
(assert (= temp108_57 (select ARGNAME_output_padding_NAMEEND_VAL temp108_56)))
(assert (= temp108_58 #x0000000000000003))
(assert (= temp108_59 temp108_58))
(assert (= temp108_60 (select ARGNAME_output_padding_NAMEEND_VAL temp108_59)))
(assert (= temp108_61 #x0000000000000004))
(assert (= temp108_62 temp108_61))
(assert (= temp108_63 (select ARGNAME_output_padding_NAMEEND_VAL temp108_62)))
(assert (= temp108_64 #x0000000000000005))
(assert (= temp108_65 temp108_64))
(assert (= temp108_66 (select ARGNAME_output_padding_NAMEEND_VAL temp108_65)))
(assert (= temp108_67 #x0000000000000000))
(assert (= temp108_68 #x0000000000000000))
(assert (= temp108_69 temp108_68))
(assert (= temp108_70 (select ARGNAME_output_padding_NAMEEND_VAL temp108_69)))
(assert (= temp108_71 #x0000000000000000))
(assert (= temp108_72 #x0000000000000001))
(assert (= temp108_73 temp108_72))
(assert (= temp108_74 (select ARGNAME_output_padding_NAMEEND_VAL temp108_73)))
(assert (= temp108_75 #x0000000000000000))
(assert (= temp108_76 #x0000000000000002))
(assert (= temp108_77 temp108_76))
(assert (= temp108_78 (select ARGNAME_output_padding_NAMEEND_VAL temp108_77)))
(assert (= temp108_79 #x0000000000000000))
(assert (= temp108_80 #x0000000000000003))
(assert (= temp108_81 temp108_80))
(assert (= temp108_82 (select ARGNAME_output_padding_NAMEEND_VAL temp108_81)))
(assert (= temp108_83 #x0000000000000000))
(assert (= temp108_84 #x0000000000000004))
(assert (= temp108_85 temp108_84))
(assert (= temp108_86 (select ARGNAME_output_padding_NAMEEND_VAL temp108_85)))
(assert (= temp108_87 #x0000000000000000))
(assert (= temp108_88 #x0000000000000005))
(assert (= temp108_89 temp108_88))
(assert (= temp108_90 (select ARGNAME_output_padding_NAMEEND_VAL temp108_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp108_70 temp108_67)
             (bvslt temp108_74 temp108_71)
             (bvslt temp108_78 temp108_75)
             (bvslt temp108_82 temp108_79)
             (bvslt temp108_86 temp108_83)
             (bvslt temp108_90 temp108_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_91 #x0000000000000000))
(assert (= var1322797 temp108_91))
(assert (= temp108_92 #x0000000000000000))
(assert (= temp108_93 temp108_92))
(assert (= temp108_94 (select ARGNAME_stride_NAMEEND_VAL temp108_93)))
(assert (= temp108_95 #x0000000000000001))
(assert (= temp108_96 temp108_95))
(assert (= temp108_97 (select ARGNAME_stride_NAMEEND_VAL temp108_96)))
(assert (= temp108_98 #x0000000000000002))
(assert (= temp108_99 temp108_98))
(assert (= temp108_100 (select ARGNAME_stride_NAMEEND_VAL temp108_99)))
(assert (= temp108_101 #x0000000000000003))
(assert (= temp108_102 temp108_101))
(assert (= temp108_103 (select ARGNAME_stride_NAMEEND_VAL temp108_102)))
(assert (= temp108_104 #x0000000000000004))
(assert (= temp108_105 temp108_104))
(assert (= temp108_106 (select ARGNAME_stride_NAMEEND_VAL temp108_105)))
(assert (= temp108_107 #x0000000000000005))
(assert (= temp108_108 temp108_107))
(assert (= temp108_109 (select ARGNAME_stride_NAMEEND_VAL temp108_108)))
(assert (= temp108_110 #x0000000000000000))
(assert (= temp108_111 #x0000000000000000))
(assert (= temp108_112 temp108_111))
(assert (= temp108_113 (select ARGNAME_stride_NAMEEND_VAL temp108_112)))
(assert (= temp108_114 #x0000000000000000))
(assert (= temp108_115 #x0000000000000001))
(assert (= temp108_116 temp108_115))
(assert (= temp108_117 (select ARGNAME_stride_NAMEEND_VAL temp108_116)))
(assert (= temp108_118 #x0000000000000000))
(assert (= temp108_119 #x0000000000000002))
(assert (= temp108_120 temp108_119))
(assert (= temp108_121 (select ARGNAME_stride_NAMEEND_VAL temp108_120)))
(assert (= temp108_122 #x0000000000000000))
(assert (= temp108_123 #x0000000000000003))
(assert (= temp108_124 temp108_123))
(assert (= temp108_125 (select ARGNAME_stride_NAMEEND_VAL temp108_124)))
(assert (= temp108_126 #x0000000000000000))
(assert (= temp108_127 #x0000000000000004))
(assert (= temp108_128 temp108_127))
(assert (= temp108_129 (select ARGNAME_stride_NAMEEND_VAL temp108_128)))
(assert (= temp108_130 #x0000000000000000))
(assert (= temp108_131 #x0000000000000005))
(assert (= temp108_132 temp108_131))
(assert (= temp108_133 (select ARGNAME_stride_NAMEEND_VAL temp108_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp108_113 temp108_110)
             (bvsle temp108_117 temp108_114)
             (bvsle temp108_121 temp108_118)
             (bvsle temp108_125 temp108_122)
             (bvsle temp108_129 temp108_126)
             (bvsle temp108_133 temp108_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_134 #x0000000000000000))
(assert (= var1322807 temp108_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_135 #x0000000000000001))
(assert (= var1322819 temp108_135))
(assert (= temp108_136 #x0000000000000000))
(assert (= var1310898 temp108_136))
(assert (= temp108_137 #x0000000000000000))
(assert (= temp108_138 temp108_137))
(assert (= temp108_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_138)))
(assert (= temp108_140 #x0000000000000001))
(assert (= temp108_141 temp108_140))
(assert (= temp108_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_141)))
(assert (= temp108_143 #x0000000000000002))
(assert (= temp108_144 temp108_143))
(assert (= temp108_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_144)))
(assert (= temp108_146 #x0000000000000003))
(assert (= temp108_147 temp108_146))
(assert (= temp108_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_147)))
(assert (= temp108_149 #x0000000000000004))
(assert (= temp108_150 temp108_149))
(assert (= temp108_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_150)))
(assert (= temp108_152 #x0000000000000005))
(assert (= temp108_153 temp108_152))
(assert (= temp108_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_153)))
(assert (= temp108_156 var1310898))
(assert (= temp108_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_156)))
(assert (= temp108_155 temp108_157))
(assert (= var1322852
   (ite (bvslt temp108_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_158 #x0000000000000000))
(assert (= var1322852 temp108_158))
(assert (= temp108_159 #x0000000000000000))
(assert (= var1310898 temp108_159))
(assert (= temp108_161 var1310898))
(assert (= temp108_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_161)))
(assert (= temp108_160 temp108_162))
(assert (= var1322874 (bvsmod temp108_160 ARGNAME_groups_NAMEEND)))
(assert (= temp108_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp108_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp108_164 #x0000000000000001))
(assert (= var1322875 temp108_164))
(assert (= temp108_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp108_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_166 #x0000000000000001))
(assert (= var1322895 temp108_166))
(assert (= temp108_167 #x0000000000000001))
(assert (= var1311786 temp108_167))
(assert (= temp108_168 #x0000000000000000))
(assert (= temp108_169 temp108_168))
(assert (= temp108_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_169)))
(assert (= temp108_171 #x0000000000000001))
(assert (= temp108_172 temp108_171))
(assert (= temp108_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_172)))
(assert (= temp108_174 #x0000000000000002))
(assert (= temp108_175 temp108_174))
(assert (= temp108_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_175)))
(assert (= temp108_177 #x0000000000000003))
(assert (= temp108_178 temp108_177))
(assert (= temp108_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_178)))
(assert (= temp108_180 #x0000000000000004))
(assert (= temp108_181 temp108_180))
(assert (= temp108_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_181)))
(assert (= temp108_183 #x0000000000000005))
(assert (= temp108_184 temp108_183))
(assert (= temp108_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_184)))
(assert (= temp108_186 #x0000000000000000))
(assert (= temp108_187
   (ite (bvslt var1311786 temp108_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp108_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_187)))
(assert (= var1322903 temp108_188))
(assert (bvslt (ite (bvslt var1311786 temp108_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp108_189 #x0000000000000001))
(assert (= var1311786 temp108_189))
(assert (= temp108_191 var1311786))
(assert (= temp108_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_191)))
(assert (= temp108_190 temp108_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp108_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp108_193 #x0000000000000001))
(assert (= var1322908 temp108_193))
(assert (= temp108_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp108_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_195 #x0000000000000001))
(assert (= var1322975 temp108_195))
(assert (= temp108_196 #x0000000000000000))
(assert (= var1310898 temp108_196))
(assert (= temp108_197 #x0000000000000000))
(assert (= temp108_198 temp108_197))
(assert (= temp108_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp108_198)))
(assert (= temp108_200 #x0000000000000001))
(assert (= temp108_201 temp108_200))
(assert (= temp108_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp108_201)))
(assert (= temp108_203 #x0000000000000002))
(assert (= temp108_204 temp108_203))
(assert (= temp108_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp108_204)))
(assert (= temp108_206 #x0000000000000003))
(assert (= temp108_207 temp108_206))
(assert (= temp108_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp108_207)))
(assert (= temp108_209 #x0000000000000004))
(assert (= temp108_210 temp108_209))
(assert (= temp108_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp108_210)))
(assert (= temp108_212 #x0000000000000005))
(assert (= temp108_213 temp108_212))
(assert (= temp108_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp108_213)))
(assert (= temp108_215 #x0000000000000000))
(assert (= temp108_216
   (ite (bvslt var1310898 temp108_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp108_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp108_216)))
(assert (= var1322977 temp108_217))
(assert (bvslt (ite (bvslt var1310898 temp108_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp108_218 #x0000000000000000))
(assert (= var1310898 temp108_218))
(assert (= temp108_220 var1310898))
(assert (= temp108_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_220)))
(assert (= temp108_219 temp108_221))
(assert (= var1322980
   (ite (= var1322977 temp108_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp108_222 #x0000000000000001))
(assert (= var1322980 temp108_222))
(assert (= temp108_223 #x0000000000000002))
(assert (= var1848169 temp108_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp108_225 #x0000000000000001))
(assert (= var1323065 temp108_225))
(assert (= temp108_226 #x0000000000000001))
(assert (= var3486735 temp108_226))
(assert (= temp108_227 #x0000000000000001))
(assert (= var3814415 temp108_227))
(assert (= temp108_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp108_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_229 #x0000000000000001))
(assert (= var79986 temp108_229))
(assert (= temp108_230 #x0000000000000001))
(assert (= var80116 temp108_230))
(assert (= var4796905 var80116))
(assert (= temp108_231 #x0000000000000000))
(assert (= var4784306 temp108_231))
(assert (= temp108_232 #x0000000000000000))
(assert (= temp108_233
   (ite (bvslt var4784306 temp108_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp108_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_233)))
(assert (= var4796924 temp108_234))
(assert (bvslt (ite (bvslt var4784306 temp108_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp108_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp108_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp108_236 #x0000000000000001))
(assert (= var4796925 temp108_236))
(assert (= temp108_237 #x0000000000000000))
(assert (= var4996927 temp108_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp108_238 #x0000000000000002))
(assert (= var5125763 temp108_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_239 #x0000000000000000))
(assert (= var5191324 temp108_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp108_241 #xffffffffffffffff))
(assert (= temp108_240 temp108_241))
(assert (= temp108_242 #x0000000000000001))
(assert (= var66602 temp108_242))
(assert (= temp108_243 #x0000000000000000))
(assert (= temp108_244
   (ite (bvslt var66602 temp108_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp108_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_244)))
(assert (= var80523 temp108_245))
(assert (bvslt (ite (bvslt var66602 temp108_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp108_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp108_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp108_247 #x0000000000000001))
(assert (= var80524 temp108_247))
(assert (= temp108_249 #xffffffffffffffff))
(assert (= temp108_248 temp108_249))
(assert (= temp108_250 #x0000000000000001))
(assert (= var79986 temp108_250))
(model-add temp108_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp108_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp108_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






