(declare-fun temp368_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp368_2 () (_ BitVec 64))
(declare-fun temp368_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp368_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp368_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp368_6 () (_ BitVec 64))
(declare-fun temp368_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_8 () (_ BitVec 64))
(declare-fun temp368_9 () (_ BitVec 64))
(declare-fun temp368_10 () (_ BitVec 64))
(declare-fun temp368_11 () (_ BitVec 64))
(declare-fun temp368_12 () (_ BitVec 64))
(declare-fun temp368_13 () (_ BitVec 64))
(declare-fun temp368_14 () (_ BitVec 64))
(declare-fun temp368_15 () (_ BitVec 64))
(declare-fun temp368_16 () (_ BitVec 64))
(declare-fun temp368_17 () (_ BitVec 64))
(declare-fun temp368_18 () (_ BitVec 64))
(declare-fun temp368_19 () (_ BitVec 64))
(declare-fun temp368_20 () (_ BitVec 64))
(declare-fun temp368_21 () (_ BitVec 64))
(declare-fun temp368_22 () (_ BitVec 64))
(declare-fun temp368_23 () (_ BitVec 64))
(declare-fun temp368_24 () (_ BitVec 64))
(declare-fun temp368_25 () (_ BitVec 64))
(declare-fun temp368_26 () (_ BitVec 64))
(declare-fun temp368_27 () (_ BitVec 64))
(declare-fun temp368_28 () (_ BitVec 64))
(declare-fun temp368_29 () (_ BitVec 64))
(declare-fun temp368_30 () (_ BitVec 64))
(declare-fun temp368_31 () (_ BitVec 64))
(declare-fun temp368_32 () (_ BitVec 64))
(declare-fun temp368_33 () (_ BitVec 64))
(declare-fun temp368_34 () (_ BitVec 64))
(declare-fun temp368_35 () (_ BitVec 64))
(declare-fun temp368_36 () (_ BitVec 64))
(declare-fun temp368_37 () (_ BitVec 64))
(declare-fun temp368_38 () (_ BitVec 64))
(declare-fun temp368_39 () (_ BitVec 64))
(declare-fun temp368_40 () (_ BitVec 64))
(declare-fun temp368_41 () (_ BitVec 64))
(declare-fun temp368_42 () (_ BitVec 64))
(declare-fun temp368_43 () (_ BitVec 64))
(declare-fun temp368_44 () (_ BitVec 64))
(declare-fun temp368_45 () (_ BitVec 64))
(declare-fun temp368_46 () (_ BitVec 64))
(declare-fun temp368_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp368_48 () (_ BitVec 64))
(declare-fun temp368_49 () (_ BitVec 64))
(declare-fun temp368_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_51 () (_ BitVec 64))
(declare-fun temp368_52 () (_ BitVec 64))
(declare-fun temp368_53 () (_ BitVec 64))
(declare-fun temp368_54 () (_ BitVec 64))
(declare-fun temp368_55 () (_ BitVec 64))
(declare-fun temp368_56 () (_ BitVec 64))
(declare-fun temp368_57 () (_ BitVec 64))
(declare-fun temp368_58 () (_ BitVec 64))
(declare-fun temp368_59 () (_ BitVec 64))
(declare-fun temp368_60 () (_ BitVec 64))
(declare-fun temp368_61 () (_ BitVec 64))
(declare-fun temp368_62 () (_ BitVec 64))
(declare-fun temp368_63 () (_ BitVec 64))
(declare-fun temp368_64 () (_ BitVec 64))
(declare-fun temp368_65 () (_ BitVec 64))
(declare-fun temp368_66 () (_ BitVec 64))
(declare-fun temp368_67 () (_ BitVec 64))
(declare-fun temp368_68 () (_ BitVec 64))
(declare-fun temp368_69 () (_ BitVec 64))
(declare-fun temp368_70 () (_ BitVec 64))
(declare-fun temp368_71 () (_ BitVec 64))
(declare-fun temp368_72 () (_ BitVec 64))
(declare-fun temp368_73 () (_ BitVec 64))
(declare-fun temp368_74 () (_ BitVec 64))
(declare-fun temp368_75 () (_ BitVec 64))
(declare-fun temp368_76 () (_ BitVec 64))
(declare-fun temp368_77 () (_ BitVec 64))
(declare-fun temp368_78 () (_ BitVec 64))
(declare-fun temp368_79 () (_ BitVec 64))
(declare-fun temp368_80 () (_ BitVec 64))
(declare-fun temp368_81 () (_ BitVec 64))
(declare-fun temp368_82 () (_ BitVec 64))
(declare-fun temp368_83 () (_ BitVec 64))
(declare-fun temp368_84 () (_ BitVec 64))
(declare-fun temp368_85 () (_ BitVec 64))
(declare-fun temp368_86 () (_ BitVec 64))
(declare-fun temp368_87 () (_ BitVec 64))
(declare-fun temp368_88 () (_ BitVec 64))
(declare-fun temp368_89 () (_ BitVec 64))
(declare-fun temp368_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp368_91 () (_ BitVec 64))
(declare-fun temp368_92 () (_ BitVec 64))
(declare-fun temp368_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_94 () (_ BitVec 64))
(declare-fun temp368_95 () (_ BitVec 64))
(declare-fun temp368_96 () (_ BitVec 64))
(declare-fun temp368_97 () (_ BitVec 64))
(declare-fun temp368_98 () (_ BitVec 64))
(declare-fun temp368_99 () (_ BitVec 64))
(declare-fun temp368_100 () (_ BitVec 64))
(declare-fun temp368_101 () (_ BitVec 64))
(declare-fun temp368_102 () (_ BitVec 64))
(declare-fun temp368_103 () (_ BitVec 64))
(declare-fun temp368_104 () (_ BitVec 64))
(declare-fun temp368_105 () (_ BitVec 64))
(declare-fun temp368_106 () (_ BitVec 64))
(declare-fun temp368_107 () (_ BitVec 64))
(declare-fun temp368_108 () (_ BitVec 64))
(declare-fun temp368_109 () (_ BitVec 64))
(declare-fun temp368_110 () (_ BitVec 64))
(declare-fun temp368_111 () (_ BitVec 64))
(declare-fun temp368_112 () (_ BitVec 64))
(declare-fun temp368_113 () (_ BitVec 64))
(declare-fun temp368_114 () (_ BitVec 64))
(declare-fun temp368_115 () (_ BitVec 64))
(declare-fun temp368_116 () (_ BitVec 64))
(declare-fun temp368_117 () (_ BitVec 64))
(declare-fun temp368_118 () (_ BitVec 64))
(declare-fun temp368_119 () (_ BitVec 64))
(declare-fun temp368_120 () (_ BitVec 64))
(declare-fun temp368_121 () (_ BitVec 64))
(declare-fun temp368_122 () (_ BitVec 64))
(declare-fun temp368_123 () (_ BitVec 64))
(declare-fun temp368_124 () (_ BitVec 64))
(declare-fun temp368_125 () (_ BitVec 64))
(declare-fun temp368_126 () (_ BitVec 64))
(declare-fun temp368_127 () (_ BitVec 64))
(declare-fun temp368_128 () (_ BitVec 64))
(declare-fun temp368_129 () (_ BitVec 64))
(declare-fun temp368_130 () (_ BitVec 64))
(declare-fun temp368_131 () (_ BitVec 64))
(declare-fun temp368_132 () (_ BitVec 64))
(declare-fun temp368_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp368_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp368_135 () (_ BitVec 64))
(declare-fun temp368_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp368_137 () (_ BitVec 64))
(declare-fun temp368_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_139 () (_ BitVec 64))
(declare-fun temp368_140 () (_ BitVec 64))
(declare-fun temp368_141 () (_ BitVec 64))
(declare-fun temp368_142 () (_ BitVec 64))
(declare-fun temp368_143 () (_ BitVec 64))
(declare-fun temp368_144 () (_ BitVec 64))
(declare-fun temp368_145 () (_ BitVec 64))
(declare-fun temp368_146 () (_ BitVec 64))
(declare-fun temp368_147 () (_ BitVec 64))
(declare-fun temp368_148 () (_ BitVec 64))
(declare-fun temp368_149 () (_ BitVec 64))
(declare-fun temp368_150 () (_ BitVec 64))
(declare-fun temp368_151 () (_ BitVec 64))
(declare-fun temp368_152 () (_ BitVec 64))
(declare-fun temp368_153 () (_ BitVec 64))
(declare-fun temp368_154 () (_ BitVec 64))
(declare-fun temp368_156 () (_ BitVec 64))
(declare-fun temp368_157 () (_ BitVec 64))
(declare-fun temp368_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp368_158 () (_ BitVec 64))
(declare-fun temp368_159 () (_ BitVec 64))
(declare-fun temp368_161 () (_ BitVec 64))
(declare-fun temp368_162 () (_ BitVec 64))
(declare-fun temp368_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp368_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp368_164 () (_ BitVec 64))
(declare-fun temp368_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp368_166 () (_ BitVec 64))
(declare-fun temp368_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp368_168 () (_ BitVec 64))
(declare-fun temp368_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_170 () (_ BitVec 64))
(declare-fun temp368_171 () (_ BitVec 64))
(declare-fun temp368_172 () (_ BitVec 64))
(declare-fun temp368_173 () (_ BitVec 64))
(declare-fun temp368_174 () (_ BitVec 64))
(declare-fun temp368_175 () (_ BitVec 64))
(declare-fun temp368_176 () (_ BitVec 64))
(declare-fun temp368_177 () (_ BitVec 64))
(declare-fun temp368_178 () (_ BitVec 64))
(declare-fun temp368_179 () (_ BitVec 64))
(declare-fun temp368_180 () (_ BitVec 64))
(declare-fun temp368_181 () (_ BitVec 64))
(declare-fun temp368_182 () (_ BitVec 64))
(declare-fun temp368_183 () (_ BitVec 64))
(declare-fun temp368_184 () (_ BitVec 64))
(declare-fun temp368_185 () (_ BitVec 64))
(declare-fun temp368_186 () (_ BitVec 64))
(declare-fun temp368_187 () (_ BitVec 64))
(declare-fun temp368_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp368_189 () (_ BitVec 64))
(declare-fun temp368_191 () (_ BitVec 64))
(declare-fun temp368_192 () (_ BitVec 64))
(declare-fun temp368_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp368_193 () (_ BitVec 64))
(declare-fun temp368_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp368_195 () (_ BitVec 64))
(declare-fun temp368_196 () (_ BitVec 64))
(declare-fun temp368_197 () (_ BitVec 64))
(declare-fun temp368_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_199 () (_ BitVec 64))
(declare-fun temp368_200 () (_ BitVec 64))
(declare-fun temp368_201 () (_ BitVec 64))
(declare-fun temp368_202 () (_ BitVec 64))
(declare-fun temp368_203 () (_ BitVec 64))
(declare-fun temp368_204 () (_ BitVec 64))
(declare-fun temp368_205 () (_ BitVec 64))
(declare-fun temp368_206 () (_ BitVec 64))
(declare-fun temp368_207 () (_ BitVec 64))
(declare-fun temp368_208 () (_ BitVec 64))
(declare-fun temp368_209 () (_ BitVec 64))
(declare-fun temp368_210 () (_ BitVec 64))
(declare-fun temp368_211 () (_ BitVec 64))
(declare-fun temp368_212 () (_ BitVec 64))
(declare-fun temp368_213 () (_ BitVec 64))
(declare-fun temp368_214 () (_ BitVec 64))
(declare-fun temp368_215 () (_ BitVec 64))
(declare-fun temp368_216 () (_ BitVec 64))
(declare-fun temp368_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp368_218 () (_ BitVec 64))
(declare-fun temp368_220 () (_ BitVec 64))
(declare-fun temp368_221 () (_ BitVec 64))
(declare-fun temp368_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp368_222 () (_ BitVec 64))
(declare-fun temp368_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp368_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp368_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp368_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp368_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp368_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp368_229 () (_ BitVec 64))
(declare-fun temp368_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp368_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp368_232 () (_ BitVec 64))
(declare-fun temp368_233 () (_ BitVec 64))
(declare-fun temp368_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp368_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp368_236 () (_ BitVec 64))
(declare-fun temp368_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp368_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp368_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var6500752 () (_ BitVec 64))
(declare-fun var6762896 () (_ BitVec 64))
(declare-fun temp368_240 () (_ BitVec 64))
(declare-fun var7090576 () (_ BitVec 64))
(declare-fun temp368_241 () (_ BitVec 64))
(declare-fun temp368_242 () (_ BitVec 64))
(declare-fun var8532756 () (_ BitVec 64))
(declare-fun var8532723 () (_ BitVec 64))
(declare-fun var8401287 () (_ BitVec 64))
(declare-fun var8401283 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp368_243 () (_ BitVec 64))
(assert (= temp368_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp368_1)))
(assert (= temp368_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp368_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_3 #x0000000000000000))
(assert (= var79869 temp368_3))
(assert (= temp368_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp368_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_5 #x0000000000000000))
(assert (= var79914 temp368_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp368_6 #x0000000000000000))
(assert (= temp368_7 temp368_6))
(assert (= temp368_8 (select ARGNAME_padding_NAMEEND_VAL temp368_7)))
(assert (= temp368_9 #x0000000000000001))
(assert (= temp368_10 temp368_9))
(assert (= temp368_11 (select ARGNAME_padding_NAMEEND_VAL temp368_10)))
(assert (= temp368_12 #x0000000000000002))
(assert (= temp368_13 temp368_12))
(assert (= temp368_14 (select ARGNAME_padding_NAMEEND_VAL temp368_13)))
(assert (= temp368_15 #x0000000000000003))
(assert (= temp368_16 temp368_15))
(assert (= temp368_17 (select ARGNAME_padding_NAMEEND_VAL temp368_16)))
(assert (= temp368_18 #x0000000000000004))
(assert (= temp368_19 temp368_18))
(assert (= temp368_20 (select ARGNAME_padding_NAMEEND_VAL temp368_19)))
(assert (= temp368_21 #x0000000000000005))
(assert (= temp368_22 temp368_21))
(assert (= temp368_23 (select ARGNAME_padding_NAMEEND_VAL temp368_22)))
(assert (= temp368_24 #x0000000000000000))
(assert (= temp368_25 #x0000000000000000))
(assert (= temp368_26 temp368_25))
(assert (= temp368_27 (select ARGNAME_padding_NAMEEND_VAL temp368_26)))
(assert (= temp368_28 #x0000000000000000))
(assert (= temp368_29 #x0000000000000001))
(assert (= temp368_30 temp368_29))
(assert (= temp368_31 (select ARGNAME_padding_NAMEEND_VAL temp368_30)))
(assert (= temp368_32 #x0000000000000000))
(assert (= temp368_33 #x0000000000000002))
(assert (= temp368_34 temp368_33))
(assert (= temp368_35 (select ARGNAME_padding_NAMEEND_VAL temp368_34)))
(assert (= temp368_36 #x0000000000000000))
(assert (= temp368_37 #x0000000000000003))
(assert (= temp368_38 temp368_37))
(assert (= temp368_39 (select ARGNAME_padding_NAMEEND_VAL temp368_38)))
(assert (= temp368_40 #x0000000000000000))
(assert (= temp368_41 #x0000000000000004))
(assert (= temp368_42 temp368_41))
(assert (= temp368_43 (select ARGNAME_padding_NAMEEND_VAL temp368_42)))
(assert (= temp368_44 #x0000000000000000))
(assert (= temp368_45 #x0000000000000005))
(assert (= temp368_46 temp368_45))
(assert (= temp368_47 (select ARGNAME_padding_NAMEEND_VAL temp368_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp368_27 temp368_24)
             (bvslt temp368_31 temp368_28)
             (bvslt temp368_35 temp368_32)
             (bvslt temp368_39 temp368_36)
             (bvslt temp368_43 temp368_40)
             (bvslt temp368_47 temp368_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_48 #x0000000000000000))
(assert (= var1322786 temp368_48))
(assert (= temp368_49 #x0000000000000000))
(assert (= temp368_50 temp368_49))
(assert (= temp368_51 (select ARGNAME_output_padding_NAMEEND_VAL temp368_50)))
(assert (= temp368_52 #x0000000000000001))
(assert (= temp368_53 temp368_52))
(assert (= temp368_54 (select ARGNAME_output_padding_NAMEEND_VAL temp368_53)))
(assert (= temp368_55 #x0000000000000002))
(assert (= temp368_56 temp368_55))
(assert (= temp368_57 (select ARGNAME_output_padding_NAMEEND_VAL temp368_56)))
(assert (= temp368_58 #x0000000000000003))
(assert (= temp368_59 temp368_58))
(assert (= temp368_60 (select ARGNAME_output_padding_NAMEEND_VAL temp368_59)))
(assert (= temp368_61 #x0000000000000004))
(assert (= temp368_62 temp368_61))
(assert (= temp368_63 (select ARGNAME_output_padding_NAMEEND_VAL temp368_62)))
(assert (= temp368_64 #x0000000000000005))
(assert (= temp368_65 temp368_64))
(assert (= temp368_66 (select ARGNAME_output_padding_NAMEEND_VAL temp368_65)))
(assert (= temp368_67 #x0000000000000000))
(assert (= temp368_68 #x0000000000000000))
(assert (= temp368_69 temp368_68))
(assert (= temp368_70 (select ARGNAME_output_padding_NAMEEND_VAL temp368_69)))
(assert (= temp368_71 #x0000000000000000))
(assert (= temp368_72 #x0000000000000001))
(assert (= temp368_73 temp368_72))
(assert (= temp368_74 (select ARGNAME_output_padding_NAMEEND_VAL temp368_73)))
(assert (= temp368_75 #x0000000000000000))
(assert (= temp368_76 #x0000000000000002))
(assert (= temp368_77 temp368_76))
(assert (= temp368_78 (select ARGNAME_output_padding_NAMEEND_VAL temp368_77)))
(assert (= temp368_79 #x0000000000000000))
(assert (= temp368_80 #x0000000000000003))
(assert (= temp368_81 temp368_80))
(assert (= temp368_82 (select ARGNAME_output_padding_NAMEEND_VAL temp368_81)))
(assert (= temp368_83 #x0000000000000000))
(assert (= temp368_84 #x0000000000000004))
(assert (= temp368_85 temp368_84))
(assert (= temp368_86 (select ARGNAME_output_padding_NAMEEND_VAL temp368_85)))
(assert (= temp368_87 #x0000000000000000))
(assert (= temp368_88 #x0000000000000005))
(assert (= temp368_89 temp368_88))
(assert (= temp368_90 (select ARGNAME_output_padding_NAMEEND_VAL temp368_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp368_70 temp368_67)
             (bvslt temp368_74 temp368_71)
             (bvslt temp368_78 temp368_75)
             (bvslt temp368_82 temp368_79)
             (bvslt temp368_86 temp368_83)
             (bvslt temp368_90 temp368_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_91 #x0000000000000000))
(assert (= var1322797 temp368_91))
(assert (= temp368_92 #x0000000000000000))
(assert (= temp368_93 temp368_92))
(assert (= temp368_94 (select ARGNAME_stride_NAMEEND_VAL temp368_93)))
(assert (= temp368_95 #x0000000000000001))
(assert (= temp368_96 temp368_95))
(assert (= temp368_97 (select ARGNAME_stride_NAMEEND_VAL temp368_96)))
(assert (= temp368_98 #x0000000000000002))
(assert (= temp368_99 temp368_98))
(assert (= temp368_100 (select ARGNAME_stride_NAMEEND_VAL temp368_99)))
(assert (= temp368_101 #x0000000000000003))
(assert (= temp368_102 temp368_101))
(assert (= temp368_103 (select ARGNAME_stride_NAMEEND_VAL temp368_102)))
(assert (= temp368_104 #x0000000000000004))
(assert (= temp368_105 temp368_104))
(assert (= temp368_106 (select ARGNAME_stride_NAMEEND_VAL temp368_105)))
(assert (= temp368_107 #x0000000000000005))
(assert (= temp368_108 temp368_107))
(assert (= temp368_109 (select ARGNAME_stride_NAMEEND_VAL temp368_108)))
(assert (= temp368_110 #x0000000000000000))
(assert (= temp368_111 #x0000000000000000))
(assert (= temp368_112 temp368_111))
(assert (= temp368_113 (select ARGNAME_stride_NAMEEND_VAL temp368_112)))
(assert (= temp368_114 #x0000000000000000))
(assert (= temp368_115 #x0000000000000001))
(assert (= temp368_116 temp368_115))
(assert (= temp368_117 (select ARGNAME_stride_NAMEEND_VAL temp368_116)))
(assert (= temp368_118 #x0000000000000000))
(assert (= temp368_119 #x0000000000000002))
(assert (= temp368_120 temp368_119))
(assert (= temp368_121 (select ARGNAME_stride_NAMEEND_VAL temp368_120)))
(assert (= temp368_122 #x0000000000000000))
(assert (= temp368_123 #x0000000000000003))
(assert (= temp368_124 temp368_123))
(assert (= temp368_125 (select ARGNAME_stride_NAMEEND_VAL temp368_124)))
(assert (= temp368_126 #x0000000000000000))
(assert (= temp368_127 #x0000000000000004))
(assert (= temp368_128 temp368_127))
(assert (= temp368_129 (select ARGNAME_stride_NAMEEND_VAL temp368_128)))
(assert (= temp368_130 #x0000000000000000))
(assert (= temp368_131 #x0000000000000005))
(assert (= temp368_132 temp368_131))
(assert (= temp368_133 (select ARGNAME_stride_NAMEEND_VAL temp368_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp368_113 temp368_110)
             (bvsle temp368_117 temp368_114)
             (bvsle temp368_121 temp368_118)
             (bvsle temp368_125 temp368_122)
             (bvsle temp368_129 temp368_126)
             (bvsle temp368_133 temp368_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_134 #x0000000000000000))
(assert (= var1322807 temp368_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_135 #x0000000000000001))
(assert (= var1322819 temp368_135))
(assert (= temp368_136 #x0000000000000000))
(assert (= var1310898 temp368_136))
(assert (= temp368_137 #x0000000000000000))
(assert (= temp368_138 temp368_137))
(assert (= temp368_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_138)))
(assert (= temp368_140 #x0000000000000001))
(assert (= temp368_141 temp368_140))
(assert (= temp368_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_141)))
(assert (= temp368_143 #x0000000000000002))
(assert (= temp368_144 temp368_143))
(assert (= temp368_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_144)))
(assert (= temp368_146 #x0000000000000003))
(assert (= temp368_147 temp368_146))
(assert (= temp368_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_147)))
(assert (= temp368_149 #x0000000000000004))
(assert (= temp368_150 temp368_149))
(assert (= temp368_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_150)))
(assert (= temp368_152 #x0000000000000005))
(assert (= temp368_153 temp368_152))
(assert (= temp368_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_153)))
(assert (= temp368_156 var1310898))
(assert (= temp368_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_156)))
(assert (= temp368_155 temp368_157))
(assert (= var1322852
   (ite (bvslt temp368_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_158 #x0000000000000000))
(assert (= var1322852 temp368_158))
(assert (= temp368_159 #x0000000000000000))
(assert (= var1310898 temp368_159))
(assert (= temp368_161 var1310898))
(assert (= temp368_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_161)))
(assert (= temp368_160 temp368_162))
(assert (= var1322874 (bvsmod temp368_160 ARGNAME_groups_NAMEEND)))
(assert (= temp368_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp368_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp368_164 #x0000000000000001))
(assert (= var1322875 temp368_164))
(assert (= temp368_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp368_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_166 #x0000000000000001))
(assert (= var1322895 temp368_166))
(assert (= temp368_167 #x0000000000000001))
(assert (= var1311786 temp368_167))
(assert (= temp368_168 #x0000000000000000))
(assert (= temp368_169 temp368_168))
(assert (= temp368_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_169)))
(assert (= temp368_171 #x0000000000000001))
(assert (= temp368_172 temp368_171))
(assert (= temp368_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_172)))
(assert (= temp368_174 #x0000000000000002))
(assert (= temp368_175 temp368_174))
(assert (= temp368_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_175)))
(assert (= temp368_177 #x0000000000000003))
(assert (= temp368_178 temp368_177))
(assert (= temp368_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_178)))
(assert (= temp368_180 #x0000000000000004))
(assert (= temp368_181 temp368_180))
(assert (= temp368_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_181)))
(assert (= temp368_183 #x0000000000000005))
(assert (= temp368_184 temp368_183))
(assert (= temp368_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_184)))
(assert (= temp368_186 #x0000000000000000))
(assert (= temp368_187
   (ite (bvslt var1311786 temp368_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp368_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_187)))
(assert (= var1322903 temp368_188))
(assert (bvslt (ite (bvslt var1311786 temp368_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp368_189 #x0000000000000001))
(assert (= var1311786 temp368_189))
(assert (= temp368_191 var1311786))
(assert (= temp368_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_191)))
(assert (= temp368_190 temp368_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp368_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp368_193 #x0000000000000001))
(assert (= var1322908 temp368_193))
(assert (= temp368_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp368_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_195 #x0000000000000001))
(assert (= var1322975 temp368_195))
(assert (= temp368_196 #x0000000000000000))
(assert (= var1310898 temp368_196))
(assert (= temp368_197 #x0000000000000000))
(assert (= temp368_198 temp368_197))
(assert (= temp368_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp368_198)))
(assert (= temp368_200 #x0000000000000001))
(assert (= temp368_201 temp368_200))
(assert (= temp368_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp368_201)))
(assert (= temp368_203 #x0000000000000002))
(assert (= temp368_204 temp368_203))
(assert (= temp368_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp368_204)))
(assert (= temp368_206 #x0000000000000003))
(assert (= temp368_207 temp368_206))
(assert (= temp368_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp368_207)))
(assert (= temp368_209 #x0000000000000004))
(assert (= temp368_210 temp368_209))
(assert (= temp368_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp368_210)))
(assert (= temp368_212 #x0000000000000005))
(assert (= temp368_213 temp368_212))
(assert (= temp368_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp368_213)))
(assert (= temp368_215 #x0000000000000000))
(assert (= temp368_216
   (ite (bvslt var1310898 temp368_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp368_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp368_216)))
(assert (= var1322977 temp368_217))
(assert (bvslt (ite (bvslt var1310898 temp368_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp368_218 #x0000000000000000))
(assert (= var1310898 temp368_218))
(assert (= temp368_220 var1310898))
(assert (= temp368_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_220)))
(assert (= temp368_219 temp368_221))
(assert (= var1322980
   (ite (= var1322977 temp368_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp368_222 #x0000000000000001))
(assert (= var1322980 temp368_222))
(assert (= temp368_223 #x0000000000000002))
(assert (= var1848169 temp368_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp368_225 #x0000000000000001))
(assert (= var1323065 temp368_225))
(assert (= temp368_226 #x0000000000000001))
(assert (= var3486735 temp368_226))
(assert (= temp368_227 #x0000000000000001))
(assert (= var3814415 temp368_227))
(assert (= temp368_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp368_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_229 #x0000000000000001))
(assert (= var79986 temp368_229))
(assert (= temp368_230 #x0000000000000001))
(assert (= var80116 temp368_230))
(assert (= var4796905 var80116))
(assert (= temp368_231 #x0000000000000000))
(assert (= var4784306 temp368_231))
(assert (= temp368_232 #x0000000000000000))
(assert (= temp368_233
   (ite (bvslt var4784306 temp368_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp368_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_233)))
(assert (= var4796924 temp368_234))
(assert (bvslt (ite (bvslt var4784306 temp368_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp368_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp368_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp368_236 #x0000000000000001))
(assert (= var4796925 temp368_236))
(assert (= temp368_237 #x0000000000000000))
(assert (= var4996927 temp368_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp368_238 #x0000000000000002))
(assert (= var5125763 temp368_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_239 #x0000000000000000))
(assert (= var5191324 temp368_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var6500752 var80129))
(assert (= var6762896 var80129))
(assert (= temp368_240 #x0000000000000000))
(assert (= var7090576 temp368_240))
(assert (= temp368_241 #x0000000000000001))
(assert (= var79986 temp368_241))
(assert (= temp368_242 #x0000000000000000))
(assert (= var8532756 temp368_242))
(assert (= var8532723 var8532756))
(assert (= var8401287 var8532723))
(assert (= var8401283 var8401287))
(assert (= var81597 var8401283))
(assert (= temp368_243 #x0000000000000000))
(assert (= var81597 temp368_243))
(model-add temp368_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp368_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp368_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






