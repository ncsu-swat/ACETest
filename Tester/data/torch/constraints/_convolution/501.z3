(declare-fun temp665_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp665_2 () (_ BitVec 64))
(declare-fun temp665_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp665_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp665_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp665_6 () (_ BitVec 64))
(declare-fun temp665_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_8 () (_ BitVec 64))
(declare-fun temp665_9 () (_ BitVec 64))
(declare-fun temp665_10 () (_ BitVec 64))
(declare-fun temp665_11 () (_ BitVec 64))
(declare-fun temp665_12 () (_ BitVec 64))
(declare-fun temp665_13 () (_ BitVec 64))
(declare-fun temp665_14 () (_ BitVec 64))
(declare-fun temp665_15 () (_ BitVec 64))
(declare-fun temp665_16 () (_ BitVec 64))
(declare-fun temp665_17 () (_ BitVec 64))
(declare-fun temp665_18 () (_ BitVec 64))
(declare-fun temp665_19 () (_ BitVec 64))
(declare-fun temp665_20 () (_ BitVec 64))
(declare-fun temp665_21 () (_ BitVec 64))
(declare-fun temp665_22 () (_ BitVec 64))
(declare-fun temp665_23 () (_ BitVec 64))
(declare-fun temp665_24 () (_ BitVec 64))
(declare-fun temp665_25 () (_ BitVec 64))
(declare-fun temp665_26 () (_ BitVec 64))
(declare-fun temp665_27 () (_ BitVec 64))
(declare-fun temp665_28 () (_ BitVec 64))
(declare-fun temp665_29 () (_ BitVec 64))
(declare-fun temp665_30 () (_ BitVec 64))
(declare-fun temp665_31 () (_ BitVec 64))
(declare-fun temp665_32 () (_ BitVec 64))
(declare-fun temp665_33 () (_ BitVec 64))
(declare-fun temp665_34 () (_ BitVec 64))
(declare-fun temp665_35 () (_ BitVec 64))
(declare-fun temp665_36 () (_ BitVec 64))
(declare-fun temp665_37 () (_ BitVec 64))
(declare-fun temp665_38 () (_ BitVec 64))
(declare-fun temp665_39 () (_ BitVec 64))
(declare-fun temp665_40 () (_ BitVec 64))
(declare-fun temp665_41 () (_ BitVec 64))
(declare-fun temp665_42 () (_ BitVec 64))
(declare-fun temp665_43 () (_ BitVec 64))
(declare-fun temp665_44 () (_ BitVec 64))
(declare-fun temp665_45 () (_ BitVec 64))
(declare-fun temp665_46 () (_ BitVec 64))
(declare-fun temp665_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp665_48 () (_ BitVec 64))
(declare-fun temp665_49 () (_ BitVec 64))
(declare-fun temp665_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_51 () (_ BitVec 64))
(declare-fun temp665_52 () (_ BitVec 64))
(declare-fun temp665_53 () (_ BitVec 64))
(declare-fun temp665_54 () (_ BitVec 64))
(declare-fun temp665_55 () (_ BitVec 64))
(declare-fun temp665_56 () (_ BitVec 64))
(declare-fun temp665_57 () (_ BitVec 64))
(declare-fun temp665_58 () (_ BitVec 64))
(declare-fun temp665_59 () (_ BitVec 64))
(declare-fun temp665_60 () (_ BitVec 64))
(declare-fun temp665_61 () (_ BitVec 64))
(declare-fun temp665_62 () (_ BitVec 64))
(declare-fun temp665_63 () (_ BitVec 64))
(declare-fun temp665_64 () (_ BitVec 64))
(declare-fun temp665_65 () (_ BitVec 64))
(declare-fun temp665_66 () (_ BitVec 64))
(declare-fun temp665_67 () (_ BitVec 64))
(declare-fun temp665_68 () (_ BitVec 64))
(declare-fun temp665_69 () (_ BitVec 64))
(declare-fun temp665_70 () (_ BitVec 64))
(declare-fun temp665_71 () (_ BitVec 64))
(declare-fun temp665_72 () (_ BitVec 64))
(declare-fun temp665_73 () (_ BitVec 64))
(declare-fun temp665_74 () (_ BitVec 64))
(declare-fun temp665_75 () (_ BitVec 64))
(declare-fun temp665_76 () (_ BitVec 64))
(declare-fun temp665_77 () (_ BitVec 64))
(declare-fun temp665_78 () (_ BitVec 64))
(declare-fun temp665_79 () (_ BitVec 64))
(declare-fun temp665_80 () (_ BitVec 64))
(declare-fun temp665_81 () (_ BitVec 64))
(declare-fun temp665_82 () (_ BitVec 64))
(declare-fun temp665_83 () (_ BitVec 64))
(declare-fun temp665_84 () (_ BitVec 64))
(declare-fun temp665_85 () (_ BitVec 64))
(declare-fun temp665_86 () (_ BitVec 64))
(declare-fun temp665_87 () (_ BitVec 64))
(declare-fun temp665_88 () (_ BitVec 64))
(declare-fun temp665_89 () (_ BitVec 64))
(declare-fun temp665_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp665_91 () (_ BitVec 64))
(declare-fun temp665_92 () (_ BitVec 64))
(declare-fun temp665_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_94 () (_ BitVec 64))
(declare-fun temp665_95 () (_ BitVec 64))
(declare-fun temp665_96 () (_ BitVec 64))
(declare-fun temp665_97 () (_ BitVec 64))
(declare-fun temp665_98 () (_ BitVec 64))
(declare-fun temp665_99 () (_ BitVec 64))
(declare-fun temp665_100 () (_ BitVec 64))
(declare-fun temp665_101 () (_ BitVec 64))
(declare-fun temp665_102 () (_ BitVec 64))
(declare-fun temp665_103 () (_ BitVec 64))
(declare-fun temp665_104 () (_ BitVec 64))
(declare-fun temp665_105 () (_ BitVec 64))
(declare-fun temp665_106 () (_ BitVec 64))
(declare-fun temp665_107 () (_ BitVec 64))
(declare-fun temp665_108 () (_ BitVec 64))
(declare-fun temp665_109 () (_ BitVec 64))
(declare-fun temp665_110 () (_ BitVec 64))
(declare-fun temp665_111 () (_ BitVec 64))
(declare-fun temp665_112 () (_ BitVec 64))
(declare-fun temp665_113 () (_ BitVec 64))
(declare-fun temp665_114 () (_ BitVec 64))
(declare-fun temp665_115 () (_ BitVec 64))
(declare-fun temp665_116 () (_ BitVec 64))
(declare-fun temp665_117 () (_ BitVec 64))
(declare-fun temp665_118 () (_ BitVec 64))
(declare-fun temp665_119 () (_ BitVec 64))
(declare-fun temp665_120 () (_ BitVec 64))
(declare-fun temp665_121 () (_ BitVec 64))
(declare-fun temp665_122 () (_ BitVec 64))
(declare-fun temp665_123 () (_ BitVec 64))
(declare-fun temp665_124 () (_ BitVec 64))
(declare-fun temp665_125 () (_ BitVec 64))
(declare-fun temp665_126 () (_ BitVec 64))
(declare-fun temp665_127 () (_ BitVec 64))
(declare-fun temp665_128 () (_ BitVec 64))
(declare-fun temp665_129 () (_ BitVec 64))
(declare-fun temp665_130 () (_ BitVec 64))
(declare-fun temp665_131 () (_ BitVec 64))
(declare-fun temp665_132 () (_ BitVec 64))
(declare-fun temp665_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp665_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp665_135 () (_ BitVec 64))
(declare-fun temp665_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp665_137 () (_ BitVec 64))
(declare-fun temp665_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_139 () (_ BitVec 64))
(declare-fun temp665_140 () (_ BitVec 64))
(declare-fun temp665_141 () (_ BitVec 64))
(declare-fun temp665_142 () (_ BitVec 64))
(declare-fun temp665_143 () (_ BitVec 64))
(declare-fun temp665_144 () (_ BitVec 64))
(declare-fun temp665_145 () (_ BitVec 64))
(declare-fun temp665_146 () (_ BitVec 64))
(declare-fun temp665_147 () (_ BitVec 64))
(declare-fun temp665_148 () (_ BitVec 64))
(declare-fun temp665_149 () (_ BitVec 64))
(declare-fun temp665_150 () (_ BitVec 64))
(declare-fun temp665_151 () (_ BitVec 64))
(declare-fun temp665_152 () (_ BitVec 64))
(declare-fun temp665_153 () (_ BitVec 64))
(declare-fun temp665_154 () (_ BitVec 64))
(declare-fun temp665_156 () (_ BitVec 64))
(declare-fun temp665_157 () (_ BitVec 64))
(declare-fun temp665_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp665_158 () (_ BitVec 64))
(declare-fun temp665_159 () (_ BitVec 64))
(declare-fun temp665_161 () (_ BitVec 64))
(declare-fun temp665_162 () (_ BitVec 64))
(declare-fun temp665_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp665_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp665_164 () (_ BitVec 64))
(declare-fun temp665_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp665_166 () (_ BitVec 64))
(declare-fun temp665_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp665_168 () (_ BitVec 64))
(declare-fun temp665_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_170 () (_ BitVec 64))
(declare-fun temp665_171 () (_ BitVec 64))
(declare-fun temp665_172 () (_ BitVec 64))
(declare-fun temp665_173 () (_ BitVec 64))
(declare-fun temp665_174 () (_ BitVec 64))
(declare-fun temp665_175 () (_ BitVec 64))
(declare-fun temp665_176 () (_ BitVec 64))
(declare-fun temp665_177 () (_ BitVec 64))
(declare-fun temp665_178 () (_ BitVec 64))
(declare-fun temp665_179 () (_ BitVec 64))
(declare-fun temp665_180 () (_ BitVec 64))
(declare-fun temp665_181 () (_ BitVec 64))
(declare-fun temp665_182 () (_ BitVec 64))
(declare-fun temp665_183 () (_ BitVec 64))
(declare-fun temp665_184 () (_ BitVec 64))
(declare-fun temp665_185 () (_ BitVec 64))
(declare-fun temp665_186 () (_ BitVec 64))
(declare-fun temp665_187 () (_ BitVec 64))
(declare-fun temp665_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp665_189 () (_ BitVec 64))
(declare-fun temp665_191 () (_ BitVec 64))
(declare-fun temp665_192 () (_ BitVec 64))
(declare-fun temp665_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp665_193 () (_ BitVec 64))
(declare-fun temp665_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp665_195 () (_ BitVec 64))
(declare-fun temp665_196 () (_ BitVec 64))
(declare-fun temp665_197 () (_ BitVec 64))
(declare-fun temp665_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_199 () (_ BitVec 64))
(declare-fun temp665_200 () (_ BitVec 64))
(declare-fun temp665_201 () (_ BitVec 64))
(declare-fun temp665_202 () (_ BitVec 64))
(declare-fun temp665_203 () (_ BitVec 64))
(declare-fun temp665_204 () (_ BitVec 64))
(declare-fun temp665_205 () (_ BitVec 64))
(declare-fun temp665_206 () (_ BitVec 64))
(declare-fun temp665_207 () (_ BitVec 64))
(declare-fun temp665_208 () (_ BitVec 64))
(declare-fun temp665_209 () (_ BitVec 64))
(declare-fun temp665_210 () (_ BitVec 64))
(declare-fun temp665_211 () (_ BitVec 64))
(declare-fun temp665_212 () (_ BitVec 64))
(declare-fun temp665_213 () (_ BitVec 64))
(declare-fun temp665_214 () (_ BitVec 64))
(declare-fun temp665_215 () (_ BitVec 64))
(declare-fun temp665_216 () (_ BitVec 64))
(declare-fun temp665_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp665_218 () (_ BitVec 64))
(declare-fun temp665_220 () (_ BitVec 64))
(declare-fun temp665_221 () (_ BitVec 64))
(declare-fun temp665_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp665_222 () (_ BitVec 64))
(declare-fun temp665_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp665_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp665_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp665_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp665_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp665_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp665_229 () (_ BitVec 64))
(declare-fun temp665_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp665_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp665_232 () (_ BitVec 64))
(declare-fun temp665_233 () (_ BitVec 64))
(declare-fun temp665_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp665_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp665_236 () (_ BitVec 64))
(declare-fun temp665_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp665_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp665_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp665_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp665_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp665_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp665_243 () (_ BitVec 64))
(assert (= temp665_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp665_1)))
(assert (= temp665_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp665_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_3 #x0000000000000000))
(assert (= var79869 temp665_3))
(assert (= temp665_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp665_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_5 #x0000000000000000))
(assert (= var79914 temp665_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp665_6 #x0000000000000000))
(assert (= temp665_7 temp665_6))
(assert (= temp665_8 (select ARGNAME_padding_NAMEEND_VAL temp665_7)))
(assert (= temp665_9 #x0000000000000001))
(assert (= temp665_10 temp665_9))
(assert (= temp665_11 (select ARGNAME_padding_NAMEEND_VAL temp665_10)))
(assert (= temp665_12 #x0000000000000002))
(assert (= temp665_13 temp665_12))
(assert (= temp665_14 (select ARGNAME_padding_NAMEEND_VAL temp665_13)))
(assert (= temp665_15 #x0000000000000003))
(assert (= temp665_16 temp665_15))
(assert (= temp665_17 (select ARGNAME_padding_NAMEEND_VAL temp665_16)))
(assert (= temp665_18 #x0000000000000004))
(assert (= temp665_19 temp665_18))
(assert (= temp665_20 (select ARGNAME_padding_NAMEEND_VAL temp665_19)))
(assert (= temp665_21 #x0000000000000005))
(assert (= temp665_22 temp665_21))
(assert (= temp665_23 (select ARGNAME_padding_NAMEEND_VAL temp665_22)))
(assert (= temp665_24 #x0000000000000000))
(assert (= temp665_25 #x0000000000000000))
(assert (= temp665_26 temp665_25))
(assert (= temp665_27 (select ARGNAME_padding_NAMEEND_VAL temp665_26)))
(assert (= temp665_28 #x0000000000000000))
(assert (= temp665_29 #x0000000000000001))
(assert (= temp665_30 temp665_29))
(assert (= temp665_31 (select ARGNAME_padding_NAMEEND_VAL temp665_30)))
(assert (= temp665_32 #x0000000000000000))
(assert (= temp665_33 #x0000000000000002))
(assert (= temp665_34 temp665_33))
(assert (= temp665_35 (select ARGNAME_padding_NAMEEND_VAL temp665_34)))
(assert (= temp665_36 #x0000000000000000))
(assert (= temp665_37 #x0000000000000003))
(assert (= temp665_38 temp665_37))
(assert (= temp665_39 (select ARGNAME_padding_NAMEEND_VAL temp665_38)))
(assert (= temp665_40 #x0000000000000000))
(assert (= temp665_41 #x0000000000000004))
(assert (= temp665_42 temp665_41))
(assert (= temp665_43 (select ARGNAME_padding_NAMEEND_VAL temp665_42)))
(assert (= temp665_44 #x0000000000000000))
(assert (= temp665_45 #x0000000000000005))
(assert (= temp665_46 temp665_45))
(assert (= temp665_47 (select ARGNAME_padding_NAMEEND_VAL temp665_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp665_27 temp665_24)
             (bvslt temp665_31 temp665_28)
             (bvslt temp665_35 temp665_32)
             (bvslt temp665_39 temp665_36)
             (bvslt temp665_43 temp665_40)
             (bvslt temp665_47 temp665_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_48 #x0000000000000000))
(assert (= var1322786 temp665_48))
(assert (= temp665_49 #x0000000000000000))
(assert (= temp665_50 temp665_49))
(assert (= temp665_51 (select ARGNAME_output_padding_NAMEEND_VAL temp665_50)))
(assert (= temp665_52 #x0000000000000001))
(assert (= temp665_53 temp665_52))
(assert (= temp665_54 (select ARGNAME_output_padding_NAMEEND_VAL temp665_53)))
(assert (= temp665_55 #x0000000000000002))
(assert (= temp665_56 temp665_55))
(assert (= temp665_57 (select ARGNAME_output_padding_NAMEEND_VAL temp665_56)))
(assert (= temp665_58 #x0000000000000003))
(assert (= temp665_59 temp665_58))
(assert (= temp665_60 (select ARGNAME_output_padding_NAMEEND_VAL temp665_59)))
(assert (= temp665_61 #x0000000000000004))
(assert (= temp665_62 temp665_61))
(assert (= temp665_63 (select ARGNAME_output_padding_NAMEEND_VAL temp665_62)))
(assert (= temp665_64 #x0000000000000005))
(assert (= temp665_65 temp665_64))
(assert (= temp665_66 (select ARGNAME_output_padding_NAMEEND_VAL temp665_65)))
(assert (= temp665_67 #x0000000000000000))
(assert (= temp665_68 #x0000000000000000))
(assert (= temp665_69 temp665_68))
(assert (= temp665_70 (select ARGNAME_output_padding_NAMEEND_VAL temp665_69)))
(assert (= temp665_71 #x0000000000000000))
(assert (= temp665_72 #x0000000000000001))
(assert (= temp665_73 temp665_72))
(assert (= temp665_74 (select ARGNAME_output_padding_NAMEEND_VAL temp665_73)))
(assert (= temp665_75 #x0000000000000000))
(assert (= temp665_76 #x0000000000000002))
(assert (= temp665_77 temp665_76))
(assert (= temp665_78 (select ARGNAME_output_padding_NAMEEND_VAL temp665_77)))
(assert (= temp665_79 #x0000000000000000))
(assert (= temp665_80 #x0000000000000003))
(assert (= temp665_81 temp665_80))
(assert (= temp665_82 (select ARGNAME_output_padding_NAMEEND_VAL temp665_81)))
(assert (= temp665_83 #x0000000000000000))
(assert (= temp665_84 #x0000000000000004))
(assert (= temp665_85 temp665_84))
(assert (= temp665_86 (select ARGNAME_output_padding_NAMEEND_VAL temp665_85)))
(assert (= temp665_87 #x0000000000000000))
(assert (= temp665_88 #x0000000000000005))
(assert (= temp665_89 temp665_88))
(assert (= temp665_90 (select ARGNAME_output_padding_NAMEEND_VAL temp665_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp665_70 temp665_67)
             (bvslt temp665_74 temp665_71)
             (bvslt temp665_78 temp665_75)
             (bvslt temp665_82 temp665_79)
             (bvslt temp665_86 temp665_83)
             (bvslt temp665_90 temp665_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_91 #x0000000000000000))
(assert (= var1322797 temp665_91))
(assert (= temp665_92 #x0000000000000000))
(assert (= temp665_93 temp665_92))
(assert (= temp665_94 (select ARGNAME_stride_NAMEEND_VAL temp665_93)))
(assert (= temp665_95 #x0000000000000001))
(assert (= temp665_96 temp665_95))
(assert (= temp665_97 (select ARGNAME_stride_NAMEEND_VAL temp665_96)))
(assert (= temp665_98 #x0000000000000002))
(assert (= temp665_99 temp665_98))
(assert (= temp665_100 (select ARGNAME_stride_NAMEEND_VAL temp665_99)))
(assert (= temp665_101 #x0000000000000003))
(assert (= temp665_102 temp665_101))
(assert (= temp665_103 (select ARGNAME_stride_NAMEEND_VAL temp665_102)))
(assert (= temp665_104 #x0000000000000004))
(assert (= temp665_105 temp665_104))
(assert (= temp665_106 (select ARGNAME_stride_NAMEEND_VAL temp665_105)))
(assert (= temp665_107 #x0000000000000005))
(assert (= temp665_108 temp665_107))
(assert (= temp665_109 (select ARGNAME_stride_NAMEEND_VAL temp665_108)))
(assert (= temp665_110 #x0000000000000000))
(assert (= temp665_111 #x0000000000000000))
(assert (= temp665_112 temp665_111))
(assert (= temp665_113 (select ARGNAME_stride_NAMEEND_VAL temp665_112)))
(assert (= temp665_114 #x0000000000000000))
(assert (= temp665_115 #x0000000000000001))
(assert (= temp665_116 temp665_115))
(assert (= temp665_117 (select ARGNAME_stride_NAMEEND_VAL temp665_116)))
(assert (= temp665_118 #x0000000000000000))
(assert (= temp665_119 #x0000000000000002))
(assert (= temp665_120 temp665_119))
(assert (= temp665_121 (select ARGNAME_stride_NAMEEND_VAL temp665_120)))
(assert (= temp665_122 #x0000000000000000))
(assert (= temp665_123 #x0000000000000003))
(assert (= temp665_124 temp665_123))
(assert (= temp665_125 (select ARGNAME_stride_NAMEEND_VAL temp665_124)))
(assert (= temp665_126 #x0000000000000000))
(assert (= temp665_127 #x0000000000000004))
(assert (= temp665_128 temp665_127))
(assert (= temp665_129 (select ARGNAME_stride_NAMEEND_VAL temp665_128)))
(assert (= temp665_130 #x0000000000000000))
(assert (= temp665_131 #x0000000000000005))
(assert (= temp665_132 temp665_131))
(assert (= temp665_133 (select ARGNAME_stride_NAMEEND_VAL temp665_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp665_113 temp665_110)
             (bvsle temp665_117 temp665_114)
             (bvsle temp665_121 temp665_118)
             (bvsle temp665_125 temp665_122)
             (bvsle temp665_129 temp665_126)
             (bvsle temp665_133 temp665_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_134 #x0000000000000000))
(assert (= var1322807 temp665_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_135 #x0000000000000001))
(assert (= var1322819 temp665_135))
(assert (= temp665_136 #x0000000000000000))
(assert (= var1310898 temp665_136))
(assert (= temp665_137 #x0000000000000000))
(assert (= temp665_138 temp665_137))
(assert (= temp665_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_138)))
(assert (= temp665_140 #x0000000000000001))
(assert (= temp665_141 temp665_140))
(assert (= temp665_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_141)))
(assert (= temp665_143 #x0000000000000002))
(assert (= temp665_144 temp665_143))
(assert (= temp665_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_144)))
(assert (= temp665_146 #x0000000000000003))
(assert (= temp665_147 temp665_146))
(assert (= temp665_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_147)))
(assert (= temp665_149 #x0000000000000004))
(assert (= temp665_150 temp665_149))
(assert (= temp665_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_150)))
(assert (= temp665_152 #x0000000000000005))
(assert (= temp665_153 temp665_152))
(assert (= temp665_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_153)))
(assert (= temp665_156 var1310898))
(assert (= temp665_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_156)))
(assert (= temp665_155 temp665_157))
(assert (= var1322852
   (ite (bvslt temp665_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_158 #x0000000000000000))
(assert (= var1322852 temp665_158))
(assert (= temp665_159 #x0000000000000000))
(assert (= var1310898 temp665_159))
(assert (= temp665_161 var1310898))
(assert (= temp665_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_161)))
(assert (= temp665_160 temp665_162))
(assert (= var1322874 (bvsmod temp665_160 ARGNAME_groups_NAMEEND)))
(assert (= temp665_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp665_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp665_164 #x0000000000000001))
(assert (= var1322875 temp665_164))
(assert (= temp665_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp665_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_166 #x0000000000000001))
(assert (= var1322895 temp665_166))
(assert (= temp665_167 #x0000000000000001))
(assert (= var1311786 temp665_167))
(assert (= temp665_168 #x0000000000000000))
(assert (= temp665_169 temp665_168))
(assert (= temp665_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_169)))
(assert (= temp665_171 #x0000000000000001))
(assert (= temp665_172 temp665_171))
(assert (= temp665_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_172)))
(assert (= temp665_174 #x0000000000000002))
(assert (= temp665_175 temp665_174))
(assert (= temp665_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_175)))
(assert (= temp665_177 #x0000000000000003))
(assert (= temp665_178 temp665_177))
(assert (= temp665_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_178)))
(assert (= temp665_180 #x0000000000000004))
(assert (= temp665_181 temp665_180))
(assert (= temp665_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_181)))
(assert (= temp665_183 #x0000000000000005))
(assert (= temp665_184 temp665_183))
(assert (= temp665_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_184)))
(assert (= temp665_186 #x0000000000000000))
(assert (= temp665_187
   (ite (bvslt var1311786 temp665_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp665_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_187)))
(assert (= var1322903 temp665_188))
(assert (bvslt (ite (bvslt var1311786 temp665_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp665_189 #x0000000000000001))
(assert (= var1311786 temp665_189))
(assert (= temp665_191 var1311786))
(assert (= temp665_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_191)))
(assert (= temp665_190 temp665_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp665_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp665_193 #x0000000000000001))
(assert (= var1322908 temp665_193))
(assert (= temp665_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp665_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_195 #x0000000000000001))
(assert (= var1322975 temp665_195))
(assert (= temp665_196 #x0000000000000000))
(assert (= var1310898 temp665_196))
(assert (= temp665_197 #x0000000000000000))
(assert (= temp665_198 temp665_197))
(assert (= temp665_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp665_198)))
(assert (= temp665_200 #x0000000000000001))
(assert (= temp665_201 temp665_200))
(assert (= temp665_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp665_201)))
(assert (= temp665_203 #x0000000000000002))
(assert (= temp665_204 temp665_203))
(assert (= temp665_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp665_204)))
(assert (= temp665_206 #x0000000000000003))
(assert (= temp665_207 temp665_206))
(assert (= temp665_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp665_207)))
(assert (= temp665_209 #x0000000000000004))
(assert (= temp665_210 temp665_209))
(assert (= temp665_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp665_210)))
(assert (= temp665_212 #x0000000000000005))
(assert (= temp665_213 temp665_212))
(assert (= temp665_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp665_213)))
(assert (= temp665_215 #x0000000000000000))
(assert (= temp665_216
   (ite (bvslt var1310898 temp665_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp665_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp665_216)))
(assert (= var1322977 temp665_217))
(assert (bvslt (ite (bvslt var1310898 temp665_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp665_218 #x0000000000000000))
(assert (= var1310898 temp665_218))
(assert (= temp665_220 var1310898))
(assert (= temp665_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_220)))
(assert (= temp665_219 temp665_221))
(assert (= var1322980
   (ite (= var1322977 temp665_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp665_222 #x0000000000000001))
(assert (= var1322980 temp665_222))
(assert (= temp665_223 #x0000000000000002))
(assert (= var1848169 temp665_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp665_225 #x0000000000000001))
(assert (= var1323065 temp665_225))
(assert (= temp665_226 #x0000000000000001))
(assert (= var3486735 temp665_226))
(assert (= temp665_227 #x0000000000000001))
(assert (= var3814415 temp665_227))
(assert (= temp665_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp665_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_229 #x0000000000000001))
(assert (= var79986 temp665_229))
(assert (= temp665_230 #x0000000000000001))
(assert (= var80116 temp665_230))
(assert (= var4796905 var80116))
(assert (= temp665_231 #x0000000000000000))
(assert (= var4784306 temp665_231))
(assert (= temp665_232 #x0000000000000000))
(assert (= temp665_233
   (ite (bvslt var4784306 temp665_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp665_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_233)))
(assert (= var4796924 temp665_234))
(assert (bvslt (ite (bvslt var4784306 temp665_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp665_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp665_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp665_236 #x0000000000000001))
(assert (= var4796925 temp665_236))
(assert (= temp665_237 #x0000000000000000))
(assert (= var4996927 temp665_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp665_238 #x0000000000000002))
(assert (= var5125763 temp665_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_239 #x0000000000000000))
(assert (= var5191324 temp665_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5714320 var80129))
(assert (= temp665_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp665_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp665_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp665_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_243 #x0000000000000001))
(assert (= var79986 temp665_243))
(model-add temp665_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp665_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp665_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






