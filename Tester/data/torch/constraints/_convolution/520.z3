(declare-fun temp690_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp690_2 () (_ BitVec 64))
(declare-fun temp690_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp690_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp690_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp690_6 () (_ BitVec 64))
(declare-fun temp690_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_8 () (_ BitVec 64))
(declare-fun temp690_9 () (_ BitVec 64))
(declare-fun temp690_10 () (_ BitVec 64))
(declare-fun temp690_11 () (_ BitVec 64))
(declare-fun temp690_12 () (_ BitVec 64))
(declare-fun temp690_13 () (_ BitVec 64))
(declare-fun temp690_14 () (_ BitVec 64))
(declare-fun temp690_15 () (_ BitVec 64))
(declare-fun temp690_16 () (_ BitVec 64))
(declare-fun temp690_17 () (_ BitVec 64))
(declare-fun temp690_18 () (_ BitVec 64))
(declare-fun temp690_19 () (_ BitVec 64))
(declare-fun temp690_20 () (_ BitVec 64))
(declare-fun temp690_21 () (_ BitVec 64))
(declare-fun temp690_22 () (_ BitVec 64))
(declare-fun temp690_23 () (_ BitVec 64))
(declare-fun temp690_24 () (_ BitVec 64))
(declare-fun temp690_25 () (_ BitVec 64))
(declare-fun temp690_26 () (_ BitVec 64))
(declare-fun temp690_27 () (_ BitVec 64))
(declare-fun temp690_28 () (_ BitVec 64))
(declare-fun temp690_29 () (_ BitVec 64))
(declare-fun temp690_30 () (_ BitVec 64))
(declare-fun temp690_31 () (_ BitVec 64))
(declare-fun temp690_32 () (_ BitVec 64))
(declare-fun temp690_33 () (_ BitVec 64))
(declare-fun temp690_34 () (_ BitVec 64))
(declare-fun temp690_35 () (_ BitVec 64))
(declare-fun temp690_36 () (_ BitVec 64))
(declare-fun temp690_37 () (_ BitVec 64))
(declare-fun temp690_38 () (_ BitVec 64))
(declare-fun temp690_39 () (_ BitVec 64))
(declare-fun temp690_40 () (_ BitVec 64))
(declare-fun temp690_41 () (_ BitVec 64))
(declare-fun temp690_42 () (_ BitVec 64))
(declare-fun temp690_43 () (_ BitVec 64))
(declare-fun temp690_44 () (_ BitVec 64))
(declare-fun temp690_45 () (_ BitVec 64))
(declare-fun temp690_46 () (_ BitVec 64))
(declare-fun temp690_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp690_48 () (_ BitVec 64))
(declare-fun temp690_49 () (_ BitVec 64))
(declare-fun temp690_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_51 () (_ BitVec 64))
(declare-fun temp690_52 () (_ BitVec 64))
(declare-fun temp690_53 () (_ BitVec 64))
(declare-fun temp690_54 () (_ BitVec 64))
(declare-fun temp690_55 () (_ BitVec 64))
(declare-fun temp690_56 () (_ BitVec 64))
(declare-fun temp690_57 () (_ BitVec 64))
(declare-fun temp690_58 () (_ BitVec 64))
(declare-fun temp690_59 () (_ BitVec 64))
(declare-fun temp690_60 () (_ BitVec 64))
(declare-fun temp690_61 () (_ BitVec 64))
(declare-fun temp690_62 () (_ BitVec 64))
(declare-fun temp690_63 () (_ BitVec 64))
(declare-fun temp690_64 () (_ BitVec 64))
(declare-fun temp690_65 () (_ BitVec 64))
(declare-fun temp690_66 () (_ BitVec 64))
(declare-fun temp690_67 () (_ BitVec 64))
(declare-fun temp690_68 () (_ BitVec 64))
(declare-fun temp690_69 () (_ BitVec 64))
(declare-fun temp690_70 () (_ BitVec 64))
(declare-fun temp690_71 () (_ BitVec 64))
(declare-fun temp690_72 () (_ BitVec 64))
(declare-fun temp690_73 () (_ BitVec 64))
(declare-fun temp690_74 () (_ BitVec 64))
(declare-fun temp690_75 () (_ BitVec 64))
(declare-fun temp690_76 () (_ BitVec 64))
(declare-fun temp690_77 () (_ BitVec 64))
(declare-fun temp690_78 () (_ BitVec 64))
(declare-fun temp690_79 () (_ BitVec 64))
(declare-fun temp690_80 () (_ BitVec 64))
(declare-fun temp690_81 () (_ BitVec 64))
(declare-fun temp690_82 () (_ BitVec 64))
(declare-fun temp690_83 () (_ BitVec 64))
(declare-fun temp690_84 () (_ BitVec 64))
(declare-fun temp690_85 () (_ BitVec 64))
(declare-fun temp690_86 () (_ BitVec 64))
(declare-fun temp690_87 () (_ BitVec 64))
(declare-fun temp690_88 () (_ BitVec 64))
(declare-fun temp690_89 () (_ BitVec 64))
(declare-fun temp690_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp690_91 () (_ BitVec 64))
(declare-fun temp690_92 () (_ BitVec 64))
(declare-fun temp690_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_94 () (_ BitVec 64))
(declare-fun temp690_95 () (_ BitVec 64))
(declare-fun temp690_96 () (_ BitVec 64))
(declare-fun temp690_97 () (_ BitVec 64))
(declare-fun temp690_98 () (_ BitVec 64))
(declare-fun temp690_99 () (_ BitVec 64))
(declare-fun temp690_100 () (_ BitVec 64))
(declare-fun temp690_101 () (_ BitVec 64))
(declare-fun temp690_102 () (_ BitVec 64))
(declare-fun temp690_103 () (_ BitVec 64))
(declare-fun temp690_104 () (_ BitVec 64))
(declare-fun temp690_105 () (_ BitVec 64))
(declare-fun temp690_106 () (_ BitVec 64))
(declare-fun temp690_107 () (_ BitVec 64))
(declare-fun temp690_108 () (_ BitVec 64))
(declare-fun temp690_109 () (_ BitVec 64))
(declare-fun temp690_110 () (_ BitVec 64))
(declare-fun temp690_111 () (_ BitVec 64))
(declare-fun temp690_112 () (_ BitVec 64))
(declare-fun temp690_113 () (_ BitVec 64))
(declare-fun temp690_114 () (_ BitVec 64))
(declare-fun temp690_115 () (_ BitVec 64))
(declare-fun temp690_116 () (_ BitVec 64))
(declare-fun temp690_117 () (_ BitVec 64))
(declare-fun temp690_118 () (_ BitVec 64))
(declare-fun temp690_119 () (_ BitVec 64))
(declare-fun temp690_120 () (_ BitVec 64))
(declare-fun temp690_121 () (_ BitVec 64))
(declare-fun temp690_122 () (_ BitVec 64))
(declare-fun temp690_123 () (_ BitVec 64))
(declare-fun temp690_124 () (_ BitVec 64))
(declare-fun temp690_125 () (_ BitVec 64))
(declare-fun temp690_126 () (_ BitVec 64))
(declare-fun temp690_127 () (_ BitVec 64))
(declare-fun temp690_128 () (_ BitVec 64))
(declare-fun temp690_129 () (_ BitVec 64))
(declare-fun temp690_130 () (_ BitVec 64))
(declare-fun temp690_131 () (_ BitVec 64))
(declare-fun temp690_132 () (_ BitVec 64))
(declare-fun temp690_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp690_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp690_135 () (_ BitVec 64))
(declare-fun temp690_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp690_137 () (_ BitVec 64))
(declare-fun temp690_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_139 () (_ BitVec 64))
(declare-fun temp690_140 () (_ BitVec 64))
(declare-fun temp690_141 () (_ BitVec 64))
(declare-fun temp690_142 () (_ BitVec 64))
(declare-fun temp690_143 () (_ BitVec 64))
(declare-fun temp690_144 () (_ BitVec 64))
(declare-fun temp690_145 () (_ BitVec 64))
(declare-fun temp690_146 () (_ BitVec 64))
(declare-fun temp690_147 () (_ BitVec 64))
(declare-fun temp690_148 () (_ BitVec 64))
(declare-fun temp690_149 () (_ BitVec 64))
(declare-fun temp690_150 () (_ BitVec 64))
(declare-fun temp690_151 () (_ BitVec 64))
(declare-fun temp690_152 () (_ BitVec 64))
(declare-fun temp690_153 () (_ BitVec 64))
(declare-fun temp690_154 () (_ BitVec 64))
(declare-fun temp690_156 () (_ BitVec 64))
(declare-fun temp690_157 () (_ BitVec 64))
(declare-fun temp690_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp690_158 () (_ BitVec 64))
(declare-fun temp690_159 () (_ BitVec 64))
(declare-fun temp690_161 () (_ BitVec 64))
(declare-fun temp690_162 () (_ BitVec 64))
(declare-fun temp690_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp690_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp690_164 () (_ BitVec 64))
(declare-fun temp690_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp690_166 () (_ BitVec 64))
(declare-fun temp690_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp690_168 () (_ BitVec 64))
(declare-fun temp690_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_170 () (_ BitVec 64))
(declare-fun temp690_171 () (_ BitVec 64))
(declare-fun temp690_172 () (_ BitVec 64))
(declare-fun temp690_173 () (_ BitVec 64))
(declare-fun temp690_174 () (_ BitVec 64))
(declare-fun temp690_175 () (_ BitVec 64))
(declare-fun temp690_176 () (_ BitVec 64))
(declare-fun temp690_177 () (_ BitVec 64))
(declare-fun temp690_178 () (_ BitVec 64))
(declare-fun temp690_179 () (_ BitVec 64))
(declare-fun temp690_180 () (_ BitVec 64))
(declare-fun temp690_181 () (_ BitVec 64))
(declare-fun temp690_182 () (_ BitVec 64))
(declare-fun temp690_183 () (_ BitVec 64))
(declare-fun temp690_184 () (_ BitVec 64))
(declare-fun temp690_185 () (_ BitVec 64))
(declare-fun temp690_186 () (_ BitVec 64))
(declare-fun temp690_187 () (_ BitVec 64))
(declare-fun temp690_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp690_189 () (_ BitVec 64))
(declare-fun temp690_191 () (_ BitVec 64))
(declare-fun temp690_192 () (_ BitVec 64))
(declare-fun temp690_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp690_193 () (_ BitVec 64))
(declare-fun temp690_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp690_195 () (_ BitVec 64))
(declare-fun temp690_196 () (_ BitVec 64))
(declare-fun temp690_197 () (_ BitVec 64))
(declare-fun temp690_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_199 () (_ BitVec 64))
(declare-fun temp690_200 () (_ BitVec 64))
(declare-fun temp690_201 () (_ BitVec 64))
(declare-fun temp690_202 () (_ BitVec 64))
(declare-fun temp690_203 () (_ BitVec 64))
(declare-fun temp690_204 () (_ BitVec 64))
(declare-fun temp690_205 () (_ BitVec 64))
(declare-fun temp690_206 () (_ BitVec 64))
(declare-fun temp690_207 () (_ BitVec 64))
(declare-fun temp690_208 () (_ BitVec 64))
(declare-fun temp690_209 () (_ BitVec 64))
(declare-fun temp690_210 () (_ BitVec 64))
(declare-fun temp690_211 () (_ BitVec 64))
(declare-fun temp690_212 () (_ BitVec 64))
(declare-fun temp690_213 () (_ BitVec 64))
(declare-fun temp690_214 () (_ BitVec 64))
(declare-fun temp690_215 () (_ BitVec 64))
(declare-fun temp690_216 () (_ BitVec 64))
(declare-fun temp690_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp690_218 () (_ BitVec 64))
(declare-fun temp690_220 () (_ BitVec 64))
(declare-fun temp690_221 () (_ BitVec 64))
(declare-fun temp690_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp690_222 () (_ BitVec 64))
(declare-fun temp690_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp690_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp690_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp690_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp690_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp690_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp690_229 () (_ BitVec 64))
(declare-fun temp690_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp690_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp690_232 () (_ BitVec 64))
(declare-fun temp690_233 () (_ BitVec 64))
(declare-fun temp690_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp690_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp690_236 () (_ BitVec 64))
(declare-fun temp690_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp690_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp690_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun temp690_241 () (_ BitVec 64))
(declare-fun temp690_240 () (_ BitVec 64))
(declare-fun temp690_242 () (_ BitVec 64))
(declare-fun var66602 () (_ BitVec 64))
(declare-fun temp690_243 () (_ BitVec 64))
(declare-fun temp690_244 () (_ BitVec 64))
(declare-fun temp690_245 () (_ BitVec 64))
(declare-fun var80523 () (_ BitVec 64))
(declare-fun temp690_246 () (_ BitVec 64))
(declare-fun var80524 () (_ BitVec 64))
(declare-fun temp690_247 () (_ BitVec 64))
(declare-fun temp690_249 () (_ BitVec 64))
(declare-fun temp690_248 () (_ BitVec 64))
(declare-fun temp690_250 () (_ BitVec 64))
(assert (= temp690_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp690_1)))
(assert (= temp690_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp690_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_3 #x0000000000000000))
(assert (= var79869 temp690_3))
(assert (= temp690_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp690_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_5 #x0000000000000000))
(assert (= var79914 temp690_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp690_6 #x0000000000000000))
(assert (= temp690_7 temp690_6))
(assert (= temp690_8 (select ARGNAME_padding_NAMEEND_VAL temp690_7)))
(assert (= temp690_9 #x0000000000000001))
(assert (= temp690_10 temp690_9))
(assert (= temp690_11 (select ARGNAME_padding_NAMEEND_VAL temp690_10)))
(assert (= temp690_12 #x0000000000000002))
(assert (= temp690_13 temp690_12))
(assert (= temp690_14 (select ARGNAME_padding_NAMEEND_VAL temp690_13)))
(assert (= temp690_15 #x0000000000000003))
(assert (= temp690_16 temp690_15))
(assert (= temp690_17 (select ARGNAME_padding_NAMEEND_VAL temp690_16)))
(assert (= temp690_18 #x0000000000000004))
(assert (= temp690_19 temp690_18))
(assert (= temp690_20 (select ARGNAME_padding_NAMEEND_VAL temp690_19)))
(assert (= temp690_21 #x0000000000000005))
(assert (= temp690_22 temp690_21))
(assert (= temp690_23 (select ARGNAME_padding_NAMEEND_VAL temp690_22)))
(assert (= temp690_24 #x0000000000000000))
(assert (= temp690_25 #x0000000000000000))
(assert (= temp690_26 temp690_25))
(assert (= temp690_27 (select ARGNAME_padding_NAMEEND_VAL temp690_26)))
(assert (= temp690_28 #x0000000000000000))
(assert (= temp690_29 #x0000000000000001))
(assert (= temp690_30 temp690_29))
(assert (= temp690_31 (select ARGNAME_padding_NAMEEND_VAL temp690_30)))
(assert (= temp690_32 #x0000000000000000))
(assert (= temp690_33 #x0000000000000002))
(assert (= temp690_34 temp690_33))
(assert (= temp690_35 (select ARGNAME_padding_NAMEEND_VAL temp690_34)))
(assert (= temp690_36 #x0000000000000000))
(assert (= temp690_37 #x0000000000000003))
(assert (= temp690_38 temp690_37))
(assert (= temp690_39 (select ARGNAME_padding_NAMEEND_VAL temp690_38)))
(assert (= temp690_40 #x0000000000000000))
(assert (= temp690_41 #x0000000000000004))
(assert (= temp690_42 temp690_41))
(assert (= temp690_43 (select ARGNAME_padding_NAMEEND_VAL temp690_42)))
(assert (= temp690_44 #x0000000000000000))
(assert (= temp690_45 #x0000000000000005))
(assert (= temp690_46 temp690_45))
(assert (= temp690_47 (select ARGNAME_padding_NAMEEND_VAL temp690_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp690_27 temp690_24)
             (bvslt temp690_31 temp690_28)
             (bvslt temp690_35 temp690_32)
             (bvslt temp690_39 temp690_36)
             (bvslt temp690_43 temp690_40)
             (bvslt temp690_47 temp690_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_48 #x0000000000000000))
(assert (= var1322786 temp690_48))
(assert (= temp690_49 #x0000000000000000))
(assert (= temp690_50 temp690_49))
(assert (= temp690_51 (select ARGNAME_output_padding_NAMEEND_VAL temp690_50)))
(assert (= temp690_52 #x0000000000000001))
(assert (= temp690_53 temp690_52))
(assert (= temp690_54 (select ARGNAME_output_padding_NAMEEND_VAL temp690_53)))
(assert (= temp690_55 #x0000000000000002))
(assert (= temp690_56 temp690_55))
(assert (= temp690_57 (select ARGNAME_output_padding_NAMEEND_VAL temp690_56)))
(assert (= temp690_58 #x0000000000000003))
(assert (= temp690_59 temp690_58))
(assert (= temp690_60 (select ARGNAME_output_padding_NAMEEND_VAL temp690_59)))
(assert (= temp690_61 #x0000000000000004))
(assert (= temp690_62 temp690_61))
(assert (= temp690_63 (select ARGNAME_output_padding_NAMEEND_VAL temp690_62)))
(assert (= temp690_64 #x0000000000000005))
(assert (= temp690_65 temp690_64))
(assert (= temp690_66 (select ARGNAME_output_padding_NAMEEND_VAL temp690_65)))
(assert (= temp690_67 #x0000000000000000))
(assert (= temp690_68 #x0000000000000000))
(assert (= temp690_69 temp690_68))
(assert (= temp690_70 (select ARGNAME_output_padding_NAMEEND_VAL temp690_69)))
(assert (= temp690_71 #x0000000000000000))
(assert (= temp690_72 #x0000000000000001))
(assert (= temp690_73 temp690_72))
(assert (= temp690_74 (select ARGNAME_output_padding_NAMEEND_VAL temp690_73)))
(assert (= temp690_75 #x0000000000000000))
(assert (= temp690_76 #x0000000000000002))
(assert (= temp690_77 temp690_76))
(assert (= temp690_78 (select ARGNAME_output_padding_NAMEEND_VAL temp690_77)))
(assert (= temp690_79 #x0000000000000000))
(assert (= temp690_80 #x0000000000000003))
(assert (= temp690_81 temp690_80))
(assert (= temp690_82 (select ARGNAME_output_padding_NAMEEND_VAL temp690_81)))
(assert (= temp690_83 #x0000000000000000))
(assert (= temp690_84 #x0000000000000004))
(assert (= temp690_85 temp690_84))
(assert (= temp690_86 (select ARGNAME_output_padding_NAMEEND_VAL temp690_85)))
(assert (= temp690_87 #x0000000000000000))
(assert (= temp690_88 #x0000000000000005))
(assert (= temp690_89 temp690_88))
(assert (= temp690_90 (select ARGNAME_output_padding_NAMEEND_VAL temp690_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp690_70 temp690_67)
             (bvslt temp690_74 temp690_71)
             (bvslt temp690_78 temp690_75)
             (bvslt temp690_82 temp690_79)
             (bvslt temp690_86 temp690_83)
             (bvslt temp690_90 temp690_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_91 #x0000000000000000))
(assert (= var1322797 temp690_91))
(assert (= temp690_92 #x0000000000000000))
(assert (= temp690_93 temp690_92))
(assert (= temp690_94 (select ARGNAME_stride_NAMEEND_VAL temp690_93)))
(assert (= temp690_95 #x0000000000000001))
(assert (= temp690_96 temp690_95))
(assert (= temp690_97 (select ARGNAME_stride_NAMEEND_VAL temp690_96)))
(assert (= temp690_98 #x0000000000000002))
(assert (= temp690_99 temp690_98))
(assert (= temp690_100 (select ARGNAME_stride_NAMEEND_VAL temp690_99)))
(assert (= temp690_101 #x0000000000000003))
(assert (= temp690_102 temp690_101))
(assert (= temp690_103 (select ARGNAME_stride_NAMEEND_VAL temp690_102)))
(assert (= temp690_104 #x0000000000000004))
(assert (= temp690_105 temp690_104))
(assert (= temp690_106 (select ARGNAME_stride_NAMEEND_VAL temp690_105)))
(assert (= temp690_107 #x0000000000000005))
(assert (= temp690_108 temp690_107))
(assert (= temp690_109 (select ARGNAME_stride_NAMEEND_VAL temp690_108)))
(assert (= temp690_110 #x0000000000000000))
(assert (= temp690_111 #x0000000000000000))
(assert (= temp690_112 temp690_111))
(assert (= temp690_113 (select ARGNAME_stride_NAMEEND_VAL temp690_112)))
(assert (= temp690_114 #x0000000000000000))
(assert (= temp690_115 #x0000000000000001))
(assert (= temp690_116 temp690_115))
(assert (= temp690_117 (select ARGNAME_stride_NAMEEND_VAL temp690_116)))
(assert (= temp690_118 #x0000000000000000))
(assert (= temp690_119 #x0000000000000002))
(assert (= temp690_120 temp690_119))
(assert (= temp690_121 (select ARGNAME_stride_NAMEEND_VAL temp690_120)))
(assert (= temp690_122 #x0000000000000000))
(assert (= temp690_123 #x0000000000000003))
(assert (= temp690_124 temp690_123))
(assert (= temp690_125 (select ARGNAME_stride_NAMEEND_VAL temp690_124)))
(assert (= temp690_126 #x0000000000000000))
(assert (= temp690_127 #x0000000000000004))
(assert (= temp690_128 temp690_127))
(assert (= temp690_129 (select ARGNAME_stride_NAMEEND_VAL temp690_128)))
(assert (= temp690_130 #x0000000000000000))
(assert (= temp690_131 #x0000000000000005))
(assert (= temp690_132 temp690_131))
(assert (= temp690_133 (select ARGNAME_stride_NAMEEND_VAL temp690_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp690_113 temp690_110)
             (bvsle temp690_117 temp690_114)
             (bvsle temp690_121 temp690_118)
             (bvsle temp690_125 temp690_122)
             (bvsle temp690_129 temp690_126)
             (bvsle temp690_133 temp690_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_134 #x0000000000000000))
(assert (= var1322807 temp690_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_135 #x0000000000000001))
(assert (= var1322819 temp690_135))
(assert (= temp690_136 #x0000000000000000))
(assert (= var1310898 temp690_136))
(assert (= temp690_137 #x0000000000000000))
(assert (= temp690_138 temp690_137))
(assert (= temp690_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_138)))
(assert (= temp690_140 #x0000000000000001))
(assert (= temp690_141 temp690_140))
(assert (= temp690_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_141)))
(assert (= temp690_143 #x0000000000000002))
(assert (= temp690_144 temp690_143))
(assert (= temp690_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_144)))
(assert (= temp690_146 #x0000000000000003))
(assert (= temp690_147 temp690_146))
(assert (= temp690_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_147)))
(assert (= temp690_149 #x0000000000000004))
(assert (= temp690_150 temp690_149))
(assert (= temp690_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_150)))
(assert (= temp690_152 #x0000000000000005))
(assert (= temp690_153 temp690_152))
(assert (= temp690_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_153)))
(assert (= temp690_156 var1310898))
(assert (= temp690_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_156)))
(assert (= temp690_155 temp690_157))
(assert (= var1322852
   (ite (bvslt temp690_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_158 #x0000000000000000))
(assert (= var1322852 temp690_158))
(assert (= temp690_159 #x0000000000000000))
(assert (= var1310898 temp690_159))
(assert (= temp690_161 var1310898))
(assert (= temp690_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_161)))
(assert (= temp690_160 temp690_162))
(assert (= var1322874 (bvsmod temp690_160 ARGNAME_groups_NAMEEND)))
(assert (= temp690_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp690_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_164 #x0000000000000001))
(assert (= var1322875 temp690_164))
(assert (= temp690_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp690_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_166 #x0000000000000001))
(assert (= var1322895 temp690_166))
(assert (= temp690_167 #x0000000000000001))
(assert (= var1311786 temp690_167))
(assert (= temp690_168 #x0000000000000000))
(assert (= temp690_169 temp690_168))
(assert (= temp690_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_169)))
(assert (= temp690_171 #x0000000000000001))
(assert (= temp690_172 temp690_171))
(assert (= temp690_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_172)))
(assert (= temp690_174 #x0000000000000002))
(assert (= temp690_175 temp690_174))
(assert (= temp690_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_175)))
(assert (= temp690_177 #x0000000000000003))
(assert (= temp690_178 temp690_177))
(assert (= temp690_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_178)))
(assert (= temp690_180 #x0000000000000004))
(assert (= temp690_181 temp690_180))
(assert (= temp690_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_181)))
(assert (= temp690_183 #x0000000000000005))
(assert (= temp690_184 temp690_183))
(assert (= temp690_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_184)))
(assert (= temp690_186 #x0000000000000000))
(assert (= temp690_187
   (ite (bvslt var1311786 temp690_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp690_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_187)))
(assert (= var1322903 temp690_188))
(assert (bvslt (ite (bvslt var1311786 temp690_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp690_189 #x0000000000000001))
(assert (= var1311786 temp690_189))
(assert (= temp690_191 var1311786))
(assert (= temp690_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_191)))
(assert (= temp690_190 temp690_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp690_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_193 #x0000000000000001))
(assert (= var1322908 temp690_193))
(assert (= temp690_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp690_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_195 #x0000000000000001))
(assert (= var1322975 temp690_195))
(assert (= temp690_196 #x0000000000000000))
(assert (= var1310898 temp690_196))
(assert (= temp690_197 #x0000000000000000))
(assert (= temp690_198 temp690_197))
(assert (= temp690_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp690_198)))
(assert (= temp690_200 #x0000000000000001))
(assert (= temp690_201 temp690_200))
(assert (= temp690_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp690_201)))
(assert (= temp690_203 #x0000000000000002))
(assert (= temp690_204 temp690_203))
(assert (= temp690_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp690_204)))
(assert (= temp690_206 #x0000000000000003))
(assert (= temp690_207 temp690_206))
(assert (= temp690_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp690_207)))
(assert (= temp690_209 #x0000000000000004))
(assert (= temp690_210 temp690_209))
(assert (= temp690_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp690_210)))
(assert (= temp690_212 #x0000000000000005))
(assert (= temp690_213 temp690_212))
(assert (= temp690_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp690_213)))
(assert (= temp690_215 #x0000000000000000))
(assert (= temp690_216
   (ite (bvslt var1310898 temp690_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp690_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp690_216)))
(assert (= var1322977 temp690_217))
(assert (bvslt (ite (bvslt var1310898 temp690_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp690_218 #x0000000000000000))
(assert (= var1310898 temp690_218))
(assert (= temp690_220 var1310898))
(assert (= temp690_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_220)))
(assert (= temp690_219 temp690_221))
(assert (= var1322980
   (ite (= var1322977 temp690_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_222 #x0000000000000001))
(assert (= var1322980 temp690_222))
(assert (= temp690_223 #x0000000000000002))
(assert (= var1848169 temp690_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp690_225 #x0000000000000001))
(assert (= var1323065 temp690_225))
(assert (= temp690_226 #x0000000000000001))
(assert (= var3486735 temp690_226))
(assert (= temp690_227 #x0000000000000001))
(assert (= var3814415 temp690_227))
(assert (= temp690_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp690_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_229 #x0000000000000001))
(assert (= var79986 temp690_229))
(assert (= temp690_230 #x0000000000000001))
(assert (= var80116 temp690_230))
(assert (= var4796905 var80116))
(assert (= temp690_231 #x0000000000000000))
(assert (= var4784306 temp690_231))
(assert (= temp690_232 #x0000000000000000))
(assert (= temp690_233
   (ite (bvslt var4784306 temp690_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp690_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_233)))
(assert (= var4796924 temp690_234))
(assert (bvslt (ite (bvslt var4784306 temp690_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp690_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp690_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_236 #x0000000000000001))
(assert (= var4796925 temp690_236))
(assert (= temp690_237 #x0000000000000000))
(assert (= var4996927 temp690_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp690_238 #x0000000000000002))
(assert (= var5125763 temp690_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_239 #x0000000000000000))
(assert (= var5191324 temp690_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= temp690_241 #xffffffffffffffff))
(assert (= temp690_240 temp690_241))
(assert (= temp690_242 #x0000000000000001))
(assert (= var66602 temp690_242))
(assert (= temp690_243 #x0000000000000000))
(assert (= temp690_244
   (ite (bvslt var66602 temp690_243)
        (bvadd ARGNAME_input_NAMEEND_DIM var66602)
        var66602)))
(assert (= temp690_245 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_244)))
(assert (= var80523 temp690_245))
(assert (bvslt (ite (bvslt var66602 temp690_243)
            (bvadd ARGNAME_input_NAMEEND_DIM var66602)
            var66602)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp690_246 #x0000000000000000))
(assert (= var80524
   (ite (= var80523 temp690_246) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_247 #x0000000000000001))
(assert (= var80524 temp690_247))
(assert (= temp690_249 #xffffffffffffffff))
(assert (= temp690_248 temp690_249))
(assert (= temp690_250 #x0000000000000001))
(assert (= var79986 temp690_250))
(model-add temp690_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp690_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp690_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






