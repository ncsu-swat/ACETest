(declare-fun temp62_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp62_2 () (_ BitVec 64))
(declare-fun temp62_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp62_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp62_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp62_6 () (_ BitVec 64))
(declare-fun temp62_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_8 () (_ BitVec 64))
(declare-fun temp62_9 () (_ BitVec 64))
(declare-fun temp62_10 () (_ BitVec 64))
(declare-fun temp62_11 () (_ BitVec 64))
(declare-fun temp62_12 () (_ BitVec 64))
(declare-fun temp62_13 () (_ BitVec 64))
(declare-fun temp62_14 () (_ BitVec 64))
(declare-fun temp62_15 () (_ BitVec 64))
(declare-fun temp62_16 () (_ BitVec 64))
(declare-fun temp62_17 () (_ BitVec 64))
(declare-fun temp62_18 () (_ BitVec 64))
(declare-fun temp62_19 () (_ BitVec 64))
(declare-fun temp62_20 () (_ BitVec 64))
(declare-fun temp62_21 () (_ BitVec 64))
(declare-fun temp62_22 () (_ BitVec 64))
(declare-fun temp62_23 () (_ BitVec 64))
(declare-fun temp62_24 () (_ BitVec 64))
(declare-fun temp62_25 () (_ BitVec 64))
(declare-fun temp62_26 () (_ BitVec 64))
(declare-fun temp62_27 () (_ BitVec 64))
(declare-fun temp62_28 () (_ BitVec 64))
(declare-fun temp62_29 () (_ BitVec 64))
(declare-fun temp62_30 () (_ BitVec 64))
(declare-fun temp62_31 () (_ BitVec 64))
(declare-fun temp62_32 () (_ BitVec 64))
(declare-fun temp62_33 () (_ BitVec 64))
(declare-fun temp62_34 () (_ BitVec 64))
(declare-fun temp62_35 () (_ BitVec 64))
(declare-fun temp62_36 () (_ BitVec 64))
(declare-fun temp62_37 () (_ BitVec 64))
(declare-fun temp62_38 () (_ BitVec 64))
(declare-fun temp62_39 () (_ BitVec 64))
(declare-fun temp62_40 () (_ BitVec 64))
(declare-fun temp62_41 () (_ BitVec 64))
(declare-fun temp62_42 () (_ BitVec 64))
(declare-fun temp62_43 () (_ BitVec 64))
(declare-fun temp62_44 () (_ BitVec 64))
(declare-fun temp62_45 () (_ BitVec 64))
(declare-fun temp62_46 () (_ BitVec 64))
(declare-fun temp62_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp62_48 () (_ BitVec 64))
(declare-fun temp62_49 () (_ BitVec 64))
(declare-fun temp62_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_51 () (_ BitVec 64))
(declare-fun temp62_52 () (_ BitVec 64))
(declare-fun temp62_53 () (_ BitVec 64))
(declare-fun temp62_54 () (_ BitVec 64))
(declare-fun temp62_55 () (_ BitVec 64))
(declare-fun temp62_56 () (_ BitVec 64))
(declare-fun temp62_57 () (_ BitVec 64))
(declare-fun temp62_58 () (_ BitVec 64))
(declare-fun temp62_59 () (_ BitVec 64))
(declare-fun temp62_60 () (_ BitVec 64))
(declare-fun temp62_61 () (_ BitVec 64))
(declare-fun temp62_62 () (_ BitVec 64))
(declare-fun temp62_63 () (_ BitVec 64))
(declare-fun temp62_64 () (_ BitVec 64))
(declare-fun temp62_65 () (_ BitVec 64))
(declare-fun temp62_66 () (_ BitVec 64))
(declare-fun temp62_67 () (_ BitVec 64))
(declare-fun temp62_68 () (_ BitVec 64))
(declare-fun temp62_69 () (_ BitVec 64))
(declare-fun temp62_70 () (_ BitVec 64))
(declare-fun temp62_71 () (_ BitVec 64))
(declare-fun temp62_72 () (_ BitVec 64))
(declare-fun temp62_73 () (_ BitVec 64))
(declare-fun temp62_74 () (_ BitVec 64))
(declare-fun temp62_75 () (_ BitVec 64))
(declare-fun temp62_76 () (_ BitVec 64))
(declare-fun temp62_77 () (_ BitVec 64))
(declare-fun temp62_78 () (_ BitVec 64))
(declare-fun temp62_79 () (_ BitVec 64))
(declare-fun temp62_80 () (_ BitVec 64))
(declare-fun temp62_81 () (_ BitVec 64))
(declare-fun temp62_82 () (_ BitVec 64))
(declare-fun temp62_83 () (_ BitVec 64))
(declare-fun temp62_84 () (_ BitVec 64))
(declare-fun temp62_85 () (_ BitVec 64))
(declare-fun temp62_86 () (_ BitVec 64))
(declare-fun temp62_87 () (_ BitVec 64))
(declare-fun temp62_88 () (_ BitVec 64))
(declare-fun temp62_89 () (_ BitVec 64))
(declare-fun temp62_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp62_91 () (_ BitVec 64))
(declare-fun temp62_92 () (_ BitVec 64))
(declare-fun temp62_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_94 () (_ BitVec 64))
(declare-fun temp62_95 () (_ BitVec 64))
(declare-fun temp62_96 () (_ BitVec 64))
(declare-fun temp62_97 () (_ BitVec 64))
(declare-fun temp62_98 () (_ BitVec 64))
(declare-fun temp62_99 () (_ BitVec 64))
(declare-fun temp62_100 () (_ BitVec 64))
(declare-fun temp62_101 () (_ BitVec 64))
(declare-fun temp62_102 () (_ BitVec 64))
(declare-fun temp62_103 () (_ BitVec 64))
(declare-fun temp62_104 () (_ BitVec 64))
(declare-fun temp62_105 () (_ BitVec 64))
(declare-fun temp62_106 () (_ BitVec 64))
(declare-fun temp62_107 () (_ BitVec 64))
(declare-fun temp62_108 () (_ BitVec 64))
(declare-fun temp62_109 () (_ BitVec 64))
(declare-fun temp62_110 () (_ BitVec 64))
(declare-fun temp62_111 () (_ BitVec 64))
(declare-fun temp62_112 () (_ BitVec 64))
(declare-fun temp62_113 () (_ BitVec 64))
(declare-fun temp62_114 () (_ BitVec 64))
(declare-fun temp62_115 () (_ BitVec 64))
(declare-fun temp62_116 () (_ BitVec 64))
(declare-fun temp62_117 () (_ BitVec 64))
(declare-fun temp62_118 () (_ BitVec 64))
(declare-fun temp62_119 () (_ BitVec 64))
(declare-fun temp62_120 () (_ BitVec 64))
(declare-fun temp62_121 () (_ BitVec 64))
(declare-fun temp62_122 () (_ BitVec 64))
(declare-fun temp62_123 () (_ BitVec 64))
(declare-fun temp62_124 () (_ BitVec 64))
(declare-fun temp62_125 () (_ BitVec 64))
(declare-fun temp62_126 () (_ BitVec 64))
(declare-fun temp62_127 () (_ BitVec 64))
(declare-fun temp62_128 () (_ BitVec 64))
(declare-fun temp62_129 () (_ BitVec 64))
(declare-fun temp62_130 () (_ BitVec 64))
(declare-fun temp62_131 () (_ BitVec 64))
(declare-fun temp62_132 () (_ BitVec 64))
(declare-fun temp62_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp62_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp62_135 () (_ BitVec 64))
(declare-fun temp62_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp62_137 () (_ BitVec 64))
(declare-fun temp62_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_139 () (_ BitVec 64))
(declare-fun temp62_140 () (_ BitVec 64))
(declare-fun temp62_141 () (_ BitVec 64))
(declare-fun temp62_142 () (_ BitVec 64))
(declare-fun temp62_143 () (_ BitVec 64))
(declare-fun temp62_144 () (_ BitVec 64))
(declare-fun temp62_145 () (_ BitVec 64))
(declare-fun temp62_146 () (_ BitVec 64))
(declare-fun temp62_147 () (_ BitVec 64))
(declare-fun temp62_148 () (_ BitVec 64))
(declare-fun temp62_149 () (_ BitVec 64))
(declare-fun temp62_150 () (_ BitVec 64))
(declare-fun temp62_151 () (_ BitVec 64))
(declare-fun temp62_152 () (_ BitVec 64))
(declare-fun temp62_153 () (_ BitVec 64))
(declare-fun temp62_154 () (_ BitVec 64))
(declare-fun temp62_156 () (_ BitVec 64))
(declare-fun temp62_157 () (_ BitVec 64))
(declare-fun temp62_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp62_158 () (_ BitVec 64))
(declare-fun temp62_159 () (_ BitVec 64))
(declare-fun temp62_161 () (_ BitVec 64))
(declare-fun temp62_162 () (_ BitVec 64))
(declare-fun temp62_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp62_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp62_164 () (_ BitVec 64))
(declare-fun temp62_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp62_166 () (_ BitVec 64))
(declare-fun temp62_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp62_168 () (_ BitVec 64))
(declare-fun temp62_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_170 () (_ BitVec 64))
(declare-fun temp62_171 () (_ BitVec 64))
(declare-fun temp62_172 () (_ BitVec 64))
(declare-fun temp62_173 () (_ BitVec 64))
(declare-fun temp62_174 () (_ BitVec 64))
(declare-fun temp62_175 () (_ BitVec 64))
(declare-fun temp62_176 () (_ BitVec 64))
(declare-fun temp62_177 () (_ BitVec 64))
(declare-fun temp62_178 () (_ BitVec 64))
(declare-fun temp62_179 () (_ BitVec 64))
(declare-fun temp62_180 () (_ BitVec 64))
(declare-fun temp62_181 () (_ BitVec 64))
(declare-fun temp62_182 () (_ BitVec 64))
(declare-fun temp62_183 () (_ BitVec 64))
(declare-fun temp62_184 () (_ BitVec 64))
(declare-fun temp62_185 () (_ BitVec 64))
(declare-fun temp62_186 () (_ BitVec 64))
(declare-fun temp62_187 () (_ BitVec 64))
(declare-fun temp62_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp62_189 () (_ BitVec 64))
(declare-fun temp62_191 () (_ BitVec 64))
(declare-fun temp62_192 () (_ BitVec 64))
(declare-fun temp62_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp62_193 () (_ BitVec 64))
(declare-fun temp62_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp62_195 () (_ BitVec 64))
(declare-fun temp62_196 () (_ BitVec 64))
(declare-fun temp62_197 () (_ BitVec 64))
(declare-fun temp62_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_199 () (_ BitVec 64))
(declare-fun temp62_200 () (_ BitVec 64))
(declare-fun temp62_201 () (_ BitVec 64))
(declare-fun temp62_202 () (_ BitVec 64))
(declare-fun temp62_203 () (_ BitVec 64))
(declare-fun temp62_204 () (_ BitVec 64))
(declare-fun temp62_205 () (_ BitVec 64))
(declare-fun temp62_206 () (_ BitVec 64))
(declare-fun temp62_207 () (_ BitVec 64))
(declare-fun temp62_208 () (_ BitVec 64))
(declare-fun temp62_209 () (_ BitVec 64))
(declare-fun temp62_210 () (_ BitVec 64))
(declare-fun temp62_211 () (_ BitVec 64))
(declare-fun temp62_212 () (_ BitVec 64))
(declare-fun temp62_213 () (_ BitVec 64))
(declare-fun temp62_214 () (_ BitVec 64))
(declare-fun temp62_215 () (_ BitVec 64))
(declare-fun temp62_216 () (_ BitVec 64))
(declare-fun temp62_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp62_218 () (_ BitVec 64))
(declare-fun temp62_220 () (_ BitVec 64))
(declare-fun temp62_221 () (_ BitVec 64))
(declare-fun temp62_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp62_222 () (_ BitVec 64))
(declare-fun temp62_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp62_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp62_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp62_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp62_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp62_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp62_229 () (_ BitVec 64))
(declare-fun temp62_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp62_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp62_232 () (_ BitVec 64))
(declare-fun temp62_233 () (_ BitVec 64))
(declare-fun temp62_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp62_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp62_236 () (_ BitVec 64))
(declare-fun temp62_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp62_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp62_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp62_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80421 () (_ BitVec 64))
(declare-fun temp62_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80423 () (_ BitVec 64))
(declare-fun temp62_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80425 () (_ BitVec 64))
(declare-fun temp62_243 () (_ BitVec 64))
(declare-fun temp62_244 () (_ BitVec 64))
(declare-fun var7549716 () (_ BitVec 64))
(declare-fun var7549683 () (_ BitVec 64))
(declare-fun var7418247 () (_ BitVec 64))
(declare-fun var7418243 () (_ BitVec 64))
(declare-fun var81597 () (_ BitVec 64))
(declare-fun temp62_245 () (_ BitVec 64))
(assert (= temp62_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp62_1)))
(assert (= temp62_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp62_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_3 #x0000000000000000))
(assert (= var79869 temp62_3))
(assert (= temp62_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp62_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_5 #x0000000000000000))
(assert (= var79914 temp62_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp62_6 #x0000000000000000))
(assert (= temp62_7 temp62_6))
(assert (= temp62_8 (select ARGNAME_padding_NAMEEND_VAL temp62_7)))
(assert (= temp62_9 #x0000000000000001))
(assert (= temp62_10 temp62_9))
(assert (= temp62_11 (select ARGNAME_padding_NAMEEND_VAL temp62_10)))
(assert (= temp62_12 #x0000000000000002))
(assert (= temp62_13 temp62_12))
(assert (= temp62_14 (select ARGNAME_padding_NAMEEND_VAL temp62_13)))
(assert (= temp62_15 #x0000000000000003))
(assert (= temp62_16 temp62_15))
(assert (= temp62_17 (select ARGNAME_padding_NAMEEND_VAL temp62_16)))
(assert (= temp62_18 #x0000000000000004))
(assert (= temp62_19 temp62_18))
(assert (= temp62_20 (select ARGNAME_padding_NAMEEND_VAL temp62_19)))
(assert (= temp62_21 #x0000000000000005))
(assert (= temp62_22 temp62_21))
(assert (= temp62_23 (select ARGNAME_padding_NAMEEND_VAL temp62_22)))
(assert (= temp62_24 #x0000000000000000))
(assert (= temp62_25 #x0000000000000000))
(assert (= temp62_26 temp62_25))
(assert (= temp62_27 (select ARGNAME_padding_NAMEEND_VAL temp62_26)))
(assert (= temp62_28 #x0000000000000000))
(assert (= temp62_29 #x0000000000000001))
(assert (= temp62_30 temp62_29))
(assert (= temp62_31 (select ARGNAME_padding_NAMEEND_VAL temp62_30)))
(assert (= temp62_32 #x0000000000000000))
(assert (= temp62_33 #x0000000000000002))
(assert (= temp62_34 temp62_33))
(assert (= temp62_35 (select ARGNAME_padding_NAMEEND_VAL temp62_34)))
(assert (= temp62_36 #x0000000000000000))
(assert (= temp62_37 #x0000000000000003))
(assert (= temp62_38 temp62_37))
(assert (= temp62_39 (select ARGNAME_padding_NAMEEND_VAL temp62_38)))
(assert (= temp62_40 #x0000000000000000))
(assert (= temp62_41 #x0000000000000004))
(assert (= temp62_42 temp62_41))
(assert (= temp62_43 (select ARGNAME_padding_NAMEEND_VAL temp62_42)))
(assert (= temp62_44 #x0000000000000000))
(assert (= temp62_45 #x0000000000000005))
(assert (= temp62_46 temp62_45))
(assert (= temp62_47 (select ARGNAME_padding_NAMEEND_VAL temp62_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp62_27 temp62_24)
             (bvslt temp62_31 temp62_28)
             (bvslt temp62_35 temp62_32)
             (bvslt temp62_39 temp62_36)
             (bvslt temp62_43 temp62_40)
             (bvslt temp62_47 temp62_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_48 #x0000000000000000))
(assert (= var1322786 temp62_48))
(assert (= temp62_49 #x0000000000000000))
(assert (= temp62_50 temp62_49))
(assert (= temp62_51 (select ARGNAME_output_padding_NAMEEND_VAL temp62_50)))
(assert (= temp62_52 #x0000000000000001))
(assert (= temp62_53 temp62_52))
(assert (= temp62_54 (select ARGNAME_output_padding_NAMEEND_VAL temp62_53)))
(assert (= temp62_55 #x0000000000000002))
(assert (= temp62_56 temp62_55))
(assert (= temp62_57 (select ARGNAME_output_padding_NAMEEND_VAL temp62_56)))
(assert (= temp62_58 #x0000000000000003))
(assert (= temp62_59 temp62_58))
(assert (= temp62_60 (select ARGNAME_output_padding_NAMEEND_VAL temp62_59)))
(assert (= temp62_61 #x0000000000000004))
(assert (= temp62_62 temp62_61))
(assert (= temp62_63 (select ARGNAME_output_padding_NAMEEND_VAL temp62_62)))
(assert (= temp62_64 #x0000000000000005))
(assert (= temp62_65 temp62_64))
(assert (= temp62_66 (select ARGNAME_output_padding_NAMEEND_VAL temp62_65)))
(assert (= temp62_67 #x0000000000000000))
(assert (= temp62_68 #x0000000000000000))
(assert (= temp62_69 temp62_68))
(assert (= temp62_70 (select ARGNAME_output_padding_NAMEEND_VAL temp62_69)))
(assert (= temp62_71 #x0000000000000000))
(assert (= temp62_72 #x0000000000000001))
(assert (= temp62_73 temp62_72))
(assert (= temp62_74 (select ARGNAME_output_padding_NAMEEND_VAL temp62_73)))
(assert (= temp62_75 #x0000000000000000))
(assert (= temp62_76 #x0000000000000002))
(assert (= temp62_77 temp62_76))
(assert (= temp62_78 (select ARGNAME_output_padding_NAMEEND_VAL temp62_77)))
(assert (= temp62_79 #x0000000000000000))
(assert (= temp62_80 #x0000000000000003))
(assert (= temp62_81 temp62_80))
(assert (= temp62_82 (select ARGNAME_output_padding_NAMEEND_VAL temp62_81)))
(assert (= temp62_83 #x0000000000000000))
(assert (= temp62_84 #x0000000000000004))
(assert (= temp62_85 temp62_84))
(assert (= temp62_86 (select ARGNAME_output_padding_NAMEEND_VAL temp62_85)))
(assert (= temp62_87 #x0000000000000000))
(assert (= temp62_88 #x0000000000000005))
(assert (= temp62_89 temp62_88))
(assert (= temp62_90 (select ARGNAME_output_padding_NAMEEND_VAL temp62_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp62_70 temp62_67)
             (bvslt temp62_74 temp62_71)
             (bvslt temp62_78 temp62_75)
             (bvslt temp62_82 temp62_79)
             (bvslt temp62_86 temp62_83)
             (bvslt temp62_90 temp62_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_91 #x0000000000000000))
(assert (= var1322797 temp62_91))
(assert (= temp62_92 #x0000000000000000))
(assert (= temp62_93 temp62_92))
(assert (= temp62_94 (select ARGNAME_stride_NAMEEND_VAL temp62_93)))
(assert (= temp62_95 #x0000000000000001))
(assert (= temp62_96 temp62_95))
(assert (= temp62_97 (select ARGNAME_stride_NAMEEND_VAL temp62_96)))
(assert (= temp62_98 #x0000000000000002))
(assert (= temp62_99 temp62_98))
(assert (= temp62_100 (select ARGNAME_stride_NAMEEND_VAL temp62_99)))
(assert (= temp62_101 #x0000000000000003))
(assert (= temp62_102 temp62_101))
(assert (= temp62_103 (select ARGNAME_stride_NAMEEND_VAL temp62_102)))
(assert (= temp62_104 #x0000000000000004))
(assert (= temp62_105 temp62_104))
(assert (= temp62_106 (select ARGNAME_stride_NAMEEND_VAL temp62_105)))
(assert (= temp62_107 #x0000000000000005))
(assert (= temp62_108 temp62_107))
(assert (= temp62_109 (select ARGNAME_stride_NAMEEND_VAL temp62_108)))
(assert (= temp62_110 #x0000000000000000))
(assert (= temp62_111 #x0000000000000000))
(assert (= temp62_112 temp62_111))
(assert (= temp62_113 (select ARGNAME_stride_NAMEEND_VAL temp62_112)))
(assert (= temp62_114 #x0000000000000000))
(assert (= temp62_115 #x0000000000000001))
(assert (= temp62_116 temp62_115))
(assert (= temp62_117 (select ARGNAME_stride_NAMEEND_VAL temp62_116)))
(assert (= temp62_118 #x0000000000000000))
(assert (= temp62_119 #x0000000000000002))
(assert (= temp62_120 temp62_119))
(assert (= temp62_121 (select ARGNAME_stride_NAMEEND_VAL temp62_120)))
(assert (= temp62_122 #x0000000000000000))
(assert (= temp62_123 #x0000000000000003))
(assert (= temp62_124 temp62_123))
(assert (= temp62_125 (select ARGNAME_stride_NAMEEND_VAL temp62_124)))
(assert (= temp62_126 #x0000000000000000))
(assert (= temp62_127 #x0000000000000004))
(assert (= temp62_128 temp62_127))
(assert (= temp62_129 (select ARGNAME_stride_NAMEEND_VAL temp62_128)))
(assert (= temp62_130 #x0000000000000000))
(assert (= temp62_131 #x0000000000000005))
(assert (= temp62_132 temp62_131))
(assert (= temp62_133 (select ARGNAME_stride_NAMEEND_VAL temp62_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp62_113 temp62_110)
             (bvsle temp62_117 temp62_114)
             (bvsle temp62_121 temp62_118)
             (bvsle temp62_125 temp62_122)
             (bvsle temp62_129 temp62_126)
             (bvsle temp62_133 temp62_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_134 #x0000000000000000))
(assert (= var1322807 temp62_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_135 #x0000000000000001))
(assert (= var1322819 temp62_135))
(assert (= temp62_136 #x0000000000000000))
(assert (= var1310898 temp62_136))
(assert (= temp62_137 #x0000000000000000))
(assert (= temp62_138 temp62_137))
(assert (= temp62_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_138)))
(assert (= temp62_140 #x0000000000000001))
(assert (= temp62_141 temp62_140))
(assert (= temp62_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_141)))
(assert (= temp62_143 #x0000000000000002))
(assert (= temp62_144 temp62_143))
(assert (= temp62_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_144)))
(assert (= temp62_146 #x0000000000000003))
(assert (= temp62_147 temp62_146))
(assert (= temp62_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_147)))
(assert (= temp62_149 #x0000000000000004))
(assert (= temp62_150 temp62_149))
(assert (= temp62_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_150)))
(assert (= temp62_152 #x0000000000000005))
(assert (= temp62_153 temp62_152))
(assert (= temp62_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_153)))
(assert (= temp62_156 var1310898))
(assert (= temp62_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_156)))
(assert (= temp62_155 temp62_157))
(assert (= var1322852
   (ite (bvslt temp62_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_158 #x0000000000000000))
(assert (= var1322852 temp62_158))
(assert (= temp62_159 #x0000000000000000))
(assert (= var1310898 temp62_159))
(assert (= temp62_161 var1310898))
(assert (= temp62_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_161)))
(assert (= temp62_160 temp62_162))
(assert (= var1322874 (bvsmod temp62_160 ARGNAME_groups_NAMEEND)))
(assert (= temp62_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp62_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_164 #x0000000000000001))
(assert (= var1322875 temp62_164))
(assert (= temp62_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp62_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_166 #x0000000000000001))
(assert (= var1322895 temp62_166))
(assert (= temp62_167 #x0000000000000001))
(assert (= var1311786 temp62_167))
(assert (= temp62_168 #x0000000000000000))
(assert (= temp62_169 temp62_168))
(assert (= temp62_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_169)))
(assert (= temp62_171 #x0000000000000001))
(assert (= temp62_172 temp62_171))
(assert (= temp62_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_172)))
(assert (= temp62_174 #x0000000000000002))
(assert (= temp62_175 temp62_174))
(assert (= temp62_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_175)))
(assert (= temp62_177 #x0000000000000003))
(assert (= temp62_178 temp62_177))
(assert (= temp62_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_178)))
(assert (= temp62_180 #x0000000000000004))
(assert (= temp62_181 temp62_180))
(assert (= temp62_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_181)))
(assert (= temp62_183 #x0000000000000005))
(assert (= temp62_184 temp62_183))
(assert (= temp62_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_184)))
(assert (= temp62_186 #x0000000000000000))
(assert (= temp62_187
   (ite (bvslt var1311786 temp62_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp62_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_187)))
(assert (= var1322903 temp62_188))
(assert (bvslt (ite (bvslt var1311786 temp62_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp62_189 #x0000000000000001))
(assert (= var1311786 temp62_189))
(assert (= temp62_191 var1311786))
(assert (= temp62_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_191)))
(assert (= temp62_190 temp62_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp62_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_193 #x0000000000000001))
(assert (= var1322908 temp62_193))
(assert (= temp62_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp62_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_195 #x0000000000000001))
(assert (= var1322975 temp62_195))
(assert (= temp62_196 #x0000000000000000))
(assert (= var1310898 temp62_196))
(assert (= temp62_197 #x0000000000000000))
(assert (= temp62_198 temp62_197))
(assert (= temp62_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp62_198)))
(assert (= temp62_200 #x0000000000000001))
(assert (= temp62_201 temp62_200))
(assert (= temp62_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp62_201)))
(assert (= temp62_203 #x0000000000000002))
(assert (= temp62_204 temp62_203))
(assert (= temp62_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp62_204)))
(assert (= temp62_206 #x0000000000000003))
(assert (= temp62_207 temp62_206))
(assert (= temp62_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp62_207)))
(assert (= temp62_209 #x0000000000000004))
(assert (= temp62_210 temp62_209))
(assert (= temp62_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp62_210)))
(assert (= temp62_212 #x0000000000000005))
(assert (= temp62_213 temp62_212))
(assert (= temp62_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp62_213)))
(assert (= temp62_215 #x0000000000000000))
(assert (= temp62_216
   (ite (bvslt var1310898 temp62_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp62_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp62_216)))
(assert (= var1322977 temp62_217))
(assert (bvslt (ite (bvslt var1310898 temp62_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp62_218 #x0000000000000000))
(assert (= var1310898 temp62_218))
(assert (= temp62_220 var1310898))
(assert (= temp62_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_220)))
(assert (= temp62_219 temp62_221))
(assert (= var1322980
   (ite (= var1322977 temp62_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_222 #x0000000000000001))
(assert (= var1322980 temp62_222))
(assert (= temp62_223 #x0000000000000002))
(assert (= var1848169 temp62_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp62_225 #x0000000000000001))
(assert (= var1323065 temp62_225))
(assert (= temp62_226 #x0000000000000001))
(assert (= var3486735 temp62_226))
(assert (= temp62_227 #x0000000000000001))
(assert (= var3814415 temp62_227))
(assert (= temp62_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp62_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_229 #x0000000000000001))
(assert (= var79986 temp62_229))
(assert (= temp62_230 #x0000000000000001))
(assert (= var80116 temp62_230))
(assert (= var4796905 var80116))
(assert (= temp62_231 #x0000000000000000))
(assert (= var4784306 temp62_231))
(assert (= temp62_232 #x0000000000000000))
(assert (= temp62_233
   (ite (bvslt var4784306 temp62_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp62_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_233)))
(assert (= var4796924 temp62_234))
(assert (bvslt (ite (bvslt var4784306 temp62_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp62_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp62_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_236 #x0000000000000001))
(assert (= var4796925 temp62_236))
(assert (= temp62_237 #x0000000000000000))
(assert (= var4996927 temp62_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp62_238 #x0000000000000002))
(assert (= var5125763 temp62_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_239 #x0000000000000000))
(assert (= var5191324 temp62_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp62_240 #x0000000000000000))
(assert (= var80421
   (ite (distinct ARGNAME_benchmark_NAMEEND temp62_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_241 #x0000000000000000))
(assert (= var80423
   (ite (distinct ARGNAME_deterministic_NAMEEND temp62_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_242 #x0000000000000000))
(assert (= var80425
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp62_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_243 #x0000000000000001))
(assert (= var79986 temp62_243))
(assert (= temp62_244 #x0000000000000000))
(assert (= var7549716 temp62_244))
(assert (= var7549683 var7549716))
(assert (= var7418247 var7549683))
(assert (= var7418243 var7418247))
(assert (= var81597 var7418243))
(assert (= temp62_245 #x0000000000000000))
(assert (= var81597 temp62_245))
(model-add temp62_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp62_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp62_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






