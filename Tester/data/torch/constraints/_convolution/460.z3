(declare-fun temp612_1 () (_ BitVec 64))
(declare-fun var79868 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp612_2 () (_ BitVec 64))
(declare-fun temp612_3 () (_ BitVec 64))
(declare-fun var79869 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp612_4 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var79914 () (_ BitVec 64))
(declare-fun temp612_5 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp612_6 () (_ BitVec 64))
(declare-fun temp612_7 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp612_8 () (_ BitVec 64))
(declare-fun temp612_9 () (_ BitVec 64))
(declare-fun temp612_10 () (_ BitVec 64))
(declare-fun temp612_11 () (_ BitVec 64))
(declare-fun temp612_12 () (_ BitVec 64))
(declare-fun temp612_13 () (_ BitVec 64))
(declare-fun temp612_14 () (_ BitVec 64))
(declare-fun temp612_15 () (_ BitVec 64))
(declare-fun temp612_16 () (_ BitVec 64))
(declare-fun temp612_17 () (_ BitVec 64))
(declare-fun temp612_18 () (_ BitVec 64))
(declare-fun temp612_19 () (_ BitVec 64))
(declare-fun temp612_20 () (_ BitVec 64))
(declare-fun temp612_21 () (_ BitVec 64))
(declare-fun temp612_22 () (_ BitVec 64))
(declare-fun temp612_23 () (_ BitVec 64))
(declare-fun temp612_24 () (_ BitVec 64))
(declare-fun temp612_25 () (_ BitVec 64))
(declare-fun temp612_26 () (_ BitVec 64))
(declare-fun temp612_27 () (_ BitVec 64))
(declare-fun temp612_28 () (_ BitVec 64))
(declare-fun temp612_29 () (_ BitVec 64))
(declare-fun temp612_30 () (_ BitVec 64))
(declare-fun temp612_31 () (_ BitVec 64))
(declare-fun temp612_32 () (_ BitVec 64))
(declare-fun temp612_33 () (_ BitVec 64))
(declare-fun temp612_34 () (_ BitVec 64))
(declare-fun temp612_35 () (_ BitVec 64))
(declare-fun temp612_36 () (_ BitVec 64))
(declare-fun temp612_37 () (_ BitVec 64))
(declare-fun temp612_38 () (_ BitVec 64))
(declare-fun temp612_39 () (_ BitVec 64))
(declare-fun temp612_40 () (_ BitVec 64))
(declare-fun temp612_41 () (_ BitVec 64))
(declare-fun temp612_42 () (_ BitVec 64))
(declare-fun temp612_43 () (_ BitVec 64))
(declare-fun temp612_44 () (_ BitVec 64))
(declare-fun temp612_45 () (_ BitVec 64))
(declare-fun temp612_46 () (_ BitVec 64))
(declare-fun temp612_47 () (_ BitVec 64))
(declare-fun var1322786 () (_ BitVec 64))
(declare-fun temp612_48 () (_ BitVec 64))
(declare-fun temp612_49 () (_ BitVec 64))
(declare-fun temp612_50 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp612_51 () (_ BitVec 64))
(declare-fun temp612_52 () (_ BitVec 64))
(declare-fun temp612_53 () (_ BitVec 64))
(declare-fun temp612_54 () (_ BitVec 64))
(declare-fun temp612_55 () (_ BitVec 64))
(declare-fun temp612_56 () (_ BitVec 64))
(declare-fun temp612_57 () (_ BitVec 64))
(declare-fun temp612_58 () (_ BitVec 64))
(declare-fun temp612_59 () (_ BitVec 64))
(declare-fun temp612_60 () (_ BitVec 64))
(declare-fun temp612_61 () (_ BitVec 64))
(declare-fun temp612_62 () (_ BitVec 64))
(declare-fun temp612_63 () (_ BitVec 64))
(declare-fun temp612_64 () (_ BitVec 64))
(declare-fun temp612_65 () (_ BitVec 64))
(declare-fun temp612_66 () (_ BitVec 64))
(declare-fun temp612_67 () (_ BitVec 64))
(declare-fun temp612_68 () (_ BitVec 64))
(declare-fun temp612_69 () (_ BitVec 64))
(declare-fun temp612_70 () (_ BitVec 64))
(declare-fun temp612_71 () (_ BitVec 64))
(declare-fun temp612_72 () (_ BitVec 64))
(declare-fun temp612_73 () (_ BitVec 64))
(declare-fun temp612_74 () (_ BitVec 64))
(declare-fun temp612_75 () (_ BitVec 64))
(declare-fun temp612_76 () (_ BitVec 64))
(declare-fun temp612_77 () (_ BitVec 64))
(declare-fun temp612_78 () (_ BitVec 64))
(declare-fun temp612_79 () (_ BitVec 64))
(declare-fun temp612_80 () (_ BitVec 64))
(declare-fun temp612_81 () (_ BitVec 64))
(declare-fun temp612_82 () (_ BitVec 64))
(declare-fun temp612_83 () (_ BitVec 64))
(declare-fun temp612_84 () (_ BitVec 64))
(declare-fun temp612_85 () (_ BitVec 64))
(declare-fun temp612_86 () (_ BitVec 64))
(declare-fun temp612_87 () (_ BitVec 64))
(declare-fun temp612_88 () (_ BitVec 64))
(declare-fun temp612_89 () (_ BitVec 64))
(declare-fun temp612_90 () (_ BitVec 64))
(declare-fun var1322797 () (_ BitVec 64))
(declare-fun temp612_91 () (_ BitVec 64))
(declare-fun temp612_92 () (_ BitVec 64))
(declare-fun temp612_93 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp612_94 () (_ BitVec 64))
(declare-fun temp612_95 () (_ BitVec 64))
(declare-fun temp612_96 () (_ BitVec 64))
(declare-fun temp612_97 () (_ BitVec 64))
(declare-fun temp612_98 () (_ BitVec 64))
(declare-fun temp612_99 () (_ BitVec 64))
(declare-fun temp612_100 () (_ BitVec 64))
(declare-fun temp612_101 () (_ BitVec 64))
(declare-fun temp612_102 () (_ BitVec 64))
(declare-fun temp612_103 () (_ BitVec 64))
(declare-fun temp612_104 () (_ BitVec 64))
(declare-fun temp612_105 () (_ BitVec 64))
(declare-fun temp612_106 () (_ BitVec 64))
(declare-fun temp612_107 () (_ BitVec 64))
(declare-fun temp612_108 () (_ BitVec 64))
(declare-fun temp612_109 () (_ BitVec 64))
(declare-fun temp612_110 () (_ BitVec 64))
(declare-fun temp612_111 () (_ BitVec 64))
(declare-fun temp612_112 () (_ BitVec 64))
(declare-fun temp612_113 () (_ BitVec 64))
(declare-fun temp612_114 () (_ BitVec 64))
(declare-fun temp612_115 () (_ BitVec 64))
(declare-fun temp612_116 () (_ BitVec 64))
(declare-fun temp612_117 () (_ BitVec 64))
(declare-fun temp612_118 () (_ BitVec 64))
(declare-fun temp612_119 () (_ BitVec 64))
(declare-fun temp612_120 () (_ BitVec 64))
(declare-fun temp612_121 () (_ BitVec 64))
(declare-fun temp612_122 () (_ BitVec 64))
(declare-fun temp612_123 () (_ BitVec 64))
(declare-fun temp612_124 () (_ BitVec 64))
(declare-fun temp612_125 () (_ BitVec 64))
(declare-fun temp612_126 () (_ BitVec 64))
(declare-fun temp612_127 () (_ BitVec 64))
(declare-fun temp612_128 () (_ BitVec 64))
(declare-fun temp612_129 () (_ BitVec 64))
(declare-fun temp612_130 () (_ BitVec 64))
(declare-fun temp612_131 () (_ BitVec 64))
(declare-fun temp612_132 () (_ BitVec 64))
(declare-fun temp612_133 () (_ BitVec 64))
(declare-fun var1322807 () (_ BitVec 64))
(declare-fun temp612_134 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322819 () (_ BitVec 64))
(declare-fun temp612_135 () (_ BitVec 64))
(declare-fun temp612_136 () (_ BitVec 64))
(declare-fun var1310898 () (_ BitVec 64))
(declare-fun temp612_137 () (_ BitVec 64))
(declare-fun temp612_138 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp612_139 () (_ BitVec 64))
(declare-fun temp612_140 () (_ BitVec 64))
(declare-fun temp612_141 () (_ BitVec 64))
(declare-fun temp612_142 () (_ BitVec 64))
(declare-fun temp612_143 () (_ BitVec 64))
(declare-fun temp612_144 () (_ BitVec 64))
(declare-fun temp612_145 () (_ BitVec 64))
(declare-fun temp612_146 () (_ BitVec 64))
(declare-fun temp612_147 () (_ BitVec 64))
(declare-fun temp612_148 () (_ BitVec 64))
(declare-fun temp612_149 () (_ BitVec 64))
(declare-fun temp612_150 () (_ BitVec 64))
(declare-fun temp612_151 () (_ BitVec 64))
(declare-fun temp612_152 () (_ BitVec 64))
(declare-fun temp612_153 () (_ BitVec 64))
(declare-fun temp612_154 () (_ BitVec 64))
(declare-fun temp612_156 () (_ BitVec 64))
(declare-fun temp612_157 () (_ BitVec 64))
(declare-fun temp612_155 () (_ BitVec 64))
(declare-fun var1322852 () (_ BitVec 64))
(declare-fun temp612_158 () (_ BitVec 64))
(declare-fun temp612_159 () (_ BitVec 64))
(declare-fun temp612_161 () (_ BitVec 64))
(declare-fun temp612_162 () (_ BitVec 64))
(declare-fun temp612_160 () (_ BitVec 64))
(declare-fun var1322874 () (_ BitVec 64))
(declare-fun temp612_163 () (_ BitVec 64))
(declare-fun var1322875 () (_ BitVec 64))
(declare-fun temp612_164 () (_ BitVec 64))
(declare-fun temp612_165 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1322895 () (_ BitVec 64))
(declare-fun temp612_166 () (_ BitVec 64))
(declare-fun temp612_167 () (_ BitVec 64))
(declare-fun var1311786 () (_ BitVec 64))
(declare-fun temp612_168 () (_ BitVec 64))
(declare-fun temp612_169 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp612_170 () (_ BitVec 64))
(declare-fun temp612_171 () (_ BitVec 64))
(declare-fun temp612_172 () (_ BitVec 64))
(declare-fun temp612_173 () (_ BitVec 64))
(declare-fun temp612_174 () (_ BitVec 64))
(declare-fun temp612_175 () (_ BitVec 64))
(declare-fun temp612_176 () (_ BitVec 64))
(declare-fun temp612_177 () (_ BitVec 64))
(declare-fun temp612_178 () (_ BitVec 64))
(declare-fun temp612_179 () (_ BitVec 64))
(declare-fun temp612_180 () (_ BitVec 64))
(declare-fun temp612_181 () (_ BitVec 64))
(declare-fun temp612_182 () (_ BitVec 64))
(declare-fun temp612_183 () (_ BitVec 64))
(declare-fun temp612_184 () (_ BitVec 64))
(declare-fun temp612_185 () (_ BitVec 64))
(declare-fun temp612_186 () (_ BitVec 64))
(declare-fun temp612_187 () (_ BitVec 64))
(declare-fun temp612_188 () (_ BitVec 64))
(declare-fun var1322903 () (_ BitVec 64))
(declare-fun temp612_189 () (_ BitVec 64))
(declare-fun temp612_191 () (_ BitVec 64))
(declare-fun temp612_192 () (_ BitVec 64))
(declare-fun temp612_190 () (_ BitVec 64))
(declare-fun var1322907 () (_ BitVec 64))
(declare-fun var1322908 () (_ BitVec 64))
(declare-fun temp612_193 () (_ BitVec 64))
(declare-fun temp612_194 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1322975 () (_ BitVec 64))
(declare-fun temp612_195 () (_ BitVec 64))
(declare-fun temp612_196 () (_ BitVec 64))
(declare-fun temp612_197 () (_ BitVec 64))
(declare-fun temp612_198 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp612_199 () (_ BitVec 64))
(declare-fun temp612_200 () (_ BitVec 64))
(declare-fun temp612_201 () (_ BitVec 64))
(declare-fun temp612_202 () (_ BitVec 64))
(declare-fun temp612_203 () (_ BitVec 64))
(declare-fun temp612_204 () (_ BitVec 64))
(declare-fun temp612_205 () (_ BitVec 64))
(declare-fun temp612_206 () (_ BitVec 64))
(declare-fun temp612_207 () (_ BitVec 64))
(declare-fun temp612_208 () (_ BitVec 64))
(declare-fun temp612_209 () (_ BitVec 64))
(declare-fun temp612_210 () (_ BitVec 64))
(declare-fun temp612_211 () (_ BitVec 64))
(declare-fun temp612_212 () (_ BitVec 64))
(declare-fun temp612_213 () (_ BitVec 64))
(declare-fun temp612_214 () (_ BitVec 64))
(declare-fun temp612_215 () (_ BitVec 64))
(declare-fun temp612_216 () (_ BitVec 64))
(declare-fun temp612_217 () (_ BitVec 64))
(declare-fun var1322977 () (_ BitVec 64))
(declare-fun temp612_218 () (_ BitVec 64))
(declare-fun temp612_220 () (_ BitVec 64))
(declare-fun temp612_221 () (_ BitVec 64))
(declare-fun temp612_219 () (_ BitVec 64))
(declare-fun var1322980 () (_ BitVec 64))
(declare-fun temp612_222 () (_ BitVec 64))
(declare-fun temp612_223 () (_ BitVec 64))
(declare-fun var1848169 () (_ BitVec 64))
(declare-fun var1848178 () (_ BitVec 64))
(declare-fun var1913913 () (_ BitVec 64))
(declare-fun var1913915 () (_ BitVec 64))
(declare-fun temp612_224 () (_ BitVec 64))
(declare-fun var1979456 () (_ BitVec 64))
(declare-fun var2045003 () (_ BitVec 64))
(declare-fun temp612_225 () (_ BitVec 64))
(declare-fun var1323065 () (_ BitVec 64))
(declare-fun temp612_226 () (_ BitVec 64))
(declare-fun var3486735 () (_ BitVec 64))
(declare-fun temp612_227 () (_ BitVec 64))
(declare-fun var3814415 () (_ BitVec 64))
(declare-fun temp612_228 () (_ BitVec 64))
(declare-fun var79986 () (_ BitVec 64))
(declare-fun temp612_229 () (_ BitVec 64))
(declare-fun temp612_230 () (_ BitVec 64))
(declare-fun var80116 () (_ BitVec 64))
(declare-fun var4796905 () (_ BitVec 64))
(declare-fun temp612_231 () (_ BitVec 64))
(declare-fun var4784306 () (_ BitVec 64))
(declare-fun temp612_232 () (_ BitVec 64))
(declare-fun temp612_233 () (_ BitVec 64))
(declare-fun temp612_234 () (_ BitVec 64))
(declare-fun var4796924 () (_ BitVec 64))
(declare-fun temp612_235 () (_ BitVec 64))
(declare-fun var4796925 () (_ BitVec 64))
(declare-fun temp612_236 () (_ BitVec 64))
(declare-fun temp612_237 () (_ BitVec 64))
(declare-fun var4996927 () (_ BitVec 64))
(declare-fun var4996929 () (_ BitVec 64))
(declare-fun var4996886 () (_ BitVec 64))
(declare-fun var80129 () (_ BitVec 64))
(declare-fun temp612_238 () (_ BitVec 64))
(declare-fun var5125763 () (_ BitVec 64))
(declare-fun var5125765 () (_ BitVec 64))
(declare-fun var5191308 () (_ BitVec 64))
(declare-fun var5191309 () (_ BitVec 64))
(declare-fun var5191322 () (_ BitVec 64))
(declare-fun var5191324 () (_ BitVec 64))
(declare-fun temp612_239 () (_ BitVec 64))
(declare-fun var5191349 () (_ BitVec 64))
(declare-fun var5191351 () (_ BitVec 64))
(declare-fun var5312339 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp612_240 () (_ BitVec 64))
(declare-fun ARGNAME_benchmark_NAMEEND () (_ BitVec 64))
(declare-fun var80315 () (_ BitVec 64))
(declare-fun temp612_241 () (_ BitVec 64))
(declare-fun ARGNAME_deterministic_NAMEEND () (_ BitVec 64))
(declare-fun var80317 () (_ BitVec 64))
(declare-fun temp612_242 () (_ BitVec 64))
(declare-fun ARGNAME_allow_tf32_NAMEEND () (_ BitVec 64))
(declare-fun var80319 () (_ BitVec 64))
(declare-fun var6831948 () (_ BitVec 64))
(declare-fun var6831949 () (_ BitVec 64))
(declare-fun var6831950 () (_ BitVec 64))
(declare-fun temp612_243 () (_ BitVec 64))
(assert (= temp612_1 #xfffffffffffffffe))
(assert (= var79868 (bvadd ARGNAME_weight_NAMEEND_DIM temp612_1)))
(assert (= temp612_2 #x0000000000000003))
(assert (= var79869
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp612_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_3 #x0000000000000000))
(assert (= var79869 temp612_3))
(assert (= temp612_4 #x0000000000000001))
(assert (= var79914
   (ite (bvslt ARGNAME_groups_NAMEEND temp612_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_5 #x0000000000000000))
(assert (= var79914 temp612_5))
(assert (= ARGNAME_stride_NAMEEND_LEN var79868))
(assert (= ARGNAME_padding_NAMEEND_LEN var79868))
(assert (= ARGNAME_dilation_NAMEEND_LEN var79868))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var79868))
(assert (= temp612_6 #x0000000000000000))
(assert (= temp612_7 temp612_6))
(assert (= temp612_8 (select ARGNAME_padding_NAMEEND_VAL temp612_7)))
(assert (= temp612_9 #x0000000000000001))
(assert (= temp612_10 temp612_9))
(assert (= temp612_11 (select ARGNAME_padding_NAMEEND_VAL temp612_10)))
(assert (= temp612_12 #x0000000000000002))
(assert (= temp612_13 temp612_12))
(assert (= temp612_14 (select ARGNAME_padding_NAMEEND_VAL temp612_13)))
(assert (= temp612_15 #x0000000000000003))
(assert (= temp612_16 temp612_15))
(assert (= temp612_17 (select ARGNAME_padding_NAMEEND_VAL temp612_16)))
(assert (= temp612_18 #x0000000000000004))
(assert (= temp612_19 temp612_18))
(assert (= temp612_20 (select ARGNAME_padding_NAMEEND_VAL temp612_19)))
(assert (= temp612_21 #x0000000000000005))
(assert (= temp612_22 temp612_21))
(assert (= temp612_23 (select ARGNAME_padding_NAMEEND_VAL temp612_22)))
(assert (= temp612_24 #x0000000000000000))
(assert (= temp612_25 #x0000000000000000))
(assert (= temp612_26 temp612_25))
(assert (= temp612_27 (select ARGNAME_padding_NAMEEND_VAL temp612_26)))
(assert (= temp612_28 #x0000000000000000))
(assert (= temp612_29 #x0000000000000001))
(assert (= temp612_30 temp612_29))
(assert (= temp612_31 (select ARGNAME_padding_NAMEEND_VAL temp612_30)))
(assert (= temp612_32 #x0000000000000000))
(assert (= temp612_33 #x0000000000000002))
(assert (= temp612_34 temp612_33))
(assert (= temp612_35 (select ARGNAME_padding_NAMEEND_VAL temp612_34)))
(assert (= temp612_36 #x0000000000000000))
(assert (= temp612_37 #x0000000000000003))
(assert (= temp612_38 temp612_37))
(assert (= temp612_39 (select ARGNAME_padding_NAMEEND_VAL temp612_38)))
(assert (= temp612_40 #x0000000000000000))
(assert (= temp612_41 #x0000000000000004))
(assert (= temp612_42 temp612_41))
(assert (= temp612_43 (select ARGNAME_padding_NAMEEND_VAL temp612_42)))
(assert (= temp612_44 #x0000000000000000))
(assert (= temp612_45 #x0000000000000005))
(assert (= temp612_46 temp612_45))
(assert (= temp612_47 (select ARGNAME_padding_NAMEEND_VAL temp612_46)))
(assert (= var1322786
   (ite (and true
             (bvslt temp612_27 temp612_24)
             (bvslt temp612_31 temp612_28)
             (bvslt temp612_35 temp612_32)
             (bvslt temp612_39 temp612_36)
             (bvslt temp612_43 temp612_40)
             (bvslt temp612_47 temp612_44))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_48 #x0000000000000000))
(assert (= var1322786 temp612_48))
(assert (= temp612_49 #x0000000000000000))
(assert (= temp612_50 temp612_49))
(assert (= temp612_51 (select ARGNAME_output_padding_NAMEEND_VAL temp612_50)))
(assert (= temp612_52 #x0000000000000001))
(assert (= temp612_53 temp612_52))
(assert (= temp612_54 (select ARGNAME_output_padding_NAMEEND_VAL temp612_53)))
(assert (= temp612_55 #x0000000000000002))
(assert (= temp612_56 temp612_55))
(assert (= temp612_57 (select ARGNAME_output_padding_NAMEEND_VAL temp612_56)))
(assert (= temp612_58 #x0000000000000003))
(assert (= temp612_59 temp612_58))
(assert (= temp612_60 (select ARGNAME_output_padding_NAMEEND_VAL temp612_59)))
(assert (= temp612_61 #x0000000000000004))
(assert (= temp612_62 temp612_61))
(assert (= temp612_63 (select ARGNAME_output_padding_NAMEEND_VAL temp612_62)))
(assert (= temp612_64 #x0000000000000005))
(assert (= temp612_65 temp612_64))
(assert (= temp612_66 (select ARGNAME_output_padding_NAMEEND_VAL temp612_65)))
(assert (= temp612_67 #x0000000000000000))
(assert (= temp612_68 #x0000000000000000))
(assert (= temp612_69 temp612_68))
(assert (= temp612_70 (select ARGNAME_output_padding_NAMEEND_VAL temp612_69)))
(assert (= temp612_71 #x0000000000000000))
(assert (= temp612_72 #x0000000000000001))
(assert (= temp612_73 temp612_72))
(assert (= temp612_74 (select ARGNAME_output_padding_NAMEEND_VAL temp612_73)))
(assert (= temp612_75 #x0000000000000000))
(assert (= temp612_76 #x0000000000000002))
(assert (= temp612_77 temp612_76))
(assert (= temp612_78 (select ARGNAME_output_padding_NAMEEND_VAL temp612_77)))
(assert (= temp612_79 #x0000000000000000))
(assert (= temp612_80 #x0000000000000003))
(assert (= temp612_81 temp612_80))
(assert (= temp612_82 (select ARGNAME_output_padding_NAMEEND_VAL temp612_81)))
(assert (= temp612_83 #x0000000000000000))
(assert (= temp612_84 #x0000000000000004))
(assert (= temp612_85 temp612_84))
(assert (= temp612_86 (select ARGNAME_output_padding_NAMEEND_VAL temp612_85)))
(assert (= temp612_87 #x0000000000000000))
(assert (= temp612_88 #x0000000000000005))
(assert (= temp612_89 temp612_88))
(assert (= temp612_90 (select ARGNAME_output_padding_NAMEEND_VAL temp612_89)))
(assert (= var1322797
   (ite (and true
             (bvslt temp612_70 temp612_67)
             (bvslt temp612_74 temp612_71)
             (bvslt temp612_78 temp612_75)
             (bvslt temp612_82 temp612_79)
             (bvslt temp612_86 temp612_83)
             (bvslt temp612_90 temp612_87))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_91 #x0000000000000000))
(assert (= var1322797 temp612_91))
(assert (= temp612_92 #x0000000000000000))
(assert (= temp612_93 temp612_92))
(assert (= temp612_94 (select ARGNAME_stride_NAMEEND_VAL temp612_93)))
(assert (= temp612_95 #x0000000000000001))
(assert (= temp612_96 temp612_95))
(assert (= temp612_97 (select ARGNAME_stride_NAMEEND_VAL temp612_96)))
(assert (= temp612_98 #x0000000000000002))
(assert (= temp612_99 temp612_98))
(assert (= temp612_100 (select ARGNAME_stride_NAMEEND_VAL temp612_99)))
(assert (= temp612_101 #x0000000000000003))
(assert (= temp612_102 temp612_101))
(assert (= temp612_103 (select ARGNAME_stride_NAMEEND_VAL temp612_102)))
(assert (= temp612_104 #x0000000000000004))
(assert (= temp612_105 temp612_104))
(assert (= temp612_106 (select ARGNAME_stride_NAMEEND_VAL temp612_105)))
(assert (= temp612_107 #x0000000000000005))
(assert (= temp612_108 temp612_107))
(assert (= temp612_109 (select ARGNAME_stride_NAMEEND_VAL temp612_108)))
(assert (= temp612_110 #x0000000000000000))
(assert (= temp612_111 #x0000000000000000))
(assert (= temp612_112 temp612_111))
(assert (= temp612_113 (select ARGNAME_stride_NAMEEND_VAL temp612_112)))
(assert (= temp612_114 #x0000000000000000))
(assert (= temp612_115 #x0000000000000001))
(assert (= temp612_116 temp612_115))
(assert (= temp612_117 (select ARGNAME_stride_NAMEEND_VAL temp612_116)))
(assert (= temp612_118 #x0000000000000000))
(assert (= temp612_119 #x0000000000000002))
(assert (= temp612_120 temp612_119))
(assert (= temp612_121 (select ARGNAME_stride_NAMEEND_VAL temp612_120)))
(assert (= temp612_122 #x0000000000000000))
(assert (= temp612_123 #x0000000000000003))
(assert (= temp612_124 temp612_123))
(assert (= temp612_125 (select ARGNAME_stride_NAMEEND_VAL temp612_124)))
(assert (= temp612_126 #x0000000000000000))
(assert (= temp612_127 #x0000000000000004))
(assert (= temp612_128 temp612_127))
(assert (= temp612_129 (select ARGNAME_stride_NAMEEND_VAL temp612_128)))
(assert (= temp612_130 #x0000000000000000))
(assert (= temp612_131 #x0000000000000005))
(assert (= temp612_132 temp612_131))
(assert (= temp612_133 (select ARGNAME_stride_NAMEEND_VAL temp612_132)))
(assert (= var1322807
   (ite (and true
             (bvsle temp612_113 temp612_110)
             (bvsle temp612_117 temp612_114)
             (bvsle temp612_121 temp612_118)
             (bvsle temp612_125 temp612_122)
             (bvsle temp612_129 temp612_126)
             (bvsle temp612_133 temp612_130))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_134 #x0000000000000000))
(assert (= var1322807 temp612_134))
(assert (= var1322819
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_135 #x0000000000000001))
(assert (= var1322819 temp612_135))
(assert (= temp612_136 #x0000000000000000))
(assert (= var1310898 temp612_136))
(assert (= temp612_137 #x0000000000000000))
(assert (= temp612_138 temp612_137))
(assert (= temp612_139 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_138)))
(assert (= temp612_140 #x0000000000000001))
(assert (= temp612_141 temp612_140))
(assert (= temp612_142 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_141)))
(assert (= temp612_143 #x0000000000000002))
(assert (= temp612_144 temp612_143))
(assert (= temp612_145 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_144)))
(assert (= temp612_146 #x0000000000000003))
(assert (= temp612_147 temp612_146))
(assert (= temp612_148 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_147)))
(assert (= temp612_149 #x0000000000000004))
(assert (= temp612_150 temp612_149))
(assert (= temp612_151 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_150)))
(assert (= temp612_152 #x0000000000000005))
(assert (= temp612_153 temp612_152))
(assert (= temp612_154 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_153)))
(assert (= temp612_156 var1310898))
(assert (= temp612_157 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_156)))
(assert (= temp612_155 temp612_157))
(assert (= var1322852
   (ite (bvslt temp612_155 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_158 #x0000000000000000))
(assert (= var1322852 temp612_158))
(assert (= temp612_159 #x0000000000000000))
(assert (= var1310898 temp612_159))
(assert (= temp612_161 var1310898))
(assert (= temp612_162 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_161)))
(assert (= temp612_160 temp612_162))
(assert (= var1322874 (bvsmod temp612_160 ARGNAME_groups_NAMEEND)))
(assert (= temp612_163 #x0000000000000000))
(assert (= var1322875
   (ite (= var1322874 temp612_163) #x0000000000000001 #x0000000000000000)))
(assert (= temp612_164 #x0000000000000001))
(assert (= var1322875 temp612_164))
(assert (= temp612_165 #x0000000000000000))
(assert (= var1322895
   (ite (= ARGNAME_transposed_NAMEEND temp612_165)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_166 #x0000000000000001))
(assert (= var1322895 temp612_166))
(assert (= temp612_167 #x0000000000000001))
(assert (= var1311786 temp612_167))
(assert (= temp612_168 #x0000000000000000))
(assert (= temp612_169 temp612_168))
(assert (= temp612_170 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_169)))
(assert (= temp612_171 #x0000000000000001))
(assert (= temp612_172 temp612_171))
(assert (= temp612_173 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_172)))
(assert (= temp612_174 #x0000000000000002))
(assert (= temp612_175 temp612_174))
(assert (= temp612_176 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_175)))
(assert (= temp612_177 #x0000000000000003))
(assert (= temp612_178 temp612_177))
(assert (= temp612_179 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_178)))
(assert (= temp612_180 #x0000000000000004))
(assert (= temp612_181 temp612_180))
(assert (= temp612_182 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_181)))
(assert (= temp612_183 #x0000000000000005))
(assert (= temp612_184 temp612_183))
(assert (= temp612_185 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_184)))
(assert (= temp612_186 #x0000000000000000))
(assert (= temp612_187
   (ite (bvslt var1311786 temp612_186)
        (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
        var1311786)))
(assert (= temp612_188 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_187)))
(assert (= var1322903 temp612_188))
(assert (bvslt (ite (bvslt var1311786 temp612_186)
            (bvadd ARGNAME_input_NAMEEND_DIM var1311786)
            var1311786)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp612_189 #x0000000000000001))
(assert (= var1311786 temp612_189))
(assert (= temp612_191 var1311786))
(assert (= temp612_192 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_191)))
(assert (= temp612_190 temp612_192))
(assert (= var1322907 (bvmul ARGNAME_groups_NAMEEND temp612_190)))
(assert (= var1322908
   (ite (= var1322903 var1322907) #x0000000000000001 #x0000000000000000)))
(assert (= temp612_193 #x0000000000000001))
(assert (= var1322908 temp612_193))
(assert (= temp612_194 #x0000000000000001))
(assert (= var1322975
   (ite (= ARGNAME_bias_NAMEEND_DIM temp612_194)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_195 #x0000000000000001))
(assert (= var1322975 temp612_195))
(assert (= temp612_196 #x0000000000000000))
(assert (= var1310898 temp612_196))
(assert (= temp612_197 #x0000000000000000))
(assert (= temp612_198 temp612_197))
(assert (= temp612_199 (select ARGNAME_bias_NAMEEND_DIMSIZE temp612_198)))
(assert (= temp612_200 #x0000000000000001))
(assert (= temp612_201 temp612_200))
(assert (= temp612_202 (select ARGNAME_bias_NAMEEND_DIMSIZE temp612_201)))
(assert (= temp612_203 #x0000000000000002))
(assert (= temp612_204 temp612_203))
(assert (= temp612_205 (select ARGNAME_bias_NAMEEND_DIMSIZE temp612_204)))
(assert (= temp612_206 #x0000000000000003))
(assert (= temp612_207 temp612_206))
(assert (= temp612_208 (select ARGNAME_bias_NAMEEND_DIMSIZE temp612_207)))
(assert (= temp612_209 #x0000000000000004))
(assert (= temp612_210 temp612_209))
(assert (= temp612_211 (select ARGNAME_bias_NAMEEND_DIMSIZE temp612_210)))
(assert (= temp612_212 #x0000000000000005))
(assert (= temp612_213 temp612_212))
(assert (= temp612_214 (select ARGNAME_bias_NAMEEND_DIMSIZE temp612_213)))
(assert (= temp612_215 #x0000000000000000))
(assert (= temp612_216
   (ite (bvslt var1310898 temp612_215)
        (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
        var1310898)))
(assert (= temp612_217 (select ARGNAME_bias_NAMEEND_DIMSIZE temp612_216)))
(assert (= var1322977 temp612_217))
(assert (bvslt (ite (bvslt var1310898 temp612_215)
            (bvadd ARGNAME_bias_NAMEEND_DIM var1310898)
            var1310898)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp612_218 #x0000000000000000))
(assert (= var1310898 temp612_218))
(assert (= temp612_220 var1310898))
(assert (= temp612_221 (select ARGNAME_weight_NAMEEND_DIMSIZE temp612_220)))
(assert (= temp612_219 temp612_221))
(assert (= var1322980
   (ite (= var1322977 temp612_219) #x0000000000000001 #x0000000000000000)))
(assert (= temp612_222 #x0000000000000001))
(assert (= var1322980 temp612_222))
(assert (= temp612_223 #x0000000000000002))
(assert (= var1848169 temp612_223))
(assert (= var1848178 var1848169))
(assert (= var1913913 var1848178))
(assert (= var1913915
   (ite (bvslt var1913913 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_224
   (ite (= var1913915 #x0000000000000001) ARGNAME_input_NAMEEND_DIM var1848178)))
(assert (= var1979456 var1848178))
(assert (= var2045003 var1979456))
(assert (= temp612_225 #x0000000000000001))
(assert (= var1323065 temp612_225))
(assert (= temp612_226 #x0000000000000001))
(assert (= var3486735 temp612_226))
(assert (= temp612_227 #x0000000000000001))
(assert (= var3814415 temp612_227))
(assert (= temp612_228 #x0000000000000003))
(assert (= var79986
   (ite (= ARGNAME_weight_NAMEEND_DIM temp612_228)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_229 #x0000000000000001))
(assert (= var79986 temp612_229))
(assert (= temp612_230 #x0000000000000001))
(assert (= var80116 temp612_230))
(assert (= var4796905 var80116))
(assert (= temp612_231 #x0000000000000000))
(assert (= var4784306 temp612_231))
(assert (= temp612_232 #x0000000000000000))
(assert (= temp612_233
   (ite (bvslt var4784306 temp612_232)
        (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
        var4784306)))
(assert (= temp612_234 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_233)))
(assert (= var4796924 temp612_234))
(assert (bvslt (ite (bvslt var4784306 temp612_232)
            (bvadd ARGNAME_input_NAMEEND_DIM var4784306)
            var4784306)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp612_235 #x0000000000000000))
(assert (= var4796925
   (ite (= var4796924 temp612_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp612_236 #x0000000000000001))
(assert (= var4796925 temp612_236))
(assert (= temp612_237 #x0000000000000000))
(assert (= var4996927 temp612_237))
(assert (= var4996929 var4996927))
(assert (= var4996886 var4996929))
(assert (= var80129 var4996886))
(assert (= temp612_238 #x0000000000000002))
(assert (= var5125763 temp612_238))
(assert (= var5125765 (bvsub ARGNAME_weight_NAMEEND_DIM var5125763)))
(assert (= var5191308 var5125763))
(assert (= var5191309 var5125765))
(assert (= var5191322 (bvadd var5191309 var5191308)))
(assert (= var5191324
   (ite (bvsgt var5191322 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_239 #x0000000000000000))
(assert (= var5191324 temp612_239))
(assert (= var5191349 var5191308))
(assert (= var5191351 var5191309))
(assert (= var5312339 var5191351))
(assert (= var5910928 var80129))
(assert (= temp612_240 #x0000000000000000))
(assert (= var80315
   (ite (distinct ARGNAME_benchmark_NAMEEND temp612_240)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_241 #x0000000000000000))
(assert (= var80317
   (ite (distinct ARGNAME_deterministic_NAMEEND temp612_241)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_242 #x0000000000000000))
(assert (= var80319
   (ite (distinct ARGNAME_allow_tf32_NAMEEND temp612_242)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6831948 var80315))
(assert (= var6831949 var80317))
(assert (= var6831950 var80319))
(assert (= temp612_243 #x0000000000000001))
(assert (= var79986 temp612_243))
(model-add temp612_1 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var79868
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp612_2 () (_ BitVec 64) #x0000000000000003)
(model-add temp612_3 () (_ BitVec 64) #x0000000000000000)
(model-add var79869 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






