(declare-fun temp1000_1 () (_ BitVec 64))
(declare-fun var201290 () (_ BitVec 64))
(declare-fun var201292 () (_ BitVec 64))
(declare-fun temp1000_2 () (_ BitVec 64))
(declare-fun var332362 () (_ BitVec 64))
(declare-fun var332364 () (_ BitVec 64))
(declare-fun temp1000_3 () (_ BitVec 64))
(declare-fun var733184 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_dims_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1000_5 () (_ BitVec 64))
(declare-fun temp1000_4 () (_ BitVec 64))
(declare-fun temp1000_6 () (_ BitVec 64))
(declare-fun var987722 () (_ BitVec 64))
(declare-fun var987724 () (_ BitVec 64))
(declare-fun temp1000_8 () (_ BitVec 64))
(declare-fun temp1000_7 () (_ BitVec 64))
(declare-fun temp1000_9 () (_ BitVec 64))
(declare-fun var1708618 () (_ BitVec 64))
(declare-fun var1708620 () (_ BitVec 64))
(declare-fun temp1000_11 () (_ BitVec 64))
(declare-fun temp1000_10 () (_ BitVec 64))
(declare-fun temp1000_12 () (_ BitVec 64))
(declare-fun var3420718 () (_ BitVec 64))
(declare-fun var3617402 () (_ BitVec 64))
(declare-fun temp1000_14 () (_ BitVec 64))
(declare-fun temp1000_13 () (_ BitVec 64))
(declare-fun var3804482 () (_ BitVec 64))
(declare-fun temp1000_15 () (_ BitVec 64))
(declare-fun temp1000_16 () (_ BitVec 64))
(declare-fun var3870023 () (_ BitVec 64))
(declare-fun var3935570 () (_ BitVec 64))
(assert (= temp1000_1 #x0000000000000005))
(assert (= var201290 temp1000_1))
(assert (= var201292 var201290))
(assert (= temp1000_2 #x0000000000000005))
(assert (= var332362 temp1000_2))
(assert (= var332364 var332362))
(assert (= var733184
   (ite (= ARGNAME_input_NAMEEND_DIM ARGNAME_dims_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_3 #x0000000000000001))
(assert (= var733184 temp1000_3))
(assert (= temp1000_5 #x0000000000000000))
(assert (= temp1000_4 temp1000_5))
(assert (= temp1000_6 #x0000000000000005))
(assert (= var987722 temp1000_6))
(assert (= var987724 var987722))
(assert (= temp1000_8 #x0000000000000000))
(assert (= temp1000_7 temp1000_8))
(assert (= temp1000_9 #x0000000000000005))
(assert (= var1708618 temp1000_9))
(assert (= var1708620 var1708618))
(assert (= temp1000_11 #x0000000000000000))
(assert (= temp1000_10 temp1000_11))
(assert (= temp1000_12 #x0000000000000000))
(assert (= var3420718
   (ite (distinct temp1000_10 temp1000_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var3617402 var3420718))
(assert (= temp1000_14 #x0000000000000000))
(assert (= temp1000_13 temp1000_14))
(assert (= var3804482
   (ite (bvslt temp1000_13 ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_15
   (ite (= var3804482 #x0000000000000001) ARGNAME_input_NAMEEND_DIM temp1000_13)))
(assert (= temp1000_16 #x0000000000000000))
(assert (= var3870023 temp1000_16))
(assert (= var3935570 var3870023))
(model-add temp1000_1 () (_ BitVec 64) #x0000000000000005)
(model-add var201290 () (_ BitVec 64) #x0000000000000005)
(model-add var201292 () (_ BitVec 64) #x0000000000000005)
(model-add temp1000_2 () (_ BitVec 64) #x0000000000000005)
(model-add var332362 () (_ BitVec 64) #x0000000000000005)
(model-add var332364 () (_ BitVec 64) #x0000000000000005)
(model-add temp1000_3 () (_ BitVec 64) #x0000000000000001)
(model-add var733184 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 ARGNAME_dims_NAMEEND_LEN (bvnot ARGNAME_dims_NAMEEND_LEN)))






