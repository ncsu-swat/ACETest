(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var66811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun var66850 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun var66849 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var66855 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun var66875 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun var66876 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000003))
(assert (= var66811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp0_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_2 #x0000000000000000))
(assert (= var66811 temp0_2))
(assert (= temp0_3 #x0000000000000001))
(assert (= var66850 temp0_3))
(assert (= temp0_4 #x0000000000000000))
(assert (= temp0_5 temp0_4))
(assert (= temp0_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_5)))
(assert (= temp0_7 #x0000000000000001))
(assert (= temp0_8 temp0_7))
(assert (= temp0_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_8)))
(assert (= temp0_10 #x0000000000000002))
(assert (= temp0_11 temp0_10))
(assert (= temp0_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_11)))
(assert (= temp0_13 #x0000000000000003))
(assert (= temp0_14 temp0_13))
(assert (= temp0_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_14)))
(assert (= temp0_16 #x0000000000000004))
(assert (= temp0_17 temp0_16))
(assert (= temp0_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_17)))
(assert (= temp0_19 #x0000000000000005))
(assert (= temp0_20 temp0_19))
(assert (= temp0_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_20)))
(assert (= temp0_22 #x0000000000000000))
(assert (= temp0_23
   (ite (bvslt var66850 temp0_22)
        (bvadd ARGNAME_input_NAMEEND_DIM var66850)
        var66850)))
(assert (= temp0_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_23)))
(assert (= var66849 temp0_24))
(assert (bvslt (ite (bvslt var66850 temp0_22)
            (bvadd ARGNAME_input_NAMEEND_DIM var66850)
            var66850)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp0_25 #x0000000000000001))
(assert (= var66855
   (ite (bvslt ARGNAME_groups_NAMEEND temp0_25)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_26 #x0000000000000000))
(assert (= var66855 temp0_26))
(assert (= var66875 (bvsmod var66849 ARGNAME_groups_NAMEEND)))
(assert (= temp0_27 #x0000000000000000))
(assert (= var66876 (ite (= var66875 temp0_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_28 #x0000000000000001))
(assert (= var66876 temp0_28))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000003)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000000)
(model-add var66811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))











