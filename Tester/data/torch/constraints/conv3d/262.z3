(declare-fun temp348_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp348_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp348_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp348_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp348_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp348_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp348_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp348_8 () (_ BitVec 64))
(declare-fun temp348_10 () (_ BitVec 64))
(declare-fun temp348_9 () (_ BitVec 64))
(declare-fun temp348_12 () (_ BitVec 64))
(declare-fun temp348_11 () (_ BitVec 64))
(declare-fun temp348_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp348_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp348_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp348_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp348_17 () (_ BitVec 64))
(declare-fun temp348_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp348_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp348_20 () (_ BitVec 64))
(declare-fun temp348_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp348_22 () (_ BitVec 64))
(declare-fun temp348_23 () (_ BitVec 64))
(declare-fun temp348_24 () (_ BitVec 64))
(declare-fun temp348_25 () (_ BitVec 64))
(declare-fun temp348_26 () (_ BitVec 64))
(declare-fun temp348_27 () (_ BitVec 64))
(declare-fun temp348_28 () (_ BitVec 64))
(declare-fun temp348_29 () (_ BitVec 64))
(declare-fun temp348_30 () (_ BitVec 64))
(declare-fun temp348_31 () (_ BitVec 64))
(declare-fun temp348_32 () (_ BitVec 64))
(declare-fun temp348_33 () (_ BitVec 64))
(declare-fun temp348_34 () (_ BitVec 64))
(declare-fun temp348_35 () (_ BitVec 64))
(declare-fun temp348_36 () (_ BitVec 64))
(declare-fun temp348_37 () (_ BitVec 64))
(declare-fun temp348_38 () (_ BitVec 64))
(declare-fun temp348_39 () (_ BitVec 64))
(declare-fun temp348_40 () (_ BitVec 64))
(declare-fun temp348_41 () (_ BitVec 64))
(declare-fun temp348_42 () (_ BitVec 64))
(declare-fun temp348_43 () (_ BitVec 64))
(declare-fun temp348_44 () (_ BitVec 64))
(declare-fun temp348_45 () (_ BitVec 64))
(declare-fun temp348_46 () (_ BitVec 64))
(declare-fun temp348_47 () (_ BitVec 64))
(declare-fun temp348_48 () (_ BitVec 64))
(declare-fun temp348_49 () (_ BitVec 64))
(declare-fun temp348_50 () (_ BitVec 64))
(declare-fun temp348_51 () (_ BitVec 64))
(declare-fun temp348_52 () (_ BitVec 64))
(declare-fun temp348_53 () (_ BitVec 64))
(declare-fun temp348_54 () (_ BitVec 64))
(declare-fun temp348_55 () (_ BitVec 64))
(declare-fun temp348_56 () (_ BitVec 64))
(declare-fun temp348_57 () (_ BitVec 64))
(declare-fun temp348_58 () (_ BitVec 64))
(declare-fun temp348_59 () (_ BitVec 64))
(declare-fun temp348_60 () (_ BitVec 64))
(declare-fun temp348_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp348_62 () (_ BitVec 64))
(declare-fun temp348_63 () (_ BitVec 64))
(declare-fun temp348_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp348_65 () (_ BitVec 64))
(declare-fun temp348_66 () (_ BitVec 64))
(declare-fun temp348_67 () (_ BitVec 64))
(declare-fun temp348_68 () (_ BitVec 64))
(declare-fun temp348_69 () (_ BitVec 64))
(declare-fun temp348_70 () (_ BitVec 64))
(declare-fun temp348_71 () (_ BitVec 64))
(declare-fun temp348_72 () (_ BitVec 64))
(declare-fun temp348_73 () (_ BitVec 64))
(declare-fun temp348_74 () (_ BitVec 64))
(declare-fun temp348_75 () (_ BitVec 64))
(declare-fun temp348_76 () (_ BitVec 64))
(declare-fun temp348_77 () (_ BitVec 64))
(declare-fun temp348_78 () (_ BitVec 64))
(declare-fun temp348_79 () (_ BitVec 64))
(declare-fun temp348_80 () (_ BitVec 64))
(declare-fun temp348_81 () (_ BitVec 64))
(declare-fun temp348_82 () (_ BitVec 64))
(declare-fun temp348_83 () (_ BitVec 64))
(declare-fun temp348_84 () (_ BitVec 64))
(declare-fun temp348_85 () (_ BitVec 64))
(declare-fun temp348_86 () (_ BitVec 64))
(declare-fun temp348_87 () (_ BitVec 64))
(declare-fun temp348_88 () (_ BitVec 64))
(declare-fun temp348_89 () (_ BitVec 64))
(declare-fun temp348_90 () (_ BitVec 64))
(declare-fun temp348_91 () (_ BitVec 64))
(declare-fun temp348_92 () (_ BitVec 64))
(declare-fun temp348_93 () (_ BitVec 64))
(declare-fun temp348_94 () (_ BitVec 64))
(declare-fun temp348_95 () (_ BitVec 64))
(declare-fun temp348_96 () (_ BitVec 64))
(declare-fun temp348_97 () (_ BitVec 64))
(declare-fun temp348_98 () (_ BitVec 64))
(declare-fun temp348_99 () (_ BitVec 64))
(declare-fun temp348_100 () (_ BitVec 64))
(declare-fun temp348_101 () (_ BitVec 64))
(declare-fun temp348_102 () (_ BitVec 64))
(declare-fun temp348_103 () (_ BitVec 64))
(declare-fun temp348_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp348_105 () (_ BitVec 64))
(declare-fun temp348_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp348_107 () (_ BitVec 64))
(declare-fun temp348_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp348_109 () (_ BitVec 64))
(declare-fun temp348_110 () (_ BitVec 64))
(declare-fun temp348_111 () (_ BitVec 64))
(declare-fun temp348_112 () (_ BitVec 64))
(declare-fun temp348_113 () (_ BitVec 64))
(declare-fun temp348_114 () (_ BitVec 64))
(declare-fun temp348_115 () (_ BitVec 64))
(declare-fun temp348_116 () (_ BitVec 64))
(declare-fun temp348_117 () (_ BitVec 64))
(declare-fun temp348_118 () (_ BitVec 64))
(declare-fun temp348_119 () (_ BitVec 64))
(declare-fun temp348_120 () (_ BitVec 64))
(declare-fun temp348_121 () (_ BitVec 64))
(declare-fun temp348_122 () (_ BitVec 64))
(declare-fun temp348_123 () (_ BitVec 64))
(declare-fun temp348_124 () (_ BitVec 64))
(declare-fun temp348_126 () (_ BitVec 64))
(declare-fun temp348_127 () (_ BitVec 64))
(declare-fun temp348_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp348_128 () (_ BitVec 64))
(declare-fun temp348_129 () (_ BitVec 64))
(declare-fun temp348_131 () (_ BitVec 64))
(declare-fun temp348_132 () (_ BitVec 64))
(declare-fun temp348_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp348_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp348_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp348_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp348_136 () (_ BitVec 64))
(declare-fun temp348_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp348_139 () (_ BitVec 64))
(declare-fun temp348_140 () (_ BitVec 64))
(declare-fun temp348_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp348_141 () (_ BitVec 64))
(declare-fun temp348_143 () (_ BitVec 64))
(declare-fun temp348_144 () (_ BitVec 64))
(declare-fun temp348_142 () (_ BitVec 64))
(declare-fun temp348_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp348_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp348_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp348_148 () (_ BitVec 64))
(declare-fun temp348_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp348_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp348_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun temp348_152 () (_ BitVec 64))
(assert (= temp348_1 #x0000000000000003))
(assert (= var465453 temp348_1))
(assert (= temp348_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp348_2)))
(assert (= temp348_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp348_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp348_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp348_4)))
(assert (= temp348_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp348_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp348_6 #x0000000000000000))
(assert (= var465488 temp348_6))
(assert (= temp348_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp348_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp348_8 #x0000000000000001))
(assert (= var465522 temp348_8))
(assert (= temp348_10 #x0000000000000000))
(assert (= temp348_9 temp348_10))
(assert (= temp348_12 #x0000000000000003))
(assert (= temp348_11 temp348_12))
(assert (= temp348_13 #x0000000000000000))
(assert (= var863614 temp348_13))
(assert (= temp348_14 #x0000000000000001))
(assert (= var863635 temp348_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp348_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp348_15)))
(assert (= temp348_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp348_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_17 #x0000000000000000))
(assert (= var997373 temp348_17))
(assert (= temp348_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp348_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_19 #x0000000000000000))
(assert (= var997418 temp348_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp348_20 #x0000000000000000))
(assert (= temp348_21 temp348_20))
(assert (= temp348_22 (select ARGNAME_padding_NAMEEND_VAL temp348_21)))
(assert (= temp348_23 #x0000000000000001))
(assert (= temp348_24 temp348_23))
(assert (= temp348_25 (select ARGNAME_padding_NAMEEND_VAL temp348_24)))
(assert (= temp348_26 #x0000000000000002))
(assert (= temp348_27 temp348_26))
(assert (= temp348_28 (select ARGNAME_padding_NAMEEND_VAL temp348_27)))
(assert (= temp348_29 #x0000000000000003))
(assert (= temp348_30 temp348_29))
(assert (= temp348_31 (select ARGNAME_padding_NAMEEND_VAL temp348_30)))
(assert (= temp348_32 #x0000000000000004))
(assert (= temp348_33 temp348_32))
(assert (= temp348_34 (select ARGNAME_padding_NAMEEND_VAL temp348_33)))
(assert (= temp348_35 #x0000000000000005))
(assert (= temp348_36 temp348_35))
(assert (= temp348_37 (select ARGNAME_padding_NAMEEND_VAL temp348_36)))
(assert (= temp348_38 #x0000000000000000))
(assert (= temp348_39 #x0000000000000000))
(assert (= temp348_40 temp348_39))
(assert (= temp348_41 (select ARGNAME_padding_NAMEEND_VAL temp348_40)))
(assert (= temp348_42 #x0000000000000000))
(assert (= temp348_43 #x0000000000000001))
(assert (= temp348_44 temp348_43))
(assert (= temp348_45 (select ARGNAME_padding_NAMEEND_VAL temp348_44)))
(assert (= temp348_46 #x0000000000000000))
(assert (= temp348_47 #x0000000000000002))
(assert (= temp348_48 temp348_47))
(assert (= temp348_49 (select ARGNAME_padding_NAMEEND_VAL temp348_48)))
(assert (= temp348_50 #x0000000000000000))
(assert (= temp348_51 #x0000000000000003))
(assert (= temp348_52 temp348_51))
(assert (= temp348_53 (select ARGNAME_padding_NAMEEND_VAL temp348_52)))
(assert (= temp348_54 #x0000000000000000))
(assert (= temp348_55 #x0000000000000004))
(assert (= temp348_56 temp348_55))
(assert (= temp348_57 (select ARGNAME_padding_NAMEEND_VAL temp348_56)))
(assert (= temp348_58 #x0000000000000000))
(assert (= temp348_59 #x0000000000000005))
(assert (= temp348_60 temp348_59))
(assert (= temp348_61 (select ARGNAME_padding_NAMEEND_VAL temp348_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp348_41 temp348_38)
             (bvslt temp348_45 temp348_42)
             (bvslt temp348_49 temp348_46)
             (bvslt temp348_53 temp348_50)
             (bvslt temp348_57 temp348_54)
             (bvslt temp348_61 temp348_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_62 #x0000000000000000))
(assert (= var1716002 temp348_62))
(assert (= temp348_63 #x0000000000000000))
(assert (= temp348_64 temp348_63))
(assert (= temp348_65 (select ARGNAME_stride_NAMEEND_VAL temp348_64)))
(assert (= temp348_66 #x0000000000000001))
(assert (= temp348_67 temp348_66))
(assert (= temp348_68 (select ARGNAME_stride_NAMEEND_VAL temp348_67)))
(assert (= temp348_69 #x0000000000000002))
(assert (= temp348_70 temp348_69))
(assert (= temp348_71 (select ARGNAME_stride_NAMEEND_VAL temp348_70)))
(assert (= temp348_72 #x0000000000000003))
(assert (= temp348_73 temp348_72))
(assert (= temp348_74 (select ARGNAME_stride_NAMEEND_VAL temp348_73)))
(assert (= temp348_75 #x0000000000000004))
(assert (= temp348_76 temp348_75))
(assert (= temp348_77 (select ARGNAME_stride_NAMEEND_VAL temp348_76)))
(assert (= temp348_78 #x0000000000000005))
(assert (= temp348_79 temp348_78))
(assert (= temp348_80 (select ARGNAME_stride_NAMEEND_VAL temp348_79)))
(assert (= temp348_81 #x0000000000000000))
(assert (= temp348_82 #x0000000000000000))
(assert (= temp348_83 temp348_82))
(assert (= temp348_84 (select ARGNAME_stride_NAMEEND_VAL temp348_83)))
(assert (= temp348_85 #x0000000000000000))
(assert (= temp348_86 #x0000000000000001))
(assert (= temp348_87 temp348_86))
(assert (= temp348_88 (select ARGNAME_stride_NAMEEND_VAL temp348_87)))
(assert (= temp348_89 #x0000000000000000))
(assert (= temp348_90 #x0000000000000002))
(assert (= temp348_91 temp348_90))
(assert (= temp348_92 (select ARGNAME_stride_NAMEEND_VAL temp348_91)))
(assert (= temp348_93 #x0000000000000000))
(assert (= temp348_94 #x0000000000000003))
(assert (= temp348_95 temp348_94))
(assert (= temp348_96 (select ARGNAME_stride_NAMEEND_VAL temp348_95)))
(assert (= temp348_97 #x0000000000000000))
(assert (= temp348_98 #x0000000000000004))
(assert (= temp348_99 temp348_98))
(assert (= temp348_100 (select ARGNAME_stride_NAMEEND_VAL temp348_99)))
(assert (= temp348_101 #x0000000000000000))
(assert (= temp348_102 #x0000000000000005))
(assert (= temp348_103 temp348_102))
(assert (= temp348_104 (select ARGNAME_stride_NAMEEND_VAL temp348_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp348_84 temp348_81)
             (bvsle temp348_88 temp348_85)
             (bvsle temp348_92 temp348_89)
             (bvsle temp348_96 temp348_93)
             (bvsle temp348_100 temp348_97)
             (bvsle temp348_104 temp348_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_105 #x0000000000000000))
(assert (= var1716023 temp348_105))
(assert (= temp348_106 #x0000000000000000))
(assert (= var1704114 temp348_106))
(assert (= temp348_107 #x0000000000000000))
(assert (= temp348_108 temp348_107))
(assert (= temp348_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_108)))
(assert (= temp348_110 #x0000000000000001))
(assert (= temp348_111 temp348_110))
(assert (= temp348_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_111)))
(assert (= temp348_113 #x0000000000000002))
(assert (= temp348_114 temp348_113))
(assert (= temp348_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_114)))
(assert (= temp348_116 #x0000000000000003))
(assert (= temp348_117 temp348_116))
(assert (= temp348_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_117)))
(assert (= temp348_119 #x0000000000000004))
(assert (= temp348_120 temp348_119))
(assert (= temp348_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_120)))
(assert (= temp348_122 #x0000000000000005))
(assert (= temp348_123 temp348_122))
(assert (= temp348_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_123)))
(assert (= temp348_126 var1704114))
(assert (= temp348_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_126)))
(assert (= temp348_125 temp348_127))
(assert (= var1716068
   (ite (bvslt temp348_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_128 #x0000000000000000))
(assert (= var1716068 temp348_128))
(assert (= temp348_129 #x0000000000000000))
(assert (= var1704114 temp348_129))
(assert (= temp348_131 var1704114))
(assert (= temp348_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_131)))
(assert (= temp348_130 temp348_132))
(assert (= var1716090 (bvsmod temp348_130 ARGNAME_groups_NAMEEND)))
(assert (= temp348_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp348_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp348_134 #x0000000000000001))
(assert (= var1716091 temp348_134))
(assert (= var1716110 var1716000))
(assert (= temp348_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp348_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp348_136 #x0000000000000001))
(assert (= var1716111 temp348_136))
(assert (= temp348_137 #x0000000000000001))
(assert (= var1705002 temp348_137))
(assert (= temp348_139 var1705002))
(assert (= temp348_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_139)))
(assert (= temp348_138 temp348_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp348_138)))
(assert (= temp348_141 #x0000000000000000))
(assert (= var1704114 temp348_141))
(assert (= temp348_143 var1704114))
(assert (= temp348_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp348_143)))
(assert (= temp348_142 temp348_144))
(assert (= temp348_145 #x0000000000000002))
(assert (= var1979241 temp348_145))
(assert (= temp348_146 #x0000000000000001))
(assert (= var1716281 temp348_146))
(assert (= temp348_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp348_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp348_148 #x0000000000000001))
(assert (= var997490 temp348_148))
(assert (= temp348_149 #x0000000000000001))
(assert (= var997620 temp348_149))
(assert (= var3486185 var997620))
(assert (= temp348_150 #x0000000000000000))
(assert (= var3686207 temp348_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp348_151 #x0000000000000002))
(assert (= var3815043 temp348_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4796816 var997633))
(assert (= var5058960 var997633))
(assert (= temp348_152 #x0000000000000001))
(assert (= var997490 temp348_152))
(model-add temp348_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp348_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp348_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp348_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp348_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp348_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






