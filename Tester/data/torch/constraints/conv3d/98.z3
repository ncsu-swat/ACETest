(declare-fun temp130_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp130_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp130_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp130_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp130_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp130_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp130_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp130_8 () (_ BitVec 64))
(declare-fun temp130_10 () (_ BitVec 64))
(declare-fun temp130_9 () (_ BitVec 64))
(declare-fun temp130_12 () (_ BitVec 64))
(declare-fun temp130_11 () (_ BitVec 64))
(declare-fun temp130_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp130_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp130_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp130_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp130_17 () (_ BitVec 64))
(declare-fun temp130_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp130_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp130_20 () (_ BitVec 64))
(declare-fun temp130_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp130_22 () (_ BitVec 64))
(declare-fun temp130_23 () (_ BitVec 64))
(declare-fun temp130_24 () (_ BitVec 64))
(declare-fun temp130_25 () (_ BitVec 64))
(declare-fun temp130_26 () (_ BitVec 64))
(declare-fun temp130_27 () (_ BitVec 64))
(declare-fun temp130_28 () (_ BitVec 64))
(declare-fun temp130_29 () (_ BitVec 64))
(declare-fun temp130_30 () (_ BitVec 64))
(declare-fun temp130_31 () (_ BitVec 64))
(declare-fun temp130_32 () (_ BitVec 64))
(declare-fun temp130_33 () (_ BitVec 64))
(declare-fun temp130_34 () (_ BitVec 64))
(declare-fun temp130_35 () (_ BitVec 64))
(declare-fun temp130_36 () (_ BitVec 64))
(declare-fun temp130_37 () (_ BitVec 64))
(declare-fun temp130_38 () (_ BitVec 64))
(declare-fun temp130_39 () (_ BitVec 64))
(declare-fun temp130_40 () (_ BitVec 64))
(declare-fun temp130_41 () (_ BitVec 64))
(declare-fun temp130_42 () (_ BitVec 64))
(declare-fun temp130_43 () (_ BitVec 64))
(declare-fun temp130_44 () (_ BitVec 64))
(declare-fun temp130_45 () (_ BitVec 64))
(declare-fun temp130_46 () (_ BitVec 64))
(declare-fun temp130_47 () (_ BitVec 64))
(declare-fun temp130_48 () (_ BitVec 64))
(declare-fun temp130_49 () (_ BitVec 64))
(declare-fun temp130_50 () (_ BitVec 64))
(declare-fun temp130_51 () (_ BitVec 64))
(declare-fun temp130_52 () (_ BitVec 64))
(declare-fun temp130_53 () (_ BitVec 64))
(declare-fun temp130_54 () (_ BitVec 64))
(declare-fun temp130_55 () (_ BitVec 64))
(declare-fun temp130_56 () (_ BitVec 64))
(declare-fun temp130_57 () (_ BitVec 64))
(declare-fun temp130_58 () (_ BitVec 64))
(declare-fun temp130_59 () (_ BitVec 64))
(declare-fun temp130_60 () (_ BitVec 64))
(declare-fun temp130_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp130_62 () (_ BitVec 64))
(declare-fun temp130_63 () (_ BitVec 64))
(declare-fun temp130_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp130_65 () (_ BitVec 64))
(declare-fun temp130_66 () (_ BitVec 64))
(declare-fun temp130_67 () (_ BitVec 64))
(declare-fun temp130_68 () (_ BitVec 64))
(declare-fun temp130_69 () (_ BitVec 64))
(declare-fun temp130_70 () (_ BitVec 64))
(declare-fun temp130_71 () (_ BitVec 64))
(declare-fun temp130_72 () (_ BitVec 64))
(declare-fun temp130_73 () (_ BitVec 64))
(declare-fun temp130_74 () (_ BitVec 64))
(declare-fun temp130_75 () (_ BitVec 64))
(declare-fun temp130_76 () (_ BitVec 64))
(declare-fun temp130_77 () (_ BitVec 64))
(declare-fun temp130_78 () (_ BitVec 64))
(declare-fun temp130_79 () (_ BitVec 64))
(declare-fun temp130_80 () (_ BitVec 64))
(declare-fun temp130_81 () (_ BitVec 64))
(declare-fun temp130_82 () (_ BitVec 64))
(declare-fun temp130_83 () (_ BitVec 64))
(declare-fun temp130_84 () (_ BitVec 64))
(declare-fun temp130_85 () (_ BitVec 64))
(declare-fun temp130_86 () (_ BitVec 64))
(declare-fun temp130_87 () (_ BitVec 64))
(declare-fun temp130_88 () (_ BitVec 64))
(declare-fun temp130_89 () (_ BitVec 64))
(declare-fun temp130_90 () (_ BitVec 64))
(declare-fun temp130_91 () (_ BitVec 64))
(declare-fun temp130_92 () (_ BitVec 64))
(declare-fun temp130_93 () (_ BitVec 64))
(declare-fun temp130_94 () (_ BitVec 64))
(declare-fun temp130_95 () (_ BitVec 64))
(declare-fun temp130_96 () (_ BitVec 64))
(declare-fun temp130_97 () (_ BitVec 64))
(declare-fun temp130_98 () (_ BitVec 64))
(declare-fun temp130_99 () (_ BitVec 64))
(declare-fun temp130_100 () (_ BitVec 64))
(declare-fun temp130_101 () (_ BitVec 64))
(declare-fun temp130_102 () (_ BitVec 64))
(declare-fun temp130_103 () (_ BitVec 64))
(declare-fun temp130_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp130_105 () (_ BitVec 64))
(declare-fun temp130_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp130_107 () (_ BitVec 64))
(declare-fun temp130_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp130_109 () (_ BitVec 64))
(declare-fun temp130_110 () (_ BitVec 64))
(declare-fun temp130_111 () (_ BitVec 64))
(declare-fun temp130_112 () (_ BitVec 64))
(declare-fun temp130_113 () (_ BitVec 64))
(declare-fun temp130_114 () (_ BitVec 64))
(declare-fun temp130_115 () (_ BitVec 64))
(declare-fun temp130_116 () (_ BitVec 64))
(declare-fun temp130_117 () (_ BitVec 64))
(declare-fun temp130_118 () (_ BitVec 64))
(declare-fun temp130_119 () (_ BitVec 64))
(declare-fun temp130_120 () (_ BitVec 64))
(declare-fun temp130_121 () (_ BitVec 64))
(declare-fun temp130_122 () (_ BitVec 64))
(declare-fun temp130_123 () (_ BitVec 64))
(declare-fun temp130_124 () (_ BitVec 64))
(declare-fun temp130_126 () (_ BitVec 64))
(declare-fun temp130_127 () (_ BitVec 64))
(declare-fun temp130_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp130_128 () (_ BitVec 64))
(declare-fun temp130_129 () (_ BitVec 64))
(declare-fun temp130_131 () (_ BitVec 64))
(declare-fun temp130_132 () (_ BitVec 64))
(declare-fun temp130_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp130_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp130_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp130_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp130_136 () (_ BitVec 64))
(declare-fun temp130_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp130_139 () (_ BitVec 64))
(declare-fun temp130_140 () (_ BitVec 64))
(declare-fun temp130_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp130_141 () (_ BitVec 64))
(declare-fun temp130_143 () (_ BitVec 64))
(declare-fun temp130_144 () (_ BitVec 64))
(declare-fun temp130_142 () (_ BitVec 64))
(declare-fun temp130_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp130_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp130_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp130_148 () (_ BitVec 64))
(declare-fun temp130_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp130_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp130_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp130_153 () (_ BitVec 64))
(declare-fun temp130_152 () (_ BitVec 64))
(declare-fun temp130_155 () (_ BitVec 64))
(declare-fun temp130_154 () (_ BitVec 64))
(declare-fun temp130_156 () (_ BitVec 64))
(assert (= temp130_1 #x0000000000000003))
(assert (= var465453 temp130_1))
(assert (= temp130_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp130_2)))
(assert (= temp130_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp130_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp130_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp130_4)))
(assert (= temp130_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp130_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp130_6 #x0000000000000000))
(assert (= var465488 temp130_6))
(assert (= temp130_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp130_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp130_8 #x0000000000000001))
(assert (= var465522 temp130_8))
(assert (= temp130_10 #x0000000000000000))
(assert (= temp130_9 temp130_10))
(assert (= temp130_12 #x0000000000000003))
(assert (= temp130_11 temp130_12))
(assert (= temp130_13 #x0000000000000000))
(assert (= var863614 temp130_13))
(assert (= temp130_14 #x0000000000000001))
(assert (= var863635 temp130_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp130_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp130_15)))
(assert (= temp130_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp130_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_17 #x0000000000000000))
(assert (= var997373 temp130_17))
(assert (= temp130_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp130_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_19 #x0000000000000000))
(assert (= var997418 temp130_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp130_20 #x0000000000000000))
(assert (= temp130_21 temp130_20))
(assert (= temp130_22 (select ARGNAME_padding_NAMEEND_VAL temp130_21)))
(assert (= temp130_23 #x0000000000000001))
(assert (= temp130_24 temp130_23))
(assert (= temp130_25 (select ARGNAME_padding_NAMEEND_VAL temp130_24)))
(assert (= temp130_26 #x0000000000000002))
(assert (= temp130_27 temp130_26))
(assert (= temp130_28 (select ARGNAME_padding_NAMEEND_VAL temp130_27)))
(assert (= temp130_29 #x0000000000000003))
(assert (= temp130_30 temp130_29))
(assert (= temp130_31 (select ARGNAME_padding_NAMEEND_VAL temp130_30)))
(assert (= temp130_32 #x0000000000000004))
(assert (= temp130_33 temp130_32))
(assert (= temp130_34 (select ARGNAME_padding_NAMEEND_VAL temp130_33)))
(assert (= temp130_35 #x0000000000000005))
(assert (= temp130_36 temp130_35))
(assert (= temp130_37 (select ARGNAME_padding_NAMEEND_VAL temp130_36)))
(assert (= temp130_38 #x0000000000000000))
(assert (= temp130_39 #x0000000000000000))
(assert (= temp130_40 temp130_39))
(assert (= temp130_41 (select ARGNAME_padding_NAMEEND_VAL temp130_40)))
(assert (= temp130_42 #x0000000000000000))
(assert (= temp130_43 #x0000000000000001))
(assert (= temp130_44 temp130_43))
(assert (= temp130_45 (select ARGNAME_padding_NAMEEND_VAL temp130_44)))
(assert (= temp130_46 #x0000000000000000))
(assert (= temp130_47 #x0000000000000002))
(assert (= temp130_48 temp130_47))
(assert (= temp130_49 (select ARGNAME_padding_NAMEEND_VAL temp130_48)))
(assert (= temp130_50 #x0000000000000000))
(assert (= temp130_51 #x0000000000000003))
(assert (= temp130_52 temp130_51))
(assert (= temp130_53 (select ARGNAME_padding_NAMEEND_VAL temp130_52)))
(assert (= temp130_54 #x0000000000000000))
(assert (= temp130_55 #x0000000000000004))
(assert (= temp130_56 temp130_55))
(assert (= temp130_57 (select ARGNAME_padding_NAMEEND_VAL temp130_56)))
(assert (= temp130_58 #x0000000000000000))
(assert (= temp130_59 #x0000000000000005))
(assert (= temp130_60 temp130_59))
(assert (= temp130_61 (select ARGNAME_padding_NAMEEND_VAL temp130_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp130_41 temp130_38)
             (bvslt temp130_45 temp130_42)
             (bvslt temp130_49 temp130_46)
             (bvslt temp130_53 temp130_50)
             (bvslt temp130_57 temp130_54)
             (bvslt temp130_61 temp130_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_62 #x0000000000000000))
(assert (= var1716002 temp130_62))
(assert (= temp130_63 #x0000000000000000))
(assert (= temp130_64 temp130_63))
(assert (= temp130_65 (select ARGNAME_stride_NAMEEND_VAL temp130_64)))
(assert (= temp130_66 #x0000000000000001))
(assert (= temp130_67 temp130_66))
(assert (= temp130_68 (select ARGNAME_stride_NAMEEND_VAL temp130_67)))
(assert (= temp130_69 #x0000000000000002))
(assert (= temp130_70 temp130_69))
(assert (= temp130_71 (select ARGNAME_stride_NAMEEND_VAL temp130_70)))
(assert (= temp130_72 #x0000000000000003))
(assert (= temp130_73 temp130_72))
(assert (= temp130_74 (select ARGNAME_stride_NAMEEND_VAL temp130_73)))
(assert (= temp130_75 #x0000000000000004))
(assert (= temp130_76 temp130_75))
(assert (= temp130_77 (select ARGNAME_stride_NAMEEND_VAL temp130_76)))
(assert (= temp130_78 #x0000000000000005))
(assert (= temp130_79 temp130_78))
(assert (= temp130_80 (select ARGNAME_stride_NAMEEND_VAL temp130_79)))
(assert (= temp130_81 #x0000000000000000))
(assert (= temp130_82 #x0000000000000000))
(assert (= temp130_83 temp130_82))
(assert (= temp130_84 (select ARGNAME_stride_NAMEEND_VAL temp130_83)))
(assert (= temp130_85 #x0000000000000000))
(assert (= temp130_86 #x0000000000000001))
(assert (= temp130_87 temp130_86))
(assert (= temp130_88 (select ARGNAME_stride_NAMEEND_VAL temp130_87)))
(assert (= temp130_89 #x0000000000000000))
(assert (= temp130_90 #x0000000000000002))
(assert (= temp130_91 temp130_90))
(assert (= temp130_92 (select ARGNAME_stride_NAMEEND_VAL temp130_91)))
(assert (= temp130_93 #x0000000000000000))
(assert (= temp130_94 #x0000000000000003))
(assert (= temp130_95 temp130_94))
(assert (= temp130_96 (select ARGNAME_stride_NAMEEND_VAL temp130_95)))
(assert (= temp130_97 #x0000000000000000))
(assert (= temp130_98 #x0000000000000004))
(assert (= temp130_99 temp130_98))
(assert (= temp130_100 (select ARGNAME_stride_NAMEEND_VAL temp130_99)))
(assert (= temp130_101 #x0000000000000000))
(assert (= temp130_102 #x0000000000000005))
(assert (= temp130_103 temp130_102))
(assert (= temp130_104 (select ARGNAME_stride_NAMEEND_VAL temp130_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp130_84 temp130_81)
             (bvsle temp130_88 temp130_85)
             (bvsle temp130_92 temp130_89)
             (bvsle temp130_96 temp130_93)
             (bvsle temp130_100 temp130_97)
             (bvsle temp130_104 temp130_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_105 #x0000000000000000))
(assert (= var1716023 temp130_105))
(assert (= temp130_106 #x0000000000000000))
(assert (= var1704114 temp130_106))
(assert (= temp130_107 #x0000000000000000))
(assert (= temp130_108 temp130_107))
(assert (= temp130_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_108)))
(assert (= temp130_110 #x0000000000000001))
(assert (= temp130_111 temp130_110))
(assert (= temp130_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_111)))
(assert (= temp130_113 #x0000000000000002))
(assert (= temp130_114 temp130_113))
(assert (= temp130_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_114)))
(assert (= temp130_116 #x0000000000000003))
(assert (= temp130_117 temp130_116))
(assert (= temp130_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_117)))
(assert (= temp130_119 #x0000000000000004))
(assert (= temp130_120 temp130_119))
(assert (= temp130_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_120)))
(assert (= temp130_122 #x0000000000000005))
(assert (= temp130_123 temp130_122))
(assert (= temp130_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_123)))
(assert (= temp130_126 var1704114))
(assert (= temp130_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_126)))
(assert (= temp130_125 temp130_127))
(assert (= var1716068
   (ite (bvslt temp130_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_128 #x0000000000000000))
(assert (= var1716068 temp130_128))
(assert (= temp130_129 #x0000000000000000))
(assert (= var1704114 temp130_129))
(assert (= temp130_131 var1704114))
(assert (= temp130_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_131)))
(assert (= temp130_130 temp130_132))
(assert (= var1716090 (bvsmod temp130_130 ARGNAME_groups_NAMEEND)))
(assert (= temp130_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp130_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp130_134 #x0000000000000001))
(assert (= var1716091 temp130_134))
(assert (= var1716110 var1716000))
(assert (= temp130_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp130_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp130_136 #x0000000000000001))
(assert (= var1716111 temp130_136))
(assert (= temp130_137 #x0000000000000001))
(assert (= var1705002 temp130_137))
(assert (= temp130_139 var1705002))
(assert (= temp130_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_139)))
(assert (= temp130_138 temp130_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp130_138)))
(assert (= temp130_141 #x0000000000000000))
(assert (= var1704114 temp130_141))
(assert (= temp130_143 var1704114))
(assert (= temp130_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp130_143)))
(assert (= temp130_142 temp130_144))
(assert (= temp130_145 #x0000000000000002))
(assert (= var1979241 temp130_145))
(assert (= temp130_146 #x0000000000000001))
(assert (= var1716281 temp130_146))
(assert (= temp130_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp130_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp130_148 #x0000000000000001))
(assert (= var997490 temp130_148))
(assert (= temp130_149 #x0000000000000001))
(assert (= var997620 temp130_149))
(assert (= var3486185 var997620))
(assert (= temp130_150 #x0000000000000000))
(assert (= var3686207 temp130_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp130_151 #x0000000000000002))
(assert (= var3815043 temp130_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp130_153 #xffffffffffffffff))
(assert (= temp130_152 temp130_153))
(assert (= temp130_155 #xffffffffffffffff))
(assert (= temp130_154 temp130_155))
(assert (= temp130_156 #x0000000000000001))
(assert (= var997490 temp130_156))
(model-add temp130_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp130_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp130_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp130_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp130_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp130_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






