(declare-fun temp444_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp444_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp444_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp444_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp444_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp444_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp444_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp444_8 () (_ BitVec 64))
(declare-fun temp444_10 () (_ BitVec 64))
(declare-fun temp444_9 () (_ BitVec 64))
(declare-fun temp444_12 () (_ BitVec 64))
(declare-fun temp444_11 () (_ BitVec 64))
(declare-fun temp444_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp444_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp444_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp444_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp444_17 () (_ BitVec 64))
(declare-fun temp444_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp444_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp444_20 () (_ BitVec 64))
(declare-fun temp444_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_22 () (_ BitVec 64))
(declare-fun temp444_23 () (_ BitVec 64))
(declare-fun temp444_24 () (_ BitVec 64))
(declare-fun temp444_25 () (_ BitVec 64))
(declare-fun temp444_26 () (_ BitVec 64))
(declare-fun temp444_27 () (_ BitVec 64))
(declare-fun temp444_28 () (_ BitVec 64))
(declare-fun temp444_29 () (_ BitVec 64))
(declare-fun temp444_30 () (_ BitVec 64))
(declare-fun temp444_31 () (_ BitVec 64))
(declare-fun temp444_32 () (_ BitVec 64))
(declare-fun temp444_33 () (_ BitVec 64))
(declare-fun temp444_34 () (_ BitVec 64))
(declare-fun temp444_35 () (_ BitVec 64))
(declare-fun temp444_36 () (_ BitVec 64))
(declare-fun temp444_37 () (_ BitVec 64))
(declare-fun temp444_38 () (_ BitVec 64))
(declare-fun temp444_39 () (_ BitVec 64))
(declare-fun temp444_40 () (_ BitVec 64))
(declare-fun temp444_41 () (_ BitVec 64))
(declare-fun temp444_42 () (_ BitVec 64))
(declare-fun temp444_43 () (_ BitVec 64))
(declare-fun temp444_44 () (_ BitVec 64))
(declare-fun temp444_45 () (_ BitVec 64))
(declare-fun temp444_46 () (_ BitVec 64))
(declare-fun temp444_47 () (_ BitVec 64))
(declare-fun temp444_48 () (_ BitVec 64))
(declare-fun temp444_49 () (_ BitVec 64))
(declare-fun temp444_50 () (_ BitVec 64))
(declare-fun temp444_51 () (_ BitVec 64))
(declare-fun temp444_52 () (_ BitVec 64))
(declare-fun temp444_53 () (_ BitVec 64))
(declare-fun temp444_54 () (_ BitVec 64))
(declare-fun temp444_55 () (_ BitVec 64))
(declare-fun temp444_56 () (_ BitVec 64))
(declare-fun temp444_57 () (_ BitVec 64))
(declare-fun temp444_58 () (_ BitVec 64))
(declare-fun temp444_59 () (_ BitVec 64))
(declare-fun temp444_60 () (_ BitVec 64))
(declare-fun temp444_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp444_62 () (_ BitVec 64))
(declare-fun temp444_63 () (_ BitVec 64))
(declare-fun temp444_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_65 () (_ BitVec 64))
(declare-fun temp444_66 () (_ BitVec 64))
(declare-fun temp444_67 () (_ BitVec 64))
(declare-fun temp444_68 () (_ BitVec 64))
(declare-fun temp444_69 () (_ BitVec 64))
(declare-fun temp444_70 () (_ BitVec 64))
(declare-fun temp444_71 () (_ BitVec 64))
(declare-fun temp444_72 () (_ BitVec 64))
(declare-fun temp444_73 () (_ BitVec 64))
(declare-fun temp444_74 () (_ BitVec 64))
(declare-fun temp444_75 () (_ BitVec 64))
(declare-fun temp444_76 () (_ BitVec 64))
(declare-fun temp444_77 () (_ BitVec 64))
(declare-fun temp444_78 () (_ BitVec 64))
(declare-fun temp444_79 () (_ BitVec 64))
(declare-fun temp444_80 () (_ BitVec 64))
(declare-fun temp444_81 () (_ BitVec 64))
(declare-fun temp444_82 () (_ BitVec 64))
(declare-fun temp444_83 () (_ BitVec 64))
(declare-fun temp444_84 () (_ BitVec 64))
(declare-fun temp444_85 () (_ BitVec 64))
(declare-fun temp444_86 () (_ BitVec 64))
(declare-fun temp444_87 () (_ BitVec 64))
(declare-fun temp444_88 () (_ BitVec 64))
(declare-fun temp444_89 () (_ BitVec 64))
(declare-fun temp444_90 () (_ BitVec 64))
(declare-fun temp444_91 () (_ BitVec 64))
(declare-fun temp444_92 () (_ BitVec 64))
(declare-fun temp444_93 () (_ BitVec 64))
(declare-fun temp444_94 () (_ BitVec 64))
(declare-fun temp444_95 () (_ BitVec 64))
(declare-fun temp444_96 () (_ BitVec 64))
(declare-fun temp444_97 () (_ BitVec 64))
(declare-fun temp444_98 () (_ BitVec 64))
(declare-fun temp444_99 () (_ BitVec 64))
(declare-fun temp444_100 () (_ BitVec 64))
(declare-fun temp444_101 () (_ BitVec 64))
(declare-fun temp444_102 () (_ BitVec 64))
(declare-fun temp444_103 () (_ BitVec 64))
(declare-fun temp444_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp444_105 () (_ BitVec 64))
(declare-fun temp444_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp444_107 () (_ BitVec 64))
(declare-fun temp444_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_109 () (_ BitVec 64))
(declare-fun temp444_110 () (_ BitVec 64))
(declare-fun temp444_111 () (_ BitVec 64))
(declare-fun temp444_112 () (_ BitVec 64))
(declare-fun temp444_113 () (_ BitVec 64))
(declare-fun temp444_114 () (_ BitVec 64))
(declare-fun temp444_115 () (_ BitVec 64))
(declare-fun temp444_116 () (_ BitVec 64))
(declare-fun temp444_117 () (_ BitVec 64))
(declare-fun temp444_118 () (_ BitVec 64))
(declare-fun temp444_119 () (_ BitVec 64))
(declare-fun temp444_120 () (_ BitVec 64))
(declare-fun temp444_121 () (_ BitVec 64))
(declare-fun temp444_122 () (_ BitVec 64))
(declare-fun temp444_123 () (_ BitVec 64))
(declare-fun temp444_124 () (_ BitVec 64))
(declare-fun temp444_126 () (_ BitVec 64))
(declare-fun temp444_127 () (_ BitVec 64))
(declare-fun temp444_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp444_128 () (_ BitVec 64))
(declare-fun temp444_129 () (_ BitVec 64))
(declare-fun temp444_131 () (_ BitVec 64))
(declare-fun temp444_132 () (_ BitVec 64))
(declare-fun temp444_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp444_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp444_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp444_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp444_136 () (_ BitVec 64))
(declare-fun temp444_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp444_139 () (_ BitVec 64))
(declare-fun temp444_140 () (_ BitVec 64))
(declare-fun temp444_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp444_141 () (_ BitVec 64))
(declare-fun temp444_143 () (_ BitVec 64))
(declare-fun temp444_144 () (_ BitVec 64))
(declare-fun temp444_142 () (_ BitVec 64))
(declare-fun temp444_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp444_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp444_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp444_148 () (_ BitVec 64))
(declare-fun temp444_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp444_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp444_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp444_152 () (_ BitVec 64))
(assert (= temp444_1 #x0000000000000003))
(assert (= var465453 temp444_1))
(assert (= temp444_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp444_2)))
(assert (= temp444_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp444_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp444_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp444_4)))
(assert (= temp444_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp444_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp444_6 #x0000000000000000))
(assert (= var465488 temp444_6))
(assert (= temp444_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp444_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_8 #x0000000000000001))
(assert (= var465522 temp444_8))
(assert (= temp444_10 #x0000000000000000))
(assert (= temp444_9 temp444_10))
(assert (= temp444_12 #x0000000000000003))
(assert (= temp444_11 temp444_12))
(assert (= temp444_13 #x0000000000000000))
(assert (= var863614 temp444_13))
(assert (= temp444_14 #x0000000000000001))
(assert (= var863635 temp444_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp444_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp444_15)))
(assert (= temp444_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp444_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_17 #x0000000000000000))
(assert (= var997373 temp444_17))
(assert (= temp444_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp444_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_19 #x0000000000000000))
(assert (= var997418 temp444_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp444_20 #x0000000000000000))
(assert (= temp444_21 temp444_20))
(assert (= temp444_22 (select ARGNAME_padding_NAMEEND_VAL temp444_21)))
(assert (= temp444_23 #x0000000000000001))
(assert (= temp444_24 temp444_23))
(assert (= temp444_25 (select ARGNAME_padding_NAMEEND_VAL temp444_24)))
(assert (= temp444_26 #x0000000000000002))
(assert (= temp444_27 temp444_26))
(assert (= temp444_28 (select ARGNAME_padding_NAMEEND_VAL temp444_27)))
(assert (= temp444_29 #x0000000000000003))
(assert (= temp444_30 temp444_29))
(assert (= temp444_31 (select ARGNAME_padding_NAMEEND_VAL temp444_30)))
(assert (= temp444_32 #x0000000000000004))
(assert (= temp444_33 temp444_32))
(assert (= temp444_34 (select ARGNAME_padding_NAMEEND_VAL temp444_33)))
(assert (= temp444_35 #x0000000000000005))
(assert (= temp444_36 temp444_35))
(assert (= temp444_37 (select ARGNAME_padding_NAMEEND_VAL temp444_36)))
(assert (= temp444_38 #x0000000000000000))
(assert (= temp444_39 #x0000000000000000))
(assert (= temp444_40 temp444_39))
(assert (= temp444_41 (select ARGNAME_padding_NAMEEND_VAL temp444_40)))
(assert (= temp444_42 #x0000000000000000))
(assert (= temp444_43 #x0000000000000001))
(assert (= temp444_44 temp444_43))
(assert (= temp444_45 (select ARGNAME_padding_NAMEEND_VAL temp444_44)))
(assert (= temp444_46 #x0000000000000000))
(assert (= temp444_47 #x0000000000000002))
(assert (= temp444_48 temp444_47))
(assert (= temp444_49 (select ARGNAME_padding_NAMEEND_VAL temp444_48)))
(assert (= temp444_50 #x0000000000000000))
(assert (= temp444_51 #x0000000000000003))
(assert (= temp444_52 temp444_51))
(assert (= temp444_53 (select ARGNAME_padding_NAMEEND_VAL temp444_52)))
(assert (= temp444_54 #x0000000000000000))
(assert (= temp444_55 #x0000000000000004))
(assert (= temp444_56 temp444_55))
(assert (= temp444_57 (select ARGNAME_padding_NAMEEND_VAL temp444_56)))
(assert (= temp444_58 #x0000000000000000))
(assert (= temp444_59 #x0000000000000005))
(assert (= temp444_60 temp444_59))
(assert (= temp444_61 (select ARGNAME_padding_NAMEEND_VAL temp444_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp444_41 temp444_38)
             (bvslt temp444_45 temp444_42)
             (bvslt temp444_49 temp444_46)
             (bvslt temp444_53 temp444_50)
             (bvslt temp444_57 temp444_54)
             (bvslt temp444_61 temp444_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_62 #x0000000000000000))
(assert (= var1716002 temp444_62))
(assert (= temp444_63 #x0000000000000000))
(assert (= temp444_64 temp444_63))
(assert (= temp444_65 (select ARGNAME_stride_NAMEEND_VAL temp444_64)))
(assert (= temp444_66 #x0000000000000001))
(assert (= temp444_67 temp444_66))
(assert (= temp444_68 (select ARGNAME_stride_NAMEEND_VAL temp444_67)))
(assert (= temp444_69 #x0000000000000002))
(assert (= temp444_70 temp444_69))
(assert (= temp444_71 (select ARGNAME_stride_NAMEEND_VAL temp444_70)))
(assert (= temp444_72 #x0000000000000003))
(assert (= temp444_73 temp444_72))
(assert (= temp444_74 (select ARGNAME_stride_NAMEEND_VAL temp444_73)))
(assert (= temp444_75 #x0000000000000004))
(assert (= temp444_76 temp444_75))
(assert (= temp444_77 (select ARGNAME_stride_NAMEEND_VAL temp444_76)))
(assert (= temp444_78 #x0000000000000005))
(assert (= temp444_79 temp444_78))
(assert (= temp444_80 (select ARGNAME_stride_NAMEEND_VAL temp444_79)))
(assert (= temp444_81 #x0000000000000000))
(assert (= temp444_82 #x0000000000000000))
(assert (= temp444_83 temp444_82))
(assert (= temp444_84 (select ARGNAME_stride_NAMEEND_VAL temp444_83)))
(assert (= temp444_85 #x0000000000000000))
(assert (= temp444_86 #x0000000000000001))
(assert (= temp444_87 temp444_86))
(assert (= temp444_88 (select ARGNAME_stride_NAMEEND_VAL temp444_87)))
(assert (= temp444_89 #x0000000000000000))
(assert (= temp444_90 #x0000000000000002))
(assert (= temp444_91 temp444_90))
(assert (= temp444_92 (select ARGNAME_stride_NAMEEND_VAL temp444_91)))
(assert (= temp444_93 #x0000000000000000))
(assert (= temp444_94 #x0000000000000003))
(assert (= temp444_95 temp444_94))
(assert (= temp444_96 (select ARGNAME_stride_NAMEEND_VAL temp444_95)))
(assert (= temp444_97 #x0000000000000000))
(assert (= temp444_98 #x0000000000000004))
(assert (= temp444_99 temp444_98))
(assert (= temp444_100 (select ARGNAME_stride_NAMEEND_VAL temp444_99)))
(assert (= temp444_101 #x0000000000000000))
(assert (= temp444_102 #x0000000000000005))
(assert (= temp444_103 temp444_102))
(assert (= temp444_104 (select ARGNAME_stride_NAMEEND_VAL temp444_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp444_84 temp444_81)
             (bvsle temp444_88 temp444_85)
             (bvsle temp444_92 temp444_89)
             (bvsle temp444_96 temp444_93)
             (bvsle temp444_100 temp444_97)
             (bvsle temp444_104 temp444_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_105 #x0000000000000000))
(assert (= var1716023 temp444_105))
(assert (= temp444_106 #x0000000000000000))
(assert (= var1704114 temp444_106))
(assert (= temp444_107 #x0000000000000000))
(assert (= temp444_108 temp444_107))
(assert (= temp444_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_108)))
(assert (= temp444_110 #x0000000000000001))
(assert (= temp444_111 temp444_110))
(assert (= temp444_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_111)))
(assert (= temp444_113 #x0000000000000002))
(assert (= temp444_114 temp444_113))
(assert (= temp444_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_114)))
(assert (= temp444_116 #x0000000000000003))
(assert (= temp444_117 temp444_116))
(assert (= temp444_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_117)))
(assert (= temp444_119 #x0000000000000004))
(assert (= temp444_120 temp444_119))
(assert (= temp444_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_120)))
(assert (= temp444_122 #x0000000000000005))
(assert (= temp444_123 temp444_122))
(assert (= temp444_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_123)))
(assert (= temp444_126 var1704114))
(assert (= temp444_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_126)))
(assert (= temp444_125 temp444_127))
(assert (= var1716068
   (ite (bvslt temp444_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_128 #x0000000000000000))
(assert (= var1716068 temp444_128))
(assert (= temp444_129 #x0000000000000000))
(assert (= var1704114 temp444_129))
(assert (= temp444_131 var1704114))
(assert (= temp444_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_131)))
(assert (= temp444_130 temp444_132))
(assert (= var1716090 (bvsmod temp444_130 ARGNAME_groups_NAMEEND)))
(assert (= temp444_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp444_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_134 #x0000000000000001))
(assert (= var1716091 temp444_134))
(assert (= var1716110 var1716000))
(assert (= temp444_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp444_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_136 #x0000000000000001))
(assert (= var1716111 temp444_136))
(assert (= temp444_137 #x0000000000000001))
(assert (= var1705002 temp444_137))
(assert (= temp444_139 var1705002))
(assert (= temp444_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_139)))
(assert (= temp444_138 temp444_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp444_138)))
(assert (= temp444_141 #x0000000000000000))
(assert (= var1704114 temp444_141))
(assert (= temp444_143 var1704114))
(assert (= temp444_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_143)))
(assert (= temp444_142 temp444_144))
(assert (= temp444_145 #x0000000000000002))
(assert (= var1979241 temp444_145))
(assert (= temp444_146 #x0000000000000001))
(assert (= var1716281 temp444_146))
(assert (= temp444_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp444_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_148 #x0000000000000001))
(assert (= var997490 temp444_148))
(assert (= temp444_149 #x0000000000000001))
(assert (= var997620 temp444_149))
(assert (= var3486185 var997620))
(assert (= temp444_150 #x0000000000000000))
(assert (= var3686207 temp444_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp444_151 #x0000000000000002))
(assert (= var3815043 temp444_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp444_152 #x0000000000000001))
(assert (= var997490 temp444_152))
(model-add temp444_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp444_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp444_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp444_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp444_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp444_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






