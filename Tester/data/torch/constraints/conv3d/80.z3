(declare-fun temp106_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp106_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp106_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp106_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp106_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp106_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp106_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp106_8 () (_ BitVec 64))
(declare-fun temp106_10 () (_ BitVec 64))
(declare-fun temp106_9 () (_ BitVec 64))
(declare-fun temp106_12 () (_ BitVec 64))
(declare-fun temp106_11 () (_ BitVec 64))
(declare-fun temp106_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp106_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp106_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp106_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp106_17 () (_ BitVec 64))
(declare-fun temp106_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp106_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp106_20 () (_ BitVec 64))
(declare-fun temp106_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp106_22 () (_ BitVec 64))
(declare-fun temp106_23 () (_ BitVec 64))
(declare-fun temp106_24 () (_ BitVec 64))
(declare-fun temp106_25 () (_ BitVec 64))
(declare-fun temp106_26 () (_ BitVec 64))
(declare-fun temp106_27 () (_ BitVec 64))
(declare-fun temp106_28 () (_ BitVec 64))
(declare-fun temp106_29 () (_ BitVec 64))
(declare-fun temp106_30 () (_ BitVec 64))
(declare-fun temp106_31 () (_ BitVec 64))
(declare-fun temp106_32 () (_ BitVec 64))
(declare-fun temp106_33 () (_ BitVec 64))
(declare-fun temp106_34 () (_ BitVec 64))
(declare-fun temp106_35 () (_ BitVec 64))
(declare-fun temp106_36 () (_ BitVec 64))
(declare-fun temp106_37 () (_ BitVec 64))
(declare-fun temp106_38 () (_ BitVec 64))
(declare-fun temp106_39 () (_ BitVec 64))
(declare-fun temp106_40 () (_ BitVec 64))
(declare-fun temp106_41 () (_ BitVec 64))
(declare-fun temp106_42 () (_ BitVec 64))
(declare-fun temp106_43 () (_ BitVec 64))
(declare-fun temp106_44 () (_ BitVec 64))
(declare-fun temp106_45 () (_ BitVec 64))
(declare-fun temp106_46 () (_ BitVec 64))
(declare-fun temp106_47 () (_ BitVec 64))
(declare-fun temp106_48 () (_ BitVec 64))
(declare-fun temp106_49 () (_ BitVec 64))
(declare-fun temp106_50 () (_ BitVec 64))
(declare-fun temp106_51 () (_ BitVec 64))
(declare-fun temp106_52 () (_ BitVec 64))
(declare-fun temp106_53 () (_ BitVec 64))
(declare-fun temp106_54 () (_ BitVec 64))
(declare-fun temp106_55 () (_ BitVec 64))
(declare-fun temp106_56 () (_ BitVec 64))
(declare-fun temp106_57 () (_ BitVec 64))
(declare-fun temp106_58 () (_ BitVec 64))
(declare-fun temp106_59 () (_ BitVec 64))
(declare-fun temp106_60 () (_ BitVec 64))
(declare-fun temp106_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp106_62 () (_ BitVec 64))
(declare-fun temp106_63 () (_ BitVec 64))
(declare-fun temp106_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp106_65 () (_ BitVec 64))
(declare-fun temp106_66 () (_ BitVec 64))
(declare-fun temp106_67 () (_ BitVec 64))
(declare-fun temp106_68 () (_ BitVec 64))
(declare-fun temp106_69 () (_ BitVec 64))
(declare-fun temp106_70 () (_ BitVec 64))
(declare-fun temp106_71 () (_ BitVec 64))
(declare-fun temp106_72 () (_ BitVec 64))
(declare-fun temp106_73 () (_ BitVec 64))
(declare-fun temp106_74 () (_ BitVec 64))
(declare-fun temp106_75 () (_ BitVec 64))
(declare-fun temp106_76 () (_ BitVec 64))
(declare-fun temp106_77 () (_ BitVec 64))
(declare-fun temp106_78 () (_ BitVec 64))
(declare-fun temp106_79 () (_ BitVec 64))
(declare-fun temp106_80 () (_ BitVec 64))
(declare-fun temp106_81 () (_ BitVec 64))
(declare-fun temp106_82 () (_ BitVec 64))
(declare-fun temp106_83 () (_ BitVec 64))
(declare-fun temp106_84 () (_ BitVec 64))
(declare-fun temp106_85 () (_ BitVec 64))
(declare-fun temp106_86 () (_ BitVec 64))
(declare-fun temp106_87 () (_ BitVec 64))
(declare-fun temp106_88 () (_ BitVec 64))
(declare-fun temp106_89 () (_ BitVec 64))
(declare-fun temp106_90 () (_ BitVec 64))
(declare-fun temp106_91 () (_ BitVec 64))
(declare-fun temp106_92 () (_ BitVec 64))
(declare-fun temp106_93 () (_ BitVec 64))
(declare-fun temp106_94 () (_ BitVec 64))
(declare-fun temp106_95 () (_ BitVec 64))
(declare-fun temp106_96 () (_ BitVec 64))
(declare-fun temp106_97 () (_ BitVec 64))
(declare-fun temp106_98 () (_ BitVec 64))
(declare-fun temp106_99 () (_ BitVec 64))
(declare-fun temp106_100 () (_ BitVec 64))
(declare-fun temp106_101 () (_ BitVec 64))
(declare-fun temp106_102 () (_ BitVec 64))
(declare-fun temp106_103 () (_ BitVec 64))
(declare-fun temp106_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp106_105 () (_ BitVec 64))
(declare-fun temp106_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp106_107 () (_ BitVec 64))
(declare-fun temp106_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp106_109 () (_ BitVec 64))
(declare-fun temp106_110 () (_ BitVec 64))
(declare-fun temp106_111 () (_ BitVec 64))
(declare-fun temp106_112 () (_ BitVec 64))
(declare-fun temp106_113 () (_ BitVec 64))
(declare-fun temp106_114 () (_ BitVec 64))
(declare-fun temp106_115 () (_ BitVec 64))
(declare-fun temp106_116 () (_ BitVec 64))
(declare-fun temp106_117 () (_ BitVec 64))
(declare-fun temp106_118 () (_ BitVec 64))
(declare-fun temp106_119 () (_ BitVec 64))
(declare-fun temp106_120 () (_ BitVec 64))
(declare-fun temp106_121 () (_ BitVec 64))
(declare-fun temp106_122 () (_ BitVec 64))
(declare-fun temp106_123 () (_ BitVec 64))
(declare-fun temp106_124 () (_ BitVec 64))
(declare-fun temp106_126 () (_ BitVec 64))
(declare-fun temp106_127 () (_ BitVec 64))
(declare-fun temp106_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp106_128 () (_ BitVec 64))
(declare-fun temp106_129 () (_ BitVec 64))
(declare-fun temp106_131 () (_ BitVec 64))
(declare-fun temp106_132 () (_ BitVec 64))
(declare-fun temp106_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp106_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp106_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp106_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp106_136 () (_ BitVec 64))
(declare-fun temp106_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp106_139 () (_ BitVec 64))
(declare-fun temp106_140 () (_ BitVec 64))
(declare-fun temp106_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp106_141 () (_ BitVec 64))
(declare-fun temp106_143 () (_ BitVec 64))
(declare-fun temp106_144 () (_ BitVec 64))
(declare-fun temp106_142 () (_ BitVec 64))
(declare-fun temp106_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp106_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp106_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp106_148 () (_ BitVec 64))
(declare-fun temp106_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp106_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp106_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp106_153 () (_ BitVec 64))
(declare-fun temp106_152 () (_ BitVec 64))
(declare-fun temp106_155 () (_ BitVec 64))
(declare-fun temp106_154 () (_ BitVec 64))
(declare-fun temp106_156 () (_ BitVec 64))
(assert (= temp106_1 #x0000000000000003))
(assert (= var465453 temp106_1))
(assert (= temp106_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp106_2)))
(assert (= temp106_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp106_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp106_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp106_4)))
(assert (= temp106_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp106_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp106_6 #x0000000000000000))
(assert (= var465488 temp106_6))
(assert (= temp106_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp106_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp106_8 #x0000000000000001))
(assert (= var465522 temp106_8))
(assert (= temp106_10 #x0000000000000000))
(assert (= temp106_9 temp106_10))
(assert (= temp106_12 #x0000000000000003))
(assert (= temp106_11 temp106_12))
(assert (= temp106_13 #x0000000000000000))
(assert (= var863614 temp106_13))
(assert (= temp106_14 #x0000000000000001))
(assert (= var863635 temp106_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp106_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp106_15)))
(assert (= temp106_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp106_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_17 #x0000000000000000))
(assert (= var997373 temp106_17))
(assert (= temp106_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp106_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_19 #x0000000000000000))
(assert (= var997418 temp106_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp106_20 #x0000000000000000))
(assert (= temp106_21 temp106_20))
(assert (= temp106_22 (select ARGNAME_padding_NAMEEND_VAL temp106_21)))
(assert (= temp106_23 #x0000000000000001))
(assert (= temp106_24 temp106_23))
(assert (= temp106_25 (select ARGNAME_padding_NAMEEND_VAL temp106_24)))
(assert (= temp106_26 #x0000000000000002))
(assert (= temp106_27 temp106_26))
(assert (= temp106_28 (select ARGNAME_padding_NAMEEND_VAL temp106_27)))
(assert (= temp106_29 #x0000000000000003))
(assert (= temp106_30 temp106_29))
(assert (= temp106_31 (select ARGNAME_padding_NAMEEND_VAL temp106_30)))
(assert (= temp106_32 #x0000000000000004))
(assert (= temp106_33 temp106_32))
(assert (= temp106_34 (select ARGNAME_padding_NAMEEND_VAL temp106_33)))
(assert (= temp106_35 #x0000000000000005))
(assert (= temp106_36 temp106_35))
(assert (= temp106_37 (select ARGNAME_padding_NAMEEND_VAL temp106_36)))
(assert (= temp106_38 #x0000000000000000))
(assert (= temp106_39 #x0000000000000000))
(assert (= temp106_40 temp106_39))
(assert (= temp106_41 (select ARGNAME_padding_NAMEEND_VAL temp106_40)))
(assert (= temp106_42 #x0000000000000000))
(assert (= temp106_43 #x0000000000000001))
(assert (= temp106_44 temp106_43))
(assert (= temp106_45 (select ARGNAME_padding_NAMEEND_VAL temp106_44)))
(assert (= temp106_46 #x0000000000000000))
(assert (= temp106_47 #x0000000000000002))
(assert (= temp106_48 temp106_47))
(assert (= temp106_49 (select ARGNAME_padding_NAMEEND_VAL temp106_48)))
(assert (= temp106_50 #x0000000000000000))
(assert (= temp106_51 #x0000000000000003))
(assert (= temp106_52 temp106_51))
(assert (= temp106_53 (select ARGNAME_padding_NAMEEND_VAL temp106_52)))
(assert (= temp106_54 #x0000000000000000))
(assert (= temp106_55 #x0000000000000004))
(assert (= temp106_56 temp106_55))
(assert (= temp106_57 (select ARGNAME_padding_NAMEEND_VAL temp106_56)))
(assert (= temp106_58 #x0000000000000000))
(assert (= temp106_59 #x0000000000000005))
(assert (= temp106_60 temp106_59))
(assert (= temp106_61 (select ARGNAME_padding_NAMEEND_VAL temp106_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp106_41 temp106_38)
             (bvslt temp106_45 temp106_42)
             (bvslt temp106_49 temp106_46)
             (bvslt temp106_53 temp106_50)
             (bvslt temp106_57 temp106_54)
             (bvslt temp106_61 temp106_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_62 #x0000000000000000))
(assert (= var1716002 temp106_62))
(assert (= temp106_63 #x0000000000000000))
(assert (= temp106_64 temp106_63))
(assert (= temp106_65 (select ARGNAME_stride_NAMEEND_VAL temp106_64)))
(assert (= temp106_66 #x0000000000000001))
(assert (= temp106_67 temp106_66))
(assert (= temp106_68 (select ARGNAME_stride_NAMEEND_VAL temp106_67)))
(assert (= temp106_69 #x0000000000000002))
(assert (= temp106_70 temp106_69))
(assert (= temp106_71 (select ARGNAME_stride_NAMEEND_VAL temp106_70)))
(assert (= temp106_72 #x0000000000000003))
(assert (= temp106_73 temp106_72))
(assert (= temp106_74 (select ARGNAME_stride_NAMEEND_VAL temp106_73)))
(assert (= temp106_75 #x0000000000000004))
(assert (= temp106_76 temp106_75))
(assert (= temp106_77 (select ARGNAME_stride_NAMEEND_VAL temp106_76)))
(assert (= temp106_78 #x0000000000000005))
(assert (= temp106_79 temp106_78))
(assert (= temp106_80 (select ARGNAME_stride_NAMEEND_VAL temp106_79)))
(assert (= temp106_81 #x0000000000000000))
(assert (= temp106_82 #x0000000000000000))
(assert (= temp106_83 temp106_82))
(assert (= temp106_84 (select ARGNAME_stride_NAMEEND_VAL temp106_83)))
(assert (= temp106_85 #x0000000000000000))
(assert (= temp106_86 #x0000000000000001))
(assert (= temp106_87 temp106_86))
(assert (= temp106_88 (select ARGNAME_stride_NAMEEND_VAL temp106_87)))
(assert (= temp106_89 #x0000000000000000))
(assert (= temp106_90 #x0000000000000002))
(assert (= temp106_91 temp106_90))
(assert (= temp106_92 (select ARGNAME_stride_NAMEEND_VAL temp106_91)))
(assert (= temp106_93 #x0000000000000000))
(assert (= temp106_94 #x0000000000000003))
(assert (= temp106_95 temp106_94))
(assert (= temp106_96 (select ARGNAME_stride_NAMEEND_VAL temp106_95)))
(assert (= temp106_97 #x0000000000000000))
(assert (= temp106_98 #x0000000000000004))
(assert (= temp106_99 temp106_98))
(assert (= temp106_100 (select ARGNAME_stride_NAMEEND_VAL temp106_99)))
(assert (= temp106_101 #x0000000000000000))
(assert (= temp106_102 #x0000000000000005))
(assert (= temp106_103 temp106_102))
(assert (= temp106_104 (select ARGNAME_stride_NAMEEND_VAL temp106_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp106_84 temp106_81)
             (bvsle temp106_88 temp106_85)
             (bvsle temp106_92 temp106_89)
             (bvsle temp106_96 temp106_93)
             (bvsle temp106_100 temp106_97)
             (bvsle temp106_104 temp106_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_105 #x0000000000000000))
(assert (= var1716023 temp106_105))
(assert (= temp106_106 #x0000000000000000))
(assert (= var1704114 temp106_106))
(assert (= temp106_107 #x0000000000000000))
(assert (= temp106_108 temp106_107))
(assert (= temp106_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_108)))
(assert (= temp106_110 #x0000000000000001))
(assert (= temp106_111 temp106_110))
(assert (= temp106_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_111)))
(assert (= temp106_113 #x0000000000000002))
(assert (= temp106_114 temp106_113))
(assert (= temp106_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_114)))
(assert (= temp106_116 #x0000000000000003))
(assert (= temp106_117 temp106_116))
(assert (= temp106_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_117)))
(assert (= temp106_119 #x0000000000000004))
(assert (= temp106_120 temp106_119))
(assert (= temp106_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_120)))
(assert (= temp106_122 #x0000000000000005))
(assert (= temp106_123 temp106_122))
(assert (= temp106_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_123)))
(assert (= temp106_126 var1704114))
(assert (= temp106_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_126)))
(assert (= temp106_125 temp106_127))
(assert (= var1716068
   (ite (bvslt temp106_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_128 #x0000000000000000))
(assert (= var1716068 temp106_128))
(assert (= temp106_129 #x0000000000000000))
(assert (= var1704114 temp106_129))
(assert (= temp106_131 var1704114))
(assert (= temp106_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_131)))
(assert (= temp106_130 temp106_132))
(assert (= var1716090 (bvsmod temp106_130 ARGNAME_groups_NAMEEND)))
(assert (= temp106_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp106_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp106_134 #x0000000000000001))
(assert (= var1716091 temp106_134))
(assert (= var1716110 var1716000))
(assert (= temp106_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp106_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp106_136 #x0000000000000001))
(assert (= var1716111 temp106_136))
(assert (= temp106_137 #x0000000000000001))
(assert (= var1705002 temp106_137))
(assert (= temp106_139 var1705002))
(assert (= temp106_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_139)))
(assert (= temp106_138 temp106_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp106_138)))
(assert (= temp106_141 #x0000000000000000))
(assert (= var1704114 temp106_141))
(assert (= temp106_143 var1704114))
(assert (= temp106_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp106_143)))
(assert (= temp106_142 temp106_144))
(assert (= temp106_145 #x0000000000000002))
(assert (= var1979241 temp106_145))
(assert (= temp106_146 #x0000000000000001))
(assert (= var1716281 temp106_146))
(assert (= temp106_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp106_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp106_148 #x0000000000000001))
(assert (= var997490 temp106_148))
(assert (= temp106_149 #x0000000000000001))
(assert (= var997620 temp106_149))
(assert (= var3486185 var997620))
(assert (= temp106_150 #x0000000000000000))
(assert (= var3686207 temp106_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp106_151 #x0000000000000002))
(assert (= var3815043 temp106_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp106_153 #xffffffffffffffff))
(assert (= temp106_152 temp106_153))
(assert (= temp106_155 #xffffffffffffffff))
(assert (= temp106_154 temp106_155))
(assert (= temp106_156 #x0000000000000001))
(assert (= var997490 temp106_156))
(model-add temp106_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp106_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp106_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp106_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp106_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp106_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






