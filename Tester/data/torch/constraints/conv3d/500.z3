(declare-fun temp666_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp666_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp666_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp666_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp666_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp666_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp666_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp666_8 () (_ BitVec 64))
(declare-fun temp666_10 () (_ BitVec 64))
(declare-fun temp666_9 () (_ BitVec 64))
(declare-fun temp666_12 () (_ BitVec 64))
(declare-fun temp666_11 () (_ BitVec 64))
(declare-fun temp666_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp666_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp666_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp666_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp666_17 () (_ BitVec 64))
(declare-fun temp666_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp666_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp666_20 () (_ BitVec 64))
(declare-fun temp666_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_22 () (_ BitVec 64))
(declare-fun temp666_23 () (_ BitVec 64))
(declare-fun temp666_24 () (_ BitVec 64))
(declare-fun temp666_25 () (_ BitVec 64))
(declare-fun temp666_26 () (_ BitVec 64))
(declare-fun temp666_27 () (_ BitVec 64))
(declare-fun temp666_28 () (_ BitVec 64))
(declare-fun temp666_29 () (_ BitVec 64))
(declare-fun temp666_30 () (_ BitVec 64))
(declare-fun temp666_31 () (_ BitVec 64))
(declare-fun temp666_32 () (_ BitVec 64))
(declare-fun temp666_33 () (_ BitVec 64))
(declare-fun temp666_34 () (_ BitVec 64))
(declare-fun temp666_35 () (_ BitVec 64))
(declare-fun temp666_36 () (_ BitVec 64))
(declare-fun temp666_37 () (_ BitVec 64))
(declare-fun temp666_38 () (_ BitVec 64))
(declare-fun temp666_39 () (_ BitVec 64))
(declare-fun temp666_40 () (_ BitVec 64))
(declare-fun temp666_41 () (_ BitVec 64))
(declare-fun temp666_42 () (_ BitVec 64))
(declare-fun temp666_43 () (_ BitVec 64))
(declare-fun temp666_44 () (_ BitVec 64))
(declare-fun temp666_45 () (_ BitVec 64))
(declare-fun temp666_46 () (_ BitVec 64))
(declare-fun temp666_47 () (_ BitVec 64))
(declare-fun temp666_48 () (_ BitVec 64))
(declare-fun temp666_49 () (_ BitVec 64))
(declare-fun temp666_50 () (_ BitVec 64))
(declare-fun temp666_51 () (_ BitVec 64))
(declare-fun temp666_52 () (_ BitVec 64))
(declare-fun temp666_53 () (_ BitVec 64))
(declare-fun temp666_54 () (_ BitVec 64))
(declare-fun temp666_55 () (_ BitVec 64))
(declare-fun temp666_56 () (_ BitVec 64))
(declare-fun temp666_57 () (_ BitVec 64))
(declare-fun temp666_58 () (_ BitVec 64))
(declare-fun temp666_59 () (_ BitVec 64))
(declare-fun temp666_60 () (_ BitVec 64))
(declare-fun temp666_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp666_62 () (_ BitVec 64))
(declare-fun temp666_63 () (_ BitVec 64))
(declare-fun temp666_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_65 () (_ BitVec 64))
(declare-fun temp666_66 () (_ BitVec 64))
(declare-fun temp666_67 () (_ BitVec 64))
(declare-fun temp666_68 () (_ BitVec 64))
(declare-fun temp666_69 () (_ BitVec 64))
(declare-fun temp666_70 () (_ BitVec 64))
(declare-fun temp666_71 () (_ BitVec 64))
(declare-fun temp666_72 () (_ BitVec 64))
(declare-fun temp666_73 () (_ BitVec 64))
(declare-fun temp666_74 () (_ BitVec 64))
(declare-fun temp666_75 () (_ BitVec 64))
(declare-fun temp666_76 () (_ BitVec 64))
(declare-fun temp666_77 () (_ BitVec 64))
(declare-fun temp666_78 () (_ BitVec 64))
(declare-fun temp666_79 () (_ BitVec 64))
(declare-fun temp666_80 () (_ BitVec 64))
(declare-fun temp666_81 () (_ BitVec 64))
(declare-fun temp666_82 () (_ BitVec 64))
(declare-fun temp666_83 () (_ BitVec 64))
(declare-fun temp666_84 () (_ BitVec 64))
(declare-fun temp666_85 () (_ BitVec 64))
(declare-fun temp666_86 () (_ BitVec 64))
(declare-fun temp666_87 () (_ BitVec 64))
(declare-fun temp666_88 () (_ BitVec 64))
(declare-fun temp666_89 () (_ BitVec 64))
(declare-fun temp666_90 () (_ BitVec 64))
(declare-fun temp666_91 () (_ BitVec 64))
(declare-fun temp666_92 () (_ BitVec 64))
(declare-fun temp666_93 () (_ BitVec 64))
(declare-fun temp666_94 () (_ BitVec 64))
(declare-fun temp666_95 () (_ BitVec 64))
(declare-fun temp666_96 () (_ BitVec 64))
(declare-fun temp666_97 () (_ BitVec 64))
(declare-fun temp666_98 () (_ BitVec 64))
(declare-fun temp666_99 () (_ BitVec 64))
(declare-fun temp666_100 () (_ BitVec 64))
(declare-fun temp666_101 () (_ BitVec 64))
(declare-fun temp666_102 () (_ BitVec 64))
(declare-fun temp666_103 () (_ BitVec 64))
(declare-fun temp666_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp666_105 () (_ BitVec 64))
(declare-fun temp666_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp666_107 () (_ BitVec 64))
(declare-fun temp666_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_109 () (_ BitVec 64))
(declare-fun temp666_110 () (_ BitVec 64))
(declare-fun temp666_111 () (_ BitVec 64))
(declare-fun temp666_112 () (_ BitVec 64))
(declare-fun temp666_113 () (_ BitVec 64))
(declare-fun temp666_114 () (_ BitVec 64))
(declare-fun temp666_115 () (_ BitVec 64))
(declare-fun temp666_116 () (_ BitVec 64))
(declare-fun temp666_117 () (_ BitVec 64))
(declare-fun temp666_118 () (_ BitVec 64))
(declare-fun temp666_119 () (_ BitVec 64))
(declare-fun temp666_120 () (_ BitVec 64))
(declare-fun temp666_121 () (_ BitVec 64))
(declare-fun temp666_122 () (_ BitVec 64))
(declare-fun temp666_123 () (_ BitVec 64))
(declare-fun temp666_124 () (_ BitVec 64))
(declare-fun temp666_126 () (_ BitVec 64))
(declare-fun temp666_127 () (_ BitVec 64))
(declare-fun temp666_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp666_128 () (_ BitVec 64))
(declare-fun temp666_129 () (_ BitVec 64))
(declare-fun temp666_131 () (_ BitVec 64))
(declare-fun temp666_132 () (_ BitVec 64))
(declare-fun temp666_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp666_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp666_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp666_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp666_136 () (_ BitVec 64))
(declare-fun temp666_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp666_139 () (_ BitVec 64))
(declare-fun temp666_140 () (_ BitVec 64))
(declare-fun temp666_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp666_141 () (_ BitVec 64))
(declare-fun temp666_143 () (_ BitVec 64))
(declare-fun temp666_144 () (_ BitVec 64))
(declare-fun temp666_142 () (_ BitVec 64))
(declare-fun temp666_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp666_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp666_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp666_148 () (_ BitVec 64))
(declare-fun temp666_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp666_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp666_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp666_153 () (_ BitVec 64))
(declare-fun temp666_152 () (_ BitVec 64))
(declare-fun temp666_155 () (_ BitVec 64))
(declare-fun temp666_154 () (_ BitVec 64))
(declare-fun temp666_156 () (_ BitVec 64))
(assert (= temp666_1 #x0000000000000003))
(assert (= var465453 temp666_1))
(assert (= temp666_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp666_2)))
(assert (= temp666_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp666_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp666_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp666_4)))
(assert (= temp666_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp666_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp666_6 #x0000000000000000))
(assert (= var465488 temp666_6))
(assert (= temp666_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp666_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_8 #x0000000000000001))
(assert (= var465522 temp666_8))
(assert (= temp666_10 #x0000000000000000))
(assert (= temp666_9 temp666_10))
(assert (= temp666_12 #x0000000000000003))
(assert (= temp666_11 temp666_12))
(assert (= temp666_13 #x0000000000000000))
(assert (= var863614 temp666_13))
(assert (= temp666_14 #x0000000000000001))
(assert (= var863635 temp666_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp666_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp666_15)))
(assert (= temp666_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp666_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_17 #x0000000000000000))
(assert (= var997373 temp666_17))
(assert (= temp666_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp666_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_19 #x0000000000000000))
(assert (= var997418 temp666_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp666_20 #x0000000000000000))
(assert (= temp666_21 temp666_20))
(assert (= temp666_22 (select ARGNAME_padding_NAMEEND_VAL temp666_21)))
(assert (= temp666_23 #x0000000000000001))
(assert (= temp666_24 temp666_23))
(assert (= temp666_25 (select ARGNAME_padding_NAMEEND_VAL temp666_24)))
(assert (= temp666_26 #x0000000000000002))
(assert (= temp666_27 temp666_26))
(assert (= temp666_28 (select ARGNAME_padding_NAMEEND_VAL temp666_27)))
(assert (= temp666_29 #x0000000000000003))
(assert (= temp666_30 temp666_29))
(assert (= temp666_31 (select ARGNAME_padding_NAMEEND_VAL temp666_30)))
(assert (= temp666_32 #x0000000000000004))
(assert (= temp666_33 temp666_32))
(assert (= temp666_34 (select ARGNAME_padding_NAMEEND_VAL temp666_33)))
(assert (= temp666_35 #x0000000000000005))
(assert (= temp666_36 temp666_35))
(assert (= temp666_37 (select ARGNAME_padding_NAMEEND_VAL temp666_36)))
(assert (= temp666_38 #x0000000000000000))
(assert (= temp666_39 #x0000000000000000))
(assert (= temp666_40 temp666_39))
(assert (= temp666_41 (select ARGNAME_padding_NAMEEND_VAL temp666_40)))
(assert (= temp666_42 #x0000000000000000))
(assert (= temp666_43 #x0000000000000001))
(assert (= temp666_44 temp666_43))
(assert (= temp666_45 (select ARGNAME_padding_NAMEEND_VAL temp666_44)))
(assert (= temp666_46 #x0000000000000000))
(assert (= temp666_47 #x0000000000000002))
(assert (= temp666_48 temp666_47))
(assert (= temp666_49 (select ARGNAME_padding_NAMEEND_VAL temp666_48)))
(assert (= temp666_50 #x0000000000000000))
(assert (= temp666_51 #x0000000000000003))
(assert (= temp666_52 temp666_51))
(assert (= temp666_53 (select ARGNAME_padding_NAMEEND_VAL temp666_52)))
(assert (= temp666_54 #x0000000000000000))
(assert (= temp666_55 #x0000000000000004))
(assert (= temp666_56 temp666_55))
(assert (= temp666_57 (select ARGNAME_padding_NAMEEND_VAL temp666_56)))
(assert (= temp666_58 #x0000000000000000))
(assert (= temp666_59 #x0000000000000005))
(assert (= temp666_60 temp666_59))
(assert (= temp666_61 (select ARGNAME_padding_NAMEEND_VAL temp666_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp666_41 temp666_38)
             (bvslt temp666_45 temp666_42)
             (bvslt temp666_49 temp666_46)
             (bvslt temp666_53 temp666_50)
             (bvslt temp666_57 temp666_54)
             (bvslt temp666_61 temp666_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_62 #x0000000000000000))
(assert (= var1716002 temp666_62))
(assert (= temp666_63 #x0000000000000000))
(assert (= temp666_64 temp666_63))
(assert (= temp666_65 (select ARGNAME_stride_NAMEEND_VAL temp666_64)))
(assert (= temp666_66 #x0000000000000001))
(assert (= temp666_67 temp666_66))
(assert (= temp666_68 (select ARGNAME_stride_NAMEEND_VAL temp666_67)))
(assert (= temp666_69 #x0000000000000002))
(assert (= temp666_70 temp666_69))
(assert (= temp666_71 (select ARGNAME_stride_NAMEEND_VAL temp666_70)))
(assert (= temp666_72 #x0000000000000003))
(assert (= temp666_73 temp666_72))
(assert (= temp666_74 (select ARGNAME_stride_NAMEEND_VAL temp666_73)))
(assert (= temp666_75 #x0000000000000004))
(assert (= temp666_76 temp666_75))
(assert (= temp666_77 (select ARGNAME_stride_NAMEEND_VAL temp666_76)))
(assert (= temp666_78 #x0000000000000005))
(assert (= temp666_79 temp666_78))
(assert (= temp666_80 (select ARGNAME_stride_NAMEEND_VAL temp666_79)))
(assert (= temp666_81 #x0000000000000000))
(assert (= temp666_82 #x0000000000000000))
(assert (= temp666_83 temp666_82))
(assert (= temp666_84 (select ARGNAME_stride_NAMEEND_VAL temp666_83)))
(assert (= temp666_85 #x0000000000000000))
(assert (= temp666_86 #x0000000000000001))
(assert (= temp666_87 temp666_86))
(assert (= temp666_88 (select ARGNAME_stride_NAMEEND_VAL temp666_87)))
(assert (= temp666_89 #x0000000000000000))
(assert (= temp666_90 #x0000000000000002))
(assert (= temp666_91 temp666_90))
(assert (= temp666_92 (select ARGNAME_stride_NAMEEND_VAL temp666_91)))
(assert (= temp666_93 #x0000000000000000))
(assert (= temp666_94 #x0000000000000003))
(assert (= temp666_95 temp666_94))
(assert (= temp666_96 (select ARGNAME_stride_NAMEEND_VAL temp666_95)))
(assert (= temp666_97 #x0000000000000000))
(assert (= temp666_98 #x0000000000000004))
(assert (= temp666_99 temp666_98))
(assert (= temp666_100 (select ARGNAME_stride_NAMEEND_VAL temp666_99)))
(assert (= temp666_101 #x0000000000000000))
(assert (= temp666_102 #x0000000000000005))
(assert (= temp666_103 temp666_102))
(assert (= temp666_104 (select ARGNAME_stride_NAMEEND_VAL temp666_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp666_84 temp666_81)
             (bvsle temp666_88 temp666_85)
             (bvsle temp666_92 temp666_89)
             (bvsle temp666_96 temp666_93)
             (bvsle temp666_100 temp666_97)
             (bvsle temp666_104 temp666_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_105 #x0000000000000000))
(assert (= var1716023 temp666_105))
(assert (= temp666_106 #x0000000000000000))
(assert (= var1704114 temp666_106))
(assert (= temp666_107 #x0000000000000000))
(assert (= temp666_108 temp666_107))
(assert (= temp666_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_108)))
(assert (= temp666_110 #x0000000000000001))
(assert (= temp666_111 temp666_110))
(assert (= temp666_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_111)))
(assert (= temp666_113 #x0000000000000002))
(assert (= temp666_114 temp666_113))
(assert (= temp666_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_114)))
(assert (= temp666_116 #x0000000000000003))
(assert (= temp666_117 temp666_116))
(assert (= temp666_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_117)))
(assert (= temp666_119 #x0000000000000004))
(assert (= temp666_120 temp666_119))
(assert (= temp666_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_120)))
(assert (= temp666_122 #x0000000000000005))
(assert (= temp666_123 temp666_122))
(assert (= temp666_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_123)))
(assert (= temp666_126 var1704114))
(assert (= temp666_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_126)))
(assert (= temp666_125 temp666_127))
(assert (= var1716068
   (ite (bvslt temp666_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_128 #x0000000000000000))
(assert (= var1716068 temp666_128))
(assert (= temp666_129 #x0000000000000000))
(assert (= var1704114 temp666_129))
(assert (= temp666_131 var1704114))
(assert (= temp666_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_131)))
(assert (= temp666_130 temp666_132))
(assert (= var1716090 (bvsmod temp666_130 ARGNAME_groups_NAMEEND)))
(assert (= temp666_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp666_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_134 #x0000000000000001))
(assert (= var1716091 temp666_134))
(assert (= var1716110 var1716000))
(assert (= temp666_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp666_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_136 #x0000000000000001))
(assert (= var1716111 temp666_136))
(assert (= temp666_137 #x0000000000000001))
(assert (= var1705002 temp666_137))
(assert (= temp666_139 var1705002))
(assert (= temp666_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_139)))
(assert (= temp666_138 temp666_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp666_138)))
(assert (= temp666_141 #x0000000000000000))
(assert (= var1704114 temp666_141))
(assert (= temp666_143 var1704114))
(assert (= temp666_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_143)))
(assert (= temp666_142 temp666_144))
(assert (= temp666_145 #x0000000000000002))
(assert (= var1979241 temp666_145))
(assert (= temp666_146 #x0000000000000001))
(assert (= var1716281 temp666_146))
(assert (= temp666_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp666_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_148 #x0000000000000001))
(assert (= var997490 temp666_148))
(assert (= temp666_149 #x0000000000000001))
(assert (= var997620 temp666_149))
(assert (= var3486185 var997620))
(assert (= temp666_150 #x0000000000000000))
(assert (= var3686207 temp666_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp666_151 #x0000000000000002))
(assert (= var3815043 temp666_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp666_153 #xffffffffffffffff))
(assert (= temp666_152 temp666_153))
(assert (= temp666_155 #xffffffffffffffff))
(assert (= temp666_154 temp666_155))
(assert (= temp666_156 #x0000000000000001))
(assert (= var997490 temp666_156))
(model-add temp666_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp666_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp666_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp666_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp666_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp666_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






