(declare-fun temp1012_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1012_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1012_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1012_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1012_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1012_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1012_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1012_8 () (_ BitVec 64))
(declare-fun temp1012_10 () (_ BitVec 64))
(declare-fun temp1012_9 () (_ BitVec 64))
(declare-fun temp1012_12 () (_ BitVec 64))
(declare-fun temp1012_11 () (_ BitVec 64))
(declare-fun temp1012_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1012_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1012_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1012_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1012_17 () (_ BitVec 64))
(declare-fun temp1012_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1012_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1012_20 () (_ BitVec 64))
(declare-fun temp1012_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_22 () (_ BitVec 64))
(declare-fun temp1012_23 () (_ BitVec 64))
(declare-fun temp1012_24 () (_ BitVec 64))
(declare-fun temp1012_25 () (_ BitVec 64))
(declare-fun temp1012_26 () (_ BitVec 64))
(declare-fun temp1012_27 () (_ BitVec 64))
(declare-fun temp1012_28 () (_ BitVec 64))
(declare-fun temp1012_29 () (_ BitVec 64))
(declare-fun temp1012_30 () (_ BitVec 64))
(declare-fun temp1012_31 () (_ BitVec 64))
(declare-fun temp1012_32 () (_ BitVec 64))
(declare-fun temp1012_33 () (_ BitVec 64))
(declare-fun temp1012_34 () (_ BitVec 64))
(declare-fun temp1012_35 () (_ BitVec 64))
(declare-fun temp1012_36 () (_ BitVec 64))
(declare-fun temp1012_37 () (_ BitVec 64))
(declare-fun temp1012_38 () (_ BitVec 64))
(declare-fun temp1012_39 () (_ BitVec 64))
(declare-fun temp1012_40 () (_ BitVec 64))
(declare-fun temp1012_41 () (_ BitVec 64))
(declare-fun temp1012_42 () (_ BitVec 64))
(declare-fun temp1012_43 () (_ BitVec 64))
(declare-fun temp1012_44 () (_ BitVec 64))
(declare-fun temp1012_45 () (_ BitVec 64))
(declare-fun temp1012_46 () (_ BitVec 64))
(declare-fun temp1012_47 () (_ BitVec 64))
(declare-fun temp1012_48 () (_ BitVec 64))
(declare-fun temp1012_49 () (_ BitVec 64))
(declare-fun temp1012_50 () (_ BitVec 64))
(declare-fun temp1012_51 () (_ BitVec 64))
(declare-fun temp1012_52 () (_ BitVec 64))
(declare-fun temp1012_53 () (_ BitVec 64))
(declare-fun temp1012_54 () (_ BitVec 64))
(declare-fun temp1012_55 () (_ BitVec 64))
(declare-fun temp1012_56 () (_ BitVec 64))
(declare-fun temp1012_57 () (_ BitVec 64))
(declare-fun temp1012_58 () (_ BitVec 64))
(declare-fun temp1012_59 () (_ BitVec 64))
(declare-fun temp1012_60 () (_ BitVec 64))
(declare-fun temp1012_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1012_62 () (_ BitVec 64))
(declare-fun temp1012_63 () (_ BitVec 64))
(declare-fun temp1012_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_65 () (_ BitVec 64))
(declare-fun temp1012_66 () (_ BitVec 64))
(declare-fun temp1012_67 () (_ BitVec 64))
(declare-fun temp1012_68 () (_ BitVec 64))
(declare-fun temp1012_69 () (_ BitVec 64))
(declare-fun temp1012_70 () (_ BitVec 64))
(declare-fun temp1012_71 () (_ BitVec 64))
(declare-fun temp1012_72 () (_ BitVec 64))
(declare-fun temp1012_73 () (_ BitVec 64))
(declare-fun temp1012_74 () (_ BitVec 64))
(declare-fun temp1012_75 () (_ BitVec 64))
(declare-fun temp1012_76 () (_ BitVec 64))
(declare-fun temp1012_77 () (_ BitVec 64))
(declare-fun temp1012_78 () (_ BitVec 64))
(declare-fun temp1012_79 () (_ BitVec 64))
(declare-fun temp1012_80 () (_ BitVec 64))
(declare-fun temp1012_81 () (_ BitVec 64))
(declare-fun temp1012_82 () (_ BitVec 64))
(declare-fun temp1012_83 () (_ BitVec 64))
(declare-fun temp1012_84 () (_ BitVec 64))
(declare-fun temp1012_85 () (_ BitVec 64))
(declare-fun temp1012_86 () (_ BitVec 64))
(declare-fun temp1012_87 () (_ BitVec 64))
(declare-fun temp1012_88 () (_ BitVec 64))
(declare-fun temp1012_89 () (_ BitVec 64))
(declare-fun temp1012_90 () (_ BitVec 64))
(declare-fun temp1012_91 () (_ BitVec 64))
(declare-fun temp1012_92 () (_ BitVec 64))
(declare-fun temp1012_93 () (_ BitVec 64))
(declare-fun temp1012_94 () (_ BitVec 64))
(declare-fun temp1012_95 () (_ BitVec 64))
(declare-fun temp1012_96 () (_ BitVec 64))
(declare-fun temp1012_97 () (_ BitVec 64))
(declare-fun temp1012_98 () (_ BitVec 64))
(declare-fun temp1012_99 () (_ BitVec 64))
(declare-fun temp1012_100 () (_ BitVec 64))
(declare-fun temp1012_101 () (_ BitVec 64))
(declare-fun temp1012_102 () (_ BitVec 64))
(declare-fun temp1012_103 () (_ BitVec 64))
(declare-fun temp1012_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1012_105 () (_ BitVec 64))
(declare-fun temp1012_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1012_107 () (_ BitVec 64))
(declare-fun temp1012_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_109 () (_ BitVec 64))
(declare-fun temp1012_110 () (_ BitVec 64))
(declare-fun temp1012_111 () (_ BitVec 64))
(declare-fun temp1012_112 () (_ BitVec 64))
(declare-fun temp1012_113 () (_ BitVec 64))
(declare-fun temp1012_114 () (_ BitVec 64))
(declare-fun temp1012_115 () (_ BitVec 64))
(declare-fun temp1012_116 () (_ BitVec 64))
(declare-fun temp1012_117 () (_ BitVec 64))
(declare-fun temp1012_118 () (_ BitVec 64))
(declare-fun temp1012_119 () (_ BitVec 64))
(declare-fun temp1012_120 () (_ BitVec 64))
(declare-fun temp1012_121 () (_ BitVec 64))
(declare-fun temp1012_122 () (_ BitVec 64))
(declare-fun temp1012_123 () (_ BitVec 64))
(declare-fun temp1012_124 () (_ BitVec 64))
(declare-fun temp1012_126 () (_ BitVec 64))
(declare-fun temp1012_127 () (_ BitVec 64))
(declare-fun temp1012_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1012_128 () (_ BitVec 64))
(declare-fun temp1012_129 () (_ BitVec 64))
(declare-fun temp1012_131 () (_ BitVec 64))
(declare-fun temp1012_132 () (_ BitVec 64))
(declare-fun temp1012_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1012_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1012_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1012_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1012_136 () (_ BitVec 64))
(declare-fun temp1012_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1012_139 () (_ BitVec 64))
(declare-fun temp1012_140 () (_ BitVec 64))
(declare-fun temp1012_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1012_141 () (_ BitVec 64))
(declare-fun temp1012_143 () (_ BitVec 64))
(declare-fun temp1012_144 () (_ BitVec 64))
(declare-fun temp1012_142 () (_ BitVec 64))
(declare-fun temp1012_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1012_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1012_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1012_148 () (_ BitVec 64))
(declare-fun temp1012_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1012_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp1012_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp1012_152 () (_ BitVec 64))
(assert (= temp1012_1 #x0000000000000003))
(assert (= var465453 temp1012_1))
(assert (= temp1012_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1012_2)))
(assert (= temp1012_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1012_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1012_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1012_4)))
(assert (= temp1012_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1012_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1012_6 #x0000000000000000))
(assert (= var465488 temp1012_6))
(assert (= temp1012_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1012_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_8 #x0000000000000001))
(assert (= var465522 temp1012_8))
(assert (= temp1012_10 #x0000000000000000))
(assert (= temp1012_9 temp1012_10))
(assert (= temp1012_12 #x0000000000000003))
(assert (= temp1012_11 temp1012_12))
(assert (= temp1012_13 #x0000000000000000))
(assert (= var863614 temp1012_13))
(assert (= temp1012_14 #x0000000000000001))
(assert (= var863635 temp1012_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1012_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1012_15)))
(assert (= temp1012_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1012_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_17 #x0000000000000000))
(assert (= var997373 temp1012_17))
(assert (= temp1012_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1012_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_19 #x0000000000000000))
(assert (= var997418 temp1012_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1012_20 #x0000000000000000))
(assert (= temp1012_21 temp1012_20))
(assert (= temp1012_22 (select ARGNAME_padding_NAMEEND_VAL temp1012_21)))
(assert (= temp1012_23 #x0000000000000001))
(assert (= temp1012_24 temp1012_23))
(assert (= temp1012_25 (select ARGNAME_padding_NAMEEND_VAL temp1012_24)))
(assert (= temp1012_26 #x0000000000000002))
(assert (= temp1012_27 temp1012_26))
(assert (= temp1012_28 (select ARGNAME_padding_NAMEEND_VAL temp1012_27)))
(assert (= temp1012_29 #x0000000000000003))
(assert (= temp1012_30 temp1012_29))
(assert (= temp1012_31 (select ARGNAME_padding_NAMEEND_VAL temp1012_30)))
(assert (= temp1012_32 #x0000000000000004))
(assert (= temp1012_33 temp1012_32))
(assert (= temp1012_34 (select ARGNAME_padding_NAMEEND_VAL temp1012_33)))
(assert (= temp1012_35 #x0000000000000005))
(assert (= temp1012_36 temp1012_35))
(assert (= temp1012_37 (select ARGNAME_padding_NAMEEND_VAL temp1012_36)))
(assert (= temp1012_38 #x0000000000000000))
(assert (= temp1012_39 #x0000000000000000))
(assert (= temp1012_40 temp1012_39))
(assert (= temp1012_41 (select ARGNAME_padding_NAMEEND_VAL temp1012_40)))
(assert (= temp1012_42 #x0000000000000000))
(assert (= temp1012_43 #x0000000000000001))
(assert (= temp1012_44 temp1012_43))
(assert (= temp1012_45 (select ARGNAME_padding_NAMEEND_VAL temp1012_44)))
(assert (= temp1012_46 #x0000000000000000))
(assert (= temp1012_47 #x0000000000000002))
(assert (= temp1012_48 temp1012_47))
(assert (= temp1012_49 (select ARGNAME_padding_NAMEEND_VAL temp1012_48)))
(assert (= temp1012_50 #x0000000000000000))
(assert (= temp1012_51 #x0000000000000003))
(assert (= temp1012_52 temp1012_51))
(assert (= temp1012_53 (select ARGNAME_padding_NAMEEND_VAL temp1012_52)))
(assert (= temp1012_54 #x0000000000000000))
(assert (= temp1012_55 #x0000000000000004))
(assert (= temp1012_56 temp1012_55))
(assert (= temp1012_57 (select ARGNAME_padding_NAMEEND_VAL temp1012_56)))
(assert (= temp1012_58 #x0000000000000000))
(assert (= temp1012_59 #x0000000000000005))
(assert (= temp1012_60 temp1012_59))
(assert (= temp1012_61 (select ARGNAME_padding_NAMEEND_VAL temp1012_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1012_41 temp1012_38)
             (bvslt temp1012_45 temp1012_42)
             (bvslt temp1012_49 temp1012_46)
             (bvslt temp1012_53 temp1012_50)
             (bvslt temp1012_57 temp1012_54)
             (bvslt temp1012_61 temp1012_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_62 #x0000000000000000))
(assert (= var1716002 temp1012_62))
(assert (= temp1012_63 #x0000000000000000))
(assert (= temp1012_64 temp1012_63))
(assert (= temp1012_65 (select ARGNAME_stride_NAMEEND_VAL temp1012_64)))
(assert (= temp1012_66 #x0000000000000001))
(assert (= temp1012_67 temp1012_66))
(assert (= temp1012_68 (select ARGNAME_stride_NAMEEND_VAL temp1012_67)))
(assert (= temp1012_69 #x0000000000000002))
(assert (= temp1012_70 temp1012_69))
(assert (= temp1012_71 (select ARGNAME_stride_NAMEEND_VAL temp1012_70)))
(assert (= temp1012_72 #x0000000000000003))
(assert (= temp1012_73 temp1012_72))
(assert (= temp1012_74 (select ARGNAME_stride_NAMEEND_VAL temp1012_73)))
(assert (= temp1012_75 #x0000000000000004))
(assert (= temp1012_76 temp1012_75))
(assert (= temp1012_77 (select ARGNAME_stride_NAMEEND_VAL temp1012_76)))
(assert (= temp1012_78 #x0000000000000005))
(assert (= temp1012_79 temp1012_78))
(assert (= temp1012_80 (select ARGNAME_stride_NAMEEND_VAL temp1012_79)))
(assert (= temp1012_81 #x0000000000000000))
(assert (= temp1012_82 #x0000000000000000))
(assert (= temp1012_83 temp1012_82))
(assert (= temp1012_84 (select ARGNAME_stride_NAMEEND_VAL temp1012_83)))
(assert (= temp1012_85 #x0000000000000000))
(assert (= temp1012_86 #x0000000000000001))
(assert (= temp1012_87 temp1012_86))
(assert (= temp1012_88 (select ARGNAME_stride_NAMEEND_VAL temp1012_87)))
(assert (= temp1012_89 #x0000000000000000))
(assert (= temp1012_90 #x0000000000000002))
(assert (= temp1012_91 temp1012_90))
(assert (= temp1012_92 (select ARGNAME_stride_NAMEEND_VAL temp1012_91)))
(assert (= temp1012_93 #x0000000000000000))
(assert (= temp1012_94 #x0000000000000003))
(assert (= temp1012_95 temp1012_94))
(assert (= temp1012_96 (select ARGNAME_stride_NAMEEND_VAL temp1012_95)))
(assert (= temp1012_97 #x0000000000000000))
(assert (= temp1012_98 #x0000000000000004))
(assert (= temp1012_99 temp1012_98))
(assert (= temp1012_100 (select ARGNAME_stride_NAMEEND_VAL temp1012_99)))
(assert (= temp1012_101 #x0000000000000000))
(assert (= temp1012_102 #x0000000000000005))
(assert (= temp1012_103 temp1012_102))
(assert (= temp1012_104 (select ARGNAME_stride_NAMEEND_VAL temp1012_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1012_84 temp1012_81)
             (bvsle temp1012_88 temp1012_85)
             (bvsle temp1012_92 temp1012_89)
             (bvsle temp1012_96 temp1012_93)
             (bvsle temp1012_100 temp1012_97)
             (bvsle temp1012_104 temp1012_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_105 #x0000000000000000))
(assert (= var1716023 temp1012_105))
(assert (= temp1012_106 #x0000000000000000))
(assert (= var1704114 temp1012_106))
(assert (= temp1012_107 #x0000000000000000))
(assert (= temp1012_108 temp1012_107))
(assert (= temp1012_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_108)))
(assert (= temp1012_110 #x0000000000000001))
(assert (= temp1012_111 temp1012_110))
(assert (= temp1012_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_111)))
(assert (= temp1012_113 #x0000000000000002))
(assert (= temp1012_114 temp1012_113))
(assert (= temp1012_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_114)))
(assert (= temp1012_116 #x0000000000000003))
(assert (= temp1012_117 temp1012_116))
(assert (= temp1012_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_117)))
(assert (= temp1012_119 #x0000000000000004))
(assert (= temp1012_120 temp1012_119))
(assert (= temp1012_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_120)))
(assert (= temp1012_122 #x0000000000000005))
(assert (= temp1012_123 temp1012_122))
(assert (= temp1012_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_123)))
(assert (= temp1012_126 var1704114))
(assert (= temp1012_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_126)))
(assert (= temp1012_125 temp1012_127))
(assert (= var1716068
   (ite (bvslt temp1012_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_128 #x0000000000000000))
(assert (= var1716068 temp1012_128))
(assert (= temp1012_129 #x0000000000000000))
(assert (= var1704114 temp1012_129))
(assert (= temp1012_131 var1704114))
(assert (= temp1012_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_131)))
(assert (= temp1012_130 temp1012_132))
(assert (= var1716090 (bvsmod temp1012_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1012_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1012_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_134 #x0000000000000001))
(assert (= var1716091 temp1012_134))
(assert (= var1716110 var1716000))
(assert (= temp1012_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1012_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_136 #x0000000000000001))
(assert (= var1716111 temp1012_136))
(assert (= temp1012_137 #x0000000000000001))
(assert (= var1705002 temp1012_137))
(assert (= temp1012_139 var1705002))
(assert (= temp1012_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_139)))
(assert (= temp1012_138 temp1012_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1012_138)))
(assert (= temp1012_141 #x0000000000000000))
(assert (= var1704114 temp1012_141))
(assert (= temp1012_143 var1704114))
(assert (= temp1012_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_143)))
(assert (= temp1012_142 temp1012_144))
(assert (= temp1012_145 #x0000000000000002))
(assert (= var1979241 temp1012_145))
(assert (= temp1012_146 #x0000000000000001))
(assert (= var1716281 temp1012_146))
(assert (= temp1012_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1012_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_148 #x0000000000000001))
(assert (= var997490 temp1012_148))
(assert (= temp1012_149 #x0000000000000001))
(assert (= var997620 temp1012_149))
(assert (= var3486185 var997620))
(assert (= temp1012_150 #x0000000000000000))
(assert (= var3686207 temp1012_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp1012_151 #x0000000000000002))
(assert (= var3815043 temp1012_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp1012_152 #x0000000000000001))
(assert (= var997490 temp1012_152))
(model-add temp1012_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp1012_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp1012_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1012_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp1012_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1012_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






