(declare-fun temp38_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp38_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp38_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp38_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp38_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp38_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp38_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp38_8 () (_ BitVec 64))
(declare-fun temp38_10 () (_ BitVec 64))
(declare-fun temp38_9 () (_ BitVec 64))
(declare-fun temp38_12 () (_ BitVec 64))
(declare-fun temp38_11 () (_ BitVec 64))
(declare-fun temp38_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp38_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp38_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp38_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp38_17 () (_ BitVec 64))
(declare-fun temp38_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp38_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp38_20 () (_ BitVec 64))
(declare-fun temp38_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_22 () (_ BitVec 64))
(declare-fun temp38_23 () (_ BitVec 64))
(declare-fun temp38_24 () (_ BitVec 64))
(declare-fun temp38_25 () (_ BitVec 64))
(declare-fun temp38_26 () (_ BitVec 64))
(declare-fun temp38_27 () (_ BitVec 64))
(declare-fun temp38_28 () (_ BitVec 64))
(declare-fun temp38_29 () (_ BitVec 64))
(declare-fun temp38_30 () (_ BitVec 64))
(declare-fun temp38_31 () (_ BitVec 64))
(declare-fun temp38_32 () (_ BitVec 64))
(declare-fun temp38_33 () (_ BitVec 64))
(declare-fun temp38_34 () (_ BitVec 64))
(declare-fun temp38_35 () (_ BitVec 64))
(declare-fun temp38_36 () (_ BitVec 64))
(declare-fun temp38_37 () (_ BitVec 64))
(declare-fun temp38_38 () (_ BitVec 64))
(declare-fun temp38_39 () (_ BitVec 64))
(declare-fun temp38_40 () (_ BitVec 64))
(declare-fun temp38_41 () (_ BitVec 64))
(declare-fun temp38_42 () (_ BitVec 64))
(declare-fun temp38_43 () (_ BitVec 64))
(declare-fun temp38_44 () (_ BitVec 64))
(declare-fun temp38_45 () (_ BitVec 64))
(declare-fun temp38_46 () (_ BitVec 64))
(declare-fun temp38_47 () (_ BitVec 64))
(declare-fun temp38_48 () (_ BitVec 64))
(declare-fun temp38_49 () (_ BitVec 64))
(declare-fun temp38_50 () (_ BitVec 64))
(declare-fun temp38_51 () (_ BitVec 64))
(declare-fun temp38_52 () (_ BitVec 64))
(declare-fun temp38_53 () (_ BitVec 64))
(declare-fun temp38_54 () (_ BitVec 64))
(declare-fun temp38_55 () (_ BitVec 64))
(declare-fun temp38_56 () (_ BitVec 64))
(declare-fun temp38_57 () (_ BitVec 64))
(declare-fun temp38_58 () (_ BitVec 64))
(declare-fun temp38_59 () (_ BitVec 64))
(declare-fun temp38_60 () (_ BitVec 64))
(declare-fun temp38_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp38_62 () (_ BitVec 64))
(declare-fun temp38_63 () (_ BitVec 64))
(declare-fun temp38_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_65 () (_ BitVec 64))
(declare-fun temp38_66 () (_ BitVec 64))
(declare-fun temp38_67 () (_ BitVec 64))
(declare-fun temp38_68 () (_ BitVec 64))
(declare-fun temp38_69 () (_ BitVec 64))
(declare-fun temp38_70 () (_ BitVec 64))
(declare-fun temp38_71 () (_ BitVec 64))
(declare-fun temp38_72 () (_ BitVec 64))
(declare-fun temp38_73 () (_ BitVec 64))
(declare-fun temp38_74 () (_ BitVec 64))
(declare-fun temp38_75 () (_ BitVec 64))
(declare-fun temp38_76 () (_ BitVec 64))
(declare-fun temp38_77 () (_ BitVec 64))
(declare-fun temp38_78 () (_ BitVec 64))
(declare-fun temp38_79 () (_ BitVec 64))
(declare-fun temp38_80 () (_ BitVec 64))
(declare-fun temp38_81 () (_ BitVec 64))
(declare-fun temp38_82 () (_ BitVec 64))
(declare-fun temp38_83 () (_ BitVec 64))
(declare-fun temp38_84 () (_ BitVec 64))
(declare-fun temp38_85 () (_ BitVec 64))
(declare-fun temp38_86 () (_ BitVec 64))
(declare-fun temp38_87 () (_ BitVec 64))
(declare-fun temp38_88 () (_ BitVec 64))
(declare-fun temp38_89 () (_ BitVec 64))
(declare-fun temp38_90 () (_ BitVec 64))
(declare-fun temp38_91 () (_ BitVec 64))
(declare-fun temp38_92 () (_ BitVec 64))
(declare-fun temp38_93 () (_ BitVec 64))
(declare-fun temp38_94 () (_ BitVec 64))
(declare-fun temp38_95 () (_ BitVec 64))
(declare-fun temp38_96 () (_ BitVec 64))
(declare-fun temp38_97 () (_ BitVec 64))
(declare-fun temp38_98 () (_ BitVec 64))
(declare-fun temp38_99 () (_ BitVec 64))
(declare-fun temp38_100 () (_ BitVec 64))
(declare-fun temp38_101 () (_ BitVec 64))
(declare-fun temp38_102 () (_ BitVec 64))
(declare-fun temp38_103 () (_ BitVec 64))
(declare-fun temp38_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp38_105 () (_ BitVec 64))
(declare-fun temp38_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp38_107 () (_ BitVec 64))
(declare-fun temp38_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_109 () (_ BitVec 64))
(declare-fun temp38_110 () (_ BitVec 64))
(declare-fun temp38_111 () (_ BitVec 64))
(declare-fun temp38_112 () (_ BitVec 64))
(declare-fun temp38_113 () (_ BitVec 64))
(declare-fun temp38_114 () (_ BitVec 64))
(declare-fun temp38_115 () (_ BitVec 64))
(declare-fun temp38_116 () (_ BitVec 64))
(declare-fun temp38_117 () (_ BitVec 64))
(declare-fun temp38_118 () (_ BitVec 64))
(declare-fun temp38_119 () (_ BitVec 64))
(declare-fun temp38_120 () (_ BitVec 64))
(declare-fun temp38_121 () (_ BitVec 64))
(declare-fun temp38_122 () (_ BitVec 64))
(declare-fun temp38_123 () (_ BitVec 64))
(declare-fun temp38_124 () (_ BitVec 64))
(declare-fun temp38_126 () (_ BitVec 64))
(declare-fun temp38_127 () (_ BitVec 64))
(declare-fun temp38_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp38_128 () (_ BitVec 64))
(declare-fun temp38_129 () (_ BitVec 64))
(declare-fun temp38_131 () (_ BitVec 64))
(declare-fun temp38_132 () (_ BitVec 64))
(declare-fun temp38_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp38_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp38_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp38_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp38_136 () (_ BitVec 64))
(declare-fun temp38_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp38_139 () (_ BitVec 64))
(declare-fun temp38_140 () (_ BitVec 64))
(declare-fun temp38_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp38_141 () (_ BitVec 64))
(declare-fun temp38_143 () (_ BitVec 64))
(declare-fun temp38_144 () (_ BitVec 64))
(declare-fun temp38_142 () (_ BitVec 64))
(declare-fun temp38_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp38_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp38_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp38_148 () (_ BitVec 64))
(declare-fun temp38_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp38_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp38_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp38_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var5193549 () (_ BitVec 64))
(declare-fun temp38_154 () (_ BitVec 64))
(declare-fun temp38_153 () (_ BitVec 64))
(declare-fun temp38_155 () (_ BitVec 64))
(declare-fun var5770730 () (_ BitVec 64))
(declare-fun temp38_157 () (_ BitVec 64))
(declare-fun temp38_156 () (_ BitVec 64))
(declare-fun temp38_158 () (_ BitVec 64))
(assert (= temp38_1 #x0000000000000003))
(assert (= var465453 temp38_1))
(assert (= temp38_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp38_2)))
(assert (= temp38_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp38_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp38_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp38_4)))
(assert (= temp38_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp38_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp38_6 #x0000000000000000))
(assert (= var465488 temp38_6))
(assert (= temp38_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp38_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_8 #x0000000000000001))
(assert (= var465522 temp38_8))
(assert (= temp38_10 #x0000000000000000))
(assert (= temp38_9 temp38_10))
(assert (= temp38_12 #x0000000000000003))
(assert (= temp38_11 temp38_12))
(assert (= temp38_13 #x0000000000000000))
(assert (= var863614 temp38_13))
(assert (= temp38_14 #x0000000000000001))
(assert (= var863635 temp38_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp38_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp38_15)))
(assert (= temp38_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp38_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_17 #x0000000000000000))
(assert (= var997373 temp38_17))
(assert (= temp38_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp38_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_19 #x0000000000000000))
(assert (= var997418 temp38_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp38_20 #x0000000000000000))
(assert (= temp38_21 temp38_20))
(assert (= temp38_22 (select ARGNAME_padding_NAMEEND_VAL temp38_21)))
(assert (= temp38_23 #x0000000000000001))
(assert (= temp38_24 temp38_23))
(assert (= temp38_25 (select ARGNAME_padding_NAMEEND_VAL temp38_24)))
(assert (= temp38_26 #x0000000000000002))
(assert (= temp38_27 temp38_26))
(assert (= temp38_28 (select ARGNAME_padding_NAMEEND_VAL temp38_27)))
(assert (= temp38_29 #x0000000000000003))
(assert (= temp38_30 temp38_29))
(assert (= temp38_31 (select ARGNAME_padding_NAMEEND_VAL temp38_30)))
(assert (= temp38_32 #x0000000000000004))
(assert (= temp38_33 temp38_32))
(assert (= temp38_34 (select ARGNAME_padding_NAMEEND_VAL temp38_33)))
(assert (= temp38_35 #x0000000000000005))
(assert (= temp38_36 temp38_35))
(assert (= temp38_37 (select ARGNAME_padding_NAMEEND_VAL temp38_36)))
(assert (= temp38_38 #x0000000000000000))
(assert (= temp38_39 #x0000000000000000))
(assert (= temp38_40 temp38_39))
(assert (= temp38_41 (select ARGNAME_padding_NAMEEND_VAL temp38_40)))
(assert (= temp38_42 #x0000000000000000))
(assert (= temp38_43 #x0000000000000001))
(assert (= temp38_44 temp38_43))
(assert (= temp38_45 (select ARGNAME_padding_NAMEEND_VAL temp38_44)))
(assert (= temp38_46 #x0000000000000000))
(assert (= temp38_47 #x0000000000000002))
(assert (= temp38_48 temp38_47))
(assert (= temp38_49 (select ARGNAME_padding_NAMEEND_VAL temp38_48)))
(assert (= temp38_50 #x0000000000000000))
(assert (= temp38_51 #x0000000000000003))
(assert (= temp38_52 temp38_51))
(assert (= temp38_53 (select ARGNAME_padding_NAMEEND_VAL temp38_52)))
(assert (= temp38_54 #x0000000000000000))
(assert (= temp38_55 #x0000000000000004))
(assert (= temp38_56 temp38_55))
(assert (= temp38_57 (select ARGNAME_padding_NAMEEND_VAL temp38_56)))
(assert (= temp38_58 #x0000000000000000))
(assert (= temp38_59 #x0000000000000005))
(assert (= temp38_60 temp38_59))
(assert (= temp38_61 (select ARGNAME_padding_NAMEEND_VAL temp38_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp38_41 temp38_38)
             (bvslt temp38_45 temp38_42)
             (bvslt temp38_49 temp38_46)
             (bvslt temp38_53 temp38_50)
             (bvslt temp38_57 temp38_54)
             (bvslt temp38_61 temp38_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_62 #x0000000000000000))
(assert (= var1716002 temp38_62))
(assert (= temp38_63 #x0000000000000000))
(assert (= temp38_64 temp38_63))
(assert (= temp38_65 (select ARGNAME_stride_NAMEEND_VAL temp38_64)))
(assert (= temp38_66 #x0000000000000001))
(assert (= temp38_67 temp38_66))
(assert (= temp38_68 (select ARGNAME_stride_NAMEEND_VAL temp38_67)))
(assert (= temp38_69 #x0000000000000002))
(assert (= temp38_70 temp38_69))
(assert (= temp38_71 (select ARGNAME_stride_NAMEEND_VAL temp38_70)))
(assert (= temp38_72 #x0000000000000003))
(assert (= temp38_73 temp38_72))
(assert (= temp38_74 (select ARGNAME_stride_NAMEEND_VAL temp38_73)))
(assert (= temp38_75 #x0000000000000004))
(assert (= temp38_76 temp38_75))
(assert (= temp38_77 (select ARGNAME_stride_NAMEEND_VAL temp38_76)))
(assert (= temp38_78 #x0000000000000005))
(assert (= temp38_79 temp38_78))
(assert (= temp38_80 (select ARGNAME_stride_NAMEEND_VAL temp38_79)))
(assert (= temp38_81 #x0000000000000000))
(assert (= temp38_82 #x0000000000000000))
(assert (= temp38_83 temp38_82))
(assert (= temp38_84 (select ARGNAME_stride_NAMEEND_VAL temp38_83)))
(assert (= temp38_85 #x0000000000000000))
(assert (= temp38_86 #x0000000000000001))
(assert (= temp38_87 temp38_86))
(assert (= temp38_88 (select ARGNAME_stride_NAMEEND_VAL temp38_87)))
(assert (= temp38_89 #x0000000000000000))
(assert (= temp38_90 #x0000000000000002))
(assert (= temp38_91 temp38_90))
(assert (= temp38_92 (select ARGNAME_stride_NAMEEND_VAL temp38_91)))
(assert (= temp38_93 #x0000000000000000))
(assert (= temp38_94 #x0000000000000003))
(assert (= temp38_95 temp38_94))
(assert (= temp38_96 (select ARGNAME_stride_NAMEEND_VAL temp38_95)))
(assert (= temp38_97 #x0000000000000000))
(assert (= temp38_98 #x0000000000000004))
(assert (= temp38_99 temp38_98))
(assert (= temp38_100 (select ARGNAME_stride_NAMEEND_VAL temp38_99)))
(assert (= temp38_101 #x0000000000000000))
(assert (= temp38_102 #x0000000000000005))
(assert (= temp38_103 temp38_102))
(assert (= temp38_104 (select ARGNAME_stride_NAMEEND_VAL temp38_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp38_84 temp38_81)
             (bvsle temp38_88 temp38_85)
             (bvsle temp38_92 temp38_89)
             (bvsle temp38_96 temp38_93)
             (bvsle temp38_100 temp38_97)
             (bvsle temp38_104 temp38_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_105 #x0000000000000000))
(assert (= var1716023 temp38_105))
(assert (= temp38_106 #x0000000000000000))
(assert (= var1704114 temp38_106))
(assert (= temp38_107 #x0000000000000000))
(assert (= temp38_108 temp38_107))
(assert (= temp38_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_108)))
(assert (= temp38_110 #x0000000000000001))
(assert (= temp38_111 temp38_110))
(assert (= temp38_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_111)))
(assert (= temp38_113 #x0000000000000002))
(assert (= temp38_114 temp38_113))
(assert (= temp38_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_114)))
(assert (= temp38_116 #x0000000000000003))
(assert (= temp38_117 temp38_116))
(assert (= temp38_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_117)))
(assert (= temp38_119 #x0000000000000004))
(assert (= temp38_120 temp38_119))
(assert (= temp38_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_120)))
(assert (= temp38_122 #x0000000000000005))
(assert (= temp38_123 temp38_122))
(assert (= temp38_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_123)))
(assert (= temp38_126 var1704114))
(assert (= temp38_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_126)))
(assert (= temp38_125 temp38_127))
(assert (= var1716068
   (ite (bvslt temp38_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_128 #x0000000000000000))
(assert (= var1716068 temp38_128))
(assert (= temp38_129 #x0000000000000000))
(assert (= var1704114 temp38_129))
(assert (= temp38_131 var1704114))
(assert (= temp38_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_131)))
(assert (= temp38_130 temp38_132))
(assert (= var1716090 (bvsmod temp38_130 ARGNAME_groups_NAMEEND)))
(assert (= temp38_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp38_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_134 #x0000000000000001))
(assert (= var1716091 temp38_134))
(assert (= var1716110 var1716000))
(assert (= temp38_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp38_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_136 #x0000000000000001))
(assert (= var1716111 temp38_136))
(assert (= temp38_137 #x0000000000000001))
(assert (= var1705002 temp38_137))
(assert (= temp38_139 var1705002))
(assert (= temp38_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_139)))
(assert (= temp38_138 temp38_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp38_138)))
(assert (= temp38_141 #x0000000000000000))
(assert (= var1704114 temp38_141))
(assert (= temp38_143 var1704114))
(assert (= temp38_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_143)))
(assert (= temp38_142 temp38_144))
(assert (= temp38_145 #x0000000000000002))
(assert (= var1979241 temp38_145))
(assert (= temp38_146 #x0000000000000001))
(assert (= var1716281 temp38_146))
(assert (= temp38_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp38_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_148 #x0000000000000001))
(assert (= var997490 temp38_148))
(assert (= temp38_149 #x0000000000000001))
(assert (= var997620 temp38_149))
(assert (= var3486185 var997620))
(assert (= temp38_150 #x0000000000000000))
(assert (= var3686207 temp38_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp38_151 #x0000000000000002))
(assert (= var3815043 temp38_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4469136 var997633))
(assert (= var997820 var997345))
(assert (= temp38_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp38_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5193549 var997821))
(assert (= temp38_154 #x0000000000000001))
(assert (= temp38_153 temp38_154))
(assert (= temp38_155 #x0000000000000001))
(assert (= var5770730 temp38_155))
(assert (= temp38_157 #xffffffffffffffff))
(assert (= temp38_156 temp38_157))
(assert (= temp38_158 #x0000000000000001))
(assert (= var997490 temp38_158))
(model-add temp38_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp38_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp38_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp38_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp38_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp38_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






