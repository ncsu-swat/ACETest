(declare-fun temp391_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp391_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp391_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp391_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp391_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp391_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp391_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp391_8 () (_ BitVec 64))
(declare-fun temp391_10 () (_ BitVec 64))
(declare-fun temp391_9 () (_ BitVec 64))
(declare-fun temp391_12 () (_ BitVec 64))
(declare-fun temp391_11 () (_ BitVec 64))
(declare-fun temp391_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp391_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp391_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp391_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp391_17 () (_ BitVec 64))
(declare-fun temp391_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp391_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp391_20 () (_ BitVec 64))
(declare-fun temp391_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp391_22 () (_ BitVec 64))
(declare-fun temp391_23 () (_ BitVec 64))
(declare-fun temp391_24 () (_ BitVec 64))
(declare-fun temp391_25 () (_ BitVec 64))
(declare-fun temp391_26 () (_ BitVec 64))
(declare-fun temp391_27 () (_ BitVec 64))
(declare-fun temp391_28 () (_ BitVec 64))
(declare-fun temp391_29 () (_ BitVec 64))
(declare-fun temp391_30 () (_ BitVec 64))
(declare-fun temp391_31 () (_ BitVec 64))
(declare-fun temp391_32 () (_ BitVec 64))
(declare-fun temp391_33 () (_ BitVec 64))
(declare-fun temp391_34 () (_ BitVec 64))
(declare-fun temp391_35 () (_ BitVec 64))
(declare-fun temp391_36 () (_ BitVec 64))
(declare-fun temp391_37 () (_ BitVec 64))
(declare-fun temp391_38 () (_ BitVec 64))
(declare-fun temp391_39 () (_ BitVec 64))
(declare-fun temp391_40 () (_ BitVec 64))
(declare-fun temp391_41 () (_ BitVec 64))
(declare-fun temp391_42 () (_ BitVec 64))
(declare-fun temp391_43 () (_ BitVec 64))
(declare-fun temp391_44 () (_ BitVec 64))
(declare-fun temp391_45 () (_ BitVec 64))
(declare-fun temp391_46 () (_ BitVec 64))
(declare-fun temp391_47 () (_ BitVec 64))
(declare-fun temp391_48 () (_ BitVec 64))
(declare-fun temp391_49 () (_ BitVec 64))
(declare-fun temp391_50 () (_ BitVec 64))
(declare-fun temp391_51 () (_ BitVec 64))
(declare-fun temp391_52 () (_ BitVec 64))
(declare-fun temp391_53 () (_ BitVec 64))
(declare-fun temp391_54 () (_ BitVec 64))
(declare-fun temp391_55 () (_ BitVec 64))
(declare-fun temp391_56 () (_ BitVec 64))
(declare-fun temp391_57 () (_ BitVec 64))
(declare-fun temp391_58 () (_ BitVec 64))
(declare-fun temp391_59 () (_ BitVec 64))
(declare-fun temp391_60 () (_ BitVec 64))
(declare-fun temp391_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp391_62 () (_ BitVec 64))
(declare-fun temp391_63 () (_ BitVec 64))
(declare-fun temp391_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp391_65 () (_ BitVec 64))
(declare-fun temp391_66 () (_ BitVec 64))
(declare-fun temp391_67 () (_ BitVec 64))
(declare-fun temp391_68 () (_ BitVec 64))
(declare-fun temp391_69 () (_ BitVec 64))
(declare-fun temp391_70 () (_ BitVec 64))
(declare-fun temp391_71 () (_ BitVec 64))
(declare-fun temp391_72 () (_ BitVec 64))
(declare-fun temp391_73 () (_ BitVec 64))
(declare-fun temp391_74 () (_ BitVec 64))
(declare-fun temp391_75 () (_ BitVec 64))
(declare-fun temp391_76 () (_ BitVec 64))
(declare-fun temp391_77 () (_ BitVec 64))
(declare-fun temp391_78 () (_ BitVec 64))
(declare-fun temp391_79 () (_ BitVec 64))
(declare-fun temp391_80 () (_ BitVec 64))
(declare-fun temp391_81 () (_ BitVec 64))
(declare-fun temp391_82 () (_ BitVec 64))
(declare-fun temp391_83 () (_ BitVec 64))
(declare-fun temp391_84 () (_ BitVec 64))
(declare-fun temp391_85 () (_ BitVec 64))
(declare-fun temp391_86 () (_ BitVec 64))
(declare-fun temp391_87 () (_ BitVec 64))
(declare-fun temp391_88 () (_ BitVec 64))
(declare-fun temp391_89 () (_ BitVec 64))
(declare-fun temp391_90 () (_ BitVec 64))
(declare-fun temp391_91 () (_ BitVec 64))
(declare-fun temp391_92 () (_ BitVec 64))
(declare-fun temp391_93 () (_ BitVec 64))
(declare-fun temp391_94 () (_ BitVec 64))
(declare-fun temp391_95 () (_ BitVec 64))
(declare-fun temp391_96 () (_ BitVec 64))
(declare-fun temp391_97 () (_ BitVec 64))
(declare-fun temp391_98 () (_ BitVec 64))
(declare-fun temp391_99 () (_ BitVec 64))
(declare-fun temp391_100 () (_ BitVec 64))
(declare-fun temp391_101 () (_ BitVec 64))
(declare-fun temp391_102 () (_ BitVec 64))
(declare-fun temp391_103 () (_ BitVec 64))
(declare-fun temp391_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp391_105 () (_ BitVec 64))
(declare-fun temp391_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp391_107 () (_ BitVec 64))
(declare-fun temp391_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp391_109 () (_ BitVec 64))
(declare-fun temp391_110 () (_ BitVec 64))
(declare-fun temp391_111 () (_ BitVec 64))
(declare-fun temp391_112 () (_ BitVec 64))
(declare-fun temp391_113 () (_ BitVec 64))
(declare-fun temp391_114 () (_ BitVec 64))
(declare-fun temp391_115 () (_ BitVec 64))
(declare-fun temp391_116 () (_ BitVec 64))
(declare-fun temp391_117 () (_ BitVec 64))
(declare-fun temp391_118 () (_ BitVec 64))
(declare-fun temp391_119 () (_ BitVec 64))
(declare-fun temp391_120 () (_ BitVec 64))
(declare-fun temp391_121 () (_ BitVec 64))
(declare-fun temp391_122 () (_ BitVec 64))
(declare-fun temp391_123 () (_ BitVec 64))
(declare-fun temp391_124 () (_ BitVec 64))
(declare-fun temp391_126 () (_ BitVec 64))
(declare-fun temp391_127 () (_ BitVec 64))
(declare-fun temp391_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp391_128 () (_ BitVec 64))
(declare-fun temp391_129 () (_ BitVec 64))
(declare-fun temp391_131 () (_ BitVec 64))
(declare-fun temp391_132 () (_ BitVec 64))
(declare-fun temp391_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp391_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp391_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp391_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp391_136 () (_ BitVec 64))
(declare-fun temp391_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp391_139 () (_ BitVec 64))
(declare-fun temp391_140 () (_ BitVec 64))
(declare-fun temp391_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp391_141 () (_ BitVec 64))
(declare-fun temp391_143 () (_ BitVec 64))
(declare-fun temp391_144 () (_ BitVec 64))
(declare-fun temp391_142 () (_ BitVec 64))
(declare-fun temp391_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp391_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp391_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp391_148 () (_ BitVec 64))
(declare-fun temp391_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp391_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp391_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp391_152 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun temp391_153 () (_ BitVec 64))
(assert (= temp391_1 #x0000000000000003))
(assert (= var465453 temp391_1))
(assert (= temp391_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp391_2)))
(assert (= temp391_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp391_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp391_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp391_4)))
(assert (= temp391_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp391_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp391_6 #x0000000000000000))
(assert (= var465488 temp391_6))
(assert (= temp391_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp391_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp391_8 #x0000000000000001))
(assert (= var465522 temp391_8))
(assert (= temp391_10 #x0000000000000000))
(assert (= temp391_9 temp391_10))
(assert (= temp391_12 #x0000000000000003))
(assert (= temp391_11 temp391_12))
(assert (= temp391_13 #x0000000000000000))
(assert (= var863614 temp391_13))
(assert (= temp391_14 #x0000000000000001))
(assert (= var863635 temp391_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp391_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp391_15)))
(assert (= temp391_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp391_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp391_17 #x0000000000000000))
(assert (= var997373 temp391_17))
(assert (= temp391_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp391_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp391_19 #x0000000000000000))
(assert (= var997418 temp391_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp391_20 #x0000000000000000))
(assert (= temp391_21 temp391_20))
(assert (= temp391_22 (select ARGNAME_padding_NAMEEND_VAL temp391_21)))
(assert (= temp391_23 #x0000000000000001))
(assert (= temp391_24 temp391_23))
(assert (= temp391_25 (select ARGNAME_padding_NAMEEND_VAL temp391_24)))
(assert (= temp391_26 #x0000000000000002))
(assert (= temp391_27 temp391_26))
(assert (= temp391_28 (select ARGNAME_padding_NAMEEND_VAL temp391_27)))
(assert (= temp391_29 #x0000000000000003))
(assert (= temp391_30 temp391_29))
(assert (= temp391_31 (select ARGNAME_padding_NAMEEND_VAL temp391_30)))
(assert (= temp391_32 #x0000000000000004))
(assert (= temp391_33 temp391_32))
(assert (= temp391_34 (select ARGNAME_padding_NAMEEND_VAL temp391_33)))
(assert (= temp391_35 #x0000000000000005))
(assert (= temp391_36 temp391_35))
(assert (= temp391_37 (select ARGNAME_padding_NAMEEND_VAL temp391_36)))
(assert (= temp391_38 #x0000000000000000))
(assert (= temp391_39 #x0000000000000000))
(assert (= temp391_40 temp391_39))
(assert (= temp391_41 (select ARGNAME_padding_NAMEEND_VAL temp391_40)))
(assert (= temp391_42 #x0000000000000000))
(assert (= temp391_43 #x0000000000000001))
(assert (= temp391_44 temp391_43))
(assert (= temp391_45 (select ARGNAME_padding_NAMEEND_VAL temp391_44)))
(assert (= temp391_46 #x0000000000000000))
(assert (= temp391_47 #x0000000000000002))
(assert (= temp391_48 temp391_47))
(assert (= temp391_49 (select ARGNAME_padding_NAMEEND_VAL temp391_48)))
(assert (= temp391_50 #x0000000000000000))
(assert (= temp391_51 #x0000000000000003))
(assert (= temp391_52 temp391_51))
(assert (= temp391_53 (select ARGNAME_padding_NAMEEND_VAL temp391_52)))
(assert (= temp391_54 #x0000000000000000))
(assert (= temp391_55 #x0000000000000004))
(assert (= temp391_56 temp391_55))
(assert (= temp391_57 (select ARGNAME_padding_NAMEEND_VAL temp391_56)))
(assert (= temp391_58 #x0000000000000000))
(assert (= temp391_59 #x0000000000000005))
(assert (= temp391_60 temp391_59))
(assert (= temp391_61 (select ARGNAME_padding_NAMEEND_VAL temp391_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp391_41 temp391_38)
             (bvslt temp391_45 temp391_42)
             (bvslt temp391_49 temp391_46)
             (bvslt temp391_53 temp391_50)
             (bvslt temp391_57 temp391_54)
             (bvslt temp391_61 temp391_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp391_62 #x0000000000000000))
(assert (= var1716002 temp391_62))
(assert (= temp391_63 #x0000000000000000))
(assert (= temp391_64 temp391_63))
(assert (= temp391_65 (select ARGNAME_stride_NAMEEND_VAL temp391_64)))
(assert (= temp391_66 #x0000000000000001))
(assert (= temp391_67 temp391_66))
(assert (= temp391_68 (select ARGNAME_stride_NAMEEND_VAL temp391_67)))
(assert (= temp391_69 #x0000000000000002))
(assert (= temp391_70 temp391_69))
(assert (= temp391_71 (select ARGNAME_stride_NAMEEND_VAL temp391_70)))
(assert (= temp391_72 #x0000000000000003))
(assert (= temp391_73 temp391_72))
(assert (= temp391_74 (select ARGNAME_stride_NAMEEND_VAL temp391_73)))
(assert (= temp391_75 #x0000000000000004))
(assert (= temp391_76 temp391_75))
(assert (= temp391_77 (select ARGNAME_stride_NAMEEND_VAL temp391_76)))
(assert (= temp391_78 #x0000000000000005))
(assert (= temp391_79 temp391_78))
(assert (= temp391_80 (select ARGNAME_stride_NAMEEND_VAL temp391_79)))
(assert (= temp391_81 #x0000000000000000))
(assert (= temp391_82 #x0000000000000000))
(assert (= temp391_83 temp391_82))
(assert (= temp391_84 (select ARGNAME_stride_NAMEEND_VAL temp391_83)))
(assert (= temp391_85 #x0000000000000000))
(assert (= temp391_86 #x0000000000000001))
(assert (= temp391_87 temp391_86))
(assert (= temp391_88 (select ARGNAME_stride_NAMEEND_VAL temp391_87)))
(assert (= temp391_89 #x0000000000000000))
(assert (= temp391_90 #x0000000000000002))
(assert (= temp391_91 temp391_90))
(assert (= temp391_92 (select ARGNAME_stride_NAMEEND_VAL temp391_91)))
(assert (= temp391_93 #x0000000000000000))
(assert (= temp391_94 #x0000000000000003))
(assert (= temp391_95 temp391_94))
(assert (= temp391_96 (select ARGNAME_stride_NAMEEND_VAL temp391_95)))
(assert (= temp391_97 #x0000000000000000))
(assert (= temp391_98 #x0000000000000004))
(assert (= temp391_99 temp391_98))
(assert (= temp391_100 (select ARGNAME_stride_NAMEEND_VAL temp391_99)))
(assert (= temp391_101 #x0000000000000000))
(assert (= temp391_102 #x0000000000000005))
(assert (= temp391_103 temp391_102))
(assert (= temp391_104 (select ARGNAME_stride_NAMEEND_VAL temp391_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp391_84 temp391_81)
             (bvsle temp391_88 temp391_85)
             (bvsle temp391_92 temp391_89)
             (bvsle temp391_96 temp391_93)
             (bvsle temp391_100 temp391_97)
             (bvsle temp391_104 temp391_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp391_105 #x0000000000000000))
(assert (= var1716023 temp391_105))
(assert (= temp391_106 #x0000000000000000))
(assert (= var1704114 temp391_106))
(assert (= temp391_107 #x0000000000000000))
(assert (= temp391_108 temp391_107))
(assert (= temp391_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_108)))
(assert (= temp391_110 #x0000000000000001))
(assert (= temp391_111 temp391_110))
(assert (= temp391_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_111)))
(assert (= temp391_113 #x0000000000000002))
(assert (= temp391_114 temp391_113))
(assert (= temp391_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_114)))
(assert (= temp391_116 #x0000000000000003))
(assert (= temp391_117 temp391_116))
(assert (= temp391_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_117)))
(assert (= temp391_119 #x0000000000000004))
(assert (= temp391_120 temp391_119))
(assert (= temp391_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_120)))
(assert (= temp391_122 #x0000000000000005))
(assert (= temp391_123 temp391_122))
(assert (= temp391_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_123)))
(assert (= temp391_126 var1704114))
(assert (= temp391_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_126)))
(assert (= temp391_125 temp391_127))
(assert (= var1716068
   (ite (bvslt temp391_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp391_128 #x0000000000000000))
(assert (= var1716068 temp391_128))
(assert (= temp391_129 #x0000000000000000))
(assert (= var1704114 temp391_129))
(assert (= temp391_131 var1704114))
(assert (= temp391_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_131)))
(assert (= temp391_130 temp391_132))
(assert (= var1716090 (bvsmod temp391_130 ARGNAME_groups_NAMEEND)))
(assert (= temp391_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp391_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp391_134 #x0000000000000001))
(assert (= var1716091 temp391_134))
(assert (= var1716110 var1716000))
(assert (= temp391_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp391_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp391_136 #x0000000000000001))
(assert (= var1716111 temp391_136))
(assert (= temp391_137 #x0000000000000001))
(assert (= var1705002 temp391_137))
(assert (= temp391_139 var1705002))
(assert (= temp391_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_139)))
(assert (= temp391_138 temp391_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp391_138)))
(assert (= temp391_141 #x0000000000000000))
(assert (= var1704114 temp391_141))
(assert (= temp391_143 var1704114))
(assert (= temp391_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp391_143)))
(assert (= temp391_142 temp391_144))
(assert (= temp391_145 #x0000000000000002))
(assert (= var1979241 temp391_145))
(assert (= temp391_146 #x0000000000000001))
(assert (= var1716281 temp391_146))
(assert (= temp391_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp391_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp391_148 #x0000000000000001))
(assert (= var997490 temp391_148))
(assert (= temp391_149 #x0000000000000001))
(assert (= var997620 temp391_149))
(assert (= var3486185 var997620))
(assert (= temp391_150 #x0000000000000000))
(assert (= var3686207 temp391_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp391_151 #x0000000000000002))
(assert (= var3815043 temp391_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4600208 var997633))
(assert (= var4862352 var997633))
(assert (= temp391_152 #x0000000000000000))
(assert (= var5190032 temp391_152))
(assert (= temp391_153 #x0000000000000001))
(assert (= var997490 temp391_153))
(model-add temp391_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp391_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp391_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp391_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp391_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp391_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





