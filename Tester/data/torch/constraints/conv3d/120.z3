(declare-fun temp158_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp158_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp158_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp158_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp158_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp158_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp158_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp158_8 () (_ BitVec 64))
(declare-fun temp158_10 () (_ BitVec 64))
(declare-fun temp158_9 () (_ BitVec 64))
(declare-fun temp158_12 () (_ BitVec 64))
(declare-fun temp158_11 () (_ BitVec 64))
(declare-fun temp158_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp158_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp158_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp158_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp158_17 () (_ BitVec 64))
(declare-fun temp158_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp158_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp158_20 () (_ BitVec 64))
(declare-fun temp158_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_22 () (_ BitVec 64))
(declare-fun temp158_23 () (_ BitVec 64))
(declare-fun temp158_24 () (_ BitVec 64))
(declare-fun temp158_25 () (_ BitVec 64))
(declare-fun temp158_26 () (_ BitVec 64))
(declare-fun temp158_27 () (_ BitVec 64))
(declare-fun temp158_28 () (_ BitVec 64))
(declare-fun temp158_29 () (_ BitVec 64))
(declare-fun temp158_30 () (_ BitVec 64))
(declare-fun temp158_31 () (_ BitVec 64))
(declare-fun temp158_32 () (_ BitVec 64))
(declare-fun temp158_33 () (_ BitVec 64))
(declare-fun temp158_34 () (_ BitVec 64))
(declare-fun temp158_35 () (_ BitVec 64))
(declare-fun temp158_36 () (_ BitVec 64))
(declare-fun temp158_37 () (_ BitVec 64))
(declare-fun temp158_38 () (_ BitVec 64))
(declare-fun temp158_39 () (_ BitVec 64))
(declare-fun temp158_40 () (_ BitVec 64))
(declare-fun temp158_41 () (_ BitVec 64))
(declare-fun temp158_42 () (_ BitVec 64))
(declare-fun temp158_43 () (_ BitVec 64))
(declare-fun temp158_44 () (_ BitVec 64))
(declare-fun temp158_45 () (_ BitVec 64))
(declare-fun temp158_46 () (_ BitVec 64))
(declare-fun temp158_47 () (_ BitVec 64))
(declare-fun temp158_48 () (_ BitVec 64))
(declare-fun temp158_49 () (_ BitVec 64))
(declare-fun temp158_50 () (_ BitVec 64))
(declare-fun temp158_51 () (_ BitVec 64))
(declare-fun temp158_52 () (_ BitVec 64))
(declare-fun temp158_53 () (_ BitVec 64))
(declare-fun temp158_54 () (_ BitVec 64))
(declare-fun temp158_55 () (_ BitVec 64))
(declare-fun temp158_56 () (_ BitVec 64))
(declare-fun temp158_57 () (_ BitVec 64))
(declare-fun temp158_58 () (_ BitVec 64))
(declare-fun temp158_59 () (_ BitVec 64))
(declare-fun temp158_60 () (_ BitVec 64))
(declare-fun temp158_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp158_62 () (_ BitVec 64))
(declare-fun temp158_63 () (_ BitVec 64))
(declare-fun temp158_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_65 () (_ BitVec 64))
(declare-fun temp158_66 () (_ BitVec 64))
(declare-fun temp158_67 () (_ BitVec 64))
(declare-fun temp158_68 () (_ BitVec 64))
(declare-fun temp158_69 () (_ BitVec 64))
(declare-fun temp158_70 () (_ BitVec 64))
(declare-fun temp158_71 () (_ BitVec 64))
(declare-fun temp158_72 () (_ BitVec 64))
(declare-fun temp158_73 () (_ BitVec 64))
(declare-fun temp158_74 () (_ BitVec 64))
(declare-fun temp158_75 () (_ BitVec 64))
(declare-fun temp158_76 () (_ BitVec 64))
(declare-fun temp158_77 () (_ BitVec 64))
(declare-fun temp158_78 () (_ BitVec 64))
(declare-fun temp158_79 () (_ BitVec 64))
(declare-fun temp158_80 () (_ BitVec 64))
(declare-fun temp158_81 () (_ BitVec 64))
(declare-fun temp158_82 () (_ BitVec 64))
(declare-fun temp158_83 () (_ BitVec 64))
(declare-fun temp158_84 () (_ BitVec 64))
(declare-fun temp158_85 () (_ BitVec 64))
(declare-fun temp158_86 () (_ BitVec 64))
(declare-fun temp158_87 () (_ BitVec 64))
(declare-fun temp158_88 () (_ BitVec 64))
(declare-fun temp158_89 () (_ BitVec 64))
(declare-fun temp158_90 () (_ BitVec 64))
(declare-fun temp158_91 () (_ BitVec 64))
(declare-fun temp158_92 () (_ BitVec 64))
(declare-fun temp158_93 () (_ BitVec 64))
(declare-fun temp158_94 () (_ BitVec 64))
(declare-fun temp158_95 () (_ BitVec 64))
(declare-fun temp158_96 () (_ BitVec 64))
(declare-fun temp158_97 () (_ BitVec 64))
(declare-fun temp158_98 () (_ BitVec 64))
(declare-fun temp158_99 () (_ BitVec 64))
(declare-fun temp158_100 () (_ BitVec 64))
(declare-fun temp158_101 () (_ BitVec 64))
(declare-fun temp158_102 () (_ BitVec 64))
(declare-fun temp158_103 () (_ BitVec 64))
(declare-fun temp158_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp158_105 () (_ BitVec 64))
(declare-fun temp158_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp158_107 () (_ BitVec 64))
(declare-fun temp158_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_109 () (_ BitVec 64))
(declare-fun temp158_110 () (_ BitVec 64))
(declare-fun temp158_111 () (_ BitVec 64))
(declare-fun temp158_112 () (_ BitVec 64))
(declare-fun temp158_113 () (_ BitVec 64))
(declare-fun temp158_114 () (_ BitVec 64))
(declare-fun temp158_115 () (_ BitVec 64))
(declare-fun temp158_116 () (_ BitVec 64))
(declare-fun temp158_117 () (_ BitVec 64))
(declare-fun temp158_118 () (_ BitVec 64))
(declare-fun temp158_119 () (_ BitVec 64))
(declare-fun temp158_120 () (_ BitVec 64))
(declare-fun temp158_121 () (_ BitVec 64))
(declare-fun temp158_122 () (_ BitVec 64))
(declare-fun temp158_123 () (_ BitVec 64))
(declare-fun temp158_124 () (_ BitVec 64))
(declare-fun temp158_126 () (_ BitVec 64))
(declare-fun temp158_127 () (_ BitVec 64))
(declare-fun temp158_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp158_128 () (_ BitVec 64))
(declare-fun temp158_129 () (_ BitVec 64))
(declare-fun temp158_131 () (_ BitVec 64))
(declare-fun temp158_132 () (_ BitVec 64))
(declare-fun temp158_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp158_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp158_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp158_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp158_136 () (_ BitVec 64))
(declare-fun temp158_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp158_139 () (_ BitVec 64))
(declare-fun temp158_140 () (_ BitVec 64))
(declare-fun temp158_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp158_141 () (_ BitVec 64))
(declare-fun temp158_143 () (_ BitVec 64))
(declare-fun temp158_144 () (_ BitVec 64))
(declare-fun temp158_142 () (_ BitVec 64))
(declare-fun temp158_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp158_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp158_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp158_148 () (_ BitVec 64))
(declare-fun temp158_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp158_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp158_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp158_153 () (_ BitVec 64))
(declare-fun temp158_152 () (_ BitVec 64))
(declare-fun temp158_154 () (_ BitVec 64))
(assert (= temp158_1 #x0000000000000003))
(assert (= var465453 temp158_1))
(assert (= temp158_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp158_2)))
(assert (= temp158_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp158_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp158_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp158_4)))
(assert (= temp158_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp158_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp158_6 #x0000000000000000))
(assert (= var465488 temp158_6))
(assert (= temp158_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp158_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_8 #x0000000000000001))
(assert (= var465522 temp158_8))
(assert (= temp158_10 #x0000000000000000))
(assert (= temp158_9 temp158_10))
(assert (= temp158_12 #x0000000000000003))
(assert (= temp158_11 temp158_12))
(assert (= temp158_13 #x0000000000000000))
(assert (= var863614 temp158_13))
(assert (= temp158_14 #x0000000000000001))
(assert (= var863635 temp158_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp158_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp158_15)))
(assert (= temp158_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp158_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_17 #x0000000000000000))
(assert (= var997373 temp158_17))
(assert (= temp158_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp158_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_19 #x0000000000000000))
(assert (= var997418 temp158_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp158_20 #x0000000000000000))
(assert (= temp158_21 temp158_20))
(assert (= temp158_22 (select ARGNAME_padding_NAMEEND_VAL temp158_21)))
(assert (= temp158_23 #x0000000000000001))
(assert (= temp158_24 temp158_23))
(assert (= temp158_25 (select ARGNAME_padding_NAMEEND_VAL temp158_24)))
(assert (= temp158_26 #x0000000000000002))
(assert (= temp158_27 temp158_26))
(assert (= temp158_28 (select ARGNAME_padding_NAMEEND_VAL temp158_27)))
(assert (= temp158_29 #x0000000000000003))
(assert (= temp158_30 temp158_29))
(assert (= temp158_31 (select ARGNAME_padding_NAMEEND_VAL temp158_30)))
(assert (= temp158_32 #x0000000000000004))
(assert (= temp158_33 temp158_32))
(assert (= temp158_34 (select ARGNAME_padding_NAMEEND_VAL temp158_33)))
(assert (= temp158_35 #x0000000000000005))
(assert (= temp158_36 temp158_35))
(assert (= temp158_37 (select ARGNAME_padding_NAMEEND_VAL temp158_36)))
(assert (= temp158_38 #x0000000000000000))
(assert (= temp158_39 #x0000000000000000))
(assert (= temp158_40 temp158_39))
(assert (= temp158_41 (select ARGNAME_padding_NAMEEND_VAL temp158_40)))
(assert (= temp158_42 #x0000000000000000))
(assert (= temp158_43 #x0000000000000001))
(assert (= temp158_44 temp158_43))
(assert (= temp158_45 (select ARGNAME_padding_NAMEEND_VAL temp158_44)))
(assert (= temp158_46 #x0000000000000000))
(assert (= temp158_47 #x0000000000000002))
(assert (= temp158_48 temp158_47))
(assert (= temp158_49 (select ARGNAME_padding_NAMEEND_VAL temp158_48)))
(assert (= temp158_50 #x0000000000000000))
(assert (= temp158_51 #x0000000000000003))
(assert (= temp158_52 temp158_51))
(assert (= temp158_53 (select ARGNAME_padding_NAMEEND_VAL temp158_52)))
(assert (= temp158_54 #x0000000000000000))
(assert (= temp158_55 #x0000000000000004))
(assert (= temp158_56 temp158_55))
(assert (= temp158_57 (select ARGNAME_padding_NAMEEND_VAL temp158_56)))
(assert (= temp158_58 #x0000000000000000))
(assert (= temp158_59 #x0000000000000005))
(assert (= temp158_60 temp158_59))
(assert (= temp158_61 (select ARGNAME_padding_NAMEEND_VAL temp158_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp158_41 temp158_38)
             (bvslt temp158_45 temp158_42)
             (bvslt temp158_49 temp158_46)
             (bvslt temp158_53 temp158_50)
             (bvslt temp158_57 temp158_54)
             (bvslt temp158_61 temp158_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_62 #x0000000000000000))
(assert (= var1716002 temp158_62))
(assert (= temp158_63 #x0000000000000000))
(assert (= temp158_64 temp158_63))
(assert (= temp158_65 (select ARGNAME_stride_NAMEEND_VAL temp158_64)))
(assert (= temp158_66 #x0000000000000001))
(assert (= temp158_67 temp158_66))
(assert (= temp158_68 (select ARGNAME_stride_NAMEEND_VAL temp158_67)))
(assert (= temp158_69 #x0000000000000002))
(assert (= temp158_70 temp158_69))
(assert (= temp158_71 (select ARGNAME_stride_NAMEEND_VAL temp158_70)))
(assert (= temp158_72 #x0000000000000003))
(assert (= temp158_73 temp158_72))
(assert (= temp158_74 (select ARGNAME_stride_NAMEEND_VAL temp158_73)))
(assert (= temp158_75 #x0000000000000004))
(assert (= temp158_76 temp158_75))
(assert (= temp158_77 (select ARGNAME_stride_NAMEEND_VAL temp158_76)))
(assert (= temp158_78 #x0000000000000005))
(assert (= temp158_79 temp158_78))
(assert (= temp158_80 (select ARGNAME_stride_NAMEEND_VAL temp158_79)))
(assert (= temp158_81 #x0000000000000000))
(assert (= temp158_82 #x0000000000000000))
(assert (= temp158_83 temp158_82))
(assert (= temp158_84 (select ARGNAME_stride_NAMEEND_VAL temp158_83)))
(assert (= temp158_85 #x0000000000000000))
(assert (= temp158_86 #x0000000000000001))
(assert (= temp158_87 temp158_86))
(assert (= temp158_88 (select ARGNAME_stride_NAMEEND_VAL temp158_87)))
(assert (= temp158_89 #x0000000000000000))
(assert (= temp158_90 #x0000000000000002))
(assert (= temp158_91 temp158_90))
(assert (= temp158_92 (select ARGNAME_stride_NAMEEND_VAL temp158_91)))
(assert (= temp158_93 #x0000000000000000))
(assert (= temp158_94 #x0000000000000003))
(assert (= temp158_95 temp158_94))
(assert (= temp158_96 (select ARGNAME_stride_NAMEEND_VAL temp158_95)))
(assert (= temp158_97 #x0000000000000000))
(assert (= temp158_98 #x0000000000000004))
(assert (= temp158_99 temp158_98))
(assert (= temp158_100 (select ARGNAME_stride_NAMEEND_VAL temp158_99)))
(assert (= temp158_101 #x0000000000000000))
(assert (= temp158_102 #x0000000000000005))
(assert (= temp158_103 temp158_102))
(assert (= temp158_104 (select ARGNAME_stride_NAMEEND_VAL temp158_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp158_84 temp158_81)
             (bvsle temp158_88 temp158_85)
             (bvsle temp158_92 temp158_89)
             (bvsle temp158_96 temp158_93)
             (bvsle temp158_100 temp158_97)
             (bvsle temp158_104 temp158_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_105 #x0000000000000000))
(assert (= var1716023 temp158_105))
(assert (= temp158_106 #x0000000000000000))
(assert (= var1704114 temp158_106))
(assert (= temp158_107 #x0000000000000000))
(assert (= temp158_108 temp158_107))
(assert (= temp158_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_108)))
(assert (= temp158_110 #x0000000000000001))
(assert (= temp158_111 temp158_110))
(assert (= temp158_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_111)))
(assert (= temp158_113 #x0000000000000002))
(assert (= temp158_114 temp158_113))
(assert (= temp158_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_114)))
(assert (= temp158_116 #x0000000000000003))
(assert (= temp158_117 temp158_116))
(assert (= temp158_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_117)))
(assert (= temp158_119 #x0000000000000004))
(assert (= temp158_120 temp158_119))
(assert (= temp158_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_120)))
(assert (= temp158_122 #x0000000000000005))
(assert (= temp158_123 temp158_122))
(assert (= temp158_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_123)))
(assert (= temp158_126 var1704114))
(assert (= temp158_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_126)))
(assert (= temp158_125 temp158_127))
(assert (= var1716068
   (ite (bvslt temp158_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_128 #x0000000000000000))
(assert (= var1716068 temp158_128))
(assert (= temp158_129 #x0000000000000000))
(assert (= var1704114 temp158_129))
(assert (= temp158_131 var1704114))
(assert (= temp158_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_131)))
(assert (= temp158_130 temp158_132))
(assert (= var1716090 (bvsmod temp158_130 ARGNAME_groups_NAMEEND)))
(assert (= temp158_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp158_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_134 #x0000000000000001))
(assert (= var1716091 temp158_134))
(assert (= var1716110 var1716000))
(assert (= temp158_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp158_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_136 #x0000000000000001))
(assert (= var1716111 temp158_136))
(assert (= temp158_137 #x0000000000000001))
(assert (= var1705002 temp158_137))
(assert (= temp158_139 var1705002))
(assert (= temp158_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_139)))
(assert (= temp158_138 temp158_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp158_138)))
(assert (= temp158_141 #x0000000000000000))
(assert (= var1704114 temp158_141))
(assert (= temp158_143 var1704114))
(assert (= temp158_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp158_143)))
(assert (= temp158_142 temp158_144))
(assert (= temp158_145 #x0000000000000002))
(assert (= var1979241 temp158_145))
(assert (= temp158_146 #x0000000000000001))
(assert (= var1716281 temp158_146))
(assert (= temp158_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp158_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_148 #x0000000000000001))
(assert (= var997490 temp158_148))
(assert (= temp158_149 #x0000000000000001))
(assert (= var997620 temp158_149))
(assert (= var3486185 var997620))
(assert (= temp158_150 #x0000000000000000))
(assert (= var3686207 temp158_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp158_151 #x0000000000000002))
(assert (= var3815043 temp158_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp158_153 #xffffffffffffffff))
(assert (= temp158_152 temp158_153))
(assert (= temp158_154 #x0000000000000001))
(assert (= var997490 temp158_154))
(model-add temp158_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp158_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp158_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp158_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp158_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp158_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






