(declare-fun temp365_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp365_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp365_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp365_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp365_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp365_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp365_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp365_8 () (_ BitVec 64))
(declare-fun temp365_10 () (_ BitVec 64))
(declare-fun temp365_9 () (_ BitVec 64))
(declare-fun temp365_12 () (_ BitVec 64))
(declare-fun temp365_11 () (_ BitVec 64))
(declare-fun temp365_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp365_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp365_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp365_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp365_17 () (_ BitVec 64))
(declare-fun temp365_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp365_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp365_20 () (_ BitVec 64))
(declare-fun temp365_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp365_22 () (_ BitVec 64))
(declare-fun temp365_23 () (_ BitVec 64))
(declare-fun temp365_24 () (_ BitVec 64))
(declare-fun temp365_25 () (_ BitVec 64))
(declare-fun temp365_26 () (_ BitVec 64))
(declare-fun temp365_27 () (_ BitVec 64))
(declare-fun temp365_28 () (_ BitVec 64))
(declare-fun temp365_29 () (_ BitVec 64))
(declare-fun temp365_30 () (_ BitVec 64))
(declare-fun temp365_31 () (_ BitVec 64))
(declare-fun temp365_32 () (_ BitVec 64))
(declare-fun temp365_33 () (_ BitVec 64))
(declare-fun temp365_34 () (_ BitVec 64))
(declare-fun temp365_35 () (_ BitVec 64))
(declare-fun temp365_36 () (_ BitVec 64))
(declare-fun temp365_37 () (_ BitVec 64))
(declare-fun temp365_38 () (_ BitVec 64))
(declare-fun temp365_39 () (_ BitVec 64))
(declare-fun temp365_40 () (_ BitVec 64))
(declare-fun temp365_41 () (_ BitVec 64))
(declare-fun temp365_42 () (_ BitVec 64))
(declare-fun temp365_43 () (_ BitVec 64))
(declare-fun temp365_44 () (_ BitVec 64))
(declare-fun temp365_45 () (_ BitVec 64))
(declare-fun temp365_46 () (_ BitVec 64))
(declare-fun temp365_47 () (_ BitVec 64))
(declare-fun temp365_48 () (_ BitVec 64))
(declare-fun temp365_49 () (_ BitVec 64))
(declare-fun temp365_50 () (_ BitVec 64))
(declare-fun temp365_51 () (_ BitVec 64))
(declare-fun temp365_52 () (_ BitVec 64))
(declare-fun temp365_53 () (_ BitVec 64))
(declare-fun temp365_54 () (_ BitVec 64))
(declare-fun temp365_55 () (_ BitVec 64))
(declare-fun temp365_56 () (_ BitVec 64))
(declare-fun temp365_57 () (_ BitVec 64))
(declare-fun temp365_58 () (_ BitVec 64))
(declare-fun temp365_59 () (_ BitVec 64))
(declare-fun temp365_60 () (_ BitVec 64))
(declare-fun temp365_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp365_62 () (_ BitVec 64))
(declare-fun temp365_63 () (_ BitVec 64))
(declare-fun temp365_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp365_65 () (_ BitVec 64))
(declare-fun temp365_66 () (_ BitVec 64))
(declare-fun temp365_67 () (_ BitVec 64))
(declare-fun temp365_68 () (_ BitVec 64))
(declare-fun temp365_69 () (_ BitVec 64))
(declare-fun temp365_70 () (_ BitVec 64))
(declare-fun temp365_71 () (_ BitVec 64))
(declare-fun temp365_72 () (_ BitVec 64))
(declare-fun temp365_73 () (_ BitVec 64))
(declare-fun temp365_74 () (_ BitVec 64))
(declare-fun temp365_75 () (_ BitVec 64))
(declare-fun temp365_76 () (_ BitVec 64))
(declare-fun temp365_77 () (_ BitVec 64))
(declare-fun temp365_78 () (_ BitVec 64))
(declare-fun temp365_79 () (_ BitVec 64))
(declare-fun temp365_80 () (_ BitVec 64))
(declare-fun temp365_81 () (_ BitVec 64))
(declare-fun temp365_82 () (_ BitVec 64))
(declare-fun temp365_83 () (_ BitVec 64))
(declare-fun temp365_84 () (_ BitVec 64))
(declare-fun temp365_85 () (_ BitVec 64))
(declare-fun temp365_86 () (_ BitVec 64))
(declare-fun temp365_87 () (_ BitVec 64))
(declare-fun temp365_88 () (_ BitVec 64))
(declare-fun temp365_89 () (_ BitVec 64))
(declare-fun temp365_90 () (_ BitVec 64))
(declare-fun temp365_91 () (_ BitVec 64))
(declare-fun temp365_92 () (_ BitVec 64))
(declare-fun temp365_93 () (_ BitVec 64))
(declare-fun temp365_94 () (_ BitVec 64))
(declare-fun temp365_95 () (_ BitVec 64))
(declare-fun temp365_96 () (_ BitVec 64))
(declare-fun temp365_97 () (_ BitVec 64))
(declare-fun temp365_98 () (_ BitVec 64))
(declare-fun temp365_99 () (_ BitVec 64))
(declare-fun temp365_100 () (_ BitVec 64))
(declare-fun temp365_101 () (_ BitVec 64))
(declare-fun temp365_102 () (_ BitVec 64))
(declare-fun temp365_103 () (_ BitVec 64))
(declare-fun temp365_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp365_105 () (_ BitVec 64))
(declare-fun temp365_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp365_107 () (_ BitVec 64))
(declare-fun temp365_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp365_109 () (_ BitVec 64))
(declare-fun temp365_110 () (_ BitVec 64))
(declare-fun temp365_111 () (_ BitVec 64))
(declare-fun temp365_112 () (_ BitVec 64))
(declare-fun temp365_113 () (_ BitVec 64))
(declare-fun temp365_114 () (_ BitVec 64))
(declare-fun temp365_115 () (_ BitVec 64))
(declare-fun temp365_116 () (_ BitVec 64))
(declare-fun temp365_117 () (_ BitVec 64))
(declare-fun temp365_118 () (_ BitVec 64))
(declare-fun temp365_119 () (_ BitVec 64))
(declare-fun temp365_120 () (_ BitVec 64))
(declare-fun temp365_121 () (_ BitVec 64))
(declare-fun temp365_122 () (_ BitVec 64))
(declare-fun temp365_123 () (_ BitVec 64))
(declare-fun temp365_124 () (_ BitVec 64))
(declare-fun temp365_126 () (_ BitVec 64))
(declare-fun temp365_127 () (_ BitVec 64))
(declare-fun temp365_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp365_128 () (_ BitVec 64))
(declare-fun temp365_129 () (_ BitVec 64))
(declare-fun temp365_131 () (_ BitVec 64))
(declare-fun temp365_132 () (_ BitVec 64))
(declare-fun temp365_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp365_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp365_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp365_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp365_136 () (_ BitVec 64))
(declare-fun temp365_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp365_139 () (_ BitVec 64))
(declare-fun temp365_140 () (_ BitVec 64))
(declare-fun temp365_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp365_141 () (_ BitVec 64))
(declare-fun temp365_143 () (_ BitVec 64))
(declare-fun temp365_144 () (_ BitVec 64))
(declare-fun temp365_142 () (_ BitVec 64))
(declare-fun temp365_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp365_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp365_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp365_148 () (_ BitVec 64))
(declare-fun temp365_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp365_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp365_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp365_152 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp365_153 () (_ BitVec 64))
(assert (= temp365_1 #x0000000000000003))
(assert (= var465453 temp365_1))
(assert (= temp365_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp365_2)))
(assert (= temp365_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp365_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp365_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp365_4)))
(assert (= temp365_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp365_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp365_6 #x0000000000000000))
(assert (= var465488 temp365_6))
(assert (= temp365_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp365_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp365_8 #x0000000000000001))
(assert (= var465522 temp365_8))
(assert (= temp365_10 #x0000000000000000))
(assert (= temp365_9 temp365_10))
(assert (= temp365_12 #x0000000000000003))
(assert (= temp365_11 temp365_12))
(assert (= temp365_13 #x0000000000000000))
(assert (= var863614 temp365_13))
(assert (= temp365_14 #x0000000000000001))
(assert (= var863635 temp365_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp365_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp365_15)))
(assert (= temp365_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp365_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp365_17 #x0000000000000000))
(assert (= var997373 temp365_17))
(assert (= temp365_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp365_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp365_19 #x0000000000000000))
(assert (= var997418 temp365_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp365_20 #x0000000000000000))
(assert (= temp365_21 temp365_20))
(assert (= temp365_22 (select ARGNAME_padding_NAMEEND_VAL temp365_21)))
(assert (= temp365_23 #x0000000000000001))
(assert (= temp365_24 temp365_23))
(assert (= temp365_25 (select ARGNAME_padding_NAMEEND_VAL temp365_24)))
(assert (= temp365_26 #x0000000000000002))
(assert (= temp365_27 temp365_26))
(assert (= temp365_28 (select ARGNAME_padding_NAMEEND_VAL temp365_27)))
(assert (= temp365_29 #x0000000000000003))
(assert (= temp365_30 temp365_29))
(assert (= temp365_31 (select ARGNAME_padding_NAMEEND_VAL temp365_30)))
(assert (= temp365_32 #x0000000000000004))
(assert (= temp365_33 temp365_32))
(assert (= temp365_34 (select ARGNAME_padding_NAMEEND_VAL temp365_33)))
(assert (= temp365_35 #x0000000000000005))
(assert (= temp365_36 temp365_35))
(assert (= temp365_37 (select ARGNAME_padding_NAMEEND_VAL temp365_36)))
(assert (= temp365_38 #x0000000000000000))
(assert (= temp365_39 #x0000000000000000))
(assert (= temp365_40 temp365_39))
(assert (= temp365_41 (select ARGNAME_padding_NAMEEND_VAL temp365_40)))
(assert (= temp365_42 #x0000000000000000))
(assert (= temp365_43 #x0000000000000001))
(assert (= temp365_44 temp365_43))
(assert (= temp365_45 (select ARGNAME_padding_NAMEEND_VAL temp365_44)))
(assert (= temp365_46 #x0000000000000000))
(assert (= temp365_47 #x0000000000000002))
(assert (= temp365_48 temp365_47))
(assert (= temp365_49 (select ARGNAME_padding_NAMEEND_VAL temp365_48)))
(assert (= temp365_50 #x0000000000000000))
(assert (= temp365_51 #x0000000000000003))
(assert (= temp365_52 temp365_51))
(assert (= temp365_53 (select ARGNAME_padding_NAMEEND_VAL temp365_52)))
(assert (= temp365_54 #x0000000000000000))
(assert (= temp365_55 #x0000000000000004))
(assert (= temp365_56 temp365_55))
(assert (= temp365_57 (select ARGNAME_padding_NAMEEND_VAL temp365_56)))
(assert (= temp365_58 #x0000000000000000))
(assert (= temp365_59 #x0000000000000005))
(assert (= temp365_60 temp365_59))
(assert (= temp365_61 (select ARGNAME_padding_NAMEEND_VAL temp365_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp365_41 temp365_38)
             (bvslt temp365_45 temp365_42)
             (bvslt temp365_49 temp365_46)
             (bvslt temp365_53 temp365_50)
             (bvslt temp365_57 temp365_54)
             (bvslt temp365_61 temp365_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp365_62 #x0000000000000000))
(assert (= var1716002 temp365_62))
(assert (= temp365_63 #x0000000000000000))
(assert (= temp365_64 temp365_63))
(assert (= temp365_65 (select ARGNAME_stride_NAMEEND_VAL temp365_64)))
(assert (= temp365_66 #x0000000000000001))
(assert (= temp365_67 temp365_66))
(assert (= temp365_68 (select ARGNAME_stride_NAMEEND_VAL temp365_67)))
(assert (= temp365_69 #x0000000000000002))
(assert (= temp365_70 temp365_69))
(assert (= temp365_71 (select ARGNAME_stride_NAMEEND_VAL temp365_70)))
(assert (= temp365_72 #x0000000000000003))
(assert (= temp365_73 temp365_72))
(assert (= temp365_74 (select ARGNAME_stride_NAMEEND_VAL temp365_73)))
(assert (= temp365_75 #x0000000000000004))
(assert (= temp365_76 temp365_75))
(assert (= temp365_77 (select ARGNAME_stride_NAMEEND_VAL temp365_76)))
(assert (= temp365_78 #x0000000000000005))
(assert (= temp365_79 temp365_78))
(assert (= temp365_80 (select ARGNAME_stride_NAMEEND_VAL temp365_79)))
(assert (= temp365_81 #x0000000000000000))
(assert (= temp365_82 #x0000000000000000))
(assert (= temp365_83 temp365_82))
(assert (= temp365_84 (select ARGNAME_stride_NAMEEND_VAL temp365_83)))
(assert (= temp365_85 #x0000000000000000))
(assert (= temp365_86 #x0000000000000001))
(assert (= temp365_87 temp365_86))
(assert (= temp365_88 (select ARGNAME_stride_NAMEEND_VAL temp365_87)))
(assert (= temp365_89 #x0000000000000000))
(assert (= temp365_90 #x0000000000000002))
(assert (= temp365_91 temp365_90))
(assert (= temp365_92 (select ARGNAME_stride_NAMEEND_VAL temp365_91)))
(assert (= temp365_93 #x0000000000000000))
(assert (= temp365_94 #x0000000000000003))
(assert (= temp365_95 temp365_94))
(assert (= temp365_96 (select ARGNAME_stride_NAMEEND_VAL temp365_95)))
(assert (= temp365_97 #x0000000000000000))
(assert (= temp365_98 #x0000000000000004))
(assert (= temp365_99 temp365_98))
(assert (= temp365_100 (select ARGNAME_stride_NAMEEND_VAL temp365_99)))
(assert (= temp365_101 #x0000000000000000))
(assert (= temp365_102 #x0000000000000005))
(assert (= temp365_103 temp365_102))
(assert (= temp365_104 (select ARGNAME_stride_NAMEEND_VAL temp365_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp365_84 temp365_81)
             (bvsle temp365_88 temp365_85)
             (bvsle temp365_92 temp365_89)
             (bvsle temp365_96 temp365_93)
             (bvsle temp365_100 temp365_97)
             (bvsle temp365_104 temp365_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp365_105 #x0000000000000000))
(assert (= var1716023 temp365_105))
(assert (= temp365_106 #x0000000000000000))
(assert (= var1704114 temp365_106))
(assert (= temp365_107 #x0000000000000000))
(assert (= temp365_108 temp365_107))
(assert (= temp365_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_108)))
(assert (= temp365_110 #x0000000000000001))
(assert (= temp365_111 temp365_110))
(assert (= temp365_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_111)))
(assert (= temp365_113 #x0000000000000002))
(assert (= temp365_114 temp365_113))
(assert (= temp365_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_114)))
(assert (= temp365_116 #x0000000000000003))
(assert (= temp365_117 temp365_116))
(assert (= temp365_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_117)))
(assert (= temp365_119 #x0000000000000004))
(assert (= temp365_120 temp365_119))
(assert (= temp365_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_120)))
(assert (= temp365_122 #x0000000000000005))
(assert (= temp365_123 temp365_122))
(assert (= temp365_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_123)))
(assert (= temp365_126 var1704114))
(assert (= temp365_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_126)))
(assert (= temp365_125 temp365_127))
(assert (= var1716068
   (ite (bvslt temp365_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp365_128 #x0000000000000000))
(assert (= var1716068 temp365_128))
(assert (= temp365_129 #x0000000000000000))
(assert (= var1704114 temp365_129))
(assert (= temp365_131 var1704114))
(assert (= temp365_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_131)))
(assert (= temp365_130 temp365_132))
(assert (= var1716090 (bvsmod temp365_130 ARGNAME_groups_NAMEEND)))
(assert (= temp365_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp365_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp365_134 #x0000000000000001))
(assert (= var1716091 temp365_134))
(assert (= var1716110 var1716000))
(assert (= temp365_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp365_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp365_136 #x0000000000000001))
(assert (= var1716111 temp365_136))
(assert (= temp365_137 #x0000000000000001))
(assert (= var1705002 temp365_137))
(assert (= temp365_139 var1705002))
(assert (= temp365_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_139)))
(assert (= temp365_138 temp365_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp365_138)))
(assert (= temp365_141 #x0000000000000000))
(assert (= var1704114 temp365_141))
(assert (= temp365_143 var1704114))
(assert (= temp365_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp365_143)))
(assert (= temp365_142 temp365_144))
(assert (= temp365_145 #x0000000000000002))
(assert (= var1979241 temp365_145))
(assert (= temp365_146 #x0000000000000001))
(assert (= var1716281 temp365_146))
(assert (= temp365_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp365_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp365_148 #x0000000000000001))
(assert (= var997490 temp365_148))
(assert (= temp365_149 #x0000000000000001))
(assert (= var997620 temp365_149))
(assert (= var3486185 var997620))
(assert (= temp365_150 #x0000000000000000))
(assert (= var3686207 temp365_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp365_151 #x0000000000000002))
(assert (= var3815043 temp365_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var5058960 var997633))
(assert (= var5321104 var997633))
(assert (= temp365_152 #x0000000000000000))
(assert (= var5648784 temp365_152))
(assert (= temp365_153 #x0000000000000001))
(assert (= var997490 temp365_153))
(model-add temp365_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp365_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp365_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp365_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp365_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp365_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






