(declare-fun temp642_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp642_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp642_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp642_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp642_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp642_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp642_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp642_8 () (_ BitVec 64))
(declare-fun temp642_10 () (_ BitVec 64))
(declare-fun temp642_9 () (_ BitVec 64))
(declare-fun temp642_12 () (_ BitVec 64))
(declare-fun temp642_11 () (_ BitVec 64))
(declare-fun temp642_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp642_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp642_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp642_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp642_17 () (_ BitVec 64))
(declare-fun temp642_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp642_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp642_20 () (_ BitVec 64))
(declare-fun temp642_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_22 () (_ BitVec 64))
(declare-fun temp642_23 () (_ BitVec 64))
(declare-fun temp642_24 () (_ BitVec 64))
(declare-fun temp642_25 () (_ BitVec 64))
(declare-fun temp642_26 () (_ BitVec 64))
(declare-fun temp642_27 () (_ BitVec 64))
(declare-fun temp642_28 () (_ BitVec 64))
(declare-fun temp642_29 () (_ BitVec 64))
(declare-fun temp642_30 () (_ BitVec 64))
(declare-fun temp642_31 () (_ BitVec 64))
(declare-fun temp642_32 () (_ BitVec 64))
(declare-fun temp642_33 () (_ BitVec 64))
(declare-fun temp642_34 () (_ BitVec 64))
(declare-fun temp642_35 () (_ BitVec 64))
(declare-fun temp642_36 () (_ BitVec 64))
(declare-fun temp642_37 () (_ BitVec 64))
(declare-fun temp642_38 () (_ BitVec 64))
(declare-fun temp642_39 () (_ BitVec 64))
(declare-fun temp642_40 () (_ BitVec 64))
(declare-fun temp642_41 () (_ BitVec 64))
(declare-fun temp642_42 () (_ BitVec 64))
(declare-fun temp642_43 () (_ BitVec 64))
(declare-fun temp642_44 () (_ BitVec 64))
(declare-fun temp642_45 () (_ BitVec 64))
(declare-fun temp642_46 () (_ BitVec 64))
(declare-fun temp642_47 () (_ BitVec 64))
(declare-fun temp642_48 () (_ BitVec 64))
(declare-fun temp642_49 () (_ BitVec 64))
(declare-fun temp642_50 () (_ BitVec 64))
(declare-fun temp642_51 () (_ BitVec 64))
(declare-fun temp642_52 () (_ BitVec 64))
(declare-fun temp642_53 () (_ BitVec 64))
(declare-fun temp642_54 () (_ BitVec 64))
(declare-fun temp642_55 () (_ BitVec 64))
(declare-fun temp642_56 () (_ BitVec 64))
(declare-fun temp642_57 () (_ BitVec 64))
(declare-fun temp642_58 () (_ BitVec 64))
(declare-fun temp642_59 () (_ BitVec 64))
(declare-fun temp642_60 () (_ BitVec 64))
(declare-fun temp642_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp642_62 () (_ BitVec 64))
(declare-fun temp642_63 () (_ BitVec 64))
(declare-fun temp642_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_65 () (_ BitVec 64))
(declare-fun temp642_66 () (_ BitVec 64))
(declare-fun temp642_67 () (_ BitVec 64))
(declare-fun temp642_68 () (_ BitVec 64))
(declare-fun temp642_69 () (_ BitVec 64))
(declare-fun temp642_70 () (_ BitVec 64))
(declare-fun temp642_71 () (_ BitVec 64))
(declare-fun temp642_72 () (_ BitVec 64))
(declare-fun temp642_73 () (_ BitVec 64))
(declare-fun temp642_74 () (_ BitVec 64))
(declare-fun temp642_75 () (_ BitVec 64))
(declare-fun temp642_76 () (_ BitVec 64))
(declare-fun temp642_77 () (_ BitVec 64))
(declare-fun temp642_78 () (_ BitVec 64))
(declare-fun temp642_79 () (_ BitVec 64))
(declare-fun temp642_80 () (_ BitVec 64))
(declare-fun temp642_81 () (_ BitVec 64))
(declare-fun temp642_82 () (_ BitVec 64))
(declare-fun temp642_83 () (_ BitVec 64))
(declare-fun temp642_84 () (_ BitVec 64))
(declare-fun temp642_85 () (_ BitVec 64))
(declare-fun temp642_86 () (_ BitVec 64))
(declare-fun temp642_87 () (_ BitVec 64))
(declare-fun temp642_88 () (_ BitVec 64))
(declare-fun temp642_89 () (_ BitVec 64))
(declare-fun temp642_90 () (_ BitVec 64))
(declare-fun temp642_91 () (_ BitVec 64))
(declare-fun temp642_92 () (_ BitVec 64))
(declare-fun temp642_93 () (_ BitVec 64))
(declare-fun temp642_94 () (_ BitVec 64))
(declare-fun temp642_95 () (_ BitVec 64))
(declare-fun temp642_96 () (_ BitVec 64))
(declare-fun temp642_97 () (_ BitVec 64))
(declare-fun temp642_98 () (_ BitVec 64))
(declare-fun temp642_99 () (_ BitVec 64))
(declare-fun temp642_100 () (_ BitVec 64))
(declare-fun temp642_101 () (_ BitVec 64))
(declare-fun temp642_102 () (_ BitVec 64))
(declare-fun temp642_103 () (_ BitVec 64))
(declare-fun temp642_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp642_105 () (_ BitVec 64))
(declare-fun temp642_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp642_107 () (_ BitVec 64))
(declare-fun temp642_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_109 () (_ BitVec 64))
(declare-fun temp642_110 () (_ BitVec 64))
(declare-fun temp642_111 () (_ BitVec 64))
(declare-fun temp642_112 () (_ BitVec 64))
(declare-fun temp642_113 () (_ BitVec 64))
(declare-fun temp642_114 () (_ BitVec 64))
(declare-fun temp642_115 () (_ BitVec 64))
(declare-fun temp642_116 () (_ BitVec 64))
(declare-fun temp642_117 () (_ BitVec 64))
(declare-fun temp642_118 () (_ BitVec 64))
(declare-fun temp642_119 () (_ BitVec 64))
(declare-fun temp642_120 () (_ BitVec 64))
(declare-fun temp642_121 () (_ BitVec 64))
(declare-fun temp642_122 () (_ BitVec 64))
(declare-fun temp642_123 () (_ BitVec 64))
(declare-fun temp642_124 () (_ BitVec 64))
(declare-fun temp642_126 () (_ BitVec 64))
(declare-fun temp642_127 () (_ BitVec 64))
(declare-fun temp642_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp642_128 () (_ BitVec 64))
(declare-fun temp642_129 () (_ BitVec 64))
(declare-fun temp642_131 () (_ BitVec 64))
(declare-fun temp642_132 () (_ BitVec 64))
(declare-fun temp642_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp642_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp642_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp642_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp642_136 () (_ BitVec 64))
(declare-fun temp642_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp642_139 () (_ BitVec 64))
(declare-fun temp642_140 () (_ BitVec 64))
(declare-fun temp642_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp642_141 () (_ BitVec 64))
(declare-fun temp642_143 () (_ BitVec 64))
(declare-fun temp642_144 () (_ BitVec 64))
(declare-fun temp642_142 () (_ BitVec 64))
(declare-fun temp642_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp642_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp642_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp642_148 () (_ BitVec 64))
(declare-fun temp642_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp642_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp642_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var997926 () (_ BitVec 64))
(declare-fun temp642_152 () (_ BitVec 64))
(declare-fun var997927 () (_ BitVec 64))
(declare-fun temp642_154 () (_ BitVec 64))
(declare-fun temp642_153 () (_ BitVec 64))
(declare-fun temp642_155 () (_ BitVec 64))
(declare-fun var5705194 () (_ BitVec 64))
(declare-fun temp642_157 () (_ BitVec 64))
(declare-fun temp642_156 () (_ BitVec 64))
(declare-fun temp642_158 () (_ BitVec 64))
(assert (= temp642_1 #x0000000000000003))
(assert (= var465453 temp642_1))
(assert (= temp642_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp642_2)))
(assert (= temp642_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp642_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp642_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp642_4)))
(assert (= temp642_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp642_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp642_6 #x0000000000000000))
(assert (= var465488 temp642_6))
(assert (= temp642_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp642_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_8 #x0000000000000001))
(assert (= var465522 temp642_8))
(assert (= temp642_10 #x0000000000000000))
(assert (= temp642_9 temp642_10))
(assert (= temp642_12 #x0000000000000003))
(assert (= temp642_11 temp642_12))
(assert (= temp642_13 #x0000000000000000))
(assert (= var863614 temp642_13))
(assert (= temp642_14 #x0000000000000001))
(assert (= var863635 temp642_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp642_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp642_15)))
(assert (= temp642_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp642_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_17 #x0000000000000000))
(assert (= var997373 temp642_17))
(assert (= temp642_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp642_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_19 #x0000000000000000))
(assert (= var997418 temp642_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp642_20 #x0000000000000000))
(assert (= temp642_21 temp642_20))
(assert (= temp642_22 (select ARGNAME_padding_NAMEEND_VAL temp642_21)))
(assert (= temp642_23 #x0000000000000001))
(assert (= temp642_24 temp642_23))
(assert (= temp642_25 (select ARGNAME_padding_NAMEEND_VAL temp642_24)))
(assert (= temp642_26 #x0000000000000002))
(assert (= temp642_27 temp642_26))
(assert (= temp642_28 (select ARGNAME_padding_NAMEEND_VAL temp642_27)))
(assert (= temp642_29 #x0000000000000003))
(assert (= temp642_30 temp642_29))
(assert (= temp642_31 (select ARGNAME_padding_NAMEEND_VAL temp642_30)))
(assert (= temp642_32 #x0000000000000004))
(assert (= temp642_33 temp642_32))
(assert (= temp642_34 (select ARGNAME_padding_NAMEEND_VAL temp642_33)))
(assert (= temp642_35 #x0000000000000005))
(assert (= temp642_36 temp642_35))
(assert (= temp642_37 (select ARGNAME_padding_NAMEEND_VAL temp642_36)))
(assert (= temp642_38 #x0000000000000000))
(assert (= temp642_39 #x0000000000000000))
(assert (= temp642_40 temp642_39))
(assert (= temp642_41 (select ARGNAME_padding_NAMEEND_VAL temp642_40)))
(assert (= temp642_42 #x0000000000000000))
(assert (= temp642_43 #x0000000000000001))
(assert (= temp642_44 temp642_43))
(assert (= temp642_45 (select ARGNAME_padding_NAMEEND_VAL temp642_44)))
(assert (= temp642_46 #x0000000000000000))
(assert (= temp642_47 #x0000000000000002))
(assert (= temp642_48 temp642_47))
(assert (= temp642_49 (select ARGNAME_padding_NAMEEND_VAL temp642_48)))
(assert (= temp642_50 #x0000000000000000))
(assert (= temp642_51 #x0000000000000003))
(assert (= temp642_52 temp642_51))
(assert (= temp642_53 (select ARGNAME_padding_NAMEEND_VAL temp642_52)))
(assert (= temp642_54 #x0000000000000000))
(assert (= temp642_55 #x0000000000000004))
(assert (= temp642_56 temp642_55))
(assert (= temp642_57 (select ARGNAME_padding_NAMEEND_VAL temp642_56)))
(assert (= temp642_58 #x0000000000000000))
(assert (= temp642_59 #x0000000000000005))
(assert (= temp642_60 temp642_59))
(assert (= temp642_61 (select ARGNAME_padding_NAMEEND_VAL temp642_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp642_41 temp642_38)
             (bvslt temp642_45 temp642_42)
             (bvslt temp642_49 temp642_46)
             (bvslt temp642_53 temp642_50)
             (bvslt temp642_57 temp642_54)
             (bvslt temp642_61 temp642_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_62 #x0000000000000000))
(assert (= var1716002 temp642_62))
(assert (= temp642_63 #x0000000000000000))
(assert (= temp642_64 temp642_63))
(assert (= temp642_65 (select ARGNAME_stride_NAMEEND_VAL temp642_64)))
(assert (= temp642_66 #x0000000000000001))
(assert (= temp642_67 temp642_66))
(assert (= temp642_68 (select ARGNAME_stride_NAMEEND_VAL temp642_67)))
(assert (= temp642_69 #x0000000000000002))
(assert (= temp642_70 temp642_69))
(assert (= temp642_71 (select ARGNAME_stride_NAMEEND_VAL temp642_70)))
(assert (= temp642_72 #x0000000000000003))
(assert (= temp642_73 temp642_72))
(assert (= temp642_74 (select ARGNAME_stride_NAMEEND_VAL temp642_73)))
(assert (= temp642_75 #x0000000000000004))
(assert (= temp642_76 temp642_75))
(assert (= temp642_77 (select ARGNAME_stride_NAMEEND_VAL temp642_76)))
(assert (= temp642_78 #x0000000000000005))
(assert (= temp642_79 temp642_78))
(assert (= temp642_80 (select ARGNAME_stride_NAMEEND_VAL temp642_79)))
(assert (= temp642_81 #x0000000000000000))
(assert (= temp642_82 #x0000000000000000))
(assert (= temp642_83 temp642_82))
(assert (= temp642_84 (select ARGNAME_stride_NAMEEND_VAL temp642_83)))
(assert (= temp642_85 #x0000000000000000))
(assert (= temp642_86 #x0000000000000001))
(assert (= temp642_87 temp642_86))
(assert (= temp642_88 (select ARGNAME_stride_NAMEEND_VAL temp642_87)))
(assert (= temp642_89 #x0000000000000000))
(assert (= temp642_90 #x0000000000000002))
(assert (= temp642_91 temp642_90))
(assert (= temp642_92 (select ARGNAME_stride_NAMEEND_VAL temp642_91)))
(assert (= temp642_93 #x0000000000000000))
(assert (= temp642_94 #x0000000000000003))
(assert (= temp642_95 temp642_94))
(assert (= temp642_96 (select ARGNAME_stride_NAMEEND_VAL temp642_95)))
(assert (= temp642_97 #x0000000000000000))
(assert (= temp642_98 #x0000000000000004))
(assert (= temp642_99 temp642_98))
(assert (= temp642_100 (select ARGNAME_stride_NAMEEND_VAL temp642_99)))
(assert (= temp642_101 #x0000000000000000))
(assert (= temp642_102 #x0000000000000005))
(assert (= temp642_103 temp642_102))
(assert (= temp642_104 (select ARGNAME_stride_NAMEEND_VAL temp642_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp642_84 temp642_81)
             (bvsle temp642_88 temp642_85)
             (bvsle temp642_92 temp642_89)
             (bvsle temp642_96 temp642_93)
             (bvsle temp642_100 temp642_97)
             (bvsle temp642_104 temp642_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_105 #x0000000000000000))
(assert (= var1716023 temp642_105))
(assert (= temp642_106 #x0000000000000000))
(assert (= var1704114 temp642_106))
(assert (= temp642_107 #x0000000000000000))
(assert (= temp642_108 temp642_107))
(assert (= temp642_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_108)))
(assert (= temp642_110 #x0000000000000001))
(assert (= temp642_111 temp642_110))
(assert (= temp642_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_111)))
(assert (= temp642_113 #x0000000000000002))
(assert (= temp642_114 temp642_113))
(assert (= temp642_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_114)))
(assert (= temp642_116 #x0000000000000003))
(assert (= temp642_117 temp642_116))
(assert (= temp642_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_117)))
(assert (= temp642_119 #x0000000000000004))
(assert (= temp642_120 temp642_119))
(assert (= temp642_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_120)))
(assert (= temp642_122 #x0000000000000005))
(assert (= temp642_123 temp642_122))
(assert (= temp642_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_123)))
(assert (= temp642_126 var1704114))
(assert (= temp642_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_126)))
(assert (= temp642_125 temp642_127))
(assert (= var1716068
   (ite (bvslt temp642_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_128 #x0000000000000000))
(assert (= var1716068 temp642_128))
(assert (= temp642_129 #x0000000000000000))
(assert (= var1704114 temp642_129))
(assert (= temp642_131 var1704114))
(assert (= temp642_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_131)))
(assert (= temp642_130 temp642_132))
(assert (= var1716090 (bvsmod temp642_130 ARGNAME_groups_NAMEEND)))
(assert (= temp642_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp642_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_134 #x0000000000000001))
(assert (= var1716091 temp642_134))
(assert (= var1716110 var1716000))
(assert (= temp642_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp642_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_136 #x0000000000000001))
(assert (= var1716111 temp642_136))
(assert (= temp642_137 #x0000000000000001))
(assert (= var1705002 temp642_137))
(assert (= temp642_139 var1705002))
(assert (= temp642_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_139)))
(assert (= temp642_138 temp642_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp642_138)))
(assert (= temp642_141 #x0000000000000000))
(assert (= var1704114 temp642_141))
(assert (= temp642_143 var1704114))
(assert (= temp642_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_143)))
(assert (= temp642_142 temp642_144))
(assert (= temp642_145 #x0000000000000002))
(assert (= var1979241 temp642_145))
(assert (= temp642_146 #x0000000000000001))
(assert (= var1716281 temp642_146))
(assert (= temp642_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp642_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_148 #x0000000000000001))
(assert (= var997490 temp642_148))
(assert (= temp642_149 #x0000000000000001))
(assert (= var997620 temp642_149))
(assert (= var3486185 var997620))
(assert (= temp642_150 #x0000000000000000))
(assert (= var3686207 temp642_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp642_151 #x0000000000000002))
(assert (= var3815043 temp642_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var997926 var997345))
(assert (= temp642_152 #x0000000000000000))
(assert (= var997927
   (ite (distinct var997926 temp642_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_154 #x0000000000000001))
(assert (= temp642_153 temp642_154))
(assert (= temp642_155 #x0000000000000001))
(assert (= var5705194 temp642_155))
(assert (= temp642_157 #xffffffffffffffff))
(assert (= temp642_156 temp642_157))
(assert (= temp642_158 #x0000000000000001))
(assert (= var997490 temp642_158))
(model-add temp642_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp642_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp642_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp642_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp642_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp642_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






