(declare-fun temp678_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp678_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp678_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp678_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp678_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp678_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp678_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp678_8 () (_ BitVec 64))
(declare-fun temp678_10 () (_ BitVec 64))
(declare-fun temp678_9 () (_ BitVec 64))
(declare-fun temp678_12 () (_ BitVec 64))
(declare-fun temp678_11 () (_ BitVec 64))
(declare-fun temp678_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp678_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp678_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp678_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp678_17 () (_ BitVec 64))
(declare-fun temp678_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp678_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp678_20 () (_ BitVec 64))
(declare-fun temp678_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_22 () (_ BitVec 64))
(declare-fun temp678_23 () (_ BitVec 64))
(declare-fun temp678_24 () (_ BitVec 64))
(declare-fun temp678_25 () (_ BitVec 64))
(declare-fun temp678_26 () (_ BitVec 64))
(declare-fun temp678_27 () (_ BitVec 64))
(declare-fun temp678_28 () (_ BitVec 64))
(declare-fun temp678_29 () (_ BitVec 64))
(declare-fun temp678_30 () (_ BitVec 64))
(declare-fun temp678_31 () (_ BitVec 64))
(declare-fun temp678_32 () (_ BitVec 64))
(declare-fun temp678_33 () (_ BitVec 64))
(declare-fun temp678_34 () (_ BitVec 64))
(declare-fun temp678_35 () (_ BitVec 64))
(declare-fun temp678_36 () (_ BitVec 64))
(declare-fun temp678_37 () (_ BitVec 64))
(declare-fun temp678_38 () (_ BitVec 64))
(declare-fun temp678_39 () (_ BitVec 64))
(declare-fun temp678_40 () (_ BitVec 64))
(declare-fun temp678_41 () (_ BitVec 64))
(declare-fun temp678_42 () (_ BitVec 64))
(declare-fun temp678_43 () (_ BitVec 64))
(declare-fun temp678_44 () (_ BitVec 64))
(declare-fun temp678_45 () (_ BitVec 64))
(declare-fun temp678_46 () (_ BitVec 64))
(declare-fun temp678_47 () (_ BitVec 64))
(declare-fun temp678_48 () (_ BitVec 64))
(declare-fun temp678_49 () (_ BitVec 64))
(declare-fun temp678_50 () (_ BitVec 64))
(declare-fun temp678_51 () (_ BitVec 64))
(declare-fun temp678_52 () (_ BitVec 64))
(declare-fun temp678_53 () (_ BitVec 64))
(declare-fun temp678_54 () (_ BitVec 64))
(declare-fun temp678_55 () (_ BitVec 64))
(declare-fun temp678_56 () (_ BitVec 64))
(declare-fun temp678_57 () (_ BitVec 64))
(declare-fun temp678_58 () (_ BitVec 64))
(declare-fun temp678_59 () (_ BitVec 64))
(declare-fun temp678_60 () (_ BitVec 64))
(declare-fun temp678_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp678_62 () (_ BitVec 64))
(declare-fun temp678_63 () (_ BitVec 64))
(declare-fun temp678_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_65 () (_ BitVec 64))
(declare-fun temp678_66 () (_ BitVec 64))
(declare-fun temp678_67 () (_ BitVec 64))
(declare-fun temp678_68 () (_ BitVec 64))
(declare-fun temp678_69 () (_ BitVec 64))
(declare-fun temp678_70 () (_ BitVec 64))
(declare-fun temp678_71 () (_ BitVec 64))
(declare-fun temp678_72 () (_ BitVec 64))
(declare-fun temp678_73 () (_ BitVec 64))
(declare-fun temp678_74 () (_ BitVec 64))
(declare-fun temp678_75 () (_ BitVec 64))
(declare-fun temp678_76 () (_ BitVec 64))
(declare-fun temp678_77 () (_ BitVec 64))
(declare-fun temp678_78 () (_ BitVec 64))
(declare-fun temp678_79 () (_ BitVec 64))
(declare-fun temp678_80 () (_ BitVec 64))
(declare-fun temp678_81 () (_ BitVec 64))
(declare-fun temp678_82 () (_ BitVec 64))
(declare-fun temp678_83 () (_ BitVec 64))
(declare-fun temp678_84 () (_ BitVec 64))
(declare-fun temp678_85 () (_ BitVec 64))
(declare-fun temp678_86 () (_ BitVec 64))
(declare-fun temp678_87 () (_ BitVec 64))
(declare-fun temp678_88 () (_ BitVec 64))
(declare-fun temp678_89 () (_ BitVec 64))
(declare-fun temp678_90 () (_ BitVec 64))
(declare-fun temp678_91 () (_ BitVec 64))
(declare-fun temp678_92 () (_ BitVec 64))
(declare-fun temp678_93 () (_ BitVec 64))
(declare-fun temp678_94 () (_ BitVec 64))
(declare-fun temp678_95 () (_ BitVec 64))
(declare-fun temp678_96 () (_ BitVec 64))
(declare-fun temp678_97 () (_ BitVec 64))
(declare-fun temp678_98 () (_ BitVec 64))
(declare-fun temp678_99 () (_ BitVec 64))
(declare-fun temp678_100 () (_ BitVec 64))
(declare-fun temp678_101 () (_ BitVec 64))
(declare-fun temp678_102 () (_ BitVec 64))
(declare-fun temp678_103 () (_ BitVec 64))
(declare-fun temp678_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp678_105 () (_ BitVec 64))
(declare-fun temp678_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp678_107 () (_ BitVec 64))
(declare-fun temp678_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_109 () (_ BitVec 64))
(declare-fun temp678_110 () (_ BitVec 64))
(declare-fun temp678_111 () (_ BitVec 64))
(declare-fun temp678_112 () (_ BitVec 64))
(declare-fun temp678_113 () (_ BitVec 64))
(declare-fun temp678_114 () (_ BitVec 64))
(declare-fun temp678_115 () (_ BitVec 64))
(declare-fun temp678_116 () (_ BitVec 64))
(declare-fun temp678_117 () (_ BitVec 64))
(declare-fun temp678_118 () (_ BitVec 64))
(declare-fun temp678_119 () (_ BitVec 64))
(declare-fun temp678_120 () (_ BitVec 64))
(declare-fun temp678_121 () (_ BitVec 64))
(declare-fun temp678_122 () (_ BitVec 64))
(declare-fun temp678_123 () (_ BitVec 64))
(declare-fun temp678_124 () (_ BitVec 64))
(declare-fun temp678_126 () (_ BitVec 64))
(declare-fun temp678_127 () (_ BitVec 64))
(declare-fun temp678_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp678_128 () (_ BitVec 64))
(declare-fun temp678_129 () (_ BitVec 64))
(declare-fun temp678_131 () (_ BitVec 64))
(declare-fun temp678_132 () (_ BitVec 64))
(declare-fun temp678_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp678_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp678_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp678_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp678_136 () (_ BitVec 64))
(declare-fun temp678_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp678_139 () (_ BitVec 64))
(declare-fun temp678_140 () (_ BitVec 64))
(declare-fun temp678_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp678_141 () (_ BitVec 64))
(declare-fun temp678_143 () (_ BitVec 64))
(declare-fun temp678_144 () (_ BitVec 64))
(declare-fun temp678_142 () (_ BitVec 64))
(declare-fun temp678_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp678_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp678_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp678_148 () (_ BitVec 64))
(declare-fun temp678_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp678_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp678_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp678_153 () (_ BitVec 64))
(declare-fun temp678_152 () (_ BitVec 64))
(declare-fun temp678_155 () (_ BitVec 64))
(declare-fun temp678_154 () (_ BitVec 64))
(declare-fun temp678_156 () (_ BitVec 64))
(assert (= temp678_1 #x0000000000000003))
(assert (= var465453 temp678_1))
(assert (= temp678_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp678_2)))
(assert (= temp678_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp678_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp678_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp678_4)))
(assert (= temp678_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp678_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp678_6 #x0000000000000000))
(assert (= var465488 temp678_6))
(assert (= temp678_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp678_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_8 #x0000000000000001))
(assert (= var465522 temp678_8))
(assert (= temp678_10 #x0000000000000000))
(assert (= temp678_9 temp678_10))
(assert (= temp678_12 #x0000000000000003))
(assert (= temp678_11 temp678_12))
(assert (= temp678_13 #x0000000000000000))
(assert (= var863614 temp678_13))
(assert (= temp678_14 #x0000000000000001))
(assert (= var863635 temp678_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp678_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp678_15)))
(assert (= temp678_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp678_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_17 #x0000000000000000))
(assert (= var997373 temp678_17))
(assert (= temp678_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp678_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_19 #x0000000000000000))
(assert (= var997418 temp678_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp678_20 #x0000000000000000))
(assert (= temp678_21 temp678_20))
(assert (= temp678_22 (select ARGNAME_padding_NAMEEND_VAL temp678_21)))
(assert (= temp678_23 #x0000000000000001))
(assert (= temp678_24 temp678_23))
(assert (= temp678_25 (select ARGNAME_padding_NAMEEND_VAL temp678_24)))
(assert (= temp678_26 #x0000000000000002))
(assert (= temp678_27 temp678_26))
(assert (= temp678_28 (select ARGNAME_padding_NAMEEND_VAL temp678_27)))
(assert (= temp678_29 #x0000000000000003))
(assert (= temp678_30 temp678_29))
(assert (= temp678_31 (select ARGNAME_padding_NAMEEND_VAL temp678_30)))
(assert (= temp678_32 #x0000000000000004))
(assert (= temp678_33 temp678_32))
(assert (= temp678_34 (select ARGNAME_padding_NAMEEND_VAL temp678_33)))
(assert (= temp678_35 #x0000000000000005))
(assert (= temp678_36 temp678_35))
(assert (= temp678_37 (select ARGNAME_padding_NAMEEND_VAL temp678_36)))
(assert (= temp678_38 #x0000000000000000))
(assert (= temp678_39 #x0000000000000000))
(assert (= temp678_40 temp678_39))
(assert (= temp678_41 (select ARGNAME_padding_NAMEEND_VAL temp678_40)))
(assert (= temp678_42 #x0000000000000000))
(assert (= temp678_43 #x0000000000000001))
(assert (= temp678_44 temp678_43))
(assert (= temp678_45 (select ARGNAME_padding_NAMEEND_VAL temp678_44)))
(assert (= temp678_46 #x0000000000000000))
(assert (= temp678_47 #x0000000000000002))
(assert (= temp678_48 temp678_47))
(assert (= temp678_49 (select ARGNAME_padding_NAMEEND_VAL temp678_48)))
(assert (= temp678_50 #x0000000000000000))
(assert (= temp678_51 #x0000000000000003))
(assert (= temp678_52 temp678_51))
(assert (= temp678_53 (select ARGNAME_padding_NAMEEND_VAL temp678_52)))
(assert (= temp678_54 #x0000000000000000))
(assert (= temp678_55 #x0000000000000004))
(assert (= temp678_56 temp678_55))
(assert (= temp678_57 (select ARGNAME_padding_NAMEEND_VAL temp678_56)))
(assert (= temp678_58 #x0000000000000000))
(assert (= temp678_59 #x0000000000000005))
(assert (= temp678_60 temp678_59))
(assert (= temp678_61 (select ARGNAME_padding_NAMEEND_VAL temp678_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp678_41 temp678_38)
             (bvslt temp678_45 temp678_42)
             (bvslt temp678_49 temp678_46)
             (bvslt temp678_53 temp678_50)
             (bvslt temp678_57 temp678_54)
             (bvslt temp678_61 temp678_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_62 #x0000000000000000))
(assert (= var1716002 temp678_62))
(assert (= temp678_63 #x0000000000000000))
(assert (= temp678_64 temp678_63))
(assert (= temp678_65 (select ARGNAME_stride_NAMEEND_VAL temp678_64)))
(assert (= temp678_66 #x0000000000000001))
(assert (= temp678_67 temp678_66))
(assert (= temp678_68 (select ARGNAME_stride_NAMEEND_VAL temp678_67)))
(assert (= temp678_69 #x0000000000000002))
(assert (= temp678_70 temp678_69))
(assert (= temp678_71 (select ARGNAME_stride_NAMEEND_VAL temp678_70)))
(assert (= temp678_72 #x0000000000000003))
(assert (= temp678_73 temp678_72))
(assert (= temp678_74 (select ARGNAME_stride_NAMEEND_VAL temp678_73)))
(assert (= temp678_75 #x0000000000000004))
(assert (= temp678_76 temp678_75))
(assert (= temp678_77 (select ARGNAME_stride_NAMEEND_VAL temp678_76)))
(assert (= temp678_78 #x0000000000000005))
(assert (= temp678_79 temp678_78))
(assert (= temp678_80 (select ARGNAME_stride_NAMEEND_VAL temp678_79)))
(assert (= temp678_81 #x0000000000000000))
(assert (= temp678_82 #x0000000000000000))
(assert (= temp678_83 temp678_82))
(assert (= temp678_84 (select ARGNAME_stride_NAMEEND_VAL temp678_83)))
(assert (= temp678_85 #x0000000000000000))
(assert (= temp678_86 #x0000000000000001))
(assert (= temp678_87 temp678_86))
(assert (= temp678_88 (select ARGNAME_stride_NAMEEND_VAL temp678_87)))
(assert (= temp678_89 #x0000000000000000))
(assert (= temp678_90 #x0000000000000002))
(assert (= temp678_91 temp678_90))
(assert (= temp678_92 (select ARGNAME_stride_NAMEEND_VAL temp678_91)))
(assert (= temp678_93 #x0000000000000000))
(assert (= temp678_94 #x0000000000000003))
(assert (= temp678_95 temp678_94))
(assert (= temp678_96 (select ARGNAME_stride_NAMEEND_VAL temp678_95)))
(assert (= temp678_97 #x0000000000000000))
(assert (= temp678_98 #x0000000000000004))
(assert (= temp678_99 temp678_98))
(assert (= temp678_100 (select ARGNAME_stride_NAMEEND_VAL temp678_99)))
(assert (= temp678_101 #x0000000000000000))
(assert (= temp678_102 #x0000000000000005))
(assert (= temp678_103 temp678_102))
(assert (= temp678_104 (select ARGNAME_stride_NAMEEND_VAL temp678_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp678_84 temp678_81)
             (bvsle temp678_88 temp678_85)
             (bvsle temp678_92 temp678_89)
             (bvsle temp678_96 temp678_93)
             (bvsle temp678_100 temp678_97)
             (bvsle temp678_104 temp678_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_105 #x0000000000000000))
(assert (= var1716023 temp678_105))
(assert (= temp678_106 #x0000000000000000))
(assert (= var1704114 temp678_106))
(assert (= temp678_107 #x0000000000000000))
(assert (= temp678_108 temp678_107))
(assert (= temp678_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_108)))
(assert (= temp678_110 #x0000000000000001))
(assert (= temp678_111 temp678_110))
(assert (= temp678_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_111)))
(assert (= temp678_113 #x0000000000000002))
(assert (= temp678_114 temp678_113))
(assert (= temp678_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_114)))
(assert (= temp678_116 #x0000000000000003))
(assert (= temp678_117 temp678_116))
(assert (= temp678_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_117)))
(assert (= temp678_119 #x0000000000000004))
(assert (= temp678_120 temp678_119))
(assert (= temp678_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_120)))
(assert (= temp678_122 #x0000000000000005))
(assert (= temp678_123 temp678_122))
(assert (= temp678_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_123)))
(assert (= temp678_126 var1704114))
(assert (= temp678_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_126)))
(assert (= temp678_125 temp678_127))
(assert (= var1716068
   (ite (bvslt temp678_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_128 #x0000000000000000))
(assert (= var1716068 temp678_128))
(assert (= temp678_129 #x0000000000000000))
(assert (= var1704114 temp678_129))
(assert (= temp678_131 var1704114))
(assert (= temp678_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_131)))
(assert (= temp678_130 temp678_132))
(assert (= var1716090 (bvsmod temp678_130 ARGNAME_groups_NAMEEND)))
(assert (= temp678_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp678_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_134 #x0000000000000001))
(assert (= var1716091 temp678_134))
(assert (= var1716110 var1716000))
(assert (= temp678_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp678_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_136 #x0000000000000001))
(assert (= var1716111 temp678_136))
(assert (= temp678_137 #x0000000000000001))
(assert (= var1705002 temp678_137))
(assert (= temp678_139 var1705002))
(assert (= temp678_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_139)))
(assert (= temp678_138 temp678_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp678_138)))
(assert (= temp678_141 #x0000000000000000))
(assert (= var1704114 temp678_141))
(assert (= temp678_143 var1704114))
(assert (= temp678_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_143)))
(assert (= temp678_142 temp678_144))
(assert (= temp678_145 #x0000000000000002))
(assert (= var1979241 temp678_145))
(assert (= temp678_146 #x0000000000000001))
(assert (= var1716281 temp678_146))
(assert (= temp678_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp678_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_148 #x0000000000000001))
(assert (= var997490 temp678_148))
(assert (= temp678_149 #x0000000000000001))
(assert (= var997620 temp678_149))
(assert (= var3486185 var997620))
(assert (= temp678_150 #x0000000000000000))
(assert (= var3686207 temp678_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp678_151 #x0000000000000002))
(assert (= var3815043 temp678_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp678_153 #xffffffffffffffff))
(assert (= temp678_152 temp678_153))
(assert (= temp678_155 #xffffffffffffffff))
(assert (= temp678_154 temp678_155))
(assert (= temp678_156 #x0000000000000001))
(assert (= var997490 temp678_156))
(model-add temp678_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp678_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp678_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp678_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp678_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp678_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






