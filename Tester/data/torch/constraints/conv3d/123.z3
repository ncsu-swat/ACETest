(declare-fun temp163_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp163_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp163_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp163_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp163_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp163_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp163_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp163_8 () (_ BitVec 64))
(declare-fun temp163_10 () (_ BitVec 64))
(declare-fun temp163_9 () (_ BitVec 64))
(declare-fun temp163_12 () (_ BitVec 64))
(declare-fun temp163_11 () (_ BitVec 64))
(declare-fun temp163_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp163_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp163_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp163_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp163_17 () (_ BitVec 64))
(declare-fun temp163_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp163_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp163_20 () (_ BitVec 64))
(declare-fun temp163_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp163_22 () (_ BitVec 64))
(declare-fun temp163_23 () (_ BitVec 64))
(declare-fun temp163_24 () (_ BitVec 64))
(declare-fun temp163_25 () (_ BitVec 64))
(declare-fun temp163_26 () (_ BitVec 64))
(declare-fun temp163_27 () (_ BitVec 64))
(declare-fun temp163_28 () (_ BitVec 64))
(declare-fun temp163_29 () (_ BitVec 64))
(declare-fun temp163_30 () (_ BitVec 64))
(declare-fun temp163_31 () (_ BitVec 64))
(declare-fun temp163_32 () (_ BitVec 64))
(declare-fun temp163_33 () (_ BitVec 64))
(declare-fun temp163_34 () (_ BitVec 64))
(declare-fun temp163_35 () (_ BitVec 64))
(declare-fun temp163_36 () (_ BitVec 64))
(declare-fun temp163_37 () (_ BitVec 64))
(declare-fun temp163_38 () (_ BitVec 64))
(declare-fun temp163_39 () (_ BitVec 64))
(declare-fun temp163_40 () (_ BitVec 64))
(declare-fun temp163_41 () (_ BitVec 64))
(declare-fun temp163_42 () (_ BitVec 64))
(declare-fun temp163_43 () (_ BitVec 64))
(declare-fun temp163_44 () (_ BitVec 64))
(declare-fun temp163_45 () (_ BitVec 64))
(declare-fun temp163_46 () (_ BitVec 64))
(declare-fun temp163_47 () (_ BitVec 64))
(declare-fun temp163_48 () (_ BitVec 64))
(declare-fun temp163_49 () (_ BitVec 64))
(declare-fun temp163_50 () (_ BitVec 64))
(declare-fun temp163_51 () (_ BitVec 64))
(declare-fun temp163_52 () (_ BitVec 64))
(declare-fun temp163_53 () (_ BitVec 64))
(declare-fun temp163_54 () (_ BitVec 64))
(declare-fun temp163_55 () (_ BitVec 64))
(declare-fun temp163_56 () (_ BitVec 64))
(declare-fun temp163_57 () (_ BitVec 64))
(declare-fun temp163_58 () (_ BitVec 64))
(declare-fun temp163_59 () (_ BitVec 64))
(declare-fun temp163_60 () (_ BitVec 64))
(declare-fun temp163_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp163_62 () (_ BitVec 64))
(declare-fun temp163_63 () (_ BitVec 64))
(declare-fun temp163_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp163_65 () (_ BitVec 64))
(declare-fun temp163_66 () (_ BitVec 64))
(declare-fun temp163_67 () (_ BitVec 64))
(declare-fun temp163_68 () (_ BitVec 64))
(declare-fun temp163_69 () (_ BitVec 64))
(declare-fun temp163_70 () (_ BitVec 64))
(declare-fun temp163_71 () (_ BitVec 64))
(declare-fun temp163_72 () (_ BitVec 64))
(declare-fun temp163_73 () (_ BitVec 64))
(declare-fun temp163_74 () (_ BitVec 64))
(declare-fun temp163_75 () (_ BitVec 64))
(declare-fun temp163_76 () (_ BitVec 64))
(declare-fun temp163_77 () (_ BitVec 64))
(declare-fun temp163_78 () (_ BitVec 64))
(declare-fun temp163_79 () (_ BitVec 64))
(declare-fun temp163_80 () (_ BitVec 64))
(declare-fun temp163_81 () (_ BitVec 64))
(declare-fun temp163_82 () (_ BitVec 64))
(declare-fun temp163_83 () (_ BitVec 64))
(declare-fun temp163_84 () (_ BitVec 64))
(declare-fun temp163_85 () (_ BitVec 64))
(declare-fun temp163_86 () (_ BitVec 64))
(declare-fun temp163_87 () (_ BitVec 64))
(declare-fun temp163_88 () (_ BitVec 64))
(declare-fun temp163_89 () (_ BitVec 64))
(declare-fun temp163_90 () (_ BitVec 64))
(declare-fun temp163_91 () (_ BitVec 64))
(declare-fun temp163_92 () (_ BitVec 64))
(declare-fun temp163_93 () (_ BitVec 64))
(declare-fun temp163_94 () (_ BitVec 64))
(declare-fun temp163_95 () (_ BitVec 64))
(declare-fun temp163_96 () (_ BitVec 64))
(declare-fun temp163_97 () (_ BitVec 64))
(declare-fun temp163_98 () (_ BitVec 64))
(declare-fun temp163_99 () (_ BitVec 64))
(declare-fun temp163_100 () (_ BitVec 64))
(declare-fun temp163_101 () (_ BitVec 64))
(declare-fun temp163_102 () (_ BitVec 64))
(declare-fun temp163_103 () (_ BitVec 64))
(declare-fun temp163_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp163_105 () (_ BitVec 64))
(declare-fun temp163_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp163_107 () (_ BitVec 64))
(declare-fun temp163_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp163_109 () (_ BitVec 64))
(declare-fun temp163_110 () (_ BitVec 64))
(declare-fun temp163_111 () (_ BitVec 64))
(declare-fun temp163_112 () (_ BitVec 64))
(declare-fun temp163_113 () (_ BitVec 64))
(declare-fun temp163_114 () (_ BitVec 64))
(declare-fun temp163_115 () (_ BitVec 64))
(declare-fun temp163_116 () (_ BitVec 64))
(declare-fun temp163_117 () (_ BitVec 64))
(declare-fun temp163_118 () (_ BitVec 64))
(declare-fun temp163_119 () (_ BitVec 64))
(declare-fun temp163_120 () (_ BitVec 64))
(declare-fun temp163_121 () (_ BitVec 64))
(declare-fun temp163_122 () (_ BitVec 64))
(declare-fun temp163_123 () (_ BitVec 64))
(declare-fun temp163_124 () (_ BitVec 64))
(declare-fun temp163_126 () (_ BitVec 64))
(declare-fun temp163_127 () (_ BitVec 64))
(declare-fun temp163_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp163_128 () (_ BitVec 64))
(declare-fun temp163_129 () (_ BitVec 64))
(declare-fun temp163_131 () (_ BitVec 64))
(declare-fun temp163_132 () (_ BitVec 64))
(declare-fun temp163_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp163_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp163_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp163_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp163_136 () (_ BitVec 64))
(declare-fun temp163_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp163_139 () (_ BitVec 64))
(declare-fun temp163_140 () (_ BitVec 64))
(declare-fun temp163_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp163_141 () (_ BitVec 64))
(declare-fun temp163_143 () (_ BitVec 64))
(declare-fun temp163_144 () (_ BitVec 64))
(declare-fun temp163_142 () (_ BitVec 64))
(declare-fun temp163_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp163_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp163_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp163_148 () (_ BitVec 64))
(declare-fun temp163_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp163_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp163_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp163_153 () (_ BitVec 64))
(declare-fun temp163_152 () (_ BitVec 64))
(declare-fun temp163_154 () (_ BitVec 64))
(assert (= temp163_1 #x0000000000000003))
(assert (= var465453 temp163_1))
(assert (= temp163_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp163_2)))
(assert (= temp163_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp163_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp163_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp163_4)))
(assert (= temp163_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp163_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp163_6 #x0000000000000000))
(assert (= var465488 temp163_6))
(assert (= temp163_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp163_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp163_8 #x0000000000000001))
(assert (= var465522 temp163_8))
(assert (= temp163_10 #x0000000000000000))
(assert (= temp163_9 temp163_10))
(assert (= temp163_12 #x0000000000000003))
(assert (= temp163_11 temp163_12))
(assert (= temp163_13 #x0000000000000000))
(assert (= var863614 temp163_13))
(assert (= temp163_14 #x0000000000000001))
(assert (= var863635 temp163_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp163_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp163_15)))
(assert (= temp163_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp163_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp163_17 #x0000000000000000))
(assert (= var997373 temp163_17))
(assert (= temp163_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp163_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp163_19 #x0000000000000000))
(assert (= var997418 temp163_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp163_20 #x0000000000000000))
(assert (= temp163_21 temp163_20))
(assert (= temp163_22 (select ARGNAME_padding_NAMEEND_VAL temp163_21)))
(assert (= temp163_23 #x0000000000000001))
(assert (= temp163_24 temp163_23))
(assert (= temp163_25 (select ARGNAME_padding_NAMEEND_VAL temp163_24)))
(assert (= temp163_26 #x0000000000000002))
(assert (= temp163_27 temp163_26))
(assert (= temp163_28 (select ARGNAME_padding_NAMEEND_VAL temp163_27)))
(assert (= temp163_29 #x0000000000000003))
(assert (= temp163_30 temp163_29))
(assert (= temp163_31 (select ARGNAME_padding_NAMEEND_VAL temp163_30)))
(assert (= temp163_32 #x0000000000000004))
(assert (= temp163_33 temp163_32))
(assert (= temp163_34 (select ARGNAME_padding_NAMEEND_VAL temp163_33)))
(assert (= temp163_35 #x0000000000000005))
(assert (= temp163_36 temp163_35))
(assert (= temp163_37 (select ARGNAME_padding_NAMEEND_VAL temp163_36)))
(assert (= temp163_38 #x0000000000000000))
(assert (= temp163_39 #x0000000000000000))
(assert (= temp163_40 temp163_39))
(assert (= temp163_41 (select ARGNAME_padding_NAMEEND_VAL temp163_40)))
(assert (= temp163_42 #x0000000000000000))
(assert (= temp163_43 #x0000000000000001))
(assert (= temp163_44 temp163_43))
(assert (= temp163_45 (select ARGNAME_padding_NAMEEND_VAL temp163_44)))
(assert (= temp163_46 #x0000000000000000))
(assert (= temp163_47 #x0000000000000002))
(assert (= temp163_48 temp163_47))
(assert (= temp163_49 (select ARGNAME_padding_NAMEEND_VAL temp163_48)))
(assert (= temp163_50 #x0000000000000000))
(assert (= temp163_51 #x0000000000000003))
(assert (= temp163_52 temp163_51))
(assert (= temp163_53 (select ARGNAME_padding_NAMEEND_VAL temp163_52)))
(assert (= temp163_54 #x0000000000000000))
(assert (= temp163_55 #x0000000000000004))
(assert (= temp163_56 temp163_55))
(assert (= temp163_57 (select ARGNAME_padding_NAMEEND_VAL temp163_56)))
(assert (= temp163_58 #x0000000000000000))
(assert (= temp163_59 #x0000000000000005))
(assert (= temp163_60 temp163_59))
(assert (= temp163_61 (select ARGNAME_padding_NAMEEND_VAL temp163_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp163_41 temp163_38)
             (bvslt temp163_45 temp163_42)
             (bvslt temp163_49 temp163_46)
             (bvslt temp163_53 temp163_50)
             (bvslt temp163_57 temp163_54)
             (bvslt temp163_61 temp163_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp163_62 #x0000000000000000))
(assert (= var1716002 temp163_62))
(assert (= temp163_63 #x0000000000000000))
(assert (= temp163_64 temp163_63))
(assert (= temp163_65 (select ARGNAME_stride_NAMEEND_VAL temp163_64)))
(assert (= temp163_66 #x0000000000000001))
(assert (= temp163_67 temp163_66))
(assert (= temp163_68 (select ARGNAME_stride_NAMEEND_VAL temp163_67)))
(assert (= temp163_69 #x0000000000000002))
(assert (= temp163_70 temp163_69))
(assert (= temp163_71 (select ARGNAME_stride_NAMEEND_VAL temp163_70)))
(assert (= temp163_72 #x0000000000000003))
(assert (= temp163_73 temp163_72))
(assert (= temp163_74 (select ARGNAME_stride_NAMEEND_VAL temp163_73)))
(assert (= temp163_75 #x0000000000000004))
(assert (= temp163_76 temp163_75))
(assert (= temp163_77 (select ARGNAME_stride_NAMEEND_VAL temp163_76)))
(assert (= temp163_78 #x0000000000000005))
(assert (= temp163_79 temp163_78))
(assert (= temp163_80 (select ARGNAME_stride_NAMEEND_VAL temp163_79)))
(assert (= temp163_81 #x0000000000000000))
(assert (= temp163_82 #x0000000000000000))
(assert (= temp163_83 temp163_82))
(assert (= temp163_84 (select ARGNAME_stride_NAMEEND_VAL temp163_83)))
(assert (= temp163_85 #x0000000000000000))
(assert (= temp163_86 #x0000000000000001))
(assert (= temp163_87 temp163_86))
(assert (= temp163_88 (select ARGNAME_stride_NAMEEND_VAL temp163_87)))
(assert (= temp163_89 #x0000000000000000))
(assert (= temp163_90 #x0000000000000002))
(assert (= temp163_91 temp163_90))
(assert (= temp163_92 (select ARGNAME_stride_NAMEEND_VAL temp163_91)))
(assert (= temp163_93 #x0000000000000000))
(assert (= temp163_94 #x0000000000000003))
(assert (= temp163_95 temp163_94))
(assert (= temp163_96 (select ARGNAME_stride_NAMEEND_VAL temp163_95)))
(assert (= temp163_97 #x0000000000000000))
(assert (= temp163_98 #x0000000000000004))
(assert (= temp163_99 temp163_98))
(assert (= temp163_100 (select ARGNAME_stride_NAMEEND_VAL temp163_99)))
(assert (= temp163_101 #x0000000000000000))
(assert (= temp163_102 #x0000000000000005))
(assert (= temp163_103 temp163_102))
(assert (= temp163_104 (select ARGNAME_stride_NAMEEND_VAL temp163_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp163_84 temp163_81)
             (bvsle temp163_88 temp163_85)
             (bvsle temp163_92 temp163_89)
             (bvsle temp163_96 temp163_93)
             (bvsle temp163_100 temp163_97)
             (bvsle temp163_104 temp163_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp163_105 #x0000000000000000))
(assert (= var1716023 temp163_105))
(assert (= temp163_106 #x0000000000000000))
(assert (= var1704114 temp163_106))
(assert (= temp163_107 #x0000000000000000))
(assert (= temp163_108 temp163_107))
(assert (= temp163_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_108)))
(assert (= temp163_110 #x0000000000000001))
(assert (= temp163_111 temp163_110))
(assert (= temp163_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_111)))
(assert (= temp163_113 #x0000000000000002))
(assert (= temp163_114 temp163_113))
(assert (= temp163_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_114)))
(assert (= temp163_116 #x0000000000000003))
(assert (= temp163_117 temp163_116))
(assert (= temp163_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_117)))
(assert (= temp163_119 #x0000000000000004))
(assert (= temp163_120 temp163_119))
(assert (= temp163_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_120)))
(assert (= temp163_122 #x0000000000000005))
(assert (= temp163_123 temp163_122))
(assert (= temp163_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_123)))
(assert (= temp163_126 var1704114))
(assert (= temp163_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_126)))
(assert (= temp163_125 temp163_127))
(assert (= var1716068
   (ite (bvslt temp163_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp163_128 #x0000000000000000))
(assert (= var1716068 temp163_128))
(assert (= temp163_129 #x0000000000000000))
(assert (= var1704114 temp163_129))
(assert (= temp163_131 var1704114))
(assert (= temp163_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_131)))
(assert (= temp163_130 temp163_132))
(assert (= var1716090 (bvsmod temp163_130 ARGNAME_groups_NAMEEND)))
(assert (= temp163_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp163_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp163_134 #x0000000000000001))
(assert (= var1716091 temp163_134))
(assert (= var1716110 var1716000))
(assert (= temp163_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp163_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp163_136 #x0000000000000001))
(assert (= var1716111 temp163_136))
(assert (= temp163_137 #x0000000000000001))
(assert (= var1705002 temp163_137))
(assert (= temp163_139 var1705002))
(assert (= temp163_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_139)))
(assert (= temp163_138 temp163_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp163_138)))
(assert (= temp163_141 #x0000000000000000))
(assert (= var1704114 temp163_141))
(assert (= temp163_143 var1704114))
(assert (= temp163_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp163_143)))
(assert (= temp163_142 temp163_144))
(assert (= temp163_145 #x0000000000000002))
(assert (= var1979241 temp163_145))
(assert (= temp163_146 #x0000000000000001))
(assert (= var1716281 temp163_146))
(assert (= temp163_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp163_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp163_148 #x0000000000000001))
(assert (= var997490 temp163_148))
(assert (= temp163_149 #x0000000000000001))
(assert (= var997620 temp163_149))
(assert (= var3486185 var997620))
(assert (= temp163_150 #x0000000000000000))
(assert (= var3686207 temp163_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp163_151 #x0000000000000002))
(assert (= var3815043 temp163_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp163_153 #xffffffffffffffff))
(assert (= temp163_152 temp163_153))
(assert (= temp163_154 #x0000000000000001))
(assert (= var997490 temp163_154))
(model-add temp163_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp163_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp163_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp163_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp163_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp163_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






