(declare-fun temp1052_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1052_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1052_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1052_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1052_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1052_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1052_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1052_8 () (_ BitVec 64))
(declare-fun temp1052_10 () (_ BitVec 64))
(declare-fun temp1052_9 () (_ BitVec 64))
(declare-fun temp1052_12 () (_ BitVec 64))
(declare-fun temp1052_11 () (_ BitVec 64))
(declare-fun temp1052_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1052_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1052_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1052_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1052_17 () (_ BitVec 64))
(declare-fun temp1052_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1052_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1052_20 () (_ BitVec 64))
(declare-fun temp1052_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_22 () (_ BitVec 64))
(declare-fun temp1052_23 () (_ BitVec 64))
(declare-fun temp1052_24 () (_ BitVec 64))
(declare-fun temp1052_25 () (_ BitVec 64))
(declare-fun temp1052_26 () (_ BitVec 64))
(declare-fun temp1052_27 () (_ BitVec 64))
(declare-fun temp1052_28 () (_ BitVec 64))
(declare-fun temp1052_29 () (_ BitVec 64))
(declare-fun temp1052_30 () (_ BitVec 64))
(declare-fun temp1052_31 () (_ BitVec 64))
(declare-fun temp1052_32 () (_ BitVec 64))
(declare-fun temp1052_33 () (_ BitVec 64))
(declare-fun temp1052_34 () (_ BitVec 64))
(declare-fun temp1052_35 () (_ BitVec 64))
(declare-fun temp1052_36 () (_ BitVec 64))
(declare-fun temp1052_37 () (_ BitVec 64))
(declare-fun temp1052_38 () (_ BitVec 64))
(declare-fun temp1052_39 () (_ BitVec 64))
(declare-fun temp1052_40 () (_ BitVec 64))
(declare-fun temp1052_41 () (_ BitVec 64))
(declare-fun temp1052_42 () (_ BitVec 64))
(declare-fun temp1052_43 () (_ BitVec 64))
(declare-fun temp1052_44 () (_ BitVec 64))
(declare-fun temp1052_45 () (_ BitVec 64))
(declare-fun temp1052_46 () (_ BitVec 64))
(declare-fun temp1052_47 () (_ BitVec 64))
(declare-fun temp1052_48 () (_ BitVec 64))
(declare-fun temp1052_49 () (_ BitVec 64))
(declare-fun temp1052_50 () (_ BitVec 64))
(declare-fun temp1052_51 () (_ BitVec 64))
(declare-fun temp1052_52 () (_ BitVec 64))
(declare-fun temp1052_53 () (_ BitVec 64))
(declare-fun temp1052_54 () (_ BitVec 64))
(declare-fun temp1052_55 () (_ BitVec 64))
(declare-fun temp1052_56 () (_ BitVec 64))
(declare-fun temp1052_57 () (_ BitVec 64))
(declare-fun temp1052_58 () (_ BitVec 64))
(declare-fun temp1052_59 () (_ BitVec 64))
(declare-fun temp1052_60 () (_ BitVec 64))
(declare-fun temp1052_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1052_62 () (_ BitVec 64))
(declare-fun temp1052_63 () (_ BitVec 64))
(declare-fun temp1052_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_65 () (_ BitVec 64))
(declare-fun temp1052_66 () (_ BitVec 64))
(declare-fun temp1052_67 () (_ BitVec 64))
(declare-fun temp1052_68 () (_ BitVec 64))
(declare-fun temp1052_69 () (_ BitVec 64))
(declare-fun temp1052_70 () (_ BitVec 64))
(declare-fun temp1052_71 () (_ BitVec 64))
(declare-fun temp1052_72 () (_ BitVec 64))
(declare-fun temp1052_73 () (_ BitVec 64))
(declare-fun temp1052_74 () (_ BitVec 64))
(declare-fun temp1052_75 () (_ BitVec 64))
(declare-fun temp1052_76 () (_ BitVec 64))
(declare-fun temp1052_77 () (_ BitVec 64))
(declare-fun temp1052_78 () (_ BitVec 64))
(declare-fun temp1052_79 () (_ BitVec 64))
(declare-fun temp1052_80 () (_ BitVec 64))
(declare-fun temp1052_81 () (_ BitVec 64))
(declare-fun temp1052_82 () (_ BitVec 64))
(declare-fun temp1052_83 () (_ BitVec 64))
(declare-fun temp1052_84 () (_ BitVec 64))
(declare-fun temp1052_85 () (_ BitVec 64))
(declare-fun temp1052_86 () (_ BitVec 64))
(declare-fun temp1052_87 () (_ BitVec 64))
(declare-fun temp1052_88 () (_ BitVec 64))
(declare-fun temp1052_89 () (_ BitVec 64))
(declare-fun temp1052_90 () (_ BitVec 64))
(declare-fun temp1052_91 () (_ BitVec 64))
(declare-fun temp1052_92 () (_ BitVec 64))
(declare-fun temp1052_93 () (_ BitVec 64))
(declare-fun temp1052_94 () (_ BitVec 64))
(declare-fun temp1052_95 () (_ BitVec 64))
(declare-fun temp1052_96 () (_ BitVec 64))
(declare-fun temp1052_97 () (_ BitVec 64))
(declare-fun temp1052_98 () (_ BitVec 64))
(declare-fun temp1052_99 () (_ BitVec 64))
(declare-fun temp1052_100 () (_ BitVec 64))
(declare-fun temp1052_101 () (_ BitVec 64))
(declare-fun temp1052_102 () (_ BitVec 64))
(declare-fun temp1052_103 () (_ BitVec 64))
(declare-fun temp1052_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1052_105 () (_ BitVec 64))
(declare-fun temp1052_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1052_107 () (_ BitVec 64))
(declare-fun temp1052_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_109 () (_ BitVec 64))
(declare-fun temp1052_110 () (_ BitVec 64))
(declare-fun temp1052_111 () (_ BitVec 64))
(declare-fun temp1052_112 () (_ BitVec 64))
(declare-fun temp1052_113 () (_ BitVec 64))
(declare-fun temp1052_114 () (_ BitVec 64))
(declare-fun temp1052_115 () (_ BitVec 64))
(declare-fun temp1052_116 () (_ BitVec 64))
(declare-fun temp1052_117 () (_ BitVec 64))
(declare-fun temp1052_118 () (_ BitVec 64))
(declare-fun temp1052_119 () (_ BitVec 64))
(declare-fun temp1052_120 () (_ BitVec 64))
(declare-fun temp1052_121 () (_ BitVec 64))
(declare-fun temp1052_122 () (_ BitVec 64))
(declare-fun temp1052_123 () (_ BitVec 64))
(declare-fun temp1052_124 () (_ BitVec 64))
(declare-fun temp1052_126 () (_ BitVec 64))
(declare-fun temp1052_127 () (_ BitVec 64))
(declare-fun temp1052_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1052_128 () (_ BitVec 64))
(declare-fun temp1052_129 () (_ BitVec 64))
(declare-fun temp1052_131 () (_ BitVec 64))
(declare-fun temp1052_132 () (_ BitVec 64))
(declare-fun temp1052_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1052_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1052_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1052_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1052_136 () (_ BitVec 64))
(declare-fun temp1052_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1052_139 () (_ BitVec 64))
(declare-fun temp1052_140 () (_ BitVec 64))
(declare-fun temp1052_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1052_141 () (_ BitVec 64))
(declare-fun temp1052_143 () (_ BitVec 64))
(declare-fun temp1052_144 () (_ BitVec 64))
(declare-fun temp1052_142 () (_ BitVec 64))
(declare-fun temp1052_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1052_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1052_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1052_148 () (_ BitVec 64))
(declare-fun temp1052_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1052_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp1052_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var4206992 () (_ BitVec 64))
(declare-fun temp1052_152 () (_ BitVec 64))
(declare-fun var998846 () (_ BitVec 64))
(declare-fun temp1052_153 () (_ BitVec 64))
(declare-fun temp1052_154 () (_ BitVec 64))
(declare-fun var4535939 () (_ BitVec 64))
(declare-fun temp1052_155 () (_ BitVec 64))
(assert (= temp1052_1 #x0000000000000003))
(assert (= var465453 temp1052_1))
(assert (= temp1052_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1052_2)))
(assert (= temp1052_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1052_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1052_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1052_4)))
(assert (= temp1052_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1052_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1052_6 #x0000000000000000))
(assert (= var465488 temp1052_6))
(assert (= temp1052_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1052_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1052_8 #x0000000000000001))
(assert (= var465522 temp1052_8))
(assert (= temp1052_10 #x0000000000000000))
(assert (= temp1052_9 temp1052_10))
(assert (= temp1052_12 #x0000000000000003))
(assert (= temp1052_11 temp1052_12))
(assert (= temp1052_13 #x0000000000000000))
(assert (= var863614 temp1052_13))
(assert (= temp1052_14 #x0000000000000001))
(assert (= var863635 temp1052_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1052_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1052_15)))
(assert (= temp1052_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1052_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_17 #x0000000000000000))
(assert (= var997373 temp1052_17))
(assert (= temp1052_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1052_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_19 #x0000000000000000))
(assert (= var997418 temp1052_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1052_20 #x0000000000000000))
(assert (= temp1052_21 temp1052_20))
(assert (= temp1052_22 (select ARGNAME_padding_NAMEEND_VAL temp1052_21)))
(assert (= temp1052_23 #x0000000000000001))
(assert (= temp1052_24 temp1052_23))
(assert (= temp1052_25 (select ARGNAME_padding_NAMEEND_VAL temp1052_24)))
(assert (= temp1052_26 #x0000000000000002))
(assert (= temp1052_27 temp1052_26))
(assert (= temp1052_28 (select ARGNAME_padding_NAMEEND_VAL temp1052_27)))
(assert (= temp1052_29 #x0000000000000003))
(assert (= temp1052_30 temp1052_29))
(assert (= temp1052_31 (select ARGNAME_padding_NAMEEND_VAL temp1052_30)))
(assert (= temp1052_32 #x0000000000000004))
(assert (= temp1052_33 temp1052_32))
(assert (= temp1052_34 (select ARGNAME_padding_NAMEEND_VAL temp1052_33)))
(assert (= temp1052_35 #x0000000000000005))
(assert (= temp1052_36 temp1052_35))
(assert (= temp1052_37 (select ARGNAME_padding_NAMEEND_VAL temp1052_36)))
(assert (= temp1052_38 #x0000000000000000))
(assert (= temp1052_39 #x0000000000000000))
(assert (= temp1052_40 temp1052_39))
(assert (= temp1052_41 (select ARGNAME_padding_NAMEEND_VAL temp1052_40)))
(assert (= temp1052_42 #x0000000000000000))
(assert (= temp1052_43 #x0000000000000001))
(assert (= temp1052_44 temp1052_43))
(assert (= temp1052_45 (select ARGNAME_padding_NAMEEND_VAL temp1052_44)))
(assert (= temp1052_46 #x0000000000000000))
(assert (= temp1052_47 #x0000000000000002))
(assert (= temp1052_48 temp1052_47))
(assert (= temp1052_49 (select ARGNAME_padding_NAMEEND_VAL temp1052_48)))
(assert (= temp1052_50 #x0000000000000000))
(assert (= temp1052_51 #x0000000000000003))
(assert (= temp1052_52 temp1052_51))
(assert (= temp1052_53 (select ARGNAME_padding_NAMEEND_VAL temp1052_52)))
(assert (= temp1052_54 #x0000000000000000))
(assert (= temp1052_55 #x0000000000000004))
(assert (= temp1052_56 temp1052_55))
(assert (= temp1052_57 (select ARGNAME_padding_NAMEEND_VAL temp1052_56)))
(assert (= temp1052_58 #x0000000000000000))
(assert (= temp1052_59 #x0000000000000005))
(assert (= temp1052_60 temp1052_59))
(assert (= temp1052_61 (select ARGNAME_padding_NAMEEND_VAL temp1052_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1052_41 temp1052_38)
             (bvslt temp1052_45 temp1052_42)
             (bvslt temp1052_49 temp1052_46)
             (bvslt temp1052_53 temp1052_50)
             (bvslt temp1052_57 temp1052_54)
             (bvslt temp1052_61 temp1052_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_62 #x0000000000000000))
(assert (= var1716002 temp1052_62))
(assert (= temp1052_63 #x0000000000000000))
(assert (= temp1052_64 temp1052_63))
(assert (= temp1052_65 (select ARGNAME_stride_NAMEEND_VAL temp1052_64)))
(assert (= temp1052_66 #x0000000000000001))
(assert (= temp1052_67 temp1052_66))
(assert (= temp1052_68 (select ARGNAME_stride_NAMEEND_VAL temp1052_67)))
(assert (= temp1052_69 #x0000000000000002))
(assert (= temp1052_70 temp1052_69))
(assert (= temp1052_71 (select ARGNAME_stride_NAMEEND_VAL temp1052_70)))
(assert (= temp1052_72 #x0000000000000003))
(assert (= temp1052_73 temp1052_72))
(assert (= temp1052_74 (select ARGNAME_stride_NAMEEND_VAL temp1052_73)))
(assert (= temp1052_75 #x0000000000000004))
(assert (= temp1052_76 temp1052_75))
(assert (= temp1052_77 (select ARGNAME_stride_NAMEEND_VAL temp1052_76)))
(assert (= temp1052_78 #x0000000000000005))
(assert (= temp1052_79 temp1052_78))
(assert (= temp1052_80 (select ARGNAME_stride_NAMEEND_VAL temp1052_79)))
(assert (= temp1052_81 #x0000000000000000))
(assert (= temp1052_82 #x0000000000000000))
(assert (= temp1052_83 temp1052_82))
(assert (= temp1052_84 (select ARGNAME_stride_NAMEEND_VAL temp1052_83)))
(assert (= temp1052_85 #x0000000000000000))
(assert (= temp1052_86 #x0000000000000001))
(assert (= temp1052_87 temp1052_86))
(assert (= temp1052_88 (select ARGNAME_stride_NAMEEND_VAL temp1052_87)))
(assert (= temp1052_89 #x0000000000000000))
(assert (= temp1052_90 #x0000000000000002))
(assert (= temp1052_91 temp1052_90))
(assert (= temp1052_92 (select ARGNAME_stride_NAMEEND_VAL temp1052_91)))
(assert (= temp1052_93 #x0000000000000000))
(assert (= temp1052_94 #x0000000000000003))
(assert (= temp1052_95 temp1052_94))
(assert (= temp1052_96 (select ARGNAME_stride_NAMEEND_VAL temp1052_95)))
(assert (= temp1052_97 #x0000000000000000))
(assert (= temp1052_98 #x0000000000000004))
(assert (= temp1052_99 temp1052_98))
(assert (= temp1052_100 (select ARGNAME_stride_NAMEEND_VAL temp1052_99)))
(assert (= temp1052_101 #x0000000000000000))
(assert (= temp1052_102 #x0000000000000005))
(assert (= temp1052_103 temp1052_102))
(assert (= temp1052_104 (select ARGNAME_stride_NAMEEND_VAL temp1052_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1052_84 temp1052_81)
             (bvsle temp1052_88 temp1052_85)
             (bvsle temp1052_92 temp1052_89)
             (bvsle temp1052_96 temp1052_93)
             (bvsle temp1052_100 temp1052_97)
             (bvsle temp1052_104 temp1052_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_105 #x0000000000000000))
(assert (= var1716023 temp1052_105))
(assert (= temp1052_106 #x0000000000000000))
(assert (= var1704114 temp1052_106))
(assert (= temp1052_107 #x0000000000000000))
(assert (= temp1052_108 temp1052_107))
(assert (= temp1052_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_108)))
(assert (= temp1052_110 #x0000000000000001))
(assert (= temp1052_111 temp1052_110))
(assert (= temp1052_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_111)))
(assert (= temp1052_113 #x0000000000000002))
(assert (= temp1052_114 temp1052_113))
(assert (= temp1052_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_114)))
(assert (= temp1052_116 #x0000000000000003))
(assert (= temp1052_117 temp1052_116))
(assert (= temp1052_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_117)))
(assert (= temp1052_119 #x0000000000000004))
(assert (= temp1052_120 temp1052_119))
(assert (= temp1052_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_120)))
(assert (= temp1052_122 #x0000000000000005))
(assert (= temp1052_123 temp1052_122))
(assert (= temp1052_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_123)))
(assert (= temp1052_126 var1704114))
(assert (= temp1052_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_126)))
(assert (= temp1052_125 temp1052_127))
(assert (= var1716068
   (ite (bvslt temp1052_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_128 #x0000000000000000))
(assert (= var1716068 temp1052_128))
(assert (= temp1052_129 #x0000000000000000))
(assert (= var1704114 temp1052_129))
(assert (= temp1052_131 var1704114))
(assert (= temp1052_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_131)))
(assert (= temp1052_130 temp1052_132))
(assert (= var1716090 (bvsmod temp1052_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1052_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1052_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1052_134 #x0000000000000001))
(assert (= var1716091 temp1052_134))
(assert (= var1716110 var1716000))
(assert (= temp1052_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1052_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1052_136 #x0000000000000001))
(assert (= var1716111 temp1052_136))
(assert (= temp1052_137 #x0000000000000001))
(assert (= var1705002 temp1052_137))
(assert (= temp1052_139 var1705002))
(assert (= temp1052_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_139)))
(assert (= temp1052_138 temp1052_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1052_138)))
(assert (= temp1052_141 #x0000000000000000))
(assert (= var1704114 temp1052_141))
(assert (= temp1052_143 var1704114))
(assert (= temp1052_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1052_143)))
(assert (= temp1052_142 temp1052_144))
(assert (= temp1052_145 #x0000000000000002))
(assert (= var1979241 temp1052_145))
(assert (= temp1052_146 #x0000000000000001))
(assert (= var1716281 temp1052_146))
(assert (= temp1052_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1052_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_148 #x0000000000000001))
(assert (= var997490 temp1052_148))
(assert (= temp1052_149 #x0000000000000001))
(assert (= var997620 temp1052_149))
(assert (= var3486185 var997620))
(assert (= temp1052_150 #x0000000000000000))
(assert (= var3686207 temp1052_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp1052_151 #x0000000000000002))
(assert (= var3815043 temp1052_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var4206992 var997633))
(assert (= temp1052_152 #x0000000000000001))
(assert (= var998846
   (ite (= ARGNAME_groups_NAMEEND temp1052_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_153 #x0000000000000001))
(assert (= var998846 temp1052_153))
(assert (= temp1052_154 #x0000000000000002))
(assert (= var4535939 temp1052_154))
(assert (= temp1052_155 #x0000000000000001))
(assert (= var997490 temp1052_155))
(model-add temp1052_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp1052_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp1052_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1052_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp1052_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1052_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






