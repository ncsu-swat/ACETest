(declare-fun temp333_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp333_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp333_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp333_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp333_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp333_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp333_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp333_8 () (_ BitVec 64))
(declare-fun temp333_10 () (_ BitVec 64))
(declare-fun temp333_9 () (_ BitVec 64))
(declare-fun temp333_12 () (_ BitVec 64))
(declare-fun temp333_11 () (_ BitVec 64))
(declare-fun temp333_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp333_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp333_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp333_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp333_17 () (_ BitVec 64))
(declare-fun temp333_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp333_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp333_20 () (_ BitVec 64))
(declare-fun temp333_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_22 () (_ BitVec 64))
(declare-fun temp333_23 () (_ BitVec 64))
(declare-fun temp333_24 () (_ BitVec 64))
(declare-fun temp333_25 () (_ BitVec 64))
(declare-fun temp333_26 () (_ BitVec 64))
(declare-fun temp333_27 () (_ BitVec 64))
(declare-fun temp333_28 () (_ BitVec 64))
(declare-fun temp333_29 () (_ BitVec 64))
(declare-fun temp333_30 () (_ BitVec 64))
(declare-fun temp333_31 () (_ BitVec 64))
(declare-fun temp333_32 () (_ BitVec 64))
(declare-fun temp333_33 () (_ BitVec 64))
(declare-fun temp333_34 () (_ BitVec 64))
(declare-fun temp333_35 () (_ BitVec 64))
(declare-fun temp333_36 () (_ BitVec 64))
(declare-fun temp333_37 () (_ BitVec 64))
(declare-fun temp333_38 () (_ BitVec 64))
(declare-fun temp333_39 () (_ BitVec 64))
(declare-fun temp333_40 () (_ BitVec 64))
(declare-fun temp333_41 () (_ BitVec 64))
(declare-fun temp333_42 () (_ BitVec 64))
(declare-fun temp333_43 () (_ BitVec 64))
(declare-fun temp333_44 () (_ BitVec 64))
(declare-fun temp333_45 () (_ BitVec 64))
(declare-fun temp333_46 () (_ BitVec 64))
(declare-fun temp333_47 () (_ BitVec 64))
(declare-fun temp333_48 () (_ BitVec 64))
(declare-fun temp333_49 () (_ BitVec 64))
(declare-fun temp333_50 () (_ BitVec 64))
(declare-fun temp333_51 () (_ BitVec 64))
(declare-fun temp333_52 () (_ BitVec 64))
(declare-fun temp333_53 () (_ BitVec 64))
(declare-fun temp333_54 () (_ BitVec 64))
(declare-fun temp333_55 () (_ BitVec 64))
(declare-fun temp333_56 () (_ BitVec 64))
(declare-fun temp333_57 () (_ BitVec 64))
(declare-fun temp333_58 () (_ BitVec 64))
(declare-fun temp333_59 () (_ BitVec 64))
(declare-fun temp333_60 () (_ BitVec 64))
(declare-fun temp333_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp333_62 () (_ BitVec 64))
(declare-fun temp333_63 () (_ BitVec 64))
(declare-fun temp333_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_65 () (_ BitVec 64))
(declare-fun temp333_66 () (_ BitVec 64))
(declare-fun temp333_67 () (_ BitVec 64))
(declare-fun temp333_68 () (_ BitVec 64))
(declare-fun temp333_69 () (_ BitVec 64))
(declare-fun temp333_70 () (_ BitVec 64))
(declare-fun temp333_71 () (_ BitVec 64))
(declare-fun temp333_72 () (_ BitVec 64))
(declare-fun temp333_73 () (_ BitVec 64))
(declare-fun temp333_74 () (_ BitVec 64))
(declare-fun temp333_75 () (_ BitVec 64))
(declare-fun temp333_76 () (_ BitVec 64))
(declare-fun temp333_77 () (_ BitVec 64))
(declare-fun temp333_78 () (_ BitVec 64))
(declare-fun temp333_79 () (_ BitVec 64))
(declare-fun temp333_80 () (_ BitVec 64))
(declare-fun temp333_81 () (_ BitVec 64))
(declare-fun temp333_82 () (_ BitVec 64))
(declare-fun temp333_83 () (_ BitVec 64))
(declare-fun temp333_84 () (_ BitVec 64))
(declare-fun temp333_85 () (_ BitVec 64))
(declare-fun temp333_86 () (_ BitVec 64))
(declare-fun temp333_87 () (_ BitVec 64))
(declare-fun temp333_88 () (_ BitVec 64))
(declare-fun temp333_89 () (_ BitVec 64))
(declare-fun temp333_90 () (_ BitVec 64))
(declare-fun temp333_91 () (_ BitVec 64))
(declare-fun temp333_92 () (_ BitVec 64))
(declare-fun temp333_93 () (_ BitVec 64))
(declare-fun temp333_94 () (_ BitVec 64))
(declare-fun temp333_95 () (_ BitVec 64))
(declare-fun temp333_96 () (_ BitVec 64))
(declare-fun temp333_97 () (_ BitVec 64))
(declare-fun temp333_98 () (_ BitVec 64))
(declare-fun temp333_99 () (_ BitVec 64))
(declare-fun temp333_100 () (_ BitVec 64))
(declare-fun temp333_101 () (_ BitVec 64))
(declare-fun temp333_102 () (_ BitVec 64))
(declare-fun temp333_103 () (_ BitVec 64))
(declare-fun temp333_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp333_105 () (_ BitVec 64))
(declare-fun temp333_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp333_107 () (_ BitVec 64))
(declare-fun temp333_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_109 () (_ BitVec 64))
(declare-fun temp333_110 () (_ BitVec 64))
(declare-fun temp333_111 () (_ BitVec 64))
(declare-fun temp333_112 () (_ BitVec 64))
(declare-fun temp333_113 () (_ BitVec 64))
(declare-fun temp333_114 () (_ BitVec 64))
(declare-fun temp333_115 () (_ BitVec 64))
(declare-fun temp333_116 () (_ BitVec 64))
(declare-fun temp333_117 () (_ BitVec 64))
(declare-fun temp333_118 () (_ BitVec 64))
(declare-fun temp333_119 () (_ BitVec 64))
(declare-fun temp333_120 () (_ BitVec 64))
(declare-fun temp333_121 () (_ BitVec 64))
(declare-fun temp333_122 () (_ BitVec 64))
(declare-fun temp333_123 () (_ BitVec 64))
(declare-fun temp333_124 () (_ BitVec 64))
(declare-fun temp333_126 () (_ BitVec 64))
(declare-fun temp333_127 () (_ BitVec 64))
(declare-fun temp333_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp333_128 () (_ BitVec 64))
(declare-fun temp333_129 () (_ BitVec 64))
(declare-fun temp333_131 () (_ BitVec 64))
(declare-fun temp333_132 () (_ BitVec 64))
(declare-fun temp333_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp333_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp333_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp333_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp333_136 () (_ BitVec 64))
(declare-fun temp333_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp333_139 () (_ BitVec 64))
(declare-fun temp333_140 () (_ BitVec 64))
(declare-fun temp333_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp333_141 () (_ BitVec 64))
(declare-fun temp333_143 () (_ BitVec 64))
(declare-fun temp333_144 () (_ BitVec 64))
(declare-fun temp333_142 () (_ BitVec 64))
(declare-fun temp333_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp333_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp333_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp333_148 () (_ BitVec 64))
(declare-fun temp333_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp333_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp333_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp333_152 () (_ BitVec 64))
(assert (= temp333_1 #x0000000000000003))
(assert (= var465453 temp333_1))
(assert (= temp333_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp333_2)))
(assert (= temp333_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp333_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp333_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp333_4)))
(assert (= temp333_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp333_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp333_6 #x0000000000000000))
(assert (= var465488 temp333_6))
(assert (= temp333_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp333_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp333_8 #x0000000000000001))
(assert (= var465522 temp333_8))
(assert (= temp333_10 #x0000000000000000))
(assert (= temp333_9 temp333_10))
(assert (= temp333_12 #x0000000000000003))
(assert (= temp333_11 temp333_12))
(assert (= temp333_13 #x0000000000000000))
(assert (= var863614 temp333_13))
(assert (= temp333_14 #x0000000000000001))
(assert (= var863635 temp333_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp333_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp333_15)))
(assert (= temp333_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp333_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_17 #x0000000000000000))
(assert (= var997373 temp333_17))
(assert (= temp333_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp333_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_19 #x0000000000000000))
(assert (= var997418 temp333_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp333_20 #x0000000000000000))
(assert (= temp333_21 temp333_20))
(assert (= temp333_22 (select ARGNAME_padding_NAMEEND_VAL temp333_21)))
(assert (= temp333_23 #x0000000000000001))
(assert (= temp333_24 temp333_23))
(assert (= temp333_25 (select ARGNAME_padding_NAMEEND_VAL temp333_24)))
(assert (= temp333_26 #x0000000000000002))
(assert (= temp333_27 temp333_26))
(assert (= temp333_28 (select ARGNAME_padding_NAMEEND_VAL temp333_27)))
(assert (= temp333_29 #x0000000000000003))
(assert (= temp333_30 temp333_29))
(assert (= temp333_31 (select ARGNAME_padding_NAMEEND_VAL temp333_30)))
(assert (= temp333_32 #x0000000000000004))
(assert (= temp333_33 temp333_32))
(assert (= temp333_34 (select ARGNAME_padding_NAMEEND_VAL temp333_33)))
(assert (= temp333_35 #x0000000000000005))
(assert (= temp333_36 temp333_35))
(assert (= temp333_37 (select ARGNAME_padding_NAMEEND_VAL temp333_36)))
(assert (= temp333_38 #x0000000000000000))
(assert (= temp333_39 #x0000000000000000))
(assert (= temp333_40 temp333_39))
(assert (= temp333_41 (select ARGNAME_padding_NAMEEND_VAL temp333_40)))
(assert (= temp333_42 #x0000000000000000))
(assert (= temp333_43 #x0000000000000001))
(assert (= temp333_44 temp333_43))
(assert (= temp333_45 (select ARGNAME_padding_NAMEEND_VAL temp333_44)))
(assert (= temp333_46 #x0000000000000000))
(assert (= temp333_47 #x0000000000000002))
(assert (= temp333_48 temp333_47))
(assert (= temp333_49 (select ARGNAME_padding_NAMEEND_VAL temp333_48)))
(assert (= temp333_50 #x0000000000000000))
(assert (= temp333_51 #x0000000000000003))
(assert (= temp333_52 temp333_51))
(assert (= temp333_53 (select ARGNAME_padding_NAMEEND_VAL temp333_52)))
(assert (= temp333_54 #x0000000000000000))
(assert (= temp333_55 #x0000000000000004))
(assert (= temp333_56 temp333_55))
(assert (= temp333_57 (select ARGNAME_padding_NAMEEND_VAL temp333_56)))
(assert (= temp333_58 #x0000000000000000))
(assert (= temp333_59 #x0000000000000005))
(assert (= temp333_60 temp333_59))
(assert (= temp333_61 (select ARGNAME_padding_NAMEEND_VAL temp333_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp333_41 temp333_38)
             (bvslt temp333_45 temp333_42)
             (bvslt temp333_49 temp333_46)
             (bvslt temp333_53 temp333_50)
             (bvslt temp333_57 temp333_54)
             (bvslt temp333_61 temp333_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_62 #x0000000000000000))
(assert (= var1716002 temp333_62))
(assert (= temp333_63 #x0000000000000000))
(assert (= temp333_64 temp333_63))
(assert (= temp333_65 (select ARGNAME_stride_NAMEEND_VAL temp333_64)))
(assert (= temp333_66 #x0000000000000001))
(assert (= temp333_67 temp333_66))
(assert (= temp333_68 (select ARGNAME_stride_NAMEEND_VAL temp333_67)))
(assert (= temp333_69 #x0000000000000002))
(assert (= temp333_70 temp333_69))
(assert (= temp333_71 (select ARGNAME_stride_NAMEEND_VAL temp333_70)))
(assert (= temp333_72 #x0000000000000003))
(assert (= temp333_73 temp333_72))
(assert (= temp333_74 (select ARGNAME_stride_NAMEEND_VAL temp333_73)))
(assert (= temp333_75 #x0000000000000004))
(assert (= temp333_76 temp333_75))
(assert (= temp333_77 (select ARGNAME_stride_NAMEEND_VAL temp333_76)))
(assert (= temp333_78 #x0000000000000005))
(assert (= temp333_79 temp333_78))
(assert (= temp333_80 (select ARGNAME_stride_NAMEEND_VAL temp333_79)))
(assert (= temp333_81 #x0000000000000000))
(assert (= temp333_82 #x0000000000000000))
(assert (= temp333_83 temp333_82))
(assert (= temp333_84 (select ARGNAME_stride_NAMEEND_VAL temp333_83)))
(assert (= temp333_85 #x0000000000000000))
(assert (= temp333_86 #x0000000000000001))
(assert (= temp333_87 temp333_86))
(assert (= temp333_88 (select ARGNAME_stride_NAMEEND_VAL temp333_87)))
(assert (= temp333_89 #x0000000000000000))
(assert (= temp333_90 #x0000000000000002))
(assert (= temp333_91 temp333_90))
(assert (= temp333_92 (select ARGNAME_stride_NAMEEND_VAL temp333_91)))
(assert (= temp333_93 #x0000000000000000))
(assert (= temp333_94 #x0000000000000003))
(assert (= temp333_95 temp333_94))
(assert (= temp333_96 (select ARGNAME_stride_NAMEEND_VAL temp333_95)))
(assert (= temp333_97 #x0000000000000000))
(assert (= temp333_98 #x0000000000000004))
(assert (= temp333_99 temp333_98))
(assert (= temp333_100 (select ARGNAME_stride_NAMEEND_VAL temp333_99)))
(assert (= temp333_101 #x0000000000000000))
(assert (= temp333_102 #x0000000000000005))
(assert (= temp333_103 temp333_102))
(assert (= temp333_104 (select ARGNAME_stride_NAMEEND_VAL temp333_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp333_84 temp333_81)
             (bvsle temp333_88 temp333_85)
             (bvsle temp333_92 temp333_89)
             (bvsle temp333_96 temp333_93)
             (bvsle temp333_100 temp333_97)
             (bvsle temp333_104 temp333_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_105 #x0000000000000000))
(assert (= var1716023 temp333_105))
(assert (= temp333_106 #x0000000000000000))
(assert (= var1704114 temp333_106))
(assert (= temp333_107 #x0000000000000000))
(assert (= temp333_108 temp333_107))
(assert (= temp333_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_108)))
(assert (= temp333_110 #x0000000000000001))
(assert (= temp333_111 temp333_110))
(assert (= temp333_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_111)))
(assert (= temp333_113 #x0000000000000002))
(assert (= temp333_114 temp333_113))
(assert (= temp333_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_114)))
(assert (= temp333_116 #x0000000000000003))
(assert (= temp333_117 temp333_116))
(assert (= temp333_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_117)))
(assert (= temp333_119 #x0000000000000004))
(assert (= temp333_120 temp333_119))
(assert (= temp333_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_120)))
(assert (= temp333_122 #x0000000000000005))
(assert (= temp333_123 temp333_122))
(assert (= temp333_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_123)))
(assert (= temp333_126 var1704114))
(assert (= temp333_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_126)))
(assert (= temp333_125 temp333_127))
(assert (= var1716068
   (ite (bvslt temp333_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_128 #x0000000000000000))
(assert (= var1716068 temp333_128))
(assert (= temp333_129 #x0000000000000000))
(assert (= var1704114 temp333_129))
(assert (= temp333_131 var1704114))
(assert (= temp333_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_131)))
(assert (= temp333_130 temp333_132))
(assert (= var1716090 (bvsmod temp333_130 ARGNAME_groups_NAMEEND)))
(assert (= temp333_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp333_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp333_134 #x0000000000000001))
(assert (= var1716091 temp333_134))
(assert (= var1716110 var1716000))
(assert (= temp333_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp333_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp333_136 #x0000000000000001))
(assert (= var1716111 temp333_136))
(assert (= temp333_137 #x0000000000000001))
(assert (= var1705002 temp333_137))
(assert (= temp333_139 var1705002))
(assert (= temp333_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_139)))
(assert (= temp333_138 temp333_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp333_138)))
(assert (= temp333_141 #x0000000000000000))
(assert (= var1704114 temp333_141))
(assert (= temp333_143 var1704114))
(assert (= temp333_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp333_143)))
(assert (= temp333_142 temp333_144))
(assert (= temp333_145 #x0000000000000002))
(assert (= var1979241 temp333_145))
(assert (= temp333_146 #x0000000000000001))
(assert (= var1716281 temp333_146))
(assert (= temp333_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp333_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_148 #x0000000000000001))
(assert (= var997490 temp333_148))
(assert (= temp333_149 #x0000000000000001))
(assert (= var997620 temp333_149))
(assert (= var3486185 var997620))
(assert (= temp333_150 #x0000000000000000))
(assert (= var3686207 temp333_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp333_151 #x0000000000000002))
(assert (= var3815043 temp333_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp333_152 #x0000000000000001))
(assert (= var997490 temp333_152))
(model-add temp333_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp333_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp333_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp333_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp333_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp333_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






