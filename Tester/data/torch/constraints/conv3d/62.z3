(declare-fun temp82_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp82_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp82_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp82_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp82_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp82_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp82_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp82_8 () (_ BitVec 64))
(declare-fun temp82_10 () (_ BitVec 64))
(declare-fun temp82_9 () (_ BitVec 64))
(declare-fun temp82_12 () (_ BitVec 64))
(declare-fun temp82_11 () (_ BitVec 64))
(declare-fun temp82_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp82_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp82_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp82_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp82_17 () (_ BitVec 64))
(declare-fun temp82_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp82_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp82_20 () (_ BitVec 64))
(declare-fun temp82_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp82_22 () (_ BitVec 64))
(declare-fun temp82_23 () (_ BitVec 64))
(declare-fun temp82_24 () (_ BitVec 64))
(declare-fun temp82_25 () (_ BitVec 64))
(declare-fun temp82_26 () (_ BitVec 64))
(declare-fun temp82_27 () (_ BitVec 64))
(declare-fun temp82_28 () (_ BitVec 64))
(declare-fun temp82_29 () (_ BitVec 64))
(declare-fun temp82_30 () (_ BitVec 64))
(declare-fun temp82_31 () (_ BitVec 64))
(declare-fun temp82_32 () (_ BitVec 64))
(declare-fun temp82_33 () (_ BitVec 64))
(declare-fun temp82_34 () (_ BitVec 64))
(declare-fun temp82_35 () (_ BitVec 64))
(declare-fun temp82_36 () (_ BitVec 64))
(declare-fun temp82_37 () (_ BitVec 64))
(declare-fun temp82_38 () (_ BitVec 64))
(declare-fun temp82_39 () (_ BitVec 64))
(declare-fun temp82_40 () (_ BitVec 64))
(declare-fun temp82_41 () (_ BitVec 64))
(declare-fun temp82_42 () (_ BitVec 64))
(declare-fun temp82_43 () (_ BitVec 64))
(declare-fun temp82_44 () (_ BitVec 64))
(declare-fun temp82_45 () (_ BitVec 64))
(declare-fun temp82_46 () (_ BitVec 64))
(declare-fun temp82_47 () (_ BitVec 64))
(declare-fun temp82_48 () (_ BitVec 64))
(declare-fun temp82_49 () (_ BitVec 64))
(declare-fun temp82_50 () (_ BitVec 64))
(declare-fun temp82_51 () (_ BitVec 64))
(declare-fun temp82_52 () (_ BitVec 64))
(declare-fun temp82_53 () (_ BitVec 64))
(declare-fun temp82_54 () (_ BitVec 64))
(declare-fun temp82_55 () (_ BitVec 64))
(declare-fun temp82_56 () (_ BitVec 64))
(declare-fun temp82_57 () (_ BitVec 64))
(declare-fun temp82_58 () (_ BitVec 64))
(declare-fun temp82_59 () (_ BitVec 64))
(declare-fun temp82_60 () (_ BitVec 64))
(declare-fun temp82_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp82_62 () (_ BitVec 64))
(declare-fun temp82_63 () (_ BitVec 64))
(declare-fun temp82_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp82_65 () (_ BitVec 64))
(declare-fun temp82_66 () (_ BitVec 64))
(declare-fun temp82_67 () (_ BitVec 64))
(declare-fun temp82_68 () (_ BitVec 64))
(declare-fun temp82_69 () (_ BitVec 64))
(declare-fun temp82_70 () (_ BitVec 64))
(declare-fun temp82_71 () (_ BitVec 64))
(declare-fun temp82_72 () (_ BitVec 64))
(declare-fun temp82_73 () (_ BitVec 64))
(declare-fun temp82_74 () (_ BitVec 64))
(declare-fun temp82_75 () (_ BitVec 64))
(declare-fun temp82_76 () (_ BitVec 64))
(declare-fun temp82_77 () (_ BitVec 64))
(declare-fun temp82_78 () (_ BitVec 64))
(declare-fun temp82_79 () (_ BitVec 64))
(declare-fun temp82_80 () (_ BitVec 64))
(declare-fun temp82_81 () (_ BitVec 64))
(declare-fun temp82_82 () (_ BitVec 64))
(declare-fun temp82_83 () (_ BitVec 64))
(declare-fun temp82_84 () (_ BitVec 64))
(declare-fun temp82_85 () (_ BitVec 64))
(declare-fun temp82_86 () (_ BitVec 64))
(declare-fun temp82_87 () (_ BitVec 64))
(declare-fun temp82_88 () (_ BitVec 64))
(declare-fun temp82_89 () (_ BitVec 64))
(declare-fun temp82_90 () (_ BitVec 64))
(declare-fun temp82_91 () (_ BitVec 64))
(declare-fun temp82_92 () (_ BitVec 64))
(declare-fun temp82_93 () (_ BitVec 64))
(declare-fun temp82_94 () (_ BitVec 64))
(declare-fun temp82_95 () (_ BitVec 64))
(declare-fun temp82_96 () (_ BitVec 64))
(declare-fun temp82_97 () (_ BitVec 64))
(declare-fun temp82_98 () (_ BitVec 64))
(declare-fun temp82_99 () (_ BitVec 64))
(declare-fun temp82_100 () (_ BitVec 64))
(declare-fun temp82_101 () (_ BitVec 64))
(declare-fun temp82_102 () (_ BitVec 64))
(declare-fun temp82_103 () (_ BitVec 64))
(declare-fun temp82_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp82_105 () (_ BitVec 64))
(declare-fun temp82_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp82_107 () (_ BitVec 64))
(declare-fun temp82_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp82_109 () (_ BitVec 64))
(declare-fun temp82_110 () (_ BitVec 64))
(declare-fun temp82_111 () (_ BitVec 64))
(declare-fun temp82_112 () (_ BitVec 64))
(declare-fun temp82_113 () (_ BitVec 64))
(declare-fun temp82_114 () (_ BitVec 64))
(declare-fun temp82_115 () (_ BitVec 64))
(declare-fun temp82_116 () (_ BitVec 64))
(declare-fun temp82_117 () (_ BitVec 64))
(declare-fun temp82_118 () (_ BitVec 64))
(declare-fun temp82_119 () (_ BitVec 64))
(declare-fun temp82_120 () (_ BitVec 64))
(declare-fun temp82_121 () (_ BitVec 64))
(declare-fun temp82_122 () (_ BitVec 64))
(declare-fun temp82_123 () (_ BitVec 64))
(declare-fun temp82_124 () (_ BitVec 64))
(declare-fun temp82_126 () (_ BitVec 64))
(declare-fun temp82_127 () (_ BitVec 64))
(declare-fun temp82_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp82_128 () (_ BitVec 64))
(declare-fun temp82_129 () (_ BitVec 64))
(declare-fun temp82_131 () (_ BitVec 64))
(declare-fun temp82_132 () (_ BitVec 64))
(declare-fun temp82_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp82_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp82_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp82_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp82_136 () (_ BitVec 64))
(declare-fun temp82_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp82_139 () (_ BitVec 64))
(declare-fun temp82_140 () (_ BitVec 64))
(declare-fun temp82_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp82_141 () (_ BitVec 64))
(declare-fun temp82_143 () (_ BitVec 64))
(declare-fun temp82_144 () (_ BitVec 64))
(declare-fun temp82_142 () (_ BitVec 64))
(declare-fun temp82_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp82_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp82_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp82_148 () (_ BitVec 64))
(declare-fun temp82_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp82_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp82_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var997926 () (_ BitVec 64))
(declare-fun temp82_152 () (_ BitVec 64))
(declare-fun var997927 () (_ BitVec 64))
(declare-fun temp82_154 () (_ BitVec 64))
(declare-fun temp82_153 () (_ BitVec 64))
(declare-fun temp82_155 () (_ BitVec 64))
(declare-fun var5705194 () (_ BitVec 64))
(declare-fun temp82_157 () (_ BitVec 64))
(declare-fun temp82_156 () (_ BitVec 64))
(declare-fun temp82_158 () (_ BitVec 64))
(assert (= temp82_1 #x0000000000000003))
(assert (= var465453 temp82_1))
(assert (= temp82_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp82_2)))
(assert (= temp82_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp82_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp82_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp82_4)))
(assert (= temp82_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp82_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp82_6 #x0000000000000000))
(assert (= var465488 temp82_6))
(assert (= temp82_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp82_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp82_8 #x0000000000000001))
(assert (= var465522 temp82_8))
(assert (= temp82_10 #x0000000000000000))
(assert (= temp82_9 temp82_10))
(assert (= temp82_12 #x0000000000000003))
(assert (= temp82_11 temp82_12))
(assert (= temp82_13 #x0000000000000000))
(assert (= var863614 temp82_13))
(assert (= temp82_14 #x0000000000000001))
(assert (= var863635 temp82_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp82_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp82_15)))
(assert (= temp82_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp82_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_17 #x0000000000000000))
(assert (= var997373 temp82_17))
(assert (= temp82_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp82_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_19 #x0000000000000000))
(assert (= var997418 temp82_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp82_20 #x0000000000000000))
(assert (= temp82_21 temp82_20))
(assert (= temp82_22 (select ARGNAME_padding_NAMEEND_VAL temp82_21)))
(assert (= temp82_23 #x0000000000000001))
(assert (= temp82_24 temp82_23))
(assert (= temp82_25 (select ARGNAME_padding_NAMEEND_VAL temp82_24)))
(assert (= temp82_26 #x0000000000000002))
(assert (= temp82_27 temp82_26))
(assert (= temp82_28 (select ARGNAME_padding_NAMEEND_VAL temp82_27)))
(assert (= temp82_29 #x0000000000000003))
(assert (= temp82_30 temp82_29))
(assert (= temp82_31 (select ARGNAME_padding_NAMEEND_VAL temp82_30)))
(assert (= temp82_32 #x0000000000000004))
(assert (= temp82_33 temp82_32))
(assert (= temp82_34 (select ARGNAME_padding_NAMEEND_VAL temp82_33)))
(assert (= temp82_35 #x0000000000000005))
(assert (= temp82_36 temp82_35))
(assert (= temp82_37 (select ARGNAME_padding_NAMEEND_VAL temp82_36)))
(assert (= temp82_38 #x0000000000000000))
(assert (= temp82_39 #x0000000000000000))
(assert (= temp82_40 temp82_39))
(assert (= temp82_41 (select ARGNAME_padding_NAMEEND_VAL temp82_40)))
(assert (= temp82_42 #x0000000000000000))
(assert (= temp82_43 #x0000000000000001))
(assert (= temp82_44 temp82_43))
(assert (= temp82_45 (select ARGNAME_padding_NAMEEND_VAL temp82_44)))
(assert (= temp82_46 #x0000000000000000))
(assert (= temp82_47 #x0000000000000002))
(assert (= temp82_48 temp82_47))
(assert (= temp82_49 (select ARGNAME_padding_NAMEEND_VAL temp82_48)))
(assert (= temp82_50 #x0000000000000000))
(assert (= temp82_51 #x0000000000000003))
(assert (= temp82_52 temp82_51))
(assert (= temp82_53 (select ARGNAME_padding_NAMEEND_VAL temp82_52)))
(assert (= temp82_54 #x0000000000000000))
(assert (= temp82_55 #x0000000000000004))
(assert (= temp82_56 temp82_55))
(assert (= temp82_57 (select ARGNAME_padding_NAMEEND_VAL temp82_56)))
(assert (= temp82_58 #x0000000000000000))
(assert (= temp82_59 #x0000000000000005))
(assert (= temp82_60 temp82_59))
(assert (= temp82_61 (select ARGNAME_padding_NAMEEND_VAL temp82_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp82_41 temp82_38)
             (bvslt temp82_45 temp82_42)
             (bvslt temp82_49 temp82_46)
             (bvslt temp82_53 temp82_50)
             (bvslt temp82_57 temp82_54)
             (bvslt temp82_61 temp82_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_62 #x0000000000000000))
(assert (= var1716002 temp82_62))
(assert (= temp82_63 #x0000000000000000))
(assert (= temp82_64 temp82_63))
(assert (= temp82_65 (select ARGNAME_stride_NAMEEND_VAL temp82_64)))
(assert (= temp82_66 #x0000000000000001))
(assert (= temp82_67 temp82_66))
(assert (= temp82_68 (select ARGNAME_stride_NAMEEND_VAL temp82_67)))
(assert (= temp82_69 #x0000000000000002))
(assert (= temp82_70 temp82_69))
(assert (= temp82_71 (select ARGNAME_stride_NAMEEND_VAL temp82_70)))
(assert (= temp82_72 #x0000000000000003))
(assert (= temp82_73 temp82_72))
(assert (= temp82_74 (select ARGNAME_stride_NAMEEND_VAL temp82_73)))
(assert (= temp82_75 #x0000000000000004))
(assert (= temp82_76 temp82_75))
(assert (= temp82_77 (select ARGNAME_stride_NAMEEND_VAL temp82_76)))
(assert (= temp82_78 #x0000000000000005))
(assert (= temp82_79 temp82_78))
(assert (= temp82_80 (select ARGNAME_stride_NAMEEND_VAL temp82_79)))
(assert (= temp82_81 #x0000000000000000))
(assert (= temp82_82 #x0000000000000000))
(assert (= temp82_83 temp82_82))
(assert (= temp82_84 (select ARGNAME_stride_NAMEEND_VAL temp82_83)))
(assert (= temp82_85 #x0000000000000000))
(assert (= temp82_86 #x0000000000000001))
(assert (= temp82_87 temp82_86))
(assert (= temp82_88 (select ARGNAME_stride_NAMEEND_VAL temp82_87)))
(assert (= temp82_89 #x0000000000000000))
(assert (= temp82_90 #x0000000000000002))
(assert (= temp82_91 temp82_90))
(assert (= temp82_92 (select ARGNAME_stride_NAMEEND_VAL temp82_91)))
(assert (= temp82_93 #x0000000000000000))
(assert (= temp82_94 #x0000000000000003))
(assert (= temp82_95 temp82_94))
(assert (= temp82_96 (select ARGNAME_stride_NAMEEND_VAL temp82_95)))
(assert (= temp82_97 #x0000000000000000))
(assert (= temp82_98 #x0000000000000004))
(assert (= temp82_99 temp82_98))
(assert (= temp82_100 (select ARGNAME_stride_NAMEEND_VAL temp82_99)))
(assert (= temp82_101 #x0000000000000000))
(assert (= temp82_102 #x0000000000000005))
(assert (= temp82_103 temp82_102))
(assert (= temp82_104 (select ARGNAME_stride_NAMEEND_VAL temp82_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp82_84 temp82_81)
             (bvsle temp82_88 temp82_85)
             (bvsle temp82_92 temp82_89)
             (bvsle temp82_96 temp82_93)
             (bvsle temp82_100 temp82_97)
             (bvsle temp82_104 temp82_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_105 #x0000000000000000))
(assert (= var1716023 temp82_105))
(assert (= temp82_106 #x0000000000000000))
(assert (= var1704114 temp82_106))
(assert (= temp82_107 #x0000000000000000))
(assert (= temp82_108 temp82_107))
(assert (= temp82_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_108)))
(assert (= temp82_110 #x0000000000000001))
(assert (= temp82_111 temp82_110))
(assert (= temp82_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_111)))
(assert (= temp82_113 #x0000000000000002))
(assert (= temp82_114 temp82_113))
(assert (= temp82_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_114)))
(assert (= temp82_116 #x0000000000000003))
(assert (= temp82_117 temp82_116))
(assert (= temp82_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_117)))
(assert (= temp82_119 #x0000000000000004))
(assert (= temp82_120 temp82_119))
(assert (= temp82_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_120)))
(assert (= temp82_122 #x0000000000000005))
(assert (= temp82_123 temp82_122))
(assert (= temp82_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_123)))
(assert (= temp82_126 var1704114))
(assert (= temp82_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_126)))
(assert (= temp82_125 temp82_127))
(assert (= var1716068
   (ite (bvslt temp82_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_128 #x0000000000000000))
(assert (= var1716068 temp82_128))
(assert (= temp82_129 #x0000000000000000))
(assert (= var1704114 temp82_129))
(assert (= temp82_131 var1704114))
(assert (= temp82_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_131)))
(assert (= temp82_130 temp82_132))
(assert (= var1716090 (bvsmod temp82_130 ARGNAME_groups_NAMEEND)))
(assert (= temp82_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp82_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp82_134 #x0000000000000001))
(assert (= var1716091 temp82_134))
(assert (= var1716110 var1716000))
(assert (= temp82_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp82_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp82_136 #x0000000000000001))
(assert (= var1716111 temp82_136))
(assert (= temp82_137 #x0000000000000001))
(assert (= var1705002 temp82_137))
(assert (= temp82_139 var1705002))
(assert (= temp82_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_139)))
(assert (= temp82_138 temp82_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp82_138)))
(assert (= temp82_141 #x0000000000000000))
(assert (= var1704114 temp82_141))
(assert (= temp82_143 var1704114))
(assert (= temp82_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_143)))
(assert (= temp82_142 temp82_144))
(assert (= temp82_145 #x0000000000000002))
(assert (= var1979241 temp82_145))
(assert (= temp82_146 #x0000000000000001))
(assert (= var1716281 temp82_146))
(assert (= temp82_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp82_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_148 #x0000000000000001))
(assert (= var997490 temp82_148))
(assert (= temp82_149 #x0000000000000001))
(assert (= var997620 temp82_149))
(assert (= var3486185 var997620))
(assert (= temp82_150 #x0000000000000000))
(assert (= var3686207 temp82_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp82_151 #x0000000000000002))
(assert (= var3815043 temp82_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var997926 var997345))
(assert (= temp82_152 #x0000000000000000))
(assert (= var997927
   (ite (distinct var997926 temp82_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp82_154 #x0000000000000001))
(assert (= temp82_153 temp82_154))
(assert (= temp82_155 #x0000000000000001))
(assert (= var5705194 temp82_155))
(assert (= temp82_157 #xffffffffffffffff))
(assert (= temp82_156 temp82_157))
(assert (= temp82_158 #x0000000000000001))
(assert (= var997490 temp82_158))
(model-add temp82_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp82_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp82_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp82_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp82_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp82_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






