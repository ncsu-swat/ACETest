(declare-fun temp1082_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1082_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1082_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1082_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1082_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1082_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1082_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1082_8 () (_ BitVec 64))
(declare-fun temp1082_10 () (_ BitVec 64))
(declare-fun temp1082_9 () (_ BitVec 64))
(declare-fun temp1082_12 () (_ BitVec 64))
(declare-fun temp1082_11 () (_ BitVec 64))
(declare-fun temp1082_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1082_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1082_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1082_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1082_17 () (_ BitVec 64))
(declare-fun temp1082_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1082_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1082_20 () (_ BitVec 64))
(declare-fun temp1082_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1082_22 () (_ BitVec 64))
(declare-fun temp1082_23 () (_ BitVec 64))
(declare-fun temp1082_24 () (_ BitVec 64))
(declare-fun temp1082_25 () (_ BitVec 64))
(declare-fun temp1082_26 () (_ BitVec 64))
(declare-fun temp1082_27 () (_ BitVec 64))
(declare-fun temp1082_28 () (_ BitVec 64))
(declare-fun temp1082_29 () (_ BitVec 64))
(declare-fun temp1082_30 () (_ BitVec 64))
(declare-fun temp1082_31 () (_ BitVec 64))
(declare-fun temp1082_32 () (_ BitVec 64))
(declare-fun temp1082_33 () (_ BitVec 64))
(declare-fun temp1082_34 () (_ BitVec 64))
(declare-fun temp1082_35 () (_ BitVec 64))
(declare-fun temp1082_36 () (_ BitVec 64))
(declare-fun temp1082_37 () (_ BitVec 64))
(declare-fun temp1082_38 () (_ BitVec 64))
(declare-fun temp1082_39 () (_ BitVec 64))
(declare-fun temp1082_40 () (_ BitVec 64))
(declare-fun temp1082_41 () (_ BitVec 64))
(declare-fun temp1082_42 () (_ BitVec 64))
(declare-fun temp1082_43 () (_ BitVec 64))
(declare-fun temp1082_44 () (_ BitVec 64))
(declare-fun temp1082_45 () (_ BitVec 64))
(declare-fun temp1082_46 () (_ BitVec 64))
(declare-fun temp1082_47 () (_ BitVec 64))
(declare-fun temp1082_48 () (_ BitVec 64))
(declare-fun temp1082_49 () (_ BitVec 64))
(declare-fun temp1082_50 () (_ BitVec 64))
(declare-fun temp1082_51 () (_ BitVec 64))
(declare-fun temp1082_52 () (_ BitVec 64))
(declare-fun temp1082_53 () (_ BitVec 64))
(declare-fun temp1082_54 () (_ BitVec 64))
(declare-fun temp1082_55 () (_ BitVec 64))
(declare-fun temp1082_56 () (_ BitVec 64))
(declare-fun temp1082_57 () (_ BitVec 64))
(declare-fun temp1082_58 () (_ BitVec 64))
(declare-fun temp1082_59 () (_ BitVec 64))
(declare-fun temp1082_60 () (_ BitVec 64))
(declare-fun temp1082_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1082_62 () (_ BitVec 64))
(declare-fun temp1082_63 () (_ BitVec 64))
(declare-fun temp1082_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1082_65 () (_ BitVec 64))
(declare-fun temp1082_66 () (_ BitVec 64))
(declare-fun temp1082_67 () (_ BitVec 64))
(declare-fun temp1082_68 () (_ BitVec 64))
(declare-fun temp1082_69 () (_ BitVec 64))
(declare-fun temp1082_70 () (_ BitVec 64))
(declare-fun temp1082_71 () (_ BitVec 64))
(declare-fun temp1082_72 () (_ BitVec 64))
(declare-fun temp1082_73 () (_ BitVec 64))
(declare-fun temp1082_74 () (_ BitVec 64))
(declare-fun temp1082_75 () (_ BitVec 64))
(declare-fun temp1082_76 () (_ BitVec 64))
(declare-fun temp1082_77 () (_ BitVec 64))
(declare-fun temp1082_78 () (_ BitVec 64))
(declare-fun temp1082_79 () (_ BitVec 64))
(declare-fun temp1082_80 () (_ BitVec 64))
(declare-fun temp1082_81 () (_ BitVec 64))
(declare-fun temp1082_82 () (_ BitVec 64))
(declare-fun temp1082_83 () (_ BitVec 64))
(declare-fun temp1082_84 () (_ BitVec 64))
(declare-fun temp1082_85 () (_ BitVec 64))
(declare-fun temp1082_86 () (_ BitVec 64))
(declare-fun temp1082_87 () (_ BitVec 64))
(declare-fun temp1082_88 () (_ BitVec 64))
(declare-fun temp1082_89 () (_ BitVec 64))
(declare-fun temp1082_90 () (_ BitVec 64))
(declare-fun temp1082_91 () (_ BitVec 64))
(declare-fun temp1082_92 () (_ BitVec 64))
(declare-fun temp1082_93 () (_ BitVec 64))
(declare-fun temp1082_94 () (_ BitVec 64))
(declare-fun temp1082_95 () (_ BitVec 64))
(declare-fun temp1082_96 () (_ BitVec 64))
(declare-fun temp1082_97 () (_ BitVec 64))
(declare-fun temp1082_98 () (_ BitVec 64))
(declare-fun temp1082_99 () (_ BitVec 64))
(declare-fun temp1082_100 () (_ BitVec 64))
(declare-fun temp1082_101 () (_ BitVec 64))
(declare-fun temp1082_102 () (_ BitVec 64))
(declare-fun temp1082_103 () (_ BitVec 64))
(declare-fun temp1082_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1082_105 () (_ BitVec 64))
(declare-fun temp1082_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1082_107 () (_ BitVec 64))
(declare-fun temp1082_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1082_109 () (_ BitVec 64))
(declare-fun temp1082_110 () (_ BitVec 64))
(declare-fun temp1082_111 () (_ BitVec 64))
(declare-fun temp1082_112 () (_ BitVec 64))
(declare-fun temp1082_113 () (_ BitVec 64))
(declare-fun temp1082_114 () (_ BitVec 64))
(declare-fun temp1082_115 () (_ BitVec 64))
(declare-fun temp1082_116 () (_ BitVec 64))
(declare-fun temp1082_117 () (_ BitVec 64))
(declare-fun temp1082_118 () (_ BitVec 64))
(declare-fun temp1082_119 () (_ BitVec 64))
(declare-fun temp1082_120 () (_ BitVec 64))
(declare-fun temp1082_121 () (_ BitVec 64))
(declare-fun temp1082_122 () (_ BitVec 64))
(declare-fun temp1082_123 () (_ BitVec 64))
(declare-fun temp1082_124 () (_ BitVec 64))
(declare-fun temp1082_126 () (_ BitVec 64))
(declare-fun temp1082_127 () (_ BitVec 64))
(declare-fun temp1082_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1082_128 () (_ BitVec 64))
(declare-fun temp1082_129 () (_ BitVec 64))
(declare-fun temp1082_131 () (_ BitVec 64))
(declare-fun temp1082_132 () (_ BitVec 64))
(declare-fun temp1082_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1082_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1082_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1082_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1082_136 () (_ BitVec 64))
(declare-fun temp1082_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1082_139 () (_ BitVec 64))
(declare-fun temp1082_140 () (_ BitVec 64))
(declare-fun temp1082_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1082_141 () (_ BitVec 64))
(declare-fun temp1082_143 () (_ BitVec 64))
(declare-fun temp1082_144 () (_ BitVec 64))
(declare-fun temp1082_142 () (_ BitVec 64))
(declare-fun temp1082_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1082_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1082_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1082_148 () (_ BitVec 64))
(declare-fun temp1082_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1082_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp1082_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var4206992 () (_ BitVec 64))
(declare-fun temp1082_152 () (_ BitVec 64))
(declare-fun var998846 () (_ BitVec 64))
(declare-fun temp1082_153 () (_ BitVec 64))
(declare-fun temp1082_154 () (_ BitVec 64))
(declare-fun var4535939 () (_ BitVec 64))
(declare-fun temp1082_155 () (_ BitVec 64))
(assert (= temp1082_1 #x0000000000000003))
(assert (= var465453 temp1082_1))
(assert (= temp1082_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1082_2)))
(assert (= temp1082_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1082_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1082_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1082_4)))
(assert (= temp1082_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1082_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1082_6 #x0000000000000000))
(assert (= var465488 temp1082_6))
(assert (= temp1082_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1082_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1082_8 #x0000000000000001))
(assert (= var465522 temp1082_8))
(assert (= temp1082_10 #x0000000000000000))
(assert (= temp1082_9 temp1082_10))
(assert (= temp1082_12 #x0000000000000003))
(assert (= temp1082_11 temp1082_12))
(assert (= temp1082_13 #x0000000000000000))
(assert (= var863614 temp1082_13))
(assert (= temp1082_14 #x0000000000000001))
(assert (= var863635 temp1082_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1082_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1082_15)))
(assert (= temp1082_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1082_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_17 #x0000000000000000))
(assert (= var997373 temp1082_17))
(assert (= temp1082_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1082_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_19 #x0000000000000000))
(assert (= var997418 temp1082_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1082_20 #x0000000000000000))
(assert (= temp1082_21 temp1082_20))
(assert (= temp1082_22 (select ARGNAME_padding_NAMEEND_VAL temp1082_21)))
(assert (= temp1082_23 #x0000000000000001))
(assert (= temp1082_24 temp1082_23))
(assert (= temp1082_25 (select ARGNAME_padding_NAMEEND_VAL temp1082_24)))
(assert (= temp1082_26 #x0000000000000002))
(assert (= temp1082_27 temp1082_26))
(assert (= temp1082_28 (select ARGNAME_padding_NAMEEND_VAL temp1082_27)))
(assert (= temp1082_29 #x0000000000000003))
(assert (= temp1082_30 temp1082_29))
(assert (= temp1082_31 (select ARGNAME_padding_NAMEEND_VAL temp1082_30)))
(assert (= temp1082_32 #x0000000000000004))
(assert (= temp1082_33 temp1082_32))
(assert (= temp1082_34 (select ARGNAME_padding_NAMEEND_VAL temp1082_33)))
(assert (= temp1082_35 #x0000000000000005))
(assert (= temp1082_36 temp1082_35))
(assert (= temp1082_37 (select ARGNAME_padding_NAMEEND_VAL temp1082_36)))
(assert (= temp1082_38 #x0000000000000000))
(assert (= temp1082_39 #x0000000000000000))
(assert (= temp1082_40 temp1082_39))
(assert (= temp1082_41 (select ARGNAME_padding_NAMEEND_VAL temp1082_40)))
(assert (= temp1082_42 #x0000000000000000))
(assert (= temp1082_43 #x0000000000000001))
(assert (= temp1082_44 temp1082_43))
(assert (= temp1082_45 (select ARGNAME_padding_NAMEEND_VAL temp1082_44)))
(assert (= temp1082_46 #x0000000000000000))
(assert (= temp1082_47 #x0000000000000002))
(assert (= temp1082_48 temp1082_47))
(assert (= temp1082_49 (select ARGNAME_padding_NAMEEND_VAL temp1082_48)))
(assert (= temp1082_50 #x0000000000000000))
(assert (= temp1082_51 #x0000000000000003))
(assert (= temp1082_52 temp1082_51))
(assert (= temp1082_53 (select ARGNAME_padding_NAMEEND_VAL temp1082_52)))
(assert (= temp1082_54 #x0000000000000000))
(assert (= temp1082_55 #x0000000000000004))
(assert (= temp1082_56 temp1082_55))
(assert (= temp1082_57 (select ARGNAME_padding_NAMEEND_VAL temp1082_56)))
(assert (= temp1082_58 #x0000000000000000))
(assert (= temp1082_59 #x0000000000000005))
(assert (= temp1082_60 temp1082_59))
(assert (= temp1082_61 (select ARGNAME_padding_NAMEEND_VAL temp1082_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1082_41 temp1082_38)
             (bvslt temp1082_45 temp1082_42)
             (bvslt temp1082_49 temp1082_46)
             (bvslt temp1082_53 temp1082_50)
             (bvslt temp1082_57 temp1082_54)
             (bvslt temp1082_61 temp1082_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_62 #x0000000000000000))
(assert (= var1716002 temp1082_62))
(assert (= temp1082_63 #x0000000000000000))
(assert (= temp1082_64 temp1082_63))
(assert (= temp1082_65 (select ARGNAME_stride_NAMEEND_VAL temp1082_64)))
(assert (= temp1082_66 #x0000000000000001))
(assert (= temp1082_67 temp1082_66))
(assert (= temp1082_68 (select ARGNAME_stride_NAMEEND_VAL temp1082_67)))
(assert (= temp1082_69 #x0000000000000002))
(assert (= temp1082_70 temp1082_69))
(assert (= temp1082_71 (select ARGNAME_stride_NAMEEND_VAL temp1082_70)))
(assert (= temp1082_72 #x0000000000000003))
(assert (= temp1082_73 temp1082_72))
(assert (= temp1082_74 (select ARGNAME_stride_NAMEEND_VAL temp1082_73)))
(assert (= temp1082_75 #x0000000000000004))
(assert (= temp1082_76 temp1082_75))
(assert (= temp1082_77 (select ARGNAME_stride_NAMEEND_VAL temp1082_76)))
(assert (= temp1082_78 #x0000000000000005))
(assert (= temp1082_79 temp1082_78))
(assert (= temp1082_80 (select ARGNAME_stride_NAMEEND_VAL temp1082_79)))
(assert (= temp1082_81 #x0000000000000000))
(assert (= temp1082_82 #x0000000000000000))
(assert (= temp1082_83 temp1082_82))
(assert (= temp1082_84 (select ARGNAME_stride_NAMEEND_VAL temp1082_83)))
(assert (= temp1082_85 #x0000000000000000))
(assert (= temp1082_86 #x0000000000000001))
(assert (= temp1082_87 temp1082_86))
(assert (= temp1082_88 (select ARGNAME_stride_NAMEEND_VAL temp1082_87)))
(assert (= temp1082_89 #x0000000000000000))
(assert (= temp1082_90 #x0000000000000002))
(assert (= temp1082_91 temp1082_90))
(assert (= temp1082_92 (select ARGNAME_stride_NAMEEND_VAL temp1082_91)))
(assert (= temp1082_93 #x0000000000000000))
(assert (= temp1082_94 #x0000000000000003))
(assert (= temp1082_95 temp1082_94))
(assert (= temp1082_96 (select ARGNAME_stride_NAMEEND_VAL temp1082_95)))
(assert (= temp1082_97 #x0000000000000000))
(assert (= temp1082_98 #x0000000000000004))
(assert (= temp1082_99 temp1082_98))
(assert (= temp1082_100 (select ARGNAME_stride_NAMEEND_VAL temp1082_99)))
(assert (= temp1082_101 #x0000000000000000))
(assert (= temp1082_102 #x0000000000000005))
(assert (= temp1082_103 temp1082_102))
(assert (= temp1082_104 (select ARGNAME_stride_NAMEEND_VAL temp1082_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1082_84 temp1082_81)
             (bvsle temp1082_88 temp1082_85)
             (bvsle temp1082_92 temp1082_89)
             (bvsle temp1082_96 temp1082_93)
             (bvsle temp1082_100 temp1082_97)
             (bvsle temp1082_104 temp1082_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_105 #x0000000000000000))
(assert (= var1716023 temp1082_105))
(assert (= temp1082_106 #x0000000000000000))
(assert (= var1704114 temp1082_106))
(assert (= temp1082_107 #x0000000000000000))
(assert (= temp1082_108 temp1082_107))
(assert (= temp1082_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_108)))
(assert (= temp1082_110 #x0000000000000001))
(assert (= temp1082_111 temp1082_110))
(assert (= temp1082_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_111)))
(assert (= temp1082_113 #x0000000000000002))
(assert (= temp1082_114 temp1082_113))
(assert (= temp1082_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_114)))
(assert (= temp1082_116 #x0000000000000003))
(assert (= temp1082_117 temp1082_116))
(assert (= temp1082_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_117)))
(assert (= temp1082_119 #x0000000000000004))
(assert (= temp1082_120 temp1082_119))
(assert (= temp1082_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_120)))
(assert (= temp1082_122 #x0000000000000005))
(assert (= temp1082_123 temp1082_122))
(assert (= temp1082_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_123)))
(assert (= temp1082_126 var1704114))
(assert (= temp1082_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_126)))
(assert (= temp1082_125 temp1082_127))
(assert (= var1716068
   (ite (bvslt temp1082_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_128 #x0000000000000000))
(assert (= var1716068 temp1082_128))
(assert (= temp1082_129 #x0000000000000000))
(assert (= var1704114 temp1082_129))
(assert (= temp1082_131 var1704114))
(assert (= temp1082_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_131)))
(assert (= temp1082_130 temp1082_132))
(assert (= var1716090 (bvsmod temp1082_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1082_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1082_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1082_134 #x0000000000000001))
(assert (= var1716091 temp1082_134))
(assert (= var1716110 var1716000))
(assert (= temp1082_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1082_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1082_136 #x0000000000000001))
(assert (= var1716111 temp1082_136))
(assert (= temp1082_137 #x0000000000000001))
(assert (= var1705002 temp1082_137))
(assert (= temp1082_139 var1705002))
(assert (= temp1082_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_139)))
(assert (= temp1082_138 temp1082_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1082_138)))
(assert (= temp1082_141 #x0000000000000000))
(assert (= var1704114 temp1082_141))
(assert (= temp1082_143 var1704114))
(assert (= temp1082_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1082_143)))
(assert (= temp1082_142 temp1082_144))
(assert (= temp1082_145 #x0000000000000002))
(assert (= var1979241 temp1082_145))
(assert (= temp1082_146 #x0000000000000001))
(assert (= var1716281 temp1082_146))
(assert (= temp1082_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1082_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_148 #x0000000000000001))
(assert (= var997490 temp1082_148))
(assert (= temp1082_149 #x0000000000000001))
(assert (= var997620 temp1082_149))
(assert (= var3486185 var997620))
(assert (= temp1082_150 #x0000000000000000))
(assert (= var3686207 temp1082_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp1082_151 #x0000000000000002))
(assert (= var3815043 temp1082_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var4206992 var997633))
(assert (= temp1082_152 #x0000000000000001))
(assert (= var998846
   (ite (= ARGNAME_groups_NAMEEND temp1082_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_153 #x0000000000000000))
(assert (= var998846 temp1082_153))
(assert (= temp1082_154 #x0000000000000002))
(assert (= var4535939 temp1082_154))
(assert (= temp1082_155 #x0000000000000001))
(assert (= var997490 temp1082_155))
(model-add temp1082_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp1082_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp1082_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1082_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp1082_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1082_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






