(declare-fun temp679_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp679_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp679_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp679_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp679_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp679_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp679_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp679_8 () (_ BitVec 64))
(declare-fun temp679_10 () (_ BitVec 64))
(declare-fun temp679_9 () (_ BitVec 64))
(declare-fun temp679_12 () (_ BitVec 64))
(declare-fun temp679_11 () (_ BitVec 64))
(declare-fun temp679_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp679_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp679_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp679_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp679_17 () (_ BitVec 64))
(declare-fun temp679_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp679_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp679_20 () (_ BitVec 64))
(declare-fun temp679_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp679_22 () (_ BitVec 64))
(declare-fun temp679_23 () (_ BitVec 64))
(declare-fun temp679_24 () (_ BitVec 64))
(declare-fun temp679_25 () (_ BitVec 64))
(declare-fun temp679_26 () (_ BitVec 64))
(declare-fun temp679_27 () (_ BitVec 64))
(declare-fun temp679_28 () (_ BitVec 64))
(declare-fun temp679_29 () (_ BitVec 64))
(declare-fun temp679_30 () (_ BitVec 64))
(declare-fun temp679_31 () (_ BitVec 64))
(declare-fun temp679_32 () (_ BitVec 64))
(declare-fun temp679_33 () (_ BitVec 64))
(declare-fun temp679_34 () (_ BitVec 64))
(declare-fun temp679_35 () (_ BitVec 64))
(declare-fun temp679_36 () (_ BitVec 64))
(declare-fun temp679_37 () (_ BitVec 64))
(declare-fun temp679_38 () (_ BitVec 64))
(declare-fun temp679_39 () (_ BitVec 64))
(declare-fun temp679_40 () (_ BitVec 64))
(declare-fun temp679_41 () (_ BitVec 64))
(declare-fun temp679_42 () (_ BitVec 64))
(declare-fun temp679_43 () (_ BitVec 64))
(declare-fun temp679_44 () (_ BitVec 64))
(declare-fun temp679_45 () (_ BitVec 64))
(declare-fun temp679_46 () (_ BitVec 64))
(declare-fun temp679_47 () (_ BitVec 64))
(declare-fun temp679_48 () (_ BitVec 64))
(declare-fun temp679_49 () (_ BitVec 64))
(declare-fun temp679_50 () (_ BitVec 64))
(declare-fun temp679_51 () (_ BitVec 64))
(declare-fun temp679_52 () (_ BitVec 64))
(declare-fun temp679_53 () (_ BitVec 64))
(declare-fun temp679_54 () (_ BitVec 64))
(declare-fun temp679_55 () (_ BitVec 64))
(declare-fun temp679_56 () (_ BitVec 64))
(declare-fun temp679_57 () (_ BitVec 64))
(declare-fun temp679_58 () (_ BitVec 64))
(declare-fun temp679_59 () (_ BitVec 64))
(declare-fun temp679_60 () (_ BitVec 64))
(declare-fun temp679_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp679_62 () (_ BitVec 64))
(declare-fun temp679_63 () (_ BitVec 64))
(declare-fun temp679_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp679_65 () (_ BitVec 64))
(declare-fun temp679_66 () (_ BitVec 64))
(declare-fun temp679_67 () (_ BitVec 64))
(declare-fun temp679_68 () (_ BitVec 64))
(declare-fun temp679_69 () (_ BitVec 64))
(declare-fun temp679_70 () (_ BitVec 64))
(declare-fun temp679_71 () (_ BitVec 64))
(declare-fun temp679_72 () (_ BitVec 64))
(declare-fun temp679_73 () (_ BitVec 64))
(declare-fun temp679_74 () (_ BitVec 64))
(declare-fun temp679_75 () (_ BitVec 64))
(declare-fun temp679_76 () (_ BitVec 64))
(declare-fun temp679_77 () (_ BitVec 64))
(declare-fun temp679_78 () (_ BitVec 64))
(declare-fun temp679_79 () (_ BitVec 64))
(declare-fun temp679_80 () (_ BitVec 64))
(declare-fun temp679_81 () (_ BitVec 64))
(declare-fun temp679_82 () (_ BitVec 64))
(declare-fun temp679_83 () (_ BitVec 64))
(declare-fun temp679_84 () (_ BitVec 64))
(declare-fun temp679_85 () (_ BitVec 64))
(declare-fun temp679_86 () (_ BitVec 64))
(declare-fun temp679_87 () (_ BitVec 64))
(declare-fun temp679_88 () (_ BitVec 64))
(declare-fun temp679_89 () (_ BitVec 64))
(declare-fun temp679_90 () (_ BitVec 64))
(declare-fun temp679_91 () (_ BitVec 64))
(declare-fun temp679_92 () (_ BitVec 64))
(declare-fun temp679_93 () (_ BitVec 64))
(declare-fun temp679_94 () (_ BitVec 64))
(declare-fun temp679_95 () (_ BitVec 64))
(declare-fun temp679_96 () (_ BitVec 64))
(declare-fun temp679_97 () (_ BitVec 64))
(declare-fun temp679_98 () (_ BitVec 64))
(declare-fun temp679_99 () (_ BitVec 64))
(declare-fun temp679_100 () (_ BitVec 64))
(declare-fun temp679_101 () (_ BitVec 64))
(declare-fun temp679_102 () (_ BitVec 64))
(declare-fun temp679_103 () (_ BitVec 64))
(declare-fun temp679_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp679_105 () (_ BitVec 64))
(declare-fun temp679_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp679_107 () (_ BitVec 64))
(declare-fun temp679_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp679_109 () (_ BitVec 64))
(declare-fun temp679_110 () (_ BitVec 64))
(declare-fun temp679_111 () (_ BitVec 64))
(declare-fun temp679_112 () (_ BitVec 64))
(declare-fun temp679_113 () (_ BitVec 64))
(declare-fun temp679_114 () (_ BitVec 64))
(declare-fun temp679_115 () (_ BitVec 64))
(declare-fun temp679_116 () (_ BitVec 64))
(declare-fun temp679_117 () (_ BitVec 64))
(declare-fun temp679_118 () (_ BitVec 64))
(declare-fun temp679_119 () (_ BitVec 64))
(declare-fun temp679_120 () (_ BitVec 64))
(declare-fun temp679_121 () (_ BitVec 64))
(declare-fun temp679_122 () (_ BitVec 64))
(declare-fun temp679_123 () (_ BitVec 64))
(declare-fun temp679_124 () (_ BitVec 64))
(declare-fun temp679_126 () (_ BitVec 64))
(declare-fun temp679_127 () (_ BitVec 64))
(declare-fun temp679_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp679_128 () (_ BitVec 64))
(declare-fun temp679_129 () (_ BitVec 64))
(declare-fun temp679_131 () (_ BitVec 64))
(declare-fun temp679_132 () (_ BitVec 64))
(declare-fun temp679_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp679_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp679_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp679_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp679_136 () (_ BitVec 64))
(declare-fun temp679_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp679_139 () (_ BitVec 64))
(declare-fun temp679_140 () (_ BitVec 64))
(declare-fun temp679_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp679_141 () (_ BitVec 64))
(declare-fun temp679_143 () (_ BitVec 64))
(declare-fun temp679_144 () (_ BitVec 64))
(declare-fun temp679_142 () (_ BitVec 64))
(declare-fun temp679_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp679_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp679_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp679_148 () (_ BitVec 64))
(declare-fun temp679_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp679_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp679_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp679_153 () (_ BitVec 64))
(declare-fun temp679_152 () (_ BitVec 64))
(declare-fun temp679_155 () (_ BitVec 64))
(declare-fun temp679_154 () (_ BitVec 64))
(declare-fun temp679_156 () (_ BitVec 64))
(assert (= temp679_1 #x0000000000000003))
(assert (= var465453 temp679_1))
(assert (= temp679_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp679_2)))
(assert (= temp679_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp679_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp679_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp679_4)))
(assert (= temp679_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp679_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp679_6 #x0000000000000000))
(assert (= var465488 temp679_6))
(assert (= temp679_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp679_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp679_8 #x0000000000000001))
(assert (= var465522 temp679_8))
(assert (= temp679_10 #x0000000000000000))
(assert (= temp679_9 temp679_10))
(assert (= temp679_12 #x0000000000000003))
(assert (= temp679_11 temp679_12))
(assert (= temp679_13 #x0000000000000000))
(assert (= var863614 temp679_13))
(assert (= temp679_14 #x0000000000000001))
(assert (= var863635 temp679_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp679_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp679_15)))
(assert (= temp679_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp679_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp679_17 #x0000000000000000))
(assert (= var997373 temp679_17))
(assert (= temp679_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp679_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp679_19 #x0000000000000000))
(assert (= var997418 temp679_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp679_20 #x0000000000000000))
(assert (= temp679_21 temp679_20))
(assert (= temp679_22 (select ARGNAME_padding_NAMEEND_VAL temp679_21)))
(assert (= temp679_23 #x0000000000000001))
(assert (= temp679_24 temp679_23))
(assert (= temp679_25 (select ARGNAME_padding_NAMEEND_VAL temp679_24)))
(assert (= temp679_26 #x0000000000000002))
(assert (= temp679_27 temp679_26))
(assert (= temp679_28 (select ARGNAME_padding_NAMEEND_VAL temp679_27)))
(assert (= temp679_29 #x0000000000000003))
(assert (= temp679_30 temp679_29))
(assert (= temp679_31 (select ARGNAME_padding_NAMEEND_VAL temp679_30)))
(assert (= temp679_32 #x0000000000000004))
(assert (= temp679_33 temp679_32))
(assert (= temp679_34 (select ARGNAME_padding_NAMEEND_VAL temp679_33)))
(assert (= temp679_35 #x0000000000000005))
(assert (= temp679_36 temp679_35))
(assert (= temp679_37 (select ARGNAME_padding_NAMEEND_VAL temp679_36)))
(assert (= temp679_38 #x0000000000000000))
(assert (= temp679_39 #x0000000000000000))
(assert (= temp679_40 temp679_39))
(assert (= temp679_41 (select ARGNAME_padding_NAMEEND_VAL temp679_40)))
(assert (= temp679_42 #x0000000000000000))
(assert (= temp679_43 #x0000000000000001))
(assert (= temp679_44 temp679_43))
(assert (= temp679_45 (select ARGNAME_padding_NAMEEND_VAL temp679_44)))
(assert (= temp679_46 #x0000000000000000))
(assert (= temp679_47 #x0000000000000002))
(assert (= temp679_48 temp679_47))
(assert (= temp679_49 (select ARGNAME_padding_NAMEEND_VAL temp679_48)))
(assert (= temp679_50 #x0000000000000000))
(assert (= temp679_51 #x0000000000000003))
(assert (= temp679_52 temp679_51))
(assert (= temp679_53 (select ARGNAME_padding_NAMEEND_VAL temp679_52)))
(assert (= temp679_54 #x0000000000000000))
(assert (= temp679_55 #x0000000000000004))
(assert (= temp679_56 temp679_55))
(assert (= temp679_57 (select ARGNAME_padding_NAMEEND_VAL temp679_56)))
(assert (= temp679_58 #x0000000000000000))
(assert (= temp679_59 #x0000000000000005))
(assert (= temp679_60 temp679_59))
(assert (= temp679_61 (select ARGNAME_padding_NAMEEND_VAL temp679_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp679_41 temp679_38)
             (bvslt temp679_45 temp679_42)
             (bvslt temp679_49 temp679_46)
             (bvslt temp679_53 temp679_50)
             (bvslt temp679_57 temp679_54)
             (bvslt temp679_61 temp679_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp679_62 #x0000000000000000))
(assert (= var1716002 temp679_62))
(assert (= temp679_63 #x0000000000000000))
(assert (= temp679_64 temp679_63))
(assert (= temp679_65 (select ARGNAME_stride_NAMEEND_VAL temp679_64)))
(assert (= temp679_66 #x0000000000000001))
(assert (= temp679_67 temp679_66))
(assert (= temp679_68 (select ARGNAME_stride_NAMEEND_VAL temp679_67)))
(assert (= temp679_69 #x0000000000000002))
(assert (= temp679_70 temp679_69))
(assert (= temp679_71 (select ARGNAME_stride_NAMEEND_VAL temp679_70)))
(assert (= temp679_72 #x0000000000000003))
(assert (= temp679_73 temp679_72))
(assert (= temp679_74 (select ARGNAME_stride_NAMEEND_VAL temp679_73)))
(assert (= temp679_75 #x0000000000000004))
(assert (= temp679_76 temp679_75))
(assert (= temp679_77 (select ARGNAME_stride_NAMEEND_VAL temp679_76)))
(assert (= temp679_78 #x0000000000000005))
(assert (= temp679_79 temp679_78))
(assert (= temp679_80 (select ARGNAME_stride_NAMEEND_VAL temp679_79)))
(assert (= temp679_81 #x0000000000000000))
(assert (= temp679_82 #x0000000000000000))
(assert (= temp679_83 temp679_82))
(assert (= temp679_84 (select ARGNAME_stride_NAMEEND_VAL temp679_83)))
(assert (= temp679_85 #x0000000000000000))
(assert (= temp679_86 #x0000000000000001))
(assert (= temp679_87 temp679_86))
(assert (= temp679_88 (select ARGNAME_stride_NAMEEND_VAL temp679_87)))
(assert (= temp679_89 #x0000000000000000))
(assert (= temp679_90 #x0000000000000002))
(assert (= temp679_91 temp679_90))
(assert (= temp679_92 (select ARGNAME_stride_NAMEEND_VAL temp679_91)))
(assert (= temp679_93 #x0000000000000000))
(assert (= temp679_94 #x0000000000000003))
(assert (= temp679_95 temp679_94))
(assert (= temp679_96 (select ARGNAME_stride_NAMEEND_VAL temp679_95)))
(assert (= temp679_97 #x0000000000000000))
(assert (= temp679_98 #x0000000000000004))
(assert (= temp679_99 temp679_98))
(assert (= temp679_100 (select ARGNAME_stride_NAMEEND_VAL temp679_99)))
(assert (= temp679_101 #x0000000000000000))
(assert (= temp679_102 #x0000000000000005))
(assert (= temp679_103 temp679_102))
(assert (= temp679_104 (select ARGNAME_stride_NAMEEND_VAL temp679_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp679_84 temp679_81)
             (bvsle temp679_88 temp679_85)
             (bvsle temp679_92 temp679_89)
             (bvsle temp679_96 temp679_93)
             (bvsle temp679_100 temp679_97)
             (bvsle temp679_104 temp679_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp679_105 #x0000000000000000))
(assert (= var1716023 temp679_105))
(assert (= temp679_106 #x0000000000000000))
(assert (= var1704114 temp679_106))
(assert (= temp679_107 #x0000000000000000))
(assert (= temp679_108 temp679_107))
(assert (= temp679_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_108)))
(assert (= temp679_110 #x0000000000000001))
(assert (= temp679_111 temp679_110))
(assert (= temp679_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_111)))
(assert (= temp679_113 #x0000000000000002))
(assert (= temp679_114 temp679_113))
(assert (= temp679_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_114)))
(assert (= temp679_116 #x0000000000000003))
(assert (= temp679_117 temp679_116))
(assert (= temp679_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_117)))
(assert (= temp679_119 #x0000000000000004))
(assert (= temp679_120 temp679_119))
(assert (= temp679_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_120)))
(assert (= temp679_122 #x0000000000000005))
(assert (= temp679_123 temp679_122))
(assert (= temp679_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_123)))
(assert (= temp679_126 var1704114))
(assert (= temp679_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_126)))
(assert (= temp679_125 temp679_127))
(assert (= var1716068
   (ite (bvslt temp679_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp679_128 #x0000000000000000))
(assert (= var1716068 temp679_128))
(assert (= temp679_129 #x0000000000000000))
(assert (= var1704114 temp679_129))
(assert (= temp679_131 var1704114))
(assert (= temp679_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_131)))
(assert (= temp679_130 temp679_132))
(assert (= var1716090 (bvsmod temp679_130 ARGNAME_groups_NAMEEND)))
(assert (= temp679_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp679_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp679_134 #x0000000000000001))
(assert (= var1716091 temp679_134))
(assert (= var1716110 var1716000))
(assert (= temp679_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp679_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp679_136 #x0000000000000001))
(assert (= var1716111 temp679_136))
(assert (= temp679_137 #x0000000000000001))
(assert (= var1705002 temp679_137))
(assert (= temp679_139 var1705002))
(assert (= temp679_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_139)))
(assert (= temp679_138 temp679_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp679_138)))
(assert (= temp679_141 #x0000000000000000))
(assert (= var1704114 temp679_141))
(assert (= temp679_143 var1704114))
(assert (= temp679_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp679_143)))
(assert (= temp679_142 temp679_144))
(assert (= temp679_145 #x0000000000000002))
(assert (= var1979241 temp679_145))
(assert (= temp679_146 #x0000000000000001))
(assert (= var1716281 temp679_146))
(assert (= temp679_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp679_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp679_148 #x0000000000000001))
(assert (= var997490 temp679_148))
(assert (= temp679_149 #x0000000000000001))
(assert (= var997620 temp679_149))
(assert (= var3486185 var997620))
(assert (= temp679_150 #x0000000000000000))
(assert (= var3686207 temp679_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp679_151 #x0000000000000002))
(assert (= var3815043 temp679_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp679_153 #xffffffffffffffff))
(assert (= temp679_152 temp679_153))
(assert (= temp679_155 #xffffffffffffffff))
(assert (= temp679_154 temp679_155))
(assert (= temp679_156 #x0000000000000001))
(assert (= var997490 temp679_156))
(model-add temp679_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp679_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp679_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp679_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp679_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp679_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






