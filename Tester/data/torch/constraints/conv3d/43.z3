(declare-fun temp55_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp55_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp55_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp55_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp55_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp55_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp55_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp55_8 () (_ BitVec 64))
(declare-fun temp55_10 () (_ BitVec 64))
(declare-fun temp55_9 () (_ BitVec 64))
(declare-fun temp55_12 () (_ BitVec 64))
(declare-fun temp55_11 () (_ BitVec 64))
(declare-fun temp55_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp55_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp55_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp55_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp55_17 () (_ BitVec 64))
(declare-fun temp55_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp55_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp55_20 () (_ BitVec 64))
(declare-fun temp55_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp55_22 () (_ BitVec 64))
(declare-fun temp55_23 () (_ BitVec 64))
(declare-fun temp55_24 () (_ BitVec 64))
(declare-fun temp55_25 () (_ BitVec 64))
(declare-fun temp55_26 () (_ BitVec 64))
(declare-fun temp55_27 () (_ BitVec 64))
(declare-fun temp55_28 () (_ BitVec 64))
(declare-fun temp55_29 () (_ BitVec 64))
(declare-fun temp55_30 () (_ BitVec 64))
(declare-fun temp55_31 () (_ BitVec 64))
(declare-fun temp55_32 () (_ BitVec 64))
(declare-fun temp55_33 () (_ BitVec 64))
(declare-fun temp55_34 () (_ BitVec 64))
(declare-fun temp55_35 () (_ BitVec 64))
(declare-fun temp55_36 () (_ BitVec 64))
(declare-fun temp55_37 () (_ BitVec 64))
(declare-fun temp55_38 () (_ BitVec 64))
(declare-fun temp55_39 () (_ BitVec 64))
(declare-fun temp55_40 () (_ BitVec 64))
(declare-fun temp55_41 () (_ BitVec 64))
(declare-fun temp55_42 () (_ BitVec 64))
(declare-fun temp55_43 () (_ BitVec 64))
(declare-fun temp55_44 () (_ BitVec 64))
(declare-fun temp55_45 () (_ BitVec 64))
(declare-fun temp55_46 () (_ BitVec 64))
(declare-fun temp55_47 () (_ BitVec 64))
(declare-fun temp55_48 () (_ BitVec 64))
(declare-fun temp55_49 () (_ BitVec 64))
(declare-fun temp55_50 () (_ BitVec 64))
(declare-fun temp55_51 () (_ BitVec 64))
(declare-fun temp55_52 () (_ BitVec 64))
(declare-fun temp55_53 () (_ BitVec 64))
(declare-fun temp55_54 () (_ BitVec 64))
(declare-fun temp55_55 () (_ BitVec 64))
(declare-fun temp55_56 () (_ BitVec 64))
(declare-fun temp55_57 () (_ BitVec 64))
(declare-fun temp55_58 () (_ BitVec 64))
(declare-fun temp55_59 () (_ BitVec 64))
(declare-fun temp55_60 () (_ BitVec 64))
(declare-fun temp55_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp55_62 () (_ BitVec 64))
(declare-fun temp55_63 () (_ BitVec 64))
(declare-fun temp55_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp55_65 () (_ BitVec 64))
(declare-fun temp55_66 () (_ BitVec 64))
(declare-fun temp55_67 () (_ BitVec 64))
(declare-fun temp55_68 () (_ BitVec 64))
(declare-fun temp55_69 () (_ BitVec 64))
(declare-fun temp55_70 () (_ BitVec 64))
(declare-fun temp55_71 () (_ BitVec 64))
(declare-fun temp55_72 () (_ BitVec 64))
(declare-fun temp55_73 () (_ BitVec 64))
(declare-fun temp55_74 () (_ BitVec 64))
(declare-fun temp55_75 () (_ BitVec 64))
(declare-fun temp55_76 () (_ BitVec 64))
(declare-fun temp55_77 () (_ BitVec 64))
(declare-fun temp55_78 () (_ BitVec 64))
(declare-fun temp55_79 () (_ BitVec 64))
(declare-fun temp55_80 () (_ BitVec 64))
(declare-fun temp55_81 () (_ BitVec 64))
(declare-fun temp55_82 () (_ BitVec 64))
(declare-fun temp55_83 () (_ BitVec 64))
(declare-fun temp55_84 () (_ BitVec 64))
(declare-fun temp55_85 () (_ BitVec 64))
(declare-fun temp55_86 () (_ BitVec 64))
(declare-fun temp55_87 () (_ BitVec 64))
(declare-fun temp55_88 () (_ BitVec 64))
(declare-fun temp55_89 () (_ BitVec 64))
(declare-fun temp55_90 () (_ BitVec 64))
(declare-fun temp55_91 () (_ BitVec 64))
(declare-fun temp55_92 () (_ BitVec 64))
(declare-fun temp55_93 () (_ BitVec 64))
(declare-fun temp55_94 () (_ BitVec 64))
(declare-fun temp55_95 () (_ BitVec 64))
(declare-fun temp55_96 () (_ BitVec 64))
(declare-fun temp55_97 () (_ BitVec 64))
(declare-fun temp55_98 () (_ BitVec 64))
(declare-fun temp55_99 () (_ BitVec 64))
(declare-fun temp55_100 () (_ BitVec 64))
(declare-fun temp55_101 () (_ BitVec 64))
(declare-fun temp55_102 () (_ BitVec 64))
(declare-fun temp55_103 () (_ BitVec 64))
(declare-fun temp55_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp55_105 () (_ BitVec 64))
(declare-fun temp55_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp55_107 () (_ BitVec 64))
(declare-fun temp55_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp55_109 () (_ BitVec 64))
(declare-fun temp55_110 () (_ BitVec 64))
(declare-fun temp55_111 () (_ BitVec 64))
(declare-fun temp55_112 () (_ BitVec 64))
(declare-fun temp55_113 () (_ BitVec 64))
(declare-fun temp55_114 () (_ BitVec 64))
(declare-fun temp55_115 () (_ BitVec 64))
(declare-fun temp55_116 () (_ BitVec 64))
(declare-fun temp55_117 () (_ BitVec 64))
(declare-fun temp55_118 () (_ BitVec 64))
(declare-fun temp55_119 () (_ BitVec 64))
(declare-fun temp55_120 () (_ BitVec 64))
(declare-fun temp55_121 () (_ BitVec 64))
(declare-fun temp55_122 () (_ BitVec 64))
(declare-fun temp55_123 () (_ BitVec 64))
(declare-fun temp55_124 () (_ BitVec 64))
(declare-fun temp55_126 () (_ BitVec 64))
(declare-fun temp55_127 () (_ BitVec 64))
(declare-fun temp55_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp55_128 () (_ BitVec 64))
(declare-fun temp55_129 () (_ BitVec 64))
(declare-fun temp55_131 () (_ BitVec 64))
(declare-fun temp55_132 () (_ BitVec 64))
(declare-fun temp55_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp55_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp55_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp55_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp55_136 () (_ BitVec 64))
(declare-fun temp55_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp55_139 () (_ BitVec 64))
(declare-fun temp55_140 () (_ BitVec 64))
(declare-fun temp55_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp55_141 () (_ BitVec 64))
(declare-fun temp55_143 () (_ BitVec 64))
(declare-fun temp55_144 () (_ BitVec 64))
(declare-fun temp55_142 () (_ BitVec 64))
(declare-fun temp55_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp55_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp55_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp55_148 () (_ BitVec 64))
(declare-fun temp55_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp55_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp55_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp55_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var4996941 () (_ BitVec 64))
(declare-fun temp55_154 () (_ BitVec 64))
(declare-fun temp55_153 () (_ BitVec 64))
(declare-fun temp55_155 () (_ BitVec 64))
(declare-fun var5574122 () (_ BitVec 64))
(declare-fun temp55_157 () (_ BitVec 64))
(declare-fun temp55_156 () (_ BitVec 64))
(declare-fun temp55_158 () (_ BitVec 64))
(assert (= temp55_1 #x0000000000000003))
(assert (= var465453 temp55_1))
(assert (= temp55_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp55_2)))
(assert (= temp55_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp55_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp55_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp55_4)))
(assert (= temp55_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp55_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp55_6 #x0000000000000000))
(assert (= var465488 temp55_6))
(assert (= temp55_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp55_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp55_8 #x0000000000000001))
(assert (= var465522 temp55_8))
(assert (= temp55_10 #x0000000000000000))
(assert (= temp55_9 temp55_10))
(assert (= temp55_12 #x0000000000000003))
(assert (= temp55_11 temp55_12))
(assert (= temp55_13 #x0000000000000000))
(assert (= var863614 temp55_13))
(assert (= temp55_14 #x0000000000000001))
(assert (= var863635 temp55_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp55_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp55_15)))
(assert (= temp55_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp55_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp55_17 #x0000000000000000))
(assert (= var997373 temp55_17))
(assert (= temp55_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp55_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp55_19 #x0000000000000000))
(assert (= var997418 temp55_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp55_20 #x0000000000000000))
(assert (= temp55_21 temp55_20))
(assert (= temp55_22 (select ARGNAME_padding_NAMEEND_VAL temp55_21)))
(assert (= temp55_23 #x0000000000000001))
(assert (= temp55_24 temp55_23))
(assert (= temp55_25 (select ARGNAME_padding_NAMEEND_VAL temp55_24)))
(assert (= temp55_26 #x0000000000000002))
(assert (= temp55_27 temp55_26))
(assert (= temp55_28 (select ARGNAME_padding_NAMEEND_VAL temp55_27)))
(assert (= temp55_29 #x0000000000000003))
(assert (= temp55_30 temp55_29))
(assert (= temp55_31 (select ARGNAME_padding_NAMEEND_VAL temp55_30)))
(assert (= temp55_32 #x0000000000000004))
(assert (= temp55_33 temp55_32))
(assert (= temp55_34 (select ARGNAME_padding_NAMEEND_VAL temp55_33)))
(assert (= temp55_35 #x0000000000000005))
(assert (= temp55_36 temp55_35))
(assert (= temp55_37 (select ARGNAME_padding_NAMEEND_VAL temp55_36)))
(assert (= temp55_38 #x0000000000000000))
(assert (= temp55_39 #x0000000000000000))
(assert (= temp55_40 temp55_39))
(assert (= temp55_41 (select ARGNAME_padding_NAMEEND_VAL temp55_40)))
(assert (= temp55_42 #x0000000000000000))
(assert (= temp55_43 #x0000000000000001))
(assert (= temp55_44 temp55_43))
(assert (= temp55_45 (select ARGNAME_padding_NAMEEND_VAL temp55_44)))
(assert (= temp55_46 #x0000000000000000))
(assert (= temp55_47 #x0000000000000002))
(assert (= temp55_48 temp55_47))
(assert (= temp55_49 (select ARGNAME_padding_NAMEEND_VAL temp55_48)))
(assert (= temp55_50 #x0000000000000000))
(assert (= temp55_51 #x0000000000000003))
(assert (= temp55_52 temp55_51))
(assert (= temp55_53 (select ARGNAME_padding_NAMEEND_VAL temp55_52)))
(assert (= temp55_54 #x0000000000000000))
(assert (= temp55_55 #x0000000000000004))
(assert (= temp55_56 temp55_55))
(assert (= temp55_57 (select ARGNAME_padding_NAMEEND_VAL temp55_56)))
(assert (= temp55_58 #x0000000000000000))
(assert (= temp55_59 #x0000000000000005))
(assert (= temp55_60 temp55_59))
(assert (= temp55_61 (select ARGNAME_padding_NAMEEND_VAL temp55_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp55_41 temp55_38)
             (bvslt temp55_45 temp55_42)
             (bvslt temp55_49 temp55_46)
             (bvslt temp55_53 temp55_50)
             (bvslt temp55_57 temp55_54)
             (bvslt temp55_61 temp55_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp55_62 #x0000000000000000))
(assert (= var1716002 temp55_62))
(assert (= temp55_63 #x0000000000000000))
(assert (= temp55_64 temp55_63))
(assert (= temp55_65 (select ARGNAME_stride_NAMEEND_VAL temp55_64)))
(assert (= temp55_66 #x0000000000000001))
(assert (= temp55_67 temp55_66))
(assert (= temp55_68 (select ARGNAME_stride_NAMEEND_VAL temp55_67)))
(assert (= temp55_69 #x0000000000000002))
(assert (= temp55_70 temp55_69))
(assert (= temp55_71 (select ARGNAME_stride_NAMEEND_VAL temp55_70)))
(assert (= temp55_72 #x0000000000000003))
(assert (= temp55_73 temp55_72))
(assert (= temp55_74 (select ARGNAME_stride_NAMEEND_VAL temp55_73)))
(assert (= temp55_75 #x0000000000000004))
(assert (= temp55_76 temp55_75))
(assert (= temp55_77 (select ARGNAME_stride_NAMEEND_VAL temp55_76)))
(assert (= temp55_78 #x0000000000000005))
(assert (= temp55_79 temp55_78))
(assert (= temp55_80 (select ARGNAME_stride_NAMEEND_VAL temp55_79)))
(assert (= temp55_81 #x0000000000000000))
(assert (= temp55_82 #x0000000000000000))
(assert (= temp55_83 temp55_82))
(assert (= temp55_84 (select ARGNAME_stride_NAMEEND_VAL temp55_83)))
(assert (= temp55_85 #x0000000000000000))
(assert (= temp55_86 #x0000000000000001))
(assert (= temp55_87 temp55_86))
(assert (= temp55_88 (select ARGNAME_stride_NAMEEND_VAL temp55_87)))
(assert (= temp55_89 #x0000000000000000))
(assert (= temp55_90 #x0000000000000002))
(assert (= temp55_91 temp55_90))
(assert (= temp55_92 (select ARGNAME_stride_NAMEEND_VAL temp55_91)))
(assert (= temp55_93 #x0000000000000000))
(assert (= temp55_94 #x0000000000000003))
(assert (= temp55_95 temp55_94))
(assert (= temp55_96 (select ARGNAME_stride_NAMEEND_VAL temp55_95)))
(assert (= temp55_97 #x0000000000000000))
(assert (= temp55_98 #x0000000000000004))
(assert (= temp55_99 temp55_98))
(assert (= temp55_100 (select ARGNAME_stride_NAMEEND_VAL temp55_99)))
(assert (= temp55_101 #x0000000000000000))
(assert (= temp55_102 #x0000000000000005))
(assert (= temp55_103 temp55_102))
(assert (= temp55_104 (select ARGNAME_stride_NAMEEND_VAL temp55_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp55_84 temp55_81)
             (bvsle temp55_88 temp55_85)
             (bvsle temp55_92 temp55_89)
             (bvsle temp55_96 temp55_93)
             (bvsle temp55_100 temp55_97)
             (bvsle temp55_104 temp55_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp55_105 #x0000000000000000))
(assert (= var1716023 temp55_105))
(assert (= temp55_106 #x0000000000000000))
(assert (= var1704114 temp55_106))
(assert (= temp55_107 #x0000000000000000))
(assert (= temp55_108 temp55_107))
(assert (= temp55_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_108)))
(assert (= temp55_110 #x0000000000000001))
(assert (= temp55_111 temp55_110))
(assert (= temp55_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_111)))
(assert (= temp55_113 #x0000000000000002))
(assert (= temp55_114 temp55_113))
(assert (= temp55_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_114)))
(assert (= temp55_116 #x0000000000000003))
(assert (= temp55_117 temp55_116))
(assert (= temp55_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_117)))
(assert (= temp55_119 #x0000000000000004))
(assert (= temp55_120 temp55_119))
(assert (= temp55_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_120)))
(assert (= temp55_122 #x0000000000000005))
(assert (= temp55_123 temp55_122))
(assert (= temp55_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_123)))
(assert (= temp55_126 var1704114))
(assert (= temp55_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_126)))
(assert (= temp55_125 temp55_127))
(assert (= var1716068
   (ite (bvslt temp55_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp55_128 #x0000000000000000))
(assert (= var1716068 temp55_128))
(assert (= temp55_129 #x0000000000000000))
(assert (= var1704114 temp55_129))
(assert (= temp55_131 var1704114))
(assert (= temp55_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_131)))
(assert (= temp55_130 temp55_132))
(assert (= var1716090 (bvsmod temp55_130 ARGNAME_groups_NAMEEND)))
(assert (= temp55_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp55_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp55_134 #x0000000000000001))
(assert (= var1716091 temp55_134))
(assert (= var1716110 var1716000))
(assert (= temp55_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp55_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp55_136 #x0000000000000001))
(assert (= var1716111 temp55_136))
(assert (= temp55_137 #x0000000000000001))
(assert (= var1705002 temp55_137))
(assert (= temp55_139 var1705002))
(assert (= temp55_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_139)))
(assert (= temp55_138 temp55_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp55_138)))
(assert (= temp55_141 #x0000000000000000))
(assert (= var1704114 temp55_141))
(assert (= temp55_143 var1704114))
(assert (= temp55_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp55_143)))
(assert (= temp55_142 temp55_144))
(assert (= temp55_145 #x0000000000000002))
(assert (= var1979241 temp55_145))
(assert (= temp55_146 #x0000000000000001))
(assert (= var1716281 temp55_146))
(assert (= temp55_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp55_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp55_148 #x0000000000000001))
(assert (= var997490 temp55_148))
(assert (= temp55_149 #x0000000000000001))
(assert (= var997620 temp55_149))
(assert (= var3486185 var997620))
(assert (= temp55_150 #x0000000000000000))
(assert (= var3686207 temp55_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp55_151 #x0000000000000002))
(assert (= var3815043 temp55_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var997820 var997345))
(assert (= temp55_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp55_152) #x0000000000000001 #x0000000000000000)))
(assert (= var4996941 var997821))
(assert (= temp55_154 #x0000000000000001))
(assert (= temp55_153 temp55_154))
(assert (= temp55_155 #x0000000000000001))
(assert (= var5574122 temp55_155))
(assert (= temp55_157 #xffffffffffffffff))
(assert (= temp55_156 temp55_157))
(assert (= temp55_158 #x0000000000000001))
(assert (= var997490 temp55_158))
(model-add temp55_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp55_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp55_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp55_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp55_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp55_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






