(declare-fun temp1234_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1234_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1234_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1234_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1234_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1234_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1234_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1234_8 () (_ BitVec 64))
(declare-fun temp1234_10 () (_ BitVec 64))
(declare-fun temp1234_9 () (_ BitVec 64))
(declare-fun temp1234_12 () (_ BitVec 64))
(declare-fun temp1234_11 () (_ BitVec 64))
(declare-fun temp1234_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1234_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1234_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1234_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1234_17 () (_ BitVec 64))
(declare-fun temp1234_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1234_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1234_20 () (_ BitVec 64))
(declare-fun temp1234_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1234_22 () (_ BitVec 64))
(declare-fun temp1234_23 () (_ BitVec 64))
(declare-fun temp1234_24 () (_ BitVec 64))
(declare-fun temp1234_25 () (_ BitVec 64))
(declare-fun temp1234_26 () (_ BitVec 64))
(declare-fun temp1234_27 () (_ BitVec 64))
(declare-fun temp1234_28 () (_ BitVec 64))
(declare-fun temp1234_29 () (_ BitVec 64))
(declare-fun temp1234_30 () (_ BitVec 64))
(declare-fun temp1234_31 () (_ BitVec 64))
(declare-fun temp1234_32 () (_ BitVec 64))
(declare-fun temp1234_33 () (_ BitVec 64))
(declare-fun temp1234_34 () (_ BitVec 64))
(declare-fun temp1234_35 () (_ BitVec 64))
(declare-fun temp1234_36 () (_ BitVec 64))
(declare-fun temp1234_37 () (_ BitVec 64))
(declare-fun temp1234_38 () (_ BitVec 64))
(declare-fun temp1234_39 () (_ BitVec 64))
(declare-fun temp1234_40 () (_ BitVec 64))
(declare-fun temp1234_41 () (_ BitVec 64))
(declare-fun temp1234_42 () (_ BitVec 64))
(declare-fun temp1234_43 () (_ BitVec 64))
(declare-fun temp1234_44 () (_ BitVec 64))
(declare-fun temp1234_45 () (_ BitVec 64))
(declare-fun temp1234_46 () (_ BitVec 64))
(declare-fun temp1234_47 () (_ BitVec 64))
(declare-fun temp1234_48 () (_ BitVec 64))
(declare-fun temp1234_49 () (_ BitVec 64))
(declare-fun temp1234_50 () (_ BitVec 64))
(declare-fun temp1234_51 () (_ BitVec 64))
(declare-fun temp1234_52 () (_ BitVec 64))
(declare-fun temp1234_53 () (_ BitVec 64))
(declare-fun temp1234_54 () (_ BitVec 64))
(declare-fun temp1234_55 () (_ BitVec 64))
(declare-fun temp1234_56 () (_ BitVec 64))
(declare-fun temp1234_57 () (_ BitVec 64))
(declare-fun temp1234_58 () (_ BitVec 64))
(declare-fun temp1234_59 () (_ BitVec 64))
(declare-fun temp1234_60 () (_ BitVec 64))
(declare-fun temp1234_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1234_62 () (_ BitVec 64))
(declare-fun temp1234_63 () (_ BitVec 64))
(declare-fun temp1234_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1234_65 () (_ BitVec 64))
(declare-fun temp1234_66 () (_ BitVec 64))
(declare-fun temp1234_67 () (_ BitVec 64))
(declare-fun temp1234_68 () (_ BitVec 64))
(declare-fun temp1234_69 () (_ BitVec 64))
(declare-fun temp1234_70 () (_ BitVec 64))
(declare-fun temp1234_71 () (_ BitVec 64))
(declare-fun temp1234_72 () (_ BitVec 64))
(declare-fun temp1234_73 () (_ BitVec 64))
(declare-fun temp1234_74 () (_ BitVec 64))
(declare-fun temp1234_75 () (_ BitVec 64))
(declare-fun temp1234_76 () (_ BitVec 64))
(declare-fun temp1234_77 () (_ BitVec 64))
(declare-fun temp1234_78 () (_ BitVec 64))
(declare-fun temp1234_79 () (_ BitVec 64))
(declare-fun temp1234_80 () (_ BitVec 64))
(declare-fun temp1234_81 () (_ BitVec 64))
(declare-fun temp1234_82 () (_ BitVec 64))
(declare-fun temp1234_83 () (_ BitVec 64))
(declare-fun temp1234_84 () (_ BitVec 64))
(declare-fun temp1234_85 () (_ BitVec 64))
(declare-fun temp1234_86 () (_ BitVec 64))
(declare-fun temp1234_87 () (_ BitVec 64))
(declare-fun temp1234_88 () (_ BitVec 64))
(declare-fun temp1234_89 () (_ BitVec 64))
(declare-fun temp1234_90 () (_ BitVec 64))
(declare-fun temp1234_91 () (_ BitVec 64))
(declare-fun temp1234_92 () (_ BitVec 64))
(declare-fun temp1234_93 () (_ BitVec 64))
(declare-fun temp1234_94 () (_ BitVec 64))
(declare-fun temp1234_95 () (_ BitVec 64))
(declare-fun temp1234_96 () (_ BitVec 64))
(declare-fun temp1234_97 () (_ BitVec 64))
(declare-fun temp1234_98 () (_ BitVec 64))
(declare-fun temp1234_99 () (_ BitVec 64))
(declare-fun temp1234_100 () (_ BitVec 64))
(declare-fun temp1234_101 () (_ BitVec 64))
(declare-fun temp1234_102 () (_ BitVec 64))
(declare-fun temp1234_103 () (_ BitVec 64))
(declare-fun temp1234_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1234_105 () (_ BitVec 64))
(declare-fun temp1234_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1234_107 () (_ BitVec 64))
(declare-fun temp1234_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1234_109 () (_ BitVec 64))
(declare-fun temp1234_110 () (_ BitVec 64))
(declare-fun temp1234_111 () (_ BitVec 64))
(declare-fun temp1234_112 () (_ BitVec 64))
(declare-fun temp1234_113 () (_ BitVec 64))
(declare-fun temp1234_114 () (_ BitVec 64))
(declare-fun temp1234_115 () (_ BitVec 64))
(declare-fun temp1234_116 () (_ BitVec 64))
(declare-fun temp1234_117 () (_ BitVec 64))
(declare-fun temp1234_118 () (_ BitVec 64))
(declare-fun temp1234_119 () (_ BitVec 64))
(declare-fun temp1234_120 () (_ BitVec 64))
(declare-fun temp1234_121 () (_ BitVec 64))
(declare-fun temp1234_122 () (_ BitVec 64))
(declare-fun temp1234_123 () (_ BitVec 64))
(declare-fun temp1234_124 () (_ BitVec 64))
(declare-fun temp1234_126 () (_ BitVec 64))
(declare-fun temp1234_127 () (_ BitVec 64))
(declare-fun temp1234_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1234_128 () (_ BitVec 64))
(declare-fun temp1234_129 () (_ BitVec 64))
(declare-fun temp1234_131 () (_ BitVec 64))
(declare-fun temp1234_132 () (_ BitVec 64))
(declare-fun temp1234_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1234_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1234_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1234_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1234_136 () (_ BitVec 64))
(declare-fun temp1234_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1234_139 () (_ BitVec 64))
(declare-fun temp1234_140 () (_ BitVec 64))
(declare-fun temp1234_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1234_141 () (_ BitVec 64))
(declare-fun temp1234_143 () (_ BitVec 64))
(declare-fun temp1234_144 () (_ BitVec 64))
(declare-fun temp1234_142 () (_ BitVec 64))
(declare-fun temp1234_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1234_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1234_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1234_148 () (_ BitVec 64))
(declare-fun temp1234_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1234_150 () (_ BitVec 64))
(declare-fun var3880579 () (_ BitVec 64))
(declare-fun var3880581 () (_ BitVec 64))
(declare-fun var3946124 () (_ BitVec 64))
(declare-fun var3946125 () (_ BitVec 64))
(declare-fun temp1234_152 () (_ BitVec 64))
(declare-fun temp1234_151 () (_ BitVec 64))
(declare-fun temp1234_154 () (_ BitVec 64))
(declare-fun temp1234_153 () (_ BitVec 64))
(declare-fun temp1234_155 () (_ BitVec 64))
(assert (= temp1234_1 #x0000000000000003))
(assert (= var465453 temp1234_1))
(assert (= temp1234_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1234_2)))
(assert (= temp1234_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1234_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1234_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1234_4)))
(assert (= temp1234_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1234_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1234_6 #x0000000000000000))
(assert (= var465488 temp1234_6))
(assert (= temp1234_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1234_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1234_8 #x0000000000000001))
(assert (= var465522 temp1234_8))
(assert (= temp1234_10 #x0000000000000000))
(assert (= temp1234_9 temp1234_10))
(assert (= temp1234_12 #x0000000000000003))
(assert (= temp1234_11 temp1234_12))
(assert (= temp1234_13 #x0000000000000000))
(assert (= var863614 temp1234_13))
(assert (= temp1234_14 #x0000000000000001))
(assert (= var863635 temp1234_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1234_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1234_15)))
(assert (= temp1234_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1234_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1234_17 #x0000000000000000))
(assert (= var997373 temp1234_17))
(assert (= temp1234_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1234_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1234_19 #x0000000000000000))
(assert (= var997418 temp1234_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1234_20 #x0000000000000000))
(assert (= temp1234_21 temp1234_20))
(assert (= temp1234_22 (select ARGNAME_padding_NAMEEND_VAL temp1234_21)))
(assert (= temp1234_23 #x0000000000000001))
(assert (= temp1234_24 temp1234_23))
(assert (= temp1234_25 (select ARGNAME_padding_NAMEEND_VAL temp1234_24)))
(assert (= temp1234_26 #x0000000000000002))
(assert (= temp1234_27 temp1234_26))
(assert (= temp1234_28 (select ARGNAME_padding_NAMEEND_VAL temp1234_27)))
(assert (= temp1234_29 #x0000000000000003))
(assert (= temp1234_30 temp1234_29))
(assert (= temp1234_31 (select ARGNAME_padding_NAMEEND_VAL temp1234_30)))
(assert (= temp1234_32 #x0000000000000004))
(assert (= temp1234_33 temp1234_32))
(assert (= temp1234_34 (select ARGNAME_padding_NAMEEND_VAL temp1234_33)))
(assert (= temp1234_35 #x0000000000000005))
(assert (= temp1234_36 temp1234_35))
(assert (= temp1234_37 (select ARGNAME_padding_NAMEEND_VAL temp1234_36)))
(assert (= temp1234_38 #x0000000000000000))
(assert (= temp1234_39 #x0000000000000000))
(assert (= temp1234_40 temp1234_39))
(assert (= temp1234_41 (select ARGNAME_padding_NAMEEND_VAL temp1234_40)))
(assert (= temp1234_42 #x0000000000000000))
(assert (= temp1234_43 #x0000000000000001))
(assert (= temp1234_44 temp1234_43))
(assert (= temp1234_45 (select ARGNAME_padding_NAMEEND_VAL temp1234_44)))
(assert (= temp1234_46 #x0000000000000000))
(assert (= temp1234_47 #x0000000000000002))
(assert (= temp1234_48 temp1234_47))
(assert (= temp1234_49 (select ARGNAME_padding_NAMEEND_VAL temp1234_48)))
(assert (= temp1234_50 #x0000000000000000))
(assert (= temp1234_51 #x0000000000000003))
(assert (= temp1234_52 temp1234_51))
(assert (= temp1234_53 (select ARGNAME_padding_NAMEEND_VAL temp1234_52)))
(assert (= temp1234_54 #x0000000000000000))
(assert (= temp1234_55 #x0000000000000004))
(assert (= temp1234_56 temp1234_55))
(assert (= temp1234_57 (select ARGNAME_padding_NAMEEND_VAL temp1234_56)))
(assert (= temp1234_58 #x0000000000000000))
(assert (= temp1234_59 #x0000000000000005))
(assert (= temp1234_60 temp1234_59))
(assert (= temp1234_61 (select ARGNAME_padding_NAMEEND_VAL temp1234_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1234_41 temp1234_38)
             (bvslt temp1234_45 temp1234_42)
             (bvslt temp1234_49 temp1234_46)
             (bvslt temp1234_53 temp1234_50)
             (bvslt temp1234_57 temp1234_54)
             (bvslt temp1234_61 temp1234_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1234_62 #x0000000000000000))
(assert (= var1716002 temp1234_62))
(assert (= temp1234_63 #x0000000000000000))
(assert (= temp1234_64 temp1234_63))
(assert (= temp1234_65 (select ARGNAME_stride_NAMEEND_VAL temp1234_64)))
(assert (= temp1234_66 #x0000000000000001))
(assert (= temp1234_67 temp1234_66))
(assert (= temp1234_68 (select ARGNAME_stride_NAMEEND_VAL temp1234_67)))
(assert (= temp1234_69 #x0000000000000002))
(assert (= temp1234_70 temp1234_69))
(assert (= temp1234_71 (select ARGNAME_stride_NAMEEND_VAL temp1234_70)))
(assert (= temp1234_72 #x0000000000000003))
(assert (= temp1234_73 temp1234_72))
(assert (= temp1234_74 (select ARGNAME_stride_NAMEEND_VAL temp1234_73)))
(assert (= temp1234_75 #x0000000000000004))
(assert (= temp1234_76 temp1234_75))
(assert (= temp1234_77 (select ARGNAME_stride_NAMEEND_VAL temp1234_76)))
(assert (= temp1234_78 #x0000000000000005))
(assert (= temp1234_79 temp1234_78))
(assert (= temp1234_80 (select ARGNAME_stride_NAMEEND_VAL temp1234_79)))
(assert (= temp1234_81 #x0000000000000000))
(assert (= temp1234_82 #x0000000000000000))
(assert (= temp1234_83 temp1234_82))
(assert (= temp1234_84 (select ARGNAME_stride_NAMEEND_VAL temp1234_83)))
(assert (= temp1234_85 #x0000000000000000))
(assert (= temp1234_86 #x0000000000000001))
(assert (= temp1234_87 temp1234_86))
(assert (= temp1234_88 (select ARGNAME_stride_NAMEEND_VAL temp1234_87)))
(assert (= temp1234_89 #x0000000000000000))
(assert (= temp1234_90 #x0000000000000002))
(assert (= temp1234_91 temp1234_90))
(assert (= temp1234_92 (select ARGNAME_stride_NAMEEND_VAL temp1234_91)))
(assert (= temp1234_93 #x0000000000000000))
(assert (= temp1234_94 #x0000000000000003))
(assert (= temp1234_95 temp1234_94))
(assert (= temp1234_96 (select ARGNAME_stride_NAMEEND_VAL temp1234_95)))
(assert (= temp1234_97 #x0000000000000000))
(assert (= temp1234_98 #x0000000000000004))
(assert (= temp1234_99 temp1234_98))
(assert (= temp1234_100 (select ARGNAME_stride_NAMEEND_VAL temp1234_99)))
(assert (= temp1234_101 #x0000000000000000))
(assert (= temp1234_102 #x0000000000000005))
(assert (= temp1234_103 temp1234_102))
(assert (= temp1234_104 (select ARGNAME_stride_NAMEEND_VAL temp1234_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1234_84 temp1234_81)
             (bvsle temp1234_88 temp1234_85)
             (bvsle temp1234_92 temp1234_89)
             (bvsle temp1234_96 temp1234_93)
             (bvsle temp1234_100 temp1234_97)
             (bvsle temp1234_104 temp1234_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1234_105 #x0000000000000000))
(assert (= var1716023 temp1234_105))
(assert (= temp1234_106 #x0000000000000000))
(assert (= var1704114 temp1234_106))
(assert (= temp1234_107 #x0000000000000000))
(assert (= temp1234_108 temp1234_107))
(assert (= temp1234_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_108)))
(assert (= temp1234_110 #x0000000000000001))
(assert (= temp1234_111 temp1234_110))
(assert (= temp1234_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_111)))
(assert (= temp1234_113 #x0000000000000002))
(assert (= temp1234_114 temp1234_113))
(assert (= temp1234_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_114)))
(assert (= temp1234_116 #x0000000000000003))
(assert (= temp1234_117 temp1234_116))
(assert (= temp1234_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_117)))
(assert (= temp1234_119 #x0000000000000004))
(assert (= temp1234_120 temp1234_119))
(assert (= temp1234_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_120)))
(assert (= temp1234_122 #x0000000000000005))
(assert (= temp1234_123 temp1234_122))
(assert (= temp1234_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_123)))
(assert (= temp1234_126 var1704114))
(assert (= temp1234_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_126)))
(assert (= temp1234_125 temp1234_127))
(assert (= var1716068
   (ite (bvslt temp1234_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1234_128 #x0000000000000000))
(assert (= var1716068 temp1234_128))
(assert (= temp1234_129 #x0000000000000000))
(assert (= var1704114 temp1234_129))
(assert (= temp1234_131 var1704114))
(assert (= temp1234_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_131)))
(assert (= temp1234_130 temp1234_132))
(assert (= var1716090 (bvsmod temp1234_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1234_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1234_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1234_134 #x0000000000000001))
(assert (= var1716091 temp1234_134))
(assert (= var1716110 var1716000))
(assert (= temp1234_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1234_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1234_136 #x0000000000000001))
(assert (= var1716111 temp1234_136))
(assert (= temp1234_137 #x0000000000000001))
(assert (= var1705002 temp1234_137))
(assert (= temp1234_139 var1705002))
(assert (= temp1234_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_139)))
(assert (= temp1234_138 temp1234_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1234_138)))
(assert (= temp1234_141 #x0000000000000000))
(assert (= var1704114 temp1234_141))
(assert (= temp1234_143 var1704114))
(assert (= temp1234_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1234_143)))
(assert (= temp1234_142 temp1234_144))
(assert (= temp1234_145 #x0000000000000002))
(assert (= var1979241 temp1234_145))
(assert (= temp1234_146 #x0000000000000001))
(assert (= var1716281 temp1234_146))
(assert (= temp1234_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1234_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1234_148 #x0000000000000001))
(assert (= var997490 temp1234_148))
(assert (= temp1234_149 #x0000000000000001))
(assert (= var997620 temp1234_149))
(assert (= var3486185 var997620))
(assert (= temp1234_150 #x0000000000000002))
(assert (= var3880579 temp1234_150))
(assert (= var3880581 (bvsub ARGNAME_weight_NAMEEND_DIM var3880579)))
(assert (= var3946124 var3880579))
(assert (= var3946125 var3880581))
(assert (= temp1234_152 #xffffffffffffffff))
(assert (= temp1234_151 temp1234_152))
(assert (= temp1234_154 #xffffffffffffffff))
(assert (= temp1234_153 temp1234_154))
(assert (= temp1234_155 #x0000000000000001))
(assert (= var997490 temp1234_155))
(model-add temp1234_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp1234_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp1234_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1234_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp1234_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1234_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





