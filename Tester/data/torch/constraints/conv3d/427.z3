(declare-fun temp567_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp567_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp567_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp567_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp567_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp567_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp567_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp567_8 () (_ BitVec 64))
(declare-fun temp567_10 () (_ BitVec 64))
(declare-fun temp567_9 () (_ BitVec 64))
(declare-fun temp567_12 () (_ BitVec 64))
(declare-fun temp567_11 () (_ BitVec 64))
(declare-fun temp567_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp567_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp567_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp567_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp567_17 () (_ BitVec 64))
(declare-fun temp567_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp567_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp567_20 () (_ BitVec 64))
(declare-fun temp567_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp567_22 () (_ BitVec 64))
(declare-fun temp567_23 () (_ BitVec 64))
(declare-fun temp567_24 () (_ BitVec 64))
(declare-fun temp567_25 () (_ BitVec 64))
(declare-fun temp567_26 () (_ BitVec 64))
(declare-fun temp567_27 () (_ BitVec 64))
(declare-fun temp567_28 () (_ BitVec 64))
(declare-fun temp567_29 () (_ BitVec 64))
(declare-fun temp567_30 () (_ BitVec 64))
(declare-fun temp567_31 () (_ BitVec 64))
(declare-fun temp567_32 () (_ BitVec 64))
(declare-fun temp567_33 () (_ BitVec 64))
(declare-fun temp567_34 () (_ BitVec 64))
(declare-fun temp567_35 () (_ BitVec 64))
(declare-fun temp567_36 () (_ BitVec 64))
(declare-fun temp567_37 () (_ BitVec 64))
(declare-fun temp567_38 () (_ BitVec 64))
(declare-fun temp567_39 () (_ BitVec 64))
(declare-fun temp567_40 () (_ BitVec 64))
(declare-fun temp567_41 () (_ BitVec 64))
(declare-fun temp567_42 () (_ BitVec 64))
(declare-fun temp567_43 () (_ BitVec 64))
(declare-fun temp567_44 () (_ BitVec 64))
(declare-fun temp567_45 () (_ BitVec 64))
(declare-fun temp567_46 () (_ BitVec 64))
(declare-fun temp567_47 () (_ BitVec 64))
(declare-fun temp567_48 () (_ BitVec 64))
(declare-fun temp567_49 () (_ BitVec 64))
(declare-fun temp567_50 () (_ BitVec 64))
(declare-fun temp567_51 () (_ BitVec 64))
(declare-fun temp567_52 () (_ BitVec 64))
(declare-fun temp567_53 () (_ BitVec 64))
(declare-fun temp567_54 () (_ BitVec 64))
(declare-fun temp567_55 () (_ BitVec 64))
(declare-fun temp567_56 () (_ BitVec 64))
(declare-fun temp567_57 () (_ BitVec 64))
(declare-fun temp567_58 () (_ BitVec 64))
(declare-fun temp567_59 () (_ BitVec 64))
(declare-fun temp567_60 () (_ BitVec 64))
(declare-fun temp567_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp567_62 () (_ BitVec 64))
(declare-fun temp567_63 () (_ BitVec 64))
(declare-fun temp567_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp567_65 () (_ BitVec 64))
(declare-fun temp567_66 () (_ BitVec 64))
(declare-fun temp567_67 () (_ BitVec 64))
(declare-fun temp567_68 () (_ BitVec 64))
(declare-fun temp567_69 () (_ BitVec 64))
(declare-fun temp567_70 () (_ BitVec 64))
(declare-fun temp567_71 () (_ BitVec 64))
(declare-fun temp567_72 () (_ BitVec 64))
(declare-fun temp567_73 () (_ BitVec 64))
(declare-fun temp567_74 () (_ BitVec 64))
(declare-fun temp567_75 () (_ BitVec 64))
(declare-fun temp567_76 () (_ BitVec 64))
(declare-fun temp567_77 () (_ BitVec 64))
(declare-fun temp567_78 () (_ BitVec 64))
(declare-fun temp567_79 () (_ BitVec 64))
(declare-fun temp567_80 () (_ BitVec 64))
(declare-fun temp567_81 () (_ BitVec 64))
(declare-fun temp567_82 () (_ BitVec 64))
(declare-fun temp567_83 () (_ BitVec 64))
(declare-fun temp567_84 () (_ BitVec 64))
(declare-fun temp567_85 () (_ BitVec 64))
(declare-fun temp567_86 () (_ BitVec 64))
(declare-fun temp567_87 () (_ BitVec 64))
(declare-fun temp567_88 () (_ BitVec 64))
(declare-fun temp567_89 () (_ BitVec 64))
(declare-fun temp567_90 () (_ BitVec 64))
(declare-fun temp567_91 () (_ BitVec 64))
(declare-fun temp567_92 () (_ BitVec 64))
(declare-fun temp567_93 () (_ BitVec 64))
(declare-fun temp567_94 () (_ BitVec 64))
(declare-fun temp567_95 () (_ BitVec 64))
(declare-fun temp567_96 () (_ BitVec 64))
(declare-fun temp567_97 () (_ BitVec 64))
(declare-fun temp567_98 () (_ BitVec 64))
(declare-fun temp567_99 () (_ BitVec 64))
(declare-fun temp567_100 () (_ BitVec 64))
(declare-fun temp567_101 () (_ BitVec 64))
(declare-fun temp567_102 () (_ BitVec 64))
(declare-fun temp567_103 () (_ BitVec 64))
(declare-fun temp567_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp567_105 () (_ BitVec 64))
(declare-fun temp567_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp567_107 () (_ BitVec 64))
(declare-fun temp567_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp567_109 () (_ BitVec 64))
(declare-fun temp567_110 () (_ BitVec 64))
(declare-fun temp567_111 () (_ BitVec 64))
(declare-fun temp567_112 () (_ BitVec 64))
(declare-fun temp567_113 () (_ BitVec 64))
(declare-fun temp567_114 () (_ BitVec 64))
(declare-fun temp567_115 () (_ BitVec 64))
(declare-fun temp567_116 () (_ BitVec 64))
(declare-fun temp567_117 () (_ BitVec 64))
(declare-fun temp567_118 () (_ BitVec 64))
(declare-fun temp567_119 () (_ BitVec 64))
(declare-fun temp567_120 () (_ BitVec 64))
(declare-fun temp567_121 () (_ BitVec 64))
(declare-fun temp567_122 () (_ BitVec 64))
(declare-fun temp567_123 () (_ BitVec 64))
(declare-fun temp567_124 () (_ BitVec 64))
(declare-fun temp567_126 () (_ BitVec 64))
(declare-fun temp567_127 () (_ BitVec 64))
(declare-fun temp567_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp567_128 () (_ BitVec 64))
(declare-fun temp567_129 () (_ BitVec 64))
(declare-fun temp567_131 () (_ BitVec 64))
(declare-fun temp567_132 () (_ BitVec 64))
(declare-fun temp567_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp567_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp567_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp567_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp567_136 () (_ BitVec 64))
(declare-fun temp567_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp567_139 () (_ BitVec 64))
(declare-fun temp567_140 () (_ BitVec 64))
(declare-fun temp567_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp567_141 () (_ BitVec 64))
(declare-fun temp567_143 () (_ BitVec 64))
(declare-fun temp567_144 () (_ BitVec 64))
(declare-fun temp567_142 () (_ BitVec 64))
(declare-fun temp567_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp567_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp567_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp567_148 () (_ BitVec 64))
(declare-fun temp567_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp567_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp567_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp567_152 () (_ BitVec 64))
(assert (= temp567_1 #x0000000000000003))
(assert (= var465453 temp567_1))
(assert (= temp567_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp567_2)))
(assert (= temp567_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp567_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp567_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp567_4)))
(assert (= temp567_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp567_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp567_6 #x0000000000000000))
(assert (= var465488 temp567_6))
(assert (= temp567_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp567_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp567_8 #x0000000000000001))
(assert (= var465522 temp567_8))
(assert (= temp567_10 #x0000000000000000))
(assert (= temp567_9 temp567_10))
(assert (= temp567_12 #x0000000000000003))
(assert (= temp567_11 temp567_12))
(assert (= temp567_13 #x0000000000000000))
(assert (= var863614 temp567_13))
(assert (= temp567_14 #x0000000000000001))
(assert (= var863635 temp567_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp567_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp567_15)))
(assert (= temp567_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp567_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp567_17 #x0000000000000000))
(assert (= var997373 temp567_17))
(assert (= temp567_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp567_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp567_19 #x0000000000000000))
(assert (= var997418 temp567_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp567_20 #x0000000000000000))
(assert (= temp567_21 temp567_20))
(assert (= temp567_22 (select ARGNAME_padding_NAMEEND_VAL temp567_21)))
(assert (= temp567_23 #x0000000000000001))
(assert (= temp567_24 temp567_23))
(assert (= temp567_25 (select ARGNAME_padding_NAMEEND_VAL temp567_24)))
(assert (= temp567_26 #x0000000000000002))
(assert (= temp567_27 temp567_26))
(assert (= temp567_28 (select ARGNAME_padding_NAMEEND_VAL temp567_27)))
(assert (= temp567_29 #x0000000000000003))
(assert (= temp567_30 temp567_29))
(assert (= temp567_31 (select ARGNAME_padding_NAMEEND_VAL temp567_30)))
(assert (= temp567_32 #x0000000000000004))
(assert (= temp567_33 temp567_32))
(assert (= temp567_34 (select ARGNAME_padding_NAMEEND_VAL temp567_33)))
(assert (= temp567_35 #x0000000000000005))
(assert (= temp567_36 temp567_35))
(assert (= temp567_37 (select ARGNAME_padding_NAMEEND_VAL temp567_36)))
(assert (= temp567_38 #x0000000000000000))
(assert (= temp567_39 #x0000000000000000))
(assert (= temp567_40 temp567_39))
(assert (= temp567_41 (select ARGNAME_padding_NAMEEND_VAL temp567_40)))
(assert (= temp567_42 #x0000000000000000))
(assert (= temp567_43 #x0000000000000001))
(assert (= temp567_44 temp567_43))
(assert (= temp567_45 (select ARGNAME_padding_NAMEEND_VAL temp567_44)))
(assert (= temp567_46 #x0000000000000000))
(assert (= temp567_47 #x0000000000000002))
(assert (= temp567_48 temp567_47))
(assert (= temp567_49 (select ARGNAME_padding_NAMEEND_VAL temp567_48)))
(assert (= temp567_50 #x0000000000000000))
(assert (= temp567_51 #x0000000000000003))
(assert (= temp567_52 temp567_51))
(assert (= temp567_53 (select ARGNAME_padding_NAMEEND_VAL temp567_52)))
(assert (= temp567_54 #x0000000000000000))
(assert (= temp567_55 #x0000000000000004))
(assert (= temp567_56 temp567_55))
(assert (= temp567_57 (select ARGNAME_padding_NAMEEND_VAL temp567_56)))
(assert (= temp567_58 #x0000000000000000))
(assert (= temp567_59 #x0000000000000005))
(assert (= temp567_60 temp567_59))
(assert (= temp567_61 (select ARGNAME_padding_NAMEEND_VAL temp567_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp567_41 temp567_38)
             (bvslt temp567_45 temp567_42)
             (bvslt temp567_49 temp567_46)
             (bvslt temp567_53 temp567_50)
             (bvslt temp567_57 temp567_54)
             (bvslt temp567_61 temp567_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp567_62 #x0000000000000000))
(assert (= var1716002 temp567_62))
(assert (= temp567_63 #x0000000000000000))
(assert (= temp567_64 temp567_63))
(assert (= temp567_65 (select ARGNAME_stride_NAMEEND_VAL temp567_64)))
(assert (= temp567_66 #x0000000000000001))
(assert (= temp567_67 temp567_66))
(assert (= temp567_68 (select ARGNAME_stride_NAMEEND_VAL temp567_67)))
(assert (= temp567_69 #x0000000000000002))
(assert (= temp567_70 temp567_69))
(assert (= temp567_71 (select ARGNAME_stride_NAMEEND_VAL temp567_70)))
(assert (= temp567_72 #x0000000000000003))
(assert (= temp567_73 temp567_72))
(assert (= temp567_74 (select ARGNAME_stride_NAMEEND_VAL temp567_73)))
(assert (= temp567_75 #x0000000000000004))
(assert (= temp567_76 temp567_75))
(assert (= temp567_77 (select ARGNAME_stride_NAMEEND_VAL temp567_76)))
(assert (= temp567_78 #x0000000000000005))
(assert (= temp567_79 temp567_78))
(assert (= temp567_80 (select ARGNAME_stride_NAMEEND_VAL temp567_79)))
(assert (= temp567_81 #x0000000000000000))
(assert (= temp567_82 #x0000000000000000))
(assert (= temp567_83 temp567_82))
(assert (= temp567_84 (select ARGNAME_stride_NAMEEND_VAL temp567_83)))
(assert (= temp567_85 #x0000000000000000))
(assert (= temp567_86 #x0000000000000001))
(assert (= temp567_87 temp567_86))
(assert (= temp567_88 (select ARGNAME_stride_NAMEEND_VAL temp567_87)))
(assert (= temp567_89 #x0000000000000000))
(assert (= temp567_90 #x0000000000000002))
(assert (= temp567_91 temp567_90))
(assert (= temp567_92 (select ARGNAME_stride_NAMEEND_VAL temp567_91)))
(assert (= temp567_93 #x0000000000000000))
(assert (= temp567_94 #x0000000000000003))
(assert (= temp567_95 temp567_94))
(assert (= temp567_96 (select ARGNAME_stride_NAMEEND_VAL temp567_95)))
(assert (= temp567_97 #x0000000000000000))
(assert (= temp567_98 #x0000000000000004))
(assert (= temp567_99 temp567_98))
(assert (= temp567_100 (select ARGNAME_stride_NAMEEND_VAL temp567_99)))
(assert (= temp567_101 #x0000000000000000))
(assert (= temp567_102 #x0000000000000005))
(assert (= temp567_103 temp567_102))
(assert (= temp567_104 (select ARGNAME_stride_NAMEEND_VAL temp567_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp567_84 temp567_81)
             (bvsle temp567_88 temp567_85)
             (bvsle temp567_92 temp567_89)
             (bvsle temp567_96 temp567_93)
             (bvsle temp567_100 temp567_97)
             (bvsle temp567_104 temp567_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp567_105 #x0000000000000000))
(assert (= var1716023 temp567_105))
(assert (= temp567_106 #x0000000000000000))
(assert (= var1704114 temp567_106))
(assert (= temp567_107 #x0000000000000000))
(assert (= temp567_108 temp567_107))
(assert (= temp567_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_108)))
(assert (= temp567_110 #x0000000000000001))
(assert (= temp567_111 temp567_110))
(assert (= temp567_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_111)))
(assert (= temp567_113 #x0000000000000002))
(assert (= temp567_114 temp567_113))
(assert (= temp567_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_114)))
(assert (= temp567_116 #x0000000000000003))
(assert (= temp567_117 temp567_116))
(assert (= temp567_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_117)))
(assert (= temp567_119 #x0000000000000004))
(assert (= temp567_120 temp567_119))
(assert (= temp567_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_120)))
(assert (= temp567_122 #x0000000000000005))
(assert (= temp567_123 temp567_122))
(assert (= temp567_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_123)))
(assert (= temp567_126 var1704114))
(assert (= temp567_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_126)))
(assert (= temp567_125 temp567_127))
(assert (= var1716068
   (ite (bvslt temp567_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp567_128 #x0000000000000000))
(assert (= var1716068 temp567_128))
(assert (= temp567_129 #x0000000000000000))
(assert (= var1704114 temp567_129))
(assert (= temp567_131 var1704114))
(assert (= temp567_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_131)))
(assert (= temp567_130 temp567_132))
(assert (= var1716090 (bvsmod temp567_130 ARGNAME_groups_NAMEEND)))
(assert (= temp567_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp567_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp567_134 #x0000000000000001))
(assert (= var1716091 temp567_134))
(assert (= var1716110 var1716000))
(assert (= temp567_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp567_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp567_136 #x0000000000000001))
(assert (= var1716111 temp567_136))
(assert (= temp567_137 #x0000000000000001))
(assert (= var1705002 temp567_137))
(assert (= temp567_139 var1705002))
(assert (= temp567_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_139)))
(assert (= temp567_138 temp567_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp567_138)))
(assert (= temp567_141 #x0000000000000000))
(assert (= var1704114 temp567_141))
(assert (= temp567_143 var1704114))
(assert (= temp567_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp567_143)))
(assert (= temp567_142 temp567_144))
(assert (= temp567_145 #x0000000000000002))
(assert (= var1979241 temp567_145))
(assert (= temp567_146 #x0000000000000001))
(assert (= var1716281 temp567_146))
(assert (= temp567_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp567_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp567_148 #x0000000000000001))
(assert (= var997490 temp567_148))
(assert (= temp567_149 #x0000000000000001))
(assert (= var997620 temp567_149))
(assert (= var3486185 var997620))
(assert (= temp567_150 #x0000000000000000))
(assert (= var3686207 temp567_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp567_151 #x0000000000000002))
(assert (= var3815043 temp567_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp567_152 #x0000000000000001))
(assert (= var997490 temp567_152))
(model-add temp567_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp567_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp567_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp567_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp567_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp567_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






