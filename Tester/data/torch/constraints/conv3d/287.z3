(declare-fun temp381_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp381_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp381_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp381_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp381_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp381_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp381_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp381_8 () (_ BitVec 64))
(declare-fun temp381_10 () (_ BitVec 64))
(declare-fun temp381_9 () (_ BitVec 64))
(declare-fun temp381_12 () (_ BitVec 64))
(declare-fun temp381_11 () (_ BitVec 64))
(declare-fun temp381_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp381_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp381_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp381_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp381_17 () (_ BitVec 64))
(declare-fun temp381_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp381_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp381_20 () (_ BitVec 64))
(declare-fun temp381_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp381_22 () (_ BitVec 64))
(declare-fun temp381_23 () (_ BitVec 64))
(declare-fun temp381_24 () (_ BitVec 64))
(declare-fun temp381_25 () (_ BitVec 64))
(declare-fun temp381_26 () (_ BitVec 64))
(declare-fun temp381_27 () (_ BitVec 64))
(declare-fun temp381_28 () (_ BitVec 64))
(declare-fun temp381_29 () (_ BitVec 64))
(declare-fun temp381_30 () (_ BitVec 64))
(declare-fun temp381_31 () (_ BitVec 64))
(declare-fun temp381_32 () (_ BitVec 64))
(declare-fun temp381_33 () (_ BitVec 64))
(declare-fun temp381_34 () (_ BitVec 64))
(declare-fun temp381_35 () (_ BitVec 64))
(declare-fun temp381_36 () (_ BitVec 64))
(declare-fun temp381_37 () (_ BitVec 64))
(declare-fun temp381_38 () (_ BitVec 64))
(declare-fun temp381_39 () (_ BitVec 64))
(declare-fun temp381_40 () (_ BitVec 64))
(declare-fun temp381_41 () (_ BitVec 64))
(declare-fun temp381_42 () (_ BitVec 64))
(declare-fun temp381_43 () (_ BitVec 64))
(declare-fun temp381_44 () (_ BitVec 64))
(declare-fun temp381_45 () (_ BitVec 64))
(declare-fun temp381_46 () (_ BitVec 64))
(declare-fun temp381_47 () (_ BitVec 64))
(declare-fun temp381_48 () (_ BitVec 64))
(declare-fun temp381_49 () (_ BitVec 64))
(declare-fun temp381_50 () (_ BitVec 64))
(declare-fun temp381_51 () (_ BitVec 64))
(declare-fun temp381_52 () (_ BitVec 64))
(declare-fun temp381_53 () (_ BitVec 64))
(declare-fun temp381_54 () (_ BitVec 64))
(declare-fun temp381_55 () (_ BitVec 64))
(declare-fun temp381_56 () (_ BitVec 64))
(declare-fun temp381_57 () (_ BitVec 64))
(declare-fun temp381_58 () (_ BitVec 64))
(declare-fun temp381_59 () (_ BitVec 64))
(declare-fun temp381_60 () (_ BitVec 64))
(declare-fun temp381_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp381_62 () (_ BitVec 64))
(declare-fun temp381_63 () (_ BitVec 64))
(declare-fun temp381_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp381_65 () (_ BitVec 64))
(declare-fun temp381_66 () (_ BitVec 64))
(declare-fun temp381_67 () (_ BitVec 64))
(declare-fun temp381_68 () (_ BitVec 64))
(declare-fun temp381_69 () (_ BitVec 64))
(declare-fun temp381_70 () (_ BitVec 64))
(declare-fun temp381_71 () (_ BitVec 64))
(declare-fun temp381_72 () (_ BitVec 64))
(declare-fun temp381_73 () (_ BitVec 64))
(declare-fun temp381_74 () (_ BitVec 64))
(declare-fun temp381_75 () (_ BitVec 64))
(declare-fun temp381_76 () (_ BitVec 64))
(declare-fun temp381_77 () (_ BitVec 64))
(declare-fun temp381_78 () (_ BitVec 64))
(declare-fun temp381_79 () (_ BitVec 64))
(declare-fun temp381_80 () (_ BitVec 64))
(declare-fun temp381_81 () (_ BitVec 64))
(declare-fun temp381_82 () (_ BitVec 64))
(declare-fun temp381_83 () (_ BitVec 64))
(declare-fun temp381_84 () (_ BitVec 64))
(declare-fun temp381_85 () (_ BitVec 64))
(declare-fun temp381_86 () (_ BitVec 64))
(declare-fun temp381_87 () (_ BitVec 64))
(declare-fun temp381_88 () (_ BitVec 64))
(declare-fun temp381_89 () (_ BitVec 64))
(declare-fun temp381_90 () (_ BitVec 64))
(declare-fun temp381_91 () (_ BitVec 64))
(declare-fun temp381_92 () (_ BitVec 64))
(declare-fun temp381_93 () (_ BitVec 64))
(declare-fun temp381_94 () (_ BitVec 64))
(declare-fun temp381_95 () (_ BitVec 64))
(declare-fun temp381_96 () (_ BitVec 64))
(declare-fun temp381_97 () (_ BitVec 64))
(declare-fun temp381_98 () (_ BitVec 64))
(declare-fun temp381_99 () (_ BitVec 64))
(declare-fun temp381_100 () (_ BitVec 64))
(declare-fun temp381_101 () (_ BitVec 64))
(declare-fun temp381_102 () (_ BitVec 64))
(declare-fun temp381_103 () (_ BitVec 64))
(declare-fun temp381_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp381_105 () (_ BitVec 64))
(declare-fun temp381_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp381_107 () (_ BitVec 64))
(declare-fun temp381_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp381_109 () (_ BitVec 64))
(declare-fun temp381_110 () (_ BitVec 64))
(declare-fun temp381_111 () (_ BitVec 64))
(declare-fun temp381_112 () (_ BitVec 64))
(declare-fun temp381_113 () (_ BitVec 64))
(declare-fun temp381_114 () (_ BitVec 64))
(declare-fun temp381_115 () (_ BitVec 64))
(declare-fun temp381_116 () (_ BitVec 64))
(declare-fun temp381_117 () (_ BitVec 64))
(declare-fun temp381_118 () (_ BitVec 64))
(declare-fun temp381_119 () (_ BitVec 64))
(declare-fun temp381_120 () (_ BitVec 64))
(declare-fun temp381_121 () (_ BitVec 64))
(declare-fun temp381_122 () (_ BitVec 64))
(declare-fun temp381_123 () (_ BitVec 64))
(declare-fun temp381_124 () (_ BitVec 64))
(declare-fun temp381_126 () (_ BitVec 64))
(declare-fun temp381_127 () (_ BitVec 64))
(declare-fun temp381_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp381_128 () (_ BitVec 64))
(declare-fun temp381_129 () (_ BitVec 64))
(declare-fun temp381_131 () (_ BitVec 64))
(declare-fun temp381_132 () (_ BitVec 64))
(declare-fun temp381_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp381_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp381_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp381_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp381_136 () (_ BitVec 64))
(declare-fun temp381_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp381_139 () (_ BitVec 64))
(declare-fun temp381_140 () (_ BitVec 64))
(declare-fun temp381_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp381_141 () (_ BitVec 64))
(declare-fun temp381_143 () (_ BitVec 64))
(declare-fun temp381_144 () (_ BitVec 64))
(declare-fun temp381_142 () (_ BitVec 64))
(declare-fun temp381_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp381_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp381_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp381_148 () (_ BitVec 64))
(declare-fun temp381_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp381_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp381_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp381_152 () (_ BitVec 64))
(assert (= temp381_1 #x0000000000000003))
(assert (= var465453 temp381_1))
(assert (= temp381_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp381_2)))
(assert (= temp381_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp381_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp381_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp381_4)))
(assert (= temp381_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp381_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp381_6 #x0000000000000000))
(assert (= var465488 temp381_6))
(assert (= temp381_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp381_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp381_8 #x0000000000000001))
(assert (= var465522 temp381_8))
(assert (= temp381_10 #x0000000000000000))
(assert (= temp381_9 temp381_10))
(assert (= temp381_12 #x0000000000000003))
(assert (= temp381_11 temp381_12))
(assert (= temp381_13 #x0000000000000000))
(assert (= var863614 temp381_13))
(assert (= temp381_14 #x0000000000000001))
(assert (= var863635 temp381_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp381_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp381_15)))
(assert (= temp381_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp381_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_17 #x0000000000000000))
(assert (= var997373 temp381_17))
(assert (= temp381_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp381_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_19 #x0000000000000000))
(assert (= var997418 temp381_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp381_20 #x0000000000000000))
(assert (= temp381_21 temp381_20))
(assert (= temp381_22 (select ARGNAME_padding_NAMEEND_VAL temp381_21)))
(assert (= temp381_23 #x0000000000000001))
(assert (= temp381_24 temp381_23))
(assert (= temp381_25 (select ARGNAME_padding_NAMEEND_VAL temp381_24)))
(assert (= temp381_26 #x0000000000000002))
(assert (= temp381_27 temp381_26))
(assert (= temp381_28 (select ARGNAME_padding_NAMEEND_VAL temp381_27)))
(assert (= temp381_29 #x0000000000000003))
(assert (= temp381_30 temp381_29))
(assert (= temp381_31 (select ARGNAME_padding_NAMEEND_VAL temp381_30)))
(assert (= temp381_32 #x0000000000000004))
(assert (= temp381_33 temp381_32))
(assert (= temp381_34 (select ARGNAME_padding_NAMEEND_VAL temp381_33)))
(assert (= temp381_35 #x0000000000000005))
(assert (= temp381_36 temp381_35))
(assert (= temp381_37 (select ARGNAME_padding_NAMEEND_VAL temp381_36)))
(assert (= temp381_38 #x0000000000000000))
(assert (= temp381_39 #x0000000000000000))
(assert (= temp381_40 temp381_39))
(assert (= temp381_41 (select ARGNAME_padding_NAMEEND_VAL temp381_40)))
(assert (= temp381_42 #x0000000000000000))
(assert (= temp381_43 #x0000000000000001))
(assert (= temp381_44 temp381_43))
(assert (= temp381_45 (select ARGNAME_padding_NAMEEND_VAL temp381_44)))
(assert (= temp381_46 #x0000000000000000))
(assert (= temp381_47 #x0000000000000002))
(assert (= temp381_48 temp381_47))
(assert (= temp381_49 (select ARGNAME_padding_NAMEEND_VAL temp381_48)))
(assert (= temp381_50 #x0000000000000000))
(assert (= temp381_51 #x0000000000000003))
(assert (= temp381_52 temp381_51))
(assert (= temp381_53 (select ARGNAME_padding_NAMEEND_VAL temp381_52)))
(assert (= temp381_54 #x0000000000000000))
(assert (= temp381_55 #x0000000000000004))
(assert (= temp381_56 temp381_55))
(assert (= temp381_57 (select ARGNAME_padding_NAMEEND_VAL temp381_56)))
(assert (= temp381_58 #x0000000000000000))
(assert (= temp381_59 #x0000000000000005))
(assert (= temp381_60 temp381_59))
(assert (= temp381_61 (select ARGNAME_padding_NAMEEND_VAL temp381_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp381_41 temp381_38)
             (bvslt temp381_45 temp381_42)
             (bvslt temp381_49 temp381_46)
             (bvslt temp381_53 temp381_50)
             (bvslt temp381_57 temp381_54)
             (bvslt temp381_61 temp381_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_62 #x0000000000000000))
(assert (= var1716002 temp381_62))
(assert (= temp381_63 #x0000000000000000))
(assert (= temp381_64 temp381_63))
(assert (= temp381_65 (select ARGNAME_stride_NAMEEND_VAL temp381_64)))
(assert (= temp381_66 #x0000000000000001))
(assert (= temp381_67 temp381_66))
(assert (= temp381_68 (select ARGNAME_stride_NAMEEND_VAL temp381_67)))
(assert (= temp381_69 #x0000000000000002))
(assert (= temp381_70 temp381_69))
(assert (= temp381_71 (select ARGNAME_stride_NAMEEND_VAL temp381_70)))
(assert (= temp381_72 #x0000000000000003))
(assert (= temp381_73 temp381_72))
(assert (= temp381_74 (select ARGNAME_stride_NAMEEND_VAL temp381_73)))
(assert (= temp381_75 #x0000000000000004))
(assert (= temp381_76 temp381_75))
(assert (= temp381_77 (select ARGNAME_stride_NAMEEND_VAL temp381_76)))
(assert (= temp381_78 #x0000000000000005))
(assert (= temp381_79 temp381_78))
(assert (= temp381_80 (select ARGNAME_stride_NAMEEND_VAL temp381_79)))
(assert (= temp381_81 #x0000000000000000))
(assert (= temp381_82 #x0000000000000000))
(assert (= temp381_83 temp381_82))
(assert (= temp381_84 (select ARGNAME_stride_NAMEEND_VAL temp381_83)))
(assert (= temp381_85 #x0000000000000000))
(assert (= temp381_86 #x0000000000000001))
(assert (= temp381_87 temp381_86))
(assert (= temp381_88 (select ARGNAME_stride_NAMEEND_VAL temp381_87)))
(assert (= temp381_89 #x0000000000000000))
(assert (= temp381_90 #x0000000000000002))
(assert (= temp381_91 temp381_90))
(assert (= temp381_92 (select ARGNAME_stride_NAMEEND_VAL temp381_91)))
(assert (= temp381_93 #x0000000000000000))
(assert (= temp381_94 #x0000000000000003))
(assert (= temp381_95 temp381_94))
(assert (= temp381_96 (select ARGNAME_stride_NAMEEND_VAL temp381_95)))
(assert (= temp381_97 #x0000000000000000))
(assert (= temp381_98 #x0000000000000004))
(assert (= temp381_99 temp381_98))
(assert (= temp381_100 (select ARGNAME_stride_NAMEEND_VAL temp381_99)))
(assert (= temp381_101 #x0000000000000000))
(assert (= temp381_102 #x0000000000000005))
(assert (= temp381_103 temp381_102))
(assert (= temp381_104 (select ARGNAME_stride_NAMEEND_VAL temp381_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp381_84 temp381_81)
             (bvsle temp381_88 temp381_85)
             (bvsle temp381_92 temp381_89)
             (bvsle temp381_96 temp381_93)
             (bvsle temp381_100 temp381_97)
             (bvsle temp381_104 temp381_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_105 #x0000000000000000))
(assert (= var1716023 temp381_105))
(assert (= temp381_106 #x0000000000000000))
(assert (= var1704114 temp381_106))
(assert (= temp381_107 #x0000000000000000))
(assert (= temp381_108 temp381_107))
(assert (= temp381_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_108)))
(assert (= temp381_110 #x0000000000000001))
(assert (= temp381_111 temp381_110))
(assert (= temp381_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_111)))
(assert (= temp381_113 #x0000000000000002))
(assert (= temp381_114 temp381_113))
(assert (= temp381_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_114)))
(assert (= temp381_116 #x0000000000000003))
(assert (= temp381_117 temp381_116))
(assert (= temp381_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_117)))
(assert (= temp381_119 #x0000000000000004))
(assert (= temp381_120 temp381_119))
(assert (= temp381_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_120)))
(assert (= temp381_122 #x0000000000000005))
(assert (= temp381_123 temp381_122))
(assert (= temp381_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_123)))
(assert (= temp381_126 var1704114))
(assert (= temp381_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_126)))
(assert (= temp381_125 temp381_127))
(assert (= var1716068
   (ite (bvslt temp381_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_128 #x0000000000000000))
(assert (= var1716068 temp381_128))
(assert (= temp381_129 #x0000000000000000))
(assert (= var1704114 temp381_129))
(assert (= temp381_131 var1704114))
(assert (= temp381_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_131)))
(assert (= temp381_130 temp381_132))
(assert (= var1716090 (bvsmod temp381_130 ARGNAME_groups_NAMEEND)))
(assert (= temp381_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp381_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp381_134 #x0000000000000001))
(assert (= var1716091 temp381_134))
(assert (= var1716110 var1716000))
(assert (= temp381_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp381_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp381_136 #x0000000000000001))
(assert (= var1716111 temp381_136))
(assert (= temp381_137 #x0000000000000001))
(assert (= var1705002 temp381_137))
(assert (= temp381_139 var1705002))
(assert (= temp381_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_139)))
(assert (= temp381_138 temp381_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp381_138)))
(assert (= temp381_141 #x0000000000000000))
(assert (= var1704114 temp381_141))
(assert (= temp381_143 var1704114))
(assert (= temp381_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_143)))
(assert (= temp381_142 temp381_144))
(assert (= temp381_145 #x0000000000000002))
(assert (= var1979241 temp381_145))
(assert (= temp381_146 #x0000000000000001))
(assert (= var1716281 temp381_146))
(assert (= temp381_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp381_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_148 #x0000000000000001))
(assert (= var997490 temp381_148))
(assert (= temp381_149 #x0000000000000001))
(assert (= var997620 temp381_149))
(assert (= var3486185 var997620))
(assert (= temp381_150 #x0000000000000000))
(assert (= var3686207 temp381_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp381_151 #x0000000000000002))
(assert (= var3815043 temp381_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp381_152 #x0000000000000001))
(assert (= var997490 temp381_152))
(model-add temp381_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp381_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp381_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp381_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp381_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp381_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






