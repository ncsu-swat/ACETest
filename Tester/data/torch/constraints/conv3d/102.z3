(declare-fun temp134_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp134_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp134_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp134_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp134_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp134_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp134_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp134_8 () (_ BitVec 64))
(declare-fun temp134_10 () (_ BitVec 64))
(declare-fun temp134_9 () (_ BitVec 64))
(declare-fun temp134_12 () (_ BitVec 64))
(declare-fun temp134_11 () (_ BitVec 64))
(declare-fun temp134_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp134_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp134_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp134_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp134_17 () (_ BitVec 64))
(declare-fun temp134_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp134_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp134_20 () (_ BitVec 64))
(declare-fun temp134_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp134_22 () (_ BitVec 64))
(declare-fun temp134_23 () (_ BitVec 64))
(declare-fun temp134_24 () (_ BitVec 64))
(declare-fun temp134_25 () (_ BitVec 64))
(declare-fun temp134_26 () (_ BitVec 64))
(declare-fun temp134_27 () (_ BitVec 64))
(declare-fun temp134_28 () (_ BitVec 64))
(declare-fun temp134_29 () (_ BitVec 64))
(declare-fun temp134_30 () (_ BitVec 64))
(declare-fun temp134_31 () (_ BitVec 64))
(declare-fun temp134_32 () (_ BitVec 64))
(declare-fun temp134_33 () (_ BitVec 64))
(declare-fun temp134_34 () (_ BitVec 64))
(declare-fun temp134_35 () (_ BitVec 64))
(declare-fun temp134_36 () (_ BitVec 64))
(declare-fun temp134_37 () (_ BitVec 64))
(declare-fun temp134_38 () (_ BitVec 64))
(declare-fun temp134_39 () (_ BitVec 64))
(declare-fun temp134_40 () (_ BitVec 64))
(declare-fun temp134_41 () (_ BitVec 64))
(declare-fun temp134_42 () (_ BitVec 64))
(declare-fun temp134_43 () (_ BitVec 64))
(declare-fun temp134_44 () (_ BitVec 64))
(declare-fun temp134_45 () (_ BitVec 64))
(declare-fun temp134_46 () (_ BitVec 64))
(declare-fun temp134_47 () (_ BitVec 64))
(declare-fun temp134_48 () (_ BitVec 64))
(declare-fun temp134_49 () (_ BitVec 64))
(declare-fun temp134_50 () (_ BitVec 64))
(declare-fun temp134_51 () (_ BitVec 64))
(declare-fun temp134_52 () (_ BitVec 64))
(declare-fun temp134_53 () (_ BitVec 64))
(declare-fun temp134_54 () (_ BitVec 64))
(declare-fun temp134_55 () (_ BitVec 64))
(declare-fun temp134_56 () (_ BitVec 64))
(declare-fun temp134_57 () (_ BitVec 64))
(declare-fun temp134_58 () (_ BitVec 64))
(declare-fun temp134_59 () (_ BitVec 64))
(declare-fun temp134_60 () (_ BitVec 64))
(declare-fun temp134_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp134_62 () (_ BitVec 64))
(declare-fun temp134_63 () (_ BitVec 64))
(declare-fun temp134_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp134_65 () (_ BitVec 64))
(declare-fun temp134_66 () (_ BitVec 64))
(declare-fun temp134_67 () (_ BitVec 64))
(declare-fun temp134_68 () (_ BitVec 64))
(declare-fun temp134_69 () (_ BitVec 64))
(declare-fun temp134_70 () (_ BitVec 64))
(declare-fun temp134_71 () (_ BitVec 64))
(declare-fun temp134_72 () (_ BitVec 64))
(declare-fun temp134_73 () (_ BitVec 64))
(declare-fun temp134_74 () (_ BitVec 64))
(declare-fun temp134_75 () (_ BitVec 64))
(declare-fun temp134_76 () (_ BitVec 64))
(declare-fun temp134_77 () (_ BitVec 64))
(declare-fun temp134_78 () (_ BitVec 64))
(declare-fun temp134_79 () (_ BitVec 64))
(declare-fun temp134_80 () (_ BitVec 64))
(declare-fun temp134_81 () (_ BitVec 64))
(declare-fun temp134_82 () (_ BitVec 64))
(declare-fun temp134_83 () (_ BitVec 64))
(declare-fun temp134_84 () (_ BitVec 64))
(declare-fun temp134_85 () (_ BitVec 64))
(declare-fun temp134_86 () (_ BitVec 64))
(declare-fun temp134_87 () (_ BitVec 64))
(declare-fun temp134_88 () (_ BitVec 64))
(declare-fun temp134_89 () (_ BitVec 64))
(declare-fun temp134_90 () (_ BitVec 64))
(declare-fun temp134_91 () (_ BitVec 64))
(declare-fun temp134_92 () (_ BitVec 64))
(declare-fun temp134_93 () (_ BitVec 64))
(declare-fun temp134_94 () (_ BitVec 64))
(declare-fun temp134_95 () (_ BitVec 64))
(declare-fun temp134_96 () (_ BitVec 64))
(declare-fun temp134_97 () (_ BitVec 64))
(declare-fun temp134_98 () (_ BitVec 64))
(declare-fun temp134_99 () (_ BitVec 64))
(declare-fun temp134_100 () (_ BitVec 64))
(declare-fun temp134_101 () (_ BitVec 64))
(declare-fun temp134_102 () (_ BitVec 64))
(declare-fun temp134_103 () (_ BitVec 64))
(declare-fun temp134_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp134_105 () (_ BitVec 64))
(declare-fun temp134_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp134_107 () (_ BitVec 64))
(declare-fun temp134_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp134_109 () (_ BitVec 64))
(declare-fun temp134_110 () (_ BitVec 64))
(declare-fun temp134_111 () (_ BitVec 64))
(declare-fun temp134_112 () (_ BitVec 64))
(declare-fun temp134_113 () (_ BitVec 64))
(declare-fun temp134_114 () (_ BitVec 64))
(declare-fun temp134_115 () (_ BitVec 64))
(declare-fun temp134_116 () (_ BitVec 64))
(declare-fun temp134_117 () (_ BitVec 64))
(declare-fun temp134_118 () (_ BitVec 64))
(declare-fun temp134_119 () (_ BitVec 64))
(declare-fun temp134_120 () (_ BitVec 64))
(declare-fun temp134_121 () (_ BitVec 64))
(declare-fun temp134_122 () (_ BitVec 64))
(declare-fun temp134_123 () (_ BitVec 64))
(declare-fun temp134_124 () (_ BitVec 64))
(declare-fun temp134_126 () (_ BitVec 64))
(declare-fun temp134_127 () (_ BitVec 64))
(declare-fun temp134_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp134_128 () (_ BitVec 64))
(declare-fun temp134_129 () (_ BitVec 64))
(declare-fun temp134_131 () (_ BitVec 64))
(declare-fun temp134_132 () (_ BitVec 64))
(declare-fun temp134_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp134_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp134_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp134_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp134_136 () (_ BitVec 64))
(declare-fun temp134_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp134_139 () (_ BitVec 64))
(declare-fun temp134_140 () (_ BitVec 64))
(declare-fun temp134_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp134_141 () (_ BitVec 64))
(declare-fun temp134_143 () (_ BitVec 64))
(declare-fun temp134_144 () (_ BitVec 64))
(declare-fun temp134_142 () (_ BitVec 64))
(declare-fun temp134_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp134_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp134_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp134_148 () (_ BitVec 64))
(declare-fun temp134_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp134_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp134_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp134_153 () (_ BitVec 64))
(declare-fun temp134_152 () (_ BitVec 64))
(declare-fun temp134_155 () (_ BitVec 64))
(declare-fun temp134_154 () (_ BitVec 64))
(declare-fun temp134_156 () (_ BitVec 64))
(assert (= temp134_1 #x0000000000000003))
(assert (= var465453 temp134_1))
(assert (= temp134_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp134_2)))
(assert (= temp134_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp134_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp134_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp134_4)))
(assert (= temp134_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp134_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp134_6 #x0000000000000000))
(assert (= var465488 temp134_6))
(assert (= temp134_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp134_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp134_8 #x0000000000000001))
(assert (= var465522 temp134_8))
(assert (= temp134_10 #x0000000000000000))
(assert (= temp134_9 temp134_10))
(assert (= temp134_12 #x0000000000000003))
(assert (= temp134_11 temp134_12))
(assert (= temp134_13 #x0000000000000000))
(assert (= var863614 temp134_13))
(assert (= temp134_14 #x0000000000000001))
(assert (= var863635 temp134_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp134_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp134_15)))
(assert (= temp134_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp134_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_17 #x0000000000000000))
(assert (= var997373 temp134_17))
(assert (= temp134_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp134_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_19 #x0000000000000000))
(assert (= var997418 temp134_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp134_20 #x0000000000000000))
(assert (= temp134_21 temp134_20))
(assert (= temp134_22 (select ARGNAME_padding_NAMEEND_VAL temp134_21)))
(assert (= temp134_23 #x0000000000000001))
(assert (= temp134_24 temp134_23))
(assert (= temp134_25 (select ARGNAME_padding_NAMEEND_VAL temp134_24)))
(assert (= temp134_26 #x0000000000000002))
(assert (= temp134_27 temp134_26))
(assert (= temp134_28 (select ARGNAME_padding_NAMEEND_VAL temp134_27)))
(assert (= temp134_29 #x0000000000000003))
(assert (= temp134_30 temp134_29))
(assert (= temp134_31 (select ARGNAME_padding_NAMEEND_VAL temp134_30)))
(assert (= temp134_32 #x0000000000000004))
(assert (= temp134_33 temp134_32))
(assert (= temp134_34 (select ARGNAME_padding_NAMEEND_VAL temp134_33)))
(assert (= temp134_35 #x0000000000000005))
(assert (= temp134_36 temp134_35))
(assert (= temp134_37 (select ARGNAME_padding_NAMEEND_VAL temp134_36)))
(assert (= temp134_38 #x0000000000000000))
(assert (= temp134_39 #x0000000000000000))
(assert (= temp134_40 temp134_39))
(assert (= temp134_41 (select ARGNAME_padding_NAMEEND_VAL temp134_40)))
(assert (= temp134_42 #x0000000000000000))
(assert (= temp134_43 #x0000000000000001))
(assert (= temp134_44 temp134_43))
(assert (= temp134_45 (select ARGNAME_padding_NAMEEND_VAL temp134_44)))
(assert (= temp134_46 #x0000000000000000))
(assert (= temp134_47 #x0000000000000002))
(assert (= temp134_48 temp134_47))
(assert (= temp134_49 (select ARGNAME_padding_NAMEEND_VAL temp134_48)))
(assert (= temp134_50 #x0000000000000000))
(assert (= temp134_51 #x0000000000000003))
(assert (= temp134_52 temp134_51))
(assert (= temp134_53 (select ARGNAME_padding_NAMEEND_VAL temp134_52)))
(assert (= temp134_54 #x0000000000000000))
(assert (= temp134_55 #x0000000000000004))
(assert (= temp134_56 temp134_55))
(assert (= temp134_57 (select ARGNAME_padding_NAMEEND_VAL temp134_56)))
(assert (= temp134_58 #x0000000000000000))
(assert (= temp134_59 #x0000000000000005))
(assert (= temp134_60 temp134_59))
(assert (= temp134_61 (select ARGNAME_padding_NAMEEND_VAL temp134_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp134_41 temp134_38)
             (bvslt temp134_45 temp134_42)
             (bvslt temp134_49 temp134_46)
             (bvslt temp134_53 temp134_50)
             (bvslt temp134_57 temp134_54)
             (bvslt temp134_61 temp134_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_62 #x0000000000000000))
(assert (= var1716002 temp134_62))
(assert (= temp134_63 #x0000000000000000))
(assert (= temp134_64 temp134_63))
(assert (= temp134_65 (select ARGNAME_stride_NAMEEND_VAL temp134_64)))
(assert (= temp134_66 #x0000000000000001))
(assert (= temp134_67 temp134_66))
(assert (= temp134_68 (select ARGNAME_stride_NAMEEND_VAL temp134_67)))
(assert (= temp134_69 #x0000000000000002))
(assert (= temp134_70 temp134_69))
(assert (= temp134_71 (select ARGNAME_stride_NAMEEND_VAL temp134_70)))
(assert (= temp134_72 #x0000000000000003))
(assert (= temp134_73 temp134_72))
(assert (= temp134_74 (select ARGNAME_stride_NAMEEND_VAL temp134_73)))
(assert (= temp134_75 #x0000000000000004))
(assert (= temp134_76 temp134_75))
(assert (= temp134_77 (select ARGNAME_stride_NAMEEND_VAL temp134_76)))
(assert (= temp134_78 #x0000000000000005))
(assert (= temp134_79 temp134_78))
(assert (= temp134_80 (select ARGNAME_stride_NAMEEND_VAL temp134_79)))
(assert (= temp134_81 #x0000000000000000))
(assert (= temp134_82 #x0000000000000000))
(assert (= temp134_83 temp134_82))
(assert (= temp134_84 (select ARGNAME_stride_NAMEEND_VAL temp134_83)))
(assert (= temp134_85 #x0000000000000000))
(assert (= temp134_86 #x0000000000000001))
(assert (= temp134_87 temp134_86))
(assert (= temp134_88 (select ARGNAME_stride_NAMEEND_VAL temp134_87)))
(assert (= temp134_89 #x0000000000000000))
(assert (= temp134_90 #x0000000000000002))
(assert (= temp134_91 temp134_90))
(assert (= temp134_92 (select ARGNAME_stride_NAMEEND_VAL temp134_91)))
(assert (= temp134_93 #x0000000000000000))
(assert (= temp134_94 #x0000000000000003))
(assert (= temp134_95 temp134_94))
(assert (= temp134_96 (select ARGNAME_stride_NAMEEND_VAL temp134_95)))
(assert (= temp134_97 #x0000000000000000))
(assert (= temp134_98 #x0000000000000004))
(assert (= temp134_99 temp134_98))
(assert (= temp134_100 (select ARGNAME_stride_NAMEEND_VAL temp134_99)))
(assert (= temp134_101 #x0000000000000000))
(assert (= temp134_102 #x0000000000000005))
(assert (= temp134_103 temp134_102))
(assert (= temp134_104 (select ARGNAME_stride_NAMEEND_VAL temp134_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp134_84 temp134_81)
             (bvsle temp134_88 temp134_85)
             (bvsle temp134_92 temp134_89)
             (bvsle temp134_96 temp134_93)
             (bvsle temp134_100 temp134_97)
             (bvsle temp134_104 temp134_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_105 #x0000000000000000))
(assert (= var1716023 temp134_105))
(assert (= temp134_106 #x0000000000000000))
(assert (= var1704114 temp134_106))
(assert (= temp134_107 #x0000000000000000))
(assert (= temp134_108 temp134_107))
(assert (= temp134_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_108)))
(assert (= temp134_110 #x0000000000000001))
(assert (= temp134_111 temp134_110))
(assert (= temp134_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_111)))
(assert (= temp134_113 #x0000000000000002))
(assert (= temp134_114 temp134_113))
(assert (= temp134_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_114)))
(assert (= temp134_116 #x0000000000000003))
(assert (= temp134_117 temp134_116))
(assert (= temp134_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_117)))
(assert (= temp134_119 #x0000000000000004))
(assert (= temp134_120 temp134_119))
(assert (= temp134_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_120)))
(assert (= temp134_122 #x0000000000000005))
(assert (= temp134_123 temp134_122))
(assert (= temp134_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_123)))
(assert (= temp134_126 var1704114))
(assert (= temp134_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_126)))
(assert (= temp134_125 temp134_127))
(assert (= var1716068
   (ite (bvslt temp134_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_128 #x0000000000000000))
(assert (= var1716068 temp134_128))
(assert (= temp134_129 #x0000000000000000))
(assert (= var1704114 temp134_129))
(assert (= temp134_131 var1704114))
(assert (= temp134_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_131)))
(assert (= temp134_130 temp134_132))
(assert (= var1716090 (bvsmod temp134_130 ARGNAME_groups_NAMEEND)))
(assert (= temp134_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp134_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp134_134 #x0000000000000001))
(assert (= var1716091 temp134_134))
(assert (= var1716110 var1716000))
(assert (= temp134_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp134_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp134_136 #x0000000000000001))
(assert (= var1716111 temp134_136))
(assert (= temp134_137 #x0000000000000001))
(assert (= var1705002 temp134_137))
(assert (= temp134_139 var1705002))
(assert (= temp134_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_139)))
(assert (= temp134_138 temp134_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp134_138)))
(assert (= temp134_141 #x0000000000000000))
(assert (= var1704114 temp134_141))
(assert (= temp134_143 var1704114))
(assert (= temp134_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp134_143)))
(assert (= temp134_142 temp134_144))
(assert (= temp134_145 #x0000000000000002))
(assert (= var1979241 temp134_145))
(assert (= temp134_146 #x0000000000000001))
(assert (= var1716281 temp134_146))
(assert (= temp134_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp134_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp134_148 #x0000000000000001))
(assert (= var997490 temp134_148))
(assert (= temp134_149 #x0000000000000001))
(assert (= var997620 temp134_149))
(assert (= var3486185 var997620))
(assert (= temp134_150 #x0000000000000000))
(assert (= var3686207 temp134_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp134_151 #x0000000000000002))
(assert (= var3815043 temp134_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp134_153 #xffffffffffffffff))
(assert (= temp134_152 temp134_153))
(assert (= temp134_155 #xffffffffffffffff))
(assert (= temp134_154 temp134_155))
(assert (= temp134_156 #x0000000000000001))
(assert (= var997490 temp134_156))
(model-add temp134_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp134_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp134_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp134_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp134_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp134_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






