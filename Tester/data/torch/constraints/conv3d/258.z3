(declare-fun temp342_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp342_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp342_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp342_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp342_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp342_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp342_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp342_8 () (_ BitVec 64))
(declare-fun temp342_10 () (_ BitVec 64))
(declare-fun temp342_9 () (_ BitVec 64))
(declare-fun temp342_12 () (_ BitVec 64))
(declare-fun temp342_11 () (_ BitVec 64))
(declare-fun temp342_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp342_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp342_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp342_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp342_17 () (_ BitVec 64))
(declare-fun temp342_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp342_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp342_20 () (_ BitVec 64))
(declare-fun temp342_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp342_22 () (_ BitVec 64))
(declare-fun temp342_23 () (_ BitVec 64))
(declare-fun temp342_24 () (_ BitVec 64))
(declare-fun temp342_25 () (_ BitVec 64))
(declare-fun temp342_26 () (_ BitVec 64))
(declare-fun temp342_27 () (_ BitVec 64))
(declare-fun temp342_28 () (_ BitVec 64))
(declare-fun temp342_29 () (_ BitVec 64))
(declare-fun temp342_30 () (_ BitVec 64))
(declare-fun temp342_31 () (_ BitVec 64))
(declare-fun temp342_32 () (_ BitVec 64))
(declare-fun temp342_33 () (_ BitVec 64))
(declare-fun temp342_34 () (_ BitVec 64))
(declare-fun temp342_35 () (_ BitVec 64))
(declare-fun temp342_36 () (_ BitVec 64))
(declare-fun temp342_37 () (_ BitVec 64))
(declare-fun temp342_38 () (_ BitVec 64))
(declare-fun temp342_39 () (_ BitVec 64))
(declare-fun temp342_40 () (_ BitVec 64))
(declare-fun temp342_41 () (_ BitVec 64))
(declare-fun temp342_42 () (_ BitVec 64))
(declare-fun temp342_43 () (_ BitVec 64))
(declare-fun temp342_44 () (_ BitVec 64))
(declare-fun temp342_45 () (_ BitVec 64))
(declare-fun temp342_46 () (_ BitVec 64))
(declare-fun temp342_47 () (_ BitVec 64))
(declare-fun temp342_48 () (_ BitVec 64))
(declare-fun temp342_49 () (_ BitVec 64))
(declare-fun temp342_50 () (_ BitVec 64))
(declare-fun temp342_51 () (_ BitVec 64))
(declare-fun temp342_52 () (_ BitVec 64))
(declare-fun temp342_53 () (_ BitVec 64))
(declare-fun temp342_54 () (_ BitVec 64))
(declare-fun temp342_55 () (_ BitVec 64))
(declare-fun temp342_56 () (_ BitVec 64))
(declare-fun temp342_57 () (_ BitVec 64))
(declare-fun temp342_58 () (_ BitVec 64))
(declare-fun temp342_59 () (_ BitVec 64))
(declare-fun temp342_60 () (_ BitVec 64))
(declare-fun temp342_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp342_62 () (_ BitVec 64))
(declare-fun temp342_63 () (_ BitVec 64))
(declare-fun temp342_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp342_65 () (_ BitVec 64))
(declare-fun temp342_66 () (_ BitVec 64))
(declare-fun temp342_67 () (_ BitVec 64))
(declare-fun temp342_68 () (_ BitVec 64))
(declare-fun temp342_69 () (_ BitVec 64))
(declare-fun temp342_70 () (_ BitVec 64))
(declare-fun temp342_71 () (_ BitVec 64))
(declare-fun temp342_72 () (_ BitVec 64))
(declare-fun temp342_73 () (_ BitVec 64))
(declare-fun temp342_74 () (_ BitVec 64))
(declare-fun temp342_75 () (_ BitVec 64))
(declare-fun temp342_76 () (_ BitVec 64))
(declare-fun temp342_77 () (_ BitVec 64))
(declare-fun temp342_78 () (_ BitVec 64))
(declare-fun temp342_79 () (_ BitVec 64))
(declare-fun temp342_80 () (_ BitVec 64))
(declare-fun temp342_81 () (_ BitVec 64))
(declare-fun temp342_82 () (_ BitVec 64))
(declare-fun temp342_83 () (_ BitVec 64))
(declare-fun temp342_84 () (_ BitVec 64))
(declare-fun temp342_85 () (_ BitVec 64))
(declare-fun temp342_86 () (_ BitVec 64))
(declare-fun temp342_87 () (_ BitVec 64))
(declare-fun temp342_88 () (_ BitVec 64))
(declare-fun temp342_89 () (_ BitVec 64))
(declare-fun temp342_90 () (_ BitVec 64))
(declare-fun temp342_91 () (_ BitVec 64))
(declare-fun temp342_92 () (_ BitVec 64))
(declare-fun temp342_93 () (_ BitVec 64))
(declare-fun temp342_94 () (_ BitVec 64))
(declare-fun temp342_95 () (_ BitVec 64))
(declare-fun temp342_96 () (_ BitVec 64))
(declare-fun temp342_97 () (_ BitVec 64))
(declare-fun temp342_98 () (_ BitVec 64))
(declare-fun temp342_99 () (_ BitVec 64))
(declare-fun temp342_100 () (_ BitVec 64))
(declare-fun temp342_101 () (_ BitVec 64))
(declare-fun temp342_102 () (_ BitVec 64))
(declare-fun temp342_103 () (_ BitVec 64))
(declare-fun temp342_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp342_105 () (_ BitVec 64))
(declare-fun temp342_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp342_107 () (_ BitVec 64))
(declare-fun temp342_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp342_109 () (_ BitVec 64))
(declare-fun temp342_110 () (_ BitVec 64))
(declare-fun temp342_111 () (_ BitVec 64))
(declare-fun temp342_112 () (_ BitVec 64))
(declare-fun temp342_113 () (_ BitVec 64))
(declare-fun temp342_114 () (_ BitVec 64))
(declare-fun temp342_115 () (_ BitVec 64))
(declare-fun temp342_116 () (_ BitVec 64))
(declare-fun temp342_117 () (_ BitVec 64))
(declare-fun temp342_118 () (_ BitVec 64))
(declare-fun temp342_119 () (_ BitVec 64))
(declare-fun temp342_120 () (_ BitVec 64))
(declare-fun temp342_121 () (_ BitVec 64))
(declare-fun temp342_122 () (_ BitVec 64))
(declare-fun temp342_123 () (_ BitVec 64))
(declare-fun temp342_124 () (_ BitVec 64))
(declare-fun temp342_126 () (_ BitVec 64))
(declare-fun temp342_127 () (_ BitVec 64))
(declare-fun temp342_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp342_128 () (_ BitVec 64))
(declare-fun temp342_129 () (_ BitVec 64))
(declare-fun temp342_131 () (_ BitVec 64))
(declare-fun temp342_132 () (_ BitVec 64))
(declare-fun temp342_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp342_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp342_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp342_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp342_136 () (_ BitVec 64))
(declare-fun temp342_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp342_139 () (_ BitVec 64))
(declare-fun temp342_140 () (_ BitVec 64))
(declare-fun temp342_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp342_141 () (_ BitVec 64))
(declare-fun temp342_143 () (_ BitVec 64))
(declare-fun temp342_144 () (_ BitVec 64))
(declare-fun temp342_142 () (_ BitVec 64))
(declare-fun temp342_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp342_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp342_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp342_148 () (_ BitVec 64))
(declare-fun temp342_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp342_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp342_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun temp342_152 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp342_153 () (_ BitVec 64))
(assert (= temp342_1 #x0000000000000003))
(assert (= var465453 temp342_1))
(assert (= temp342_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp342_2)))
(assert (= temp342_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp342_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp342_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp342_4)))
(assert (= temp342_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp342_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp342_6 #x0000000000000000))
(assert (= var465488 temp342_6))
(assert (= temp342_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp342_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp342_8 #x0000000000000001))
(assert (= var465522 temp342_8))
(assert (= temp342_10 #x0000000000000000))
(assert (= temp342_9 temp342_10))
(assert (= temp342_12 #x0000000000000003))
(assert (= temp342_11 temp342_12))
(assert (= temp342_13 #x0000000000000000))
(assert (= var863614 temp342_13))
(assert (= temp342_14 #x0000000000000001))
(assert (= var863635 temp342_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp342_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp342_15)))
(assert (= temp342_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp342_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp342_17 #x0000000000000000))
(assert (= var997373 temp342_17))
(assert (= temp342_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp342_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp342_19 #x0000000000000000))
(assert (= var997418 temp342_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp342_20 #x0000000000000000))
(assert (= temp342_21 temp342_20))
(assert (= temp342_22 (select ARGNAME_padding_NAMEEND_VAL temp342_21)))
(assert (= temp342_23 #x0000000000000001))
(assert (= temp342_24 temp342_23))
(assert (= temp342_25 (select ARGNAME_padding_NAMEEND_VAL temp342_24)))
(assert (= temp342_26 #x0000000000000002))
(assert (= temp342_27 temp342_26))
(assert (= temp342_28 (select ARGNAME_padding_NAMEEND_VAL temp342_27)))
(assert (= temp342_29 #x0000000000000003))
(assert (= temp342_30 temp342_29))
(assert (= temp342_31 (select ARGNAME_padding_NAMEEND_VAL temp342_30)))
(assert (= temp342_32 #x0000000000000004))
(assert (= temp342_33 temp342_32))
(assert (= temp342_34 (select ARGNAME_padding_NAMEEND_VAL temp342_33)))
(assert (= temp342_35 #x0000000000000005))
(assert (= temp342_36 temp342_35))
(assert (= temp342_37 (select ARGNAME_padding_NAMEEND_VAL temp342_36)))
(assert (= temp342_38 #x0000000000000000))
(assert (= temp342_39 #x0000000000000000))
(assert (= temp342_40 temp342_39))
(assert (= temp342_41 (select ARGNAME_padding_NAMEEND_VAL temp342_40)))
(assert (= temp342_42 #x0000000000000000))
(assert (= temp342_43 #x0000000000000001))
(assert (= temp342_44 temp342_43))
(assert (= temp342_45 (select ARGNAME_padding_NAMEEND_VAL temp342_44)))
(assert (= temp342_46 #x0000000000000000))
(assert (= temp342_47 #x0000000000000002))
(assert (= temp342_48 temp342_47))
(assert (= temp342_49 (select ARGNAME_padding_NAMEEND_VAL temp342_48)))
(assert (= temp342_50 #x0000000000000000))
(assert (= temp342_51 #x0000000000000003))
(assert (= temp342_52 temp342_51))
(assert (= temp342_53 (select ARGNAME_padding_NAMEEND_VAL temp342_52)))
(assert (= temp342_54 #x0000000000000000))
(assert (= temp342_55 #x0000000000000004))
(assert (= temp342_56 temp342_55))
(assert (= temp342_57 (select ARGNAME_padding_NAMEEND_VAL temp342_56)))
(assert (= temp342_58 #x0000000000000000))
(assert (= temp342_59 #x0000000000000005))
(assert (= temp342_60 temp342_59))
(assert (= temp342_61 (select ARGNAME_padding_NAMEEND_VAL temp342_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp342_41 temp342_38)
             (bvslt temp342_45 temp342_42)
             (bvslt temp342_49 temp342_46)
             (bvslt temp342_53 temp342_50)
             (bvslt temp342_57 temp342_54)
             (bvslt temp342_61 temp342_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp342_62 #x0000000000000000))
(assert (= var1716002 temp342_62))
(assert (= temp342_63 #x0000000000000000))
(assert (= temp342_64 temp342_63))
(assert (= temp342_65 (select ARGNAME_stride_NAMEEND_VAL temp342_64)))
(assert (= temp342_66 #x0000000000000001))
(assert (= temp342_67 temp342_66))
(assert (= temp342_68 (select ARGNAME_stride_NAMEEND_VAL temp342_67)))
(assert (= temp342_69 #x0000000000000002))
(assert (= temp342_70 temp342_69))
(assert (= temp342_71 (select ARGNAME_stride_NAMEEND_VAL temp342_70)))
(assert (= temp342_72 #x0000000000000003))
(assert (= temp342_73 temp342_72))
(assert (= temp342_74 (select ARGNAME_stride_NAMEEND_VAL temp342_73)))
(assert (= temp342_75 #x0000000000000004))
(assert (= temp342_76 temp342_75))
(assert (= temp342_77 (select ARGNAME_stride_NAMEEND_VAL temp342_76)))
(assert (= temp342_78 #x0000000000000005))
(assert (= temp342_79 temp342_78))
(assert (= temp342_80 (select ARGNAME_stride_NAMEEND_VAL temp342_79)))
(assert (= temp342_81 #x0000000000000000))
(assert (= temp342_82 #x0000000000000000))
(assert (= temp342_83 temp342_82))
(assert (= temp342_84 (select ARGNAME_stride_NAMEEND_VAL temp342_83)))
(assert (= temp342_85 #x0000000000000000))
(assert (= temp342_86 #x0000000000000001))
(assert (= temp342_87 temp342_86))
(assert (= temp342_88 (select ARGNAME_stride_NAMEEND_VAL temp342_87)))
(assert (= temp342_89 #x0000000000000000))
(assert (= temp342_90 #x0000000000000002))
(assert (= temp342_91 temp342_90))
(assert (= temp342_92 (select ARGNAME_stride_NAMEEND_VAL temp342_91)))
(assert (= temp342_93 #x0000000000000000))
(assert (= temp342_94 #x0000000000000003))
(assert (= temp342_95 temp342_94))
(assert (= temp342_96 (select ARGNAME_stride_NAMEEND_VAL temp342_95)))
(assert (= temp342_97 #x0000000000000000))
(assert (= temp342_98 #x0000000000000004))
(assert (= temp342_99 temp342_98))
(assert (= temp342_100 (select ARGNAME_stride_NAMEEND_VAL temp342_99)))
(assert (= temp342_101 #x0000000000000000))
(assert (= temp342_102 #x0000000000000005))
(assert (= temp342_103 temp342_102))
(assert (= temp342_104 (select ARGNAME_stride_NAMEEND_VAL temp342_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp342_84 temp342_81)
             (bvsle temp342_88 temp342_85)
             (bvsle temp342_92 temp342_89)
             (bvsle temp342_96 temp342_93)
             (bvsle temp342_100 temp342_97)
             (bvsle temp342_104 temp342_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp342_105 #x0000000000000000))
(assert (= var1716023 temp342_105))
(assert (= temp342_106 #x0000000000000000))
(assert (= var1704114 temp342_106))
(assert (= temp342_107 #x0000000000000000))
(assert (= temp342_108 temp342_107))
(assert (= temp342_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_108)))
(assert (= temp342_110 #x0000000000000001))
(assert (= temp342_111 temp342_110))
(assert (= temp342_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_111)))
(assert (= temp342_113 #x0000000000000002))
(assert (= temp342_114 temp342_113))
(assert (= temp342_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_114)))
(assert (= temp342_116 #x0000000000000003))
(assert (= temp342_117 temp342_116))
(assert (= temp342_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_117)))
(assert (= temp342_119 #x0000000000000004))
(assert (= temp342_120 temp342_119))
(assert (= temp342_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_120)))
(assert (= temp342_122 #x0000000000000005))
(assert (= temp342_123 temp342_122))
(assert (= temp342_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_123)))
(assert (= temp342_126 var1704114))
(assert (= temp342_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_126)))
(assert (= temp342_125 temp342_127))
(assert (= var1716068
   (ite (bvslt temp342_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp342_128 #x0000000000000000))
(assert (= var1716068 temp342_128))
(assert (= temp342_129 #x0000000000000000))
(assert (= var1704114 temp342_129))
(assert (= temp342_131 var1704114))
(assert (= temp342_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_131)))
(assert (= temp342_130 temp342_132))
(assert (= var1716090 (bvsmod temp342_130 ARGNAME_groups_NAMEEND)))
(assert (= temp342_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp342_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp342_134 #x0000000000000001))
(assert (= var1716091 temp342_134))
(assert (= var1716110 var1716000))
(assert (= temp342_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp342_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp342_136 #x0000000000000001))
(assert (= var1716111 temp342_136))
(assert (= temp342_137 #x0000000000000001))
(assert (= var1705002 temp342_137))
(assert (= temp342_139 var1705002))
(assert (= temp342_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_139)))
(assert (= temp342_138 temp342_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp342_138)))
(assert (= temp342_141 #x0000000000000000))
(assert (= var1704114 temp342_141))
(assert (= temp342_143 var1704114))
(assert (= temp342_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp342_143)))
(assert (= temp342_142 temp342_144))
(assert (= temp342_145 #x0000000000000002))
(assert (= var1979241 temp342_145))
(assert (= temp342_146 #x0000000000000001))
(assert (= var1716281 temp342_146))
(assert (= temp342_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp342_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp342_148 #x0000000000000001))
(assert (= var997490 temp342_148))
(assert (= temp342_149 #x0000000000000001))
(assert (= var997620 temp342_149))
(assert (= var3486185 var997620))
(assert (= temp342_150 #x0000000000000000))
(assert (= var3686207 temp342_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp342_151 #x0000000000000002))
(assert (= var3815043 temp342_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4796816 var997633))
(assert (= var5058960 var997633))
(assert (= temp342_152 #x0000000000000000))
(assert (= var5386640 temp342_152))
(assert (= temp342_153 #x0000000000000001))
(assert (= var997490 temp342_153))
(model-add temp342_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp342_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp342_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp342_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp342_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp342_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






