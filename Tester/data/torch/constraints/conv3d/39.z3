(declare-fun temp51_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp51_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp51_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp51_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp51_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp51_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp51_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp51_8 () (_ BitVec 64))
(declare-fun temp51_10 () (_ BitVec 64))
(declare-fun temp51_9 () (_ BitVec 64))
(declare-fun temp51_12 () (_ BitVec 64))
(declare-fun temp51_11 () (_ BitVec 64))
(declare-fun temp51_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp51_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp51_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp51_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp51_17 () (_ BitVec 64))
(declare-fun temp51_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp51_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp51_20 () (_ BitVec 64))
(declare-fun temp51_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp51_22 () (_ BitVec 64))
(declare-fun temp51_23 () (_ BitVec 64))
(declare-fun temp51_24 () (_ BitVec 64))
(declare-fun temp51_25 () (_ BitVec 64))
(declare-fun temp51_26 () (_ BitVec 64))
(declare-fun temp51_27 () (_ BitVec 64))
(declare-fun temp51_28 () (_ BitVec 64))
(declare-fun temp51_29 () (_ BitVec 64))
(declare-fun temp51_30 () (_ BitVec 64))
(declare-fun temp51_31 () (_ BitVec 64))
(declare-fun temp51_32 () (_ BitVec 64))
(declare-fun temp51_33 () (_ BitVec 64))
(declare-fun temp51_34 () (_ BitVec 64))
(declare-fun temp51_35 () (_ BitVec 64))
(declare-fun temp51_36 () (_ BitVec 64))
(declare-fun temp51_37 () (_ BitVec 64))
(declare-fun temp51_38 () (_ BitVec 64))
(declare-fun temp51_39 () (_ BitVec 64))
(declare-fun temp51_40 () (_ BitVec 64))
(declare-fun temp51_41 () (_ BitVec 64))
(declare-fun temp51_42 () (_ BitVec 64))
(declare-fun temp51_43 () (_ BitVec 64))
(declare-fun temp51_44 () (_ BitVec 64))
(declare-fun temp51_45 () (_ BitVec 64))
(declare-fun temp51_46 () (_ BitVec 64))
(declare-fun temp51_47 () (_ BitVec 64))
(declare-fun temp51_48 () (_ BitVec 64))
(declare-fun temp51_49 () (_ BitVec 64))
(declare-fun temp51_50 () (_ BitVec 64))
(declare-fun temp51_51 () (_ BitVec 64))
(declare-fun temp51_52 () (_ BitVec 64))
(declare-fun temp51_53 () (_ BitVec 64))
(declare-fun temp51_54 () (_ BitVec 64))
(declare-fun temp51_55 () (_ BitVec 64))
(declare-fun temp51_56 () (_ BitVec 64))
(declare-fun temp51_57 () (_ BitVec 64))
(declare-fun temp51_58 () (_ BitVec 64))
(declare-fun temp51_59 () (_ BitVec 64))
(declare-fun temp51_60 () (_ BitVec 64))
(declare-fun temp51_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp51_62 () (_ BitVec 64))
(declare-fun temp51_63 () (_ BitVec 64))
(declare-fun temp51_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp51_65 () (_ BitVec 64))
(declare-fun temp51_66 () (_ BitVec 64))
(declare-fun temp51_67 () (_ BitVec 64))
(declare-fun temp51_68 () (_ BitVec 64))
(declare-fun temp51_69 () (_ BitVec 64))
(declare-fun temp51_70 () (_ BitVec 64))
(declare-fun temp51_71 () (_ BitVec 64))
(declare-fun temp51_72 () (_ BitVec 64))
(declare-fun temp51_73 () (_ BitVec 64))
(declare-fun temp51_74 () (_ BitVec 64))
(declare-fun temp51_75 () (_ BitVec 64))
(declare-fun temp51_76 () (_ BitVec 64))
(declare-fun temp51_77 () (_ BitVec 64))
(declare-fun temp51_78 () (_ BitVec 64))
(declare-fun temp51_79 () (_ BitVec 64))
(declare-fun temp51_80 () (_ BitVec 64))
(declare-fun temp51_81 () (_ BitVec 64))
(declare-fun temp51_82 () (_ BitVec 64))
(declare-fun temp51_83 () (_ BitVec 64))
(declare-fun temp51_84 () (_ BitVec 64))
(declare-fun temp51_85 () (_ BitVec 64))
(declare-fun temp51_86 () (_ BitVec 64))
(declare-fun temp51_87 () (_ BitVec 64))
(declare-fun temp51_88 () (_ BitVec 64))
(declare-fun temp51_89 () (_ BitVec 64))
(declare-fun temp51_90 () (_ BitVec 64))
(declare-fun temp51_91 () (_ BitVec 64))
(declare-fun temp51_92 () (_ BitVec 64))
(declare-fun temp51_93 () (_ BitVec 64))
(declare-fun temp51_94 () (_ BitVec 64))
(declare-fun temp51_95 () (_ BitVec 64))
(declare-fun temp51_96 () (_ BitVec 64))
(declare-fun temp51_97 () (_ BitVec 64))
(declare-fun temp51_98 () (_ BitVec 64))
(declare-fun temp51_99 () (_ BitVec 64))
(declare-fun temp51_100 () (_ BitVec 64))
(declare-fun temp51_101 () (_ BitVec 64))
(declare-fun temp51_102 () (_ BitVec 64))
(declare-fun temp51_103 () (_ BitVec 64))
(declare-fun temp51_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp51_105 () (_ BitVec 64))
(declare-fun temp51_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp51_107 () (_ BitVec 64))
(declare-fun temp51_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp51_109 () (_ BitVec 64))
(declare-fun temp51_110 () (_ BitVec 64))
(declare-fun temp51_111 () (_ BitVec 64))
(declare-fun temp51_112 () (_ BitVec 64))
(declare-fun temp51_113 () (_ BitVec 64))
(declare-fun temp51_114 () (_ BitVec 64))
(declare-fun temp51_115 () (_ BitVec 64))
(declare-fun temp51_116 () (_ BitVec 64))
(declare-fun temp51_117 () (_ BitVec 64))
(declare-fun temp51_118 () (_ BitVec 64))
(declare-fun temp51_119 () (_ BitVec 64))
(declare-fun temp51_120 () (_ BitVec 64))
(declare-fun temp51_121 () (_ BitVec 64))
(declare-fun temp51_122 () (_ BitVec 64))
(declare-fun temp51_123 () (_ BitVec 64))
(declare-fun temp51_124 () (_ BitVec 64))
(declare-fun temp51_126 () (_ BitVec 64))
(declare-fun temp51_127 () (_ BitVec 64))
(declare-fun temp51_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp51_128 () (_ BitVec 64))
(declare-fun temp51_129 () (_ BitVec 64))
(declare-fun temp51_131 () (_ BitVec 64))
(declare-fun temp51_132 () (_ BitVec 64))
(declare-fun temp51_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp51_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp51_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp51_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp51_136 () (_ BitVec 64))
(declare-fun temp51_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp51_139 () (_ BitVec 64))
(declare-fun temp51_140 () (_ BitVec 64))
(declare-fun temp51_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp51_141 () (_ BitVec 64))
(declare-fun temp51_143 () (_ BitVec 64))
(declare-fun temp51_144 () (_ BitVec 64))
(declare-fun temp51_142 () (_ BitVec 64))
(declare-fun temp51_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp51_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp51_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp51_148 () (_ BitVec 64))
(declare-fun temp51_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp51_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp51_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp51_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var4996941 () (_ BitVec 64))
(declare-fun temp51_154 () (_ BitVec 64))
(declare-fun temp51_153 () (_ BitVec 64))
(declare-fun temp51_155 () (_ BitVec 64))
(declare-fun var5574122 () (_ BitVec 64))
(declare-fun temp51_157 () (_ BitVec 64))
(declare-fun temp51_156 () (_ BitVec 64))
(declare-fun temp51_158 () (_ BitVec 64))
(assert (= temp51_1 #x0000000000000003))
(assert (= var465453 temp51_1))
(assert (= temp51_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp51_2)))
(assert (= temp51_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp51_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp51_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp51_4)))
(assert (= temp51_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp51_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp51_6 #x0000000000000000))
(assert (= var465488 temp51_6))
(assert (= temp51_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp51_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp51_8 #x0000000000000001))
(assert (= var465522 temp51_8))
(assert (= temp51_10 #x0000000000000000))
(assert (= temp51_9 temp51_10))
(assert (= temp51_12 #x0000000000000003))
(assert (= temp51_11 temp51_12))
(assert (= temp51_13 #x0000000000000000))
(assert (= var863614 temp51_13))
(assert (= temp51_14 #x0000000000000001))
(assert (= var863635 temp51_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp51_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp51_15)))
(assert (= temp51_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp51_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp51_17 #x0000000000000000))
(assert (= var997373 temp51_17))
(assert (= temp51_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp51_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp51_19 #x0000000000000000))
(assert (= var997418 temp51_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp51_20 #x0000000000000000))
(assert (= temp51_21 temp51_20))
(assert (= temp51_22 (select ARGNAME_padding_NAMEEND_VAL temp51_21)))
(assert (= temp51_23 #x0000000000000001))
(assert (= temp51_24 temp51_23))
(assert (= temp51_25 (select ARGNAME_padding_NAMEEND_VAL temp51_24)))
(assert (= temp51_26 #x0000000000000002))
(assert (= temp51_27 temp51_26))
(assert (= temp51_28 (select ARGNAME_padding_NAMEEND_VAL temp51_27)))
(assert (= temp51_29 #x0000000000000003))
(assert (= temp51_30 temp51_29))
(assert (= temp51_31 (select ARGNAME_padding_NAMEEND_VAL temp51_30)))
(assert (= temp51_32 #x0000000000000004))
(assert (= temp51_33 temp51_32))
(assert (= temp51_34 (select ARGNAME_padding_NAMEEND_VAL temp51_33)))
(assert (= temp51_35 #x0000000000000005))
(assert (= temp51_36 temp51_35))
(assert (= temp51_37 (select ARGNAME_padding_NAMEEND_VAL temp51_36)))
(assert (= temp51_38 #x0000000000000000))
(assert (= temp51_39 #x0000000000000000))
(assert (= temp51_40 temp51_39))
(assert (= temp51_41 (select ARGNAME_padding_NAMEEND_VAL temp51_40)))
(assert (= temp51_42 #x0000000000000000))
(assert (= temp51_43 #x0000000000000001))
(assert (= temp51_44 temp51_43))
(assert (= temp51_45 (select ARGNAME_padding_NAMEEND_VAL temp51_44)))
(assert (= temp51_46 #x0000000000000000))
(assert (= temp51_47 #x0000000000000002))
(assert (= temp51_48 temp51_47))
(assert (= temp51_49 (select ARGNAME_padding_NAMEEND_VAL temp51_48)))
(assert (= temp51_50 #x0000000000000000))
(assert (= temp51_51 #x0000000000000003))
(assert (= temp51_52 temp51_51))
(assert (= temp51_53 (select ARGNAME_padding_NAMEEND_VAL temp51_52)))
(assert (= temp51_54 #x0000000000000000))
(assert (= temp51_55 #x0000000000000004))
(assert (= temp51_56 temp51_55))
(assert (= temp51_57 (select ARGNAME_padding_NAMEEND_VAL temp51_56)))
(assert (= temp51_58 #x0000000000000000))
(assert (= temp51_59 #x0000000000000005))
(assert (= temp51_60 temp51_59))
(assert (= temp51_61 (select ARGNAME_padding_NAMEEND_VAL temp51_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp51_41 temp51_38)
             (bvslt temp51_45 temp51_42)
             (bvslt temp51_49 temp51_46)
             (bvslt temp51_53 temp51_50)
             (bvslt temp51_57 temp51_54)
             (bvslt temp51_61 temp51_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp51_62 #x0000000000000000))
(assert (= var1716002 temp51_62))
(assert (= temp51_63 #x0000000000000000))
(assert (= temp51_64 temp51_63))
(assert (= temp51_65 (select ARGNAME_stride_NAMEEND_VAL temp51_64)))
(assert (= temp51_66 #x0000000000000001))
(assert (= temp51_67 temp51_66))
(assert (= temp51_68 (select ARGNAME_stride_NAMEEND_VAL temp51_67)))
(assert (= temp51_69 #x0000000000000002))
(assert (= temp51_70 temp51_69))
(assert (= temp51_71 (select ARGNAME_stride_NAMEEND_VAL temp51_70)))
(assert (= temp51_72 #x0000000000000003))
(assert (= temp51_73 temp51_72))
(assert (= temp51_74 (select ARGNAME_stride_NAMEEND_VAL temp51_73)))
(assert (= temp51_75 #x0000000000000004))
(assert (= temp51_76 temp51_75))
(assert (= temp51_77 (select ARGNAME_stride_NAMEEND_VAL temp51_76)))
(assert (= temp51_78 #x0000000000000005))
(assert (= temp51_79 temp51_78))
(assert (= temp51_80 (select ARGNAME_stride_NAMEEND_VAL temp51_79)))
(assert (= temp51_81 #x0000000000000000))
(assert (= temp51_82 #x0000000000000000))
(assert (= temp51_83 temp51_82))
(assert (= temp51_84 (select ARGNAME_stride_NAMEEND_VAL temp51_83)))
(assert (= temp51_85 #x0000000000000000))
(assert (= temp51_86 #x0000000000000001))
(assert (= temp51_87 temp51_86))
(assert (= temp51_88 (select ARGNAME_stride_NAMEEND_VAL temp51_87)))
(assert (= temp51_89 #x0000000000000000))
(assert (= temp51_90 #x0000000000000002))
(assert (= temp51_91 temp51_90))
(assert (= temp51_92 (select ARGNAME_stride_NAMEEND_VAL temp51_91)))
(assert (= temp51_93 #x0000000000000000))
(assert (= temp51_94 #x0000000000000003))
(assert (= temp51_95 temp51_94))
(assert (= temp51_96 (select ARGNAME_stride_NAMEEND_VAL temp51_95)))
(assert (= temp51_97 #x0000000000000000))
(assert (= temp51_98 #x0000000000000004))
(assert (= temp51_99 temp51_98))
(assert (= temp51_100 (select ARGNAME_stride_NAMEEND_VAL temp51_99)))
(assert (= temp51_101 #x0000000000000000))
(assert (= temp51_102 #x0000000000000005))
(assert (= temp51_103 temp51_102))
(assert (= temp51_104 (select ARGNAME_stride_NAMEEND_VAL temp51_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp51_84 temp51_81)
             (bvsle temp51_88 temp51_85)
             (bvsle temp51_92 temp51_89)
             (bvsle temp51_96 temp51_93)
             (bvsle temp51_100 temp51_97)
             (bvsle temp51_104 temp51_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp51_105 #x0000000000000000))
(assert (= var1716023 temp51_105))
(assert (= temp51_106 #x0000000000000000))
(assert (= var1704114 temp51_106))
(assert (= temp51_107 #x0000000000000000))
(assert (= temp51_108 temp51_107))
(assert (= temp51_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_108)))
(assert (= temp51_110 #x0000000000000001))
(assert (= temp51_111 temp51_110))
(assert (= temp51_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_111)))
(assert (= temp51_113 #x0000000000000002))
(assert (= temp51_114 temp51_113))
(assert (= temp51_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_114)))
(assert (= temp51_116 #x0000000000000003))
(assert (= temp51_117 temp51_116))
(assert (= temp51_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_117)))
(assert (= temp51_119 #x0000000000000004))
(assert (= temp51_120 temp51_119))
(assert (= temp51_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_120)))
(assert (= temp51_122 #x0000000000000005))
(assert (= temp51_123 temp51_122))
(assert (= temp51_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_123)))
(assert (= temp51_126 var1704114))
(assert (= temp51_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_126)))
(assert (= temp51_125 temp51_127))
(assert (= var1716068
   (ite (bvslt temp51_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp51_128 #x0000000000000000))
(assert (= var1716068 temp51_128))
(assert (= temp51_129 #x0000000000000000))
(assert (= var1704114 temp51_129))
(assert (= temp51_131 var1704114))
(assert (= temp51_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_131)))
(assert (= temp51_130 temp51_132))
(assert (= var1716090 (bvsmod temp51_130 ARGNAME_groups_NAMEEND)))
(assert (= temp51_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp51_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp51_134 #x0000000000000001))
(assert (= var1716091 temp51_134))
(assert (= var1716110 var1716000))
(assert (= temp51_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp51_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp51_136 #x0000000000000001))
(assert (= var1716111 temp51_136))
(assert (= temp51_137 #x0000000000000001))
(assert (= var1705002 temp51_137))
(assert (= temp51_139 var1705002))
(assert (= temp51_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_139)))
(assert (= temp51_138 temp51_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp51_138)))
(assert (= temp51_141 #x0000000000000000))
(assert (= var1704114 temp51_141))
(assert (= temp51_143 var1704114))
(assert (= temp51_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp51_143)))
(assert (= temp51_142 temp51_144))
(assert (= temp51_145 #x0000000000000002))
(assert (= var1979241 temp51_145))
(assert (= temp51_146 #x0000000000000001))
(assert (= var1716281 temp51_146))
(assert (= temp51_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp51_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp51_148 #x0000000000000001))
(assert (= var997490 temp51_148))
(assert (= temp51_149 #x0000000000000001))
(assert (= var997620 temp51_149))
(assert (= var3486185 var997620))
(assert (= temp51_150 #x0000000000000000))
(assert (= var3686207 temp51_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp51_151 #x0000000000000002))
(assert (= var3815043 temp51_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var997820 var997345))
(assert (= temp51_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp51_152) #x0000000000000001 #x0000000000000000)))
(assert (= var4996941 var997821))
(assert (= temp51_154 #x0000000000000001))
(assert (= temp51_153 temp51_154))
(assert (= temp51_155 #x0000000000000001))
(assert (= var5574122 temp51_155))
(assert (= temp51_157 #xffffffffffffffff))
(assert (= temp51_156 temp51_157))
(assert (= temp51_158 #x0000000000000001))
(assert (= var997490 temp51_158))
(model-add temp51_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp51_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp51_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp51_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp51_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp51_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






