(declare-fun temp198_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp198_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp198_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp198_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp198_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp198_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp198_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp198_8 () (_ BitVec 64))
(declare-fun temp198_10 () (_ BitVec 64))
(declare-fun temp198_9 () (_ BitVec 64))
(declare-fun temp198_12 () (_ BitVec 64))
(declare-fun temp198_11 () (_ BitVec 64))
(declare-fun temp198_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp198_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp198_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp198_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp198_17 () (_ BitVec 64))
(declare-fun temp198_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp198_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp198_20 () (_ BitVec 64))
(declare-fun temp198_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_22 () (_ BitVec 64))
(declare-fun temp198_23 () (_ BitVec 64))
(declare-fun temp198_24 () (_ BitVec 64))
(declare-fun temp198_25 () (_ BitVec 64))
(declare-fun temp198_26 () (_ BitVec 64))
(declare-fun temp198_27 () (_ BitVec 64))
(declare-fun temp198_28 () (_ BitVec 64))
(declare-fun temp198_29 () (_ BitVec 64))
(declare-fun temp198_30 () (_ BitVec 64))
(declare-fun temp198_31 () (_ BitVec 64))
(declare-fun temp198_32 () (_ BitVec 64))
(declare-fun temp198_33 () (_ BitVec 64))
(declare-fun temp198_34 () (_ BitVec 64))
(declare-fun temp198_35 () (_ BitVec 64))
(declare-fun temp198_36 () (_ BitVec 64))
(declare-fun temp198_37 () (_ BitVec 64))
(declare-fun temp198_38 () (_ BitVec 64))
(declare-fun temp198_39 () (_ BitVec 64))
(declare-fun temp198_40 () (_ BitVec 64))
(declare-fun temp198_41 () (_ BitVec 64))
(declare-fun temp198_42 () (_ BitVec 64))
(declare-fun temp198_43 () (_ BitVec 64))
(declare-fun temp198_44 () (_ BitVec 64))
(declare-fun temp198_45 () (_ BitVec 64))
(declare-fun temp198_46 () (_ BitVec 64))
(declare-fun temp198_47 () (_ BitVec 64))
(declare-fun temp198_48 () (_ BitVec 64))
(declare-fun temp198_49 () (_ BitVec 64))
(declare-fun temp198_50 () (_ BitVec 64))
(declare-fun temp198_51 () (_ BitVec 64))
(declare-fun temp198_52 () (_ BitVec 64))
(declare-fun temp198_53 () (_ BitVec 64))
(declare-fun temp198_54 () (_ BitVec 64))
(declare-fun temp198_55 () (_ BitVec 64))
(declare-fun temp198_56 () (_ BitVec 64))
(declare-fun temp198_57 () (_ BitVec 64))
(declare-fun temp198_58 () (_ BitVec 64))
(declare-fun temp198_59 () (_ BitVec 64))
(declare-fun temp198_60 () (_ BitVec 64))
(declare-fun temp198_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp198_62 () (_ BitVec 64))
(declare-fun temp198_63 () (_ BitVec 64))
(declare-fun temp198_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_65 () (_ BitVec 64))
(declare-fun temp198_66 () (_ BitVec 64))
(declare-fun temp198_67 () (_ BitVec 64))
(declare-fun temp198_68 () (_ BitVec 64))
(declare-fun temp198_69 () (_ BitVec 64))
(declare-fun temp198_70 () (_ BitVec 64))
(declare-fun temp198_71 () (_ BitVec 64))
(declare-fun temp198_72 () (_ BitVec 64))
(declare-fun temp198_73 () (_ BitVec 64))
(declare-fun temp198_74 () (_ BitVec 64))
(declare-fun temp198_75 () (_ BitVec 64))
(declare-fun temp198_76 () (_ BitVec 64))
(declare-fun temp198_77 () (_ BitVec 64))
(declare-fun temp198_78 () (_ BitVec 64))
(declare-fun temp198_79 () (_ BitVec 64))
(declare-fun temp198_80 () (_ BitVec 64))
(declare-fun temp198_81 () (_ BitVec 64))
(declare-fun temp198_82 () (_ BitVec 64))
(declare-fun temp198_83 () (_ BitVec 64))
(declare-fun temp198_84 () (_ BitVec 64))
(declare-fun temp198_85 () (_ BitVec 64))
(declare-fun temp198_86 () (_ BitVec 64))
(declare-fun temp198_87 () (_ BitVec 64))
(declare-fun temp198_88 () (_ BitVec 64))
(declare-fun temp198_89 () (_ BitVec 64))
(declare-fun temp198_90 () (_ BitVec 64))
(declare-fun temp198_91 () (_ BitVec 64))
(declare-fun temp198_92 () (_ BitVec 64))
(declare-fun temp198_93 () (_ BitVec 64))
(declare-fun temp198_94 () (_ BitVec 64))
(declare-fun temp198_95 () (_ BitVec 64))
(declare-fun temp198_96 () (_ BitVec 64))
(declare-fun temp198_97 () (_ BitVec 64))
(declare-fun temp198_98 () (_ BitVec 64))
(declare-fun temp198_99 () (_ BitVec 64))
(declare-fun temp198_100 () (_ BitVec 64))
(declare-fun temp198_101 () (_ BitVec 64))
(declare-fun temp198_102 () (_ BitVec 64))
(declare-fun temp198_103 () (_ BitVec 64))
(declare-fun temp198_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp198_105 () (_ BitVec 64))
(declare-fun temp198_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp198_107 () (_ BitVec 64))
(declare-fun temp198_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_109 () (_ BitVec 64))
(declare-fun temp198_110 () (_ BitVec 64))
(declare-fun temp198_111 () (_ BitVec 64))
(declare-fun temp198_112 () (_ BitVec 64))
(declare-fun temp198_113 () (_ BitVec 64))
(declare-fun temp198_114 () (_ BitVec 64))
(declare-fun temp198_115 () (_ BitVec 64))
(declare-fun temp198_116 () (_ BitVec 64))
(declare-fun temp198_117 () (_ BitVec 64))
(declare-fun temp198_118 () (_ BitVec 64))
(declare-fun temp198_119 () (_ BitVec 64))
(declare-fun temp198_120 () (_ BitVec 64))
(declare-fun temp198_121 () (_ BitVec 64))
(declare-fun temp198_122 () (_ BitVec 64))
(declare-fun temp198_123 () (_ BitVec 64))
(declare-fun temp198_124 () (_ BitVec 64))
(declare-fun temp198_126 () (_ BitVec 64))
(declare-fun temp198_127 () (_ BitVec 64))
(declare-fun temp198_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp198_128 () (_ BitVec 64))
(declare-fun temp198_129 () (_ BitVec 64))
(declare-fun temp198_131 () (_ BitVec 64))
(declare-fun temp198_132 () (_ BitVec 64))
(declare-fun temp198_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp198_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp198_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp198_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp198_136 () (_ BitVec 64))
(declare-fun temp198_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp198_139 () (_ BitVec 64))
(declare-fun temp198_140 () (_ BitVec 64))
(declare-fun temp198_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp198_141 () (_ BitVec 64))
(declare-fun temp198_143 () (_ BitVec 64))
(declare-fun temp198_144 () (_ BitVec 64))
(declare-fun temp198_142 () (_ BitVec 64))
(declare-fun temp198_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp198_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp198_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp198_148 () (_ BitVec 64))
(declare-fun temp198_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp198_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp198_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp198_153 () (_ BitVec 64))
(declare-fun temp198_152 () (_ BitVec 64))
(declare-fun temp198_154 () (_ BitVec 64))
(assert (= temp198_1 #x0000000000000003))
(assert (= var465453 temp198_1))
(assert (= temp198_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp198_2)))
(assert (= temp198_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp198_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp198_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp198_4)))
(assert (= temp198_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp198_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp198_6 #x0000000000000000))
(assert (= var465488 temp198_6))
(assert (= temp198_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp198_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_8 #x0000000000000001))
(assert (= var465522 temp198_8))
(assert (= temp198_10 #x0000000000000000))
(assert (= temp198_9 temp198_10))
(assert (= temp198_12 #x0000000000000003))
(assert (= temp198_11 temp198_12))
(assert (= temp198_13 #x0000000000000000))
(assert (= var863614 temp198_13))
(assert (= temp198_14 #x0000000000000001))
(assert (= var863635 temp198_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp198_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp198_15)))
(assert (= temp198_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp198_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_17 #x0000000000000000))
(assert (= var997373 temp198_17))
(assert (= temp198_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp198_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_19 #x0000000000000000))
(assert (= var997418 temp198_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp198_20 #x0000000000000000))
(assert (= temp198_21 temp198_20))
(assert (= temp198_22 (select ARGNAME_padding_NAMEEND_VAL temp198_21)))
(assert (= temp198_23 #x0000000000000001))
(assert (= temp198_24 temp198_23))
(assert (= temp198_25 (select ARGNAME_padding_NAMEEND_VAL temp198_24)))
(assert (= temp198_26 #x0000000000000002))
(assert (= temp198_27 temp198_26))
(assert (= temp198_28 (select ARGNAME_padding_NAMEEND_VAL temp198_27)))
(assert (= temp198_29 #x0000000000000003))
(assert (= temp198_30 temp198_29))
(assert (= temp198_31 (select ARGNAME_padding_NAMEEND_VAL temp198_30)))
(assert (= temp198_32 #x0000000000000004))
(assert (= temp198_33 temp198_32))
(assert (= temp198_34 (select ARGNAME_padding_NAMEEND_VAL temp198_33)))
(assert (= temp198_35 #x0000000000000005))
(assert (= temp198_36 temp198_35))
(assert (= temp198_37 (select ARGNAME_padding_NAMEEND_VAL temp198_36)))
(assert (= temp198_38 #x0000000000000000))
(assert (= temp198_39 #x0000000000000000))
(assert (= temp198_40 temp198_39))
(assert (= temp198_41 (select ARGNAME_padding_NAMEEND_VAL temp198_40)))
(assert (= temp198_42 #x0000000000000000))
(assert (= temp198_43 #x0000000000000001))
(assert (= temp198_44 temp198_43))
(assert (= temp198_45 (select ARGNAME_padding_NAMEEND_VAL temp198_44)))
(assert (= temp198_46 #x0000000000000000))
(assert (= temp198_47 #x0000000000000002))
(assert (= temp198_48 temp198_47))
(assert (= temp198_49 (select ARGNAME_padding_NAMEEND_VAL temp198_48)))
(assert (= temp198_50 #x0000000000000000))
(assert (= temp198_51 #x0000000000000003))
(assert (= temp198_52 temp198_51))
(assert (= temp198_53 (select ARGNAME_padding_NAMEEND_VAL temp198_52)))
(assert (= temp198_54 #x0000000000000000))
(assert (= temp198_55 #x0000000000000004))
(assert (= temp198_56 temp198_55))
(assert (= temp198_57 (select ARGNAME_padding_NAMEEND_VAL temp198_56)))
(assert (= temp198_58 #x0000000000000000))
(assert (= temp198_59 #x0000000000000005))
(assert (= temp198_60 temp198_59))
(assert (= temp198_61 (select ARGNAME_padding_NAMEEND_VAL temp198_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp198_41 temp198_38)
             (bvslt temp198_45 temp198_42)
             (bvslt temp198_49 temp198_46)
             (bvslt temp198_53 temp198_50)
             (bvslt temp198_57 temp198_54)
             (bvslt temp198_61 temp198_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_62 #x0000000000000000))
(assert (= var1716002 temp198_62))
(assert (= temp198_63 #x0000000000000000))
(assert (= temp198_64 temp198_63))
(assert (= temp198_65 (select ARGNAME_stride_NAMEEND_VAL temp198_64)))
(assert (= temp198_66 #x0000000000000001))
(assert (= temp198_67 temp198_66))
(assert (= temp198_68 (select ARGNAME_stride_NAMEEND_VAL temp198_67)))
(assert (= temp198_69 #x0000000000000002))
(assert (= temp198_70 temp198_69))
(assert (= temp198_71 (select ARGNAME_stride_NAMEEND_VAL temp198_70)))
(assert (= temp198_72 #x0000000000000003))
(assert (= temp198_73 temp198_72))
(assert (= temp198_74 (select ARGNAME_stride_NAMEEND_VAL temp198_73)))
(assert (= temp198_75 #x0000000000000004))
(assert (= temp198_76 temp198_75))
(assert (= temp198_77 (select ARGNAME_stride_NAMEEND_VAL temp198_76)))
(assert (= temp198_78 #x0000000000000005))
(assert (= temp198_79 temp198_78))
(assert (= temp198_80 (select ARGNAME_stride_NAMEEND_VAL temp198_79)))
(assert (= temp198_81 #x0000000000000000))
(assert (= temp198_82 #x0000000000000000))
(assert (= temp198_83 temp198_82))
(assert (= temp198_84 (select ARGNAME_stride_NAMEEND_VAL temp198_83)))
(assert (= temp198_85 #x0000000000000000))
(assert (= temp198_86 #x0000000000000001))
(assert (= temp198_87 temp198_86))
(assert (= temp198_88 (select ARGNAME_stride_NAMEEND_VAL temp198_87)))
(assert (= temp198_89 #x0000000000000000))
(assert (= temp198_90 #x0000000000000002))
(assert (= temp198_91 temp198_90))
(assert (= temp198_92 (select ARGNAME_stride_NAMEEND_VAL temp198_91)))
(assert (= temp198_93 #x0000000000000000))
(assert (= temp198_94 #x0000000000000003))
(assert (= temp198_95 temp198_94))
(assert (= temp198_96 (select ARGNAME_stride_NAMEEND_VAL temp198_95)))
(assert (= temp198_97 #x0000000000000000))
(assert (= temp198_98 #x0000000000000004))
(assert (= temp198_99 temp198_98))
(assert (= temp198_100 (select ARGNAME_stride_NAMEEND_VAL temp198_99)))
(assert (= temp198_101 #x0000000000000000))
(assert (= temp198_102 #x0000000000000005))
(assert (= temp198_103 temp198_102))
(assert (= temp198_104 (select ARGNAME_stride_NAMEEND_VAL temp198_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp198_84 temp198_81)
             (bvsle temp198_88 temp198_85)
             (bvsle temp198_92 temp198_89)
             (bvsle temp198_96 temp198_93)
             (bvsle temp198_100 temp198_97)
             (bvsle temp198_104 temp198_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_105 #x0000000000000000))
(assert (= var1716023 temp198_105))
(assert (= temp198_106 #x0000000000000000))
(assert (= var1704114 temp198_106))
(assert (= temp198_107 #x0000000000000000))
(assert (= temp198_108 temp198_107))
(assert (= temp198_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_108)))
(assert (= temp198_110 #x0000000000000001))
(assert (= temp198_111 temp198_110))
(assert (= temp198_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_111)))
(assert (= temp198_113 #x0000000000000002))
(assert (= temp198_114 temp198_113))
(assert (= temp198_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_114)))
(assert (= temp198_116 #x0000000000000003))
(assert (= temp198_117 temp198_116))
(assert (= temp198_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_117)))
(assert (= temp198_119 #x0000000000000004))
(assert (= temp198_120 temp198_119))
(assert (= temp198_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_120)))
(assert (= temp198_122 #x0000000000000005))
(assert (= temp198_123 temp198_122))
(assert (= temp198_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_123)))
(assert (= temp198_126 var1704114))
(assert (= temp198_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_126)))
(assert (= temp198_125 temp198_127))
(assert (= var1716068
   (ite (bvslt temp198_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_128 #x0000000000000000))
(assert (= var1716068 temp198_128))
(assert (= temp198_129 #x0000000000000000))
(assert (= var1704114 temp198_129))
(assert (= temp198_131 var1704114))
(assert (= temp198_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_131)))
(assert (= temp198_130 temp198_132))
(assert (= var1716090 (bvsmod temp198_130 ARGNAME_groups_NAMEEND)))
(assert (= temp198_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp198_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_134 #x0000000000000001))
(assert (= var1716091 temp198_134))
(assert (= var1716110 var1716000))
(assert (= temp198_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp198_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_136 #x0000000000000001))
(assert (= var1716111 temp198_136))
(assert (= temp198_137 #x0000000000000001))
(assert (= var1705002 temp198_137))
(assert (= temp198_139 var1705002))
(assert (= temp198_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_139)))
(assert (= temp198_138 temp198_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp198_138)))
(assert (= temp198_141 #x0000000000000000))
(assert (= var1704114 temp198_141))
(assert (= temp198_143 var1704114))
(assert (= temp198_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp198_143)))
(assert (= temp198_142 temp198_144))
(assert (= temp198_145 #x0000000000000002))
(assert (= var1979241 temp198_145))
(assert (= temp198_146 #x0000000000000001))
(assert (= var1716281 temp198_146))
(assert (= temp198_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp198_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_148 #x0000000000000001))
(assert (= var997490 temp198_148))
(assert (= temp198_149 #x0000000000000001))
(assert (= var997620 temp198_149))
(assert (= var3486185 var997620))
(assert (= temp198_150 #x0000000000000000))
(assert (= var3686207 temp198_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp198_151 #x0000000000000002))
(assert (= var3815043 temp198_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp198_153 #xffffffffffffffff))
(assert (= temp198_152 temp198_153))
(assert (= temp198_154 #x0000000000000001))
(assert (= var997490 temp198_154))
(model-add temp198_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp198_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp198_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp198_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp198_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp198_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






