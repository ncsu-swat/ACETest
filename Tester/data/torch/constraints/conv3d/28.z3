(declare-fun temp36_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp36_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp36_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp36_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp36_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp36_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp36_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp36_8 () (_ BitVec 64))
(declare-fun temp36_10 () (_ BitVec 64))
(declare-fun temp36_9 () (_ BitVec 64))
(declare-fun temp36_12 () (_ BitVec 64))
(declare-fun temp36_11 () (_ BitVec 64))
(declare-fun temp36_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp36_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp36_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp36_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp36_17 () (_ BitVec 64))
(declare-fun temp36_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp36_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp36_20 () (_ BitVec 64))
(declare-fun temp36_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_22 () (_ BitVec 64))
(declare-fun temp36_23 () (_ BitVec 64))
(declare-fun temp36_24 () (_ BitVec 64))
(declare-fun temp36_25 () (_ BitVec 64))
(declare-fun temp36_26 () (_ BitVec 64))
(declare-fun temp36_27 () (_ BitVec 64))
(declare-fun temp36_28 () (_ BitVec 64))
(declare-fun temp36_29 () (_ BitVec 64))
(declare-fun temp36_30 () (_ BitVec 64))
(declare-fun temp36_31 () (_ BitVec 64))
(declare-fun temp36_32 () (_ BitVec 64))
(declare-fun temp36_33 () (_ BitVec 64))
(declare-fun temp36_34 () (_ BitVec 64))
(declare-fun temp36_35 () (_ BitVec 64))
(declare-fun temp36_36 () (_ BitVec 64))
(declare-fun temp36_37 () (_ BitVec 64))
(declare-fun temp36_38 () (_ BitVec 64))
(declare-fun temp36_39 () (_ BitVec 64))
(declare-fun temp36_40 () (_ BitVec 64))
(declare-fun temp36_41 () (_ BitVec 64))
(declare-fun temp36_42 () (_ BitVec 64))
(declare-fun temp36_43 () (_ BitVec 64))
(declare-fun temp36_44 () (_ BitVec 64))
(declare-fun temp36_45 () (_ BitVec 64))
(declare-fun temp36_46 () (_ BitVec 64))
(declare-fun temp36_47 () (_ BitVec 64))
(declare-fun temp36_48 () (_ BitVec 64))
(declare-fun temp36_49 () (_ BitVec 64))
(declare-fun temp36_50 () (_ BitVec 64))
(declare-fun temp36_51 () (_ BitVec 64))
(declare-fun temp36_52 () (_ BitVec 64))
(declare-fun temp36_53 () (_ BitVec 64))
(declare-fun temp36_54 () (_ BitVec 64))
(declare-fun temp36_55 () (_ BitVec 64))
(declare-fun temp36_56 () (_ BitVec 64))
(declare-fun temp36_57 () (_ BitVec 64))
(declare-fun temp36_58 () (_ BitVec 64))
(declare-fun temp36_59 () (_ BitVec 64))
(declare-fun temp36_60 () (_ BitVec 64))
(declare-fun temp36_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp36_62 () (_ BitVec 64))
(declare-fun temp36_63 () (_ BitVec 64))
(declare-fun temp36_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_65 () (_ BitVec 64))
(declare-fun temp36_66 () (_ BitVec 64))
(declare-fun temp36_67 () (_ BitVec 64))
(declare-fun temp36_68 () (_ BitVec 64))
(declare-fun temp36_69 () (_ BitVec 64))
(declare-fun temp36_70 () (_ BitVec 64))
(declare-fun temp36_71 () (_ BitVec 64))
(declare-fun temp36_72 () (_ BitVec 64))
(declare-fun temp36_73 () (_ BitVec 64))
(declare-fun temp36_74 () (_ BitVec 64))
(declare-fun temp36_75 () (_ BitVec 64))
(declare-fun temp36_76 () (_ BitVec 64))
(declare-fun temp36_77 () (_ BitVec 64))
(declare-fun temp36_78 () (_ BitVec 64))
(declare-fun temp36_79 () (_ BitVec 64))
(declare-fun temp36_80 () (_ BitVec 64))
(declare-fun temp36_81 () (_ BitVec 64))
(declare-fun temp36_82 () (_ BitVec 64))
(declare-fun temp36_83 () (_ BitVec 64))
(declare-fun temp36_84 () (_ BitVec 64))
(declare-fun temp36_85 () (_ BitVec 64))
(declare-fun temp36_86 () (_ BitVec 64))
(declare-fun temp36_87 () (_ BitVec 64))
(declare-fun temp36_88 () (_ BitVec 64))
(declare-fun temp36_89 () (_ BitVec 64))
(declare-fun temp36_90 () (_ BitVec 64))
(declare-fun temp36_91 () (_ BitVec 64))
(declare-fun temp36_92 () (_ BitVec 64))
(declare-fun temp36_93 () (_ BitVec 64))
(declare-fun temp36_94 () (_ BitVec 64))
(declare-fun temp36_95 () (_ BitVec 64))
(declare-fun temp36_96 () (_ BitVec 64))
(declare-fun temp36_97 () (_ BitVec 64))
(declare-fun temp36_98 () (_ BitVec 64))
(declare-fun temp36_99 () (_ BitVec 64))
(declare-fun temp36_100 () (_ BitVec 64))
(declare-fun temp36_101 () (_ BitVec 64))
(declare-fun temp36_102 () (_ BitVec 64))
(declare-fun temp36_103 () (_ BitVec 64))
(declare-fun temp36_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp36_105 () (_ BitVec 64))
(declare-fun temp36_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp36_107 () (_ BitVec 64))
(declare-fun temp36_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_109 () (_ BitVec 64))
(declare-fun temp36_110 () (_ BitVec 64))
(declare-fun temp36_111 () (_ BitVec 64))
(declare-fun temp36_112 () (_ BitVec 64))
(declare-fun temp36_113 () (_ BitVec 64))
(declare-fun temp36_114 () (_ BitVec 64))
(declare-fun temp36_115 () (_ BitVec 64))
(declare-fun temp36_116 () (_ BitVec 64))
(declare-fun temp36_117 () (_ BitVec 64))
(declare-fun temp36_118 () (_ BitVec 64))
(declare-fun temp36_119 () (_ BitVec 64))
(declare-fun temp36_120 () (_ BitVec 64))
(declare-fun temp36_121 () (_ BitVec 64))
(declare-fun temp36_122 () (_ BitVec 64))
(declare-fun temp36_123 () (_ BitVec 64))
(declare-fun temp36_124 () (_ BitVec 64))
(declare-fun temp36_126 () (_ BitVec 64))
(declare-fun temp36_127 () (_ BitVec 64))
(declare-fun temp36_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp36_128 () (_ BitVec 64))
(declare-fun temp36_129 () (_ BitVec 64))
(declare-fun temp36_131 () (_ BitVec 64))
(declare-fun temp36_132 () (_ BitVec 64))
(declare-fun temp36_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp36_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp36_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp36_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp36_136 () (_ BitVec 64))
(declare-fun temp36_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp36_139 () (_ BitVec 64))
(declare-fun temp36_140 () (_ BitVec 64))
(declare-fun temp36_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp36_141 () (_ BitVec 64))
(declare-fun temp36_143 () (_ BitVec 64))
(declare-fun temp36_144 () (_ BitVec 64))
(declare-fun temp36_142 () (_ BitVec 64))
(declare-fun temp36_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp36_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp36_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp36_148 () (_ BitVec 64))
(declare-fun temp36_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp36_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp36_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp36_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var5193549 () (_ BitVec 64))
(declare-fun temp36_154 () (_ BitVec 64))
(declare-fun temp36_153 () (_ BitVec 64))
(declare-fun temp36_155 () (_ BitVec 64))
(declare-fun var5770730 () (_ BitVec 64))
(declare-fun temp36_157 () (_ BitVec 64))
(declare-fun temp36_156 () (_ BitVec 64))
(declare-fun temp36_158 () (_ BitVec 64))
(assert (= temp36_1 #x0000000000000003))
(assert (= var465453 temp36_1))
(assert (= temp36_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp36_2)))
(assert (= temp36_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp36_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp36_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp36_4)))
(assert (= temp36_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp36_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp36_6 #x0000000000000000))
(assert (= var465488 temp36_6))
(assert (= temp36_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp36_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp36_8 #x0000000000000001))
(assert (= var465522 temp36_8))
(assert (= temp36_10 #x0000000000000000))
(assert (= temp36_9 temp36_10))
(assert (= temp36_12 #x0000000000000003))
(assert (= temp36_11 temp36_12))
(assert (= temp36_13 #x0000000000000000))
(assert (= var863614 temp36_13))
(assert (= temp36_14 #x0000000000000001))
(assert (= var863635 temp36_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp36_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp36_15)))
(assert (= temp36_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp36_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_17 #x0000000000000000))
(assert (= var997373 temp36_17))
(assert (= temp36_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp36_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_19 #x0000000000000000))
(assert (= var997418 temp36_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp36_20 #x0000000000000000))
(assert (= temp36_21 temp36_20))
(assert (= temp36_22 (select ARGNAME_padding_NAMEEND_VAL temp36_21)))
(assert (= temp36_23 #x0000000000000001))
(assert (= temp36_24 temp36_23))
(assert (= temp36_25 (select ARGNAME_padding_NAMEEND_VAL temp36_24)))
(assert (= temp36_26 #x0000000000000002))
(assert (= temp36_27 temp36_26))
(assert (= temp36_28 (select ARGNAME_padding_NAMEEND_VAL temp36_27)))
(assert (= temp36_29 #x0000000000000003))
(assert (= temp36_30 temp36_29))
(assert (= temp36_31 (select ARGNAME_padding_NAMEEND_VAL temp36_30)))
(assert (= temp36_32 #x0000000000000004))
(assert (= temp36_33 temp36_32))
(assert (= temp36_34 (select ARGNAME_padding_NAMEEND_VAL temp36_33)))
(assert (= temp36_35 #x0000000000000005))
(assert (= temp36_36 temp36_35))
(assert (= temp36_37 (select ARGNAME_padding_NAMEEND_VAL temp36_36)))
(assert (= temp36_38 #x0000000000000000))
(assert (= temp36_39 #x0000000000000000))
(assert (= temp36_40 temp36_39))
(assert (= temp36_41 (select ARGNAME_padding_NAMEEND_VAL temp36_40)))
(assert (= temp36_42 #x0000000000000000))
(assert (= temp36_43 #x0000000000000001))
(assert (= temp36_44 temp36_43))
(assert (= temp36_45 (select ARGNAME_padding_NAMEEND_VAL temp36_44)))
(assert (= temp36_46 #x0000000000000000))
(assert (= temp36_47 #x0000000000000002))
(assert (= temp36_48 temp36_47))
(assert (= temp36_49 (select ARGNAME_padding_NAMEEND_VAL temp36_48)))
(assert (= temp36_50 #x0000000000000000))
(assert (= temp36_51 #x0000000000000003))
(assert (= temp36_52 temp36_51))
(assert (= temp36_53 (select ARGNAME_padding_NAMEEND_VAL temp36_52)))
(assert (= temp36_54 #x0000000000000000))
(assert (= temp36_55 #x0000000000000004))
(assert (= temp36_56 temp36_55))
(assert (= temp36_57 (select ARGNAME_padding_NAMEEND_VAL temp36_56)))
(assert (= temp36_58 #x0000000000000000))
(assert (= temp36_59 #x0000000000000005))
(assert (= temp36_60 temp36_59))
(assert (= temp36_61 (select ARGNAME_padding_NAMEEND_VAL temp36_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp36_41 temp36_38)
             (bvslt temp36_45 temp36_42)
             (bvslt temp36_49 temp36_46)
             (bvslt temp36_53 temp36_50)
             (bvslt temp36_57 temp36_54)
             (bvslt temp36_61 temp36_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_62 #x0000000000000000))
(assert (= var1716002 temp36_62))
(assert (= temp36_63 #x0000000000000000))
(assert (= temp36_64 temp36_63))
(assert (= temp36_65 (select ARGNAME_stride_NAMEEND_VAL temp36_64)))
(assert (= temp36_66 #x0000000000000001))
(assert (= temp36_67 temp36_66))
(assert (= temp36_68 (select ARGNAME_stride_NAMEEND_VAL temp36_67)))
(assert (= temp36_69 #x0000000000000002))
(assert (= temp36_70 temp36_69))
(assert (= temp36_71 (select ARGNAME_stride_NAMEEND_VAL temp36_70)))
(assert (= temp36_72 #x0000000000000003))
(assert (= temp36_73 temp36_72))
(assert (= temp36_74 (select ARGNAME_stride_NAMEEND_VAL temp36_73)))
(assert (= temp36_75 #x0000000000000004))
(assert (= temp36_76 temp36_75))
(assert (= temp36_77 (select ARGNAME_stride_NAMEEND_VAL temp36_76)))
(assert (= temp36_78 #x0000000000000005))
(assert (= temp36_79 temp36_78))
(assert (= temp36_80 (select ARGNAME_stride_NAMEEND_VAL temp36_79)))
(assert (= temp36_81 #x0000000000000000))
(assert (= temp36_82 #x0000000000000000))
(assert (= temp36_83 temp36_82))
(assert (= temp36_84 (select ARGNAME_stride_NAMEEND_VAL temp36_83)))
(assert (= temp36_85 #x0000000000000000))
(assert (= temp36_86 #x0000000000000001))
(assert (= temp36_87 temp36_86))
(assert (= temp36_88 (select ARGNAME_stride_NAMEEND_VAL temp36_87)))
(assert (= temp36_89 #x0000000000000000))
(assert (= temp36_90 #x0000000000000002))
(assert (= temp36_91 temp36_90))
(assert (= temp36_92 (select ARGNAME_stride_NAMEEND_VAL temp36_91)))
(assert (= temp36_93 #x0000000000000000))
(assert (= temp36_94 #x0000000000000003))
(assert (= temp36_95 temp36_94))
(assert (= temp36_96 (select ARGNAME_stride_NAMEEND_VAL temp36_95)))
(assert (= temp36_97 #x0000000000000000))
(assert (= temp36_98 #x0000000000000004))
(assert (= temp36_99 temp36_98))
(assert (= temp36_100 (select ARGNAME_stride_NAMEEND_VAL temp36_99)))
(assert (= temp36_101 #x0000000000000000))
(assert (= temp36_102 #x0000000000000005))
(assert (= temp36_103 temp36_102))
(assert (= temp36_104 (select ARGNAME_stride_NAMEEND_VAL temp36_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp36_84 temp36_81)
             (bvsle temp36_88 temp36_85)
             (bvsle temp36_92 temp36_89)
             (bvsle temp36_96 temp36_93)
             (bvsle temp36_100 temp36_97)
             (bvsle temp36_104 temp36_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_105 #x0000000000000000))
(assert (= var1716023 temp36_105))
(assert (= temp36_106 #x0000000000000000))
(assert (= var1704114 temp36_106))
(assert (= temp36_107 #x0000000000000000))
(assert (= temp36_108 temp36_107))
(assert (= temp36_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_108)))
(assert (= temp36_110 #x0000000000000001))
(assert (= temp36_111 temp36_110))
(assert (= temp36_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_111)))
(assert (= temp36_113 #x0000000000000002))
(assert (= temp36_114 temp36_113))
(assert (= temp36_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_114)))
(assert (= temp36_116 #x0000000000000003))
(assert (= temp36_117 temp36_116))
(assert (= temp36_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_117)))
(assert (= temp36_119 #x0000000000000004))
(assert (= temp36_120 temp36_119))
(assert (= temp36_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_120)))
(assert (= temp36_122 #x0000000000000005))
(assert (= temp36_123 temp36_122))
(assert (= temp36_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_123)))
(assert (= temp36_126 var1704114))
(assert (= temp36_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_126)))
(assert (= temp36_125 temp36_127))
(assert (= var1716068
   (ite (bvslt temp36_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_128 #x0000000000000000))
(assert (= var1716068 temp36_128))
(assert (= temp36_129 #x0000000000000000))
(assert (= var1704114 temp36_129))
(assert (= temp36_131 var1704114))
(assert (= temp36_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_131)))
(assert (= temp36_130 temp36_132))
(assert (= var1716090 (bvsmod temp36_130 ARGNAME_groups_NAMEEND)))
(assert (= temp36_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp36_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp36_134 #x0000000000000001))
(assert (= var1716091 temp36_134))
(assert (= var1716110 var1716000))
(assert (= temp36_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp36_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp36_136 #x0000000000000001))
(assert (= var1716111 temp36_136))
(assert (= temp36_137 #x0000000000000001))
(assert (= var1705002 temp36_137))
(assert (= temp36_139 var1705002))
(assert (= temp36_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_139)))
(assert (= temp36_138 temp36_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp36_138)))
(assert (= temp36_141 #x0000000000000000))
(assert (= var1704114 temp36_141))
(assert (= temp36_143 var1704114))
(assert (= temp36_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_143)))
(assert (= temp36_142 temp36_144))
(assert (= temp36_145 #x0000000000000002))
(assert (= var1979241 temp36_145))
(assert (= temp36_146 #x0000000000000001))
(assert (= var1716281 temp36_146))
(assert (= temp36_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp36_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_148 #x0000000000000001))
(assert (= var997490 temp36_148))
(assert (= temp36_149 #x0000000000000001))
(assert (= var997620 temp36_149))
(assert (= var3486185 var997620))
(assert (= temp36_150 #x0000000000000000))
(assert (= var3686207 temp36_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp36_151 #x0000000000000002))
(assert (= var3815043 temp36_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4469136 var997633))
(assert (= var997820 var997345))
(assert (= temp36_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp36_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5193549 var997821))
(assert (= temp36_154 #x0000000000000001))
(assert (= temp36_153 temp36_154))
(assert (= temp36_155 #x0000000000000001))
(assert (= var5770730 temp36_155))
(assert (= temp36_157 #xffffffffffffffff))
(assert (= temp36_156 temp36_157))
(assert (= temp36_158 #x0000000000000001))
(assert (= var997490 temp36_158))
(model-add temp36_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp36_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp36_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp36_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp36_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp36_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






