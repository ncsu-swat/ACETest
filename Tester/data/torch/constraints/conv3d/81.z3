(declare-fun temp107_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp107_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp107_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp107_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp107_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp107_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp107_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp107_8 () (_ BitVec 64))
(declare-fun temp107_10 () (_ BitVec 64))
(declare-fun temp107_9 () (_ BitVec 64))
(declare-fun temp107_12 () (_ BitVec 64))
(declare-fun temp107_11 () (_ BitVec 64))
(declare-fun temp107_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp107_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp107_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp107_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp107_17 () (_ BitVec 64))
(declare-fun temp107_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp107_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp107_20 () (_ BitVec 64))
(declare-fun temp107_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp107_22 () (_ BitVec 64))
(declare-fun temp107_23 () (_ BitVec 64))
(declare-fun temp107_24 () (_ BitVec 64))
(declare-fun temp107_25 () (_ BitVec 64))
(declare-fun temp107_26 () (_ BitVec 64))
(declare-fun temp107_27 () (_ BitVec 64))
(declare-fun temp107_28 () (_ BitVec 64))
(declare-fun temp107_29 () (_ BitVec 64))
(declare-fun temp107_30 () (_ BitVec 64))
(declare-fun temp107_31 () (_ BitVec 64))
(declare-fun temp107_32 () (_ BitVec 64))
(declare-fun temp107_33 () (_ BitVec 64))
(declare-fun temp107_34 () (_ BitVec 64))
(declare-fun temp107_35 () (_ BitVec 64))
(declare-fun temp107_36 () (_ BitVec 64))
(declare-fun temp107_37 () (_ BitVec 64))
(declare-fun temp107_38 () (_ BitVec 64))
(declare-fun temp107_39 () (_ BitVec 64))
(declare-fun temp107_40 () (_ BitVec 64))
(declare-fun temp107_41 () (_ BitVec 64))
(declare-fun temp107_42 () (_ BitVec 64))
(declare-fun temp107_43 () (_ BitVec 64))
(declare-fun temp107_44 () (_ BitVec 64))
(declare-fun temp107_45 () (_ BitVec 64))
(declare-fun temp107_46 () (_ BitVec 64))
(declare-fun temp107_47 () (_ BitVec 64))
(declare-fun temp107_48 () (_ BitVec 64))
(declare-fun temp107_49 () (_ BitVec 64))
(declare-fun temp107_50 () (_ BitVec 64))
(declare-fun temp107_51 () (_ BitVec 64))
(declare-fun temp107_52 () (_ BitVec 64))
(declare-fun temp107_53 () (_ BitVec 64))
(declare-fun temp107_54 () (_ BitVec 64))
(declare-fun temp107_55 () (_ BitVec 64))
(declare-fun temp107_56 () (_ BitVec 64))
(declare-fun temp107_57 () (_ BitVec 64))
(declare-fun temp107_58 () (_ BitVec 64))
(declare-fun temp107_59 () (_ BitVec 64))
(declare-fun temp107_60 () (_ BitVec 64))
(declare-fun temp107_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp107_62 () (_ BitVec 64))
(declare-fun temp107_63 () (_ BitVec 64))
(declare-fun temp107_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp107_65 () (_ BitVec 64))
(declare-fun temp107_66 () (_ BitVec 64))
(declare-fun temp107_67 () (_ BitVec 64))
(declare-fun temp107_68 () (_ BitVec 64))
(declare-fun temp107_69 () (_ BitVec 64))
(declare-fun temp107_70 () (_ BitVec 64))
(declare-fun temp107_71 () (_ BitVec 64))
(declare-fun temp107_72 () (_ BitVec 64))
(declare-fun temp107_73 () (_ BitVec 64))
(declare-fun temp107_74 () (_ BitVec 64))
(declare-fun temp107_75 () (_ BitVec 64))
(declare-fun temp107_76 () (_ BitVec 64))
(declare-fun temp107_77 () (_ BitVec 64))
(declare-fun temp107_78 () (_ BitVec 64))
(declare-fun temp107_79 () (_ BitVec 64))
(declare-fun temp107_80 () (_ BitVec 64))
(declare-fun temp107_81 () (_ BitVec 64))
(declare-fun temp107_82 () (_ BitVec 64))
(declare-fun temp107_83 () (_ BitVec 64))
(declare-fun temp107_84 () (_ BitVec 64))
(declare-fun temp107_85 () (_ BitVec 64))
(declare-fun temp107_86 () (_ BitVec 64))
(declare-fun temp107_87 () (_ BitVec 64))
(declare-fun temp107_88 () (_ BitVec 64))
(declare-fun temp107_89 () (_ BitVec 64))
(declare-fun temp107_90 () (_ BitVec 64))
(declare-fun temp107_91 () (_ BitVec 64))
(declare-fun temp107_92 () (_ BitVec 64))
(declare-fun temp107_93 () (_ BitVec 64))
(declare-fun temp107_94 () (_ BitVec 64))
(declare-fun temp107_95 () (_ BitVec 64))
(declare-fun temp107_96 () (_ BitVec 64))
(declare-fun temp107_97 () (_ BitVec 64))
(declare-fun temp107_98 () (_ BitVec 64))
(declare-fun temp107_99 () (_ BitVec 64))
(declare-fun temp107_100 () (_ BitVec 64))
(declare-fun temp107_101 () (_ BitVec 64))
(declare-fun temp107_102 () (_ BitVec 64))
(declare-fun temp107_103 () (_ BitVec 64))
(declare-fun temp107_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp107_105 () (_ BitVec 64))
(declare-fun temp107_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp107_107 () (_ BitVec 64))
(declare-fun temp107_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp107_109 () (_ BitVec 64))
(declare-fun temp107_110 () (_ BitVec 64))
(declare-fun temp107_111 () (_ BitVec 64))
(declare-fun temp107_112 () (_ BitVec 64))
(declare-fun temp107_113 () (_ BitVec 64))
(declare-fun temp107_114 () (_ BitVec 64))
(declare-fun temp107_115 () (_ BitVec 64))
(declare-fun temp107_116 () (_ BitVec 64))
(declare-fun temp107_117 () (_ BitVec 64))
(declare-fun temp107_118 () (_ BitVec 64))
(declare-fun temp107_119 () (_ BitVec 64))
(declare-fun temp107_120 () (_ BitVec 64))
(declare-fun temp107_121 () (_ BitVec 64))
(declare-fun temp107_122 () (_ BitVec 64))
(declare-fun temp107_123 () (_ BitVec 64))
(declare-fun temp107_124 () (_ BitVec 64))
(declare-fun temp107_126 () (_ BitVec 64))
(declare-fun temp107_127 () (_ BitVec 64))
(declare-fun temp107_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp107_128 () (_ BitVec 64))
(declare-fun temp107_129 () (_ BitVec 64))
(declare-fun temp107_131 () (_ BitVec 64))
(declare-fun temp107_132 () (_ BitVec 64))
(declare-fun temp107_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp107_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp107_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp107_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp107_136 () (_ BitVec 64))
(declare-fun temp107_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp107_139 () (_ BitVec 64))
(declare-fun temp107_140 () (_ BitVec 64))
(declare-fun temp107_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp107_141 () (_ BitVec 64))
(declare-fun temp107_143 () (_ BitVec 64))
(declare-fun temp107_144 () (_ BitVec 64))
(declare-fun temp107_142 () (_ BitVec 64))
(declare-fun temp107_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp107_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp107_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp107_148 () (_ BitVec 64))
(declare-fun temp107_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp107_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp107_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp107_153 () (_ BitVec 64))
(declare-fun temp107_152 () (_ BitVec 64))
(declare-fun temp107_155 () (_ BitVec 64))
(declare-fun temp107_154 () (_ BitVec 64))
(declare-fun temp107_156 () (_ BitVec 64))
(assert (= temp107_1 #x0000000000000003))
(assert (= var465453 temp107_1))
(assert (= temp107_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp107_2)))
(assert (= temp107_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp107_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp107_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp107_4)))
(assert (= temp107_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp107_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp107_6 #x0000000000000000))
(assert (= var465488 temp107_6))
(assert (= temp107_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp107_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp107_8 #x0000000000000001))
(assert (= var465522 temp107_8))
(assert (= temp107_10 #x0000000000000000))
(assert (= temp107_9 temp107_10))
(assert (= temp107_12 #x0000000000000003))
(assert (= temp107_11 temp107_12))
(assert (= temp107_13 #x0000000000000000))
(assert (= var863614 temp107_13))
(assert (= temp107_14 #x0000000000000001))
(assert (= var863635 temp107_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp107_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp107_15)))
(assert (= temp107_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp107_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp107_17 #x0000000000000000))
(assert (= var997373 temp107_17))
(assert (= temp107_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp107_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp107_19 #x0000000000000000))
(assert (= var997418 temp107_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp107_20 #x0000000000000000))
(assert (= temp107_21 temp107_20))
(assert (= temp107_22 (select ARGNAME_padding_NAMEEND_VAL temp107_21)))
(assert (= temp107_23 #x0000000000000001))
(assert (= temp107_24 temp107_23))
(assert (= temp107_25 (select ARGNAME_padding_NAMEEND_VAL temp107_24)))
(assert (= temp107_26 #x0000000000000002))
(assert (= temp107_27 temp107_26))
(assert (= temp107_28 (select ARGNAME_padding_NAMEEND_VAL temp107_27)))
(assert (= temp107_29 #x0000000000000003))
(assert (= temp107_30 temp107_29))
(assert (= temp107_31 (select ARGNAME_padding_NAMEEND_VAL temp107_30)))
(assert (= temp107_32 #x0000000000000004))
(assert (= temp107_33 temp107_32))
(assert (= temp107_34 (select ARGNAME_padding_NAMEEND_VAL temp107_33)))
(assert (= temp107_35 #x0000000000000005))
(assert (= temp107_36 temp107_35))
(assert (= temp107_37 (select ARGNAME_padding_NAMEEND_VAL temp107_36)))
(assert (= temp107_38 #x0000000000000000))
(assert (= temp107_39 #x0000000000000000))
(assert (= temp107_40 temp107_39))
(assert (= temp107_41 (select ARGNAME_padding_NAMEEND_VAL temp107_40)))
(assert (= temp107_42 #x0000000000000000))
(assert (= temp107_43 #x0000000000000001))
(assert (= temp107_44 temp107_43))
(assert (= temp107_45 (select ARGNAME_padding_NAMEEND_VAL temp107_44)))
(assert (= temp107_46 #x0000000000000000))
(assert (= temp107_47 #x0000000000000002))
(assert (= temp107_48 temp107_47))
(assert (= temp107_49 (select ARGNAME_padding_NAMEEND_VAL temp107_48)))
(assert (= temp107_50 #x0000000000000000))
(assert (= temp107_51 #x0000000000000003))
(assert (= temp107_52 temp107_51))
(assert (= temp107_53 (select ARGNAME_padding_NAMEEND_VAL temp107_52)))
(assert (= temp107_54 #x0000000000000000))
(assert (= temp107_55 #x0000000000000004))
(assert (= temp107_56 temp107_55))
(assert (= temp107_57 (select ARGNAME_padding_NAMEEND_VAL temp107_56)))
(assert (= temp107_58 #x0000000000000000))
(assert (= temp107_59 #x0000000000000005))
(assert (= temp107_60 temp107_59))
(assert (= temp107_61 (select ARGNAME_padding_NAMEEND_VAL temp107_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp107_41 temp107_38)
             (bvslt temp107_45 temp107_42)
             (bvslt temp107_49 temp107_46)
             (bvslt temp107_53 temp107_50)
             (bvslt temp107_57 temp107_54)
             (bvslt temp107_61 temp107_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp107_62 #x0000000000000000))
(assert (= var1716002 temp107_62))
(assert (= temp107_63 #x0000000000000000))
(assert (= temp107_64 temp107_63))
(assert (= temp107_65 (select ARGNAME_stride_NAMEEND_VAL temp107_64)))
(assert (= temp107_66 #x0000000000000001))
(assert (= temp107_67 temp107_66))
(assert (= temp107_68 (select ARGNAME_stride_NAMEEND_VAL temp107_67)))
(assert (= temp107_69 #x0000000000000002))
(assert (= temp107_70 temp107_69))
(assert (= temp107_71 (select ARGNAME_stride_NAMEEND_VAL temp107_70)))
(assert (= temp107_72 #x0000000000000003))
(assert (= temp107_73 temp107_72))
(assert (= temp107_74 (select ARGNAME_stride_NAMEEND_VAL temp107_73)))
(assert (= temp107_75 #x0000000000000004))
(assert (= temp107_76 temp107_75))
(assert (= temp107_77 (select ARGNAME_stride_NAMEEND_VAL temp107_76)))
(assert (= temp107_78 #x0000000000000005))
(assert (= temp107_79 temp107_78))
(assert (= temp107_80 (select ARGNAME_stride_NAMEEND_VAL temp107_79)))
(assert (= temp107_81 #x0000000000000000))
(assert (= temp107_82 #x0000000000000000))
(assert (= temp107_83 temp107_82))
(assert (= temp107_84 (select ARGNAME_stride_NAMEEND_VAL temp107_83)))
(assert (= temp107_85 #x0000000000000000))
(assert (= temp107_86 #x0000000000000001))
(assert (= temp107_87 temp107_86))
(assert (= temp107_88 (select ARGNAME_stride_NAMEEND_VAL temp107_87)))
(assert (= temp107_89 #x0000000000000000))
(assert (= temp107_90 #x0000000000000002))
(assert (= temp107_91 temp107_90))
(assert (= temp107_92 (select ARGNAME_stride_NAMEEND_VAL temp107_91)))
(assert (= temp107_93 #x0000000000000000))
(assert (= temp107_94 #x0000000000000003))
(assert (= temp107_95 temp107_94))
(assert (= temp107_96 (select ARGNAME_stride_NAMEEND_VAL temp107_95)))
(assert (= temp107_97 #x0000000000000000))
(assert (= temp107_98 #x0000000000000004))
(assert (= temp107_99 temp107_98))
(assert (= temp107_100 (select ARGNAME_stride_NAMEEND_VAL temp107_99)))
(assert (= temp107_101 #x0000000000000000))
(assert (= temp107_102 #x0000000000000005))
(assert (= temp107_103 temp107_102))
(assert (= temp107_104 (select ARGNAME_stride_NAMEEND_VAL temp107_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp107_84 temp107_81)
             (bvsle temp107_88 temp107_85)
             (bvsle temp107_92 temp107_89)
             (bvsle temp107_96 temp107_93)
             (bvsle temp107_100 temp107_97)
             (bvsle temp107_104 temp107_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp107_105 #x0000000000000000))
(assert (= var1716023 temp107_105))
(assert (= temp107_106 #x0000000000000000))
(assert (= var1704114 temp107_106))
(assert (= temp107_107 #x0000000000000000))
(assert (= temp107_108 temp107_107))
(assert (= temp107_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_108)))
(assert (= temp107_110 #x0000000000000001))
(assert (= temp107_111 temp107_110))
(assert (= temp107_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_111)))
(assert (= temp107_113 #x0000000000000002))
(assert (= temp107_114 temp107_113))
(assert (= temp107_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_114)))
(assert (= temp107_116 #x0000000000000003))
(assert (= temp107_117 temp107_116))
(assert (= temp107_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_117)))
(assert (= temp107_119 #x0000000000000004))
(assert (= temp107_120 temp107_119))
(assert (= temp107_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_120)))
(assert (= temp107_122 #x0000000000000005))
(assert (= temp107_123 temp107_122))
(assert (= temp107_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_123)))
(assert (= temp107_126 var1704114))
(assert (= temp107_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_126)))
(assert (= temp107_125 temp107_127))
(assert (= var1716068
   (ite (bvslt temp107_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp107_128 #x0000000000000000))
(assert (= var1716068 temp107_128))
(assert (= temp107_129 #x0000000000000000))
(assert (= var1704114 temp107_129))
(assert (= temp107_131 var1704114))
(assert (= temp107_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_131)))
(assert (= temp107_130 temp107_132))
(assert (= var1716090 (bvsmod temp107_130 ARGNAME_groups_NAMEEND)))
(assert (= temp107_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp107_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp107_134 #x0000000000000001))
(assert (= var1716091 temp107_134))
(assert (= var1716110 var1716000))
(assert (= temp107_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp107_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp107_136 #x0000000000000001))
(assert (= var1716111 temp107_136))
(assert (= temp107_137 #x0000000000000001))
(assert (= var1705002 temp107_137))
(assert (= temp107_139 var1705002))
(assert (= temp107_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_139)))
(assert (= temp107_138 temp107_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp107_138)))
(assert (= temp107_141 #x0000000000000000))
(assert (= var1704114 temp107_141))
(assert (= temp107_143 var1704114))
(assert (= temp107_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp107_143)))
(assert (= temp107_142 temp107_144))
(assert (= temp107_145 #x0000000000000002))
(assert (= var1979241 temp107_145))
(assert (= temp107_146 #x0000000000000001))
(assert (= var1716281 temp107_146))
(assert (= temp107_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp107_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp107_148 #x0000000000000001))
(assert (= var997490 temp107_148))
(assert (= temp107_149 #x0000000000000001))
(assert (= var997620 temp107_149))
(assert (= var3486185 var997620))
(assert (= temp107_150 #x0000000000000000))
(assert (= var3686207 temp107_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp107_151 #x0000000000000002))
(assert (= var3815043 temp107_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp107_153 #xffffffffffffffff))
(assert (= temp107_152 temp107_153))
(assert (= temp107_155 #xffffffffffffffff))
(assert (= temp107_154 temp107_155))
(assert (= temp107_156 #x0000000000000001))
(assert (= var997490 temp107_156))
(model-add temp107_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp107_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp107_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp107_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp107_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp107_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






