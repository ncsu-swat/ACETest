(declare-fun temp828_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp828_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp828_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp828_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp828_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp828_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp828_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp828_8 () (_ BitVec 64))
(declare-fun temp828_10 () (_ BitVec 64))
(declare-fun temp828_9 () (_ BitVec 64))
(declare-fun temp828_12 () (_ BitVec 64))
(declare-fun temp828_11 () (_ BitVec 64))
(declare-fun temp828_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp828_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp828_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp828_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp828_17 () (_ BitVec 64))
(declare-fun temp828_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp828_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp828_20 () (_ BitVec 64))
(declare-fun temp828_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp828_22 () (_ BitVec 64))
(declare-fun temp828_23 () (_ BitVec 64))
(declare-fun temp828_24 () (_ BitVec 64))
(declare-fun temp828_25 () (_ BitVec 64))
(declare-fun temp828_26 () (_ BitVec 64))
(declare-fun temp828_27 () (_ BitVec 64))
(declare-fun temp828_28 () (_ BitVec 64))
(declare-fun temp828_29 () (_ BitVec 64))
(declare-fun temp828_30 () (_ BitVec 64))
(declare-fun temp828_31 () (_ BitVec 64))
(declare-fun temp828_32 () (_ BitVec 64))
(declare-fun temp828_33 () (_ BitVec 64))
(declare-fun temp828_34 () (_ BitVec 64))
(declare-fun temp828_35 () (_ BitVec 64))
(declare-fun temp828_36 () (_ BitVec 64))
(declare-fun temp828_37 () (_ BitVec 64))
(declare-fun temp828_38 () (_ BitVec 64))
(declare-fun temp828_39 () (_ BitVec 64))
(declare-fun temp828_40 () (_ BitVec 64))
(declare-fun temp828_41 () (_ BitVec 64))
(declare-fun temp828_42 () (_ BitVec 64))
(declare-fun temp828_43 () (_ BitVec 64))
(declare-fun temp828_44 () (_ BitVec 64))
(declare-fun temp828_45 () (_ BitVec 64))
(declare-fun temp828_46 () (_ BitVec 64))
(declare-fun temp828_47 () (_ BitVec 64))
(declare-fun temp828_48 () (_ BitVec 64))
(declare-fun temp828_49 () (_ BitVec 64))
(declare-fun temp828_50 () (_ BitVec 64))
(declare-fun temp828_51 () (_ BitVec 64))
(declare-fun temp828_52 () (_ BitVec 64))
(declare-fun temp828_53 () (_ BitVec 64))
(declare-fun temp828_54 () (_ BitVec 64))
(declare-fun temp828_55 () (_ BitVec 64))
(declare-fun temp828_56 () (_ BitVec 64))
(declare-fun temp828_57 () (_ BitVec 64))
(declare-fun temp828_58 () (_ BitVec 64))
(declare-fun temp828_59 () (_ BitVec 64))
(declare-fun temp828_60 () (_ BitVec 64))
(declare-fun temp828_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp828_62 () (_ BitVec 64))
(declare-fun temp828_63 () (_ BitVec 64))
(declare-fun temp828_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp828_65 () (_ BitVec 64))
(declare-fun temp828_66 () (_ BitVec 64))
(declare-fun temp828_67 () (_ BitVec 64))
(declare-fun temp828_68 () (_ BitVec 64))
(declare-fun temp828_69 () (_ BitVec 64))
(declare-fun temp828_70 () (_ BitVec 64))
(declare-fun temp828_71 () (_ BitVec 64))
(declare-fun temp828_72 () (_ BitVec 64))
(declare-fun temp828_73 () (_ BitVec 64))
(declare-fun temp828_74 () (_ BitVec 64))
(declare-fun temp828_75 () (_ BitVec 64))
(declare-fun temp828_76 () (_ BitVec 64))
(declare-fun temp828_77 () (_ BitVec 64))
(declare-fun temp828_78 () (_ BitVec 64))
(declare-fun temp828_79 () (_ BitVec 64))
(declare-fun temp828_80 () (_ BitVec 64))
(declare-fun temp828_81 () (_ BitVec 64))
(declare-fun temp828_82 () (_ BitVec 64))
(declare-fun temp828_83 () (_ BitVec 64))
(declare-fun temp828_84 () (_ BitVec 64))
(declare-fun temp828_85 () (_ BitVec 64))
(declare-fun temp828_86 () (_ BitVec 64))
(declare-fun temp828_87 () (_ BitVec 64))
(declare-fun temp828_88 () (_ BitVec 64))
(declare-fun temp828_89 () (_ BitVec 64))
(declare-fun temp828_90 () (_ BitVec 64))
(declare-fun temp828_91 () (_ BitVec 64))
(declare-fun temp828_92 () (_ BitVec 64))
(declare-fun temp828_93 () (_ BitVec 64))
(declare-fun temp828_94 () (_ BitVec 64))
(declare-fun temp828_95 () (_ BitVec 64))
(declare-fun temp828_96 () (_ BitVec 64))
(declare-fun temp828_97 () (_ BitVec 64))
(declare-fun temp828_98 () (_ BitVec 64))
(declare-fun temp828_99 () (_ BitVec 64))
(declare-fun temp828_100 () (_ BitVec 64))
(declare-fun temp828_101 () (_ BitVec 64))
(declare-fun temp828_102 () (_ BitVec 64))
(declare-fun temp828_103 () (_ BitVec 64))
(declare-fun temp828_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp828_105 () (_ BitVec 64))
(declare-fun temp828_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp828_107 () (_ BitVec 64))
(declare-fun temp828_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp828_109 () (_ BitVec 64))
(declare-fun temp828_110 () (_ BitVec 64))
(declare-fun temp828_111 () (_ BitVec 64))
(declare-fun temp828_112 () (_ BitVec 64))
(declare-fun temp828_113 () (_ BitVec 64))
(declare-fun temp828_114 () (_ BitVec 64))
(declare-fun temp828_115 () (_ BitVec 64))
(declare-fun temp828_116 () (_ BitVec 64))
(declare-fun temp828_117 () (_ BitVec 64))
(declare-fun temp828_118 () (_ BitVec 64))
(declare-fun temp828_119 () (_ BitVec 64))
(declare-fun temp828_120 () (_ BitVec 64))
(declare-fun temp828_121 () (_ BitVec 64))
(declare-fun temp828_122 () (_ BitVec 64))
(declare-fun temp828_123 () (_ BitVec 64))
(declare-fun temp828_124 () (_ BitVec 64))
(declare-fun temp828_126 () (_ BitVec 64))
(declare-fun temp828_127 () (_ BitVec 64))
(declare-fun temp828_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp828_128 () (_ BitVec 64))
(declare-fun temp828_129 () (_ BitVec 64))
(declare-fun temp828_131 () (_ BitVec 64))
(declare-fun temp828_132 () (_ BitVec 64))
(declare-fun temp828_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp828_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp828_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp828_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp828_136 () (_ BitVec 64))
(declare-fun temp828_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp828_139 () (_ BitVec 64))
(declare-fun temp828_140 () (_ BitVec 64))
(declare-fun temp828_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp828_141 () (_ BitVec 64))
(declare-fun temp828_143 () (_ BitVec 64))
(declare-fun temp828_144 () (_ BitVec 64))
(declare-fun temp828_142 () (_ BitVec 64))
(declare-fun temp828_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp828_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp828_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp828_148 () (_ BitVec 64))
(declare-fun temp828_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp828_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp828_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4534672 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun temp828_152 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp828_153 () (_ BitVec 64))
(assert (= temp828_1 #x0000000000000003))
(assert (= var465453 temp828_1))
(assert (= temp828_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp828_2)))
(assert (= temp828_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp828_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp828_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp828_4)))
(assert (= temp828_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp828_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp828_6 #x0000000000000000))
(assert (= var465488 temp828_6))
(assert (= temp828_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp828_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp828_8 #x0000000000000001))
(assert (= var465522 temp828_8))
(assert (= temp828_10 #x0000000000000000))
(assert (= temp828_9 temp828_10))
(assert (= temp828_12 #x0000000000000003))
(assert (= temp828_11 temp828_12))
(assert (= temp828_13 #x0000000000000000))
(assert (= var863614 temp828_13))
(assert (= temp828_14 #x0000000000000001))
(assert (= var863635 temp828_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp828_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp828_15)))
(assert (= temp828_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp828_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_17 #x0000000000000000))
(assert (= var997373 temp828_17))
(assert (= temp828_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp828_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_19 #x0000000000000000))
(assert (= var997418 temp828_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp828_20 #x0000000000000000))
(assert (= temp828_21 temp828_20))
(assert (= temp828_22 (select ARGNAME_padding_NAMEEND_VAL temp828_21)))
(assert (= temp828_23 #x0000000000000001))
(assert (= temp828_24 temp828_23))
(assert (= temp828_25 (select ARGNAME_padding_NAMEEND_VAL temp828_24)))
(assert (= temp828_26 #x0000000000000002))
(assert (= temp828_27 temp828_26))
(assert (= temp828_28 (select ARGNAME_padding_NAMEEND_VAL temp828_27)))
(assert (= temp828_29 #x0000000000000003))
(assert (= temp828_30 temp828_29))
(assert (= temp828_31 (select ARGNAME_padding_NAMEEND_VAL temp828_30)))
(assert (= temp828_32 #x0000000000000004))
(assert (= temp828_33 temp828_32))
(assert (= temp828_34 (select ARGNAME_padding_NAMEEND_VAL temp828_33)))
(assert (= temp828_35 #x0000000000000005))
(assert (= temp828_36 temp828_35))
(assert (= temp828_37 (select ARGNAME_padding_NAMEEND_VAL temp828_36)))
(assert (= temp828_38 #x0000000000000000))
(assert (= temp828_39 #x0000000000000000))
(assert (= temp828_40 temp828_39))
(assert (= temp828_41 (select ARGNAME_padding_NAMEEND_VAL temp828_40)))
(assert (= temp828_42 #x0000000000000000))
(assert (= temp828_43 #x0000000000000001))
(assert (= temp828_44 temp828_43))
(assert (= temp828_45 (select ARGNAME_padding_NAMEEND_VAL temp828_44)))
(assert (= temp828_46 #x0000000000000000))
(assert (= temp828_47 #x0000000000000002))
(assert (= temp828_48 temp828_47))
(assert (= temp828_49 (select ARGNAME_padding_NAMEEND_VAL temp828_48)))
(assert (= temp828_50 #x0000000000000000))
(assert (= temp828_51 #x0000000000000003))
(assert (= temp828_52 temp828_51))
(assert (= temp828_53 (select ARGNAME_padding_NAMEEND_VAL temp828_52)))
(assert (= temp828_54 #x0000000000000000))
(assert (= temp828_55 #x0000000000000004))
(assert (= temp828_56 temp828_55))
(assert (= temp828_57 (select ARGNAME_padding_NAMEEND_VAL temp828_56)))
(assert (= temp828_58 #x0000000000000000))
(assert (= temp828_59 #x0000000000000005))
(assert (= temp828_60 temp828_59))
(assert (= temp828_61 (select ARGNAME_padding_NAMEEND_VAL temp828_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp828_41 temp828_38)
             (bvslt temp828_45 temp828_42)
             (bvslt temp828_49 temp828_46)
             (bvslt temp828_53 temp828_50)
             (bvslt temp828_57 temp828_54)
             (bvslt temp828_61 temp828_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_62 #x0000000000000000))
(assert (= var1716002 temp828_62))
(assert (= temp828_63 #x0000000000000000))
(assert (= temp828_64 temp828_63))
(assert (= temp828_65 (select ARGNAME_stride_NAMEEND_VAL temp828_64)))
(assert (= temp828_66 #x0000000000000001))
(assert (= temp828_67 temp828_66))
(assert (= temp828_68 (select ARGNAME_stride_NAMEEND_VAL temp828_67)))
(assert (= temp828_69 #x0000000000000002))
(assert (= temp828_70 temp828_69))
(assert (= temp828_71 (select ARGNAME_stride_NAMEEND_VAL temp828_70)))
(assert (= temp828_72 #x0000000000000003))
(assert (= temp828_73 temp828_72))
(assert (= temp828_74 (select ARGNAME_stride_NAMEEND_VAL temp828_73)))
(assert (= temp828_75 #x0000000000000004))
(assert (= temp828_76 temp828_75))
(assert (= temp828_77 (select ARGNAME_stride_NAMEEND_VAL temp828_76)))
(assert (= temp828_78 #x0000000000000005))
(assert (= temp828_79 temp828_78))
(assert (= temp828_80 (select ARGNAME_stride_NAMEEND_VAL temp828_79)))
(assert (= temp828_81 #x0000000000000000))
(assert (= temp828_82 #x0000000000000000))
(assert (= temp828_83 temp828_82))
(assert (= temp828_84 (select ARGNAME_stride_NAMEEND_VAL temp828_83)))
(assert (= temp828_85 #x0000000000000000))
(assert (= temp828_86 #x0000000000000001))
(assert (= temp828_87 temp828_86))
(assert (= temp828_88 (select ARGNAME_stride_NAMEEND_VAL temp828_87)))
(assert (= temp828_89 #x0000000000000000))
(assert (= temp828_90 #x0000000000000002))
(assert (= temp828_91 temp828_90))
(assert (= temp828_92 (select ARGNAME_stride_NAMEEND_VAL temp828_91)))
(assert (= temp828_93 #x0000000000000000))
(assert (= temp828_94 #x0000000000000003))
(assert (= temp828_95 temp828_94))
(assert (= temp828_96 (select ARGNAME_stride_NAMEEND_VAL temp828_95)))
(assert (= temp828_97 #x0000000000000000))
(assert (= temp828_98 #x0000000000000004))
(assert (= temp828_99 temp828_98))
(assert (= temp828_100 (select ARGNAME_stride_NAMEEND_VAL temp828_99)))
(assert (= temp828_101 #x0000000000000000))
(assert (= temp828_102 #x0000000000000005))
(assert (= temp828_103 temp828_102))
(assert (= temp828_104 (select ARGNAME_stride_NAMEEND_VAL temp828_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp828_84 temp828_81)
             (bvsle temp828_88 temp828_85)
             (bvsle temp828_92 temp828_89)
             (bvsle temp828_96 temp828_93)
             (bvsle temp828_100 temp828_97)
             (bvsle temp828_104 temp828_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_105 #x0000000000000000))
(assert (= var1716023 temp828_105))
(assert (= temp828_106 #x0000000000000000))
(assert (= var1704114 temp828_106))
(assert (= temp828_107 #x0000000000000000))
(assert (= temp828_108 temp828_107))
(assert (= temp828_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_108)))
(assert (= temp828_110 #x0000000000000001))
(assert (= temp828_111 temp828_110))
(assert (= temp828_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_111)))
(assert (= temp828_113 #x0000000000000002))
(assert (= temp828_114 temp828_113))
(assert (= temp828_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_114)))
(assert (= temp828_116 #x0000000000000003))
(assert (= temp828_117 temp828_116))
(assert (= temp828_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_117)))
(assert (= temp828_119 #x0000000000000004))
(assert (= temp828_120 temp828_119))
(assert (= temp828_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_120)))
(assert (= temp828_122 #x0000000000000005))
(assert (= temp828_123 temp828_122))
(assert (= temp828_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_123)))
(assert (= temp828_126 var1704114))
(assert (= temp828_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_126)))
(assert (= temp828_125 temp828_127))
(assert (= var1716068
   (ite (bvslt temp828_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_128 #x0000000000000000))
(assert (= var1716068 temp828_128))
(assert (= temp828_129 #x0000000000000000))
(assert (= var1704114 temp828_129))
(assert (= temp828_131 var1704114))
(assert (= temp828_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_131)))
(assert (= temp828_130 temp828_132))
(assert (= var1716090 (bvsmod temp828_130 ARGNAME_groups_NAMEEND)))
(assert (= temp828_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp828_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp828_134 #x0000000000000001))
(assert (= var1716091 temp828_134))
(assert (= var1716110 var1716000))
(assert (= temp828_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp828_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp828_136 #x0000000000000001))
(assert (= var1716111 temp828_136))
(assert (= temp828_137 #x0000000000000001))
(assert (= var1705002 temp828_137))
(assert (= temp828_139 var1705002))
(assert (= temp828_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_139)))
(assert (= temp828_138 temp828_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp828_138)))
(assert (= temp828_141 #x0000000000000000))
(assert (= var1704114 temp828_141))
(assert (= temp828_143 var1704114))
(assert (= temp828_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp828_143)))
(assert (= temp828_142 temp828_144))
(assert (= temp828_145 #x0000000000000002))
(assert (= var1979241 temp828_145))
(assert (= temp828_146 #x0000000000000001))
(assert (= var1716281 temp828_146))
(assert (= temp828_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp828_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp828_148 #x0000000000000001))
(assert (= var997490 temp828_148))
(assert (= temp828_149 #x0000000000000001))
(assert (= var997620 temp828_149))
(assert (= var3486185 var997620))
(assert (= temp828_150 #x0000000000000000))
(assert (= var3686207 temp828_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp828_151 #x0000000000000002))
(assert (= var3815043 temp828_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4534672 var997633))
(assert (= var4796816 var997633))
(assert (= temp828_152 #x0000000000000000))
(assert (= var5124496 temp828_152))
(assert (= temp828_153 #x0000000000000001))
(assert (= var997490 temp828_153))
(model-add temp828_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp828_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp828_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp828_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp828_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp828_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






