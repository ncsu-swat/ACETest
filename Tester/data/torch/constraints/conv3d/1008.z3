(declare-fun temp10115_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp10115_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp10115_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp10115_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp10115_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp10115_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp10115_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp10115_8 () (_ BitVec 64))
(declare-fun temp10115_10 () (_ BitVec 64))
(declare-fun temp10115_9 () (_ BitVec 64))
(declare-fun temp10115_12 () (_ BitVec 64))
(declare-fun temp10115_11 () (_ BitVec 64))
(declare-fun temp10115_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp10115_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp10115_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp10115_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp10115_17 () (_ BitVec 64))
(declare-fun temp10115_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp10115_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp10115_20 () (_ BitVec 64))
(declare-fun temp10115_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10115_22 () (_ BitVec 64))
(declare-fun temp10115_23 () (_ BitVec 64))
(declare-fun temp10115_24 () (_ BitVec 64))
(declare-fun temp10115_25 () (_ BitVec 64))
(declare-fun temp10115_26 () (_ BitVec 64))
(declare-fun temp10115_27 () (_ BitVec 64))
(declare-fun temp10115_28 () (_ BitVec 64))
(declare-fun temp10115_29 () (_ BitVec 64))
(declare-fun temp10115_30 () (_ BitVec 64))
(declare-fun temp10115_31 () (_ BitVec 64))
(declare-fun temp10115_32 () (_ BitVec 64))
(declare-fun temp10115_33 () (_ BitVec 64))
(declare-fun temp10115_34 () (_ BitVec 64))
(declare-fun temp10115_35 () (_ BitVec 64))
(declare-fun temp10115_36 () (_ BitVec 64))
(declare-fun temp10115_37 () (_ BitVec 64))
(declare-fun temp10115_38 () (_ BitVec 64))
(declare-fun temp10115_39 () (_ BitVec 64))
(declare-fun temp10115_40 () (_ BitVec 64))
(declare-fun temp10115_41 () (_ BitVec 64))
(declare-fun temp10115_42 () (_ BitVec 64))
(declare-fun temp10115_43 () (_ BitVec 64))
(declare-fun temp10115_44 () (_ BitVec 64))
(declare-fun temp10115_45 () (_ BitVec 64))
(declare-fun temp10115_46 () (_ BitVec 64))
(declare-fun temp10115_47 () (_ BitVec 64))
(declare-fun temp10115_48 () (_ BitVec 64))
(declare-fun temp10115_49 () (_ BitVec 64))
(declare-fun temp10115_50 () (_ BitVec 64))
(declare-fun temp10115_51 () (_ BitVec 64))
(declare-fun temp10115_52 () (_ BitVec 64))
(declare-fun temp10115_53 () (_ BitVec 64))
(declare-fun temp10115_54 () (_ BitVec 64))
(declare-fun temp10115_55 () (_ BitVec 64))
(declare-fun temp10115_56 () (_ BitVec 64))
(declare-fun temp10115_57 () (_ BitVec 64))
(declare-fun temp10115_58 () (_ BitVec 64))
(declare-fun temp10115_59 () (_ BitVec 64))
(declare-fun temp10115_60 () (_ BitVec 64))
(declare-fun temp10115_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp10115_62 () (_ BitVec 64))
(declare-fun temp10115_63 () (_ BitVec 64))
(declare-fun temp10115_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10115_65 () (_ BitVec 64))
(declare-fun temp10115_66 () (_ BitVec 64))
(declare-fun temp10115_67 () (_ BitVec 64))
(declare-fun temp10115_68 () (_ BitVec 64))
(declare-fun temp10115_69 () (_ BitVec 64))
(declare-fun temp10115_70 () (_ BitVec 64))
(declare-fun temp10115_71 () (_ BitVec 64))
(declare-fun temp10115_72 () (_ BitVec 64))
(declare-fun temp10115_73 () (_ BitVec 64))
(declare-fun temp10115_74 () (_ BitVec 64))
(declare-fun temp10115_75 () (_ BitVec 64))
(declare-fun temp10115_76 () (_ BitVec 64))
(declare-fun temp10115_77 () (_ BitVec 64))
(declare-fun temp10115_78 () (_ BitVec 64))
(declare-fun temp10115_79 () (_ BitVec 64))
(declare-fun temp10115_80 () (_ BitVec 64))
(declare-fun temp10115_81 () (_ BitVec 64))
(declare-fun temp10115_82 () (_ BitVec 64))
(declare-fun temp10115_83 () (_ BitVec 64))
(declare-fun temp10115_84 () (_ BitVec 64))
(declare-fun temp10115_85 () (_ BitVec 64))
(declare-fun temp10115_86 () (_ BitVec 64))
(declare-fun temp10115_87 () (_ BitVec 64))
(declare-fun temp10115_88 () (_ BitVec 64))
(declare-fun temp10115_89 () (_ BitVec 64))
(declare-fun temp10115_90 () (_ BitVec 64))
(declare-fun temp10115_91 () (_ BitVec 64))
(declare-fun temp10115_92 () (_ BitVec 64))
(declare-fun temp10115_93 () (_ BitVec 64))
(declare-fun temp10115_94 () (_ BitVec 64))
(declare-fun temp10115_95 () (_ BitVec 64))
(declare-fun temp10115_96 () (_ BitVec 64))
(declare-fun temp10115_97 () (_ BitVec 64))
(declare-fun temp10115_98 () (_ BitVec 64))
(declare-fun temp10115_99 () (_ BitVec 64))
(declare-fun temp10115_100 () (_ BitVec 64))
(declare-fun temp10115_101 () (_ BitVec 64))
(declare-fun temp10115_102 () (_ BitVec 64))
(declare-fun temp10115_103 () (_ BitVec 64))
(declare-fun temp10115_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp10115_105 () (_ BitVec 64))
(declare-fun temp10115_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp10115_107 () (_ BitVec 64))
(declare-fun temp10115_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10115_109 () (_ BitVec 64))
(declare-fun temp10115_110 () (_ BitVec 64))
(declare-fun temp10115_111 () (_ BitVec 64))
(declare-fun temp10115_112 () (_ BitVec 64))
(declare-fun temp10115_113 () (_ BitVec 64))
(declare-fun temp10115_114 () (_ BitVec 64))
(declare-fun temp10115_115 () (_ BitVec 64))
(declare-fun temp10115_116 () (_ BitVec 64))
(declare-fun temp10115_117 () (_ BitVec 64))
(declare-fun temp10115_118 () (_ BitVec 64))
(declare-fun temp10115_119 () (_ BitVec 64))
(declare-fun temp10115_120 () (_ BitVec 64))
(declare-fun temp10115_121 () (_ BitVec 64))
(declare-fun temp10115_122 () (_ BitVec 64))
(declare-fun temp10115_123 () (_ BitVec 64))
(declare-fun temp10115_124 () (_ BitVec 64))
(declare-fun temp10115_126 () (_ BitVec 64))
(declare-fun temp10115_127 () (_ BitVec 64))
(declare-fun temp10115_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp10115_128 () (_ BitVec 64))
(declare-fun temp10115_129 () (_ BitVec 64))
(declare-fun temp10115_131 () (_ BitVec 64))
(declare-fun temp10115_132 () (_ BitVec 64))
(declare-fun temp10115_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp10115_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp10115_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp10115_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp10115_136 () (_ BitVec 64))
(declare-fun temp10115_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp10115_139 () (_ BitVec 64))
(declare-fun temp10115_140 () (_ BitVec 64))
(declare-fun temp10115_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp10115_141 () (_ BitVec 64))
(declare-fun temp10115_143 () (_ BitVec 64))
(declare-fun temp10115_144 () (_ BitVec 64))
(declare-fun temp10115_142 () (_ BitVec 64))
(declare-fun temp10115_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp10115_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp10115_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp10115_148 () (_ BitVec 64))
(declare-fun temp10115_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp10115_150 () (_ BitVec 64))
(declare-fun var3486352 () (_ BitVec 64))
(declare-fun var3486179 () (_ BitVec 64))
(declare-fun var997629 () (_ BitVec 64))
(declare-fun var3751705 () (_ BitVec 64))
(declare-fun temp10115_151 () (_ BitVec 64))
(declare-fun temp10115_152 () (_ BitVec 64))
(declare-fun temp10115_153 () (_ BitVec 64))
(declare-fun var3946115 () (_ BitVec 64))
(declare-fun var3946117 () (_ BitVec 64))
(declare-fun var4011660 () (_ BitVec 64))
(declare-fun var4011661 () (_ BitVec 64))
(declare-fun temp10115_154 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp10115_155 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var5324621 () (_ BitVec 64))
(declare-fun temp10115_157 () (_ BitVec 64))
(declare-fun temp10115_156 () (_ BitVec 64))
(declare-fun temp10115_158 () (_ BitVec 64))
(declare-fun var5901802 () (_ BitVec 64))
(declare-fun temp10115_160 () (_ BitVec 64))
(declare-fun temp10115_159 () (_ BitVec 64))
(declare-fun temp10115_161 () (_ BitVec 64))
(assert (= temp10115_1 #x0000000000000003))
(assert (= var465453 temp10115_1))
(assert (= temp10115_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp10115_2)))
(assert (= temp10115_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp10115_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp10115_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp10115_4)))
(assert (= temp10115_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp10115_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp10115_6 #x0000000000000000))
(assert (= var465488 temp10115_6))
(assert (= temp10115_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp10115_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10115_8 #x0000000000000001))
(assert (= var465522 temp10115_8))
(assert (= temp10115_10 #x0000000000000000))
(assert (= temp10115_9 temp10115_10))
(assert (= temp10115_12 #x0000000000000003))
(assert (= temp10115_11 temp10115_12))
(assert (= temp10115_13 #x0000000000000000))
(assert (= var863614 temp10115_13))
(assert (= temp10115_14 #x0000000000000001))
(assert (= var863635 temp10115_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp10115_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp10115_15)))
(assert (= temp10115_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10115_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10115_17 #x0000000000000000))
(assert (= var997373 temp10115_17))
(assert (= temp10115_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp10115_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10115_19 #x0000000000000000))
(assert (= var997418 temp10115_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp10115_20 #x0000000000000000))
(assert (= temp10115_21 temp10115_20))
(assert (= temp10115_22 (select ARGNAME_padding_NAMEEND_VAL temp10115_21)))
(assert (= temp10115_23 #x0000000000000001))
(assert (= temp10115_24 temp10115_23))
(assert (= temp10115_25 (select ARGNAME_padding_NAMEEND_VAL temp10115_24)))
(assert (= temp10115_26 #x0000000000000002))
(assert (= temp10115_27 temp10115_26))
(assert (= temp10115_28 (select ARGNAME_padding_NAMEEND_VAL temp10115_27)))
(assert (= temp10115_29 #x0000000000000003))
(assert (= temp10115_30 temp10115_29))
(assert (= temp10115_31 (select ARGNAME_padding_NAMEEND_VAL temp10115_30)))
(assert (= temp10115_32 #x0000000000000004))
(assert (= temp10115_33 temp10115_32))
(assert (= temp10115_34 (select ARGNAME_padding_NAMEEND_VAL temp10115_33)))
(assert (= temp10115_35 #x0000000000000005))
(assert (= temp10115_36 temp10115_35))
(assert (= temp10115_37 (select ARGNAME_padding_NAMEEND_VAL temp10115_36)))
(assert (= temp10115_38 #x0000000000000000))
(assert (= temp10115_39 #x0000000000000000))
(assert (= temp10115_40 temp10115_39))
(assert (= temp10115_41 (select ARGNAME_padding_NAMEEND_VAL temp10115_40)))
(assert (= temp10115_42 #x0000000000000000))
(assert (= temp10115_43 #x0000000000000001))
(assert (= temp10115_44 temp10115_43))
(assert (= temp10115_45 (select ARGNAME_padding_NAMEEND_VAL temp10115_44)))
(assert (= temp10115_46 #x0000000000000000))
(assert (= temp10115_47 #x0000000000000002))
(assert (= temp10115_48 temp10115_47))
(assert (= temp10115_49 (select ARGNAME_padding_NAMEEND_VAL temp10115_48)))
(assert (= temp10115_50 #x0000000000000000))
(assert (= temp10115_51 #x0000000000000003))
(assert (= temp10115_52 temp10115_51))
(assert (= temp10115_53 (select ARGNAME_padding_NAMEEND_VAL temp10115_52)))
(assert (= temp10115_54 #x0000000000000000))
(assert (= temp10115_55 #x0000000000000004))
(assert (= temp10115_56 temp10115_55))
(assert (= temp10115_57 (select ARGNAME_padding_NAMEEND_VAL temp10115_56)))
(assert (= temp10115_58 #x0000000000000000))
(assert (= temp10115_59 #x0000000000000005))
(assert (= temp10115_60 temp10115_59))
(assert (= temp10115_61 (select ARGNAME_padding_NAMEEND_VAL temp10115_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp10115_41 temp10115_38)
             (bvslt temp10115_45 temp10115_42)
             (bvslt temp10115_49 temp10115_46)
             (bvslt temp10115_53 temp10115_50)
             (bvslt temp10115_57 temp10115_54)
             (bvslt temp10115_61 temp10115_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10115_62 #x0000000000000000))
(assert (= var1716002 temp10115_62))
(assert (= temp10115_63 #x0000000000000000))
(assert (= temp10115_64 temp10115_63))
(assert (= temp10115_65 (select ARGNAME_stride_NAMEEND_VAL temp10115_64)))
(assert (= temp10115_66 #x0000000000000001))
(assert (= temp10115_67 temp10115_66))
(assert (= temp10115_68 (select ARGNAME_stride_NAMEEND_VAL temp10115_67)))
(assert (= temp10115_69 #x0000000000000002))
(assert (= temp10115_70 temp10115_69))
(assert (= temp10115_71 (select ARGNAME_stride_NAMEEND_VAL temp10115_70)))
(assert (= temp10115_72 #x0000000000000003))
(assert (= temp10115_73 temp10115_72))
(assert (= temp10115_74 (select ARGNAME_stride_NAMEEND_VAL temp10115_73)))
(assert (= temp10115_75 #x0000000000000004))
(assert (= temp10115_76 temp10115_75))
(assert (= temp10115_77 (select ARGNAME_stride_NAMEEND_VAL temp10115_76)))
(assert (= temp10115_78 #x0000000000000005))
(assert (= temp10115_79 temp10115_78))
(assert (= temp10115_80 (select ARGNAME_stride_NAMEEND_VAL temp10115_79)))
(assert (= temp10115_81 #x0000000000000000))
(assert (= temp10115_82 #x0000000000000000))
(assert (= temp10115_83 temp10115_82))
(assert (= temp10115_84 (select ARGNAME_stride_NAMEEND_VAL temp10115_83)))
(assert (= temp10115_85 #x0000000000000000))
(assert (= temp10115_86 #x0000000000000001))
(assert (= temp10115_87 temp10115_86))
(assert (= temp10115_88 (select ARGNAME_stride_NAMEEND_VAL temp10115_87)))
(assert (= temp10115_89 #x0000000000000000))
(assert (= temp10115_90 #x0000000000000002))
(assert (= temp10115_91 temp10115_90))
(assert (= temp10115_92 (select ARGNAME_stride_NAMEEND_VAL temp10115_91)))
(assert (= temp10115_93 #x0000000000000000))
(assert (= temp10115_94 #x0000000000000003))
(assert (= temp10115_95 temp10115_94))
(assert (= temp10115_96 (select ARGNAME_stride_NAMEEND_VAL temp10115_95)))
(assert (= temp10115_97 #x0000000000000000))
(assert (= temp10115_98 #x0000000000000004))
(assert (= temp10115_99 temp10115_98))
(assert (= temp10115_100 (select ARGNAME_stride_NAMEEND_VAL temp10115_99)))
(assert (= temp10115_101 #x0000000000000000))
(assert (= temp10115_102 #x0000000000000005))
(assert (= temp10115_103 temp10115_102))
(assert (= temp10115_104 (select ARGNAME_stride_NAMEEND_VAL temp10115_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp10115_84 temp10115_81)
             (bvsle temp10115_88 temp10115_85)
             (bvsle temp10115_92 temp10115_89)
             (bvsle temp10115_96 temp10115_93)
             (bvsle temp10115_100 temp10115_97)
             (bvsle temp10115_104 temp10115_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10115_105 #x0000000000000000))
(assert (= var1716023 temp10115_105))
(assert (= temp10115_106 #x0000000000000000))
(assert (= var1704114 temp10115_106))
(assert (= temp10115_107 #x0000000000000000))
(assert (= temp10115_108 temp10115_107))
(assert (= temp10115_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_108)))
(assert (= temp10115_110 #x0000000000000001))
(assert (= temp10115_111 temp10115_110))
(assert (= temp10115_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_111)))
(assert (= temp10115_113 #x0000000000000002))
(assert (= temp10115_114 temp10115_113))
(assert (= temp10115_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_114)))
(assert (= temp10115_116 #x0000000000000003))
(assert (= temp10115_117 temp10115_116))
(assert (= temp10115_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_117)))
(assert (= temp10115_119 #x0000000000000004))
(assert (= temp10115_120 temp10115_119))
(assert (= temp10115_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_120)))
(assert (= temp10115_122 #x0000000000000005))
(assert (= temp10115_123 temp10115_122))
(assert (= temp10115_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_123)))
(assert (= temp10115_126 var1704114))
(assert (= temp10115_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_126)))
(assert (= temp10115_125 temp10115_127))
(assert (= var1716068
   (ite (bvslt temp10115_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10115_128 #x0000000000000000))
(assert (= var1716068 temp10115_128))
(assert (= temp10115_129 #x0000000000000000))
(assert (= var1704114 temp10115_129))
(assert (= temp10115_131 var1704114))
(assert (= temp10115_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_131)))
(assert (= temp10115_130 temp10115_132))
(assert (= var1716090 (bvsmod temp10115_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10115_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp10115_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10115_134 #x0000000000000001))
(assert (= var1716091 temp10115_134))
(assert (= var1716110 var1716000))
(assert (= temp10115_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp10115_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10115_136 #x0000000000000001))
(assert (= var1716111 temp10115_136))
(assert (= temp10115_137 #x0000000000000001))
(assert (= var1705002 temp10115_137))
(assert (= temp10115_139 var1705002))
(assert (= temp10115_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_139)))
(assert (= temp10115_138 temp10115_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp10115_138)))
(assert (= temp10115_141 #x0000000000000000))
(assert (= var1704114 temp10115_141))
(assert (= temp10115_143 var1704114))
(assert (= temp10115_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10115_143)))
(assert (= temp10115_142 temp10115_144))
(assert (= temp10115_145 #x0000000000000002))
(assert (= var1979241 temp10115_145))
(assert (= temp10115_146 #x0000000000000001))
(assert (= var1716281 temp10115_146))
(assert (= temp10115_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10115_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10115_148 #x0000000000000001))
(assert (= var997490 temp10115_148))
(assert (= temp10115_149 #x0000000000000001))
(assert (= var997620 temp10115_149))
(assert (= var3486185 var997620))
(assert (= temp10115_150 #x0000000000000002))
(assert (= var3486352 temp10115_150))
(assert (= var3486179 var3486352))
(assert (= var997629 var3486179))
(assert (= var3751705 var997629))
(assert (= temp10115_151 #x0000000000000002))
(assert (= temp10115_152 #x0000000000000003))
(assert (or false (= var3751705 temp10115_151) (= var3751705 temp10115_152)))
(assert (= temp10115_153 #x0000000000000002))
(assert (= var3946115 temp10115_153))
(assert (= var3946117 (bvsub ARGNAME_weight_NAMEEND_DIM var3946115)))
(assert (= var4011660 var3946115))
(assert (= var4011661 var3946117))
(assert (= temp10115_154 #x0000000000000002))
(assert (or false (= var997629 temp10115_154)))
(assert (= var997820 var997345))
(assert (= temp10115_155 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp10115_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5324621 var997821))
(assert (= temp10115_157 #x0000000000000001))
(assert (= temp10115_156 temp10115_157))
(assert (= temp10115_158 #x0000000000000001))
(assert (= var5901802 temp10115_158))
(assert (= temp10115_160 #xffffffffffffffff))
(assert (= temp10115_159 temp10115_160))
(assert (= temp10115_161 #x0000000000000001))
(assert (= var997490 temp10115_161))
(model-add temp10115_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp10115_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp10115_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10115_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp10115_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10115_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





