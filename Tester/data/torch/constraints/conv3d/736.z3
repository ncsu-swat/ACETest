(declare-fun temp980_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp980_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp980_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp980_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp980_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp980_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp980_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp980_8 () (_ BitVec 64))
(declare-fun temp980_10 () (_ BitVec 64))
(declare-fun temp980_9 () (_ BitVec 64))
(declare-fun temp980_12 () (_ BitVec 64))
(declare-fun temp980_11 () (_ BitVec 64))
(declare-fun temp980_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp980_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp980_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp980_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp980_17 () (_ BitVec 64))
(declare-fun temp980_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp980_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp980_20 () (_ BitVec 64))
(declare-fun temp980_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_22 () (_ BitVec 64))
(declare-fun temp980_23 () (_ BitVec 64))
(declare-fun temp980_24 () (_ BitVec 64))
(declare-fun temp980_25 () (_ BitVec 64))
(declare-fun temp980_26 () (_ BitVec 64))
(declare-fun temp980_27 () (_ BitVec 64))
(declare-fun temp980_28 () (_ BitVec 64))
(declare-fun temp980_29 () (_ BitVec 64))
(declare-fun temp980_30 () (_ BitVec 64))
(declare-fun temp980_31 () (_ BitVec 64))
(declare-fun temp980_32 () (_ BitVec 64))
(declare-fun temp980_33 () (_ BitVec 64))
(declare-fun temp980_34 () (_ BitVec 64))
(declare-fun temp980_35 () (_ BitVec 64))
(declare-fun temp980_36 () (_ BitVec 64))
(declare-fun temp980_37 () (_ BitVec 64))
(declare-fun temp980_38 () (_ BitVec 64))
(declare-fun temp980_39 () (_ BitVec 64))
(declare-fun temp980_40 () (_ BitVec 64))
(declare-fun temp980_41 () (_ BitVec 64))
(declare-fun temp980_42 () (_ BitVec 64))
(declare-fun temp980_43 () (_ BitVec 64))
(declare-fun temp980_44 () (_ BitVec 64))
(declare-fun temp980_45 () (_ BitVec 64))
(declare-fun temp980_46 () (_ BitVec 64))
(declare-fun temp980_47 () (_ BitVec 64))
(declare-fun temp980_48 () (_ BitVec 64))
(declare-fun temp980_49 () (_ BitVec 64))
(declare-fun temp980_50 () (_ BitVec 64))
(declare-fun temp980_51 () (_ BitVec 64))
(declare-fun temp980_52 () (_ BitVec 64))
(declare-fun temp980_53 () (_ BitVec 64))
(declare-fun temp980_54 () (_ BitVec 64))
(declare-fun temp980_55 () (_ BitVec 64))
(declare-fun temp980_56 () (_ BitVec 64))
(declare-fun temp980_57 () (_ BitVec 64))
(declare-fun temp980_58 () (_ BitVec 64))
(declare-fun temp980_59 () (_ BitVec 64))
(declare-fun temp980_60 () (_ BitVec 64))
(declare-fun temp980_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp980_62 () (_ BitVec 64))
(declare-fun temp980_63 () (_ BitVec 64))
(declare-fun temp980_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_65 () (_ BitVec 64))
(declare-fun temp980_66 () (_ BitVec 64))
(declare-fun temp980_67 () (_ BitVec 64))
(declare-fun temp980_68 () (_ BitVec 64))
(declare-fun temp980_69 () (_ BitVec 64))
(declare-fun temp980_70 () (_ BitVec 64))
(declare-fun temp980_71 () (_ BitVec 64))
(declare-fun temp980_72 () (_ BitVec 64))
(declare-fun temp980_73 () (_ BitVec 64))
(declare-fun temp980_74 () (_ BitVec 64))
(declare-fun temp980_75 () (_ BitVec 64))
(declare-fun temp980_76 () (_ BitVec 64))
(declare-fun temp980_77 () (_ BitVec 64))
(declare-fun temp980_78 () (_ BitVec 64))
(declare-fun temp980_79 () (_ BitVec 64))
(declare-fun temp980_80 () (_ BitVec 64))
(declare-fun temp980_81 () (_ BitVec 64))
(declare-fun temp980_82 () (_ BitVec 64))
(declare-fun temp980_83 () (_ BitVec 64))
(declare-fun temp980_84 () (_ BitVec 64))
(declare-fun temp980_85 () (_ BitVec 64))
(declare-fun temp980_86 () (_ BitVec 64))
(declare-fun temp980_87 () (_ BitVec 64))
(declare-fun temp980_88 () (_ BitVec 64))
(declare-fun temp980_89 () (_ BitVec 64))
(declare-fun temp980_90 () (_ BitVec 64))
(declare-fun temp980_91 () (_ BitVec 64))
(declare-fun temp980_92 () (_ BitVec 64))
(declare-fun temp980_93 () (_ BitVec 64))
(declare-fun temp980_94 () (_ BitVec 64))
(declare-fun temp980_95 () (_ BitVec 64))
(declare-fun temp980_96 () (_ BitVec 64))
(declare-fun temp980_97 () (_ BitVec 64))
(declare-fun temp980_98 () (_ BitVec 64))
(declare-fun temp980_99 () (_ BitVec 64))
(declare-fun temp980_100 () (_ BitVec 64))
(declare-fun temp980_101 () (_ BitVec 64))
(declare-fun temp980_102 () (_ BitVec 64))
(declare-fun temp980_103 () (_ BitVec 64))
(declare-fun temp980_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp980_105 () (_ BitVec 64))
(declare-fun temp980_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp980_107 () (_ BitVec 64))
(declare-fun temp980_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_109 () (_ BitVec 64))
(declare-fun temp980_110 () (_ BitVec 64))
(declare-fun temp980_111 () (_ BitVec 64))
(declare-fun temp980_112 () (_ BitVec 64))
(declare-fun temp980_113 () (_ BitVec 64))
(declare-fun temp980_114 () (_ BitVec 64))
(declare-fun temp980_115 () (_ BitVec 64))
(declare-fun temp980_116 () (_ BitVec 64))
(declare-fun temp980_117 () (_ BitVec 64))
(declare-fun temp980_118 () (_ BitVec 64))
(declare-fun temp980_119 () (_ BitVec 64))
(declare-fun temp980_120 () (_ BitVec 64))
(declare-fun temp980_121 () (_ BitVec 64))
(declare-fun temp980_122 () (_ BitVec 64))
(declare-fun temp980_123 () (_ BitVec 64))
(declare-fun temp980_124 () (_ BitVec 64))
(declare-fun temp980_126 () (_ BitVec 64))
(declare-fun temp980_127 () (_ BitVec 64))
(declare-fun temp980_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp980_128 () (_ BitVec 64))
(declare-fun temp980_129 () (_ BitVec 64))
(declare-fun temp980_131 () (_ BitVec 64))
(declare-fun temp980_132 () (_ BitVec 64))
(declare-fun temp980_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp980_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp980_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp980_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp980_136 () (_ BitVec 64))
(declare-fun temp980_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp980_139 () (_ BitVec 64))
(declare-fun temp980_140 () (_ BitVec 64))
(declare-fun temp980_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp980_141 () (_ BitVec 64))
(declare-fun temp980_143 () (_ BitVec 64))
(declare-fun temp980_144 () (_ BitVec 64))
(declare-fun temp980_142 () (_ BitVec 64))
(declare-fun temp980_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp980_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp980_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp980_148 () (_ BitVec 64))
(declare-fun temp980_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp980_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp980_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4141456 () (_ BitVec 64))
(declare-fun var4403600 () (_ BitVec 64))
(declare-fun temp980_152 () (_ BitVec 64))
(assert (= temp980_1 #x0000000000000003))
(assert (= var465453 temp980_1))
(assert (= temp980_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp980_2)))
(assert (= temp980_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp980_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp980_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp980_4)))
(assert (= temp980_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp980_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp980_6 #x0000000000000000))
(assert (= var465488 temp980_6))
(assert (= temp980_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp980_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_8 #x0000000000000001))
(assert (= var465522 temp980_8))
(assert (= temp980_10 #x0000000000000000))
(assert (= temp980_9 temp980_10))
(assert (= temp980_12 #x0000000000000003))
(assert (= temp980_11 temp980_12))
(assert (= temp980_13 #x0000000000000000))
(assert (= var863614 temp980_13))
(assert (= temp980_14 #x0000000000000001))
(assert (= var863635 temp980_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp980_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp980_15)))
(assert (= temp980_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp980_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_17 #x0000000000000000))
(assert (= var997373 temp980_17))
(assert (= temp980_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp980_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_19 #x0000000000000000))
(assert (= var997418 temp980_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp980_20 #x0000000000000000))
(assert (= temp980_21 temp980_20))
(assert (= temp980_22 (select ARGNAME_padding_NAMEEND_VAL temp980_21)))
(assert (= temp980_23 #x0000000000000001))
(assert (= temp980_24 temp980_23))
(assert (= temp980_25 (select ARGNAME_padding_NAMEEND_VAL temp980_24)))
(assert (= temp980_26 #x0000000000000002))
(assert (= temp980_27 temp980_26))
(assert (= temp980_28 (select ARGNAME_padding_NAMEEND_VAL temp980_27)))
(assert (= temp980_29 #x0000000000000003))
(assert (= temp980_30 temp980_29))
(assert (= temp980_31 (select ARGNAME_padding_NAMEEND_VAL temp980_30)))
(assert (= temp980_32 #x0000000000000004))
(assert (= temp980_33 temp980_32))
(assert (= temp980_34 (select ARGNAME_padding_NAMEEND_VAL temp980_33)))
(assert (= temp980_35 #x0000000000000005))
(assert (= temp980_36 temp980_35))
(assert (= temp980_37 (select ARGNAME_padding_NAMEEND_VAL temp980_36)))
(assert (= temp980_38 #x0000000000000000))
(assert (= temp980_39 #x0000000000000000))
(assert (= temp980_40 temp980_39))
(assert (= temp980_41 (select ARGNAME_padding_NAMEEND_VAL temp980_40)))
(assert (= temp980_42 #x0000000000000000))
(assert (= temp980_43 #x0000000000000001))
(assert (= temp980_44 temp980_43))
(assert (= temp980_45 (select ARGNAME_padding_NAMEEND_VAL temp980_44)))
(assert (= temp980_46 #x0000000000000000))
(assert (= temp980_47 #x0000000000000002))
(assert (= temp980_48 temp980_47))
(assert (= temp980_49 (select ARGNAME_padding_NAMEEND_VAL temp980_48)))
(assert (= temp980_50 #x0000000000000000))
(assert (= temp980_51 #x0000000000000003))
(assert (= temp980_52 temp980_51))
(assert (= temp980_53 (select ARGNAME_padding_NAMEEND_VAL temp980_52)))
(assert (= temp980_54 #x0000000000000000))
(assert (= temp980_55 #x0000000000000004))
(assert (= temp980_56 temp980_55))
(assert (= temp980_57 (select ARGNAME_padding_NAMEEND_VAL temp980_56)))
(assert (= temp980_58 #x0000000000000000))
(assert (= temp980_59 #x0000000000000005))
(assert (= temp980_60 temp980_59))
(assert (= temp980_61 (select ARGNAME_padding_NAMEEND_VAL temp980_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp980_41 temp980_38)
             (bvslt temp980_45 temp980_42)
             (bvslt temp980_49 temp980_46)
             (bvslt temp980_53 temp980_50)
             (bvslt temp980_57 temp980_54)
             (bvslt temp980_61 temp980_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_62 #x0000000000000000))
(assert (= var1716002 temp980_62))
(assert (= temp980_63 #x0000000000000000))
(assert (= temp980_64 temp980_63))
(assert (= temp980_65 (select ARGNAME_stride_NAMEEND_VAL temp980_64)))
(assert (= temp980_66 #x0000000000000001))
(assert (= temp980_67 temp980_66))
(assert (= temp980_68 (select ARGNAME_stride_NAMEEND_VAL temp980_67)))
(assert (= temp980_69 #x0000000000000002))
(assert (= temp980_70 temp980_69))
(assert (= temp980_71 (select ARGNAME_stride_NAMEEND_VAL temp980_70)))
(assert (= temp980_72 #x0000000000000003))
(assert (= temp980_73 temp980_72))
(assert (= temp980_74 (select ARGNAME_stride_NAMEEND_VAL temp980_73)))
(assert (= temp980_75 #x0000000000000004))
(assert (= temp980_76 temp980_75))
(assert (= temp980_77 (select ARGNAME_stride_NAMEEND_VAL temp980_76)))
(assert (= temp980_78 #x0000000000000005))
(assert (= temp980_79 temp980_78))
(assert (= temp980_80 (select ARGNAME_stride_NAMEEND_VAL temp980_79)))
(assert (= temp980_81 #x0000000000000000))
(assert (= temp980_82 #x0000000000000000))
(assert (= temp980_83 temp980_82))
(assert (= temp980_84 (select ARGNAME_stride_NAMEEND_VAL temp980_83)))
(assert (= temp980_85 #x0000000000000000))
(assert (= temp980_86 #x0000000000000001))
(assert (= temp980_87 temp980_86))
(assert (= temp980_88 (select ARGNAME_stride_NAMEEND_VAL temp980_87)))
(assert (= temp980_89 #x0000000000000000))
(assert (= temp980_90 #x0000000000000002))
(assert (= temp980_91 temp980_90))
(assert (= temp980_92 (select ARGNAME_stride_NAMEEND_VAL temp980_91)))
(assert (= temp980_93 #x0000000000000000))
(assert (= temp980_94 #x0000000000000003))
(assert (= temp980_95 temp980_94))
(assert (= temp980_96 (select ARGNAME_stride_NAMEEND_VAL temp980_95)))
(assert (= temp980_97 #x0000000000000000))
(assert (= temp980_98 #x0000000000000004))
(assert (= temp980_99 temp980_98))
(assert (= temp980_100 (select ARGNAME_stride_NAMEEND_VAL temp980_99)))
(assert (= temp980_101 #x0000000000000000))
(assert (= temp980_102 #x0000000000000005))
(assert (= temp980_103 temp980_102))
(assert (= temp980_104 (select ARGNAME_stride_NAMEEND_VAL temp980_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp980_84 temp980_81)
             (bvsle temp980_88 temp980_85)
             (bvsle temp980_92 temp980_89)
             (bvsle temp980_96 temp980_93)
             (bvsle temp980_100 temp980_97)
             (bvsle temp980_104 temp980_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_105 #x0000000000000000))
(assert (= var1716023 temp980_105))
(assert (= temp980_106 #x0000000000000000))
(assert (= var1704114 temp980_106))
(assert (= temp980_107 #x0000000000000000))
(assert (= temp980_108 temp980_107))
(assert (= temp980_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_108)))
(assert (= temp980_110 #x0000000000000001))
(assert (= temp980_111 temp980_110))
(assert (= temp980_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_111)))
(assert (= temp980_113 #x0000000000000002))
(assert (= temp980_114 temp980_113))
(assert (= temp980_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_114)))
(assert (= temp980_116 #x0000000000000003))
(assert (= temp980_117 temp980_116))
(assert (= temp980_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_117)))
(assert (= temp980_119 #x0000000000000004))
(assert (= temp980_120 temp980_119))
(assert (= temp980_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_120)))
(assert (= temp980_122 #x0000000000000005))
(assert (= temp980_123 temp980_122))
(assert (= temp980_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_123)))
(assert (= temp980_126 var1704114))
(assert (= temp980_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_126)))
(assert (= temp980_125 temp980_127))
(assert (= var1716068
   (ite (bvslt temp980_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_128 #x0000000000000000))
(assert (= var1716068 temp980_128))
(assert (= temp980_129 #x0000000000000000))
(assert (= var1704114 temp980_129))
(assert (= temp980_131 var1704114))
(assert (= temp980_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_131)))
(assert (= temp980_130 temp980_132))
(assert (= var1716090 (bvsmod temp980_130 ARGNAME_groups_NAMEEND)))
(assert (= temp980_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp980_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_134 #x0000000000000001))
(assert (= var1716091 temp980_134))
(assert (= var1716110 var1716000))
(assert (= temp980_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp980_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_136 #x0000000000000001))
(assert (= var1716111 temp980_136))
(assert (= temp980_137 #x0000000000000001))
(assert (= var1705002 temp980_137))
(assert (= temp980_139 var1705002))
(assert (= temp980_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_139)))
(assert (= temp980_138 temp980_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp980_138)))
(assert (= temp980_141 #x0000000000000000))
(assert (= var1704114 temp980_141))
(assert (= temp980_143 var1704114))
(assert (= temp980_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_143)))
(assert (= temp980_142 temp980_144))
(assert (= temp980_145 #x0000000000000002))
(assert (= var1979241 temp980_145))
(assert (= temp980_146 #x0000000000000001))
(assert (= var1716281 temp980_146))
(assert (= temp980_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp980_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_148 #x0000000000000001))
(assert (= var997490 temp980_148))
(assert (= temp980_149 #x0000000000000001))
(assert (= var997620 temp980_149))
(assert (= var3486185 var997620))
(assert (= temp980_150 #x0000000000000000))
(assert (= var3686207 temp980_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp980_151 #x0000000000000002))
(assert (= var3815043 temp980_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4141456 var997633))
(assert (= var4403600 var997633))
(assert (= temp980_152 #x0000000000000001))
(assert (= var997490 temp980_152))
(model-add temp980_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp980_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp980_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp980_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp980_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp980_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






