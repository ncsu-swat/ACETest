(declare-fun temp1063_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1063_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1063_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1063_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1063_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1063_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1063_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1063_8 () (_ BitVec 64))
(declare-fun temp1063_10 () (_ BitVec 64))
(declare-fun temp1063_9 () (_ BitVec 64))
(declare-fun temp1063_12 () (_ BitVec 64))
(declare-fun temp1063_11 () (_ BitVec 64))
(declare-fun temp1063_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1063_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1063_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1063_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1063_17 () (_ BitVec 64))
(declare-fun temp1063_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1063_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1063_20 () (_ BitVec 64))
(declare-fun temp1063_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1063_22 () (_ BitVec 64))
(declare-fun temp1063_23 () (_ BitVec 64))
(declare-fun temp1063_24 () (_ BitVec 64))
(declare-fun temp1063_25 () (_ BitVec 64))
(declare-fun temp1063_26 () (_ BitVec 64))
(declare-fun temp1063_27 () (_ BitVec 64))
(declare-fun temp1063_28 () (_ BitVec 64))
(declare-fun temp1063_29 () (_ BitVec 64))
(declare-fun temp1063_30 () (_ BitVec 64))
(declare-fun temp1063_31 () (_ BitVec 64))
(declare-fun temp1063_32 () (_ BitVec 64))
(declare-fun temp1063_33 () (_ BitVec 64))
(declare-fun temp1063_34 () (_ BitVec 64))
(declare-fun temp1063_35 () (_ BitVec 64))
(declare-fun temp1063_36 () (_ BitVec 64))
(declare-fun temp1063_37 () (_ BitVec 64))
(declare-fun temp1063_38 () (_ BitVec 64))
(declare-fun temp1063_39 () (_ BitVec 64))
(declare-fun temp1063_40 () (_ BitVec 64))
(declare-fun temp1063_41 () (_ BitVec 64))
(declare-fun temp1063_42 () (_ BitVec 64))
(declare-fun temp1063_43 () (_ BitVec 64))
(declare-fun temp1063_44 () (_ BitVec 64))
(declare-fun temp1063_45 () (_ BitVec 64))
(declare-fun temp1063_46 () (_ BitVec 64))
(declare-fun temp1063_47 () (_ BitVec 64))
(declare-fun temp1063_48 () (_ BitVec 64))
(declare-fun temp1063_49 () (_ BitVec 64))
(declare-fun temp1063_50 () (_ BitVec 64))
(declare-fun temp1063_51 () (_ BitVec 64))
(declare-fun temp1063_52 () (_ BitVec 64))
(declare-fun temp1063_53 () (_ BitVec 64))
(declare-fun temp1063_54 () (_ BitVec 64))
(declare-fun temp1063_55 () (_ BitVec 64))
(declare-fun temp1063_56 () (_ BitVec 64))
(declare-fun temp1063_57 () (_ BitVec 64))
(declare-fun temp1063_58 () (_ BitVec 64))
(declare-fun temp1063_59 () (_ BitVec 64))
(declare-fun temp1063_60 () (_ BitVec 64))
(declare-fun temp1063_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1063_62 () (_ BitVec 64))
(declare-fun temp1063_63 () (_ BitVec 64))
(declare-fun temp1063_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1063_65 () (_ BitVec 64))
(declare-fun temp1063_66 () (_ BitVec 64))
(declare-fun temp1063_67 () (_ BitVec 64))
(declare-fun temp1063_68 () (_ BitVec 64))
(declare-fun temp1063_69 () (_ BitVec 64))
(declare-fun temp1063_70 () (_ BitVec 64))
(declare-fun temp1063_71 () (_ BitVec 64))
(declare-fun temp1063_72 () (_ BitVec 64))
(declare-fun temp1063_73 () (_ BitVec 64))
(declare-fun temp1063_74 () (_ BitVec 64))
(declare-fun temp1063_75 () (_ BitVec 64))
(declare-fun temp1063_76 () (_ BitVec 64))
(declare-fun temp1063_77 () (_ BitVec 64))
(declare-fun temp1063_78 () (_ BitVec 64))
(declare-fun temp1063_79 () (_ BitVec 64))
(declare-fun temp1063_80 () (_ BitVec 64))
(declare-fun temp1063_81 () (_ BitVec 64))
(declare-fun temp1063_82 () (_ BitVec 64))
(declare-fun temp1063_83 () (_ BitVec 64))
(declare-fun temp1063_84 () (_ BitVec 64))
(declare-fun temp1063_85 () (_ BitVec 64))
(declare-fun temp1063_86 () (_ BitVec 64))
(declare-fun temp1063_87 () (_ BitVec 64))
(declare-fun temp1063_88 () (_ BitVec 64))
(declare-fun temp1063_89 () (_ BitVec 64))
(declare-fun temp1063_90 () (_ BitVec 64))
(declare-fun temp1063_91 () (_ BitVec 64))
(declare-fun temp1063_92 () (_ BitVec 64))
(declare-fun temp1063_93 () (_ BitVec 64))
(declare-fun temp1063_94 () (_ BitVec 64))
(declare-fun temp1063_95 () (_ BitVec 64))
(declare-fun temp1063_96 () (_ BitVec 64))
(declare-fun temp1063_97 () (_ BitVec 64))
(declare-fun temp1063_98 () (_ BitVec 64))
(declare-fun temp1063_99 () (_ BitVec 64))
(declare-fun temp1063_100 () (_ BitVec 64))
(declare-fun temp1063_101 () (_ BitVec 64))
(declare-fun temp1063_102 () (_ BitVec 64))
(declare-fun temp1063_103 () (_ BitVec 64))
(declare-fun temp1063_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1063_105 () (_ BitVec 64))
(declare-fun temp1063_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1063_107 () (_ BitVec 64))
(declare-fun temp1063_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1063_109 () (_ BitVec 64))
(declare-fun temp1063_110 () (_ BitVec 64))
(declare-fun temp1063_111 () (_ BitVec 64))
(declare-fun temp1063_112 () (_ BitVec 64))
(declare-fun temp1063_113 () (_ BitVec 64))
(declare-fun temp1063_114 () (_ BitVec 64))
(declare-fun temp1063_115 () (_ BitVec 64))
(declare-fun temp1063_116 () (_ BitVec 64))
(declare-fun temp1063_117 () (_ BitVec 64))
(declare-fun temp1063_118 () (_ BitVec 64))
(declare-fun temp1063_119 () (_ BitVec 64))
(declare-fun temp1063_120 () (_ BitVec 64))
(declare-fun temp1063_121 () (_ BitVec 64))
(declare-fun temp1063_122 () (_ BitVec 64))
(declare-fun temp1063_123 () (_ BitVec 64))
(declare-fun temp1063_124 () (_ BitVec 64))
(declare-fun temp1063_126 () (_ BitVec 64))
(declare-fun temp1063_127 () (_ BitVec 64))
(declare-fun temp1063_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1063_128 () (_ BitVec 64))
(declare-fun temp1063_129 () (_ BitVec 64))
(declare-fun temp1063_131 () (_ BitVec 64))
(declare-fun temp1063_132 () (_ BitVec 64))
(declare-fun temp1063_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1063_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1063_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1063_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1063_136 () (_ BitVec 64))
(declare-fun temp1063_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1063_139 () (_ BitVec 64))
(declare-fun temp1063_140 () (_ BitVec 64))
(declare-fun temp1063_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1063_141 () (_ BitVec 64))
(declare-fun temp1063_143 () (_ BitVec 64))
(declare-fun temp1063_144 () (_ BitVec 64))
(declare-fun temp1063_142 () (_ BitVec 64))
(declare-fun temp1063_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1063_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1063_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1063_148 () (_ BitVec 64))
(declare-fun temp1063_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1063_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp1063_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var4206992 () (_ BitVec 64))
(declare-fun temp1063_152 () (_ BitVec 64))
(declare-fun var998846 () (_ BitVec 64))
(declare-fun temp1063_153 () (_ BitVec 64))
(declare-fun temp1063_154 () (_ BitVec 64))
(declare-fun var4535939 () (_ BitVec 64))
(declare-fun temp1063_155 () (_ BitVec 64))
(assert (= temp1063_1 #x0000000000000003))
(assert (= var465453 temp1063_1))
(assert (= temp1063_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1063_2)))
(assert (= temp1063_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1063_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1063_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1063_4)))
(assert (= temp1063_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1063_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1063_6 #x0000000000000000))
(assert (= var465488 temp1063_6))
(assert (= temp1063_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1063_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1063_8 #x0000000000000001))
(assert (= var465522 temp1063_8))
(assert (= temp1063_10 #x0000000000000000))
(assert (= temp1063_9 temp1063_10))
(assert (= temp1063_12 #x0000000000000003))
(assert (= temp1063_11 temp1063_12))
(assert (= temp1063_13 #x0000000000000000))
(assert (= var863614 temp1063_13))
(assert (= temp1063_14 #x0000000000000001))
(assert (= var863635 temp1063_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1063_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1063_15)))
(assert (= temp1063_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1063_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1063_17 #x0000000000000000))
(assert (= var997373 temp1063_17))
(assert (= temp1063_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1063_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1063_19 #x0000000000000000))
(assert (= var997418 temp1063_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1063_20 #x0000000000000000))
(assert (= temp1063_21 temp1063_20))
(assert (= temp1063_22 (select ARGNAME_padding_NAMEEND_VAL temp1063_21)))
(assert (= temp1063_23 #x0000000000000001))
(assert (= temp1063_24 temp1063_23))
(assert (= temp1063_25 (select ARGNAME_padding_NAMEEND_VAL temp1063_24)))
(assert (= temp1063_26 #x0000000000000002))
(assert (= temp1063_27 temp1063_26))
(assert (= temp1063_28 (select ARGNAME_padding_NAMEEND_VAL temp1063_27)))
(assert (= temp1063_29 #x0000000000000003))
(assert (= temp1063_30 temp1063_29))
(assert (= temp1063_31 (select ARGNAME_padding_NAMEEND_VAL temp1063_30)))
(assert (= temp1063_32 #x0000000000000004))
(assert (= temp1063_33 temp1063_32))
(assert (= temp1063_34 (select ARGNAME_padding_NAMEEND_VAL temp1063_33)))
(assert (= temp1063_35 #x0000000000000005))
(assert (= temp1063_36 temp1063_35))
(assert (= temp1063_37 (select ARGNAME_padding_NAMEEND_VAL temp1063_36)))
(assert (= temp1063_38 #x0000000000000000))
(assert (= temp1063_39 #x0000000000000000))
(assert (= temp1063_40 temp1063_39))
(assert (= temp1063_41 (select ARGNAME_padding_NAMEEND_VAL temp1063_40)))
(assert (= temp1063_42 #x0000000000000000))
(assert (= temp1063_43 #x0000000000000001))
(assert (= temp1063_44 temp1063_43))
(assert (= temp1063_45 (select ARGNAME_padding_NAMEEND_VAL temp1063_44)))
(assert (= temp1063_46 #x0000000000000000))
(assert (= temp1063_47 #x0000000000000002))
(assert (= temp1063_48 temp1063_47))
(assert (= temp1063_49 (select ARGNAME_padding_NAMEEND_VAL temp1063_48)))
(assert (= temp1063_50 #x0000000000000000))
(assert (= temp1063_51 #x0000000000000003))
(assert (= temp1063_52 temp1063_51))
(assert (= temp1063_53 (select ARGNAME_padding_NAMEEND_VAL temp1063_52)))
(assert (= temp1063_54 #x0000000000000000))
(assert (= temp1063_55 #x0000000000000004))
(assert (= temp1063_56 temp1063_55))
(assert (= temp1063_57 (select ARGNAME_padding_NAMEEND_VAL temp1063_56)))
(assert (= temp1063_58 #x0000000000000000))
(assert (= temp1063_59 #x0000000000000005))
(assert (= temp1063_60 temp1063_59))
(assert (= temp1063_61 (select ARGNAME_padding_NAMEEND_VAL temp1063_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1063_41 temp1063_38)
             (bvslt temp1063_45 temp1063_42)
             (bvslt temp1063_49 temp1063_46)
             (bvslt temp1063_53 temp1063_50)
             (bvslt temp1063_57 temp1063_54)
             (bvslt temp1063_61 temp1063_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1063_62 #x0000000000000000))
(assert (= var1716002 temp1063_62))
(assert (= temp1063_63 #x0000000000000000))
(assert (= temp1063_64 temp1063_63))
(assert (= temp1063_65 (select ARGNAME_stride_NAMEEND_VAL temp1063_64)))
(assert (= temp1063_66 #x0000000000000001))
(assert (= temp1063_67 temp1063_66))
(assert (= temp1063_68 (select ARGNAME_stride_NAMEEND_VAL temp1063_67)))
(assert (= temp1063_69 #x0000000000000002))
(assert (= temp1063_70 temp1063_69))
(assert (= temp1063_71 (select ARGNAME_stride_NAMEEND_VAL temp1063_70)))
(assert (= temp1063_72 #x0000000000000003))
(assert (= temp1063_73 temp1063_72))
(assert (= temp1063_74 (select ARGNAME_stride_NAMEEND_VAL temp1063_73)))
(assert (= temp1063_75 #x0000000000000004))
(assert (= temp1063_76 temp1063_75))
(assert (= temp1063_77 (select ARGNAME_stride_NAMEEND_VAL temp1063_76)))
(assert (= temp1063_78 #x0000000000000005))
(assert (= temp1063_79 temp1063_78))
(assert (= temp1063_80 (select ARGNAME_stride_NAMEEND_VAL temp1063_79)))
(assert (= temp1063_81 #x0000000000000000))
(assert (= temp1063_82 #x0000000000000000))
(assert (= temp1063_83 temp1063_82))
(assert (= temp1063_84 (select ARGNAME_stride_NAMEEND_VAL temp1063_83)))
(assert (= temp1063_85 #x0000000000000000))
(assert (= temp1063_86 #x0000000000000001))
(assert (= temp1063_87 temp1063_86))
(assert (= temp1063_88 (select ARGNAME_stride_NAMEEND_VAL temp1063_87)))
(assert (= temp1063_89 #x0000000000000000))
(assert (= temp1063_90 #x0000000000000002))
(assert (= temp1063_91 temp1063_90))
(assert (= temp1063_92 (select ARGNAME_stride_NAMEEND_VAL temp1063_91)))
(assert (= temp1063_93 #x0000000000000000))
(assert (= temp1063_94 #x0000000000000003))
(assert (= temp1063_95 temp1063_94))
(assert (= temp1063_96 (select ARGNAME_stride_NAMEEND_VAL temp1063_95)))
(assert (= temp1063_97 #x0000000000000000))
(assert (= temp1063_98 #x0000000000000004))
(assert (= temp1063_99 temp1063_98))
(assert (= temp1063_100 (select ARGNAME_stride_NAMEEND_VAL temp1063_99)))
(assert (= temp1063_101 #x0000000000000000))
(assert (= temp1063_102 #x0000000000000005))
(assert (= temp1063_103 temp1063_102))
(assert (= temp1063_104 (select ARGNAME_stride_NAMEEND_VAL temp1063_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1063_84 temp1063_81)
             (bvsle temp1063_88 temp1063_85)
             (bvsle temp1063_92 temp1063_89)
             (bvsle temp1063_96 temp1063_93)
             (bvsle temp1063_100 temp1063_97)
             (bvsle temp1063_104 temp1063_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1063_105 #x0000000000000000))
(assert (= var1716023 temp1063_105))
(assert (= temp1063_106 #x0000000000000000))
(assert (= var1704114 temp1063_106))
(assert (= temp1063_107 #x0000000000000000))
(assert (= temp1063_108 temp1063_107))
(assert (= temp1063_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_108)))
(assert (= temp1063_110 #x0000000000000001))
(assert (= temp1063_111 temp1063_110))
(assert (= temp1063_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_111)))
(assert (= temp1063_113 #x0000000000000002))
(assert (= temp1063_114 temp1063_113))
(assert (= temp1063_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_114)))
(assert (= temp1063_116 #x0000000000000003))
(assert (= temp1063_117 temp1063_116))
(assert (= temp1063_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_117)))
(assert (= temp1063_119 #x0000000000000004))
(assert (= temp1063_120 temp1063_119))
(assert (= temp1063_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_120)))
(assert (= temp1063_122 #x0000000000000005))
(assert (= temp1063_123 temp1063_122))
(assert (= temp1063_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_123)))
(assert (= temp1063_126 var1704114))
(assert (= temp1063_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_126)))
(assert (= temp1063_125 temp1063_127))
(assert (= var1716068
   (ite (bvslt temp1063_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1063_128 #x0000000000000000))
(assert (= var1716068 temp1063_128))
(assert (= temp1063_129 #x0000000000000000))
(assert (= var1704114 temp1063_129))
(assert (= temp1063_131 var1704114))
(assert (= temp1063_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_131)))
(assert (= temp1063_130 temp1063_132))
(assert (= var1716090 (bvsmod temp1063_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1063_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1063_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1063_134 #x0000000000000001))
(assert (= var1716091 temp1063_134))
(assert (= var1716110 var1716000))
(assert (= temp1063_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1063_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1063_136 #x0000000000000001))
(assert (= var1716111 temp1063_136))
(assert (= temp1063_137 #x0000000000000001))
(assert (= var1705002 temp1063_137))
(assert (= temp1063_139 var1705002))
(assert (= temp1063_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_139)))
(assert (= temp1063_138 temp1063_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1063_138)))
(assert (= temp1063_141 #x0000000000000000))
(assert (= var1704114 temp1063_141))
(assert (= temp1063_143 var1704114))
(assert (= temp1063_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1063_143)))
(assert (= temp1063_142 temp1063_144))
(assert (= temp1063_145 #x0000000000000002))
(assert (= var1979241 temp1063_145))
(assert (= temp1063_146 #x0000000000000001))
(assert (= var1716281 temp1063_146))
(assert (= temp1063_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1063_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1063_148 #x0000000000000001))
(assert (= var997490 temp1063_148))
(assert (= temp1063_149 #x0000000000000001))
(assert (= var997620 temp1063_149))
(assert (= var3486185 var997620))
(assert (= temp1063_150 #x0000000000000000))
(assert (= var3686207 temp1063_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp1063_151 #x0000000000000002))
(assert (= var3815043 temp1063_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var4206992 var997633))
(assert (= temp1063_152 #x0000000000000001))
(assert (= var998846
   (ite (= ARGNAME_groups_NAMEEND temp1063_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1063_153 #x0000000000000001))
(assert (= var998846 temp1063_153))
(assert (= temp1063_154 #x0000000000000002))
(assert (= var4535939 temp1063_154))
(assert (= temp1063_155 #x0000000000000001))
(assert (= var997490 temp1063_155))
(model-add temp1063_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp1063_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp1063_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1063_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp1063_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1063_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






