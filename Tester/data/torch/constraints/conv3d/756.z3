(declare-fun temp1006_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1006_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1006_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1006_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1006_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1006_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1006_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1006_8 () (_ BitVec 64))
(declare-fun temp1006_10 () (_ BitVec 64))
(declare-fun temp1006_9 () (_ BitVec 64))
(declare-fun temp1006_12 () (_ BitVec 64))
(declare-fun temp1006_11 () (_ BitVec 64))
(declare-fun temp1006_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1006_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1006_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1006_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1006_17 () (_ BitVec 64))
(declare-fun temp1006_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1006_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1006_20 () (_ BitVec 64))
(declare-fun temp1006_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1006_22 () (_ BitVec 64))
(declare-fun temp1006_23 () (_ BitVec 64))
(declare-fun temp1006_24 () (_ BitVec 64))
(declare-fun temp1006_25 () (_ BitVec 64))
(declare-fun temp1006_26 () (_ BitVec 64))
(declare-fun temp1006_27 () (_ BitVec 64))
(declare-fun temp1006_28 () (_ BitVec 64))
(declare-fun temp1006_29 () (_ BitVec 64))
(declare-fun temp1006_30 () (_ BitVec 64))
(declare-fun temp1006_31 () (_ BitVec 64))
(declare-fun temp1006_32 () (_ BitVec 64))
(declare-fun temp1006_33 () (_ BitVec 64))
(declare-fun temp1006_34 () (_ BitVec 64))
(declare-fun temp1006_35 () (_ BitVec 64))
(declare-fun temp1006_36 () (_ BitVec 64))
(declare-fun temp1006_37 () (_ BitVec 64))
(declare-fun temp1006_38 () (_ BitVec 64))
(declare-fun temp1006_39 () (_ BitVec 64))
(declare-fun temp1006_40 () (_ BitVec 64))
(declare-fun temp1006_41 () (_ BitVec 64))
(declare-fun temp1006_42 () (_ BitVec 64))
(declare-fun temp1006_43 () (_ BitVec 64))
(declare-fun temp1006_44 () (_ BitVec 64))
(declare-fun temp1006_45 () (_ BitVec 64))
(declare-fun temp1006_46 () (_ BitVec 64))
(declare-fun temp1006_47 () (_ BitVec 64))
(declare-fun temp1006_48 () (_ BitVec 64))
(declare-fun temp1006_49 () (_ BitVec 64))
(declare-fun temp1006_50 () (_ BitVec 64))
(declare-fun temp1006_51 () (_ BitVec 64))
(declare-fun temp1006_52 () (_ BitVec 64))
(declare-fun temp1006_53 () (_ BitVec 64))
(declare-fun temp1006_54 () (_ BitVec 64))
(declare-fun temp1006_55 () (_ BitVec 64))
(declare-fun temp1006_56 () (_ BitVec 64))
(declare-fun temp1006_57 () (_ BitVec 64))
(declare-fun temp1006_58 () (_ BitVec 64))
(declare-fun temp1006_59 () (_ BitVec 64))
(declare-fun temp1006_60 () (_ BitVec 64))
(declare-fun temp1006_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1006_62 () (_ BitVec 64))
(declare-fun temp1006_63 () (_ BitVec 64))
(declare-fun temp1006_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1006_65 () (_ BitVec 64))
(declare-fun temp1006_66 () (_ BitVec 64))
(declare-fun temp1006_67 () (_ BitVec 64))
(declare-fun temp1006_68 () (_ BitVec 64))
(declare-fun temp1006_69 () (_ BitVec 64))
(declare-fun temp1006_70 () (_ BitVec 64))
(declare-fun temp1006_71 () (_ BitVec 64))
(declare-fun temp1006_72 () (_ BitVec 64))
(declare-fun temp1006_73 () (_ BitVec 64))
(declare-fun temp1006_74 () (_ BitVec 64))
(declare-fun temp1006_75 () (_ BitVec 64))
(declare-fun temp1006_76 () (_ BitVec 64))
(declare-fun temp1006_77 () (_ BitVec 64))
(declare-fun temp1006_78 () (_ BitVec 64))
(declare-fun temp1006_79 () (_ BitVec 64))
(declare-fun temp1006_80 () (_ BitVec 64))
(declare-fun temp1006_81 () (_ BitVec 64))
(declare-fun temp1006_82 () (_ BitVec 64))
(declare-fun temp1006_83 () (_ BitVec 64))
(declare-fun temp1006_84 () (_ BitVec 64))
(declare-fun temp1006_85 () (_ BitVec 64))
(declare-fun temp1006_86 () (_ BitVec 64))
(declare-fun temp1006_87 () (_ BitVec 64))
(declare-fun temp1006_88 () (_ BitVec 64))
(declare-fun temp1006_89 () (_ BitVec 64))
(declare-fun temp1006_90 () (_ BitVec 64))
(declare-fun temp1006_91 () (_ BitVec 64))
(declare-fun temp1006_92 () (_ BitVec 64))
(declare-fun temp1006_93 () (_ BitVec 64))
(declare-fun temp1006_94 () (_ BitVec 64))
(declare-fun temp1006_95 () (_ BitVec 64))
(declare-fun temp1006_96 () (_ BitVec 64))
(declare-fun temp1006_97 () (_ BitVec 64))
(declare-fun temp1006_98 () (_ BitVec 64))
(declare-fun temp1006_99 () (_ BitVec 64))
(declare-fun temp1006_100 () (_ BitVec 64))
(declare-fun temp1006_101 () (_ BitVec 64))
(declare-fun temp1006_102 () (_ BitVec 64))
(declare-fun temp1006_103 () (_ BitVec 64))
(declare-fun temp1006_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1006_105 () (_ BitVec 64))
(declare-fun temp1006_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1006_107 () (_ BitVec 64))
(declare-fun temp1006_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1006_109 () (_ BitVec 64))
(declare-fun temp1006_110 () (_ BitVec 64))
(declare-fun temp1006_111 () (_ BitVec 64))
(declare-fun temp1006_112 () (_ BitVec 64))
(declare-fun temp1006_113 () (_ BitVec 64))
(declare-fun temp1006_114 () (_ BitVec 64))
(declare-fun temp1006_115 () (_ BitVec 64))
(declare-fun temp1006_116 () (_ BitVec 64))
(declare-fun temp1006_117 () (_ BitVec 64))
(declare-fun temp1006_118 () (_ BitVec 64))
(declare-fun temp1006_119 () (_ BitVec 64))
(declare-fun temp1006_120 () (_ BitVec 64))
(declare-fun temp1006_121 () (_ BitVec 64))
(declare-fun temp1006_122 () (_ BitVec 64))
(declare-fun temp1006_123 () (_ BitVec 64))
(declare-fun temp1006_124 () (_ BitVec 64))
(declare-fun temp1006_126 () (_ BitVec 64))
(declare-fun temp1006_127 () (_ BitVec 64))
(declare-fun temp1006_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1006_128 () (_ BitVec 64))
(declare-fun temp1006_129 () (_ BitVec 64))
(declare-fun temp1006_131 () (_ BitVec 64))
(declare-fun temp1006_132 () (_ BitVec 64))
(declare-fun temp1006_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1006_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1006_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1006_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1006_136 () (_ BitVec 64))
(declare-fun temp1006_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1006_139 () (_ BitVec 64))
(declare-fun temp1006_140 () (_ BitVec 64))
(declare-fun temp1006_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1006_141 () (_ BitVec 64))
(declare-fun temp1006_143 () (_ BitVec 64))
(declare-fun temp1006_144 () (_ BitVec 64))
(declare-fun temp1006_142 () (_ BitVec 64))
(declare-fun temp1006_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1006_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1006_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1006_148 () (_ BitVec 64))
(declare-fun temp1006_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1006_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp1006_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp1006_152 () (_ BitVec 64))
(assert (= temp1006_1 #x0000000000000003))
(assert (= var465453 temp1006_1))
(assert (= temp1006_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1006_2)))
(assert (= temp1006_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1006_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1006_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1006_4)))
(assert (= temp1006_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1006_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1006_6 #x0000000000000000))
(assert (= var465488 temp1006_6))
(assert (= temp1006_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1006_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1006_8 #x0000000000000001))
(assert (= var465522 temp1006_8))
(assert (= temp1006_10 #x0000000000000000))
(assert (= temp1006_9 temp1006_10))
(assert (= temp1006_12 #x0000000000000003))
(assert (= temp1006_11 temp1006_12))
(assert (= temp1006_13 #x0000000000000000))
(assert (= var863614 temp1006_13))
(assert (= temp1006_14 #x0000000000000001))
(assert (= var863635 temp1006_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1006_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1006_15)))
(assert (= temp1006_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1006_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_17 #x0000000000000000))
(assert (= var997373 temp1006_17))
(assert (= temp1006_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1006_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_19 #x0000000000000000))
(assert (= var997418 temp1006_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1006_20 #x0000000000000000))
(assert (= temp1006_21 temp1006_20))
(assert (= temp1006_22 (select ARGNAME_padding_NAMEEND_VAL temp1006_21)))
(assert (= temp1006_23 #x0000000000000001))
(assert (= temp1006_24 temp1006_23))
(assert (= temp1006_25 (select ARGNAME_padding_NAMEEND_VAL temp1006_24)))
(assert (= temp1006_26 #x0000000000000002))
(assert (= temp1006_27 temp1006_26))
(assert (= temp1006_28 (select ARGNAME_padding_NAMEEND_VAL temp1006_27)))
(assert (= temp1006_29 #x0000000000000003))
(assert (= temp1006_30 temp1006_29))
(assert (= temp1006_31 (select ARGNAME_padding_NAMEEND_VAL temp1006_30)))
(assert (= temp1006_32 #x0000000000000004))
(assert (= temp1006_33 temp1006_32))
(assert (= temp1006_34 (select ARGNAME_padding_NAMEEND_VAL temp1006_33)))
(assert (= temp1006_35 #x0000000000000005))
(assert (= temp1006_36 temp1006_35))
(assert (= temp1006_37 (select ARGNAME_padding_NAMEEND_VAL temp1006_36)))
(assert (= temp1006_38 #x0000000000000000))
(assert (= temp1006_39 #x0000000000000000))
(assert (= temp1006_40 temp1006_39))
(assert (= temp1006_41 (select ARGNAME_padding_NAMEEND_VAL temp1006_40)))
(assert (= temp1006_42 #x0000000000000000))
(assert (= temp1006_43 #x0000000000000001))
(assert (= temp1006_44 temp1006_43))
(assert (= temp1006_45 (select ARGNAME_padding_NAMEEND_VAL temp1006_44)))
(assert (= temp1006_46 #x0000000000000000))
(assert (= temp1006_47 #x0000000000000002))
(assert (= temp1006_48 temp1006_47))
(assert (= temp1006_49 (select ARGNAME_padding_NAMEEND_VAL temp1006_48)))
(assert (= temp1006_50 #x0000000000000000))
(assert (= temp1006_51 #x0000000000000003))
(assert (= temp1006_52 temp1006_51))
(assert (= temp1006_53 (select ARGNAME_padding_NAMEEND_VAL temp1006_52)))
(assert (= temp1006_54 #x0000000000000000))
(assert (= temp1006_55 #x0000000000000004))
(assert (= temp1006_56 temp1006_55))
(assert (= temp1006_57 (select ARGNAME_padding_NAMEEND_VAL temp1006_56)))
(assert (= temp1006_58 #x0000000000000000))
(assert (= temp1006_59 #x0000000000000005))
(assert (= temp1006_60 temp1006_59))
(assert (= temp1006_61 (select ARGNAME_padding_NAMEEND_VAL temp1006_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1006_41 temp1006_38)
             (bvslt temp1006_45 temp1006_42)
             (bvslt temp1006_49 temp1006_46)
             (bvslt temp1006_53 temp1006_50)
             (bvslt temp1006_57 temp1006_54)
             (bvslt temp1006_61 temp1006_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_62 #x0000000000000000))
(assert (= var1716002 temp1006_62))
(assert (= temp1006_63 #x0000000000000000))
(assert (= temp1006_64 temp1006_63))
(assert (= temp1006_65 (select ARGNAME_stride_NAMEEND_VAL temp1006_64)))
(assert (= temp1006_66 #x0000000000000001))
(assert (= temp1006_67 temp1006_66))
(assert (= temp1006_68 (select ARGNAME_stride_NAMEEND_VAL temp1006_67)))
(assert (= temp1006_69 #x0000000000000002))
(assert (= temp1006_70 temp1006_69))
(assert (= temp1006_71 (select ARGNAME_stride_NAMEEND_VAL temp1006_70)))
(assert (= temp1006_72 #x0000000000000003))
(assert (= temp1006_73 temp1006_72))
(assert (= temp1006_74 (select ARGNAME_stride_NAMEEND_VAL temp1006_73)))
(assert (= temp1006_75 #x0000000000000004))
(assert (= temp1006_76 temp1006_75))
(assert (= temp1006_77 (select ARGNAME_stride_NAMEEND_VAL temp1006_76)))
(assert (= temp1006_78 #x0000000000000005))
(assert (= temp1006_79 temp1006_78))
(assert (= temp1006_80 (select ARGNAME_stride_NAMEEND_VAL temp1006_79)))
(assert (= temp1006_81 #x0000000000000000))
(assert (= temp1006_82 #x0000000000000000))
(assert (= temp1006_83 temp1006_82))
(assert (= temp1006_84 (select ARGNAME_stride_NAMEEND_VAL temp1006_83)))
(assert (= temp1006_85 #x0000000000000000))
(assert (= temp1006_86 #x0000000000000001))
(assert (= temp1006_87 temp1006_86))
(assert (= temp1006_88 (select ARGNAME_stride_NAMEEND_VAL temp1006_87)))
(assert (= temp1006_89 #x0000000000000000))
(assert (= temp1006_90 #x0000000000000002))
(assert (= temp1006_91 temp1006_90))
(assert (= temp1006_92 (select ARGNAME_stride_NAMEEND_VAL temp1006_91)))
(assert (= temp1006_93 #x0000000000000000))
(assert (= temp1006_94 #x0000000000000003))
(assert (= temp1006_95 temp1006_94))
(assert (= temp1006_96 (select ARGNAME_stride_NAMEEND_VAL temp1006_95)))
(assert (= temp1006_97 #x0000000000000000))
(assert (= temp1006_98 #x0000000000000004))
(assert (= temp1006_99 temp1006_98))
(assert (= temp1006_100 (select ARGNAME_stride_NAMEEND_VAL temp1006_99)))
(assert (= temp1006_101 #x0000000000000000))
(assert (= temp1006_102 #x0000000000000005))
(assert (= temp1006_103 temp1006_102))
(assert (= temp1006_104 (select ARGNAME_stride_NAMEEND_VAL temp1006_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1006_84 temp1006_81)
             (bvsle temp1006_88 temp1006_85)
             (bvsle temp1006_92 temp1006_89)
             (bvsle temp1006_96 temp1006_93)
             (bvsle temp1006_100 temp1006_97)
             (bvsle temp1006_104 temp1006_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_105 #x0000000000000000))
(assert (= var1716023 temp1006_105))
(assert (= temp1006_106 #x0000000000000000))
(assert (= var1704114 temp1006_106))
(assert (= temp1006_107 #x0000000000000000))
(assert (= temp1006_108 temp1006_107))
(assert (= temp1006_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_108)))
(assert (= temp1006_110 #x0000000000000001))
(assert (= temp1006_111 temp1006_110))
(assert (= temp1006_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_111)))
(assert (= temp1006_113 #x0000000000000002))
(assert (= temp1006_114 temp1006_113))
(assert (= temp1006_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_114)))
(assert (= temp1006_116 #x0000000000000003))
(assert (= temp1006_117 temp1006_116))
(assert (= temp1006_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_117)))
(assert (= temp1006_119 #x0000000000000004))
(assert (= temp1006_120 temp1006_119))
(assert (= temp1006_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_120)))
(assert (= temp1006_122 #x0000000000000005))
(assert (= temp1006_123 temp1006_122))
(assert (= temp1006_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_123)))
(assert (= temp1006_126 var1704114))
(assert (= temp1006_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_126)))
(assert (= temp1006_125 temp1006_127))
(assert (= var1716068
   (ite (bvslt temp1006_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_128 #x0000000000000000))
(assert (= var1716068 temp1006_128))
(assert (= temp1006_129 #x0000000000000000))
(assert (= var1704114 temp1006_129))
(assert (= temp1006_131 var1704114))
(assert (= temp1006_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_131)))
(assert (= temp1006_130 temp1006_132))
(assert (= var1716090 (bvsmod temp1006_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1006_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1006_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1006_134 #x0000000000000001))
(assert (= var1716091 temp1006_134))
(assert (= var1716110 var1716000))
(assert (= temp1006_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1006_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1006_136 #x0000000000000001))
(assert (= var1716111 temp1006_136))
(assert (= temp1006_137 #x0000000000000001))
(assert (= var1705002 temp1006_137))
(assert (= temp1006_139 var1705002))
(assert (= temp1006_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_139)))
(assert (= temp1006_138 temp1006_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1006_138)))
(assert (= temp1006_141 #x0000000000000000))
(assert (= var1704114 temp1006_141))
(assert (= temp1006_143 var1704114))
(assert (= temp1006_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1006_143)))
(assert (= temp1006_142 temp1006_144))
(assert (= temp1006_145 #x0000000000000002))
(assert (= var1979241 temp1006_145))
(assert (= temp1006_146 #x0000000000000001))
(assert (= var1716281 temp1006_146))
(assert (= temp1006_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1006_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1006_148 #x0000000000000001))
(assert (= var997490 temp1006_148))
(assert (= temp1006_149 #x0000000000000001))
(assert (= var997620 temp1006_149))
(assert (= var3486185 var997620))
(assert (= temp1006_150 #x0000000000000000))
(assert (= var3686207 temp1006_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp1006_151 #x0000000000000002))
(assert (= var3815043 temp1006_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp1006_152 #x0000000000000001))
(assert (= var997490 temp1006_152))
(model-add temp1006_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp1006_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp1006_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1006_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp1006_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1006_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






