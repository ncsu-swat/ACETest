(declare-fun temp386_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp386_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp386_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp386_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp386_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp386_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp386_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp386_8 () (_ BitVec 64))
(declare-fun temp386_10 () (_ BitVec 64))
(declare-fun temp386_9 () (_ BitVec 64))
(declare-fun temp386_12 () (_ BitVec 64))
(declare-fun temp386_11 () (_ BitVec 64))
(declare-fun temp386_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp386_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp386_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp386_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp386_17 () (_ BitVec 64))
(declare-fun temp386_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp386_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp386_20 () (_ BitVec 64))
(declare-fun temp386_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_22 () (_ BitVec 64))
(declare-fun temp386_23 () (_ BitVec 64))
(declare-fun temp386_24 () (_ BitVec 64))
(declare-fun temp386_25 () (_ BitVec 64))
(declare-fun temp386_26 () (_ BitVec 64))
(declare-fun temp386_27 () (_ BitVec 64))
(declare-fun temp386_28 () (_ BitVec 64))
(declare-fun temp386_29 () (_ BitVec 64))
(declare-fun temp386_30 () (_ BitVec 64))
(declare-fun temp386_31 () (_ BitVec 64))
(declare-fun temp386_32 () (_ BitVec 64))
(declare-fun temp386_33 () (_ BitVec 64))
(declare-fun temp386_34 () (_ BitVec 64))
(declare-fun temp386_35 () (_ BitVec 64))
(declare-fun temp386_36 () (_ BitVec 64))
(declare-fun temp386_37 () (_ BitVec 64))
(declare-fun temp386_38 () (_ BitVec 64))
(declare-fun temp386_39 () (_ BitVec 64))
(declare-fun temp386_40 () (_ BitVec 64))
(declare-fun temp386_41 () (_ BitVec 64))
(declare-fun temp386_42 () (_ BitVec 64))
(declare-fun temp386_43 () (_ BitVec 64))
(declare-fun temp386_44 () (_ BitVec 64))
(declare-fun temp386_45 () (_ BitVec 64))
(declare-fun temp386_46 () (_ BitVec 64))
(declare-fun temp386_47 () (_ BitVec 64))
(declare-fun temp386_48 () (_ BitVec 64))
(declare-fun temp386_49 () (_ BitVec 64))
(declare-fun temp386_50 () (_ BitVec 64))
(declare-fun temp386_51 () (_ BitVec 64))
(declare-fun temp386_52 () (_ BitVec 64))
(declare-fun temp386_53 () (_ BitVec 64))
(declare-fun temp386_54 () (_ BitVec 64))
(declare-fun temp386_55 () (_ BitVec 64))
(declare-fun temp386_56 () (_ BitVec 64))
(declare-fun temp386_57 () (_ BitVec 64))
(declare-fun temp386_58 () (_ BitVec 64))
(declare-fun temp386_59 () (_ BitVec 64))
(declare-fun temp386_60 () (_ BitVec 64))
(declare-fun temp386_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp386_62 () (_ BitVec 64))
(declare-fun temp386_63 () (_ BitVec 64))
(declare-fun temp386_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_65 () (_ BitVec 64))
(declare-fun temp386_66 () (_ BitVec 64))
(declare-fun temp386_67 () (_ BitVec 64))
(declare-fun temp386_68 () (_ BitVec 64))
(declare-fun temp386_69 () (_ BitVec 64))
(declare-fun temp386_70 () (_ BitVec 64))
(declare-fun temp386_71 () (_ BitVec 64))
(declare-fun temp386_72 () (_ BitVec 64))
(declare-fun temp386_73 () (_ BitVec 64))
(declare-fun temp386_74 () (_ BitVec 64))
(declare-fun temp386_75 () (_ BitVec 64))
(declare-fun temp386_76 () (_ BitVec 64))
(declare-fun temp386_77 () (_ BitVec 64))
(declare-fun temp386_78 () (_ BitVec 64))
(declare-fun temp386_79 () (_ BitVec 64))
(declare-fun temp386_80 () (_ BitVec 64))
(declare-fun temp386_81 () (_ BitVec 64))
(declare-fun temp386_82 () (_ BitVec 64))
(declare-fun temp386_83 () (_ BitVec 64))
(declare-fun temp386_84 () (_ BitVec 64))
(declare-fun temp386_85 () (_ BitVec 64))
(declare-fun temp386_86 () (_ BitVec 64))
(declare-fun temp386_87 () (_ BitVec 64))
(declare-fun temp386_88 () (_ BitVec 64))
(declare-fun temp386_89 () (_ BitVec 64))
(declare-fun temp386_90 () (_ BitVec 64))
(declare-fun temp386_91 () (_ BitVec 64))
(declare-fun temp386_92 () (_ BitVec 64))
(declare-fun temp386_93 () (_ BitVec 64))
(declare-fun temp386_94 () (_ BitVec 64))
(declare-fun temp386_95 () (_ BitVec 64))
(declare-fun temp386_96 () (_ BitVec 64))
(declare-fun temp386_97 () (_ BitVec 64))
(declare-fun temp386_98 () (_ BitVec 64))
(declare-fun temp386_99 () (_ BitVec 64))
(declare-fun temp386_100 () (_ BitVec 64))
(declare-fun temp386_101 () (_ BitVec 64))
(declare-fun temp386_102 () (_ BitVec 64))
(declare-fun temp386_103 () (_ BitVec 64))
(declare-fun temp386_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp386_105 () (_ BitVec 64))
(declare-fun temp386_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp386_107 () (_ BitVec 64))
(declare-fun temp386_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_109 () (_ BitVec 64))
(declare-fun temp386_110 () (_ BitVec 64))
(declare-fun temp386_111 () (_ BitVec 64))
(declare-fun temp386_112 () (_ BitVec 64))
(declare-fun temp386_113 () (_ BitVec 64))
(declare-fun temp386_114 () (_ BitVec 64))
(declare-fun temp386_115 () (_ BitVec 64))
(declare-fun temp386_116 () (_ BitVec 64))
(declare-fun temp386_117 () (_ BitVec 64))
(declare-fun temp386_118 () (_ BitVec 64))
(declare-fun temp386_119 () (_ BitVec 64))
(declare-fun temp386_120 () (_ BitVec 64))
(declare-fun temp386_121 () (_ BitVec 64))
(declare-fun temp386_122 () (_ BitVec 64))
(declare-fun temp386_123 () (_ BitVec 64))
(declare-fun temp386_124 () (_ BitVec 64))
(declare-fun temp386_126 () (_ BitVec 64))
(declare-fun temp386_127 () (_ BitVec 64))
(declare-fun temp386_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp386_128 () (_ BitVec 64))
(declare-fun temp386_129 () (_ BitVec 64))
(declare-fun temp386_131 () (_ BitVec 64))
(declare-fun temp386_132 () (_ BitVec 64))
(declare-fun temp386_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp386_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp386_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp386_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp386_136 () (_ BitVec 64))
(declare-fun temp386_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp386_139 () (_ BitVec 64))
(declare-fun temp386_140 () (_ BitVec 64))
(declare-fun temp386_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp386_141 () (_ BitVec 64))
(declare-fun temp386_143 () (_ BitVec 64))
(declare-fun temp386_144 () (_ BitVec 64))
(declare-fun temp386_142 () (_ BitVec 64))
(declare-fun temp386_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp386_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp386_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp386_148 () (_ BitVec 64))
(declare-fun temp386_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp386_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp386_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp386_152 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun temp386_153 () (_ BitVec 64))
(assert (= temp386_1 #x0000000000000003))
(assert (= var465453 temp386_1))
(assert (= temp386_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp386_2)))
(assert (= temp386_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp386_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp386_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp386_4)))
(assert (= temp386_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp386_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp386_6 #x0000000000000000))
(assert (= var465488 temp386_6))
(assert (= temp386_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp386_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_8 #x0000000000000001))
(assert (= var465522 temp386_8))
(assert (= temp386_10 #x0000000000000000))
(assert (= temp386_9 temp386_10))
(assert (= temp386_12 #x0000000000000003))
(assert (= temp386_11 temp386_12))
(assert (= temp386_13 #x0000000000000000))
(assert (= var863614 temp386_13))
(assert (= temp386_14 #x0000000000000001))
(assert (= var863635 temp386_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp386_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp386_15)))
(assert (= temp386_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp386_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_17 #x0000000000000000))
(assert (= var997373 temp386_17))
(assert (= temp386_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp386_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_19 #x0000000000000000))
(assert (= var997418 temp386_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp386_20 #x0000000000000000))
(assert (= temp386_21 temp386_20))
(assert (= temp386_22 (select ARGNAME_padding_NAMEEND_VAL temp386_21)))
(assert (= temp386_23 #x0000000000000001))
(assert (= temp386_24 temp386_23))
(assert (= temp386_25 (select ARGNAME_padding_NAMEEND_VAL temp386_24)))
(assert (= temp386_26 #x0000000000000002))
(assert (= temp386_27 temp386_26))
(assert (= temp386_28 (select ARGNAME_padding_NAMEEND_VAL temp386_27)))
(assert (= temp386_29 #x0000000000000003))
(assert (= temp386_30 temp386_29))
(assert (= temp386_31 (select ARGNAME_padding_NAMEEND_VAL temp386_30)))
(assert (= temp386_32 #x0000000000000004))
(assert (= temp386_33 temp386_32))
(assert (= temp386_34 (select ARGNAME_padding_NAMEEND_VAL temp386_33)))
(assert (= temp386_35 #x0000000000000005))
(assert (= temp386_36 temp386_35))
(assert (= temp386_37 (select ARGNAME_padding_NAMEEND_VAL temp386_36)))
(assert (= temp386_38 #x0000000000000000))
(assert (= temp386_39 #x0000000000000000))
(assert (= temp386_40 temp386_39))
(assert (= temp386_41 (select ARGNAME_padding_NAMEEND_VAL temp386_40)))
(assert (= temp386_42 #x0000000000000000))
(assert (= temp386_43 #x0000000000000001))
(assert (= temp386_44 temp386_43))
(assert (= temp386_45 (select ARGNAME_padding_NAMEEND_VAL temp386_44)))
(assert (= temp386_46 #x0000000000000000))
(assert (= temp386_47 #x0000000000000002))
(assert (= temp386_48 temp386_47))
(assert (= temp386_49 (select ARGNAME_padding_NAMEEND_VAL temp386_48)))
(assert (= temp386_50 #x0000000000000000))
(assert (= temp386_51 #x0000000000000003))
(assert (= temp386_52 temp386_51))
(assert (= temp386_53 (select ARGNAME_padding_NAMEEND_VAL temp386_52)))
(assert (= temp386_54 #x0000000000000000))
(assert (= temp386_55 #x0000000000000004))
(assert (= temp386_56 temp386_55))
(assert (= temp386_57 (select ARGNAME_padding_NAMEEND_VAL temp386_56)))
(assert (= temp386_58 #x0000000000000000))
(assert (= temp386_59 #x0000000000000005))
(assert (= temp386_60 temp386_59))
(assert (= temp386_61 (select ARGNAME_padding_NAMEEND_VAL temp386_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp386_41 temp386_38)
             (bvslt temp386_45 temp386_42)
             (bvslt temp386_49 temp386_46)
             (bvslt temp386_53 temp386_50)
             (bvslt temp386_57 temp386_54)
             (bvslt temp386_61 temp386_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_62 #x0000000000000000))
(assert (= var1716002 temp386_62))
(assert (= temp386_63 #x0000000000000000))
(assert (= temp386_64 temp386_63))
(assert (= temp386_65 (select ARGNAME_stride_NAMEEND_VAL temp386_64)))
(assert (= temp386_66 #x0000000000000001))
(assert (= temp386_67 temp386_66))
(assert (= temp386_68 (select ARGNAME_stride_NAMEEND_VAL temp386_67)))
(assert (= temp386_69 #x0000000000000002))
(assert (= temp386_70 temp386_69))
(assert (= temp386_71 (select ARGNAME_stride_NAMEEND_VAL temp386_70)))
(assert (= temp386_72 #x0000000000000003))
(assert (= temp386_73 temp386_72))
(assert (= temp386_74 (select ARGNAME_stride_NAMEEND_VAL temp386_73)))
(assert (= temp386_75 #x0000000000000004))
(assert (= temp386_76 temp386_75))
(assert (= temp386_77 (select ARGNAME_stride_NAMEEND_VAL temp386_76)))
(assert (= temp386_78 #x0000000000000005))
(assert (= temp386_79 temp386_78))
(assert (= temp386_80 (select ARGNAME_stride_NAMEEND_VAL temp386_79)))
(assert (= temp386_81 #x0000000000000000))
(assert (= temp386_82 #x0000000000000000))
(assert (= temp386_83 temp386_82))
(assert (= temp386_84 (select ARGNAME_stride_NAMEEND_VAL temp386_83)))
(assert (= temp386_85 #x0000000000000000))
(assert (= temp386_86 #x0000000000000001))
(assert (= temp386_87 temp386_86))
(assert (= temp386_88 (select ARGNAME_stride_NAMEEND_VAL temp386_87)))
(assert (= temp386_89 #x0000000000000000))
(assert (= temp386_90 #x0000000000000002))
(assert (= temp386_91 temp386_90))
(assert (= temp386_92 (select ARGNAME_stride_NAMEEND_VAL temp386_91)))
(assert (= temp386_93 #x0000000000000000))
(assert (= temp386_94 #x0000000000000003))
(assert (= temp386_95 temp386_94))
(assert (= temp386_96 (select ARGNAME_stride_NAMEEND_VAL temp386_95)))
(assert (= temp386_97 #x0000000000000000))
(assert (= temp386_98 #x0000000000000004))
(assert (= temp386_99 temp386_98))
(assert (= temp386_100 (select ARGNAME_stride_NAMEEND_VAL temp386_99)))
(assert (= temp386_101 #x0000000000000000))
(assert (= temp386_102 #x0000000000000005))
(assert (= temp386_103 temp386_102))
(assert (= temp386_104 (select ARGNAME_stride_NAMEEND_VAL temp386_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp386_84 temp386_81)
             (bvsle temp386_88 temp386_85)
             (bvsle temp386_92 temp386_89)
             (bvsle temp386_96 temp386_93)
             (bvsle temp386_100 temp386_97)
             (bvsle temp386_104 temp386_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_105 #x0000000000000000))
(assert (= var1716023 temp386_105))
(assert (= temp386_106 #x0000000000000000))
(assert (= var1704114 temp386_106))
(assert (= temp386_107 #x0000000000000000))
(assert (= temp386_108 temp386_107))
(assert (= temp386_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_108)))
(assert (= temp386_110 #x0000000000000001))
(assert (= temp386_111 temp386_110))
(assert (= temp386_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_111)))
(assert (= temp386_113 #x0000000000000002))
(assert (= temp386_114 temp386_113))
(assert (= temp386_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_114)))
(assert (= temp386_116 #x0000000000000003))
(assert (= temp386_117 temp386_116))
(assert (= temp386_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_117)))
(assert (= temp386_119 #x0000000000000004))
(assert (= temp386_120 temp386_119))
(assert (= temp386_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_120)))
(assert (= temp386_122 #x0000000000000005))
(assert (= temp386_123 temp386_122))
(assert (= temp386_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_123)))
(assert (= temp386_126 var1704114))
(assert (= temp386_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_126)))
(assert (= temp386_125 temp386_127))
(assert (= var1716068
   (ite (bvslt temp386_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_128 #x0000000000000000))
(assert (= var1716068 temp386_128))
(assert (= temp386_129 #x0000000000000000))
(assert (= var1704114 temp386_129))
(assert (= temp386_131 var1704114))
(assert (= temp386_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_131)))
(assert (= temp386_130 temp386_132))
(assert (= var1716090 (bvsmod temp386_130 ARGNAME_groups_NAMEEND)))
(assert (= temp386_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp386_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_134 #x0000000000000001))
(assert (= var1716091 temp386_134))
(assert (= var1716110 var1716000))
(assert (= temp386_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp386_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_136 #x0000000000000001))
(assert (= var1716111 temp386_136))
(assert (= temp386_137 #x0000000000000001))
(assert (= var1705002 temp386_137))
(assert (= temp386_139 var1705002))
(assert (= temp386_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_139)))
(assert (= temp386_138 temp386_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp386_138)))
(assert (= temp386_141 #x0000000000000000))
(assert (= var1704114 temp386_141))
(assert (= temp386_143 var1704114))
(assert (= temp386_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_143)))
(assert (= temp386_142 temp386_144))
(assert (= temp386_145 #x0000000000000002))
(assert (= var1979241 temp386_145))
(assert (= temp386_146 #x0000000000000001))
(assert (= var1716281 temp386_146))
(assert (= temp386_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp386_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_148 #x0000000000000001))
(assert (= var997490 temp386_148))
(assert (= temp386_149 #x0000000000000001))
(assert (= var997620 temp386_149))
(assert (= var3486185 var997620))
(assert (= temp386_150 #x0000000000000000))
(assert (= var3686207 temp386_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp386_151 #x0000000000000002))
(assert (= var3815043 temp386_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4600208 var997633))
(assert (= var4862352 var997633))
(assert (= temp386_152 #x0000000000000000))
(assert (= var5190032 temp386_152))
(assert (= temp386_153 #x0000000000000001))
(assert (= var997490 temp386_153))
(model-add temp386_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp386_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp386_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp386_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp386_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp386_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






