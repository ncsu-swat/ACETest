(declare-fun temp660_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp660_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp660_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp660_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp660_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp660_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp660_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp660_8 () (_ BitVec 64))
(declare-fun temp660_10 () (_ BitVec 64))
(declare-fun temp660_9 () (_ BitVec 64))
(declare-fun temp660_12 () (_ BitVec 64))
(declare-fun temp660_11 () (_ BitVec 64))
(declare-fun temp660_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp660_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp660_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp660_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp660_17 () (_ BitVec 64))
(declare-fun temp660_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp660_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp660_20 () (_ BitVec 64))
(declare-fun temp660_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_22 () (_ BitVec 64))
(declare-fun temp660_23 () (_ BitVec 64))
(declare-fun temp660_24 () (_ BitVec 64))
(declare-fun temp660_25 () (_ BitVec 64))
(declare-fun temp660_26 () (_ BitVec 64))
(declare-fun temp660_27 () (_ BitVec 64))
(declare-fun temp660_28 () (_ BitVec 64))
(declare-fun temp660_29 () (_ BitVec 64))
(declare-fun temp660_30 () (_ BitVec 64))
(declare-fun temp660_31 () (_ BitVec 64))
(declare-fun temp660_32 () (_ BitVec 64))
(declare-fun temp660_33 () (_ BitVec 64))
(declare-fun temp660_34 () (_ BitVec 64))
(declare-fun temp660_35 () (_ BitVec 64))
(declare-fun temp660_36 () (_ BitVec 64))
(declare-fun temp660_37 () (_ BitVec 64))
(declare-fun temp660_38 () (_ BitVec 64))
(declare-fun temp660_39 () (_ BitVec 64))
(declare-fun temp660_40 () (_ BitVec 64))
(declare-fun temp660_41 () (_ BitVec 64))
(declare-fun temp660_42 () (_ BitVec 64))
(declare-fun temp660_43 () (_ BitVec 64))
(declare-fun temp660_44 () (_ BitVec 64))
(declare-fun temp660_45 () (_ BitVec 64))
(declare-fun temp660_46 () (_ BitVec 64))
(declare-fun temp660_47 () (_ BitVec 64))
(declare-fun temp660_48 () (_ BitVec 64))
(declare-fun temp660_49 () (_ BitVec 64))
(declare-fun temp660_50 () (_ BitVec 64))
(declare-fun temp660_51 () (_ BitVec 64))
(declare-fun temp660_52 () (_ BitVec 64))
(declare-fun temp660_53 () (_ BitVec 64))
(declare-fun temp660_54 () (_ BitVec 64))
(declare-fun temp660_55 () (_ BitVec 64))
(declare-fun temp660_56 () (_ BitVec 64))
(declare-fun temp660_57 () (_ BitVec 64))
(declare-fun temp660_58 () (_ BitVec 64))
(declare-fun temp660_59 () (_ BitVec 64))
(declare-fun temp660_60 () (_ BitVec 64))
(declare-fun temp660_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp660_62 () (_ BitVec 64))
(declare-fun temp660_63 () (_ BitVec 64))
(declare-fun temp660_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_65 () (_ BitVec 64))
(declare-fun temp660_66 () (_ BitVec 64))
(declare-fun temp660_67 () (_ BitVec 64))
(declare-fun temp660_68 () (_ BitVec 64))
(declare-fun temp660_69 () (_ BitVec 64))
(declare-fun temp660_70 () (_ BitVec 64))
(declare-fun temp660_71 () (_ BitVec 64))
(declare-fun temp660_72 () (_ BitVec 64))
(declare-fun temp660_73 () (_ BitVec 64))
(declare-fun temp660_74 () (_ BitVec 64))
(declare-fun temp660_75 () (_ BitVec 64))
(declare-fun temp660_76 () (_ BitVec 64))
(declare-fun temp660_77 () (_ BitVec 64))
(declare-fun temp660_78 () (_ BitVec 64))
(declare-fun temp660_79 () (_ BitVec 64))
(declare-fun temp660_80 () (_ BitVec 64))
(declare-fun temp660_81 () (_ BitVec 64))
(declare-fun temp660_82 () (_ BitVec 64))
(declare-fun temp660_83 () (_ BitVec 64))
(declare-fun temp660_84 () (_ BitVec 64))
(declare-fun temp660_85 () (_ BitVec 64))
(declare-fun temp660_86 () (_ BitVec 64))
(declare-fun temp660_87 () (_ BitVec 64))
(declare-fun temp660_88 () (_ BitVec 64))
(declare-fun temp660_89 () (_ BitVec 64))
(declare-fun temp660_90 () (_ BitVec 64))
(declare-fun temp660_91 () (_ BitVec 64))
(declare-fun temp660_92 () (_ BitVec 64))
(declare-fun temp660_93 () (_ BitVec 64))
(declare-fun temp660_94 () (_ BitVec 64))
(declare-fun temp660_95 () (_ BitVec 64))
(declare-fun temp660_96 () (_ BitVec 64))
(declare-fun temp660_97 () (_ BitVec 64))
(declare-fun temp660_98 () (_ BitVec 64))
(declare-fun temp660_99 () (_ BitVec 64))
(declare-fun temp660_100 () (_ BitVec 64))
(declare-fun temp660_101 () (_ BitVec 64))
(declare-fun temp660_102 () (_ BitVec 64))
(declare-fun temp660_103 () (_ BitVec 64))
(declare-fun temp660_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp660_105 () (_ BitVec 64))
(declare-fun temp660_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp660_107 () (_ BitVec 64))
(declare-fun temp660_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_109 () (_ BitVec 64))
(declare-fun temp660_110 () (_ BitVec 64))
(declare-fun temp660_111 () (_ BitVec 64))
(declare-fun temp660_112 () (_ BitVec 64))
(declare-fun temp660_113 () (_ BitVec 64))
(declare-fun temp660_114 () (_ BitVec 64))
(declare-fun temp660_115 () (_ BitVec 64))
(declare-fun temp660_116 () (_ BitVec 64))
(declare-fun temp660_117 () (_ BitVec 64))
(declare-fun temp660_118 () (_ BitVec 64))
(declare-fun temp660_119 () (_ BitVec 64))
(declare-fun temp660_120 () (_ BitVec 64))
(declare-fun temp660_121 () (_ BitVec 64))
(declare-fun temp660_122 () (_ BitVec 64))
(declare-fun temp660_123 () (_ BitVec 64))
(declare-fun temp660_124 () (_ BitVec 64))
(declare-fun temp660_126 () (_ BitVec 64))
(declare-fun temp660_127 () (_ BitVec 64))
(declare-fun temp660_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp660_128 () (_ BitVec 64))
(declare-fun temp660_129 () (_ BitVec 64))
(declare-fun temp660_131 () (_ BitVec 64))
(declare-fun temp660_132 () (_ BitVec 64))
(declare-fun temp660_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp660_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp660_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp660_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp660_136 () (_ BitVec 64))
(declare-fun temp660_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp660_139 () (_ BitVec 64))
(declare-fun temp660_140 () (_ BitVec 64))
(declare-fun temp660_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp660_141 () (_ BitVec 64))
(declare-fun temp660_143 () (_ BitVec 64))
(declare-fun temp660_144 () (_ BitVec 64))
(declare-fun temp660_142 () (_ BitVec 64))
(declare-fun temp660_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp660_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp660_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp660_148 () (_ BitVec 64))
(declare-fun temp660_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp660_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp660_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp660_153 () (_ BitVec 64))
(declare-fun temp660_152 () (_ BitVec 64))
(declare-fun temp660_155 () (_ BitVec 64))
(declare-fun temp660_154 () (_ BitVec 64))
(declare-fun temp660_156 () (_ BitVec 64))
(assert (= temp660_1 #x0000000000000003))
(assert (= var465453 temp660_1))
(assert (= temp660_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp660_2)))
(assert (= temp660_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp660_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp660_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp660_4)))
(assert (= temp660_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp660_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp660_6 #x0000000000000000))
(assert (= var465488 temp660_6))
(assert (= temp660_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp660_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp660_8 #x0000000000000001))
(assert (= var465522 temp660_8))
(assert (= temp660_10 #x0000000000000000))
(assert (= temp660_9 temp660_10))
(assert (= temp660_12 #x0000000000000003))
(assert (= temp660_11 temp660_12))
(assert (= temp660_13 #x0000000000000000))
(assert (= var863614 temp660_13))
(assert (= temp660_14 #x0000000000000001))
(assert (= var863635 temp660_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp660_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp660_15)))
(assert (= temp660_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp660_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_17 #x0000000000000000))
(assert (= var997373 temp660_17))
(assert (= temp660_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp660_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_19 #x0000000000000000))
(assert (= var997418 temp660_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp660_20 #x0000000000000000))
(assert (= temp660_21 temp660_20))
(assert (= temp660_22 (select ARGNAME_padding_NAMEEND_VAL temp660_21)))
(assert (= temp660_23 #x0000000000000001))
(assert (= temp660_24 temp660_23))
(assert (= temp660_25 (select ARGNAME_padding_NAMEEND_VAL temp660_24)))
(assert (= temp660_26 #x0000000000000002))
(assert (= temp660_27 temp660_26))
(assert (= temp660_28 (select ARGNAME_padding_NAMEEND_VAL temp660_27)))
(assert (= temp660_29 #x0000000000000003))
(assert (= temp660_30 temp660_29))
(assert (= temp660_31 (select ARGNAME_padding_NAMEEND_VAL temp660_30)))
(assert (= temp660_32 #x0000000000000004))
(assert (= temp660_33 temp660_32))
(assert (= temp660_34 (select ARGNAME_padding_NAMEEND_VAL temp660_33)))
(assert (= temp660_35 #x0000000000000005))
(assert (= temp660_36 temp660_35))
(assert (= temp660_37 (select ARGNAME_padding_NAMEEND_VAL temp660_36)))
(assert (= temp660_38 #x0000000000000000))
(assert (= temp660_39 #x0000000000000000))
(assert (= temp660_40 temp660_39))
(assert (= temp660_41 (select ARGNAME_padding_NAMEEND_VAL temp660_40)))
(assert (= temp660_42 #x0000000000000000))
(assert (= temp660_43 #x0000000000000001))
(assert (= temp660_44 temp660_43))
(assert (= temp660_45 (select ARGNAME_padding_NAMEEND_VAL temp660_44)))
(assert (= temp660_46 #x0000000000000000))
(assert (= temp660_47 #x0000000000000002))
(assert (= temp660_48 temp660_47))
(assert (= temp660_49 (select ARGNAME_padding_NAMEEND_VAL temp660_48)))
(assert (= temp660_50 #x0000000000000000))
(assert (= temp660_51 #x0000000000000003))
(assert (= temp660_52 temp660_51))
(assert (= temp660_53 (select ARGNAME_padding_NAMEEND_VAL temp660_52)))
(assert (= temp660_54 #x0000000000000000))
(assert (= temp660_55 #x0000000000000004))
(assert (= temp660_56 temp660_55))
(assert (= temp660_57 (select ARGNAME_padding_NAMEEND_VAL temp660_56)))
(assert (= temp660_58 #x0000000000000000))
(assert (= temp660_59 #x0000000000000005))
(assert (= temp660_60 temp660_59))
(assert (= temp660_61 (select ARGNAME_padding_NAMEEND_VAL temp660_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp660_41 temp660_38)
             (bvslt temp660_45 temp660_42)
             (bvslt temp660_49 temp660_46)
             (bvslt temp660_53 temp660_50)
             (bvslt temp660_57 temp660_54)
             (bvslt temp660_61 temp660_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_62 #x0000000000000000))
(assert (= var1716002 temp660_62))
(assert (= temp660_63 #x0000000000000000))
(assert (= temp660_64 temp660_63))
(assert (= temp660_65 (select ARGNAME_stride_NAMEEND_VAL temp660_64)))
(assert (= temp660_66 #x0000000000000001))
(assert (= temp660_67 temp660_66))
(assert (= temp660_68 (select ARGNAME_stride_NAMEEND_VAL temp660_67)))
(assert (= temp660_69 #x0000000000000002))
(assert (= temp660_70 temp660_69))
(assert (= temp660_71 (select ARGNAME_stride_NAMEEND_VAL temp660_70)))
(assert (= temp660_72 #x0000000000000003))
(assert (= temp660_73 temp660_72))
(assert (= temp660_74 (select ARGNAME_stride_NAMEEND_VAL temp660_73)))
(assert (= temp660_75 #x0000000000000004))
(assert (= temp660_76 temp660_75))
(assert (= temp660_77 (select ARGNAME_stride_NAMEEND_VAL temp660_76)))
(assert (= temp660_78 #x0000000000000005))
(assert (= temp660_79 temp660_78))
(assert (= temp660_80 (select ARGNAME_stride_NAMEEND_VAL temp660_79)))
(assert (= temp660_81 #x0000000000000000))
(assert (= temp660_82 #x0000000000000000))
(assert (= temp660_83 temp660_82))
(assert (= temp660_84 (select ARGNAME_stride_NAMEEND_VAL temp660_83)))
(assert (= temp660_85 #x0000000000000000))
(assert (= temp660_86 #x0000000000000001))
(assert (= temp660_87 temp660_86))
(assert (= temp660_88 (select ARGNAME_stride_NAMEEND_VAL temp660_87)))
(assert (= temp660_89 #x0000000000000000))
(assert (= temp660_90 #x0000000000000002))
(assert (= temp660_91 temp660_90))
(assert (= temp660_92 (select ARGNAME_stride_NAMEEND_VAL temp660_91)))
(assert (= temp660_93 #x0000000000000000))
(assert (= temp660_94 #x0000000000000003))
(assert (= temp660_95 temp660_94))
(assert (= temp660_96 (select ARGNAME_stride_NAMEEND_VAL temp660_95)))
(assert (= temp660_97 #x0000000000000000))
(assert (= temp660_98 #x0000000000000004))
(assert (= temp660_99 temp660_98))
(assert (= temp660_100 (select ARGNAME_stride_NAMEEND_VAL temp660_99)))
(assert (= temp660_101 #x0000000000000000))
(assert (= temp660_102 #x0000000000000005))
(assert (= temp660_103 temp660_102))
(assert (= temp660_104 (select ARGNAME_stride_NAMEEND_VAL temp660_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp660_84 temp660_81)
             (bvsle temp660_88 temp660_85)
             (bvsle temp660_92 temp660_89)
             (bvsle temp660_96 temp660_93)
             (bvsle temp660_100 temp660_97)
             (bvsle temp660_104 temp660_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_105 #x0000000000000000))
(assert (= var1716023 temp660_105))
(assert (= temp660_106 #x0000000000000000))
(assert (= var1704114 temp660_106))
(assert (= temp660_107 #x0000000000000000))
(assert (= temp660_108 temp660_107))
(assert (= temp660_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_108)))
(assert (= temp660_110 #x0000000000000001))
(assert (= temp660_111 temp660_110))
(assert (= temp660_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_111)))
(assert (= temp660_113 #x0000000000000002))
(assert (= temp660_114 temp660_113))
(assert (= temp660_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_114)))
(assert (= temp660_116 #x0000000000000003))
(assert (= temp660_117 temp660_116))
(assert (= temp660_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_117)))
(assert (= temp660_119 #x0000000000000004))
(assert (= temp660_120 temp660_119))
(assert (= temp660_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_120)))
(assert (= temp660_122 #x0000000000000005))
(assert (= temp660_123 temp660_122))
(assert (= temp660_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_123)))
(assert (= temp660_126 var1704114))
(assert (= temp660_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_126)))
(assert (= temp660_125 temp660_127))
(assert (= var1716068
   (ite (bvslt temp660_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_128 #x0000000000000000))
(assert (= var1716068 temp660_128))
(assert (= temp660_129 #x0000000000000000))
(assert (= var1704114 temp660_129))
(assert (= temp660_131 var1704114))
(assert (= temp660_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_131)))
(assert (= temp660_130 temp660_132))
(assert (= var1716090 (bvsmod temp660_130 ARGNAME_groups_NAMEEND)))
(assert (= temp660_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp660_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp660_134 #x0000000000000001))
(assert (= var1716091 temp660_134))
(assert (= var1716110 var1716000))
(assert (= temp660_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp660_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp660_136 #x0000000000000001))
(assert (= var1716111 temp660_136))
(assert (= temp660_137 #x0000000000000001))
(assert (= var1705002 temp660_137))
(assert (= temp660_139 var1705002))
(assert (= temp660_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_139)))
(assert (= temp660_138 temp660_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp660_138)))
(assert (= temp660_141 #x0000000000000000))
(assert (= var1704114 temp660_141))
(assert (= temp660_143 var1704114))
(assert (= temp660_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_143)))
(assert (= temp660_142 temp660_144))
(assert (= temp660_145 #x0000000000000002))
(assert (= var1979241 temp660_145))
(assert (= temp660_146 #x0000000000000001))
(assert (= var1716281 temp660_146))
(assert (= temp660_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp660_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_148 #x0000000000000001))
(assert (= var997490 temp660_148))
(assert (= temp660_149 #x0000000000000001))
(assert (= var997620 temp660_149))
(assert (= var3486185 var997620))
(assert (= temp660_150 #x0000000000000000))
(assert (= var3686207 temp660_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp660_151 #x0000000000000002))
(assert (= var3815043 temp660_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp660_153 #xffffffffffffffff))
(assert (= temp660_152 temp660_153))
(assert (= temp660_155 #xffffffffffffffff))
(assert (= temp660_154 temp660_155))
(assert (= temp660_156 #x0000000000000001))
(assert (= var997490 temp660_156))
(model-add temp660_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp660_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp660_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp660_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp660_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp660_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






