(declare-fun temp395_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp395_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp395_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp395_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp395_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp395_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp395_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp395_8 () (_ BitVec 64))
(declare-fun temp395_10 () (_ BitVec 64))
(declare-fun temp395_9 () (_ BitVec 64))
(declare-fun temp395_12 () (_ BitVec 64))
(declare-fun temp395_11 () (_ BitVec 64))
(declare-fun temp395_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp395_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp395_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp395_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp395_17 () (_ BitVec 64))
(declare-fun temp395_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp395_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp395_20 () (_ BitVec 64))
(declare-fun temp395_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp395_22 () (_ BitVec 64))
(declare-fun temp395_23 () (_ BitVec 64))
(declare-fun temp395_24 () (_ BitVec 64))
(declare-fun temp395_25 () (_ BitVec 64))
(declare-fun temp395_26 () (_ BitVec 64))
(declare-fun temp395_27 () (_ BitVec 64))
(declare-fun temp395_28 () (_ BitVec 64))
(declare-fun temp395_29 () (_ BitVec 64))
(declare-fun temp395_30 () (_ BitVec 64))
(declare-fun temp395_31 () (_ BitVec 64))
(declare-fun temp395_32 () (_ BitVec 64))
(declare-fun temp395_33 () (_ BitVec 64))
(declare-fun temp395_34 () (_ BitVec 64))
(declare-fun temp395_35 () (_ BitVec 64))
(declare-fun temp395_36 () (_ BitVec 64))
(declare-fun temp395_37 () (_ BitVec 64))
(declare-fun temp395_38 () (_ BitVec 64))
(declare-fun temp395_39 () (_ BitVec 64))
(declare-fun temp395_40 () (_ BitVec 64))
(declare-fun temp395_41 () (_ BitVec 64))
(declare-fun temp395_42 () (_ BitVec 64))
(declare-fun temp395_43 () (_ BitVec 64))
(declare-fun temp395_44 () (_ BitVec 64))
(declare-fun temp395_45 () (_ BitVec 64))
(declare-fun temp395_46 () (_ BitVec 64))
(declare-fun temp395_47 () (_ BitVec 64))
(declare-fun temp395_48 () (_ BitVec 64))
(declare-fun temp395_49 () (_ BitVec 64))
(declare-fun temp395_50 () (_ BitVec 64))
(declare-fun temp395_51 () (_ BitVec 64))
(declare-fun temp395_52 () (_ BitVec 64))
(declare-fun temp395_53 () (_ BitVec 64))
(declare-fun temp395_54 () (_ BitVec 64))
(declare-fun temp395_55 () (_ BitVec 64))
(declare-fun temp395_56 () (_ BitVec 64))
(declare-fun temp395_57 () (_ BitVec 64))
(declare-fun temp395_58 () (_ BitVec 64))
(declare-fun temp395_59 () (_ BitVec 64))
(declare-fun temp395_60 () (_ BitVec 64))
(declare-fun temp395_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp395_62 () (_ BitVec 64))
(declare-fun temp395_63 () (_ BitVec 64))
(declare-fun temp395_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp395_65 () (_ BitVec 64))
(declare-fun temp395_66 () (_ BitVec 64))
(declare-fun temp395_67 () (_ BitVec 64))
(declare-fun temp395_68 () (_ BitVec 64))
(declare-fun temp395_69 () (_ BitVec 64))
(declare-fun temp395_70 () (_ BitVec 64))
(declare-fun temp395_71 () (_ BitVec 64))
(declare-fun temp395_72 () (_ BitVec 64))
(declare-fun temp395_73 () (_ BitVec 64))
(declare-fun temp395_74 () (_ BitVec 64))
(declare-fun temp395_75 () (_ BitVec 64))
(declare-fun temp395_76 () (_ BitVec 64))
(declare-fun temp395_77 () (_ BitVec 64))
(declare-fun temp395_78 () (_ BitVec 64))
(declare-fun temp395_79 () (_ BitVec 64))
(declare-fun temp395_80 () (_ BitVec 64))
(declare-fun temp395_81 () (_ BitVec 64))
(declare-fun temp395_82 () (_ BitVec 64))
(declare-fun temp395_83 () (_ BitVec 64))
(declare-fun temp395_84 () (_ BitVec 64))
(declare-fun temp395_85 () (_ BitVec 64))
(declare-fun temp395_86 () (_ BitVec 64))
(declare-fun temp395_87 () (_ BitVec 64))
(declare-fun temp395_88 () (_ BitVec 64))
(declare-fun temp395_89 () (_ BitVec 64))
(declare-fun temp395_90 () (_ BitVec 64))
(declare-fun temp395_91 () (_ BitVec 64))
(declare-fun temp395_92 () (_ BitVec 64))
(declare-fun temp395_93 () (_ BitVec 64))
(declare-fun temp395_94 () (_ BitVec 64))
(declare-fun temp395_95 () (_ BitVec 64))
(declare-fun temp395_96 () (_ BitVec 64))
(declare-fun temp395_97 () (_ BitVec 64))
(declare-fun temp395_98 () (_ BitVec 64))
(declare-fun temp395_99 () (_ BitVec 64))
(declare-fun temp395_100 () (_ BitVec 64))
(declare-fun temp395_101 () (_ BitVec 64))
(declare-fun temp395_102 () (_ BitVec 64))
(declare-fun temp395_103 () (_ BitVec 64))
(declare-fun temp395_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp395_105 () (_ BitVec 64))
(declare-fun temp395_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp395_107 () (_ BitVec 64))
(declare-fun temp395_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp395_109 () (_ BitVec 64))
(declare-fun temp395_110 () (_ BitVec 64))
(declare-fun temp395_111 () (_ BitVec 64))
(declare-fun temp395_112 () (_ BitVec 64))
(declare-fun temp395_113 () (_ BitVec 64))
(declare-fun temp395_114 () (_ BitVec 64))
(declare-fun temp395_115 () (_ BitVec 64))
(declare-fun temp395_116 () (_ BitVec 64))
(declare-fun temp395_117 () (_ BitVec 64))
(declare-fun temp395_118 () (_ BitVec 64))
(declare-fun temp395_119 () (_ BitVec 64))
(declare-fun temp395_120 () (_ BitVec 64))
(declare-fun temp395_121 () (_ BitVec 64))
(declare-fun temp395_122 () (_ BitVec 64))
(declare-fun temp395_123 () (_ BitVec 64))
(declare-fun temp395_124 () (_ BitVec 64))
(declare-fun temp395_126 () (_ BitVec 64))
(declare-fun temp395_127 () (_ BitVec 64))
(declare-fun temp395_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp395_128 () (_ BitVec 64))
(declare-fun temp395_129 () (_ BitVec 64))
(declare-fun temp395_131 () (_ BitVec 64))
(declare-fun temp395_132 () (_ BitVec 64))
(declare-fun temp395_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp395_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp395_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp395_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp395_136 () (_ BitVec 64))
(declare-fun temp395_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp395_139 () (_ BitVec 64))
(declare-fun temp395_140 () (_ BitVec 64))
(declare-fun temp395_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp395_141 () (_ BitVec 64))
(declare-fun temp395_143 () (_ BitVec 64))
(declare-fun temp395_144 () (_ BitVec 64))
(declare-fun temp395_142 () (_ BitVec 64))
(declare-fun temp395_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp395_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp395_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp395_148 () (_ BitVec 64))
(declare-fun temp395_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp395_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp395_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp395_152 () (_ BitVec 64))
(assert (= temp395_1 #x0000000000000003))
(assert (= var465453 temp395_1))
(assert (= temp395_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp395_2)))
(assert (= temp395_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp395_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp395_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp395_4)))
(assert (= temp395_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp395_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp395_6 #x0000000000000000))
(assert (= var465488 temp395_6))
(assert (= temp395_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp395_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp395_8 #x0000000000000001))
(assert (= var465522 temp395_8))
(assert (= temp395_10 #x0000000000000000))
(assert (= temp395_9 temp395_10))
(assert (= temp395_12 #x0000000000000003))
(assert (= temp395_11 temp395_12))
(assert (= temp395_13 #x0000000000000000))
(assert (= var863614 temp395_13))
(assert (= temp395_14 #x0000000000000001))
(assert (= var863635 temp395_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp395_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp395_15)))
(assert (= temp395_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp395_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp395_17 #x0000000000000000))
(assert (= var997373 temp395_17))
(assert (= temp395_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp395_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp395_19 #x0000000000000000))
(assert (= var997418 temp395_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp395_20 #x0000000000000000))
(assert (= temp395_21 temp395_20))
(assert (= temp395_22 (select ARGNAME_padding_NAMEEND_VAL temp395_21)))
(assert (= temp395_23 #x0000000000000001))
(assert (= temp395_24 temp395_23))
(assert (= temp395_25 (select ARGNAME_padding_NAMEEND_VAL temp395_24)))
(assert (= temp395_26 #x0000000000000002))
(assert (= temp395_27 temp395_26))
(assert (= temp395_28 (select ARGNAME_padding_NAMEEND_VAL temp395_27)))
(assert (= temp395_29 #x0000000000000003))
(assert (= temp395_30 temp395_29))
(assert (= temp395_31 (select ARGNAME_padding_NAMEEND_VAL temp395_30)))
(assert (= temp395_32 #x0000000000000004))
(assert (= temp395_33 temp395_32))
(assert (= temp395_34 (select ARGNAME_padding_NAMEEND_VAL temp395_33)))
(assert (= temp395_35 #x0000000000000005))
(assert (= temp395_36 temp395_35))
(assert (= temp395_37 (select ARGNAME_padding_NAMEEND_VAL temp395_36)))
(assert (= temp395_38 #x0000000000000000))
(assert (= temp395_39 #x0000000000000000))
(assert (= temp395_40 temp395_39))
(assert (= temp395_41 (select ARGNAME_padding_NAMEEND_VAL temp395_40)))
(assert (= temp395_42 #x0000000000000000))
(assert (= temp395_43 #x0000000000000001))
(assert (= temp395_44 temp395_43))
(assert (= temp395_45 (select ARGNAME_padding_NAMEEND_VAL temp395_44)))
(assert (= temp395_46 #x0000000000000000))
(assert (= temp395_47 #x0000000000000002))
(assert (= temp395_48 temp395_47))
(assert (= temp395_49 (select ARGNAME_padding_NAMEEND_VAL temp395_48)))
(assert (= temp395_50 #x0000000000000000))
(assert (= temp395_51 #x0000000000000003))
(assert (= temp395_52 temp395_51))
(assert (= temp395_53 (select ARGNAME_padding_NAMEEND_VAL temp395_52)))
(assert (= temp395_54 #x0000000000000000))
(assert (= temp395_55 #x0000000000000004))
(assert (= temp395_56 temp395_55))
(assert (= temp395_57 (select ARGNAME_padding_NAMEEND_VAL temp395_56)))
(assert (= temp395_58 #x0000000000000000))
(assert (= temp395_59 #x0000000000000005))
(assert (= temp395_60 temp395_59))
(assert (= temp395_61 (select ARGNAME_padding_NAMEEND_VAL temp395_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp395_41 temp395_38)
             (bvslt temp395_45 temp395_42)
             (bvslt temp395_49 temp395_46)
             (bvslt temp395_53 temp395_50)
             (bvslt temp395_57 temp395_54)
             (bvslt temp395_61 temp395_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp395_62 #x0000000000000000))
(assert (= var1716002 temp395_62))
(assert (= temp395_63 #x0000000000000000))
(assert (= temp395_64 temp395_63))
(assert (= temp395_65 (select ARGNAME_stride_NAMEEND_VAL temp395_64)))
(assert (= temp395_66 #x0000000000000001))
(assert (= temp395_67 temp395_66))
(assert (= temp395_68 (select ARGNAME_stride_NAMEEND_VAL temp395_67)))
(assert (= temp395_69 #x0000000000000002))
(assert (= temp395_70 temp395_69))
(assert (= temp395_71 (select ARGNAME_stride_NAMEEND_VAL temp395_70)))
(assert (= temp395_72 #x0000000000000003))
(assert (= temp395_73 temp395_72))
(assert (= temp395_74 (select ARGNAME_stride_NAMEEND_VAL temp395_73)))
(assert (= temp395_75 #x0000000000000004))
(assert (= temp395_76 temp395_75))
(assert (= temp395_77 (select ARGNAME_stride_NAMEEND_VAL temp395_76)))
(assert (= temp395_78 #x0000000000000005))
(assert (= temp395_79 temp395_78))
(assert (= temp395_80 (select ARGNAME_stride_NAMEEND_VAL temp395_79)))
(assert (= temp395_81 #x0000000000000000))
(assert (= temp395_82 #x0000000000000000))
(assert (= temp395_83 temp395_82))
(assert (= temp395_84 (select ARGNAME_stride_NAMEEND_VAL temp395_83)))
(assert (= temp395_85 #x0000000000000000))
(assert (= temp395_86 #x0000000000000001))
(assert (= temp395_87 temp395_86))
(assert (= temp395_88 (select ARGNAME_stride_NAMEEND_VAL temp395_87)))
(assert (= temp395_89 #x0000000000000000))
(assert (= temp395_90 #x0000000000000002))
(assert (= temp395_91 temp395_90))
(assert (= temp395_92 (select ARGNAME_stride_NAMEEND_VAL temp395_91)))
(assert (= temp395_93 #x0000000000000000))
(assert (= temp395_94 #x0000000000000003))
(assert (= temp395_95 temp395_94))
(assert (= temp395_96 (select ARGNAME_stride_NAMEEND_VAL temp395_95)))
(assert (= temp395_97 #x0000000000000000))
(assert (= temp395_98 #x0000000000000004))
(assert (= temp395_99 temp395_98))
(assert (= temp395_100 (select ARGNAME_stride_NAMEEND_VAL temp395_99)))
(assert (= temp395_101 #x0000000000000000))
(assert (= temp395_102 #x0000000000000005))
(assert (= temp395_103 temp395_102))
(assert (= temp395_104 (select ARGNAME_stride_NAMEEND_VAL temp395_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp395_84 temp395_81)
             (bvsle temp395_88 temp395_85)
             (bvsle temp395_92 temp395_89)
             (bvsle temp395_96 temp395_93)
             (bvsle temp395_100 temp395_97)
             (bvsle temp395_104 temp395_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp395_105 #x0000000000000000))
(assert (= var1716023 temp395_105))
(assert (= temp395_106 #x0000000000000000))
(assert (= var1704114 temp395_106))
(assert (= temp395_107 #x0000000000000000))
(assert (= temp395_108 temp395_107))
(assert (= temp395_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_108)))
(assert (= temp395_110 #x0000000000000001))
(assert (= temp395_111 temp395_110))
(assert (= temp395_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_111)))
(assert (= temp395_113 #x0000000000000002))
(assert (= temp395_114 temp395_113))
(assert (= temp395_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_114)))
(assert (= temp395_116 #x0000000000000003))
(assert (= temp395_117 temp395_116))
(assert (= temp395_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_117)))
(assert (= temp395_119 #x0000000000000004))
(assert (= temp395_120 temp395_119))
(assert (= temp395_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_120)))
(assert (= temp395_122 #x0000000000000005))
(assert (= temp395_123 temp395_122))
(assert (= temp395_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_123)))
(assert (= temp395_126 var1704114))
(assert (= temp395_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_126)))
(assert (= temp395_125 temp395_127))
(assert (= var1716068
   (ite (bvslt temp395_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp395_128 #x0000000000000000))
(assert (= var1716068 temp395_128))
(assert (= temp395_129 #x0000000000000000))
(assert (= var1704114 temp395_129))
(assert (= temp395_131 var1704114))
(assert (= temp395_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_131)))
(assert (= temp395_130 temp395_132))
(assert (= var1716090 (bvsmod temp395_130 ARGNAME_groups_NAMEEND)))
(assert (= temp395_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp395_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp395_134 #x0000000000000001))
(assert (= var1716091 temp395_134))
(assert (= var1716110 var1716000))
(assert (= temp395_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp395_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp395_136 #x0000000000000001))
(assert (= var1716111 temp395_136))
(assert (= temp395_137 #x0000000000000001))
(assert (= var1705002 temp395_137))
(assert (= temp395_139 var1705002))
(assert (= temp395_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_139)))
(assert (= temp395_138 temp395_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp395_138)))
(assert (= temp395_141 #x0000000000000000))
(assert (= var1704114 temp395_141))
(assert (= temp395_143 var1704114))
(assert (= temp395_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp395_143)))
(assert (= temp395_142 temp395_144))
(assert (= temp395_145 #x0000000000000002))
(assert (= var1979241 temp395_145))
(assert (= temp395_146 #x0000000000000001))
(assert (= var1716281 temp395_146))
(assert (= temp395_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp395_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp395_148 #x0000000000000001))
(assert (= var997490 temp395_148))
(assert (= temp395_149 #x0000000000000001))
(assert (= var997620 temp395_149))
(assert (= var3486185 var997620))
(assert (= temp395_150 #x0000000000000000))
(assert (= var3686207 temp395_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp395_151 #x0000000000000002))
(assert (= var3815043 temp395_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4600208 var997633))
(assert (= var4862352 var997633))
(assert (= temp395_152 #x0000000000000001))
(assert (= var997490 temp395_152))
(model-add temp395_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp395_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp395_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp395_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp395_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp395_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






