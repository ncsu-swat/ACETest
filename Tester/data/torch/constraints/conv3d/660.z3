(declare-fun temp878_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp878_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp878_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp878_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp878_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp878_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp878_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp878_8 () (_ BitVec 64))
(declare-fun temp878_10 () (_ BitVec 64))
(declare-fun temp878_9 () (_ BitVec 64))
(declare-fun temp878_12 () (_ BitVec 64))
(declare-fun temp878_11 () (_ BitVec 64))
(declare-fun temp878_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp878_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp878_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp878_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp878_17 () (_ BitVec 64))
(declare-fun temp878_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp878_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp878_20 () (_ BitVec 64))
(declare-fun temp878_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_22 () (_ BitVec 64))
(declare-fun temp878_23 () (_ BitVec 64))
(declare-fun temp878_24 () (_ BitVec 64))
(declare-fun temp878_25 () (_ BitVec 64))
(declare-fun temp878_26 () (_ BitVec 64))
(declare-fun temp878_27 () (_ BitVec 64))
(declare-fun temp878_28 () (_ BitVec 64))
(declare-fun temp878_29 () (_ BitVec 64))
(declare-fun temp878_30 () (_ BitVec 64))
(declare-fun temp878_31 () (_ BitVec 64))
(declare-fun temp878_32 () (_ BitVec 64))
(declare-fun temp878_33 () (_ BitVec 64))
(declare-fun temp878_34 () (_ BitVec 64))
(declare-fun temp878_35 () (_ BitVec 64))
(declare-fun temp878_36 () (_ BitVec 64))
(declare-fun temp878_37 () (_ BitVec 64))
(declare-fun temp878_38 () (_ BitVec 64))
(declare-fun temp878_39 () (_ BitVec 64))
(declare-fun temp878_40 () (_ BitVec 64))
(declare-fun temp878_41 () (_ BitVec 64))
(declare-fun temp878_42 () (_ BitVec 64))
(declare-fun temp878_43 () (_ BitVec 64))
(declare-fun temp878_44 () (_ BitVec 64))
(declare-fun temp878_45 () (_ BitVec 64))
(declare-fun temp878_46 () (_ BitVec 64))
(declare-fun temp878_47 () (_ BitVec 64))
(declare-fun temp878_48 () (_ BitVec 64))
(declare-fun temp878_49 () (_ BitVec 64))
(declare-fun temp878_50 () (_ BitVec 64))
(declare-fun temp878_51 () (_ BitVec 64))
(declare-fun temp878_52 () (_ BitVec 64))
(declare-fun temp878_53 () (_ BitVec 64))
(declare-fun temp878_54 () (_ BitVec 64))
(declare-fun temp878_55 () (_ BitVec 64))
(declare-fun temp878_56 () (_ BitVec 64))
(declare-fun temp878_57 () (_ BitVec 64))
(declare-fun temp878_58 () (_ BitVec 64))
(declare-fun temp878_59 () (_ BitVec 64))
(declare-fun temp878_60 () (_ BitVec 64))
(declare-fun temp878_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp878_62 () (_ BitVec 64))
(declare-fun temp878_63 () (_ BitVec 64))
(declare-fun temp878_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_65 () (_ BitVec 64))
(declare-fun temp878_66 () (_ BitVec 64))
(declare-fun temp878_67 () (_ BitVec 64))
(declare-fun temp878_68 () (_ BitVec 64))
(declare-fun temp878_69 () (_ BitVec 64))
(declare-fun temp878_70 () (_ BitVec 64))
(declare-fun temp878_71 () (_ BitVec 64))
(declare-fun temp878_72 () (_ BitVec 64))
(declare-fun temp878_73 () (_ BitVec 64))
(declare-fun temp878_74 () (_ BitVec 64))
(declare-fun temp878_75 () (_ BitVec 64))
(declare-fun temp878_76 () (_ BitVec 64))
(declare-fun temp878_77 () (_ BitVec 64))
(declare-fun temp878_78 () (_ BitVec 64))
(declare-fun temp878_79 () (_ BitVec 64))
(declare-fun temp878_80 () (_ BitVec 64))
(declare-fun temp878_81 () (_ BitVec 64))
(declare-fun temp878_82 () (_ BitVec 64))
(declare-fun temp878_83 () (_ BitVec 64))
(declare-fun temp878_84 () (_ BitVec 64))
(declare-fun temp878_85 () (_ BitVec 64))
(declare-fun temp878_86 () (_ BitVec 64))
(declare-fun temp878_87 () (_ BitVec 64))
(declare-fun temp878_88 () (_ BitVec 64))
(declare-fun temp878_89 () (_ BitVec 64))
(declare-fun temp878_90 () (_ BitVec 64))
(declare-fun temp878_91 () (_ BitVec 64))
(declare-fun temp878_92 () (_ BitVec 64))
(declare-fun temp878_93 () (_ BitVec 64))
(declare-fun temp878_94 () (_ BitVec 64))
(declare-fun temp878_95 () (_ BitVec 64))
(declare-fun temp878_96 () (_ BitVec 64))
(declare-fun temp878_97 () (_ BitVec 64))
(declare-fun temp878_98 () (_ BitVec 64))
(declare-fun temp878_99 () (_ BitVec 64))
(declare-fun temp878_100 () (_ BitVec 64))
(declare-fun temp878_101 () (_ BitVec 64))
(declare-fun temp878_102 () (_ BitVec 64))
(declare-fun temp878_103 () (_ BitVec 64))
(declare-fun temp878_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp878_105 () (_ BitVec 64))
(declare-fun temp878_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp878_107 () (_ BitVec 64))
(declare-fun temp878_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_109 () (_ BitVec 64))
(declare-fun temp878_110 () (_ BitVec 64))
(declare-fun temp878_111 () (_ BitVec 64))
(declare-fun temp878_112 () (_ BitVec 64))
(declare-fun temp878_113 () (_ BitVec 64))
(declare-fun temp878_114 () (_ BitVec 64))
(declare-fun temp878_115 () (_ BitVec 64))
(declare-fun temp878_116 () (_ BitVec 64))
(declare-fun temp878_117 () (_ BitVec 64))
(declare-fun temp878_118 () (_ BitVec 64))
(declare-fun temp878_119 () (_ BitVec 64))
(declare-fun temp878_120 () (_ BitVec 64))
(declare-fun temp878_121 () (_ BitVec 64))
(declare-fun temp878_122 () (_ BitVec 64))
(declare-fun temp878_123 () (_ BitVec 64))
(declare-fun temp878_124 () (_ BitVec 64))
(declare-fun temp878_126 () (_ BitVec 64))
(declare-fun temp878_127 () (_ BitVec 64))
(declare-fun temp878_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp878_128 () (_ BitVec 64))
(declare-fun temp878_129 () (_ BitVec 64))
(declare-fun temp878_131 () (_ BitVec 64))
(declare-fun temp878_132 () (_ BitVec 64))
(declare-fun temp878_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp878_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp878_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp878_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp878_136 () (_ BitVec 64))
(declare-fun temp878_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp878_139 () (_ BitVec 64))
(declare-fun temp878_140 () (_ BitVec 64))
(declare-fun temp878_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp878_141 () (_ BitVec 64))
(declare-fun temp878_143 () (_ BitVec 64))
(declare-fun temp878_144 () (_ BitVec 64))
(declare-fun temp878_142 () (_ BitVec 64))
(declare-fun temp878_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp878_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp878_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp878_148 () (_ BitVec 64))
(declare-fun temp878_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp878_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp878_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4338064 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun temp878_152 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun temp878_153 () (_ BitVec 64))
(assert (= temp878_1 #x0000000000000003))
(assert (= var465453 temp878_1))
(assert (= temp878_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp878_2)))
(assert (= temp878_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp878_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp878_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp878_4)))
(assert (= temp878_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp878_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp878_6 #x0000000000000000))
(assert (= var465488 temp878_6))
(assert (= temp878_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp878_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_8 #x0000000000000001))
(assert (= var465522 temp878_8))
(assert (= temp878_10 #x0000000000000000))
(assert (= temp878_9 temp878_10))
(assert (= temp878_12 #x0000000000000003))
(assert (= temp878_11 temp878_12))
(assert (= temp878_13 #x0000000000000000))
(assert (= var863614 temp878_13))
(assert (= temp878_14 #x0000000000000001))
(assert (= var863635 temp878_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp878_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp878_15)))
(assert (= temp878_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp878_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_17 #x0000000000000000))
(assert (= var997373 temp878_17))
(assert (= temp878_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp878_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_19 #x0000000000000000))
(assert (= var997418 temp878_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp878_20 #x0000000000000000))
(assert (= temp878_21 temp878_20))
(assert (= temp878_22 (select ARGNAME_padding_NAMEEND_VAL temp878_21)))
(assert (= temp878_23 #x0000000000000001))
(assert (= temp878_24 temp878_23))
(assert (= temp878_25 (select ARGNAME_padding_NAMEEND_VAL temp878_24)))
(assert (= temp878_26 #x0000000000000002))
(assert (= temp878_27 temp878_26))
(assert (= temp878_28 (select ARGNAME_padding_NAMEEND_VAL temp878_27)))
(assert (= temp878_29 #x0000000000000003))
(assert (= temp878_30 temp878_29))
(assert (= temp878_31 (select ARGNAME_padding_NAMEEND_VAL temp878_30)))
(assert (= temp878_32 #x0000000000000004))
(assert (= temp878_33 temp878_32))
(assert (= temp878_34 (select ARGNAME_padding_NAMEEND_VAL temp878_33)))
(assert (= temp878_35 #x0000000000000005))
(assert (= temp878_36 temp878_35))
(assert (= temp878_37 (select ARGNAME_padding_NAMEEND_VAL temp878_36)))
(assert (= temp878_38 #x0000000000000000))
(assert (= temp878_39 #x0000000000000000))
(assert (= temp878_40 temp878_39))
(assert (= temp878_41 (select ARGNAME_padding_NAMEEND_VAL temp878_40)))
(assert (= temp878_42 #x0000000000000000))
(assert (= temp878_43 #x0000000000000001))
(assert (= temp878_44 temp878_43))
(assert (= temp878_45 (select ARGNAME_padding_NAMEEND_VAL temp878_44)))
(assert (= temp878_46 #x0000000000000000))
(assert (= temp878_47 #x0000000000000002))
(assert (= temp878_48 temp878_47))
(assert (= temp878_49 (select ARGNAME_padding_NAMEEND_VAL temp878_48)))
(assert (= temp878_50 #x0000000000000000))
(assert (= temp878_51 #x0000000000000003))
(assert (= temp878_52 temp878_51))
(assert (= temp878_53 (select ARGNAME_padding_NAMEEND_VAL temp878_52)))
(assert (= temp878_54 #x0000000000000000))
(assert (= temp878_55 #x0000000000000004))
(assert (= temp878_56 temp878_55))
(assert (= temp878_57 (select ARGNAME_padding_NAMEEND_VAL temp878_56)))
(assert (= temp878_58 #x0000000000000000))
(assert (= temp878_59 #x0000000000000005))
(assert (= temp878_60 temp878_59))
(assert (= temp878_61 (select ARGNAME_padding_NAMEEND_VAL temp878_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp878_41 temp878_38)
             (bvslt temp878_45 temp878_42)
             (bvslt temp878_49 temp878_46)
             (bvslt temp878_53 temp878_50)
             (bvslt temp878_57 temp878_54)
             (bvslt temp878_61 temp878_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_62 #x0000000000000000))
(assert (= var1716002 temp878_62))
(assert (= temp878_63 #x0000000000000000))
(assert (= temp878_64 temp878_63))
(assert (= temp878_65 (select ARGNAME_stride_NAMEEND_VAL temp878_64)))
(assert (= temp878_66 #x0000000000000001))
(assert (= temp878_67 temp878_66))
(assert (= temp878_68 (select ARGNAME_stride_NAMEEND_VAL temp878_67)))
(assert (= temp878_69 #x0000000000000002))
(assert (= temp878_70 temp878_69))
(assert (= temp878_71 (select ARGNAME_stride_NAMEEND_VAL temp878_70)))
(assert (= temp878_72 #x0000000000000003))
(assert (= temp878_73 temp878_72))
(assert (= temp878_74 (select ARGNAME_stride_NAMEEND_VAL temp878_73)))
(assert (= temp878_75 #x0000000000000004))
(assert (= temp878_76 temp878_75))
(assert (= temp878_77 (select ARGNAME_stride_NAMEEND_VAL temp878_76)))
(assert (= temp878_78 #x0000000000000005))
(assert (= temp878_79 temp878_78))
(assert (= temp878_80 (select ARGNAME_stride_NAMEEND_VAL temp878_79)))
(assert (= temp878_81 #x0000000000000000))
(assert (= temp878_82 #x0000000000000000))
(assert (= temp878_83 temp878_82))
(assert (= temp878_84 (select ARGNAME_stride_NAMEEND_VAL temp878_83)))
(assert (= temp878_85 #x0000000000000000))
(assert (= temp878_86 #x0000000000000001))
(assert (= temp878_87 temp878_86))
(assert (= temp878_88 (select ARGNAME_stride_NAMEEND_VAL temp878_87)))
(assert (= temp878_89 #x0000000000000000))
(assert (= temp878_90 #x0000000000000002))
(assert (= temp878_91 temp878_90))
(assert (= temp878_92 (select ARGNAME_stride_NAMEEND_VAL temp878_91)))
(assert (= temp878_93 #x0000000000000000))
(assert (= temp878_94 #x0000000000000003))
(assert (= temp878_95 temp878_94))
(assert (= temp878_96 (select ARGNAME_stride_NAMEEND_VAL temp878_95)))
(assert (= temp878_97 #x0000000000000000))
(assert (= temp878_98 #x0000000000000004))
(assert (= temp878_99 temp878_98))
(assert (= temp878_100 (select ARGNAME_stride_NAMEEND_VAL temp878_99)))
(assert (= temp878_101 #x0000000000000000))
(assert (= temp878_102 #x0000000000000005))
(assert (= temp878_103 temp878_102))
(assert (= temp878_104 (select ARGNAME_stride_NAMEEND_VAL temp878_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp878_84 temp878_81)
             (bvsle temp878_88 temp878_85)
             (bvsle temp878_92 temp878_89)
             (bvsle temp878_96 temp878_93)
             (bvsle temp878_100 temp878_97)
             (bvsle temp878_104 temp878_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_105 #x0000000000000000))
(assert (= var1716023 temp878_105))
(assert (= temp878_106 #x0000000000000000))
(assert (= var1704114 temp878_106))
(assert (= temp878_107 #x0000000000000000))
(assert (= temp878_108 temp878_107))
(assert (= temp878_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_108)))
(assert (= temp878_110 #x0000000000000001))
(assert (= temp878_111 temp878_110))
(assert (= temp878_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_111)))
(assert (= temp878_113 #x0000000000000002))
(assert (= temp878_114 temp878_113))
(assert (= temp878_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_114)))
(assert (= temp878_116 #x0000000000000003))
(assert (= temp878_117 temp878_116))
(assert (= temp878_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_117)))
(assert (= temp878_119 #x0000000000000004))
(assert (= temp878_120 temp878_119))
(assert (= temp878_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_120)))
(assert (= temp878_122 #x0000000000000005))
(assert (= temp878_123 temp878_122))
(assert (= temp878_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_123)))
(assert (= temp878_126 var1704114))
(assert (= temp878_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_126)))
(assert (= temp878_125 temp878_127))
(assert (= var1716068
   (ite (bvslt temp878_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_128 #x0000000000000000))
(assert (= var1716068 temp878_128))
(assert (= temp878_129 #x0000000000000000))
(assert (= var1704114 temp878_129))
(assert (= temp878_131 var1704114))
(assert (= temp878_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_131)))
(assert (= temp878_130 temp878_132))
(assert (= var1716090 (bvsmod temp878_130 ARGNAME_groups_NAMEEND)))
(assert (= temp878_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp878_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_134 #x0000000000000001))
(assert (= var1716091 temp878_134))
(assert (= var1716110 var1716000))
(assert (= temp878_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp878_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_136 #x0000000000000001))
(assert (= var1716111 temp878_136))
(assert (= temp878_137 #x0000000000000001))
(assert (= var1705002 temp878_137))
(assert (= temp878_139 var1705002))
(assert (= temp878_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_139)))
(assert (= temp878_138 temp878_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp878_138)))
(assert (= temp878_141 #x0000000000000000))
(assert (= var1704114 temp878_141))
(assert (= temp878_143 var1704114))
(assert (= temp878_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_143)))
(assert (= temp878_142 temp878_144))
(assert (= temp878_145 #x0000000000000002))
(assert (= var1979241 temp878_145))
(assert (= temp878_146 #x0000000000000001))
(assert (= var1716281 temp878_146))
(assert (= temp878_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp878_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_148 #x0000000000000001))
(assert (= var997490 temp878_148))
(assert (= temp878_149 #x0000000000000001))
(assert (= var997620 temp878_149))
(assert (= var3486185 var997620))
(assert (= temp878_150 #x0000000000000000))
(assert (= var3686207 temp878_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp878_151 #x0000000000000002))
(assert (= var3815043 temp878_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4338064 var997633))
(assert (= var4600208 var997633))
(assert (= temp878_152 #x0000000000000000))
(assert (= var4927888 temp878_152))
(assert (= temp878_153 #x0000000000000001))
(assert (= var997490 temp878_153))
(model-add temp878_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp878_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp878_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp878_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp878_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp878_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






