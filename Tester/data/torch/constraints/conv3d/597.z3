(declare-fun temp795_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp795_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp795_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp795_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp795_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp795_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp795_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp795_8 () (_ BitVec 64))
(declare-fun temp795_10 () (_ BitVec 64))
(declare-fun temp795_9 () (_ BitVec 64))
(declare-fun temp795_12 () (_ BitVec 64))
(declare-fun temp795_11 () (_ BitVec 64))
(declare-fun temp795_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp795_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp795_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp795_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp795_17 () (_ BitVec 64))
(declare-fun temp795_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp795_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp795_20 () (_ BitVec 64))
(declare-fun temp795_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp795_22 () (_ BitVec 64))
(declare-fun temp795_23 () (_ BitVec 64))
(declare-fun temp795_24 () (_ BitVec 64))
(declare-fun temp795_25 () (_ BitVec 64))
(declare-fun temp795_26 () (_ BitVec 64))
(declare-fun temp795_27 () (_ BitVec 64))
(declare-fun temp795_28 () (_ BitVec 64))
(declare-fun temp795_29 () (_ BitVec 64))
(declare-fun temp795_30 () (_ BitVec 64))
(declare-fun temp795_31 () (_ BitVec 64))
(declare-fun temp795_32 () (_ BitVec 64))
(declare-fun temp795_33 () (_ BitVec 64))
(declare-fun temp795_34 () (_ BitVec 64))
(declare-fun temp795_35 () (_ BitVec 64))
(declare-fun temp795_36 () (_ BitVec 64))
(declare-fun temp795_37 () (_ BitVec 64))
(declare-fun temp795_38 () (_ BitVec 64))
(declare-fun temp795_39 () (_ BitVec 64))
(declare-fun temp795_40 () (_ BitVec 64))
(declare-fun temp795_41 () (_ BitVec 64))
(declare-fun temp795_42 () (_ BitVec 64))
(declare-fun temp795_43 () (_ BitVec 64))
(declare-fun temp795_44 () (_ BitVec 64))
(declare-fun temp795_45 () (_ BitVec 64))
(declare-fun temp795_46 () (_ BitVec 64))
(declare-fun temp795_47 () (_ BitVec 64))
(declare-fun temp795_48 () (_ BitVec 64))
(declare-fun temp795_49 () (_ BitVec 64))
(declare-fun temp795_50 () (_ BitVec 64))
(declare-fun temp795_51 () (_ BitVec 64))
(declare-fun temp795_52 () (_ BitVec 64))
(declare-fun temp795_53 () (_ BitVec 64))
(declare-fun temp795_54 () (_ BitVec 64))
(declare-fun temp795_55 () (_ BitVec 64))
(declare-fun temp795_56 () (_ BitVec 64))
(declare-fun temp795_57 () (_ BitVec 64))
(declare-fun temp795_58 () (_ BitVec 64))
(declare-fun temp795_59 () (_ BitVec 64))
(declare-fun temp795_60 () (_ BitVec 64))
(declare-fun temp795_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp795_62 () (_ BitVec 64))
(declare-fun temp795_63 () (_ BitVec 64))
(declare-fun temp795_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp795_65 () (_ BitVec 64))
(declare-fun temp795_66 () (_ BitVec 64))
(declare-fun temp795_67 () (_ BitVec 64))
(declare-fun temp795_68 () (_ BitVec 64))
(declare-fun temp795_69 () (_ BitVec 64))
(declare-fun temp795_70 () (_ BitVec 64))
(declare-fun temp795_71 () (_ BitVec 64))
(declare-fun temp795_72 () (_ BitVec 64))
(declare-fun temp795_73 () (_ BitVec 64))
(declare-fun temp795_74 () (_ BitVec 64))
(declare-fun temp795_75 () (_ BitVec 64))
(declare-fun temp795_76 () (_ BitVec 64))
(declare-fun temp795_77 () (_ BitVec 64))
(declare-fun temp795_78 () (_ BitVec 64))
(declare-fun temp795_79 () (_ BitVec 64))
(declare-fun temp795_80 () (_ BitVec 64))
(declare-fun temp795_81 () (_ BitVec 64))
(declare-fun temp795_82 () (_ BitVec 64))
(declare-fun temp795_83 () (_ BitVec 64))
(declare-fun temp795_84 () (_ BitVec 64))
(declare-fun temp795_85 () (_ BitVec 64))
(declare-fun temp795_86 () (_ BitVec 64))
(declare-fun temp795_87 () (_ BitVec 64))
(declare-fun temp795_88 () (_ BitVec 64))
(declare-fun temp795_89 () (_ BitVec 64))
(declare-fun temp795_90 () (_ BitVec 64))
(declare-fun temp795_91 () (_ BitVec 64))
(declare-fun temp795_92 () (_ BitVec 64))
(declare-fun temp795_93 () (_ BitVec 64))
(declare-fun temp795_94 () (_ BitVec 64))
(declare-fun temp795_95 () (_ BitVec 64))
(declare-fun temp795_96 () (_ BitVec 64))
(declare-fun temp795_97 () (_ BitVec 64))
(declare-fun temp795_98 () (_ BitVec 64))
(declare-fun temp795_99 () (_ BitVec 64))
(declare-fun temp795_100 () (_ BitVec 64))
(declare-fun temp795_101 () (_ BitVec 64))
(declare-fun temp795_102 () (_ BitVec 64))
(declare-fun temp795_103 () (_ BitVec 64))
(declare-fun temp795_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp795_105 () (_ BitVec 64))
(declare-fun temp795_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp795_107 () (_ BitVec 64))
(declare-fun temp795_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp795_109 () (_ BitVec 64))
(declare-fun temp795_110 () (_ BitVec 64))
(declare-fun temp795_111 () (_ BitVec 64))
(declare-fun temp795_112 () (_ BitVec 64))
(declare-fun temp795_113 () (_ BitVec 64))
(declare-fun temp795_114 () (_ BitVec 64))
(declare-fun temp795_115 () (_ BitVec 64))
(declare-fun temp795_116 () (_ BitVec 64))
(declare-fun temp795_117 () (_ BitVec 64))
(declare-fun temp795_118 () (_ BitVec 64))
(declare-fun temp795_119 () (_ BitVec 64))
(declare-fun temp795_120 () (_ BitVec 64))
(declare-fun temp795_121 () (_ BitVec 64))
(declare-fun temp795_122 () (_ BitVec 64))
(declare-fun temp795_123 () (_ BitVec 64))
(declare-fun temp795_124 () (_ BitVec 64))
(declare-fun temp795_126 () (_ BitVec 64))
(declare-fun temp795_127 () (_ BitVec 64))
(declare-fun temp795_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp795_128 () (_ BitVec 64))
(declare-fun temp795_129 () (_ BitVec 64))
(declare-fun temp795_131 () (_ BitVec 64))
(declare-fun temp795_132 () (_ BitVec 64))
(declare-fun temp795_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp795_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp795_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp795_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp795_136 () (_ BitVec 64))
(declare-fun temp795_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp795_139 () (_ BitVec 64))
(declare-fun temp795_140 () (_ BitVec 64))
(declare-fun temp795_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp795_141 () (_ BitVec 64))
(declare-fun temp795_143 () (_ BitVec 64))
(declare-fun temp795_144 () (_ BitVec 64))
(declare-fun temp795_142 () (_ BitVec 64))
(declare-fun temp795_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp795_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp795_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp795_148 () (_ BitVec 64))
(declare-fun temp795_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp795_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp795_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var998322 () (_ BitVec 64))
(declare-fun temp795_152 () (_ BitVec 64))
(declare-fun var998323 () (_ BitVec 64))
(declare-fun temp795_153 () (_ BitVec 64))
(assert (= temp795_1 #x0000000000000003))
(assert (= var465453 temp795_1))
(assert (= temp795_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp795_2)))
(assert (= temp795_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp795_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp795_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp795_4)))
(assert (= temp795_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp795_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp795_6 #x0000000000000000))
(assert (= var465488 temp795_6))
(assert (= temp795_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp795_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp795_8 #x0000000000000001))
(assert (= var465522 temp795_8))
(assert (= temp795_10 #x0000000000000000))
(assert (= temp795_9 temp795_10))
(assert (= temp795_12 #x0000000000000003))
(assert (= temp795_11 temp795_12))
(assert (= temp795_13 #x0000000000000000))
(assert (= var863614 temp795_13))
(assert (= temp795_14 #x0000000000000001))
(assert (= var863635 temp795_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp795_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp795_15)))
(assert (= temp795_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp795_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp795_17 #x0000000000000000))
(assert (= var997373 temp795_17))
(assert (= temp795_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp795_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp795_19 #x0000000000000000))
(assert (= var997418 temp795_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp795_20 #x0000000000000000))
(assert (= temp795_21 temp795_20))
(assert (= temp795_22 (select ARGNAME_padding_NAMEEND_VAL temp795_21)))
(assert (= temp795_23 #x0000000000000001))
(assert (= temp795_24 temp795_23))
(assert (= temp795_25 (select ARGNAME_padding_NAMEEND_VAL temp795_24)))
(assert (= temp795_26 #x0000000000000002))
(assert (= temp795_27 temp795_26))
(assert (= temp795_28 (select ARGNAME_padding_NAMEEND_VAL temp795_27)))
(assert (= temp795_29 #x0000000000000003))
(assert (= temp795_30 temp795_29))
(assert (= temp795_31 (select ARGNAME_padding_NAMEEND_VAL temp795_30)))
(assert (= temp795_32 #x0000000000000004))
(assert (= temp795_33 temp795_32))
(assert (= temp795_34 (select ARGNAME_padding_NAMEEND_VAL temp795_33)))
(assert (= temp795_35 #x0000000000000005))
(assert (= temp795_36 temp795_35))
(assert (= temp795_37 (select ARGNAME_padding_NAMEEND_VAL temp795_36)))
(assert (= temp795_38 #x0000000000000000))
(assert (= temp795_39 #x0000000000000000))
(assert (= temp795_40 temp795_39))
(assert (= temp795_41 (select ARGNAME_padding_NAMEEND_VAL temp795_40)))
(assert (= temp795_42 #x0000000000000000))
(assert (= temp795_43 #x0000000000000001))
(assert (= temp795_44 temp795_43))
(assert (= temp795_45 (select ARGNAME_padding_NAMEEND_VAL temp795_44)))
(assert (= temp795_46 #x0000000000000000))
(assert (= temp795_47 #x0000000000000002))
(assert (= temp795_48 temp795_47))
(assert (= temp795_49 (select ARGNAME_padding_NAMEEND_VAL temp795_48)))
(assert (= temp795_50 #x0000000000000000))
(assert (= temp795_51 #x0000000000000003))
(assert (= temp795_52 temp795_51))
(assert (= temp795_53 (select ARGNAME_padding_NAMEEND_VAL temp795_52)))
(assert (= temp795_54 #x0000000000000000))
(assert (= temp795_55 #x0000000000000004))
(assert (= temp795_56 temp795_55))
(assert (= temp795_57 (select ARGNAME_padding_NAMEEND_VAL temp795_56)))
(assert (= temp795_58 #x0000000000000000))
(assert (= temp795_59 #x0000000000000005))
(assert (= temp795_60 temp795_59))
(assert (= temp795_61 (select ARGNAME_padding_NAMEEND_VAL temp795_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp795_41 temp795_38)
             (bvslt temp795_45 temp795_42)
             (bvslt temp795_49 temp795_46)
             (bvslt temp795_53 temp795_50)
             (bvslt temp795_57 temp795_54)
             (bvslt temp795_61 temp795_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp795_62 #x0000000000000000))
(assert (= var1716002 temp795_62))
(assert (= temp795_63 #x0000000000000000))
(assert (= temp795_64 temp795_63))
(assert (= temp795_65 (select ARGNAME_stride_NAMEEND_VAL temp795_64)))
(assert (= temp795_66 #x0000000000000001))
(assert (= temp795_67 temp795_66))
(assert (= temp795_68 (select ARGNAME_stride_NAMEEND_VAL temp795_67)))
(assert (= temp795_69 #x0000000000000002))
(assert (= temp795_70 temp795_69))
(assert (= temp795_71 (select ARGNAME_stride_NAMEEND_VAL temp795_70)))
(assert (= temp795_72 #x0000000000000003))
(assert (= temp795_73 temp795_72))
(assert (= temp795_74 (select ARGNAME_stride_NAMEEND_VAL temp795_73)))
(assert (= temp795_75 #x0000000000000004))
(assert (= temp795_76 temp795_75))
(assert (= temp795_77 (select ARGNAME_stride_NAMEEND_VAL temp795_76)))
(assert (= temp795_78 #x0000000000000005))
(assert (= temp795_79 temp795_78))
(assert (= temp795_80 (select ARGNAME_stride_NAMEEND_VAL temp795_79)))
(assert (= temp795_81 #x0000000000000000))
(assert (= temp795_82 #x0000000000000000))
(assert (= temp795_83 temp795_82))
(assert (= temp795_84 (select ARGNAME_stride_NAMEEND_VAL temp795_83)))
(assert (= temp795_85 #x0000000000000000))
(assert (= temp795_86 #x0000000000000001))
(assert (= temp795_87 temp795_86))
(assert (= temp795_88 (select ARGNAME_stride_NAMEEND_VAL temp795_87)))
(assert (= temp795_89 #x0000000000000000))
(assert (= temp795_90 #x0000000000000002))
(assert (= temp795_91 temp795_90))
(assert (= temp795_92 (select ARGNAME_stride_NAMEEND_VAL temp795_91)))
(assert (= temp795_93 #x0000000000000000))
(assert (= temp795_94 #x0000000000000003))
(assert (= temp795_95 temp795_94))
(assert (= temp795_96 (select ARGNAME_stride_NAMEEND_VAL temp795_95)))
(assert (= temp795_97 #x0000000000000000))
(assert (= temp795_98 #x0000000000000004))
(assert (= temp795_99 temp795_98))
(assert (= temp795_100 (select ARGNAME_stride_NAMEEND_VAL temp795_99)))
(assert (= temp795_101 #x0000000000000000))
(assert (= temp795_102 #x0000000000000005))
(assert (= temp795_103 temp795_102))
(assert (= temp795_104 (select ARGNAME_stride_NAMEEND_VAL temp795_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp795_84 temp795_81)
             (bvsle temp795_88 temp795_85)
             (bvsle temp795_92 temp795_89)
             (bvsle temp795_96 temp795_93)
             (bvsle temp795_100 temp795_97)
             (bvsle temp795_104 temp795_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp795_105 #x0000000000000000))
(assert (= var1716023 temp795_105))
(assert (= temp795_106 #x0000000000000000))
(assert (= var1704114 temp795_106))
(assert (= temp795_107 #x0000000000000000))
(assert (= temp795_108 temp795_107))
(assert (= temp795_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_108)))
(assert (= temp795_110 #x0000000000000001))
(assert (= temp795_111 temp795_110))
(assert (= temp795_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_111)))
(assert (= temp795_113 #x0000000000000002))
(assert (= temp795_114 temp795_113))
(assert (= temp795_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_114)))
(assert (= temp795_116 #x0000000000000003))
(assert (= temp795_117 temp795_116))
(assert (= temp795_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_117)))
(assert (= temp795_119 #x0000000000000004))
(assert (= temp795_120 temp795_119))
(assert (= temp795_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_120)))
(assert (= temp795_122 #x0000000000000005))
(assert (= temp795_123 temp795_122))
(assert (= temp795_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_123)))
(assert (= temp795_126 var1704114))
(assert (= temp795_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_126)))
(assert (= temp795_125 temp795_127))
(assert (= var1716068
   (ite (bvslt temp795_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp795_128 #x0000000000000000))
(assert (= var1716068 temp795_128))
(assert (= temp795_129 #x0000000000000000))
(assert (= var1704114 temp795_129))
(assert (= temp795_131 var1704114))
(assert (= temp795_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_131)))
(assert (= temp795_130 temp795_132))
(assert (= var1716090 (bvsmod temp795_130 ARGNAME_groups_NAMEEND)))
(assert (= temp795_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp795_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp795_134 #x0000000000000001))
(assert (= var1716091 temp795_134))
(assert (= var1716110 var1716000))
(assert (= temp795_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp795_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp795_136 #x0000000000000001))
(assert (= var1716111 temp795_136))
(assert (= temp795_137 #x0000000000000001))
(assert (= var1705002 temp795_137))
(assert (= temp795_139 var1705002))
(assert (= temp795_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_139)))
(assert (= temp795_138 temp795_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp795_138)))
(assert (= temp795_141 #x0000000000000000))
(assert (= var1704114 temp795_141))
(assert (= temp795_143 var1704114))
(assert (= temp795_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp795_143)))
(assert (= temp795_142 temp795_144))
(assert (= temp795_145 #x0000000000000002))
(assert (= var1979241 temp795_145))
(assert (= temp795_146 #x0000000000000001))
(assert (= var1716281 temp795_146))
(assert (= temp795_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp795_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp795_148 #x0000000000000001))
(assert (= var997490 temp795_148))
(assert (= temp795_149 #x0000000000000001))
(assert (= var997620 temp795_149))
(assert (= var3486185 var997620))
(assert (= temp795_150 #x0000000000000000))
(assert (= var3686207 temp795_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp795_151 #x0000000000000002))
(assert (= var3815043 temp795_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var998322 var997345))
(assert (= temp795_152 #x0000000000000000))
(assert (= var998323
   (ite (distinct var998322 temp795_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp795_153 #x0000000000000001))
(assert (= var997490 temp795_153))
(model-add temp795_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp795_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp795_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp795_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp795_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp795_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






