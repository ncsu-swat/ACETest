(declare-fun temp869_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp869_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp869_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp869_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp869_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp869_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp869_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp869_8 () (_ BitVec 64))
(declare-fun temp869_10 () (_ BitVec 64))
(declare-fun temp869_9 () (_ BitVec 64))
(declare-fun temp869_12 () (_ BitVec 64))
(declare-fun temp869_11 () (_ BitVec 64))
(declare-fun temp869_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp869_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp869_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp869_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp869_17 () (_ BitVec 64))
(declare-fun temp869_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp869_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp869_20 () (_ BitVec 64))
(declare-fun temp869_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp869_22 () (_ BitVec 64))
(declare-fun temp869_23 () (_ BitVec 64))
(declare-fun temp869_24 () (_ BitVec 64))
(declare-fun temp869_25 () (_ BitVec 64))
(declare-fun temp869_26 () (_ BitVec 64))
(declare-fun temp869_27 () (_ BitVec 64))
(declare-fun temp869_28 () (_ BitVec 64))
(declare-fun temp869_29 () (_ BitVec 64))
(declare-fun temp869_30 () (_ BitVec 64))
(declare-fun temp869_31 () (_ BitVec 64))
(declare-fun temp869_32 () (_ BitVec 64))
(declare-fun temp869_33 () (_ BitVec 64))
(declare-fun temp869_34 () (_ BitVec 64))
(declare-fun temp869_35 () (_ BitVec 64))
(declare-fun temp869_36 () (_ BitVec 64))
(declare-fun temp869_37 () (_ BitVec 64))
(declare-fun temp869_38 () (_ BitVec 64))
(declare-fun temp869_39 () (_ BitVec 64))
(declare-fun temp869_40 () (_ BitVec 64))
(declare-fun temp869_41 () (_ BitVec 64))
(declare-fun temp869_42 () (_ BitVec 64))
(declare-fun temp869_43 () (_ BitVec 64))
(declare-fun temp869_44 () (_ BitVec 64))
(declare-fun temp869_45 () (_ BitVec 64))
(declare-fun temp869_46 () (_ BitVec 64))
(declare-fun temp869_47 () (_ BitVec 64))
(declare-fun temp869_48 () (_ BitVec 64))
(declare-fun temp869_49 () (_ BitVec 64))
(declare-fun temp869_50 () (_ BitVec 64))
(declare-fun temp869_51 () (_ BitVec 64))
(declare-fun temp869_52 () (_ BitVec 64))
(declare-fun temp869_53 () (_ BitVec 64))
(declare-fun temp869_54 () (_ BitVec 64))
(declare-fun temp869_55 () (_ BitVec 64))
(declare-fun temp869_56 () (_ BitVec 64))
(declare-fun temp869_57 () (_ BitVec 64))
(declare-fun temp869_58 () (_ BitVec 64))
(declare-fun temp869_59 () (_ BitVec 64))
(declare-fun temp869_60 () (_ BitVec 64))
(declare-fun temp869_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp869_62 () (_ BitVec 64))
(declare-fun temp869_63 () (_ BitVec 64))
(declare-fun temp869_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp869_65 () (_ BitVec 64))
(declare-fun temp869_66 () (_ BitVec 64))
(declare-fun temp869_67 () (_ BitVec 64))
(declare-fun temp869_68 () (_ BitVec 64))
(declare-fun temp869_69 () (_ BitVec 64))
(declare-fun temp869_70 () (_ BitVec 64))
(declare-fun temp869_71 () (_ BitVec 64))
(declare-fun temp869_72 () (_ BitVec 64))
(declare-fun temp869_73 () (_ BitVec 64))
(declare-fun temp869_74 () (_ BitVec 64))
(declare-fun temp869_75 () (_ BitVec 64))
(declare-fun temp869_76 () (_ BitVec 64))
(declare-fun temp869_77 () (_ BitVec 64))
(declare-fun temp869_78 () (_ BitVec 64))
(declare-fun temp869_79 () (_ BitVec 64))
(declare-fun temp869_80 () (_ BitVec 64))
(declare-fun temp869_81 () (_ BitVec 64))
(declare-fun temp869_82 () (_ BitVec 64))
(declare-fun temp869_83 () (_ BitVec 64))
(declare-fun temp869_84 () (_ BitVec 64))
(declare-fun temp869_85 () (_ BitVec 64))
(declare-fun temp869_86 () (_ BitVec 64))
(declare-fun temp869_87 () (_ BitVec 64))
(declare-fun temp869_88 () (_ BitVec 64))
(declare-fun temp869_89 () (_ BitVec 64))
(declare-fun temp869_90 () (_ BitVec 64))
(declare-fun temp869_91 () (_ BitVec 64))
(declare-fun temp869_92 () (_ BitVec 64))
(declare-fun temp869_93 () (_ BitVec 64))
(declare-fun temp869_94 () (_ BitVec 64))
(declare-fun temp869_95 () (_ BitVec 64))
(declare-fun temp869_96 () (_ BitVec 64))
(declare-fun temp869_97 () (_ BitVec 64))
(declare-fun temp869_98 () (_ BitVec 64))
(declare-fun temp869_99 () (_ BitVec 64))
(declare-fun temp869_100 () (_ BitVec 64))
(declare-fun temp869_101 () (_ BitVec 64))
(declare-fun temp869_102 () (_ BitVec 64))
(declare-fun temp869_103 () (_ BitVec 64))
(declare-fun temp869_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp869_105 () (_ BitVec 64))
(declare-fun temp869_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp869_107 () (_ BitVec 64))
(declare-fun temp869_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp869_109 () (_ BitVec 64))
(declare-fun temp869_110 () (_ BitVec 64))
(declare-fun temp869_111 () (_ BitVec 64))
(declare-fun temp869_112 () (_ BitVec 64))
(declare-fun temp869_113 () (_ BitVec 64))
(declare-fun temp869_114 () (_ BitVec 64))
(declare-fun temp869_115 () (_ BitVec 64))
(declare-fun temp869_116 () (_ BitVec 64))
(declare-fun temp869_117 () (_ BitVec 64))
(declare-fun temp869_118 () (_ BitVec 64))
(declare-fun temp869_119 () (_ BitVec 64))
(declare-fun temp869_120 () (_ BitVec 64))
(declare-fun temp869_121 () (_ BitVec 64))
(declare-fun temp869_122 () (_ BitVec 64))
(declare-fun temp869_123 () (_ BitVec 64))
(declare-fun temp869_124 () (_ BitVec 64))
(declare-fun temp869_126 () (_ BitVec 64))
(declare-fun temp869_127 () (_ BitVec 64))
(declare-fun temp869_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp869_128 () (_ BitVec 64))
(declare-fun temp869_129 () (_ BitVec 64))
(declare-fun temp869_131 () (_ BitVec 64))
(declare-fun temp869_132 () (_ BitVec 64))
(declare-fun temp869_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp869_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp869_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp869_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp869_136 () (_ BitVec 64))
(declare-fun temp869_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp869_139 () (_ BitVec 64))
(declare-fun temp869_140 () (_ BitVec 64))
(declare-fun temp869_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp869_141 () (_ BitVec 64))
(declare-fun temp869_143 () (_ BitVec 64))
(declare-fun temp869_144 () (_ BitVec 64))
(declare-fun temp869_142 () (_ BitVec 64))
(declare-fun temp869_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp869_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp869_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp869_148 () (_ BitVec 64))
(declare-fun temp869_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp869_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp869_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp869_152 () (_ BitVec 64))
(assert (= temp869_1 #x0000000000000003))
(assert (= var465453 temp869_1))
(assert (= temp869_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp869_2)))
(assert (= temp869_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp869_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp869_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp869_4)))
(assert (= temp869_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp869_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp869_6 #x0000000000000000))
(assert (= var465488 temp869_6))
(assert (= temp869_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp869_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp869_8 #x0000000000000001))
(assert (= var465522 temp869_8))
(assert (= temp869_10 #x0000000000000000))
(assert (= temp869_9 temp869_10))
(assert (= temp869_12 #x0000000000000003))
(assert (= temp869_11 temp869_12))
(assert (= temp869_13 #x0000000000000000))
(assert (= var863614 temp869_13))
(assert (= temp869_14 #x0000000000000001))
(assert (= var863635 temp869_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp869_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp869_15)))
(assert (= temp869_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp869_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_17 #x0000000000000000))
(assert (= var997373 temp869_17))
(assert (= temp869_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp869_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_19 #x0000000000000000))
(assert (= var997418 temp869_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp869_20 #x0000000000000000))
(assert (= temp869_21 temp869_20))
(assert (= temp869_22 (select ARGNAME_padding_NAMEEND_VAL temp869_21)))
(assert (= temp869_23 #x0000000000000001))
(assert (= temp869_24 temp869_23))
(assert (= temp869_25 (select ARGNAME_padding_NAMEEND_VAL temp869_24)))
(assert (= temp869_26 #x0000000000000002))
(assert (= temp869_27 temp869_26))
(assert (= temp869_28 (select ARGNAME_padding_NAMEEND_VAL temp869_27)))
(assert (= temp869_29 #x0000000000000003))
(assert (= temp869_30 temp869_29))
(assert (= temp869_31 (select ARGNAME_padding_NAMEEND_VAL temp869_30)))
(assert (= temp869_32 #x0000000000000004))
(assert (= temp869_33 temp869_32))
(assert (= temp869_34 (select ARGNAME_padding_NAMEEND_VAL temp869_33)))
(assert (= temp869_35 #x0000000000000005))
(assert (= temp869_36 temp869_35))
(assert (= temp869_37 (select ARGNAME_padding_NAMEEND_VAL temp869_36)))
(assert (= temp869_38 #x0000000000000000))
(assert (= temp869_39 #x0000000000000000))
(assert (= temp869_40 temp869_39))
(assert (= temp869_41 (select ARGNAME_padding_NAMEEND_VAL temp869_40)))
(assert (= temp869_42 #x0000000000000000))
(assert (= temp869_43 #x0000000000000001))
(assert (= temp869_44 temp869_43))
(assert (= temp869_45 (select ARGNAME_padding_NAMEEND_VAL temp869_44)))
(assert (= temp869_46 #x0000000000000000))
(assert (= temp869_47 #x0000000000000002))
(assert (= temp869_48 temp869_47))
(assert (= temp869_49 (select ARGNAME_padding_NAMEEND_VAL temp869_48)))
(assert (= temp869_50 #x0000000000000000))
(assert (= temp869_51 #x0000000000000003))
(assert (= temp869_52 temp869_51))
(assert (= temp869_53 (select ARGNAME_padding_NAMEEND_VAL temp869_52)))
(assert (= temp869_54 #x0000000000000000))
(assert (= temp869_55 #x0000000000000004))
(assert (= temp869_56 temp869_55))
(assert (= temp869_57 (select ARGNAME_padding_NAMEEND_VAL temp869_56)))
(assert (= temp869_58 #x0000000000000000))
(assert (= temp869_59 #x0000000000000005))
(assert (= temp869_60 temp869_59))
(assert (= temp869_61 (select ARGNAME_padding_NAMEEND_VAL temp869_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp869_41 temp869_38)
             (bvslt temp869_45 temp869_42)
             (bvslt temp869_49 temp869_46)
             (bvslt temp869_53 temp869_50)
             (bvslt temp869_57 temp869_54)
             (bvslt temp869_61 temp869_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_62 #x0000000000000000))
(assert (= var1716002 temp869_62))
(assert (= temp869_63 #x0000000000000000))
(assert (= temp869_64 temp869_63))
(assert (= temp869_65 (select ARGNAME_stride_NAMEEND_VAL temp869_64)))
(assert (= temp869_66 #x0000000000000001))
(assert (= temp869_67 temp869_66))
(assert (= temp869_68 (select ARGNAME_stride_NAMEEND_VAL temp869_67)))
(assert (= temp869_69 #x0000000000000002))
(assert (= temp869_70 temp869_69))
(assert (= temp869_71 (select ARGNAME_stride_NAMEEND_VAL temp869_70)))
(assert (= temp869_72 #x0000000000000003))
(assert (= temp869_73 temp869_72))
(assert (= temp869_74 (select ARGNAME_stride_NAMEEND_VAL temp869_73)))
(assert (= temp869_75 #x0000000000000004))
(assert (= temp869_76 temp869_75))
(assert (= temp869_77 (select ARGNAME_stride_NAMEEND_VAL temp869_76)))
(assert (= temp869_78 #x0000000000000005))
(assert (= temp869_79 temp869_78))
(assert (= temp869_80 (select ARGNAME_stride_NAMEEND_VAL temp869_79)))
(assert (= temp869_81 #x0000000000000000))
(assert (= temp869_82 #x0000000000000000))
(assert (= temp869_83 temp869_82))
(assert (= temp869_84 (select ARGNAME_stride_NAMEEND_VAL temp869_83)))
(assert (= temp869_85 #x0000000000000000))
(assert (= temp869_86 #x0000000000000001))
(assert (= temp869_87 temp869_86))
(assert (= temp869_88 (select ARGNAME_stride_NAMEEND_VAL temp869_87)))
(assert (= temp869_89 #x0000000000000000))
(assert (= temp869_90 #x0000000000000002))
(assert (= temp869_91 temp869_90))
(assert (= temp869_92 (select ARGNAME_stride_NAMEEND_VAL temp869_91)))
(assert (= temp869_93 #x0000000000000000))
(assert (= temp869_94 #x0000000000000003))
(assert (= temp869_95 temp869_94))
(assert (= temp869_96 (select ARGNAME_stride_NAMEEND_VAL temp869_95)))
(assert (= temp869_97 #x0000000000000000))
(assert (= temp869_98 #x0000000000000004))
(assert (= temp869_99 temp869_98))
(assert (= temp869_100 (select ARGNAME_stride_NAMEEND_VAL temp869_99)))
(assert (= temp869_101 #x0000000000000000))
(assert (= temp869_102 #x0000000000000005))
(assert (= temp869_103 temp869_102))
(assert (= temp869_104 (select ARGNAME_stride_NAMEEND_VAL temp869_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp869_84 temp869_81)
             (bvsle temp869_88 temp869_85)
             (bvsle temp869_92 temp869_89)
             (bvsle temp869_96 temp869_93)
             (bvsle temp869_100 temp869_97)
             (bvsle temp869_104 temp869_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_105 #x0000000000000000))
(assert (= var1716023 temp869_105))
(assert (= temp869_106 #x0000000000000000))
(assert (= var1704114 temp869_106))
(assert (= temp869_107 #x0000000000000000))
(assert (= temp869_108 temp869_107))
(assert (= temp869_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_108)))
(assert (= temp869_110 #x0000000000000001))
(assert (= temp869_111 temp869_110))
(assert (= temp869_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_111)))
(assert (= temp869_113 #x0000000000000002))
(assert (= temp869_114 temp869_113))
(assert (= temp869_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_114)))
(assert (= temp869_116 #x0000000000000003))
(assert (= temp869_117 temp869_116))
(assert (= temp869_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_117)))
(assert (= temp869_119 #x0000000000000004))
(assert (= temp869_120 temp869_119))
(assert (= temp869_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_120)))
(assert (= temp869_122 #x0000000000000005))
(assert (= temp869_123 temp869_122))
(assert (= temp869_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_123)))
(assert (= temp869_126 var1704114))
(assert (= temp869_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_126)))
(assert (= temp869_125 temp869_127))
(assert (= var1716068
   (ite (bvslt temp869_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_128 #x0000000000000000))
(assert (= var1716068 temp869_128))
(assert (= temp869_129 #x0000000000000000))
(assert (= var1704114 temp869_129))
(assert (= temp869_131 var1704114))
(assert (= temp869_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_131)))
(assert (= temp869_130 temp869_132))
(assert (= var1716090 (bvsmod temp869_130 ARGNAME_groups_NAMEEND)))
(assert (= temp869_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp869_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp869_134 #x0000000000000001))
(assert (= var1716091 temp869_134))
(assert (= var1716110 var1716000))
(assert (= temp869_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp869_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp869_136 #x0000000000000001))
(assert (= var1716111 temp869_136))
(assert (= temp869_137 #x0000000000000001))
(assert (= var1705002 temp869_137))
(assert (= temp869_139 var1705002))
(assert (= temp869_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_139)))
(assert (= temp869_138 temp869_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp869_138)))
(assert (= temp869_141 #x0000000000000000))
(assert (= var1704114 temp869_141))
(assert (= temp869_143 var1704114))
(assert (= temp869_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_143)))
(assert (= temp869_142 temp869_144))
(assert (= temp869_145 #x0000000000000002))
(assert (= var1979241 temp869_145))
(assert (= temp869_146 #x0000000000000001))
(assert (= var1716281 temp869_146))
(assert (= temp869_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp869_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_148 #x0000000000000001))
(assert (= var997490 temp869_148))
(assert (= temp869_149 #x0000000000000001))
(assert (= var997620 temp869_149))
(assert (= var3486185 var997620))
(assert (= temp869_150 #x0000000000000000))
(assert (= var3686207 temp869_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp869_151 #x0000000000000002))
(assert (= var3815043 temp869_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp869_152 #x0000000000000001))
(assert (= var997490 temp869_152))
(model-add temp869_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp869_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp869_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp869_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp869_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp869_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





