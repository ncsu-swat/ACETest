(declare-fun temp683_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp683_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp683_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp683_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp683_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp683_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp683_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp683_8 () (_ BitVec 64))
(declare-fun temp683_10 () (_ BitVec 64))
(declare-fun temp683_9 () (_ BitVec 64))
(declare-fun temp683_12 () (_ BitVec 64))
(declare-fun temp683_11 () (_ BitVec 64))
(declare-fun temp683_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp683_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp683_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp683_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp683_17 () (_ BitVec 64))
(declare-fun temp683_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp683_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp683_20 () (_ BitVec 64))
(declare-fun temp683_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp683_22 () (_ BitVec 64))
(declare-fun temp683_23 () (_ BitVec 64))
(declare-fun temp683_24 () (_ BitVec 64))
(declare-fun temp683_25 () (_ BitVec 64))
(declare-fun temp683_26 () (_ BitVec 64))
(declare-fun temp683_27 () (_ BitVec 64))
(declare-fun temp683_28 () (_ BitVec 64))
(declare-fun temp683_29 () (_ BitVec 64))
(declare-fun temp683_30 () (_ BitVec 64))
(declare-fun temp683_31 () (_ BitVec 64))
(declare-fun temp683_32 () (_ BitVec 64))
(declare-fun temp683_33 () (_ BitVec 64))
(declare-fun temp683_34 () (_ BitVec 64))
(declare-fun temp683_35 () (_ BitVec 64))
(declare-fun temp683_36 () (_ BitVec 64))
(declare-fun temp683_37 () (_ BitVec 64))
(declare-fun temp683_38 () (_ BitVec 64))
(declare-fun temp683_39 () (_ BitVec 64))
(declare-fun temp683_40 () (_ BitVec 64))
(declare-fun temp683_41 () (_ BitVec 64))
(declare-fun temp683_42 () (_ BitVec 64))
(declare-fun temp683_43 () (_ BitVec 64))
(declare-fun temp683_44 () (_ BitVec 64))
(declare-fun temp683_45 () (_ BitVec 64))
(declare-fun temp683_46 () (_ BitVec 64))
(declare-fun temp683_47 () (_ BitVec 64))
(declare-fun temp683_48 () (_ BitVec 64))
(declare-fun temp683_49 () (_ BitVec 64))
(declare-fun temp683_50 () (_ BitVec 64))
(declare-fun temp683_51 () (_ BitVec 64))
(declare-fun temp683_52 () (_ BitVec 64))
(declare-fun temp683_53 () (_ BitVec 64))
(declare-fun temp683_54 () (_ BitVec 64))
(declare-fun temp683_55 () (_ BitVec 64))
(declare-fun temp683_56 () (_ BitVec 64))
(declare-fun temp683_57 () (_ BitVec 64))
(declare-fun temp683_58 () (_ BitVec 64))
(declare-fun temp683_59 () (_ BitVec 64))
(declare-fun temp683_60 () (_ BitVec 64))
(declare-fun temp683_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp683_62 () (_ BitVec 64))
(declare-fun temp683_63 () (_ BitVec 64))
(declare-fun temp683_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp683_65 () (_ BitVec 64))
(declare-fun temp683_66 () (_ BitVec 64))
(declare-fun temp683_67 () (_ BitVec 64))
(declare-fun temp683_68 () (_ BitVec 64))
(declare-fun temp683_69 () (_ BitVec 64))
(declare-fun temp683_70 () (_ BitVec 64))
(declare-fun temp683_71 () (_ BitVec 64))
(declare-fun temp683_72 () (_ BitVec 64))
(declare-fun temp683_73 () (_ BitVec 64))
(declare-fun temp683_74 () (_ BitVec 64))
(declare-fun temp683_75 () (_ BitVec 64))
(declare-fun temp683_76 () (_ BitVec 64))
(declare-fun temp683_77 () (_ BitVec 64))
(declare-fun temp683_78 () (_ BitVec 64))
(declare-fun temp683_79 () (_ BitVec 64))
(declare-fun temp683_80 () (_ BitVec 64))
(declare-fun temp683_81 () (_ BitVec 64))
(declare-fun temp683_82 () (_ BitVec 64))
(declare-fun temp683_83 () (_ BitVec 64))
(declare-fun temp683_84 () (_ BitVec 64))
(declare-fun temp683_85 () (_ BitVec 64))
(declare-fun temp683_86 () (_ BitVec 64))
(declare-fun temp683_87 () (_ BitVec 64))
(declare-fun temp683_88 () (_ BitVec 64))
(declare-fun temp683_89 () (_ BitVec 64))
(declare-fun temp683_90 () (_ BitVec 64))
(declare-fun temp683_91 () (_ BitVec 64))
(declare-fun temp683_92 () (_ BitVec 64))
(declare-fun temp683_93 () (_ BitVec 64))
(declare-fun temp683_94 () (_ BitVec 64))
(declare-fun temp683_95 () (_ BitVec 64))
(declare-fun temp683_96 () (_ BitVec 64))
(declare-fun temp683_97 () (_ BitVec 64))
(declare-fun temp683_98 () (_ BitVec 64))
(declare-fun temp683_99 () (_ BitVec 64))
(declare-fun temp683_100 () (_ BitVec 64))
(declare-fun temp683_101 () (_ BitVec 64))
(declare-fun temp683_102 () (_ BitVec 64))
(declare-fun temp683_103 () (_ BitVec 64))
(declare-fun temp683_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp683_105 () (_ BitVec 64))
(declare-fun temp683_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp683_107 () (_ BitVec 64))
(declare-fun temp683_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp683_109 () (_ BitVec 64))
(declare-fun temp683_110 () (_ BitVec 64))
(declare-fun temp683_111 () (_ BitVec 64))
(declare-fun temp683_112 () (_ BitVec 64))
(declare-fun temp683_113 () (_ BitVec 64))
(declare-fun temp683_114 () (_ BitVec 64))
(declare-fun temp683_115 () (_ BitVec 64))
(declare-fun temp683_116 () (_ BitVec 64))
(declare-fun temp683_117 () (_ BitVec 64))
(declare-fun temp683_118 () (_ BitVec 64))
(declare-fun temp683_119 () (_ BitVec 64))
(declare-fun temp683_120 () (_ BitVec 64))
(declare-fun temp683_121 () (_ BitVec 64))
(declare-fun temp683_122 () (_ BitVec 64))
(declare-fun temp683_123 () (_ BitVec 64))
(declare-fun temp683_124 () (_ BitVec 64))
(declare-fun temp683_126 () (_ BitVec 64))
(declare-fun temp683_127 () (_ BitVec 64))
(declare-fun temp683_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp683_128 () (_ BitVec 64))
(declare-fun temp683_129 () (_ BitVec 64))
(declare-fun temp683_131 () (_ BitVec 64))
(declare-fun temp683_132 () (_ BitVec 64))
(declare-fun temp683_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp683_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp683_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp683_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp683_136 () (_ BitVec 64))
(declare-fun temp683_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp683_139 () (_ BitVec 64))
(declare-fun temp683_140 () (_ BitVec 64))
(declare-fun temp683_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp683_141 () (_ BitVec 64))
(declare-fun temp683_143 () (_ BitVec 64))
(declare-fun temp683_144 () (_ BitVec 64))
(declare-fun temp683_142 () (_ BitVec 64))
(declare-fun temp683_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp683_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp683_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp683_148 () (_ BitVec 64))
(declare-fun temp683_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp683_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp683_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp683_153 () (_ BitVec 64))
(declare-fun temp683_152 () (_ BitVec 64))
(declare-fun temp683_155 () (_ BitVec 64))
(declare-fun temp683_154 () (_ BitVec 64))
(declare-fun temp683_156 () (_ BitVec 64))
(assert (= temp683_1 #x0000000000000003))
(assert (= var465453 temp683_1))
(assert (= temp683_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp683_2)))
(assert (= temp683_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp683_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp683_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp683_4)))
(assert (= temp683_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp683_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp683_6 #x0000000000000000))
(assert (= var465488 temp683_6))
(assert (= temp683_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp683_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp683_8 #x0000000000000001))
(assert (= var465522 temp683_8))
(assert (= temp683_10 #x0000000000000000))
(assert (= temp683_9 temp683_10))
(assert (= temp683_12 #x0000000000000003))
(assert (= temp683_11 temp683_12))
(assert (= temp683_13 #x0000000000000000))
(assert (= var863614 temp683_13))
(assert (= temp683_14 #x0000000000000001))
(assert (= var863635 temp683_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp683_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp683_15)))
(assert (= temp683_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp683_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp683_17 #x0000000000000000))
(assert (= var997373 temp683_17))
(assert (= temp683_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp683_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp683_19 #x0000000000000000))
(assert (= var997418 temp683_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp683_20 #x0000000000000000))
(assert (= temp683_21 temp683_20))
(assert (= temp683_22 (select ARGNAME_padding_NAMEEND_VAL temp683_21)))
(assert (= temp683_23 #x0000000000000001))
(assert (= temp683_24 temp683_23))
(assert (= temp683_25 (select ARGNAME_padding_NAMEEND_VAL temp683_24)))
(assert (= temp683_26 #x0000000000000002))
(assert (= temp683_27 temp683_26))
(assert (= temp683_28 (select ARGNAME_padding_NAMEEND_VAL temp683_27)))
(assert (= temp683_29 #x0000000000000003))
(assert (= temp683_30 temp683_29))
(assert (= temp683_31 (select ARGNAME_padding_NAMEEND_VAL temp683_30)))
(assert (= temp683_32 #x0000000000000004))
(assert (= temp683_33 temp683_32))
(assert (= temp683_34 (select ARGNAME_padding_NAMEEND_VAL temp683_33)))
(assert (= temp683_35 #x0000000000000005))
(assert (= temp683_36 temp683_35))
(assert (= temp683_37 (select ARGNAME_padding_NAMEEND_VAL temp683_36)))
(assert (= temp683_38 #x0000000000000000))
(assert (= temp683_39 #x0000000000000000))
(assert (= temp683_40 temp683_39))
(assert (= temp683_41 (select ARGNAME_padding_NAMEEND_VAL temp683_40)))
(assert (= temp683_42 #x0000000000000000))
(assert (= temp683_43 #x0000000000000001))
(assert (= temp683_44 temp683_43))
(assert (= temp683_45 (select ARGNAME_padding_NAMEEND_VAL temp683_44)))
(assert (= temp683_46 #x0000000000000000))
(assert (= temp683_47 #x0000000000000002))
(assert (= temp683_48 temp683_47))
(assert (= temp683_49 (select ARGNAME_padding_NAMEEND_VAL temp683_48)))
(assert (= temp683_50 #x0000000000000000))
(assert (= temp683_51 #x0000000000000003))
(assert (= temp683_52 temp683_51))
(assert (= temp683_53 (select ARGNAME_padding_NAMEEND_VAL temp683_52)))
(assert (= temp683_54 #x0000000000000000))
(assert (= temp683_55 #x0000000000000004))
(assert (= temp683_56 temp683_55))
(assert (= temp683_57 (select ARGNAME_padding_NAMEEND_VAL temp683_56)))
(assert (= temp683_58 #x0000000000000000))
(assert (= temp683_59 #x0000000000000005))
(assert (= temp683_60 temp683_59))
(assert (= temp683_61 (select ARGNAME_padding_NAMEEND_VAL temp683_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp683_41 temp683_38)
             (bvslt temp683_45 temp683_42)
             (bvslt temp683_49 temp683_46)
             (bvslt temp683_53 temp683_50)
             (bvslt temp683_57 temp683_54)
             (bvslt temp683_61 temp683_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp683_62 #x0000000000000000))
(assert (= var1716002 temp683_62))
(assert (= temp683_63 #x0000000000000000))
(assert (= temp683_64 temp683_63))
(assert (= temp683_65 (select ARGNAME_stride_NAMEEND_VAL temp683_64)))
(assert (= temp683_66 #x0000000000000001))
(assert (= temp683_67 temp683_66))
(assert (= temp683_68 (select ARGNAME_stride_NAMEEND_VAL temp683_67)))
(assert (= temp683_69 #x0000000000000002))
(assert (= temp683_70 temp683_69))
(assert (= temp683_71 (select ARGNAME_stride_NAMEEND_VAL temp683_70)))
(assert (= temp683_72 #x0000000000000003))
(assert (= temp683_73 temp683_72))
(assert (= temp683_74 (select ARGNAME_stride_NAMEEND_VAL temp683_73)))
(assert (= temp683_75 #x0000000000000004))
(assert (= temp683_76 temp683_75))
(assert (= temp683_77 (select ARGNAME_stride_NAMEEND_VAL temp683_76)))
(assert (= temp683_78 #x0000000000000005))
(assert (= temp683_79 temp683_78))
(assert (= temp683_80 (select ARGNAME_stride_NAMEEND_VAL temp683_79)))
(assert (= temp683_81 #x0000000000000000))
(assert (= temp683_82 #x0000000000000000))
(assert (= temp683_83 temp683_82))
(assert (= temp683_84 (select ARGNAME_stride_NAMEEND_VAL temp683_83)))
(assert (= temp683_85 #x0000000000000000))
(assert (= temp683_86 #x0000000000000001))
(assert (= temp683_87 temp683_86))
(assert (= temp683_88 (select ARGNAME_stride_NAMEEND_VAL temp683_87)))
(assert (= temp683_89 #x0000000000000000))
(assert (= temp683_90 #x0000000000000002))
(assert (= temp683_91 temp683_90))
(assert (= temp683_92 (select ARGNAME_stride_NAMEEND_VAL temp683_91)))
(assert (= temp683_93 #x0000000000000000))
(assert (= temp683_94 #x0000000000000003))
(assert (= temp683_95 temp683_94))
(assert (= temp683_96 (select ARGNAME_stride_NAMEEND_VAL temp683_95)))
(assert (= temp683_97 #x0000000000000000))
(assert (= temp683_98 #x0000000000000004))
(assert (= temp683_99 temp683_98))
(assert (= temp683_100 (select ARGNAME_stride_NAMEEND_VAL temp683_99)))
(assert (= temp683_101 #x0000000000000000))
(assert (= temp683_102 #x0000000000000005))
(assert (= temp683_103 temp683_102))
(assert (= temp683_104 (select ARGNAME_stride_NAMEEND_VAL temp683_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp683_84 temp683_81)
             (bvsle temp683_88 temp683_85)
             (bvsle temp683_92 temp683_89)
             (bvsle temp683_96 temp683_93)
             (bvsle temp683_100 temp683_97)
             (bvsle temp683_104 temp683_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp683_105 #x0000000000000000))
(assert (= var1716023 temp683_105))
(assert (= temp683_106 #x0000000000000000))
(assert (= var1704114 temp683_106))
(assert (= temp683_107 #x0000000000000000))
(assert (= temp683_108 temp683_107))
(assert (= temp683_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_108)))
(assert (= temp683_110 #x0000000000000001))
(assert (= temp683_111 temp683_110))
(assert (= temp683_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_111)))
(assert (= temp683_113 #x0000000000000002))
(assert (= temp683_114 temp683_113))
(assert (= temp683_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_114)))
(assert (= temp683_116 #x0000000000000003))
(assert (= temp683_117 temp683_116))
(assert (= temp683_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_117)))
(assert (= temp683_119 #x0000000000000004))
(assert (= temp683_120 temp683_119))
(assert (= temp683_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_120)))
(assert (= temp683_122 #x0000000000000005))
(assert (= temp683_123 temp683_122))
(assert (= temp683_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_123)))
(assert (= temp683_126 var1704114))
(assert (= temp683_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_126)))
(assert (= temp683_125 temp683_127))
(assert (= var1716068
   (ite (bvslt temp683_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp683_128 #x0000000000000000))
(assert (= var1716068 temp683_128))
(assert (= temp683_129 #x0000000000000000))
(assert (= var1704114 temp683_129))
(assert (= temp683_131 var1704114))
(assert (= temp683_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_131)))
(assert (= temp683_130 temp683_132))
(assert (= var1716090 (bvsmod temp683_130 ARGNAME_groups_NAMEEND)))
(assert (= temp683_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp683_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp683_134 #x0000000000000001))
(assert (= var1716091 temp683_134))
(assert (= var1716110 var1716000))
(assert (= temp683_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp683_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp683_136 #x0000000000000001))
(assert (= var1716111 temp683_136))
(assert (= temp683_137 #x0000000000000001))
(assert (= var1705002 temp683_137))
(assert (= temp683_139 var1705002))
(assert (= temp683_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_139)))
(assert (= temp683_138 temp683_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp683_138)))
(assert (= temp683_141 #x0000000000000000))
(assert (= var1704114 temp683_141))
(assert (= temp683_143 var1704114))
(assert (= temp683_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp683_143)))
(assert (= temp683_142 temp683_144))
(assert (= temp683_145 #x0000000000000002))
(assert (= var1979241 temp683_145))
(assert (= temp683_146 #x0000000000000001))
(assert (= var1716281 temp683_146))
(assert (= temp683_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp683_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp683_148 #x0000000000000001))
(assert (= var997490 temp683_148))
(assert (= temp683_149 #x0000000000000001))
(assert (= var997620 temp683_149))
(assert (= var3486185 var997620))
(assert (= temp683_150 #x0000000000000000))
(assert (= var3686207 temp683_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp683_151 #x0000000000000002))
(assert (= var3815043 temp683_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp683_153 #xffffffffffffffff))
(assert (= temp683_152 temp683_153))
(assert (= temp683_155 #xffffffffffffffff))
(assert (= temp683_154 temp683_155))
(assert (= temp683_156 #x0000000000000001))
(assert (= var997490 temp683_156))
(model-add temp683_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp683_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp683_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp683_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp683_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp683_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






