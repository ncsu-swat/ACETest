(declare-fun temp141_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp141_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp141_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp141_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp141_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp141_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp141_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp141_8 () (_ BitVec 64))
(declare-fun temp141_10 () (_ BitVec 64))
(declare-fun temp141_9 () (_ BitVec 64))
(declare-fun temp141_12 () (_ BitVec 64))
(declare-fun temp141_11 () (_ BitVec 64))
(declare-fun temp141_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp141_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp141_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp141_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp141_17 () (_ BitVec 64))
(declare-fun temp141_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp141_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp141_20 () (_ BitVec 64))
(declare-fun temp141_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141_22 () (_ BitVec 64))
(declare-fun temp141_23 () (_ BitVec 64))
(declare-fun temp141_24 () (_ BitVec 64))
(declare-fun temp141_25 () (_ BitVec 64))
(declare-fun temp141_26 () (_ BitVec 64))
(declare-fun temp141_27 () (_ BitVec 64))
(declare-fun temp141_28 () (_ BitVec 64))
(declare-fun temp141_29 () (_ BitVec 64))
(declare-fun temp141_30 () (_ BitVec 64))
(declare-fun temp141_31 () (_ BitVec 64))
(declare-fun temp141_32 () (_ BitVec 64))
(declare-fun temp141_33 () (_ BitVec 64))
(declare-fun temp141_34 () (_ BitVec 64))
(declare-fun temp141_35 () (_ BitVec 64))
(declare-fun temp141_36 () (_ BitVec 64))
(declare-fun temp141_37 () (_ BitVec 64))
(declare-fun temp141_38 () (_ BitVec 64))
(declare-fun temp141_39 () (_ BitVec 64))
(declare-fun temp141_40 () (_ BitVec 64))
(declare-fun temp141_41 () (_ BitVec 64))
(declare-fun temp141_42 () (_ BitVec 64))
(declare-fun temp141_43 () (_ BitVec 64))
(declare-fun temp141_44 () (_ BitVec 64))
(declare-fun temp141_45 () (_ BitVec 64))
(declare-fun temp141_46 () (_ BitVec 64))
(declare-fun temp141_47 () (_ BitVec 64))
(declare-fun temp141_48 () (_ BitVec 64))
(declare-fun temp141_49 () (_ BitVec 64))
(declare-fun temp141_50 () (_ BitVec 64))
(declare-fun temp141_51 () (_ BitVec 64))
(declare-fun temp141_52 () (_ BitVec 64))
(declare-fun temp141_53 () (_ BitVec 64))
(declare-fun temp141_54 () (_ BitVec 64))
(declare-fun temp141_55 () (_ BitVec 64))
(declare-fun temp141_56 () (_ BitVec 64))
(declare-fun temp141_57 () (_ BitVec 64))
(declare-fun temp141_58 () (_ BitVec 64))
(declare-fun temp141_59 () (_ BitVec 64))
(declare-fun temp141_60 () (_ BitVec 64))
(declare-fun temp141_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp141_62 () (_ BitVec 64))
(declare-fun temp141_63 () (_ BitVec 64))
(declare-fun temp141_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141_65 () (_ BitVec 64))
(declare-fun temp141_66 () (_ BitVec 64))
(declare-fun temp141_67 () (_ BitVec 64))
(declare-fun temp141_68 () (_ BitVec 64))
(declare-fun temp141_69 () (_ BitVec 64))
(declare-fun temp141_70 () (_ BitVec 64))
(declare-fun temp141_71 () (_ BitVec 64))
(declare-fun temp141_72 () (_ BitVec 64))
(declare-fun temp141_73 () (_ BitVec 64))
(declare-fun temp141_74 () (_ BitVec 64))
(declare-fun temp141_75 () (_ BitVec 64))
(declare-fun temp141_76 () (_ BitVec 64))
(declare-fun temp141_77 () (_ BitVec 64))
(declare-fun temp141_78 () (_ BitVec 64))
(declare-fun temp141_79 () (_ BitVec 64))
(declare-fun temp141_80 () (_ BitVec 64))
(declare-fun temp141_81 () (_ BitVec 64))
(declare-fun temp141_82 () (_ BitVec 64))
(declare-fun temp141_83 () (_ BitVec 64))
(declare-fun temp141_84 () (_ BitVec 64))
(declare-fun temp141_85 () (_ BitVec 64))
(declare-fun temp141_86 () (_ BitVec 64))
(declare-fun temp141_87 () (_ BitVec 64))
(declare-fun temp141_88 () (_ BitVec 64))
(declare-fun temp141_89 () (_ BitVec 64))
(declare-fun temp141_90 () (_ BitVec 64))
(declare-fun temp141_91 () (_ BitVec 64))
(declare-fun temp141_92 () (_ BitVec 64))
(declare-fun temp141_93 () (_ BitVec 64))
(declare-fun temp141_94 () (_ BitVec 64))
(declare-fun temp141_95 () (_ BitVec 64))
(declare-fun temp141_96 () (_ BitVec 64))
(declare-fun temp141_97 () (_ BitVec 64))
(declare-fun temp141_98 () (_ BitVec 64))
(declare-fun temp141_99 () (_ BitVec 64))
(declare-fun temp141_100 () (_ BitVec 64))
(declare-fun temp141_101 () (_ BitVec 64))
(declare-fun temp141_102 () (_ BitVec 64))
(declare-fun temp141_103 () (_ BitVec 64))
(declare-fun temp141_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp141_105 () (_ BitVec 64))
(declare-fun temp141_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp141_107 () (_ BitVec 64))
(declare-fun temp141_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141_109 () (_ BitVec 64))
(declare-fun temp141_110 () (_ BitVec 64))
(declare-fun temp141_111 () (_ BitVec 64))
(declare-fun temp141_112 () (_ BitVec 64))
(declare-fun temp141_113 () (_ BitVec 64))
(declare-fun temp141_114 () (_ BitVec 64))
(declare-fun temp141_115 () (_ BitVec 64))
(declare-fun temp141_116 () (_ BitVec 64))
(declare-fun temp141_117 () (_ BitVec 64))
(declare-fun temp141_118 () (_ BitVec 64))
(declare-fun temp141_119 () (_ BitVec 64))
(declare-fun temp141_120 () (_ BitVec 64))
(declare-fun temp141_121 () (_ BitVec 64))
(declare-fun temp141_122 () (_ BitVec 64))
(declare-fun temp141_123 () (_ BitVec 64))
(declare-fun temp141_124 () (_ BitVec 64))
(declare-fun temp141_126 () (_ BitVec 64))
(declare-fun temp141_127 () (_ BitVec 64))
(declare-fun temp141_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp141_128 () (_ BitVec 64))
(declare-fun temp141_129 () (_ BitVec 64))
(declare-fun temp141_131 () (_ BitVec 64))
(declare-fun temp141_132 () (_ BitVec 64))
(declare-fun temp141_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp141_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp141_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp141_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp141_136 () (_ BitVec 64))
(declare-fun temp141_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp141_139 () (_ BitVec 64))
(declare-fun temp141_140 () (_ BitVec 64))
(declare-fun temp141_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp141_141 () (_ BitVec 64))
(declare-fun temp141_143 () (_ BitVec 64))
(declare-fun temp141_144 () (_ BitVec 64))
(declare-fun temp141_142 () (_ BitVec 64))
(declare-fun temp141_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp141_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp141_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp141_148 () (_ BitVec 64))
(declare-fun temp141_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp141_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp141_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp141_153 () (_ BitVec 64))
(declare-fun temp141_152 () (_ BitVec 64))
(declare-fun temp141_155 () (_ BitVec 64))
(declare-fun temp141_154 () (_ BitVec 64))
(declare-fun temp141_156 () (_ BitVec 64))
(assert (= temp141_1 #x0000000000000003))
(assert (= var465453 temp141_1))
(assert (= temp141_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp141_2)))
(assert (= temp141_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp141_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp141_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp141_4)))
(assert (= temp141_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp141_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp141_6 #x0000000000000000))
(assert (= var465488 temp141_6))
(assert (= temp141_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp141_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp141_8 #x0000000000000001))
(assert (= var465522 temp141_8))
(assert (= temp141_10 #x0000000000000000))
(assert (= temp141_9 temp141_10))
(assert (= temp141_12 #x0000000000000003))
(assert (= temp141_11 temp141_12))
(assert (= temp141_13 #x0000000000000000))
(assert (= var863614 temp141_13))
(assert (= temp141_14 #x0000000000000001))
(assert (= var863635 temp141_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp141_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp141_15)))
(assert (= temp141_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp141_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_17 #x0000000000000000))
(assert (= var997373 temp141_17))
(assert (= temp141_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp141_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_19 #x0000000000000000))
(assert (= var997418 temp141_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp141_20 #x0000000000000000))
(assert (= temp141_21 temp141_20))
(assert (= temp141_22 (select ARGNAME_padding_NAMEEND_VAL temp141_21)))
(assert (= temp141_23 #x0000000000000001))
(assert (= temp141_24 temp141_23))
(assert (= temp141_25 (select ARGNAME_padding_NAMEEND_VAL temp141_24)))
(assert (= temp141_26 #x0000000000000002))
(assert (= temp141_27 temp141_26))
(assert (= temp141_28 (select ARGNAME_padding_NAMEEND_VAL temp141_27)))
(assert (= temp141_29 #x0000000000000003))
(assert (= temp141_30 temp141_29))
(assert (= temp141_31 (select ARGNAME_padding_NAMEEND_VAL temp141_30)))
(assert (= temp141_32 #x0000000000000004))
(assert (= temp141_33 temp141_32))
(assert (= temp141_34 (select ARGNAME_padding_NAMEEND_VAL temp141_33)))
(assert (= temp141_35 #x0000000000000005))
(assert (= temp141_36 temp141_35))
(assert (= temp141_37 (select ARGNAME_padding_NAMEEND_VAL temp141_36)))
(assert (= temp141_38 #x0000000000000000))
(assert (= temp141_39 #x0000000000000000))
(assert (= temp141_40 temp141_39))
(assert (= temp141_41 (select ARGNAME_padding_NAMEEND_VAL temp141_40)))
(assert (= temp141_42 #x0000000000000000))
(assert (= temp141_43 #x0000000000000001))
(assert (= temp141_44 temp141_43))
(assert (= temp141_45 (select ARGNAME_padding_NAMEEND_VAL temp141_44)))
(assert (= temp141_46 #x0000000000000000))
(assert (= temp141_47 #x0000000000000002))
(assert (= temp141_48 temp141_47))
(assert (= temp141_49 (select ARGNAME_padding_NAMEEND_VAL temp141_48)))
(assert (= temp141_50 #x0000000000000000))
(assert (= temp141_51 #x0000000000000003))
(assert (= temp141_52 temp141_51))
(assert (= temp141_53 (select ARGNAME_padding_NAMEEND_VAL temp141_52)))
(assert (= temp141_54 #x0000000000000000))
(assert (= temp141_55 #x0000000000000004))
(assert (= temp141_56 temp141_55))
(assert (= temp141_57 (select ARGNAME_padding_NAMEEND_VAL temp141_56)))
(assert (= temp141_58 #x0000000000000000))
(assert (= temp141_59 #x0000000000000005))
(assert (= temp141_60 temp141_59))
(assert (= temp141_61 (select ARGNAME_padding_NAMEEND_VAL temp141_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp141_41 temp141_38)
             (bvslt temp141_45 temp141_42)
             (bvslt temp141_49 temp141_46)
             (bvslt temp141_53 temp141_50)
             (bvslt temp141_57 temp141_54)
             (bvslt temp141_61 temp141_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_62 #x0000000000000000))
(assert (= var1716002 temp141_62))
(assert (= temp141_63 #x0000000000000000))
(assert (= temp141_64 temp141_63))
(assert (= temp141_65 (select ARGNAME_stride_NAMEEND_VAL temp141_64)))
(assert (= temp141_66 #x0000000000000001))
(assert (= temp141_67 temp141_66))
(assert (= temp141_68 (select ARGNAME_stride_NAMEEND_VAL temp141_67)))
(assert (= temp141_69 #x0000000000000002))
(assert (= temp141_70 temp141_69))
(assert (= temp141_71 (select ARGNAME_stride_NAMEEND_VAL temp141_70)))
(assert (= temp141_72 #x0000000000000003))
(assert (= temp141_73 temp141_72))
(assert (= temp141_74 (select ARGNAME_stride_NAMEEND_VAL temp141_73)))
(assert (= temp141_75 #x0000000000000004))
(assert (= temp141_76 temp141_75))
(assert (= temp141_77 (select ARGNAME_stride_NAMEEND_VAL temp141_76)))
(assert (= temp141_78 #x0000000000000005))
(assert (= temp141_79 temp141_78))
(assert (= temp141_80 (select ARGNAME_stride_NAMEEND_VAL temp141_79)))
(assert (= temp141_81 #x0000000000000000))
(assert (= temp141_82 #x0000000000000000))
(assert (= temp141_83 temp141_82))
(assert (= temp141_84 (select ARGNAME_stride_NAMEEND_VAL temp141_83)))
(assert (= temp141_85 #x0000000000000000))
(assert (= temp141_86 #x0000000000000001))
(assert (= temp141_87 temp141_86))
(assert (= temp141_88 (select ARGNAME_stride_NAMEEND_VAL temp141_87)))
(assert (= temp141_89 #x0000000000000000))
(assert (= temp141_90 #x0000000000000002))
(assert (= temp141_91 temp141_90))
(assert (= temp141_92 (select ARGNAME_stride_NAMEEND_VAL temp141_91)))
(assert (= temp141_93 #x0000000000000000))
(assert (= temp141_94 #x0000000000000003))
(assert (= temp141_95 temp141_94))
(assert (= temp141_96 (select ARGNAME_stride_NAMEEND_VAL temp141_95)))
(assert (= temp141_97 #x0000000000000000))
(assert (= temp141_98 #x0000000000000004))
(assert (= temp141_99 temp141_98))
(assert (= temp141_100 (select ARGNAME_stride_NAMEEND_VAL temp141_99)))
(assert (= temp141_101 #x0000000000000000))
(assert (= temp141_102 #x0000000000000005))
(assert (= temp141_103 temp141_102))
(assert (= temp141_104 (select ARGNAME_stride_NAMEEND_VAL temp141_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp141_84 temp141_81)
             (bvsle temp141_88 temp141_85)
             (bvsle temp141_92 temp141_89)
             (bvsle temp141_96 temp141_93)
             (bvsle temp141_100 temp141_97)
             (bvsle temp141_104 temp141_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_105 #x0000000000000000))
(assert (= var1716023 temp141_105))
(assert (= temp141_106 #x0000000000000000))
(assert (= var1704114 temp141_106))
(assert (= temp141_107 #x0000000000000000))
(assert (= temp141_108 temp141_107))
(assert (= temp141_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_108)))
(assert (= temp141_110 #x0000000000000001))
(assert (= temp141_111 temp141_110))
(assert (= temp141_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_111)))
(assert (= temp141_113 #x0000000000000002))
(assert (= temp141_114 temp141_113))
(assert (= temp141_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_114)))
(assert (= temp141_116 #x0000000000000003))
(assert (= temp141_117 temp141_116))
(assert (= temp141_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_117)))
(assert (= temp141_119 #x0000000000000004))
(assert (= temp141_120 temp141_119))
(assert (= temp141_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_120)))
(assert (= temp141_122 #x0000000000000005))
(assert (= temp141_123 temp141_122))
(assert (= temp141_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_123)))
(assert (= temp141_126 var1704114))
(assert (= temp141_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_126)))
(assert (= temp141_125 temp141_127))
(assert (= var1716068
   (ite (bvslt temp141_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_128 #x0000000000000000))
(assert (= var1716068 temp141_128))
(assert (= temp141_129 #x0000000000000000))
(assert (= var1704114 temp141_129))
(assert (= temp141_131 var1704114))
(assert (= temp141_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_131)))
(assert (= temp141_130 temp141_132))
(assert (= var1716090 (bvsmod temp141_130 ARGNAME_groups_NAMEEND)))
(assert (= temp141_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp141_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp141_134 #x0000000000000001))
(assert (= var1716091 temp141_134))
(assert (= var1716110 var1716000))
(assert (= temp141_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp141_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp141_136 #x0000000000000001))
(assert (= var1716111 temp141_136))
(assert (= temp141_137 #x0000000000000001))
(assert (= var1705002 temp141_137))
(assert (= temp141_139 var1705002))
(assert (= temp141_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_139)))
(assert (= temp141_138 temp141_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp141_138)))
(assert (= temp141_141 #x0000000000000000))
(assert (= var1704114 temp141_141))
(assert (= temp141_143 var1704114))
(assert (= temp141_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_143)))
(assert (= temp141_142 temp141_144))
(assert (= temp141_145 #x0000000000000002))
(assert (= var1979241 temp141_145))
(assert (= temp141_146 #x0000000000000001))
(assert (= var1716281 temp141_146))
(assert (= temp141_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp141_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_148 #x0000000000000001))
(assert (= var997490 temp141_148))
(assert (= temp141_149 #x0000000000000001))
(assert (= var997620 temp141_149))
(assert (= var3486185 var997620))
(assert (= temp141_150 #x0000000000000000))
(assert (= var3686207 temp141_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp141_151 #x0000000000000002))
(assert (= var3815043 temp141_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp141_153 #xffffffffffffffff))
(assert (= temp141_152 temp141_153))
(assert (= temp141_155 #xffffffffffffffff))
(assert (= temp141_154 temp141_155))
(assert (= temp141_156 #x0000000000000001))
(assert (= var997490 temp141_156))
(model-add temp141_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp141_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp141_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp141_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp141_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp141_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






