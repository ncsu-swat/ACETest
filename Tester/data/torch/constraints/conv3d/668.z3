(declare-fun temp890_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp890_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp890_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp890_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp890_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp890_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp890_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp890_8 () (_ BitVec 64))
(declare-fun temp890_10 () (_ BitVec 64))
(declare-fun temp890_9 () (_ BitVec 64))
(declare-fun temp890_12 () (_ BitVec 64))
(declare-fun temp890_11 () (_ BitVec 64))
(declare-fun temp890_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp890_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp890_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp890_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp890_17 () (_ BitVec 64))
(declare-fun temp890_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp890_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp890_20 () (_ BitVec 64))
(declare-fun temp890_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_22 () (_ BitVec 64))
(declare-fun temp890_23 () (_ BitVec 64))
(declare-fun temp890_24 () (_ BitVec 64))
(declare-fun temp890_25 () (_ BitVec 64))
(declare-fun temp890_26 () (_ BitVec 64))
(declare-fun temp890_27 () (_ BitVec 64))
(declare-fun temp890_28 () (_ BitVec 64))
(declare-fun temp890_29 () (_ BitVec 64))
(declare-fun temp890_30 () (_ BitVec 64))
(declare-fun temp890_31 () (_ BitVec 64))
(declare-fun temp890_32 () (_ BitVec 64))
(declare-fun temp890_33 () (_ BitVec 64))
(declare-fun temp890_34 () (_ BitVec 64))
(declare-fun temp890_35 () (_ BitVec 64))
(declare-fun temp890_36 () (_ BitVec 64))
(declare-fun temp890_37 () (_ BitVec 64))
(declare-fun temp890_38 () (_ BitVec 64))
(declare-fun temp890_39 () (_ BitVec 64))
(declare-fun temp890_40 () (_ BitVec 64))
(declare-fun temp890_41 () (_ BitVec 64))
(declare-fun temp890_42 () (_ BitVec 64))
(declare-fun temp890_43 () (_ BitVec 64))
(declare-fun temp890_44 () (_ BitVec 64))
(declare-fun temp890_45 () (_ BitVec 64))
(declare-fun temp890_46 () (_ BitVec 64))
(declare-fun temp890_47 () (_ BitVec 64))
(declare-fun temp890_48 () (_ BitVec 64))
(declare-fun temp890_49 () (_ BitVec 64))
(declare-fun temp890_50 () (_ BitVec 64))
(declare-fun temp890_51 () (_ BitVec 64))
(declare-fun temp890_52 () (_ BitVec 64))
(declare-fun temp890_53 () (_ BitVec 64))
(declare-fun temp890_54 () (_ BitVec 64))
(declare-fun temp890_55 () (_ BitVec 64))
(declare-fun temp890_56 () (_ BitVec 64))
(declare-fun temp890_57 () (_ BitVec 64))
(declare-fun temp890_58 () (_ BitVec 64))
(declare-fun temp890_59 () (_ BitVec 64))
(declare-fun temp890_60 () (_ BitVec 64))
(declare-fun temp890_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp890_62 () (_ BitVec 64))
(declare-fun temp890_63 () (_ BitVec 64))
(declare-fun temp890_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_65 () (_ BitVec 64))
(declare-fun temp890_66 () (_ BitVec 64))
(declare-fun temp890_67 () (_ BitVec 64))
(declare-fun temp890_68 () (_ BitVec 64))
(declare-fun temp890_69 () (_ BitVec 64))
(declare-fun temp890_70 () (_ BitVec 64))
(declare-fun temp890_71 () (_ BitVec 64))
(declare-fun temp890_72 () (_ BitVec 64))
(declare-fun temp890_73 () (_ BitVec 64))
(declare-fun temp890_74 () (_ BitVec 64))
(declare-fun temp890_75 () (_ BitVec 64))
(declare-fun temp890_76 () (_ BitVec 64))
(declare-fun temp890_77 () (_ BitVec 64))
(declare-fun temp890_78 () (_ BitVec 64))
(declare-fun temp890_79 () (_ BitVec 64))
(declare-fun temp890_80 () (_ BitVec 64))
(declare-fun temp890_81 () (_ BitVec 64))
(declare-fun temp890_82 () (_ BitVec 64))
(declare-fun temp890_83 () (_ BitVec 64))
(declare-fun temp890_84 () (_ BitVec 64))
(declare-fun temp890_85 () (_ BitVec 64))
(declare-fun temp890_86 () (_ BitVec 64))
(declare-fun temp890_87 () (_ BitVec 64))
(declare-fun temp890_88 () (_ BitVec 64))
(declare-fun temp890_89 () (_ BitVec 64))
(declare-fun temp890_90 () (_ BitVec 64))
(declare-fun temp890_91 () (_ BitVec 64))
(declare-fun temp890_92 () (_ BitVec 64))
(declare-fun temp890_93 () (_ BitVec 64))
(declare-fun temp890_94 () (_ BitVec 64))
(declare-fun temp890_95 () (_ BitVec 64))
(declare-fun temp890_96 () (_ BitVec 64))
(declare-fun temp890_97 () (_ BitVec 64))
(declare-fun temp890_98 () (_ BitVec 64))
(declare-fun temp890_99 () (_ BitVec 64))
(declare-fun temp890_100 () (_ BitVec 64))
(declare-fun temp890_101 () (_ BitVec 64))
(declare-fun temp890_102 () (_ BitVec 64))
(declare-fun temp890_103 () (_ BitVec 64))
(declare-fun temp890_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp890_105 () (_ BitVec 64))
(declare-fun temp890_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp890_107 () (_ BitVec 64))
(declare-fun temp890_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_109 () (_ BitVec 64))
(declare-fun temp890_110 () (_ BitVec 64))
(declare-fun temp890_111 () (_ BitVec 64))
(declare-fun temp890_112 () (_ BitVec 64))
(declare-fun temp890_113 () (_ BitVec 64))
(declare-fun temp890_114 () (_ BitVec 64))
(declare-fun temp890_115 () (_ BitVec 64))
(declare-fun temp890_116 () (_ BitVec 64))
(declare-fun temp890_117 () (_ BitVec 64))
(declare-fun temp890_118 () (_ BitVec 64))
(declare-fun temp890_119 () (_ BitVec 64))
(declare-fun temp890_120 () (_ BitVec 64))
(declare-fun temp890_121 () (_ BitVec 64))
(declare-fun temp890_122 () (_ BitVec 64))
(declare-fun temp890_123 () (_ BitVec 64))
(declare-fun temp890_124 () (_ BitVec 64))
(declare-fun temp890_126 () (_ BitVec 64))
(declare-fun temp890_127 () (_ BitVec 64))
(declare-fun temp890_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp890_128 () (_ BitVec 64))
(declare-fun temp890_129 () (_ BitVec 64))
(declare-fun temp890_131 () (_ BitVec 64))
(declare-fun temp890_132 () (_ BitVec 64))
(declare-fun temp890_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp890_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp890_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp890_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp890_136 () (_ BitVec 64))
(declare-fun temp890_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp890_139 () (_ BitVec 64))
(declare-fun temp890_140 () (_ BitVec 64))
(declare-fun temp890_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp890_141 () (_ BitVec 64))
(declare-fun temp890_143 () (_ BitVec 64))
(declare-fun temp890_144 () (_ BitVec 64))
(declare-fun temp890_142 () (_ BitVec 64))
(declare-fun temp890_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp890_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp890_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp890_148 () (_ BitVec 64))
(declare-fun temp890_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp890_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp890_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp890_152 () (_ BitVec 64))
(assert (= temp890_1 #x0000000000000003))
(assert (= var465453 temp890_1))
(assert (= temp890_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp890_2)))
(assert (= temp890_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp890_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp890_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp890_4)))
(assert (= temp890_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp890_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp890_6 #x0000000000000000))
(assert (= var465488 temp890_6))
(assert (= temp890_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp890_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_8 #x0000000000000001))
(assert (= var465522 temp890_8))
(assert (= temp890_10 #x0000000000000000))
(assert (= temp890_9 temp890_10))
(assert (= temp890_12 #x0000000000000003))
(assert (= temp890_11 temp890_12))
(assert (= temp890_13 #x0000000000000000))
(assert (= var863614 temp890_13))
(assert (= temp890_14 #x0000000000000001))
(assert (= var863635 temp890_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp890_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp890_15)))
(assert (= temp890_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp890_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_17 #x0000000000000000))
(assert (= var997373 temp890_17))
(assert (= temp890_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp890_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_19 #x0000000000000000))
(assert (= var997418 temp890_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp890_20 #x0000000000000000))
(assert (= temp890_21 temp890_20))
(assert (= temp890_22 (select ARGNAME_padding_NAMEEND_VAL temp890_21)))
(assert (= temp890_23 #x0000000000000001))
(assert (= temp890_24 temp890_23))
(assert (= temp890_25 (select ARGNAME_padding_NAMEEND_VAL temp890_24)))
(assert (= temp890_26 #x0000000000000002))
(assert (= temp890_27 temp890_26))
(assert (= temp890_28 (select ARGNAME_padding_NAMEEND_VAL temp890_27)))
(assert (= temp890_29 #x0000000000000003))
(assert (= temp890_30 temp890_29))
(assert (= temp890_31 (select ARGNAME_padding_NAMEEND_VAL temp890_30)))
(assert (= temp890_32 #x0000000000000004))
(assert (= temp890_33 temp890_32))
(assert (= temp890_34 (select ARGNAME_padding_NAMEEND_VAL temp890_33)))
(assert (= temp890_35 #x0000000000000005))
(assert (= temp890_36 temp890_35))
(assert (= temp890_37 (select ARGNAME_padding_NAMEEND_VAL temp890_36)))
(assert (= temp890_38 #x0000000000000000))
(assert (= temp890_39 #x0000000000000000))
(assert (= temp890_40 temp890_39))
(assert (= temp890_41 (select ARGNAME_padding_NAMEEND_VAL temp890_40)))
(assert (= temp890_42 #x0000000000000000))
(assert (= temp890_43 #x0000000000000001))
(assert (= temp890_44 temp890_43))
(assert (= temp890_45 (select ARGNAME_padding_NAMEEND_VAL temp890_44)))
(assert (= temp890_46 #x0000000000000000))
(assert (= temp890_47 #x0000000000000002))
(assert (= temp890_48 temp890_47))
(assert (= temp890_49 (select ARGNAME_padding_NAMEEND_VAL temp890_48)))
(assert (= temp890_50 #x0000000000000000))
(assert (= temp890_51 #x0000000000000003))
(assert (= temp890_52 temp890_51))
(assert (= temp890_53 (select ARGNAME_padding_NAMEEND_VAL temp890_52)))
(assert (= temp890_54 #x0000000000000000))
(assert (= temp890_55 #x0000000000000004))
(assert (= temp890_56 temp890_55))
(assert (= temp890_57 (select ARGNAME_padding_NAMEEND_VAL temp890_56)))
(assert (= temp890_58 #x0000000000000000))
(assert (= temp890_59 #x0000000000000005))
(assert (= temp890_60 temp890_59))
(assert (= temp890_61 (select ARGNAME_padding_NAMEEND_VAL temp890_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp890_41 temp890_38)
             (bvslt temp890_45 temp890_42)
             (bvslt temp890_49 temp890_46)
             (bvslt temp890_53 temp890_50)
             (bvslt temp890_57 temp890_54)
             (bvslt temp890_61 temp890_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_62 #x0000000000000000))
(assert (= var1716002 temp890_62))
(assert (= temp890_63 #x0000000000000000))
(assert (= temp890_64 temp890_63))
(assert (= temp890_65 (select ARGNAME_stride_NAMEEND_VAL temp890_64)))
(assert (= temp890_66 #x0000000000000001))
(assert (= temp890_67 temp890_66))
(assert (= temp890_68 (select ARGNAME_stride_NAMEEND_VAL temp890_67)))
(assert (= temp890_69 #x0000000000000002))
(assert (= temp890_70 temp890_69))
(assert (= temp890_71 (select ARGNAME_stride_NAMEEND_VAL temp890_70)))
(assert (= temp890_72 #x0000000000000003))
(assert (= temp890_73 temp890_72))
(assert (= temp890_74 (select ARGNAME_stride_NAMEEND_VAL temp890_73)))
(assert (= temp890_75 #x0000000000000004))
(assert (= temp890_76 temp890_75))
(assert (= temp890_77 (select ARGNAME_stride_NAMEEND_VAL temp890_76)))
(assert (= temp890_78 #x0000000000000005))
(assert (= temp890_79 temp890_78))
(assert (= temp890_80 (select ARGNAME_stride_NAMEEND_VAL temp890_79)))
(assert (= temp890_81 #x0000000000000000))
(assert (= temp890_82 #x0000000000000000))
(assert (= temp890_83 temp890_82))
(assert (= temp890_84 (select ARGNAME_stride_NAMEEND_VAL temp890_83)))
(assert (= temp890_85 #x0000000000000000))
(assert (= temp890_86 #x0000000000000001))
(assert (= temp890_87 temp890_86))
(assert (= temp890_88 (select ARGNAME_stride_NAMEEND_VAL temp890_87)))
(assert (= temp890_89 #x0000000000000000))
(assert (= temp890_90 #x0000000000000002))
(assert (= temp890_91 temp890_90))
(assert (= temp890_92 (select ARGNAME_stride_NAMEEND_VAL temp890_91)))
(assert (= temp890_93 #x0000000000000000))
(assert (= temp890_94 #x0000000000000003))
(assert (= temp890_95 temp890_94))
(assert (= temp890_96 (select ARGNAME_stride_NAMEEND_VAL temp890_95)))
(assert (= temp890_97 #x0000000000000000))
(assert (= temp890_98 #x0000000000000004))
(assert (= temp890_99 temp890_98))
(assert (= temp890_100 (select ARGNAME_stride_NAMEEND_VAL temp890_99)))
(assert (= temp890_101 #x0000000000000000))
(assert (= temp890_102 #x0000000000000005))
(assert (= temp890_103 temp890_102))
(assert (= temp890_104 (select ARGNAME_stride_NAMEEND_VAL temp890_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp890_84 temp890_81)
             (bvsle temp890_88 temp890_85)
             (bvsle temp890_92 temp890_89)
             (bvsle temp890_96 temp890_93)
             (bvsle temp890_100 temp890_97)
             (bvsle temp890_104 temp890_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_105 #x0000000000000000))
(assert (= var1716023 temp890_105))
(assert (= temp890_106 #x0000000000000000))
(assert (= var1704114 temp890_106))
(assert (= temp890_107 #x0000000000000000))
(assert (= temp890_108 temp890_107))
(assert (= temp890_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_108)))
(assert (= temp890_110 #x0000000000000001))
(assert (= temp890_111 temp890_110))
(assert (= temp890_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_111)))
(assert (= temp890_113 #x0000000000000002))
(assert (= temp890_114 temp890_113))
(assert (= temp890_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_114)))
(assert (= temp890_116 #x0000000000000003))
(assert (= temp890_117 temp890_116))
(assert (= temp890_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_117)))
(assert (= temp890_119 #x0000000000000004))
(assert (= temp890_120 temp890_119))
(assert (= temp890_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_120)))
(assert (= temp890_122 #x0000000000000005))
(assert (= temp890_123 temp890_122))
(assert (= temp890_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_123)))
(assert (= temp890_126 var1704114))
(assert (= temp890_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_126)))
(assert (= temp890_125 temp890_127))
(assert (= var1716068
   (ite (bvslt temp890_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_128 #x0000000000000000))
(assert (= var1716068 temp890_128))
(assert (= temp890_129 #x0000000000000000))
(assert (= var1704114 temp890_129))
(assert (= temp890_131 var1704114))
(assert (= temp890_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_131)))
(assert (= temp890_130 temp890_132))
(assert (= var1716090 (bvsmod temp890_130 ARGNAME_groups_NAMEEND)))
(assert (= temp890_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp890_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_134 #x0000000000000001))
(assert (= var1716091 temp890_134))
(assert (= var1716110 var1716000))
(assert (= temp890_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp890_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_136 #x0000000000000001))
(assert (= var1716111 temp890_136))
(assert (= temp890_137 #x0000000000000001))
(assert (= var1705002 temp890_137))
(assert (= temp890_139 var1705002))
(assert (= temp890_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_139)))
(assert (= temp890_138 temp890_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp890_138)))
(assert (= temp890_141 #x0000000000000000))
(assert (= var1704114 temp890_141))
(assert (= temp890_143 var1704114))
(assert (= temp890_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_143)))
(assert (= temp890_142 temp890_144))
(assert (= temp890_145 #x0000000000000002))
(assert (= var1979241 temp890_145))
(assert (= temp890_146 #x0000000000000001))
(assert (= var1716281 temp890_146))
(assert (= temp890_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp890_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_148 #x0000000000000001))
(assert (= var997490 temp890_148))
(assert (= temp890_149 #x0000000000000001))
(assert (= var997620 temp890_149))
(assert (= var3486185 var997620))
(assert (= temp890_150 #x0000000000000000))
(assert (= var3686207 temp890_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp890_151 #x0000000000000002))
(assert (= var3815043 temp890_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp890_152 #x0000000000000001))
(assert (= var997490 temp890_152))
(model-add temp890_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp890_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp890_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp890_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp890_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp890_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






