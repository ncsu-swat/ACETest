(declare-fun temp125_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp125_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp125_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp125_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp125_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp125_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp125_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp125_8 () (_ BitVec 64))
(declare-fun temp125_10 () (_ BitVec 64))
(declare-fun temp125_9 () (_ BitVec 64))
(declare-fun temp125_12 () (_ BitVec 64))
(declare-fun temp125_11 () (_ BitVec 64))
(declare-fun temp125_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp125_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp125_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp125_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp125_17 () (_ BitVec 64))
(declare-fun temp125_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp125_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp125_20 () (_ BitVec 64))
(declare-fun temp125_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125_22 () (_ BitVec 64))
(declare-fun temp125_23 () (_ BitVec 64))
(declare-fun temp125_24 () (_ BitVec 64))
(declare-fun temp125_25 () (_ BitVec 64))
(declare-fun temp125_26 () (_ BitVec 64))
(declare-fun temp125_27 () (_ BitVec 64))
(declare-fun temp125_28 () (_ BitVec 64))
(declare-fun temp125_29 () (_ BitVec 64))
(declare-fun temp125_30 () (_ BitVec 64))
(declare-fun temp125_31 () (_ BitVec 64))
(declare-fun temp125_32 () (_ BitVec 64))
(declare-fun temp125_33 () (_ BitVec 64))
(declare-fun temp125_34 () (_ BitVec 64))
(declare-fun temp125_35 () (_ BitVec 64))
(declare-fun temp125_36 () (_ BitVec 64))
(declare-fun temp125_37 () (_ BitVec 64))
(declare-fun temp125_38 () (_ BitVec 64))
(declare-fun temp125_39 () (_ BitVec 64))
(declare-fun temp125_40 () (_ BitVec 64))
(declare-fun temp125_41 () (_ BitVec 64))
(declare-fun temp125_42 () (_ BitVec 64))
(declare-fun temp125_43 () (_ BitVec 64))
(declare-fun temp125_44 () (_ BitVec 64))
(declare-fun temp125_45 () (_ BitVec 64))
(declare-fun temp125_46 () (_ BitVec 64))
(declare-fun temp125_47 () (_ BitVec 64))
(declare-fun temp125_48 () (_ BitVec 64))
(declare-fun temp125_49 () (_ BitVec 64))
(declare-fun temp125_50 () (_ BitVec 64))
(declare-fun temp125_51 () (_ BitVec 64))
(declare-fun temp125_52 () (_ BitVec 64))
(declare-fun temp125_53 () (_ BitVec 64))
(declare-fun temp125_54 () (_ BitVec 64))
(declare-fun temp125_55 () (_ BitVec 64))
(declare-fun temp125_56 () (_ BitVec 64))
(declare-fun temp125_57 () (_ BitVec 64))
(declare-fun temp125_58 () (_ BitVec 64))
(declare-fun temp125_59 () (_ BitVec 64))
(declare-fun temp125_60 () (_ BitVec 64))
(declare-fun temp125_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp125_62 () (_ BitVec 64))
(declare-fun temp125_63 () (_ BitVec 64))
(declare-fun temp125_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125_65 () (_ BitVec 64))
(declare-fun temp125_66 () (_ BitVec 64))
(declare-fun temp125_67 () (_ BitVec 64))
(declare-fun temp125_68 () (_ BitVec 64))
(declare-fun temp125_69 () (_ BitVec 64))
(declare-fun temp125_70 () (_ BitVec 64))
(declare-fun temp125_71 () (_ BitVec 64))
(declare-fun temp125_72 () (_ BitVec 64))
(declare-fun temp125_73 () (_ BitVec 64))
(declare-fun temp125_74 () (_ BitVec 64))
(declare-fun temp125_75 () (_ BitVec 64))
(declare-fun temp125_76 () (_ BitVec 64))
(declare-fun temp125_77 () (_ BitVec 64))
(declare-fun temp125_78 () (_ BitVec 64))
(declare-fun temp125_79 () (_ BitVec 64))
(declare-fun temp125_80 () (_ BitVec 64))
(declare-fun temp125_81 () (_ BitVec 64))
(declare-fun temp125_82 () (_ BitVec 64))
(declare-fun temp125_83 () (_ BitVec 64))
(declare-fun temp125_84 () (_ BitVec 64))
(declare-fun temp125_85 () (_ BitVec 64))
(declare-fun temp125_86 () (_ BitVec 64))
(declare-fun temp125_87 () (_ BitVec 64))
(declare-fun temp125_88 () (_ BitVec 64))
(declare-fun temp125_89 () (_ BitVec 64))
(declare-fun temp125_90 () (_ BitVec 64))
(declare-fun temp125_91 () (_ BitVec 64))
(declare-fun temp125_92 () (_ BitVec 64))
(declare-fun temp125_93 () (_ BitVec 64))
(declare-fun temp125_94 () (_ BitVec 64))
(declare-fun temp125_95 () (_ BitVec 64))
(declare-fun temp125_96 () (_ BitVec 64))
(declare-fun temp125_97 () (_ BitVec 64))
(declare-fun temp125_98 () (_ BitVec 64))
(declare-fun temp125_99 () (_ BitVec 64))
(declare-fun temp125_100 () (_ BitVec 64))
(declare-fun temp125_101 () (_ BitVec 64))
(declare-fun temp125_102 () (_ BitVec 64))
(declare-fun temp125_103 () (_ BitVec 64))
(declare-fun temp125_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp125_105 () (_ BitVec 64))
(declare-fun temp125_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp125_107 () (_ BitVec 64))
(declare-fun temp125_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125_109 () (_ BitVec 64))
(declare-fun temp125_110 () (_ BitVec 64))
(declare-fun temp125_111 () (_ BitVec 64))
(declare-fun temp125_112 () (_ BitVec 64))
(declare-fun temp125_113 () (_ BitVec 64))
(declare-fun temp125_114 () (_ BitVec 64))
(declare-fun temp125_115 () (_ BitVec 64))
(declare-fun temp125_116 () (_ BitVec 64))
(declare-fun temp125_117 () (_ BitVec 64))
(declare-fun temp125_118 () (_ BitVec 64))
(declare-fun temp125_119 () (_ BitVec 64))
(declare-fun temp125_120 () (_ BitVec 64))
(declare-fun temp125_121 () (_ BitVec 64))
(declare-fun temp125_122 () (_ BitVec 64))
(declare-fun temp125_123 () (_ BitVec 64))
(declare-fun temp125_124 () (_ BitVec 64))
(declare-fun temp125_126 () (_ BitVec 64))
(declare-fun temp125_127 () (_ BitVec 64))
(declare-fun temp125_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp125_128 () (_ BitVec 64))
(declare-fun temp125_129 () (_ BitVec 64))
(declare-fun temp125_131 () (_ BitVec 64))
(declare-fun temp125_132 () (_ BitVec 64))
(declare-fun temp125_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp125_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp125_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp125_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp125_136 () (_ BitVec 64))
(declare-fun temp125_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp125_139 () (_ BitVec 64))
(declare-fun temp125_140 () (_ BitVec 64))
(declare-fun temp125_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp125_141 () (_ BitVec 64))
(declare-fun temp125_143 () (_ BitVec 64))
(declare-fun temp125_144 () (_ BitVec 64))
(declare-fun temp125_142 () (_ BitVec 64))
(declare-fun temp125_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp125_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp125_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp125_148 () (_ BitVec 64))
(declare-fun temp125_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp125_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp125_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp125_153 () (_ BitVec 64))
(declare-fun temp125_152 () (_ BitVec 64))
(declare-fun temp125_155 () (_ BitVec 64))
(declare-fun temp125_154 () (_ BitVec 64))
(declare-fun temp125_156 () (_ BitVec 64))
(assert (= temp125_1 #x0000000000000003))
(assert (= var465453 temp125_1))
(assert (= temp125_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp125_2)))
(assert (= temp125_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp125_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp125_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp125_4)))
(assert (= temp125_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp125_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp125_6 #x0000000000000000))
(assert (= var465488 temp125_6))
(assert (= temp125_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp125_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp125_8 #x0000000000000001))
(assert (= var465522 temp125_8))
(assert (= temp125_10 #x0000000000000000))
(assert (= temp125_9 temp125_10))
(assert (= temp125_12 #x0000000000000003))
(assert (= temp125_11 temp125_12))
(assert (= temp125_13 #x0000000000000000))
(assert (= var863614 temp125_13))
(assert (= temp125_14 #x0000000000000001))
(assert (= var863635 temp125_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp125_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp125_15)))
(assert (= temp125_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp125_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_17 #x0000000000000000))
(assert (= var997373 temp125_17))
(assert (= temp125_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp125_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_19 #x0000000000000000))
(assert (= var997418 temp125_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp125_20 #x0000000000000000))
(assert (= temp125_21 temp125_20))
(assert (= temp125_22 (select ARGNAME_padding_NAMEEND_VAL temp125_21)))
(assert (= temp125_23 #x0000000000000001))
(assert (= temp125_24 temp125_23))
(assert (= temp125_25 (select ARGNAME_padding_NAMEEND_VAL temp125_24)))
(assert (= temp125_26 #x0000000000000002))
(assert (= temp125_27 temp125_26))
(assert (= temp125_28 (select ARGNAME_padding_NAMEEND_VAL temp125_27)))
(assert (= temp125_29 #x0000000000000003))
(assert (= temp125_30 temp125_29))
(assert (= temp125_31 (select ARGNAME_padding_NAMEEND_VAL temp125_30)))
(assert (= temp125_32 #x0000000000000004))
(assert (= temp125_33 temp125_32))
(assert (= temp125_34 (select ARGNAME_padding_NAMEEND_VAL temp125_33)))
(assert (= temp125_35 #x0000000000000005))
(assert (= temp125_36 temp125_35))
(assert (= temp125_37 (select ARGNAME_padding_NAMEEND_VAL temp125_36)))
(assert (= temp125_38 #x0000000000000000))
(assert (= temp125_39 #x0000000000000000))
(assert (= temp125_40 temp125_39))
(assert (= temp125_41 (select ARGNAME_padding_NAMEEND_VAL temp125_40)))
(assert (= temp125_42 #x0000000000000000))
(assert (= temp125_43 #x0000000000000001))
(assert (= temp125_44 temp125_43))
(assert (= temp125_45 (select ARGNAME_padding_NAMEEND_VAL temp125_44)))
(assert (= temp125_46 #x0000000000000000))
(assert (= temp125_47 #x0000000000000002))
(assert (= temp125_48 temp125_47))
(assert (= temp125_49 (select ARGNAME_padding_NAMEEND_VAL temp125_48)))
(assert (= temp125_50 #x0000000000000000))
(assert (= temp125_51 #x0000000000000003))
(assert (= temp125_52 temp125_51))
(assert (= temp125_53 (select ARGNAME_padding_NAMEEND_VAL temp125_52)))
(assert (= temp125_54 #x0000000000000000))
(assert (= temp125_55 #x0000000000000004))
(assert (= temp125_56 temp125_55))
(assert (= temp125_57 (select ARGNAME_padding_NAMEEND_VAL temp125_56)))
(assert (= temp125_58 #x0000000000000000))
(assert (= temp125_59 #x0000000000000005))
(assert (= temp125_60 temp125_59))
(assert (= temp125_61 (select ARGNAME_padding_NAMEEND_VAL temp125_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp125_41 temp125_38)
             (bvslt temp125_45 temp125_42)
             (bvslt temp125_49 temp125_46)
             (bvslt temp125_53 temp125_50)
             (bvslt temp125_57 temp125_54)
             (bvslt temp125_61 temp125_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_62 #x0000000000000000))
(assert (= var1716002 temp125_62))
(assert (= temp125_63 #x0000000000000000))
(assert (= temp125_64 temp125_63))
(assert (= temp125_65 (select ARGNAME_stride_NAMEEND_VAL temp125_64)))
(assert (= temp125_66 #x0000000000000001))
(assert (= temp125_67 temp125_66))
(assert (= temp125_68 (select ARGNAME_stride_NAMEEND_VAL temp125_67)))
(assert (= temp125_69 #x0000000000000002))
(assert (= temp125_70 temp125_69))
(assert (= temp125_71 (select ARGNAME_stride_NAMEEND_VAL temp125_70)))
(assert (= temp125_72 #x0000000000000003))
(assert (= temp125_73 temp125_72))
(assert (= temp125_74 (select ARGNAME_stride_NAMEEND_VAL temp125_73)))
(assert (= temp125_75 #x0000000000000004))
(assert (= temp125_76 temp125_75))
(assert (= temp125_77 (select ARGNAME_stride_NAMEEND_VAL temp125_76)))
(assert (= temp125_78 #x0000000000000005))
(assert (= temp125_79 temp125_78))
(assert (= temp125_80 (select ARGNAME_stride_NAMEEND_VAL temp125_79)))
(assert (= temp125_81 #x0000000000000000))
(assert (= temp125_82 #x0000000000000000))
(assert (= temp125_83 temp125_82))
(assert (= temp125_84 (select ARGNAME_stride_NAMEEND_VAL temp125_83)))
(assert (= temp125_85 #x0000000000000000))
(assert (= temp125_86 #x0000000000000001))
(assert (= temp125_87 temp125_86))
(assert (= temp125_88 (select ARGNAME_stride_NAMEEND_VAL temp125_87)))
(assert (= temp125_89 #x0000000000000000))
(assert (= temp125_90 #x0000000000000002))
(assert (= temp125_91 temp125_90))
(assert (= temp125_92 (select ARGNAME_stride_NAMEEND_VAL temp125_91)))
(assert (= temp125_93 #x0000000000000000))
(assert (= temp125_94 #x0000000000000003))
(assert (= temp125_95 temp125_94))
(assert (= temp125_96 (select ARGNAME_stride_NAMEEND_VAL temp125_95)))
(assert (= temp125_97 #x0000000000000000))
(assert (= temp125_98 #x0000000000000004))
(assert (= temp125_99 temp125_98))
(assert (= temp125_100 (select ARGNAME_stride_NAMEEND_VAL temp125_99)))
(assert (= temp125_101 #x0000000000000000))
(assert (= temp125_102 #x0000000000000005))
(assert (= temp125_103 temp125_102))
(assert (= temp125_104 (select ARGNAME_stride_NAMEEND_VAL temp125_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp125_84 temp125_81)
             (bvsle temp125_88 temp125_85)
             (bvsle temp125_92 temp125_89)
             (bvsle temp125_96 temp125_93)
             (bvsle temp125_100 temp125_97)
             (bvsle temp125_104 temp125_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_105 #x0000000000000000))
(assert (= var1716023 temp125_105))
(assert (= temp125_106 #x0000000000000000))
(assert (= var1704114 temp125_106))
(assert (= temp125_107 #x0000000000000000))
(assert (= temp125_108 temp125_107))
(assert (= temp125_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_108)))
(assert (= temp125_110 #x0000000000000001))
(assert (= temp125_111 temp125_110))
(assert (= temp125_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_111)))
(assert (= temp125_113 #x0000000000000002))
(assert (= temp125_114 temp125_113))
(assert (= temp125_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_114)))
(assert (= temp125_116 #x0000000000000003))
(assert (= temp125_117 temp125_116))
(assert (= temp125_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_117)))
(assert (= temp125_119 #x0000000000000004))
(assert (= temp125_120 temp125_119))
(assert (= temp125_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_120)))
(assert (= temp125_122 #x0000000000000005))
(assert (= temp125_123 temp125_122))
(assert (= temp125_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_123)))
(assert (= temp125_126 var1704114))
(assert (= temp125_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_126)))
(assert (= temp125_125 temp125_127))
(assert (= var1716068
   (ite (bvslt temp125_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_128 #x0000000000000000))
(assert (= var1716068 temp125_128))
(assert (= temp125_129 #x0000000000000000))
(assert (= var1704114 temp125_129))
(assert (= temp125_131 var1704114))
(assert (= temp125_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_131)))
(assert (= temp125_130 temp125_132))
(assert (= var1716090 (bvsmod temp125_130 ARGNAME_groups_NAMEEND)))
(assert (= temp125_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp125_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp125_134 #x0000000000000001))
(assert (= var1716091 temp125_134))
(assert (= var1716110 var1716000))
(assert (= temp125_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp125_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp125_136 #x0000000000000001))
(assert (= var1716111 temp125_136))
(assert (= temp125_137 #x0000000000000001))
(assert (= var1705002 temp125_137))
(assert (= temp125_139 var1705002))
(assert (= temp125_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_139)))
(assert (= temp125_138 temp125_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp125_138)))
(assert (= temp125_141 #x0000000000000000))
(assert (= var1704114 temp125_141))
(assert (= temp125_143 var1704114))
(assert (= temp125_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_143)))
(assert (= temp125_142 temp125_144))
(assert (= temp125_145 #x0000000000000002))
(assert (= var1979241 temp125_145))
(assert (= temp125_146 #x0000000000000001))
(assert (= var1716281 temp125_146))
(assert (= temp125_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp125_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_148 #x0000000000000001))
(assert (= var997490 temp125_148))
(assert (= temp125_149 #x0000000000000001))
(assert (= var997620 temp125_149))
(assert (= var3486185 var997620))
(assert (= temp125_150 #x0000000000000000))
(assert (= var3686207 temp125_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp125_151 #x0000000000000002))
(assert (= var3815043 temp125_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp125_153 #xffffffffffffffff))
(assert (= temp125_152 temp125_153))
(assert (= temp125_155 #xffffffffffffffff))
(assert (= temp125_154 temp125_155))
(assert (= temp125_156 #x0000000000000001))
(assert (= var997490 temp125_156))
(model-add temp125_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp125_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp125_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp125_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp125_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp125_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






