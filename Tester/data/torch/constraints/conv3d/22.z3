(declare-fun temp28_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp28_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp28_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp28_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp28_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp28_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp28_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp28_8 () (_ BitVec 64))
(declare-fun temp28_10 () (_ BitVec 64))
(declare-fun temp28_9 () (_ BitVec 64))
(declare-fun temp28_12 () (_ BitVec 64))
(declare-fun temp28_11 () (_ BitVec 64))
(declare-fun temp28_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp28_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp28_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp28_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp28_17 () (_ BitVec 64))
(declare-fun temp28_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp28_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp28_20 () (_ BitVec 64))
(declare-fun temp28_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_22 () (_ BitVec 64))
(declare-fun temp28_23 () (_ BitVec 64))
(declare-fun temp28_24 () (_ BitVec 64))
(declare-fun temp28_25 () (_ BitVec 64))
(declare-fun temp28_26 () (_ BitVec 64))
(declare-fun temp28_27 () (_ BitVec 64))
(declare-fun temp28_28 () (_ BitVec 64))
(declare-fun temp28_29 () (_ BitVec 64))
(declare-fun temp28_30 () (_ BitVec 64))
(declare-fun temp28_31 () (_ BitVec 64))
(declare-fun temp28_32 () (_ BitVec 64))
(declare-fun temp28_33 () (_ BitVec 64))
(declare-fun temp28_34 () (_ BitVec 64))
(declare-fun temp28_35 () (_ BitVec 64))
(declare-fun temp28_36 () (_ BitVec 64))
(declare-fun temp28_37 () (_ BitVec 64))
(declare-fun temp28_38 () (_ BitVec 64))
(declare-fun temp28_39 () (_ BitVec 64))
(declare-fun temp28_40 () (_ BitVec 64))
(declare-fun temp28_41 () (_ BitVec 64))
(declare-fun temp28_42 () (_ BitVec 64))
(declare-fun temp28_43 () (_ BitVec 64))
(declare-fun temp28_44 () (_ BitVec 64))
(declare-fun temp28_45 () (_ BitVec 64))
(declare-fun temp28_46 () (_ BitVec 64))
(declare-fun temp28_47 () (_ BitVec 64))
(declare-fun temp28_48 () (_ BitVec 64))
(declare-fun temp28_49 () (_ BitVec 64))
(declare-fun temp28_50 () (_ BitVec 64))
(declare-fun temp28_51 () (_ BitVec 64))
(declare-fun temp28_52 () (_ BitVec 64))
(declare-fun temp28_53 () (_ BitVec 64))
(declare-fun temp28_54 () (_ BitVec 64))
(declare-fun temp28_55 () (_ BitVec 64))
(declare-fun temp28_56 () (_ BitVec 64))
(declare-fun temp28_57 () (_ BitVec 64))
(declare-fun temp28_58 () (_ BitVec 64))
(declare-fun temp28_59 () (_ BitVec 64))
(declare-fun temp28_60 () (_ BitVec 64))
(declare-fun temp28_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp28_62 () (_ BitVec 64))
(declare-fun temp28_63 () (_ BitVec 64))
(declare-fun temp28_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_65 () (_ BitVec 64))
(declare-fun temp28_66 () (_ BitVec 64))
(declare-fun temp28_67 () (_ BitVec 64))
(declare-fun temp28_68 () (_ BitVec 64))
(declare-fun temp28_69 () (_ BitVec 64))
(declare-fun temp28_70 () (_ BitVec 64))
(declare-fun temp28_71 () (_ BitVec 64))
(declare-fun temp28_72 () (_ BitVec 64))
(declare-fun temp28_73 () (_ BitVec 64))
(declare-fun temp28_74 () (_ BitVec 64))
(declare-fun temp28_75 () (_ BitVec 64))
(declare-fun temp28_76 () (_ BitVec 64))
(declare-fun temp28_77 () (_ BitVec 64))
(declare-fun temp28_78 () (_ BitVec 64))
(declare-fun temp28_79 () (_ BitVec 64))
(declare-fun temp28_80 () (_ BitVec 64))
(declare-fun temp28_81 () (_ BitVec 64))
(declare-fun temp28_82 () (_ BitVec 64))
(declare-fun temp28_83 () (_ BitVec 64))
(declare-fun temp28_84 () (_ BitVec 64))
(declare-fun temp28_85 () (_ BitVec 64))
(declare-fun temp28_86 () (_ BitVec 64))
(declare-fun temp28_87 () (_ BitVec 64))
(declare-fun temp28_88 () (_ BitVec 64))
(declare-fun temp28_89 () (_ BitVec 64))
(declare-fun temp28_90 () (_ BitVec 64))
(declare-fun temp28_91 () (_ BitVec 64))
(declare-fun temp28_92 () (_ BitVec 64))
(declare-fun temp28_93 () (_ BitVec 64))
(declare-fun temp28_94 () (_ BitVec 64))
(declare-fun temp28_95 () (_ BitVec 64))
(declare-fun temp28_96 () (_ BitVec 64))
(declare-fun temp28_97 () (_ BitVec 64))
(declare-fun temp28_98 () (_ BitVec 64))
(declare-fun temp28_99 () (_ BitVec 64))
(declare-fun temp28_100 () (_ BitVec 64))
(declare-fun temp28_101 () (_ BitVec 64))
(declare-fun temp28_102 () (_ BitVec 64))
(declare-fun temp28_103 () (_ BitVec 64))
(declare-fun temp28_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp28_105 () (_ BitVec 64))
(declare-fun temp28_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp28_107 () (_ BitVec 64))
(declare-fun temp28_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_109 () (_ BitVec 64))
(declare-fun temp28_110 () (_ BitVec 64))
(declare-fun temp28_111 () (_ BitVec 64))
(declare-fun temp28_112 () (_ BitVec 64))
(declare-fun temp28_113 () (_ BitVec 64))
(declare-fun temp28_114 () (_ BitVec 64))
(declare-fun temp28_115 () (_ BitVec 64))
(declare-fun temp28_116 () (_ BitVec 64))
(declare-fun temp28_117 () (_ BitVec 64))
(declare-fun temp28_118 () (_ BitVec 64))
(declare-fun temp28_119 () (_ BitVec 64))
(declare-fun temp28_120 () (_ BitVec 64))
(declare-fun temp28_121 () (_ BitVec 64))
(declare-fun temp28_122 () (_ BitVec 64))
(declare-fun temp28_123 () (_ BitVec 64))
(declare-fun temp28_124 () (_ BitVec 64))
(declare-fun temp28_126 () (_ BitVec 64))
(declare-fun temp28_127 () (_ BitVec 64))
(declare-fun temp28_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp28_128 () (_ BitVec 64))
(declare-fun temp28_129 () (_ BitVec 64))
(declare-fun temp28_131 () (_ BitVec 64))
(declare-fun temp28_132 () (_ BitVec 64))
(declare-fun temp28_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp28_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp28_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp28_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp28_136 () (_ BitVec 64))
(declare-fun temp28_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp28_139 () (_ BitVec 64))
(declare-fun temp28_140 () (_ BitVec 64))
(declare-fun temp28_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp28_141 () (_ BitVec 64))
(declare-fun temp28_143 () (_ BitVec 64))
(declare-fun temp28_144 () (_ BitVec 64))
(declare-fun temp28_142 () (_ BitVec 64))
(declare-fun temp28_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp28_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp28_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp28_148 () (_ BitVec 64))
(declare-fun temp28_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp28_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp28_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp28_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var5193549 () (_ BitVec 64))
(declare-fun temp28_153 () (_ BitVec 64))
(assert (= temp28_1 #x0000000000000003))
(assert (= var465453 temp28_1))
(assert (= temp28_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp28_2)))
(assert (= temp28_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp28_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp28_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp28_4)))
(assert (= temp28_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp28_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp28_6 #x0000000000000000))
(assert (= var465488 temp28_6))
(assert (= temp28_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp28_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_8 #x0000000000000001))
(assert (= var465522 temp28_8))
(assert (= temp28_10 #x0000000000000000))
(assert (= temp28_9 temp28_10))
(assert (= temp28_12 #x0000000000000003))
(assert (= temp28_11 temp28_12))
(assert (= temp28_13 #x0000000000000000))
(assert (= var863614 temp28_13))
(assert (= temp28_14 #x0000000000000001))
(assert (= var863635 temp28_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp28_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp28_15)))
(assert (= temp28_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp28_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_17 #x0000000000000000))
(assert (= var997373 temp28_17))
(assert (= temp28_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp28_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_19 #x0000000000000000))
(assert (= var997418 temp28_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp28_20 #x0000000000000000))
(assert (= temp28_21 temp28_20))
(assert (= temp28_22 (select ARGNAME_padding_NAMEEND_VAL temp28_21)))
(assert (= temp28_23 #x0000000000000001))
(assert (= temp28_24 temp28_23))
(assert (= temp28_25 (select ARGNAME_padding_NAMEEND_VAL temp28_24)))
(assert (= temp28_26 #x0000000000000002))
(assert (= temp28_27 temp28_26))
(assert (= temp28_28 (select ARGNAME_padding_NAMEEND_VAL temp28_27)))
(assert (= temp28_29 #x0000000000000003))
(assert (= temp28_30 temp28_29))
(assert (= temp28_31 (select ARGNAME_padding_NAMEEND_VAL temp28_30)))
(assert (= temp28_32 #x0000000000000004))
(assert (= temp28_33 temp28_32))
(assert (= temp28_34 (select ARGNAME_padding_NAMEEND_VAL temp28_33)))
(assert (= temp28_35 #x0000000000000005))
(assert (= temp28_36 temp28_35))
(assert (= temp28_37 (select ARGNAME_padding_NAMEEND_VAL temp28_36)))
(assert (= temp28_38 #x0000000000000000))
(assert (= temp28_39 #x0000000000000000))
(assert (= temp28_40 temp28_39))
(assert (= temp28_41 (select ARGNAME_padding_NAMEEND_VAL temp28_40)))
(assert (= temp28_42 #x0000000000000000))
(assert (= temp28_43 #x0000000000000001))
(assert (= temp28_44 temp28_43))
(assert (= temp28_45 (select ARGNAME_padding_NAMEEND_VAL temp28_44)))
(assert (= temp28_46 #x0000000000000000))
(assert (= temp28_47 #x0000000000000002))
(assert (= temp28_48 temp28_47))
(assert (= temp28_49 (select ARGNAME_padding_NAMEEND_VAL temp28_48)))
(assert (= temp28_50 #x0000000000000000))
(assert (= temp28_51 #x0000000000000003))
(assert (= temp28_52 temp28_51))
(assert (= temp28_53 (select ARGNAME_padding_NAMEEND_VAL temp28_52)))
(assert (= temp28_54 #x0000000000000000))
(assert (= temp28_55 #x0000000000000004))
(assert (= temp28_56 temp28_55))
(assert (= temp28_57 (select ARGNAME_padding_NAMEEND_VAL temp28_56)))
(assert (= temp28_58 #x0000000000000000))
(assert (= temp28_59 #x0000000000000005))
(assert (= temp28_60 temp28_59))
(assert (= temp28_61 (select ARGNAME_padding_NAMEEND_VAL temp28_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp28_41 temp28_38)
             (bvslt temp28_45 temp28_42)
             (bvslt temp28_49 temp28_46)
             (bvslt temp28_53 temp28_50)
             (bvslt temp28_57 temp28_54)
             (bvslt temp28_61 temp28_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_62 #x0000000000000000))
(assert (= var1716002 temp28_62))
(assert (= temp28_63 #x0000000000000000))
(assert (= temp28_64 temp28_63))
(assert (= temp28_65 (select ARGNAME_stride_NAMEEND_VAL temp28_64)))
(assert (= temp28_66 #x0000000000000001))
(assert (= temp28_67 temp28_66))
(assert (= temp28_68 (select ARGNAME_stride_NAMEEND_VAL temp28_67)))
(assert (= temp28_69 #x0000000000000002))
(assert (= temp28_70 temp28_69))
(assert (= temp28_71 (select ARGNAME_stride_NAMEEND_VAL temp28_70)))
(assert (= temp28_72 #x0000000000000003))
(assert (= temp28_73 temp28_72))
(assert (= temp28_74 (select ARGNAME_stride_NAMEEND_VAL temp28_73)))
(assert (= temp28_75 #x0000000000000004))
(assert (= temp28_76 temp28_75))
(assert (= temp28_77 (select ARGNAME_stride_NAMEEND_VAL temp28_76)))
(assert (= temp28_78 #x0000000000000005))
(assert (= temp28_79 temp28_78))
(assert (= temp28_80 (select ARGNAME_stride_NAMEEND_VAL temp28_79)))
(assert (= temp28_81 #x0000000000000000))
(assert (= temp28_82 #x0000000000000000))
(assert (= temp28_83 temp28_82))
(assert (= temp28_84 (select ARGNAME_stride_NAMEEND_VAL temp28_83)))
(assert (= temp28_85 #x0000000000000000))
(assert (= temp28_86 #x0000000000000001))
(assert (= temp28_87 temp28_86))
(assert (= temp28_88 (select ARGNAME_stride_NAMEEND_VAL temp28_87)))
(assert (= temp28_89 #x0000000000000000))
(assert (= temp28_90 #x0000000000000002))
(assert (= temp28_91 temp28_90))
(assert (= temp28_92 (select ARGNAME_stride_NAMEEND_VAL temp28_91)))
(assert (= temp28_93 #x0000000000000000))
(assert (= temp28_94 #x0000000000000003))
(assert (= temp28_95 temp28_94))
(assert (= temp28_96 (select ARGNAME_stride_NAMEEND_VAL temp28_95)))
(assert (= temp28_97 #x0000000000000000))
(assert (= temp28_98 #x0000000000000004))
(assert (= temp28_99 temp28_98))
(assert (= temp28_100 (select ARGNAME_stride_NAMEEND_VAL temp28_99)))
(assert (= temp28_101 #x0000000000000000))
(assert (= temp28_102 #x0000000000000005))
(assert (= temp28_103 temp28_102))
(assert (= temp28_104 (select ARGNAME_stride_NAMEEND_VAL temp28_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp28_84 temp28_81)
             (bvsle temp28_88 temp28_85)
             (bvsle temp28_92 temp28_89)
             (bvsle temp28_96 temp28_93)
             (bvsle temp28_100 temp28_97)
             (bvsle temp28_104 temp28_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_105 #x0000000000000000))
(assert (= var1716023 temp28_105))
(assert (= temp28_106 #x0000000000000000))
(assert (= var1704114 temp28_106))
(assert (= temp28_107 #x0000000000000000))
(assert (= temp28_108 temp28_107))
(assert (= temp28_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_108)))
(assert (= temp28_110 #x0000000000000001))
(assert (= temp28_111 temp28_110))
(assert (= temp28_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_111)))
(assert (= temp28_113 #x0000000000000002))
(assert (= temp28_114 temp28_113))
(assert (= temp28_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_114)))
(assert (= temp28_116 #x0000000000000003))
(assert (= temp28_117 temp28_116))
(assert (= temp28_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_117)))
(assert (= temp28_119 #x0000000000000004))
(assert (= temp28_120 temp28_119))
(assert (= temp28_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_120)))
(assert (= temp28_122 #x0000000000000005))
(assert (= temp28_123 temp28_122))
(assert (= temp28_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_123)))
(assert (= temp28_126 var1704114))
(assert (= temp28_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_126)))
(assert (= temp28_125 temp28_127))
(assert (= var1716068
   (ite (bvslt temp28_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_128 #x0000000000000000))
(assert (= var1716068 temp28_128))
(assert (= temp28_129 #x0000000000000000))
(assert (= var1704114 temp28_129))
(assert (= temp28_131 var1704114))
(assert (= temp28_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_131)))
(assert (= temp28_130 temp28_132))
(assert (= var1716090 (bvsmod temp28_130 ARGNAME_groups_NAMEEND)))
(assert (= temp28_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp28_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_134 #x0000000000000001))
(assert (= var1716091 temp28_134))
(assert (= var1716110 var1716000))
(assert (= temp28_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp28_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_136 #x0000000000000001))
(assert (= var1716111 temp28_136))
(assert (= temp28_137 #x0000000000000001))
(assert (= var1705002 temp28_137))
(assert (= temp28_139 var1705002))
(assert (= temp28_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_139)))
(assert (= temp28_138 temp28_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp28_138)))
(assert (= temp28_141 #x0000000000000000))
(assert (= var1704114 temp28_141))
(assert (= temp28_143 var1704114))
(assert (= temp28_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_143)))
(assert (= temp28_142 temp28_144))
(assert (= temp28_145 #x0000000000000002))
(assert (= var1979241 temp28_145))
(assert (= temp28_146 #x0000000000000001))
(assert (= var1716281 temp28_146))
(assert (= temp28_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp28_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_148 #x0000000000000001))
(assert (= var997490 temp28_148))
(assert (= temp28_149 #x0000000000000001))
(assert (= var997620 temp28_149))
(assert (= var3486185 var997620))
(assert (= temp28_150 #x0000000000000000))
(assert (= var3686207 temp28_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp28_151 #x0000000000000002))
(assert (= var3815043 temp28_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4469136 var997633))
(assert (= var997820 var997345))
(assert (= temp28_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp28_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5193549 var997821))
(assert (= temp28_153 #x0000000000000001))
(assert (= var997490 temp28_153))
(model-add temp28_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp28_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp28_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp28_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp28_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp28_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





