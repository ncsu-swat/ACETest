(declare-fun temp798_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp798_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp798_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp798_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp798_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp798_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp798_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp798_8 () (_ BitVec 64))
(declare-fun temp798_10 () (_ BitVec 64))
(declare-fun temp798_9 () (_ BitVec 64))
(declare-fun temp798_12 () (_ BitVec 64))
(declare-fun temp798_11 () (_ BitVec 64))
(declare-fun temp798_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp798_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp798_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp798_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp798_17 () (_ BitVec 64))
(declare-fun temp798_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp798_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp798_20 () (_ BitVec 64))
(declare-fun temp798_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp798_22 () (_ BitVec 64))
(declare-fun temp798_23 () (_ BitVec 64))
(declare-fun temp798_24 () (_ BitVec 64))
(declare-fun temp798_25 () (_ BitVec 64))
(declare-fun temp798_26 () (_ BitVec 64))
(declare-fun temp798_27 () (_ BitVec 64))
(declare-fun temp798_28 () (_ BitVec 64))
(declare-fun temp798_29 () (_ BitVec 64))
(declare-fun temp798_30 () (_ BitVec 64))
(declare-fun temp798_31 () (_ BitVec 64))
(declare-fun temp798_32 () (_ BitVec 64))
(declare-fun temp798_33 () (_ BitVec 64))
(declare-fun temp798_34 () (_ BitVec 64))
(declare-fun temp798_35 () (_ BitVec 64))
(declare-fun temp798_36 () (_ BitVec 64))
(declare-fun temp798_37 () (_ BitVec 64))
(declare-fun temp798_38 () (_ BitVec 64))
(declare-fun temp798_39 () (_ BitVec 64))
(declare-fun temp798_40 () (_ BitVec 64))
(declare-fun temp798_41 () (_ BitVec 64))
(declare-fun temp798_42 () (_ BitVec 64))
(declare-fun temp798_43 () (_ BitVec 64))
(declare-fun temp798_44 () (_ BitVec 64))
(declare-fun temp798_45 () (_ BitVec 64))
(declare-fun temp798_46 () (_ BitVec 64))
(declare-fun temp798_47 () (_ BitVec 64))
(declare-fun temp798_48 () (_ BitVec 64))
(declare-fun temp798_49 () (_ BitVec 64))
(declare-fun temp798_50 () (_ BitVec 64))
(declare-fun temp798_51 () (_ BitVec 64))
(declare-fun temp798_52 () (_ BitVec 64))
(declare-fun temp798_53 () (_ BitVec 64))
(declare-fun temp798_54 () (_ BitVec 64))
(declare-fun temp798_55 () (_ BitVec 64))
(declare-fun temp798_56 () (_ BitVec 64))
(declare-fun temp798_57 () (_ BitVec 64))
(declare-fun temp798_58 () (_ BitVec 64))
(declare-fun temp798_59 () (_ BitVec 64))
(declare-fun temp798_60 () (_ BitVec 64))
(declare-fun temp798_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp798_62 () (_ BitVec 64))
(declare-fun temp798_63 () (_ BitVec 64))
(declare-fun temp798_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp798_65 () (_ BitVec 64))
(declare-fun temp798_66 () (_ BitVec 64))
(declare-fun temp798_67 () (_ BitVec 64))
(declare-fun temp798_68 () (_ BitVec 64))
(declare-fun temp798_69 () (_ BitVec 64))
(declare-fun temp798_70 () (_ BitVec 64))
(declare-fun temp798_71 () (_ BitVec 64))
(declare-fun temp798_72 () (_ BitVec 64))
(declare-fun temp798_73 () (_ BitVec 64))
(declare-fun temp798_74 () (_ BitVec 64))
(declare-fun temp798_75 () (_ BitVec 64))
(declare-fun temp798_76 () (_ BitVec 64))
(declare-fun temp798_77 () (_ BitVec 64))
(declare-fun temp798_78 () (_ BitVec 64))
(declare-fun temp798_79 () (_ BitVec 64))
(declare-fun temp798_80 () (_ BitVec 64))
(declare-fun temp798_81 () (_ BitVec 64))
(declare-fun temp798_82 () (_ BitVec 64))
(declare-fun temp798_83 () (_ BitVec 64))
(declare-fun temp798_84 () (_ BitVec 64))
(declare-fun temp798_85 () (_ BitVec 64))
(declare-fun temp798_86 () (_ BitVec 64))
(declare-fun temp798_87 () (_ BitVec 64))
(declare-fun temp798_88 () (_ BitVec 64))
(declare-fun temp798_89 () (_ BitVec 64))
(declare-fun temp798_90 () (_ BitVec 64))
(declare-fun temp798_91 () (_ BitVec 64))
(declare-fun temp798_92 () (_ BitVec 64))
(declare-fun temp798_93 () (_ BitVec 64))
(declare-fun temp798_94 () (_ BitVec 64))
(declare-fun temp798_95 () (_ BitVec 64))
(declare-fun temp798_96 () (_ BitVec 64))
(declare-fun temp798_97 () (_ BitVec 64))
(declare-fun temp798_98 () (_ BitVec 64))
(declare-fun temp798_99 () (_ BitVec 64))
(declare-fun temp798_100 () (_ BitVec 64))
(declare-fun temp798_101 () (_ BitVec 64))
(declare-fun temp798_102 () (_ BitVec 64))
(declare-fun temp798_103 () (_ BitVec 64))
(declare-fun temp798_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp798_105 () (_ BitVec 64))
(declare-fun temp798_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp798_107 () (_ BitVec 64))
(declare-fun temp798_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp798_109 () (_ BitVec 64))
(declare-fun temp798_110 () (_ BitVec 64))
(declare-fun temp798_111 () (_ BitVec 64))
(declare-fun temp798_112 () (_ BitVec 64))
(declare-fun temp798_113 () (_ BitVec 64))
(declare-fun temp798_114 () (_ BitVec 64))
(declare-fun temp798_115 () (_ BitVec 64))
(declare-fun temp798_116 () (_ BitVec 64))
(declare-fun temp798_117 () (_ BitVec 64))
(declare-fun temp798_118 () (_ BitVec 64))
(declare-fun temp798_119 () (_ BitVec 64))
(declare-fun temp798_120 () (_ BitVec 64))
(declare-fun temp798_121 () (_ BitVec 64))
(declare-fun temp798_122 () (_ BitVec 64))
(declare-fun temp798_123 () (_ BitVec 64))
(declare-fun temp798_124 () (_ BitVec 64))
(declare-fun temp798_126 () (_ BitVec 64))
(declare-fun temp798_127 () (_ BitVec 64))
(declare-fun temp798_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp798_128 () (_ BitVec 64))
(declare-fun temp798_129 () (_ BitVec 64))
(declare-fun temp798_131 () (_ BitVec 64))
(declare-fun temp798_132 () (_ BitVec 64))
(declare-fun temp798_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp798_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp798_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp798_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp798_136 () (_ BitVec 64))
(declare-fun temp798_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp798_139 () (_ BitVec 64))
(declare-fun temp798_140 () (_ BitVec 64))
(declare-fun temp798_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp798_141 () (_ BitVec 64))
(declare-fun temp798_143 () (_ BitVec 64))
(declare-fun temp798_144 () (_ BitVec 64))
(declare-fun temp798_142 () (_ BitVec 64))
(declare-fun temp798_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp798_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp798_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp798_148 () (_ BitVec 64))
(declare-fun temp798_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp798_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp798_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var998322 () (_ BitVec 64))
(declare-fun temp798_152 () (_ BitVec 64))
(declare-fun var998323 () (_ BitVec 64))
(declare-fun temp798_153 () (_ BitVec 64))
(assert (= temp798_1 #x0000000000000003))
(assert (= var465453 temp798_1))
(assert (= temp798_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp798_2)))
(assert (= temp798_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp798_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp798_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp798_4)))
(assert (= temp798_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp798_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp798_6 #x0000000000000000))
(assert (= var465488 temp798_6))
(assert (= temp798_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp798_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp798_8 #x0000000000000001))
(assert (= var465522 temp798_8))
(assert (= temp798_10 #x0000000000000000))
(assert (= temp798_9 temp798_10))
(assert (= temp798_12 #x0000000000000003))
(assert (= temp798_11 temp798_12))
(assert (= temp798_13 #x0000000000000000))
(assert (= var863614 temp798_13))
(assert (= temp798_14 #x0000000000000001))
(assert (= var863635 temp798_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp798_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp798_15)))
(assert (= temp798_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp798_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_17 #x0000000000000000))
(assert (= var997373 temp798_17))
(assert (= temp798_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp798_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_19 #x0000000000000000))
(assert (= var997418 temp798_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp798_20 #x0000000000000000))
(assert (= temp798_21 temp798_20))
(assert (= temp798_22 (select ARGNAME_padding_NAMEEND_VAL temp798_21)))
(assert (= temp798_23 #x0000000000000001))
(assert (= temp798_24 temp798_23))
(assert (= temp798_25 (select ARGNAME_padding_NAMEEND_VAL temp798_24)))
(assert (= temp798_26 #x0000000000000002))
(assert (= temp798_27 temp798_26))
(assert (= temp798_28 (select ARGNAME_padding_NAMEEND_VAL temp798_27)))
(assert (= temp798_29 #x0000000000000003))
(assert (= temp798_30 temp798_29))
(assert (= temp798_31 (select ARGNAME_padding_NAMEEND_VAL temp798_30)))
(assert (= temp798_32 #x0000000000000004))
(assert (= temp798_33 temp798_32))
(assert (= temp798_34 (select ARGNAME_padding_NAMEEND_VAL temp798_33)))
(assert (= temp798_35 #x0000000000000005))
(assert (= temp798_36 temp798_35))
(assert (= temp798_37 (select ARGNAME_padding_NAMEEND_VAL temp798_36)))
(assert (= temp798_38 #x0000000000000000))
(assert (= temp798_39 #x0000000000000000))
(assert (= temp798_40 temp798_39))
(assert (= temp798_41 (select ARGNAME_padding_NAMEEND_VAL temp798_40)))
(assert (= temp798_42 #x0000000000000000))
(assert (= temp798_43 #x0000000000000001))
(assert (= temp798_44 temp798_43))
(assert (= temp798_45 (select ARGNAME_padding_NAMEEND_VAL temp798_44)))
(assert (= temp798_46 #x0000000000000000))
(assert (= temp798_47 #x0000000000000002))
(assert (= temp798_48 temp798_47))
(assert (= temp798_49 (select ARGNAME_padding_NAMEEND_VAL temp798_48)))
(assert (= temp798_50 #x0000000000000000))
(assert (= temp798_51 #x0000000000000003))
(assert (= temp798_52 temp798_51))
(assert (= temp798_53 (select ARGNAME_padding_NAMEEND_VAL temp798_52)))
(assert (= temp798_54 #x0000000000000000))
(assert (= temp798_55 #x0000000000000004))
(assert (= temp798_56 temp798_55))
(assert (= temp798_57 (select ARGNAME_padding_NAMEEND_VAL temp798_56)))
(assert (= temp798_58 #x0000000000000000))
(assert (= temp798_59 #x0000000000000005))
(assert (= temp798_60 temp798_59))
(assert (= temp798_61 (select ARGNAME_padding_NAMEEND_VAL temp798_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp798_41 temp798_38)
             (bvslt temp798_45 temp798_42)
             (bvslt temp798_49 temp798_46)
             (bvslt temp798_53 temp798_50)
             (bvslt temp798_57 temp798_54)
             (bvslt temp798_61 temp798_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_62 #x0000000000000000))
(assert (= var1716002 temp798_62))
(assert (= temp798_63 #x0000000000000000))
(assert (= temp798_64 temp798_63))
(assert (= temp798_65 (select ARGNAME_stride_NAMEEND_VAL temp798_64)))
(assert (= temp798_66 #x0000000000000001))
(assert (= temp798_67 temp798_66))
(assert (= temp798_68 (select ARGNAME_stride_NAMEEND_VAL temp798_67)))
(assert (= temp798_69 #x0000000000000002))
(assert (= temp798_70 temp798_69))
(assert (= temp798_71 (select ARGNAME_stride_NAMEEND_VAL temp798_70)))
(assert (= temp798_72 #x0000000000000003))
(assert (= temp798_73 temp798_72))
(assert (= temp798_74 (select ARGNAME_stride_NAMEEND_VAL temp798_73)))
(assert (= temp798_75 #x0000000000000004))
(assert (= temp798_76 temp798_75))
(assert (= temp798_77 (select ARGNAME_stride_NAMEEND_VAL temp798_76)))
(assert (= temp798_78 #x0000000000000005))
(assert (= temp798_79 temp798_78))
(assert (= temp798_80 (select ARGNAME_stride_NAMEEND_VAL temp798_79)))
(assert (= temp798_81 #x0000000000000000))
(assert (= temp798_82 #x0000000000000000))
(assert (= temp798_83 temp798_82))
(assert (= temp798_84 (select ARGNAME_stride_NAMEEND_VAL temp798_83)))
(assert (= temp798_85 #x0000000000000000))
(assert (= temp798_86 #x0000000000000001))
(assert (= temp798_87 temp798_86))
(assert (= temp798_88 (select ARGNAME_stride_NAMEEND_VAL temp798_87)))
(assert (= temp798_89 #x0000000000000000))
(assert (= temp798_90 #x0000000000000002))
(assert (= temp798_91 temp798_90))
(assert (= temp798_92 (select ARGNAME_stride_NAMEEND_VAL temp798_91)))
(assert (= temp798_93 #x0000000000000000))
(assert (= temp798_94 #x0000000000000003))
(assert (= temp798_95 temp798_94))
(assert (= temp798_96 (select ARGNAME_stride_NAMEEND_VAL temp798_95)))
(assert (= temp798_97 #x0000000000000000))
(assert (= temp798_98 #x0000000000000004))
(assert (= temp798_99 temp798_98))
(assert (= temp798_100 (select ARGNAME_stride_NAMEEND_VAL temp798_99)))
(assert (= temp798_101 #x0000000000000000))
(assert (= temp798_102 #x0000000000000005))
(assert (= temp798_103 temp798_102))
(assert (= temp798_104 (select ARGNAME_stride_NAMEEND_VAL temp798_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp798_84 temp798_81)
             (bvsle temp798_88 temp798_85)
             (bvsle temp798_92 temp798_89)
             (bvsle temp798_96 temp798_93)
             (bvsle temp798_100 temp798_97)
             (bvsle temp798_104 temp798_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_105 #x0000000000000000))
(assert (= var1716023 temp798_105))
(assert (= temp798_106 #x0000000000000000))
(assert (= var1704114 temp798_106))
(assert (= temp798_107 #x0000000000000000))
(assert (= temp798_108 temp798_107))
(assert (= temp798_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_108)))
(assert (= temp798_110 #x0000000000000001))
(assert (= temp798_111 temp798_110))
(assert (= temp798_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_111)))
(assert (= temp798_113 #x0000000000000002))
(assert (= temp798_114 temp798_113))
(assert (= temp798_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_114)))
(assert (= temp798_116 #x0000000000000003))
(assert (= temp798_117 temp798_116))
(assert (= temp798_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_117)))
(assert (= temp798_119 #x0000000000000004))
(assert (= temp798_120 temp798_119))
(assert (= temp798_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_120)))
(assert (= temp798_122 #x0000000000000005))
(assert (= temp798_123 temp798_122))
(assert (= temp798_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_123)))
(assert (= temp798_126 var1704114))
(assert (= temp798_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_126)))
(assert (= temp798_125 temp798_127))
(assert (= var1716068
   (ite (bvslt temp798_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_128 #x0000000000000000))
(assert (= var1716068 temp798_128))
(assert (= temp798_129 #x0000000000000000))
(assert (= var1704114 temp798_129))
(assert (= temp798_131 var1704114))
(assert (= temp798_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_131)))
(assert (= temp798_130 temp798_132))
(assert (= var1716090 (bvsmod temp798_130 ARGNAME_groups_NAMEEND)))
(assert (= temp798_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp798_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp798_134 #x0000000000000001))
(assert (= var1716091 temp798_134))
(assert (= var1716110 var1716000))
(assert (= temp798_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp798_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp798_136 #x0000000000000001))
(assert (= var1716111 temp798_136))
(assert (= temp798_137 #x0000000000000001))
(assert (= var1705002 temp798_137))
(assert (= temp798_139 var1705002))
(assert (= temp798_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_139)))
(assert (= temp798_138 temp798_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp798_138)))
(assert (= temp798_141 #x0000000000000000))
(assert (= var1704114 temp798_141))
(assert (= temp798_143 var1704114))
(assert (= temp798_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp798_143)))
(assert (= temp798_142 temp798_144))
(assert (= temp798_145 #x0000000000000002))
(assert (= var1979241 temp798_145))
(assert (= temp798_146 #x0000000000000001))
(assert (= var1716281 temp798_146))
(assert (= temp798_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp798_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp798_148 #x0000000000000001))
(assert (= var997490 temp798_148))
(assert (= temp798_149 #x0000000000000001))
(assert (= var997620 temp798_149))
(assert (= var3486185 var997620))
(assert (= temp798_150 #x0000000000000000))
(assert (= var3686207 temp798_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp798_151 #x0000000000000002))
(assert (= var3815043 temp798_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var998322 var997345))
(assert (= temp798_152 #x0000000000000000))
(assert (= var998323
   (ite (distinct var998322 temp798_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp798_153 #x0000000000000001))
(assert (= var997490 temp798_153))
(model-add temp798_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp798_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp798_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp798_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp798_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp798_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






