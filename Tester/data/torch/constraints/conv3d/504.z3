(declare-fun temp670_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp670_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp670_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp670_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp670_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp670_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp670_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp670_8 () (_ BitVec 64))
(declare-fun temp670_10 () (_ BitVec 64))
(declare-fun temp670_9 () (_ BitVec 64))
(declare-fun temp670_12 () (_ BitVec 64))
(declare-fun temp670_11 () (_ BitVec 64))
(declare-fun temp670_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp670_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp670_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp670_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp670_17 () (_ BitVec 64))
(declare-fun temp670_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp670_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp670_20 () (_ BitVec 64))
(declare-fun temp670_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp670_22 () (_ BitVec 64))
(declare-fun temp670_23 () (_ BitVec 64))
(declare-fun temp670_24 () (_ BitVec 64))
(declare-fun temp670_25 () (_ BitVec 64))
(declare-fun temp670_26 () (_ BitVec 64))
(declare-fun temp670_27 () (_ BitVec 64))
(declare-fun temp670_28 () (_ BitVec 64))
(declare-fun temp670_29 () (_ BitVec 64))
(declare-fun temp670_30 () (_ BitVec 64))
(declare-fun temp670_31 () (_ BitVec 64))
(declare-fun temp670_32 () (_ BitVec 64))
(declare-fun temp670_33 () (_ BitVec 64))
(declare-fun temp670_34 () (_ BitVec 64))
(declare-fun temp670_35 () (_ BitVec 64))
(declare-fun temp670_36 () (_ BitVec 64))
(declare-fun temp670_37 () (_ BitVec 64))
(declare-fun temp670_38 () (_ BitVec 64))
(declare-fun temp670_39 () (_ BitVec 64))
(declare-fun temp670_40 () (_ BitVec 64))
(declare-fun temp670_41 () (_ BitVec 64))
(declare-fun temp670_42 () (_ BitVec 64))
(declare-fun temp670_43 () (_ BitVec 64))
(declare-fun temp670_44 () (_ BitVec 64))
(declare-fun temp670_45 () (_ BitVec 64))
(declare-fun temp670_46 () (_ BitVec 64))
(declare-fun temp670_47 () (_ BitVec 64))
(declare-fun temp670_48 () (_ BitVec 64))
(declare-fun temp670_49 () (_ BitVec 64))
(declare-fun temp670_50 () (_ BitVec 64))
(declare-fun temp670_51 () (_ BitVec 64))
(declare-fun temp670_52 () (_ BitVec 64))
(declare-fun temp670_53 () (_ BitVec 64))
(declare-fun temp670_54 () (_ BitVec 64))
(declare-fun temp670_55 () (_ BitVec 64))
(declare-fun temp670_56 () (_ BitVec 64))
(declare-fun temp670_57 () (_ BitVec 64))
(declare-fun temp670_58 () (_ BitVec 64))
(declare-fun temp670_59 () (_ BitVec 64))
(declare-fun temp670_60 () (_ BitVec 64))
(declare-fun temp670_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp670_62 () (_ BitVec 64))
(declare-fun temp670_63 () (_ BitVec 64))
(declare-fun temp670_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp670_65 () (_ BitVec 64))
(declare-fun temp670_66 () (_ BitVec 64))
(declare-fun temp670_67 () (_ BitVec 64))
(declare-fun temp670_68 () (_ BitVec 64))
(declare-fun temp670_69 () (_ BitVec 64))
(declare-fun temp670_70 () (_ BitVec 64))
(declare-fun temp670_71 () (_ BitVec 64))
(declare-fun temp670_72 () (_ BitVec 64))
(declare-fun temp670_73 () (_ BitVec 64))
(declare-fun temp670_74 () (_ BitVec 64))
(declare-fun temp670_75 () (_ BitVec 64))
(declare-fun temp670_76 () (_ BitVec 64))
(declare-fun temp670_77 () (_ BitVec 64))
(declare-fun temp670_78 () (_ BitVec 64))
(declare-fun temp670_79 () (_ BitVec 64))
(declare-fun temp670_80 () (_ BitVec 64))
(declare-fun temp670_81 () (_ BitVec 64))
(declare-fun temp670_82 () (_ BitVec 64))
(declare-fun temp670_83 () (_ BitVec 64))
(declare-fun temp670_84 () (_ BitVec 64))
(declare-fun temp670_85 () (_ BitVec 64))
(declare-fun temp670_86 () (_ BitVec 64))
(declare-fun temp670_87 () (_ BitVec 64))
(declare-fun temp670_88 () (_ BitVec 64))
(declare-fun temp670_89 () (_ BitVec 64))
(declare-fun temp670_90 () (_ BitVec 64))
(declare-fun temp670_91 () (_ BitVec 64))
(declare-fun temp670_92 () (_ BitVec 64))
(declare-fun temp670_93 () (_ BitVec 64))
(declare-fun temp670_94 () (_ BitVec 64))
(declare-fun temp670_95 () (_ BitVec 64))
(declare-fun temp670_96 () (_ BitVec 64))
(declare-fun temp670_97 () (_ BitVec 64))
(declare-fun temp670_98 () (_ BitVec 64))
(declare-fun temp670_99 () (_ BitVec 64))
(declare-fun temp670_100 () (_ BitVec 64))
(declare-fun temp670_101 () (_ BitVec 64))
(declare-fun temp670_102 () (_ BitVec 64))
(declare-fun temp670_103 () (_ BitVec 64))
(declare-fun temp670_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp670_105 () (_ BitVec 64))
(declare-fun temp670_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp670_107 () (_ BitVec 64))
(declare-fun temp670_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp670_109 () (_ BitVec 64))
(declare-fun temp670_110 () (_ BitVec 64))
(declare-fun temp670_111 () (_ BitVec 64))
(declare-fun temp670_112 () (_ BitVec 64))
(declare-fun temp670_113 () (_ BitVec 64))
(declare-fun temp670_114 () (_ BitVec 64))
(declare-fun temp670_115 () (_ BitVec 64))
(declare-fun temp670_116 () (_ BitVec 64))
(declare-fun temp670_117 () (_ BitVec 64))
(declare-fun temp670_118 () (_ BitVec 64))
(declare-fun temp670_119 () (_ BitVec 64))
(declare-fun temp670_120 () (_ BitVec 64))
(declare-fun temp670_121 () (_ BitVec 64))
(declare-fun temp670_122 () (_ BitVec 64))
(declare-fun temp670_123 () (_ BitVec 64))
(declare-fun temp670_124 () (_ BitVec 64))
(declare-fun temp670_126 () (_ BitVec 64))
(declare-fun temp670_127 () (_ BitVec 64))
(declare-fun temp670_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp670_128 () (_ BitVec 64))
(declare-fun temp670_129 () (_ BitVec 64))
(declare-fun temp670_131 () (_ BitVec 64))
(declare-fun temp670_132 () (_ BitVec 64))
(declare-fun temp670_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp670_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp670_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp670_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp670_136 () (_ BitVec 64))
(declare-fun temp670_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp670_139 () (_ BitVec 64))
(declare-fun temp670_140 () (_ BitVec 64))
(declare-fun temp670_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp670_141 () (_ BitVec 64))
(declare-fun temp670_143 () (_ BitVec 64))
(declare-fun temp670_144 () (_ BitVec 64))
(declare-fun temp670_142 () (_ BitVec 64))
(declare-fun temp670_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp670_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp670_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp670_148 () (_ BitVec 64))
(declare-fun temp670_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp670_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp670_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp670_153 () (_ BitVec 64))
(declare-fun temp670_152 () (_ BitVec 64))
(declare-fun temp670_155 () (_ BitVec 64))
(declare-fun temp670_154 () (_ BitVec 64))
(declare-fun temp670_156 () (_ BitVec 64))
(assert (= temp670_1 #x0000000000000003))
(assert (= var465453 temp670_1))
(assert (= temp670_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp670_2)))
(assert (= temp670_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp670_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp670_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp670_4)))
(assert (= temp670_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp670_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp670_6 #x0000000000000000))
(assert (= var465488 temp670_6))
(assert (= temp670_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp670_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp670_8 #x0000000000000001))
(assert (= var465522 temp670_8))
(assert (= temp670_10 #x0000000000000000))
(assert (= temp670_9 temp670_10))
(assert (= temp670_12 #x0000000000000003))
(assert (= temp670_11 temp670_12))
(assert (= temp670_13 #x0000000000000000))
(assert (= var863614 temp670_13))
(assert (= temp670_14 #x0000000000000001))
(assert (= var863635 temp670_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp670_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp670_15)))
(assert (= temp670_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp670_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp670_17 #x0000000000000000))
(assert (= var997373 temp670_17))
(assert (= temp670_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp670_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp670_19 #x0000000000000000))
(assert (= var997418 temp670_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp670_20 #x0000000000000000))
(assert (= temp670_21 temp670_20))
(assert (= temp670_22 (select ARGNAME_padding_NAMEEND_VAL temp670_21)))
(assert (= temp670_23 #x0000000000000001))
(assert (= temp670_24 temp670_23))
(assert (= temp670_25 (select ARGNAME_padding_NAMEEND_VAL temp670_24)))
(assert (= temp670_26 #x0000000000000002))
(assert (= temp670_27 temp670_26))
(assert (= temp670_28 (select ARGNAME_padding_NAMEEND_VAL temp670_27)))
(assert (= temp670_29 #x0000000000000003))
(assert (= temp670_30 temp670_29))
(assert (= temp670_31 (select ARGNAME_padding_NAMEEND_VAL temp670_30)))
(assert (= temp670_32 #x0000000000000004))
(assert (= temp670_33 temp670_32))
(assert (= temp670_34 (select ARGNAME_padding_NAMEEND_VAL temp670_33)))
(assert (= temp670_35 #x0000000000000005))
(assert (= temp670_36 temp670_35))
(assert (= temp670_37 (select ARGNAME_padding_NAMEEND_VAL temp670_36)))
(assert (= temp670_38 #x0000000000000000))
(assert (= temp670_39 #x0000000000000000))
(assert (= temp670_40 temp670_39))
(assert (= temp670_41 (select ARGNAME_padding_NAMEEND_VAL temp670_40)))
(assert (= temp670_42 #x0000000000000000))
(assert (= temp670_43 #x0000000000000001))
(assert (= temp670_44 temp670_43))
(assert (= temp670_45 (select ARGNAME_padding_NAMEEND_VAL temp670_44)))
(assert (= temp670_46 #x0000000000000000))
(assert (= temp670_47 #x0000000000000002))
(assert (= temp670_48 temp670_47))
(assert (= temp670_49 (select ARGNAME_padding_NAMEEND_VAL temp670_48)))
(assert (= temp670_50 #x0000000000000000))
(assert (= temp670_51 #x0000000000000003))
(assert (= temp670_52 temp670_51))
(assert (= temp670_53 (select ARGNAME_padding_NAMEEND_VAL temp670_52)))
(assert (= temp670_54 #x0000000000000000))
(assert (= temp670_55 #x0000000000000004))
(assert (= temp670_56 temp670_55))
(assert (= temp670_57 (select ARGNAME_padding_NAMEEND_VAL temp670_56)))
(assert (= temp670_58 #x0000000000000000))
(assert (= temp670_59 #x0000000000000005))
(assert (= temp670_60 temp670_59))
(assert (= temp670_61 (select ARGNAME_padding_NAMEEND_VAL temp670_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp670_41 temp670_38)
             (bvslt temp670_45 temp670_42)
             (bvslt temp670_49 temp670_46)
             (bvslt temp670_53 temp670_50)
             (bvslt temp670_57 temp670_54)
             (bvslt temp670_61 temp670_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp670_62 #x0000000000000000))
(assert (= var1716002 temp670_62))
(assert (= temp670_63 #x0000000000000000))
(assert (= temp670_64 temp670_63))
(assert (= temp670_65 (select ARGNAME_stride_NAMEEND_VAL temp670_64)))
(assert (= temp670_66 #x0000000000000001))
(assert (= temp670_67 temp670_66))
(assert (= temp670_68 (select ARGNAME_stride_NAMEEND_VAL temp670_67)))
(assert (= temp670_69 #x0000000000000002))
(assert (= temp670_70 temp670_69))
(assert (= temp670_71 (select ARGNAME_stride_NAMEEND_VAL temp670_70)))
(assert (= temp670_72 #x0000000000000003))
(assert (= temp670_73 temp670_72))
(assert (= temp670_74 (select ARGNAME_stride_NAMEEND_VAL temp670_73)))
(assert (= temp670_75 #x0000000000000004))
(assert (= temp670_76 temp670_75))
(assert (= temp670_77 (select ARGNAME_stride_NAMEEND_VAL temp670_76)))
(assert (= temp670_78 #x0000000000000005))
(assert (= temp670_79 temp670_78))
(assert (= temp670_80 (select ARGNAME_stride_NAMEEND_VAL temp670_79)))
(assert (= temp670_81 #x0000000000000000))
(assert (= temp670_82 #x0000000000000000))
(assert (= temp670_83 temp670_82))
(assert (= temp670_84 (select ARGNAME_stride_NAMEEND_VAL temp670_83)))
(assert (= temp670_85 #x0000000000000000))
(assert (= temp670_86 #x0000000000000001))
(assert (= temp670_87 temp670_86))
(assert (= temp670_88 (select ARGNAME_stride_NAMEEND_VAL temp670_87)))
(assert (= temp670_89 #x0000000000000000))
(assert (= temp670_90 #x0000000000000002))
(assert (= temp670_91 temp670_90))
(assert (= temp670_92 (select ARGNAME_stride_NAMEEND_VAL temp670_91)))
(assert (= temp670_93 #x0000000000000000))
(assert (= temp670_94 #x0000000000000003))
(assert (= temp670_95 temp670_94))
(assert (= temp670_96 (select ARGNAME_stride_NAMEEND_VAL temp670_95)))
(assert (= temp670_97 #x0000000000000000))
(assert (= temp670_98 #x0000000000000004))
(assert (= temp670_99 temp670_98))
(assert (= temp670_100 (select ARGNAME_stride_NAMEEND_VAL temp670_99)))
(assert (= temp670_101 #x0000000000000000))
(assert (= temp670_102 #x0000000000000005))
(assert (= temp670_103 temp670_102))
(assert (= temp670_104 (select ARGNAME_stride_NAMEEND_VAL temp670_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp670_84 temp670_81)
             (bvsle temp670_88 temp670_85)
             (bvsle temp670_92 temp670_89)
             (bvsle temp670_96 temp670_93)
             (bvsle temp670_100 temp670_97)
             (bvsle temp670_104 temp670_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp670_105 #x0000000000000000))
(assert (= var1716023 temp670_105))
(assert (= temp670_106 #x0000000000000000))
(assert (= var1704114 temp670_106))
(assert (= temp670_107 #x0000000000000000))
(assert (= temp670_108 temp670_107))
(assert (= temp670_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_108)))
(assert (= temp670_110 #x0000000000000001))
(assert (= temp670_111 temp670_110))
(assert (= temp670_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_111)))
(assert (= temp670_113 #x0000000000000002))
(assert (= temp670_114 temp670_113))
(assert (= temp670_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_114)))
(assert (= temp670_116 #x0000000000000003))
(assert (= temp670_117 temp670_116))
(assert (= temp670_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_117)))
(assert (= temp670_119 #x0000000000000004))
(assert (= temp670_120 temp670_119))
(assert (= temp670_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_120)))
(assert (= temp670_122 #x0000000000000005))
(assert (= temp670_123 temp670_122))
(assert (= temp670_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_123)))
(assert (= temp670_126 var1704114))
(assert (= temp670_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_126)))
(assert (= temp670_125 temp670_127))
(assert (= var1716068
   (ite (bvslt temp670_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp670_128 #x0000000000000000))
(assert (= var1716068 temp670_128))
(assert (= temp670_129 #x0000000000000000))
(assert (= var1704114 temp670_129))
(assert (= temp670_131 var1704114))
(assert (= temp670_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_131)))
(assert (= temp670_130 temp670_132))
(assert (= var1716090 (bvsmod temp670_130 ARGNAME_groups_NAMEEND)))
(assert (= temp670_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp670_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp670_134 #x0000000000000001))
(assert (= var1716091 temp670_134))
(assert (= var1716110 var1716000))
(assert (= temp670_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp670_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp670_136 #x0000000000000001))
(assert (= var1716111 temp670_136))
(assert (= temp670_137 #x0000000000000001))
(assert (= var1705002 temp670_137))
(assert (= temp670_139 var1705002))
(assert (= temp670_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_139)))
(assert (= temp670_138 temp670_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp670_138)))
(assert (= temp670_141 #x0000000000000000))
(assert (= var1704114 temp670_141))
(assert (= temp670_143 var1704114))
(assert (= temp670_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp670_143)))
(assert (= temp670_142 temp670_144))
(assert (= temp670_145 #x0000000000000002))
(assert (= var1979241 temp670_145))
(assert (= temp670_146 #x0000000000000001))
(assert (= var1716281 temp670_146))
(assert (= temp670_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp670_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp670_148 #x0000000000000001))
(assert (= var997490 temp670_148))
(assert (= temp670_149 #x0000000000000001))
(assert (= var997620 temp670_149))
(assert (= var3486185 var997620))
(assert (= temp670_150 #x0000000000000000))
(assert (= var3686207 temp670_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp670_151 #x0000000000000002))
(assert (= var3815043 temp670_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp670_153 #xffffffffffffffff))
(assert (= temp670_152 temp670_153))
(assert (= temp670_155 #xffffffffffffffff))
(assert (= temp670_154 temp670_155))
(assert (= temp670_156 #x0000000000000001))
(assert (= var997490 temp670_156))
(model-add temp670_1 () (_ BitVec 64) #x0000000000000003)
(model-add var465453 () (_ BitVec 64) #x0000000000000003)
(model-add temp670_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000004)
(model-add temp670_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000005)
(model-add var465478 () (_ BitVec 64) #x0000000000000005)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000004)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000001
                #x0000000000000000))
(model-add temp670_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                        #b1
                        #b0)))
(model-add temp670_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000005)
                #x0000000000000000
                #x0000000000000001))
(model-add temp670_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





