(declare-fun temp265_1 () (_ BitVec 64))
(declare-fun temp265_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp265_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp265_4 () (_ BitVec 64))
(declare-fun temp265_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp265_6 () (_ BitVec 64))
(declare-fun temp265_7 () (_ BitVec 64))
(declare-fun temp265_8 () (_ BitVec 64))
(declare-fun temp265_9 () (_ BitVec 64))
(declare-fun temp265_10 () (_ BitVec 64))
(declare-fun temp265_11 () (_ BitVec 64))
(declare-fun temp265_12 () (_ BitVec 64))
(declare-fun temp265_13 () (_ BitVec 64))
(declare-fun temp265_14 () (_ BitVec 64))
(declare-fun temp265_15 () (_ BitVec 64))
(declare-fun temp265_16 () (_ BitVec 64))
(declare-fun temp265_17 () (_ BitVec 64))
(declare-fun temp265_18 () (_ BitVec 64))
(declare-fun temp265_19 () (_ BitVec 64))
(declare-fun temp265_20 () (_ BitVec 64))
(declare-fun temp265_21 () (_ BitVec 64))
(declare-fun temp265_22 () (_ BitVec 64))
(declare-fun temp265_23 () (_ BitVec 64))
(declare-fun temp265_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp265_25 () (_ BitVec 64))
(declare-fun temp265_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp265_27 () (_ BitVec 64))
(declare-fun temp265_28 () (_ BitVec 64))
(declare-fun temp265_29 () (_ BitVec 64))
(declare-fun temp265_30 () (_ BitVec 64))
(declare-fun temp265_31 () (_ BitVec 64))
(declare-fun temp265_32 () (_ BitVec 64))
(declare-fun temp265_33 () (_ BitVec 64))
(declare-fun temp265_34 () (_ BitVec 64))
(declare-fun temp265_35 () (_ BitVec 64))
(declare-fun temp265_36 () (_ BitVec 64))
(declare-fun temp265_37 () (_ BitVec 64))
(declare-fun temp265_38 () (_ BitVec 64))
(declare-fun temp265_39 () (_ BitVec 64))
(declare-fun temp265_40 () (_ BitVec 64))
(declare-fun temp265_41 () (_ BitVec 64))
(declare-fun temp265_42 () (_ BitVec 64))
(declare-fun temp265_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp265_44 () (_ BitVec 64))
(declare-fun temp265_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp265_46 () (_ BitVec 64))
(declare-fun temp265_48 () (_ BitVec 64))
(declare-fun temp265_47 () (_ BitVec 64))
(declare-fun temp265_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp265_50 () (_ BitVec 64))
(declare-fun var920184 () (_ BitVec 64))
(declare-fun temp265_51 () (_ BitVec 64))
(declare-fun temp265_52 () (_ BitVec 64))
(declare-fun temp265_53 () (_ BitVec 64))
(declare-fun temp265_54 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp265_56 () (_ BitVec 64))
(declare-fun temp265_55 () (_ BitVec 64))
(declare-fun temp265_58 () (_ BitVec 64))
(declare-fun temp265_57 () (_ BitVec 64))
(declare-fun temp265_59 () (_ BitVec 64))
(declare-fun var2032934 () (_ BitVec 64))
(declare-fun temp265_61 () (_ BitVec 64))
(declare-fun temp265_60 () (_ BitVec 64))
(declare-fun temp265_62 () (_ BitVec 64))
(declare-fun var2622758 () (_ BitVec 64))
(declare-fun temp265_63 () (_ BitVec 64))
(declare-fun var2622792 () (_ BitVec 64))
(declare-fun temp265_64 () (_ BitVec 64))
(assert (= temp265_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp265_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp265_2 #x0000000000000001))
(assert (= var70396 temp265_2))
(assert (= temp265_3 #x0000000000000000))
(assert (= var65762 temp265_3))
(assert (= temp265_4 #x0000000000000000))
(assert (= temp265_5 temp265_4))
(assert (= temp265_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp265_5)))
(assert (= temp265_7 #x0000000000000001))
(assert (= temp265_8 temp265_7))
(assert (= temp265_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp265_8)))
(assert (= temp265_10 #x0000000000000002))
(assert (= temp265_11 temp265_10))
(assert (= temp265_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp265_11)))
(assert (= temp265_13 #x0000000000000003))
(assert (= temp265_14 temp265_13))
(assert (= temp265_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp265_14)))
(assert (= temp265_16 #x0000000000000004))
(assert (= temp265_17 temp265_16))
(assert (= temp265_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp265_17)))
(assert (= temp265_19 #x0000000000000005))
(assert (= temp265_20 temp265_19))
(assert (= temp265_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp265_20)))
(assert (= temp265_22 #x0000000000000000))
(assert (= temp265_23
   (ite (bvslt var65762 temp265_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp265_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp265_23)))
(assert (= var70398 temp265_24))
(assert (bvslt (ite (bvslt var65762 temp265_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp265_25 #x0000000000000000))
(assert (= temp265_26 temp265_25))
(assert (= temp265_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp265_26)))
(assert (= temp265_28 #x0000000000000001))
(assert (= temp265_29 temp265_28))
(assert (= temp265_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp265_29)))
(assert (= temp265_31 #x0000000000000002))
(assert (= temp265_32 temp265_31))
(assert (= temp265_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp265_32)))
(assert (= temp265_34 #x0000000000000003))
(assert (= temp265_35 temp265_34))
(assert (= temp265_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp265_35)))
(assert (= temp265_37 #x0000000000000004))
(assert (= temp265_38 temp265_37))
(assert (= temp265_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp265_38)))
(assert (= temp265_40 #x0000000000000005))
(assert (= temp265_41 temp265_40))
(assert (= temp265_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp265_41)))
(assert (= temp265_43 #x0000000000000000))
(assert (= temp265_44
   (ite (bvslt var70374 temp265_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp265_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp265_44)))
(assert (= var70399 temp265_45))
(assert (bvslt (ite (bvslt var70374 temp265_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp265_46 #x0000000000000001))
(assert (= var70400 temp265_46))
(assert (= temp265_48 #x0000000000000001))
(assert (= temp265_47 temp265_48))
(assert (= temp265_49 #x0000000000000005))
(assert (= var526834 temp265_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp265_50 #x0000000000000000))
(assert (= var920184 temp265_50))
(assert (= temp265_51 #x0000000000000000))
(assert (= var65762 temp265_51))
(assert (= temp265_52 #x0000000000000000))
(assert (= temp265_53
   (ite (bvslt var65762 temp265_52)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp265_54 (select ARGNAME_x_NAMEEND_DIMSIZE temp265_53)))
(assert (= var70423 temp265_54))
(assert (bvslt (ite (bvslt var65762 temp265_52)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp265_56 #x0000000000000000))
(assert (= temp265_55 temp265_56))
(assert (= temp265_58 #xffffffffffffffff))
(assert (= temp265_57 temp265_58))
(assert (= temp265_59 #x0000000000000001))
(assert (= var2032934 temp265_59))
(assert (= temp265_61 #x0000000000000001))
(assert (= temp265_60 temp265_61))
(assert (= temp265_62 #x0000000000000001))
(assert (= var2622758 temp265_62))
(assert (= temp265_63 #x0000000000000000))
(assert (= var2622792 temp265_63))
(assert (= temp265_64 #x0000000000000000))
(assert (= var2622792 temp265_64))
(model-add temp265_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp265_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))





