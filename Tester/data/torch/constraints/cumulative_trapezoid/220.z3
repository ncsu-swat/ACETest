(declare-fun temp660_1 () (_ BitVec 64))
(declare-fun temp660_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp660_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp660_4 () (_ BitVec 64))
(declare-fun temp660_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_6 () (_ BitVec 64))
(declare-fun temp660_7 () (_ BitVec 64))
(declare-fun temp660_8 () (_ BitVec 64))
(declare-fun temp660_9 () (_ BitVec 64))
(declare-fun temp660_10 () (_ BitVec 64))
(declare-fun temp660_11 () (_ BitVec 64))
(declare-fun temp660_12 () (_ BitVec 64))
(declare-fun temp660_13 () (_ BitVec 64))
(declare-fun temp660_14 () (_ BitVec 64))
(declare-fun temp660_15 () (_ BitVec 64))
(declare-fun temp660_16 () (_ BitVec 64))
(declare-fun temp660_17 () (_ BitVec 64))
(declare-fun temp660_18 () (_ BitVec 64))
(declare-fun temp660_19 () (_ BitVec 64))
(declare-fun temp660_20 () (_ BitVec 64))
(declare-fun temp660_21 () (_ BitVec 64))
(declare-fun temp660_22 () (_ BitVec 64))
(declare-fun temp660_23 () (_ BitVec 64))
(declare-fun temp660_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp660_25 () (_ BitVec 64))
(declare-fun temp660_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_27 () (_ BitVec 64))
(declare-fun temp660_28 () (_ BitVec 64))
(declare-fun temp660_29 () (_ BitVec 64))
(declare-fun temp660_30 () (_ BitVec 64))
(declare-fun temp660_31 () (_ BitVec 64))
(declare-fun temp660_32 () (_ BitVec 64))
(declare-fun temp660_33 () (_ BitVec 64))
(declare-fun temp660_34 () (_ BitVec 64))
(declare-fun temp660_35 () (_ BitVec 64))
(declare-fun temp660_36 () (_ BitVec 64))
(declare-fun temp660_37 () (_ BitVec 64))
(declare-fun temp660_38 () (_ BitVec 64))
(declare-fun temp660_39 () (_ BitVec 64))
(declare-fun temp660_40 () (_ BitVec 64))
(declare-fun temp660_41 () (_ BitVec 64))
(declare-fun temp660_42 () (_ BitVec 64))
(declare-fun temp660_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp660_44 () (_ BitVec 64))
(declare-fun temp660_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp660_46 () (_ BitVec 64))
(declare-fun temp660_48 () (_ BitVec 64))
(declare-fun temp660_47 () (_ BitVec 64))
(declare-fun temp660_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp660_50 () (_ BitVec 64))
(declare-fun temp660_51 () (_ BitVec 64))
(declare-fun temp660_52 () (_ BitVec 64))
(declare-fun temp660_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp660_55 () (_ BitVec 64))
(declare-fun temp660_54 () (_ BitVec 64))
(declare-fun temp660_57 () (_ BitVec 64))
(declare-fun temp660_56 () (_ BitVec 64))
(declare-fun temp660_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp660_59 () (_ BitVec 64))
(declare-fun var2688328 () (_ BitVec 64))
(declare-fun temp660_60 () (_ BitVec 64))
(declare-fun temp660_62 () (_ BitVec 64))
(declare-fun temp660_61 () (_ BitVec 64))
(declare-fun temp660_63 () (_ BitVec 64))
(declare-fun var3147046 () (_ BitVec 64))
(assert (= temp660_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp660_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_2 #x0000000000000001))
(assert (= var70396 temp660_2))
(assert (= temp660_3 #x0000000000000000))
(assert (= var65762 temp660_3))
(assert (= temp660_4 #x0000000000000000))
(assert (= temp660_5 temp660_4))
(assert (= temp660_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp660_5)))
(assert (= temp660_7 #x0000000000000001))
(assert (= temp660_8 temp660_7))
(assert (= temp660_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp660_8)))
(assert (= temp660_10 #x0000000000000002))
(assert (= temp660_11 temp660_10))
(assert (= temp660_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp660_11)))
(assert (= temp660_13 #x0000000000000003))
(assert (= temp660_14 temp660_13))
(assert (= temp660_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp660_14)))
(assert (= temp660_16 #x0000000000000004))
(assert (= temp660_17 temp660_16))
(assert (= temp660_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp660_17)))
(assert (= temp660_19 #x0000000000000005))
(assert (= temp660_20 temp660_19))
(assert (= temp660_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp660_20)))
(assert (= temp660_22 #x0000000000000000))
(assert (= temp660_23
   (ite (bvslt var65762 temp660_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp660_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp660_23)))
(assert (= var70398 temp660_24))
(assert (bvslt (ite (bvslt var65762 temp660_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp660_25 #x0000000000000000))
(assert (= temp660_26 temp660_25))
(assert (= temp660_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp660_26)))
(assert (= temp660_28 #x0000000000000001))
(assert (= temp660_29 temp660_28))
(assert (= temp660_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp660_29)))
(assert (= temp660_31 #x0000000000000002))
(assert (= temp660_32 temp660_31))
(assert (= temp660_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp660_32)))
(assert (= temp660_34 #x0000000000000003))
(assert (= temp660_35 temp660_34))
(assert (= temp660_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp660_35)))
(assert (= temp660_37 #x0000000000000004))
(assert (= temp660_38 temp660_37))
(assert (= temp660_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp660_38)))
(assert (= temp660_40 #x0000000000000005))
(assert (= temp660_41 temp660_40))
(assert (= temp660_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp660_41)))
(assert (= temp660_43 #x0000000000000000))
(assert (= temp660_44
   (ite (bvslt var70374 temp660_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp660_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp660_44)))
(assert (= var70399 temp660_45))
(assert (bvslt (ite (bvslt var70374 temp660_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp660_46 #x0000000000000001))
(assert (= var70400 temp660_46))
(assert (= temp660_48 #x0000000000000001))
(assert (= temp660_47 temp660_48))
(assert (= temp660_49 #x0000000000000005))
(assert (= var526834 temp660_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp660_50 #x0000000000000000))
(assert (= var65762 temp660_50))
(assert (= temp660_51 #x0000000000000000))
(assert (= temp660_52
   (ite (bvslt var65762 temp660_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp660_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp660_52)))
(assert (= var70423 temp660_53))
(assert (bvslt (ite (bvslt var65762 temp660_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp660_55 #x0000000000000000))
(assert (= temp660_54 temp660_55))
(assert (= temp660_57 #xffffffffffffffff))
(assert (= temp660_56 temp660_57))
(assert (= temp660_58 #x0000000000000001))
(assert (= var2688294 temp660_58))
(assert (= temp660_59 #x0000000000000000))
(assert (= var2688328 temp660_59))
(assert (= temp660_60 #x0000000000000000))
(assert (= var2688328 temp660_60))
(assert (= temp660_62 #x0000000000000001))
(assert (= temp660_61 temp660_62))
(assert (= temp660_63 #x0000000000000001))
(assert (= var3147046 temp660_63))
(model-add temp660_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp660_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




