(declare-fun temp778_1 () (_ BitVec 64))
(declare-fun temp778_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp778_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp778_4 () (_ BitVec 64))
(declare-fun temp778_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_6 () (_ BitVec 64))
(declare-fun temp778_7 () (_ BitVec 64))
(declare-fun temp778_8 () (_ BitVec 64))
(declare-fun temp778_9 () (_ BitVec 64))
(declare-fun temp778_10 () (_ BitVec 64))
(declare-fun temp778_11 () (_ BitVec 64))
(declare-fun temp778_12 () (_ BitVec 64))
(declare-fun temp778_13 () (_ BitVec 64))
(declare-fun temp778_14 () (_ BitVec 64))
(declare-fun temp778_15 () (_ BitVec 64))
(declare-fun temp778_16 () (_ BitVec 64))
(declare-fun temp778_17 () (_ BitVec 64))
(declare-fun temp778_18 () (_ BitVec 64))
(declare-fun temp778_19 () (_ BitVec 64))
(declare-fun temp778_20 () (_ BitVec 64))
(declare-fun temp778_21 () (_ BitVec 64))
(declare-fun temp778_22 () (_ BitVec 64))
(declare-fun temp778_23 () (_ BitVec 64))
(declare-fun temp778_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp778_25 () (_ BitVec 64))
(declare-fun temp778_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_27 () (_ BitVec 64))
(declare-fun temp778_28 () (_ BitVec 64))
(declare-fun temp778_29 () (_ BitVec 64))
(declare-fun temp778_30 () (_ BitVec 64))
(declare-fun temp778_31 () (_ BitVec 64))
(declare-fun temp778_32 () (_ BitVec 64))
(declare-fun temp778_33 () (_ BitVec 64))
(declare-fun temp778_34 () (_ BitVec 64))
(declare-fun temp778_35 () (_ BitVec 64))
(declare-fun temp778_36 () (_ BitVec 64))
(declare-fun temp778_37 () (_ BitVec 64))
(declare-fun temp778_38 () (_ BitVec 64))
(declare-fun temp778_39 () (_ BitVec 64))
(declare-fun temp778_40 () (_ BitVec 64))
(declare-fun temp778_41 () (_ BitVec 64))
(declare-fun temp778_42 () (_ BitVec 64))
(declare-fun temp778_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp778_44 () (_ BitVec 64))
(declare-fun temp778_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp778_46 () (_ BitVec 64))
(declare-fun temp778_48 () (_ BitVec 64))
(declare-fun temp778_47 () (_ BitVec 64))
(declare-fun temp778_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp778_50 () (_ BitVec 64))
(declare-fun temp778_51 () (_ BitVec 64))
(declare-fun temp778_52 () (_ BitVec 64))
(declare-fun temp778_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp778_55 () (_ BitVec 64))
(declare-fun temp778_54 () (_ BitVec 64))
(declare-fun temp778_57 () (_ BitVec 64))
(declare-fun temp778_56 () (_ BitVec 64))
(declare-fun temp778_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp778_60 () (_ BitVec 64))
(declare-fun temp778_59 () (_ BitVec 64))
(declare-fun temp778_61 () (_ BitVec 64))
(declare-fun var3278118 () (_ BitVec 64))
(declare-fun temp778_62 () (_ BitVec 64))
(declare-fun var3278152 () (_ BitVec 64))
(declare-fun temp778_63 () (_ BitVec 64))
(assert (= temp778_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp778_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_2 #x0000000000000001))
(assert (= var70396 temp778_2))
(assert (= temp778_3 #x0000000000000000))
(assert (= var65762 temp778_3))
(assert (= temp778_4 #x0000000000000000))
(assert (= temp778_5 temp778_4))
(assert (= temp778_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp778_5)))
(assert (= temp778_7 #x0000000000000001))
(assert (= temp778_8 temp778_7))
(assert (= temp778_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp778_8)))
(assert (= temp778_10 #x0000000000000002))
(assert (= temp778_11 temp778_10))
(assert (= temp778_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp778_11)))
(assert (= temp778_13 #x0000000000000003))
(assert (= temp778_14 temp778_13))
(assert (= temp778_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp778_14)))
(assert (= temp778_16 #x0000000000000004))
(assert (= temp778_17 temp778_16))
(assert (= temp778_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp778_17)))
(assert (= temp778_19 #x0000000000000005))
(assert (= temp778_20 temp778_19))
(assert (= temp778_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp778_20)))
(assert (= temp778_22 #x0000000000000000))
(assert (= temp778_23
   (ite (bvslt var65762 temp778_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp778_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp778_23)))
(assert (= var70398 temp778_24))
(assert (bvslt (ite (bvslt var65762 temp778_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp778_25 #x0000000000000000))
(assert (= temp778_26 temp778_25))
(assert (= temp778_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp778_26)))
(assert (= temp778_28 #x0000000000000001))
(assert (= temp778_29 temp778_28))
(assert (= temp778_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp778_29)))
(assert (= temp778_31 #x0000000000000002))
(assert (= temp778_32 temp778_31))
(assert (= temp778_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp778_32)))
(assert (= temp778_34 #x0000000000000003))
(assert (= temp778_35 temp778_34))
(assert (= temp778_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp778_35)))
(assert (= temp778_37 #x0000000000000004))
(assert (= temp778_38 temp778_37))
(assert (= temp778_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp778_38)))
(assert (= temp778_40 #x0000000000000005))
(assert (= temp778_41 temp778_40))
(assert (= temp778_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp778_41)))
(assert (= temp778_43 #x0000000000000000))
(assert (= temp778_44
   (ite (bvslt var70374 temp778_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp778_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp778_44)))
(assert (= var70399 temp778_45))
(assert (bvslt (ite (bvslt var70374 temp778_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_46 #x0000000000000001))
(assert (= var70400 temp778_46))
(assert (= temp778_48 #x0000000000000001))
(assert (= temp778_47 temp778_48))
(assert (= temp778_49 #x0000000000000005))
(assert (= var526834 temp778_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp778_50 #x0000000000000000))
(assert (= var65762 temp778_50))
(assert (= temp778_51 #x0000000000000000))
(assert (= temp778_52
   (ite (bvslt var65762 temp778_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp778_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp778_52)))
(assert (= var70423 temp778_53))
(assert (bvslt (ite (bvslt var65762 temp778_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp778_55 #x0000000000000000))
(assert (= temp778_54 temp778_55))
(assert (= temp778_57 #xffffffffffffffff))
(assert (= temp778_56 temp778_57))
(assert (= temp778_58 #x0000000000000001))
(assert (= var2688294 temp778_58))
(assert (= temp778_60 #x0000000000000001))
(assert (= temp778_59 temp778_60))
(assert (= temp778_61 #x0000000000000001))
(assert (= var3278118 temp778_61))
(assert (= temp778_62 #x0000000000000000))
(assert (= var3278152 temp778_62))
(assert (= temp778_63 #x0000000000000000))
(assert (= var3278152 temp778_63))
(model-add temp778_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp778_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




