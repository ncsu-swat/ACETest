(declare-fun temp278_1 () (_ BitVec 64))
(declare-fun temp278_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp278_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp278_4 () (_ BitVec 64))
(declare-fun temp278_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_6 () (_ BitVec 64))
(declare-fun temp278_7 () (_ BitVec 64))
(declare-fun temp278_8 () (_ BitVec 64))
(declare-fun temp278_9 () (_ BitVec 64))
(declare-fun temp278_10 () (_ BitVec 64))
(declare-fun temp278_11 () (_ BitVec 64))
(declare-fun temp278_12 () (_ BitVec 64))
(declare-fun temp278_13 () (_ BitVec 64))
(declare-fun temp278_14 () (_ BitVec 64))
(declare-fun temp278_15 () (_ BitVec 64))
(declare-fun temp278_16 () (_ BitVec 64))
(declare-fun temp278_17 () (_ BitVec 64))
(declare-fun temp278_18 () (_ BitVec 64))
(declare-fun temp278_19 () (_ BitVec 64))
(declare-fun temp278_20 () (_ BitVec 64))
(declare-fun temp278_21 () (_ BitVec 64))
(declare-fun temp278_22 () (_ BitVec 64))
(declare-fun temp278_23 () (_ BitVec 64))
(declare-fun temp278_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp278_25 () (_ BitVec 64))
(declare-fun temp278_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_27 () (_ BitVec 64))
(declare-fun temp278_28 () (_ BitVec 64))
(declare-fun temp278_29 () (_ BitVec 64))
(declare-fun temp278_30 () (_ BitVec 64))
(declare-fun temp278_31 () (_ BitVec 64))
(declare-fun temp278_32 () (_ BitVec 64))
(declare-fun temp278_33 () (_ BitVec 64))
(declare-fun temp278_34 () (_ BitVec 64))
(declare-fun temp278_35 () (_ BitVec 64))
(declare-fun temp278_36 () (_ BitVec 64))
(declare-fun temp278_37 () (_ BitVec 64))
(declare-fun temp278_38 () (_ BitVec 64))
(declare-fun temp278_39 () (_ BitVec 64))
(declare-fun temp278_40 () (_ BitVec 64))
(declare-fun temp278_41 () (_ BitVec 64))
(declare-fun temp278_42 () (_ BitVec 64))
(declare-fun temp278_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp278_44 () (_ BitVec 64))
(declare-fun temp278_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp278_46 () (_ BitVec 64))
(declare-fun temp278_48 () (_ BitVec 64))
(declare-fun temp278_47 () (_ BitVec 64))
(declare-fun temp278_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp278_50 () (_ BitVec 64))
(declare-fun var920184 () (_ BitVec 64))
(declare-fun temp278_51 () (_ BitVec 64))
(declare-fun temp278_52 () (_ BitVec 64))
(declare-fun temp278_53 () (_ BitVec 64))
(declare-fun temp278_54 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp278_56 () (_ BitVec 64))
(declare-fun temp278_55 () (_ BitVec 64))
(declare-fun temp278_58 () (_ BitVec 64))
(declare-fun temp278_57 () (_ BitVec 64))
(declare-fun temp278_59 () (_ BitVec 64))
(declare-fun var2032934 () (_ BitVec 64))
(declare-fun temp278_61 () (_ BitVec 64))
(declare-fun temp278_60 () (_ BitVec 64))
(declare-fun temp278_62 () (_ BitVec 64))
(declare-fun var2557222 () (_ BitVec 64))
(declare-fun temp278_63 () (_ BitVec 64))
(declare-fun var2557270 () (_ BitVec 64))
(declare-fun temp278_64 () (_ BitVec 64))
(assert (= temp278_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp278_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_2 #x0000000000000001))
(assert (= var70396 temp278_2))
(assert (= temp278_3 #x0000000000000000))
(assert (= var65762 temp278_3))
(assert (= temp278_4 #x0000000000000000))
(assert (= temp278_5 temp278_4))
(assert (= temp278_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp278_5)))
(assert (= temp278_7 #x0000000000000001))
(assert (= temp278_8 temp278_7))
(assert (= temp278_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp278_8)))
(assert (= temp278_10 #x0000000000000002))
(assert (= temp278_11 temp278_10))
(assert (= temp278_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp278_11)))
(assert (= temp278_13 #x0000000000000003))
(assert (= temp278_14 temp278_13))
(assert (= temp278_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp278_14)))
(assert (= temp278_16 #x0000000000000004))
(assert (= temp278_17 temp278_16))
(assert (= temp278_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp278_17)))
(assert (= temp278_19 #x0000000000000005))
(assert (= temp278_20 temp278_19))
(assert (= temp278_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp278_20)))
(assert (= temp278_22 #x0000000000000000))
(assert (= temp278_23
   (ite (bvslt var65762 temp278_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp278_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp278_23)))
(assert (= var70398 temp278_24))
(assert (bvslt (ite (bvslt var65762 temp278_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp278_25 #x0000000000000000))
(assert (= temp278_26 temp278_25))
(assert (= temp278_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp278_26)))
(assert (= temp278_28 #x0000000000000001))
(assert (= temp278_29 temp278_28))
(assert (= temp278_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp278_29)))
(assert (= temp278_31 #x0000000000000002))
(assert (= temp278_32 temp278_31))
(assert (= temp278_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp278_32)))
(assert (= temp278_34 #x0000000000000003))
(assert (= temp278_35 temp278_34))
(assert (= temp278_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp278_35)))
(assert (= temp278_37 #x0000000000000004))
(assert (= temp278_38 temp278_37))
(assert (= temp278_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp278_38)))
(assert (= temp278_40 #x0000000000000005))
(assert (= temp278_41 temp278_40))
(assert (= temp278_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp278_41)))
(assert (= temp278_43 #x0000000000000000))
(assert (= temp278_44
   (ite (bvslt var70374 temp278_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp278_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp278_44)))
(assert (= var70399 temp278_45))
(assert (bvslt (ite (bvslt var70374 temp278_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_46 #x0000000000000001))
(assert (= var70400 temp278_46))
(assert (= temp278_48 #x0000000000000001))
(assert (= temp278_47 temp278_48))
(assert (= temp278_49 #x0000000000000005))
(assert (= var526834 temp278_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp278_50 #x0000000000000000))
(assert (= var920184 temp278_50))
(assert (= temp278_51 #x0000000000000000))
(assert (= var65762 temp278_51))
(assert (= temp278_52 #x0000000000000000))
(assert (= temp278_53
   (ite (bvslt var65762 temp278_52)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp278_54 (select ARGNAME_x_NAMEEND_DIMSIZE temp278_53)))
(assert (= var70423 temp278_54))
(assert (bvslt (ite (bvslt var65762 temp278_52)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp278_56 #x0000000000000000))
(assert (= temp278_55 temp278_56))
(assert (= temp278_58 #xffffffffffffffff))
(assert (= temp278_57 temp278_58))
(assert (= temp278_59 #x0000000000000001))
(assert (= var2032934 temp278_59))
(assert (= temp278_61 #x0000000000000001))
(assert (= temp278_60 temp278_61))
(assert (= temp278_62 #x0000000000000001))
(assert (= var2557222 temp278_62))
(assert (= temp278_63 #x0000000000000000))
(assert (= var2557270 temp278_63))
(assert (= temp278_64 #x0000000000000000))
(assert (= var2557270 temp278_64))
(model-add temp278_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp278_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




