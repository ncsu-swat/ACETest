(declare-fun temp780_1 () (_ BitVec 64))
(declare-fun temp780_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp780_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp780_4 () (_ BitVec 64))
(declare-fun temp780_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_6 () (_ BitVec 64))
(declare-fun temp780_7 () (_ BitVec 64))
(declare-fun temp780_8 () (_ BitVec 64))
(declare-fun temp780_9 () (_ BitVec 64))
(declare-fun temp780_10 () (_ BitVec 64))
(declare-fun temp780_11 () (_ BitVec 64))
(declare-fun temp780_12 () (_ BitVec 64))
(declare-fun temp780_13 () (_ BitVec 64))
(declare-fun temp780_14 () (_ BitVec 64))
(declare-fun temp780_15 () (_ BitVec 64))
(declare-fun temp780_16 () (_ BitVec 64))
(declare-fun temp780_17 () (_ BitVec 64))
(declare-fun temp780_18 () (_ BitVec 64))
(declare-fun temp780_19 () (_ BitVec 64))
(declare-fun temp780_20 () (_ BitVec 64))
(declare-fun temp780_21 () (_ BitVec 64))
(declare-fun temp780_22 () (_ BitVec 64))
(declare-fun temp780_23 () (_ BitVec 64))
(declare-fun temp780_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp780_25 () (_ BitVec 64))
(declare-fun temp780_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_27 () (_ BitVec 64))
(declare-fun temp780_28 () (_ BitVec 64))
(declare-fun temp780_29 () (_ BitVec 64))
(declare-fun temp780_30 () (_ BitVec 64))
(declare-fun temp780_31 () (_ BitVec 64))
(declare-fun temp780_32 () (_ BitVec 64))
(declare-fun temp780_33 () (_ BitVec 64))
(declare-fun temp780_34 () (_ BitVec 64))
(declare-fun temp780_35 () (_ BitVec 64))
(declare-fun temp780_36 () (_ BitVec 64))
(declare-fun temp780_37 () (_ BitVec 64))
(declare-fun temp780_38 () (_ BitVec 64))
(declare-fun temp780_39 () (_ BitVec 64))
(declare-fun temp780_40 () (_ BitVec 64))
(declare-fun temp780_41 () (_ BitVec 64))
(declare-fun temp780_42 () (_ BitVec 64))
(declare-fun temp780_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp780_44 () (_ BitVec 64))
(declare-fun temp780_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp780_46 () (_ BitVec 64))
(declare-fun temp780_48 () (_ BitVec 64))
(declare-fun temp780_47 () (_ BitVec 64))
(declare-fun temp780_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp780_50 () (_ BitVec 64))
(declare-fun temp780_51 () (_ BitVec 64))
(declare-fun temp780_52 () (_ BitVec 64))
(declare-fun temp780_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp780_55 () (_ BitVec 64))
(declare-fun temp780_54 () (_ BitVec 64))
(declare-fun temp780_57 () (_ BitVec 64))
(declare-fun temp780_56 () (_ BitVec 64))
(declare-fun temp780_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp780_60 () (_ BitVec 64))
(declare-fun temp780_59 () (_ BitVec 64))
(declare-fun temp780_61 () (_ BitVec 64))
(declare-fun var3278118 () (_ BitVec 64))
(declare-fun temp780_62 () (_ BitVec 64))
(declare-fun var3278152 () (_ BitVec 64))
(declare-fun temp780_63 () (_ BitVec 64))
(assert (= temp780_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp780_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_2 #x0000000000000001))
(assert (= var70396 temp780_2))
(assert (= temp780_3 #x0000000000000000))
(assert (= var65762 temp780_3))
(assert (= temp780_4 #x0000000000000000))
(assert (= temp780_5 temp780_4))
(assert (= temp780_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp780_5)))
(assert (= temp780_7 #x0000000000000001))
(assert (= temp780_8 temp780_7))
(assert (= temp780_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp780_8)))
(assert (= temp780_10 #x0000000000000002))
(assert (= temp780_11 temp780_10))
(assert (= temp780_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp780_11)))
(assert (= temp780_13 #x0000000000000003))
(assert (= temp780_14 temp780_13))
(assert (= temp780_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp780_14)))
(assert (= temp780_16 #x0000000000000004))
(assert (= temp780_17 temp780_16))
(assert (= temp780_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp780_17)))
(assert (= temp780_19 #x0000000000000005))
(assert (= temp780_20 temp780_19))
(assert (= temp780_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp780_20)))
(assert (= temp780_22 #x0000000000000000))
(assert (= temp780_23
   (ite (bvslt var65762 temp780_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp780_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp780_23)))
(assert (= var70398 temp780_24))
(assert (bvslt (ite (bvslt var65762 temp780_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp780_25 #x0000000000000000))
(assert (= temp780_26 temp780_25))
(assert (= temp780_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp780_26)))
(assert (= temp780_28 #x0000000000000001))
(assert (= temp780_29 temp780_28))
(assert (= temp780_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp780_29)))
(assert (= temp780_31 #x0000000000000002))
(assert (= temp780_32 temp780_31))
(assert (= temp780_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp780_32)))
(assert (= temp780_34 #x0000000000000003))
(assert (= temp780_35 temp780_34))
(assert (= temp780_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp780_35)))
(assert (= temp780_37 #x0000000000000004))
(assert (= temp780_38 temp780_37))
(assert (= temp780_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp780_38)))
(assert (= temp780_40 #x0000000000000005))
(assert (= temp780_41 temp780_40))
(assert (= temp780_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp780_41)))
(assert (= temp780_43 #x0000000000000000))
(assert (= temp780_44
   (ite (bvslt var70374 temp780_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp780_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp780_44)))
(assert (= var70399 temp780_45))
(assert (bvslt (ite (bvslt var70374 temp780_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_46 #x0000000000000001))
(assert (= var70400 temp780_46))
(assert (= temp780_48 #x0000000000000001))
(assert (= temp780_47 temp780_48))
(assert (= temp780_49 #x0000000000000005))
(assert (= var526834 temp780_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp780_50 #x0000000000000000))
(assert (= var65762 temp780_50))
(assert (= temp780_51 #x0000000000000000))
(assert (= temp780_52
   (ite (bvslt var65762 temp780_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp780_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp780_52)))
(assert (= var70423 temp780_53))
(assert (bvslt (ite (bvslt var65762 temp780_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp780_55 #x0000000000000000))
(assert (= temp780_54 temp780_55))
(assert (= temp780_57 #xffffffffffffffff))
(assert (= temp780_56 temp780_57))
(assert (= temp780_58 #x0000000000000001))
(assert (= var2688294 temp780_58))
(assert (= temp780_60 #x0000000000000001))
(assert (= temp780_59 temp780_60))
(assert (= temp780_61 #x0000000000000001))
(assert (= var3278118 temp780_61))
(assert (= temp780_62 #x0000000000000000))
(assert (= var3278152 temp780_62))
(assert (= temp780_63 #x0000000000000000))
(assert (= var3278152 temp780_63))
(model-add temp780_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp780_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




