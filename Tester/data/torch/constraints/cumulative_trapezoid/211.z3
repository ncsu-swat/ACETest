(declare-fun temp628_1 () (_ BitVec 64))
(declare-fun temp628_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp628_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp628_4 () (_ BitVec 64))
(declare-fun temp628_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp628_6 () (_ BitVec 64))
(declare-fun temp628_7 () (_ BitVec 64))
(declare-fun temp628_8 () (_ BitVec 64))
(declare-fun temp628_9 () (_ BitVec 64))
(declare-fun temp628_10 () (_ BitVec 64))
(declare-fun temp628_11 () (_ BitVec 64))
(declare-fun temp628_12 () (_ BitVec 64))
(declare-fun temp628_13 () (_ BitVec 64))
(declare-fun temp628_14 () (_ BitVec 64))
(declare-fun temp628_15 () (_ BitVec 64))
(declare-fun temp628_16 () (_ BitVec 64))
(declare-fun temp628_17 () (_ BitVec 64))
(declare-fun temp628_18 () (_ BitVec 64))
(declare-fun temp628_19 () (_ BitVec 64))
(declare-fun temp628_20 () (_ BitVec 64))
(declare-fun temp628_21 () (_ BitVec 64))
(declare-fun temp628_22 () (_ BitVec 64))
(declare-fun temp628_23 () (_ BitVec 64))
(declare-fun temp628_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp628_25 () (_ BitVec 64))
(declare-fun temp628_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp628_27 () (_ BitVec 64))
(declare-fun temp628_28 () (_ BitVec 64))
(declare-fun temp628_29 () (_ BitVec 64))
(declare-fun temp628_30 () (_ BitVec 64))
(declare-fun temp628_31 () (_ BitVec 64))
(declare-fun temp628_32 () (_ BitVec 64))
(declare-fun temp628_33 () (_ BitVec 64))
(declare-fun temp628_34 () (_ BitVec 64))
(declare-fun temp628_35 () (_ BitVec 64))
(declare-fun temp628_36 () (_ BitVec 64))
(declare-fun temp628_37 () (_ BitVec 64))
(declare-fun temp628_38 () (_ BitVec 64))
(declare-fun temp628_39 () (_ BitVec 64))
(declare-fun temp628_40 () (_ BitVec 64))
(declare-fun temp628_41 () (_ BitVec 64))
(declare-fun temp628_42 () (_ BitVec 64))
(declare-fun temp628_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp628_44 () (_ BitVec 64))
(declare-fun temp628_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp628_46 () (_ BitVec 64))
(declare-fun temp628_48 () (_ BitVec 64))
(declare-fun temp628_47 () (_ BitVec 64))
(declare-fun temp628_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp628_50 () (_ BitVec 64))
(declare-fun temp628_51 () (_ BitVec 64))
(declare-fun temp628_52 () (_ BitVec 64))
(declare-fun temp628_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp628_55 () (_ BitVec 64))
(declare-fun temp628_54 () (_ BitVec 64))
(declare-fun temp628_57 () (_ BitVec 64))
(declare-fun temp628_56 () (_ BitVec 64))
(declare-fun temp628_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp628_59 () (_ BitVec 64))
(declare-fun var2688342 () (_ BitVec 64))
(declare-fun temp628_60 () (_ BitVec 64))
(declare-fun temp628_62 () (_ BitVec 64))
(declare-fun temp628_61 () (_ BitVec 64))
(declare-fun temp628_63 () (_ BitVec 64))
(declare-fun var3081510 () (_ BitVec 64))
(assert (= temp628_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp628_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_2 #x0000000000000001))
(assert (= var70396 temp628_2))
(assert (= temp628_3 #x0000000000000000))
(assert (= var65762 temp628_3))
(assert (= temp628_4 #x0000000000000000))
(assert (= temp628_5 temp628_4))
(assert (= temp628_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp628_5)))
(assert (= temp628_7 #x0000000000000001))
(assert (= temp628_8 temp628_7))
(assert (= temp628_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp628_8)))
(assert (= temp628_10 #x0000000000000002))
(assert (= temp628_11 temp628_10))
(assert (= temp628_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp628_11)))
(assert (= temp628_13 #x0000000000000003))
(assert (= temp628_14 temp628_13))
(assert (= temp628_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp628_14)))
(assert (= temp628_16 #x0000000000000004))
(assert (= temp628_17 temp628_16))
(assert (= temp628_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp628_17)))
(assert (= temp628_19 #x0000000000000005))
(assert (= temp628_20 temp628_19))
(assert (= temp628_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp628_20)))
(assert (= temp628_22 #x0000000000000000))
(assert (= temp628_23
   (ite (bvslt var65762 temp628_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp628_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp628_23)))
(assert (= var70398 temp628_24))
(assert (bvslt (ite (bvslt var65762 temp628_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp628_25 #x0000000000000000))
(assert (= temp628_26 temp628_25))
(assert (= temp628_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp628_26)))
(assert (= temp628_28 #x0000000000000001))
(assert (= temp628_29 temp628_28))
(assert (= temp628_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp628_29)))
(assert (= temp628_31 #x0000000000000002))
(assert (= temp628_32 temp628_31))
(assert (= temp628_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp628_32)))
(assert (= temp628_34 #x0000000000000003))
(assert (= temp628_35 temp628_34))
(assert (= temp628_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp628_35)))
(assert (= temp628_37 #x0000000000000004))
(assert (= temp628_38 temp628_37))
(assert (= temp628_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp628_38)))
(assert (= temp628_40 #x0000000000000005))
(assert (= temp628_41 temp628_40))
(assert (= temp628_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp628_41)))
(assert (= temp628_43 #x0000000000000000))
(assert (= temp628_44
   (ite (bvslt var70374 temp628_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp628_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp628_44)))
(assert (= var70399 temp628_45))
(assert (bvslt (ite (bvslt var70374 temp628_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp628_46 #x0000000000000001))
(assert (= var70400 temp628_46))
(assert (= temp628_48 #x0000000000000001))
(assert (= temp628_47 temp628_48))
(assert (= temp628_49 #x0000000000000005))
(assert (= var526834 temp628_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp628_50 #x0000000000000000))
(assert (= var65762 temp628_50))
(assert (= temp628_51 #x0000000000000000))
(assert (= temp628_52
   (ite (bvslt var65762 temp628_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp628_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp628_52)))
(assert (= var70423 temp628_53))
(assert (bvslt (ite (bvslt var65762 temp628_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp628_55 #x0000000000000000))
(assert (= temp628_54 temp628_55))
(assert (= temp628_57 #xffffffffffffffff))
(assert (= temp628_56 temp628_57))
(assert (= temp628_58 #x0000000000000001))
(assert (= var2688294 temp628_58))
(assert (= temp628_59 #x0000000000000000))
(assert (= var2688342 temp628_59))
(assert (= temp628_60 #x0000000000000000))
(assert (= var2688342 temp628_60))
(assert (= temp628_62 #x0000000000000001))
(assert (= temp628_61 temp628_62))
(assert (= temp628_63 #x0000000000000001))
(assert (= var3081510 temp628_63))
(model-add temp628_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp628_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))





