(declare-fun temp808_1 () (_ BitVec 64))
(declare-fun temp808_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp808_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp808_4 () (_ BitVec 64))
(declare-fun temp808_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_6 () (_ BitVec 64))
(declare-fun temp808_7 () (_ BitVec 64))
(declare-fun temp808_8 () (_ BitVec 64))
(declare-fun temp808_9 () (_ BitVec 64))
(declare-fun temp808_10 () (_ BitVec 64))
(declare-fun temp808_11 () (_ BitVec 64))
(declare-fun temp808_12 () (_ BitVec 64))
(declare-fun temp808_13 () (_ BitVec 64))
(declare-fun temp808_14 () (_ BitVec 64))
(declare-fun temp808_15 () (_ BitVec 64))
(declare-fun temp808_16 () (_ BitVec 64))
(declare-fun temp808_17 () (_ BitVec 64))
(declare-fun temp808_18 () (_ BitVec 64))
(declare-fun temp808_19 () (_ BitVec 64))
(declare-fun temp808_20 () (_ BitVec 64))
(declare-fun temp808_21 () (_ BitVec 64))
(declare-fun temp808_22 () (_ BitVec 64))
(declare-fun temp808_23 () (_ BitVec 64))
(declare-fun temp808_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp808_25 () (_ BitVec 64))
(declare-fun temp808_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_27 () (_ BitVec 64))
(declare-fun temp808_28 () (_ BitVec 64))
(declare-fun temp808_29 () (_ BitVec 64))
(declare-fun temp808_30 () (_ BitVec 64))
(declare-fun temp808_31 () (_ BitVec 64))
(declare-fun temp808_32 () (_ BitVec 64))
(declare-fun temp808_33 () (_ BitVec 64))
(declare-fun temp808_34 () (_ BitVec 64))
(declare-fun temp808_35 () (_ BitVec 64))
(declare-fun temp808_36 () (_ BitVec 64))
(declare-fun temp808_37 () (_ BitVec 64))
(declare-fun temp808_38 () (_ BitVec 64))
(declare-fun temp808_39 () (_ BitVec 64))
(declare-fun temp808_40 () (_ BitVec 64))
(declare-fun temp808_41 () (_ BitVec 64))
(declare-fun temp808_42 () (_ BitVec 64))
(declare-fun temp808_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp808_44 () (_ BitVec 64))
(declare-fun temp808_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp808_46 () (_ BitVec 64))
(declare-fun temp808_48 () (_ BitVec 64))
(declare-fun temp808_47 () (_ BitVec 64))
(declare-fun temp808_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp808_50 () (_ BitVec 64))
(declare-fun temp808_51 () (_ BitVec 64))
(declare-fun temp808_52 () (_ BitVec 64))
(declare-fun temp808_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp808_55 () (_ BitVec 64))
(declare-fun temp808_54 () (_ BitVec 64))
(declare-fun temp808_57 () (_ BitVec 64))
(declare-fun temp808_56 () (_ BitVec 64))
(declare-fun temp808_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp808_60 () (_ BitVec 64))
(declare-fun temp808_59 () (_ BitVec 64))
(declare-fun temp808_61 () (_ BitVec 64))
(declare-fun var3212582 () (_ BitVec 64))
(declare-fun temp808_62 () (_ BitVec 64))
(declare-fun var3212630 () (_ BitVec 64))
(declare-fun temp808_63 () (_ BitVec 64))
(assert (= temp808_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp808_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_2 #x0000000000000001))
(assert (= var70396 temp808_2))
(assert (= temp808_3 #x0000000000000000))
(assert (= var65762 temp808_3))
(assert (= temp808_4 #x0000000000000000))
(assert (= temp808_5 temp808_4))
(assert (= temp808_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp808_5)))
(assert (= temp808_7 #x0000000000000001))
(assert (= temp808_8 temp808_7))
(assert (= temp808_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp808_8)))
(assert (= temp808_10 #x0000000000000002))
(assert (= temp808_11 temp808_10))
(assert (= temp808_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp808_11)))
(assert (= temp808_13 #x0000000000000003))
(assert (= temp808_14 temp808_13))
(assert (= temp808_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp808_14)))
(assert (= temp808_16 #x0000000000000004))
(assert (= temp808_17 temp808_16))
(assert (= temp808_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp808_17)))
(assert (= temp808_19 #x0000000000000005))
(assert (= temp808_20 temp808_19))
(assert (= temp808_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp808_20)))
(assert (= temp808_22 #x0000000000000000))
(assert (= temp808_23
   (ite (bvslt var65762 temp808_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp808_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp808_23)))
(assert (= var70398 temp808_24))
(assert (bvslt (ite (bvslt var65762 temp808_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp808_25 #x0000000000000000))
(assert (= temp808_26 temp808_25))
(assert (= temp808_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp808_26)))
(assert (= temp808_28 #x0000000000000001))
(assert (= temp808_29 temp808_28))
(assert (= temp808_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp808_29)))
(assert (= temp808_31 #x0000000000000002))
(assert (= temp808_32 temp808_31))
(assert (= temp808_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp808_32)))
(assert (= temp808_34 #x0000000000000003))
(assert (= temp808_35 temp808_34))
(assert (= temp808_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp808_35)))
(assert (= temp808_37 #x0000000000000004))
(assert (= temp808_38 temp808_37))
(assert (= temp808_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp808_38)))
(assert (= temp808_40 #x0000000000000005))
(assert (= temp808_41 temp808_40))
(assert (= temp808_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp808_41)))
(assert (= temp808_43 #x0000000000000000))
(assert (= temp808_44
   (ite (bvslt var70374 temp808_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp808_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp808_44)))
(assert (= var70399 temp808_45))
(assert (bvslt (ite (bvslt var70374 temp808_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_46 #x0000000000000001))
(assert (= var70400 temp808_46))
(assert (= temp808_48 #x0000000000000001))
(assert (= temp808_47 temp808_48))
(assert (= temp808_49 #x0000000000000005))
(assert (= var526834 temp808_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp808_50 #x0000000000000000))
(assert (= var65762 temp808_50))
(assert (= temp808_51 #x0000000000000000))
(assert (= temp808_52
   (ite (bvslt var65762 temp808_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp808_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp808_52)))
(assert (= var70423 temp808_53))
(assert (bvslt (ite (bvslt var65762 temp808_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp808_55 #x0000000000000000))
(assert (= temp808_54 temp808_55))
(assert (= temp808_57 #xffffffffffffffff))
(assert (= temp808_56 temp808_57))
(assert (= temp808_58 #x0000000000000001))
(assert (= var2688294 temp808_58))
(assert (= temp808_60 #x0000000000000001))
(assert (= temp808_59 temp808_60))
(assert (= temp808_61 #x0000000000000001))
(assert (= var3212582 temp808_61))
(assert (= temp808_62 #x0000000000000000))
(assert (= var3212630 temp808_62))
(assert (= temp808_63 #x0000000000000000))
(assert (= var3212630 temp808_63))
(model-add temp808_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp808_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




