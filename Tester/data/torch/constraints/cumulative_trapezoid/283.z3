(declare-fun temp868_1 () (_ BitVec 64))
(declare-fun temp868_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp868_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp868_4 () (_ BitVec 64))
(declare-fun temp868_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_6 () (_ BitVec 64))
(declare-fun temp868_7 () (_ BitVec 64))
(declare-fun temp868_8 () (_ BitVec 64))
(declare-fun temp868_9 () (_ BitVec 64))
(declare-fun temp868_10 () (_ BitVec 64))
(declare-fun temp868_11 () (_ BitVec 64))
(declare-fun temp868_12 () (_ BitVec 64))
(declare-fun temp868_13 () (_ BitVec 64))
(declare-fun temp868_14 () (_ BitVec 64))
(declare-fun temp868_15 () (_ BitVec 64))
(declare-fun temp868_16 () (_ BitVec 64))
(declare-fun temp868_17 () (_ BitVec 64))
(declare-fun temp868_18 () (_ BitVec 64))
(declare-fun temp868_19 () (_ BitVec 64))
(declare-fun temp868_20 () (_ BitVec 64))
(declare-fun temp868_21 () (_ BitVec 64))
(declare-fun temp868_22 () (_ BitVec 64))
(declare-fun temp868_23 () (_ BitVec 64))
(declare-fun temp868_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp868_25 () (_ BitVec 64))
(declare-fun temp868_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_27 () (_ BitVec 64))
(declare-fun temp868_28 () (_ BitVec 64))
(declare-fun temp868_29 () (_ BitVec 64))
(declare-fun temp868_30 () (_ BitVec 64))
(declare-fun temp868_31 () (_ BitVec 64))
(declare-fun temp868_32 () (_ BitVec 64))
(declare-fun temp868_33 () (_ BitVec 64))
(declare-fun temp868_34 () (_ BitVec 64))
(declare-fun temp868_35 () (_ BitVec 64))
(declare-fun temp868_36 () (_ BitVec 64))
(declare-fun temp868_37 () (_ BitVec 64))
(declare-fun temp868_38 () (_ BitVec 64))
(declare-fun temp868_39 () (_ BitVec 64))
(declare-fun temp868_40 () (_ BitVec 64))
(declare-fun temp868_41 () (_ BitVec 64))
(declare-fun temp868_42 () (_ BitVec 64))
(declare-fun temp868_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp868_44 () (_ BitVec 64))
(declare-fun temp868_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp868_46 () (_ BitVec 64))
(declare-fun temp868_48 () (_ BitVec 64))
(declare-fun temp868_47 () (_ BitVec 64))
(declare-fun temp868_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp868_50 () (_ BitVec 64))
(declare-fun temp868_51 () (_ BitVec 64))
(declare-fun temp868_52 () (_ BitVec 64))
(declare-fun temp868_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp868_55 () (_ BitVec 64))
(declare-fun temp868_54 () (_ BitVec 64))
(declare-fun temp868_57 () (_ BitVec 64))
(declare-fun temp868_56 () (_ BitVec 64))
(declare-fun temp868_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp868_59 () (_ BitVec 64))
(declare-fun var2688342 () (_ BitVec 64))
(declare-fun temp868_60 () (_ BitVec 64))
(declare-fun temp868_62 () (_ BitVec 64))
(declare-fun temp868_61 () (_ BitVec 64))
(declare-fun temp868_63 () (_ BitVec 64))
(declare-fun var3147046 () (_ BitVec 64))
(assert (= temp868_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp868_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_2 #x0000000000000001))
(assert (= var70396 temp868_2))
(assert (= temp868_3 #x0000000000000000))
(assert (= var65762 temp868_3))
(assert (= temp868_4 #x0000000000000000))
(assert (= temp868_5 temp868_4))
(assert (= temp868_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp868_5)))
(assert (= temp868_7 #x0000000000000001))
(assert (= temp868_8 temp868_7))
(assert (= temp868_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp868_8)))
(assert (= temp868_10 #x0000000000000002))
(assert (= temp868_11 temp868_10))
(assert (= temp868_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp868_11)))
(assert (= temp868_13 #x0000000000000003))
(assert (= temp868_14 temp868_13))
(assert (= temp868_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp868_14)))
(assert (= temp868_16 #x0000000000000004))
(assert (= temp868_17 temp868_16))
(assert (= temp868_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp868_17)))
(assert (= temp868_19 #x0000000000000005))
(assert (= temp868_20 temp868_19))
(assert (= temp868_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp868_20)))
(assert (= temp868_22 #x0000000000000000))
(assert (= temp868_23
   (ite (bvslt var65762 temp868_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp868_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp868_23)))
(assert (= var70398 temp868_24))
(assert (bvslt (ite (bvslt var65762 temp868_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp868_25 #x0000000000000000))
(assert (= temp868_26 temp868_25))
(assert (= temp868_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp868_26)))
(assert (= temp868_28 #x0000000000000001))
(assert (= temp868_29 temp868_28))
(assert (= temp868_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp868_29)))
(assert (= temp868_31 #x0000000000000002))
(assert (= temp868_32 temp868_31))
(assert (= temp868_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp868_32)))
(assert (= temp868_34 #x0000000000000003))
(assert (= temp868_35 temp868_34))
(assert (= temp868_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp868_35)))
(assert (= temp868_37 #x0000000000000004))
(assert (= temp868_38 temp868_37))
(assert (= temp868_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp868_38)))
(assert (= temp868_40 #x0000000000000005))
(assert (= temp868_41 temp868_40))
(assert (= temp868_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp868_41)))
(assert (= temp868_43 #x0000000000000000))
(assert (= temp868_44
   (ite (bvslt var70374 temp868_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp868_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp868_44)))
(assert (= var70399 temp868_45))
(assert (bvslt (ite (bvslt var70374 temp868_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_46 #x0000000000000001))
(assert (= var70400 temp868_46))
(assert (= temp868_48 #x0000000000000001))
(assert (= temp868_47 temp868_48))
(assert (= temp868_49 #x0000000000000005))
(assert (= var526834 temp868_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp868_50 #x0000000000000000))
(assert (= var65762 temp868_50))
(assert (= temp868_51 #x0000000000000000))
(assert (= temp868_52
   (ite (bvslt var65762 temp868_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp868_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp868_52)))
(assert (= var70423 temp868_53))
(assert (bvslt (ite (bvslt var65762 temp868_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp868_55 #x0000000000000000))
(assert (= temp868_54 temp868_55))
(assert (= temp868_57 #xffffffffffffffff))
(assert (= temp868_56 temp868_57))
(assert (= temp868_58 #x0000000000000001))
(assert (= var2688294 temp868_58))
(assert (= temp868_59 #x0000000000000000))
(assert (= var2688342 temp868_59))
(assert (= temp868_60 #x0000000000000000))
(assert (= var2688342 temp868_60))
(assert (= temp868_62 #x0000000000000001))
(assert (= temp868_61 temp868_62))
(assert (= temp868_63 #x0000000000000001))
(assert (= var3147046 temp868_63))
(model-add temp868_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp868_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))





