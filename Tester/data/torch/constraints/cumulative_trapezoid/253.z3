(declare-fun temp785_1 () (_ BitVec 64))
(declare-fun temp785_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp785_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp785_4 () (_ BitVec 64))
(declare-fun temp785_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_6 () (_ BitVec 64))
(declare-fun temp785_7 () (_ BitVec 64))
(declare-fun temp785_8 () (_ BitVec 64))
(declare-fun temp785_9 () (_ BitVec 64))
(declare-fun temp785_10 () (_ BitVec 64))
(declare-fun temp785_11 () (_ BitVec 64))
(declare-fun temp785_12 () (_ BitVec 64))
(declare-fun temp785_13 () (_ BitVec 64))
(declare-fun temp785_14 () (_ BitVec 64))
(declare-fun temp785_15 () (_ BitVec 64))
(declare-fun temp785_16 () (_ BitVec 64))
(declare-fun temp785_17 () (_ BitVec 64))
(declare-fun temp785_18 () (_ BitVec 64))
(declare-fun temp785_19 () (_ BitVec 64))
(declare-fun temp785_20 () (_ BitVec 64))
(declare-fun temp785_21 () (_ BitVec 64))
(declare-fun temp785_22 () (_ BitVec 64))
(declare-fun temp785_23 () (_ BitVec 64))
(declare-fun temp785_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp785_25 () (_ BitVec 64))
(declare-fun temp785_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_27 () (_ BitVec 64))
(declare-fun temp785_28 () (_ BitVec 64))
(declare-fun temp785_29 () (_ BitVec 64))
(declare-fun temp785_30 () (_ BitVec 64))
(declare-fun temp785_31 () (_ BitVec 64))
(declare-fun temp785_32 () (_ BitVec 64))
(declare-fun temp785_33 () (_ BitVec 64))
(declare-fun temp785_34 () (_ BitVec 64))
(declare-fun temp785_35 () (_ BitVec 64))
(declare-fun temp785_36 () (_ BitVec 64))
(declare-fun temp785_37 () (_ BitVec 64))
(declare-fun temp785_38 () (_ BitVec 64))
(declare-fun temp785_39 () (_ BitVec 64))
(declare-fun temp785_40 () (_ BitVec 64))
(declare-fun temp785_41 () (_ BitVec 64))
(declare-fun temp785_42 () (_ BitVec 64))
(declare-fun temp785_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp785_44 () (_ BitVec 64))
(declare-fun temp785_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp785_46 () (_ BitVec 64))
(declare-fun temp785_48 () (_ BitVec 64))
(declare-fun temp785_47 () (_ BitVec 64))
(declare-fun temp785_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp785_50 () (_ BitVec 64))
(declare-fun temp785_51 () (_ BitVec 64))
(declare-fun temp785_52 () (_ BitVec 64))
(declare-fun temp785_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp785_55 () (_ BitVec 64))
(declare-fun temp785_54 () (_ BitVec 64))
(declare-fun temp785_57 () (_ BitVec 64))
(declare-fun temp785_56 () (_ BitVec 64))
(declare-fun temp785_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp785_60 () (_ BitVec 64))
(declare-fun temp785_59 () (_ BitVec 64))
(declare-fun temp785_61 () (_ BitVec 64))
(declare-fun var3212582 () (_ BitVec 64))
(assert (= temp785_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp785_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_2 #x0000000000000001))
(assert (= var70396 temp785_2))
(assert (= temp785_3 #x0000000000000000))
(assert (= var65762 temp785_3))
(assert (= temp785_4 #x0000000000000000))
(assert (= temp785_5 temp785_4))
(assert (= temp785_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp785_5)))
(assert (= temp785_7 #x0000000000000001))
(assert (= temp785_8 temp785_7))
(assert (= temp785_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp785_8)))
(assert (= temp785_10 #x0000000000000002))
(assert (= temp785_11 temp785_10))
(assert (= temp785_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp785_11)))
(assert (= temp785_13 #x0000000000000003))
(assert (= temp785_14 temp785_13))
(assert (= temp785_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp785_14)))
(assert (= temp785_16 #x0000000000000004))
(assert (= temp785_17 temp785_16))
(assert (= temp785_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp785_17)))
(assert (= temp785_19 #x0000000000000005))
(assert (= temp785_20 temp785_19))
(assert (= temp785_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp785_20)))
(assert (= temp785_22 #x0000000000000000))
(assert (= temp785_23
   (ite (bvslt var65762 temp785_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp785_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp785_23)))
(assert (= var70398 temp785_24))
(assert (bvslt (ite (bvslt var65762 temp785_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp785_25 #x0000000000000000))
(assert (= temp785_26 temp785_25))
(assert (= temp785_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp785_26)))
(assert (= temp785_28 #x0000000000000001))
(assert (= temp785_29 temp785_28))
(assert (= temp785_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp785_29)))
(assert (= temp785_31 #x0000000000000002))
(assert (= temp785_32 temp785_31))
(assert (= temp785_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp785_32)))
(assert (= temp785_34 #x0000000000000003))
(assert (= temp785_35 temp785_34))
(assert (= temp785_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp785_35)))
(assert (= temp785_37 #x0000000000000004))
(assert (= temp785_38 temp785_37))
(assert (= temp785_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp785_38)))
(assert (= temp785_40 #x0000000000000005))
(assert (= temp785_41 temp785_40))
(assert (= temp785_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp785_41)))
(assert (= temp785_43 #x0000000000000000))
(assert (= temp785_44
   (ite (bvslt var70374 temp785_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp785_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp785_44)))
(assert (= var70399 temp785_45))
(assert (bvslt (ite (bvslt var70374 temp785_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_46 #x0000000000000001))
(assert (= var70400 temp785_46))
(assert (= temp785_48 #x0000000000000001))
(assert (= temp785_47 temp785_48))
(assert (= temp785_49 #x0000000000000005))
(assert (= var526834 temp785_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp785_50 #x0000000000000000))
(assert (= var65762 temp785_50))
(assert (= temp785_51 #x0000000000000000))
(assert (= temp785_52
   (ite (bvslt var65762 temp785_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp785_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp785_52)))
(assert (= var70423 temp785_53))
(assert (bvslt (ite (bvslt var65762 temp785_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp785_55 #x0000000000000000))
(assert (= temp785_54 temp785_55))
(assert (= temp785_57 #xffffffffffffffff))
(assert (= temp785_56 temp785_57))
(assert (= temp785_58 #x0000000000000001))
(assert (= var2688294 temp785_58))
(assert (= temp785_60 #x0000000000000001))
(assert (= temp785_59 temp785_60))
(assert (= temp785_61 #x0000000000000001))
(assert (= var3212582 temp785_61))
(model-add temp785_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp785_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




