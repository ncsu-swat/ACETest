(declare-fun temp690_1 () (_ BitVec 64))
(declare-fun temp690_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp690_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp690_4 () (_ BitVec 64))
(declare-fun temp690_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_6 () (_ BitVec 64))
(declare-fun temp690_7 () (_ BitVec 64))
(declare-fun temp690_8 () (_ BitVec 64))
(declare-fun temp690_9 () (_ BitVec 64))
(declare-fun temp690_10 () (_ BitVec 64))
(declare-fun temp690_11 () (_ BitVec 64))
(declare-fun temp690_12 () (_ BitVec 64))
(declare-fun temp690_13 () (_ BitVec 64))
(declare-fun temp690_14 () (_ BitVec 64))
(declare-fun temp690_15 () (_ BitVec 64))
(declare-fun temp690_16 () (_ BitVec 64))
(declare-fun temp690_17 () (_ BitVec 64))
(declare-fun temp690_18 () (_ BitVec 64))
(declare-fun temp690_19 () (_ BitVec 64))
(declare-fun temp690_20 () (_ BitVec 64))
(declare-fun temp690_21 () (_ BitVec 64))
(declare-fun temp690_22 () (_ BitVec 64))
(declare-fun temp690_23 () (_ BitVec 64))
(declare-fun temp690_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp690_25 () (_ BitVec 64))
(declare-fun temp690_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_27 () (_ BitVec 64))
(declare-fun temp690_28 () (_ BitVec 64))
(declare-fun temp690_29 () (_ BitVec 64))
(declare-fun temp690_30 () (_ BitVec 64))
(declare-fun temp690_31 () (_ BitVec 64))
(declare-fun temp690_32 () (_ BitVec 64))
(declare-fun temp690_33 () (_ BitVec 64))
(declare-fun temp690_34 () (_ BitVec 64))
(declare-fun temp690_35 () (_ BitVec 64))
(declare-fun temp690_36 () (_ BitVec 64))
(declare-fun temp690_37 () (_ BitVec 64))
(declare-fun temp690_38 () (_ BitVec 64))
(declare-fun temp690_39 () (_ BitVec 64))
(declare-fun temp690_40 () (_ BitVec 64))
(declare-fun temp690_41 () (_ BitVec 64))
(declare-fun temp690_42 () (_ BitVec 64))
(declare-fun temp690_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp690_44 () (_ BitVec 64))
(declare-fun temp690_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp690_46 () (_ BitVec 64))
(declare-fun temp690_48 () (_ BitVec 64))
(declare-fun temp690_47 () (_ BitVec 64))
(declare-fun temp690_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp690_50 () (_ BitVec 64))
(declare-fun temp690_51 () (_ BitVec 64))
(declare-fun temp690_52 () (_ BitVec 64))
(declare-fun temp690_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp690_55 () (_ BitVec 64))
(declare-fun temp690_54 () (_ BitVec 64))
(declare-fun temp690_57 () (_ BitVec 64))
(declare-fun temp690_56 () (_ BitVec 64))
(declare-fun temp690_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp690_59 () (_ BitVec 64))
(declare-fun var2688328 () (_ BitVec 64))
(declare-fun temp690_60 () (_ BitVec 64))
(declare-fun temp690_62 () (_ BitVec 64))
(declare-fun temp690_61 () (_ BitVec 64))
(declare-fun temp690_63 () (_ BitVec 64))
(declare-fun var3081510 () (_ BitVec 64))
(assert (= temp690_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp690_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_2 #x0000000000000001))
(assert (= var70396 temp690_2))
(assert (= temp690_3 #x0000000000000000))
(assert (= var65762 temp690_3))
(assert (= temp690_4 #x0000000000000000))
(assert (= temp690_5 temp690_4))
(assert (= temp690_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp690_5)))
(assert (= temp690_7 #x0000000000000001))
(assert (= temp690_8 temp690_7))
(assert (= temp690_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp690_8)))
(assert (= temp690_10 #x0000000000000002))
(assert (= temp690_11 temp690_10))
(assert (= temp690_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp690_11)))
(assert (= temp690_13 #x0000000000000003))
(assert (= temp690_14 temp690_13))
(assert (= temp690_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp690_14)))
(assert (= temp690_16 #x0000000000000004))
(assert (= temp690_17 temp690_16))
(assert (= temp690_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp690_17)))
(assert (= temp690_19 #x0000000000000005))
(assert (= temp690_20 temp690_19))
(assert (= temp690_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp690_20)))
(assert (= temp690_22 #x0000000000000000))
(assert (= temp690_23
   (ite (bvslt var65762 temp690_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp690_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp690_23)))
(assert (= var70398 temp690_24))
(assert (bvslt (ite (bvslt var65762 temp690_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp690_25 #x0000000000000000))
(assert (= temp690_26 temp690_25))
(assert (= temp690_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp690_26)))
(assert (= temp690_28 #x0000000000000001))
(assert (= temp690_29 temp690_28))
(assert (= temp690_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp690_29)))
(assert (= temp690_31 #x0000000000000002))
(assert (= temp690_32 temp690_31))
(assert (= temp690_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp690_32)))
(assert (= temp690_34 #x0000000000000003))
(assert (= temp690_35 temp690_34))
(assert (= temp690_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp690_35)))
(assert (= temp690_37 #x0000000000000004))
(assert (= temp690_38 temp690_37))
(assert (= temp690_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp690_38)))
(assert (= temp690_40 #x0000000000000005))
(assert (= temp690_41 temp690_40))
(assert (= temp690_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp690_41)))
(assert (= temp690_43 #x0000000000000000))
(assert (= temp690_44
   (ite (bvslt var70374 temp690_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp690_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp690_44)))
(assert (= var70399 temp690_45))
(assert (bvslt (ite (bvslt var70374 temp690_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_46 #x0000000000000001))
(assert (= var70400 temp690_46))
(assert (= temp690_48 #x0000000000000001))
(assert (= temp690_47 temp690_48))
(assert (= temp690_49 #x0000000000000005))
(assert (= var526834 temp690_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp690_50 #x0000000000000000))
(assert (= var65762 temp690_50))
(assert (= temp690_51 #x0000000000000000))
(assert (= temp690_52
   (ite (bvslt var65762 temp690_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp690_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp690_52)))
(assert (= var70423 temp690_53))
(assert (bvslt (ite (bvslt var65762 temp690_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp690_55 #x0000000000000000))
(assert (= temp690_54 temp690_55))
(assert (= temp690_57 #xffffffffffffffff))
(assert (= temp690_56 temp690_57))
(assert (= temp690_58 #x0000000000000001))
(assert (= var2688294 temp690_58))
(assert (= temp690_59 #x0000000000000000))
(assert (= var2688328 temp690_59))
(assert (= temp690_60 #x0000000000000000))
(assert (= var2688328 temp690_60))
(assert (= temp690_62 #x0000000000000001))
(assert (= temp690_61 temp690_62))
(assert (= temp690_63 #x0000000000000001))
(assert (= var3081510 temp690_63))
(model-add temp690_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp690_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




