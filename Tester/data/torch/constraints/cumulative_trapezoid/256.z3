(declare-fun temp788_1 () (_ BitVec 64))
(declare-fun temp788_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp788_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp788_4 () (_ BitVec 64))
(declare-fun temp788_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp788_6 () (_ BitVec 64))
(declare-fun temp788_7 () (_ BitVec 64))
(declare-fun temp788_8 () (_ BitVec 64))
(declare-fun temp788_9 () (_ BitVec 64))
(declare-fun temp788_10 () (_ BitVec 64))
(declare-fun temp788_11 () (_ BitVec 64))
(declare-fun temp788_12 () (_ BitVec 64))
(declare-fun temp788_13 () (_ BitVec 64))
(declare-fun temp788_14 () (_ BitVec 64))
(declare-fun temp788_15 () (_ BitVec 64))
(declare-fun temp788_16 () (_ BitVec 64))
(declare-fun temp788_17 () (_ BitVec 64))
(declare-fun temp788_18 () (_ BitVec 64))
(declare-fun temp788_19 () (_ BitVec 64))
(declare-fun temp788_20 () (_ BitVec 64))
(declare-fun temp788_21 () (_ BitVec 64))
(declare-fun temp788_22 () (_ BitVec 64))
(declare-fun temp788_23 () (_ BitVec 64))
(declare-fun temp788_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp788_25 () (_ BitVec 64))
(declare-fun temp788_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp788_27 () (_ BitVec 64))
(declare-fun temp788_28 () (_ BitVec 64))
(declare-fun temp788_29 () (_ BitVec 64))
(declare-fun temp788_30 () (_ BitVec 64))
(declare-fun temp788_31 () (_ BitVec 64))
(declare-fun temp788_32 () (_ BitVec 64))
(declare-fun temp788_33 () (_ BitVec 64))
(declare-fun temp788_34 () (_ BitVec 64))
(declare-fun temp788_35 () (_ BitVec 64))
(declare-fun temp788_36 () (_ BitVec 64))
(declare-fun temp788_37 () (_ BitVec 64))
(declare-fun temp788_38 () (_ BitVec 64))
(declare-fun temp788_39 () (_ BitVec 64))
(declare-fun temp788_40 () (_ BitVec 64))
(declare-fun temp788_41 () (_ BitVec 64))
(declare-fun temp788_42 () (_ BitVec 64))
(declare-fun temp788_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp788_44 () (_ BitVec 64))
(declare-fun temp788_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp788_46 () (_ BitVec 64))
(declare-fun temp788_48 () (_ BitVec 64))
(declare-fun temp788_47 () (_ BitVec 64))
(declare-fun temp788_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp788_50 () (_ BitVec 64))
(declare-fun temp788_51 () (_ BitVec 64))
(declare-fun temp788_52 () (_ BitVec 64))
(declare-fun temp788_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp788_55 () (_ BitVec 64))
(declare-fun temp788_54 () (_ BitVec 64))
(declare-fun temp788_57 () (_ BitVec 64))
(declare-fun temp788_56 () (_ BitVec 64))
(declare-fun temp788_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp788_60 () (_ BitVec 64))
(declare-fun temp788_59 () (_ BitVec 64))
(declare-fun temp788_61 () (_ BitVec 64))
(declare-fun var3212582 () (_ BitVec 64))
(assert (= temp788_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp788_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_2 #x0000000000000001))
(assert (= var70396 temp788_2))
(assert (= temp788_3 #x0000000000000000))
(assert (= var65762 temp788_3))
(assert (= temp788_4 #x0000000000000000))
(assert (= temp788_5 temp788_4))
(assert (= temp788_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp788_5)))
(assert (= temp788_7 #x0000000000000001))
(assert (= temp788_8 temp788_7))
(assert (= temp788_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp788_8)))
(assert (= temp788_10 #x0000000000000002))
(assert (= temp788_11 temp788_10))
(assert (= temp788_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp788_11)))
(assert (= temp788_13 #x0000000000000003))
(assert (= temp788_14 temp788_13))
(assert (= temp788_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp788_14)))
(assert (= temp788_16 #x0000000000000004))
(assert (= temp788_17 temp788_16))
(assert (= temp788_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp788_17)))
(assert (= temp788_19 #x0000000000000005))
(assert (= temp788_20 temp788_19))
(assert (= temp788_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp788_20)))
(assert (= temp788_22 #x0000000000000000))
(assert (= temp788_23
   (ite (bvslt var65762 temp788_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp788_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp788_23)))
(assert (= var70398 temp788_24))
(assert (bvslt (ite (bvslt var65762 temp788_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp788_25 #x0000000000000000))
(assert (= temp788_26 temp788_25))
(assert (= temp788_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp788_26)))
(assert (= temp788_28 #x0000000000000001))
(assert (= temp788_29 temp788_28))
(assert (= temp788_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp788_29)))
(assert (= temp788_31 #x0000000000000002))
(assert (= temp788_32 temp788_31))
(assert (= temp788_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp788_32)))
(assert (= temp788_34 #x0000000000000003))
(assert (= temp788_35 temp788_34))
(assert (= temp788_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp788_35)))
(assert (= temp788_37 #x0000000000000004))
(assert (= temp788_38 temp788_37))
(assert (= temp788_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp788_38)))
(assert (= temp788_40 #x0000000000000005))
(assert (= temp788_41 temp788_40))
(assert (= temp788_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp788_41)))
(assert (= temp788_43 #x0000000000000000))
(assert (= temp788_44
   (ite (bvslt var70374 temp788_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp788_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp788_44)))
(assert (= var70399 temp788_45))
(assert (bvslt (ite (bvslt var70374 temp788_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_46 #x0000000000000001))
(assert (= var70400 temp788_46))
(assert (= temp788_48 #x0000000000000001))
(assert (= temp788_47 temp788_48))
(assert (= temp788_49 #x0000000000000005))
(assert (= var526834 temp788_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp788_50 #x0000000000000000))
(assert (= var65762 temp788_50))
(assert (= temp788_51 #x0000000000000000))
(assert (= temp788_52
   (ite (bvslt var65762 temp788_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp788_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp788_52)))
(assert (= var70423 temp788_53))
(assert (bvslt (ite (bvslt var65762 temp788_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp788_55 #x0000000000000000))
(assert (= temp788_54 temp788_55))
(assert (= temp788_57 #xffffffffffffffff))
(assert (= temp788_56 temp788_57))
(assert (= temp788_58 #x0000000000000001))
(assert (= var2688294 temp788_58))
(assert (= temp788_60 #x0000000000000001))
(assert (= temp788_59 temp788_60))
(assert (= temp788_61 #x0000000000000001))
(assert (= var3212582 temp788_61))
(model-add temp788_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp788_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))





