(declare-fun temp536_1 () (_ BitVec 64))
(declare-fun temp536_2 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp536_3 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp536_4 () (_ BitVec 64))
(declare-fun temp536_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp536_6 () (_ BitVec 64))
(declare-fun temp536_7 () (_ BitVec 64))
(declare-fun temp536_8 () (_ BitVec 64))
(declare-fun temp536_9 () (_ BitVec 64))
(declare-fun temp536_10 () (_ BitVec 64))
(declare-fun temp536_11 () (_ BitVec 64))
(declare-fun temp536_12 () (_ BitVec 64))
(declare-fun temp536_13 () (_ BitVec 64))
(declare-fun temp536_14 () (_ BitVec 64))
(declare-fun temp536_15 () (_ BitVec 64))
(declare-fun temp536_16 () (_ BitVec 64))
(declare-fun temp536_17 () (_ BitVec 64))
(declare-fun temp536_18 () (_ BitVec 64))
(declare-fun temp536_19 () (_ BitVec 64))
(declare-fun temp536_20 () (_ BitVec 64))
(declare-fun temp536_21 () (_ BitVec 64))
(declare-fun temp536_22 () (_ BitVec 64))
(declare-fun temp536_23 () (_ BitVec 64))
(declare-fun temp536_24 () (_ BitVec 64))
(declare-fun var70398 () (_ BitVec 64))
(declare-fun temp536_25 () (_ BitVec 64))
(declare-fun temp536_26 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp536_27 () (_ BitVec 64))
(declare-fun temp536_28 () (_ BitVec 64))
(declare-fun temp536_29 () (_ BitVec 64))
(declare-fun temp536_30 () (_ BitVec 64))
(declare-fun temp536_31 () (_ BitVec 64))
(declare-fun temp536_32 () (_ BitVec 64))
(declare-fun temp536_33 () (_ BitVec 64))
(declare-fun temp536_34 () (_ BitVec 64))
(declare-fun temp536_35 () (_ BitVec 64))
(declare-fun temp536_36 () (_ BitVec 64))
(declare-fun temp536_37 () (_ BitVec 64))
(declare-fun temp536_38 () (_ BitVec 64))
(declare-fun temp536_39 () (_ BitVec 64))
(declare-fun temp536_40 () (_ BitVec 64))
(declare-fun temp536_41 () (_ BitVec 64))
(declare-fun temp536_42 () (_ BitVec 64))
(declare-fun temp536_43 () (_ BitVec 64))
(declare-fun var70374 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp536_44 () (_ BitVec 64))
(declare-fun temp536_45 () (_ BitVec 64))
(declare-fun var70399 () (_ BitVec 64))
(declare-fun var70400 () (_ BitVec 64))
(declare-fun temp536_46 () (_ BitVec 64))
(declare-fun temp536_48 () (_ BitVec 64))
(declare-fun temp536_47 () (_ BitVec 64))
(declare-fun temp536_49 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp536_50 () (_ BitVec 64))
(declare-fun temp536_51 () (_ BitVec 64))
(declare-fun temp536_52 () (_ BitVec 64))
(declare-fun temp536_53 () (_ BitVec 64))
(declare-fun var70423 () (_ BitVec 64))
(declare-fun temp536_55 () (_ BitVec 64))
(declare-fun temp536_54 () (_ BitVec 64))
(declare-fun temp536_57 () (_ BitVec 64))
(declare-fun temp536_56 () (_ BitVec 64))
(declare-fun temp536_58 () (_ BitVec 64))
(declare-fun var2688294 () (_ BitVec 64))
(declare-fun temp536_60 () (_ BitVec 64))
(declare-fun temp536_59 () (_ BitVec 64))
(declare-fun temp536_61 () (_ BitVec 64))
(declare-fun var3212582 () (_ BitVec 64))
(declare-fun temp536_62 () (_ BitVec 64))
(declare-fun var3212630 () (_ BitVec 64))
(declare-fun temp536_63 () (_ BitVec 64))
(assert (= temp536_1 #x0000000000000001))
(assert (= var70396
   (ite (= ARGNAME_x_NAMEEND_DIM temp536_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp536_2 #x0000000000000001))
(assert (= var70396 temp536_2))
(assert (= temp536_3 #x0000000000000000))
(assert (= var65762 temp536_3))
(assert (= temp536_4 #x0000000000000000))
(assert (= temp536_5 temp536_4))
(assert (= temp536_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp536_5)))
(assert (= temp536_7 #x0000000000000001))
(assert (= temp536_8 temp536_7))
(assert (= temp536_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp536_8)))
(assert (= temp536_10 #x0000000000000002))
(assert (= temp536_11 temp536_10))
(assert (= temp536_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp536_11)))
(assert (= temp536_13 #x0000000000000003))
(assert (= temp536_14 temp536_13))
(assert (= temp536_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp536_14)))
(assert (= temp536_16 #x0000000000000004))
(assert (= temp536_17 temp536_16))
(assert (= temp536_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp536_17)))
(assert (= temp536_19 #x0000000000000005))
(assert (= temp536_20 temp536_19))
(assert (= temp536_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp536_20)))
(assert (= temp536_22 #x0000000000000000))
(assert (= temp536_23
   (ite (bvslt var65762 temp536_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp536_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp536_23)))
(assert (= var70398 temp536_24))
(assert (bvslt (ite (bvslt var65762 temp536_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp536_25 #x0000000000000000))
(assert (= temp536_26 temp536_25))
(assert (= temp536_27 (select ARGNAME_y_NAMEEND_DIMSIZE temp536_26)))
(assert (= temp536_28 #x0000000000000001))
(assert (= temp536_29 temp536_28))
(assert (= temp536_30 (select ARGNAME_y_NAMEEND_DIMSIZE temp536_29)))
(assert (= temp536_31 #x0000000000000002))
(assert (= temp536_32 temp536_31))
(assert (= temp536_33 (select ARGNAME_y_NAMEEND_DIMSIZE temp536_32)))
(assert (= temp536_34 #x0000000000000003))
(assert (= temp536_35 temp536_34))
(assert (= temp536_36 (select ARGNAME_y_NAMEEND_DIMSIZE temp536_35)))
(assert (= temp536_37 #x0000000000000004))
(assert (= temp536_38 temp536_37))
(assert (= temp536_39 (select ARGNAME_y_NAMEEND_DIMSIZE temp536_38)))
(assert (= temp536_40 #x0000000000000005))
(assert (= temp536_41 temp536_40))
(assert (= temp536_42 (select ARGNAME_y_NAMEEND_DIMSIZE temp536_41)))
(assert (= temp536_43 #x0000000000000000))
(assert (= temp536_44
   (ite (bvslt var70374 temp536_43)
        (bvadd ARGNAME_y_NAMEEND_DIM var70374)
        var70374)))
(assert (= temp536_45 (select ARGNAME_y_NAMEEND_DIMSIZE temp536_44)))
(assert (= var70399 temp536_45))
(assert (bvslt (ite (bvslt var70374 temp536_43)
            (bvadd ARGNAME_y_NAMEEND_DIM var70374)
            var70374)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var70400 (ite (= var70398 var70399) #x0000000000000001 #x0000000000000000)))
(assert (= temp536_46 #x0000000000000001))
(assert (= var70400 temp536_46))
(assert (= temp536_48 #x0000000000000001))
(assert (= temp536_47 temp536_48))
(assert (= temp536_49 #x0000000000000005))
(assert (= var526834 temp536_49))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp536_50 #x0000000000000000))
(assert (= var65762 temp536_50))
(assert (= temp536_51 #x0000000000000000))
(assert (= temp536_52
   (ite (bvslt var65762 temp536_51)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp536_53 (select ARGNAME_x_NAMEEND_DIMSIZE temp536_52)))
(assert (= var70423 temp536_53))
(assert (bvslt (ite (bvslt var65762 temp536_51)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp536_55 #x0000000000000000))
(assert (= temp536_54 temp536_55))
(assert (= temp536_57 #xffffffffffffffff))
(assert (= temp536_56 temp536_57))
(assert (= temp536_58 #x0000000000000001))
(assert (= var2688294 temp536_58))
(assert (= temp536_60 #x0000000000000001))
(assert (= temp536_59 temp536_60))
(assert (= temp536_61 #x0000000000000001))
(assert (= var3212582 temp536_61))
(assert (= temp536_62 #x0000000000000000))
(assert (= var3212630 temp536_62))
(assert (= temp536_63 #x0000000000000000))
(assert (= var3212630 temp536_63))
(model-add temp536_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp536_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70396 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))





