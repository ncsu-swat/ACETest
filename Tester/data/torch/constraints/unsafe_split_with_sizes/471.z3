(declare-fun temp12951_1 () (_ BitVec 64))
(declare-fun temp12951_2 () (_ BitVec 64))
(declare-fun var148331 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp12951_3 () (_ BitVec 64))
(declare-fun temp12951_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp12951_5 () (_ BitVec 64))
(declare-fun temp12951_6 () (_ BitVec 64))
(declare-fun temp12951_7 () (_ BitVec 64))
(declare-fun temp12951_8 () (_ BitVec 64))
(declare-fun temp12951_9 () (_ BitVec 64))
(declare-fun temp12951_10 () (_ BitVec 64))
(declare-fun temp12951_11 () (_ BitVec 64))
(declare-fun temp12951_12 () (_ BitVec 64))
(declare-fun temp12951_13 () (_ BitVec 64))
(declare-fun temp12951_14 () (_ BitVec 64))
(declare-fun temp12951_15 () (_ BitVec 64))
(declare-fun temp12951_16 () (_ BitVec 64))
(declare-fun temp12951_17 () (_ BitVec 64))
(declare-fun temp12951_18 () (_ BitVec 64))
(declare-fun temp12951_19 () (_ BitVec 64))
(declare-fun temp12951_20 () (_ BitVec 64))
(declare-fun temp12951_21 () (_ BitVec 64))
(declare-fun var148344 () (_ BitVec 64))
(declare-fun temp12951_22 () (_ BitVec 64))
(declare-fun temp12951_23 () (_ BitVec 64))
(declare-fun var148345 () (_ BitVec 64))
(declare-fun temp12951_25 () (_ BitVec 64))
(declare-fun temp12951_24 () (_ BitVec 64))
(declare-fun temp12951_27 () (_ BitVec 64))
(declare-fun temp12951_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp12951_28 () (_ BitVec 64))
(declare-fun temp12951_29 () (_ BitVec 64))
(declare-fun var462151 () (_ BitVec 64))
(declare-fun var527698 () (_ BitVec 64))
(declare-fun temp12951_30 () (_ BitVec 64))
(declare-fun var1064603 () (_ BitVec 64))
(declare-fun temp12951_31 () (_ BitVec 64))
(declare-fun var1064652 () (_ BitVec 64))
(declare-fun temp12951_32 () (_ BitVec 64))
(declare-fun temp12951_33 () (_ BitVec 64))
(declare-fun var1315402 () (_ BitVec 64))
(declare-fun temp12951_34 () (_ BitVec 64))
(declare-fun var2036298 () (_ BitVec 64))
(declare-fun temp12951_35 () (_ BitVec 64))
(declare-fun var1064769 () (_ BitVec 64))
(declare-fun temp12951_36 () (_ BitVec 64))
(declare-fun temp12951_37 () (_ BitVec 64))
(declare-fun var1064833 () (_ BitVec 64))
(declare-fun temp12951_38 () (_ BitVec 64))
(declare-fun var1064857 () (_ BitVec 64))
(declare-fun var1064858 () (_ BitVec 64))
(declare-fun temp12951_39 () (_ BitVec 64))
(declare-fun var3226268 () (_ BitVec 64))
(declare-fun var3226269 () (_ BitVec 64))
(declare-fun var3226272 () (_ BitVec 64))
(declare-fun var3226433 () (_ BitVec 64))
(declare-fun temp12951_41 () (_ BitVec 64))
(declare-fun temp12951_40 () (_ BitVec 64))
(declare-fun var148387 () (_ BitVec 64))
(declare-fun var148388 () (_ BitVec 64))
(declare-fun temp12951_42 () (_ BitVec 64))
(declare-fun temp12951_43 () (_ BitVec 64))
(declare-fun var6688548 () (_ BitVec 64))
(declare-fun temp12951_44 () (_ BitVec 64))
(declare-fun var6688563 () (_ BitVec 64))
(declare-fun temp12951_45 () (_ BitVec 64))
(declare-fun var6688565 () (_ BitVec 64))
(declare-fun temp12951_46 () (_ BitVec 64))
(declare-fun var6688628 () (_ BitVec 64))
(declare-fun temp12951_47 () (_ BitVec 64))
(declare-fun var6754084 () (_ BitVec 64))
(declare-fun temp12951_48 () (_ BitVec 64))
(declare-fun var6754099 () (_ BitVec 64))
(declare-fun temp12951_49 () (_ BitVec 64))
(declare-fun var6754101 () (_ BitVec 64))
(declare-fun temp12951_50 () (_ BitVec 64))
(declare-fun var6754164 () (_ BitVec 64))
(declare-fun temp12951_51 () (_ BitVec 64))
(declare-fun var6963596 () (_ BitVec 64))
(declare-fun temp12951_52 () (_ BitVec 64))
(declare-fun var7147300 () (_ BitVec 64))
(declare-fun temp12951_53 () (_ BitVec 64))
(declare-fun var7147315 () (_ BitVec 64))
(declare-fun temp12951_54 () (_ BitVec 64))
(declare-fun var7147317 () (_ BitVec 64))
(declare-fun temp12951_55 () (_ BitVec 64))
(declare-fun var7147380 () (_ BitVec 64))
(declare-fun temp12951_56 () (_ BitVec 64))
(declare-fun var7212836 () (_ BitVec 64))
(declare-fun temp12951_57 () (_ BitVec 64))
(declare-fun var7212851 () (_ BitVec 64))
(declare-fun temp12951_58 () (_ BitVec 64))
(declare-fun var7212853 () (_ BitVec 64))
(declare-fun temp12951_59 () (_ BitVec 64))
(declare-fun var7212916 () (_ BitVec 64))
(assert (= temp12951_1 #x0000000000000000))
(assert (= var148331
   (ite (= ARGNAME_input_NAMEEND_DIM temp12951_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12951_2 #x0000000000000000))
(assert (= var148331 temp12951_2))
(assert (= temp12951_3 #x0000000000000000))
(assert (= temp12951_4 temp12951_3))
(assert (= temp12951_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp12951_4)))
(assert (= temp12951_6 #x0000000000000001))
(assert (= temp12951_7 temp12951_6))
(assert (= temp12951_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp12951_7)))
(assert (= temp12951_9 #x0000000000000002))
(assert (= temp12951_10 temp12951_9))
(assert (= temp12951_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp12951_10)))
(assert (= temp12951_12 #x0000000000000003))
(assert (= temp12951_13 temp12951_12))
(assert (= temp12951_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp12951_13)))
(assert (= temp12951_15 #x0000000000000004))
(assert (= temp12951_16 temp12951_15))
(assert (= temp12951_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp12951_16)))
(assert (= temp12951_18 #x0000000000000005))
(assert (= temp12951_19 temp12951_18))
(assert (= temp12951_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp12951_19)))
(assert (= temp12951_21 #x0000000000000000))
(assert (= temp12951_22
   (ite (bvslt var148344 temp12951_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var148344)
        var148344)))
(assert (= temp12951_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp12951_22)))
(assert (= var148345 temp12951_23))
(assert (bvslt (ite (bvslt var148344 temp12951_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var148344)
            var148344)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp12951_25 #x0000000000000000))
(assert (= temp12951_24 temp12951_25))
(assert (= temp12951_27 #x0000000000000000))
(assert (= temp12951_26 temp12951_27))
(assert (= var396610
   (ite (bvslt temp12951_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12951_28
   (ite (= var396610 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp12951_26)))
(assert (= temp12951_29 #x0000000000000000))
(assert (= var462151 temp12951_29))
(assert (= var527698 var462151))
(assert (= temp12951_30 #x0000000000000001))
(assert (= var1064603 temp12951_30))
(assert (= temp12951_31 #x0000000000000000))
(assert (= var1064652
   (ite (= ARGNAME_input_NAMEEND_DIM temp12951_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12951_32 #x0000000000000000))
(assert (= var1064652 temp12951_32))
(assert (= temp12951_33 #x0000000000000005))
(assert (= var1315402 temp12951_33))
(assert (= temp12951_34 #x0000000000000005))
(assert (= var2036298 temp12951_34))
(assert (= temp12951_35 #x0000000000000001))
(assert (= var1064769
   (ite (bvslt var1064603 temp12951_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp12951_36 #x0000000000000000))
(assert (= var1064769 temp12951_36))
(assert (= temp12951_37 #x0000000000000000))
(assert (= var1064833 temp12951_37))
(assert (= temp12951_38 #xffffffffffffffff))
(assert (= var1064857 (bvxor var1064833 temp12951_38)))
(assert (= var1064858 (bvadd var1064857 var1064603)))
(assert (= temp12951_39 #x0000000000000000))
(assert (= var3226268 temp12951_39))
(assert (= var3226269 var1064833))
(assert (= var3226272 var1064603))
(assert (= var3226433 var3226268))
(assert (= temp12951_41 #x0000000000000000))
(assert (= temp12951_40 temp12951_41))
(assert (= var148387 var148345))
(assert (= var148388
   (ite (= temp12951_24 var148387) #x0000000000000001 #x0000000000000000)))
(assert (= temp12951_42 #x0000000000000001))
(assert (= var148388 temp12951_42))
(assert (= temp12951_43 #x0000000000000000))
(assert (= var6688548 temp12951_43))
(assert (= temp12951_44 #x0000000000003fff))
(assert (= var6688563 (bvand var6688548 temp12951_44)))
(assert (= temp12951_45 #x0000000000000000))
(assert (= var6688565
   (ite (= var6688563 temp12951_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp12951_46 #x0000000000000001))
(assert (= var6688565 temp12951_46))
(assert (= var6688628 var6688548))
(assert (= temp12951_47 #x0000000000000000))
(assert (= var6754084 temp12951_47))
(assert (= temp12951_48 #x0000000000003fff))
(assert (= var6754099 (bvand var6754084 temp12951_48)))
(assert (= temp12951_49 #x0000000000000000))
(assert (= var6754101
   (ite (= var6754099 temp12951_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp12951_50 #x0000000000000001))
(assert (= var6754101 temp12951_50))
(assert (= var6754164 var6754084))
(assert (= temp12951_51 #x0000000000000000))
(assert (= var6963596 temp12951_51))
(assert (= temp12951_52 #x0000000000000000))
(assert (= var7147300 temp12951_52))
(assert (= temp12951_53 #x0000000000003fff))
(assert (= var7147315 (bvand var7147300 temp12951_53)))
(assert (= temp12951_54 #x0000000000000000))
(assert (= var7147317
   (ite (= var7147315 temp12951_54) #x0000000000000001 #x0000000000000000)))
(assert (= temp12951_55 #x0000000000000001))
(assert (= var7147317 temp12951_55))
(assert (= var7147380 var7147300))
(assert (= temp12951_56 #x0000000000000000))
(assert (= var7212836 temp12951_56))
(assert (= temp12951_57 #x0000000000003fff))
(assert (= var7212851 (bvand var7212836 temp12951_57)))
(assert (= temp12951_58 #x0000000000000000))
(assert (= var7212853
   (ite (= var7212851 temp12951_58) #x0000000000000001 #x0000000000000000)))
(assert (= temp12951_59 #x0000000000000001))
(assert (= var7212853 temp12951_59))
(assert (= var7212916 var7212836))
(model-add temp12951_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp12951_2 () (_ BitVec 64) #x0000000000000000)
(model-add var148331 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






