(declare-fun temp938_1 () (_ BitVec 64))
(declare-fun temp938_2 () (_ BitVec 64))
(declare-fun var148331 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp938_3 () (_ BitVec 64))
(declare-fun temp938_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp938_5 () (_ BitVec 64))
(declare-fun temp938_6 () (_ BitVec 64))
(declare-fun temp938_7 () (_ BitVec 64))
(declare-fun temp938_8 () (_ BitVec 64))
(declare-fun temp938_9 () (_ BitVec 64))
(declare-fun temp938_10 () (_ BitVec 64))
(declare-fun temp938_11 () (_ BitVec 64))
(declare-fun temp938_12 () (_ BitVec 64))
(declare-fun temp938_13 () (_ BitVec 64))
(declare-fun temp938_14 () (_ BitVec 64))
(declare-fun temp938_15 () (_ BitVec 64))
(declare-fun temp938_16 () (_ BitVec 64))
(declare-fun temp938_17 () (_ BitVec 64))
(declare-fun temp938_18 () (_ BitVec 64))
(declare-fun temp938_19 () (_ BitVec 64))
(declare-fun temp938_20 () (_ BitVec 64))
(declare-fun temp938_21 () (_ BitVec 64))
(declare-fun var148344 () (_ BitVec 64))
(declare-fun temp938_22 () (_ BitVec 64))
(declare-fun temp938_23 () (_ BitVec 64))
(declare-fun var148345 () (_ BitVec 64))
(declare-fun temp938_25 () (_ BitVec 64))
(declare-fun temp938_24 () (_ BitVec 64))
(declare-fun temp938_27 () (_ BitVec 64))
(declare-fun temp938_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp938_28 () (_ BitVec 64))
(declare-fun temp938_29 () (_ BitVec 64))
(declare-fun var462151 () (_ BitVec 64))
(declare-fun var527698 () (_ BitVec 64))
(declare-fun temp938_30 () (_ BitVec 64))
(declare-fun var1064603 () (_ BitVec 64))
(declare-fun temp938_31 () (_ BitVec 64))
(declare-fun var1064652 () (_ BitVec 64))
(declare-fun temp938_32 () (_ BitVec 64))
(declare-fun temp938_33 () (_ BitVec 64))
(declare-fun var1315402 () (_ BitVec 64))
(declare-fun temp938_34 () (_ BitVec 64))
(declare-fun var2036298 () (_ BitVec 64))
(declare-fun temp938_35 () (_ BitVec 64))
(declare-fun var1064769 () (_ BitVec 64))
(declare-fun temp938_36 () (_ BitVec 64))
(declare-fun temp938_37 () (_ BitVec 64))
(declare-fun var1064833 () (_ BitVec 64))
(declare-fun var1064845 () (_ BitVec 64))
(declare-fun temp938_38 () (_ BitVec 64))
(declare-fun var1064857 () (_ BitVec 64))
(declare-fun var1064858 () (_ BitVec 64))
(declare-fun var1064859 () (_ BitVec 64))
(declare-fun var1064860 () (_ BitVec 64))
(declare-fun temp938_39 () (_ BitVec 64))
(declare-fun var3226268 () (_ BitVec 64))
(declare-fun var3226269 () (_ BitVec 64))
(declare-fun var3226270 () (_ BitVec 64))
(declare-fun var3226272 () (_ BitVec 64))
(declare-fun var3226433 () (_ BitVec 64))
(declare-fun temp938_41 () (_ BitVec 64))
(declare-fun temp938_40 () (_ BitVec 64))
(declare-fun var148387 () (_ BitVec 64))
(declare-fun var148388 () (_ BitVec 64))
(declare-fun temp938_42 () (_ BitVec 64))
(declare-fun temp938_43 () (_ BitVec 64))
(declare-fun var6623012 () (_ BitVec 64))
(declare-fun temp938_44 () (_ BitVec 64))
(declare-fun var6623027 () (_ BitVec 64))
(declare-fun temp938_45 () (_ BitVec 64))
(declare-fun var6623029 () (_ BitVec 64))
(declare-fun temp938_46 () (_ BitVec 64))
(declare-fun var6623092 () (_ BitVec 64))
(declare-fun temp938_47 () (_ BitVec 64))
(declare-fun var6688548 () (_ BitVec 64))
(declare-fun temp938_48 () (_ BitVec 64))
(declare-fun var6688563 () (_ BitVec 64))
(declare-fun temp938_49 () (_ BitVec 64))
(declare-fun var6688565 () (_ BitVec 64))
(declare-fun temp938_50 () (_ BitVec 64))
(declare-fun var6688628 () (_ BitVec 64))
(declare-fun temp938_51 () (_ BitVec 64))
(declare-fun var6898060 () (_ BitVec 64))
(declare-fun temp938_52 () (_ BitVec 64))
(declare-fun var7081764 () (_ BitVec 64))
(declare-fun temp938_53 () (_ BitVec 64))
(declare-fun var7081779 () (_ BitVec 64))
(declare-fun temp938_54 () (_ BitVec 64))
(declare-fun var7081781 () (_ BitVec 64))
(declare-fun temp938_55 () (_ BitVec 64))
(declare-fun var7081844 () (_ BitVec 64))
(declare-fun temp938_56 () (_ BitVec 64))
(declare-fun var7147300 () (_ BitVec 64))
(declare-fun temp938_57 () (_ BitVec 64))
(declare-fun var7147315 () (_ BitVec 64))
(declare-fun temp938_58 () (_ BitVec 64))
(declare-fun var7147317 () (_ BitVec 64))
(declare-fun temp938_59 () (_ BitVec 64))
(declare-fun var7147380 () (_ BitVec 64))
(assert (= temp938_1 #x0000000000000000))
(assert (= var148331
   (ite (= ARGNAME_input_NAMEEND_DIM temp938_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp938_2 #x0000000000000000))
(assert (= var148331 temp938_2))
(assert (= temp938_3 #x0000000000000000))
(assert (= temp938_4 temp938_3))
(assert (= temp938_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp938_4)))
(assert (= temp938_6 #x0000000000000001))
(assert (= temp938_7 temp938_6))
(assert (= temp938_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp938_7)))
(assert (= temp938_9 #x0000000000000002))
(assert (= temp938_10 temp938_9))
(assert (= temp938_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp938_10)))
(assert (= temp938_12 #x0000000000000003))
(assert (= temp938_13 temp938_12))
(assert (= temp938_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp938_13)))
(assert (= temp938_15 #x0000000000000004))
(assert (= temp938_16 temp938_15))
(assert (= temp938_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp938_16)))
(assert (= temp938_18 #x0000000000000005))
(assert (= temp938_19 temp938_18))
(assert (= temp938_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp938_19)))
(assert (= temp938_21 #x0000000000000000))
(assert (= temp938_22
   (ite (bvslt var148344 temp938_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var148344)
        var148344)))
(assert (= temp938_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp938_22)))
(assert (= var148345 temp938_23))
(assert (bvslt (ite (bvslt var148344 temp938_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var148344)
            var148344)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp938_25 #x0000000000000000))
(assert (= temp938_24 temp938_25))
(assert (= temp938_27 #x0000000000000000))
(assert (= temp938_26 temp938_27))
(assert (= var396610
   (ite (bvslt temp938_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp938_28
   (ite (= var396610 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp938_26)))
(assert (= temp938_29 #x0000000000000000))
(assert (= var462151 temp938_29))
(assert (= var527698 var462151))
(assert (= temp938_30 #x0000000000000001))
(assert (= var1064603 temp938_30))
(assert (= temp938_31 #x0000000000000000))
(assert (= var1064652
   (ite (= ARGNAME_input_NAMEEND_DIM temp938_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp938_32 #x0000000000000000))
(assert (= var1064652 temp938_32))
(assert (= temp938_33 #x0000000000000005))
(assert (= var1315402 temp938_33))
(assert (= temp938_34 #x0000000000000005))
(assert (= var2036298 temp938_34))
(assert (= temp938_35 #x0000000000000001))
(assert (= var1064769
   (ite (bvslt var1064603 temp938_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp938_36 #x0000000000000000))
(assert (= var1064769 temp938_36))
(assert (= temp938_37 #x0000000000000000))
(assert (= var1064833 temp938_37))
(assert (= var1064845 var1064833))
(assert (= temp938_38 #xffffffffffffffff))
(assert (= var1064857 (bvxor var1064833 temp938_38)))
(assert (= var1064858 (bvadd var1064857 var1064603)))
(assert (= var1064859 (bvadd var1064858 var1064845)))
(assert (= var1064860 (bvsdiv var1064859 var1064603)))
(assert (= temp938_39 #x0000000000000000))
(assert (= var3226268 temp938_39))
(assert (= var3226269 var1064833))
(assert (= var3226270 var1064845))
(assert (= var3226272 var1064603))
(assert (= var3226433 var3226268))
(assert (= temp938_41 #x0000000000000000))
(assert (= temp938_40 temp938_41))
(assert (= var148387 var148345))
(assert (= var148388
   (ite (= temp938_24 var148387) #x0000000000000001 #x0000000000000000)))
(assert (= temp938_42 #x0000000000000001))
(assert (= var148388 temp938_42))
(assert (= temp938_43 #x0000000000000000))
(assert (= var6623012 temp938_43))
(assert (= temp938_44 #x0000000000003fff))
(assert (= var6623027 (bvand var6623012 temp938_44)))
(assert (= temp938_45 #x0000000000000000))
(assert (= var6623029
   (ite (= var6623027 temp938_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp938_46 #x0000000000000001))
(assert (= var6623029 temp938_46))
(assert (= var6623092 var6623012))
(assert (= temp938_47 #x0000000000000000))
(assert (= var6688548 temp938_47))
(assert (= temp938_48 #x0000000000003fff))
(assert (= var6688563 (bvand var6688548 temp938_48)))
(assert (= temp938_49 #x0000000000000000))
(assert (= var6688565
   (ite (= var6688563 temp938_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp938_50 #x0000000000000001))
(assert (= var6688565 temp938_50))
(assert (= var6688628 var6688548))
(assert (= temp938_51 #x0000000000000000))
(assert (= var6898060 temp938_51))
(assert (= temp938_52 #x0000000000000000))
(assert (= var7081764 temp938_52))
(assert (= temp938_53 #x0000000000003fff))
(assert (= var7081779 (bvand var7081764 temp938_53)))
(assert (= temp938_54 #x0000000000000000))
(assert (= var7081781
   (ite (= var7081779 temp938_54) #x0000000000000001 #x0000000000000000)))
(assert (= temp938_55 #x0000000000000001))
(assert (= var7081781 temp938_55))
(assert (= var7081844 var7081764))
(assert (= temp938_56 #x0000000000000000))
(assert (= var7147300 temp938_56))
(assert (= temp938_57 #x0000000000003fff))
(assert (= var7147315 (bvand var7147300 temp938_57)))
(assert (= temp938_58 #x0000000000000000))
(assert (= var7147317
   (ite (= var7147315 temp938_58) #x0000000000000001 #x0000000000000000)))
(assert (= temp938_59 #x0000000000000001))
(assert (= var7147317 temp938_59))
(assert (= var7147380 var7147300))
(model-add temp938_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp938_2 () (_ BitVec 64) #x0000000000000000)
(model-add var148331 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






