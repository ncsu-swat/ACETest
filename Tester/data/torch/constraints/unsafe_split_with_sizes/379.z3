(declare-fun temp10507_1 () (_ BitVec 64))
(declare-fun temp10507_2 () (_ BitVec 64))
(declare-fun var148331 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10507_3 () (_ BitVec 64))
(declare-fun temp10507_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10507_5 () (_ BitVec 64))
(declare-fun temp10507_6 () (_ BitVec 64))
(declare-fun temp10507_7 () (_ BitVec 64))
(declare-fun temp10507_8 () (_ BitVec 64))
(declare-fun temp10507_9 () (_ BitVec 64))
(declare-fun temp10507_10 () (_ BitVec 64))
(declare-fun temp10507_11 () (_ BitVec 64))
(declare-fun temp10507_12 () (_ BitVec 64))
(declare-fun temp10507_13 () (_ BitVec 64))
(declare-fun temp10507_14 () (_ BitVec 64))
(declare-fun temp10507_15 () (_ BitVec 64))
(declare-fun temp10507_16 () (_ BitVec 64))
(declare-fun temp10507_17 () (_ BitVec 64))
(declare-fun temp10507_18 () (_ BitVec 64))
(declare-fun temp10507_19 () (_ BitVec 64))
(declare-fun temp10507_20 () (_ BitVec 64))
(declare-fun temp10507_21 () (_ BitVec 64))
(declare-fun var148344 () (_ BitVec 64))
(declare-fun temp10507_22 () (_ BitVec 64))
(declare-fun temp10507_23 () (_ BitVec 64))
(declare-fun var148345 () (_ BitVec 64))
(declare-fun temp10507_25 () (_ BitVec 64))
(declare-fun temp10507_24 () (_ BitVec 64))
(declare-fun temp10507_27 () (_ BitVec 64))
(declare-fun temp10507_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp10507_28 () (_ BitVec 64))
(declare-fun temp10507_29 () (_ BitVec 64))
(declare-fun var462151 () (_ BitVec 64))
(declare-fun var527698 () (_ BitVec 64))
(declare-fun temp10507_30 () (_ BitVec 64))
(declare-fun var1064603 () (_ BitVec 64))
(declare-fun temp10507_31 () (_ BitVec 64))
(declare-fun var1064652 () (_ BitVec 64))
(declare-fun temp10507_32 () (_ BitVec 64))
(declare-fun temp10507_33 () (_ BitVec 64))
(declare-fun var1315402 () (_ BitVec 64))
(declare-fun temp10507_34 () (_ BitVec 64))
(declare-fun var2036298 () (_ BitVec 64))
(declare-fun temp10507_35 () (_ BitVec 64))
(declare-fun var1064769 () (_ BitVec 64))
(declare-fun temp10507_36 () (_ BitVec 64))
(declare-fun temp10507_37 () (_ BitVec 64))
(declare-fun var3488412 () (_ BitVec 64))
(declare-fun var3488416 () (_ BitVec 64))
(declare-fun var3488577 () (_ BitVec 64))
(declare-fun temp10507_39 () (_ BitVec 64))
(declare-fun temp10507_38 () (_ BitVec 64))
(declare-fun var148387 () (_ BitVec 64))
(declare-fun var148388 () (_ BitVec 64))
(declare-fun temp10507_40 () (_ BitVec 64))
(declare-fun temp10507_41 () (_ BitVec 64))
(declare-fun var6885156 () (_ BitVec 64))
(declare-fun temp10507_42 () (_ BitVec 64))
(declare-fun var6885171 () (_ BitVec 64))
(declare-fun temp10507_43 () (_ BitVec 64))
(declare-fun var6885173 () (_ BitVec 64))
(declare-fun temp10507_44 () (_ BitVec 64))
(declare-fun var6885236 () (_ BitVec 64))
(declare-fun temp10507_45 () (_ BitVec 64))
(declare-fun var6950692 () (_ BitVec 64))
(declare-fun temp10507_46 () (_ BitVec 64))
(declare-fun var6950707 () (_ BitVec 64))
(declare-fun temp10507_47 () (_ BitVec 64))
(declare-fun var6950709 () (_ BitVec 64))
(declare-fun temp10507_48 () (_ BitVec 64))
(declare-fun var6950772 () (_ BitVec 64))
(declare-fun temp10507_49 () (_ BitVec 64))
(declare-fun var7160204 () (_ BitVec 64))
(declare-fun temp10507_50 () (_ BitVec 64))
(declare-fun var7343908 () (_ BitVec 64))
(declare-fun temp10507_51 () (_ BitVec 64))
(declare-fun var7343923 () (_ BitVec 64))
(declare-fun temp10507_52 () (_ BitVec 64))
(declare-fun var7343925 () (_ BitVec 64))
(declare-fun temp10507_53 () (_ BitVec 64))
(declare-fun var7343988 () (_ BitVec 64))
(declare-fun temp10507_54 () (_ BitVec 64))
(declare-fun var7409444 () (_ BitVec 64))
(declare-fun temp10507_55 () (_ BitVec 64))
(declare-fun var7409459 () (_ BitVec 64))
(declare-fun temp10507_56 () (_ BitVec 64))
(declare-fun var7409461 () (_ BitVec 64))
(declare-fun temp10507_57 () (_ BitVec 64))
(declare-fun var7409524 () (_ BitVec 64))
(assert (= temp10507_1 #x0000000000000000))
(assert (= var148331
   (ite (= ARGNAME_input_NAMEEND_DIM temp10507_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10507_2 #x0000000000000000))
(assert (= var148331 temp10507_2))
(assert (= temp10507_3 #x0000000000000000))
(assert (= temp10507_4 temp10507_3))
(assert (= temp10507_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10507_4)))
(assert (= temp10507_6 #x0000000000000001))
(assert (= temp10507_7 temp10507_6))
(assert (= temp10507_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10507_7)))
(assert (= temp10507_9 #x0000000000000002))
(assert (= temp10507_10 temp10507_9))
(assert (= temp10507_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10507_10)))
(assert (= temp10507_12 #x0000000000000003))
(assert (= temp10507_13 temp10507_12))
(assert (= temp10507_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10507_13)))
(assert (= temp10507_15 #x0000000000000004))
(assert (= temp10507_16 temp10507_15))
(assert (= temp10507_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10507_16)))
(assert (= temp10507_18 #x0000000000000005))
(assert (= temp10507_19 temp10507_18))
(assert (= temp10507_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10507_19)))
(assert (= temp10507_21 #x0000000000000000))
(assert (= temp10507_22
   (ite (bvslt var148344 temp10507_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var148344)
        var148344)))
(assert (= temp10507_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10507_22)))
(assert (= var148345 temp10507_23))
(assert (bvslt (ite (bvslt var148344 temp10507_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var148344)
            var148344)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10507_25 #x0000000000000000))
(assert (= temp10507_24 temp10507_25))
(assert (= temp10507_27 #x0000000000000000))
(assert (= temp10507_26 temp10507_27))
(assert (= var396610
   (ite (bvslt temp10507_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10507_28
   (ite (= var396610 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp10507_26)))
(assert (= temp10507_29 #x0000000000000000))
(assert (= var462151 temp10507_29))
(assert (= var527698 var462151))
(assert (= temp10507_30 #x0000000000000001))
(assert (= var1064603 temp10507_30))
(assert (= temp10507_31 #x0000000000000000))
(assert (= var1064652
   (ite (= ARGNAME_input_NAMEEND_DIM temp10507_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10507_32 #x0000000000000000))
(assert (= var1064652 temp10507_32))
(assert (= temp10507_33 #x0000000000000005))
(assert (= var1315402 temp10507_33))
(assert (= temp10507_34 #x0000000000000005))
(assert (= var2036298 temp10507_34))
(assert (= temp10507_35 #x0000000000000001))
(assert (= var1064769
   (ite (bvslt var1064603 temp10507_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp10507_36 #x0000000000000000))
(assert (= var1064769 temp10507_36))
(assert (= temp10507_37 #x0000000000000000))
(assert (= var3488412 temp10507_37))
(assert (= var3488416 var1064603))
(assert (= var3488577 var3488412))
(assert (= temp10507_39 #x0000000000000000))
(assert (= temp10507_38 temp10507_39))
(assert (= var148387 var148345))
(assert (= var148388
   (ite (= temp10507_24 var148387) #x0000000000000001 #x0000000000000000)))
(assert (= temp10507_40 #x0000000000000001))
(assert (= var148388 temp10507_40))
(assert (= temp10507_41 #x0000000000000000))
(assert (= var6885156 temp10507_41))
(assert (= temp10507_42 #x0000000000003fff))
(assert (= var6885171 (bvand var6885156 temp10507_42)))
(assert (= temp10507_43 #x0000000000000000))
(assert (= var6885173
   (ite (= var6885171 temp10507_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp10507_44 #x0000000000000001))
(assert (= var6885173 temp10507_44))
(assert (= var6885236 var6885156))
(assert (= temp10507_45 #x0000000000000000))
(assert (= var6950692 temp10507_45))
(assert (= temp10507_46 #x0000000000003fff))
(assert (= var6950707 (bvand var6950692 temp10507_46)))
(assert (= temp10507_47 #x0000000000000000))
(assert (= var6950709
   (ite (= var6950707 temp10507_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp10507_48 #x0000000000000001))
(assert (= var6950709 temp10507_48))
(assert (= var6950772 var6950692))
(assert (= temp10507_49 #x0000000000000000))
(assert (= var7160204 temp10507_49))
(assert (= temp10507_50 #x0000000000000000))
(assert (= var7343908 temp10507_50))
(assert (= temp10507_51 #x0000000000003fff))
(assert (= var7343923 (bvand var7343908 temp10507_51)))
(assert (= temp10507_52 #x0000000000000000))
(assert (= var7343925
   (ite (= var7343923 temp10507_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp10507_53 #x0000000000000001))
(assert (= var7343925 temp10507_53))
(assert (= var7343988 var7343908))
(assert (= temp10507_54 #x0000000000000000))
(assert (= var7409444 temp10507_54))
(assert (= temp10507_55 #x0000000000003fff))
(assert (= var7409459 (bvand var7409444 temp10507_55)))
(assert (= temp10507_56 #x0000000000000000))
(assert (= var7409461
   (ite (= var7409459 temp10507_56) #x0000000000000001 #x0000000000000000)))
(assert (= temp10507_57 #x0000000000000001))
(assert (= var7409461 temp10507_57))
(assert (= var7409524 var7409444))
(model-add temp10507_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp10507_2 () (_ BitVec 64) #x0000000000000000)
(model-add var148331 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






