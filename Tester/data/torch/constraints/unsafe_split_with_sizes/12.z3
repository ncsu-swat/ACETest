(declare-fun temp780_1 () (_ BitVec 64))
(declare-fun temp780_2 () (_ BitVec 64))
(declare-fun var148331 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp780_3 () (_ BitVec 64))
(declare-fun temp780_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_5 () (_ BitVec 64))
(declare-fun temp780_6 () (_ BitVec 64))
(declare-fun temp780_7 () (_ BitVec 64))
(declare-fun temp780_8 () (_ BitVec 64))
(declare-fun temp780_9 () (_ BitVec 64))
(declare-fun temp780_10 () (_ BitVec 64))
(declare-fun temp780_11 () (_ BitVec 64))
(declare-fun temp780_12 () (_ BitVec 64))
(declare-fun temp780_13 () (_ BitVec 64))
(declare-fun temp780_14 () (_ BitVec 64))
(declare-fun temp780_15 () (_ BitVec 64))
(declare-fun temp780_16 () (_ BitVec 64))
(declare-fun temp780_17 () (_ BitVec 64))
(declare-fun temp780_18 () (_ BitVec 64))
(declare-fun temp780_19 () (_ BitVec 64))
(declare-fun temp780_20 () (_ BitVec 64))
(declare-fun temp780_21 () (_ BitVec 64))
(declare-fun var148344 () (_ BitVec 64))
(declare-fun temp780_22 () (_ BitVec 64))
(declare-fun temp780_23 () (_ BitVec 64))
(declare-fun var148345 () (_ BitVec 64))
(declare-fun temp780_25 () (_ BitVec 64))
(declare-fun temp780_24 () (_ BitVec 64))
(declare-fun temp780_27 () (_ BitVec 64))
(declare-fun temp780_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp780_28 () (_ BitVec 64))
(declare-fun temp780_29 () (_ BitVec 64))
(declare-fun var462151 () (_ BitVec 64))
(declare-fun var527698 () (_ BitVec 64))
(declare-fun temp780_30 () (_ BitVec 64))
(declare-fun var1064603 () (_ BitVec 64))
(declare-fun temp780_31 () (_ BitVec 64))
(declare-fun var1064652 () (_ BitVec 64))
(declare-fun temp780_32 () (_ BitVec 64))
(declare-fun temp780_33 () (_ BitVec 64))
(declare-fun var1315402 () (_ BitVec 64))
(declare-fun temp780_34 () (_ BitVec 64))
(declare-fun var2036298 () (_ BitVec 64))
(declare-fun temp780_35 () (_ BitVec 64))
(declare-fun var1064769 () (_ BitVec 64))
(declare-fun temp780_36 () (_ BitVec 64))
(declare-fun temp780_37 () (_ BitVec 64))
(declare-fun var1064833 () (_ BitVec 64))
(declare-fun var1064845 () (_ BitVec 64))
(declare-fun temp780_38 () (_ BitVec 64))
(declare-fun var1064857 () (_ BitVec 64))
(declare-fun var1064858 () (_ BitVec 64))
(declare-fun var1064859 () (_ BitVec 64))
(declare-fun var1064860 () (_ BitVec 64))
(declare-fun temp780_39 () (_ BitVec 64))
(declare-fun var3226268 () (_ BitVec 64))
(declare-fun var3226269 () (_ BitVec 64))
(declare-fun var3226270 () (_ BitVec 64))
(declare-fun var3226272 () (_ BitVec 64))
(declare-fun temp780_40 () (_ BitVec 64))
(declare-fun temp780_41 () (_ BitVec 64))
(declare-fun var3875705 () (_ BitVec 64))
(declare-fun var3875709 () (_ BitVec 64))
(declare-fun temp780_42 () (_ BitVec 64))
(declare-fun temp780_43 () (_ BitVec 64))
(declare-fun var4203385 () (_ BitVec 64))
(declare-fun var4203389 () (_ BitVec 64))
(declare-fun var3226433 () (_ BitVec 64))
(declare-fun temp780_45 () (_ BitVec 64))
(declare-fun temp780_44 () (_ BitVec 64))
(declare-fun var148387 () (_ BitVec 64))
(declare-fun var148388 () (_ BitVec 64))
(declare-fun temp780_46 () (_ BitVec 64))
(assert (= temp780_1 #x0000000000000000))
(assert (= var148331
   (ite (= ARGNAME_input_NAMEEND_DIM temp780_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_2 #x0000000000000000))
(assert (= var148331 temp780_2))
(assert (= temp780_3 #x0000000000000000))
(assert (= temp780_4 temp780_3))
(assert (= temp780_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_4)))
(assert (= temp780_6 #x0000000000000001))
(assert (= temp780_7 temp780_6))
(assert (= temp780_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_7)))
(assert (= temp780_9 #x0000000000000002))
(assert (= temp780_10 temp780_9))
(assert (= temp780_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_10)))
(assert (= temp780_12 #x0000000000000003))
(assert (= temp780_13 temp780_12))
(assert (= temp780_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_13)))
(assert (= temp780_15 #x0000000000000004))
(assert (= temp780_16 temp780_15))
(assert (= temp780_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_16)))
(assert (= temp780_18 #x0000000000000005))
(assert (= temp780_19 temp780_18))
(assert (= temp780_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_19)))
(assert (= temp780_21 #x0000000000000000))
(assert (= temp780_22
   (ite (bvslt var148344 temp780_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var148344)
        var148344)))
(assert (= temp780_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_22)))
(assert (= var148345 temp780_23))
(assert (bvslt (ite (bvslt var148344 temp780_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var148344)
            var148344)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp780_25 #x0000000000000000))
(assert (= temp780_24 temp780_25))
(assert (= temp780_27 #x0000000000000000))
(assert (= temp780_26 temp780_27))
(assert (= var396610
   (ite (bvslt temp780_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_28
   (ite (= var396610 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp780_26)))
(assert (= temp780_29 #x0000000000000000))
(assert (= var462151 temp780_29))
(assert (= var527698 var462151))
(assert (= temp780_30 #x0000000000000001))
(assert (= var1064603 temp780_30))
(assert (= temp780_31 #x0000000000000000))
(assert (= var1064652
   (ite (= ARGNAME_input_NAMEEND_DIM temp780_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_32 #x0000000000000000))
(assert (= var1064652 temp780_32))
(assert (= temp780_33 #x0000000000000005))
(assert (= var1315402 temp780_33))
(assert (= temp780_34 #x0000000000000005))
(assert (= var2036298 temp780_34))
(assert (= temp780_35 #x0000000000000001))
(assert (= var1064769
   (ite (bvslt var1064603 temp780_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_36 #x0000000000000000))
(assert (= var1064769 temp780_36))
(assert (= temp780_37 #x0000000000000000))
(assert (= var1064833 temp780_37))
(assert (= var1064845 var1064833))
(assert (= temp780_38 #xffffffffffffffff))
(assert (= var1064857 (bvxor var1064833 temp780_38)))
(assert (= var1064858 (bvadd var1064857 var1064603)))
(assert (= var1064859 (bvadd var1064858 var1064845)))
(assert (= var1064860 (bvsdiv var1064859 var1064603)))
(assert (= temp780_39 #x0000000000000000))
(assert (= var3226268 temp780_39))
(assert (= var3226269 var1064833))
(assert (= var3226270 var1064845))
(assert (= var3226272 var1064603))
(assert (= temp780_40 #x0000000000000000))
(assert (= var3226268 temp780_40))
(assert (= temp780_41 #x0000000000000000))
(assert (= var3875705 temp780_41))
(assert (= var3875709 var3226272))
(assert (= temp780_42 #x0000000000000000))
(assert (= var3226268 temp780_42))
(assert (= temp780_43 #x0000000000000000))
(assert (= var4203385 temp780_43))
(assert (= var4203389 var3226272))
(assert (= var3226433 var3226268))
(assert (= temp780_45 #x0000000000000000))
(assert (= temp780_44 temp780_45))
(assert (= var148387 var148345))
(assert (= var148388
   (ite (= temp780_24 var148387) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_46 #x0000000000000001))
(assert (= var148388 temp780_46))
(model-add temp780_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp780_2 () (_ BitVec 64) #x0000000000000000)
(model-add var148331 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






