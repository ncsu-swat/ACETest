(declare-fun temp10610_1 () (_ BitVec 64))
(declare-fun temp10610_2 () (_ BitVec 64))
(declare-fun var148331 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10610_3 () (_ BitVec 64))
(declare-fun temp10610_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10610_5 () (_ BitVec 64))
(declare-fun temp10610_6 () (_ BitVec 64))
(declare-fun temp10610_7 () (_ BitVec 64))
(declare-fun temp10610_8 () (_ BitVec 64))
(declare-fun temp10610_9 () (_ BitVec 64))
(declare-fun temp10610_10 () (_ BitVec 64))
(declare-fun temp10610_11 () (_ BitVec 64))
(declare-fun temp10610_12 () (_ BitVec 64))
(declare-fun temp10610_13 () (_ BitVec 64))
(declare-fun temp10610_14 () (_ BitVec 64))
(declare-fun temp10610_15 () (_ BitVec 64))
(declare-fun temp10610_16 () (_ BitVec 64))
(declare-fun temp10610_17 () (_ BitVec 64))
(declare-fun temp10610_18 () (_ BitVec 64))
(declare-fun temp10610_19 () (_ BitVec 64))
(declare-fun temp10610_20 () (_ BitVec 64))
(declare-fun temp10610_21 () (_ BitVec 64))
(declare-fun var148344 () (_ BitVec 64))
(declare-fun temp10610_22 () (_ BitVec 64))
(declare-fun temp10610_23 () (_ BitVec 64))
(declare-fun var148345 () (_ BitVec 64))
(declare-fun temp10610_25 () (_ BitVec 64))
(declare-fun temp10610_24 () (_ BitVec 64))
(declare-fun temp10610_27 () (_ BitVec 64))
(declare-fun temp10610_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp10610_28 () (_ BitVec 64))
(declare-fun temp10610_29 () (_ BitVec 64))
(declare-fun var462151 () (_ BitVec 64))
(declare-fun var527698 () (_ BitVec 64))
(declare-fun temp10610_30 () (_ BitVec 64))
(declare-fun var1064603 () (_ BitVec 64))
(declare-fun temp10610_31 () (_ BitVec 64))
(declare-fun var1064652 () (_ BitVec 64))
(declare-fun temp10610_32 () (_ BitVec 64))
(declare-fun temp10610_33 () (_ BitVec 64))
(declare-fun var1315402 () (_ BitVec 64))
(declare-fun temp10610_34 () (_ BitVec 64))
(declare-fun var2036298 () (_ BitVec 64))
(declare-fun temp10610_35 () (_ BitVec 64))
(declare-fun var1064769 () (_ BitVec 64))
(declare-fun temp10610_36 () (_ BitVec 64))
(declare-fun temp10610_37 () (_ BitVec 64))
(declare-fun var3488412 () (_ BitVec 64))
(declare-fun var3488416 () (_ BitVec 64))
(declare-fun temp10610_39 () (_ BitVec 64))
(declare-fun temp10610_38 () (_ BitVec 64))
(declare-fun var148387 () (_ BitVec 64))
(declare-fun var148388 () (_ BitVec 64))
(declare-fun temp10610_40 () (_ BitVec 64))
(declare-fun temp10610_41 () (_ BitVec 64))
(declare-fun var7278372 () (_ BitVec 64))
(declare-fun temp10610_42 () (_ BitVec 64))
(declare-fun var7278387 () (_ BitVec 64))
(declare-fun temp10610_43 () (_ BitVec 64))
(declare-fun var7278389 () (_ BitVec 64))
(declare-fun temp10610_44 () (_ BitVec 64))
(declare-fun var7278452 () (_ BitVec 64))
(declare-fun temp10610_45 () (_ BitVec 64))
(declare-fun var7343908 () (_ BitVec 64))
(declare-fun temp10610_46 () (_ BitVec 64))
(declare-fun var7343923 () (_ BitVec 64))
(declare-fun temp10610_47 () (_ BitVec 64))
(declare-fun var7343925 () (_ BitVec 64))
(declare-fun temp10610_48 () (_ BitVec 64))
(declare-fun var7343988 () (_ BitVec 64))
(declare-fun temp10610_49 () (_ BitVec 64))
(declare-fun var7553420 () (_ BitVec 64))
(declare-fun temp10610_50 () (_ BitVec 64))
(declare-fun var7737124 () (_ BitVec 64))
(declare-fun temp10610_51 () (_ BitVec 64))
(declare-fun var7737139 () (_ BitVec 64))
(declare-fun temp10610_52 () (_ BitVec 64))
(declare-fun var7737141 () (_ BitVec 64))
(declare-fun temp10610_53 () (_ BitVec 64))
(declare-fun var7737204 () (_ BitVec 64))
(declare-fun temp10610_54 () (_ BitVec 64))
(declare-fun var7802660 () (_ BitVec 64))
(declare-fun temp10610_55 () (_ BitVec 64))
(declare-fun var7802675 () (_ BitVec 64))
(declare-fun temp10610_56 () (_ BitVec 64))
(declare-fun var7802677 () (_ BitVec 64))
(declare-fun temp10610_57 () (_ BitVec 64))
(declare-fun var7802740 () (_ BitVec 64))
(assert (= temp10610_1 #x0000000000000000))
(assert (= var148331
   (ite (= ARGNAME_input_NAMEEND_DIM temp10610_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_2 #x0000000000000000))
(assert (= var148331 temp10610_2))
(assert (= temp10610_3 #x0000000000000000))
(assert (= temp10610_4 temp10610_3))
(assert (= temp10610_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_4)))
(assert (= temp10610_6 #x0000000000000001))
(assert (= temp10610_7 temp10610_6))
(assert (= temp10610_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_7)))
(assert (= temp10610_9 #x0000000000000002))
(assert (= temp10610_10 temp10610_9))
(assert (= temp10610_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_10)))
(assert (= temp10610_12 #x0000000000000003))
(assert (= temp10610_13 temp10610_12))
(assert (= temp10610_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_13)))
(assert (= temp10610_15 #x0000000000000004))
(assert (= temp10610_16 temp10610_15))
(assert (= temp10610_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_16)))
(assert (= temp10610_18 #x0000000000000005))
(assert (= temp10610_19 temp10610_18))
(assert (= temp10610_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_19)))
(assert (= temp10610_21 #x0000000000000000))
(assert (= temp10610_22
   (ite (bvslt var148344 temp10610_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var148344)
        var148344)))
(assert (= temp10610_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_22)))
(assert (= var148345 temp10610_23))
(assert (bvslt (ite (bvslt var148344 temp10610_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var148344)
            var148344)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10610_25 #x0000000000000000))
(assert (= temp10610_24 temp10610_25))
(assert (= temp10610_27 #x0000000000000000))
(assert (= temp10610_26 temp10610_27))
(assert (= var396610
   (ite (bvslt temp10610_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_28
   (ite (= var396610 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp10610_26)))
(assert (= temp10610_29 #x0000000000000000))
(assert (= var462151 temp10610_29))
(assert (= var527698 var462151))
(assert (= temp10610_30 #x0000000000000001))
(assert (= var1064603 temp10610_30))
(assert (= temp10610_31 #x0000000000000000))
(assert (= var1064652
   (ite (= ARGNAME_input_NAMEEND_DIM temp10610_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_32 #x0000000000000000))
(assert (= var1064652 temp10610_32))
(assert (= temp10610_33 #x0000000000000005))
(assert (= var1315402 temp10610_33))
(assert (= temp10610_34 #x0000000000000005))
(assert (= var2036298 temp10610_34))
(assert (= temp10610_35 #x0000000000000001))
(assert (= var1064769
   (ite (bvslt var1064603 temp10610_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_36 #x0000000000000000))
(assert (= var1064769 temp10610_36))
(assert (= temp10610_37 #x0000000000000000))
(assert (= var3488412 temp10610_37))
(assert (= var3488416 var1064603))
(assert (= temp10610_39 #x0000000000000000))
(assert (= temp10610_38 temp10610_39))
(assert (= var148387 var148345))
(assert (= var148388
   (ite (= temp10610_24 var148387) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_40 #x0000000000000001))
(assert (= var148388 temp10610_40))
(assert (= temp10610_41 #x0000000000000000))
(assert (= var7278372 temp10610_41))
(assert (= temp10610_42 #x0000000000003fff))
(assert (= var7278387 (bvand var7278372 temp10610_42)))
(assert (= temp10610_43 #x0000000000000000))
(assert (= var7278389
   (ite (= var7278387 temp10610_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_44 #x0000000000000001))
(assert (= var7278389 temp10610_44))
(assert (= var7278452 var7278372))
(assert (= temp10610_45 #x0000000000000000))
(assert (= var7343908 temp10610_45))
(assert (= temp10610_46 #x0000000000003fff))
(assert (= var7343923 (bvand var7343908 temp10610_46)))
(assert (= temp10610_47 #x0000000000000000))
(assert (= var7343925
   (ite (= var7343923 temp10610_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_48 #x0000000000000001))
(assert (= var7343925 temp10610_48))
(assert (= var7343988 var7343908))
(assert (= temp10610_49 #x0000000000000000))
(assert (= var7553420 temp10610_49))
(assert (= temp10610_50 #x0000000000000000))
(assert (= var7737124 temp10610_50))
(assert (= temp10610_51 #x0000000000003fff))
(assert (= var7737139 (bvand var7737124 temp10610_51)))
(assert (= temp10610_52 #x0000000000000000))
(assert (= var7737141
   (ite (= var7737139 temp10610_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_53 #x0000000000000001))
(assert (= var7737141 temp10610_53))
(assert (= var7737204 var7737124))
(assert (= temp10610_54 #x0000000000000000))
(assert (= var7802660 temp10610_54))
(assert (= temp10610_55 #x0000000000003fff))
(assert (= var7802675 (bvand var7802660 temp10610_55)))
(assert (= temp10610_56 #x0000000000000000))
(assert (= var7802677
   (ite (= var7802675 temp10610_56) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_57 #x0000000000000001))
(assert (= var7802677 temp10610_57))
(assert (= var7802740 var7802660))
(model-add temp10610_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp10610_2 () (_ BitVec 64) #x0000000000000000)
(model-add var148331 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






