(declare-fun temp10662_1 () (_ BitVec 64))
(declare-fun temp10662_2 () (_ BitVec 64))
(declare-fun var148331 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10662_3 () (_ BitVec 64))
(declare-fun temp10662_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10662_5 () (_ BitVec 64))
(declare-fun temp10662_6 () (_ BitVec 64))
(declare-fun temp10662_7 () (_ BitVec 64))
(declare-fun temp10662_8 () (_ BitVec 64))
(declare-fun temp10662_9 () (_ BitVec 64))
(declare-fun temp10662_10 () (_ BitVec 64))
(declare-fun temp10662_11 () (_ BitVec 64))
(declare-fun temp10662_12 () (_ BitVec 64))
(declare-fun temp10662_13 () (_ BitVec 64))
(declare-fun temp10662_14 () (_ BitVec 64))
(declare-fun temp10662_15 () (_ BitVec 64))
(declare-fun temp10662_16 () (_ BitVec 64))
(declare-fun temp10662_17 () (_ BitVec 64))
(declare-fun temp10662_18 () (_ BitVec 64))
(declare-fun temp10662_19 () (_ BitVec 64))
(declare-fun temp10662_20 () (_ BitVec 64))
(declare-fun temp10662_21 () (_ BitVec 64))
(declare-fun var148344 () (_ BitVec 64))
(declare-fun temp10662_22 () (_ BitVec 64))
(declare-fun temp10662_23 () (_ BitVec 64))
(declare-fun var148345 () (_ BitVec 64))
(declare-fun temp10662_25 () (_ BitVec 64))
(declare-fun temp10662_24 () (_ BitVec 64))
(declare-fun temp10662_27 () (_ BitVec 64))
(declare-fun temp10662_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp10662_28 () (_ BitVec 64))
(declare-fun temp10662_29 () (_ BitVec 64))
(declare-fun var462151 () (_ BitVec 64))
(declare-fun var527698 () (_ BitVec 64))
(declare-fun temp10662_30 () (_ BitVec 64))
(declare-fun var1064603 () (_ BitVec 64))
(declare-fun temp10662_31 () (_ BitVec 64))
(declare-fun var1064652 () (_ BitVec 64))
(declare-fun temp10662_32 () (_ BitVec 64))
(declare-fun temp10662_33 () (_ BitVec 64))
(declare-fun var1315402 () (_ BitVec 64))
(declare-fun temp10662_34 () (_ BitVec 64))
(declare-fun var2036298 () (_ BitVec 64))
(declare-fun temp10662_35 () (_ BitVec 64))
(declare-fun var1064769 () (_ BitVec 64))
(declare-fun temp10662_36 () (_ BitVec 64))
(declare-fun temp10662_37 () (_ BitVec 64))
(declare-fun var3488412 () (_ BitVec 64))
(declare-fun var3488416 () (_ BitVec 64))
(declare-fun temp10662_39 () (_ BitVec 64))
(declare-fun temp10662_38 () (_ BitVec 64))
(declare-fun var148387 () (_ BitVec 64))
(declare-fun var148388 () (_ BitVec 64))
(declare-fun temp10662_40 () (_ BitVec 64))
(declare-fun temp10662_41 () (_ BitVec 64))
(declare-fun var7343908 () (_ BitVec 64))
(declare-fun temp10662_42 () (_ BitVec 64))
(declare-fun var7343923 () (_ BitVec 64))
(declare-fun temp10662_43 () (_ BitVec 64))
(declare-fun var7343925 () (_ BitVec 64))
(declare-fun temp10662_44 () (_ BitVec 64))
(declare-fun var7343988 () (_ BitVec 64))
(declare-fun temp10662_45 () (_ BitVec 64))
(declare-fun var7409444 () (_ BitVec 64))
(declare-fun temp10662_46 () (_ BitVec 64))
(declare-fun var7409459 () (_ BitVec 64))
(declare-fun temp10662_47 () (_ BitVec 64))
(declare-fun var7409461 () (_ BitVec 64))
(declare-fun temp10662_48 () (_ BitVec 64))
(declare-fun var7409524 () (_ BitVec 64))
(declare-fun temp10662_49 () (_ BitVec 64))
(declare-fun var7618956 () (_ BitVec 64))
(declare-fun temp10662_50 () (_ BitVec 64))
(declare-fun var7802660 () (_ BitVec 64))
(declare-fun temp10662_51 () (_ BitVec 64))
(declare-fun var7802675 () (_ BitVec 64))
(declare-fun temp10662_52 () (_ BitVec 64))
(declare-fun var7802677 () (_ BitVec 64))
(declare-fun temp10662_53 () (_ BitVec 64))
(declare-fun var7802740 () (_ BitVec 64))
(declare-fun temp10662_54 () (_ BitVec 64))
(declare-fun var7868196 () (_ BitVec 64))
(declare-fun temp10662_55 () (_ BitVec 64))
(declare-fun var7868211 () (_ BitVec 64))
(declare-fun temp10662_56 () (_ BitVec 64))
(declare-fun var7868213 () (_ BitVec 64))
(declare-fun temp10662_57 () (_ BitVec 64))
(declare-fun var7868276 () (_ BitVec 64))
(assert (= temp10662_1 #x0000000000000000))
(assert (= var148331
   (ite (= ARGNAME_input_NAMEEND_DIM temp10662_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10662_2 #x0000000000000000))
(assert (= var148331 temp10662_2))
(assert (= temp10662_3 #x0000000000000000))
(assert (= temp10662_4 temp10662_3))
(assert (= temp10662_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10662_4)))
(assert (= temp10662_6 #x0000000000000001))
(assert (= temp10662_7 temp10662_6))
(assert (= temp10662_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10662_7)))
(assert (= temp10662_9 #x0000000000000002))
(assert (= temp10662_10 temp10662_9))
(assert (= temp10662_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10662_10)))
(assert (= temp10662_12 #x0000000000000003))
(assert (= temp10662_13 temp10662_12))
(assert (= temp10662_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10662_13)))
(assert (= temp10662_15 #x0000000000000004))
(assert (= temp10662_16 temp10662_15))
(assert (= temp10662_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10662_16)))
(assert (= temp10662_18 #x0000000000000005))
(assert (= temp10662_19 temp10662_18))
(assert (= temp10662_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10662_19)))
(assert (= temp10662_21 #x0000000000000000))
(assert (= temp10662_22
   (ite (bvslt var148344 temp10662_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var148344)
        var148344)))
(assert (= temp10662_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10662_22)))
(assert (= var148345 temp10662_23))
(assert (bvslt (ite (bvslt var148344 temp10662_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var148344)
            var148344)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10662_25 #x0000000000000000))
(assert (= temp10662_24 temp10662_25))
(assert (= temp10662_27 #x0000000000000000))
(assert (= temp10662_26 temp10662_27))
(assert (= var396610
   (ite (bvslt temp10662_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10662_28
   (ite (= var396610 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp10662_26)))
(assert (= temp10662_29 #x0000000000000000))
(assert (= var462151 temp10662_29))
(assert (= var527698 var462151))
(assert (= temp10662_30 #x0000000000000001))
(assert (= var1064603 temp10662_30))
(assert (= temp10662_31 #x0000000000000000))
(assert (= var1064652
   (ite (= ARGNAME_input_NAMEEND_DIM temp10662_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10662_32 #x0000000000000000))
(assert (= var1064652 temp10662_32))
(assert (= temp10662_33 #x0000000000000005))
(assert (= var1315402 temp10662_33))
(assert (= temp10662_34 #x0000000000000005))
(assert (= var2036298 temp10662_34))
(assert (= temp10662_35 #x0000000000000001))
(assert (= var1064769
   (ite (bvslt var1064603 temp10662_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp10662_36 #x0000000000000000))
(assert (= var1064769 temp10662_36))
(assert (= temp10662_37 #x0000000000000000))
(assert (= var3488412 temp10662_37))
(assert (= var3488416 var1064603))
(assert (= temp10662_39 #x0000000000000000))
(assert (= temp10662_38 temp10662_39))
(assert (= var148387 var148345))
(assert (= var148388
   (ite (= temp10662_24 var148387) #x0000000000000001 #x0000000000000000)))
(assert (= temp10662_40 #x0000000000000001))
(assert (= var148388 temp10662_40))
(assert (= temp10662_41 #x0000000000000000))
(assert (= var7343908 temp10662_41))
(assert (= temp10662_42 #x0000000000003fff))
(assert (= var7343923 (bvand var7343908 temp10662_42)))
(assert (= temp10662_43 #x0000000000000000))
(assert (= var7343925
   (ite (= var7343923 temp10662_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp10662_44 #x0000000000000001))
(assert (= var7343925 temp10662_44))
(assert (= var7343988 var7343908))
(assert (= temp10662_45 #x0000000000000000))
(assert (= var7409444 temp10662_45))
(assert (= temp10662_46 #x0000000000003fff))
(assert (= var7409459 (bvand var7409444 temp10662_46)))
(assert (= temp10662_47 #x0000000000000000))
(assert (= var7409461
   (ite (= var7409459 temp10662_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp10662_48 #x0000000000000001))
(assert (= var7409461 temp10662_48))
(assert (= var7409524 var7409444))
(assert (= temp10662_49 #x0000000000000000))
(assert (= var7618956 temp10662_49))
(assert (= temp10662_50 #x0000000000000000))
(assert (= var7802660 temp10662_50))
(assert (= temp10662_51 #x0000000000003fff))
(assert (= var7802675 (bvand var7802660 temp10662_51)))
(assert (= temp10662_52 #x0000000000000000))
(assert (= var7802677
   (ite (= var7802675 temp10662_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp10662_53 #x0000000000000001))
(assert (= var7802677 temp10662_53))
(assert (= var7802740 var7802660))
(assert (= temp10662_54 #x0000000000000000))
(assert (= var7868196 temp10662_54))
(assert (= temp10662_55 #x0000000000003fff))
(assert (= var7868211 (bvand var7868196 temp10662_55)))
(assert (= temp10662_56 #x0000000000000000))
(assert (= var7868213
   (ite (= var7868211 temp10662_56) #x0000000000000001 #x0000000000000000)))
(assert (= temp10662_57 #x0000000000000001))
(assert (= var7868213 temp10662_57))
(assert (= var7868276 var7868196))
(model-add temp10662_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp10662_2 () (_ BitVec 64) #x0000000000000000)
(model-add var148331 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






