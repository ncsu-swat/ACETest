(declare-fun temp10558_1 () (_ BitVec 64))
(declare-fun temp10558_2 () (_ BitVec 64))
(declare-fun var148331 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10558_3 () (_ BitVec 64))
(declare-fun temp10558_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10558_5 () (_ BitVec 64))
(declare-fun temp10558_6 () (_ BitVec 64))
(declare-fun temp10558_7 () (_ BitVec 64))
(declare-fun temp10558_8 () (_ BitVec 64))
(declare-fun temp10558_9 () (_ BitVec 64))
(declare-fun temp10558_10 () (_ BitVec 64))
(declare-fun temp10558_11 () (_ BitVec 64))
(declare-fun temp10558_12 () (_ BitVec 64))
(declare-fun temp10558_13 () (_ BitVec 64))
(declare-fun temp10558_14 () (_ BitVec 64))
(declare-fun temp10558_15 () (_ BitVec 64))
(declare-fun temp10558_16 () (_ BitVec 64))
(declare-fun temp10558_17 () (_ BitVec 64))
(declare-fun temp10558_18 () (_ BitVec 64))
(declare-fun temp10558_19 () (_ BitVec 64))
(declare-fun temp10558_20 () (_ BitVec 64))
(declare-fun temp10558_21 () (_ BitVec 64))
(declare-fun var148344 () (_ BitVec 64))
(declare-fun temp10558_22 () (_ BitVec 64))
(declare-fun temp10558_23 () (_ BitVec 64))
(declare-fun var148345 () (_ BitVec 64))
(declare-fun temp10558_25 () (_ BitVec 64))
(declare-fun temp10558_24 () (_ BitVec 64))
(declare-fun temp10558_27 () (_ BitVec 64))
(declare-fun temp10558_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp10558_28 () (_ BitVec 64))
(declare-fun temp10558_29 () (_ BitVec 64))
(declare-fun var462151 () (_ BitVec 64))
(declare-fun var527698 () (_ BitVec 64))
(declare-fun temp10558_30 () (_ BitVec 64))
(declare-fun var1064603 () (_ BitVec 64))
(declare-fun temp10558_31 () (_ BitVec 64))
(declare-fun var1064652 () (_ BitVec 64))
(declare-fun temp10558_32 () (_ BitVec 64))
(declare-fun temp10558_33 () (_ BitVec 64))
(declare-fun var1315402 () (_ BitVec 64))
(declare-fun temp10558_34 () (_ BitVec 64))
(declare-fun var2036298 () (_ BitVec 64))
(declare-fun temp10558_35 () (_ BitVec 64))
(declare-fun var1064769 () (_ BitVec 64))
(declare-fun temp10558_36 () (_ BitVec 64))
(declare-fun temp10558_37 () (_ BitVec 64))
(declare-fun var3488412 () (_ BitVec 64))
(declare-fun var3488416 () (_ BitVec 64))
(declare-fun var3488577 () (_ BitVec 64))
(declare-fun temp10558_39 () (_ BitVec 64))
(declare-fun temp10558_38 () (_ BitVec 64))
(declare-fun var148387 () (_ BitVec 64))
(declare-fun var148388 () (_ BitVec 64))
(declare-fun temp10558_40 () (_ BitVec 64))
(declare-fun temp10558_41 () (_ BitVec 64))
(declare-fun var6950692 () (_ BitVec 64))
(declare-fun temp10558_42 () (_ BitVec 64))
(declare-fun var6950707 () (_ BitVec 64))
(declare-fun temp10558_43 () (_ BitVec 64))
(declare-fun var6950709 () (_ BitVec 64))
(declare-fun temp10558_44 () (_ BitVec 64))
(declare-fun var6950772 () (_ BitVec 64))
(declare-fun temp10558_45 () (_ BitVec 64))
(declare-fun var7016228 () (_ BitVec 64))
(declare-fun temp10558_46 () (_ BitVec 64))
(declare-fun var7016243 () (_ BitVec 64))
(declare-fun temp10558_47 () (_ BitVec 64))
(declare-fun var7016245 () (_ BitVec 64))
(declare-fun temp10558_48 () (_ BitVec 64))
(declare-fun var7016308 () (_ BitVec 64))
(declare-fun temp10558_49 () (_ BitVec 64))
(declare-fun var7225740 () (_ BitVec 64))
(declare-fun temp10558_50 () (_ BitVec 64))
(declare-fun var7409444 () (_ BitVec 64))
(declare-fun temp10558_51 () (_ BitVec 64))
(declare-fun var7409459 () (_ BitVec 64))
(declare-fun temp10558_52 () (_ BitVec 64))
(declare-fun var7409461 () (_ BitVec 64))
(declare-fun temp10558_53 () (_ BitVec 64))
(declare-fun var7409524 () (_ BitVec 64))
(declare-fun temp10558_54 () (_ BitVec 64))
(declare-fun var7474980 () (_ BitVec 64))
(declare-fun temp10558_55 () (_ BitVec 64))
(declare-fun var7474995 () (_ BitVec 64))
(declare-fun temp10558_56 () (_ BitVec 64))
(declare-fun var7474997 () (_ BitVec 64))
(declare-fun temp10558_57 () (_ BitVec 64))
(declare-fun var7475060 () (_ BitVec 64))
(assert (= temp10558_1 #x0000000000000000))
(assert (= var148331
   (ite (= ARGNAME_input_NAMEEND_DIM temp10558_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_2 #x0000000000000000))
(assert (= var148331 temp10558_2))
(assert (= temp10558_3 #x0000000000000000))
(assert (= temp10558_4 temp10558_3))
(assert (= temp10558_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_4)))
(assert (= temp10558_6 #x0000000000000001))
(assert (= temp10558_7 temp10558_6))
(assert (= temp10558_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_7)))
(assert (= temp10558_9 #x0000000000000002))
(assert (= temp10558_10 temp10558_9))
(assert (= temp10558_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_10)))
(assert (= temp10558_12 #x0000000000000003))
(assert (= temp10558_13 temp10558_12))
(assert (= temp10558_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_13)))
(assert (= temp10558_15 #x0000000000000004))
(assert (= temp10558_16 temp10558_15))
(assert (= temp10558_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_16)))
(assert (= temp10558_18 #x0000000000000005))
(assert (= temp10558_19 temp10558_18))
(assert (= temp10558_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_19)))
(assert (= temp10558_21 #x0000000000000000))
(assert (= temp10558_22
   (ite (bvslt var148344 temp10558_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var148344)
        var148344)))
(assert (= temp10558_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_22)))
(assert (= var148345 temp10558_23))
(assert (bvslt (ite (bvslt var148344 temp10558_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var148344)
            var148344)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10558_25 #x0000000000000000))
(assert (= temp10558_24 temp10558_25))
(assert (= temp10558_27 #x0000000000000000))
(assert (= temp10558_26 temp10558_27))
(assert (= var396610
   (ite (bvslt temp10558_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_28
   (ite (= var396610 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp10558_26)))
(assert (= temp10558_29 #x0000000000000000))
(assert (= var462151 temp10558_29))
(assert (= var527698 var462151))
(assert (= temp10558_30 #x0000000000000001))
(assert (= var1064603 temp10558_30))
(assert (= temp10558_31 #x0000000000000000))
(assert (= var1064652
   (ite (= ARGNAME_input_NAMEEND_DIM temp10558_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_32 #x0000000000000000))
(assert (= var1064652 temp10558_32))
(assert (= temp10558_33 #x0000000000000005))
(assert (= var1315402 temp10558_33))
(assert (= temp10558_34 #x0000000000000005))
(assert (= var2036298 temp10558_34))
(assert (= temp10558_35 #x0000000000000001))
(assert (= var1064769
   (ite (bvslt var1064603 temp10558_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_36 #x0000000000000000))
(assert (= var1064769 temp10558_36))
(assert (= temp10558_37 #x0000000000000000))
(assert (= var3488412 temp10558_37))
(assert (= var3488416 var1064603))
(assert (= var3488577 var3488412))
(assert (= temp10558_39 #x0000000000000000))
(assert (= temp10558_38 temp10558_39))
(assert (= var148387 var148345))
(assert (= var148388
   (ite (= temp10558_24 var148387) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_40 #x0000000000000001))
(assert (= var148388 temp10558_40))
(assert (= temp10558_41 #x0000000000000000))
(assert (= var6950692 temp10558_41))
(assert (= temp10558_42 #x0000000000003fff))
(assert (= var6950707 (bvand var6950692 temp10558_42)))
(assert (= temp10558_43 #x0000000000000000))
(assert (= var6950709
   (ite (= var6950707 temp10558_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_44 #x0000000000000001))
(assert (= var6950709 temp10558_44))
(assert (= var6950772 var6950692))
(assert (= temp10558_45 #x0000000000000000))
(assert (= var7016228 temp10558_45))
(assert (= temp10558_46 #x0000000000003fff))
(assert (= var7016243 (bvand var7016228 temp10558_46)))
(assert (= temp10558_47 #x0000000000000000))
(assert (= var7016245
   (ite (= var7016243 temp10558_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_48 #x0000000000000001))
(assert (= var7016245 temp10558_48))
(assert (= var7016308 var7016228))
(assert (= temp10558_49 #x0000000000000000))
(assert (= var7225740 temp10558_49))
(assert (= temp10558_50 #x0000000000000000))
(assert (= var7409444 temp10558_50))
(assert (= temp10558_51 #x0000000000003fff))
(assert (= var7409459 (bvand var7409444 temp10558_51)))
(assert (= temp10558_52 #x0000000000000000))
(assert (= var7409461
   (ite (= var7409459 temp10558_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_53 #x0000000000000001))
(assert (= var7409461 temp10558_53))
(assert (= var7409524 var7409444))
(assert (= temp10558_54 #x0000000000000000))
(assert (= var7474980 temp10558_54))
(assert (= temp10558_55 #x0000000000003fff))
(assert (= var7474995 (bvand var7474980 temp10558_55)))
(assert (= temp10558_56 #x0000000000000000))
(assert (= var7474997
   (ite (= var7474995 temp10558_56) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_57 #x0000000000000001))
(assert (= var7474997 temp10558_57))
(assert (= var7475060 var7474980))
(model-add temp10558_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp10558_2 () (_ BitVec 64) #x0000000000000000)
(model-add var148331 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






