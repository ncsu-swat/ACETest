(declare-fun temp18878_1 () (_ BitVec 64))
(declare-fun temp18878_2 () (_ BitVec 64))
(declare-fun var148331 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp18878_3 () (_ BitVec 64))
(declare-fun temp18878_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18878_5 () (_ BitVec 64))
(declare-fun temp18878_6 () (_ BitVec 64))
(declare-fun temp18878_7 () (_ BitVec 64))
(declare-fun temp18878_8 () (_ BitVec 64))
(declare-fun temp18878_9 () (_ BitVec 64))
(declare-fun temp18878_10 () (_ BitVec 64))
(declare-fun temp18878_11 () (_ BitVec 64))
(declare-fun temp18878_12 () (_ BitVec 64))
(declare-fun temp18878_13 () (_ BitVec 64))
(declare-fun temp18878_14 () (_ BitVec 64))
(declare-fun temp18878_15 () (_ BitVec 64))
(declare-fun temp18878_16 () (_ BitVec 64))
(declare-fun temp18878_17 () (_ BitVec 64))
(declare-fun temp18878_18 () (_ BitVec 64))
(declare-fun temp18878_19 () (_ BitVec 64))
(declare-fun temp18878_20 () (_ BitVec 64))
(declare-fun temp18878_21 () (_ BitVec 64))
(declare-fun var148344 () (_ BitVec 64))
(declare-fun temp18878_22 () (_ BitVec 64))
(declare-fun temp18878_23 () (_ BitVec 64))
(declare-fun var148345 () (_ BitVec 64))
(declare-fun temp18878_25 () (_ BitVec 64))
(declare-fun temp18878_24 () (_ BitVec 64))
(declare-fun temp18878_27 () (_ BitVec 64))
(declare-fun temp18878_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp18878_28 () (_ BitVec 64))
(declare-fun temp18878_29 () (_ BitVec 64))
(declare-fun var462151 () (_ BitVec 64))
(declare-fun var527698 () (_ BitVec 64))
(declare-fun temp18878_30 () (_ BitVec 64))
(declare-fun var1064603 () (_ BitVec 64))
(declare-fun temp18878_31 () (_ BitVec 64))
(declare-fun var1064652 () (_ BitVec 64))
(declare-fun temp18878_32 () (_ BitVec 64))
(declare-fun temp18878_33 () (_ BitVec 64))
(declare-fun var1315402 () (_ BitVec 64))
(declare-fun temp18878_34 () (_ BitVec 64))
(declare-fun var2036298 () (_ BitVec 64))
(declare-fun temp18878_35 () (_ BitVec 64))
(declare-fun var1064769 () (_ BitVec 64))
(declare-fun temp18878_36 () (_ BitVec 64))
(declare-fun temp18878_37 () (_ BitVec 64))
(declare-fun var3291804 () (_ BitVec 64))
(declare-fun var3291808 () (_ BitVec 64))
(declare-fun var3291969 () (_ BitVec 64))
(declare-fun temp18878_39 () (_ BitVec 64))
(declare-fun temp18878_38 () (_ BitVec 64))
(declare-fun var148387 () (_ BitVec 64))
(declare-fun var148388 () (_ BitVec 64))
(declare-fun temp18878_40 () (_ BitVec 64))
(declare-fun temp18878_41 () (_ BitVec 64))
(declare-fun var6688548 () (_ BitVec 64))
(declare-fun temp18878_42 () (_ BitVec 64))
(declare-fun var6688563 () (_ BitVec 64))
(declare-fun temp18878_43 () (_ BitVec 64))
(declare-fun var6688565 () (_ BitVec 64))
(declare-fun temp18878_44 () (_ BitVec 64))
(declare-fun var6688628 () (_ BitVec 64))
(declare-fun temp18878_45 () (_ BitVec 64))
(declare-fun var6754084 () (_ BitVec 64))
(declare-fun temp18878_46 () (_ BitVec 64))
(declare-fun var6754099 () (_ BitVec 64))
(declare-fun temp18878_47 () (_ BitVec 64))
(declare-fun var6754101 () (_ BitVec 64))
(declare-fun temp18878_48 () (_ BitVec 64))
(declare-fun var6754164 () (_ BitVec 64))
(declare-fun temp18878_49 () (_ BitVec 64))
(declare-fun var6963596 () (_ BitVec 64))
(declare-fun temp18878_50 () (_ BitVec 64))
(declare-fun var7147300 () (_ BitVec 64))
(declare-fun temp18878_51 () (_ BitVec 64))
(declare-fun var7147315 () (_ BitVec 64))
(declare-fun temp18878_52 () (_ BitVec 64))
(declare-fun var7147317 () (_ BitVec 64))
(declare-fun temp18878_53 () (_ BitVec 64))
(declare-fun var7147380 () (_ BitVec 64))
(declare-fun temp18878_54 () (_ BitVec 64))
(declare-fun var7212836 () (_ BitVec 64))
(declare-fun temp18878_55 () (_ BitVec 64))
(declare-fun var7212851 () (_ BitVec 64))
(declare-fun temp18878_56 () (_ BitVec 64))
(declare-fun var7212853 () (_ BitVec 64))
(declare-fun temp18878_57 () (_ BitVec 64))
(declare-fun var7212916 () (_ BitVec 64))
(assert (= temp18878_1 #x0000000000000000))
(assert (= var148331
   (ite (= ARGNAME_input_NAMEEND_DIM temp18878_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18878_2 #x0000000000000000))
(assert (= var148331 temp18878_2))
(assert (= temp18878_3 #x0000000000000000))
(assert (= temp18878_4 temp18878_3))
(assert (= temp18878_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp18878_4)))
(assert (= temp18878_6 #x0000000000000001))
(assert (= temp18878_7 temp18878_6))
(assert (= temp18878_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp18878_7)))
(assert (= temp18878_9 #x0000000000000002))
(assert (= temp18878_10 temp18878_9))
(assert (= temp18878_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp18878_10)))
(assert (= temp18878_12 #x0000000000000003))
(assert (= temp18878_13 temp18878_12))
(assert (= temp18878_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp18878_13)))
(assert (= temp18878_15 #x0000000000000004))
(assert (= temp18878_16 temp18878_15))
(assert (= temp18878_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp18878_16)))
(assert (= temp18878_18 #x0000000000000005))
(assert (= temp18878_19 temp18878_18))
(assert (= temp18878_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp18878_19)))
(assert (= temp18878_21 #x0000000000000000))
(assert (= temp18878_22
   (ite (bvslt var148344 temp18878_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var148344)
        var148344)))
(assert (= temp18878_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp18878_22)))
(assert (= var148345 temp18878_23))
(assert (bvslt (ite (bvslt var148344 temp18878_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var148344)
            var148344)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp18878_25 #x0000000000000000))
(assert (= temp18878_24 temp18878_25))
(assert (= temp18878_27 #x0000000000000000))
(assert (= temp18878_26 temp18878_27))
(assert (= var396610
   (ite (bvslt temp18878_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18878_28
   (ite (= var396610 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp18878_26)))
(assert (= temp18878_29 #x0000000000000000))
(assert (= var462151 temp18878_29))
(assert (= var527698 var462151))
(assert (= temp18878_30 #x0000000000000001))
(assert (= var1064603 temp18878_30))
(assert (= temp18878_31 #x0000000000000000))
(assert (= var1064652
   (ite (= ARGNAME_input_NAMEEND_DIM temp18878_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18878_32 #x0000000000000000))
(assert (= var1064652 temp18878_32))
(assert (= temp18878_33 #x0000000000000005))
(assert (= var1315402 temp18878_33))
(assert (= temp18878_34 #x0000000000000005))
(assert (= var2036298 temp18878_34))
(assert (= temp18878_35 #x0000000000000001))
(assert (= var1064769
   (ite (bvslt var1064603 temp18878_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp18878_36 #x0000000000000000))
(assert (= var1064769 temp18878_36))
(assert (= temp18878_37 #x0000000000000000))
(assert (= var3291804 temp18878_37))
(assert (= var3291808 var1064603))
(assert (= var3291969 var3291804))
(assert (= temp18878_39 #x0000000000000000))
(assert (= temp18878_38 temp18878_39))
(assert (= var148387 var148345))
(assert (= var148388
   (ite (= temp18878_24 var148387) #x0000000000000001 #x0000000000000000)))
(assert (= temp18878_40 #x0000000000000001))
(assert (= var148388 temp18878_40))
(assert (= temp18878_41 #x0000000000000000))
(assert (= var6688548 temp18878_41))
(assert (= temp18878_42 #x0000000000003fff))
(assert (= var6688563 (bvand var6688548 temp18878_42)))
(assert (= temp18878_43 #x0000000000000000))
(assert (= var6688565
   (ite (= var6688563 temp18878_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp18878_44 #x0000000000000001))
(assert (= var6688565 temp18878_44))
(assert (= var6688628 var6688548))
(assert (= temp18878_45 #x0000000000000000))
(assert (= var6754084 temp18878_45))
(assert (= temp18878_46 #x0000000000003fff))
(assert (= var6754099 (bvand var6754084 temp18878_46)))
(assert (= temp18878_47 #x0000000000000000))
(assert (= var6754101
   (ite (= var6754099 temp18878_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp18878_48 #x0000000000000001))
(assert (= var6754101 temp18878_48))
(assert (= var6754164 var6754084))
(assert (= temp18878_49 #x0000000000000000))
(assert (= var6963596 temp18878_49))
(assert (= temp18878_50 #x0000000000000000))
(assert (= var7147300 temp18878_50))
(assert (= temp18878_51 #x0000000000003fff))
(assert (= var7147315 (bvand var7147300 temp18878_51)))
(assert (= temp18878_52 #x0000000000000000))
(assert (= var7147317
   (ite (= var7147315 temp18878_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp18878_53 #x0000000000000001))
(assert (= var7147317 temp18878_53))
(assert (= var7147380 var7147300))
(assert (= temp18878_54 #x0000000000000000))
(assert (= var7212836 temp18878_54))
(assert (= temp18878_55 #x0000000000003fff))
(assert (= var7212851 (bvand var7212836 temp18878_55)))
(assert (= temp18878_56 #x0000000000000000))
(assert (= var7212853
   (ite (= var7212851 temp18878_56) #x0000000000000001 #x0000000000000000)))
(assert (= temp18878_57 #x0000000000000001))
(assert (= var7212853 temp18878_57))
(assert (= var7212916 var7212836))
(model-add temp18878_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp18878_2 () (_ BitVec 64) #x0000000000000000)
(model-add var148331 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






