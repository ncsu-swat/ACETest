(declare-fun temp1042_1 () (_ BitVec 64))
(declare-fun temp1042_2 () (_ BitVec 64))
(declare-fun var148331 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1042_3 () (_ BitVec 64))
(declare-fun temp1042_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1042_5 () (_ BitVec 64))
(declare-fun temp1042_6 () (_ BitVec 64))
(declare-fun temp1042_7 () (_ BitVec 64))
(declare-fun temp1042_8 () (_ BitVec 64))
(declare-fun temp1042_9 () (_ BitVec 64))
(declare-fun temp1042_10 () (_ BitVec 64))
(declare-fun temp1042_11 () (_ BitVec 64))
(declare-fun temp1042_12 () (_ BitVec 64))
(declare-fun temp1042_13 () (_ BitVec 64))
(declare-fun temp1042_14 () (_ BitVec 64))
(declare-fun temp1042_15 () (_ BitVec 64))
(declare-fun temp1042_16 () (_ BitVec 64))
(declare-fun temp1042_17 () (_ BitVec 64))
(declare-fun temp1042_18 () (_ BitVec 64))
(declare-fun temp1042_19 () (_ BitVec 64))
(declare-fun temp1042_20 () (_ BitVec 64))
(declare-fun temp1042_21 () (_ BitVec 64))
(declare-fun var148344 () (_ BitVec 64))
(declare-fun temp1042_22 () (_ BitVec 64))
(declare-fun temp1042_23 () (_ BitVec 64))
(declare-fun var148345 () (_ BitVec 64))
(declare-fun temp1042_25 () (_ BitVec 64))
(declare-fun temp1042_24 () (_ BitVec 64))
(declare-fun temp1042_27 () (_ BitVec 64))
(declare-fun temp1042_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp1042_28 () (_ BitVec 64))
(declare-fun temp1042_29 () (_ BitVec 64))
(declare-fun var462151 () (_ BitVec 64))
(declare-fun var527698 () (_ BitVec 64))
(declare-fun temp1042_30 () (_ BitVec 64))
(declare-fun var1064603 () (_ BitVec 64))
(declare-fun temp1042_31 () (_ BitVec 64))
(declare-fun var1064652 () (_ BitVec 64))
(declare-fun temp1042_32 () (_ BitVec 64))
(declare-fun temp1042_33 () (_ BitVec 64))
(declare-fun var1315402 () (_ BitVec 64))
(declare-fun temp1042_34 () (_ BitVec 64))
(declare-fun var2036298 () (_ BitVec 64))
(declare-fun temp1042_35 () (_ BitVec 64))
(declare-fun var1064769 () (_ BitVec 64))
(declare-fun temp1042_36 () (_ BitVec 64))
(declare-fun temp1042_37 () (_ BitVec 64))
(declare-fun var1064833 () (_ BitVec 64))
(declare-fun var1064845 () (_ BitVec 64))
(declare-fun temp1042_38 () (_ BitVec 64))
(declare-fun var1064857 () (_ BitVec 64))
(declare-fun var1064858 () (_ BitVec 64))
(declare-fun var1064859 () (_ BitVec 64))
(declare-fun var1064860 () (_ BitVec 64))
(declare-fun temp1042_39 () (_ BitVec 64))
(declare-fun var3226268 () (_ BitVec 64))
(declare-fun var3226269 () (_ BitVec 64))
(declare-fun var3226270 () (_ BitVec 64))
(declare-fun var3226272 () (_ BitVec 64))
(declare-fun temp1042_41 () (_ BitVec 64))
(declare-fun temp1042_40 () (_ BitVec 64))
(declare-fun var148387 () (_ BitVec 64))
(declare-fun var148388 () (_ BitVec 64))
(declare-fun temp1042_42 () (_ BitVec 64))
(declare-fun temp1042_43 () (_ BitVec 64))
(declare-fun var7016228 () (_ BitVec 64))
(declare-fun temp1042_44 () (_ BitVec 64))
(declare-fun var7016243 () (_ BitVec 64))
(declare-fun temp1042_45 () (_ BitVec 64))
(declare-fun var7016245 () (_ BitVec 64))
(declare-fun temp1042_46 () (_ BitVec 64))
(declare-fun var7016308 () (_ BitVec 64))
(declare-fun temp1042_47 () (_ BitVec 64))
(declare-fun var7081764 () (_ BitVec 64))
(declare-fun temp1042_48 () (_ BitVec 64))
(declare-fun var7081779 () (_ BitVec 64))
(declare-fun temp1042_49 () (_ BitVec 64))
(declare-fun var7081781 () (_ BitVec 64))
(declare-fun temp1042_50 () (_ BitVec 64))
(declare-fun var7081844 () (_ BitVec 64))
(declare-fun temp1042_51 () (_ BitVec 64))
(declare-fun var7291276 () (_ BitVec 64))
(declare-fun temp1042_52 () (_ BitVec 64))
(declare-fun var7474980 () (_ BitVec 64))
(declare-fun temp1042_53 () (_ BitVec 64))
(declare-fun var7474995 () (_ BitVec 64))
(declare-fun temp1042_54 () (_ BitVec 64))
(declare-fun var7474997 () (_ BitVec 64))
(declare-fun temp1042_55 () (_ BitVec 64))
(declare-fun var7475060 () (_ BitVec 64))
(declare-fun temp1042_56 () (_ BitVec 64))
(declare-fun var7540516 () (_ BitVec 64))
(declare-fun temp1042_57 () (_ BitVec 64))
(declare-fun var7540531 () (_ BitVec 64))
(declare-fun temp1042_58 () (_ BitVec 64))
(declare-fun var7540533 () (_ BitVec 64))
(declare-fun temp1042_59 () (_ BitVec 64))
(declare-fun var7540596 () (_ BitVec 64))
(assert (= temp1042_1 #x0000000000000000))
(assert (= var148331
   (ite (= ARGNAME_input_NAMEEND_DIM temp1042_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_2 #x0000000000000000))
(assert (= var148331 temp1042_2))
(assert (= temp1042_3 #x0000000000000000))
(assert (= temp1042_4 temp1042_3))
(assert (= temp1042_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_4)))
(assert (= temp1042_6 #x0000000000000001))
(assert (= temp1042_7 temp1042_6))
(assert (= temp1042_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_7)))
(assert (= temp1042_9 #x0000000000000002))
(assert (= temp1042_10 temp1042_9))
(assert (= temp1042_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_10)))
(assert (= temp1042_12 #x0000000000000003))
(assert (= temp1042_13 temp1042_12))
(assert (= temp1042_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_13)))
(assert (= temp1042_15 #x0000000000000004))
(assert (= temp1042_16 temp1042_15))
(assert (= temp1042_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_16)))
(assert (= temp1042_18 #x0000000000000005))
(assert (= temp1042_19 temp1042_18))
(assert (= temp1042_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_19)))
(assert (= temp1042_21 #x0000000000000000))
(assert (= temp1042_22
   (ite (bvslt var148344 temp1042_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var148344)
        var148344)))
(assert (= temp1042_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp1042_22)))
(assert (= var148345 temp1042_23))
(assert (bvslt (ite (bvslt var148344 temp1042_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var148344)
            var148344)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1042_25 #x0000000000000000))
(assert (= temp1042_24 temp1042_25))
(assert (= temp1042_27 #x0000000000000000))
(assert (= temp1042_26 temp1042_27))
(assert (= var396610
   (ite (bvslt temp1042_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_28
   (ite (= var396610 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp1042_26)))
(assert (= temp1042_29 #x0000000000000000))
(assert (= var462151 temp1042_29))
(assert (= var527698 var462151))
(assert (= temp1042_30 #x0000000000000001))
(assert (= var1064603 temp1042_30))
(assert (= temp1042_31 #x0000000000000000))
(assert (= var1064652
   (ite (= ARGNAME_input_NAMEEND_DIM temp1042_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1042_32 #x0000000000000000))
(assert (= var1064652 temp1042_32))
(assert (= temp1042_33 #x0000000000000005))
(assert (= var1315402 temp1042_33))
(assert (= temp1042_34 #x0000000000000005))
(assert (= var2036298 temp1042_34))
(assert (= temp1042_35 #x0000000000000001))
(assert (= var1064769
   (ite (bvslt var1064603 temp1042_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_36 #x0000000000000000))
(assert (= var1064769 temp1042_36))
(assert (= temp1042_37 #x0000000000000000))
(assert (= var1064833 temp1042_37))
(assert (= var1064845 var1064833))
(assert (= temp1042_38 #xffffffffffffffff))
(assert (= var1064857 (bvxor var1064833 temp1042_38)))
(assert (= var1064858 (bvadd var1064857 var1064603)))
(assert (= var1064859 (bvadd var1064858 var1064845)))
(assert (= var1064860 (bvsdiv var1064859 var1064603)))
(assert (= temp1042_39 #x0000000000000000))
(assert (= var3226268 temp1042_39))
(assert (= var3226269 var1064833))
(assert (= var3226270 var1064845))
(assert (= var3226272 var1064603))
(assert (= temp1042_41 #x0000000000000000))
(assert (= temp1042_40 temp1042_41))
(assert (= var148387 var148345))
(assert (= var148388
   (ite (= temp1042_24 var148387) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_42 #x0000000000000001))
(assert (= var148388 temp1042_42))
(assert (= temp1042_43 #x0000000000000000))
(assert (= var7016228 temp1042_43))
(assert (= temp1042_44 #x0000000000003fff))
(assert (= var7016243 (bvand var7016228 temp1042_44)))
(assert (= temp1042_45 #x0000000000000000))
(assert (= var7016245
   (ite (= var7016243 temp1042_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_46 #x0000000000000001))
(assert (= var7016245 temp1042_46))
(assert (= var7016308 var7016228))
(assert (= temp1042_47 #x0000000000000000))
(assert (= var7081764 temp1042_47))
(assert (= temp1042_48 #x0000000000003fff))
(assert (= var7081779 (bvand var7081764 temp1042_48)))
(assert (= temp1042_49 #x0000000000000000))
(assert (= var7081781
   (ite (= var7081779 temp1042_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_50 #x0000000000000001))
(assert (= var7081781 temp1042_50))
(assert (= var7081844 var7081764))
(assert (= temp1042_51 #x0000000000000000))
(assert (= var7291276 temp1042_51))
(assert (= temp1042_52 #x0000000000000000))
(assert (= var7474980 temp1042_52))
(assert (= temp1042_53 #x0000000000003fff))
(assert (= var7474995 (bvand var7474980 temp1042_53)))
(assert (= temp1042_54 #x0000000000000000))
(assert (= var7474997
   (ite (= var7474995 temp1042_54) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_55 #x0000000000000001))
(assert (= var7474997 temp1042_55))
(assert (= var7475060 var7474980))
(assert (= temp1042_56 #x0000000000000000))
(assert (= var7540516 temp1042_56))
(assert (= temp1042_57 #x0000000000003fff))
(assert (= var7540531 (bvand var7540516 temp1042_57)))
(assert (= temp1042_58 #x0000000000000000))
(assert (= var7540533
   (ite (= var7540531 temp1042_58) #x0000000000000001 #x0000000000000000)))
(assert (= temp1042_59 #x0000000000000001))
(assert (= var7540533 temp1042_59))
(assert (= var7540596 var7540516))
(model-add temp1042_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp1042_2 () (_ BitVec 64) #x0000000000000000)
(model-add var148331 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






