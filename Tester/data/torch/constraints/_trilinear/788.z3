(declare-fun var76923 () (_ BitVec 64))
(declare-fun ARGNAME_i1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_expand1_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var76924 () (_ BitVec 64))
(declare-fun ARGNAME_unroll_dim_NAMEEND () (_ BitVec 64))
(declare-fun var76925 () (_ BitVec 64))
(declare-fun temp788_1 () (_ BitVec 64))
(declare-fun var76926 () (_ BitVec 64))
(declare-fun var76927 () (_ BitVec 64))
(declare-fun temp788_2 () (_ BitVec 64))
(declare-fun temp788_3 () (_ BitVec 64))
(declare-fun var76928 () (_ BitVec 64))
(declare-fun k!0 () (_ BitVec 64))
(declare-fun k!1 () Bool)
(declare-fun var269666 () (_ BitVec 64))
(declare-fun temp788_4 () (_ BitVec 64))
(declare-fun var269695 () (_ BitVec 64))
(declare-fun temp788_5 () (_ BitVec 64))
(declare-fun temp788_7 () (_ BitVec 64))
(declare-fun temp788_6 () (_ BitVec 64))
(declare-fun temp788_9 () (_ BitVec 64))
(declare-fun temp788_8 () (_ BitVec 64))
(declare-fun temp788_10 () (_ BitVec 64))
(declare-fun var862370 () (_ BitVec 64))
(declare-fun var927917 () (_ BitVec 64))
(declare-fun temp788_11 () (_ BitVec 64))
(declare-fun var1713223 () (_ BitVec 64))
(declare-fun var2104674 () (_ BitVec 64))
(declare-fun temp788_12 () (_ BitVec 64))
(declare-fun var2104703 () (_ BitVec 64))
(declare-fun temp788_13 () (_ BitVec 64))
(declare-fun temp788_15 () (_ BitVec 64))
(declare-fun temp788_14 () (_ BitVec 64))
(declare-fun temp788_17 () (_ BitVec 64))
(declare-fun temp788_16 () (_ BitVec 64))
(declare-fun temp788_18 () (_ BitVec 64))
(declare-fun var2697378 () (_ BitVec 64))
(declare-fun var2762925 () (_ BitVec 64))
(declare-fun temp788_19 () (_ BitVec 64))
(declare-fun var3548231 () (_ BitVec 64))
(declare-fun var3939682 () (_ BitVec 64))
(declare-fun temp788_20 () (_ BitVec 64))
(declare-fun var3939711 () (_ BitVec 64))
(declare-fun temp788_21 () (_ BitVec 64))
(declare-fun temp788_23 () (_ BitVec 64))
(declare-fun temp788_22 () (_ BitVec 64))
(declare-fun temp788_25 () (_ BitVec 64))
(declare-fun temp788_24 () (_ BitVec 64))
(declare-fun temp788_26 () (_ BitVec 64))
(declare-fun var4532386 () (_ BitVec 64))
(declare-fun var4597933 () (_ BitVec 64))
(declare-fun temp788_27 () (_ BitVec 64))
(declare-fun var5383239 () (_ BitVec 64))
(declare-fun var5774690 () (_ BitVec 64))
(declare-fun temp788_28 () (_ BitVec 64))
(declare-fun var5774719 () (_ BitVec 64))
(declare-fun temp788_29 () (_ BitVec 64))
(declare-fun temp788_31 () (_ BitVec 64))
(declare-fun temp788_30 () (_ BitVec 64))
(declare-fun temp788_33 () (_ BitVec 64))
(declare-fun temp788_32 () (_ BitVec 64))
(declare-fun temp788_34 () (_ BitVec 64))
(declare-fun var6367394 () (_ BitVec 64))
(declare-fun var6432941 () (_ BitVec 64))
(declare-fun temp788_35 () (_ BitVec 64))
(declare-fun var7218247 () (_ BitVec 64))
(declare-fun var8461836 () (_ BitVec 64))
(declare-fun temp788_37 () (_ BitVec 64))
(declare-fun temp788_36 () (_ BitVec 64))
(declare-fun var8524787 () (_ BitVec 64))
(declare-fun var8524788 () (_ BitVec 64))
(declare-fun temp788_38 () (_ BitVec 64))
(declare-fun temp788_39 () (_ BitVec 64))
(declare-fun var8594453 () (_ BitVec 64))
(declare-fun var8660000 () (_ BitVec 64))
(declare-fun var8461854 () (_ BitVec 64))
(declare-fun temp788_40 () (_ BitVec 64))
(declare-fun var77094 () (_ BitVec 64))
(declare-fun temp788_41 () (_ BitVec 64))
(declare-fun var77135 () (_ BitVec 64))
(declare-fun var77169 () (_ BitVec 64))
(declare-fun var77223 () (_ BitVec 64))
(declare-fun temp788_42 () (_ BitVec 64))
(declare-fun var11608541 () (_ BitVec 64))
(declare-fun temp788_43 () (_ BitVec 64))
(declare-fun ARGNAME_i1_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var77268 () (_ BitVec 64))
(declare-fun temp788_44 () (_ BitVec 64))
(declare-fun temp788_45 () (_ BitVec 64))
(declare-fun ARGNAME_i2_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var77272 () (_ BitVec 64))
(declare-fun temp788_46 () (_ BitVec 64))
(declare-fun temp788_47 () (_ BitVec 64))
(declare-fun ARGNAME_i3_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var77276 () (_ BitVec 64))
(declare-fun temp788_48 () (_ BitVec 64))
(declare-fun temp788_50 () (_ BitVec 64))
(declare-fun temp788_49 () (_ BitVec 64))
(declare-fun temp788_51 () (_ BitVec 64))
(declare-fun var14885909 () (_ BitVec 64))
(declare-fun var14951456 () (_ BitVec 64))
(declare-fun var14753310 () (_ BitVec 64))
(declare-fun temp788_52 () (_ BitVec 64))
(declare-fun var15347757 () (_ BitVec 64))
(declare-fun temp788_53 () (_ BitVec 64))
(declare-fun var15413293 () (_ BitVec 64))
(declare-fun temp788_54 () (_ BitVec 64))
(declare-fun var15937581 () (_ BitVec 64))
(declare-fun temp788_56 () (_ BitVec 64))
(declare-fun temp788_55 () (_ BitVec 64))
(declare-fun temp788_57 () (_ BitVec 64))
(declare-fun var17049762 () (_ BitVec 64))
(declare-fun temp788_58 () (_ BitVec 64))
(declare-fun var17704007 () (_ BitVec 64))
(declare-fun temp788_60 () (_ BitVec 64))
(declare-fun temp788_59 () (_ BitVec 64))
(declare-fun temp788_61 () (_ BitVec 64))
(declare-fun var18686997 () (_ BitVec 64))
(declare-fun var18752544 () (_ BitVec 64))
(declare-fun temp788_62 () (_ BitVec 64))
(declare-fun var16258794 () (_ BitVec 64))
(declare-fun var16258764 () (_ BitVec 64))
(declare-fun var16258763 () (_ BitVec 64))
(declare-fun temp788_64 () (_ BitVec 64))
(declare-fun temp788_63 () (_ BitVec 64))
(declare-fun temp788_66 () (_ BitVec 64))
(declare-fun temp788_65 () (_ BitVec 64))
(declare-fun temp788_67 () (_ BitVec 64))
(declare-fun var16259272 () (_ BitVec 64))
(declare-fun temp788_68 () (_ BitVec 64))
(declare-fun var16259206 () (_ BitVec 64))
(declare-fun var16259205 () (_ BitVec 64))
(declare-fun var16259291 () (_ BitVec 64))
(declare-fun temp788_69 () (_ BitVec 64))
(declare-fun var16259285 () (_ BitVec 64))
(declare-fun var16259284 () (_ BitVec 64))
(declare-fun var16259320 () (_ BitVec 64))
(declare-fun temp788_70 () (_ BitVec 64))
(declare-fun var16259304 () (_ BitVec 64))
(declare-fun var16259303 () (_ BitVec 64))
(declare-fun var16259338 () (_ BitVec 64))
(declare-fun temp788_71 () (_ BitVec 64))
(declare-fun var16259339 () (_ BitVec 64))
(declare-fun temp788_73 () (_ BitVec 64))
(declare-fun temp788_72 () (_ BitVec 64))
(declare-fun temp788_75 () (_ BitVec 64))
(declare-fun temp788_74 () (_ BitVec 64))
(assert (= var76923 (bvadd ARGNAME_expand1_NAMEEND_LEN ARGNAME_i1_NAMEEND_DIM)))
(assert (= var76924
   (ite (bvsle var76923 ARGNAME_unroll_dim_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var76925 var76924))
(assert (= temp788_1 #x000000000000003f))
(assert (= var76926 (bvlshr ARGNAME_unroll_dim_NAMEEND temp788_1)))
(assert (= var76927 (bvor var76926 var76925)))
(assert (= temp788_2 #x0000000000000000))
(assert (= var76928 (ite (= var76927 temp788_2) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_3 #x0000000000000001))
(assert (= var76928 temp788_3))
(assert (= var269666 var76923))
(assert (= temp788_4 #x0000000000000040))
(assert (= var269695
   (ite (bvsgt var269666 temp788_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_5 #x0000000000000000))
(assert (= var269695 temp788_5))
(assert (= temp788_7 #x0000000000000000))
(assert (= temp788_6 temp788_7))
(assert (= temp788_9 #x0000000000000000))
(assert (= temp788_8 temp788_9))
(assert (= temp788_10 #x0000000000000000))
(assert (= var862370 temp788_10))
(assert (= var927917 var862370))
(assert (= temp788_11 #x0000000000000001))
(assert (= var1713223 temp788_11))
(assert (= var2104674 var76923))
(assert (= temp788_12 #x0000000000000040))
(assert (= var2104703
   (ite (bvsgt var2104674 temp788_12) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_13 #x0000000000000000))
(assert (= var2104703 temp788_13))
(assert (= temp788_15 #x0000000000000000))
(assert (= temp788_14 temp788_15))
(assert (= temp788_17 #x0000000000000000))
(assert (= temp788_16 temp788_17))
(assert (= temp788_18 #x0000000000000000))
(assert (= var2697378 temp788_18))
(assert (= var2762925 var2697378))
(assert (= temp788_19 #x0000000000000001))
(assert (= var3548231 temp788_19))
(assert (= var3939682 var76923))
(assert (= temp788_20 #x0000000000000040))
(assert (= var3939711
   (ite (bvsgt var3939682 temp788_20) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_21 #x0000000000000000))
(assert (= var3939711 temp788_21))
(assert (= temp788_23 #x0000000000000000))
(assert (= temp788_22 temp788_23))
(assert (= temp788_25 #x0000000000000000))
(assert (= temp788_24 temp788_25))
(assert (= temp788_26 #x0000000000000000))
(assert (= var4532386 temp788_26))
(assert (= var4597933 var4532386))
(assert (= temp788_27 #x0000000000000001))
(assert (= var5383239 temp788_27))
(assert (= var5774690 var76923))
(assert (= temp788_28 #x0000000000000040))
(assert (= var5774719
   (ite (bvsgt var5774690 temp788_28) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_29 #x0000000000000000))
(assert (= var5774719 temp788_29))
(assert (= temp788_31 #x0000000000000000))
(assert (= temp788_30 temp788_31))
(assert (= temp788_33 #x0000000000000000))
(assert (= temp788_32 temp788_33))
(assert (= temp788_34 #x0000000000000000))
(assert (= var6367394 temp788_34))
(assert (= var6432941 var6367394))
(assert (= temp788_35 #x0000000000000001))
(assert (= var7218247 temp788_35))
(assert (= var8461836 var76923))
(assert (= temp788_37 #x0000000000000000))
(assert (= temp788_36 temp788_37))
(assert (= var8524787 var8461836))
(assert (= var8524788
   (ite (bvslt temp788_36 var8524787) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_38 (ite (= var8524788 #x0000000000000001) var8461836 temp788_36)))
(assert (= temp788_39 #x0000000000000000))
(assert (= var8594453 temp788_39))
(assert (= var8660000 var8594453))
(assert (= var8461854 var8660000))
(assert (= temp788_40 #xffffffffffffffff))
(assert (= var77094 temp788_40))
(assert (= temp788_41 #x0000000000000000))
(assert (= var77135 temp788_41))
(assert (= var77169 var77135))
(assert (= var77223 var77169))
(assert (= temp788_42 #x0000000000000001))
(assert (= var11608541 temp788_42))
(assert (= temp788_43 #x0000000000000000))
(assert (= var77268
   (ite (= ARGNAME_i1_NAMEEND_NUMELEMENT temp788_43)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_44 #x0000000000000000))
(assert (= var77268 temp788_44))
(assert (= temp788_45 #x0000000000000000))
(assert (= var77272
   (ite (= ARGNAME_i2_NAMEEND_NUMELEMENT temp788_45)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_46 #x0000000000000000))
(assert (= var77272 temp788_46))
(assert (= temp788_47 #x0000000000000000))
(assert (= var77276
   (ite (= ARGNAME_i3_NAMEEND_NUMELEMENT temp788_47)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_48 #x0000000000000000))
(assert (= var77276 temp788_48))
(assert (= temp788_50 #x0000000000000000))
(assert (= temp788_49 temp788_50))
(assert (= temp788_51 #x0000000000000000))
(assert (= var14885909 temp788_51))
(assert (= var14951456 var14885909))
(assert (= var14753310 var14951456))
(assert (= temp788_52 #x0000000000000001))
(assert (= var15347757 temp788_52))
(assert (= temp788_53 #x0000000000000001))
(assert (= var15413293 temp788_53))
(assert (= temp788_54 #x0000000000000001))
(assert (= var15937581 temp788_54))
(assert (= temp788_56 #x0000000000000000))
(assert (= temp788_55 temp788_56))
(assert (= temp788_57 #x0000000000000000))
(assert (= var17049762 temp788_57))
(assert (= temp788_58 #x0000000000000001))
(assert (= var17704007 temp788_58))
(assert (= temp788_60 #x0000000000000000))
(assert (= temp788_59 temp788_60))
(assert (= temp788_61 #x0000000000000000))
(assert (= var18686997 temp788_61))
(assert (= var18752544 var18686997))
(assert (= temp788_62 #x0000000000000001))
(assert (= var16258794 temp788_62))
(assert (= var16258764 var16258794))
(assert (= var16258763 var16258764))
(assert (= temp788_64 #x0000000000000001))
(assert (= temp788_63 temp788_64))
(assert (= temp788_66 #xffffffffffffffff))
(assert (= temp788_65 temp788_66))
(assert (= temp788_67 #x0000000000000000))
(assert (= var16259272 temp788_67))
(assert (= temp788_68 #x0000000000000001))
(assert (= var16259206 (bvadd var16259272 temp788_68)))
(assert (= var16259205 var16259206))
(assert (= var16259291 var16259205))
(assert (= temp788_69 #x0000000000000001))
(assert (= var16259285 (bvadd var16259291 temp788_69)))
(assert (= var16259284 var16259285))
(assert (= var16259320 var16259284))
(assert (= temp788_70 #x0000000000000001))
(assert (= var16259304 (bvadd var16259320 temp788_70)))
(assert (= var16259303 var16259304))
(assert (= var16259338 var16259303))
(assert (= temp788_71 #x0000000000000001))
(assert (= var16259339 (bvadd var16259338 temp788_71)))
(assert (= temp788_73 #x0000000000000003))
(assert (= temp788_72 temp788_73))
(assert (= temp788_75 #x0000000000000003))
(assert (= temp788_74 temp788_75))
(model-add var76923
           ()
           (_ BitVec 64)
           (bvadd ARGNAME_expand1_NAMEEND_LEN ARGNAME_i1_NAMEEND_DIM))
(model-add var76924
           ()
           (_ BitVec 64)
           (ite (bvsle (bvadd ARGNAME_expand1_NAMEEND_LEN
                              ARGNAME_i1_NAMEEND_DIM)
                       ARGNAME_unroll_dim_NAMEEND)
                #x0000000000000001
                #x0000000000000000))
(model-add var76925
           ()
           (_ BitVec 64)
           (ite (bvsle (bvadd ARGNAME_expand1_NAMEEND_LEN
                              ARGNAME_i1_NAMEEND_DIM)
                       ARGNAME_unroll_dim_NAMEEND)
                #x0000000000000001
                #x0000000000000000))
(model-add temp788_1 () (_ BitVec 64) #x000000000000003f)
(model-add var76926
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   ((_ extract 63 63) ARGNAME_unroll_dim_NAMEEND)))
(model-add var76927
           ()
           (_ BitVec 64)
           (bvor (concat #b000000000000000000000000000000000000000000000000000000000000000
                         ((_ extract 63 63) ARGNAME_unroll_dim_NAMEEND))
                 (ite (bvsle (bvadd ARGNAME_expand1_NAMEEND_LEN
                                    ARGNAME_i1_NAMEEND_DIM)
                             ARGNAME_unroll_dim_NAMEEND)
                      #x0000000000000001
                      #x0000000000000000)))
(model-add temp788_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp788_3 () (_ BitVec 64) #x0000000000000001)
(model-add var76928 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_expand1_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (bvsub k!0 ARGNAME_i1_NAMEEND_DIM))
(model-del k!1)
(model-add k!0
           ()
           (_ BitVec 64)
           (ite (or k!1 (= ARGNAME_unroll_dim_NAMEEND #x7fffffffffffffff))
                ARGNAME_unroll_dim_NAMEEND
                (bvadd ARGNAME_unroll_dim_NAMEEND #x0000000000000001)))





