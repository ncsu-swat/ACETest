(declare-fun temp79_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp79_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp79_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp79_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp79_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp79_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp79_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp79_8 () (_ BitVec 64))
(declare-fun temp79_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp79_10 () (_ BitVec 64))
(declare-fun temp79_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp79_12 () (_ BitVec 64))
(declare-fun temp79_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_14 () (_ BitVec 64))
(declare-fun temp79_15 () (_ BitVec 64))
(declare-fun temp79_16 () (_ BitVec 64))
(declare-fun temp79_17 () (_ BitVec 64))
(declare-fun temp79_18 () (_ BitVec 64))
(declare-fun temp79_19 () (_ BitVec 64))
(declare-fun temp79_20 () (_ BitVec 64))
(declare-fun temp79_21 () (_ BitVec 64))
(declare-fun temp79_22 () (_ BitVec 64))
(declare-fun temp79_23 () (_ BitVec 64))
(declare-fun temp79_24 () (_ BitVec 64))
(declare-fun temp79_25 () (_ BitVec 64))
(declare-fun temp79_26 () (_ BitVec 64))
(declare-fun temp79_27 () (_ BitVec 64))
(declare-fun temp79_28 () (_ BitVec 64))
(declare-fun temp79_29 () (_ BitVec 64))
(declare-fun temp79_31 () (_ BitVec 64))
(declare-fun temp79_30 () (_ BitVec 64))
(declare-fun temp79_32 () (_ BitVec 64))
(declare-fun temp79_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp79_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp79_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp79_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp79_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp79_39 () (_ BitVec 64))
(declare-fun temp79_38 () (_ BitVec 64))
(declare-fun temp79_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp79_41 () (_ BitVec 64))
(declare-fun temp79_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp79_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp79_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp79_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp79_47 () (_ BitVec 64))
(declare-fun temp79_46 () (_ BitVec 64))
(declare-fun temp79_49 () (_ BitVec 64))
(declare-fun temp79_48 () (_ BitVec 64))
(declare-fun temp79_51 () (_ BitVec 64))
(declare-fun temp79_50 () (_ BitVec 64))
(declare-fun temp79_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp79_54 () (_ BitVec 64))
(declare-fun temp79_53 () (_ BitVec 64))
(declare-fun temp79_56 () (_ BitVec 64))
(declare-fun temp79_55 () (_ BitVec 64))
(declare-fun temp79_58 () (_ BitVec 64))
(declare-fun temp79_57 () (_ BitVec 64))
(declare-fun temp79_60 () (_ BitVec 64))
(declare-fun temp79_59 () (_ BitVec 64))
(declare-fun temp79_62 () (_ BitVec 64))
(declare-fun temp79_61 () (_ BitVec 64))
(declare-fun temp79_64 () (_ BitVec 64))
(declare-fun temp79_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp79_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp79_67 () (_ BitVec 64))
(declare-fun temp79_66 () (_ BitVec 64))
(declare-fun temp79_69 () (_ BitVec 64))
(declare-fun temp79_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp79_71 () (_ BitVec 64))
(declare-fun temp79_70 () (_ BitVec 64))
(declare-fun temp79_73 () (_ BitVec 64))
(declare-fun temp79_72 () (_ BitVec 64))
(declare-fun temp79_75 () (_ BitVec 64))
(declare-fun temp79_74 () (_ BitVec 64))
(declare-fun temp79_77 () (_ BitVec 64))
(declare-fun temp79_76 () (_ BitVec 64))
(declare-fun temp79_79 () (_ BitVec 64))
(declare-fun temp79_78 () (_ BitVec 64))
(declare-fun temp79_81 () (_ BitVec 64))
(declare-fun temp79_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp79_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp79_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp79_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp79_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp79_86 () (_ BitVec 64))
(declare-fun var7867434 () (_ BitVec 64))
(declare-fun temp79_87 () (_ BitVec 64))
(declare-fun temp79_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(assert (= temp79_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp79_1)))
(assert (= temp79_2 #x0000000000000000))
(assert (= var1050945 temp79_2))
(assert (= temp79_3 #xffffffffffffffff))
(assert (= var67312 temp79_3))
(assert (= temp79_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp79_4)))
(assert (= temp79_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp79_5)))
(assert (= temp79_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp79_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp79_7 #x0000000000000000))
(assert (= var82187 temp79_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_8 #x0000000000000000))
(assert (= var82356 temp79_8))
(assert (= temp79_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp79_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_10 #x0000000000000001))
(assert (= var82528 temp79_10))
(assert (= temp79_11 #x0000000000000000))
(assert (= var65913 temp79_11))
(assert (= temp79_12 #x0000000000000000))
(assert (= temp79_13 temp79_12))
(assert (= temp79_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp79_13)))
(assert (= temp79_15 #x0000000000000001))
(assert (= temp79_16 temp79_15))
(assert (= temp79_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp79_16)))
(assert (= temp79_18 #x0000000000000002))
(assert (= temp79_19 temp79_18))
(assert (= temp79_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp79_19)))
(assert (= temp79_21 #x0000000000000003))
(assert (= temp79_22 temp79_21))
(assert (= temp79_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp79_22)))
(assert (= temp79_24 #x0000000000000004))
(assert (= temp79_25 temp79_24))
(assert (= temp79_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp79_25)))
(assert (= temp79_27 #x0000000000000005))
(assert (= temp79_28 temp79_27))
(assert (= temp79_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp79_28)))
(assert (= temp79_31 #x0000000000000000))
(assert (= temp79_30
   (ite (bvslt var65913 temp79_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp79_32 temp79_30))
(assert (= temp79_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp79_32)))
(assert (= var82530 temp79_33))
(assert (bvslt temp79_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_34 #x0000000000000001))
(assert (= var82531 temp79_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_35 #x0000000000000001))
(assert (= var82728 temp79_35))
(assert (= var1914351 var65913))
(assert (= temp79_36 #x0000000000000001))
(assert (= var2115797 temp79_36))
(assert (= temp79_37 #x0000000000000002))
(assert (= var2115798 temp79_37))
(assert (= temp79_39 #x0000000000000000))
(assert (= temp79_38 temp79_39))
(assert (= temp79_40 #x0000000000000000))
(assert (= var2628020 temp79_40))
(assert (= temp79_41 #x0000000000000001))
(assert (= temp79_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp79_41 temp79_42)))
(assert (= temp79_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp79_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp79_44 #x0000000000000000))
(assert (= var3740377 temp79_44))
(assert (= temp79_45 #x0000000000000002))
(assert (= var69143 temp79_45))
(assert (= temp79_47 #x0000000000000001))
(assert (= temp79_46 temp79_47))
(assert (= temp79_49 #x0000000000000001))
(assert (= temp79_48 temp79_49))
(assert (= temp79_51 #x0000000000000003))
(assert (= temp79_50 temp79_51))
(assert (= temp79_52 #x0000000000000001))
(assert (= var4212949 temp79_52))
(assert (= var4212950 var69143))
(assert (= temp79_54 #x0000000000000001))
(assert (= temp79_53 temp79_54))
(assert (= temp79_56 #x0000000000000001))
(assert (= temp79_55 temp79_56))
(assert (= temp79_58 #x0000000000000001))
(assert (= temp79_57 temp79_58))
(assert (= temp79_60 #x0000000000000001))
(assert (= temp79_59 temp79_60))
(assert (= temp79_62 #x0000000000000000))
(assert (= temp79_61 temp79_62))
(assert (= temp79_64 #x0000000000000001))
(assert (= temp79_63 temp79_64))
(assert (= var4868391 var69143))
(assert (= temp79_65 #x0000000000000002))
(assert (= var4983962 temp79_65))
(assert (= temp79_67 #x0000000000000001))
(assert (= temp79_66 temp79_67))
(assert (= temp79_69 #x0000000000000001))
(assert (= temp79_68 temp79_69))
(assert (= var5453295 var65913))
(assert (= temp79_71 #x0000000000000001))
(assert (= temp79_70 temp79_71))
(assert (= temp79_73 #x0000000000000001))
(assert (= temp79_72 temp79_73))
(assert (= temp79_75 #x0000000000000001))
(assert (= temp79_74 temp79_75))
(assert (= temp79_77 #x0000000000000001))
(assert (= temp79_76 temp79_77))
(assert (= temp79_79 #x0000000000000000))
(assert (= temp79_78 temp79_79))
(assert (= temp79_81 #x0000000000000001))
(assert (= temp79_80 temp79_81))
(assert (= var6375719 var69143))
(assert (= temp79_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp79_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_83 #x0000000000000001))
(assert (= var83534 temp79_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp79_84 #x0000000000000001))
(assert (= var6818808 temp79_84))
(assert (= var7867380 var69143))
(assert (= temp79_85 #x0000000000000001))
(assert (= var7867384 temp79_85))
(assert (= temp79_86 #x0000000000000000))
(assert (= var7867434 temp79_86))
(assert (= temp79_87 #x0000000000000000))
(assert (= var7867434 temp79_87))
(assert (= temp79_88 #x0000000000000001))
(assert (= var9128231 temp79_88))
(model-add temp79_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp79_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp79_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp79_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp79_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp79_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp79_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



