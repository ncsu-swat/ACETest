(declare-fun temp1022_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp1022_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp1022_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp1022_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp1022_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp1022_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp1022_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp1022_8 () (_ BitVec 64))
(declare-fun temp1022_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp1022_10 () (_ BitVec 64))
(declare-fun temp1022_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp1022_12 () (_ BitVec 64))
(declare-fun temp1022_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1022_14 () (_ BitVec 64))
(declare-fun temp1022_15 () (_ BitVec 64))
(declare-fun temp1022_16 () (_ BitVec 64))
(declare-fun temp1022_17 () (_ BitVec 64))
(declare-fun temp1022_18 () (_ BitVec 64))
(declare-fun temp1022_19 () (_ BitVec 64))
(declare-fun temp1022_20 () (_ BitVec 64))
(declare-fun temp1022_21 () (_ BitVec 64))
(declare-fun temp1022_22 () (_ BitVec 64))
(declare-fun temp1022_23 () (_ BitVec 64))
(declare-fun temp1022_24 () (_ BitVec 64))
(declare-fun temp1022_25 () (_ BitVec 64))
(declare-fun temp1022_26 () (_ BitVec 64))
(declare-fun temp1022_27 () (_ BitVec 64))
(declare-fun temp1022_28 () (_ BitVec 64))
(declare-fun temp1022_29 () (_ BitVec 64))
(declare-fun temp1022_31 () (_ BitVec 64))
(declare-fun temp1022_30 () (_ BitVec 64))
(declare-fun temp1022_32 () (_ BitVec 64))
(declare-fun temp1022_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp1022_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp1022_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp1022_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp1022_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp1022_39 () (_ BitVec 64))
(declare-fun temp1022_38 () (_ BitVec 64))
(declare-fun temp1022_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp1022_41 () (_ BitVec 64))
(declare-fun temp1022_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp1022_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp1022_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp1022_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp1022_47 () (_ BitVec 64))
(declare-fun temp1022_46 () (_ BitVec 64))
(declare-fun temp1022_49 () (_ BitVec 64))
(declare-fun temp1022_48 () (_ BitVec 64))
(declare-fun temp1022_51 () (_ BitVec 64))
(declare-fun temp1022_50 () (_ BitVec 64))
(declare-fun temp1022_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp1022_54 () (_ BitVec 64))
(declare-fun temp1022_53 () (_ BitVec 64))
(declare-fun temp1022_56 () (_ BitVec 64))
(declare-fun temp1022_55 () (_ BitVec 64))
(declare-fun temp1022_58 () (_ BitVec 64))
(declare-fun temp1022_57 () (_ BitVec 64))
(declare-fun temp1022_60 () (_ BitVec 64))
(declare-fun temp1022_59 () (_ BitVec 64))
(declare-fun temp1022_62 () (_ BitVec 64))
(declare-fun temp1022_61 () (_ BitVec 64))
(declare-fun temp1022_64 () (_ BitVec 64))
(declare-fun temp1022_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp1022_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp1022_67 () (_ BitVec 64))
(declare-fun temp1022_66 () (_ BitVec 64))
(declare-fun temp1022_69 () (_ BitVec 64))
(declare-fun temp1022_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp1022_71 () (_ BitVec 64))
(declare-fun temp1022_70 () (_ BitVec 64))
(declare-fun temp1022_73 () (_ BitVec 64))
(declare-fun temp1022_72 () (_ BitVec 64))
(declare-fun temp1022_75 () (_ BitVec 64))
(declare-fun temp1022_74 () (_ BitVec 64))
(declare-fun temp1022_77 () (_ BitVec 64))
(declare-fun temp1022_76 () (_ BitVec 64))
(declare-fun temp1022_79 () (_ BitVec 64))
(declare-fun temp1022_78 () (_ BitVec 64))
(declare-fun temp1022_81 () (_ BitVec 64))
(declare-fun temp1022_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp1022_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp1022_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp1022_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun temp1022_85 () (_ BitVec 64))
(declare-fun var6818858 () (_ BitVec 64))
(declare-fun temp1022_86 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp1022_87 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp1022_88 () (_ BitVec 64))
(declare-fun var7736362 () (_ BitVec 64))
(declare-fun temp1022_89 () (_ BitVec 64))
(declare-fun temp1022_90 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun temp1022_92 () (_ BitVec 64))
(declare-fun temp1022_91 () (_ BitVec 64))
(declare-fun temp1022_93 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp1022_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp1022_1)))
(assert (= temp1022_2 #x0000000000000000))
(assert (= var1050945 temp1022_2))
(assert (= temp1022_3 #xffffffffffffffff))
(assert (= var67312 temp1022_3))
(assert (= temp1022_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp1022_4)))
(assert (= temp1022_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp1022_5)))
(assert (= temp1022_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp1022_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp1022_7 #x0000000000000000))
(assert (= var82187 temp1022_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_8 #x0000000000000000))
(assert (= var82356 temp1022_8))
(assert (= temp1022_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp1022_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_10 #x0000000000000001))
(assert (= var82528 temp1022_10))
(assert (= temp1022_11 #x0000000000000000))
(assert (= var65913 temp1022_11))
(assert (= temp1022_12 #x0000000000000000))
(assert (= temp1022_13 temp1022_12))
(assert (= temp1022_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp1022_13)))
(assert (= temp1022_15 #x0000000000000001))
(assert (= temp1022_16 temp1022_15))
(assert (= temp1022_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp1022_16)))
(assert (= temp1022_18 #x0000000000000002))
(assert (= temp1022_19 temp1022_18))
(assert (= temp1022_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp1022_19)))
(assert (= temp1022_21 #x0000000000000003))
(assert (= temp1022_22 temp1022_21))
(assert (= temp1022_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp1022_22)))
(assert (= temp1022_24 #x0000000000000004))
(assert (= temp1022_25 temp1022_24))
(assert (= temp1022_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp1022_25)))
(assert (= temp1022_27 #x0000000000000005))
(assert (= temp1022_28 temp1022_27))
(assert (= temp1022_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp1022_28)))
(assert (= temp1022_31 #x0000000000000000))
(assert (= temp1022_30
   (ite (bvslt var65913 temp1022_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp1022_32 temp1022_30))
(assert (= temp1022_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp1022_32)))
(assert (= var82530 temp1022_33))
(assert (bvslt temp1022_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1022_34 #x0000000000000001))
(assert (= var82531 temp1022_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1022_35 #x0000000000000001))
(assert (= var82728 temp1022_35))
(assert (= var1914351 var65913))
(assert (= temp1022_36 #x0000000000000001))
(assert (= var2115797 temp1022_36))
(assert (= temp1022_37 #x0000000000000002))
(assert (= var2115798 temp1022_37))
(assert (= temp1022_39 #x0000000000000000))
(assert (= temp1022_38 temp1022_39))
(assert (= temp1022_40 #x0000000000000000))
(assert (= var2628020 temp1022_40))
(assert (= temp1022_41 #x0000000000000001))
(assert (= temp1022_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp1022_41
        temp1022_42)))
(assert (= temp1022_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp1022_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp1022_44 #x0000000000000000))
(assert (= var3740377 temp1022_44))
(assert (= temp1022_45 #x0000000000000002))
(assert (= var69143 temp1022_45))
(assert (= temp1022_47 #x0000000000000001))
(assert (= temp1022_46 temp1022_47))
(assert (= temp1022_49 #x0000000000000001))
(assert (= temp1022_48 temp1022_49))
(assert (= temp1022_51 #x0000000000000003))
(assert (= temp1022_50 temp1022_51))
(assert (= temp1022_52 #x0000000000000001))
(assert (= var4212949 temp1022_52))
(assert (= var4212950 var69143))
(assert (= temp1022_54 #x0000000000000001))
(assert (= temp1022_53 temp1022_54))
(assert (= temp1022_56 #x0000000000000001))
(assert (= temp1022_55 temp1022_56))
(assert (= temp1022_58 #x0000000000000001))
(assert (= temp1022_57 temp1022_58))
(assert (= temp1022_60 #x0000000000000001))
(assert (= temp1022_59 temp1022_60))
(assert (= temp1022_62 #x0000000000000000))
(assert (= temp1022_61 temp1022_62))
(assert (= temp1022_64 #x0000000000000001))
(assert (= temp1022_63 temp1022_64))
(assert (= var4868391 var69143))
(assert (= temp1022_65 #x0000000000000002))
(assert (= var4983962 temp1022_65))
(assert (= temp1022_67 #x0000000000000001))
(assert (= temp1022_66 temp1022_67))
(assert (= temp1022_69 #x0000000000000001))
(assert (= temp1022_68 temp1022_69))
(assert (= var5453295 var65913))
(assert (= temp1022_71 #x0000000000000001))
(assert (= temp1022_70 temp1022_71))
(assert (= temp1022_73 #x0000000000000001))
(assert (= temp1022_72 temp1022_73))
(assert (= temp1022_75 #x0000000000000001))
(assert (= temp1022_74 temp1022_75))
(assert (= temp1022_77 #x0000000000000001))
(assert (= temp1022_76 temp1022_77))
(assert (= temp1022_79 #x0000000000000000))
(assert (= temp1022_78 temp1022_79))
(assert (= temp1022_81 #x0000000000000001))
(assert (= temp1022_80 temp1022_81))
(assert (= var6375719 var69143))
(assert (= temp1022_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp1022_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1022_83 #x0000000000000001))
(assert (= var83534 temp1022_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp1022_84 #x0000000000000001))
(assert (= var6818808 temp1022_84))
(assert (= temp1022_85 #x0000000000000000))
(assert (= var6818858 temp1022_85))
(assert (= temp1022_86 #x0000000000000000))
(assert (= var6818858 temp1022_86))
(assert (= var7736308 var69143))
(assert (= temp1022_87 #x0000000000000001))
(assert (= var7736312 temp1022_87))
(assert (= temp1022_88 #x0000000000000000))
(assert (= var7736362 temp1022_88))
(assert (= temp1022_89 #x0000000000000000))
(assert (= var7736362 temp1022_89))
(assert (= temp1022_90 #x0000000000000001))
(assert (= var9062695 temp1022_90))
(assert (= var9324839 var65913))
(assert (= temp1022_92 #x0000000000000001))
(assert (= temp1022_91 temp1022_92))
(assert (= temp1022_93 #x0000000000000000))
(assert (= var9571482 temp1022_93))
(model-add temp1022_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1022_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp1022_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp1022_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1022_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp1022_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1022_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




