(declare-fun temp3101_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp3101_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp3101_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp3101_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp3101_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp3101_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp3101_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp3101_8 () (_ BitVec 64))
(declare-fun temp3101_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp3101_10 () (_ BitVec 64))
(declare-fun temp3101_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp3101_12 () (_ BitVec 64))
(declare-fun temp3101_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3101_14 () (_ BitVec 64))
(declare-fun temp3101_15 () (_ BitVec 64))
(declare-fun temp3101_16 () (_ BitVec 64))
(declare-fun temp3101_17 () (_ BitVec 64))
(declare-fun temp3101_18 () (_ BitVec 64))
(declare-fun temp3101_19 () (_ BitVec 64))
(declare-fun temp3101_20 () (_ BitVec 64))
(declare-fun temp3101_21 () (_ BitVec 64))
(declare-fun temp3101_22 () (_ BitVec 64))
(declare-fun temp3101_23 () (_ BitVec 64))
(declare-fun temp3101_24 () (_ BitVec 64))
(declare-fun temp3101_25 () (_ BitVec 64))
(declare-fun temp3101_26 () (_ BitVec 64))
(declare-fun temp3101_27 () (_ BitVec 64))
(declare-fun temp3101_28 () (_ BitVec 64))
(declare-fun temp3101_29 () (_ BitVec 64))
(declare-fun temp3101_31 () (_ BitVec 64))
(declare-fun temp3101_30 () (_ BitVec 64))
(declare-fun temp3101_32 () (_ BitVec 64))
(declare-fun temp3101_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp3101_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp3101_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp3101_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp3101_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp3101_39 () (_ BitVec 64))
(declare-fun temp3101_38 () (_ BitVec 64))
(declare-fun temp3101_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp3101_41 () (_ BitVec 64))
(declare-fun temp3101_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp3101_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp3101_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp3101_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp3101_47 () (_ BitVec 64))
(declare-fun temp3101_46 () (_ BitVec 64))
(declare-fun temp3101_49 () (_ BitVec 64))
(declare-fun temp3101_48 () (_ BitVec 64))
(declare-fun temp3101_51 () (_ BitVec 64))
(declare-fun temp3101_50 () (_ BitVec 64))
(declare-fun temp3101_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp3101_54 () (_ BitVec 64))
(declare-fun temp3101_53 () (_ BitVec 64))
(declare-fun temp3101_56 () (_ BitVec 64))
(declare-fun temp3101_55 () (_ BitVec 64))
(declare-fun temp3101_58 () (_ BitVec 64))
(declare-fun temp3101_57 () (_ BitVec 64))
(declare-fun temp3101_60 () (_ BitVec 64))
(declare-fun temp3101_59 () (_ BitVec 64))
(declare-fun temp3101_62 () (_ BitVec 64))
(declare-fun temp3101_61 () (_ BitVec 64))
(declare-fun temp3101_64 () (_ BitVec 64))
(declare-fun temp3101_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp3101_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp3101_67 () (_ BitVec 64))
(declare-fun temp3101_66 () (_ BitVec 64))
(declare-fun temp3101_69 () (_ BitVec 64))
(declare-fun temp3101_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp3101_71 () (_ BitVec 64))
(declare-fun temp3101_70 () (_ BitVec 64))
(declare-fun temp3101_73 () (_ BitVec 64))
(declare-fun temp3101_72 () (_ BitVec 64))
(declare-fun temp3101_75 () (_ BitVec 64))
(declare-fun temp3101_74 () (_ BitVec 64))
(declare-fun temp3101_77 () (_ BitVec 64))
(declare-fun temp3101_76 () (_ BitVec 64))
(declare-fun temp3101_79 () (_ BitVec 64))
(declare-fun temp3101_78 () (_ BitVec 64))
(declare-fun temp3101_81 () (_ BitVec 64))
(declare-fun temp3101_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp3101_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp3101_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun temp3101_84 () (_ BitVec 64))
(declare-fun var6506834 () (_ BitVec 64))
(declare-fun temp3101_85 () (_ BitVec 64))
(declare-fun var6753268 () (_ BitVec 64))
(declare-fun temp3101_86 () (_ BitVec 64))
(declare-fun var6753272 () (_ BitVec 64))
(declare-fun var7670772 () (_ BitVec 64))
(declare-fun temp3101_87 () (_ BitVec 64))
(declare-fun var7670776 () (_ BitVec 64))
(declare-fun temp3101_88 () (_ BitVec 64))
(declare-fun var7670826 () (_ BitVec 64))
(declare-fun temp3101_89 () (_ BitVec 64))
(declare-fun temp3101_90 () (_ BitVec 64))
(declare-fun var8997159 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun temp3101_91 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp3101_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp3101_1)))
(assert (= temp3101_2 #x0000000000000000))
(assert (= var1050945 temp3101_2))
(assert (= temp3101_3 #xffffffffffffffff))
(assert (= var67312 temp3101_3))
(assert (= temp3101_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp3101_4)))
(assert (= temp3101_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp3101_5)))
(assert (= temp3101_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp3101_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp3101_7 #x0000000000000000))
(assert (= var82187 temp3101_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3101_8 #x0000000000000000))
(assert (= var82356 temp3101_8))
(assert (= temp3101_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp3101_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3101_10 #x0000000000000001))
(assert (= var82528 temp3101_10))
(assert (= temp3101_11 #x0000000000000000))
(assert (= var65913 temp3101_11))
(assert (= temp3101_12 #x0000000000000000))
(assert (= temp3101_13 temp3101_12))
(assert (= temp3101_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp3101_13)))
(assert (= temp3101_15 #x0000000000000001))
(assert (= temp3101_16 temp3101_15))
(assert (= temp3101_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp3101_16)))
(assert (= temp3101_18 #x0000000000000002))
(assert (= temp3101_19 temp3101_18))
(assert (= temp3101_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp3101_19)))
(assert (= temp3101_21 #x0000000000000003))
(assert (= temp3101_22 temp3101_21))
(assert (= temp3101_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp3101_22)))
(assert (= temp3101_24 #x0000000000000004))
(assert (= temp3101_25 temp3101_24))
(assert (= temp3101_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp3101_25)))
(assert (= temp3101_27 #x0000000000000005))
(assert (= temp3101_28 temp3101_27))
(assert (= temp3101_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp3101_28)))
(assert (= temp3101_31 #x0000000000000000))
(assert (= temp3101_30
   (ite (bvslt var65913 temp3101_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp3101_32 temp3101_30))
(assert (= temp3101_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp3101_32)))
(assert (= var82530 temp3101_33))
(assert (bvslt temp3101_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp3101_34 #x0000000000000001))
(assert (= var82531 temp3101_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp3101_35 #x0000000000000001))
(assert (= var82728 temp3101_35))
(assert (= var1914351 var65913))
(assert (= temp3101_36 #x0000000000000001))
(assert (= var2115797 temp3101_36))
(assert (= temp3101_37 #x0000000000000002))
(assert (= var2115798 temp3101_37))
(assert (= temp3101_39 #x0000000000000000))
(assert (= temp3101_38 temp3101_39))
(assert (= temp3101_40 #x0000000000000000))
(assert (= var2628020 temp3101_40))
(assert (= temp3101_41 #x0000000000000001))
(assert (= temp3101_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp3101_41
        temp3101_42)))
(assert (= temp3101_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp3101_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp3101_44 #x0000000000000000))
(assert (= var3740377 temp3101_44))
(assert (= temp3101_45 #x0000000000000002))
(assert (= var69143 temp3101_45))
(assert (= temp3101_47 #x0000000000000001))
(assert (= temp3101_46 temp3101_47))
(assert (= temp3101_49 #x0000000000000001))
(assert (= temp3101_48 temp3101_49))
(assert (= temp3101_51 #x0000000000000003))
(assert (= temp3101_50 temp3101_51))
(assert (= temp3101_52 #x0000000000000001))
(assert (= var4212949 temp3101_52))
(assert (= var4212950 var69143))
(assert (= temp3101_54 #x0000000000000001))
(assert (= temp3101_53 temp3101_54))
(assert (= temp3101_56 #x0000000000000001))
(assert (= temp3101_55 temp3101_56))
(assert (= temp3101_58 #x0000000000000001))
(assert (= temp3101_57 temp3101_58))
(assert (= temp3101_60 #x0000000000000001))
(assert (= temp3101_59 temp3101_60))
(assert (= temp3101_62 #x0000000000000000))
(assert (= temp3101_61 temp3101_62))
(assert (= temp3101_64 #x0000000000000001))
(assert (= temp3101_63 temp3101_64))
(assert (= var4868391 var69143))
(assert (= temp3101_65 #x0000000000000002))
(assert (= var4983962 temp3101_65))
(assert (= temp3101_67 #x0000000000000001))
(assert (= temp3101_66 temp3101_67))
(assert (= temp3101_69 #x0000000000000001))
(assert (= temp3101_68 temp3101_69))
(assert (= var5453295 var65913))
(assert (= temp3101_71 #x0000000000000001))
(assert (= temp3101_70 temp3101_71))
(assert (= temp3101_73 #x0000000000000001))
(assert (= temp3101_72 temp3101_73))
(assert (= temp3101_75 #x0000000000000001))
(assert (= temp3101_74 temp3101_75))
(assert (= temp3101_77 #x0000000000000001))
(assert (= temp3101_76 temp3101_77))
(assert (= temp3101_79 #x0000000000000000))
(assert (= temp3101_78 temp3101_79))
(assert (= temp3101_81 #x0000000000000001))
(assert (= temp3101_80 temp3101_81))
(assert (= var6375719 var69143))
(assert (= temp3101_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp3101_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3101_83 #x0000000000000001))
(assert (= var83534 temp3101_83))
(assert (= var83540 var65913))
(assert (= temp3101_84 #x0000000000000000))
(assert (= var6506834
   (ite (= ARGNAME_center_NAMEEND temp3101_84)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3101_85 #x0000000000000001))
(assert (= var6506834 temp3101_85))
(assert (= var6753268 var69143))
(assert (= temp3101_86 #x0000000000000001))
(assert (= var6753272 temp3101_86))
(assert (= var7670772 var69143))
(assert (= temp3101_87 #x0000000000000001))
(assert (= var7670776 temp3101_87))
(assert (= temp3101_88 #x0000000000000000))
(assert (= var7670826 temp3101_88))
(assert (= temp3101_89 #x0000000000000000))
(assert (= var7670826 temp3101_89))
(assert (= temp3101_90 #x0000000000000001))
(assert (= var8997159 temp3101_90))
(assert (= var9259303 var65913))
(assert (= temp3101_91 #x0000000000000000))
(assert (= var9505946 temp3101_91))
(model-add temp3101_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp3101_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp3101_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp3101_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp3101_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp3101_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp3101_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






