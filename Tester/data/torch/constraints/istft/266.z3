(declare-fun temp573_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp573_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp573_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp573_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp573_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp573_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp573_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp573_8 () (_ BitVec 64))
(declare-fun temp573_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp573_10 () (_ BitVec 64))
(declare-fun temp573_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp573_12 () (_ BitVec 64))
(declare-fun temp573_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp573_14 () (_ BitVec 64))
(declare-fun temp573_15 () (_ BitVec 64))
(declare-fun temp573_16 () (_ BitVec 64))
(declare-fun temp573_17 () (_ BitVec 64))
(declare-fun temp573_18 () (_ BitVec 64))
(declare-fun temp573_19 () (_ BitVec 64))
(declare-fun temp573_20 () (_ BitVec 64))
(declare-fun temp573_21 () (_ BitVec 64))
(declare-fun temp573_22 () (_ BitVec 64))
(declare-fun temp573_23 () (_ BitVec 64))
(declare-fun temp573_24 () (_ BitVec 64))
(declare-fun temp573_25 () (_ BitVec 64))
(declare-fun temp573_26 () (_ BitVec 64))
(declare-fun temp573_27 () (_ BitVec 64))
(declare-fun temp573_28 () (_ BitVec 64))
(declare-fun temp573_29 () (_ BitVec 64))
(declare-fun temp573_31 () (_ BitVec 64))
(declare-fun temp573_30 () (_ BitVec 64))
(declare-fun temp573_32 () (_ BitVec 64))
(declare-fun temp573_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp573_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp573_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp573_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp573_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp573_39 () (_ BitVec 64))
(declare-fun temp573_38 () (_ BitVec 64))
(declare-fun temp573_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp573_41 () (_ BitVec 64))
(declare-fun temp573_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp573_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp573_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp573_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp573_47 () (_ BitVec 64))
(declare-fun temp573_46 () (_ BitVec 64))
(declare-fun temp573_49 () (_ BitVec 64))
(declare-fun temp573_48 () (_ BitVec 64))
(declare-fun temp573_51 () (_ BitVec 64))
(declare-fun temp573_50 () (_ BitVec 64))
(declare-fun temp573_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp573_54 () (_ BitVec 64))
(declare-fun temp573_53 () (_ BitVec 64))
(declare-fun temp573_56 () (_ BitVec 64))
(declare-fun temp573_55 () (_ BitVec 64))
(declare-fun temp573_58 () (_ BitVec 64))
(declare-fun temp573_57 () (_ BitVec 64))
(declare-fun temp573_60 () (_ BitVec 64))
(declare-fun temp573_59 () (_ BitVec 64))
(declare-fun temp573_62 () (_ BitVec 64))
(declare-fun temp573_61 () (_ BitVec 64))
(declare-fun temp573_64 () (_ BitVec 64))
(declare-fun temp573_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp573_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp573_67 () (_ BitVec 64))
(declare-fun temp573_66 () (_ BitVec 64))
(declare-fun temp573_69 () (_ BitVec 64))
(declare-fun temp573_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp573_71 () (_ BitVec 64))
(declare-fun temp573_70 () (_ BitVec 64))
(declare-fun temp573_73 () (_ BitVec 64))
(declare-fun temp573_72 () (_ BitVec 64))
(declare-fun temp573_75 () (_ BitVec 64))
(declare-fun temp573_74 () (_ BitVec 64))
(declare-fun temp573_77 () (_ BitVec 64))
(declare-fun temp573_76 () (_ BitVec 64))
(declare-fun temp573_79 () (_ BitVec 64))
(declare-fun temp573_78 () (_ BitVec 64))
(declare-fun temp573_81 () (_ BitVec 64))
(declare-fun temp573_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp573_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp573_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp573_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp573_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp573_86 () (_ BitVec 64))
(declare-fun var7736350 () (_ BitVec 64))
(declare-fun temp573_87 () (_ BitVec 64))
(declare-fun temp573_88 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun temp573_89 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp573_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp573_1)))
(assert (= temp573_2 #x0000000000000000))
(assert (= var1050945 temp573_2))
(assert (= temp573_3 #xffffffffffffffff))
(assert (= var67312 temp573_3))
(assert (= temp573_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp573_4)))
(assert (= temp573_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp573_5)))
(assert (= temp573_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp573_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp573_7 #x0000000000000000))
(assert (= var82187 temp573_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp573_8 #x0000000000000000))
(assert (= var82356 temp573_8))
(assert (= temp573_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp573_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp573_10 #x0000000000000001))
(assert (= var82528 temp573_10))
(assert (= temp573_11 #x0000000000000000))
(assert (= var65913 temp573_11))
(assert (= temp573_12 #x0000000000000000))
(assert (= temp573_13 temp573_12))
(assert (= temp573_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp573_13)))
(assert (= temp573_15 #x0000000000000001))
(assert (= temp573_16 temp573_15))
(assert (= temp573_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp573_16)))
(assert (= temp573_18 #x0000000000000002))
(assert (= temp573_19 temp573_18))
(assert (= temp573_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp573_19)))
(assert (= temp573_21 #x0000000000000003))
(assert (= temp573_22 temp573_21))
(assert (= temp573_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp573_22)))
(assert (= temp573_24 #x0000000000000004))
(assert (= temp573_25 temp573_24))
(assert (= temp573_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp573_25)))
(assert (= temp573_27 #x0000000000000005))
(assert (= temp573_28 temp573_27))
(assert (= temp573_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp573_28)))
(assert (= temp573_31 #x0000000000000000))
(assert (= temp573_30
   (ite (bvslt var65913 temp573_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp573_32 temp573_30))
(assert (= temp573_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp573_32)))
(assert (= var82530 temp573_33))
(assert (bvslt temp573_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp573_34 #x0000000000000001))
(assert (= var82531 temp573_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp573_35 #x0000000000000001))
(assert (= var82728 temp573_35))
(assert (= var1914351 var65913))
(assert (= temp573_36 #x0000000000000001))
(assert (= var2115797 temp573_36))
(assert (= temp573_37 #x0000000000000002))
(assert (= var2115798 temp573_37))
(assert (= temp573_39 #x0000000000000000))
(assert (= temp573_38 temp573_39))
(assert (= temp573_40 #x0000000000000000))
(assert (= var2628020 temp573_40))
(assert (= temp573_41 #x0000000000000001))
(assert (= temp573_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp573_41 temp573_42)))
(assert (= temp573_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp573_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp573_44 #x0000000000000000))
(assert (= var3740377 temp573_44))
(assert (= temp573_45 #x0000000000000002))
(assert (= var69143 temp573_45))
(assert (= temp573_47 #x0000000000000001))
(assert (= temp573_46 temp573_47))
(assert (= temp573_49 #x0000000000000001))
(assert (= temp573_48 temp573_49))
(assert (= temp573_51 #x0000000000000003))
(assert (= temp573_50 temp573_51))
(assert (= temp573_52 #x0000000000000001))
(assert (= var4212949 temp573_52))
(assert (= var4212950 var69143))
(assert (= temp573_54 #x0000000000000001))
(assert (= temp573_53 temp573_54))
(assert (= temp573_56 #x0000000000000001))
(assert (= temp573_55 temp573_56))
(assert (= temp573_58 #x0000000000000001))
(assert (= temp573_57 temp573_58))
(assert (= temp573_60 #x0000000000000001))
(assert (= temp573_59 temp573_60))
(assert (= temp573_62 #x0000000000000000))
(assert (= temp573_61 temp573_62))
(assert (= temp573_64 #x0000000000000001))
(assert (= temp573_63 temp573_64))
(assert (= var4868391 var69143))
(assert (= temp573_65 #x0000000000000002))
(assert (= var4983962 temp573_65))
(assert (= temp573_67 #x0000000000000001))
(assert (= temp573_66 temp573_67))
(assert (= temp573_69 #x0000000000000001))
(assert (= temp573_68 temp573_69))
(assert (= var5453295 var65913))
(assert (= temp573_71 #x0000000000000001))
(assert (= temp573_70 temp573_71))
(assert (= temp573_73 #x0000000000000001))
(assert (= temp573_72 temp573_73))
(assert (= temp573_75 #x0000000000000001))
(assert (= temp573_74 temp573_75))
(assert (= temp573_77 #x0000000000000001))
(assert (= temp573_76 temp573_77))
(assert (= temp573_79 #x0000000000000000))
(assert (= temp573_78 temp573_79))
(assert (= temp573_81 #x0000000000000001))
(assert (= temp573_80 temp573_81))
(assert (= var6375719 var69143))
(assert (= temp573_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp573_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp573_83 #x0000000000000001))
(assert (= var83534 temp573_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp573_84 #x0000000000000001))
(assert (= var6818808 temp573_84))
(assert (= var7736308 var69143))
(assert (= temp573_85 #x0000000000000001))
(assert (= var7736312 temp573_85))
(assert (= temp573_86 #x0000000000000000))
(assert (= var7736350 temp573_86))
(assert (= temp573_87 #x0000000000000000))
(assert (= var7736350 temp573_87))
(assert (= temp573_88 #x0000000000000001))
(assert (= var9062695 temp573_88))
(assert (= var9324839 var65913))
(assert (= temp573_89 #x0000000000000000))
(assert (= var9571482 temp573_89))
(model-add temp573_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp573_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp573_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp573_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp573_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp573_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp573_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





