(declare-fun temp251_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp251_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp251_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp251_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp251_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp251_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp251_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp251_8 () (_ BitVec 64))
(declare-fun temp251_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp251_10 () (_ BitVec 64))
(declare-fun temp251_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp251_12 () (_ BitVec 64))
(declare-fun temp251_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp251_14 () (_ BitVec 64))
(declare-fun temp251_15 () (_ BitVec 64))
(declare-fun temp251_16 () (_ BitVec 64))
(declare-fun temp251_17 () (_ BitVec 64))
(declare-fun temp251_18 () (_ BitVec 64))
(declare-fun temp251_19 () (_ BitVec 64))
(declare-fun temp251_20 () (_ BitVec 64))
(declare-fun temp251_21 () (_ BitVec 64))
(declare-fun temp251_22 () (_ BitVec 64))
(declare-fun temp251_23 () (_ BitVec 64))
(declare-fun temp251_24 () (_ BitVec 64))
(declare-fun temp251_25 () (_ BitVec 64))
(declare-fun temp251_26 () (_ BitVec 64))
(declare-fun temp251_27 () (_ BitVec 64))
(declare-fun temp251_28 () (_ BitVec 64))
(declare-fun temp251_29 () (_ BitVec 64))
(declare-fun temp251_31 () (_ BitVec 64))
(declare-fun temp251_30 () (_ BitVec 64))
(declare-fun temp251_32 () (_ BitVec 64))
(declare-fun temp251_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp251_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp251_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp251_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp251_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp251_39 () (_ BitVec 64))
(declare-fun temp251_38 () (_ BitVec 64))
(declare-fun temp251_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp251_41 () (_ BitVec 64))
(declare-fun temp251_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp251_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp251_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp251_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp251_47 () (_ BitVec 64))
(declare-fun temp251_46 () (_ BitVec 64))
(declare-fun temp251_49 () (_ BitVec 64))
(declare-fun temp251_48 () (_ BitVec 64))
(declare-fun temp251_51 () (_ BitVec 64))
(declare-fun temp251_50 () (_ BitVec 64))
(declare-fun temp251_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp251_54 () (_ BitVec 64))
(declare-fun temp251_53 () (_ BitVec 64))
(declare-fun temp251_56 () (_ BitVec 64))
(declare-fun temp251_55 () (_ BitVec 64))
(declare-fun temp251_58 () (_ BitVec 64))
(declare-fun temp251_57 () (_ BitVec 64))
(declare-fun temp251_60 () (_ BitVec 64))
(declare-fun temp251_59 () (_ BitVec 64))
(declare-fun temp251_62 () (_ BitVec 64))
(declare-fun temp251_61 () (_ BitVec 64))
(declare-fun temp251_64 () (_ BitVec 64))
(declare-fun temp251_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp251_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp251_67 () (_ BitVec 64))
(declare-fun temp251_66 () (_ BitVec 64))
(declare-fun temp251_69 () (_ BitVec 64))
(declare-fun temp251_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp251_71 () (_ BitVec 64))
(declare-fun temp251_70 () (_ BitVec 64))
(declare-fun temp251_73 () (_ BitVec 64))
(declare-fun temp251_72 () (_ BitVec 64))
(declare-fun temp251_75 () (_ BitVec 64))
(declare-fun temp251_74 () (_ BitVec 64))
(declare-fun temp251_77 () (_ BitVec 64))
(declare-fun temp251_76 () (_ BitVec 64))
(declare-fun temp251_79 () (_ BitVec 64))
(declare-fun temp251_78 () (_ BitVec 64))
(declare-fun temp251_81 () (_ BitVec 64))
(declare-fun temp251_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp251_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp251_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp251_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp251_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp251_86 () (_ BitVec 64))
(declare-fun var7801886 () (_ BitVec 64))
(declare-fun temp251_87 () (_ BitVec 64))
(declare-fun temp251_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun temp251_89 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp251_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp251_1)))
(assert (= temp251_2 #x0000000000000000))
(assert (= var1050945 temp251_2))
(assert (= temp251_3 #xffffffffffffffff))
(assert (= var67312 temp251_3))
(assert (= temp251_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp251_4)))
(assert (= temp251_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp251_5)))
(assert (= temp251_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp251_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp251_7 #x0000000000000000))
(assert (= var82187 temp251_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp251_8 #x0000000000000000))
(assert (= var82356 temp251_8))
(assert (= temp251_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp251_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp251_10 #x0000000000000001))
(assert (= var82528 temp251_10))
(assert (= temp251_11 #x0000000000000000))
(assert (= var65913 temp251_11))
(assert (= temp251_12 #x0000000000000000))
(assert (= temp251_13 temp251_12))
(assert (= temp251_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp251_13)))
(assert (= temp251_15 #x0000000000000001))
(assert (= temp251_16 temp251_15))
(assert (= temp251_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp251_16)))
(assert (= temp251_18 #x0000000000000002))
(assert (= temp251_19 temp251_18))
(assert (= temp251_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp251_19)))
(assert (= temp251_21 #x0000000000000003))
(assert (= temp251_22 temp251_21))
(assert (= temp251_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp251_22)))
(assert (= temp251_24 #x0000000000000004))
(assert (= temp251_25 temp251_24))
(assert (= temp251_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp251_25)))
(assert (= temp251_27 #x0000000000000005))
(assert (= temp251_28 temp251_27))
(assert (= temp251_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp251_28)))
(assert (= temp251_31 #x0000000000000000))
(assert (= temp251_30
   (ite (bvslt var65913 temp251_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp251_32 temp251_30))
(assert (= temp251_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp251_32)))
(assert (= var82530 temp251_33))
(assert (bvslt temp251_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp251_34 #x0000000000000001))
(assert (= var82531 temp251_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp251_35 #x0000000000000001))
(assert (= var82728 temp251_35))
(assert (= var1914351 var65913))
(assert (= temp251_36 #x0000000000000001))
(assert (= var2115797 temp251_36))
(assert (= temp251_37 #x0000000000000002))
(assert (= var2115798 temp251_37))
(assert (= temp251_39 #x0000000000000000))
(assert (= temp251_38 temp251_39))
(assert (= temp251_40 #x0000000000000000))
(assert (= var2628020 temp251_40))
(assert (= temp251_41 #x0000000000000001))
(assert (= temp251_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp251_41 temp251_42)))
(assert (= temp251_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp251_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp251_44 #x0000000000000000))
(assert (= var3740377 temp251_44))
(assert (= temp251_45 #x0000000000000002))
(assert (= var69143 temp251_45))
(assert (= temp251_47 #x0000000000000001))
(assert (= temp251_46 temp251_47))
(assert (= temp251_49 #x0000000000000001))
(assert (= temp251_48 temp251_49))
(assert (= temp251_51 #x0000000000000003))
(assert (= temp251_50 temp251_51))
(assert (= temp251_52 #x0000000000000001))
(assert (= var4212949 temp251_52))
(assert (= var4212950 var69143))
(assert (= temp251_54 #x0000000000000001))
(assert (= temp251_53 temp251_54))
(assert (= temp251_56 #x0000000000000001))
(assert (= temp251_55 temp251_56))
(assert (= temp251_58 #x0000000000000001))
(assert (= temp251_57 temp251_58))
(assert (= temp251_60 #x0000000000000001))
(assert (= temp251_59 temp251_60))
(assert (= temp251_62 #x0000000000000000))
(assert (= temp251_61 temp251_62))
(assert (= temp251_64 #x0000000000000001))
(assert (= temp251_63 temp251_64))
(assert (= var4868391 var69143))
(assert (= temp251_65 #x0000000000000002))
(assert (= var4983962 temp251_65))
(assert (= temp251_67 #x0000000000000001))
(assert (= temp251_66 temp251_67))
(assert (= temp251_69 #x0000000000000001))
(assert (= temp251_68 temp251_69))
(assert (= var5453295 var65913))
(assert (= temp251_71 #x0000000000000001))
(assert (= temp251_70 temp251_71))
(assert (= temp251_73 #x0000000000000001))
(assert (= temp251_72 temp251_73))
(assert (= temp251_75 #x0000000000000001))
(assert (= temp251_74 temp251_75))
(assert (= temp251_77 #x0000000000000001))
(assert (= temp251_76 temp251_77))
(assert (= temp251_79 #x0000000000000000))
(assert (= temp251_78 temp251_79))
(assert (= temp251_81 #x0000000000000001))
(assert (= temp251_80 temp251_81))
(assert (= var6375719 var69143))
(assert (= temp251_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp251_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp251_83 #x0000000000000001))
(assert (= var83534 temp251_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp251_84 #x0000000000000001))
(assert (= var6818808 temp251_84))
(assert (= var7801844 var69143))
(assert (= temp251_85 #x0000000000000001))
(assert (= var7801848 temp251_85))
(assert (= temp251_86 #x0000000000000000))
(assert (= var7801886 temp251_86))
(assert (= temp251_87 #x0000000000000000))
(assert (= var7801886 temp251_87))
(assert (= temp251_88 #x0000000000000001))
(assert (= var9128231 temp251_88))
(assert (= var9390375 var65913))
(assert (= temp251_89 #x0000000000000000))
(assert (= var9637018 temp251_89))
(model-add temp251_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp251_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp251_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp251_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp251_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp251_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp251_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





