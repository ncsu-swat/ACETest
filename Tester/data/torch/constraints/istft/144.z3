(declare-fun temp321_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp321_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp321_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp321_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp321_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp321_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp321_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp321_8 () (_ BitVec 64))
(declare-fun temp321_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp321_10 () (_ BitVec 64))
(declare-fun temp321_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp321_12 () (_ BitVec 64))
(declare-fun temp321_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp321_14 () (_ BitVec 64))
(declare-fun temp321_15 () (_ BitVec 64))
(declare-fun temp321_16 () (_ BitVec 64))
(declare-fun temp321_17 () (_ BitVec 64))
(declare-fun temp321_18 () (_ BitVec 64))
(declare-fun temp321_19 () (_ BitVec 64))
(declare-fun temp321_20 () (_ BitVec 64))
(declare-fun temp321_21 () (_ BitVec 64))
(declare-fun temp321_22 () (_ BitVec 64))
(declare-fun temp321_23 () (_ BitVec 64))
(declare-fun temp321_24 () (_ BitVec 64))
(declare-fun temp321_25 () (_ BitVec 64))
(declare-fun temp321_26 () (_ BitVec 64))
(declare-fun temp321_27 () (_ BitVec 64))
(declare-fun temp321_28 () (_ BitVec 64))
(declare-fun temp321_29 () (_ BitVec 64))
(declare-fun temp321_31 () (_ BitVec 64))
(declare-fun temp321_30 () (_ BitVec 64))
(declare-fun temp321_32 () (_ BitVec 64))
(declare-fun temp321_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp321_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp321_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp321_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp321_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp321_39 () (_ BitVec 64))
(declare-fun temp321_38 () (_ BitVec 64))
(declare-fun temp321_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp321_41 () (_ BitVec 64))
(declare-fun temp321_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp321_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp321_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp321_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp321_47 () (_ BitVec 64))
(declare-fun temp321_46 () (_ BitVec 64))
(declare-fun temp321_49 () (_ BitVec 64))
(declare-fun temp321_48 () (_ BitVec 64))
(declare-fun temp321_51 () (_ BitVec 64))
(declare-fun temp321_50 () (_ BitVec 64))
(declare-fun temp321_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp321_54 () (_ BitVec 64))
(declare-fun temp321_53 () (_ BitVec 64))
(declare-fun temp321_56 () (_ BitVec 64))
(declare-fun temp321_55 () (_ BitVec 64))
(declare-fun temp321_58 () (_ BitVec 64))
(declare-fun temp321_57 () (_ BitVec 64))
(declare-fun temp321_60 () (_ BitVec 64))
(declare-fun temp321_59 () (_ BitVec 64))
(declare-fun temp321_62 () (_ BitVec 64))
(declare-fun temp321_61 () (_ BitVec 64))
(declare-fun temp321_64 () (_ BitVec 64))
(declare-fun temp321_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp321_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp321_67 () (_ BitVec 64))
(declare-fun temp321_66 () (_ BitVec 64))
(declare-fun temp321_69 () (_ BitVec 64))
(declare-fun temp321_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp321_71 () (_ BitVec 64))
(declare-fun temp321_70 () (_ BitVec 64))
(declare-fun temp321_73 () (_ BitVec 64))
(declare-fun temp321_72 () (_ BitVec 64))
(declare-fun temp321_75 () (_ BitVec 64))
(declare-fun temp321_74 () (_ BitVec 64))
(declare-fun temp321_77 () (_ BitVec 64))
(declare-fun temp321_76 () (_ BitVec 64))
(declare-fun temp321_79 () (_ BitVec 64))
(declare-fun temp321_78 () (_ BitVec 64))
(declare-fun temp321_81 () (_ BitVec 64))
(declare-fun temp321_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp321_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp321_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp321_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp321_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp321_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun var9521447 () (_ BitVec 64))
(declare-fun temp321_87 () (_ BitVec 64))
(declare-fun var9768090 () (_ BitVec 64))
(assert (= temp321_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp321_1)))
(assert (= temp321_2 #x0000000000000000))
(assert (= var1050945 temp321_2))
(assert (= temp321_3 #xffffffffffffffff))
(assert (= var67312 temp321_3))
(assert (= temp321_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp321_4)))
(assert (= temp321_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp321_5)))
(assert (= temp321_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp321_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp321_7 #x0000000000000000))
(assert (= var82187 temp321_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_8 #x0000000000000000))
(assert (= var82356 temp321_8))
(assert (= temp321_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp321_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_10 #x0000000000000001))
(assert (= var82528 temp321_10))
(assert (= temp321_11 #x0000000000000000))
(assert (= var65913 temp321_11))
(assert (= temp321_12 #x0000000000000000))
(assert (= temp321_13 temp321_12))
(assert (= temp321_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp321_13)))
(assert (= temp321_15 #x0000000000000001))
(assert (= temp321_16 temp321_15))
(assert (= temp321_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp321_16)))
(assert (= temp321_18 #x0000000000000002))
(assert (= temp321_19 temp321_18))
(assert (= temp321_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp321_19)))
(assert (= temp321_21 #x0000000000000003))
(assert (= temp321_22 temp321_21))
(assert (= temp321_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp321_22)))
(assert (= temp321_24 #x0000000000000004))
(assert (= temp321_25 temp321_24))
(assert (= temp321_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp321_25)))
(assert (= temp321_27 #x0000000000000005))
(assert (= temp321_28 temp321_27))
(assert (= temp321_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp321_28)))
(assert (= temp321_31 #x0000000000000000))
(assert (= temp321_30
   (ite (bvslt var65913 temp321_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp321_32 temp321_30))
(assert (= temp321_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp321_32)))
(assert (= var82530 temp321_33))
(assert (bvslt temp321_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp321_34 #x0000000000000001))
(assert (= var82531 temp321_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp321_35 #x0000000000000001))
(assert (= var82728 temp321_35))
(assert (= var1914351 var65913))
(assert (= temp321_36 #x0000000000000001))
(assert (= var2115797 temp321_36))
(assert (= temp321_37 #x0000000000000002))
(assert (= var2115798 temp321_37))
(assert (= temp321_39 #x0000000000000000))
(assert (= temp321_38 temp321_39))
(assert (= temp321_40 #x0000000000000000))
(assert (= var2628020 temp321_40))
(assert (= temp321_41 #x0000000000000001))
(assert (= temp321_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp321_41 temp321_42)))
(assert (= temp321_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp321_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp321_44 #x0000000000000000))
(assert (= var3740377 temp321_44))
(assert (= temp321_45 #x0000000000000002))
(assert (= var69143 temp321_45))
(assert (= temp321_47 #x0000000000000001))
(assert (= temp321_46 temp321_47))
(assert (= temp321_49 #x0000000000000001))
(assert (= temp321_48 temp321_49))
(assert (= temp321_51 #x0000000000000003))
(assert (= temp321_50 temp321_51))
(assert (= temp321_52 #x0000000000000001))
(assert (= var4212949 temp321_52))
(assert (= var4212950 var69143))
(assert (= temp321_54 #x0000000000000001))
(assert (= temp321_53 temp321_54))
(assert (= temp321_56 #x0000000000000001))
(assert (= temp321_55 temp321_56))
(assert (= temp321_58 #x0000000000000001))
(assert (= temp321_57 temp321_58))
(assert (= temp321_60 #x0000000000000001))
(assert (= temp321_59 temp321_60))
(assert (= temp321_62 #x0000000000000000))
(assert (= temp321_61 temp321_62))
(assert (= temp321_64 #x0000000000000001))
(assert (= temp321_63 temp321_64))
(assert (= var4868391 var69143))
(assert (= temp321_65 #x0000000000000002))
(assert (= var4983962 temp321_65))
(assert (= temp321_67 #x0000000000000001))
(assert (= temp321_66 temp321_67))
(assert (= temp321_69 #x0000000000000001))
(assert (= temp321_68 temp321_69))
(assert (= var5453295 var65913))
(assert (= temp321_71 #x0000000000000001))
(assert (= temp321_70 temp321_71))
(assert (= temp321_73 #x0000000000000001))
(assert (= temp321_72 temp321_73))
(assert (= temp321_75 #x0000000000000001))
(assert (= temp321_74 temp321_75))
(assert (= temp321_77 #x0000000000000001))
(assert (= temp321_76 temp321_77))
(assert (= temp321_79 #x0000000000000000))
(assert (= temp321_78 temp321_79))
(assert (= temp321_81 #x0000000000000001))
(assert (= temp321_80 temp321_81))
(assert (= var6375719 var69143))
(assert (= temp321_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp321_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_83 #x0000000000000001))
(assert (= var83534 temp321_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp321_84 #x0000000000000001))
(assert (= var6818808 temp321_84))
(assert (= var7801844 var69143))
(assert (= temp321_85 #x0000000000000001))
(assert (= var7801848 temp321_85))
(assert (= temp321_86 #x0000000000000001))
(assert (= var9259303 temp321_86))
(assert (= var9521447 var65913))
(assert (= temp321_87 #x0000000000000000))
(assert (= var9768090 temp321_87))
(model-add temp321_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp321_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp321_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp321_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp321_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp321_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp321_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




