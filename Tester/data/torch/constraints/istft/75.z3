(declare-fun temp164_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp164_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp164_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp164_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp164_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp164_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp164_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp164_8 () (_ BitVec 64))
(declare-fun temp164_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp164_10 () (_ BitVec 64))
(declare-fun temp164_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp164_12 () (_ BitVec 64))
(declare-fun temp164_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_14 () (_ BitVec 64))
(declare-fun temp164_15 () (_ BitVec 64))
(declare-fun temp164_16 () (_ BitVec 64))
(declare-fun temp164_17 () (_ BitVec 64))
(declare-fun temp164_18 () (_ BitVec 64))
(declare-fun temp164_19 () (_ BitVec 64))
(declare-fun temp164_20 () (_ BitVec 64))
(declare-fun temp164_21 () (_ BitVec 64))
(declare-fun temp164_22 () (_ BitVec 64))
(declare-fun temp164_23 () (_ BitVec 64))
(declare-fun temp164_24 () (_ BitVec 64))
(declare-fun temp164_25 () (_ BitVec 64))
(declare-fun temp164_26 () (_ BitVec 64))
(declare-fun temp164_27 () (_ BitVec 64))
(declare-fun temp164_28 () (_ BitVec 64))
(declare-fun temp164_29 () (_ BitVec 64))
(declare-fun temp164_31 () (_ BitVec 64))
(declare-fun temp164_30 () (_ BitVec 64))
(declare-fun temp164_32 () (_ BitVec 64))
(declare-fun temp164_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp164_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp164_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp164_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp164_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp164_39 () (_ BitVec 64))
(declare-fun temp164_38 () (_ BitVec 64))
(declare-fun temp164_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp164_41 () (_ BitVec 64))
(declare-fun temp164_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp164_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp164_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp164_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp164_47 () (_ BitVec 64))
(declare-fun temp164_46 () (_ BitVec 64))
(declare-fun temp164_49 () (_ BitVec 64))
(declare-fun temp164_48 () (_ BitVec 64))
(declare-fun temp164_51 () (_ BitVec 64))
(declare-fun temp164_50 () (_ BitVec 64))
(declare-fun temp164_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp164_54 () (_ BitVec 64))
(declare-fun temp164_53 () (_ BitVec 64))
(declare-fun temp164_56 () (_ BitVec 64))
(declare-fun temp164_55 () (_ BitVec 64))
(declare-fun temp164_58 () (_ BitVec 64))
(declare-fun temp164_57 () (_ BitVec 64))
(declare-fun temp164_60 () (_ BitVec 64))
(declare-fun temp164_59 () (_ BitVec 64))
(declare-fun temp164_62 () (_ BitVec 64))
(declare-fun temp164_61 () (_ BitVec 64))
(declare-fun temp164_64 () (_ BitVec 64))
(declare-fun temp164_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp164_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp164_67 () (_ BitVec 64))
(declare-fun temp164_66 () (_ BitVec 64))
(declare-fun temp164_69 () (_ BitVec 64))
(declare-fun temp164_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp164_71 () (_ BitVec 64))
(declare-fun temp164_70 () (_ BitVec 64))
(declare-fun temp164_73 () (_ BitVec 64))
(declare-fun temp164_72 () (_ BitVec 64))
(declare-fun temp164_75 () (_ BitVec 64))
(declare-fun temp164_74 () (_ BitVec 64))
(declare-fun temp164_77 () (_ BitVec 64))
(declare-fun temp164_76 () (_ BitVec 64))
(declare-fun temp164_79 () (_ BitVec 64))
(declare-fun temp164_78 () (_ BitVec 64))
(declare-fun temp164_81 () (_ BitVec 64))
(declare-fun temp164_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp164_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp164_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp164_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp164_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp164_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun var9521447 () (_ BitVec 64))
(assert (= temp164_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp164_1)))
(assert (= temp164_2 #x0000000000000000))
(assert (= var1050945 temp164_2))
(assert (= temp164_3 #xffffffffffffffff))
(assert (= var67312 temp164_3))
(assert (= temp164_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp164_4)))
(assert (= temp164_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp164_5)))
(assert (= temp164_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp164_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp164_7 #x0000000000000000))
(assert (= var82187 temp164_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_8 #x0000000000000000))
(assert (= var82356 temp164_8))
(assert (= temp164_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp164_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_10 #x0000000000000001))
(assert (= var82528 temp164_10))
(assert (= temp164_11 #x0000000000000000))
(assert (= var65913 temp164_11))
(assert (= temp164_12 #x0000000000000000))
(assert (= temp164_13 temp164_12))
(assert (= temp164_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp164_13)))
(assert (= temp164_15 #x0000000000000001))
(assert (= temp164_16 temp164_15))
(assert (= temp164_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp164_16)))
(assert (= temp164_18 #x0000000000000002))
(assert (= temp164_19 temp164_18))
(assert (= temp164_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp164_19)))
(assert (= temp164_21 #x0000000000000003))
(assert (= temp164_22 temp164_21))
(assert (= temp164_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp164_22)))
(assert (= temp164_24 #x0000000000000004))
(assert (= temp164_25 temp164_24))
(assert (= temp164_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp164_25)))
(assert (= temp164_27 #x0000000000000005))
(assert (= temp164_28 temp164_27))
(assert (= temp164_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp164_28)))
(assert (= temp164_31 #x0000000000000000))
(assert (= temp164_30
   (ite (bvslt var65913 temp164_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp164_32 temp164_30))
(assert (= temp164_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp164_32)))
(assert (= var82530 temp164_33))
(assert (bvslt temp164_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_34 #x0000000000000001))
(assert (= var82531 temp164_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_35 #x0000000000000001))
(assert (= var82728 temp164_35))
(assert (= var1914351 var65913))
(assert (= temp164_36 #x0000000000000001))
(assert (= var2115797 temp164_36))
(assert (= temp164_37 #x0000000000000002))
(assert (= var2115798 temp164_37))
(assert (= temp164_39 #x0000000000000000))
(assert (= temp164_38 temp164_39))
(assert (= temp164_40 #x0000000000000000))
(assert (= var2628020 temp164_40))
(assert (= temp164_41 #x0000000000000001))
(assert (= temp164_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp164_41 temp164_42)))
(assert (= temp164_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp164_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp164_44 #x0000000000000000))
(assert (= var3740377 temp164_44))
(assert (= temp164_45 #x0000000000000002))
(assert (= var69143 temp164_45))
(assert (= temp164_47 #x0000000000000001))
(assert (= temp164_46 temp164_47))
(assert (= temp164_49 #x0000000000000001))
(assert (= temp164_48 temp164_49))
(assert (= temp164_51 #x0000000000000003))
(assert (= temp164_50 temp164_51))
(assert (= temp164_52 #x0000000000000001))
(assert (= var4212949 temp164_52))
(assert (= var4212950 var69143))
(assert (= temp164_54 #x0000000000000001))
(assert (= temp164_53 temp164_54))
(assert (= temp164_56 #x0000000000000001))
(assert (= temp164_55 temp164_56))
(assert (= temp164_58 #x0000000000000001))
(assert (= temp164_57 temp164_58))
(assert (= temp164_60 #x0000000000000001))
(assert (= temp164_59 temp164_60))
(assert (= temp164_62 #x0000000000000000))
(assert (= temp164_61 temp164_62))
(assert (= temp164_64 #x0000000000000001))
(assert (= temp164_63 temp164_64))
(assert (= var4868391 var69143))
(assert (= temp164_65 #x0000000000000002))
(assert (= var4983962 temp164_65))
(assert (= temp164_67 #x0000000000000001))
(assert (= temp164_66 temp164_67))
(assert (= temp164_69 #x0000000000000001))
(assert (= temp164_68 temp164_69))
(assert (= var5453295 var65913))
(assert (= temp164_71 #x0000000000000001))
(assert (= temp164_70 temp164_71))
(assert (= temp164_73 #x0000000000000001))
(assert (= temp164_72 temp164_73))
(assert (= temp164_75 #x0000000000000001))
(assert (= temp164_74 temp164_75))
(assert (= temp164_77 #x0000000000000001))
(assert (= temp164_76 temp164_77))
(assert (= temp164_79 #x0000000000000000))
(assert (= temp164_78 temp164_79))
(assert (= temp164_81 #x0000000000000001))
(assert (= temp164_80 temp164_81))
(assert (= var6375719 var69143))
(assert (= temp164_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp164_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_83 #x0000000000000001))
(assert (= var83534 temp164_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp164_84 #x0000000000000001))
(assert (= var6818808 temp164_84))
(assert (= var7801844 var69143))
(assert (= temp164_85 #x0000000000000001))
(assert (= var7801848 temp164_85))
(assert (= temp164_86 #x0000000000000001))
(assert (= var9259303 temp164_86))
(assert (= var9521447 var65913))
(model-add temp164_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp164_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp164_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp164_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp164_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp164_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp164_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






