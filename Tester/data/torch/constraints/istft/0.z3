(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp1_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(declare-fun temp1_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp1_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp1_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp1_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp1_47 () (_ BitVec 64))
(declare-fun temp1_46 () (_ BitVec 64))
(declare-fun temp1_49 () (_ BitVec 64))
(declare-fun temp1_48 () (_ BitVec 64))
(declare-fun temp1_51 () (_ BitVec 64))
(declare-fun temp1_50 () (_ BitVec 64))
(declare-fun temp1_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp1_54 () (_ BitVec 64))
(declare-fun temp1_53 () (_ BitVec 64))
(declare-fun temp1_56 () (_ BitVec 64))
(declare-fun temp1_55 () (_ BitVec 64))
(declare-fun temp1_58 () (_ BitVec 64))
(declare-fun temp1_57 () (_ BitVec 64))
(declare-fun temp1_60 () (_ BitVec 64))
(declare-fun temp1_59 () (_ BitVec 64))
(declare-fun temp1_62 () (_ BitVec 64))
(declare-fun temp1_61 () (_ BitVec 64))
(declare-fun temp1_64 () (_ BitVec 64))
(declare-fun temp1_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp1_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp1_67 () (_ BitVec 64))
(declare-fun temp1_66 () (_ BitVec 64))
(declare-fun temp1_69 () (_ BitVec 64))
(declare-fun temp1_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp1_71 () (_ BitVec 64))
(declare-fun temp1_70 () (_ BitVec 64))
(declare-fun temp1_73 () (_ BitVec 64))
(declare-fun temp1_72 () (_ BitVec 64))
(declare-fun temp1_75 () (_ BitVec 64))
(declare-fun temp1_74 () (_ BitVec 64))
(declare-fun temp1_77 () (_ BitVec 64))
(declare-fun temp1_76 () (_ BitVec 64))
(declare-fun temp1_79 () (_ BitVec 64))
(declare-fun temp1_78 () (_ BitVec 64))
(declare-fun temp1_81 () (_ BitVec 64))
(declare-fun temp1_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp1_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp1_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp1_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp1_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp1_86 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun var9586983 () (_ BitVec 64))
(declare-fun temp1_87 () (_ BitVec 64))
(declare-fun var9833626 () (_ BitVec 64))
(assert (= temp1_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp1_1)))
(assert (= temp1_2 #x0000000000000000))
(assert (= var1050945 temp1_2))
(assert (= temp1_3 #xffffffffffffffff))
(assert (= var67312 temp1_3))
(assert (= temp1_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp1_4)))
(assert (= temp1_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp1_5)))
(assert (= temp1_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp1_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp1_7 #x0000000000000000))
(assert (= var82187 temp1_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_8 #x0000000000000000))
(assert (= var82356 temp1_8))
(assert (= temp1_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp1_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_10 #x0000000000000001))
(assert (= var82528 temp1_10))
(assert (= temp1_11 #x0000000000000000))
(assert (= var65913 temp1_11))
(assert (= temp1_12 #x0000000000000000))
(assert (= temp1_13 temp1_12))
(assert (= temp1_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp1_13)))
(assert (= temp1_15 #x0000000000000001))
(assert (= temp1_16 temp1_15))
(assert (= temp1_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp1_16)))
(assert (= temp1_18 #x0000000000000002))
(assert (= temp1_19 temp1_18))
(assert (= temp1_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp1_19)))
(assert (= temp1_21 #x0000000000000003))
(assert (= temp1_22 temp1_21))
(assert (= temp1_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp1_22)))
(assert (= temp1_24 #x0000000000000004))
(assert (= temp1_25 temp1_24))
(assert (= temp1_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp1_25)))
(assert (= temp1_27 #x0000000000000005))
(assert (= temp1_28 temp1_27))
(assert (= temp1_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp1_28)))
(assert (= temp1_31 #x0000000000000000))
(assert (= temp1_30
   (ite (bvslt var65913 temp1_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp1_32 temp1_30))
(assert (= temp1_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp1_32)))
(assert (= var82530 temp1_33))
(assert (bvslt temp1_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_34 #x0000000000000001))
(assert (= var82531 temp1_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_35 #x0000000000000001))
(assert (= var82728 temp1_35))
(assert (= var1914351 var65913))
(assert (= temp1_36 #x0000000000000001))
(assert (= var2115797 temp1_36))
(assert (= temp1_37 #x0000000000000002))
(assert (= var2115798 temp1_37))
(assert (= temp1_39 #x0000000000000000))
(assert (= temp1_38 temp1_39))
(assert (= temp1_40 #x0000000000000000))
(assert (= var2628020 temp1_40))
(assert (= temp1_41 #x0000000000000001))
(assert (= temp1_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp1_41 temp1_42)))
(assert (= temp1_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp1_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp1_44 #x0000000000000000))
(assert (= var3740377 temp1_44))
(assert (= temp1_45 #x0000000000000002))
(assert (= var69143 temp1_45))
(assert (= temp1_47 #x0000000000000001))
(assert (= temp1_46 temp1_47))
(assert (= temp1_49 #x0000000000000001))
(assert (= temp1_48 temp1_49))
(assert (= temp1_51 #x0000000000000003))
(assert (= temp1_50 temp1_51))
(assert (= temp1_52 #x0000000000000001))
(assert (= var4212949 temp1_52))
(assert (= var4212950 var69143))
(assert (= temp1_54 #x0000000000000001))
(assert (= temp1_53 temp1_54))
(assert (= temp1_56 #x0000000000000001))
(assert (= temp1_55 temp1_56))
(assert (= temp1_58 #x0000000000000001))
(assert (= temp1_57 temp1_58))
(assert (= temp1_60 #x0000000000000001))
(assert (= temp1_59 temp1_60))
(assert (= temp1_62 #x0000000000000000))
(assert (= temp1_61 temp1_62))
(assert (= temp1_64 #x0000000000000001))
(assert (= temp1_63 temp1_64))
(assert (= var4868391 var69143))
(assert (= temp1_65 #x0000000000000002))
(assert (= var4983962 temp1_65))
(assert (= temp1_67 #x0000000000000001))
(assert (= temp1_66 temp1_67))
(assert (= temp1_69 #x0000000000000001))
(assert (= temp1_68 temp1_69))
(assert (= var5453295 var65913))
(assert (= temp1_71 #x0000000000000001))
(assert (= temp1_70 temp1_71))
(assert (= temp1_73 #x0000000000000001))
(assert (= temp1_72 temp1_73))
(assert (= temp1_75 #x0000000000000001))
(assert (= temp1_74 temp1_75))
(assert (= temp1_77 #x0000000000000001))
(assert (= temp1_76 temp1_77))
(assert (= temp1_79 #x0000000000000000))
(assert (= temp1_78 temp1_79))
(assert (= temp1_81 #x0000000000000001))
(assert (= temp1_80 temp1_81))
(assert (= var6375719 var69143))
(assert (= temp1_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp1_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_83 #x0000000000000001))
(assert (= var83534 temp1_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp1_84 #x0000000000000001))
(assert (= var6818808 temp1_84))
(assert (= var7867380 var69143))
(assert (= temp1_85 #x0000000000000001))
(assert (= var7867384 temp1_85))
(assert (= temp1_86 #x0000000000000001))
(assert (= var9324839 temp1_86))
(assert (= var9586983 var65913))
(assert (= temp1_87 #x0000000000000000))
(assert (= var9833626 temp1_87))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp1_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp1_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp1_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





