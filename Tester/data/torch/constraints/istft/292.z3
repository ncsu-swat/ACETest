(declare-fun temp966_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp966_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp966_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp966_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp966_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp966_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp966_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp966_8 () (_ BitVec 64))
(declare-fun temp966_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp966_10 () (_ BitVec 64))
(declare-fun temp966_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp966_12 () (_ BitVec 64))
(declare-fun temp966_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp966_14 () (_ BitVec 64))
(declare-fun temp966_15 () (_ BitVec 64))
(declare-fun temp966_16 () (_ BitVec 64))
(declare-fun temp966_17 () (_ BitVec 64))
(declare-fun temp966_18 () (_ BitVec 64))
(declare-fun temp966_19 () (_ BitVec 64))
(declare-fun temp966_20 () (_ BitVec 64))
(declare-fun temp966_21 () (_ BitVec 64))
(declare-fun temp966_22 () (_ BitVec 64))
(declare-fun temp966_23 () (_ BitVec 64))
(declare-fun temp966_24 () (_ BitVec 64))
(declare-fun temp966_25 () (_ BitVec 64))
(declare-fun temp966_26 () (_ BitVec 64))
(declare-fun temp966_27 () (_ BitVec 64))
(declare-fun temp966_28 () (_ BitVec 64))
(declare-fun temp966_29 () (_ BitVec 64))
(declare-fun temp966_31 () (_ BitVec 64))
(declare-fun temp966_30 () (_ BitVec 64))
(declare-fun temp966_32 () (_ BitVec 64))
(declare-fun temp966_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp966_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp966_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp966_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp966_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp966_39 () (_ BitVec 64))
(declare-fun temp966_38 () (_ BitVec 64))
(declare-fun temp966_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp966_41 () (_ BitVec 64))
(declare-fun temp966_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp966_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp966_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp966_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp966_47 () (_ BitVec 64))
(declare-fun temp966_46 () (_ BitVec 64))
(declare-fun temp966_49 () (_ BitVec 64))
(declare-fun temp966_48 () (_ BitVec 64))
(declare-fun temp966_51 () (_ BitVec 64))
(declare-fun temp966_50 () (_ BitVec 64))
(declare-fun temp966_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp966_54 () (_ BitVec 64))
(declare-fun temp966_53 () (_ BitVec 64))
(declare-fun temp966_56 () (_ BitVec 64))
(declare-fun temp966_55 () (_ BitVec 64))
(declare-fun temp966_58 () (_ BitVec 64))
(declare-fun temp966_57 () (_ BitVec 64))
(declare-fun temp966_60 () (_ BitVec 64))
(declare-fun temp966_59 () (_ BitVec 64))
(declare-fun temp966_62 () (_ BitVec 64))
(declare-fun temp966_61 () (_ BitVec 64))
(declare-fun temp966_64 () (_ BitVec 64))
(declare-fun temp966_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp966_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp966_67 () (_ BitVec 64))
(declare-fun temp966_66 () (_ BitVec 64))
(declare-fun temp966_69 () (_ BitVec 64))
(declare-fun temp966_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp966_71 () (_ BitVec 64))
(declare-fun temp966_70 () (_ BitVec 64))
(declare-fun temp966_73 () (_ BitVec 64))
(declare-fun temp966_72 () (_ BitVec 64))
(declare-fun temp966_75 () (_ BitVec 64))
(declare-fun temp966_74 () (_ BitVec 64))
(declare-fun temp966_77 () (_ BitVec 64))
(declare-fun temp966_76 () (_ BitVec 64))
(declare-fun temp966_79 () (_ BitVec 64))
(declare-fun temp966_78 () (_ BitVec 64))
(declare-fun temp966_81 () (_ BitVec 64))
(declare-fun temp966_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp966_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp966_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp966_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun temp966_85 () (_ BitVec 64))
(declare-fun var6818858 () (_ BitVec 64))
(declare-fun temp966_86 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp966_87 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp966_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp966_89 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp966_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp966_1)))
(assert (= temp966_2 #x0000000000000000))
(assert (= var1050945 temp966_2))
(assert (= temp966_3 #xffffffffffffffff))
(assert (= var67312 temp966_3))
(assert (= temp966_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp966_4)))
(assert (= temp966_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp966_5)))
(assert (= temp966_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp966_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp966_7 #x0000000000000000))
(assert (= var82187 temp966_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_8 #x0000000000000000))
(assert (= var82356 temp966_8))
(assert (= temp966_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp966_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_10 #x0000000000000001))
(assert (= var82528 temp966_10))
(assert (= temp966_11 #x0000000000000000))
(assert (= var65913 temp966_11))
(assert (= temp966_12 #x0000000000000000))
(assert (= temp966_13 temp966_12))
(assert (= temp966_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp966_13)))
(assert (= temp966_15 #x0000000000000001))
(assert (= temp966_16 temp966_15))
(assert (= temp966_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp966_16)))
(assert (= temp966_18 #x0000000000000002))
(assert (= temp966_19 temp966_18))
(assert (= temp966_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp966_19)))
(assert (= temp966_21 #x0000000000000003))
(assert (= temp966_22 temp966_21))
(assert (= temp966_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp966_22)))
(assert (= temp966_24 #x0000000000000004))
(assert (= temp966_25 temp966_24))
(assert (= temp966_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp966_25)))
(assert (= temp966_27 #x0000000000000005))
(assert (= temp966_28 temp966_27))
(assert (= temp966_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp966_28)))
(assert (= temp966_31 #x0000000000000000))
(assert (= temp966_30
   (ite (bvslt var65913 temp966_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp966_32 temp966_30))
(assert (= temp966_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp966_32)))
(assert (= var82530 temp966_33))
(assert (bvslt temp966_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp966_34 #x0000000000000001))
(assert (= var82531 temp966_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp966_35 #x0000000000000001))
(assert (= var82728 temp966_35))
(assert (= var1914351 var65913))
(assert (= temp966_36 #x0000000000000001))
(assert (= var2115797 temp966_36))
(assert (= temp966_37 #x0000000000000002))
(assert (= var2115798 temp966_37))
(assert (= temp966_39 #x0000000000000000))
(assert (= temp966_38 temp966_39))
(assert (= temp966_40 #x0000000000000000))
(assert (= var2628020 temp966_40))
(assert (= temp966_41 #x0000000000000001))
(assert (= temp966_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp966_41 temp966_42)))
(assert (= temp966_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp966_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp966_44 #x0000000000000000))
(assert (= var3740377 temp966_44))
(assert (= temp966_45 #x0000000000000002))
(assert (= var69143 temp966_45))
(assert (= temp966_47 #x0000000000000001))
(assert (= temp966_46 temp966_47))
(assert (= temp966_49 #x0000000000000001))
(assert (= temp966_48 temp966_49))
(assert (= temp966_51 #x0000000000000003))
(assert (= temp966_50 temp966_51))
(assert (= temp966_52 #x0000000000000001))
(assert (= var4212949 temp966_52))
(assert (= var4212950 var69143))
(assert (= temp966_54 #x0000000000000001))
(assert (= temp966_53 temp966_54))
(assert (= temp966_56 #x0000000000000001))
(assert (= temp966_55 temp966_56))
(assert (= temp966_58 #x0000000000000001))
(assert (= temp966_57 temp966_58))
(assert (= temp966_60 #x0000000000000001))
(assert (= temp966_59 temp966_60))
(assert (= temp966_62 #x0000000000000000))
(assert (= temp966_61 temp966_62))
(assert (= temp966_64 #x0000000000000001))
(assert (= temp966_63 temp966_64))
(assert (= var4868391 var69143))
(assert (= temp966_65 #x0000000000000002))
(assert (= var4983962 temp966_65))
(assert (= temp966_67 #x0000000000000001))
(assert (= temp966_66 temp966_67))
(assert (= temp966_69 #x0000000000000001))
(assert (= temp966_68 temp966_69))
(assert (= var5453295 var65913))
(assert (= temp966_71 #x0000000000000001))
(assert (= temp966_70 temp966_71))
(assert (= temp966_73 #x0000000000000001))
(assert (= temp966_72 temp966_73))
(assert (= temp966_75 #x0000000000000001))
(assert (= temp966_74 temp966_75))
(assert (= temp966_77 #x0000000000000001))
(assert (= temp966_76 temp966_77))
(assert (= temp966_79 #x0000000000000000))
(assert (= temp966_78 temp966_79))
(assert (= temp966_81 #x0000000000000001))
(assert (= temp966_80 temp966_81))
(assert (= var6375719 var69143))
(assert (= temp966_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp966_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_83 #x0000000000000001))
(assert (= var83534 temp966_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp966_84 #x0000000000000001))
(assert (= var6818808 temp966_84))
(assert (= temp966_85 #x0000000000000000))
(assert (= var6818858 temp966_85))
(assert (= temp966_86 #x0000000000000000))
(assert (= var6818858 temp966_86))
(assert (= var7736308 var69143))
(assert (= temp966_87 #x0000000000000001))
(assert (= var7736312 temp966_87))
(assert (= temp966_88 #x0000000000000001))
(assert (= var9193767 temp966_88))
(assert (= temp966_89 #x0000000000000000))
(assert (= var9505946 temp966_89))
(model-add temp966_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp966_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp966_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp966_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp966_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp966_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp966_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




