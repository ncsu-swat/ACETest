(declare-fun temp1833_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp1833_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp1833_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp1833_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp1833_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp1833_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp1833_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp1833_8 () (_ BitVec 64))
(declare-fun temp1833_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp1833_10 () (_ BitVec 64))
(declare-fun temp1833_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp1833_12 () (_ BitVec 64))
(declare-fun temp1833_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1833_14 () (_ BitVec 64))
(declare-fun temp1833_15 () (_ BitVec 64))
(declare-fun temp1833_16 () (_ BitVec 64))
(declare-fun temp1833_17 () (_ BitVec 64))
(declare-fun temp1833_18 () (_ BitVec 64))
(declare-fun temp1833_19 () (_ BitVec 64))
(declare-fun temp1833_20 () (_ BitVec 64))
(declare-fun temp1833_21 () (_ BitVec 64))
(declare-fun temp1833_22 () (_ BitVec 64))
(declare-fun temp1833_23 () (_ BitVec 64))
(declare-fun temp1833_24 () (_ BitVec 64))
(declare-fun temp1833_25 () (_ BitVec 64))
(declare-fun temp1833_26 () (_ BitVec 64))
(declare-fun temp1833_27 () (_ BitVec 64))
(declare-fun temp1833_28 () (_ BitVec 64))
(declare-fun temp1833_29 () (_ BitVec 64))
(declare-fun temp1833_31 () (_ BitVec 64))
(declare-fun temp1833_30 () (_ BitVec 64))
(declare-fun temp1833_32 () (_ BitVec 64))
(declare-fun temp1833_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp1833_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp1833_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp1833_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp1833_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp1833_39 () (_ BitVec 64))
(declare-fun temp1833_38 () (_ BitVec 64))
(declare-fun temp1833_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp1833_41 () (_ BitVec 64))
(declare-fun temp1833_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp1833_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp1833_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp1833_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp1833_47 () (_ BitVec 64))
(declare-fun temp1833_46 () (_ BitVec 64))
(declare-fun temp1833_49 () (_ BitVec 64))
(declare-fun temp1833_48 () (_ BitVec 64))
(declare-fun temp1833_51 () (_ BitVec 64))
(declare-fun temp1833_50 () (_ BitVec 64))
(declare-fun temp1833_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp1833_54 () (_ BitVec 64))
(declare-fun temp1833_53 () (_ BitVec 64))
(declare-fun temp1833_56 () (_ BitVec 64))
(declare-fun temp1833_55 () (_ BitVec 64))
(declare-fun temp1833_58 () (_ BitVec 64))
(declare-fun temp1833_57 () (_ BitVec 64))
(declare-fun temp1833_60 () (_ BitVec 64))
(declare-fun temp1833_59 () (_ BitVec 64))
(declare-fun temp1833_62 () (_ BitVec 64))
(declare-fun temp1833_61 () (_ BitVec 64))
(declare-fun temp1833_64 () (_ BitVec 64))
(declare-fun temp1833_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp1833_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp1833_67 () (_ BitVec 64))
(declare-fun temp1833_66 () (_ BitVec 64))
(declare-fun temp1833_69 () (_ BitVec 64))
(declare-fun temp1833_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp1833_71 () (_ BitVec 64))
(declare-fun temp1833_70 () (_ BitVec 64))
(declare-fun temp1833_73 () (_ BitVec 64))
(declare-fun temp1833_72 () (_ BitVec 64))
(declare-fun temp1833_75 () (_ BitVec 64))
(declare-fun temp1833_74 () (_ BitVec 64))
(declare-fun temp1833_77 () (_ BitVec 64))
(declare-fun temp1833_76 () (_ BitVec 64))
(declare-fun temp1833_79 () (_ BitVec 64))
(declare-fun temp1833_78 () (_ BitVec 64))
(declare-fun temp1833_81 () (_ BitVec 64))
(declare-fun temp1833_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp1833_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp1833_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp1833_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun temp1833_85 () (_ BitVec 64))
(declare-fun var6818846 () (_ BitVec 64))
(declare-fun temp1833_86 () (_ BitVec 64))
(declare-fun var7670772 () (_ BitVec 64))
(declare-fun temp1833_87 () (_ BitVec 64))
(declare-fun var7670776 () (_ BitVec 64))
(declare-fun temp1833_88 () (_ BitVec 64))
(declare-fun var7670826 () (_ BitVec 64))
(declare-fun temp1833_89 () (_ BitVec 64))
(declare-fun temp1833_90 () (_ BitVec 64))
(declare-fun var8931623 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp1833_91 () (_ BitVec 64))
(declare-fun var9440410 () (_ BitVec 64))
(assert (= temp1833_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp1833_1)))
(assert (= temp1833_2 #x0000000000000000))
(assert (= var1050945 temp1833_2))
(assert (= temp1833_3 #xffffffffffffffff))
(assert (= var67312 temp1833_3))
(assert (= temp1833_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp1833_4)))
(assert (= temp1833_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp1833_5)))
(assert (= temp1833_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp1833_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp1833_7 #x0000000000000000))
(assert (= var82187 temp1833_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1833_8 #x0000000000000000))
(assert (= var82356 temp1833_8))
(assert (= temp1833_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp1833_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1833_10 #x0000000000000001))
(assert (= var82528 temp1833_10))
(assert (= temp1833_11 #x0000000000000000))
(assert (= var65913 temp1833_11))
(assert (= temp1833_12 #x0000000000000000))
(assert (= temp1833_13 temp1833_12))
(assert (= temp1833_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp1833_13)))
(assert (= temp1833_15 #x0000000000000001))
(assert (= temp1833_16 temp1833_15))
(assert (= temp1833_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp1833_16)))
(assert (= temp1833_18 #x0000000000000002))
(assert (= temp1833_19 temp1833_18))
(assert (= temp1833_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp1833_19)))
(assert (= temp1833_21 #x0000000000000003))
(assert (= temp1833_22 temp1833_21))
(assert (= temp1833_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp1833_22)))
(assert (= temp1833_24 #x0000000000000004))
(assert (= temp1833_25 temp1833_24))
(assert (= temp1833_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp1833_25)))
(assert (= temp1833_27 #x0000000000000005))
(assert (= temp1833_28 temp1833_27))
(assert (= temp1833_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp1833_28)))
(assert (= temp1833_31 #x0000000000000000))
(assert (= temp1833_30
   (ite (bvslt var65913 temp1833_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp1833_32 temp1833_30))
(assert (= temp1833_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp1833_32)))
(assert (= var82530 temp1833_33))
(assert (bvslt temp1833_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1833_34 #x0000000000000001))
(assert (= var82531 temp1833_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1833_35 #x0000000000000001))
(assert (= var82728 temp1833_35))
(assert (= var1914351 var65913))
(assert (= temp1833_36 #x0000000000000001))
(assert (= var2115797 temp1833_36))
(assert (= temp1833_37 #x0000000000000002))
(assert (= var2115798 temp1833_37))
(assert (= temp1833_39 #x0000000000000000))
(assert (= temp1833_38 temp1833_39))
(assert (= temp1833_40 #x0000000000000000))
(assert (= var2628020 temp1833_40))
(assert (= temp1833_41 #x0000000000000001))
(assert (= temp1833_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp1833_41
        temp1833_42)))
(assert (= temp1833_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp1833_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp1833_44 #x0000000000000000))
(assert (= var3740377 temp1833_44))
(assert (= temp1833_45 #x0000000000000002))
(assert (= var69143 temp1833_45))
(assert (= temp1833_47 #x0000000000000001))
(assert (= temp1833_46 temp1833_47))
(assert (= temp1833_49 #x0000000000000001))
(assert (= temp1833_48 temp1833_49))
(assert (= temp1833_51 #x0000000000000003))
(assert (= temp1833_50 temp1833_51))
(assert (= temp1833_52 #x0000000000000001))
(assert (= var4212949 temp1833_52))
(assert (= var4212950 var69143))
(assert (= temp1833_54 #x0000000000000001))
(assert (= temp1833_53 temp1833_54))
(assert (= temp1833_56 #x0000000000000001))
(assert (= temp1833_55 temp1833_56))
(assert (= temp1833_58 #x0000000000000001))
(assert (= temp1833_57 temp1833_58))
(assert (= temp1833_60 #x0000000000000001))
(assert (= temp1833_59 temp1833_60))
(assert (= temp1833_62 #x0000000000000000))
(assert (= temp1833_61 temp1833_62))
(assert (= temp1833_64 #x0000000000000001))
(assert (= temp1833_63 temp1833_64))
(assert (= var4868391 var69143))
(assert (= temp1833_65 #x0000000000000002))
(assert (= var4983962 temp1833_65))
(assert (= temp1833_67 #x0000000000000001))
(assert (= temp1833_66 temp1833_67))
(assert (= temp1833_69 #x0000000000000001))
(assert (= temp1833_68 temp1833_69))
(assert (= var5453295 var65913))
(assert (= temp1833_71 #x0000000000000001))
(assert (= temp1833_70 temp1833_71))
(assert (= temp1833_73 #x0000000000000001))
(assert (= temp1833_72 temp1833_73))
(assert (= temp1833_75 #x0000000000000001))
(assert (= temp1833_74 temp1833_75))
(assert (= temp1833_77 #x0000000000000001))
(assert (= temp1833_76 temp1833_77))
(assert (= temp1833_79 #x0000000000000000))
(assert (= temp1833_78 temp1833_79))
(assert (= temp1833_81 #x0000000000000001))
(assert (= temp1833_80 temp1833_81))
(assert (= var6375719 var69143))
(assert (= temp1833_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp1833_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1833_83 #x0000000000000001))
(assert (= var83534 temp1833_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp1833_84 #x0000000000000001))
(assert (= var6818808 temp1833_84))
(assert (= temp1833_85 #x0000000000000000))
(assert (= var6818846 temp1833_85))
(assert (= temp1833_86 #x0000000000000000))
(assert (= var6818846 temp1833_86))
(assert (= var7670772 var69143))
(assert (= temp1833_87 #x0000000000000001))
(assert (= var7670776 temp1833_87))
(assert (= temp1833_88 #x0000000000000000))
(assert (= var7670826 temp1833_88))
(assert (= temp1833_89 #x0000000000000000))
(assert (= var7670826 temp1833_89))
(assert (= temp1833_90 #x0000000000000001))
(assert (= var8931623 temp1833_90))
(assert (= var9193767 var65913))
(assert (= temp1833_91 #x0000000000000000))
(assert (= var9440410 temp1833_91))
(model-add temp1833_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1833_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp1833_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp1833_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1833_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp1833_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1833_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




