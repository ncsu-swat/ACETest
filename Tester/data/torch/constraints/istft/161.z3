(declare-fun temp342_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp342_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp342_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp342_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp342_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp342_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp342_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp342_8 () (_ BitVec 64))
(declare-fun temp342_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp342_10 () (_ BitVec 64))
(declare-fun temp342_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp342_12 () (_ BitVec 64))
(declare-fun temp342_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp342_14 () (_ BitVec 64))
(declare-fun temp342_15 () (_ BitVec 64))
(declare-fun temp342_16 () (_ BitVec 64))
(declare-fun temp342_17 () (_ BitVec 64))
(declare-fun temp342_18 () (_ BitVec 64))
(declare-fun temp342_19 () (_ BitVec 64))
(declare-fun temp342_20 () (_ BitVec 64))
(declare-fun temp342_21 () (_ BitVec 64))
(declare-fun temp342_22 () (_ BitVec 64))
(declare-fun temp342_23 () (_ BitVec 64))
(declare-fun temp342_24 () (_ BitVec 64))
(declare-fun temp342_25 () (_ BitVec 64))
(declare-fun temp342_26 () (_ BitVec 64))
(declare-fun temp342_27 () (_ BitVec 64))
(declare-fun temp342_28 () (_ BitVec 64))
(declare-fun temp342_29 () (_ BitVec 64))
(declare-fun temp342_31 () (_ BitVec 64))
(declare-fun temp342_30 () (_ BitVec 64))
(declare-fun temp342_32 () (_ BitVec 64))
(declare-fun temp342_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp342_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp342_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp342_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp342_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp342_39 () (_ BitVec 64))
(declare-fun temp342_38 () (_ BitVec 64))
(declare-fun temp342_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp342_41 () (_ BitVec 64))
(declare-fun temp342_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp342_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp342_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp342_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp342_47 () (_ BitVec 64))
(declare-fun temp342_46 () (_ BitVec 64))
(declare-fun temp342_49 () (_ BitVec 64))
(declare-fun temp342_48 () (_ BitVec 64))
(declare-fun temp342_51 () (_ BitVec 64))
(declare-fun temp342_50 () (_ BitVec 64))
(declare-fun temp342_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp342_54 () (_ BitVec 64))
(declare-fun temp342_53 () (_ BitVec 64))
(declare-fun temp342_56 () (_ BitVec 64))
(declare-fun temp342_55 () (_ BitVec 64))
(declare-fun temp342_58 () (_ BitVec 64))
(declare-fun temp342_57 () (_ BitVec 64))
(declare-fun temp342_60 () (_ BitVec 64))
(declare-fun temp342_59 () (_ BitVec 64))
(declare-fun temp342_62 () (_ BitVec 64))
(declare-fun temp342_61 () (_ BitVec 64))
(declare-fun temp342_64 () (_ BitVec 64))
(declare-fun temp342_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp342_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp342_67 () (_ BitVec 64))
(declare-fun temp342_66 () (_ BitVec 64))
(declare-fun temp342_69 () (_ BitVec 64))
(declare-fun temp342_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp342_71 () (_ BitVec 64))
(declare-fun temp342_70 () (_ BitVec 64))
(declare-fun temp342_73 () (_ BitVec 64))
(declare-fun temp342_72 () (_ BitVec 64))
(declare-fun temp342_75 () (_ BitVec 64))
(declare-fun temp342_74 () (_ BitVec 64))
(declare-fun temp342_77 () (_ BitVec 64))
(declare-fun temp342_76 () (_ BitVec 64))
(declare-fun temp342_79 () (_ BitVec 64))
(declare-fun temp342_78 () (_ BitVec 64))
(declare-fun temp342_81 () (_ BitVec 64))
(declare-fun temp342_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp342_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp342_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp342_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp342_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp342_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp342_88 () (_ BitVec 64))
(declare-fun temp342_87 () (_ BitVec 64))
(declare-fun temp342_89 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp342_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp342_1)))
(assert (= temp342_2 #x0000000000000000))
(assert (= var1050945 temp342_2))
(assert (= temp342_3 #xffffffffffffffff))
(assert (= var67312 temp342_3))
(assert (= temp342_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp342_4)))
(assert (= temp342_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp342_5)))
(assert (= temp342_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp342_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp342_7 #x0000000000000000))
(assert (= var82187 temp342_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp342_8 #x0000000000000000))
(assert (= var82356 temp342_8))
(assert (= temp342_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp342_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp342_10 #x0000000000000001))
(assert (= var82528 temp342_10))
(assert (= temp342_11 #x0000000000000000))
(assert (= var65913 temp342_11))
(assert (= temp342_12 #x0000000000000000))
(assert (= temp342_13 temp342_12))
(assert (= temp342_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp342_13)))
(assert (= temp342_15 #x0000000000000001))
(assert (= temp342_16 temp342_15))
(assert (= temp342_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp342_16)))
(assert (= temp342_18 #x0000000000000002))
(assert (= temp342_19 temp342_18))
(assert (= temp342_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp342_19)))
(assert (= temp342_21 #x0000000000000003))
(assert (= temp342_22 temp342_21))
(assert (= temp342_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp342_22)))
(assert (= temp342_24 #x0000000000000004))
(assert (= temp342_25 temp342_24))
(assert (= temp342_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp342_25)))
(assert (= temp342_27 #x0000000000000005))
(assert (= temp342_28 temp342_27))
(assert (= temp342_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp342_28)))
(assert (= temp342_31 #x0000000000000000))
(assert (= temp342_30
   (ite (bvslt var65913 temp342_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp342_32 temp342_30))
(assert (= temp342_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp342_32)))
(assert (= var82530 temp342_33))
(assert (bvslt temp342_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp342_34 #x0000000000000001))
(assert (= var82531 temp342_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp342_35 #x0000000000000001))
(assert (= var82728 temp342_35))
(assert (= var1914351 var65913))
(assert (= temp342_36 #x0000000000000001))
(assert (= var2115797 temp342_36))
(assert (= temp342_37 #x0000000000000002))
(assert (= var2115798 temp342_37))
(assert (= temp342_39 #x0000000000000000))
(assert (= temp342_38 temp342_39))
(assert (= temp342_40 #x0000000000000000))
(assert (= var2628020 temp342_40))
(assert (= temp342_41 #x0000000000000001))
(assert (= temp342_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp342_41 temp342_42)))
(assert (= temp342_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp342_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp342_44 #x0000000000000000))
(assert (= var3740377 temp342_44))
(assert (= temp342_45 #x0000000000000002))
(assert (= var69143 temp342_45))
(assert (= temp342_47 #x0000000000000001))
(assert (= temp342_46 temp342_47))
(assert (= temp342_49 #x0000000000000001))
(assert (= temp342_48 temp342_49))
(assert (= temp342_51 #x0000000000000003))
(assert (= temp342_50 temp342_51))
(assert (= temp342_52 #x0000000000000001))
(assert (= var4212949 temp342_52))
(assert (= var4212950 var69143))
(assert (= temp342_54 #x0000000000000001))
(assert (= temp342_53 temp342_54))
(assert (= temp342_56 #x0000000000000001))
(assert (= temp342_55 temp342_56))
(assert (= temp342_58 #x0000000000000001))
(assert (= temp342_57 temp342_58))
(assert (= temp342_60 #x0000000000000001))
(assert (= temp342_59 temp342_60))
(assert (= temp342_62 #x0000000000000000))
(assert (= temp342_61 temp342_62))
(assert (= temp342_64 #x0000000000000001))
(assert (= temp342_63 temp342_64))
(assert (= var4868391 var69143))
(assert (= temp342_65 #x0000000000000002))
(assert (= var4983962 temp342_65))
(assert (= temp342_67 #x0000000000000001))
(assert (= temp342_66 temp342_67))
(assert (= temp342_69 #x0000000000000001))
(assert (= temp342_68 temp342_69))
(assert (= var5453295 var65913))
(assert (= temp342_71 #x0000000000000001))
(assert (= temp342_70 temp342_71))
(assert (= temp342_73 #x0000000000000001))
(assert (= temp342_72 temp342_73))
(assert (= temp342_75 #x0000000000000001))
(assert (= temp342_74 temp342_75))
(assert (= temp342_77 #x0000000000000001))
(assert (= temp342_76 temp342_77))
(assert (= temp342_79 #x0000000000000000))
(assert (= temp342_78 temp342_79))
(assert (= temp342_81 #x0000000000000001))
(assert (= temp342_80 temp342_81))
(assert (= var6375719 var69143))
(assert (= temp342_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp342_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp342_83 #x0000000000000001))
(assert (= var83534 temp342_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp342_84 #x0000000000000001))
(assert (= var6818808 temp342_84))
(assert (= var7801844 var69143))
(assert (= temp342_85 #x0000000000000001))
(assert (= var7801848 temp342_85))
(assert (= temp342_86 #x0000000000000001))
(assert (= var9193767 temp342_86))
(assert (= var9455911 var65913))
(assert (= temp342_88 #x0000000000000001))
(assert (= temp342_87 temp342_88))
(assert (= temp342_89 #x0000000000000000))
(assert (= var9702554 temp342_89))
(model-add temp342_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp342_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp342_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp342_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp342_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp342_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp342_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





