(declare-fun temp96_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp96_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp96_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp96_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp96_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp96_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp96_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp96_8 () (_ BitVec 64))
(declare-fun temp96_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp96_10 () (_ BitVec 64))
(declare-fun temp96_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp96_12 () (_ BitVec 64))
(declare-fun temp96_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_14 () (_ BitVec 64))
(declare-fun temp96_15 () (_ BitVec 64))
(declare-fun temp96_16 () (_ BitVec 64))
(declare-fun temp96_17 () (_ BitVec 64))
(declare-fun temp96_18 () (_ BitVec 64))
(declare-fun temp96_19 () (_ BitVec 64))
(declare-fun temp96_20 () (_ BitVec 64))
(declare-fun temp96_21 () (_ BitVec 64))
(declare-fun temp96_22 () (_ BitVec 64))
(declare-fun temp96_23 () (_ BitVec 64))
(declare-fun temp96_24 () (_ BitVec 64))
(declare-fun temp96_25 () (_ BitVec 64))
(declare-fun temp96_26 () (_ BitVec 64))
(declare-fun temp96_27 () (_ BitVec 64))
(declare-fun temp96_28 () (_ BitVec 64))
(declare-fun temp96_29 () (_ BitVec 64))
(declare-fun temp96_31 () (_ BitVec 64))
(declare-fun temp96_30 () (_ BitVec 64))
(declare-fun temp96_32 () (_ BitVec 64))
(declare-fun temp96_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp96_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp96_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp96_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp96_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp96_39 () (_ BitVec 64))
(declare-fun temp96_38 () (_ BitVec 64))
(declare-fun temp96_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp96_41 () (_ BitVec 64))
(declare-fun temp96_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp96_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp96_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp96_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp96_47 () (_ BitVec 64))
(declare-fun temp96_46 () (_ BitVec 64))
(declare-fun temp96_49 () (_ BitVec 64))
(declare-fun temp96_48 () (_ BitVec 64))
(declare-fun temp96_51 () (_ BitVec 64))
(declare-fun temp96_50 () (_ BitVec 64))
(declare-fun temp96_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp96_54 () (_ BitVec 64))
(declare-fun temp96_53 () (_ BitVec 64))
(declare-fun temp96_56 () (_ BitVec 64))
(declare-fun temp96_55 () (_ BitVec 64))
(declare-fun temp96_58 () (_ BitVec 64))
(declare-fun temp96_57 () (_ BitVec 64))
(declare-fun temp96_60 () (_ BitVec 64))
(declare-fun temp96_59 () (_ BitVec 64))
(declare-fun temp96_62 () (_ BitVec 64))
(declare-fun temp96_61 () (_ BitVec 64))
(declare-fun temp96_64 () (_ BitVec 64))
(declare-fun temp96_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp96_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp96_67 () (_ BitVec 64))
(declare-fun temp96_66 () (_ BitVec 64))
(declare-fun temp96_69 () (_ BitVec 64))
(declare-fun temp96_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp96_71 () (_ BitVec 64))
(declare-fun temp96_70 () (_ BitVec 64))
(declare-fun temp96_73 () (_ BitVec 64))
(declare-fun temp96_72 () (_ BitVec 64))
(declare-fun temp96_75 () (_ BitVec 64))
(declare-fun temp96_74 () (_ BitVec 64))
(declare-fun temp96_77 () (_ BitVec 64))
(declare-fun temp96_76 () (_ BitVec 64))
(declare-fun temp96_79 () (_ BitVec 64))
(declare-fun temp96_78 () (_ BitVec 64))
(declare-fun temp96_81 () (_ BitVec 64))
(declare-fun temp96_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp96_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp96_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp96_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp96_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp96_86 () (_ BitVec 64))
(declare-fun var7867422 () (_ BitVec 64))
(declare-fun temp96_87 () (_ BitVec 64))
(declare-fun temp96_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp96_89 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp96_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp96_1)))
(assert (= temp96_2 #x0000000000000000))
(assert (= var1050945 temp96_2))
(assert (= temp96_3 #xffffffffffffffff))
(assert (= var67312 temp96_3))
(assert (= temp96_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp96_4)))
(assert (= temp96_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp96_5)))
(assert (= temp96_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp96_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp96_7 #x0000000000000000))
(assert (= var82187 temp96_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_8 #x0000000000000000))
(assert (= var82356 temp96_8))
(assert (= temp96_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp96_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_10 #x0000000000000001))
(assert (= var82528 temp96_10))
(assert (= temp96_11 #x0000000000000000))
(assert (= var65913 temp96_11))
(assert (= temp96_12 #x0000000000000000))
(assert (= temp96_13 temp96_12))
(assert (= temp96_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp96_13)))
(assert (= temp96_15 #x0000000000000001))
(assert (= temp96_16 temp96_15))
(assert (= temp96_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp96_16)))
(assert (= temp96_18 #x0000000000000002))
(assert (= temp96_19 temp96_18))
(assert (= temp96_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp96_19)))
(assert (= temp96_21 #x0000000000000003))
(assert (= temp96_22 temp96_21))
(assert (= temp96_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp96_22)))
(assert (= temp96_24 #x0000000000000004))
(assert (= temp96_25 temp96_24))
(assert (= temp96_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp96_25)))
(assert (= temp96_27 #x0000000000000005))
(assert (= temp96_28 temp96_27))
(assert (= temp96_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp96_28)))
(assert (= temp96_31 #x0000000000000000))
(assert (= temp96_30
   (ite (bvslt var65913 temp96_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp96_32 temp96_30))
(assert (= temp96_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp96_32)))
(assert (= var82530 temp96_33))
(assert (bvslt temp96_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_34 #x0000000000000001))
(assert (= var82531 temp96_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_35 #x0000000000000001))
(assert (= var82728 temp96_35))
(assert (= var1914351 var65913))
(assert (= temp96_36 #x0000000000000001))
(assert (= var2115797 temp96_36))
(assert (= temp96_37 #x0000000000000002))
(assert (= var2115798 temp96_37))
(assert (= temp96_39 #x0000000000000000))
(assert (= temp96_38 temp96_39))
(assert (= temp96_40 #x0000000000000000))
(assert (= var2628020 temp96_40))
(assert (= temp96_41 #x0000000000000001))
(assert (= temp96_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp96_41 temp96_42)))
(assert (= temp96_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp96_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp96_44 #x0000000000000000))
(assert (= var3740377 temp96_44))
(assert (= temp96_45 #x0000000000000002))
(assert (= var69143 temp96_45))
(assert (= temp96_47 #x0000000000000001))
(assert (= temp96_46 temp96_47))
(assert (= temp96_49 #x0000000000000001))
(assert (= temp96_48 temp96_49))
(assert (= temp96_51 #x0000000000000003))
(assert (= temp96_50 temp96_51))
(assert (= temp96_52 #x0000000000000001))
(assert (= var4212949 temp96_52))
(assert (= var4212950 var69143))
(assert (= temp96_54 #x0000000000000001))
(assert (= temp96_53 temp96_54))
(assert (= temp96_56 #x0000000000000001))
(assert (= temp96_55 temp96_56))
(assert (= temp96_58 #x0000000000000001))
(assert (= temp96_57 temp96_58))
(assert (= temp96_60 #x0000000000000001))
(assert (= temp96_59 temp96_60))
(assert (= temp96_62 #x0000000000000000))
(assert (= temp96_61 temp96_62))
(assert (= temp96_64 #x0000000000000001))
(assert (= temp96_63 temp96_64))
(assert (= var4868391 var69143))
(assert (= temp96_65 #x0000000000000002))
(assert (= var4983962 temp96_65))
(assert (= temp96_67 #x0000000000000001))
(assert (= temp96_66 temp96_67))
(assert (= temp96_69 #x0000000000000001))
(assert (= temp96_68 temp96_69))
(assert (= var5453295 var65913))
(assert (= temp96_71 #x0000000000000001))
(assert (= temp96_70 temp96_71))
(assert (= temp96_73 #x0000000000000001))
(assert (= temp96_72 temp96_73))
(assert (= temp96_75 #x0000000000000001))
(assert (= temp96_74 temp96_75))
(assert (= temp96_77 #x0000000000000001))
(assert (= temp96_76 temp96_77))
(assert (= temp96_79 #x0000000000000000))
(assert (= temp96_78 temp96_79))
(assert (= temp96_81 #x0000000000000001))
(assert (= temp96_80 temp96_81))
(assert (= var6375719 var69143))
(assert (= temp96_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp96_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_83 #x0000000000000001))
(assert (= var83534 temp96_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp96_84 #x0000000000000001))
(assert (= var6818808 temp96_84))
(assert (= var7867380 var69143))
(assert (= temp96_85 #x0000000000000001))
(assert (= var7867384 temp96_85))
(assert (= temp96_86 #x0000000000000000))
(assert (= var7867422 temp96_86))
(assert (= temp96_87 #x0000000000000000))
(assert (= var7867422 temp96_87))
(assert (= temp96_88 #x0000000000000001))
(assert (= var9193767 temp96_88))
(assert (= temp96_89 #x0000000000000000))
(assert (= var9505946 temp96_89))
(model-add temp96_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp96_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp96_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp96_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp96_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp96_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp96_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





