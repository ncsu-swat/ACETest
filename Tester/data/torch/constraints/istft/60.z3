(declare-fun temp116_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp116_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp116_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp116_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp116_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp116_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp116_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp116_8 () (_ BitVec 64))
(declare-fun temp116_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp116_10 () (_ BitVec 64))
(declare-fun temp116_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp116_12 () (_ BitVec 64))
(declare-fun temp116_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp116_14 () (_ BitVec 64))
(declare-fun temp116_15 () (_ BitVec 64))
(declare-fun temp116_16 () (_ BitVec 64))
(declare-fun temp116_17 () (_ BitVec 64))
(declare-fun temp116_18 () (_ BitVec 64))
(declare-fun temp116_19 () (_ BitVec 64))
(declare-fun temp116_20 () (_ BitVec 64))
(declare-fun temp116_21 () (_ BitVec 64))
(declare-fun temp116_22 () (_ BitVec 64))
(declare-fun temp116_23 () (_ BitVec 64))
(declare-fun temp116_24 () (_ BitVec 64))
(declare-fun temp116_25 () (_ BitVec 64))
(declare-fun temp116_26 () (_ BitVec 64))
(declare-fun temp116_27 () (_ BitVec 64))
(declare-fun temp116_28 () (_ BitVec 64))
(declare-fun temp116_29 () (_ BitVec 64))
(declare-fun temp116_31 () (_ BitVec 64))
(declare-fun temp116_30 () (_ BitVec 64))
(declare-fun temp116_32 () (_ BitVec 64))
(declare-fun temp116_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp116_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp116_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp116_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp116_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp116_39 () (_ BitVec 64))
(declare-fun temp116_38 () (_ BitVec 64))
(declare-fun temp116_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp116_41 () (_ BitVec 64))
(declare-fun temp116_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp116_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp116_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp116_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp116_47 () (_ BitVec 64))
(declare-fun temp116_46 () (_ BitVec 64))
(declare-fun temp116_49 () (_ BitVec 64))
(declare-fun temp116_48 () (_ BitVec 64))
(declare-fun temp116_51 () (_ BitVec 64))
(declare-fun temp116_50 () (_ BitVec 64))
(declare-fun temp116_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp116_54 () (_ BitVec 64))
(declare-fun temp116_53 () (_ BitVec 64))
(declare-fun temp116_56 () (_ BitVec 64))
(declare-fun temp116_55 () (_ BitVec 64))
(declare-fun temp116_58 () (_ BitVec 64))
(declare-fun temp116_57 () (_ BitVec 64))
(declare-fun temp116_60 () (_ BitVec 64))
(declare-fun temp116_59 () (_ BitVec 64))
(declare-fun temp116_62 () (_ BitVec 64))
(declare-fun temp116_61 () (_ BitVec 64))
(declare-fun temp116_64 () (_ BitVec 64))
(declare-fun temp116_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp116_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp116_67 () (_ BitVec 64))
(declare-fun temp116_66 () (_ BitVec 64))
(declare-fun temp116_69 () (_ BitVec 64))
(declare-fun temp116_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp116_71 () (_ BitVec 64))
(declare-fun temp116_70 () (_ BitVec 64))
(declare-fun temp116_73 () (_ BitVec 64))
(declare-fun temp116_72 () (_ BitVec 64))
(declare-fun temp116_75 () (_ BitVec 64))
(declare-fun temp116_74 () (_ BitVec 64))
(declare-fun temp116_77 () (_ BitVec 64))
(declare-fun temp116_76 () (_ BitVec 64))
(declare-fun temp116_79 () (_ BitVec 64))
(declare-fun temp116_78 () (_ BitVec 64))
(declare-fun temp116_81 () (_ BitVec 64))
(declare-fun temp116_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp116_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp116_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp116_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp116_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp116_86 () (_ BitVec 64))
(declare-fun var7867422 () (_ BitVec 64))
(declare-fun temp116_87 () (_ BitVec 64))
(declare-fun temp116_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun temp116_89 () (_ BitVec 64))
(declare-fun var9440410 () (_ BitVec 64))
(assert (= temp116_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp116_1)))
(assert (= temp116_2 #x0000000000000000))
(assert (= var1050945 temp116_2))
(assert (= temp116_3 #xffffffffffffffff))
(assert (= var67312 temp116_3))
(assert (= temp116_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp116_4)))
(assert (= temp116_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp116_5)))
(assert (= temp116_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp116_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp116_7 #x0000000000000000))
(assert (= var82187 temp116_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp116_8 #x0000000000000000))
(assert (= var82356 temp116_8))
(assert (= temp116_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp116_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp116_10 #x0000000000000001))
(assert (= var82528 temp116_10))
(assert (= temp116_11 #x0000000000000000))
(assert (= var65913 temp116_11))
(assert (= temp116_12 #x0000000000000000))
(assert (= temp116_13 temp116_12))
(assert (= temp116_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp116_13)))
(assert (= temp116_15 #x0000000000000001))
(assert (= temp116_16 temp116_15))
(assert (= temp116_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp116_16)))
(assert (= temp116_18 #x0000000000000002))
(assert (= temp116_19 temp116_18))
(assert (= temp116_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp116_19)))
(assert (= temp116_21 #x0000000000000003))
(assert (= temp116_22 temp116_21))
(assert (= temp116_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp116_22)))
(assert (= temp116_24 #x0000000000000004))
(assert (= temp116_25 temp116_24))
(assert (= temp116_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp116_25)))
(assert (= temp116_27 #x0000000000000005))
(assert (= temp116_28 temp116_27))
(assert (= temp116_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp116_28)))
(assert (= temp116_31 #x0000000000000000))
(assert (= temp116_30
   (ite (bvslt var65913 temp116_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp116_32 temp116_30))
(assert (= temp116_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp116_32)))
(assert (= var82530 temp116_33))
(assert (bvslt temp116_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp116_34 #x0000000000000001))
(assert (= var82531 temp116_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp116_35 #x0000000000000001))
(assert (= var82728 temp116_35))
(assert (= var1914351 var65913))
(assert (= temp116_36 #x0000000000000001))
(assert (= var2115797 temp116_36))
(assert (= temp116_37 #x0000000000000002))
(assert (= var2115798 temp116_37))
(assert (= temp116_39 #x0000000000000000))
(assert (= temp116_38 temp116_39))
(assert (= temp116_40 #x0000000000000000))
(assert (= var2628020 temp116_40))
(assert (= temp116_41 #x0000000000000001))
(assert (= temp116_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp116_41 temp116_42)))
(assert (= temp116_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp116_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp116_44 #x0000000000000000))
(assert (= var3740377 temp116_44))
(assert (= temp116_45 #x0000000000000002))
(assert (= var69143 temp116_45))
(assert (= temp116_47 #x0000000000000001))
(assert (= temp116_46 temp116_47))
(assert (= temp116_49 #x0000000000000001))
(assert (= temp116_48 temp116_49))
(assert (= temp116_51 #x0000000000000003))
(assert (= temp116_50 temp116_51))
(assert (= temp116_52 #x0000000000000001))
(assert (= var4212949 temp116_52))
(assert (= var4212950 var69143))
(assert (= temp116_54 #x0000000000000001))
(assert (= temp116_53 temp116_54))
(assert (= temp116_56 #x0000000000000001))
(assert (= temp116_55 temp116_56))
(assert (= temp116_58 #x0000000000000001))
(assert (= temp116_57 temp116_58))
(assert (= temp116_60 #x0000000000000001))
(assert (= temp116_59 temp116_60))
(assert (= temp116_62 #x0000000000000000))
(assert (= temp116_61 temp116_62))
(assert (= temp116_64 #x0000000000000001))
(assert (= temp116_63 temp116_64))
(assert (= var4868391 var69143))
(assert (= temp116_65 #x0000000000000002))
(assert (= var4983962 temp116_65))
(assert (= temp116_67 #x0000000000000001))
(assert (= temp116_66 temp116_67))
(assert (= temp116_69 #x0000000000000001))
(assert (= temp116_68 temp116_69))
(assert (= var5453295 var65913))
(assert (= temp116_71 #x0000000000000001))
(assert (= temp116_70 temp116_71))
(assert (= temp116_73 #x0000000000000001))
(assert (= temp116_72 temp116_73))
(assert (= temp116_75 #x0000000000000001))
(assert (= temp116_74 temp116_75))
(assert (= temp116_77 #x0000000000000001))
(assert (= temp116_76 temp116_77))
(assert (= temp116_79 #x0000000000000000))
(assert (= temp116_78 temp116_79))
(assert (= temp116_81 #x0000000000000001))
(assert (= temp116_80 temp116_81))
(assert (= var6375719 var69143))
(assert (= temp116_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp116_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp116_83 #x0000000000000001))
(assert (= var83534 temp116_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp116_84 #x0000000000000001))
(assert (= var6818808 temp116_84))
(assert (= var7867380 var69143))
(assert (= temp116_85 #x0000000000000001))
(assert (= var7867384 temp116_85))
(assert (= temp116_86 #x0000000000000000))
(assert (= var7867422 temp116_86))
(assert (= temp116_87 #x0000000000000000))
(assert (= var7867422 temp116_87))
(assert (= temp116_88 #x0000000000000001))
(assert (= var9128231 temp116_88))
(assert (= temp116_89 #x0000000000000000))
(assert (= var9440410 temp116_89))
(model-add temp116_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp116_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp116_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp116_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp116_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp116_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp116_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



