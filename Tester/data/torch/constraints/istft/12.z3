(declare-fun temp16_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp16_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp16_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp16_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp16_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp16_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp16_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp16_8 () (_ BitVec 64))
(declare-fun temp16_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp16_10 () (_ BitVec 64))
(declare-fun temp16_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp16_12 () (_ BitVec 64))
(declare-fun temp16_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_14 () (_ BitVec 64))
(declare-fun temp16_15 () (_ BitVec 64))
(declare-fun temp16_16 () (_ BitVec 64))
(declare-fun temp16_17 () (_ BitVec 64))
(declare-fun temp16_18 () (_ BitVec 64))
(declare-fun temp16_19 () (_ BitVec 64))
(declare-fun temp16_20 () (_ BitVec 64))
(declare-fun temp16_21 () (_ BitVec 64))
(declare-fun temp16_22 () (_ BitVec 64))
(declare-fun temp16_23 () (_ BitVec 64))
(declare-fun temp16_24 () (_ BitVec 64))
(declare-fun temp16_25 () (_ BitVec 64))
(declare-fun temp16_26 () (_ BitVec 64))
(declare-fun temp16_27 () (_ BitVec 64))
(declare-fun temp16_28 () (_ BitVec 64))
(declare-fun temp16_29 () (_ BitVec 64))
(declare-fun temp16_31 () (_ BitVec 64))
(declare-fun temp16_30 () (_ BitVec 64))
(declare-fun temp16_32 () (_ BitVec 64))
(declare-fun temp16_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp16_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp16_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp16_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp16_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp16_39 () (_ BitVec 64))
(declare-fun temp16_38 () (_ BitVec 64))
(declare-fun temp16_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp16_41 () (_ BitVec 64))
(declare-fun temp16_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp16_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp16_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp16_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp16_47 () (_ BitVec 64))
(declare-fun temp16_46 () (_ BitVec 64))
(declare-fun temp16_49 () (_ BitVec 64))
(declare-fun temp16_48 () (_ BitVec 64))
(declare-fun temp16_51 () (_ BitVec 64))
(declare-fun temp16_50 () (_ BitVec 64))
(declare-fun temp16_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp16_54 () (_ BitVec 64))
(declare-fun temp16_53 () (_ BitVec 64))
(declare-fun temp16_56 () (_ BitVec 64))
(declare-fun temp16_55 () (_ BitVec 64))
(declare-fun temp16_58 () (_ BitVec 64))
(declare-fun temp16_57 () (_ BitVec 64))
(declare-fun temp16_60 () (_ BitVec 64))
(declare-fun temp16_59 () (_ BitVec 64))
(declare-fun temp16_62 () (_ BitVec 64))
(declare-fun temp16_61 () (_ BitVec 64))
(declare-fun temp16_64 () (_ BitVec 64))
(declare-fun temp16_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp16_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp16_67 () (_ BitVec 64))
(declare-fun temp16_66 () (_ BitVec 64))
(declare-fun temp16_69 () (_ BitVec 64))
(declare-fun temp16_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp16_71 () (_ BitVec 64))
(declare-fun temp16_70 () (_ BitVec 64))
(declare-fun temp16_73 () (_ BitVec 64))
(declare-fun temp16_72 () (_ BitVec 64))
(declare-fun temp16_75 () (_ BitVec 64))
(declare-fun temp16_74 () (_ BitVec 64))
(declare-fun temp16_77 () (_ BitVec 64))
(declare-fun temp16_76 () (_ BitVec 64))
(declare-fun temp16_79 () (_ BitVec 64))
(declare-fun temp16_78 () (_ BitVec 64))
(declare-fun temp16_81 () (_ BitVec 64))
(declare-fun temp16_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp16_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp16_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp16_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp16_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp16_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun temp16_87 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp16_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp16_1)))
(assert (= temp16_2 #x0000000000000000))
(assert (= var1050945 temp16_2))
(assert (= temp16_3 #xffffffffffffffff))
(assert (= var67312 temp16_3))
(assert (= temp16_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp16_4)))
(assert (= temp16_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp16_5)))
(assert (= temp16_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp16_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp16_7 #x0000000000000000))
(assert (= var82187 temp16_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_8 #x0000000000000000))
(assert (= var82356 temp16_8))
(assert (= temp16_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp16_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_10 #x0000000000000001))
(assert (= var82528 temp16_10))
(assert (= temp16_11 #x0000000000000000))
(assert (= var65913 temp16_11))
(assert (= temp16_12 #x0000000000000000))
(assert (= temp16_13 temp16_12))
(assert (= temp16_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp16_13)))
(assert (= temp16_15 #x0000000000000001))
(assert (= temp16_16 temp16_15))
(assert (= temp16_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp16_16)))
(assert (= temp16_18 #x0000000000000002))
(assert (= temp16_19 temp16_18))
(assert (= temp16_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp16_19)))
(assert (= temp16_21 #x0000000000000003))
(assert (= temp16_22 temp16_21))
(assert (= temp16_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp16_22)))
(assert (= temp16_24 #x0000000000000004))
(assert (= temp16_25 temp16_24))
(assert (= temp16_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp16_25)))
(assert (= temp16_27 #x0000000000000005))
(assert (= temp16_28 temp16_27))
(assert (= temp16_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp16_28)))
(assert (= temp16_31 #x0000000000000000))
(assert (= temp16_30
   (ite (bvslt var65913 temp16_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp16_32 temp16_30))
(assert (= temp16_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp16_32)))
(assert (= var82530 temp16_33))
(assert (bvslt temp16_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_34 #x0000000000000001))
(assert (= var82531 temp16_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_35 #x0000000000000001))
(assert (= var82728 temp16_35))
(assert (= var1914351 var65913))
(assert (= temp16_36 #x0000000000000001))
(assert (= var2115797 temp16_36))
(assert (= temp16_37 #x0000000000000002))
(assert (= var2115798 temp16_37))
(assert (= temp16_39 #x0000000000000000))
(assert (= temp16_38 temp16_39))
(assert (= temp16_40 #x0000000000000000))
(assert (= var2628020 temp16_40))
(assert (= temp16_41 #x0000000000000001))
(assert (= temp16_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp16_41 temp16_42)))
(assert (= temp16_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp16_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp16_44 #x0000000000000000))
(assert (= var3740377 temp16_44))
(assert (= temp16_45 #x0000000000000002))
(assert (= var69143 temp16_45))
(assert (= temp16_47 #x0000000000000001))
(assert (= temp16_46 temp16_47))
(assert (= temp16_49 #x0000000000000001))
(assert (= temp16_48 temp16_49))
(assert (= temp16_51 #x0000000000000003))
(assert (= temp16_50 temp16_51))
(assert (= temp16_52 #x0000000000000001))
(assert (= var4212949 temp16_52))
(assert (= var4212950 var69143))
(assert (= temp16_54 #x0000000000000001))
(assert (= temp16_53 temp16_54))
(assert (= temp16_56 #x0000000000000001))
(assert (= temp16_55 temp16_56))
(assert (= temp16_58 #x0000000000000001))
(assert (= temp16_57 temp16_58))
(assert (= temp16_60 #x0000000000000001))
(assert (= temp16_59 temp16_60))
(assert (= temp16_62 #x0000000000000000))
(assert (= temp16_61 temp16_62))
(assert (= temp16_64 #x0000000000000001))
(assert (= temp16_63 temp16_64))
(assert (= var4868391 var69143))
(assert (= temp16_65 #x0000000000000002))
(assert (= var4983962 temp16_65))
(assert (= temp16_67 #x0000000000000001))
(assert (= temp16_66 temp16_67))
(assert (= temp16_69 #x0000000000000001))
(assert (= temp16_68 temp16_69))
(assert (= var5453295 var65913))
(assert (= temp16_71 #x0000000000000001))
(assert (= temp16_70 temp16_71))
(assert (= temp16_73 #x0000000000000001))
(assert (= temp16_72 temp16_73))
(assert (= temp16_75 #x0000000000000001))
(assert (= temp16_74 temp16_75))
(assert (= temp16_77 #x0000000000000001))
(assert (= temp16_76 temp16_77))
(assert (= temp16_79 #x0000000000000000))
(assert (= temp16_78 temp16_79))
(assert (= temp16_81 #x0000000000000001))
(assert (= temp16_80 temp16_81))
(assert (= var6375719 var69143))
(assert (= temp16_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp16_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_83 #x0000000000000001))
(assert (= var83534 temp16_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp16_84 #x0000000000000001))
(assert (= var6818808 temp16_84))
(assert (= var7867380 var69143))
(assert (= temp16_85 #x0000000000000001))
(assert (= var7867384 temp16_85))
(assert (= temp16_86 #x0000000000000001))
(assert (= var9259303 temp16_86))
(assert (= temp16_87 #x0000000000000000))
(assert (= var9571482 temp16_87))
(model-add temp16_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp16_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp16_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp16_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp16_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp16_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp16_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





