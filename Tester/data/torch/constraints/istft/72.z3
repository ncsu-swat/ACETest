(declare-fun temp161_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp161_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp161_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp161_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp161_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp161_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp161_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp161_8 () (_ BitVec 64))
(declare-fun temp161_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp161_10 () (_ BitVec 64))
(declare-fun temp161_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp161_12 () (_ BitVec 64))
(declare-fun temp161_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp161_14 () (_ BitVec 64))
(declare-fun temp161_15 () (_ BitVec 64))
(declare-fun temp161_16 () (_ BitVec 64))
(declare-fun temp161_17 () (_ BitVec 64))
(declare-fun temp161_18 () (_ BitVec 64))
(declare-fun temp161_19 () (_ BitVec 64))
(declare-fun temp161_20 () (_ BitVec 64))
(declare-fun temp161_21 () (_ BitVec 64))
(declare-fun temp161_22 () (_ BitVec 64))
(declare-fun temp161_23 () (_ BitVec 64))
(declare-fun temp161_24 () (_ BitVec 64))
(declare-fun temp161_25 () (_ BitVec 64))
(declare-fun temp161_26 () (_ BitVec 64))
(declare-fun temp161_27 () (_ BitVec 64))
(declare-fun temp161_28 () (_ BitVec 64))
(declare-fun temp161_29 () (_ BitVec 64))
(declare-fun temp161_31 () (_ BitVec 64))
(declare-fun temp161_30 () (_ BitVec 64))
(declare-fun temp161_32 () (_ BitVec 64))
(declare-fun temp161_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp161_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp161_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp161_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp161_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp161_39 () (_ BitVec 64))
(declare-fun temp161_38 () (_ BitVec 64))
(declare-fun temp161_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp161_41 () (_ BitVec 64))
(declare-fun temp161_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp161_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp161_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp161_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp161_47 () (_ BitVec 64))
(declare-fun temp161_46 () (_ BitVec 64))
(declare-fun temp161_49 () (_ BitVec 64))
(declare-fun temp161_48 () (_ BitVec 64))
(declare-fun temp161_51 () (_ BitVec 64))
(declare-fun temp161_50 () (_ BitVec 64))
(declare-fun temp161_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp161_54 () (_ BitVec 64))
(declare-fun temp161_53 () (_ BitVec 64))
(declare-fun temp161_56 () (_ BitVec 64))
(declare-fun temp161_55 () (_ BitVec 64))
(declare-fun temp161_58 () (_ BitVec 64))
(declare-fun temp161_57 () (_ BitVec 64))
(declare-fun temp161_60 () (_ BitVec 64))
(declare-fun temp161_59 () (_ BitVec 64))
(declare-fun temp161_62 () (_ BitVec 64))
(declare-fun temp161_61 () (_ BitVec 64))
(declare-fun temp161_64 () (_ BitVec 64))
(declare-fun temp161_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp161_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp161_67 () (_ BitVec 64))
(declare-fun temp161_66 () (_ BitVec 64))
(declare-fun temp161_69 () (_ BitVec 64))
(declare-fun temp161_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp161_71 () (_ BitVec 64))
(declare-fun temp161_70 () (_ BitVec 64))
(declare-fun temp161_73 () (_ BitVec 64))
(declare-fun temp161_72 () (_ BitVec 64))
(declare-fun temp161_75 () (_ BitVec 64))
(declare-fun temp161_74 () (_ BitVec 64))
(declare-fun temp161_77 () (_ BitVec 64))
(declare-fun temp161_76 () (_ BitVec 64))
(declare-fun temp161_79 () (_ BitVec 64))
(declare-fun temp161_78 () (_ BitVec 64))
(declare-fun temp161_81 () (_ BitVec 64))
(declare-fun temp161_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp161_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp161_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp161_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp161_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp161_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun var9521447 () (_ BitVec 64))
(declare-fun temp161_87 () (_ BitVec 64))
(declare-fun var9768090 () (_ BitVec 64))
(assert (= temp161_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp161_1)))
(assert (= temp161_2 #x0000000000000000))
(assert (= var1050945 temp161_2))
(assert (= temp161_3 #xffffffffffffffff))
(assert (= var67312 temp161_3))
(assert (= temp161_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp161_4)))
(assert (= temp161_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp161_5)))
(assert (= temp161_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp161_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp161_7 #x0000000000000000))
(assert (= var82187 temp161_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_8 #x0000000000000000))
(assert (= var82356 temp161_8))
(assert (= temp161_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp161_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_10 #x0000000000000001))
(assert (= var82528 temp161_10))
(assert (= temp161_11 #x0000000000000000))
(assert (= var65913 temp161_11))
(assert (= temp161_12 #x0000000000000000))
(assert (= temp161_13 temp161_12))
(assert (= temp161_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp161_13)))
(assert (= temp161_15 #x0000000000000001))
(assert (= temp161_16 temp161_15))
(assert (= temp161_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp161_16)))
(assert (= temp161_18 #x0000000000000002))
(assert (= temp161_19 temp161_18))
(assert (= temp161_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp161_19)))
(assert (= temp161_21 #x0000000000000003))
(assert (= temp161_22 temp161_21))
(assert (= temp161_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp161_22)))
(assert (= temp161_24 #x0000000000000004))
(assert (= temp161_25 temp161_24))
(assert (= temp161_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp161_25)))
(assert (= temp161_27 #x0000000000000005))
(assert (= temp161_28 temp161_27))
(assert (= temp161_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp161_28)))
(assert (= temp161_31 #x0000000000000000))
(assert (= temp161_30
   (ite (bvslt var65913 temp161_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp161_32 temp161_30))
(assert (= temp161_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp161_32)))
(assert (= var82530 temp161_33))
(assert (bvslt temp161_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp161_34 #x0000000000000001))
(assert (= var82531 temp161_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp161_35 #x0000000000000001))
(assert (= var82728 temp161_35))
(assert (= var1914351 var65913))
(assert (= temp161_36 #x0000000000000001))
(assert (= var2115797 temp161_36))
(assert (= temp161_37 #x0000000000000002))
(assert (= var2115798 temp161_37))
(assert (= temp161_39 #x0000000000000000))
(assert (= temp161_38 temp161_39))
(assert (= temp161_40 #x0000000000000000))
(assert (= var2628020 temp161_40))
(assert (= temp161_41 #x0000000000000001))
(assert (= temp161_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp161_41 temp161_42)))
(assert (= temp161_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp161_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp161_44 #x0000000000000000))
(assert (= var3740377 temp161_44))
(assert (= temp161_45 #x0000000000000002))
(assert (= var69143 temp161_45))
(assert (= temp161_47 #x0000000000000001))
(assert (= temp161_46 temp161_47))
(assert (= temp161_49 #x0000000000000001))
(assert (= temp161_48 temp161_49))
(assert (= temp161_51 #x0000000000000003))
(assert (= temp161_50 temp161_51))
(assert (= temp161_52 #x0000000000000001))
(assert (= var4212949 temp161_52))
(assert (= var4212950 var69143))
(assert (= temp161_54 #x0000000000000001))
(assert (= temp161_53 temp161_54))
(assert (= temp161_56 #x0000000000000001))
(assert (= temp161_55 temp161_56))
(assert (= temp161_58 #x0000000000000001))
(assert (= temp161_57 temp161_58))
(assert (= temp161_60 #x0000000000000001))
(assert (= temp161_59 temp161_60))
(assert (= temp161_62 #x0000000000000000))
(assert (= temp161_61 temp161_62))
(assert (= temp161_64 #x0000000000000001))
(assert (= temp161_63 temp161_64))
(assert (= var4868391 var69143))
(assert (= temp161_65 #x0000000000000002))
(assert (= var4983962 temp161_65))
(assert (= temp161_67 #x0000000000000001))
(assert (= temp161_66 temp161_67))
(assert (= temp161_69 #x0000000000000001))
(assert (= temp161_68 temp161_69))
(assert (= var5453295 var65913))
(assert (= temp161_71 #x0000000000000001))
(assert (= temp161_70 temp161_71))
(assert (= temp161_73 #x0000000000000001))
(assert (= temp161_72 temp161_73))
(assert (= temp161_75 #x0000000000000001))
(assert (= temp161_74 temp161_75))
(assert (= temp161_77 #x0000000000000001))
(assert (= temp161_76 temp161_77))
(assert (= temp161_79 #x0000000000000000))
(assert (= temp161_78 temp161_79))
(assert (= temp161_81 #x0000000000000001))
(assert (= temp161_80 temp161_81))
(assert (= var6375719 var69143))
(assert (= temp161_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp161_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp161_83 #x0000000000000001))
(assert (= var83534 temp161_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp161_84 #x0000000000000001))
(assert (= var6818808 temp161_84))
(assert (= var7801844 var69143))
(assert (= temp161_85 #x0000000000000001))
(assert (= var7801848 temp161_85))
(assert (= temp161_86 #x0000000000000001))
(assert (= var9259303 temp161_86))
(assert (= var9521447 var65913))
(assert (= temp161_87 #x0000000000000000))
(assert (= var9768090 temp161_87))
(model-add temp161_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp161_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp161_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp161_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp161_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp161_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp161_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



