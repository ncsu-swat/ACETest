(declare-fun temp558_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp558_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp558_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp558_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp558_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp558_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp558_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp558_8 () (_ BitVec 64))
(declare-fun temp558_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp558_10 () (_ BitVec 64))
(declare-fun temp558_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp558_12 () (_ BitVec 64))
(declare-fun temp558_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp558_14 () (_ BitVec 64))
(declare-fun temp558_15 () (_ BitVec 64))
(declare-fun temp558_16 () (_ BitVec 64))
(declare-fun temp558_17 () (_ BitVec 64))
(declare-fun temp558_18 () (_ BitVec 64))
(declare-fun temp558_19 () (_ BitVec 64))
(declare-fun temp558_20 () (_ BitVec 64))
(declare-fun temp558_21 () (_ BitVec 64))
(declare-fun temp558_22 () (_ BitVec 64))
(declare-fun temp558_23 () (_ BitVec 64))
(declare-fun temp558_24 () (_ BitVec 64))
(declare-fun temp558_25 () (_ BitVec 64))
(declare-fun temp558_26 () (_ BitVec 64))
(declare-fun temp558_27 () (_ BitVec 64))
(declare-fun temp558_28 () (_ BitVec 64))
(declare-fun temp558_29 () (_ BitVec 64))
(declare-fun temp558_31 () (_ BitVec 64))
(declare-fun temp558_30 () (_ BitVec 64))
(declare-fun temp558_32 () (_ BitVec 64))
(declare-fun temp558_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp558_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp558_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp558_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp558_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp558_39 () (_ BitVec 64))
(declare-fun temp558_38 () (_ BitVec 64))
(declare-fun temp558_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp558_41 () (_ BitVec 64))
(declare-fun temp558_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp558_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp558_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp558_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp558_47 () (_ BitVec 64))
(declare-fun temp558_46 () (_ BitVec 64))
(declare-fun temp558_49 () (_ BitVec 64))
(declare-fun temp558_48 () (_ BitVec 64))
(declare-fun temp558_51 () (_ BitVec 64))
(declare-fun temp558_50 () (_ BitVec 64))
(declare-fun temp558_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp558_54 () (_ BitVec 64))
(declare-fun temp558_53 () (_ BitVec 64))
(declare-fun temp558_56 () (_ BitVec 64))
(declare-fun temp558_55 () (_ BitVec 64))
(declare-fun temp558_58 () (_ BitVec 64))
(declare-fun temp558_57 () (_ BitVec 64))
(declare-fun temp558_60 () (_ BitVec 64))
(declare-fun temp558_59 () (_ BitVec 64))
(declare-fun temp558_62 () (_ BitVec 64))
(declare-fun temp558_61 () (_ BitVec 64))
(declare-fun temp558_64 () (_ BitVec 64))
(declare-fun temp558_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp558_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp558_67 () (_ BitVec 64))
(declare-fun temp558_66 () (_ BitVec 64))
(declare-fun temp558_69 () (_ BitVec 64))
(declare-fun temp558_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp558_71 () (_ BitVec 64))
(declare-fun temp558_70 () (_ BitVec 64))
(declare-fun temp558_73 () (_ BitVec 64))
(declare-fun temp558_72 () (_ BitVec 64))
(declare-fun temp558_75 () (_ BitVec 64))
(declare-fun temp558_74 () (_ BitVec 64))
(declare-fun temp558_77 () (_ BitVec 64))
(declare-fun temp558_76 () (_ BitVec 64))
(declare-fun temp558_79 () (_ BitVec 64))
(declare-fun temp558_78 () (_ BitVec 64))
(declare-fun temp558_81 () (_ BitVec 64))
(declare-fun temp558_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp558_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp558_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp558_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp558_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp558_86 () (_ BitVec 64))
(declare-fun var7736362 () (_ BitVec 64))
(declare-fun temp558_87 () (_ BitVec 64))
(declare-fun temp558_88 () (_ BitVec 64))
(declare-fun var8997159 () (_ BitVec 64))
(declare-fun temp558_89 () (_ BitVec 64))
(declare-fun var9309338 () (_ BitVec 64))
(assert (= temp558_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp558_1)))
(assert (= temp558_2 #x0000000000000000))
(assert (= var1050945 temp558_2))
(assert (= temp558_3 #xffffffffffffffff))
(assert (= var67312 temp558_3))
(assert (= temp558_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp558_4)))
(assert (= temp558_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp558_5)))
(assert (= temp558_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp558_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp558_7 #x0000000000000000))
(assert (= var82187 temp558_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp558_8 #x0000000000000000))
(assert (= var82356 temp558_8))
(assert (= temp558_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp558_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp558_10 #x0000000000000001))
(assert (= var82528 temp558_10))
(assert (= temp558_11 #x0000000000000000))
(assert (= var65913 temp558_11))
(assert (= temp558_12 #x0000000000000000))
(assert (= temp558_13 temp558_12))
(assert (= temp558_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp558_13)))
(assert (= temp558_15 #x0000000000000001))
(assert (= temp558_16 temp558_15))
(assert (= temp558_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp558_16)))
(assert (= temp558_18 #x0000000000000002))
(assert (= temp558_19 temp558_18))
(assert (= temp558_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp558_19)))
(assert (= temp558_21 #x0000000000000003))
(assert (= temp558_22 temp558_21))
(assert (= temp558_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp558_22)))
(assert (= temp558_24 #x0000000000000004))
(assert (= temp558_25 temp558_24))
(assert (= temp558_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp558_25)))
(assert (= temp558_27 #x0000000000000005))
(assert (= temp558_28 temp558_27))
(assert (= temp558_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp558_28)))
(assert (= temp558_31 #x0000000000000000))
(assert (= temp558_30
   (ite (bvslt var65913 temp558_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp558_32 temp558_30))
(assert (= temp558_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp558_32)))
(assert (= var82530 temp558_33))
(assert (bvslt temp558_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp558_34 #x0000000000000001))
(assert (= var82531 temp558_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp558_35 #x0000000000000001))
(assert (= var82728 temp558_35))
(assert (= var1914351 var65913))
(assert (= temp558_36 #x0000000000000001))
(assert (= var2115797 temp558_36))
(assert (= temp558_37 #x0000000000000002))
(assert (= var2115798 temp558_37))
(assert (= temp558_39 #x0000000000000000))
(assert (= temp558_38 temp558_39))
(assert (= temp558_40 #x0000000000000000))
(assert (= var2628020 temp558_40))
(assert (= temp558_41 #x0000000000000001))
(assert (= temp558_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp558_41 temp558_42)))
(assert (= temp558_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp558_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp558_44 #x0000000000000000))
(assert (= var3740377 temp558_44))
(assert (= temp558_45 #x0000000000000002))
(assert (= var69143 temp558_45))
(assert (= temp558_47 #x0000000000000001))
(assert (= temp558_46 temp558_47))
(assert (= temp558_49 #x0000000000000001))
(assert (= temp558_48 temp558_49))
(assert (= temp558_51 #x0000000000000003))
(assert (= temp558_50 temp558_51))
(assert (= temp558_52 #x0000000000000001))
(assert (= var4212949 temp558_52))
(assert (= var4212950 var69143))
(assert (= temp558_54 #x0000000000000001))
(assert (= temp558_53 temp558_54))
(assert (= temp558_56 #x0000000000000001))
(assert (= temp558_55 temp558_56))
(assert (= temp558_58 #x0000000000000001))
(assert (= temp558_57 temp558_58))
(assert (= temp558_60 #x0000000000000001))
(assert (= temp558_59 temp558_60))
(assert (= temp558_62 #x0000000000000000))
(assert (= temp558_61 temp558_62))
(assert (= temp558_64 #x0000000000000001))
(assert (= temp558_63 temp558_64))
(assert (= var4868391 var69143))
(assert (= temp558_65 #x0000000000000002))
(assert (= var4983962 temp558_65))
(assert (= temp558_67 #x0000000000000001))
(assert (= temp558_66 temp558_67))
(assert (= temp558_69 #x0000000000000001))
(assert (= temp558_68 temp558_69))
(assert (= var5453295 var65913))
(assert (= temp558_71 #x0000000000000001))
(assert (= temp558_70 temp558_71))
(assert (= temp558_73 #x0000000000000001))
(assert (= temp558_72 temp558_73))
(assert (= temp558_75 #x0000000000000001))
(assert (= temp558_74 temp558_75))
(assert (= temp558_77 #x0000000000000001))
(assert (= temp558_76 temp558_77))
(assert (= temp558_79 #x0000000000000000))
(assert (= temp558_78 temp558_79))
(assert (= temp558_81 #x0000000000000001))
(assert (= temp558_80 temp558_81))
(assert (= var6375719 var69143))
(assert (= temp558_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp558_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp558_83 #x0000000000000001))
(assert (= var83534 temp558_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp558_84 #x0000000000000001))
(assert (= var6818808 temp558_84))
(assert (= var7736308 var69143))
(assert (= temp558_85 #x0000000000000001))
(assert (= var7736312 temp558_85))
(assert (= temp558_86 #x0000000000000000))
(assert (= var7736362 temp558_86))
(assert (= temp558_87 #x0000000000000000))
(assert (= var7736362 temp558_87))
(assert (= temp558_88 #x0000000000000001))
(assert (= var8997159 temp558_88))
(assert (= temp558_89 #x0000000000000000))
(assert (= var9309338 temp558_89))
(model-add temp558_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp558_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp558_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp558_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp558_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp558_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp558_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





