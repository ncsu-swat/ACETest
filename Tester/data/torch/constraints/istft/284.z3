(declare-fun temp636_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp636_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp636_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp636_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp636_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp636_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp636_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp636_8 () (_ BitVec 64))
(declare-fun temp636_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp636_10 () (_ BitVec 64))
(declare-fun temp636_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp636_12 () (_ BitVec 64))
(declare-fun temp636_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_14 () (_ BitVec 64))
(declare-fun temp636_15 () (_ BitVec 64))
(declare-fun temp636_16 () (_ BitVec 64))
(declare-fun temp636_17 () (_ BitVec 64))
(declare-fun temp636_18 () (_ BitVec 64))
(declare-fun temp636_19 () (_ BitVec 64))
(declare-fun temp636_20 () (_ BitVec 64))
(declare-fun temp636_21 () (_ BitVec 64))
(declare-fun temp636_22 () (_ BitVec 64))
(declare-fun temp636_23 () (_ BitVec 64))
(declare-fun temp636_24 () (_ BitVec 64))
(declare-fun temp636_25 () (_ BitVec 64))
(declare-fun temp636_26 () (_ BitVec 64))
(declare-fun temp636_27 () (_ BitVec 64))
(declare-fun temp636_28 () (_ BitVec 64))
(declare-fun temp636_29 () (_ BitVec 64))
(declare-fun temp636_31 () (_ BitVec 64))
(declare-fun temp636_30 () (_ BitVec 64))
(declare-fun temp636_32 () (_ BitVec 64))
(declare-fun temp636_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp636_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp636_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp636_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp636_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp636_39 () (_ BitVec 64))
(declare-fun temp636_38 () (_ BitVec 64))
(declare-fun temp636_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp636_41 () (_ BitVec 64))
(declare-fun temp636_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp636_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp636_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp636_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp636_47 () (_ BitVec 64))
(declare-fun temp636_46 () (_ BitVec 64))
(declare-fun temp636_49 () (_ BitVec 64))
(declare-fun temp636_48 () (_ BitVec 64))
(declare-fun temp636_51 () (_ BitVec 64))
(declare-fun temp636_50 () (_ BitVec 64))
(declare-fun temp636_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp636_54 () (_ BitVec 64))
(declare-fun temp636_53 () (_ BitVec 64))
(declare-fun temp636_56 () (_ BitVec 64))
(declare-fun temp636_55 () (_ BitVec 64))
(declare-fun temp636_58 () (_ BitVec 64))
(declare-fun temp636_57 () (_ BitVec 64))
(declare-fun temp636_60 () (_ BitVec 64))
(declare-fun temp636_59 () (_ BitVec 64))
(declare-fun temp636_62 () (_ BitVec 64))
(declare-fun temp636_61 () (_ BitVec 64))
(declare-fun temp636_64 () (_ BitVec 64))
(declare-fun temp636_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp636_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp636_67 () (_ BitVec 64))
(declare-fun temp636_66 () (_ BitVec 64))
(declare-fun temp636_69 () (_ BitVec 64))
(declare-fun temp636_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp636_71 () (_ BitVec 64))
(declare-fun temp636_70 () (_ BitVec 64))
(declare-fun temp636_73 () (_ BitVec 64))
(declare-fun temp636_72 () (_ BitVec 64))
(declare-fun temp636_75 () (_ BitVec 64))
(declare-fun temp636_74 () (_ BitVec 64))
(declare-fun temp636_77 () (_ BitVec 64))
(declare-fun temp636_76 () (_ BitVec 64))
(declare-fun temp636_79 () (_ BitVec 64))
(declare-fun temp636_78 () (_ BitVec 64))
(declare-fun temp636_81 () (_ BitVec 64))
(declare-fun temp636_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp636_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp636_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp636_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp636_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp636_86 () (_ BitVec 64))
(declare-fun var7736350 () (_ BitVec 64))
(declare-fun temp636_87 () (_ BitVec 64))
(declare-fun var7736362 () (_ BitVec 64))
(declare-fun temp636_88 () (_ BitVec 64))
(declare-fun temp636_89 () (_ BitVec 64))
(declare-fun temp636_90 () (_ BitVec 64))
(declare-fun var8931623 () (_ BitVec 64))
(declare-fun temp636_91 () (_ BitVec 64))
(declare-fun var9243802 () (_ BitVec 64))
(assert (= temp636_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp636_1)))
(assert (= temp636_2 #x0000000000000000))
(assert (= var1050945 temp636_2))
(assert (= temp636_3 #xffffffffffffffff))
(assert (= var67312 temp636_3))
(assert (= temp636_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp636_4)))
(assert (= temp636_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp636_5)))
(assert (= temp636_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp636_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp636_7 #x0000000000000000))
(assert (= var82187 temp636_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_8 #x0000000000000000))
(assert (= var82356 temp636_8))
(assert (= temp636_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp636_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_10 #x0000000000000001))
(assert (= var82528 temp636_10))
(assert (= temp636_11 #x0000000000000000))
(assert (= var65913 temp636_11))
(assert (= temp636_12 #x0000000000000000))
(assert (= temp636_13 temp636_12))
(assert (= temp636_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp636_13)))
(assert (= temp636_15 #x0000000000000001))
(assert (= temp636_16 temp636_15))
(assert (= temp636_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp636_16)))
(assert (= temp636_18 #x0000000000000002))
(assert (= temp636_19 temp636_18))
(assert (= temp636_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp636_19)))
(assert (= temp636_21 #x0000000000000003))
(assert (= temp636_22 temp636_21))
(assert (= temp636_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp636_22)))
(assert (= temp636_24 #x0000000000000004))
(assert (= temp636_25 temp636_24))
(assert (= temp636_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp636_25)))
(assert (= temp636_27 #x0000000000000005))
(assert (= temp636_28 temp636_27))
(assert (= temp636_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp636_28)))
(assert (= temp636_31 #x0000000000000000))
(assert (= temp636_30
   (ite (bvslt var65913 temp636_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp636_32 temp636_30))
(assert (= temp636_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp636_32)))
(assert (= var82530 temp636_33))
(assert (bvslt temp636_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp636_34 #x0000000000000001))
(assert (= var82531 temp636_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp636_35 #x0000000000000001))
(assert (= var82728 temp636_35))
(assert (= var1914351 var65913))
(assert (= temp636_36 #x0000000000000001))
(assert (= var2115797 temp636_36))
(assert (= temp636_37 #x0000000000000002))
(assert (= var2115798 temp636_37))
(assert (= temp636_39 #x0000000000000000))
(assert (= temp636_38 temp636_39))
(assert (= temp636_40 #x0000000000000000))
(assert (= var2628020 temp636_40))
(assert (= temp636_41 #x0000000000000001))
(assert (= temp636_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp636_41 temp636_42)))
(assert (= temp636_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp636_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp636_44 #x0000000000000000))
(assert (= var3740377 temp636_44))
(assert (= temp636_45 #x0000000000000002))
(assert (= var69143 temp636_45))
(assert (= temp636_47 #x0000000000000001))
(assert (= temp636_46 temp636_47))
(assert (= temp636_49 #x0000000000000001))
(assert (= temp636_48 temp636_49))
(assert (= temp636_51 #x0000000000000003))
(assert (= temp636_50 temp636_51))
(assert (= temp636_52 #x0000000000000001))
(assert (= var4212949 temp636_52))
(assert (= var4212950 var69143))
(assert (= temp636_54 #x0000000000000001))
(assert (= temp636_53 temp636_54))
(assert (= temp636_56 #x0000000000000001))
(assert (= temp636_55 temp636_56))
(assert (= temp636_58 #x0000000000000001))
(assert (= temp636_57 temp636_58))
(assert (= temp636_60 #x0000000000000001))
(assert (= temp636_59 temp636_60))
(assert (= temp636_62 #x0000000000000000))
(assert (= temp636_61 temp636_62))
(assert (= temp636_64 #x0000000000000001))
(assert (= temp636_63 temp636_64))
(assert (= var4868391 var69143))
(assert (= temp636_65 #x0000000000000002))
(assert (= var4983962 temp636_65))
(assert (= temp636_67 #x0000000000000001))
(assert (= temp636_66 temp636_67))
(assert (= temp636_69 #x0000000000000001))
(assert (= temp636_68 temp636_69))
(assert (= var5453295 var65913))
(assert (= temp636_71 #x0000000000000001))
(assert (= temp636_70 temp636_71))
(assert (= temp636_73 #x0000000000000001))
(assert (= temp636_72 temp636_73))
(assert (= temp636_75 #x0000000000000001))
(assert (= temp636_74 temp636_75))
(assert (= temp636_77 #x0000000000000001))
(assert (= temp636_76 temp636_77))
(assert (= temp636_79 #x0000000000000000))
(assert (= temp636_78 temp636_79))
(assert (= temp636_81 #x0000000000000001))
(assert (= temp636_80 temp636_81))
(assert (= var6375719 var69143))
(assert (= temp636_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp636_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_83 #x0000000000000001))
(assert (= var83534 temp636_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp636_84 #x0000000000000001))
(assert (= var6818808 temp636_84))
(assert (= var7736308 var69143))
(assert (= temp636_85 #x0000000000000001))
(assert (= var7736312 temp636_85))
(assert (= temp636_86 #x0000000000000000))
(assert (= var7736350 temp636_86))
(assert (= temp636_87 #x0000000000000000))
(assert (= var7736362 temp636_87))
(assert (= temp636_88 #x0000000000000000))
(assert (= var7736362 temp636_88))
(assert (= temp636_89 #x0000000000000000))
(assert (= var7736350 temp636_89))
(assert (= temp636_90 #x0000000000000001))
(assert (= var8931623 temp636_90))
(assert (= temp636_91 #x0000000000000000))
(assert (= var9243802 temp636_91))
(model-add temp636_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp636_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp636_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp636_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp636_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp636_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp636_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




