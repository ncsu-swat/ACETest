(declare-fun temp271_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp271_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp271_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp271_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp271_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp271_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp271_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp271_8 () (_ BitVec 64))
(declare-fun temp271_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp271_10 () (_ BitVec 64))
(declare-fun temp271_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp271_12 () (_ BitVec 64))
(declare-fun temp271_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp271_14 () (_ BitVec 64))
(declare-fun temp271_15 () (_ BitVec 64))
(declare-fun temp271_16 () (_ BitVec 64))
(declare-fun temp271_17 () (_ BitVec 64))
(declare-fun temp271_18 () (_ BitVec 64))
(declare-fun temp271_19 () (_ BitVec 64))
(declare-fun temp271_20 () (_ BitVec 64))
(declare-fun temp271_21 () (_ BitVec 64))
(declare-fun temp271_22 () (_ BitVec 64))
(declare-fun temp271_23 () (_ BitVec 64))
(declare-fun temp271_24 () (_ BitVec 64))
(declare-fun temp271_25 () (_ BitVec 64))
(declare-fun temp271_26 () (_ BitVec 64))
(declare-fun temp271_27 () (_ BitVec 64))
(declare-fun temp271_28 () (_ BitVec 64))
(declare-fun temp271_29 () (_ BitVec 64))
(declare-fun temp271_31 () (_ BitVec 64))
(declare-fun temp271_30 () (_ BitVec 64))
(declare-fun temp271_32 () (_ BitVec 64))
(declare-fun temp271_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp271_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp271_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp271_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp271_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp271_39 () (_ BitVec 64))
(declare-fun temp271_38 () (_ BitVec 64))
(declare-fun temp271_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp271_41 () (_ BitVec 64))
(declare-fun temp271_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp271_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp271_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp271_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp271_47 () (_ BitVec 64))
(declare-fun temp271_46 () (_ BitVec 64))
(declare-fun temp271_49 () (_ BitVec 64))
(declare-fun temp271_48 () (_ BitVec 64))
(declare-fun temp271_51 () (_ BitVec 64))
(declare-fun temp271_50 () (_ BitVec 64))
(declare-fun temp271_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp271_54 () (_ BitVec 64))
(declare-fun temp271_53 () (_ BitVec 64))
(declare-fun temp271_56 () (_ BitVec 64))
(declare-fun temp271_55 () (_ BitVec 64))
(declare-fun temp271_58 () (_ BitVec 64))
(declare-fun temp271_57 () (_ BitVec 64))
(declare-fun temp271_60 () (_ BitVec 64))
(declare-fun temp271_59 () (_ BitVec 64))
(declare-fun temp271_62 () (_ BitVec 64))
(declare-fun temp271_61 () (_ BitVec 64))
(declare-fun temp271_64 () (_ BitVec 64))
(declare-fun temp271_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp271_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp271_67 () (_ BitVec 64))
(declare-fun temp271_66 () (_ BitVec 64))
(declare-fun temp271_69 () (_ BitVec 64))
(declare-fun temp271_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp271_71 () (_ BitVec 64))
(declare-fun temp271_70 () (_ BitVec 64))
(declare-fun temp271_73 () (_ BitVec 64))
(declare-fun temp271_72 () (_ BitVec 64))
(declare-fun temp271_75 () (_ BitVec 64))
(declare-fun temp271_74 () (_ BitVec 64))
(declare-fun temp271_77 () (_ BitVec 64))
(declare-fun temp271_76 () (_ BitVec 64))
(declare-fun temp271_79 () (_ BitVec 64))
(declare-fun temp271_78 () (_ BitVec 64))
(declare-fun temp271_81 () (_ BitVec 64))
(declare-fun temp271_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp271_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp271_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp271_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp271_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp271_86 () (_ BitVec 64))
(declare-fun var7801886 () (_ BitVec 64))
(declare-fun temp271_87 () (_ BitVec 64))
(declare-fun temp271_88 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun temp271_89 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp271_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp271_1)))
(assert (= temp271_2 #x0000000000000000))
(assert (= var1050945 temp271_2))
(assert (= temp271_3 #xffffffffffffffff))
(assert (= var67312 temp271_3))
(assert (= temp271_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp271_4)))
(assert (= temp271_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp271_5)))
(assert (= temp271_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp271_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp271_7 #x0000000000000000))
(assert (= var82187 temp271_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp271_8 #x0000000000000000))
(assert (= var82356 temp271_8))
(assert (= temp271_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp271_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp271_10 #x0000000000000001))
(assert (= var82528 temp271_10))
(assert (= temp271_11 #x0000000000000000))
(assert (= var65913 temp271_11))
(assert (= temp271_12 #x0000000000000000))
(assert (= temp271_13 temp271_12))
(assert (= temp271_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp271_13)))
(assert (= temp271_15 #x0000000000000001))
(assert (= temp271_16 temp271_15))
(assert (= temp271_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp271_16)))
(assert (= temp271_18 #x0000000000000002))
(assert (= temp271_19 temp271_18))
(assert (= temp271_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp271_19)))
(assert (= temp271_21 #x0000000000000003))
(assert (= temp271_22 temp271_21))
(assert (= temp271_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp271_22)))
(assert (= temp271_24 #x0000000000000004))
(assert (= temp271_25 temp271_24))
(assert (= temp271_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp271_25)))
(assert (= temp271_27 #x0000000000000005))
(assert (= temp271_28 temp271_27))
(assert (= temp271_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp271_28)))
(assert (= temp271_31 #x0000000000000000))
(assert (= temp271_30
   (ite (bvslt var65913 temp271_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp271_32 temp271_30))
(assert (= temp271_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp271_32)))
(assert (= var82530 temp271_33))
(assert (bvslt temp271_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp271_34 #x0000000000000001))
(assert (= var82531 temp271_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp271_35 #x0000000000000001))
(assert (= var82728 temp271_35))
(assert (= var1914351 var65913))
(assert (= temp271_36 #x0000000000000001))
(assert (= var2115797 temp271_36))
(assert (= temp271_37 #x0000000000000002))
(assert (= var2115798 temp271_37))
(assert (= temp271_39 #x0000000000000000))
(assert (= temp271_38 temp271_39))
(assert (= temp271_40 #x0000000000000000))
(assert (= var2628020 temp271_40))
(assert (= temp271_41 #x0000000000000001))
(assert (= temp271_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp271_41 temp271_42)))
(assert (= temp271_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp271_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp271_44 #x0000000000000000))
(assert (= var3740377 temp271_44))
(assert (= temp271_45 #x0000000000000002))
(assert (= var69143 temp271_45))
(assert (= temp271_47 #x0000000000000001))
(assert (= temp271_46 temp271_47))
(assert (= temp271_49 #x0000000000000001))
(assert (= temp271_48 temp271_49))
(assert (= temp271_51 #x0000000000000003))
(assert (= temp271_50 temp271_51))
(assert (= temp271_52 #x0000000000000001))
(assert (= var4212949 temp271_52))
(assert (= var4212950 var69143))
(assert (= temp271_54 #x0000000000000001))
(assert (= temp271_53 temp271_54))
(assert (= temp271_56 #x0000000000000001))
(assert (= temp271_55 temp271_56))
(assert (= temp271_58 #x0000000000000001))
(assert (= temp271_57 temp271_58))
(assert (= temp271_60 #x0000000000000001))
(assert (= temp271_59 temp271_60))
(assert (= temp271_62 #x0000000000000000))
(assert (= temp271_61 temp271_62))
(assert (= temp271_64 #x0000000000000001))
(assert (= temp271_63 temp271_64))
(assert (= var4868391 var69143))
(assert (= temp271_65 #x0000000000000002))
(assert (= var4983962 temp271_65))
(assert (= temp271_67 #x0000000000000001))
(assert (= temp271_66 temp271_67))
(assert (= temp271_69 #x0000000000000001))
(assert (= temp271_68 temp271_69))
(assert (= var5453295 var65913))
(assert (= temp271_71 #x0000000000000001))
(assert (= temp271_70 temp271_71))
(assert (= temp271_73 #x0000000000000001))
(assert (= temp271_72 temp271_73))
(assert (= temp271_75 #x0000000000000001))
(assert (= temp271_74 temp271_75))
(assert (= temp271_77 #x0000000000000001))
(assert (= temp271_76 temp271_77))
(assert (= temp271_79 #x0000000000000000))
(assert (= temp271_78 temp271_79))
(assert (= temp271_81 #x0000000000000001))
(assert (= temp271_80 temp271_81))
(assert (= var6375719 var69143))
(assert (= temp271_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp271_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp271_83 #x0000000000000001))
(assert (= var83534 temp271_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp271_84 #x0000000000000001))
(assert (= var6818808 temp271_84))
(assert (= var7801844 var69143))
(assert (= temp271_85 #x0000000000000001))
(assert (= var7801848 temp271_85))
(assert (= temp271_86 #x0000000000000000))
(assert (= var7801886 temp271_86))
(assert (= temp271_87 #x0000000000000000))
(assert (= var7801886 temp271_87))
(assert (= temp271_88 #x0000000000000001))
(assert (= var9062695 temp271_88))
(assert (= var9324839 var65913))
(assert (= temp271_89 #x0000000000000000))
(assert (= var9571482 temp271_89))
(model-add temp271_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp271_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp271_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp271_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp271_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp271_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp271_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




