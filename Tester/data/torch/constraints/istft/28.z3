(declare-fun temp36_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp36_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp36_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp36_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp36_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp36_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp36_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp36_8 () (_ BitVec 64))
(declare-fun temp36_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp36_10 () (_ BitVec 64))
(declare-fun temp36_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp36_12 () (_ BitVec 64))
(declare-fun temp36_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_14 () (_ BitVec 64))
(declare-fun temp36_15 () (_ BitVec 64))
(declare-fun temp36_16 () (_ BitVec 64))
(declare-fun temp36_17 () (_ BitVec 64))
(declare-fun temp36_18 () (_ BitVec 64))
(declare-fun temp36_19 () (_ BitVec 64))
(declare-fun temp36_20 () (_ BitVec 64))
(declare-fun temp36_21 () (_ BitVec 64))
(declare-fun temp36_22 () (_ BitVec 64))
(declare-fun temp36_23 () (_ BitVec 64))
(declare-fun temp36_24 () (_ BitVec 64))
(declare-fun temp36_25 () (_ BitVec 64))
(declare-fun temp36_26 () (_ BitVec 64))
(declare-fun temp36_27 () (_ BitVec 64))
(declare-fun temp36_28 () (_ BitVec 64))
(declare-fun temp36_29 () (_ BitVec 64))
(declare-fun temp36_31 () (_ BitVec 64))
(declare-fun temp36_30 () (_ BitVec 64))
(declare-fun temp36_32 () (_ BitVec 64))
(declare-fun temp36_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp36_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp36_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp36_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp36_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp36_39 () (_ BitVec 64))
(declare-fun temp36_38 () (_ BitVec 64))
(declare-fun temp36_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp36_41 () (_ BitVec 64))
(declare-fun temp36_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp36_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp36_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp36_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp36_47 () (_ BitVec 64))
(declare-fun temp36_46 () (_ BitVec 64))
(declare-fun temp36_49 () (_ BitVec 64))
(declare-fun temp36_48 () (_ BitVec 64))
(declare-fun temp36_51 () (_ BitVec 64))
(declare-fun temp36_50 () (_ BitVec 64))
(declare-fun temp36_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp36_54 () (_ BitVec 64))
(declare-fun temp36_53 () (_ BitVec 64))
(declare-fun temp36_56 () (_ BitVec 64))
(declare-fun temp36_55 () (_ BitVec 64))
(declare-fun temp36_58 () (_ BitVec 64))
(declare-fun temp36_57 () (_ BitVec 64))
(declare-fun temp36_60 () (_ BitVec 64))
(declare-fun temp36_59 () (_ BitVec 64))
(declare-fun temp36_62 () (_ BitVec 64))
(declare-fun temp36_61 () (_ BitVec 64))
(declare-fun temp36_64 () (_ BitVec 64))
(declare-fun temp36_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp36_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp36_67 () (_ BitVec 64))
(declare-fun temp36_66 () (_ BitVec 64))
(declare-fun temp36_69 () (_ BitVec 64))
(declare-fun temp36_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp36_71 () (_ BitVec 64))
(declare-fun temp36_70 () (_ BitVec 64))
(declare-fun temp36_73 () (_ BitVec 64))
(declare-fun temp36_72 () (_ BitVec 64))
(declare-fun temp36_75 () (_ BitVec 64))
(declare-fun temp36_74 () (_ BitVec 64))
(declare-fun temp36_77 () (_ BitVec 64))
(declare-fun temp36_76 () (_ BitVec 64))
(declare-fun temp36_79 () (_ BitVec 64))
(declare-fun temp36_78 () (_ BitVec 64))
(declare-fun temp36_81 () (_ BitVec 64))
(declare-fun temp36_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp36_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp36_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp36_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp36_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp36_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp36_87 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp36_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp36_1)))
(assert (= temp36_2 #x0000000000000000))
(assert (= var1050945 temp36_2))
(assert (= temp36_3 #xffffffffffffffff))
(assert (= var67312 temp36_3))
(assert (= temp36_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp36_4)))
(assert (= temp36_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp36_5)))
(assert (= temp36_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp36_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp36_7 #x0000000000000000))
(assert (= var82187 temp36_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_8 #x0000000000000000))
(assert (= var82356 temp36_8))
(assert (= temp36_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp36_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_10 #x0000000000000001))
(assert (= var82528 temp36_10))
(assert (= temp36_11 #x0000000000000000))
(assert (= var65913 temp36_11))
(assert (= temp36_12 #x0000000000000000))
(assert (= temp36_13 temp36_12))
(assert (= temp36_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp36_13)))
(assert (= temp36_15 #x0000000000000001))
(assert (= temp36_16 temp36_15))
(assert (= temp36_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp36_16)))
(assert (= temp36_18 #x0000000000000002))
(assert (= temp36_19 temp36_18))
(assert (= temp36_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp36_19)))
(assert (= temp36_21 #x0000000000000003))
(assert (= temp36_22 temp36_21))
(assert (= temp36_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp36_22)))
(assert (= temp36_24 #x0000000000000004))
(assert (= temp36_25 temp36_24))
(assert (= temp36_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp36_25)))
(assert (= temp36_27 #x0000000000000005))
(assert (= temp36_28 temp36_27))
(assert (= temp36_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp36_28)))
(assert (= temp36_31 #x0000000000000000))
(assert (= temp36_30
   (ite (bvslt var65913 temp36_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp36_32 temp36_30))
(assert (= temp36_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp36_32)))
(assert (= var82530 temp36_33))
(assert (bvslt temp36_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp36_34 #x0000000000000001))
(assert (= var82531 temp36_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp36_35 #x0000000000000001))
(assert (= var82728 temp36_35))
(assert (= var1914351 var65913))
(assert (= temp36_36 #x0000000000000001))
(assert (= var2115797 temp36_36))
(assert (= temp36_37 #x0000000000000002))
(assert (= var2115798 temp36_37))
(assert (= temp36_39 #x0000000000000000))
(assert (= temp36_38 temp36_39))
(assert (= temp36_40 #x0000000000000000))
(assert (= var2628020 temp36_40))
(assert (= temp36_41 #x0000000000000001))
(assert (= temp36_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp36_41 temp36_42)))
(assert (= temp36_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp36_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp36_44 #x0000000000000000))
(assert (= var3740377 temp36_44))
(assert (= temp36_45 #x0000000000000002))
(assert (= var69143 temp36_45))
(assert (= temp36_47 #x0000000000000001))
(assert (= temp36_46 temp36_47))
(assert (= temp36_49 #x0000000000000001))
(assert (= temp36_48 temp36_49))
(assert (= temp36_51 #x0000000000000003))
(assert (= temp36_50 temp36_51))
(assert (= temp36_52 #x0000000000000001))
(assert (= var4212949 temp36_52))
(assert (= var4212950 var69143))
(assert (= temp36_54 #x0000000000000001))
(assert (= temp36_53 temp36_54))
(assert (= temp36_56 #x0000000000000001))
(assert (= temp36_55 temp36_56))
(assert (= temp36_58 #x0000000000000001))
(assert (= temp36_57 temp36_58))
(assert (= temp36_60 #x0000000000000001))
(assert (= temp36_59 temp36_60))
(assert (= temp36_62 #x0000000000000000))
(assert (= temp36_61 temp36_62))
(assert (= temp36_64 #x0000000000000001))
(assert (= temp36_63 temp36_64))
(assert (= var4868391 var69143))
(assert (= temp36_65 #x0000000000000002))
(assert (= var4983962 temp36_65))
(assert (= temp36_67 #x0000000000000001))
(assert (= temp36_66 temp36_67))
(assert (= temp36_69 #x0000000000000001))
(assert (= temp36_68 temp36_69))
(assert (= var5453295 var65913))
(assert (= temp36_71 #x0000000000000001))
(assert (= temp36_70 temp36_71))
(assert (= temp36_73 #x0000000000000001))
(assert (= temp36_72 temp36_73))
(assert (= temp36_75 #x0000000000000001))
(assert (= temp36_74 temp36_75))
(assert (= temp36_77 #x0000000000000001))
(assert (= temp36_76 temp36_77))
(assert (= temp36_79 #x0000000000000000))
(assert (= temp36_78 temp36_79))
(assert (= temp36_81 #x0000000000000001))
(assert (= temp36_80 temp36_81))
(assert (= var6375719 var69143))
(assert (= temp36_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp36_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_83 #x0000000000000001))
(assert (= var83534 temp36_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp36_84 #x0000000000000001))
(assert (= var6818808 temp36_84))
(assert (= var7867380 var69143))
(assert (= temp36_85 #x0000000000000001))
(assert (= var7867384 temp36_85))
(assert (= temp36_86 #x0000000000000001))
(assert (= var9193767 temp36_86))
(assert (= temp36_87 #x0000000000000000))
(assert (= var9505946 temp36_87))
(model-add temp36_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp36_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp36_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp36_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp36_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp36_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp36_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




