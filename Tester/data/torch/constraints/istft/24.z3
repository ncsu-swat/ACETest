(declare-fun temp31_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp31_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp31_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp31_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp31_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp31_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp31_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp31_8 () (_ BitVec 64))
(declare-fun temp31_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp31_10 () (_ BitVec 64))
(declare-fun temp31_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp31_12 () (_ BitVec 64))
(declare-fun temp31_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp31_14 () (_ BitVec 64))
(declare-fun temp31_15 () (_ BitVec 64))
(declare-fun temp31_16 () (_ BitVec 64))
(declare-fun temp31_17 () (_ BitVec 64))
(declare-fun temp31_18 () (_ BitVec 64))
(declare-fun temp31_19 () (_ BitVec 64))
(declare-fun temp31_20 () (_ BitVec 64))
(declare-fun temp31_21 () (_ BitVec 64))
(declare-fun temp31_22 () (_ BitVec 64))
(declare-fun temp31_23 () (_ BitVec 64))
(declare-fun temp31_24 () (_ BitVec 64))
(declare-fun temp31_25 () (_ BitVec 64))
(declare-fun temp31_26 () (_ BitVec 64))
(declare-fun temp31_27 () (_ BitVec 64))
(declare-fun temp31_28 () (_ BitVec 64))
(declare-fun temp31_29 () (_ BitVec 64))
(declare-fun temp31_31 () (_ BitVec 64))
(declare-fun temp31_30 () (_ BitVec 64))
(declare-fun temp31_32 () (_ BitVec 64))
(declare-fun temp31_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp31_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp31_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp31_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp31_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp31_39 () (_ BitVec 64))
(declare-fun temp31_38 () (_ BitVec 64))
(declare-fun temp31_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp31_41 () (_ BitVec 64))
(declare-fun temp31_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp31_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp31_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp31_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp31_47 () (_ BitVec 64))
(declare-fun temp31_46 () (_ BitVec 64))
(declare-fun temp31_49 () (_ BitVec 64))
(declare-fun temp31_48 () (_ BitVec 64))
(declare-fun temp31_51 () (_ BitVec 64))
(declare-fun temp31_50 () (_ BitVec 64))
(declare-fun temp31_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp31_54 () (_ BitVec 64))
(declare-fun temp31_53 () (_ BitVec 64))
(declare-fun temp31_56 () (_ BitVec 64))
(declare-fun temp31_55 () (_ BitVec 64))
(declare-fun temp31_58 () (_ BitVec 64))
(declare-fun temp31_57 () (_ BitVec 64))
(declare-fun temp31_60 () (_ BitVec 64))
(declare-fun temp31_59 () (_ BitVec 64))
(declare-fun temp31_62 () (_ BitVec 64))
(declare-fun temp31_61 () (_ BitVec 64))
(declare-fun temp31_64 () (_ BitVec 64))
(declare-fun temp31_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp31_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp31_67 () (_ BitVec 64))
(declare-fun temp31_66 () (_ BitVec 64))
(declare-fun temp31_69 () (_ BitVec 64))
(declare-fun temp31_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp31_71 () (_ BitVec 64))
(declare-fun temp31_70 () (_ BitVec 64))
(declare-fun temp31_73 () (_ BitVec 64))
(declare-fun temp31_72 () (_ BitVec 64))
(declare-fun temp31_75 () (_ BitVec 64))
(declare-fun temp31_74 () (_ BitVec 64))
(declare-fun temp31_77 () (_ BitVec 64))
(declare-fun temp31_76 () (_ BitVec 64))
(declare-fun temp31_79 () (_ BitVec 64))
(declare-fun temp31_78 () (_ BitVec 64))
(declare-fun temp31_81 () (_ BitVec 64))
(declare-fun temp31_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp31_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp31_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp31_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp31_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp31_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp31_87 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp31_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp31_1)))
(assert (= temp31_2 #x0000000000000000))
(assert (= var1050945 temp31_2))
(assert (= temp31_3 #xffffffffffffffff))
(assert (= var67312 temp31_3))
(assert (= temp31_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp31_4)))
(assert (= temp31_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp31_5)))
(assert (= temp31_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp31_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp31_7 #x0000000000000000))
(assert (= var82187 temp31_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp31_8 #x0000000000000000))
(assert (= var82356 temp31_8))
(assert (= temp31_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp31_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp31_10 #x0000000000000001))
(assert (= var82528 temp31_10))
(assert (= temp31_11 #x0000000000000000))
(assert (= var65913 temp31_11))
(assert (= temp31_12 #x0000000000000000))
(assert (= temp31_13 temp31_12))
(assert (= temp31_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp31_13)))
(assert (= temp31_15 #x0000000000000001))
(assert (= temp31_16 temp31_15))
(assert (= temp31_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp31_16)))
(assert (= temp31_18 #x0000000000000002))
(assert (= temp31_19 temp31_18))
(assert (= temp31_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp31_19)))
(assert (= temp31_21 #x0000000000000003))
(assert (= temp31_22 temp31_21))
(assert (= temp31_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp31_22)))
(assert (= temp31_24 #x0000000000000004))
(assert (= temp31_25 temp31_24))
(assert (= temp31_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp31_25)))
(assert (= temp31_27 #x0000000000000005))
(assert (= temp31_28 temp31_27))
(assert (= temp31_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp31_28)))
(assert (= temp31_31 #x0000000000000000))
(assert (= temp31_30
   (ite (bvslt var65913 temp31_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp31_32 temp31_30))
(assert (= temp31_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp31_32)))
(assert (= var82530 temp31_33))
(assert (bvslt temp31_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp31_34 #x0000000000000001))
(assert (= var82531 temp31_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp31_35 #x0000000000000001))
(assert (= var82728 temp31_35))
(assert (= var1914351 var65913))
(assert (= temp31_36 #x0000000000000001))
(assert (= var2115797 temp31_36))
(assert (= temp31_37 #x0000000000000002))
(assert (= var2115798 temp31_37))
(assert (= temp31_39 #x0000000000000000))
(assert (= temp31_38 temp31_39))
(assert (= temp31_40 #x0000000000000000))
(assert (= var2628020 temp31_40))
(assert (= temp31_41 #x0000000000000001))
(assert (= temp31_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp31_41 temp31_42)))
(assert (= temp31_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp31_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp31_44 #x0000000000000000))
(assert (= var3740377 temp31_44))
(assert (= temp31_45 #x0000000000000002))
(assert (= var69143 temp31_45))
(assert (= temp31_47 #x0000000000000001))
(assert (= temp31_46 temp31_47))
(assert (= temp31_49 #x0000000000000001))
(assert (= temp31_48 temp31_49))
(assert (= temp31_51 #x0000000000000003))
(assert (= temp31_50 temp31_51))
(assert (= temp31_52 #x0000000000000001))
(assert (= var4212949 temp31_52))
(assert (= var4212950 var69143))
(assert (= temp31_54 #x0000000000000001))
(assert (= temp31_53 temp31_54))
(assert (= temp31_56 #x0000000000000001))
(assert (= temp31_55 temp31_56))
(assert (= temp31_58 #x0000000000000001))
(assert (= temp31_57 temp31_58))
(assert (= temp31_60 #x0000000000000001))
(assert (= temp31_59 temp31_60))
(assert (= temp31_62 #x0000000000000000))
(assert (= temp31_61 temp31_62))
(assert (= temp31_64 #x0000000000000001))
(assert (= temp31_63 temp31_64))
(assert (= var4868391 var69143))
(assert (= temp31_65 #x0000000000000002))
(assert (= var4983962 temp31_65))
(assert (= temp31_67 #x0000000000000001))
(assert (= temp31_66 temp31_67))
(assert (= temp31_69 #x0000000000000001))
(assert (= temp31_68 temp31_69))
(assert (= var5453295 var65913))
(assert (= temp31_71 #x0000000000000001))
(assert (= temp31_70 temp31_71))
(assert (= temp31_73 #x0000000000000001))
(assert (= temp31_72 temp31_73))
(assert (= temp31_75 #x0000000000000001))
(assert (= temp31_74 temp31_75))
(assert (= temp31_77 #x0000000000000001))
(assert (= temp31_76 temp31_77))
(assert (= temp31_79 #x0000000000000000))
(assert (= temp31_78 temp31_79))
(assert (= temp31_81 #x0000000000000001))
(assert (= temp31_80 temp31_81))
(assert (= var6375719 var69143))
(assert (= temp31_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp31_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp31_83 #x0000000000000001))
(assert (= var83534 temp31_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp31_84 #x0000000000000001))
(assert (= var6818808 temp31_84))
(assert (= var7867380 var69143))
(assert (= temp31_85 #x0000000000000001))
(assert (= var7867384 temp31_85))
(assert (= temp31_86 #x0000000000000001))
(assert (= var9193767 temp31_86))
(assert (= var9455911 var65913))
(assert (= temp31_87 #x0000000000000000))
(assert (= var9702554 temp31_87))
(model-add temp31_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp31_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp31_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp31_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp31_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp31_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp31_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






