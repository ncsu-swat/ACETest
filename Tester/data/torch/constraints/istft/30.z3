(declare-fun temp38_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp38_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp38_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp38_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp38_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp38_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp38_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp38_8 () (_ BitVec 64))
(declare-fun temp38_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp38_10 () (_ BitVec 64))
(declare-fun temp38_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp38_12 () (_ BitVec 64))
(declare-fun temp38_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_14 () (_ BitVec 64))
(declare-fun temp38_15 () (_ BitVec 64))
(declare-fun temp38_16 () (_ BitVec 64))
(declare-fun temp38_17 () (_ BitVec 64))
(declare-fun temp38_18 () (_ BitVec 64))
(declare-fun temp38_19 () (_ BitVec 64))
(declare-fun temp38_20 () (_ BitVec 64))
(declare-fun temp38_21 () (_ BitVec 64))
(declare-fun temp38_22 () (_ BitVec 64))
(declare-fun temp38_23 () (_ BitVec 64))
(declare-fun temp38_24 () (_ BitVec 64))
(declare-fun temp38_25 () (_ BitVec 64))
(declare-fun temp38_26 () (_ BitVec 64))
(declare-fun temp38_27 () (_ BitVec 64))
(declare-fun temp38_28 () (_ BitVec 64))
(declare-fun temp38_29 () (_ BitVec 64))
(declare-fun temp38_31 () (_ BitVec 64))
(declare-fun temp38_30 () (_ BitVec 64))
(declare-fun temp38_32 () (_ BitVec 64))
(declare-fun temp38_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp38_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp38_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp38_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp38_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp38_39 () (_ BitVec 64))
(declare-fun temp38_38 () (_ BitVec 64))
(declare-fun temp38_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp38_41 () (_ BitVec 64))
(declare-fun temp38_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp38_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp38_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp38_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp38_47 () (_ BitVec 64))
(declare-fun temp38_46 () (_ BitVec 64))
(declare-fun temp38_49 () (_ BitVec 64))
(declare-fun temp38_48 () (_ BitVec 64))
(declare-fun temp38_51 () (_ BitVec 64))
(declare-fun temp38_50 () (_ BitVec 64))
(declare-fun temp38_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp38_54 () (_ BitVec 64))
(declare-fun temp38_53 () (_ BitVec 64))
(declare-fun temp38_56 () (_ BitVec 64))
(declare-fun temp38_55 () (_ BitVec 64))
(declare-fun temp38_58 () (_ BitVec 64))
(declare-fun temp38_57 () (_ BitVec 64))
(declare-fun temp38_60 () (_ BitVec 64))
(declare-fun temp38_59 () (_ BitVec 64))
(declare-fun temp38_62 () (_ BitVec 64))
(declare-fun temp38_61 () (_ BitVec 64))
(declare-fun temp38_64 () (_ BitVec 64))
(declare-fun temp38_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp38_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp38_67 () (_ BitVec 64))
(declare-fun temp38_66 () (_ BitVec 64))
(declare-fun temp38_69 () (_ BitVec 64))
(declare-fun temp38_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp38_71 () (_ BitVec 64))
(declare-fun temp38_70 () (_ BitVec 64))
(declare-fun temp38_73 () (_ BitVec 64))
(declare-fun temp38_72 () (_ BitVec 64))
(declare-fun temp38_75 () (_ BitVec 64))
(declare-fun temp38_74 () (_ BitVec 64))
(declare-fun temp38_77 () (_ BitVec 64))
(declare-fun temp38_76 () (_ BitVec 64))
(declare-fun temp38_79 () (_ BitVec 64))
(declare-fun temp38_78 () (_ BitVec 64))
(declare-fun temp38_81 () (_ BitVec 64))
(declare-fun temp38_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp38_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp38_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp38_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp38_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp38_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp38_87 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp38_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp38_1)))
(assert (= temp38_2 #x0000000000000000))
(assert (= var1050945 temp38_2))
(assert (= temp38_3 #xffffffffffffffff))
(assert (= var67312 temp38_3))
(assert (= temp38_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp38_4)))
(assert (= temp38_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp38_5)))
(assert (= temp38_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp38_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp38_7 #x0000000000000000))
(assert (= var82187 temp38_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_8 #x0000000000000000))
(assert (= var82356 temp38_8))
(assert (= temp38_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp38_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_10 #x0000000000000001))
(assert (= var82528 temp38_10))
(assert (= temp38_11 #x0000000000000000))
(assert (= var65913 temp38_11))
(assert (= temp38_12 #x0000000000000000))
(assert (= temp38_13 temp38_12))
(assert (= temp38_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp38_13)))
(assert (= temp38_15 #x0000000000000001))
(assert (= temp38_16 temp38_15))
(assert (= temp38_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp38_16)))
(assert (= temp38_18 #x0000000000000002))
(assert (= temp38_19 temp38_18))
(assert (= temp38_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp38_19)))
(assert (= temp38_21 #x0000000000000003))
(assert (= temp38_22 temp38_21))
(assert (= temp38_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp38_22)))
(assert (= temp38_24 #x0000000000000004))
(assert (= temp38_25 temp38_24))
(assert (= temp38_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp38_25)))
(assert (= temp38_27 #x0000000000000005))
(assert (= temp38_28 temp38_27))
(assert (= temp38_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp38_28)))
(assert (= temp38_31 #x0000000000000000))
(assert (= temp38_30
   (ite (bvslt var65913 temp38_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp38_32 temp38_30))
(assert (= temp38_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp38_32)))
(assert (= var82530 temp38_33))
(assert (bvslt temp38_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_34 #x0000000000000001))
(assert (= var82531 temp38_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_35 #x0000000000000001))
(assert (= var82728 temp38_35))
(assert (= var1914351 var65913))
(assert (= temp38_36 #x0000000000000001))
(assert (= var2115797 temp38_36))
(assert (= temp38_37 #x0000000000000002))
(assert (= var2115798 temp38_37))
(assert (= temp38_39 #x0000000000000000))
(assert (= temp38_38 temp38_39))
(assert (= temp38_40 #x0000000000000000))
(assert (= var2628020 temp38_40))
(assert (= temp38_41 #x0000000000000001))
(assert (= temp38_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp38_41 temp38_42)))
(assert (= temp38_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp38_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp38_44 #x0000000000000000))
(assert (= var3740377 temp38_44))
(assert (= temp38_45 #x0000000000000002))
(assert (= var69143 temp38_45))
(assert (= temp38_47 #x0000000000000001))
(assert (= temp38_46 temp38_47))
(assert (= temp38_49 #x0000000000000001))
(assert (= temp38_48 temp38_49))
(assert (= temp38_51 #x0000000000000003))
(assert (= temp38_50 temp38_51))
(assert (= temp38_52 #x0000000000000001))
(assert (= var4212949 temp38_52))
(assert (= var4212950 var69143))
(assert (= temp38_54 #x0000000000000001))
(assert (= temp38_53 temp38_54))
(assert (= temp38_56 #x0000000000000001))
(assert (= temp38_55 temp38_56))
(assert (= temp38_58 #x0000000000000001))
(assert (= temp38_57 temp38_58))
(assert (= temp38_60 #x0000000000000001))
(assert (= temp38_59 temp38_60))
(assert (= temp38_62 #x0000000000000000))
(assert (= temp38_61 temp38_62))
(assert (= temp38_64 #x0000000000000001))
(assert (= temp38_63 temp38_64))
(assert (= var4868391 var69143))
(assert (= temp38_65 #x0000000000000002))
(assert (= var4983962 temp38_65))
(assert (= temp38_67 #x0000000000000001))
(assert (= temp38_66 temp38_67))
(assert (= temp38_69 #x0000000000000001))
(assert (= temp38_68 temp38_69))
(assert (= var5453295 var65913))
(assert (= temp38_71 #x0000000000000001))
(assert (= temp38_70 temp38_71))
(assert (= temp38_73 #x0000000000000001))
(assert (= temp38_72 temp38_73))
(assert (= temp38_75 #x0000000000000001))
(assert (= temp38_74 temp38_75))
(assert (= temp38_77 #x0000000000000001))
(assert (= temp38_76 temp38_77))
(assert (= temp38_79 #x0000000000000000))
(assert (= temp38_78 temp38_79))
(assert (= temp38_81 #x0000000000000001))
(assert (= temp38_80 temp38_81))
(assert (= var6375719 var69143))
(assert (= temp38_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp38_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_83 #x0000000000000001))
(assert (= var83534 temp38_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp38_84 #x0000000000000001))
(assert (= var6818808 temp38_84))
(assert (= var7867380 var69143))
(assert (= temp38_85 #x0000000000000001))
(assert (= var7867384 temp38_85))
(assert (= temp38_86 #x0000000000000001))
(assert (= var9193767 temp38_86))
(assert (= temp38_87 #x0000000000000000))
(assert (= var9505946 temp38_87))
(model-add temp38_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp38_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp38_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp38_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp38_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp38_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp38_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






