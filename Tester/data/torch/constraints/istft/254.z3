(declare-fun temp548_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp548_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp548_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp548_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp548_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp548_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp548_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp548_8 () (_ BitVec 64))
(declare-fun temp548_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp548_10 () (_ BitVec 64))
(declare-fun temp548_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp548_12 () (_ BitVec 64))
(declare-fun temp548_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp548_14 () (_ BitVec 64))
(declare-fun temp548_15 () (_ BitVec 64))
(declare-fun temp548_16 () (_ BitVec 64))
(declare-fun temp548_17 () (_ BitVec 64))
(declare-fun temp548_18 () (_ BitVec 64))
(declare-fun temp548_19 () (_ BitVec 64))
(declare-fun temp548_20 () (_ BitVec 64))
(declare-fun temp548_21 () (_ BitVec 64))
(declare-fun temp548_22 () (_ BitVec 64))
(declare-fun temp548_23 () (_ BitVec 64))
(declare-fun temp548_24 () (_ BitVec 64))
(declare-fun temp548_25 () (_ BitVec 64))
(declare-fun temp548_26 () (_ BitVec 64))
(declare-fun temp548_27 () (_ BitVec 64))
(declare-fun temp548_28 () (_ BitVec 64))
(declare-fun temp548_29 () (_ BitVec 64))
(declare-fun temp548_31 () (_ BitVec 64))
(declare-fun temp548_30 () (_ BitVec 64))
(declare-fun temp548_32 () (_ BitVec 64))
(declare-fun temp548_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp548_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp548_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp548_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp548_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp548_39 () (_ BitVec 64))
(declare-fun temp548_38 () (_ BitVec 64))
(declare-fun temp548_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp548_41 () (_ BitVec 64))
(declare-fun temp548_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp548_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp548_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp548_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp548_47 () (_ BitVec 64))
(declare-fun temp548_46 () (_ BitVec 64))
(declare-fun temp548_49 () (_ BitVec 64))
(declare-fun temp548_48 () (_ BitVec 64))
(declare-fun temp548_51 () (_ BitVec 64))
(declare-fun temp548_50 () (_ BitVec 64))
(declare-fun temp548_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp548_54 () (_ BitVec 64))
(declare-fun temp548_53 () (_ BitVec 64))
(declare-fun temp548_56 () (_ BitVec 64))
(declare-fun temp548_55 () (_ BitVec 64))
(declare-fun temp548_58 () (_ BitVec 64))
(declare-fun temp548_57 () (_ BitVec 64))
(declare-fun temp548_60 () (_ BitVec 64))
(declare-fun temp548_59 () (_ BitVec 64))
(declare-fun temp548_62 () (_ BitVec 64))
(declare-fun temp548_61 () (_ BitVec 64))
(declare-fun temp548_64 () (_ BitVec 64))
(declare-fun temp548_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp548_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp548_67 () (_ BitVec 64))
(declare-fun temp548_66 () (_ BitVec 64))
(declare-fun temp548_69 () (_ BitVec 64))
(declare-fun temp548_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp548_71 () (_ BitVec 64))
(declare-fun temp548_70 () (_ BitVec 64))
(declare-fun temp548_73 () (_ BitVec 64))
(declare-fun temp548_72 () (_ BitVec 64))
(declare-fun temp548_75 () (_ BitVec 64))
(declare-fun temp548_74 () (_ BitVec 64))
(declare-fun temp548_77 () (_ BitVec 64))
(declare-fun temp548_76 () (_ BitVec 64))
(declare-fun temp548_79 () (_ BitVec 64))
(declare-fun temp548_78 () (_ BitVec 64))
(declare-fun temp548_81 () (_ BitVec 64))
(declare-fun temp548_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp548_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp548_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp548_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp548_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp548_86 () (_ BitVec 64))
(declare-fun var7736362 () (_ BitVec 64))
(declare-fun temp548_87 () (_ BitVec 64))
(declare-fun temp548_88 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun temp548_89 () (_ BitVec 64))
(declare-fun var9374874 () (_ BitVec 64))
(assert (= temp548_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp548_1)))
(assert (= temp548_2 #x0000000000000000))
(assert (= var1050945 temp548_2))
(assert (= temp548_3 #xffffffffffffffff))
(assert (= var67312 temp548_3))
(assert (= temp548_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp548_4)))
(assert (= temp548_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp548_5)))
(assert (= temp548_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp548_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp548_7 #x0000000000000000))
(assert (= var82187 temp548_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp548_8 #x0000000000000000))
(assert (= var82356 temp548_8))
(assert (= temp548_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp548_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp548_10 #x0000000000000001))
(assert (= var82528 temp548_10))
(assert (= temp548_11 #x0000000000000000))
(assert (= var65913 temp548_11))
(assert (= temp548_12 #x0000000000000000))
(assert (= temp548_13 temp548_12))
(assert (= temp548_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp548_13)))
(assert (= temp548_15 #x0000000000000001))
(assert (= temp548_16 temp548_15))
(assert (= temp548_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp548_16)))
(assert (= temp548_18 #x0000000000000002))
(assert (= temp548_19 temp548_18))
(assert (= temp548_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp548_19)))
(assert (= temp548_21 #x0000000000000003))
(assert (= temp548_22 temp548_21))
(assert (= temp548_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp548_22)))
(assert (= temp548_24 #x0000000000000004))
(assert (= temp548_25 temp548_24))
(assert (= temp548_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp548_25)))
(assert (= temp548_27 #x0000000000000005))
(assert (= temp548_28 temp548_27))
(assert (= temp548_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp548_28)))
(assert (= temp548_31 #x0000000000000000))
(assert (= temp548_30
   (ite (bvslt var65913 temp548_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp548_32 temp548_30))
(assert (= temp548_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp548_32)))
(assert (= var82530 temp548_33))
(assert (bvslt temp548_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp548_34 #x0000000000000001))
(assert (= var82531 temp548_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp548_35 #x0000000000000001))
(assert (= var82728 temp548_35))
(assert (= var1914351 var65913))
(assert (= temp548_36 #x0000000000000001))
(assert (= var2115797 temp548_36))
(assert (= temp548_37 #x0000000000000002))
(assert (= var2115798 temp548_37))
(assert (= temp548_39 #x0000000000000000))
(assert (= temp548_38 temp548_39))
(assert (= temp548_40 #x0000000000000000))
(assert (= var2628020 temp548_40))
(assert (= temp548_41 #x0000000000000001))
(assert (= temp548_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp548_41 temp548_42)))
(assert (= temp548_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp548_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp548_44 #x0000000000000000))
(assert (= var3740377 temp548_44))
(assert (= temp548_45 #x0000000000000002))
(assert (= var69143 temp548_45))
(assert (= temp548_47 #x0000000000000001))
(assert (= temp548_46 temp548_47))
(assert (= temp548_49 #x0000000000000001))
(assert (= temp548_48 temp548_49))
(assert (= temp548_51 #x0000000000000003))
(assert (= temp548_50 temp548_51))
(assert (= temp548_52 #x0000000000000001))
(assert (= var4212949 temp548_52))
(assert (= var4212950 var69143))
(assert (= temp548_54 #x0000000000000001))
(assert (= temp548_53 temp548_54))
(assert (= temp548_56 #x0000000000000001))
(assert (= temp548_55 temp548_56))
(assert (= temp548_58 #x0000000000000001))
(assert (= temp548_57 temp548_58))
(assert (= temp548_60 #x0000000000000001))
(assert (= temp548_59 temp548_60))
(assert (= temp548_62 #x0000000000000000))
(assert (= temp548_61 temp548_62))
(assert (= temp548_64 #x0000000000000001))
(assert (= temp548_63 temp548_64))
(assert (= var4868391 var69143))
(assert (= temp548_65 #x0000000000000002))
(assert (= var4983962 temp548_65))
(assert (= temp548_67 #x0000000000000001))
(assert (= temp548_66 temp548_67))
(assert (= temp548_69 #x0000000000000001))
(assert (= temp548_68 temp548_69))
(assert (= var5453295 var65913))
(assert (= temp548_71 #x0000000000000001))
(assert (= temp548_70 temp548_71))
(assert (= temp548_73 #x0000000000000001))
(assert (= temp548_72 temp548_73))
(assert (= temp548_75 #x0000000000000001))
(assert (= temp548_74 temp548_75))
(assert (= temp548_77 #x0000000000000001))
(assert (= temp548_76 temp548_77))
(assert (= temp548_79 #x0000000000000000))
(assert (= temp548_78 temp548_79))
(assert (= temp548_81 #x0000000000000001))
(assert (= temp548_80 temp548_81))
(assert (= var6375719 var69143))
(assert (= temp548_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp548_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp548_83 #x0000000000000001))
(assert (= var83534 temp548_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp548_84 #x0000000000000001))
(assert (= var6818808 temp548_84))
(assert (= var7736308 var69143))
(assert (= temp548_85 #x0000000000000001))
(assert (= var7736312 temp548_85))
(assert (= temp548_86 #x0000000000000000))
(assert (= var7736362 temp548_86))
(assert (= temp548_87 #x0000000000000000))
(assert (= var7736362 temp548_87))
(assert (= temp548_88 #x0000000000000001))
(assert (= var9062695 temp548_88))
(assert (= temp548_89 #x0000000000000000))
(assert (= var9374874 temp548_89))
(model-add temp548_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp548_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp548_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp548_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp548_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp548_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp548_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





