(declare-fun temp228_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp228_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp228_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp228_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp228_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp228_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp228_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp228_8 () (_ BitVec 64))
(declare-fun temp228_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp228_10 () (_ BitVec 64))
(declare-fun temp228_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp228_12 () (_ BitVec 64))
(declare-fun temp228_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp228_14 () (_ BitVec 64))
(declare-fun temp228_15 () (_ BitVec 64))
(declare-fun temp228_16 () (_ BitVec 64))
(declare-fun temp228_17 () (_ BitVec 64))
(declare-fun temp228_18 () (_ BitVec 64))
(declare-fun temp228_19 () (_ BitVec 64))
(declare-fun temp228_20 () (_ BitVec 64))
(declare-fun temp228_21 () (_ BitVec 64))
(declare-fun temp228_22 () (_ BitVec 64))
(declare-fun temp228_23 () (_ BitVec 64))
(declare-fun temp228_24 () (_ BitVec 64))
(declare-fun temp228_25 () (_ BitVec 64))
(declare-fun temp228_26 () (_ BitVec 64))
(declare-fun temp228_27 () (_ BitVec 64))
(declare-fun temp228_28 () (_ BitVec 64))
(declare-fun temp228_29 () (_ BitVec 64))
(declare-fun temp228_31 () (_ BitVec 64))
(declare-fun temp228_30 () (_ BitVec 64))
(declare-fun temp228_32 () (_ BitVec 64))
(declare-fun temp228_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp228_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp228_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp228_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp228_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp228_39 () (_ BitVec 64))
(declare-fun temp228_38 () (_ BitVec 64))
(declare-fun temp228_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp228_41 () (_ BitVec 64))
(declare-fun temp228_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp228_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp228_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp228_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp228_47 () (_ BitVec 64))
(declare-fun temp228_46 () (_ BitVec 64))
(declare-fun temp228_49 () (_ BitVec 64))
(declare-fun temp228_48 () (_ BitVec 64))
(declare-fun temp228_51 () (_ BitVec 64))
(declare-fun temp228_50 () (_ BitVec 64))
(declare-fun temp228_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp228_54 () (_ BitVec 64))
(declare-fun temp228_53 () (_ BitVec 64))
(declare-fun temp228_56 () (_ BitVec 64))
(declare-fun temp228_55 () (_ BitVec 64))
(declare-fun temp228_58 () (_ BitVec 64))
(declare-fun temp228_57 () (_ BitVec 64))
(declare-fun temp228_60 () (_ BitVec 64))
(declare-fun temp228_59 () (_ BitVec 64))
(declare-fun temp228_62 () (_ BitVec 64))
(declare-fun temp228_61 () (_ BitVec 64))
(declare-fun temp228_64 () (_ BitVec 64))
(declare-fun temp228_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp228_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp228_67 () (_ BitVec 64))
(declare-fun temp228_66 () (_ BitVec 64))
(declare-fun temp228_69 () (_ BitVec 64))
(declare-fun temp228_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp228_71 () (_ BitVec 64))
(declare-fun temp228_70 () (_ BitVec 64))
(declare-fun temp228_73 () (_ BitVec 64))
(declare-fun temp228_72 () (_ BitVec 64))
(declare-fun temp228_75 () (_ BitVec 64))
(declare-fun temp228_74 () (_ BitVec 64))
(declare-fun temp228_77 () (_ BitVec 64))
(declare-fun temp228_76 () (_ BitVec 64))
(declare-fun temp228_79 () (_ BitVec 64))
(declare-fun temp228_78 () (_ BitVec 64))
(declare-fun temp228_81 () (_ BitVec 64))
(declare-fun temp228_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp228_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp228_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp228_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp228_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp228_86 () (_ BitVec 64))
(declare-fun var7801898 () (_ BitVec 64))
(declare-fun temp228_87 () (_ BitVec 64))
(declare-fun temp228_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun temp228_89 () (_ BitVec 64))
(declare-fun var9440410 () (_ BitVec 64))
(assert (= temp228_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp228_1)))
(assert (= temp228_2 #x0000000000000000))
(assert (= var1050945 temp228_2))
(assert (= temp228_3 #xffffffffffffffff))
(assert (= var67312 temp228_3))
(assert (= temp228_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp228_4)))
(assert (= temp228_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp228_5)))
(assert (= temp228_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp228_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp228_7 #x0000000000000000))
(assert (= var82187 temp228_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp228_8 #x0000000000000000))
(assert (= var82356 temp228_8))
(assert (= temp228_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp228_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp228_10 #x0000000000000001))
(assert (= var82528 temp228_10))
(assert (= temp228_11 #x0000000000000000))
(assert (= var65913 temp228_11))
(assert (= temp228_12 #x0000000000000000))
(assert (= temp228_13 temp228_12))
(assert (= temp228_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp228_13)))
(assert (= temp228_15 #x0000000000000001))
(assert (= temp228_16 temp228_15))
(assert (= temp228_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp228_16)))
(assert (= temp228_18 #x0000000000000002))
(assert (= temp228_19 temp228_18))
(assert (= temp228_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp228_19)))
(assert (= temp228_21 #x0000000000000003))
(assert (= temp228_22 temp228_21))
(assert (= temp228_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp228_22)))
(assert (= temp228_24 #x0000000000000004))
(assert (= temp228_25 temp228_24))
(assert (= temp228_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp228_25)))
(assert (= temp228_27 #x0000000000000005))
(assert (= temp228_28 temp228_27))
(assert (= temp228_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp228_28)))
(assert (= temp228_31 #x0000000000000000))
(assert (= temp228_30
   (ite (bvslt var65913 temp228_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp228_32 temp228_30))
(assert (= temp228_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp228_32)))
(assert (= var82530 temp228_33))
(assert (bvslt temp228_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp228_34 #x0000000000000001))
(assert (= var82531 temp228_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp228_35 #x0000000000000001))
(assert (= var82728 temp228_35))
(assert (= var1914351 var65913))
(assert (= temp228_36 #x0000000000000001))
(assert (= var2115797 temp228_36))
(assert (= temp228_37 #x0000000000000002))
(assert (= var2115798 temp228_37))
(assert (= temp228_39 #x0000000000000000))
(assert (= temp228_38 temp228_39))
(assert (= temp228_40 #x0000000000000000))
(assert (= var2628020 temp228_40))
(assert (= temp228_41 #x0000000000000001))
(assert (= temp228_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp228_41 temp228_42)))
(assert (= temp228_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp228_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp228_44 #x0000000000000000))
(assert (= var3740377 temp228_44))
(assert (= temp228_45 #x0000000000000002))
(assert (= var69143 temp228_45))
(assert (= temp228_47 #x0000000000000001))
(assert (= temp228_46 temp228_47))
(assert (= temp228_49 #x0000000000000001))
(assert (= temp228_48 temp228_49))
(assert (= temp228_51 #x0000000000000003))
(assert (= temp228_50 temp228_51))
(assert (= temp228_52 #x0000000000000001))
(assert (= var4212949 temp228_52))
(assert (= var4212950 var69143))
(assert (= temp228_54 #x0000000000000001))
(assert (= temp228_53 temp228_54))
(assert (= temp228_56 #x0000000000000001))
(assert (= temp228_55 temp228_56))
(assert (= temp228_58 #x0000000000000001))
(assert (= temp228_57 temp228_58))
(assert (= temp228_60 #x0000000000000001))
(assert (= temp228_59 temp228_60))
(assert (= temp228_62 #x0000000000000000))
(assert (= temp228_61 temp228_62))
(assert (= temp228_64 #x0000000000000001))
(assert (= temp228_63 temp228_64))
(assert (= var4868391 var69143))
(assert (= temp228_65 #x0000000000000002))
(assert (= var4983962 temp228_65))
(assert (= temp228_67 #x0000000000000001))
(assert (= temp228_66 temp228_67))
(assert (= temp228_69 #x0000000000000001))
(assert (= temp228_68 temp228_69))
(assert (= var5453295 var65913))
(assert (= temp228_71 #x0000000000000001))
(assert (= temp228_70 temp228_71))
(assert (= temp228_73 #x0000000000000001))
(assert (= temp228_72 temp228_73))
(assert (= temp228_75 #x0000000000000001))
(assert (= temp228_74 temp228_75))
(assert (= temp228_77 #x0000000000000001))
(assert (= temp228_76 temp228_77))
(assert (= temp228_79 #x0000000000000000))
(assert (= temp228_78 temp228_79))
(assert (= temp228_81 #x0000000000000001))
(assert (= temp228_80 temp228_81))
(assert (= var6375719 var69143))
(assert (= temp228_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp228_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp228_83 #x0000000000000001))
(assert (= var83534 temp228_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp228_84 #x0000000000000001))
(assert (= var6818808 temp228_84))
(assert (= var7801844 var69143))
(assert (= temp228_85 #x0000000000000001))
(assert (= var7801848 temp228_85))
(assert (= temp228_86 #x0000000000000000))
(assert (= var7801898 temp228_86))
(assert (= temp228_87 #x0000000000000000))
(assert (= var7801898 temp228_87))
(assert (= temp228_88 #x0000000000000001))
(assert (= var9128231 temp228_88))
(assert (= temp228_89 #x0000000000000000))
(assert (= var9440410 temp228_89))
(model-add temp228_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp228_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp228_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp228_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp228_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp228_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp228_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




