(declare-fun temp15201_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp15201_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp15201_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp15201_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp15201_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp15201_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp15201_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp15201_8 () (_ BitVec 64))
(declare-fun temp15201_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp15201_10 () (_ BitVec 64))
(declare-fun temp15201_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp15201_12 () (_ BitVec 64))
(declare-fun temp15201_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp15201_14 () (_ BitVec 64))
(declare-fun temp15201_15 () (_ BitVec 64))
(declare-fun temp15201_16 () (_ BitVec 64))
(declare-fun temp15201_17 () (_ BitVec 64))
(declare-fun temp15201_18 () (_ BitVec 64))
(declare-fun temp15201_19 () (_ BitVec 64))
(declare-fun temp15201_20 () (_ BitVec 64))
(declare-fun temp15201_21 () (_ BitVec 64))
(declare-fun temp15201_22 () (_ BitVec 64))
(declare-fun temp15201_23 () (_ BitVec 64))
(declare-fun temp15201_24 () (_ BitVec 64))
(declare-fun temp15201_25 () (_ BitVec 64))
(declare-fun temp15201_26 () (_ BitVec 64))
(declare-fun temp15201_27 () (_ BitVec 64))
(declare-fun temp15201_28 () (_ BitVec 64))
(declare-fun temp15201_29 () (_ BitVec 64))
(declare-fun temp15201_31 () (_ BitVec 64))
(declare-fun temp15201_30 () (_ BitVec 64))
(declare-fun temp15201_32 () (_ BitVec 64))
(declare-fun temp15201_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp15201_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp15201_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp15201_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp15201_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp15201_39 () (_ BitVec 64))
(declare-fun temp15201_38 () (_ BitVec 64))
(declare-fun temp15201_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp15201_41 () (_ BitVec 64))
(declare-fun temp15201_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp15201_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp15201_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp15201_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp15201_47 () (_ BitVec 64))
(declare-fun temp15201_46 () (_ BitVec 64))
(declare-fun temp15201_49 () (_ BitVec 64))
(declare-fun temp15201_48 () (_ BitVec 64))
(declare-fun temp15201_51 () (_ BitVec 64))
(declare-fun temp15201_50 () (_ BitVec 64))
(declare-fun temp15201_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp15201_54 () (_ BitVec 64))
(declare-fun temp15201_53 () (_ BitVec 64))
(declare-fun temp15201_56 () (_ BitVec 64))
(declare-fun temp15201_55 () (_ BitVec 64))
(declare-fun temp15201_58 () (_ BitVec 64))
(declare-fun temp15201_57 () (_ BitVec 64))
(declare-fun temp15201_60 () (_ BitVec 64))
(declare-fun temp15201_59 () (_ BitVec 64))
(declare-fun temp15201_62 () (_ BitVec 64))
(declare-fun temp15201_61 () (_ BitVec 64))
(declare-fun temp15201_64 () (_ BitVec 64))
(declare-fun temp15201_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp15201_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp15201_67 () (_ BitVec 64))
(declare-fun temp15201_66 () (_ BitVec 64))
(declare-fun temp15201_69 () (_ BitVec 64))
(declare-fun temp15201_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp15201_71 () (_ BitVec 64))
(declare-fun temp15201_70 () (_ BitVec 64))
(declare-fun temp15201_73 () (_ BitVec 64))
(declare-fun temp15201_72 () (_ BitVec 64))
(declare-fun temp15201_75 () (_ BitVec 64))
(declare-fun temp15201_74 () (_ BitVec 64))
(declare-fun temp15201_77 () (_ BitVec 64))
(declare-fun temp15201_76 () (_ BitVec 64))
(declare-fun temp15201_79 () (_ BitVec 64))
(declare-fun temp15201_78 () (_ BitVec 64))
(declare-fun temp15201_81 () (_ BitVec 64))
(declare-fun temp15201_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp15201_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp15201_83 () (_ BitVec 64))
(declare-fun temp15201_84 () (_ BitVec 64))
(declare-fun var83537 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun temp15201_85 () (_ BitVec 64))
(declare-fun var6506834 () (_ BitVec 64))
(declare-fun temp15201_86 () (_ BitVec 64))
(declare-fun temp15201_87 () (_ BitVec 64))
(declare-fun var6506839 () (_ BitVec 64))
(declare-fun var6506845 () (_ BitVec 64))
(declare-fun var6506816 () (_ BitVec 64))
(declare-fun var83557 () (_ BitVec 64))
(declare-fun var6753268 () (_ BitVec 64))
(declare-fun temp15201_88 () (_ BitVec 64))
(declare-fun var6753272 () (_ BitVec 64))
(declare-fun temp15201_89 () (_ BitVec 64))
(declare-fun var6753310 () (_ BitVec 64))
(declare-fun temp15201_90 () (_ BitVec 64))
(declare-fun var6753322 () (_ BitVec 64))
(declare-fun temp15201_91 () (_ BitVec 64))
(declare-fun temp15201_92 () (_ BitVec 64))
(declare-fun var7539700 () (_ BitVec 64))
(declare-fun temp15201_93 () (_ BitVec 64))
(declare-fun var7539704 () (_ BitVec 64))
(declare-fun temp15201_94 () (_ BitVec 64))
(declare-fun var8997159 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun var83931 () (_ BitVec 64))
(declare-fun var83975 () (_ BitVec 64))
(declare-fun temp15201_95 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp15201_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp15201_1)))
(assert (= temp15201_2 #x0000000000000000))
(assert (= var1050945 temp15201_2))
(assert (= temp15201_3 #xffffffffffffffff))
(assert (= var67312 temp15201_3))
(assert (= temp15201_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp15201_4)))
(assert (= temp15201_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp15201_5)))
(assert (= temp15201_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp15201_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp15201_7 #x0000000000000000))
(assert (= var82187 temp15201_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15201_8 #x0000000000000000))
(assert (= var82356 temp15201_8))
(assert (= temp15201_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp15201_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15201_10 #x0000000000000001))
(assert (= var82528 temp15201_10))
(assert (= temp15201_11 #x0000000000000000))
(assert (= var65913 temp15201_11))
(assert (= temp15201_12 #x0000000000000000))
(assert (= temp15201_13 temp15201_12))
(assert (= temp15201_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp15201_13)))
(assert (= temp15201_15 #x0000000000000001))
(assert (= temp15201_16 temp15201_15))
(assert (= temp15201_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp15201_16)))
(assert (= temp15201_18 #x0000000000000002))
(assert (= temp15201_19 temp15201_18))
(assert (= temp15201_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp15201_19)))
(assert (= temp15201_21 #x0000000000000003))
(assert (= temp15201_22 temp15201_21))
(assert (= temp15201_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp15201_22)))
(assert (= temp15201_24 #x0000000000000004))
(assert (= temp15201_25 temp15201_24))
(assert (= temp15201_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp15201_25)))
(assert (= temp15201_27 #x0000000000000005))
(assert (= temp15201_28 temp15201_27))
(assert (= temp15201_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp15201_28)))
(assert (= temp15201_31 #x0000000000000000))
(assert (= temp15201_30
   (ite (bvslt var65913 temp15201_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp15201_32 temp15201_30))
(assert (= temp15201_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp15201_32)))
(assert (= var82530 temp15201_33))
(assert (bvslt temp15201_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp15201_34 #x0000000000000001))
(assert (= var82531 temp15201_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp15201_35 #x0000000000000001))
(assert (= var82728 temp15201_35))
(assert (= var1914351 var65913))
(assert (= temp15201_36 #x0000000000000001))
(assert (= var2115797 temp15201_36))
(assert (= temp15201_37 #x0000000000000002))
(assert (= var2115798 temp15201_37))
(assert (= temp15201_39 #x0000000000000000))
(assert (= temp15201_38 temp15201_39))
(assert (= temp15201_40 #x0000000000000000))
(assert (= var2628020 temp15201_40))
(assert (= temp15201_41 #x0000000000000001))
(assert (= temp15201_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp15201_41
        temp15201_42)))
(assert (= temp15201_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp15201_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp15201_44 #x0000000000000000))
(assert (= var3740377 temp15201_44))
(assert (= temp15201_45 #x0000000000000002))
(assert (= var69143 temp15201_45))
(assert (= temp15201_47 #x0000000000000001))
(assert (= temp15201_46 temp15201_47))
(assert (= temp15201_49 #x0000000000000001))
(assert (= temp15201_48 temp15201_49))
(assert (= temp15201_51 #x0000000000000003))
(assert (= temp15201_50 temp15201_51))
(assert (= temp15201_52 #x0000000000000001))
(assert (= var4212949 temp15201_52))
(assert (= var4212950 var69143))
(assert (= temp15201_54 #x0000000000000001))
(assert (= temp15201_53 temp15201_54))
(assert (= temp15201_56 #x0000000000000001))
(assert (= temp15201_55 temp15201_56))
(assert (= temp15201_58 #x0000000000000001))
(assert (= temp15201_57 temp15201_58))
(assert (= temp15201_60 #x0000000000000001))
(assert (= temp15201_59 temp15201_60))
(assert (= temp15201_62 #x0000000000000000))
(assert (= temp15201_61 temp15201_62))
(assert (= temp15201_64 #x0000000000000001))
(assert (= temp15201_63 temp15201_64))
(assert (= var4868391 var69143))
(assert (= temp15201_65 #x0000000000000002))
(assert (= var4983962 temp15201_65))
(assert (= temp15201_67 #x0000000000000001))
(assert (= temp15201_66 temp15201_67))
(assert (= temp15201_69 #x0000000000000001))
(assert (= temp15201_68 temp15201_69))
(assert (= var5453295 var65913))
(assert (= temp15201_71 #x0000000000000001))
(assert (= temp15201_70 temp15201_71))
(assert (= temp15201_73 #x0000000000000001))
(assert (= temp15201_72 temp15201_73))
(assert (= temp15201_75 #x0000000000000001))
(assert (= temp15201_74 temp15201_75))
(assert (= temp15201_77 #x0000000000000001))
(assert (= temp15201_76 temp15201_77))
(assert (= temp15201_79 #x0000000000000000))
(assert (= temp15201_78 temp15201_79))
(assert (= temp15201_81 #x0000000000000001))
(assert (= temp15201_80 temp15201_81))
(assert (= var6375719 var69143))
(assert (= temp15201_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp15201_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15201_83 #x0000000000000000))
(assert (= var83534 temp15201_83))
(assert (= temp15201_84 #x0000000000000002))
(assert (= var83537 (bvsdiv ARGNAME_n_fft_NAMEEND temp15201_84)))
(assert (= var83540 var83537))
(assert (= temp15201_85 #x0000000000000000))
(assert (= var6506834
   (ite (= ARGNAME_center_NAMEEND temp15201_85)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15201_86 #x0000000000000000))
(assert (= var6506834 temp15201_86))
(assert (= temp15201_87 #xfffffffffffffffe))
(assert (= var6506839 (bvsdiv ARGNAME_n_fft_NAMEEND temp15201_87)))
(assert (= var6506845 var6506839))
(assert (= var6506816 var6506845))
(assert (= var83557 var6506816))
(assert (= var6753268 var69143))
(assert (= temp15201_88 #x0000000000000001))
(assert (= var6753272 temp15201_88))
(assert (= temp15201_89 #x0000000000000000))
(assert (= var6753310 temp15201_89))
(assert (= temp15201_90 #x0000000000000000))
(assert (= var6753322 temp15201_90))
(assert (= temp15201_91 #x0000000000000000))
(assert (= var6753322 temp15201_91))
(assert (= temp15201_92 #x0000000000000000))
(assert (= var6753310 temp15201_92))
(assert (= var7539700 var69143))
(assert (= temp15201_93 #x0000000000000001))
(assert (= var7539704 temp15201_93))
(assert (= temp15201_94 #x0000000000000001))
(assert (= var8997159 temp15201_94))
(assert (= var9259303 var65913))
(assert (= var83931 var83557))
(assert (= var83975 var83557))
(assert (= temp15201_95 #x0000000000000000))
(assert (= var9505946 temp15201_95))
(model-add temp15201_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp15201_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp15201_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp15201_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp15201_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp15201_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp15201_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



