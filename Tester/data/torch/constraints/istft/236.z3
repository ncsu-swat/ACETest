(declare-fun temp506_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp506_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp506_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp506_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp506_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp506_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp506_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp506_8 () (_ BitVec 64))
(declare-fun temp506_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp506_10 () (_ BitVec 64))
(declare-fun temp506_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp506_12 () (_ BitVec 64))
(declare-fun temp506_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp506_14 () (_ BitVec 64))
(declare-fun temp506_15 () (_ BitVec 64))
(declare-fun temp506_16 () (_ BitVec 64))
(declare-fun temp506_17 () (_ BitVec 64))
(declare-fun temp506_18 () (_ BitVec 64))
(declare-fun temp506_19 () (_ BitVec 64))
(declare-fun temp506_20 () (_ BitVec 64))
(declare-fun temp506_21 () (_ BitVec 64))
(declare-fun temp506_22 () (_ BitVec 64))
(declare-fun temp506_23 () (_ BitVec 64))
(declare-fun temp506_24 () (_ BitVec 64))
(declare-fun temp506_25 () (_ BitVec 64))
(declare-fun temp506_26 () (_ BitVec 64))
(declare-fun temp506_27 () (_ BitVec 64))
(declare-fun temp506_28 () (_ BitVec 64))
(declare-fun temp506_29 () (_ BitVec 64))
(declare-fun temp506_31 () (_ BitVec 64))
(declare-fun temp506_30 () (_ BitVec 64))
(declare-fun temp506_32 () (_ BitVec 64))
(declare-fun temp506_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp506_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp506_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp506_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp506_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp506_39 () (_ BitVec 64))
(declare-fun temp506_38 () (_ BitVec 64))
(declare-fun temp506_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp506_41 () (_ BitVec 64))
(declare-fun temp506_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp506_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp506_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp506_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp506_47 () (_ BitVec 64))
(declare-fun temp506_46 () (_ BitVec 64))
(declare-fun temp506_49 () (_ BitVec 64))
(declare-fun temp506_48 () (_ BitVec 64))
(declare-fun temp506_51 () (_ BitVec 64))
(declare-fun temp506_50 () (_ BitVec 64))
(declare-fun temp506_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp506_54 () (_ BitVec 64))
(declare-fun temp506_53 () (_ BitVec 64))
(declare-fun temp506_56 () (_ BitVec 64))
(declare-fun temp506_55 () (_ BitVec 64))
(declare-fun temp506_58 () (_ BitVec 64))
(declare-fun temp506_57 () (_ BitVec 64))
(declare-fun temp506_60 () (_ BitVec 64))
(declare-fun temp506_59 () (_ BitVec 64))
(declare-fun temp506_62 () (_ BitVec 64))
(declare-fun temp506_61 () (_ BitVec 64))
(declare-fun temp506_64 () (_ BitVec 64))
(declare-fun temp506_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp506_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp506_67 () (_ BitVec 64))
(declare-fun temp506_66 () (_ BitVec 64))
(declare-fun temp506_69 () (_ BitVec 64))
(declare-fun temp506_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp506_71 () (_ BitVec 64))
(declare-fun temp506_70 () (_ BitVec 64))
(declare-fun temp506_73 () (_ BitVec 64))
(declare-fun temp506_72 () (_ BitVec 64))
(declare-fun temp506_75 () (_ BitVec 64))
(declare-fun temp506_74 () (_ BitVec 64))
(declare-fun temp506_77 () (_ BitVec 64))
(declare-fun temp506_76 () (_ BitVec 64))
(declare-fun temp506_79 () (_ BitVec 64))
(declare-fun temp506_78 () (_ BitVec 64))
(declare-fun temp506_81 () (_ BitVec 64))
(declare-fun temp506_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp506_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp506_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp506_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp506_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp506_86 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun temp506_87 () (_ BitVec 64))
(declare-fun var9440410 () (_ BitVec 64))
(assert (= temp506_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp506_1)))
(assert (= temp506_2 #x0000000000000000))
(assert (= var1050945 temp506_2))
(assert (= temp506_3 #xffffffffffffffff))
(assert (= var67312 temp506_3))
(assert (= temp506_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp506_4)))
(assert (= temp506_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp506_5)))
(assert (= temp506_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp506_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp506_7 #x0000000000000000))
(assert (= var82187 temp506_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_8 #x0000000000000000))
(assert (= var82356 temp506_8))
(assert (= temp506_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp506_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_10 #x0000000000000001))
(assert (= var82528 temp506_10))
(assert (= temp506_11 #x0000000000000000))
(assert (= var65913 temp506_11))
(assert (= temp506_12 #x0000000000000000))
(assert (= temp506_13 temp506_12))
(assert (= temp506_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp506_13)))
(assert (= temp506_15 #x0000000000000001))
(assert (= temp506_16 temp506_15))
(assert (= temp506_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp506_16)))
(assert (= temp506_18 #x0000000000000002))
(assert (= temp506_19 temp506_18))
(assert (= temp506_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp506_19)))
(assert (= temp506_21 #x0000000000000003))
(assert (= temp506_22 temp506_21))
(assert (= temp506_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp506_22)))
(assert (= temp506_24 #x0000000000000004))
(assert (= temp506_25 temp506_24))
(assert (= temp506_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp506_25)))
(assert (= temp506_27 #x0000000000000005))
(assert (= temp506_28 temp506_27))
(assert (= temp506_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp506_28)))
(assert (= temp506_31 #x0000000000000000))
(assert (= temp506_30
   (ite (bvslt var65913 temp506_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp506_32 temp506_30))
(assert (= temp506_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp506_32)))
(assert (= var82530 temp506_33))
(assert (bvslt temp506_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp506_34 #x0000000000000001))
(assert (= var82531 temp506_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp506_35 #x0000000000000001))
(assert (= var82728 temp506_35))
(assert (= var1914351 var65913))
(assert (= temp506_36 #x0000000000000001))
(assert (= var2115797 temp506_36))
(assert (= temp506_37 #x0000000000000002))
(assert (= var2115798 temp506_37))
(assert (= temp506_39 #x0000000000000000))
(assert (= temp506_38 temp506_39))
(assert (= temp506_40 #x0000000000000000))
(assert (= var2628020 temp506_40))
(assert (= temp506_41 #x0000000000000001))
(assert (= temp506_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp506_41 temp506_42)))
(assert (= temp506_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp506_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp506_44 #x0000000000000000))
(assert (= var3740377 temp506_44))
(assert (= temp506_45 #x0000000000000002))
(assert (= var69143 temp506_45))
(assert (= temp506_47 #x0000000000000001))
(assert (= temp506_46 temp506_47))
(assert (= temp506_49 #x0000000000000001))
(assert (= temp506_48 temp506_49))
(assert (= temp506_51 #x0000000000000003))
(assert (= temp506_50 temp506_51))
(assert (= temp506_52 #x0000000000000001))
(assert (= var4212949 temp506_52))
(assert (= var4212950 var69143))
(assert (= temp506_54 #x0000000000000001))
(assert (= temp506_53 temp506_54))
(assert (= temp506_56 #x0000000000000001))
(assert (= temp506_55 temp506_56))
(assert (= temp506_58 #x0000000000000001))
(assert (= temp506_57 temp506_58))
(assert (= temp506_60 #x0000000000000001))
(assert (= temp506_59 temp506_60))
(assert (= temp506_62 #x0000000000000000))
(assert (= temp506_61 temp506_62))
(assert (= temp506_64 #x0000000000000001))
(assert (= temp506_63 temp506_64))
(assert (= var4868391 var69143))
(assert (= temp506_65 #x0000000000000002))
(assert (= var4983962 temp506_65))
(assert (= temp506_67 #x0000000000000001))
(assert (= temp506_66 temp506_67))
(assert (= temp506_69 #x0000000000000001))
(assert (= temp506_68 temp506_69))
(assert (= var5453295 var65913))
(assert (= temp506_71 #x0000000000000001))
(assert (= temp506_70 temp506_71))
(assert (= temp506_73 #x0000000000000001))
(assert (= temp506_72 temp506_73))
(assert (= temp506_75 #x0000000000000001))
(assert (= temp506_74 temp506_75))
(assert (= temp506_77 #x0000000000000001))
(assert (= temp506_76 temp506_77))
(assert (= temp506_79 #x0000000000000000))
(assert (= temp506_78 temp506_79))
(assert (= temp506_81 #x0000000000000001))
(assert (= temp506_80 temp506_81))
(assert (= var6375719 var69143))
(assert (= temp506_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp506_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_83 #x0000000000000001))
(assert (= var83534 temp506_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp506_84 #x0000000000000001))
(assert (= var6818808 temp506_84))
(assert (= var7736308 var69143))
(assert (= temp506_85 #x0000000000000001))
(assert (= var7736312 temp506_85))
(assert (= temp506_86 #x0000000000000001))
(assert (= var9128231 temp506_86))
(assert (= temp506_87 #x0000000000000000))
(assert (= var9440410 temp506_87))
(model-add temp506_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp506_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp506_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp506_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp506_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp506_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp506_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




