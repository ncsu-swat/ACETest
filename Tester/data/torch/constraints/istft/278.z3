(declare-fun temp598_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp598_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp598_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp598_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp598_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp598_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp598_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp598_8 () (_ BitVec 64))
(declare-fun temp598_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp598_10 () (_ BitVec 64))
(declare-fun temp598_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp598_12 () (_ BitVec 64))
(declare-fun temp598_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp598_14 () (_ BitVec 64))
(declare-fun temp598_15 () (_ BitVec 64))
(declare-fun temp598_16 () (_ BitVec 64))
(declare-fun temp598_17 () (_ BitVec 64))
(declare-fun temp598_18 () (_ BitVec 64))
(declare-fun temp598_19 () (_ BitVec 64))
(declare-fun temp598_20 () (_ BitVec 64))
(declare-fun temp598_21 () (_ BitVec 64))
(declare-fun temp598_22 () (_ BitVec 64))
(declare-fun temp598_23 () (_ BitVec 64))
(declare-fun temp598_24 () (_ BitVec 64))
(declare-fun temp598_25 () (_ BitVec 64))
(declare-fun temp598_26 () (_ BitVec 64))
(declare-fun temp598_27 () (_ BitVec 64))
(declare-fun temp598_28 () (_ BitVec 64))
(declare-fun temp598_29 () (_ BitVec 64))
(declare-fun temp598_31 () (_ BitVec 64))
(declare-fun temp598_30 () (_ BitVec 64))
(declare-fun temp598_32 () (_ BitVec 64))
(declare-fun temp598_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp598_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp598_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp598_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp598_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp598_39 () (_ BitVec 64))
(declare-fun temp598_38 () (_ BitVec 64))
(declare-fun temp598_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp598_41 () (_ BitVec 64))
(declare-fun temp598_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp598_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp598_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp598_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp598_47 () (_ BitVec 64))
(declare-fun temp598_46 () (_ BitVec 64))
(declare-fun temp598_49 () (_ BitVec 64))
(declare-fun temp598_48 () (_ BitVec 64))
(declare-fun temp598_51 () (_ BitVec 64))
(declare-fun temp598_50 () (_ BitVec 64))
(declare-fun temp598_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp598_54 () (_ BitVec 64))
(declare-fun temp598_53 () (_ BitVec 64))
(declare-fun temp598_56 () (_ BitVec 64))
(declare-fun temp598_55 () (_ BitVec 64))
(declare-fun temp598_58 () (_ BitVec 64))
(declare-fun temp598_57 () (_ BitVec 64))
(declare-fun temp598_60 () (_ BitVec 64))
(declare-fun temp598_59 () (_ BitVec 64))
(declare-fun temp598_62 () (_ BitVec 64))
(declare-fun temp598_61 () (_ BitVec 64))
(declare-fun temp598_64 () (_ BitVec 64))
(declare-fun temp598_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp598_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp598_67 () (_ BitVec 64))
(declare-fun temp598_66 () (_ BitVec 64))
(declare-fun temp598_69 () (_ BitVec 64))
(declare-fun temp598_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp598_71 () (_ BitVec 64))
(declare-fun temp598_70 () (_ BitVec 64))
(declare-fun temp598_73 () (_ BitVec 64))
(declare-fun temp598_72 () (_ BitVec 64))
(declare-fun temp598_75 () (_ BitVec 64))
(declare-fun temp598_74 () (_ BitVec 64))
(declare-fun temp598_77 () (_ BitVec 64))
(declare-fun temp598_76 () (_ BitVec 64))
(declare-fun temp598_79 () (_ BitVec 64))
(declare-fun temp598_78 () (_ BitVec 64))
(declare-fun temp598_81 () (_ BitVec 64))
(declare-fun temp598_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp598_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp598_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp598_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp598_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp598_86 () (_ BitVec 64))
(declare-fun var7736350 () (_ BitVec 64))
(declare-fun temp598_87 () (_ BitVec 64))
(declare-fun temp598_88 () (_ BitVec 64))
(declare-fun var8997159 () (_ BitVec 64))
(declare-fun temp598_89 () (_ BitVec 64))
(declare-fun var9309338 () (_ BitVec 64))
(assert (= temp598_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp598_1)))
(assert (= temp598_2 #x0000000000000000))
(assert (= var1050945 temp598_2))
(assert (= temp598_3 #xffffffffffffffff))
(assert (= var67312 temp598_3))
(assert (= temp598_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp598_4)))
(assert (= temp598_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp598_5)))
(assert (= temp598_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp598_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp598_7 #x0000000000000000))
(assert (= var82187 temp598_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp598_8 #x0000000000000000))
(assert (= var82356 temp598_8))
(assert (= temp598_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp598_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp598_10 #x0000000000000001))
(assert (= var82528 temp598_10))
(assert (= temp598_11 #x0000000000000000))
(assert (= var65913 temp598_11))
(assert (= temp598_12 #x0000000000000000))
(assert (= temp598_13 temp598_12))
(assert (= temp598_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp598_13)))
(assert (= temp598_15 #x0000000000000001))
(assert (= temp598_16 temp598_15))
(assert (= temp598_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp598_16)))
(assert (= temp598_18 #x0000000000000002))
(assert (= temp598_19 temp598_18))
(assert (= temp598_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp598_19)))
(assert (= temp598_21 #x0000000000000003))
(assert (= temp598_22 temp598_21))
(assert (= temp598_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp598_22)))
(assert (= temp598_24 #x0000000000000004))
(assert (= temp598_25 temp598_24))
(assert (= temp598_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp598_25)))
(assert (= temp598_27 #x0000000000000005))
(assert (= temp598_28 temp598_27))
(assert (= temp598_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp598_28)))
(assert (= temp598_31 #x0000000000000000))
(assert (= temp598_30
   (ite (bvslt var65913 temp598_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp598_32 temp598_30))
(assert (= temp598_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp598_32)))
(assert (= var82530 temp598_33))
(assert (bvslt temp598_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp598_34 #x0000000000000001))
(assert (= var82531 temp598_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp598_35 #x0000000000000001))
(assert (= var82728 temp598_35))
(assert (= var1914351 var65913))
(assert (= temp598_36 #x0000000000000001))
(assert (= var2115797 temp598_36))
(assert (= temp598_37 #x0000000000000002))
(assert (= var2115798 temp598_37))
(assert (= temp598_39 #x0000000000000000))
(assert (= temp598_38 temp598_39))
(assert (= temp598_40 #x0000000000000000))
(assert (= var2628020 temp598_40))
(assert (= temp598_41 #x0000000000000001))
(assert (= temp598_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp598_41 temp598_42)))
(assert (= temp598_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp598_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp598_44 #x0000000000000000))
(assert (= var3740377 temp598_44))
(assert (= temp598_45 #x0000000000000002))
(assert (= var69143 temp598_45))
(assert (= temp598_47 #x0000000000000001))
(assert (= temp598_46 temp598_47))
(assert (= temp598_49 #x0000000000000001))
(assert (= temp598_48 temp598_49))
(assert (= temp598_51 #x0000000000000003))
(assert (= temp598_50 temp598_51))
(assert (= temp598_52 #x0000000000000001))
(assert (= var4212949 temp598_52))
(assert (= var4212950 var69143))
(assert (= temp598_54 #x0000000000000001))
(assert (= temp598_53 temp598_54))
(assert (= temp598_56 #x0000000000000001))
(assert (= temp598_55 temp598_56))
(assert (= temp598_58 #x0000000000000001))
(assert (= temp598_57 temp598_58))
(assert (= temp598_60 #x0000000000000001))
(assert (= temp598_59 temp598_60))
(assert (= temp598_62 #x0000000000000000))
(assert (= temp598_61 temp598_62))
(assert (= temp598_64 #x0000000000000001))
(assert (= temp598_63 temp598_64))
(assert (= var4868391 var69143))
(assert (= temp598_65 #x0000000000000002))
(assert (= var4983962 temp598_65))
(assert (= temp598_67 #x0000000000000001))
(assert (= temp598_66 temp598_67))
(assert (= temp598_69 #x0000000000000001))
(assert (= temp598_68 temp598_69))
(assert (= var5453295 var65913))
(assert (= temp598_71 #x0000000000000001))
(assert (= temp598_70 temp598_71))
(assert (= temp598_73 #x0000000000000001))
(assert (= temp598_72 temp598_73))
(assert (= temp598_75 #x0000000000000001))
(assert (= temp598_74 temp598_75))
(assert (= temp598_77 #x0000000000000001))
(assert (= temp598_76 temp598_77))
(assert (= temp598_79 #x0000000000000000))
(assert (= temp598_78 temp598_79))
(assert (= temp598_81 #x0000000000000001))
(assert (= temp598_80 temp598_81))
(assert (= var6375719 var69143))
(assert (= temp598_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp598_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp598_83 #x0000000000000001))
(assert (= var83534 temp598_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp598_84 #x0000000000000001))
(assert (= var6818808 temp598_84))
(assert (= var7736308 var69143))
(assert (= temp598_85 #x0000000000000001))
(assert (= var7736312 temp598_85))
(assert (= temp598_86 #x0000000000000000))
(assert (= var7736350 temp598_86))
(assert (= temp598_87 #x0000000000000000))
(assert (= var7736350 temp598_87))
(assert (= temp598_88 #x0000000000000001))
(assert (= var8997159 temp598_88))
(assert (= temp598_89 #x0000000000000000))
(assert (= var9309338 temp598_89))
(model-add temp598_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp598_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp598_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp598_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp598_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp598_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp598_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






