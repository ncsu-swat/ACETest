(declare-fun temp2813_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp2813_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp2813_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp2813_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp2813_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp2813_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp2813_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp2813_8 () (_ BitVec 64))
(declare-fun temp2813_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp2813_10 () (_ BitVec 64))
(declare-fun temp2813_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp2813_12 () (_ BitVec 64))
(declare-fun temp2813_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2813_14 () (_ BitVec 64))
(declare-fun temp2813_15 () (_ BitVec 64))
(declare-fun temp2813_16 () (_ BitVec 64))
(declare-fun temp2813_17 () (_ BitVec 64))
(declare-fun temp2813_18 () (_ BitVec 64))
(declare-fun temp2813_19 () (_ BitVec 64))
(declare-fun temp2813_20 () (_ BitVec 64))
(declare-fun temp2813_21 () (_ BitVec 64))
(declare-fun temp2813_22 () (_ BitVec 64))
(declare-fun temp2813_23 () (_ BitVec 64))
(declare-fun temp2813_24 () (_ BitVec 64))
(declare-fun temp2813_25 () (_ BitVec 64))
(declare-fun temp2813_26 () (_ BitVec 64))
(declare-fun temp2813_27 () (_ BitVec 64))
(declare-fun temp2813_28 () (_ BitVec 64))
(declare-fun temp2813_29 () (_ BitVec 64))
(declare-fun temp2813_31 () (_ BitVec 64))
(declare-fun temp2813_30 () (_ BitVec 64))
(declare-fun temp2813_32 () (_ BitVec 64))
(declare-fun temp2813_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp2813_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp2813_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp2813_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp2813_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp2813_39 () (_ BitVec 64))
(declare-fun temp2813_38 () (_ BitVec 64))
(declare-fun temp2813_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp2813_41 () (_ BitVec 64))
(declare-fun temp2813_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp2813_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp2813_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp2813_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp2813_47 () (_ BitVec 64))
(declare-fun temp2813_46 () (_ BitVec 64))
(declare-fun temp2813_49 () (_ BitVec 64))
(declare-fun temp2813_48 () (_ BitVec 64))
(declare-fun temp2813_51 () (_ BitVec 64))
(declare-fun temp2813_50 () (_ BitVec 64))
(declare-fun temp2813_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp2813_54 () (_ BitVec 64))
(declare-fun temp2813_53 () (_ BitVec 64))
(declare-fun temp2813_56 () (_ BitVec 64))
(declare-fun temp2813_55 () (_ BitVec 64))
(declare-fun temp2813_58 () (_ BitVec 64))
(declare-fun temp2813_57 () (_ BitVec 64))
(declare-fun temp2813_60 () (_ BitVec 64))
(declare-fun temp2813_59 () (_ BitVec 64))
(declare-fun temp2813_62 () (_ BitVec 64))
(declare-fun temp2813_61 () (_ BitVec 64))
(declare-fun temp2813_64 () (_ BitVec 64))
(declare-fun temp2813_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp2813_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp2813_67 () (_ BitVec 64))
(declare-fun temp2813_66 () (_ BitVec 64))
(declare-fun temp2813_69 () (_ BitVec 64))
(declare-fun temp2813_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp2813_71 () (_ BitVec 64))
(declare-fun temp2813_70 () (_ BitVec 64))
(declare-fun temp2813_73 () (_ BitVec 64))
(declare-fun temp2813_72 () (_ BitVec 64))
(declare-fun temp2813_75 () (_ BitVec 64))
(declare-fun temp2813_74 () (_ BitVec 64))
(declare-fun temp2813_77 () (_ BitVec 64))
(declare-fun temp2813_76 () (_ BitVec 64))
(declare-fun temp2813_79 () (_ BitVec 64))
(declare-fun temp2813_78 () (_ BitVec 64))
(declare-fun temp2813_81 () (_ BitVec 64))
(declare-fun temp2813_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp2813_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp2813_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun temp2813_84 () (_ BitVec 64))
(declare-fun var6506834 () (_ BitVec 64))
(declare-fun temp2813_85 () (_ BitVec 64))
(declare-fun var6753268 () (_ BitVec 64))
(declare-fun temp2813_86 () (_ BitVec 64))
(declare-fun var6753272 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp2813_87 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp2813_88 () (_ BitVec 64))
(declare-fun var7736350 () (_ BitVec 64))
(declare-fun temp2813_89 () (_ BitVec 64))
(declare-fun temp2813_90 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun temp2813_91 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp2813_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp2813_1)))
(assert (= temp2813_2 #x0000000000000000))
(assert (= var1050945 temp2813_2))
(assert (= temp2813_3 #xffffffffffffffff))
(assert (= var67312 temp2813_3))
(assert (= temp2813_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp2813_4)))
(assert (= temp2813_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp2813_5)))
(assert (= temp2813_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp2813_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp2813_7 #x0000000000000000))
(assert (= var82187 temp2813_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2813_8 #x0000000000000000))
(assert (= var82356 temp2813_8))
(assert (= temp2813_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp2813_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2813_10 #x0000000000000001))
(assert (= var82528 temp2813_10))
(assert (= temp2813_11 #x0000000000000000))
(assert (= var65913 temp2813_11))
(assert (= temp2813_12 #x0000000000000000))
(assert (= temp2813_13 temp2813_12))
(assert (= temp2813_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp2813_13)))
(assert (= temp2813_15 #x0000000000000001))
(assert (= temp2813_16 temp2813_15))
(assert (= temp2813_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp2813_16)))
(assert (= temp2813_18 #x0000000000000002))
(assert (= temp2813_19 temp2813_18))
(assert (= temp2813_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp2813_19)))
(assert (= temp2813_21 #x0000000000000003))
(assert (= temp2813_22 temp2813_21))
(assert (= temp2813_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp2813_22)))
(assert (= temp2813_24 #x0000000000000004))
(assert (= temp2813_25 temp2813_24))
(assert (= temp2813_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp2813_25)))
(assert (= temp2813_27 #x0000000000000005))
(assert (= temp2813_28 temp2813_27))
(assert (= temp2813_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp2813_28)))
(assert (= temp2813_31 #x0000000000000000))
(assert (= temp2813_30
   (ite (bvslt var65913 temp2813_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp2813_32 temp2813_30))
(assert (= temp2813_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp2813_32)))
(assert (= var82530 temp2813_33))
(assert (bvslt temp2813_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp2813_34 #x0000000000000001))
(assert (= var82531 temp2813_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp2813_35 #x0000000000000001))
(assert (= var82728 temp2813_35))
(assert (= var1914351 var65913))
(assert (= temp2813_36 #x0000000000000001))
(assert (= var2115797 temp2813_36))
(assert (= temp2813_37 #x0000000000000002))
(assert (= var2115798 temp2813_37))
(assert (= temp2813_39 #x0000000000000000))
(assert (= temp2813_38 temp2813_39))
(assert (= temp2813_40 #x0000000000000000))
(assert (= var2628020 temp2813_40))
(assert (= temp2813_41 #x0000000000000001))
(assert (= temp2813_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp2813_41
        temp2813_42)))
(assert (= temp2813_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp2813_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp2813_44 #x0000000000000000))
(assert (= var3740377 temp2813_44))
(assert (= temp2813_45 #x0000000000000002))
(assert (= var69143 temp2813_45))
(assert (= temp2813_47 #x0000000000000001))
(assert (= temp2813_46 temp2813_47))
(assert (= temp2813_49 #x0000000000000001))
(assert (= temp2813_48 temp2813_49))
(assert (= temp2813_51 #x0000000000000003))
(assert (= temp2813_50 temp2813_51))
(assert (= temp2813_52 #x0000000000000001))
(assert (= var4212949 temp2813_52))
(assert (= var4212950 var69143))
(assert (= temp2813_54 #x0000000000000001))
(assert (= temp2813_53 temp2813_54))
(assert (= temp2813_56 #x0000000000000001))
(assert (= temp2813_55 temp2813_56))
(assert (= temp2813_58 #x0000000000000001))
(assert (= temp2813_57 temp2813_58))
(assert (= temp2813_60 #x0000000000000001))
(assert (= temp2813_59 temp2813_60))
(assert (= temp2813_62 #x0000000000000000))
(assert (= temp2813_61 temp2813_62))
(assert (= temp2813_64 #x0000000000000001))
(assert (= temp2813_63 temp2813_64))
(assert (= var4868391 var69143))
(assert (= temp2813_65 #x0000000000000002))
(assert (= var4983962 temp2813_65))
(assert (= temp2813_67 #x0000000000000001))
(assert (= temp2813_66 temp2813_67))
(assert (= temp2813_69 #x0000000000000001))
(assert (= temp2813_68 temp2813_69))
(assert (= var5453295 var65913))
(assert (= temp2813_71 #x0000000000000001))
(assert (= temp2813_70 temp2813_71))
(assert (= temp2813_73 #x0000000000000001))
(assert (= temp2813_72 temp2813_73))
(assert (= temp2813_75 #x0000000000000001))
(assert (= temp2813_74 temp2813_75))
(assert (= temp2813_77 #x0000000000000001))
(assert (= temp2813_76 temp2813_77))
(assert (= temp2813_79 #x0000000000000000))
(assert (= temp2813_78 temp2813_79))
(assert (= temp2813_81 #x0000000000000001))
(assert (= temp2813_80 temp2813_81))
(assert (= var6375719 var69143))
(assert (= temp2813_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp2813_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2813_83 #x0000000000000001))
(assert (= var83534 temp2813_83))
(assert (= var83540 var65913))
(assert (= temp2813_84 #x0000000000000000))
(assert (= var6506834
   (ite (= ARGNAME_center_NAMEEND temp2813_84)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2813_85 #x0000000000000001))
(assert (= var6506834 temp2813_85))
(assert (= var6753268 var69143))
(assert (= temp2813_86 #x0000000000000001))
(assert (= var6753272 temp2813_86))
(assert (= var7736308 var69143))
(assert (= temp2813_87 #x0000000000000001))
(assert (= var7736312 temp2813_87))
(assert (= temp2813_88 #x0000000000000000))
(assert (= var7736350 temp2813_88))
(assert (= temp2813_89 #x0000000000000000))
(assert (= var7736350 temp2813_89))
(assert (= temp2813_90 #x0000000000000001))
(assert (= var9062695 temp2813_90))
(assert (= var9324839 var65913))
(assert (= temp2813_91 #x0000000000000000))
(assert (= var9571482 temp2813_91))
(model-add temp2813_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp2813_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp2813_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp2813_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp2813_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp2813_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp2813_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




