(declare-fun temp168_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp168_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp168_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp168_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp168_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp168_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp168_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp168_8 () (_ BitVec 64))
(declare-fun temp168_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp168_10 () (_ BitVec 64))
(declare-fun temp168_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp168_12 () (_ BitVec 64))
(declare-fun temp168_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp168_14 () (_ BitVec 64))
(declare-fun temp168_15 () (_ BitVec 64))
(declare-fun temp168_16 () (_ BitVec 64))
(declare-fun temp168_17 () (_ BitVec 64))
(declare-fun temp168_18 () (_ BitVec 64))
(declare-fun temp168_19 () (_ BitVec 64))
(declare-fun temp168_20 () (_ BitVec 64))
(declare-fun temp168_21 () (_ BitVec 64))
(declare-fun temp168_22 () (_ BitVec 64))
(declare-fun temp168_23 () (_ BitVec 64))
(declare-fun temp168_24 () (_ BitVec 64))
(declare-fun temp168_25 () (_ BitVec 64))
(declare-fun temp168_26 () (_ BitVec 64))
(declare-fun temp168_27 () (_ BitVec 64))
(declare-fun temp168_28 () (_ BitVec 64))
(declare-fun temp168_29 () (_ BitVec 64))
(declare-fun temp168_31 () (_ BitVec 64))
(declare-fun temp168_30 () (_ BitVec 64))
(declare-fun temp168_32 () (_ BitVec 64))
(declare-fun temp168_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp168_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp168_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp168_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp168_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp168_39 () (_ BitVec 64))
(declare-fun temp168_38 () (_ BitVec 64))
(declare-fun temp168_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp168_41 () (_ BitVec 64))
(declare-fun temp168_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp168_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp168_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp168_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp168_47 () (_ BitVec 64))
(declare-fun temp168_46 () (_ BitVec 64))
(declare-fun temp168_49 () (_ BitVec 64))
(declare-fun temp168_48 () (_ BitVec 64))
(declare-fun temp168_51 () (_ BitVec 64))
(declare-fun temp168_50 () (_ BitVec 64))
(declare-fun temp168_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp168_54 () (_ BitVec 64))
(declare-fun temp168_53 () (_ BitVec 64))
(declare-fun temp168_56 () (_ BitVec 64))
(declare-fun temp168_55 () (_ BitVec 64))
(declare-fun temp168_58 () (_ BitVec 64))
(declare-fun temp168_57 () (_ BitVec 64))
(declare-fun temp168_60 () (_ BitVec 64))
(declare-fun temp168_59 () (_ BitVec 64))
(declare-fun temp168_62 () (_ BitVec 64))
(declare-fun temp168_61 () (_ BitVec 64))
(declare-fun temp168_64 () (_ BitVec 64))
(declare-fun temp168_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp168_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp168_67 () (_ BitVec 64))
(declare-fun temp168_66 () (_ BitVec 64))
(declare-fun temp168_69 () (_ BitVec 64))
(declare-fun temp168_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp168_71 () (_ BitVec 64))
(declare-fun temp168_70 () (_ BitVec 64))
(declare-fun temp168_73 () (_ BitVec 64))
(declare-fun temp168_72 () (_ BitVec 64))
(declare-fun temp168_75 () (_ BitVec 64))
(declare-fun temp168_74 () (_ BitVec 64))
(declare-fun temp168_77 () (_ BitVec 64))
(declare-fun temp168_76 () (_ BitVec 64))
(declare-fun temp168_79 () (_ BitVec 64))
(declare-fun temp168_78 () (_ BitVec 64))
(declare-fun temp168_81 () (_ BitVec 64))
(declare-fun temp168_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp168_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp168_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp168_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp168_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp168_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun temp168_87 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp168_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp168_1)))
(assert (= temp168_2 #x0000000000000000))
(assert (= var1050945 temp168_2))
(assert (= temp168_3 #xffffffffffffffff))
(assert (= var67312 temp168_3))
(assert (= temp168_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp168_4)))
(assert (= temp168_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp168_5)))
(assert (= temp168_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp168_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp168_7 #x0000000000000000))
(assert (= var82187 temp168_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_8 #x0000000000000000))
(assert (= var82356 temp168_8))
(assert (= temp168_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp168_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_10 #x0000000000000001))
(assert (= var82528 temp168_10))
(assert (= temp168_11 #x0000000000000000))
(assert (= var65913 temp168_11))
(assert (= temp168_12 #x0000000000000000))
(assert (= temp168_13 temp168_12))
(assert (= temp168_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp168_13)))
(assert (= temp168_15 #x0000000000000001))
(assert (= temp168_16 temp168_15))
(assert (= temp168_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp168_16)))
(assert (= temp168_18 #x0000000000000002))
(assert (= temp168_19 temp168_18))
(assert (= temp168_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp168_19)))
(assert (= temp168_21 #x0000000000000003))
(assert (= temp168_22 temp168_21))
(assert (= temp168_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp168_22)))
(assert (= temp168_24 #x0000000000000004))
(assert (= temp168_25 temp168_24))
(assert (= temp168_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp168_25)))
(assert (= temp168_27 #x0000000000000005))
(assert (= temp168_28 temp168_27))
(assert (= temp168_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp168_28)))
(assert (= temp168_31 #x0000000000000000))
(assert (= temp168_30
   (ite (bvslt var65913 temp168_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp168_32 temp168_30))
(assert (= temp168_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp168_32)))
(assert (= var82530 temp168_33))
(assert (bvslt temp168_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_34 #x0000000000000001))
(assert (= var82531 temp168_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_35 #x0000000000000001))
(assert (= var82728 temp168_35))
(assert (= var1914351 var65913))
(assert (= temp168_36 #x0000000000000001))
(assert (= var2115797 temp168_36))
(assert (= temp168_37 #x0000000000000002))
(assert (= var2115798 temp168_37))
(assert (= temp168_39 #x0000000000000000))
(assert (= temp168_38 temp168_39))
(assert (= temp168_40 #x0000000000000000))
(assert (= var2628020 temp168_40))
(assert (= temp168_41 #x0000000000000001))
(assert (= temp168_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp168_41 temp168_42)))
(assert (= temp168_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp168_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp168_44 #x0000000000000000))
(assert (= var3740377 temp168_44))
(assert (= temp168_45 #x0000000000000002))
(assert (= var69143 temp168_45))
(assert (= temp168_47 #x0000000000000001))
(assert (= temp168_46 temp168_47))
(assert (= temp168_49 #x0000000000000001))
(assert (= temp168_48 temp168_49))
(assert (= temp168_51 #x0000000000000003))
(assert (= temp168_50 temp168_51))
(assert (= temp168_52 #x0000000000000001))
(assert (= var4212949 temp168_52))
(assert (= var4212950 var69143))
(assert (= temp168_54 #x0000000000000001))
(assert (= temp168_53 temp168_54))
(assert (= temp168_56 #x0000000000000001))
(assert (= temp168_55 temp168_56))
(assert (= temp168_58 #x0000000000000001))
(assert (= temp168_57 temp168_58))
(assert (= temp168_60 #x0000000000000001))
(assert (= temp168_59 temp168_60))
(assert (= temp168_62 #x0000000000000000))
(assert (= temp168_61 temp168_62))
(assert (= temp168_64 #x0000000000000001))
(assert (= temp168_63 temp168_64))
(assert (= var4868391 var69143))
(assert (= temp168_65 #x0000000000000002))
(assert (= var4983962 temp168_65))
(assert (= temp168_67 #x0000000000000001))
(assert (= temp168_66 temp168_67))
(assert (= temp168_69 #x0000000000000001))
(assert (= temp168_68 temp168_69))
(assert (= var5453295 var65913))
(assert (= temp168_71 #x0000000000000001))
(assert (= temp168_70 temp168_71))
(assert (= temp168_73 #x0000000000000001))
(assert (= temp168_72 temp168_73))
(assert (= temp168_75 #x0000000000000001))
(assert (= temp168_74 temp168_75))
(assert (= temp168_77 #x0000000000000001))
(assert (= temp168_76 temp168_77))
(assert (= temp168_79 #x0000000000000000))
(assert (= temp168_78 temp168_79))
(assert (= temp168_81 #x0000000000000001))
(assert (= temp168_80 temp168_81))
(assert (= var6375719 var69143))
(assert (= temp168_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp168_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_83 #x0000000000000001))
(assert (= var83534 temp168_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp168_84 #x0000000000000001))
(assert (= var6818808 temp168_84))
(assert (= var7801844 var69143))
(assert (= temp168_85 #x0000000000000001))
(assert (= var7801848 temp168_85))
(assert (= temp168_86 #x0000000000000001))
(assert (= var9259303 temp168_86))
(assert (= temp168_87 #x0000000000000000))
(assert (= var9571482 temp168_87))
(model-add temp168_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp168_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp168_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp168_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp168_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp168_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp168_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




