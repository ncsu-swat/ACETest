(declare-fun temp33_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp33_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp33_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp33_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp33_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp33_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp33_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp33_8 () (_ BitVec 64))
(declare-fun temp33_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp33_10 () (_ BitVec 64))
(declare-fun temp33_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp33_12 () (_ BitVec 64))
(declare-fun temp33_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp33_14 () (_ BitVec 64))
(declare-fun temp33_15 () (_ BitVec 64))
(declare-fun temp33_16 () (_ BitVec 64))
(declare-fun temp33_17 () (_ BitVec 64))
(declare-fun temp33_18 () (_ BitVec 64))
(declare-fun temp33_19 () (_ BitVec 64))
(declare-fun temp33_20 () (_ BitVec 64))
(declare-fun temp33_21 () (_ BitVec 64))
(declare-fun temp33_22 () (_ BitVec 64))
(declare-fun temp33_23 () (_ BitVec 64))
(declare-fun temp33_24 () (_ BitVec 64))
(declare-fun temp33_25 () (_ BitVec 64))
(declare-fun temp33_26 () (_ BitVec 64))
(declare-fun temp33_27 () (_ BitVec 64))
(declare-fun temp33_28 () (_ BitVec 64))
(declare-fun temp33_29 () (_ BitVec 64))
(declare-fun temp33_31 () (_ BitVec 64))
(declare-fun temp33_30 () (_ BitVec 64))
(declare-fun temp33_32 () (_ BitVec 64))
(declare-fun temp33_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp33_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp33_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp33_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp33_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp33_39 () (_ BitVec 64))
(declare-fun temp33_38 () (_ BitVec 64))
(declare-fun temp33_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp33_41 () (_ BitVec 64))
(declare-fun temp33_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp33_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp33_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp33_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp33_47 () (_ BitVec 64))
(declare-fun temp33_46 () (_ BitVec 64))
(declare-fun temp33_49 () (_ BitVec 64))
(declare-fun temp33_48 () (_ BitVec 64))
(declare-fun temp33_51 () (_ BitVec 64))
(declare-fun temp33_50 () (_ BitVec 64))
(declare-fun temp33_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp33_54 () (_ BitVec 64))
(declare-fun temp33_53 () (_ BitVec 64))
(declare-fun temp33_56 () (_ BitVec 64))
(declare-fun temp33_55 () (_ BitVec 64))
(declare-fun temp33_58 () (_ BitVec 64))
(declare-fun temp33_57 () (_ BitVec 64))
(declare-fun temp33_60 () (_ BitVec 64))
(declare-fun temp33_59 () (_ BitVec 64))
(declare-fun temp33_62 () (_ BitVec 64))
(declare-fun temp33_61 () (_ BitVec 64))
(declare-fun temp33_64 () (_ BitVec 64))
(declare-fun temp33_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp33_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp33_67 () (_ BitVec 64))
(declare-fun temp33_66 () (_ BitVec 64))
(declare-fun temp33_69 () (_ BitVec 64))
(declare-fun temp33_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp33_71 () (_ BitVec 64))
(declare-fun temp33_70 () (_ BitVec 64))
(declare-fun temp33_73 () (_ BitVec 64))
(declare-fun temp33_72 () (_ BitVec 64))
(declare-fun temp33_75 () (_ BitVec 64))
(declare-fun temp33_74 () (_ BitVec 64))
(declare-fun temp33_77 () (_ BitVec 64))
(declare-fun temp33_76 () (_ BitVec 64))
(declare-fun temp33_79 () (_ BitVec 64))
(declare-fun temp33_78 () (_ BitVec 64))
(declare-fun temp33_81 () (_ BitVec 64))
(declare-fun temp33_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp33_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp33_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp33_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp33_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp33_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp33_87 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp33_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp33_1)))
(assert (= temp33_2 #x0000000000000000))
(assert (= var1050945 temp33_2))
(assert (= temp33_3 #xffffffffffffffff))
(assert (= var67312 temp33_3))
(assert (= temp33_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp33_4)))
(assert (= temp33_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp33_5)))
(assert (= temp33_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp33_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp33_7 #x0000000000000000))
(assert (= var82187 temp33_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp33_8 #x0000000000000000))
(assert (= var82356 temp33_8))
(assert (= temp33_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp33_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp33_10 #x0000000000000001))
(assert (= var82528 temp33_10))
(assert (= temp33_11 #x0000000000000000))
(assert (= var65913 temp33_11))
(assert (= temp33_12 #x0000000000000000))
(assert (= temp33_13 temp33_12))
(assert (= temp33_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp33_13)))
(assert (= temp33_15 #x0000000000000001))
(assert (= temp33_16 temp33_15))
(assert (= temp33_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp33_16)))
(assert (= temp33_18 #x0000000000000002))
(assert (= temp33_19 temp33_18))
(assert (= temp33_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp33_19)))
(assert (= temp33_21 #x0000000000000003))
(assert (= temp33_22 temp33_21))
(assert (= temp33_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp33_22)))
(assert (= temp33_24 #x0000000000000004))
(assert (= temp33_25 temp33_24))
(assert (= temp33_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp33_25)))
(assert (= temp33_27 #x0000000000000005))
(assert (= temp33_28 temp33_27))
(assert (= temp33_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp33_28)))
(assert (= temp33_31 #x0000000000000000))
(assert (= temp33_30
   (ite (bvslt var65913 temp33_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp33_32 temp33_30))
(assert (= temp33_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp33_32)))
(assert (= var82530 temp33_33))
(assert (bvslt temp33_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp33_34 #x0000000000000001))
(assert (= var82531 temp33_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp33_35 #x0000000000000001))
(assert (= var82728 temp33_35))
(assert (= var1914351 var65913))
(assert (= temp33_36 #x0000000000000001))
(assert (= var2115797 temp33_36))
(assert (= temp33_37 #x0000000000000002))
(assert (= var2115798 temp33_37))
(assert (= temp33_39 #x0000000000000000))
(assert (= temp33_38 temp33_39))
(assert (= temp33_40 #x0000000000000000))
(assert (= var2628020 temp33_40))
(assert (= temp33_41 #x0000000000000001))
(assert (= temp33_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp33_41 temp33_42)))
(assert (= temp33_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp33_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp33_44 #x0000000000000000))
(assert (= var3740377 temp33_44))
(assert (= temp33_45 #x0000000000000002))
(assert (= var69143 temp33_45))
(assert (= temp33_47 #x0000000000000001))
(assert (= temp33_46 temp33_47))
(assert (= temp33_49 #x0000000000000001))
(assert (= temp33_48 temp33_49))
(assert (= temp33_51 #x0000000000000003))
(assert (= temp33_50 temp33_51))
(assert (= temp33_52 #x0000000000000001))
(assert (= var4212949 temp33_52))
(assert (= var4212950 var69143))
(assert (= temp33_54 #x0000000000000001))
(assert (= temp33_53 temp33_54))
(assert (= temp33_56 #x0000000000000001))
(assert (= temp33_55 temp33_56))
(assert (= temp33_58 #x0000000000000001))
(assert (= temp33_57 temp33_58))
(assert (= temp33_60 #x0000000000000001))
(assert (= temp33_59 temp33_60))
(assert (= temp33_62 #x0000000000000000))
(assert (= temp33_61 temp33_62))
(assert (= temp33_64 #x0000000000000001))
(assert (= temp33_63 temp33_64))
(assert (= var4868391 var69143))
(assert (= temp33_65 #x0000000000000002))
(assert (= var4983962 temp33_65))
(assert (= temp33_67 #x0000000000000001))
(assert (= temp33_66 temp33_67))
(assert (= temp33_69 #x0000000000000001))
(assert (= temp33_68 temp33_69))
(assert (= var5453295 var65913))
(assert (= temp33_71 #x0000000000000001))
(assert (= temp33_70 temp33_71))
(assert (= temp33_73 #x0000000000000001))
(assert (= temp33_72 temp33_73))
(assert (= temp33_75 #x0000000000000001))
(assert (= temp33_74 temp33_75))
(assert (= temp33_77 #x0000000000000001))
(assert (= temp33_76 temp33_77))
(assert (= temp33_79 #x0000000000000000))
(assert (= temp33_78 temp33_79))
(assert (= temp33_81 #x0000000000000001))
(assert (= temp33_80 temp33_81))
(assert (= var6375719 var69143))
(assert (= temp33_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp33_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp33_83 #x0000000000000001))
(assert (= var83534 temp33_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp33_84 #x0000000000000001))
(assert (= var6818808 temp33_84))
(assert (= var7867380 var69143))
(assert (= temp33_85 #x0000000000000001))
(assert (= var7867384 temp33_85))
(assert (= temp33_86 #x0000000000000001))
(assert (= var9193767 temp33_86))
(assert (= var9455911 var65913))
(assert (= temp33_87 #x0000000000000000))
(assert (= var9702554 temp33_87))
(model-add temp33_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp33_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp33_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp33_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp33_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp33_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp33_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



