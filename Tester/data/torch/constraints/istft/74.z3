(declare-fun temp163_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp163_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp163_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp163_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp163_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp163_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp163_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp163_8 () (_ BitVec 64))
(declare-fun temp163_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp163_10 () (_ BitVec 64))
(declare-fun temp163_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp163_12 () (_ BitVec 64))
(declare-fun temp163_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp163_14 () (_ BitVec 64))
(declare-fun temp163_15 () (_ BitVec 64))
(declare-fun temp163_16 () (_ BitVec 64))
(declare-fun temp163_17 () (_ BitVec 64))
(declare-fun temp163_18 () (_ BitVec 64))
(declare-fun temp163_19 () (_ BitVec 64))
(declare-fun temp163_20 () (_ BitVec 64))
(declare-fun temp163_21 () (_ BitVec 64))
(declare-fun temp163_22 () (_ BitVec 64))
(declare-fun temp163_23 () (_ BitVec 64))
(declare-fun temp163_24 () (_ BitVec 64))
(declare-fun temp163_25 () (_ BitVec 64))
(declare-fun temp163_26 () (_ BitVec 64))
(declare-fun temp163_27 () (_ BitVec 64))
(declare-fun temp163_28 () (_ BitVec 64))
(declare-fun temp163_29 () (_ BitVec 64))
(declare-fun temp163_31 () (_ BitVec 64))
(declare-fun temp163_30 () (_ BitVec 64))
(declare-fun temp163_32 () (_ BitVec 64))
(declare-fun temp163_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp163_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp163_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp163_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp163_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp163_39 () (_ BitVec 64))
(declare-fun temp163_38 () (_ BitVec 64))
(declare-fun temp163_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp163_41 () (_ BitVec 64))
(declare-fun temp163_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp163_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp163_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp163_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp163_47 () (_ BitVec 64))
(declare-fun temp163_46 () (_ BitVec 64))
(declare-fun temp163_49 () (_ BitVec 64))
(declare-fun temp163_48 () (_ BitVec 64))
(declare-fun temp163_51 () (_ BitVec 64))
(declare-fun temp163_50 () (_ BitVec 64))
(declare-fun temp163_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp163_54 () (_ BitVec 64))
(declare-fun temp163_53 () (_ BitVec 64))
(declare-fun temp163_56 () (_ BitVec 64))
(declare-fun temp163_55 () (_ BitVec 64))
(declare-fun temp163_58 () (_ BitVec 64))
(declare-fun temp163_57 () (_ BitVec 64))
(declare-fun temp163_60 () (_ BitVec 64))
(declare-fun temp163_59 () (_ BitVec 64))
(declare-fun temp163_62 () (_ BitVec 64))
(declare-fun temp163_61 () (_ BitVec 64))
(declare-fun temp163_64 () (_ BitVec 64))
(declare-fun temp163_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp163_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp163_67 () (_ BitVec 64))
(declare-fun temp163_66 () (_ BitVec 64))
(declare-fun temp163_69 () (_ BitVec 64))
(declare-fun temp163_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp163_71 () (_ BitVec 64))
(declare-fun temp163_70 () (_ BitVec 64))
(declare-fun temp163_73 () (_ BitVec 64))
(declare-fun temp163_72 () (_ BitVec 64))
(declare-fun temp163_75 () (_ BitVec 64))
(declare-fun temp163_74 () (_ BitVec 64))
(declare-fun temp163_77 () (_ BitVec 64))
(declare-fun temp163_76 () (_ BitVec 64))
(declare-fun temp163_79 () (_ BitVec 64))
(declare-fun temp163_78 () (_ BitVec 64))
(declare-fun temp163_81 () (_ BitVec 64))
(declare-fun temp163_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp163_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp163_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp163_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp163_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp163_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun var9521447 () (_ BitVec 64))
(declare-fun temp163_87 () (_ BitVec 64))
(declare-fun var9768090 () (_ BitVec 64))
(assert (= temp163_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp163_1)))
(assert (= temp163_2 #x0000000000000000))
(assert (= var1050945 temp163_2))
(assert (= temp163_3 #xffffffffffffffff))
(assert (= var67312 temp163_3))
(assert (= temp163_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp163_4)))
(assert (= temp163_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp163_5)))
(assert (= temp163_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp163_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp163_7 #x0000000000000000))
(assert (= var82187 temp163_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp163_8 #x0000000000000000))
(assert (= var82356 temp163_8))
(assert (= temp163_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp163_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp163_10 #x0000000000000001))
(assert (= var82528 temp163_10))
(assert (= temp163_11 #x0000000000000000))
(assert (= var65913 temp163_11))
(assert (= temp163_12 #x0000000000000000))
(assert (= temp163_13 temp163_12))
(assert (= temp163_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp163_13)))
(assert (= temp163_15 #x0000000000000001))
(assert (= temp163_16 temp163_15))
(assert (= temp163_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp163_16)))
(assert (= temp163_18 #x0000000000000002))
(assert (= temp163_19 temp163_18))
(assert (= temp163_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp163_19)))
(assert (= temp163_21 #x0000000000000003))
(assert (= temp163_22 temp163_21))
(assert (= temp163_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp163_22)))
(assert (= temp163_24 #x0000000000000004))
(assert (= temp163_25 temp163_24))
(assert (= temp163_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp163_25)))
(assert (= temp163_27 #x0000000000000005))
(assert (= temp163_28 temp163_27))
(assert (= temp163_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp163_28)))
(assert (= temp163_31 #x0000000000000000))
(assert (= temp163_30
   (ite (bvslt var65913 temp163_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp163_32 temp163_30))
(assert (= temp163_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp163_32)))
(assert (= var82530 temp163_33))
(assert (bvslt temp163_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp163_34 #x0000000000000001))
(assert (= var82531 temp163_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp163_35 #x0000000000000001))
(assert (= var82728 temp163_35))
(assert (= var1914351 var65913))
(assert (= temp163_36 #x0000000000000001))
(assert (= var2115797 temp163_36))
(assert (= temp163_37 #x0000000000000002))
(assert (= var2115798 temp163_37))
(assert (= temp163_39 #x0000000000000000))
(assert (= temp163_38 temp163_39))
(assert (= temp163_40 #x0000000000000000))
(assert (= var2628020 temp163_40))
(assert (= temp163_41 #x0000000000000001))
(assert (= temp163_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp163_41 temp163_42)))
(assert (= temp163_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp163_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp163_44 #x0000000000000000))
(assert (= var3740377 temp163_44))
(assert (= temp163_45 #x0000000000000002))
(assert (= var69143 temp163_45))
(assert (= temp163_47 #x0000000000000001))
(assert (= temp163_46 temp163_47))
(assert (= temp163_49 #x0000000000000001))
(assert (= temp163_48 temp163_49))
(assert (= temp163_51 #x0000000000000003))
(assert (= temp163_50 temp163_51))
(assert (= temp163_52 #x0000000000000001))
(assert (= var4212949 temp163_52))
(assert (= var4212950 var69143))
(assert (= temp163_54 #x0000000000000001))
(assert (= temp163_53 temp163_54))
(assert (= temp163_56 #x0000000000000001))
(assert (= temp163_55 temp163_56))
(assert (= temp163_58 #x0000000000000001))
(assert (= temp163_57 temp163_58))
(assert (= temp163_60 #x0000000000000001))
(assert (= temp163_59 temp163_60))
(assert (= temp163_62 #x0000000000000000))
(assert (= temp163_61 temp163_62))
(assert (= temp163_64 #x0000000000000001))
(assert (= temp163_63 temp163_64))
(assert (= var4868391 var69143))
(assert (= temp163_65 #x0000000000000002))
(assert (= var4983962 temp163_65))
(assert (= temp163_67 #x0000000000000001))
(assert (= temp163_66 temp163_67))
(assert (= temp163_69 #x0000000000000001))
(assert (= temp163_68 temp163_69))
(assert (= var5453295 var65913))
(assert (= temp163_71 #x0000000000000001))
(assert (= temp163_70 temp163_71))
(assert (= temp163_73 #x0000000000000001))
(assert (= temp163_72 temp163_73))
(assert (= temp163_75 #x0000000000000001))
(assert (= temp163_74 temp163_75))
(assert (= temp163_77 #x0000000000000001))
(assert (= temp163_76 temp163_77))
(assert (= temp163_79 #x0000000000000000))
(assert (= temp163_78 temp163_79))
(assert (= temp163_81 #x0000000000000001))
(assert (= temp163_80 temp163_81))
(assert (= var6375719 var69143))
(assert (= temp163_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp163_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp163_83 #x0000000000000001))
(assert (= var83534 temp163_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp163_84 #x0000000000000001))
(assert (= var6818808 temp163_84))
(assert (= var7801844 var69143))
(assert (= temp163_85 #x0000000000000001))
(assert (= var7801848 temp163_85))
(assert (= temp163_86 #x0000000000000001))
(assert (= var9259303 temp163_86))
(assert (= var9521447 var65913))
(assert (= temp163_87 #x0000000000000000))
(assert (= var9768090 temp163_87))
(model-add temp163_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp163_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp163_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp163_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp163_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp163_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp163_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





