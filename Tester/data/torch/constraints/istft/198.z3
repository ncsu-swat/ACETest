(declare-fun temp418_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp418_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp418_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp418_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp418_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp418_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp418_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp418_8 () (_ BitVec 64))
(declare-fun temp418_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp418_10 () (_ BitVec 64))
(declare-fun temp418_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp418_12 () (_ BitVec 64))
(declare-fun temp418_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp418_14 () (_ BitVec 64))
(declare-fun temp418_15 () (_ BitVec 64))
(declare-fun temp418_16 () (_ BitVec 64))
(declare-fun temp418_17 () (_ BitVec 64))
(declare-fun temp418_18 () (_ BitVec 64))
(declare-fun temp418_19 () (_ BitVec 64))
(declare-fun temp418_20 () (_ BitVec 64))
(declare-fun temp418_21 () (_ BitVec 64))
(declare-fun temp418_22 () (_ BitVec 64))
(declare-fun temp418_23 () (_ BitVec 64))
(declare-fun temp418_24 () (_ BitVec 64))
(declare-fun temp418_25 () (_ BitVec 64))
(declare-fun temp418_26 () (_ BitVec 64))
(declare-fun temp418_27 () (_ BitVec 64))
(declare-fun temp418_28 () (_ BitVec 64))
(declare-fun temp418_29 () (_ BitVec 64))
(declare-fun temp418_31 () (_ BitVec 64))
(declare-fun temp418_30 () (_ BitVec 64))
(declare-fun temp418_32 () (_ BitVec 64))
(declare-fun temp418_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp418_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp418_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp418_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp418_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp418_39 () (_ BitVec 64))
(declare-fun temp418_38 () (_ BitVec 64))
(declare-fun temp418_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp418_41 () (_ BitVec 64))
(declare-fun temp418_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp418_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp418_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp418_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp418_47 () (_ BitVec 64))
(declare-fun temp418_46 () (_ BitVec 64))
(declare-fun temp418_49 () (_ BitVec 64))
(declare-fun temp418_48 () (_ BitVec 64))
(declare-fun temp418_51 () (_ BitVec 64))
(declare-fun temp418_50 () (_ BitVec 64))
(declare-fun temp418_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp418_54 () (_ BitVec 64))
(declare-fun temp418_53 () (_ BitVec 64))
(declare-fun temp418_56 () (_ BitVec 64))
(declare-fun temp418_55 () (_ BitVec 64))
(declare-fun temp418_58 () (_ BitVec 64))
(declare-fun temp418_57 () (_ BitVec 64))
(declare-fun temp418_60 () (_ BitVec 64))
(declare-fun temp418_59 () (_ BitVec 64))
(declare-fun temp418_62 () (_ BitVec 64))
(declare-fun temp418_61 () (_ BitVec 64))
(declare-fun temp418_64 () (_ BitVec 64))
(declare-fun temp418_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp418_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp418_67 () (_ BitVec 64))
(declare-fun temp418_66 () (_ BitVec 64))
(declare-fun temp418_69 () (_ BitVec 64))
(declare-fun temp418_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp418_71 () (_ BitVec 64))
(declare-fun temp418_70 () (_ BitVec 64))
(declare-fun temp418_73 () (_ BitVec 64))
(declare-fun temp418_72 () (_ BitVec 64))
(declare-fun temp418_75 () (_ BitVec 64))
(declare-fun temp418_74 () (_ BitVec 64))
(declare-fun temp418_77 () (_ BitVec 64))
(declare-fun temp418_76 () (_ BitVec 64))
(declare-fun temp418_79 () (_ BitVec 64))
(declare-fun temp418_78 () (_ BitVec 64))
(declare-fun temp418_81 () (_ BitVec 64))
(declare-fun temp418_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp418_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp418_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp418_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp418_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp418_86 () (_ BitVec 64))
(declare-fun var7801886 () (_ BitVec 64))
(declare-fun temp418_87 () (_ BitVec 64))
(declare-fun temp418_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun temp418_89 () (_ BitVec 64))
(declare-fun var9440410 () (_ BitVec 64))
(assert (= temp418_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp418_1)))
(assert (= temp418_2 #x0000000000000000))
(assert (= var1050945 temp418_2))
(assert (= temp418_3 #xffffffffffffffff))
(assert (= var67312 temp418_3))
(assert (= temp418_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp418_4)))
(assert (= temp418_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp418_5)))
(assert (= temp418_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp418_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp418_7 #x0000000000000000))
(assert (= var82187 temp418_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp418_8 #x0000000000000000))
(assert (= var82356 temp418_8))
(assert (= temp418_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp418_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp418_10 #x0000000000000001))
(assert (= var82528 temp418_10))
(assert (= temp418_11 #x0000000000000000))
(assert (= var65913 temp418_11))
(assert (= temp418_12 #x0000000000000000))
(assert (= temp418_13 temp418_12))
(assert (= temp418_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp418_13)))
(assert (= temp418_15 #x0000000000000001))
(assert (= temp418_16 temp418_15))
(assert (= temp418_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp418_16)))
(assert (= temp418_18 #x0000000000000002))
(assert (= temp418_19 temp418_18))
(assert (= temp418_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp418_19)))
(assert (= temp418_21 #x0000000000000003))
(assert (= temp418_22 temp418_21))
(assert (= temp418_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp418_22)))
(assert (= temp418_24 #x0000000000000004))
(assert (= temp418_25 temp418_24))
(assert (= temp418_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp418_25)))
(assert (= temp418_27 #x0000000000000005))
(assert (= temp418_28 temp418_27))
(assert (= temp418_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp418_28)))
(assert (= temp418_31 #x0000000000000000))
(assert (= temp418_30
   (ite (bvslt var65913 temp418_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp418_32 temp418_30))
(assert (= temp418_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp418_32)))
(assert (= var82530 temp418_33))
(assert (bvslt temp418_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp418_34 #x0000000000000001))
(assert (= var82531 temp418_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp418_35 #x0000000000000001))
(assert (= var82728 temp418_35))
(assert (= var1914351 var65913))
(assert (= temp418_36 #x0000000000000001))
(assert (= var2115797 temp418_36))
(assert (= temp418_37 #x0000000000000002))
(assert (= var2115798 temp418_37))
(assert (= temp418_39 #x0000000000000000))
(assert (= temp418_38 temp418_39))
(assert (= temp418_40 #x0000000000000000))
(assert (= var2628020 temp418_40))
(assert (= temp418_41 #x0000000000000001))
(assert (= temp418_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp418_41 temp418_42)))
(assert (= temp418_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp418_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp418_44 #x0000000000000000))
(assert (= var3740377 temp418_44))
(assert (= temp418_45 #x0000000000000002))
(assert (= var69143 temp418_45))
(assert (= temp418_47 #x0000000000000001))
(assert (= temp418_46 temp418_47))
(assert (= temp418_49 #x0000000000000001))
(assert (= temp418_48 temp418_49))
(assert (= temp418_51 #x0000000000000003))
(assert (= temp418_50 temp418_51))
(assert (= temp418_52 #x0000000000000001))
(assert (= var4212949 temp418_52))
(assert (= var4212950 var69143))
(assert (= temp418_54 #x0000000000000001))
(assert (= temp418_53 temp418_54))
(assert (= temp418_56 #x0000000000000001))
(assert (= temp418_55 temp418_56))
(assert (= temp418_58 #x0000000000000001))
(assert (= temp418_57 temp418_58))
(assert (= temp418_60 #x0000000000000001))
(assert (= temp418_59 temp418_60))
(assert (= temp418_62 #x0000000000000000))
(assert (= temp418_61 temp418_62))
(assert (= temp418_64 #x0000000000000001))
(assert (= temp418_63 temp418_64))
(assert (= var4868391 var69143))
(assert (= temp418_65 #x0000000000000002))
(assert (= var4983962 temp418_65))
(assert (= temp418_67 #x0000000000000001))
(assert (= temp418_66 temp418_67))
(assert (= temp418_69 #x0000000000000001))
(assert (= temp418_68 temp418_69))
(assert (= var5453295 var65913))
(assert (= temp418_71 #x0000000000000001))
(assert (= temp418_70 temp418_71))
(assert (= temp418_73 #x0000000000000001))
(assert (= temp418_72 temp418_73))
(assert (= temp418_75 #x0000000000000001))
(assert (= temp418_74 temp418_75))
(assert (= temp418_77 #x0000000000000001))
(assert (= temp418_76 temp418_77))
(assert (= temp418_79 #x0000000000000000))
(assert (= temp418_78 temp418_79))
(assert (= temp418_81 #x0000000000000001))
(assert (= temp418_80 temp418_81))
(assert (= var6375719 var69143))
(assert (= temp418_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp418_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp418_83 #x0000000000000001))
(assert (= var83534 temp418_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp418_84 #x0000000000000001))
(assert (= var6818808 temp418_84))
(assert (= var7801844 var69143))
(assert (= temp418_85 #x0000000000000001))
(assert (= var7801848 temp418_85))
(assert (= temp418_86 #x0000000000000000))
(assert (= var7801886 temp418_86))
(assert (= temp418_87 #x0000000000000000))
(assert (= var7801886 temp418_87))
(assert (= temp418_88 #x0000000000000001))
(assert (= var9128231 temp418_88))
(assert (= temp418_89 #x0000000000000000))
(assert (= var9440410 temp418_89))
(model-add temp418_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp418_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp418_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp418_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp418_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp418_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp418_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




