(declare-fun temp637_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp637_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp637_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp637_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp637_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp637_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp637_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp637_8 () (_ BitVec 64))
(declare-fun temp637_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp637_10 () (_ BitVec 64))
(declare-fun temp637_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp637_12 () (_ BitVec 64))
(declare-fun temp637_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp637_14 () (_ BitVec 64))
(declare-fun temp637_15 () (_ BitVec 64))
(declare-fun temp637_16 () (_ BitVec 64))
(declare-fun temp637_17 () (_ BitVec 64))
(declare-fun temp637_18 () (_ BitVec 64))
(declare-fun temp637_19 () (_ BitVec 64))
(declare-fun temp637_20 () (_ BitVec 64))
(declare-fun temp637_21 () (_ BitVec 64))
(declare-fun temp637_22 () (_ BitVec 64))
(declare-fun temp637_23 () (_ BitVec 64))
(declare-fun temp637_24 () (_ BitVec 64))
(declare-fun temp637_25 () (_ BitVec 64))
(declare-fun temp637_26 () (_ BitVec 64))
(declare-fun temp637_27 () (_ BitVec 64))
(declare-fun temp637_28 () (_ BitVec 64))
(declare-fun temp637_29 () (_ BitVec 64))
(declare-fun temp637_31 () (_ BitVec 64))
(declare-fun temp637_30 () (_ BitVec 64))
(declare-fun temp637_32 () (_ BitVec 64))
(declare-fun temp637_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp637_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp637_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp637_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp637_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp637_39 () (_ BitVec 64))
(declare-fun temp637_38 () (_ BitVec 64))
(declare-fun temp637_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp637_41 () (_ BitVec 64))
(declare-fun temp637_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp637_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp637_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp637_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp637_47 () (_ BitVec 64))
(declare-fun temp637_46 () (_ BitVec 64))
(declare-fun temp637_49 () (_ BitVec 64))
(declare-fun temp637_48 () (_ BitVec 64))
(declare-fun temp637_51 () (_ BitVec 64))
(declare-fun temp637_50 () (_ BitVec 64))
(declare-fun temp637_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp637_54 () (_ BitVec 64))
(declare-fun temp637_53 () (_ BitVec 64))
(declare-fun temp637_56 () (_ BitVec 64))
(declare-fun temp637_55 () (_ BitVec 64))
(declare-fun temp637_58 () (_ BitVec 64))
(declare-fun temp637_57 () (_ BitVec 64))
(declare-fun temp637_60 () (_ BitVec 64))
(declare-fun temp637_59 () (_ BitVec 64))
(declare-fun temp637_62 () (_ BitVec 64))
(declare-fun temp637_61 () (_ BitVec 64))
(declare-fun temp637_64 () (_ BitVec 64))
(declare-fun temp637_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp637_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp637_67 () (_ BitVec 64))
(declare-fun temp637_66 () (_ BitVec 64))
(declare-fun temp637_69 () (_ BitVec 64))
(declare-fun temp637_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp637_71 () (_ BitVec 64))
(declare-fun temp637_70 () (_ BitVec 64))
(declare-fun temp637_73 () (_ BitVec 64))
(declare-fun temp637_72 () (_ BitVec 64))
(declare-fun temp637_75 () (_ BitVec 64))
(declare-fun temp637_74 () (_ BitVec 64))
(declare-fun temp637_77 () (_ BitVec 64))
(declare-fun temp637_76 () (_ BitVec 64))
(declare-fun temp637_79 () (_ BitVec 64))
(declare-fun temp637_78 () (_ BitVec 64))
(declare-fun temp637_81 () (_ BitVec 64))
(declare-fun temp637_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp637_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp637_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp637_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp637_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp637_86 () (_ BitVec 64))
(declare-fun var7736350 () (_ BitVec 64))
(declare-fun temp637_87 () (_ BitVec 64))
(declare-fun var7736362 () (_ BitVec 64))
(declare-fun temp637_88 () (_ BitVec 64))
(declare-fun temp637_89 () (_ BitVec 64))
(declare-fun temp637_90 () (_ BitVec 64))
(declare-fun var8931623 () (_ BitVec 64))
(declare-fun temp637_92 () (_ BitVec 64))
(declare-fun temp637_91 () (_ BitVec 64))
(declare-fun temp637_93 () (_ BitVec 64))
(declare-fun var9243802 () (_ BitVec 64))
(assert (= temp637_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp637_1)))
(assert (= temp637_2 #x0000000000000000))
(assert (= var1050945 temp637_2))
(assert (= temp637_3 #xffffffffffffffff))
(assert (= var67312 temp637_3))
(assert (= temp637_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp637_4)))
(assert (= temp637_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp637_5)))
(assert (= temp637_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp637_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp637_7 #x0000000000000000))
(assert (= var82187 temp637_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp637_8 #x0000000000000000))
(assert (= var82356 temp637_8))
(assert (= temp637_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp637_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp637_10 #x0000000000000001))
(assert (= var82528 temp637_10))
(assert (= temp637_11 #x0000000000000000))
(assert (= var65913 temp637_11))
(assert (= temp637_12 #x0000000000000000))
(assert (= temp637_13 temp637_12))
(assert (= temp637_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp637_13)))
(assert (= temp637_15 #x0000000000000001))
(assert (= temp637_16 temp637_15))
(assert (= temp637_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp637_16)))
(assert (= temp637_18 #x0000000000000002))
(assert (= temp637_19 temp637_18))
(assert (= temp637_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp637_19)))
(assert (= temp637_21 #x0000000000000003))
(assert (= temp637_22 temp637_21))
(assert (= temp637_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp637_22)))
(assert (= temp637_24 #x0000000000000004))
(assert (= temp637_25 temp637_24))
(assert (= temp637_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp637_25)))
(assert (= temp637_27 #x0000000000000005))
(assert (= temp637_28 temp637_27))
(assert (= temp637_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp637_28)))
(assert (= temp637_31 #x0000000000000000))
(assert (= temp637_30
   (ite (bvslt var65913 temp637_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp637_32 temp637_30))
(assert (= temp637_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp637_32)))
(assert (= var82530 temp637_33))
(assert (bvslt temp637_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp637_34 #x0000000000000001))
(assert (= var82531 temp637_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp637_35 #x0000000000000001))
(assert (= var82728 temp637_35))
(assert (= var1914351 var65913))
(assert (= temp637_36 #x0000000000000001))
(assert (= var2115797 temp637_36))
(assert (= temp637_37 #x0000000000000002))
(assert (= var2115798 temp637_37))
(assert (= temp637_39 #x0000000000000000))
(assert (= temp637_38 temp637_39))
(assert (= temp637_40 #x0000000000000000))
(assert (= var2628020 temp637_40))
(assert (= temp637_41 #x0000000000000001))
(assert (= temp637_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp637_41 temp637_42)))
(assert (= temp637_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp637_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp637_44 #x0000000000000000))
(assert (= var3740377 temp637_44))
(assert (= temp637_45 #x0000000000000002))
(assert (= var69143 temp637_45))
(assert (= temp637_47 #x0000000000000001))
(assert (= temp637_46 temp637_47))
(assert (= temp637_49 #x0000000000000001))
(assert (= temp637_48 temp637_49))
(assert (= temp637_51 #x0000000000000003))
(assert (= temp637_50 temp637_51))
(assert (= temp637_52 #x0000000000000001))
(assert (= var4212949 temp637_52))
(assert (= var4212950 var69143))
(assert (= temp637_54 #x0000000000000001))
(assert (= temp637_53 temp637_54))
(assert (= temp637_56 #x0000000000000001))
(assert (= temp637_55 temp637_56))
(assert (= temp637_58 #x0000000000000001))
(assert (= temp637_57 temp637_58))
(assert (= temp637_60 #x0000000000000001))
(assert (= temp637_59 temp637_60))
(assert (= temp637_62 #x0000000000000000))
(assert (= temp637_61 temp637_62))
(assert (= temp637_64 #x0000000000000001))
(assert (= temp637_63 temp637_64))
(assert (= var4868391 var69143))
(assert (= temp637_65 #x0000000000000002))
(assert (= var4983962 temp637_65))
(assert (= temp637_67 #x0000000000000001))
(assert (= temp637_66 temp637_67))
(assert (= temp637_69 #x0000000000000001))
(assert (= temp637_68 temp637_69))
(assert (= var5453295 var65913))
(assert (= temp637_71 #x0000000000000001))
(assert (= temp637_70 temp637_71))
(assert (= temp637_73 #x0000000000000001))
(assert (= temp637_72 temp637_73))
(assert (= temp637_75 #x0000000000000001))
(assert (= temp637_74 temp637_75))
(assert (= temp637_77 #x0000000000000001))
(assert (= temp637_76 temp637_77))
(assert (= temp637_79 #x0000000000000000))
(assert (= temp637_78 temp637_79))
(assert (= temp637_81 #x0000000000000001))
(assert (= temp637_80 temp637_81))
(assert (= var6375719 var69143))
(assert (= temp637_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp637_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp637_83 #x0000000000000001))
(assert (= var83534 temp637_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp637_84 #x0000000000000001))
(assert (= var6818808 temp637_84))
(assert (= var7736308 var69143))
(assert (= temp637_85 #x0000000000000001))
(assert (= var7736312 temp637_85))
(assert (= temp637_86 #x0000000000000000))
(assert (= var7736350 temp637_86))
(assert (= temp637_87 #x0000000000000000))
(assert (= var7736362 temp637_87))
(assert (= temp637_88 #x0000000000000000))
(assert (= var7736362 temp637_88))
(assert (= temp637_89 #x0000000000000000))
(assert (= var7736350 temp637_89))
(assert (= temp637_90 #x0000000000000001))
(assert (= var8931623 temp637_90))
(assert (= temp637_92 #x0000000000000001))
(assert (= temp637_91 temp637_92))
(assert (= temp637_93 #x0000000000000000))
(assert (= var9243802 temp637_93))
(model-add temp637_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp637_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp637_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp637_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp637_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp637_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp637_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





