(declare-fun temp13058_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp13058_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp13058_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp13058_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp13058_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp13058_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp13058_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp13058_8 () (_ BitVec 64))
(declare-fun temp13058_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp13058_10 () (_ BitVec 64))
(declare-fun temp13058_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp13058_12 () (_ BitVec 64))
(declare-fun temp13058_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp13058_14 () (_ BitVec 64))
(declare-fun temp13058_15 () (_ BitVec 64))
(declare-fun temp13058_16 () (_ BitVec 64))
(declare-fun temp13058_17 () (_ BitVec 64))
(declare-fun temp13058_18 () (_ BitVec 64))
(declare-fun temp13058_19 () (_ BitVec 64))
(declare-fun temp13058_20 () (_ BitVec 64))
(declare-fun temp13058_21 () (_ BitVec 64))
(declare-fun temp13058_22 () (_ BitVec 64))
(declare-fun temp13058_23 () (_ BitVec 64))
(declare-fun temp13058_24 () (_ BitVec 64))
(declare-fun temp13058_25 () (_ BitVec 64))
(declare-fun temp13058_26 () (_ BitVec 64))
(declare-fun temp13058_27 () (_ BitVec 64))
(declare-fun temp13058_28 () (_ BitVec 64))
(declare-fun temp13058_29 () (_ BitVec 64))
(declare-fun temp13058_31 () (_ BitVec 64))
(declare-fun temp13058_30 () (_ BitVec 64))
(declare-fun temp13058_32 () (_ BitVec 64))
(declare-fun temp13058_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp13058_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp13058_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp13058_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp13058_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp13058_39 () (_ BitVec 64))
(declare-fun temp13058_38 () (_ BitVec 64))
(declare-fun temp13058_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp13058_41 () (_ BitVec 64))
(declare-fun temp13058_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp13058_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp13058_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp13058_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp13058_47 () (_ BitVec 64))
(declare-fun temp13058_46 () (_ BitVec 64))
(declare-fun temp13058_49 () (_ BitVec 64))
(declare-fun temp13058_48 () (_ BitVec 64))
(declare-fun temp13058_51 () (_ BitVec 64))
(declare-fun temp13058_50 () (_ BitVec 64))
(declare-fun temp13058_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp13058_54 () (_ BitVec 64))
(declare-fun temp13058_53 () (_ BitVec 64))
(declare-fun temp13058_56 () (_ BitVec 64))
(declare-fun temp13058_55 () (_ BitVec 64))
(declare-fun temp13058_58 () (_ BitVec 64))
(declare-fun temp13058_57 () (_ BitVec 64))
(declare-fun temp13058_60 () (_ BitVec 64))
(declare-fun temp13058_59 () (_ BitVec 64))
(declare-fun temp13058_62 () (_ BitVec 64))
(declare-fun temp13058_61 () (_ BitVec 64))
(declare-fun temp13058_64 () (_ BitVec 64))
(declare-fun temp13058_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp13058_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp13058_67 () (_ BitVec 64))
(declare-fun temp13058_66 () (_ BitVec 64))
(declare-fun temp13058_69 () (_ BitVec 64))
(declare-fun temp13058_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp13058_71 () (_ BitVec 64))
(declare-fun temp13058_70 () (_ BitVec 64))
(declare-fun temp13058_73 () (_ BitVec 64))
(declare-fun temp13058_72 () (_ BitVec 64))
(declare-fun temp13058_75 () (_ BitVec 64))
(declare-fun temp13058_74 () (_ BitVec 64))
(declare-fun temp13058_77 () (_ BitVec 64))
(declare-fun temp13058_76 () (_ BitVec 64))
(declare-fun temp13058_79 () (_ BitVec 64))
(declare-fun temp13058_78 () (_ BitVec 64))
(declare-fun temp13058_81 () (_ BitVec 64))
(declare-fun temp13058_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp13058_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp13058_83 () (_ BitVec 64))
(declare-fun temp13058_84 () (_ BitVec 64))
(declare-fun var83537 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun temp13058_85 () (_ BitVec 64))
(declare-fun var6506834 () (_ BitVec 64))
(declare-fun temp13058_86 () (_ BitVec 64))
(declare-fun temp13058_87 () (_ BitVec 64))
(declare-fun var6506839 () (_ BitVec 64))
(declare-fun var6506845 () (_ BitVec 64))
(declare-fun var6506816 () (_ BitVec 64))
(declare-fun var83557 () (_ BitVec 64))
(declare-fun var6753268 () (_ BitVec 64))
(declare-fun temp13058_88 () (_ BitVec 64))
(declare-fun var6753272 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp13058_89 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp13058_90 () (_ BitVec 64))
(declare-fun var7736350 () (_ BitVec 64))
(declare-fun temp13058_91 () (_ BitVec 64))
(declare-fun temp13058_92 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun var83931 () (_ BitVec 64))
(declare-fun var83975 () (_ BitVec 64))
(declare-fun temp13058_93 () (_ BitVec 64))
(declare-fun var9374874 () (_ BitVec 64))
(assert (= temp13058_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp13058_1)))
(assert (= temp13058_2 #x0000000000000000))
(assert (= var1050945 temp13058_2))
(assert (= temp13058_3 #xffffffffffffffff))
(assert (= var67312 temp13058_3))
(assert (= temp13058_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp13058_4)))
(assert (= temp13058_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp13058_5)))
(assert (= temp13058_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp13058_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp13058_7 #x0000000000000000))
(assert (= var82187 temp13058_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13058_8 #x0000000000000000))
(assert (= var82356 temp13058_8))
(assert (= temp13058_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp13058_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13058_10 #x0000000000000001))
(assert (= var82528 temp13058_10))
(assert (= temp13058_11 #x0000000000000000))
(assert (= var65913 temp13058_11))
(assert (= temp13058_12 #x0000000000000000))
(assert (= temp13058_13 temp13058_12))
(assert (= temp13058_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp13058_13)))
(assert (= temp13058_15 #x0000000000000001))
(assert (= temp13058_16 temp13058_15))
(assert (= temp13058_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp13058_16)))
(assert (= temp13058_18 #x0000000000000002))
(assert (= temp13058_19 temp13058_18))
(assert (= temp13058_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp13058_19)))
(assert (= temp13058_21 #x0000000000000003))
(assert (= temp13058_22 temp13058_21))
(assert (= temp13058_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp13058_22)))
(assert (= temp13058_24 #x0000000000000004))
(assert (= temp13058_25 temp13058_24))
(assert (= temp13058_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp13058_25)))
(assert (= temp13058_27 #x0000000000000005))
(assert (= temp13058_28 temp13058_27))
(assert (= temp13058_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp13058_28)))
(assert (= temp13058_31 #x0000000000000000))
(assert (= temp13058_30
   (ite (bvslt var65913 temp13058_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp13058_32 temp13058_30))
(assert (= temp13058_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp13058_32)))
(assert (= var82530 temp13058_33))
(assert (bvslt temp13058_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp13058_34 #x0000000000000001))
(assert (= var82531 temp13058_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp13058_35 #x0000000000000001))
(assert (= var82728 temp13058_35))
(assert (= var1914351 var65913))
(assert (= temp13058_36 #x0000000000000001))
(assert (= var2115797 temp13058_36))
(assert (= temp13058_37 #x0000000000000002))
(assert (= var2115798 temp13058_37))
(assert (= temp13058_39 #x0000000000000000))
(assert (= temp13058_38 temp13058_39))
(assert (= temp13058_40 #x0000000000000000))
(assert (= var2628020 temp13058_40))
(assert (= temp13058_41 #x0000000000000001))
(assert (= temp13058_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp13058_41
        temp13058_42)))
(assert (= temp13058_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp13058_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp13058_44 #x0000000000000000))
(assert (= var3740377 temp13058_44))
(assert (= temp13058_45 #x0000000000000002))
(assert (= var69143 temp13058_45))
(assert (= temp13058_47 #x0000000000000001))
(assert (= temp13058_46 temp13058_47))
(assert (= temp13058_49 #x0000000000000001))
(assert (= temp13058_48 temp13058_49))
(assert (= temp13058_51 #x0000000000000003))
(assert (= temp13058_50 temp13058_51))
(assert (= temp13058_52 #x0000000000000001))
(assert (= var4212949 temp13058_52))
(assert (= var4212950 var69143))
(assert (= temp13058_54 #x0000000000000001))
(assert (= temp13058_53 temp13058_54))
(assert (= temp13058_56 #x0000000000000001))
(assert (= temp13058_55 temp13058_56))
(assert (= temp13058_58 #x0000000000000001))
(assert (= temp13058_57 temp13058_58))
(assert (= temp13058_60 #x0000000000000001))
(assert (= temp13058_59 temp13058_60))
(assert (= temp13058_62 #x0000000000000000))
(assert (= temp13058_61 temp13058_62))
(assert (= temp13058_64 #x0000000000000001))
(assert (= temp13058_63 temp13058_64))
(assert (= var4868391 var69143))
(assert (= temp13058_65 #x0000000000000002))
(assert (= var4983962 temp13058_65))
(assert (= temp13058_67 #x0000000000000001))
(assert (= temp13058_66 temp13058_67))
(assert (= temp13058_69 #x0000000000000001))
(assert (= temp13058_68 temp13058_69))
(assert (= var5453295 var65913))
(assert (= temp13058_71 #x0000000000000001))
(assert (= temp13058_70 temp13058_71))
(assert (= temp13058_73 #x0000000000000001))
(assert (= temp13058_72 temp13058_73))
(assert (= temp13058_75 #x0000000000000001))
(assert (= temp13058_74 temp13058_75))
(assert (= temp13058_77 #x0000000000000001))
(assert (= temp13058_76 temp13058_77))
(assert (= temp13058_79 #x0000000000000000))
(assert (= temp13058_78 temp13058_79))
(assert (= temp13058_81 #x0000000000000001))
(assert (= temp13058_80 temp13058_81))
(assert (= var6375719 var69143))
(assert (= temp13058_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp13058_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13058_83 #x0000000000000000))
(assert (= var83534 temp13058_83))
(assert (= temp13058_84 #x0000000000000002))
(assert (= var83537 (bvsdiv ARGNAME_n_fft_NAMEEND temp13058_84)))
(assert (= var83540 var83537))
(assert (= temp13058_85 #x0000000000000000))
(assert (= var6506834
   (ite (= ARGNAME_center_NAMEEND temp13058_85)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13058_86 #x0000000000000000))
(assert (= var6506834 temp13058_86))
(assert (= temp13058_87 #xfffffffffffffffe))
(assert (= var6506839 (bvsdiv ARGNAME_n_fft_NAMEEND temp13058_87)))
(assert (= var6506845 var6506839))
(assert (= var6506816 var6506845))
(assert (= var83557 var6506816))
(assert (= var6753268 var69143))
(assert (= temp13058_88 #x0000000000000001))
(assert (= var6753272 temp13058_88))
(assert (= var7736308 var69143))
(assert (= temp13058_89 #x0000000000000001))
(assert (= var7736312 temp13058_89))
(assert (= temp13058_90 #x0000000000000000))
(assert (= var7736350 temp13058_90))
(assert (= temp13058_91 #x0000000000000000))
(assert (= var7736350 temp13058_91))
(assert (= temp13058_92 #x0000000000000001))
(assert (= var9062695 temp13058_92))
(assert (= var83931 var83557))
(assert (= var83975 var83557))
(assert (= temp13058_93 #x0000000000000000))
(assert (= var9374874 temp13058_93))
(model-add temp13058_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp13058_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp13058_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp13058_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp13058_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp13058_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp13058_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






