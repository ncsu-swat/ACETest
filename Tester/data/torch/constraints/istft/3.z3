(declare-fun temp4_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp4_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp4_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp4_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp4_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp4_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp4_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp4_8 () (_ BitVec 64))
(declare-fun temp4_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp4_10 () (_ BitVec 64))
(declare-fun temp4_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp4_12 () (_ BitVec 64))
(declare-fun temp4_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4_14 () (_ BitVec 64))
(declare-fun temp4_15 () (_ BitVec 64))
(declare-fun temp4_16 () (_ BitVec 64))
(declare-fun temp4_17 () (_ BitVec 64))
(declare-fun temp4_18 () (_ BitVec 64))
(declare-fun temp4_19 () (_ BitVec 64))
(declare-fun temp4_20 () (_ BitVec 64))
(declare-fun temp4_21 () (_ BitVec 64))
(declare-fun temp4_22 () (_ BitVec 64))
(declare-fun temp4_23 () (_ BitVec 64))
(declare-fun temp4_24 () (_ BitVec 64))
(declare-fun temp4_25 () (_ BitVec 64))
(declare-fun temp4_26 () (_ BitVec 64))
(declare-fun temp4_27 () (_ BitVec 64))
(declare-fun temp4_28 () (_ BitVec 64))
(declare-fun temp4_29 () (_ BitVec 64))
(declare-fun temp4_31 () (_ BitVec 64))
(declare-fun temp4_30 () (_ BitVec 64))
(declare-fun temp4_32 () (_ BitVec 64))
(declare-fun temp4_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp4_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp4_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp4_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp4_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp4_39 () (_ BitVec 64))
(declare-fun temp4_38 () (_ BitVec 64))
(declare-fun temp4_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp4_41 () (_ BitVec 64))
(declare-fun temp4_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp4_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp4_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp4_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp4_47 () (_ BitVec 64))
(declare-fun temp4_46 () (_ BitVec 64))
(declare-fun temp4_49 () (_ BitVec 64))
(declare-fun temp4_48 () (_ BitVec 64))
(declare-fun temp4_51 () (_ BitVec 64))
(declare-fun temp4_50 () (_ BitVec 64))
(declare-fun temp4_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp4_54 () (_ BitVec 64))
(declare-fun temp4_53 () (_ BitVec 64))
(declare-fun temp4_56 () (_ BitVec 64))
(declare-fun temp4_55 () (_ BitVec 64))
(declare-fun temp4_58 () (_ BitVec 64))
(declare-fun temp4_57 () (_ BitVec 64))
(declare-fun temp4_60 () (_ BitVec 64))
(declare-fun temp4_59 () (_ BitVec 64))
(declare-fun temp4_62 () (_ BitVec 64))
(declare-fun temp4_61 () (_ BitVec 64))
(declare-fun temp4_64 () (_ BitVec 64))
(declare-fun temp4_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp4_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp4_67 () (_ BitVec 64))
(declare-fun temp4_66 () (_ BitVec 64))
(declare-fun temp4_69 () (_ BitVec 64))
(declare-fun temp4_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp4_71 () (_ BitVec 64))
(declare-fun temp4_70 () (_ BitVec 64))
(declare-fun temp4_73 () (_ BitVec 64))
(declare-fun temp4_72 () (_ BitVec 64))
(declare-fun temp4_75 () (_ BitVec 64))
(declare-fun temp4_74 () (_ BitVec 64))
(declare-fun temp4_77 () (_ BitVec 64))
(declare-fun temp4_76 () (_ BitVec 64))
(declare-fun temp4_79 () (_ BitVec 64))
(declare-fun temp4_78 () (_ BitVec 64))
(declare-fun temp4_81 () (_ BitVec 64))
(declare-fun temp4_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp4_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp4_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp4_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp4_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp4_86 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun var9586983 () (_ BitVec 64))
(assert (= temp4_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp4_1)))
(assert (= temp4_2 #x0000000000000000))
(assert (= var1050945 temp4_2))
(assert (= temp4_3 #xffffffffffffffff))
(assert (= var67312 temp4_3))
(assert (= temp4_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp4_4)))
(assert (= temp4_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp4_5)))
(assert (= temp4_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp4_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp4_7 #x0000000000000000))
(assert (= var82187 temp4_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4_8 #x0000000000000000))
(assert (= var82356 temp4_8))
(assert (= temp4_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp4_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4_10 #x0000000000000001))
(assert (= var82528 temp4_10))
(assert (= temp4_11 #x0000000000000000))
(assert (= var65913 temp4_11))
(assert (= temp4_12 #x0000000000000000))
(assert (= temp4_13 temp4_12))
(assert (= temp4_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp4_13)))
(assert (= temp4_15 #x0000000000000001))
(assert (= temp4_16 temp4_15))
(assert (= temp4_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp4_16)))
(assert (= temp4_18 #x0000000000000002))
(assert (= temp4_19 temp4_18))
(assert (= temp4_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp4_19)))
(assert (= temp4_21 #x0000000000000003))
(assert (= temp4_22 temp4_21))
(assert (= temp4_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp4_22)))
(assert (= temp4_24 #x0000000000000004))
(assert (= temp4_25 temp4_24))
(assert (= temp4_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp4_25)))
(assert (= temp4_27 #x0000000000000005))
(assert (= temp4_28 temp4_27))
(assert (= temp4_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp4_28)))
(assert (= temp4_31 #x0000000000000000))
(assert (= temp4_30
   (ite (bvslt var65913 temp4_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp4_32 temp4_30))
(assert (= temp4_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp4_32)))
(assert (= var82530 temp4_33))
(assert (bvslt temp4_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp4_34 #x0000000000000001))
(assert (= var82531 temp4_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp4_35 #x0000000000000001))
(assert (= var82728 temp4_35))
(assert (= var1914351 var65913))
(assert (= temp4_36 #x0000000000000001))
(assert (= var2115797 temp4_36))
(assert (= temp4_37 #x0000000000000002))
(assert (= var2115798 temp4_37))
(assert (= temp4_39 #x0000000000000000))
(assert (= temp4_38 temp4_39))
(assert (= temp4_40 #x0000000000000000))
(assert (= var2628020 temp4_40))
(assert (= temp4_41 #x0000000000000001))
(assert (= temp4_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp4_41 temp4_42)))
(assert (= temp4_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp4_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp4_44 #x0000000000000000))
(assert (= var3740377 temp4_44))
(assert (= temp4_45 #x0000000000000002))
(assert (= var69143 temp4_45))
(assert (= temp4_47 #x0000000000000001))
(assert (= temp4_46 temp4_47))
(assert (= temp4_49 #x0000000000000001))
(assert (= temp4_48 temp4_49))
(assert (= temp4_51 #x0000000000000003))
(assert (= temp4_50 temp4_51))
(assert (= temp4_52 #x0000000000000001))
(assert (= var4212949 temp4_52))
(assert (= var4212950 var69143))
(assert (= temp4_54 #x0000000000000001))
(assert (= temp4_53 temp4_54))
(assert (= temp4_56 #x0000000000000001))
(assert (= temp4_55 temp4_56))
(assert (= temp4_58 #x0000000000000001))
(assert (= temp4_57 temp4_58))
(assert (= temp4_60 #x0000000000000001))
(assert (= temp4_59 temp4_60))
(assert (= temp4_62 #x0000000000000000))
(assert (= temp4_61 temp4_62))
(assert (= temp4_64 #x0000000000000001))
(assert (= temp4_63 temp4_64))
(assert (= var4868391 var69143))
(assert (= temp4_65 #x0000000000000002))
(assert (= var4983962 temp4_65))
(assert (= temp4_67 #x0000000000000001))
(assert (= temp4_66 temp4_67))
(assert (= temp4_69 #x0000000000000001))
(assert (= temp4_68 temp4_69))
(assert (= var5453295 var65913))
(assert (= temp4_71 #x0000000000000001))
(assert (= temp4_70 temp4_71))
(assert (= temp4_73 #x0000000000000001))
(assert (= temp4_72 temp4_73))
(assert (= temp4_75 #x0000000000000001))
(assert (= temp4_74 temp4_75))
(assert (= temp4_77 #x0000000000000001))
(assert (= temp4_76 temp4_77))
(assert (= temp4_79 #x0000000000000000))
(assert (= temp4_78 temp4_79))
(assert (= temp4_81 #x0000000000000001))
(assert (= temp4_80 temp4_81))
(assert (= var6375719 var69143))
(assert (= temp4_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp4_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4_83 #x0000000000000001))
(assert (= var83534 temp4_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp4_84 #x0000000000000001))
(assert (= var6818808 temp4_84))
(assert (= var7867380 var69143))
(assert (= temp4_85 #x0000000000000001))
(assert (= var7867384 temp4_85))
(assert (= temp4_86 #x0000000000000001))
(assert (= var9324839 temp4_86))
(assert (= var9586983 var65913))
(model-add temp4_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp4_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp4_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp4_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp4_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp4_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp4_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




