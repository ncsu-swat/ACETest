(declare-fun temp162_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp162_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp162_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp162_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp162_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp162_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp162_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp162_8 () (_ BitVec 64))
(declare-fun temp162_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp162_10 () (_ BitVec 64))
(declare-fun temp162_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp162_12 () (_ BitVec 64))
(declare-fun temp162_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp162_14 () (_ BitVec 64))
(declare-fun temp162_15 () (_ BitVec 64))
(declare-fun temp162_16 () (_ BitVec 64))
(declare-fun temp162_17 () (_ BitVec 64))
(declare-fun temp162_18 () (_ BitVec 64))
(declare-fun temp162_19 () (_ BitVec 64))
(declare-fun temp162_20 () (_ BitVec 64))
(declare-fun temp162_21 () (_ BitVec 64))
(declare-fun temp162_22 () (_ BitVec 64))
(declare-fun temp162_23 () (_ BitVec 64))
(declare-fun temp162_24 () (_ BitVec 64))
(declare-fun temp162_25 () (_ BitVec 64))
(declare-fun temp162_26 () (_ BitVec 64))
(declare-fun temp162_27 () (_ BitVec 64))
(declare-fun temp162_28 () (_ BitVec 64))
(declare-fun temp162_29 () (_ BitVec 64))
(declare-fun temp162_31 () (_ BitVec 64))
(declare-fun temp162_30 () (_ BitVec 64))
(declare-fun temp162_32 () (_ BitVec 64))
(declare-fun temp162_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp162_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp162_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp162_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp162_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp162_39 () (_ BitVec 64))
(declare-fun temp162_38 () (_ BitVec 64))
(declare-fun temp162_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp162_41 () (_ BitVec 64))
(declare-fun temp162_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp162_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp162_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp162_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp162_47 () (_ BitVec 64))
(declare-fun temp162_46 () (_ BitVec 64))
(declare-fun temp162_49 () (_ BitVec 64))
(declare-fun temp162_48 () (_ BitVec 64))
(declare-fun temp162_51 () (_ BitVec 64))
(declare-fun temp162_50 () (_ BitVec 64))
(declare-fun temp162_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp162_54 () (_ BitVec 64))
(declare-fun temp162_53 () (_ BitVec 64))
(declare-fun temp162_56 () (_ BitVec 64))
(declare-fun temp162_55 () (_ BitVec 64))
(declare-fun temp162_58 () (_ BitVec 64))
(declare-fun temp162_57 () (_ BitVec 64))
(declare-fun temp162_60 () (_ BitVec 64))
(declare-fun temp162_59 () (_ BitVec 64))
(declare-fun temp162_62 () (_ BitVec 64))
(declare-fun temp162_61 () (_ BitVec 64))
(declare-fun temp162_64 () (_ BitVec 64))
(declare-fun temp162_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp162_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp162_67 () (_ BitVec 64))
(declare-fun temp162_66 () (_ BitVec 64))
(declare-fun temp162_69 () (_ BitVec 64))
(declare-fun temp162_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp162_71 () (_ BitVec 64))
(declare-fun temp162_70 () (_ BitVec 64))
(declare-fun temp162_73 () (_ BitVec 64))
(declare-fun temp162_72 () (_ BitVec 64))
(declare-fun temp162_75 () (_ BitVec 64))
(declare-fun temp162_74 () (_ BitVec 64))
(declare-fun temp162_77 () (_ BitVec 64))
(declare-fun temp162_76 () (_ BitVec 64))
(declare-fun temp162_79 () (_ BitVec 64))
(declare-fun temp162_78 () (_ BitVec 64))
(declare-fun temp162_81 () (_ BitVec 64))
(declare-fun temp162_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp162_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp162_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp162_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp162_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp162_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun var9521447 () (_ BitVec 64))
(declare-fun temp162_88 () (_ BitVec 64))
(declare-fun temp162_87 () (_ BitVec 64))
(declare-fun temp162_89 () (_ BitVec 64))
(declare-fun var9768090 () (_ BitVec 64))
(assert (= temp162_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp162_1)))
(assert (= temp162_2 #x0000000000000000))
(assert (= var1050945 temp162_2))
(assert (= temp162_3 #xffffffffffffffff))
(assert (= var67312 temp162_3))
(assert (= temp162_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp162_4)))
(assert (= temp162_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp162_5)))
(assert (= temp162_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp162_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp162_7 #x0000000000000000))
(assert (= var82187 temp162_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp162_8 #x0000000000000000))
(assert (= var82356 temp162_8))
(assert (= temp162_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp162_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp162_10 #x0000000000000001))
(assert (= var82528 temp162_10))
(assert (= temp162_11 #x0000000000000000))
(assert (= var65913 temp162_11))
(assert (= temp162_12 #x0000000000000000))
(assert (= temp162_13 temp162_12))
(assert (= temp162_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp162_13)))
(assert (= temp162_15 #x0000000000000001))
(assert (= temp162_16 temp162_15))
(assert (= temp162_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp162_16)))
(assert (= temp162_18 #x0000000000000002))
(assert (= temp162_19 temp162_18))
(assert (= temp162_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp162_19)))
(assert (= temp162_21 #x0000000000000003))
(assert (= temp162_22 temp162_21))
(assert (= temp162_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp162_22)))
(assert (= temp162_24 #x0000000000000004))
(assert (= temp162_25 temp162_24))
(assert (= temp162_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp162_25)))
(assert (= temp162_27 #x0000000000000005))
(assert (= temp162_28 temp162_27))
(assert (= temp162_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp162_28)))
(assert (= temp162_31 #x0000000000000000))
(assert (= temp162_30
   (ite (bvslt var65913 temp162_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp162_32 temp162_30))
(assert (= temp162_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp162_32)))
(assert (= var82530 temp162_33))
(assert (bvslt temp162_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp162_34 #x0000000000000001))
(assert (= var82531 temp162_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp162_35 #x0000000000000001))
(assert (= var82728 temp162_35))
(assert (= var1914351 var65913))
(assert (= temp162_36 #x0000000000000001))
(assert (= var2115797 temp162_36))
(assert (= temp162_37 #x0000000000000002))
(assert (= var2115798 temp162_37))
(assert (= temp162_39 #x0000000000000000))
(assert (= temp162_38 temp162_39))
(assert (= temp162_40 #x0000000000000000))
(assert (= var2628020 temp162_40))
(assert (= temp162_41 #x0000000000000001))
(assert (= temp162_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp162_41 temp162_42)))
(assert (= temp162_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp162_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp162_44 #x0000000000000000))
(assert (= var3740377 temp162_44))
(assert (= temp162_45 #x0000000000000002))
(assert (= var69143 temp162_45))
(assert (= temp162_47 #x0000000000000001))
(assert (= temp162_46 temp162_47))
(assert (= temp162_49 #x0000000000000001))
(assert (= temp162_48 temp162_49))
(assert (= temp162_51 #x0000000000000003))
(assert (= temp162_50 temp162_51))
(assert (= temp162_52 #x0000000000000001))
(assert (= var4212949 temp162_52))
(assert (= var4212950 var69143))
(assert (= temp162_54 #x0000000000000001))
(assert (= temp162_53 temp162_54))
(assert (= temp162_56 #x0000000000000001))
(assert (= temp162_55 temp162_56))
(assert (= temp162_58 #x0000000000000001))
(assert (= temp162_57 temp162_58))
(assert (= temp162_60 #x0000000000000001))
(assert (= temp162_59 temp162_60))
(assert (= temp162_62 #x0000000000000000))
(assert (= temp162_61 temp162_62))
(assert (= temp162_64 #x0000000000000001))
(assert (= temp162_63 temp162_64))
(assert (= var4868391 var69143))
(assert (= temp162_65 #x0000000000000002))
(assert (= var4983962 temp162_65))
(assert (= temp162_67 #x0000000000000001))
(assert (= temp162_66 temp162_67))
(assert (= temp162_69 #x0000000000000001))
(assert (= temp162_68 temp162_69))
(assert (= var5453295 var65913))
(assert (= temp162_71 #x0000000000000001))
(assert (= temp162_70 temp162_71))
(assert (= temp162_73 #x0000000000000001))
(assert (= temp162_72 temp162_73))
(assert (= temp162_75 #x0000000000000001))
(assert (= temp162_74 temp162_75))
(assert (= temp162_77 #x0000000000000001))
(assert (= temp162_76 temp162_77))
(assert (= temp162_79 #x0000000000000000))
(assert (= temp162_78 temp162_79))
(assert (= temp162_81 #x0000000000000001))
(assert (= temp162_80 temp162_81))
(assert (= var6375719 var69143))
(assert (= temp162_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp162_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp162_83 #x0000000000000001))
(assert (= var83534 temp162_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp162_84 #x0000000000000001))
(assert (= var6818808 temp162_84))
(assert (= var7801844 var69143))
(assert (= temp162_85 #x0000000000000001))
(assert (= var7801848 temp162_85))
(assert (= temp162_86 #x0000000000000001))
(assert (= var9259303 temp162_86))
(assert (= var9521447 var65913))
(assert (= temp162_88 #x0000000000000001))
(assert (= temp162_87 temp162_88))
(assert (= temp162_89 #x0000000000000000))
(assert (= var9768090 temp162_89))
(model-add temp162_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp162_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp162_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp162_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp162_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp162_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp162_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




