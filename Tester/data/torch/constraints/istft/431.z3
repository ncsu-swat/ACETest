(declare-fun temp1279_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp1279_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp1279_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp1279_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp1279_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp1279_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp1279_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp1279_8 () (_ BitVec 64))
(declare-fun temp1279_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp1279_10 () (_ BitVec 64))
(declare-fun temp1279_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp1279_12 () (_ BitVec 64))
(declare-fun temp1279_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1279_14 () (_ BitVec 64))
(declare-fun temp1279_15 () (_ BitVec 64))
(declare-fun temp1279_16 () (_ BitVec 64))
(declare-fun temp1279_17 () (_ BitVec 64))
(declare-fun temp1279_18 () (_ BitVec 64))
(declare-fun temp1279_19 () (_ BitVec 64))
(declare-fun temp1279_20 () (_ BitVec 64))
(declare-fun temp1279_21 () (_ BitVec 64))
(declare-fun temp1279_22 () (_ BitVec 64))
(declare-fun temp1279_23 () (_ BitVec 64))
(declare-fun temp1279_24 () (_ BitVec 64))
(declare-fun temp1279_25 () (_ BitVec 64))
(declare-fun temp1279_26 () (_ BitVec 64))
(declare-fun temp1279_27 () (_ BitVec 64))
(declare-fun temp1279_28 () (_ BitVec 64))
(declare-fun temp1279_29 () (_ BitVec 64))
(declare-fun temp1279_31 () (_ BitVec 64))
(declare-fun temp1279_30 () (_ BitVec 64))
(declare-fun temp1279_32 () (_ BitVec 64))
(declare-fun temp1279_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp1279_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp1279_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp1279_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp1279_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp1279_39 () (_ BitVec 64))
(declare-fun temp1279_38 () (_ BitVec 64))
(declare-fun temp1279_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp1279_41 () (_ BitVec 64))
(declare-fun temp1279_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp1279_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp1279_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp1279_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp1279_47 () (_ BitVec 64))
(declare-fun temp1279_46 () (_ BitVec 64))
(declare-fun temp1279_49 () (_ BitVec 64))
(declare-fun temp1279_48 () (_ BitVec 64))
(declare-fun temp1279_51 () (_ BitVec 64))
(declare-fun temp1279_50 () (_ BitVec 64))
(declare-fun temp1279_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp1279_54 () (_ BitVec 64))
(declare-fun temp1279_53 () (_ BitVec 64))
(declare-fun temp1279_56 () (_ BitVec 64))
(declare-fun temp1279_55 () (_ BitVec 64))
(declare-fun temp1279_58 () (_ BitVec 64))
(declare-fun temp1279_57 () (_ BitVec 64))
(declare-fun temp1279_60 () (_ BitVec 64))
(declare-fun temp1279_59 () (_ BitVec 64))
(declare-fun temp1279_62 () (_ BitVec 64))
(declare-fun temp1279_61 () (_ BitVec 64))
(declare-fun temp1279_64 () (_ BitVec 64))
(declare-fun temp1279_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp1279_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp1279_67 () (_ BitVec 64))
(declare-fun temp1279_66 () (_ BitVec 64))
(declare-fun temp1279_69 () (_ BitVec 64))
(declare-fun temp1279_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp1279_71 () (_ BitVec 64))
(declare-fun temp1279_70 () (_ BitVec 64))
(declare-fun temp1279_73 () (_ BitVec 64))
(declare-fun temp1279_72 () (_ BitVec 64))
(declare-fun temp1279_75 () (_ BitVec 64))
(declare-fun temp1279_74 () (_ BitVec 64))
(declare-fun temp1279_77 () (_ BitVec 64))
(declare-fun temp1279_76 () (_ BitVec 64))
(declare-fun temp1279_79 () (_ BitVec 64))
(declare-fun temp1279_78 () (_ BitVec 64))
(declare-fun temp1279_81 () (_ BitVec 64))
(declare-fun temp1279_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp1279_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp1279_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp1279_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun temp1279_85 () (_ BitVec 64))
(declare-fun var6818858 () (_ BitVec 64))
(declare-fun temp1279_86 () (_ BitVec 64))
(declare-fun var7670772 () (_ BitVec 64))
(declare-fun temp1279_87 () (_ BitVec 64))
(declare-fun var7670776 () (_ BitVec 64))
(declare-fun temp1279_88 () (_ BitVec 64))
(declare-fun var7670814 () (_ BitVec 64))
(declare-fun temp1279_89 () (_ BitVec 64))
(declare-fun var7670826 () (_ BitVec 64))
(declare-fun temp1279_90 () (_ BitVec 64))
(declare-fun temp1279_91 () (_ BitVec 64))
(declare-fun temp1279_92 () (_ BitVec 64))
(declare-fun var8866087 () (_ BitVec 64))
(assert (= temp1279_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp1279_1)))
(assert (= temp1279_2 #x0000000000000000))
(assert (= var1050945 temp1279_2))
(assert (= temp1279_3 #xffffffffffffffff))
(assert (= var67312 temp1279_3))
(assert (= temp1279_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp1279_4)))
(assert (= temp1279_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp1279_5)))
(assert (= temp1279_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp1279_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp1279_7 #x0000000000000000))
(assert (= var82187 temp1279_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1279_8 #x0000000000000000))
(assert (= var82356 temp1279_8))
(assert (= temp1279_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp1279_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1279_10 #x0000000000000001))
(assert (= var82528 temp1279_10))
(assert (= temp1279_11 #x0000000000000000))
(assert (= var65913 temp1279_11))
(assert (= temp1279_12 #x0000000000000000))
(assert (= temp1279_13 temp1279_12))
(assert (= temp1279_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp1279_13)))
(assert (= temp1279_15 #x0000000000000001))
(assert (= temp1279_16 temp1279_15))
(assert (= temp1279_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp1279_16)))
(assert (= temp1279_18 #x0000000000000002))
(assert (= temp1279_19 temp1279_18))
(assert (= temp1279_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp1279_19)))
(assert (= temp1279_21 #x0000000000000003))
(assert (= temp1279_22 temp1279_21))
(assert (= temp1279_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp1279_22)))
(assert (= temp1279_24 #x0000000000000004))
(assert (= temp1279_25 temp1279_24))
(assert (= temp1279_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp1279_25)))
(assert (= temp1279_27 #x0000000000000005))
(assert (= temp1279_28 temp1279_27))
(assert (= temp1279_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp1279_28)))
(assert (= temp1279_31 #x0000000000000000))
(assert (= temp1279_30
   (ite (bvslt var65913 temp1279_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp1279_32 temp1279_30))
(assert (= temp1279_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp1279_32)))
(assert (= var82530 temp1279_33))
(assert (bvslt temp1279_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1279_34 #x0000000000000001))
(assert (= var82531 temp1279_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1279_35 #x0000000000000001))
(assert (= var82728 temp1279_35))
(assert (= var1914351 var65913))
(assert (= temp1279_36 #x0000000000000001))
(assert (= var2115797 temp1279_36))
(assert (= temp1279_37 #x0000000000000002))
(assert (= var2115798 temp1279_37))
(assert (= temp1279_39 #x0000000000000000))
(assert (= temp1279_38 temp1279_39))
(assert (= temp1279_40 #x0000000000000000))
(assert (= var2628020 temp1279_40))
(assert (= temp1279_41 #x0000000000000001))
(assert (= temp1279_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp1279_41
        temp1279_42)))
(assert (= temp1279_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp1279_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp1279_44 #x0000000000000000))
(assert (= var3740377 temp1279_44))
(assert (= temp1279_45 #x0000000000000002))
(assert (= var69143 temp1279_45))
(assert (= temp1279_47 #x0000000000000001))
(assert (= temp1279_46 temp1279_47))
(assert (= temp1279_49 #x0000000000000001))
(assert (= temp1279_48 temp1279_49))
(assert (= temp1279_51 #x0000000000000003))
(assert (= temp1279_50 temp1279_51))
(assert (= temp1279_52 #x0000000000000001))
(assert (= var4212949 temp1279_52))
(assert (= var4212950 var69143))
(assert (= temp1279_54 #x0000000000000001))
(assert (= temp1279_53 temp1279_54))
(assert (= temp1279_56 #x0000000000000001))
(assert (= temp1279_55 temp1279_56))
(assert (= temp1279_58 #x0000000000000001))
(assert (= temp1279_57 temp1279_58))
(assert (= temp1279_60 #x0000000000000001))
(assert (= temp1279_59 temp1279_60))
(assert (= temp1279_62 #x0000000000000000))
(assert (= temp1279_61 temp1279_62))
(assert (= temp1279_64 #x0000000000000001))
(assert (= temp1279_63 temp1279_64))
(assert (= var4868391 var69143))
(assert (= temp1279_65 #x0000000000000002))
(assert (= var4983962 temp1279_65))
(assert (= temp1279_67 #x0000000000000001))
(assert (= temp1279_66 temp1279_67))
(assert (= temp1279_69 #x0000000000000001))
(assert (= temp1279_68 temp1279_69))
(assert (= var5453295 var65913))
(assert (= temp1279_71 #x0000000000000001))
(assert (= temp1279_70 temp1279_71))
(assert (= temp1279_73 #x0000000000000001))
(assert (= temp1279_72 temp1279_73))
(assert (= temp1279_75 #x0000000000000001))
(assert (= temp1279_74 temp1279_75))
(assert (= temp1279_77 #x0000000000000001))
(assert (= temp1279_76 temp1279_77))
(assert (= temp1279_79 #x0000000000000000))
(assert (= temp1279_78 temp1279_79))
(assert (= temp1279_81 #x0000000000000001))
(assert (= temp1279_80 temp1279_81))
(assert (= var6375719 var69143))
(assert (= temp1279_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp1279_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1279_83 #x0000000000000001))
(assert (= var83534 temp1279_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp1279_84 #x0000000000000001))
(assert (= var6818808 temp1279_84))
(assert (= temp1279_85 #x0000000000000000))
(assert (= var6818858 temp1279_85))
(assert (= temp1279_86 #x0000000000000000))
(assert (= var6818858 temp1279_86))
(assert (= var7670772 var69143))
(assert (= temp1279_87 #x0000000000000001))
(assert (= var7670776 temp1279_87))
(assert (= temp1279_88 #x0000000000000000))
(assert (= var7670814 temp1279_88))
(assert (= temp1279_89 #x0000000000000000))
(assert (= var7670826 temp1279_89))
(assert (= temp1279_90 #x0000000000000000))
(assert (= var7670826 temp1279_90))
(assert (= temp1279_91 #x0000000000000000))
(assert (= var7670814 temp1279_91))
(assert (= temp1279_92 #x0000000000000001))
(assert (= var8866087 temp1279_92))
(model-add temp1279_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1279_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp1279_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp1279_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1279_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp1279_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1279_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





