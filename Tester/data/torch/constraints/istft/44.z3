(declare-fun temp76_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp76_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp76_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp76_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp76_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp76_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp76_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp76_8 () (_ BitVec 64))
(declare-fun temp76_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp76_10 () (_ BitVec 64))
(declare-fun temp76_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp76_12 () (_ BitVec 64))
(declare-fun temp76_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76_14 () (_ BitVec 64))
(declare-fun temp76_15 () (_ BitVec 64))
(declare-fun temp76_16 () (_ BitVec 64))
(declare-fun temp76_17 () (_ BitVec 64))
(declare-fun temp76_18 () (_ BitVec 64))
(declare-fun temp76_19 () (_ BitVec 64))
(declare-fun temp76_20 () (_ BitVec 64))
(declare-fun temp76_21 () (_ BitVec 64))
(declare-fun temp76_22 () (_ BitVec 64))
(declare-fun temp76_23 () (_ BitVec 64))
(declare-fun temp76_24 () (_ BitVec 64))
(declare-fun temp76_25 () (_ BitVec 64))
(declare-fun temp76_26 () (_ BitVec 64))
(declare-fun temp76_27 () (_ BitVec 64))
(declare-fun temp76_28 () (_ BitVec 64))
(declare-fun temp76_29 () (_ BitVec 64))
(declare-fun temp76_31 () (_ BitVec 64))
(declare-fun temp76_30 () (_ BitVec 64))
(declare-fun temp76_32 () (_ BitVec 64))
(declare-fun temp76_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp76_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp76_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp76_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp76_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp76_39 () (_ BitVec 64))
(declare-fun temp76_38 () (_ BitVec 64))
(declare-fun temp76_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp76_41 () (_ BitVec 64))
(declare-fun temp76_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp76_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp76_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp76_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp76_47 () (_ BitVec 64))
(declare-fun temp76_46 () (_ BitVec 64))
(declare-fun temp76_49 () (_ BitVec 64))
(declare-fun temp76_48 () (_ BitVec 64))
(declare-fun temp76_51 () (_ BitVec 64))
(declare-fun temp76_50 () (_ BitVec 64))
(declare-fun temp76_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp76_54 () (_ BitVec 64))
(declare-fun temp76_53 () (_ BitVec 64))
(declare-fun temp76_56 () (_ BitVec 64))
(declare-fun temp76_55 () (_ BitVec 64))
(declare-fun temp76_58 () (_ BitVec 64))
(declare-fun temp76_57 () (_ BitVec 64))
(declare-fun temp76_60 () (_ BitVec 64))
(declare-fun temp76_59 () (_ BitVec 64))
(declare-fun temp76_62 () (_ BitVec 64))
(declare-fun temp76_61 () (_ BitVec 64))
(declare-fun temp76_64 () (_ BitVec 64))
(declare-fun temp76_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp76_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp76_67 () (_ BitVec 64))
(declare-fun temp76_66 () (_ BitVec 64))
(declare-fun temp76_69 () (_ BitVec 64))
(declare-fun temp76_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp76_71 () (_ BitVec 64))
(declare-fun temp76_70 () (_ BitVec 64))
(declare-fun temp76_73 () (_ BitVec 64))
(declare-fun temp76_72 () (_ BitVec 64))
(declare-fun temp76_75 () (_ BitVec 64))
(declare-fun temp76_74 () (_ BitVec 64))
(declare-fun temp76_77 () (_ BitVec 64))
(declare-fun temp76_76 () (_ BitVec 64))
(declare-fun temp76_79 () (_ BitVec 64))
(declare-fun temp76_78 () (_ BitVec 64))
(declare-fun temp76_81 () (_ BitVec 64))
(declare-fun temp76_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp76_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp76_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp76_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp76_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp76_86 () (_ BitVec 64))
(declare-fun var7867434 () (_ BitVec 64))
(declare-fun temp76_87 () (_ BitVec 64))
(declare-fun temp76_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun temp76_89 () (_ BitVec 64))
(declare-fun var9440410 () (_ BitVec 64))
(assert (= temp76_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp76_1)))
(assert (= temp76_2 #x0000000000000000))
(assert (= var1050945 temp76_2))
(assert (= temp76_3 #xffffffffffffffff))
(assert (= var67312 temp76_3))
(assert (= temp76_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp76_4)))
(assert (= temp76_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp76_5)))
(assert (= temp76_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp76_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp76_7 #x0000000000000000))
(assert (= var82187 temp76_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_8 #x0000000000000000))
(assert (= var82356 temp76_8))
(assert (= temp76_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp76_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_10 #x0000000000000001))
(assert (= var82528 temp76_10))
(assert (= temp76_11 #x0000000000000000))
(assert (= var65913 temp76_11))
(assert (= temp76_12 #x0000000000000000))
(assert (= temp76_13 temp76_12))
(assert (= temp76_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp76_13)))
(assert (= temp76_15 #x0000000000000001))
(assert (= temp76_16 temp76_15))
(assert (= temp76_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp76_16)))
(assert (= temp76_18 #x0000000000000002))
(assert (= temp76_19 temp76_18))
(assert (= temp76_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp76_19)))
(assert (= temp76_21 #x0000000000000003))
(assert (= temp76_22 temp76_21))
(assert (= temp76_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp76_22)))
(assert (= temp76_24 #x0000000000000004))
(assert (= temp76_25 temp76_24))
(assert (= temp76_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp76_25)))
(assert (= temp76_27 #x0000000000000005))
(assert (= temp76_28 temp76_27))
(assert (= temp76_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp76_28)))
(assert (= temp76_31 #x0000000000000000))
(assert (= temp76_30
   (ite (bvslt var65913 temp76_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp76_32 temp76_30))
(assert (= temp76_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp76_32)))
(assert (= var82530 temp76_33))
(assert (bvslt temp76_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp76_34 #x0000000000000001))
(assert (= var82531 temp76_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp76_35 #x0000000000000001))
(assert (= var82728 temp76_35))
(assert (= var1914351 var65913))
(assert (= temp76_36 #x0000000000000001))
(assert (= var2115797 temp76_36))
(assert (= temp76_37 #x0000000000000002))
(assert (= var2115798 temp76_37))
(assert (= temp76_39 #x0000000000000000))
(assert (= temp76_38 temp76_39))
(assert (= temp76_40 #x0000000000000000))
(assert (= var2628020 temp76_40))
(assert (= temp76_41 #x0000000000000001))
(assert (= temp76_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp76_41 temp76_42)))
(assert (= temp76_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp76_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp76_44 #x0000000000000000))
(assert (= var3740377 temp76_44))
(assert (= temp76_45 #x0000000000000002))
(assert (= var69143 temp76_45))
(assert (= temp76_47 #x0000000000000001))
(assert (= temp76_46 temp76_47))
(assert (= temp76_49 #x0000000000000001))
(assert (= temp76_48 temp76_49))
(assert (= temp76_51 #x0000000000000003))
(assert (= temp76_50 temp76_51))
(assert (= temp76_52 #x0000000000000001))
(assert (= var4212949 temp76_52))
(assert (= var4212950 var69143))
(assert (= temp76_54 #x0000000000000001))
(assert (= temp76_53 temp76_54))
(assert (= temp76_56 #x0000000000000001))
(assert (= temp76_55 temp76_56))
(assert (= temp76_58 #x0000000000000001))
(assert (= temp76_57 temp76_58))
(assert (= temp76_60 #x0000000000000001))
(assert (= temp76_59 temp76_60))
(assert (= temp76_62 #x0000000000000000))
(assert (= temp76_61 temp76_62))
(assert (= temp76_64 #x0000000000000001))
(assert (= temp76_63 temp76_64))
(assert (= var4868391 var69143))
(assert (= temp76_65 #x0000000000000002))
(assert (= var4983962 temp76_65))
(assert (= temp76_67 #x0000000000000001))
(assert (= temp76_66 temp76_67))
(assert (= temp76_69 #x0000000000000001))
(assert (= temp76_68 temp76_69))
(assert (= var5453295 var65913))
(assert (= temp76_71 #x0000000000000001))
(assert (= temp76_70 temp76_71))
(assert (= temp76_73 #x0000000000000001))
(assert (= temp76_72 temp76_73))
(assert (= temp76_75 #x0000000000000001))
(assert (= temp76_74 temp76_75))
(assert (= temp76_77 #x0000000000000001))
(assert (= temp76_76 temp76_77))
(assert (= temp76_79 #x0000000000000000))
(assert (= temp76_78 temp76_79))
(assert (= temp76_81 #x0000000000000001))
(assert (= temp76_80 temp76_81))
(assert (= var6375719 var69143))
(assert (= temp76_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp76_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_83 #x0000000000000001))
(assert (= var83534 temp76_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp76_84 #x0000000000000001))
(assert (= var6818808 temp76_84))
(assert (= var7867380 var69143))
(assert (= temp76_85 #x0000000000000001))
(assert (= var7867384 temp76_85))
(assert (= temp76_86 #x0000000000000000))
(assert (= var7867434 temp76_86))
(assert (= temp76_87 #x0000000000000000))
(assert (= var7867434 temp76_87))
(assert (= temp76_88 #x0000000000000001))
(assert (= var9128231 temp76_88))
(assert (= temp76_89 #x0000000000000000))
(assert (= var9440410 temp76_89))
(model-add temp76_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp76_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp76_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp76_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp76_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp76_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp76_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





