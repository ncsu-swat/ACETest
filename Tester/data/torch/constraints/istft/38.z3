(declare-fun temp68_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp68_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp68_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp68_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp68_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp68_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp68_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp68_8 () (_ BitVec 64))
(declare-fun temp68_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp68_10 () (_ BitVec 64))
(declare-fun temp68_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp68_12 () (_ BitVec 64))
(declare-fun temp68_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_14 () (_ BitVec 64))
(declare-fun temp68_15 () (_ BitVec 64))
(declare-fun temp68_16 () (_ BitVec 64))
(declare-fun temp68_17 () (_ BitVec 64))
(declare-fun temp68_18 () (_ BitVec 64))
(declare-fun temp68_19 () (_ BitVec 64))
(declare-fun temp68_20 () (_ BitVec 64))
(declare-fun temp68_21 () (_ BitVec 64))
(declare-fun temp68_22 () (_ BitVec 64))
(declare-fun temp68_23 () (_ BitVec 64))
(declare-fun temp68_24 () (_ BitVec 64))
(declare-fun temp68_25 () (_ BitVec 64))
(declare-fun temp68_26 () (_ BitVec 64))
(declare-fun temp68_27 () (_ BitVec 64))
(declare-fun temp68_28 () (_ BitVec 64))
(declare-fun temp68_29 () (_ BitVec 64))
(declare-fun temp68_31 () (_ BitVec 64))
(declare-fun temp68_30 () (_ BitVec 64))
(declare-fun temp68_32 () (_ BitVec 64))
(declare-fun temp68_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp68_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp68_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp68_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp68_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp68_39 () (_ BitVec 64))
(declare-fun temp68_38 () (_ BitVec 64))
(declare-fun temp68_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp68_41 () (_ BitVec 64))
(declare-fun temp68_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp68_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp68_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp68_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp68_47 () (_ BitVec 64))
(declare-fun temp68_46 () (_ BitVec 64))
(declare-fun temp68_49 () (_ BitVec 64))
(declare-fun temp68_48 () (_ BitVec 64))
(declare-fun temp68_51 () (_ BitVec 64))
(declare-fun temp68_50 () (_ BitVec 64))
(declare-fun temp68_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp68_54 () (_ BitVec 64))
(declare-fun temp68_53 () (_ BitVec 64))
(declare-fun temp68_56 () (_ BitVec 64))
(declare-fun temp68_55 () (_ BitVec 64))
(declare-fun temp68_58 () (_ BitVec 64))
(declare-fun temp68_57 () (_ BitVec 64))
(declare-fun temp68_60 () (_ BitVec 64))
(declare-fun temp68_59 () (_ BitVec 64))
(declare-fun temp68_62 () (_ BitVec 64))
(declare-fun temp68_61 () (_ BitVec 64))
(declare-fun temp68_64 () (_ BitVec 64))
(declare-fun temp68_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp68_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp68_67 () (_ BitVec 64))
(declare-fun temp68_66 () (_ BitVec 64))
(declare-fun temp68_69 () (_ BitVec 64))
(declare-fun temp68_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp68_71 () (_ BitVec 64))
(declare-fun temp68_70 () (_ BitVec 64))
(declare-fun temp68_73 () (_ BitVec 64))
(declare-fun temp68_72 () (_ BitVec 64))
(declare-fun temp68_75 () (_ BitVec 64))
(declare-fun temp68_74 () (_ BitVec 64))
(declare-fun temp68_77 () (_ BitVec 64))
(declare-fun temp68_76 () (_ BitVec 64))
(declare-fun temp68_79 () (_ BitVec 64))
(declare-fun temp68_78 () (_ BitVec 64))
(declare-fun temp68_81 () (_ BitVec 64))
(declare-fun temp68_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp68_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp68_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp68_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp68_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp68_86 () (_ BitVec 64))
(declare-fun var7867434 () (_ BitVec 64))
(declare-fun temp68_87 () (_ BitVec 64))
(declare-fun temp68_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp68_89 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp68_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp68_1)))
(assert (= temp68_2 #x0000000000000000))
(assert (= var1050945 temp68_2))
(assert (= temp68_3 #xffffffffffffffff))
(assert (= var67312 temp68_3))
(assert (= temp68_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp68_4)))
(assert (= temp68_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp68_5)))
(assert (= temp68_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp68_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp68_7 #x0000000000000000))
(assert (= var82187 temp68_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_8 #x0000000000000000))
(assert (= var82356 temp68_8))
(assert (= temp68_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp68_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_10 #x0000000000000001))
(assert (= var82528 temp68_10))
(assert (= temp68_11 #x0000000000000000))
(assert (= var65913 temp68_11))
(assert (= temp68_12 #x0000000000000000))
(assert (= temp68_13 temp68_12))
(assert (= temp68_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp68_13)))
(assert (= temp68_15 #x0000000000000001))
(assert (= temp68_16 temp68_15))
(assert (= temp68_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp68_16)))
(assert (= temp68_18 #x0000000000000002))
(assert (= temp68_19 temp68_18))
(assert (= temp68_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp68_19)))
(assert (= temp68_21 #x0000000000000003))
(assert (= temp68_22 temp68_21))
(assert (= temp68_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp68_22)))
(assert (= temp68_24 #x0000000000000004))
(assert (= temp68_25 temp68_24))
(assert (= temp68_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp68_25)))
(assert (= temp68_27 #x0000000000000005))
(assert (= temp68_28 temp68_27))
(assert (= temp68_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp68_28)))
(assert (= temp68_31 #x0000000000000000))
(assert (= temp68_30
   (ite (bvslt var65913 temp68_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp68_32 temp68_30))
(assert (= temp68_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp68_32)))
(assert (= var82530 temp68_33))
(assert (bvslt temp68_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_34 #x0000000000000001))
(assert (= var82531 temp68_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_35 #x0000000000000001))
(assert (= var82728 temp68_35))
(assert (= var1914351 var65913))
(assert (= temp68_36 #x0000000000000001))
(assert (= var2115797 temp68_36))
(assert (= temp68_37 #x0000000000000002))
(assert (= var2115798 temp68_37))
(assert (= temp68_39 #x0000000000000000))
(assert (= temp68_38 temp68_39))
(assert (= temp68_40 #x0000000000000000))
(assert (= var2628020 temp68_40))
(assert (= temp68_41 #x0000000000000001))
(assert (= temp68_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp68_41 temp68_42)))
(assert (= temp68_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp68_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp68_44 #x0000000000000000))
(assert (= var3740377 temp68_44))
(assert (= temp68_45 #x0000000000000002))
(assert (= var69143 temp68_45))
(assert (= temp68_47 #x0000000000000001))
(assert (= temp68_46 temp68_47))
(assert (= temp68_49 #x0000000000000001))
(assert (= temp68_48 temp68_49))
(assert (= temp68_51 #x0000000000000003))
(assert (= temp68_50 temp68_51))
(assert (= temp68_52 #x0000000000000001))
(assert (= var4212949 temp68_52))
(assert (= var4212950 var69143))
(assert (= temp68_54 #x0000000000000001))
(assert (= temp68_53 temp68_54))
(assert (= temp68_56 #x0000000000000001))
(assert (= temp68_55 temp68_56))
(assert (= temp68_58 #x0000000000000001))
(assert (= temp68_57 temp68_58))
(assert (= temp68_60 #x0000000000000001))
(assert (= temp68_59 temp68_60))
(assert (= temp68_62 #x0000000000000000))
(assert (= temp68_61 temp68_62))
(assert (= temp68_64 #x0000000000000001))
(assert (= temp68_63 temp68_64))
(assert (= var4868391 var69143))
(assert (= temp68_65 #x0000000000000002))
(assert (= var4983962 temp68_65))
(assert (= temp68_67 #x0000000000000001))
(assert (= temp68_66 temp68_67))
(assert (= temp68_69 #x0000000000000001))
(assert (= temp68_68 temp68_69))
(assert (= var5453295 var65913))
(assert (= temp68_71 #x0000000000000001))
(assert (= temp68_70 temp68_71))
(assert (= temp68_73 #x0000000000000001))
(assert (= temp68_72 temp68_73))
(assert (= temp68_75 #x0000000000000001))
(assert (= temp68_74 temp68_75))
(assert (= temp68_77 #x0000000000000001))
(assert (= temp68_76 temp68_77))
(assert (= temp68_79 #x0000000000000000))
(assert (= temp68_78 temp68_79))
(assert (= temp68_81 #x0000000000000001))
(assert (= temp68_80 temp68_81))
(assert (= var6375719 var69143))
(assert (= temp68_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp68_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_83 #x0000000000000001))
(assert (= var83534 temp68_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp68_84 #x0000000000000001))
(assert (= var6818808 temp68_84))
(assert (= var7867380 var69143))
(assert (= temp68_85 #x0000000000000001))
(assert (= var7867384 temp68_85))
(assert (= temp68_86 #x0000000000000000))
(assert (= var7867434 temp68_86))
(assert (= temp68_87 #x0000000000000000))
(assert (= var7867434 temp68_87))
(assert (= temp68_88 #x0000000000000001))
(assert (= var9193767 temp68_88))
(assert (= temp68_89 #x0000000000000000))
(assert (= var9505946 temp68_89))
(model-add temp68_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp68_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp68_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp68_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp68_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp68_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp68_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



