(declare-fun temp158_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp158_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp158_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp158_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp158_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp158_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp158_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp158_8 () (_ BitVec 64))
(declare-fun temp158_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp158_10 () (_ BitVec 64))
(declare-fun temp158_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp158_12 () (_ BitVec 64))
(declare-fun temp158_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_14 () (_ BitVec 64))
(declare-fun temp158_15 () (_ BitVec 64))
(declare-fun temp158_16 () (_ BitVec 64))
(declare-fun temp158_17 () (_ BitVec 64))
(declare-fun temp158_18 () (_ BitVec 64))
(declare-fun temp158_19 () (_ BitVec 64))
(declare-fun temp158_20 () (_ BitVec 64))
(declare-fun temp158_21 () (_ BitVec 64))
(declare-fun temp158_22 () (_ BitVec 64))
(declare-fun temp158_23 () (_ BitVec 64))
(declare-fun temp158_24 () (_ BitVec 64))
(declare-fun temp158_25 () (_ BitVec 64))
(declare-fun temp158_26 () (_ BitVec 64))
(declare-fun temp158_27 () (_ BitVec 64))
(declare-fun temp158_28 () (_ BitVec 64))
(declare-fun temp158_29 () (_ BitVec 64))
(declare-fun temp158_31 () (_ BitVec 64))
(declare-fun temp158_30 () (_ BitVec 64))
(declare-fun temp158_32 () (_ BitVec 64))
(declare-fun temp158_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp158_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp158_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp158_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp158_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp158_39 () (_ BitVec 64))
(declare-fun temp158_38 () (_ BitVec 64))
(declare-fun temp158_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp158_41 () (_ BitVec 64))
(declare-fun temp158_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp158_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp158_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp158_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp158_47 () (_ BitVec 64))
(declare-fun temp158_46 () (_ BitVec 64))
(declare-fun temp158_49 () (_ BitVec 64))
(declare-fun temp158_48 () (_ BitVec 64))
(declare-fun temp158_51 () (_ BitVec 64))
(declare-fun temp158_50 () (_ BitVec 64))
(declare-fun temp158_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp158_54 () (_ BitVec 64))
(declare-fun temp158_53 () (_ BitVec 64))
(declare-fun temp158_56 () (_ BitVec 64))
(declare-fun temp158_55 () (_ BitVec 64))
(declare-fun temp158_58 () (_ BitVec 64))
(declare-fun temp158_57 () (_ BitVec 64))
(declare-fun temp158_60 () (_ BitVec 64))
(declare-fun temp158_59 () (_ BitVec 64))
(declare-fun temp158_62 () (_ BitVec 64))
(declare-fun temp158_61 () (_ BitVec 64))
(declare-fun temp158_64 () (_ BitVec 64))
(declare-fun temp158_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp158_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp158_67 () (_ BitVec 64))
(declare-fun temp158_66 () (_ BitVec 64))
(declare-fun temp158_69 () (_ BitVec 64))
(declare-fun temp158_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp158_71 () (_ BitVec 64))
(declare-fun temp158_70 () (_ BitVec 64))
(declare-fun temp158_73 () (_ BitVec 64))
(declare-fun temp158_72 () (_ BitVec 64))
(declare-fun temp158_75 () (_ BitVec 64))
(declare-fun temp158_74 () (_ BitVec 64))
(declare-fun temp158_77 () (_ BitVec 64))
(declare-fun temp158_76 () (_ BitVec 64))
(declare-fun temp158_79 () (_ BitVec 64))
(declare-fun temp158_78 () (_ BitVec 64))
(declare-fun temp158_81 () (_ BitVec 64))
(declare-fun temp158_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp158_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp158_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp158_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp158_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp158_86 () (_ BitVec 64))
(declare-fun var7867422 () (_ BitVec 64))
(declare-fun temp158_87 () (_ BitVec 64))
(declare-fun var7867434 () (_ BitVec 64))
(declare-fun temp158_88 () (_ BitVec 64))
(declare-fun temp158_89 () (_ BitVec 64))
(declare-fun temp158_90 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun temp158_91 () (_ BitVec 64))
(declare-fun var9374874 () (_ BitVec 64))
(assert (= temp158_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp158_1)))
(assert (= temp158_2 #x0000000000000000))
(assert (= var1050945 temp158_2))
(assert (= temp158_3 #xffffffffffffffff))
(assert (= var67312 temp158_3))
(assert (= temp158_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp158_4)))
(assert (= temp158_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp158_5)))
(assert (= temp158_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp158_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp158_7 #x0000000000000000))
(assert (= var82187 temp158_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_8 #x0000000000000000))
(assert (= var82356 temp158_8))
(assert (= temp158_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp158_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_10 #x0000000000000001))
(assert (= var82528 temp158_10))
(assert (= temp158_11 #x0000000000000000))
(assert (= var65913 temp158_11))
(assert (= temp158_12 #x0000000000000000))
(assert (= temp158_13 temp158_12))
(assert (= temp158_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp158_13)))
(assert (= temp158_15 #x0000000000000001))
(assert (= temp158_16 temp158_15))
(assert (= temp158_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp158_16)))
(assert (= temp158_18 #x0000000000000002))
(assert (= temp158_19 temp158_18))
(assert (= temp158_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp158_19)))
(assert (= temp158_21 #x0000000000000003))
(assert (= temp158_22 temp158_21))
(assert (= temp158_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp158_22)))
(assert (= temp158_24 #x0000000000000004))
(assert (= temp158_25 temp158_24))
(assert (= temp158_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp158_25)))
(assert (= temp158_27 #x0000000000000005))
(assert (= temp158_28 temp158_27))
(assert (= temp158_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp158_28)))
(assert (= temp158_31 #x0000000000000000))
(assert (= temp158_30
   (ite (bvslt var65913 temp158_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp158_32 temp158_30))
(assert (= temp158_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp158_32)))
(assert (= var82530 temp158_33))
(assert (bvslt temp158_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_34 #x0000000000000001))
(assert (= var82531 temp158_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_35 #x0000000000000001))
(assert (= var82728 temp158_35))
(assert (= var1914351 var65913))
(assert (= temp158_36 #x0000000000000001))
(assert (= var2115797 temp158_36))
(assert (= temp158_37 #x0000000000000002))
(assert (= var2115798 temp158_37))
(assert (= temp158_39 #x0000000000000000))
(assert (= temp158_38 temp158_39))
(assert (= temp158_40 #x0000000000000000))
(assert (= var2628020 temp158_40))
(assert (= temp158_41 #x0000000000000001))
(assert (= temp158_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp158_41 temp158_42)))
(assert (= temp158_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp158_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp158_44 #x0000000000000000))
(assert (= var3740377 temp158_44))
(assert (= temp158_45 #x0000000000000002))
(assert (= var69143 temp158_45))
(assert (= temp158_47 #x0000000000000001))
(assert (= temp158_46 temp158_47))
(assert (= temp158_49 #x0000000000000001))
(assert (= temp158_48 temp158_49))
(assert (= temp158_51 #x0000000000000003))
(assert (= temp158_50 temp158_51))
(assert (= temp158_52 #x0000000000000001))
(assert (= var4212949 temp158_52))
(assert (= var4212950 var69143))
(assert (= temp158_54 #x0000000000000001))
(assert (= temp158_53 temp158_54))
(assert (= temp158_56 #x0000000000000001))
(assert (= temp158_55 temp158_56))
(assert (= temp158_58 #x0000000000000001))
(assert (= temp158_57 temp158_58))
(assert (= temp158_60 #x0000000000000001))
(assert (= temp158_59 temp158_60))
(assert (= temp158_62 #x0000000000000000))
(assert (= temp158_61 temp158_62))
(assert (= temp158_64 #x0000000000000001))
(assert (= temp158_63 temp158_64))
(assert (= var4868391 var69143))
(assert (= temp158_65 #x0000000000000002))
(assert (= var4983962 temp158_65))
(assert (= temp158_67 #x0000000000000001))
(assert (= temp158_66 temp158_67))
(assert (= temp158_69 #x0000000000000001))
(assert (= temp158_68 temp158_69))
(assert (= var5453295 var65913))
(assert (= temp158_71 #x0000000000000001))
(assert (= temp158_70 temp158_71))
(assert (= temp158_73 #x0000000000000001))
(assert (= temp158_72 temp158_73))
(assert (= temp158_75 #x0000000000000001))
(assert (= temp158_74 temp158_75))
(assert (= temp158_77 #x0000000000000001))
(assert (= temp158_76 temp158_77))
(assert (= temp158_79 #x0000000000000000))
(assert (= temp158_78 temp158_79))
(assert (= temp158_81 #x0000000000000001))
(assert (= temp158_80 temp158_81))
(assert (= var6375719 var69143))
(assert (= temp158_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp158_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_83 #x0000000000000001))
(assert (= var83534 temp158_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp158_84 #x0000000000000001))
(assert (= var6818808 temp158_84))
(assert (= var7867380 var69143))
(assert (= temp158_85 #x0000000000000001))
(assert (= var7867384 temp158_85))
(assert (= temp158_86 #x0000000000000000))
(assert (= var7867422 temp158_86))
(assert (= temp158_87 #x0000000000000000))
(assert (= var7867434 temp158_87))
(assert (= temp158_88 #x0000000000000000))
(assert (= var7867434 temp158_88))
(assert (= temp158_89 #x0000000000000000))
(assert (= var7867422 temp158_89))
(assert (= temp158_90 #x0000000000000001))
(assert (= var9062695 temp158_90))
(assert (= temp158_91 #x0000000000000000))
(assert (= var9374874 temp158_91))
(model-add temp158_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp158_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp158_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp158_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp158_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp158_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp158_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





