(declare-fun temp2432_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp2432_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp2432_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp2432_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp2432_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp2432_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp2432_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp2432_8 () (_ BitVec 64))
(declare-fun temp2432_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp2432_10 () (_ BitVec 64))
(declare-fun temp2432_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp2432_12 () (_ BitVec 64))
(declare-fun temp2432_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2432_14 () (_ BitVec 64))
(declare-fun temp2432_15 () (_ BitVec 64))
(declare-fun temp2432_16 () (_ BitVec 64))
(declare-fun temp2432_17 () (_ BitVec 64))
(declare-fun temp2432_18 () (_ BitVec 64))
(declare-fun temp2432_19 () (_ BitVec 64))
(declare-fun temp2432_20 () (_ BitVec 64))
(declare-fun temp2432_21 () (_ BitVec 64))
(declare-fun temp2432_22 () (_ BitVec 64))
(declare-fun temp2432_23 () (_ BitVec 64))
(declare-fun temp2432_24 () (_ BitVec 64))
(declare-fun temp2432_25 () (_ BitVec 64))
(declare-fun temp2432_26 () (_ BitVec 64))
(declare-fun temp2432_27 () (_ BitVec 64))
(declare-fun temp2432_28 () (_ BitVec 64))
(declare-fun temp2432_29 () (_ BitVec 64))
(declare-fun temp2432_31 () (_ BitVec 64))
(declare-fun temp2432_30 () (_ BitVec 64))
(declare-fun temp2432_32 () (_ BitVec 64))
(declare-fun temp2432_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp2432_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp2432_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp2432_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp2432_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp2432_39 () (_ BitVec 64))
(declare-fun temp2432_38 () (_ BitVec 64))
(declare-fun temp2432_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp2432_41 () (_ BitVec 64))
(declare-fun temp2432_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp2432_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp2432_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp2432_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp2432_47 () (_ BitVec 64))
(declare-fun temp2432_46 () (_ BitVec 64))
(declare-fun temp2432_49 () (_ BitVec 64))
(declare-fun temp2432_48 () (_ BitVec 64))
(declare-fun temp2432_51 () (_ BitVec 64))
(declare-fun temp2432_50 () (_ BitVec 64))
(declare-fun temp2432_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp2432_54 () (_ BitVec 64))
(declare-fun temp2432_53 () (_ BitVec 64))
(declare-fun temp2432_56 () (_ BitVec 64))
(declare-fun temp2432_55 () (_ BitVec 64))
(declare-fun temp2432_58 () (_ BitVec 64))
(declare-fun temp2432_57 () (_ BitVec 64))
(declare-fun temp2432_60 () (_ BitVec 64))
(declare-fun temp2432_59 () (_ BitVec 64))
(declare-fun temp2432_62 () (_ BitVec 64))
(declare-fun temp2432_61 () (_ BitVec 64))
(declare-fun temp2432_64 () (_ BitVec 64))
(declare-fun temp2432_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp2432_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp2432_67 () (_ BitVec 64))
(declare-fun temp2432_66 () (_ BitVec 64))
(declare-fun temp2432_69 () (_ BitVec 64))
(declare-fun temp2432_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp2432_71 () (_ BitVec 64))
(declare-fun temp2432_70 () (_ BitVec 64))
(declare-fun temp2432_73 () (_ BitVec 64))
(declare-fun temp2432_72 () (_ BitVec 64))
(declare-fun temp2432_75 () (_ BitVec 64))
(declare-fun temp2432_74 () (_ BitVec 64))
(declare-fun temp2432_77 () (_ BitVec 64))
(declare-fun temp2432_76 () (_ BitVec 64))
(declare-fun temp2432_79 () (_ BitVec 64))
(declare-fun temp2432_78 () (_ BitVec 64))
(declare-fun temp2432_81 () (_ BitVec 64))
(declare-fun temp2432_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp2432_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp2432_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp2432_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun temp2432_85 () (_ BitVec 64))
(declare-fun var6818846 () (_ BitVec 64))
(declare-fun temp2432_86 () (_ BitVec 64))
(declare-fun var6818858 () (_ BitVec 64))
(declare-fun temp2432_87 () (_ BitVec 64))
(declare-fun temp2432_88 () (_ BitVec 64))
(declare-fun var7605236 () (_ BitVec 64))
(declare-fun temp2432_89 () (_ BitVec 64))
(declare-fun var7605240 () (_ BitVec 64))
(declare-fun temp2432_90 () (_ BitVec 64))
(declare-fun var8931623 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp2432_92 () (_ BitVec 64))
(declare-fun temp2432_91 () (_ BitVec 64))
(declare-fun temp2432_93 () (_ BitVec 64))
(declare-fun var9440410 () (_ BitVec 64))
(assert (= temp2432_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp2432_1)))
(assert (= temp2432_2 #x0000000000000000))
(assert (= var1050945 temp2432_2))
(assert (= temp2432_3 #xffffffffffffffff))
(assert (= var67312 temp2432_3))
(assert (= temp2432_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp2432_4)))
(assert (= temp2432_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp2432_5)))
(assert (= temp2432_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp2432_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp2432_7 #x0000000000000000))
(assert (= var82187 temp2432_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2432_8 #x0000000000000000))
(assert (= var82356 temp2432_8))
(assert (= temp2432_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp2432_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2432_10 #x0000000000000001))
(assert (= var82528 temp2432_10))
(assert (= temp2432_11 #x0000000000000000))
(assert (= var65913 temp2432_11))
(assert (= temp2432_12 #x0000000000000000))
(assert (= temp2432_13 temp2432_12))
(assert (= temp2432_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp2432_13)))
(assert (= temp2432_15 #x0000000000000001))
(assert (= temp2432_16 temp2432_15))
(assert (= temp2432_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp2432_16)))
(assert (= temp2432_18 #x0000000000000002))
(assert (= temp2432_19 temp2432_18))
(assert (= temp2432_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp2432_19)))
(assert (= temp2432_21 #x0000000000000003))
(assert (= temp2432_22 temp2432_21))
(assert (= temp2432_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp2432_22)))
(assert (= temp2432_24 #x0000000000000004))
(assert (= temp2432_25 temp2432_24))
(assert (= temp2432_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp2432_25)))
(assert (= temp2432_27 #x0000000000000005))
(assert (= temp2432_28 temp2432_27))
(assert (= temp2432_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp2432_28)))
(assert (= temp2432_31 #x0000000000000000))
(assert (= temp2432_30
   (ite (bvslt var65913 temp2432_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp2432_32 temp2432_30))
(assert (= temp2432_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp2432_32)))
(assert (= var82530 temp2432_33))
(assert (bvslt temp2432_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp2432_34 #x0000000000000001))
(assert (= var82531 temp2432_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp2432_35 #x0000000000000001))
(assert (= var82728 temp2432_35))
(assert (= var1914351 var65913))
(assert (= temp2432_36 #x0000000000000001))
(assert (= var2115797 temp2432_36))
(assert (= temp2432_37 #x0000000000000002))
(assert (= var2115798 temp2432_37))
(assert (= temp2432_39 #x0000000000000000))
(assert (= temp2432_38 temp2432_39))
(assert (= temp2432_40 #x0000000000000000))
(assert (= var2628020 temp2432_40))
(assert (= temp2432_41 #x0000000000000001))
(assert (= temp2432_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp2432_41
        temp2432_42)))
(assert (= temp2432_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp2432_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp2432_44 #x0000000000000000))
(assert (= var3740377 temp2432_44))
(assert (= temp2432_45 #x0000000000000002))
(assert (= var69143 temp2432_45))
(assert (= temp2432_47 #x0000000000000001))
(assert (= temp2432_46 temp2432_47))
(assert (= temp2432_49 #x0000000000000001))
(assert (= temp2432_48 temp2432_49))
(assert (= temp2432_51 #x0000000000000003))
(assert (= temp2432_50 temp2432_51))
(assert (= temp2432_52 #x0000000000000001))
(assert (= var4212949 temp2432_52))
(assert (= var4212950 var69143))
(assert (= temp2432_54 #x0000000000000001))
(assert (= temp2432_53 temp2432_54))
(assert (= temp2432_56 #x0000000000000001))
(assert (= temp2432_55 temp2432_56))
(assert (= temp2432_58 #x0000000000000001))
(assert (= temp2432_57 temp2432_58))
(assert (= temp2432_60 #x0000000000000001))
(assert (= temp2432_59 temp2432_60))
(assert (= temp2432_62 #x0000000000000000))
(assert (= temp2432_61 temp2432_62))
(assert (= temp2432_64 #x0000000000000001))
(assert (= temp2432_63 temp2432_64))
(assert (= var4868391 var69143))
(assert (= temp2432_65 #x0000000000000002))
(assert (= var4983962 temp2432_65))
(assert (= temp2432_67 #x0000000000000001))
(assert (= temp2432_66 temp2432_67))
(assert (= temp2432_69 #x0000000000000001))
(assert (= temp2432_68 temp2432_69))
(assert (= var5453295 var65913))
(assert (= temp2432_71 #x0000000000000001))
(assert (= temp2432_70 temp2432_71))
(assert (= temp2432_73 #x0000000000000001))
(assert (= temp2432_72 temp2432_73))
(assert (= temp2432_75 #x0000000000000001))
(assert (= temp2432_74 temp2432_75))
(assert (= temp2432_77 #x0000000000000001))
(assert (= temp2432_76 temp2432_77))
(assert (= temp2432_79 #x0000000000000000))
(assert (= temp2432_78 temp2432_79))
(assert (= temp2432_81 #x0000000000000001))
(assert (= temp2432_80 temp2432_81))
(assert (= var6375719 var69143))
(assert (= temp2432_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp2432_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2432_83 #x0000000000000001))
(assert (= var83534 temp2432_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp2432_84 #x0000000000000001))
(assert (= var6818808 temp2432_84))
(assert (= temp2432_85 #x0000000000000000))
(assert (= var6818846 temp2432_85))
(assert (= temp2432_86 #x0000000000000000))
(assert (= var6818858 temp2432_86))
(assert (= temp2432_87 #x0000000000000000))
(assert (= var6818858 temp2432_87))
(assert (= temp2432_88 #x0000000000000000))
(assert (= var6818846 temp2432_88))
(assert (= var7605236 var69143))
(assert (= temp2432_89 #x0000000000000001))
(assert (= var7605240 temp2432_89))
(assert (= temp2432_90 #x0000000000000001))
(assert (= var8931623 temp2432_90))
(assert (= var9193767 var65913))
(assert (= temp2432_92 #x0000000000000001))
(assert (= temp2432_91 temp2432_92))
(assert (= temp2432_93 #x0000000000000000))
(assert (= var9440410 temp2432_93))
(model-add temp2432_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp2432_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp2432_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp2432_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp2432_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp2432_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp2432_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




