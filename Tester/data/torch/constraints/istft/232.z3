(declare-fun temp501_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp501_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp501_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp501_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp501_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp501_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp501_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp501_8 () (_ BitVec 64))
(declare-fun temp501_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp501_10 () (_ BitVec 64))
(declare-fun temp501_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp501_12 () (_ BitVec 64))
(declare-fun temp501_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_14 () (_ BitVec 64))
(declare-fun temp501_15 () (_ BitVec 64))
(declare-fun temp501_16 () (_ BitVec 64))
(declare-fun temp501_17 () (_ BitVec 64))
(declare-fun temp501_18 () (_ BitVec 64))
(declare-fun temp501_19 () (_ BitVec 64))
(declare-fun temp501_20 () (_ BitVec 64))
(declare-fun temp501_21 () (_ BitVec 64))
(declare-fun temp501_22 () (_ BitVec 64))
(declare-fun temp501_23 () (_ BitVec 64))
(declare-fun temp501_24 () (_ BitVec 64))
(declare-fun temp501_25 () (_ BitVec 64))
(declare-fun temp501_26 () (_ BitVec 64))
(declare-fun temp501_27 () (_ BitVec 64))
(declare-fun temp501_28 () (_ BitVec 64))
(declare-fun temp501_29 () (_ BitVec 64))
(declare-fun temp501_31 () (_ BitVec 64))
(declare-fun temp501_30 () (_ BitVec 64))
(declare-fun temp501_32 () (_ BitVec 64))
(declare-fun temp501_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp501_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp501_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp501_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp501_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp501_39 () (_ BitVec 64))
(declare-fun temp501_38 () (_ BitVec 64))
(declare-fun temp501_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp501_41 () (_ BitVec 64))
(declare-fun temp501_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp501_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp501_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp501_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp501_47 () (_ BitVec 64))
(declare-fun temp501_46 () (_ BitVec 64))
(declare-fun temp501_49 () (_ BitVec 64))
(declare-fun temp501_48 () (_ BitVec 64))
(declare-fun temp501_51 () (_ BitVec 64))
(declare-fun temp501_50 () (_ BitVec 64))
(declare-fun temp501_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp501_54 () (_ BitVec 64))
(declare-fun temp501_53 () (_ BitVec 64))
(declare-fun temp501_56 () (_ BitVec 64))
(declare-fun temp501_55 () (_ BitVec 64))
(declare-fun temp501_58 () (_ BitVec 64))
(declare-fun temp501_57 () (_ BitVec 64))
(declare-fun temp501_60 () (_ BitVec 64))
(declare-fun temp501_59 () (_ BitVec 64))
(declare-fun temp501_62 () (_ BitVec 64))
(declare-fun temp501_61 () (_ BitVec 64))
(declare-fun temp501_64 () (_ BitVec 64))
(declare-fun temp501_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp501_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp501_67 () (_ BitVec 64))
(declare-fun temp501_66 () (_ BitVec 64))
(declare-fun temp501_69 () (_ BitVec 64))
(declare-fun temp501_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp501_71 () (_ BitVec 64))
(declare-fun temp501_70 () (_ BitVec 64))
(declare-fun temp501_73 () (_ BitVec 64))
(declare-fun temp501_72 () (_ BitVec 64))
(declare-fun temp501_75 () (_ BitVec 64))
(declare-fun temp501_74 () (_ BitVec 64))
(declare-fun temp501_77 () (_ BitVec 64))
(declare-fun temp501_76 () (_ BitVec 64))
(declare-fun temp501_79 () (_ BitVec 64))
(declare-fun temp501_78 () (_ BitVec 64))
(declare-fun temp501_81 () (_ BitVec 64))
(declare-fun temp501_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp501_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp501_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp501_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp501_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp501_86 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun temp501_87 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp501_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp501_1)))
(assert (= temp501_2 #x0000000000000000))
(assert (= var1050945 temp501_2))
(assert (= temp501_3 #xffffffffffffffff))
(assert (= var67312 temp501_3))
(assert (= temp501_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp501_4)))
(assert (= temp501_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp501_5)))
(assert (= temp501_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp501_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp501_7 #x0000000000000000))
(assert (= var82187 temp501_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_8 #x0000000000000000))
(assert (= var82356 temp501_8))
(assert (= temp501_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp501_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_10 #x0000000000000001))
(assert (= var82528 temp501_10))
(assert (= temp501_11 #x0000000000000000))
(assert (= var65913 temp501_11))
(assert (= temp501_12 #x0000000000000000))
(assert (= temp501_13 temp501_12))
(assert (= temp501_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp501_13)))
(assert (= temp501_15 #x0000000000000001))
(assert (= temp501_16 temp501_15))
(assert (= temp501_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp501_16)))
(assert (= temp501_18 #x0000000000000002))
(assert (= temp501_19 temp501_18))
(assert (= temp501_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp501_19)))
(assert (= temp501_21 #x0000000000000003))
(assert (= temp501_22 temp501_21))
(assert (= temp501_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp501_22)))
(assert (= temp501_24 #x0000000000000004))
(assert (= temp501_25 temp501_24))
(assert (= temp501_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp501_25)))
(assert (= temp501_27 #x0000000000000005))
(assert (= temp501_28 temp501_27))
(assert (= temp501_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp501_28)))
(assert (= temp501_31 #x0000000000000000))
(assert (= temp501_30
   (ite (bvslt var65913 temp501_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp501_32 temp501_30))
(assert (= temp501_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp501_32)))
(assert (= var82530 temp501_33))
(assert (bvslt temp501_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp501_34 #x0000000000000001))
(assert (= var82531 temp501_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp501_35 #x0000000000000001))
(assert (= var82728 temp501_35))
(assert (= var1914351 var65913))
(assert (= temp501_36 #x0000000000000001))
(assert (= var2115797 temp501_36))
(assert (= temp501_37 #x0000000000000002))
(assert (= var2115798 temp501_37))
(assert (= temp501_39 #x0000000000000000))
(assert (= temp501_38 temp501_39))
(assert (= temp501_40 #x0000000000000000))
(assert (= var2628020 temp501_40))
(assert (= temp501_41 #x0000000000000001))
(assert (= temp501_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp501_41 temp501_42)))
(assert (= temp501_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp501_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp501_44 #x0000000000000000))
(assert (= var3740377 temp501_44))
(assert (= temp501_45 #x0000000000000002))
(assert (= var69143 temp501_45))
(assert (= temp501_47 #x0000000000000001))
(assert (= temp501_46 temp501_47))
(assert (= temp501_49 #x0000000000000001))
(assert (= temp501_48 temp501_49))
(assert (= temp501_51 #x0000000000000003))
(assert (= temp501_50 temp501_51))
(assert (= temp501_52 #x0000000000000001))
(assert (= var4212949 temp501_52))
(assert (= var4212950 var69143))
(assert (= temp501_54 #x0000000000000001))
(assert (= temp501_53 temp501_54))
(assert (= temp501_56 #x0000000000000001))
(assert (= temp501_55 temp501_56))
(assert (= temp501_58 #x0000000000000001))
(assert (= temp501_57 temp501_58))
(assert (= temp501_60 #x0000000000000001))
(assert (= temp501_59 temp501_60))
(assert (= temp501_62 #x0000000000000000))
(assert (= temp501_61 temp501_62))
(assert (= temp501_64 #x0000000000000001))
(assert (= temp501_63 temp501_64))
(assert (= var4868391 var69143))
(assert (= temp501_65 #x0000000000000002))
(assert (= var4983962 temp501_65))
(assert (= temp501_67 #x0000000000000001))
(assert (= temp501_66 temp501_67))
(assert (= temp501_69 #x0000000000000001))
(assert (= temp501_68 temp501_69))
(assert (= var5453295 var65913))
(assert (= temp501_71 #x0000000000000001))
(assert (= temp501_70 temp501_71))
(assert (= temp501_73 #x0000000000000001))
(assert (= temp501_72 temp501_73))
(assert (= temp501_75 #x0000000000000001))
(assert (= temp501_74 temp501_75))
(assert (= temp501_77 #x0000000000000001))
(assert (= temp501_76 temp501_77))
(assert (= temp501_79 #x0000000000000000))
(assert (= temp501_78 temp501_79))
(assert (= temp501_81 #x0000000000000001))
(assert (= temp501_80 temp501_81))
(assert (= var6375719 var69143))
(assert (= temp501_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp501_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_83 #x0000000000000001))
(assert (= var83534 temp501_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp501_84 #x0000000000000001))
(assert (= var6818808 temp501_84))
(assert (= var7736308 var69143))
(assert (= temp501_85 #x0000000000000001))
(assert (= var7736312 temp501_85))
(assert (= temp501_86 #x0000000000000001))
(assert (= var9128231 temp501_86))
(assert (= var9390375 var65913))
(assert (= temp501_87 #x0000000000000000))
(assert (= var9637018 temp501_87))
(model-add temp501_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp501_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp501_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp501_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp501_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp501_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp501_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



