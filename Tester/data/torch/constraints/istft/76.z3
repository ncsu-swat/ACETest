(declare-fun temp166_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp166_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp166_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp166_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp166_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp166_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp166_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp166_8 () (_ BitVec 64))
(declare-fun temp166_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp166_10 () (_ BitVec 64))
(declare-fun temp166_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp166_12 () (_ BitVec 64))
(declare-fun temp166_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp166_14 () (_ BitVec 64))
(declare-fun temp166_15 () (_ BitVec 64))
(declare-fun temp166_16 () (_ BitVec 64))
(declare-fun temp166_17 () (_ BitVec 64))
(declare-fun temp166_18 () (_ BitVec 64))
(declare-fun temp166_19 () (_ BitVec 64))
(declare-fun temp166_20 () (_ BitVec 64))
(declare-fun temp166_21 () (_ BitVec 64))
(declare-fun temp166_22 () (_ BitVec 64))
(declare-fun temp166_23 () (_ BitVec 64))
(declare-fun temp166_24 () (_ BitVec 64))
(declare-fun temp166_25 () (_ BitVec 64))
(declare-fun temp166_26 () (_ BitVec 64))
(declare-fun temp166_27 () (_ BitVec 64))
(declare-fun temp166_28 () (_ BitVec 64))
(declare-fun temp166_29 () (_ BitVec 64))
(declare-fun temp166_31 () (_ BitVec 64))
(declare-fun temp166_30 () (_ BitVec 64))
(declare-fun temp166_32 () (_ BitVec 64))
(declare-fun temp166_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp166_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp166_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp166_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp166_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp166_39 () (_ BitVec 64))
(declare-fun temp166_38 () (_ BitVec 64))
(declare-fun temp166_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp166_41 () (_ BitVec 64))
(declare-fun temp166_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp166_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp166_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp166_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp166_47 () (_ BitVec 64))
(declare-fun temp166_46 () (_ BitVec 64))
(declare-fun temp166_49 () (_ BitVec 64))
(declare-fun temp166_48 () (_ BitVec 64))
(declare-fun temp166_51 () (_ BitVec 64))
(declare-fun temp166_50 () (_ BitVec 64))
(declare-fun temp166_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp166_54 () (_ BitVec 64))
(declare-fun temp166_53 () (_ BitVec 64))
(declare-fun temp166_56 () (_ BitVec 64))
(declare-fun temp166_55 () (_ BitVec 64))
(declare-fun temp166_58 () (_ BitVec 64))
(declare-fun temp166_57 () (_ BitVec 64))
(declare-fun temp166_60 () (_ BitVec 64))
(declare-fun temp166_59 () (_ BitVec 64))
(declare-fun temp166_62 () (_ BitVec 64))
(declare-fun temp166_61 () (_ BitVec 64))
(declare-fun temp166_64 () (_ BitVec 64))
(declare-fun temp166_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp166_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp166_67 () (_ BitVec 64))
(declare-fun temp166_66 () (_ BitVec 64))
(declare-fun temp166_69 () (_ BitVec 64))
(declare-fun temp166_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp166_71 () (_ BitVec 64))
(declare-fun temp166_70 () (_ BitVec 64))
(declare-fun temp166_73 () (_ BitVec 64))
(declare-fun temp166_72 () (_ BitVec 64))
(declare-fun temp166_75 () (_ BitVec 64))
(declare-fun temp166_74 () (_ BitVec 64))
(declare-fun temp166_77 () (_ BitVec 64))
(declare-fun temp166_76 () (_ BitVec 64))
(declare-fun temp166_79 () (_ BitVec 64))
(declare-fun temp166_78 () (_ BitVec 64))
(declare-fun temp166_81 () (_ BitVec 64))
(declare-fun temp166_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp166_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp166_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp166_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp166_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp166_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun temp166_87 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp166_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp166_1)))
(assert (= temp166_2 #x0000000000000000))
(assert (= var1050945 temp166_2))
(assert (= temp166_3 #xffffffffffffffff))
(assert (= var67312 temp166_3))
(assert (= temp166_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp166_4)))
(assert (= temp166_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp166_5)))
(assert (= temp166_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp166_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp166_7 #x0000000000000000))
(assert (= var82187 temp166_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_8 #x0000000000000000))
(assert (= var82356 temp166_8))
(assert (= temp166_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp166_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_10 #x0000000000000001))
(assert (= var82528 temp166_10))
(assert (= temp166_11 #x0000000000000000))
(assert (= var65913 temp166_11))
(assert (= temp166_12 #x0000000000000000))
(assert (= temp166_13 temp166_12))
(assert (= temp166_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp166_13)))
(assert (= temp166_15 #x0000000000000001))
(assert (= temp166_16 temp166_15))
(assert (= temp166_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp166_16)))
(assert (= temp166_18 #x0000000000000002))
(assert (= temp166_19 temp166_18))
(assert (= temp166_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp166_19)))
(assert (= temp166_21 #x0000000000000003))
(assert (= temp166_22 temp166_21))
(assert (= temp166_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp166_22)))
(assert (= temp166_24 #x0000000000000004))
(assert (= temp166_25 temp166_24))
(assert (= temp166_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp166_25)))
(assert (= temp166_27 #x0000000000000005))
(assert (= temp166_28 temp166_27))
(assert (= temp166_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp166_28)))
(assert (= temp166_31 #x0000000000000000))
(assert (= temp166_30
   (ite (bvslt var65913 temp166_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp166_32 temp166_30))
(assert (= temp166_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp166_32)))
(assert (= var82530 temp166_33))
(assert (bvslt temp166_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp166_34 #x0000000000000001))
(assert (= var82531 temp166_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp166_35 #x0000000000000001))
(assert (= var82728 temp166_35))
(assert (= var1914351 var65913))
(assert (= temp166_36 #x0000000000000001))
(assert (= var2115797 temp166_36))
(assert (= temp166_37 #x0000000000000002))
(assert (= var2115798 temp166_37))
(assert (= temp166_39 #x0000000000000000))
(assert (= temp166_38 temp166_39))
(assert (= temp166_40 #x0000000000000000))
(assert (= var2628020 temp166_40))
(assert (= temp166_41 #x0000000000000001))
(assert (= temp166_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp166_41 temp166_42)))
(assert (= temp166_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp166_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp166_44 #x0000000000000000))
(assert (= var3740377 temp166_44))
(assert (= temp166_45 #x0000000000000002))
(assert (= var69143 temp166_45))
(assert (= temp166_47 #x0000000000000001))
(assert (= temp166_46 temp166_47))
(assert (= temp166_49 #x0000000000000001))
(assert (= temp166_48 temp166_49))
(assert (= temp166_51 #x0000000000000003))
(assert (= temp166_50 temp166_51))
(assert (= temp166_52 #x0000000000000001))
(assert (= var4212949 temp166_52))
(assert (= var4212950 var69143))
(assert (= temp166_54 #x0000000000000001))
(assert (= temp166_53 temp166_54))
(assert (= temp166_56 #x0000000000000001))
(assert (= temp166_55 temp166_56))
(assert (= temp166_58 #x0000000000000001))
(assert (= temp166_57 temp166_58))
(assert (= temp166_60 #x0000000000000001))
(assert (= temp166_59 temp166_60))
(assert (= temp166_62 #x0000000000000000))
(assert (= temp166_61 temp166_62))
(assert (= temp166_64 #x0000000000000001))
(assert (= temp166_63 temp166_64))
(assert (= var4868391 var69143))
(assert (= temp166_65 #x0000000000000002))
(assert (= var4983962 temp166_65))
(assert (= temp166_67 #x0000000000000001))
(assert (= temp166_66 temp166_67))
(assert (= temp166_69 #x0000000000000001))
(assert (= temp166_68 temp166_69))
(assert (= var5453295 var65913))
(assert (= temp166_71 #x0000000000000001))
(assert (= temp166_70 temp166_71))
(assert (= temp166_73 #x0000000000000001))
(assert (= temp166_72 temp166_73))
(assert (= temp166_75 #x0000000000000001))
(assert (= temp166_74 temp166_75))
(assert (= temp166_77 #x0000000000000001))
(assert (= temp166_76 temp166_77))
(assert (= temp166_79 #x0000000000000000))
(assert (= temp166_78 temp166_79))
(assert (= temp166_81 #x0000000000000001))
(assert (= temp166_80 temp166_81))
(assert (= var6375719 var69143))
(assert (= temp166_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp166_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp166_83 #x0000000000000001))
(assert (= var83534 temp166_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp166_84 #x0000000000000001))
(assert (= var6818808 temp166_84))
(assert (= var7801844 var69143))
(assert (= temp166_85 #x0000000000000001))
(assert (= var7801848 temp166_85))
(assert (= temp166_86 #x0000000000000001))
(assert (= var9259303 temp166_86))
(assert (= temp166_87 #x0000000000000000))
(assert (= var9571482 temp166_87))
(model-add temp166_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp166_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp166_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp166_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp166_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp166_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp166_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



