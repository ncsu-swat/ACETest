(declare-fun temp338_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp338_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp338_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp338_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp338_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp338_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp338_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp338_8 () (_ BitVec 64))
(declare-fun temp338_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp338_10 () (_ BitVec 64))
(declare-fun temp338_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp338_12 () (_ BitVec 64))
(declare-fun temp338_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_14 () (_ BitVec 64))
(declare-fun temp338_15 () (_ BitVec 64))
(declare-fun temp338_16 () (_ BitVec 64))
(declare-fun temp338_17 () (_ BitVec 64))
(declare-fun temp338_18 () (_ BitVec 64))
(declare-fun temp338_19 () (_ BitVec 64))
(declare-fun temp338_20 () (_ BitVec 64))
(declare-fun temp338_21 () (_ BitVec 64))
(declare-fun temp338_22 () (_ BitVec 64))
(declare-fun temp338_23 () (_ BitVec 64))
(declare-fun temp338_24 () (_ BitVec 64))
(declare-fun temp338_25 () (_ BitVec 64))
(declare-fun temp338_26 () (_ BitVec 64))
(declare-fun temp338_27 () (_ BitVec 64))
(declare-fun temp338_28 () (_ BitVec 64))
(declare-fun temp338_29 () (_ BitVec 64))
(declare-fun temp338_31 () (_ BitVec 64))
(declare-fun temp338_30 () (_ BitVec 64))
(declare-fun temp338_32 () (_ BitVec 64))
(declare-fun temp338_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp338_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp338_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp338_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp338_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp338_39 () (_ BitVec 64))
(declare-fun temp338_38 () (_ BitVec 64))
(declare-fun temp338_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp338_41 () (_ BitVec 64))
(declare-fun temp338_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp338_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp338_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp338_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp338_47 () (_ BitVec 64))
(declare-fun temp338_46 () (_ BitVec 64))
(declare-fun temp338_49 () (_ BitVec 64))
(declare-fun temp338_48 () (_ BitVec 64))
(declare-fun temp338_51 () (_ BitVec 64))
(declare-fun temp338_50 () (_ BitVec 64))
(declare-fun temp338_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp338_54 () (_ BitVec 64))
(declare-fun temp338_53 () (_ BitVec 64))
(declare-fun temp338_56 () (_ BitVec 64))
(declare-fun temp338_55 () (_ BitVec 64))
(declare-fun temp338_58 () (_ BitVec 64))
(declare-fun temp338_57 () (_ BitVec 64))
(declare-fun temp338_60 () (_ BitVec 64))
(declare-fun temp338_59 () (_ BitVec 64))
(declare-fun temp338_62 () (_ BitVec 64))
(declare-fun temp338_61 () (_ BitVec 64))
(declare-fun temp338_64 () (_ BitVec 64))
(declare-fun temp338_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp338_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp338_67 () (_ BitVec 64))
(declare-fun temp338_66 () (_ BitVec 64))
(declare-fun temp338_69 () (_ BitVec 64))
(declare-fun temp338_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp338_71 () (_ BitVec 64))
(declare-fun temp338_70 () (_ BitVec 64))
(declare-fun temp338_73 () (_ BitVec 64))
(declare-fun temp338_72 () (_ BitVec 64))
(declare-fun temp338_75 () (_ BitVec 64))
(declare-fun temp338_74 () (_ BitVec 64))
(declare-fun temp338_77 () (_ BitVec 64))
(declare-fun temp338_76 () (_ BitVec 64))
(declare-fun temp338_79 () (_ BitVec 64))
(declare-fun temp338_78 () (_ BitVec 64))
(declare-fun temp338_81 () (_ BitVec 64))
(declare-fun temp338_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp338_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp338_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp338_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp338_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp338_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp338_87 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp338_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp338_1)))
(assert (= temp338_2 #x0000000000000000))
(assert (= var1050945 temp338_2))
(assert (= temp338_3 #xffffffffffffffff))
(assert (= var67312 temp338_3))
(assert (= temp338_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp338_4)))
(assert (= temp338_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp338_5)))
(assert (= temp338_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp338_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp338_7 #x0000000000000000))
(assert (= var82187 temp338_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_8 #x0000000000000000))
(assert (= var82356 temp338_8))
(assert (= temp338_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp338_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_10 #x0000000000000001))
(assert (= var82528 temp338_10))
(assert (= temp338_11 #x0000000000000000))
(assert (= var65913 temp338_11))
(assert (= temp338_12 #x0000000000000000))
(assert (= temp338_13 temp338_12))
(assert (= temp338_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp338_13)))
(assert (= temp338_15 #x0000000000000001))
(assert (= temp338_16 temp338_15))
(assert (= temp338_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp338_16)))
(assert (= temp338_18 #x0000000000000002))
(assert (= temp338_19 temp338_18))
(assert (= temp338_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp338_19)))
(assert (= temp338_21 #x0000000000000003))
(assert (= temp338_22 temp338_21))
(assert (= temp338_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp338_22)))
(assert (= temp338_24 #x0000000000000004))
(assert (= temp338_25 temp338_24))
(assert (= temp338_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp338_25)))
(assert (= temp338_27 #x0000000000000005))
(assert (= temp338_28 temp338_27))
(assert (= temp338_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp338_28)))
(assert (= temp338_31 #x0000000000000000))
(assert (= temp338_30
   (ite (bvslt var65913 temp338_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp338_32 temp338_30))
(assert (= temp338_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp338_32)))
(assert (= var82530 temp338_33))
(assert (bvslt temp338_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_34 #x0000000000000001))
(assert (= var82531 temp338_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_35 #x0000000000000001))
(assert (= var82728 temp338_35))
(assert (= var1914351 var65913))
(assert (= temp338_36 #x0000000000000001))
(assert (= var2115797 temp338_36))
(assert (= temp338_37 #x0000000000000002))
(assert (= var2115798 temp338_37))
(assert (= temp338_39 #x0000000000000000))
(assert (= temp338_38 temp338_39))
(assert (= temp338_40 #x0000000000000000))
(assert (= var2628020 temp338_40))
(assert (= temp338_41 #x0000000000000001))
(assert (= temp338_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp338_41 temp338_42)))
(assert (= temp338_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp338_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp338_44 #x0000000000000000))
(assert (= var3740377 temp338_44))
(assert (= temp338_45 #x0000000000000002))
(assert (= var69143 temp338_45))
(assert (= temp338_47 #x0000000000000001))
(assert (= temp338_46 temp338_47))
(assert (= temp338_49 #x0000000000000001))
(assert (= temp338_48 temp338_49))
(assert (= temp338_51 #x0000000000000003))
(assert (= temp338_50 temp338_51))
(assert (= temp338_52 #x0000000000000001))
(assert (= var4212949 temp338_52))
(assert (= var4212950 var69143))
(assert (= temp338_54 #x0000000000000001))
(assert (= temp338_53 temp338_54))
(assert (= temp338_56 #x0000000000000001))
(assert (= temp338_55 temp338_56))
(assert (= temp338_58 #x0000000000000001))
(assert (= temp338_57 temp338_58))
(assert (= temp338_60 #x0000000000000001))
(assert (= temp338_59 temp338_60))
(assert (= temp338_62 #x0000000000000000))
(assert (= temp338_61 temp338_62))
(assert (= temp338_64 #x0000000000000001))
(assert (= temp338_63 temp338_64))
(assert (= var4868391 var69143))
(assert (= temp338_65 #x0000000000000002))
(assert (= var4983962 temp338_65))
(assert (= temp338_67 #x0000000000000001))
(assert (= temp338_66 temp338_67))
(assert (= temp338_69 #x0000000000000001))
(assert (= temp338_68 temp338_69))
(assert (= var5453295 var65913))
(assert (= temp338_71 #x0000000000000001))
(assert (= temp338_70 temp338_71))
(assert (= temp338_73 #x0000000000000001))
(assert (= temp338_72 temp338_73))
(assert (= temp338_75 #x0000000000000001))
(assert (= temp338_74 temp338_75))
(assert (= temp338_77 #x0000000000000001))
(assert (= temp338_76 temp338_77))
(assert (= temp338_79 #x0000000000000000))
(assert (= temp338_78 temp338_79))
(assert (= temp338_81 #x0000000000000001))
(assert (= temp338_80 temp338_81))
(assert (= var6375719 var69143))
(assert (= temp338_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp338_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_83 #x0000000000000001))
(assert (= var83534 temp338_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp338_84 #x0000000000000001))
(assert (= var6818808 temp338_84))
(assert (= var7801844 var69143))
(assert (= temp338_85 #x0000000000000001))
(assert (= var7801848 temp338_85))
(assert (= temp338_86 #x0000000000000001))
(assert (= var9193767 temp338_86))
(assert (= temp338_87 #x0000000000000000))
(assert (= var9505946 temp338_87))
(model-add temp338_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp338_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp338_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp338_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp338_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp338_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp338_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





