(declare-fun temp18_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp18_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp18_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp18_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp18_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp18_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp18_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp18_8 () (_ BitVec 64))
(declare-fun temp18_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp18_10 () (_ BitVec 64))
(declare-fun temp18_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp18_12 () (_ BitVec 64))
(declare-fun temp18_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_14 () (_ BitVec 64))
(declare-fun temp18_15 () (_ BitVec 64))
(declare-fun temp18_16 () (_ BitVec 64))
(declare-fun temp18_17 () (_ BitVec 64))
(declare-fun temp18_18 () (_ BitVec 64))
(declare-fun temp18_19 () (_ BitVec 64))
(declare-fun temp18_20 () (_ BitVec 64))
(declare-fun temp18_21 () (_ BitVec 64))
(declare-fun temp18_22 () (_ BitVec 64))
(declare-fun temp18_23 () (_ BitVec 64))
(declare-fun temp18_24 () (_ BitVec 64))
(declare-fun temp18_25 () (_ BitVec 64))
(declare-fun temp18_26 () (_ BitVec 64))
(declare-fun temp18_27 () (_ BitVec 64))
(declare-fun temp18_28 () (_ BitVec 64))
(declare-fun temp18_29 () (_ BitVec 64))
(declare-fun temp18_31 () (_ BitVec 64))
(declare-fun temp18_30 () (_ BitVec 64))
(declare-fun temp18_32 () (_ BitVec 64))
(declare-fun temp18_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp18_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp18_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp18_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp18_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp18_39 () (_ BitVec 64))
(declare-fun temp18_38 () (_ BitVec 64))
(declare-fun temp18_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp18_41 () (_ BitVec 64))
(declare-fun temp18_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp18_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp18_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp18_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp18_47 () (_ BitVec 64))
(declare-fun temp18_46 () (_ BitVec 64))
(declare-fun temp18_49 () (_ BitVec 64))
(declare-fun temp18_48 () (_ BitVec 64))
(declare-fun temp18_51 () (_ BitVec 64))
(declare-fun temp18_50 () (_ BitVec 64))
(declare-fun temp18_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp18_54 () (_ BitVec 64))
(declare-fun temp18_53 () (_ BitVec 64))
(declare-fun temp18_56 () (_ BitVec 64))
(declare-fun temp18_55 () (_ BitVec 64))
(declare-fun temp18_58 () (_ BitVec 64))
(declare-fun temp18_57 () (_ BitVec 64))
(declare-fun temp18_60 () (_ BitVec 64))
(declare-fun temp18_59 () (_ BitVec 64))
(declare-fun temp18_62 () (_ BitVec 64))
(declare-fun temp18_61 () (_ BitVec 64))
(declare-fun temp18_64 () (_ BitVec 64))
(declare-fun temp18_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp18_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp18_67 () (_ BitVec 64))
(declare-fun temp18_66 () (_ BitVec 64))
(declare-fun temp18_69 () (_ BitVec 64))
(declare-fun temp18_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp18_71 () (_ BitVec 64))
(declare-fun temp18_70 () (_ BitVec 64))
(declare-fun temp18_73 () (_ BitVec 64))
(declare-fun temp18_72 () (_ BitVec 64))
(declare-fun temp18_75 () (_ BitVec 64))
(declare-fun temp18_74 () (_ BitVec 64))
(declare-fun temp18_77 () (_ BitVec 64))
(declare-fun temp18_76 () (_ BitVec 64))
(declare-fun temp18_79 () (_ BitVec 64))
(declare-fun temp18_78 () (_ BitVec 64))
(declare-fun temp18_81 () (_ BitVec 64))
(declare-fun temp18_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp18_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp18_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp18_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp18_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp18_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun temp18_87 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp18_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp18_1)))
(assert (= temp18_2 #x0000000000000000))
(assert (= var1050945 temp18_2))
(assert (= temp18_3 #xffffffffffffffff))
(assert (= var67312 temp18_3))
(assert (= temp18_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp18_4)))
(assert (= temp18_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp18_5)))
(assert (= temp18_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp18_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp18_7 #x0000000000000000))
(assert (= var82187 temp18_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_8 #x0000000000000000))
(assert (= var82356 temp18_8))
(assert (= temp18_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp18_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_10 #x0000000000000001))
(assert (= var82528 temp18_10))
(assert (= temp18_11 #x0000000000000000))
(assert (= var65913 temp18_11))
(assert (= temp18_12 #x0000000000000000))
(assert (= temp18_13 temp18_12))
(assert (= temp18_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp18_13)))
(assert (= temp18_15 #x0000000000000001))
(assert (= temp18_16 temp18_15))
(assert (= temp18_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp18_16)))
(assert (= temp18_18 #x0000000000000002))
(assert (= temp18_19 temp18_18))
(assert (= temp18_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp18_19)))
(assert (= temp18_21 #x0000000000000003))
(assert (= temp18_22 temp18_21))
(assert (= temp18_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp18_22)))
(assert (= temp18_24 #x0000000000000004))
(assert (= temp18_25 temp18_24))
(assert (= temp18_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp18_25)))
(assert (= temp18_27 #x0000000000000005))
(assert (= temp18_28 temp18_27))
(assert (= temp18_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp18_28)))
(assert (= temp18_31 #x0000000000000000))
(assert (= temp18_30
   (ite (bvslt var65913 temp18_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp18_32 temp18_30))
(assert (= temp18_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp18_32)))
(assert (= var82530 temp18_33))
(assert (bvslt temp18_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_34 #x0000000000000001))
(assert (= var82531 temp18_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_35 #x0000000000000001))
(assert (= var82728 temp18_35))
(assert (= var1914351 var65913))
(assert (= temp18_36 #x0000000000000001))
(assert (= var2115797 temp18_36))
(assert (= temp18_37 #x0000000000000002))
(assert (= var2115798 temp18_37))
(assert (= temp18_39 #x0000000000000000))
(assert (= temp18_38 temp18_39))
(assert (= temp18_40 #x0000000000000000))
(assert (= var2628020 temp18_40))
(assert (= temp18_41 #x0000000000000001))
(assert (= temp18_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp18_41 temp18_42)))
(assert (= temp18_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp18_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp18_44 #x0000000000000000))
(assert (= var3740377 temp18_44))
(assert (= temp18_45 #x0000000000000002))
(assert (= var69143 temp18_45))
(assert (= temp18_47 #x0000000000000001))
(assert (= temp18_46 temp18_47))
(assert (= temp18_49 #x0000000000000001))
(assert (= temp18_48 temp18_49))
(assert (= temp18_51 #x0000000000000003))
(assert (= temp18_50 temp18_51))
(assert (= temp18_52 #x0000000000000001))
(assert (= var4212949 temp18_52))
(assert (= var4212950 var69143))
(assert (= temp18_54 #x0000000000000001))
(assert (= temp18_53 temp18_54))
(assert (= temp18_56 #x0000000000000001))
(assert (= temp18_55 temp18_56))
(assert (= temp18_58 #x0000000000000001))
(assert (= temp18_57 temp18_58))
(assert (= temp18_60 #x0000000000000001))
(assert (= temp18_59 temp18_60))
(assert (= temp18_62 #x0000000000000000))
(assert (= temp18_61 temp18_62))
(assert (= temp18_64 #x0000000000000001))
(assert (= temp18_63 temp18_64))
(assert (= var4868391 var69143))
(assert (= temp18_65 #x0000000000000002))
(assert (= var4983962 temp18_65))
(assert (= temp18_67 #x0000000000000001))
(assert (= temp18_66 temp18_67))
(assert (= temp18_69 #x0000000000000001))
(assert (= temp18_68 temp18_69))
(assert (= var5453295 var65913))
(assert (= temp18_71 #x0000000000000001))
(assert (= temp18_70 temp18_71))
(assert (= temp18_73 #x0000000000000001))
(assert (= temp18_72 temp18_73))
(assert (= temp18_75 #x0000000000000001))
(assert (= temp18_74 temp18_75))
(assert (= temp18_77 #x0000000000000001))
(assert (= temp18_76 temp18_77))
(assert (= temp18_79 #x0000000000000000))
(assert (= temp18_78 temp18_79))
(assert (= temp18_81 #x0000000000000001))
(assert (= temp18_80 temp18_81))
(assert (= var6375719 var69143))
(assert (= temp18_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp18_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_83 #x0000000000000001))
(assert (= var83534 temp18_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp18_84 #x0000000000000001))
(assert (= var6818808 temp18_84))
(assert (= var7867380 var69143))
(assert (= temp18_85 #x0000000000000001))
(assert (= var7867384 temp18_85))
(assert (= temp18_86 #x0000000000000001))
(assert (= var9259303 temp18_86))
(assert (= temp18_87 #x0000000000000000))
(assert (= var9571482 temp18_87))
(model-add temp18_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp18_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp18_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp18_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp18_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp18_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp18_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






