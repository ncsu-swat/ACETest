(declare-fun temp351_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp351_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp351_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp351_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp351_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp351_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp351_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp351_8 () (_ BitVec 64))
(declare-fun temp351_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp351_10 () (_ BitVec 64))
(declare-fun temp351_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp351_12 () (_ BitVec 64))
(declare-fun temp351_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp351_14 () (_ BitVec 64))
(declare-fun temp351_15 () (_ BitVec 64))
(declare-fun temp351_16 () (_ BitVec 64))
(declare-fun temp351_17 () (_ BitVec 64))
(declare-fun temp351_18 () (_ BitVec 64))
(declare-fun temp351_19 () (_ BitVec 64))
(declare-fun temp351_20 () (_ BitVec 64))
(declare-fun temp351_21 () (_ BitVec 64))
(declare-fun temp351_22 () (_ BitVec 64))
(declare-fun temp351_23 () (_ BitVec 64))
(declare-fun temp351_24 () (_ BitVec 64))
(declare-fun temp351_25 () (_ BitVec 64))
(declare-fun temp351_26 () (_ BitVec 64))
(declare-fun temp351_27 () (_ BitVec 64))
(declare-fun temp351_28 () (_ BitVec 64))
(declare-fun temp351_29 () (_ BitVec 64))
(declare-fun temp351_31 () (_ BitVec 64))
(declare-fun temp351_30 () (_ BitVec 64))
(declare-fun temp351_32 () (_ BitVec 64))
(declare-fun temp351_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp351_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp351_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp351_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp351_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp351_39 () (_ BitVec 64))
(declare-fun temp351_38 () (_ BitVec 64))
(declare-fun temp351_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp351_41 () (_ BitVec 64))
(declare-fun temp351_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp351_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp351_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp351_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp351_47 () (_ BitVec 64))
(declare-fun temp351_46 () (_ BitVec 64))
(declare-fun temp351_49 () (_ BitVec 64))
(declare-fun temp351_48 () (_ BitVec 64))
(declare-fun temp351_51 () (_ BitVec 64))
(declare-fun temp351_50 () (_ BitVec 64))
(declare-fun temp351_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp351_54 () (_ BitVec 64))
(declare-fun temp351_53 () (_ BitVec 64))
(declare-fun temp351_56 () (_ BitVec 64))
(declare-fun temp351_55 () (_ BitVec 64))
(declare-fun temp351_58 () (_ BitVec 64))
(declare-fun temp351_57 () (_ BitVec 64))
(declare-fun temp351_60 () (_ BitVec 64))
(declare-fun temp351_59 () (_ BitVec 64))
(declare-fun temp351_62 () (_ BitVec 64))
(declare-fun temp351_61 () (_ BitVec 64))
(declare-fun temp351_64 () (_ BitVec 64))
(declare-fun temp351_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp351_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp351_67 () (_ BitVec 64))
(declare-fun temp351_66 () (_ BitVec 64))
(declare-fun temp351_69 () (_ BitVec 64))
(declare-fun temp351_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp351_71 () (_ BitVec 64))
(declare-fun temp351_70 () (_ BitVec 64))
(declare-fun temp351_73 () (_ BitVec 64))
(declare-fun temp351_72 () (_ BitVec 64))
(declare-fun temp351_75 () (_ BitVec 64))
(declare-fun temp351_74 () (_ BitVec 64))
(declare-fun temp351_77 () (_ BitVec 64))
(declare-fun temp351_76 () (_ BitVec 64))
(declare-fun temp351_79 () (_ BitVec 64))
(declare-fun temp351_78 () (_ BitVec 64))
(declare-fun temp351_81 () (_ BitVec 64))
(declare-fun temp351_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp351_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp351_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp351_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp351_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp351_86 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun temp351_87 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp351_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp351_1)))
(assert (= temp351_2 #x0000000000000000))
(assert (= var1050945 temp351_2))
(assert (= temp351_3 #xffffffffffffffff))
(assert (= var67312 temp351_3))
(assert (= temp351_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp351_4)))
(assert (= temp351_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp351_5)))
(assert (= temp351_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp351_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp351_7 #x0000000000000000))
(assert (= var82187 temp351_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp351_8 #x0000000000000000))
(assert (= var82356 temp351_8))
(assert (= temp351_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp351_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp351_10 #x0000000000000001))
(assert (= var82528 temp351_10))
(assert (= temp351_11 #x0000000000000000))
(assert (= var65913 temp351_11))
(assert (= temp351_12 #x0000000000000000))
(assert (= temp351_13 temp351_12))
(assert (= temp351_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp351_13)))
(assert (= temp351_15 #x0000000000000001))
(assert (= temp351_16 temp351_15))
(assert (= temp351_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp351_16)))
(assert (= temp351_18 #x0000000000000002))
(assert (= temp351_19 temp351_18))
(assert (= temp351_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp351_19)))
(assert (= temp351_21 #x0000000000000003))
(assert (= temp351_22 temp351_21))
(assert (= temp351_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp351_22)))
(assert (= temp351_24 #x0000000000000004))
(assert (= temp351_25 temp351_24))
(assert (= temp351_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp351_25)))
(assert (= temp351_27 #x0000000000000005))
(assert (= temp351_28 temp351_27))
(assert (= temp351_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp351_28)))
(assert (= temp351_31 #x0000000000000000))
(assert (= temp351_30
   (ite (bvslt var65913 temp351_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp351_32 temp351_30))
(assert (= temp351_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp351_32)))
(assert (= var82530 temp351_33))
(assert (bvslt temp351_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp351_34 #x0000000000000001))
(assert (= var82531 temp351_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp351_35 #x0000000000000001))
(assert (= var82728 temp351_35))
(assert (= var1914351 var65913))
(assert (= temp351_36 #x0000000000000001))
(assert (= var2115797 temp351_36))
(assert (= temp351_37 #x0000000000000002))
(assert (= var2115798 temp351_37))
(assert (= temp351_39 #x0000000000000000))
(assert (= temp351_38 temp351_39))
(assert (= temp351_40 #x0000000000000000))
(assert (= var2628020 temp351_40))
(assert (= temp351_41 #x0000000000000001))
(assert (= temp351_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp351_41 temp351_42)))
(assert (= temp351_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp351_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp351_44 #x0000000000000000))
(assert (= var3740377 temp351_44))
(assert (= temp351_45 #x0000000000000002))
(assert (= var69143 temp351_45))
(assert (= temp351_47 #x0000000000000001))
(assert (= temp351_46 temp351_47))
(assert (= temp351_49 #x0000000000000001))
(assert (= temp351_48 temp351_49))
(assert (= temp351_51 #x0000000000000003))
(assert (= temp351_50 temp351_51))
(assert (= temp351_52 #x0000000000000001))
(assert (= var4212949 temp351_52))
(assert (= var4212950 var69143))
(assert (= temp351_54 #x0000000000000001))
(assert (= temp351_53 temp351_54))
(assert (= temp351_56 #x0000000000000001))
(assert (= temp351_55 temp351_56))
(assert (= temp351_58 #x0000000000000001))
(assert (= temp351_57 temp351_58))
(assert (= temp351_60 #x0000000000000001))
(assert (= temp351_59 temp351_60))
(assert (= temp351_62 #x0000000000000000))
(assert (= temp351_61 temp351_62))
(assert (= temp351_64 #x0000000000000001))
(assert (= temp351_63 temp351_64))
(assert (= var4868391 var69143))
(assert (= temp351_65 #x0000000000000002))
(assert (= var4983962 temp351_65))
(assert (= temp351_67 #x0000000000000001))
(assert (= temp351_66 temp351_67))
(assert (= temp351_69 #x0000000000000001))
(assert (= temp351_68 temp351_69))
(assert (= var5453295 var65913))
(assert (= temp351_71 #x0000000000000001))
(assert (= temp351_70 temp351_71))
(assert (= temp351_73 #x0000000000000001))
(assert (= temp351_72 temp351_73))
(assert (= temp351_75 #x0000000000000001))
(assert (= temp351_74 temp351_75))
(assert (= temp351_77 #x0000000000000001))
(assert (= temp351_76 temp351_77))
(assert (= temp351_79 #x0000000000000000))
(assert (= temp351_78 temp351_79))
(assert (= temp351_81 #x0000000000000001))
(assert (= temp351_80 temp351_81))
(assert (= var6375719 var69143))
(assert (= temp351_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp351_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp351_83 #x0000000000000001))
(assert (= var83534 temp351_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp351_84 #x0000000000000001))
(assert (= var6818808 temp351_84))
(assert (= var7801844 var69143))
(assert (= temp351_85 #x0000000000000001))
(assert (= var7801848 temp351_85))
(assert (= temp351_86 #x0000000000000001))
(assert (= var9128231 temp351_86))
(assert (= var9390375 var65913))
(assert (= temp351_87 #x0000000000000000))
(assert (= var9637018 temp351_87))
(model-add temp351_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp351_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp351_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp351_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp351_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp351_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp351_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





