(declare-fun temp62_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp62_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp62_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp62_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp62_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp62_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp62_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp62_8 () (_ BitVec 64))
(declare-fun temp62_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp62_10 () (_ BitVec 64))
(declare-fun temp62_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp62_12 () (_ BitVec 64))
(declare-fun temp62_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_14 () (_ BitVec 64))
(declare-fun temp62_15 () (_ BitVec 64))
(declare-fun temp62_16 () (_ BitVec 64))
(declare-fun temp62_17 () (_ BitVec 64))
(declare-fun temp62_18 () (_ BitVec 64))
(declare-fun temp62_19 () (_ BitVec 64))
(declare-fun temp62_20 () (_ BitVec 64))
(declare-fun temp62_21 () (_ BitVec 64))
(declare-fun temp62_22 () (_ BitVec 64))
(declare-fun temp62_23 () (_ BitVec 64))
(declare-fun temp62_24 () (_ BitVec 64))
(declare-fun temp62_25 () (_ BitVec 64))
(declare-fun temp62_26 () (_ BitVec 64))
(declare-fun temp62_27 () (_ BitVec 64))
(declare-fun temp62_28 () (_ BitVec 64))
(declare-fun temp62_29 () (_ BitVec 64))
(declare-fun temp62_31 () (_ BitVec 64))
(declare-fun temp62_30 () (_ BitVec 64))
(declare-fun temp62_32 () (_ BitVec 64))
(declare-fun temp62_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp62_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp62_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp62_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp62_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp62_39 () (_ BitVec 64))
(declare-fun temp62_38 () (_ BitVec 64))
(declare-fun temp62_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp62_41 () (_ BitVec 64))
(declare-fun temp62_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp62_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp62_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp62_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp62_47 () (_ BitVec 64))
(declare-fun temp62_46 () (_ BitVec 64))
(declare-fun temp62_49 () (_ BitVec 64))
(declare-fun temp62_48 () (_ BitVec 64))
(declare-fun temp62_51 () (_ BitVec 64))
(declare-fun temp62_50 () (_ BitVec 64))
(declare-fun temp62_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp62_54 () (_ BitVec 64))
(declare-fun temp62_53 () (_ BitVec 64))
(declare-fun temp62_56 () (_ BitVec 64))
(declare-fun temp62_55 () (_ BitVec 64))
(declare-fun temp62_58 () (_ BitVec 64))
(declare-fun temp62_57 () (_ BitVec 64))
(declare-fun temp62_60 () (_ BitVec 64))
(declare-fun temp62_59 () (_ BitVec 64))
(declare-fun temp62_62 () (_ BitVec 64))
(declare-fun temp62_61 () (_ BitVec 64))
(declare-fun temp62_64 () (_ BitVec 64))
(declare-fun temp62_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp62_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp62_67 () (_ BitVec 64))
(declare-fun temp62_66 () (_ BitVec 64))
(declare-fun temp62_69 () (_ BitVec 64))
(declare-fun temp62_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp62_71 () (_ BitVec 64))
(declare-fun temp62_70 () (_ BitVec 64))
(declare-fun temp62_73 () (_ BitVec 64))
(declare-fun temp62_72 () (_ BitVec 64))
(declare-fun temp62_75 () (_ BitVec 64))
(declare-fun temp62_74 () (_ BitVec 64))
(declare-fun temp62_77 () (_ BitVec 64))
(declare-fun temp62_76 () (_ BitVec 64))
(declare-fun temp62_79 () (_ BitVec 64))
(declare-fun temp62_78 () (_ BitVec 64))
(declare-fun temp62_81 () (_ BitVec 64))
(declare-fun temp62_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp62_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp62_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp62_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp62_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp62_86 () (_ BitVec 64))
(declare-fun var7867434 () (_ BitVec 64))
(declare-fun temp62_87 () (_ BitVec 64))
(declare-fun temp62_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp62_90 () (_ BitVec 64))
(declare-fun temp62_89 () (_ BitVec 64))
(declare-fun temp62_91 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp62_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp62_1)))
(assert (= temp62_2 #x0000000000000000))
(assert (= var1050945 temp62_2))
(assert (= temp62_3 #xffffffffffffffff))
(assert (= var67312 temp62_3))
(assert (= temp62_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp62_4)))
(assert (= temp62_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp62_5)))
(assert (= temp62_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp62_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp62_7 #x0000000000000000))
(assert (= var82187 temp62_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_8 #x0000000000000000))
(assert (= var82356 temp62_8))
(assert (= temp62_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp62_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_10 #x0000000000000001))
(assert (= var82528 temp62_10))
(assert (= temp62_11 #x0000000000000000))
(assert (= var65913 temp62_11))
(assert (= temp62_12 #x0000000000000000))
(assert (= temp62_13 temp62_12))
(assert (= temp62_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp62_13)))
(assert (= temp62_15 #x0000000000000001))
(assert (= temp62_16 temp62_15))
(assert (= temp62_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp62_16)))
(assert (= temp62_18 #x0000000000000002))
(assert (= temp62_19 temp62_18))
(assert (= temp62_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp62_19)))
(assert (= temp62_21 #x0000000000000003))
(assert (= temp62_22 temp62_21))
(assert (= temp62_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp62_22)))
(assert (= temp62_24 #x0000000000000004))
(assert (= temp62_25 temp62_24))
(assert (= temp62_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp62_25)))
(assert (= temp62_27 #x0000000000000005))
(assert (= temp62_28 temp62_27))
(assert (= temp62_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp62_28)))
(assert (= temp62_31 #x0000000000000000))
(assert (= temp62_30
   (ite (bvslt var65913 temp62_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp62_32 temp62_30))
(assert (= temp62_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp62_32)))
(assert (= var82530 temp62_33))
(assert (bvslt temp62_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_34 #x0000000000000001))
(assert (= var82531 temp62_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_35 #x0000000000000001))
(assert (= var82728 temp62_35))
(assert (= var1914351 var65913))
(assert (= temp62_36 #x0000000000000001))
(assert (= var2115797 temp62_36))
(assert (= temp62_37 #x0000000000000002))
(assert (= var2115798 temp62_37))
(assert (= temp62_39 #x0000000000000000))
(assert (= temp62_38 temp62_39))
(assert (= temp62_40 #x0000000000000000))
(assert (= var2628020 temp62_40))
(assert (= temp62_41 #x0000000000000001))
(assert (= temp62_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp62_41 temp62_42)))
(assert (= temp62_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp62_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp62_44 #x0000000000000000))
(assert (= var3740377 temp62_44))
(assert (= temp62_45 #x0000000000000002))
(assert (= var69143 temp62_45))
(assert (= temp62_47 #x0000000000000001))
(assert (= temp62_46 temp62_47))
(assert (= temp62_49 #x0000000000000001))
(assert (= temp62_48 temp62_49))
(assert (= temp62_51 #x0000000000000003))
(assert (= temp62_50 temp62_51))
(assert (= temp62_52 #x0000000000000001))
(assert (= var4212949 temp62_52))
(assert (= var4212950 var69143))
(assert (= temp62_54 #x0000000000000001))
(assert (= temp62_53 temp62_54))
(assert (= temp62_56 #x0000000000000001))
(assert (= temp62_55 temp62_56))
(assert (= temp62_58 #x0000000000000001))
(assert (= temp62_57 temp62_58))
(assert (= temp62_60 #x0000000000000001))
(assert (= temp62_59 temp62_60))
(assert (= temp62_62 #x0000000000000000))
(assert (= temp62_61 temp62_62))
(assert (= temp62_64 #x0000000000000001))
(assert (= temp62_63 temp62_64))
(assert (= var4868391 var69143))
(assert (= temp62_65 #x0000000000000002))
(assert (= var4983962 temp62_65))
(assert (= temp62_67 #x0000000000000001))
(assert (= temp62_66 temp62_67))
(assert (= temp62_69 #x0000000000000001))
(assert (= temp62_68 temp62_69))
(assert (= var5453295 var65913))
(assert (= temp62_71 #x0000000000000001))
(assert (= temp62_70 temp62_71))
(assert (= temp62_73 #x0000000000000001))
(assert (= temp62_72 temp62_73))
(assert (= temp62_75 #x0000000000000001))
(assert (= temp62_74 temp62_75))
(assert (= temp62_77 #x0000000000000001))
(assert (= temp62_76 temp62_77))
(assert (= temp62_79 #x0000000000000000))
(assert (= temp62_78 temp62_79))
(assert (= temp62_81 #x0000000000000001))
(assert (= temp62_80 temp62_81))
(assert (= var6375719 var69143))
(assert (= temp62_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp62_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_83 #x0000000000000001))
(assert (= var83534 temp62_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp62_84 #x0000000000000001))
(assert (= var6818808 temp62_84))
(assert (= var7867380 var69143))
(assert (= temp62_85 #x0000000000000001))
(assert (= var7867384 temp62_85))
(assert (= temp62_86 #x0000000000000000))
(assert (= var7867434 temp62_86))
(assert (= temp62_87 #x0000000000000000))
(assert (= var7867434 temp62_87))
(assert (= temp62_88 #x0000000000000001))
(assert (= var9193767 temp62_88))
(assert (= var9455911 var65913))
(assert (= temp62_90 #x0000000000000001))
(assert (= temp62_89 temp62_90))
(assert (= temp62_91 #x0000000000000000))
(assert (= var9702554 temp62_91))
(model-add temp62_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp62_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp62_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp62_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp62_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp62_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp62_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




