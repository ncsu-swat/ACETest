(declare-fun temp72_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp72_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp72_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp72_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp72_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp72_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp72_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp72_8 () (_ BitVec 64))
(declare-fun temp72_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp72_10 () (_ BitVec 64))
(declare-fun temp72_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp72_12 () (_ BitVec 64))
(declare-fun temp72_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp72_14 () (_ BitVec 64))
(declare-fun temp72_15 () (_ BitVec 64))
(declare-fun temp72_16 () (_ BitVec 64))
(declare-fun temp72_17 () (_ BitVec 64))
(declare-fun temp72_18 () (_ BitVec 64))
(declare-fun temp72_19 () (_ BitVec 64))
(declare-fun temp72_20 () (_ BitVec 64))
(declare-fun temp72_21 () (_ BitVec 64))
(declare-fun temp72_22 () (_ BitVec 64))
(declare-fun temp72_23 () (_ BitVec 64))
(declare-fun temp72_24 () (_ BitVec 64))
(declare-fun temp72_25 () (_ BitVec 64))
(declare-fun temp72_26 () (_ BitVec 64))
(declare-fun temp72_27 () (_ BitVec 64))
(declare-fun temp72_28 () (_ BitVec 64))
(declare-fun temp72_29 () (_ BitVec 64))
(declare-fun temp72_31 () (_ BitVec 64))
(declare-fun temp72_30 () (_ BitVec 64))
(declare-fun temp72_32 () (_ BitVec 64))
(declare-fun temp72_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp72_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp72_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp72_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp72_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp72_39 () (_ BitVec 64))
(declare-fun temp72_38 () (_ BitVec 64))
(declare-fun temp72_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp72_41 () (_ BitVec 64))
(declare-fun temp72_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp72_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp72_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp72_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp72_47 () (_ BitVec 64))
(declare-fun temp72_46 () (_ BitVec 64))
(declare-fun temp72_49 () (_ BitVec 64))
(declare-fun temp72_48 () (_ BitVec 64))
(declare-fun temp72_51 () (_ BitVec 64))
(declare-fun temp72_50 () (_ BitVec 64))
(declare-fun temp72_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp72_54 () (_ BitVec 64))
(declare-fun temp72_53 () (_ BitVec 64))
(declare-fun temp72_56 () (_ BitVec 64))
(declare-fun temp72_55 () (_ BitVec 64))
(declare-fun temp72_58 () (_ BitVec 64))
(declare-fun temp72_57 () (_ BitVec 64))
(declare-fun temp72_60 () (_ BitVec 64))
(declare-fun temp72_59 () (_ BitVec 64))
(declare-fun temp72_62 () (_ BitVec 64))
(declare-fun temp72_61 () (_ BitVec 64))
(declare-fun temp72_64 () (_ BitVec 64))
(declare-fun temp72_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp72_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp72_67 () (_ BitVec 64))
(declare-fun temp72_66 () (_ BitVec 64))
(declare-fun temp72_69 () (_ BitVec 64))
(declare-fun temp72_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp72_71 () (_ BitVec 64))
(declare-fun temp72_70 () (_ BitVec 64))
(declare-fun temp72_73 () (_ BitVec 64))
(declare-fun temp72_72 () (_ BitVec 64))
(declare-fun temp72_75 () (_ BitVec 64))
(declare-fun temp72_74 () (_ BitVec 64))
(declare-fun temp72_77 () (_ BitVec 64))
(declare-fun temp72_76 () (_ BitVec 64))
(declare-fun temp72_79 () (_ BitVec 64))
(declare-fun temp72_78 () (_ BitVec 64))
(declare-fun temp72_81 () (_ BitVec 64))
(declare-fun temp72_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp72_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp72_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp72_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp72_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp72_86 () (_ BitVec 64))
(declare-fun var7867434 () (_ BitVec 64))
(declare-fun temp72_87 () (_ BitVec 64))
(declare-fun temp72_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun temp72_90 () (_ BitVec 64))
(declare-fun temp72_89 () (_ BitVec 64))
(declare-fun temp72_91 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp72_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp72_1)))
(assert (= temp72_2 #x0000000000000000))
(assert (= var1050945 temp72_2))
(assert (= temp72_3 #xffffffffffffffff))
(assert (= var67312 temp72_3))
(assert (= temp72_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp72_4)))
(assert (= temp72_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp72_5)))
(assert (= temp72_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp72_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp72_7 #x0000000000000000))
(assert (= var82187 temp72_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp72_8 #x0000000000000000))
(assert (= var82356 temp72_8))
(assert (= temp72_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp72_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp72_10 #x0000000000000001))
(assert (= var82528 temp72_10))
(assert (= temp72_11 #x0000000000000000))
(assert (= var65913 temp72_11))
(assert (= temp72_12 #x0000000000000000))
(assert (= temp72_13 temp72_12))
(assert (= temp72_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp72_13)))
(assert (= temp72_15 #x0000000000000001))
(assert (= temp72_16 temp72_15))
(assert (= temp72_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp72_16)))
(assert (= temp72_18 #x0000000000000002))
(assert (= temp72_19 temp72_18))
(assert (= temp72_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp72_19)))
(assert (= temp72_21 #x0000000000000003))
(assert (= temp72_22 temp72_21))
(assert (= temp72_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp72_22)))
(assert (= temp72_24 #x0000000000000004))
(assert (= temp72_25 temp72_24))
(assert (= temp72_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp72_25)))
(assert (= temp72_27 #x0000000000000005))
(assert (= temp72_28 temp72_27))
(assert (= temp72_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp72_28)))
(assert (= temp72_31 #x0000000000000000))
(assert (= temp72_30
   (ite (bvslt var65913 temp72_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp72_32 temp72_30))
(assert (= temp72_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp72_32)))
(assert (= var82530 temp72_33))
(assert (bvslt temp72_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp72_34 #x0000000000000001))
(assert (= var82531 temp72_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp72_35 #x0000000000000001))
(assert (= var82728 temp72_35))
(assert (= var1914351 var65913))
(assert (= temp72_36 #x0000000000000001))
(assert (= var2115797 temp72_36))
(assert (= temp72_37 #x0000000000000002))
(assert (= var2115798 temp72_37))
(assert (= temp72_39 #x0000000000000000))
(assert (= temp72_38 temp72_39))
(assert (= temp72_40 #x0000000000000000))
(assert (= var2628020 temp72_40))
(assert (= temp72_41 #x0000000000000001))
(assert (= temp72_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp72_41 temp72_42)))
(assert (= temp72_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp72_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp72_44 #x0000000000000000))
(assert (= var3740377 temp72_44))
(assert (= temp72_45 #x0000000000000002))
(assert (= var69143 temp72_45))
(assert (= temp72_47 #x0000000000000001))
(assert (= temp72_46 temp72_47))
(assert (= temp72_49 #x0000000000000001))
(assert (= temp72_48 temp72_49))
(assert (= temp72_51 #x0000000000000003))
(assert (= temp72_50 temp72_51))
(assert (= temp72_52 #x0000000000000001))
(assert (= var4212949 temp72_52))
(assert (= var4212950 var69143))
(assert (= temp72_54 #x0000000000000001))
(assert (= temp72_53 temp72_54))
(assert (= temp72_56 #x0000000000000001))
(assert (= temp72_55 temp72_56))
(assert (= temp72_58 #x0000000000000001))
(assert (= temp72_57 temp72_58))
(assert (= temp72_60 #x0000000000000001))
(assert (= temp72_59 temp72_60))
(assert (= temp72_62 #x0000000000000000))
(assert (= temp72_61 temp72_62))
(assert (= temp72_64 #x0000000000000001))
(assert (= temp72_63 temp72_64))
(assert (= var4868391 var69143))
(assert (= temp72_65 #x0000000000000002))
(assert (= var4983962 temp72_65))
(assert (= temp72_67 #x0000000000000001))
(assert (= temp72_66 temp72_67))
(assert (= temp72_69 #x0000000000000001))
(assert (= temp72_68 temp72_69))
(assert (= var5453295 var65913))
(assert (= temp72_71 #x0000000000000001))
(assert (= temp72_70 temp72_71))
(assert (= temp72_73 #x0000000000000001))
(assert (= temp72_72 temp72_73))
(assert (= temp72_75 #x0000000000000001))
(assert (= temp72_74 temp72_75))
(assert (= temp72_77 #x0000000000000001))
(assert (= temp72_76 temp72_77))
(assert (= temp72_79 #x0000000000000000))
(assert (= temp72_78 temp72_79))
(assert (= temp72_81 #x0000000000000001))
(assert (= temp72_80 temp72_81))
(assert (= var6375719 var69143))
(assert (= temp72_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp72_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp72_83 #x0000000000000001))
(assert (= var83534 temp72_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp72_84 #x0000000000000001))
(assert (= var6818808 temp72_84))
(assert (= var7867380 var69143))
(assert (= temp72_85 #x0000000000000001))
(assert (= var7867384 temp72_85))
(assert (= temp72_86 #x0000000000000000))
(assert (= var7867434 temp72_86))
(assert (= temp72_87 #x0000000000000000))
(assert (= var7867434 temp72_87))
(assert (= temp72_88 #x0000000000000001))
(assert (= var9128231 temp72_88))
(assert (= var9390375 var65913))
(assert (= temp72_90 #x0000000000000001))
(assert (= temp72_89 temp72_90))
(assert (= temp72_91 #x0000000000000000))
(assert (= var9637018 temp72_91))
(model-add temp72_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp72_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp72_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp72_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp72_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp72_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp72_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




