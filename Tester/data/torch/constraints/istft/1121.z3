(declare-fun temp12891_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp12891_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp12891_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp12891_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp12891_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp12891_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp12891_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp12891_8 () (_ BitVec 64))
(declare-fun temp12891_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp12891_10 () (_ BitVec 64))
(declare-fun temp12891_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp12891_12 () (_ BitVec 64))
(declare-fun temp12891_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp12891_14 () (_ BitVec 64))
(declare-fun temp12891_15 () (_ BitVec 64))
(declare-fun temp12891_16 () (_ BitVec 64))
(declare-fun temp12891_17 () (_ BitVec 64))
(declare-fun temp12891_18 () (_ BitVec 64))
(declare-fun temp12891_19 () (_ BitVec 64))
(declare-fun temp12891_20 () (_ BitVec 64))
(declare-fun temp12891_21 () (_ BitVec 64))
(declare-fun temp12891_22 () (_ BitVec 64))
(declare-fun temp12891_23 () (_ BitVec 64))
(declare-fun temp12891_24 () (_ BitVec 64))
(declare-fun temp12891_25 () (_ BitVec 64))
(declare-fun temp12891_26 () (_ BitVec 64))
(declare-fun temp12891_27 () (_ BitVec 64))
(declare-fun temp12891_28 () (_ BitVec 64))
(declare-fun temp12891_29 () (_ BitVec 64))
(declare-fun temp12891_31 () (_ BitVec 64))
(declare-fun temp12891_30 () (_ BitVec 64))
(declare-fun temp12891_32 () (_ BitVec 64))
(declare-fun temp12891_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp12891_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp12891_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp12891_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp12891_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp12891_39 () (_ BitVec 64))
(declare-fun temp12891_38 () (_ BitVec 64))
(declare-fun temp12891_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp12891_41 () (_ BitVec 64))
(declare-fun temp12891_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp12891_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp12891_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp12891_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp12891_47 () (_ BitVec 64))
(declare-fun temp12891_46 () (_ BitVec 64))
(declare-fun temp12891_49 () (_ BitVec 64))
(declare-fun temp12891_48 () (_ BitVec 64))
(declare-fun temp12891_51 () (_ BitVec 64))
(declare-fun temp12891_50 () (_ BitVec 64))
(declare-fun temp12891_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp12891_54 () (_ BitVec 64))
(declare-fun temp12891_53 () (_ BitVec 64))
(declare-fun temp12891_56 () (_ BitVec 64))
(declare-fun temp12891_55 () (_ BitVec 64))
(declare-fun temp12891_58 () (_ BitVec 64))
(declare-fun temp12891_57 () (_ BitVec 64))
(declare-fun temp12891_60 () (_ BitVec 64))
(declare-fun temp12891_59 () (_ BitVec 64))
(declare-fun temp12891_62 () (_ BitVec 64))
(declare-fun temp12891_61 () (_ BitVec 64))
(declare-fun temp12891_64 () (_ BitVec 64))
(declare-fun temp12891_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp12891_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp12891_67 () (_ BitVec 64))
(declare-fun temp12891_66 () (_ BitVec 64))
(declare-fun temp12891_69 () (_ BitVec 64))
(declare-fun temp12891_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp12891_71 () (_ BitVec 64))
(declare-fun temp12891_70 () (_ BitVec 64))
(declare-fun temp12891_73 () (_ BitVec 64))
(declare-fun temp12891_72 () (_ BitVec 64))
(declare-fun temp12891_75 () (_ BitVec 64))
(declare-fun temp12891_74 () (_ BitVec 64))
(declare-fun temp12891_77 () (_ BitVec 64))
(declare-fun temp12891_76 () (_ BitVec 64))
(declare-fun temp12891_79 () (_ BitVec 64))
(declare-fun temp12891_78 () (_ BitVec 64))
(declare-fun temp12891_81 () (_ BitVec 64))
(declare-fun temp12891_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp12891_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp12891_83 () (_ BitVec 64))
(declare-fun temp12891_84 () (_ BitVec 64))
(declare-fun var83537 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun temp12891_85 () (_ BitVec 64))
(declare-fun var6506834 () (_ BitVec 64))
(declare-fun temp12891_86 () (_ BitVec 64))
(declare-fun temp12891_87 () (_ BitVec 64))
(declare-fun var6506839 () (_ BitVec 64))
(declare-fun var6506845 () (_ BitVec 64))
(declare-fun var6506816 () (_ BitVec 64))
(declare-fun var83557 () (_ BitVec 64))
(declare-fun var6753268 () (_ BitVec 64))
(declare-fun temp12891_88 () (_ BitVec 64))
(declare-fun var6753272 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp12891_89 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp12891_90 () (_ BitVec 64))
(declare-fun var7801886 () (_ BitVec 64))
(declare-fun temp12891_91 () (_ BitVec 64))
(declare-fun temp12891_92 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun var83931 () (_ BitVec 64))
(declare-fun var83975 () (_ BitVec 64))
(declare-fun temp12891_93 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp12891_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp12891_1)))
(assert (= temp12891_2 #x0000000000000000))
(assert (= var1050945 temp12891_2))
(assert (= temp12891_3 #xffffffffffffffff))
(assert (= var67312 temp12891_3))
(assert (= temp12891_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp12891_4)))
(assert (= temp12891_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp12891_5)))
(assert (= temp12891_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp12891_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp12891_7 #x0000000000000000))
(assert (= var82187 temp12891_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12891_8 #x0000000000000000))
(assert (= var82356 temp12891_8))
(assert (= temp12891_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp12891_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12891_10 #x0000000000000001))
(assert (= var82528 temp12891_10))
(assert (= temp12891_11 #x0000000000000000))
(assert (= var65913 temp12891_11))
(assert (= temp12891_12 #x0000000000000000))
(assert (= temp12891_13 temp12891_12))
(assert (= temp12891_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp12891_13)))
(assert (= temp12891_15 #x0000000000000001))
(assert (= temp12891_16 temp12891_15))
(assert (= temp12891_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp12891_16)))
(assert (= temp12891_18 #x0000000000000002))
(assert (= temp12891_19 temp12891_18))
(assert (= temp12891_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp12891_19)))
(assert (= temp12891_21 #x0000000000000003))
(assert (= temp12891_22 temp12891_21))
(assert (= temp12891_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp12891_22)))
(assert (= temp12891_24 #x0000000000000004))
(assert (= temp12891_25 temp12891_24))
(assert (= temp12891_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp12891_25)))
(assert (= temp12891_27 #x0000000000000005))
(assert (= temp12891_28 temp12891_27))
(assert (= temp12891_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp12891_28)))
(assert (= temp12891_31 #x0000000000000000))
(assert (= temp12891_30
   (ite (bvslt var65913 temp12891_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp12891_32 temp12891_30))
(assert (= temp12891_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp12891_32)))
(assert (= var82530 temp12891_33))
(assert (bvslt temp12891_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp12891_34 #x0000000000000001))
(assert (= var82531 temp12891_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp12891_35 #x0000000000000001))
(assert (= var82728 temp12891_35))
(assert (= var1914351 var65913))
(assert (= temp12891_36 #x0000000000000001))
(assert (= var2115797 temp12891_36))
(assert (= temp12891_37 #x0000000000000002))
(assert (= var2115798 temp12891_37))
(assert (= temp12891_39 #x0000000000000000))
(assert (= temp12891_38 temp12891_39))
(assert (= temp12891_40 #x0000000000000000))
(assert (= var2628020 temp12891_40))
(assert (= temp12891_41 #x0000000000000001))
(assert (= temp12891_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp12891_41
        temp12891_42)))
(assert (= temp12891_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp12891_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp12891_44 #x0000000000000000))
(assert (= var3740377 temp12891_44))
(assert (= temp12891_45 #x0000000000000002))
(assert (= var69143 temp12891_45))
(assert (= temp12891_47 #x0000000000000001))
(assert (= temp12891_46 temp12891_47))
(assert (= temp12891_49 #x0000000000000001))
(assert (= temp12891_48 temp12891_49))
(assert (= temp12891_51 #x0000000000000003))
(assert (= temp12891_50 temp12891_51))
(assert (= temp12891_52 #x0000000000000001))
(assert (= var4212949 temp12891_52))
(assert (= var4212950 var69143))
(assert (= temp12891_54 #x0000000000000001))
(assert (= temp12891_53 temp12891_54))
(assert (= temp12891_56 #x0000000000000001))
(assert (= temp12891_55 temp12891_56))
(assert (= temp12891_58 #x0000000000000001))
(assert (= temp12891_57 temp12891_58))
(assert (= temp12891_60 #x0000000000000001))
(assert (= temp12891_59 temp12891_60))
(assert (= temp12891_62 #x0000000000000000))
(assert (= temp12891_61 temp12891_62))
(assert (= temp12891_64 #x0000000000000001))
(assert (= temp12891_63 temp12891_64))
(assert (= var4868391 var69143))
(assert (= temp12891_65 #x0000000000000002))
(assert (= var4983962 temp12891_65))
(assert (= temp12891_67 #x0000000000000001))
(assert (= temp12891_66 temp12891_67))
(assert (= temp12891_69 #x0000000000000001))
(assert (= temp12891_68 temp12891_69))
(assert (= var5453295 var65913))
(assert (= temp12891_71 #x0000000000000001))
(assert (= temp12891_70 temp12891_71))
(assert (= temp12891_73 #x0000000000000001))
(assert (= temp12891_72 temp12891_73))
(assert (= temp12891_75 #x0000000000000001))
(assert (= temp12891_74 temp12891_75))
(assert (= temp12891_77 #x0000000000000001))
(assert (= temp12891_76 temp12891_77))
(assert (= temp12891_79 #x0000000000000000))
(assert (= temp12891_78 temp12891_79))
(assert (= temp12891_81 #x0000000000000001))
(assert (= temp12891_80 temp12891_81))
(assert (= var6375719 var69143))
(assert (= temp12891_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp12891_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12891_83 #x0000000000000000))
(assert (= var83534 temp12891_83))
(assert (= temp12891_84 #x0000000000000002))
(assert (= var83537 (bvsdiv ARGNAME_n_fft_NAMEEND temp12891_84)))
(assert (= var83540 var83537))
(assert (= temp12891_85 #x0000000000000000))
(assert (= var6506834
   (ite (= ARGNAME_center_NAMEEND temp12891_85)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12891_86 #x0000000000000000))
(assert (= var6506834 temp12891_86))
(assert (= temp12891_87 #xfffffffffffffffe))
(assert (= var6506839 (bvsdiv ARGNAME_n_fft_NAMEEND temp12891_87)))
(assert (= var6506845 var6506839))
(assert (= var6506816 var6506845))
(assert (= var83557 var6506816))
(assert (= var6753268 var69143))
(assert (= temp12891_88 #x0000000000000001))
(assert (= var6753272 temp12891_88))
(assert (= var7801844 var69143))
(assert (= temp12891_89 #x0000000000000001))
(assert (= var7801848 temp12891_89))
(assert (= temp12891_90 #x0000000000000000))
(assert (= var7801886 temp12891_90))
(assert (= temp12891_91 #x0000000000000000))
(assert (= var7801886 temp12891_91))
(assert (= temp12891_92 #x0000000000000001))
(assert (= var9128231 temp12891_92))
(assert (= var9390375 var65913))
(assert (= var83931 var83557))
(assert (= var83975 var83557))
(assert (= temp12891_93 #x0000000000000000))
(assert (= var9637018 temp12891_93))
(model-add temp12891_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp12891_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp12891_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp12891_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp12891_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp12891_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp12891_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




