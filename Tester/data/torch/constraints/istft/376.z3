(declare-fun temp1141_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp1141_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp1141_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp1141_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp1141_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp1141_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp1141_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp1141_8 () (_ BitVec 64))
(declare-fun temp1141_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp1141_10 () (_ BitVec 64))
(declare-fun temp1141_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp1141_12 () (_ BitVec 64))
(declare-fun temp1141_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1141_14 () (_ BitVec 64))
(declare-fun temp1141_15 () (_ BitVec 64))
(declare-fun temp1141_16 () (_ BitVec 64))
(declare-fun temp1141_17 () (_ BitVec 64))
(declare-fun temp1141_18 () (_ BitVec 64))
(declare-fun temp1141_19 () (_ BitVec 64))
(declare-fun temp1141_20 () (_ BitVec 64))
(declare-fun temp1141_21 () (_ BitVec 64))
(declare-fun temp1141_22 () (_ BitVec 64))
(declare-fun temp1141_23 () (_ BitVec 64))
(declare-fun temp1141_24 () (_ BitVec 64))
(declare-fun temp1141_25 () (_ BitVec 64))
(declare-fun temp1141_26 () (_ BitVec 64))
(declare-fun temp1141_27 () (_ BitVec 64))
(declare-fun temp1141_28 () (_ BitVec 64))
(declare-fun temp1141_29 () (_ BitVec 64))
(declare-fun temp1141_31 () (_ BitVec 64))
(declare-fun temp1141_30 () (_ BitVec 64))
(declare-fun temp1141_32 () (_ BitVec 64))
(declare-fun temp1141_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp1141_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp1141_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp1141_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp1141_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp1141_39 () (_ BitVec 64))
(declare-fun temp1141_38 () (_ BitVec 64))
(declare-fun temp1141_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp1141_41 () (_ BitVec 64))
(declare-fun temp1141_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp1141_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp1141_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp1141_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp1141_47 () (_ BitVec 64))
(declare-fun temp1141_46 () (_ BitVec 64))
(declare-fun temp1141_49 () (_ BitVec 64))
(declare-fun temp1141_48 () (_ BitVec 64))
(declare-fun temp1141_51 () (_ BitVec 64))
(declare-fun temp1141_50 () (_ BitVec 64))
(declare-fun temp1141_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp1141_54 () (_ BitVec 64))
(declare-fun temp1141_53 () (_ BitVec 64))
(declare-fun temp1141_56 () (_ BitVec 64))
(declare-fun temp1141_55 () (_ BitVec 64))
(declare-fun temp1141_58 () (_ BitVec 64))
(declare-fun temp1141_57 () (_ BitVec 64))
(declare-fun temp1141_60 () (_ BitVec 64))
(declare-fun temp1141_59 () (_ BitVec 64))
(declare-fun temp1141_62 () (_ BitVec 64))
(declare-fun temp1141_61 () (_ BitVec 64))
(declare-fun temp1141_64 () (_ BitVec 64))
(declare-fun temp1141_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp1141_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp1141_67 () (_ BitVec 64))
(declare-fun temp1141_66 () (_ BitVec 64))
(declare-fun temp1141_69 () (_ BitVec 64))
(declare-fun temp1141_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp1141_71 () (_ BitVec 64))
(declare-fun temp1141_70 () (_ BitVec 64))
(declare-fun temp1141_73 () (_ BitVec 64))
(declare-fun temp1141_72 () (_ BitVec 64))
(declare-fun temp1141_75 () (_ BitVec 64))
(declare-fun temp1141_74 () (_ BitVec 64))
(declare-fun temp1141_77 () (_ BitVec 64))
(declare-fun temp1141_76 () (_ BitVec 64))
(declare-fun temp1141_79 () (_ BitVec 64))
(declare-fun temp1141_78 () (_ BitVec 64))
(declare-fun temp1141_81 () (_ BitVec 64))
(declare-fun temp1141_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp1141_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp1141_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp1141_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun temp1141_85 () (_ BitVec 64))
(declare-fun var6818858 () (_ BitVec 64))
(declare-fun temp1141_86 () (_ BitVec 64))
(declare-fun var7670772 () (_ BitVec 64))
(declare-fun temp1141_87 () (_ BitVec 64))
(declare-fun var7670776 () (_ BitVec 64))
(declare-fun temp1141_88 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun temp1141_89 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp1141_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp1141_1)))
(assert (= temp1141_2 #x0000000000000000))
(assert (= var1050945 temp1141_2))
(assert (= temp1141_3 #xffffffffffffffff))
(assert (= var67312 temp1141_3))
(assert (= temp1141_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp1141_4)))
(assert (= temp1141_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp1141_5)))
(assert (= temp1141_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp1141_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp1141_7 #x0000000000000000))
(assert (= var82187 temp1141_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_8 #x0000000000000000))
(assert (= var82356 temp1141_8))
(assert (= temp1141_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp1141_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_10 #x0000000000000001))
(assert (= var82528 temp1141_10))
(assert (= temp1141_11 #x0000000000000000))
(assert (= var65913 temp1141_11))
(assert (= temp1141_12 #x0000000000000000))
(assert (= temp1141_13 temp1141_12))
(assert (= temp1141_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp1141_13)))
(assert (= temp1141_15 #x0000000000000001))
(assert (= temp1141_16 temp1141_15))
(assert (= temp1141_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp1141_16)))
(assert (= temp1141_18 #x0000000000000002))
(assert (= temp1141_19 temp1141_18))
(assert (= temp1141_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp1141_19)))
(assert (= temp1141_21 #x0000000000000003))
(assert (= temp1141_22 temp1141_21))
(assert (= temp1141_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp1141_22)))
(assert (= temp1141_24 #x0000000000000004))
(assert (= temp1141_25 temp1141_24))
(assert (= temp1141_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp1141_25)))
(assert (= temp1141_27 #x0000000000000005))
(assert (= temp1141_28 temp1141_27))
(assert (= temp1141_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp1141_28)))
(assert (= temp1141_31 #x0000000000000000))
(assert (= temp1141_30
   (ite (bvslt var65913 temp1141_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp1141_32 temp1141_30))
(assert (= temp1141_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp1141_32)))
(assert (= var82530 temp1141_33))
(assert (bvslt temp1141_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1141_34 #x0000000000000001))
(assert (= var82531 temp1141_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp1141_35 #x0000000000000001))
(assert (= var82728 temp1141_35))
(assert (= var1914351 var65913))
(assert (= temp1141_36 #x0000000000000001))
(assert (= var2115797 temp1141_36))
(assert (= temp1141_37 #x0000000000000002))
(assert (= var2115798 temp1141_37))
(assert (= temp1141_39 #x0000000000000000))
(assert (= temp1141_38 temp1141_39))
(assert (= temp1141_40 #x0000000000000000))
(assert (= var2628020 temp1141_40))
(assert (= temp1141_41 #x0000000000000001))
(assert (= temp1141_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp1141_41
        temp1141_42)))
(assert (= temp1141_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp1141_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp1141_44 #x0000000000000000))
(assert (= var3740377 temp1141_44))
(assert (= temp1141_45 #x0000000000000002))
(assert (= var69143 temp1141_45))
(assert (= temp1141_47 #x0000000000000001))
(assert (= temp1141_46 temp1141_47))
(assert (= temp1141_49 #x0000000000000001))
(assert (= temp1141_48 temp1141_49))
(assert (= temp1141_51 #x0000000000000003))
(assert (= temp1141_50 temp1141_51))
(assert (= temp1141_52 #x0000000000000001))
(assert (= var4212949 temp1141_52))
(assert (= var4212950 var69143))
(assert (= temp1141_54 #x0000000000000001))
(assert (= temp1141_53 temp1141_54))
(assert (= temp1141_56 #x0000000000000001))
(assert (= temp1141_55 temp1141_56))
(assert (= temp1141_58 #x0000000000000001))
(assert (= temp1141_57 temp1141_58))
(assert (= temp1141_60 #x0000000000000001))
(assert (= temp1141_59 temp1141_60))
(assert (= temp1141_62 #x0000000000000000))
(assert (= temp1141_61 temp1141_62))
(assert (= temp1141_64 #x0000000000000001))
(assert (= temp1141_63 temp1141_64))
(assert (= var4868391 var69143))
(assert (= temp1141_65 #x0000000000000002))
(assert (= var4983962 temp1141_65))
(assert (= temp1141_67 #x0000000000000001))
(assert (= temp1141_66 temp1141_67))
(assert (= temp1141_69 #x0000000000000001))
(assert (= temp1141_68 temp1141_69))
(assert (= var5453295 var65913))
(assert (= temp1141_71 #x0000000000000001))
(assert (= temp1141_70 temp1141_71))
(assert (= temp1141_73 #x0000000000000001))
(assert (= temp1141_72 temp1141_73))
(assert (= temp1141_75 #x0000000000000001))
(assert (= temp1141_74 temp1141_75))
(assert (= temp1141_77 #x0000000000000001))
(assert (= temp1141_76 temp1141_77))
(assert (= temp1141_79 #x0000000000000000))
(assert (= temp1141_78 temp1141_79))
(assert (= temp1141_81 #x0000000000000001))
(assert (= temp1141_80 temp1141_81))
(assert (= var6375719 var69143))
(assert (= temp1141_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp1141_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_83 #x0000000000000001))
(assert (= var83534 temp1141_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp1141_84 #x0000000000000001))
(assert (= var6818808 temp1141_84))
(assert (= temp1141_85 #x0000000000000000))
(assert (= var6818858 temp1141_85))
(assert (= temp1141_86 #x0000000000000000))
(assert (= var6818858 temp1141_86))
(assert (= var7670772 var69143))
(assert (= temp1141_87 #x0000000000000001))
(assert (= var7670776 temp1141_87))
(assert (= temp1141_88 #x0000000000000001))
(assert (= var9062695 temp1141_88))
(assert (= var9324839 var65913))
(assert (= temp1141_89 #x0000000000000000))
(assert (= var9571482 temp1141_89))
(model-add temp1141_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1141_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp1141_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp1141_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp1141_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp1141_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1141_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




