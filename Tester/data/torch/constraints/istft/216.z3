(declare-fun temp481_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp481_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp481_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp481_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp481_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp481_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp481_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp481_8 () (_ BitVec 64))
(declare-fun temp481_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp481_10 () (_ BitVec 64))
(declare-fun temp481_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp481_12 () (_ BitVec 64))
(declare-fun temp481_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp481_14 () (_ BitVec 64))
(declare-fun temp481_15 () (_ BitVec 64))
(declare-fun temp481_16 () (_ BitVec 64))
(declare-fun temp481_17 () (_ BitVec 64))
(declare-fun temp481_18 () (_ BitVec 64))
(declare-fun temp481_19 () (_ BitVec 64))
(declare-fun temp481_20 () (_ BitVec 64))
(declare-fun temp481_21 () (_ BitVec 64))
(declare-fun temp481_22 () (_ BitVec 64))
(declare-fun temp481_23 () (_ BitVec 64))
(declare-fun temp481_24 () (_ BitVec 64))
(declare-fun temp481_25 () (_ BitVec 64))
(declare-fun temp481_26 () (_ BitVec 64))
(declare-fun temp481_27 () (_ BitVec 64))
(declare-fun temp481_28 () (_ BitVec 64))
(declare-fun temp481_29 () (_ BitVec 64))
(declare-fun temp481_31 () (_ BitVec 64))
(declare-fun temp481_30 () (_ BitVec 64))
(declare-fun temp481_32 () (_ BitVec 64))
(declare-fun temp481_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp481_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp481_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp481_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp481_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp481_39 () (_ BitVec 64))
(declare-fun temp481_38 () (_ BitVec 64))
(declare-fun temp481_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp481_41 () (_ BitVec 64))
(declare-fun temp481_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp481_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp481_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp481_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp481_47 () (_ BitVec 64))
(declare-fun temp481_46 () (_ BitVec 64))
(declare-fun temp481_49 () (_ BitVec 64))
(declare-fun temp481_48 () (_ BitVec 64))
(declare-fun temp481_51 () (_ BitVec 64))
(declare-fun temp481_50 () (_ BitVec 64))
(declare-fun temp481_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp481_54 () (_ BitVec 64))
(declare-fun temp481_53 () (_ BitVec 64))
(declare-fun temp481_56 () (_ BitVec 64))
(declare-fun temp481_55 () (_ BitVec 64))
(declare-fun temp481_58 () (_ BitVec 64))
(declare-fun temp481_57 () (_ BitVec 64))
(declare-fun temp481_60 () (_ BitVec 64))
(declare-fun temp481_59 () (_ BitVec 64))
(declare-fun temp481_62 () (_ BitVec 64))
(declare-fun temp481_61 () (_ BitVec 64))
(declare-fun temp481_64 () (_ BitVec 64))
(declare-fun temp481_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp481_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp481_67 () (_ BitVec 64))
(declare-fun temp481_66 () (_ BitVec 64))
(declare-fun temp481_69 () (_ BitVec 64))
(declare-fun temp481_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp481_71 () (_ BitVec 64))
(declare-fun temp481_70 () (_ BitVec 64))
(declare-fun temp481_73 () (_ BitVec 64))
(declare-fun temp481_72 () (_ BitVec 64))
(declare-fun temp481_75 () (_ BitVec 64))
(declare-fun temp481_74 () (_ BitVec 64))
(declare-fun temp481_77 () (_ BitVec 64))
(declare-fun temp481_76 () (_ BitVec 64))
(declare-fun temp481_79 () (_ BitVec 64))
(declare-fun temp481_78 () (_ BitVec 64))
(declare-fun temp481_81 () (_ BitVec 64))
(declare-fun temp481_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp481_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp481_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp481_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp481_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp481_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp481_87 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp481_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp481_1)))
(assert (= temp481_2 #x0000000000000000))
(assert (= var1050945 temp481_2))
(assert (= temp481_3 #xffffffffffffffff))
(assert (= var67312 temp481_3))
(assert (= temp481_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp481_4)))
(assert (= temp481_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp481_5)))
(assert (= temp481_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp481_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp481_7 #x0000000000000000))
(assert (= var82187 temp481_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp481_8 #x0000000000000000))
(assert (= var82356 temp481_8))
(assert (= temp481_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp481_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp481_10 #x0000000000000001))
(assert (= var82528 temp481_10))
(assert (= temp481_11 #x0000000000000000))
(assert (= var65913 temp481_11))
(assert (= temp481_12 #x0000000000000000))
(assert (= temp481_13 temp481_12))
(assert (= temp481_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp481_13)))
(assert (= temp481_15 #x0000000000000001))
(assert (= temp481_16 temp481_15))
(assert (= temp481_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp481_16)))
(assert (= temp481_18 #x0000000000000002))
(assert (= temp481_19 temp481_18))
(assert (= temp481_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp481_19)))
(assert (= temp481_21 #x0000000000000003))
(assert (= temp481_22 temp481_21))
(assert (= temp481_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp481_22)))
(assert (= temp481_24 #x0000000000000004))
(assert (= temp481_25 temp481_24))
(assert (= temp481_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp481_25)))
(assert (= temp481_27 #x0000000000000005))
(assert (= temp481_28 temp481_27))
(assert (= temp481_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp481_28)))
(assert (= temp481_31 #x0000000000000000))
(assert (= temp481_30
   (ite (bvslt var65913 temp481_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp481_32 temp481_30))
(assert (= temp481_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp481_32)))
(assert (= var82530 temp481_33))
(assert (bvslt temp481_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp481_34 #x0000000000000001))
(assert (= var82531 temp481_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp481_35 #x0000000000000001))
(assert (= var82728 temp481_35))
(assert (= var1914351 var65913))
(assert (= temp481_36 #x0000000000000001))
(assert (= var2115797 temp481_36))
(assert (= temp481_37 #x0000000000000002))
(assert (= var2115798 temp481_37))
(assert (= temp481_39 #x0000000000000000))
(assert (= temp481_38 temp481_39))
(assert (= temp481_40 #x0000000000000000))
(assert (= var2628020 temp481_40))
(assert (= temp481_41 #x0000000000000001))
(assert (= temp481_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp481_41 temp481_42)))
(assert (= temp481_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp481_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp481_44 #x0000000000000000))
(assert (= var3740377 temp481_44))
(assert (= temp481_45 #x0000000000000002))
(assert (= var69143 temp481_45))
(assert (= temp481_47 #x0000000000000001))
(assert (= temp481_46 temp481_47))
(assert (= temp481_49 #x0000000000000001))
(assert (= temp481_48 temp481_49))
(assert (= temp481_51 #x0000000000000003))
(assert (= temp481_50 temp481_51))
(assert (= temp481_52 #x0000000000000001))
(assert (= var4212949 temp481_52))
(assert (= var4212950 var69143))
(assert (= temp481_54 #x0000000000000001))
(assert (= temp481_53 temp481_54))
(assert (= temp481_56 #x0000000000000001))
(assert (= temp481_55 temp481_56))
(assert (= temp481_58 #x0000000000000001))
(assert (= temp481_57 temp481_58))
(assert (= temp481_60 #x0000000000000001))
(assert (= temp481_59 temp481_60))
(assert (= temp481_62 #x0000000000000000))
(assert (= temp481_61 temp481_62))
(assert (= temp481_64 #x0000000000000001))
(assert (= temp481_63 temp481_64))
(assert (= var4868391 var69143))
(assert (= temp481_65 #x0000000000000002))
(assert (= var4983962 temp481_65))
(assert (= temp481_67 #x0000000000000001))
(assert (= temp481_66 temp481_67))
(assert (= temp481_69 #x0000000000000001))
(assert (= temp481_68 temp481_69))
(assert (= var5453295 var65913))
(assert (= temp481_71 #x0000000000000001))
(assert (= temp481_70 temp481_71))
(assert (= temp481_73 #x0000000000000001))
(assert (= temp481_72 temp481_73))
(assert (= temp481_75 #x0000000000000001))
(assert (= temp481_74 temp481_75))
(assert (= temp481_77 #x0000000000000001))
(assert (= temp481_76 temp481_77))
(assert (= temp481_79 #x0000000000000000))
(assert (= temp481_78 temp481_79))
(assert (= temp481_81 #x0000000000000001))
(assert (= temp481_80 temp481_81))
(assert (= var6375719 var69143))
(assert (= temp481_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp481_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp481_83 #x0000000000000001))
(assert (= var83534 temp481_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp481_84 #x0000000000000001))
(assert (= var6818808 temp481_84))
(assert (= var7736308 var69143))
(assert (= temp481_85 #x0000000000000001))
(assert (= var7736312 temp481_85))
(assert (= temp481_86 #x0000000000000001))
(assert (= var9193767 temp481_86))
(assert (= var9455911 var65913))
(assert (= temp481_87 #x0000000000000000))
(assert (= var9702554 temp481_87))
(model-add temp481_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp481_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp481_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp481_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp481_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp481_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp481_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





