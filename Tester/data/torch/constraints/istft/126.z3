(declare-fun temp258_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp258_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp258_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp258_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp258_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp258_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp258_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp258_8 () (_ BitVec 64))
(declare-fun temp258_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp258_10 () (_ BitVec 64))
(declare-fun temp258_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp258_12 () (_ BitVec 64))
(declare-fun temp258_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp258_14 () (_ BitVec 64))
(declare-fun temp258_15 () (_ BitVec 64))
(declare-fun temp258_16 () (_ BitVec 64))
(declare-fun temp258_17 () (_ BitVec 64))
(declare-fun temp258_18 () (_ BitVec 64))
(declare-fun temp258_19 () (_ BitVec 64))
(declare-fun temp258_20 () (_ BitVec 64))
(declare-fun temp258_21 () (_ BitVec 64))
(declare-fun temp258_22 () (_ BitVec 64))
(declare-fun temp258_23 () (_ BitVec 64))
(declare-fun temp258_24 () (_ BitVec 64))
(declare-fun temp258_25 () (_ BitVec 64))
(declare-fun temp258_26 () (_ BitVec 64))
(declare-fun temp258_27 () (_ BitVec 64))
(declare-fun temp258_28 () (_ BitVec 64))
(declare-fun temp258_29 () (_ BitVec 64))
(declare-fun temp258_31 () (_ BitVec 64))
(declare-fun temp258_30 () (_ BitVec 64))
(declare-fun temp258_32 () (_ BitVec 64))
(declare-fun temp258_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp258_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp258_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp258_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp258_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp258_39 () (_ BitVec 64))
(declare-fun temp258_38 () (_ BitVec 64))
(declare-fun temp258_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp258_41 () (_ BitVec 64))
(declare-fun temp258_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp258_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp258_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp258_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp258_47 () (_ BitVec 64))
(declare-fun temp258_46 () (_ BitVec 64))
(declare-fun temp258_49 () (_ BitVec 64))
(declare-fun temp258_48 () (_ BitVec 64))
(declare-fun temp258_51 () (_ BitVec 64))
(declare-fun temp258_50 () (_ BitVec 64))
(declare-fun temp258_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp258_54 () (_ BitVec 64))
(declare-fun temp258_53 () (_ BitVec 64))
(declare-fun temp258_56 () (_ BitVec 64))
(declare-fun temp258_55 () (_ BitVec 64))
(declare-fun temp258_58 () (_ BitVec 64))
(declare-fun temp258_57 () (_ BitVec 64))
(declare-fun temp258_60 () (_ BitVec 64))
(declare-fun temp258_59 () (_ BitVec 64))
(declare-fun temp258_62 () (_ BitVec 64))
(declare-fun temp258_61 () (_ BitVec 64))
(declare-fun temp258_64 () (_ BitVec 64))
(declare-fun temp258_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp258_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp258_67 () (_ BitVec 64))
(declare-fun temp258_66 () (_ BitVec 64))
(declare-fun temp258_69 () (_ BitVec 64))
(declare-fun temp258_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp258_71 () (_ BitVec 64))
(declare-fun temp258_70 () (_ BitVec 64))
(declare-fun temp258_73 () (_ BitVec 64))
(declare-fun temp258_72 () (_ BitVec 64))
(declare-fun temp258_75 () (_ BitVec 64))
(declare-fun temp258_74 () (_ BitVec 64))
(declare-fun temp258_77 () (_ BitVec 64))
(declare-fun temp258_76 () (_ BitVec 64))
(declare-fun temp258_79 () (_ BitVec 64))
(declare-fun temp258_78 () (_ BitVec 64))
(declare-fun temp258_81 () (_ BitVec 64))
(declare-fun temp258_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp258_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp258_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp258_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp258_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp258_86 () (_ BitVec 64))
(declare-fun var7801886 () (_ BitVec 64))
(declare-fun temp258_87 () (_ BitVec 64))
(declare-fun temp258_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun temp258_89 () (_ BitVec 64))
(declare-fun var9440410 () (_ BitVec 64))
(assert (= temp258_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp258_1)))
(assert (= temp258_2 #x0000000000000000))
(assert (= var1050945 temp258_2))
(assert (= temp258_3 #xffffffffffffffff))
(assert (= var67312 temp258_3))
(assert (= temp258_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp258_4)))
(assert (= temp258_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp258_5)))
(assert (= temp258_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp258_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp258_7 #x0000000000000000))
(assert (= var82187 temp258_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp258_8 #x0000000000000000))
(assert (= var82356 temp258_8))
(assert (= temp258_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp258_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp258_10 #x0000000000000001))
(assert (= var82528 temp258_10))
(assert (= temp258_11 #x0000000000000000))
(assert (= var65913 temp258_11))
(assert (= temp258_12 #x0000000000000000))
(assert (= temp258_13 temp258_12))
(assert (= temp258_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp258_13)))
(assert (= temp258_15 #x0000000000000001))
(assert (= temp258_16 temp258_15))
(assert (= temp258_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp258_16)))
(assert (= temp258_18 #x0000000000000002))
(assert (= temp258_19 temp258_18))
(assert (= temp258_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp258_19)))
(assert (= temp258_21 #x0000000000000003))
(assert (= temp258_22 temp258_21))
(assert (= temp258_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp258_22)))
(assert (= temp258_24 #x0000000000000004))
(assert (= temp258_25 temp258_24))
(assert (= temp258_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp258_25)))
(assert (= temp258_27 #x0000000000000005))
(assert (= temp258_28 temp258_27))
(assert (= temp258_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp258_28)))
(assert (= temp258_31 #x0000000000000000))
(assert (= temp258_30
   (ite (bvslt var65913 temp258_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp258_32 temp258_30))
(assert (= temp258_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp258_32)))
(assert (= var82530 temp258_33))
(assert (bvslt temp258_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp258_34 #x0000000000000001))
(assert (= var82531 temp258_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp258_35 #x0000000000000001))
(assert (= var82728 temp258_35))
(assert (= var1914351 var65913))
(assert (= temp258_36 #x0000000000000001))
(assert (= var2115797 temp258_36))
(assert (= temp258_37 #x0000000000000002))
(assert (= var2115798 temp258_37))
(assert (= temp258_39 #x0000000000000000))
(assert (= temp258_38 temp258_39))
(assert (= temp258_40 #x0000000000000000))
(assert (= var2628020 temp258_40))
(assert (= temp258_41 #x0000000000000001))
(assert (= temp258_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp258_41 temp258_42)))
(assert (= temp258_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp258_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp258_44 #x0000000000000000))
(assert (= var3740377 temp258_44))
(assert (= temp258_45 #x0000000000000002))
(assert (= var69143 temp258_45))
(assert (= temp258_47 #x0000000000000001))
(assert (= temp258_46 temp258_47))
(assert (= temp258_49 #x0000000000000001))
(assert (= temp258_48 temp258_49))
(assert (= temp258_51 #x0000000000000003))
(assert (= temp258_50 temp258_51))
(assert (= temp258_52 #x0000000000000001))
(assert (= var4212949 temp258_52))
(assert (= var4212950 var69143))
(assert (= temp258_54 #x0000000000000001))
(assert (= temp258_53 temp258_54))
(assert (= temp258_56 #x0000000000000001))
(assert (= temp258_55 temp258_56))
(assert (= temp258_58 #x0000000000000001))
(assert (= temp258_57 temp258_58))
(assert (= temp258_60 #x0000000000000001))
(assert (= temp258_59 temp258_60))
(assert (= temp258_62 #x0000000000000000))
(assert (= temp258_61 temp258_62))
(assert (= temp258_64 #x0000000000000001))
(assert (= temp258_63 temp258_64))
(assert (= var4868391 var69143))
(assert (= temp258_65 #x0000000000000002))
(assert (= var4983962 temp258_65))
(assert (= temp258_67 #x0000000000000001))
(assert (= temp258_66 temp258_67))
(assert (= temp258_69 #x0000000000000001))
(assert (= temp258_68 temp258_69))
(assert (= var5453295 var65913))
(assert (= temp258_71 #x0000000000000001))
(assert (= temp258_70 temp258_71))
(assert (= temp258_73 #x0000000000000001))
(assert (= temp258_72 temp258_73))
(assert (= temp258_75 #x0000000000000001))
(assert (= temp258_74 temp258_75))
(assert (= temp258_77 #x0000000000000001))
(assert (= temp258_76 temp258_77))
(assert (= temp258_79 #x0000000000000000))
(assert (= temp258_78 temp258_79))
(assert (= temp258_81 #x0000000000000001))
(assert (= temp258_80 temp258_81))
(assert (= var6375719 var69143))
(assert (= temp258_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp258_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp258_83 #x0000000000000001))
(assert (= var83534 temp258_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp258_84 #x0000000000000001))
(assert (= var6818808 temp258_84))
(assert (= var7801844 var69143))
(assert (= temp258_85 #x0000000000000001))
(assert (= var7801848 temp258_85))
(assert (= temp258_86 #x0000000000000000))
(assert (= var7801886 temp258_86))
(assert (= temp258_87 #x0000000000000000))
(assert (= var7801886 temp258_87))
(assert (= temp258_88 #x0000000000000001))
(assert (= var9128231 temp258_88))
(assert (= temp258_89 #x0000000000000000))
(assert (= var9440410 temp258_89))
(model-add temp258_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp258_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp258_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp258_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp258_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp258_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp258_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





