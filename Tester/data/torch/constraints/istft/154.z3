(declare-fun temp333_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp333_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp333_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp333_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp333_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp333_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp333_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp333_8 () (_ BitVec 64))
(declare-fun temp333_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp333_10 () (_ BitVec 64))
(declare-fun temp333_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp333_12 () (_ BitVec 64))
(declare-fun temp333_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp333_14 () (_ BitVec 64))
(declare-fun temp333_15 () (_ BitVec 64))
(declare-fun temp333_16 () (_ BitVec 64))
(declare-fun temp333_17 () (_ BitVec 64))
(declare-fun temp333_18 () (_ BitVec 64))
(declare-fun temp333_19 () (_ BitVec 64))
(declare-fun temp333_20 () (_ BitVec 64))
(declare-fun temp333_21 () (_ BitVec 64))
(declare-fun temp333_22 () (_ BitVec 64))
(declare-fun temp333_23 () (_ BitVec 64))
(declare-fun temp333_24 () (_ BitVec 64))
(declare-fun temp333_25 () (_ BitVec 64))
(declare-fun temp333_26 () (_ BitVec 64))
(declare-fun temp333_27 () (_ BitVec 64))
(declare-fun temp333_28 () (_ BitVec 64))
(declare-fun temp333_29 () (_ BitVec 64))
(declare-fun temp333_31 () (_ BitVec 64))
(declare-fun temp333_30 () (_ BitVec 64))
(declare-fun temp333_32 () (_ BitVec 64))
(declare-fun temp333_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp333_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp333_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp333_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp333_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp333_39 () (_ BitVec 64))
(declare-fun temp333_38 () (_ BitVec 64))
(declare-fun temp333_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp333_41 () (_ BitVec 64))
(declare-fun temp333_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp333_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp333_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp333_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp333_47 () (_ BitVec 64))
(declare-fun temp333_46 () (_ BitVec 64))
(declare-fun temp333_49 () (_ BitVec 64))
(declare-fun temp333_48 () (_ BitVec 64))
(declare-fun temp333_51 () (_ BitVec 64))
(declare-fun temp333_50 () (_ BitVec 64))
(declare-fun temp333_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp333_54 () (_ BitVec 64))
(declare-fun temp333_53 () (_ BitVec 64))
(declare-fun temp333_56 () (_ BitVec 64))
(declare-fun temp333_55 () (_ BitVec 64))
(declare-fun temp333_58 () (_ BitVec 64))
(declare-fun temp333_57 () (_ BitVec 64))
(declare-fun temp333_60 () (_ BitVec 64))
(declare-fun temp333_59 () (_ BitVec 64))
(declare-fun temp333_62 () (_ BitVec 64))
(declare-fun temp333_61 () (_ BitVec 64))
(declare-fun temp333_64 () (_ BitVec 64))
(declare-fun temp333_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp333_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp333_67 () (_ BitVec 64))
(declare-fun temp333_66 () (_ BitVec 64))
(declare-fun temp333_69 () (_ BitVec 64))
(declare-fun temp333_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp333_71 () (_ BitVec 64))
(declare-fun temp333_70 () (_ BitVec 64))
(declare-fun temp333_73 () (_ BitVec 64))
(declare-fun temp333_72 () (_ BitVec 64))
(declare-fun temp333_75 () (_ BitVec 64))
(declare-fun temp333_74 () (_ BitVec 64))
(declare-fun temp333_77 () (_ BitVec 64))
(declare-fun temp333_76 () (_ BitVec 64))
(declare-fun temp333_79 () (_ BitVec 64))
(declare-fun temp333_78 () (_ BitVec 64))
(declare-fun temp333_81 () (_ BitVec 64))
(declare-fun temp333_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp333_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp333_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp333_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp333_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp333_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp333_87 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp333_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp333_1)))
(assert (= temp333_2 #x0000000000000000))
(assert (= var1050945 temp333_2))
(assert (= temp333_3 #xffffffffffffffff))
(assert (= var67312 temp333_3))
(assert (= temp333_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp333_4)))
(assert (= temp333_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp333_5)))
(assert (= temp333_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp333_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp333_7 #x0000000000000000))
(assert (= var82187 temp333_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_8 #x0000000000000000))
(assert (= var82356 temp333_8))
(assert (= temp333_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp333_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_10 #x0000000000000001))
(assert (= var82528 temp333_10))
(assert (= temp333_11 #x0000000000000000))
(assert (= var65913 temp333_11))
(assert (= temp333_12 #x0000000000000000))
(assert (= temp333_13 temp333_12))
(assert (= temp333_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp333_13)))
(assert (= temp333_15 #x0000000000000001))
(assert (= temp333_16 temp333_15))
(assert (= temp333_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp333_16)))
(assert (= temp333_18 #x0000000000000002))
(assert (= temp333_19 temp333_18))
(assert (= temp333_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp333_19)))
(assert (= temp333_21 #x0000000000000003))
(assert (= temp333_22 temp333_21))
(assert (= temp333_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp333_22)))
(assert (= temp333_24 #x0000000000000004))
(assert (= temp333_25 temp333_24))
(assert (= temp333_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp333_25)))
(assert (= temp333_27 #x0000000000000005))
(assert (= temp333_28 temp333_27))
(assert (= temp333_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp333_28)))
(assert (= temp333_31 #x0000000000000000))
(assert (= temp333_30
   (ite (bvslt var65913 temp333_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp333_32 temp333_30))
(assert (= temp333_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp333_32)))
(assert (= var82530 temp333_33))
(assert (bvslt temp333_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp333_34 #x0000000000000001))
(assert (= var82531 temp333_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp333_35 #x0000000000000001))
(assert (= var82728 temp333_35))
(assert (= var1914351 var65913))
(assert (= temp333_36 #x0000000000000001))
(assert (= var2115797 temp333_36))
(assert (= temp333_37 #x0000000000000002))
(assert (= var2115798 temp333_37))
(assert (= temp333_39 #x0000000000000000))
(assert (= temp333_38 temp333_39))
(assert (= temp333_40 #x0000000000000000))
(assert (= var2628020 temp333_40))
(assert (= temp333_41 #x0000000000000001))
(assert (= temp333_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp333_41 temp333_42)))
(assert (= temp333_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp333_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp333_44 #x0000000000000000))
(assert (= var3740377 temp333_44))
(assert (= temp333_45 #x0000000000000002))
(assert (= var69143 temp333_45))
(assert (= temp333_47 #x0000000000000001))
(assert (= temp333_46 temp333_47))
(assert (= temp333_49 #x0000000000000001))
(assert (= temp333_48 temp333_49))
(assert (= temp333_51 #x0000000000000003))
(assert (= temp333_50 temp333_51))
(assert (= temp333_52 #x0000000000000001))
(assert (= var4212949 temp333_52))
(assert (= var4212950 var69143))
(assert (= temp333_54 #x0000000000000001))
(assert (= temp333_53 temp333_54))
(assert (= temp333_56 #x0000000000000001))
(assert (= temp333_55 temp333_56))
(assert (= temp333_58 #x0000000000000001))
(assert (= temp333_57 temp333_58))
(assert (= temp333_60 #x0000000000000001))
(assert (= temp333_59 temp333_60))
(assert (= temp333_62 #x0000000000000000))
(assert (= temp333_61 temp333_62))
(assert (= temp333_64 #x0000000000000001))
(assert (= temp333_63 temp333_64))
(assert (= var4868391 var69143))
(assert (= temp333_65 #x0000000000000002))
(assert (= var4983962 temp333_65))
(assert (= temp333_67 #x0000000000000001))
(assert (= temp333_66 temp333_67))
(assert (= temp333_69 #x0000000000000001))
(assert (= temp333_68 temp333_69))
(assert (= var5453295 var65913))
(assert (= temp333_71 #x0000000000000001))
(assert (= temp333_70 temp333_71))
(assert (= temp333_73 #x0000000000000001))
(assert (= temp333_72 temp333_73))
(assert (= temp333_75 #x0000000000000001))
(assert (= temp333_74 temp333_75))
(assert (= temp333_77 #x0000000000000001))
(assert (= temp333_76 temp333_77))
(assert (= temp333_79 #x0000000000000000))
(assert (= temp333_78 temp333_79))
(assert (= temp333_81 #x0000000000000001))
(assert (= temp333_80 temp333_81))
(assert (= var6375719 var69143))
(assert (= temp333_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp333_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp333_83 #x0000000000000001))
(assert (= var83534 temp333_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp333_84 #x0000000000000001))
(assert (= var6818808 temp333_84))
(assert (= var7801844 var69143))
(assert (= temp333_85 #x0000000000000001))
(assert (= var7801848 temp333_85))
(assert (= temp333_86 #x0000000000000001))
(assert (= var9193767 temp333_86))
(assert (= var9455911 var65913))
(assert (= temp333_87 #x0000000000000000))
(assert (= var9702554 temp333_87))
(model-add temp333_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp333_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp333_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp333_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp333_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp333_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp333_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




