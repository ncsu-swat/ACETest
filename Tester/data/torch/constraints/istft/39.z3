(declare-fun temp69_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp69_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp69_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp69_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp69_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp69_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp69_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp69_8 () (_ BitVec 64))
(declare-fun temp69_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp69_10 () (_ BitVec 64))
(declare-fun temp69_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp69_12 () (_ BitVec 64))
(declare-fun temp69_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp69_14 () (_ BitVec 64))
(declare-fun temp69_15 () (_ BitVec 64))
(declare-fun temp69_16 () (_ BitVec 64))
(declare-fun temp69_17 () (_ BitVec 64))
(declare-fun temp69_18 () (_ BitVec 64))
(declare-fun temp69_19 () (_ BitVec 64))
(declare-fun temp69_20 () (_ BitVec 64))
(declare-fun temp69_21 () (_ BitVec 64))
(declare-fun temp69_22 () (_ BitVec 64))
(declare-fun temp69_23 () (_ BitVec 64))
(declare-fun temp69_24 () (_ BitVec 64))
(declare-fun temp69_25 () (_ BitVec 64))
(declare-fun temp69_26 () (_ BitVec 64))
(declare-fun temp69_27 () (_ BitVec 64))
(declare-fun temp69_28 () (_ BitVec 64))
(declare-fun temp69_29 () (_ BitVec 64))
(declare-fun temp69_31 () (_ BitVec 64))
(declare-fun temp69_30 () (_ BitVec 64))
(declare-fun temp69_32 () (_ BitVec 64))
(declare-fun temp69_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp69_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp69_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp69_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp69_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp69_39 () (_ BitVec 64))
(declare-fun temp69_38 () (_ BitVec 64))
(declare-fun temp69_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp69_41 () (_ BitVec 64))
(declare-fun temp69_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp69_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp69_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp69_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp69_47 () (_ BitVec 64))
(declare-fun temp69_46 () (_ BitVec 64))
(declare-fun temp69_49 () (_ BitVec 64))
(declare-fun temp69_48 () (_ BitVec 64))
(declare-fun temp69_51 () (_ BitVec 64))
(declare-fun temp69_50 () (_ BitVec 64))
(declare-fun temp69_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp69_54 () (_ BitVec 64))
(declare-fun temp69_53 () (_ BitVec 64))
(declare-fun temp69_56 () (_ BitVec 64))
(declare-fun temp69_55 () (_ BitVec 64))
(declare-fun temp69_58 () (_ BitVec 64))
(declare-fun temp69_57 () (_ BitVec 64))
(declare-fun temp69_60 () (_ BitVec 64))
(declare-fun temp69_59 () (_ BitVec 64))
(declare-fun temp69_62 () (_ BitVec 64))
(declare-fun temp69_61 () (_ BitVec 64))
(declare-fun temp69_64 () (_ BitVec 64))
(declare-fun temp69_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp69_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp69_67 () (_ BitVec 64))
(declare-fun temp69_66 () (_ BitVec 64))
(declare-fun temp69_69 () (_ BitVec 64))
(declare-fun temp69_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp69_71 () (_ BitVec 64))
(declare-fun temp69_70 () (_ BitVec 64))
(declare-fun temp69_73 () (_ BitVec 64))
(declare-fun temp69_72 () (_ BitVec 64))
(declare-fun temp69_75 () (_ BitVec 64))
(declare-fun temp69_74 () (_ BitVec 64))
(declare-fun temp69_77 () (_ BitVec 64))
(declare-fun temp69_76 () (_ BitVec 64))
(declare-fun temp69_79 () (_ BitVec 64))
(declare-fun temp69_78 () (_ BitVec 64))
(declare-fun temp69_81 () (_ BitVec 64))
(declare-fun temp69_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp69_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp69_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp69_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp69_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp69_86 () (_ BitVec 64))
(declare-fun var7867434 () (_ BitVec 64))
(declare-fun temp69_87 () (_ BitVec 64))
(declare-fun temp69_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(assert (= temp69_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp69_1)))
(assert (= temp69_2 #x0000000000000000))
(assert (= var1050945 temp69_2))
(assert (= temp69_3 #xffffffffffffffff))
(assert (= var67312 temp69_3))
(assert (= temp69_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp69_4)))
(assert (= temp69_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp69_5)))
(assert (= temp69_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp69_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp69_7 #x0000000000000000))
(assert (= var82187 temp69_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_8 #x0000000000000000))
(assert (= var82356 temp69_8))
(assert (= temp69_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp69_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_10 #x0000000000000001))
(assert (= var82528 temp69_10))
(assert (= temp69_11 #x0000000000000000))
(assert (= var65913 temp69_11))
(assert (= temp69_12 #x0000000000000000))
(assert (= temp69_13 temp69_12))
(assert (= temp69_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp69_13)))
(assert (= temp69_15 #x0000000000000001))
(assert (= temp69_16 temp69_15))
(assert (= temp69_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp69_16)))
(assert (= temp69_18 #x0000000000000002))
(assert (= temp69_19 temp69_18))
(assert (= temp69_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp69_19)))
(assert (= temp69_21 #x0000000000000003))
(assert (= temp69_22 temp69_21))
(assert (= temp69_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp69_22)))
(assert (= temp69_24 #x0000000000000004))
(assert (= temp69_25 temp69_24))
(assert (= temp69_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp69_25)))
(assert (= temp69_27 #x0000000000000005))
(assert (= temp69_28 temp69_27))
(assert (= temp69_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp69_28)))
(assert (= temp69_31 #x0000000000000000))
(assert (= temp69_30
   (ite (bvslt var65913 temp69_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp69_32 temp69_30))
(assert (= temp69_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp69_32)))
(assert (= var82530 temp69_33))
(assert (bvslt temp69_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp69_34 #x0000000000000001))
(assert (= var82531 temp69_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp69_35 #x0000000000000001))
(assert (= var82728 temp69_35))
(assert (= var1914351 var65913))
(assert (= temp69_36 #x0000000000000001))
(assert (= var2115797 temp69_36))
(assert (= temp69_37 #x0000000000000002))
(assert (= var2115798 temp69_37))
(assert (= temp69_39 #x0000000000000000))
(assert (= temp69_38 temp69_39))
(assert (= temp69_40 #x0000000000000000))
(assert (= var2628020 temp69_40))
(assert (= temp69_41 #x0000000000000001))
(assert (= temp69_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp69_41 temp69_42)))
(assert (= temp69_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp69_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp69_44 #x0000000000000000))
(assert (= var3740377 temp69_44))
(assert (= temp69_45 #x0000000000000002))
(assert (= var69143 temp69_45))
(assert (= temp69_47 #x0000000000000001))
(assert (= temp69_46 temp69_47))
(assert (= temp69_49 #x0000000000000001))
(assert (= temp69_48 temp69_49))
(assert (= temp69_51 #x0000000000000003))
(assert (= temp69_50 temp69_51))
(assert (= temp69_52 #x0000000000000001))
(assert (= var4212949 temp69_52))
(assert (= var4212950 var69143))
(assert (= temp69_54 #x0000000000000001))
(assert (= temp69_53 temp69_54))
(assert (= temp69_56 #x0000000000000001))
(assert (= temp69_55 temp69_56))
(assert (= temp69_58 #x0000000000000001))
(assert (= temp69_57 temp69_58))
(assert (= temp69_60 #x0000000000000001))
(assert (= temp69_59 temp69_60))
(assert (= temp69_62 #x0000000000000000))
(assert (= temp69_61 temp69_62))
(assert (= temp69_64 #x0000000000000001))
(assert (= temp69_63 temp69_64))
(assert (= var4868391 var69143))
(assert (= temp69_65 #x0000000000000002))
(assert (= var4983962 temp69_65))
(assert (= temp69_67 #x0000000000000001))
(assert (= temp69_66 temp69_67))
(assert (= temp69_69 #x0000000000000001))
(assert (= temp69_68 temp69_69))
(assert (= var5453295 var65913))
(assert (= temp69_71 #x0000000000000001))
(assert (= temp69_70 temp69_71))
(assert (= temp69_73 #x0000000000000001))
(assert (= temp69_72 temp69_73))
(assert (= temp69_75 #x0000000000000001))
(assert (= temp69_74 temp69_75))
(assert (= temp69_77 #x0000000000000001))
(assert (= temp69_76 temp69_77))
(assert (= temp69_79 #x0000000000000000))
(assert (= temp69_78 temp69_79))
(assert (= temp69_81 #x0000000000000001))
(assert (= temp69_80 temp69_81))
(assert (= var6375719 var69143))
(assert (= temp69_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp69_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_83 #x0000000000000001))
(assert (= var83534 temp69_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp69_84 #x0000000000000001))
(assert (= var6818808 temp69_84))
(assert (= var7867380 var69143))
(assert (= temp69_85 #x0000000000000001))
(assert (= var7867384 temp69_85))
(assert (= temp69_86 #x0000000000000000))
(assert (= var7867434 temp69_86))
(assert (= temp69_87 #x0000000000000000))
(assert (= var7867434 temp69_87))
(assert (= temp69_88 #x0000000000000001))
(assert (= var9193767 temp69_88))
(model-add temp69_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp69_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp69_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp69_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp69_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp69_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp69_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






