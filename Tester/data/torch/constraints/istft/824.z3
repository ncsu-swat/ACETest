(declare-fun temp2941_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp2941_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp2941_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp2941_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp2941_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp2941_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp2941_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp2941_8 () (_ BitVec 64))
(declare-fun temp2941_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp2941_10 () (_ BitVec 64))
(declare-fun temp2941_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp2941_12 () (_ BitVec 64))
(declare-fun temp2941_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2941_14 () (_ BitVec 64))
(declare-fun temp2941_15 () (_ BitVec 64))
(declare-fun temp2941_16 () (_ BitVec 64))
(declare-fun temp2941_17 () (_ BitVec 64))
(declare-fun temp2941_18 () (_ BitVec 64))
(declare-fun temp2941_19 () (_ BitVec 64))
(declare-fun temp2941_20 () (_ BitVec 64))
(declare-fun temp2941_21 () (_ BitVec 64))
(declare-fun temp2941_22 () (_ BitVec 64))
(declare-fun temp2941_23 () (_ BitVec 64))
(declare-fun temp2941_24 () (_ BitVec 64))
(declare-fun temp2941_25 () (_ BitVec 64))
(declare-fun temp2941_26 () (_ BitVec 64))
(declare-fun temp2941_27 () (_ BitVec 64))
(declare-fun temp2941_28 () (_ BitVec 64))
(declare-fun temp2941_29 () (_ BitVec 64))
(declare-fun temp2941_31 () (_ BitVec 64))
(declare-fun temp2941_30 () (_ BitVec 64))
(declare-fun temp2941_32 () (_ BitVec 64))
(declare-fun temp2941_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp2941_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp2941_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp2941_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp2941_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp2941_39 () (_ BitVec 64))
(declare-fun temp2941_38 () (_ BitVec 64))
(declare-fun temp2941_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp2941_41 () (_ BitVec 64))
(declare-fun temp2941_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp2941_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp2941_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp2941_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp2941_47 () (_ BitVec 64))
(declare-fun temp2941_46 () (_ BitVec 64))
(declare-fun temp2941_49 () (_ BitVec 64))
(declare-fun temp2941_48 () (_ BitVec 64))
(declare-fun temp2941_51 () (_ BitVec 64))
(declare-fun temp2941_50 () (_ BitVec 64))
(declare-fun temp2941_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp2941_54 () (_ BitVec 64))
(declare-fun temp2941_53 () (_ BitVec 64))
(declare-fun temp2941_56 () (_ BitVec 64))
(declare-fun temp2941_55 () (_ BitVec 64))
(declare-fun temp2941_58 () (_ BitVec 64))
(declare-fun temp2941_57 () (_ BitVec 64))
(declare-fun temp2941_60 () (_ BitVec 64))
(declare-fun temp2941_59 () (_ BitVec 64))
(declare-fun temp2941_62 () (_ BitVec 64))
(declare-fun temp2941_61 () (_ BitVec 64))
(declare-fun temp2941_64 () (_ BitVec 64))
(declare-fun temp2941_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp2941_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp2941_67 () (_ BitVec 64))
(declare-fun temp2941_66 () (_ BitVec 64))
(declare-fun temp2941_69 () (_ BitVec 64))
(declare-fun temp2941_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp2941_71 () (_ BitVec 64))
(declare-fun temp2941_70 () (_ BitVec 64))
(declare-fun temp2941_73 () (_ BitVec 64))
(declare-fun temp2941_72 () (_ BitVec 64))
(declare-fun temp2941_75 () (_ BitVec 64))
(declare-fun temp2941_74 () (_ BitVec 64))
(declare-fun temp2941_77 () (_ BitVec 64))
(declare-fun temp2941_76 () (_ BitVec 64))
(declare-fun temp2941_79 () (_ BitVec 64))
(declare-fun temp2941_78 () (_ BitVec 64))
(declare-fun temp2941_81 () (_ BitVec 64))
(declare-fun temp2941_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp2941_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp2941_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun temp2941_84 () (_ BitVec 64))
(declare-fun var6506834 () (_ BitVec 64))
(declare-fun temp2941_85 () (_ BitVec 64))
(declare-fun var6753268 () (_ BitVec 64))
(declare-fun temp2941_86 () (_ BitVec 64))
(declare-fun var6753272 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp2941_87 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp2941_88 () (_ BitVec 64))
(declare-fun var7736362 () (_ BitVec 64))
(declare-fun temp2941_89 () (_ BitVec 64))
(declare-fun temp2941_90 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun temp2941_91 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp2941_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp2941_1)))
(assert (= temp2941_2 #x0000000000000000))
(assert (= var1050945 temp2941_2))
(assert (= temp2941_3 #xffffffffffffffff))
(assert (= var67312 temp2941_3))
(assert (= temp2941_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp2941_4)))
(assert (= temp2941_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp2941_5)))
(assert (= temp2941_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp2941_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp2941_7 #x0000000000000000))
(assert (= var82187 temp2941_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2941_8 #x0000000000000000))
(assert (= var82356 temp2941_8))
(assert (= temp2941_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp2941_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2941_10 #x0000000000000001))
(assert (= var82528 temp2941_10))
(assert (= temp2941_11 #x0000000000000000))
(assert (= var65913 temp2941_11))
(assert (= temp2941_12 #x0000000000000000))
(assert (= temp2941_13 temp2941_12))
(assert (= temp2941_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp2941_13)))
(assert (= temp2941_15 #x0000000000000001))
(assert (= temp2941_16 temp2941_15))
(assert (= temp2941_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp2941_16)))
(assert (= temp2941_18 #x0000000000000002))
(assert (= temp2941_19 temp2941_18))
(assert (= temp2941_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp2941_19)))
(assert (= temp2941_21 #x0000000000000003))
(assert (= temp2941_22 temp2941_21))
(assert (= temp2941_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp2941_22)))
(assert (= temp2941_24 #x0000000000000004))
(assert (= temp2941_25 temp2941_24))
(assert (= temp2941_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp2941_25)))
(assert (= temp2941_27 #x0000000000000005))
(assert (= temp2941_28 temp2941_27))
(assert (= temp2941_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp2941_28)))
(assert (= temp2941_31 #x0000000000000000))
(assert (= temp2941_30
   (ite (bvslt var65913 temp2941_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp2941_32 temp2941_30))
(assert (= temp2941_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp2941_32)))
(assert (= var82530 temp2941_33))
(assert (bvslt temp2941_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp2941_34 #x0000000000000001))
(assert (= var82531 temp2941_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp2941_35 #x0000000000000001))
(assert (= var82728 temp2941_35))
(assert (= var1914351 var65913))
(assert (= temp2941_36 #x0000000000000001))
(assert (= var2115797 temp2941_36))
(assert (= temp2941_37 #x0000000000000002))
(assert (= var2115798 temp2941_37))
(assert (= temp2941_39 #x0000000000000000))
(assert (= temp2941_38 temp2941_39))
(assert (= temp2941_40 #x0000000000000000))
(assert (= var2628020 temp2941_40))
(assert (= temp2941_41 #x0000000000000001))
(assert (= temp2941_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp2941_41
        temp2941_42)))
(assert (= temp2941_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp2941_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp2941_44 #x0000000000000000))
(assert (= var3740377 temp2941_44))
(assert (= temp2941_45 #x0000000000000002))
(assert (= var69143 temp2941_45))
(assert (= temp2941_47 #x0000000000000001))
(assert (= temp2941_46 temp2941_47))
(assert (= temp2941_49 #x0000000000000001))
(assert (= temp2941_48 temp2941_49))
(assert (= temp2941_51 #x0000000000000003))
(assert (= temp2941_50 temp2941_51))
(assert (= temp2941_52 #x0000000000000001))
(assert (= var4212949 temp2941_52))
(assert (= var4212950 var69143))
(assert (= temp2941_54 #x0000000000000001))
(assert (= temp2941_53 temp2941_54))
(assert (= temp2941_56 #x0000000000000001))
(assert (= temp2941_55 temp2941_56))
(assert (= temp2941_58 #x0000000000000001))
(assert (= temp2941_57 temp2941_58))
(assert (= temp2941_60 #x0000000000000001))
(assert (= temp2941_59 temp2941_60))
(assert (= temp2941_62 #x0000000000000000))
(assert (= temp2941_61 temp2941_62))
(assert (= temp2941_64 #x0000000000000001))
(assert (= temp2941_63 temp2941_64))
(assert (= var4868391 var69143))
(assert (= temp2941_65 #x0000000000000002))
(assert (= var4983962 temp2941_65))
(assert (= temp2941_67 #x0000000000000001))
(assert (= temp2941_66 temp2941_67))
(assert (= temp2941_69 #x0000000000000001))
(assert (= temp2941_68 temp2941_69))
(assert (= var5453295 var65913))
(assert (= temp2941_71 #x0000000000000001))
(assert (= temp2941_70 temp2941_71))
(assert (= temp2941_73 #x0000000000000001))
(assert (= temp2941_72 temp2941_73))
(assert (= temp2941_75 #x0000000000000001))
(assert (= temp2941_74 temp2941_75))
(assert (= temp2941_77 #x0000000000000001))
(assert (= temp2941_76 temp2941_77))
(assert (= temp2941_79 #x0000000000000000))
(assert (= temp2941_78 temp2941_79))
(assert (= temp2941_81 #x0000000000000001))
(assert (= temp2941_80 temp2941_81))
(assert (= var6375719 var69143))
(assert (= temp2941_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp2941_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2941_83 #x0000000000000001))
(assert (= var83534 temp2941_83))
(assert (= var83540 var65913))
(assert (= temp2941_84 #x0000000000000000))
(assert (= var6506834
   (ite (= ARGNAME_center_NAMEEND temp2941_84)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2941_85 #x0000000000000001))
(assert (= var6506834 temp2941_85))
(assert (= var6753268 var69143))
(assert (= temp2941_86 #x0000000000000001))
(assert (= var6753272 temp2941_86))
(assert (= var7736308 var69143))
(assert (= temp2941_87 #x0000000000000001))
(assert (= var7736312 temp2941_87))
(assert (= temp2941_88 #x0000000000000000))
(assert (= var7736362 temp2941_88))
(assert (= temp2941_89 #x0000000000000000))
(assert (= var7736362 temp2941_89))
(assert (= temp2941_90 #x0000000000000001))
(assert (= var9062695 temp2941_90))
(assert (= var9324839 var65913))
(assert (= temp2941_91 #x0000000000000000))
(assert (= var9571482 temp2941_91))
(model-add temp2941_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp2941_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp2941_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp2941_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp2941_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp2941_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp2941_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




