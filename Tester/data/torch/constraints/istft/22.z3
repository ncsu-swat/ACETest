(declare-fun temp28_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp28_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp28_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp28_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp28_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp28_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp28_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp28_8 () (_ BitVec 64))
(declare-fun temp28_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp28_10 () (_ BitVec 64))
(declare-fun temp28_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp28_12 () (_ BitVec 64))
(declare-fun temp28_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_14 () (_ BitVec 64))
(declare-fun temp28_15 () (_ BitVec 64))
(declare-fun temp28_16 () (_ BitVec 64))
(declare-fun temp28_17 () (_ BitVec 64))
(declare-fun temp28_18 () (_ BitVec 64))
(declare-fun temp28_19 () (_ BitVec 64))
(declare-fun temp28_20 () (_ BitVec 64))
(declare-fun temp28_21 () (_ BitVec 64))
(declare-fun temp28_22 () (_ BitVec 64))
(declare-fun temp28_23 () (_ BitVec 64))
(declare-fun temp28_24 () (_ BitVec 64))
(declare-fun temp28_25 () (_ BitVec 64))
(declare-fun temp28_26 () (_ BitVec 64))
(declare-fun temp28_27 () (_ BitVec 64))
(declare-fun temp28_28 () (_ BitVec 64))
(declare-fun temp28_29 () (_ BitVec 64))
(declare-fun temp28_31 () (_ BitVec 64))
(declare-fun temp28_30 () (_ BitVec 64))
(declare-fun temp28_32 () (_ BitVec 64))
(declare-fun temp28_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp28_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp28_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp28_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp28_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp28_39 () (_ BitVec 64))
(declare-fun temp28_38 () (_ BitVec 64))
(declare-fun temp28_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp28_41 () (_ BitVec 64))
(declare-fun temp28_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp28_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp28_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp28_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp28_47 () (_ BitVec 64))
(declare-fun temp28_46 () (_ BitVec 64))
(declare-fun temp28_49 () (_ BitVec 64))
(declare-fun temp28_48 () (_ BitVec 64))
(declare-fun temp28_51 () (_ BitVec 64))
(declare-fun temp28_50 () (_ BitVec 64))
(declare-fun temp28_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp28_54 () (_ BitVec 64))
(declare-fun temp28_53 () (_ BitVec 64))
(declare-fun temp28_56 () (_ BitVec 64))
(declare-fun temp28_55 () (_ BitVec 64))
(declare-fun temp28_58 () (_ BitVec 64))
(declare-fun temp28_57 () (_ BitVec 64))
(declare-fun temp28_60 () (_ BitVec 64))
(declare-fun temp28_59 () (_ BitVec 64))
(declare-fun temp28_62 () (_ BitVec 64))
(declare-fun temp28_61 () (_ BitVec 64))
(declare-fun temp28_64 () (_ BitVec 64))
(declare-fun temp28_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp28_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp28_67 () (_ BitVec 64))
(declare-fun temp28_66 () (_ BitVec 64))
(declare-fun temp28_69 () (_ BitVec 64))
(declare-fun temp28_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp28_71 () (_ BitVec 64))
(declare-fun temp28_70 () (_ BitVec 64))
(declare-fun temp28_73 () (_ BitVec 64))
(declare-fun temp28_72 () (_ BitVec 64))
(declare-fun temp28_75 () (_ BitVec 64))
(declare-fun temp28_74 () (_ BitVec 64))
(declare-fun temp28_77 () (_ BitVec 64))
(declare-fun temp28_76 () (_ BitVec 64))
(declare-fun temp28_79 () (_ BitVec 64))
(declare-fun temp28_78 () (_ BitVec 64))
(declare-fun temp28_81 () (_ BitVec 64))
(declare-fun temp28_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp28_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp28_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp28_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp28_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp28_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun temp28_87 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp28_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp28_1)))
(assert (= temp28_2 #x0000000000000000))
(assert (= var1050945 temp28_2))
(assert (= temp28_3 #xffffffffffffffff))
(assert (= var67312 temp28_3))
(assert (= temp28_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp28_4)))
(assert (= temp28_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp28_5)))
(assert (= temp28_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp28_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp28_7 #x0000000000000000))
(assert (= var82187 temp28_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_8 #x0000000000000000))
(assert (= var82356 temp28_8))
(assert (= temp28_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp28_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_10 #x0000000000000001))
(assert (= var82528 temp28_10))
(assert (= temp28_11 #x0000000000000000))
(assert (= var65913 temp28_11))
(assert (= temp28_12 #x0000000000000000))
(assert (= temp28_13 temp28_12))
(assert (= temp28_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp28_13)))
(assert (= temp28_15 #x0000000000000001))
(assert (= temp28_16 temp28_15))
(assert (= temp28_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp28_16)))
(assert (= temp28_18 #x0000000000000002))
(assert (= temp28_19 temp28_18))
(assert (= temp28_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp28_19)))
(assert (= temp28_21 #x0000000000000003))
(assert (= temp28_22 temp28_21))
(assert (= temp28_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp28_22)))
(assert (= temp28_24 #x0000000000000004))
(assert (= temp28_25 temp28_24))
(assert (= temp28_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp28_25)))
(assert (= temp28_27 #x0000000000000005))
(assert (= temp28_28 temp28_27))
(assert (= temp28_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp28_28)))
(assert (= temp28_31 #x0000000000000000))
(assert (= temp28_30
   (ite (bvslt var65913 temp28_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp28_32 temp28_30))
(assert (= temp28_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp28_32)))
(assert (= var82530 temp28_33))
(assert (bvslt temp28_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_34 #x0000000000000001))
(assert (= var82531 temp28_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_35 #x0000000000000001))
(assert (= var82728 temp28_35))
(assert (= var1914351 var65913))
(assert (= temp28_36 #x0000000000000001))
(assert (= var2115797 temp28_36))
(assert (= temp28_37 #x0000000000000002))
(assert (= var2115798 temp28_37))
(assert (= temp28_39 #x0000000000000000))
(assert (= temp28_38 temp28_39))
(assert (= temp28_40 #x0000000000000000))
(assert (= var2628020 temp28_40))
(assert (= temp28_41 #x0000000000000001))
(assert (= temp28_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp28_41 temp28_42)))
(assert (= temp28_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp28_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp28_44 #x0000000000000000))
(assert (= var3740377 temp28_44))
(assert (= temp28_45 #x0000000000000002))
(assert (= var69143 temp28_45))
(assert (= temp28_47 #x0000000000000001))
(assert (= temp28_46 temp28_47))
(assert (= temp28_49 #x0000000000000001))
(assert (= temp28_48 temp28_49))
(assert (= temp28_51 #x0000000000000003))
(assert (= temp28_50 temp28_51))
(assert (= temp28_52 #x0000000000000001))
(assert (= var4212949 temp28_52))
(assert (= var4212950 var69143))
(assert (= temp28_54 #x0000000000000001))
(assert (= temp28_53 temp28_54))
(assert (= temp28_56 #x0000000000000001))
(assert (= temp28_55 temp28_56))
(assert (= temp28_58 #x0000000000000001))
(assert (= temp28_57 temp28_58))
(assert (= temp28_60 #x0000000000000001))
(assert (= temp28_59 temp28_60))
(assert (= temp28_62 #x0000000000000000))
(assert (= temp28_61 temp28_62))
(assert (= temp28_64 #x0000000000000001))
(assert (= temp28_63 temp28_64))
(assert (= var4868391 var69143))
(assert (= temp28_65 #x0000000000000002))
(assert (= var4983962 temp28_65))
(assert (= temp28_67 #x0000000000000001))
(assert (= temp28_66 temp28_67))
(assert (= temp28_69 #x0000000000000001))
(assert (= temp28_68 temp28_69))
(assert (= var5453295 var65913))
(assert (= temp28_71 #x0000000000000001))
(assert (= temp28_70 temp28_71))
(assert (= temp28_73 #x0000000000000001))
(assert (= temp28_72 temp28_73))
(assert (= temp28_75 #x0000000000000001))
(assert (= temp28_74 temp28_75))
(assert (= temp28_77 #x0000000000000001))
(assert (= temp28_76 temp28_77))
(assert (= temp28_79 #x0000000000000000))
(assert (= temp28_78 temp28_79))
(assert (= temp28_81 #x0000000000000001))
(assert (= temp28_80 temp28_81))
(assert (= var6375719 var69143))
(assert (= temp28_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp28_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_83 #x0000000000000001))
(assert (= var83534 temp28_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp28_84 #x0000000000000001))
(assert (= var6818808 temp28_84))
(assert (= var7867380 var69143))
(assert (= temp28_85 #x0000000000000001))
(assert (= var7867384 temp28_85))
(assert (= temp28_86 #x0000000000000001))
(assert (= var9259303 temp28_86))
(assert (= temp28_87 #x0000000000000000))
(assert (= var9571482 temp28_87))
(model-add temp28_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp28_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp28_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp28_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp28_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp28_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp28_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



