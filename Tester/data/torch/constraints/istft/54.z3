(declare-fun temp98_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp98_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp98_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp98_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp98_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp98_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp98_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp98_8 () (_ BitVec 64))
(declare-fun temp98_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp98_10 () (_ BitVec 64))
(declare-fun temp98_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp98_12 () (_ BitVec 64))
(declare-fun temp98_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_14 () (_ BitVec 64))
(declare-fun temp98_15 () (_ BitVec 64))
(declare-fun temp98_16 () (_ BitVec 64))
(declare-fun temp98_17 () (_ BitVec 64))
(declare-fun temp98_18 () (_ BitVec 64))
(declare-fun temp98_19 () (_ BitVec 64))
(declare-fun temp98_20 () (_ BitVec 64))
(declare-fun temp98_21 () (_ BitVec 64))
(declare-fun temp98_22 () (_ BitVec 64))
(declare-fun temp98_23 () (_ BitVec 64))
(declare-fun temp98_24 () (_ BitVec 64))
(declare-fun temp98_25 () (_ BitVec 64))
(declare-fun temp98_26 () (_ BitVec 64))
(declare-fun temp98_27 () (_ BitVec 64))
(declare-fun temp98_28 () (_ BitVec 64))
(declare-fun temp98_29 () (_ BitVec 64))
(declare-fun temp98_31 () (_ BitVec 64))
(declare-fun temp98_30 () (_ BitVec 64))
(declare-fun temp98_32 () (_ BitVec 64))
(declare-fun temp98_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp98_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp98_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp98_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp98_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp98_39 () (_ BitVec 64))
(declare-fun temp98_38 () (_ BitVec 64))
(declare-fun temp98_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp98_41 () (_ BitVec 64))
(declare-fun temp98_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp98_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp98_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp98_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp98_47 () (_ BitVec 64))
(declare-fun temp98_46 () (_ BitVec 64))
(declare-fun temp98_49 () (_ BitVec 64))
(declare-fun temp98_48 () (_ BitVec 64))
(declare-fun temp98_51 () (_ BitVec 64))
(declare-fun temp98_50 () (_ BitVec 64))
(declare-fun temp98_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp98_54 () (_ BitVec 64))
(declare-fun temp98_53 () (_ BitVec 64))
(declare-fun temp98_56 () (_ BitVec 64))
(declare-fun temp98_55 () (_ BitVec 64))
(declare-fun temp98_58 () (_ BitVec 64))
(declare-fun temp98_57 () (_ BitVec 64))
(declare-fun temp98_60 () (_ BitVec 64))
(declare-fun temp98_59 () (_ BitVec 64))
(declare-fun temp98_62 () (_ BitVec 64))
(declare-fun temp98_61 () (_ BitVec 64))
(declare-fun temp98_64 () (_ BitVec 64))
(declare-fun temp98_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp98_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp98_67 () (_ BitVec 64))
(declare-fun temp98_66 () (_ BitVec 64))
(declare-fun temp98_69 () (_ BitVec 64))
(declare-fun temp98_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp98_71 () (_ BitVec 64))
(declare-fun temp98_70 () (_ BitVec 64))
(declare-fun temp98_73 () (_ BitVec 64))
(declare-fun temp98_72 () (_ BitVec 64))
(declare-fun temp98_75 () (_ BitVec 64))
(declare-fun temp98_74 () (_ BitVec 64))
(declare-fun temp98_77 () (_ BitVec 64))
(declare-fun temp98_76 () (_ BitVec 64))
(declare-fun temp98_79 () (_ BitVec 64))
(declare-fun temp98_78 () (_ BitVec 64))
(declare-fun temp98_81 () (_ BitVec 64))
(declare-fun temp98_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp98_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp98_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp98_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp98_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp98_86 () (_ BitVec 64))
(declare-fun var7867422 () (_ BitVec 64))
(declare-fun temp98_87 () (_ BitVec 64))
(declare-fun temp98_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp98_89 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp98_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp98_1)))
(assert (= temp98_2 #x0000000000000000))
(assert (= var1050945 temp98_2))
(assert (= temp98_3 #xffffffffffffffff))
(assert (= var67312 temp98_3))
(assert (= temp98_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp98_4)))
(assert (= temp98_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp98_5)))
(assert (= temp98_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp98_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp98_7 #x0000000000000000))
(assert (= var82187 temp98_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_8 #x0000000000000000))
(assert (= var82356 temp98_8))
(assert (= temp98_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp98_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_10 #x0000000000000001))
(assert (= var82528 temp98_10))
(assert (= temp98_11 #x0000000000000000))
(assert (= var65913 temp98_11))
(assert (= temp98_12 #x0000000000000000))
(assert (= temp98_13 temp98_12))
(assert (= temp98_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp98_13)))
(assert (= temp98_15 #x0000000000000001))
(assert (= temp98_16 temp98_15))
(assert (= temp98_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp98_16)))
(assert (= temp98_18 #x0000000000000002))
(assert (= temp98_19 temp98_18))
(assert (= temp98_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp98_19)))
(assert (= temp98_21 #x0000000000000003))
(assert (= temp98_22 temp98_21))
(assert (= temp98_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp98_22)))
(assert (= temp98_24 #x0000000000000004))
(assert (= temp98_25 temp98_24))
(assert (= temp98_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp98_25)))
(assert (= temp98_27 #x0000000000000005))
(assert (= temp98_28 temp98_27))
(assert (= temp98_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp98_28)))
(assert (= temp98_31 #x0000000000000000))
(assert (= temp98_30
   (ite (bvslt var65913 temp98_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp98_32 temp98_30))
(assert (= temp98_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp98_32)))
(assert (= var82530 temp98_33))
(assert (bvslt temp98_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_34 #x0000000000000001))
(assert (= var82531 temp98_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_35 #x0000000000000001))
(assert (= var82728 temp98_35))
(assert (= var1914351 var65913))
(assert (= temp98_36 #x0000000000000001))
(assert (= var2115797 temp98_36))
(assert (= temp98_37 #x0000000000000002))
(assert (= var2115798 temp98_37))
(assert (= temp98_39 #x0000000000000000))
(assert (= temp98_38 temp98_39))
(assert (= temp98_40 #x0000000000000000))
(assert (= var2628020 temp98_40))
(assert (= temp98_41 #x0000000000000001))
(assert (= temp98_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp98_41 temp98_42)))
(assert (= temp98_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp98_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp98_44 #x0000000000000000))
(assert (= var3740377 temp98_44))
(assert (= temp98_45 #x0000000000000002))
(assert (= var69143 temp98_45))
(assert (= temp98_47 #x0000000000000001))
(assert (= temp98_46 temp98_47))
(assert (= temp98_49 #x0000000000000001))
(assert (= temp98_48 temp98_49))
(assert (= temp98_51 #x0000000000000003))
(assert (= temp98_50 temp98_51))
(assert (= temp98_52 #x0000000000000001))
(assert (= var4212949 temp98_52))
(assert (= var4212950 var69143))
(assert (= temp98_54 #x0000000000000001))
(assert (= temp98_53 temp98_54))
(assert (= temp98_56 #x0000000000000001))
(assert (= temp98_55 temp98_56))
(assert (= temp98_58 #x0000000000000001))
(assert (= temp98_57 temp98_58))
(assert (= temp98_60 #x0000000000000001))
(assert (= temp98_59 temp98_60))
(assert (= temp98_62 #x0000000000000000))
(assert (= temp98_61 temp98_62))
(assert (= temp98_64 #x0000000000000001))
(assert (= temp98_63 temp98_64))
(assert (= var4868391 var69143))
(assert (= temp98_65 #x0000000000000002))
(assert (= var4983962 temp98_65))
(assert (= temp98_67 #x0000000000000001))
(assert (= temp98_66 temp98_67))
(assert (= temp98_69 #x0000000000000001))
(assert (= temp98_68 temp98_69))
(assert (= var5453295 var65913))
(assert (= temp98_71 #x0000000000000001))
(assert (= temp98_70 temp98_71))
(assert (= temp98_73 #x0000000000000001))
(assert (= temp98_72 temp98_73))
(assert (= temp98_75 #x0000000000000001))
(assert (= temp98_74 temp98_75))
(assert (= temp98_77 #x0000000000000001))
(assert (= temp98_76 temp98_77))
(assert (= temp98_79 #x0000000000000000))
(assert (= temp98_78 temp98_79))
(assert (= temp98_81 #x0000000000000001))
(assert (= temp98_80 temp98_81))
(assert (= var6375719 var69143))
(assert (= temp98_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp98_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_83 #x0000000000000001))
(assert (= var83534 temp98_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp98_84 #x0000000000000001))
(assert (= var6818808 temp98_84))
(assert (= var7867380 var69143))
(assert (= temp98_85 #x0000000000000001))
(assert (= var7867384 temp98_85))
(assert (= temp98_86 #x0000000000000000))
(assert (= var7867422 temp98_86))
(assert (= temp98_87 #x0000000000000000))
(assert (= var7867422 temp98_87))
(assert (= temp98_88 #x0000000000000001))
(assert (= var9193767 temp98_88))
(assert (= temp98_89 #x0000000000000000))
(assert (= var9505946 temp98_89))
(model-add temp98_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp98_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp98_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp98_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp98_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp98_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp98_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





