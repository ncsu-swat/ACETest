(declare-fun temp13_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp13_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp13_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp13_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp13_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp13_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp13_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp13_8 () (_ BitVec 64))
(declare-fun temp13_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp13_10 () (_ BitVec 64))
(declare-fun temp13_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp13_12 () (_ BitVec 64))
(declare-fun temp13_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp13_14 () (_ BitVec 64))
(declare-fun temp13_15 () (_ BitVec 64))
(declare-fun temp13_16 () (_ BitVec 64))
(declare-fun temp13_17 () (_ BitVec 64))
(declare-fun temp13_18 () (_ BitVec 64))
(declare-fun temp13_19 () (_ BitVec 64))
(declare-fun temp13_20 () (_ BitVec 64))
(declare-fun temp13_21 () (_ BitVec 64))
(declare-fun temp13_22 () (_ BitVec 64))
(declare-fun temp13_23 () (_ BitVec 64))
(declare-fun temp13_24 () (_ BitVec 64))
(declare-fun temp13_25 () (_ BitVec 64))
(declare-fun temp13_26 () (_ BitVec 64))
(declare-fun temp13_27 () (_ BitVec 64))
(declare-fun temp13_28 () (_ BitVec 64))
(declare-fun temp13_29 () (_ BitVec 64))
(declare-fun temp13_31 () (_ BitVec 64))
(declare-fun temp13_30 () (_ BitVec 64))
(declare-fun temp13_32 () (_ BitVec 64))
(declare-fun temp13_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp13_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp13_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp13_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp13_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp13_39 () (_ BitVec 64))
(declare-fun temp13_38 () (_ BitVec 64))
(declare-fun temp13_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp13_41 () (_ BitVec 64))
(declare-fun temp13_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp13_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp13_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp13_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp13_47 () (_ BitVec 64))
(declare-fun temp13_46 () (_ BitVec 64))
(declare-fun temp13_49 () (_ BitVec 64))
(declare-fun temp13_48 () (_ BitVec 64))
(declare-fun temp13_51 () (_ BitVec 64))
(declare-fun temp13_50 () (_ BitVec 64))
(declare-fun temp13_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp13_54 () (_ BitVec 64))
(declare-fun temp13_53 () (_ BitVec 64))
(declare-fun temp13_56 () (_ BitVec 64))
(declare-fun temp13_55 () (_ BitVec 64))
(declare-fun temp13_58 () (_ BitVec 64))
(declare-fun temp13_57 () (_ BitVec 64))
(declare-fun temp13_60 () (_ BitVec 64))
(declare-fun temp13_59 () (_ BitVec 64))
(declare-fun temp13_62 () (_ BitVec 64))
(declare-fun temp13_61 () (_ BitVec 64))
(declare-fun temp13_64 () (_ BitVec 64))
(declare-fun temp13_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp13_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp13_67 () (_ BitVec 64))
(declare-fun temp13_66 () (_ BitVec 64))
(declare-fun temp13_69 () (_ BitVec 64))
(declare-fun temp13_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp13_71 () (_ BitVec 64))
(declare-fun temp13_70 () (_ BitVec 64))
(declare-fun temp13_73 () (_ BitVec 64))
(declare-fun temp13_72 () (_ BitVec 64))
(declare-fun temp13_75 () (_ BitVec 64))
(declare-fun temp13_74 () (_ BitVec 64))
(declare-fun temp13_77 () (_ BitVec 64))
(declare-fun temp13_76 () (_ BitVec 64))
(declare-fun temp13_79 () (_ BitVec 64))
(declare-fun temp13_78 () (_ BitVec 64))
(declare-fun temp13_81 () (_ BitVec 64))
(declare-fun temp13_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp13_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp13_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp13_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp13_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp13_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun var9521447 () (_ BitVec 64))
(declare-fun temp13_87 () (_ BitVec 64))
(declare-fun var9768090 () (_ BitVec 64))
(assert (= temp13_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp13_1)))
(assert (= temp13_2 #x0000000000000000))
(assert (= var1050945 temp13_2))
(assert (= temp13_3 #xffffffffffffffff))
(assert (= var67312 temp13_3))
(assert (= temp13_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp13_4)))
(assert (= temp13_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp13_5)))
(assert (= temp13_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp13_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp13_7 #x0000000000000000))
(assert (= var82187 temp13_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13_8 #x0000000000000000))
(assert (= var82356 temp13_8))
(assert (= temp13_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp13_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13_10 #x0000000000000001))
(assert (= var82528 temp13_10))
(assert (= temp13_11 #x0000000000000000))
(assert (= var65913 temp13_11))
(assert (= temp13_12 #x0000000000000000))
(assert (= temp13_13 temp13_12))
(assert (= temp13_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp13_13)))
(assert (= temp13_15 #x0000000000000001))
(assert (= temp13_16 temp13_15))
(assert (= temp13_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp13_16)))
(assert (= temp13_18 #x0000000000000002))
(assert (= temp13_19 temp13_18))
(assert (= temp13_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp13_19)))
(assert (= temp13_21 #x0000000000000003))
(assert (= temp13_22 temp13_21))
(assert (= temp13_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp13_22)))
(assert (= temp13_24 #x0000000000000004))
(assert (= temp13_25 temp13_24))
(assert (= temp13_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp13_25)))
(assert (= temp13_27 #x0000000000000005))
(assert (= temp13_28 temp13_27))
(assert (= temp13_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp13_28)))
(assert (= temp13_31 #x0000000000000000))
(assert (= temp13_30
   (ite (bvslt var65913 temp13_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp13_32 temp13_30))
(assert (= temp13_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp13_32)))
(assert (= var82530 temp13_33))
(assert (bvslt temp13_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp13_34 #x0000000000000001))
(assert (= var82531 temp13_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp13_35 #x0000000000000001))
(assert (= var82728 temp13_35))
(assert (= var1914351 var65913))
(assert (= temp13_36 #x0000000000000001))
(assert (= var2115797 temp13_36))
(assert (= temp13_37 #x0000000000000002))
(assert (= var2115798 temp13_37))
(assert (= temp13_39 #x0000000000000000))
(assert (= temp13_38 temp13_39))
(assert (= temp13_40 #x0000000000000000))
(assert (= var2628020 temp13_40))
(assert (= temp13_41 #x0000000000000001))
(assert (= temp13_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp13_41 temp13_42)))
(assert (= temp13_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp13_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp13_44 #x0000000000000000))
(assert (= var3740377 temp13_44))
(assert (= temp13_45 #x0000000000000002))
(assert (= var69143 temp13_45))
(assert (= temp13_47 #x0000000000000001))
(assert (= temp13_46 temp13_47))
(assert (= temp13_49 #x0000000000000001))
(assert (= temp13_48 temp13_49))
(assert (= temp13_51 #x0000000000000003))
(assert (= temp13_50 temp13_51))
(assert (= temp13_52 #x0000000000000001))
(assert (= var4212949 temp13_52))
(assert (= var4212950 var69143))
(assert (= temp13_54 #x0000000000000001))
(assert (= temp13_53 temp13_54))
(assert (= temp13_56 #x0000000000000001))
(assert (= temp13_55 temp13_56))
(assert (= temp13_58 #x0000000000000001))
(assert (= temp13_57 temp13_58))
(assert (= temp13_60 #x0000000000000001))
(assert (= temp13_59 temp13_60))
(assert (= temp13_62 #x0000000000000000))
(assert (= temp13_61 temp13_62))
(assert (= temp13_64 #x0000000000000001))
(assert (= temp13_63 temp13_64))
(assert (= var4868391 var69143))
(assert (= temp13_65 #x0000000000000002))
(assert (= var4983962 temp13_65))
(assert (= temp13_67 #x0000000000000001))
(assert (= temp13_66 temp13_67))
(assert (= temp13_69 #x0000000000000001))
(assert (= temp13_68 temp13_69))
(assert (= var5453295 var65913))
(assert (= temp13_71 #x0000000000000001))
(assert (= temp13_70 temp13_71))
(assert (= temp13_73 #x0000000000000001))
(assert (= temp13_72 temp13_73))
(assert (= temp13_75 #x0000000000000001))
(assert (= temp13_74 temp13_75))
(assert (= temp13_77 #x0000000000000001))
(assert (= temp13_76 temp13_77))
(assert (= temp13_79 #x0000000000000000))
(assert (= temp13_78 temp13_79))
(assert (= temp13_81 #x0000000000000001))
(assert (= temp13_80 temp13_81))
(assert (= var6375719 var69143))
(assert (= temp13_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp13_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13_83 #x0000000000000001))
(assert (= var83534 temp13_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp13_84 #x0000000000000001))
(assert (= var6818808 temp13_84))
(assert (= var7867380 var69143))
(assert (= temp13_85 #x0000000000000001))
(assert (= var7867384 temp13_85))
(assert (= temp13_86 #x0000000000000001))
(assert (= var9259303 temp13_86))
(assert (= var9521447 var65913))
(assert (= temp13_87 #x0000000000000000))
(assert (= var9768090 temp13_87))
(model-add temp13_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp13_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp13_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp13_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp13_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp13_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp13_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






