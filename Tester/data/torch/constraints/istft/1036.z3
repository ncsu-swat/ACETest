(declare-fun temp10144_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp10144_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp10144_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp10144_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp10144_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp10144_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp10144_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp10144_8 () (_ BitVec 64))
(declare-fun temp10144_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp10144_10 () (_ BitVec 64))
(declare-fun temp10144_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp10144_12 () (_ BitVec 64))
(declare-fun temp10144_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10144_14 () (_ BitVec 64))
(declare-fun temp10144_15 () (_ BitVec 64))
(declare-fun temp10144_16 () (_ BitVec 64))
(declare-fun temp10144_17 () (_ BitVec 64))
(declare-fun temp10144_18 () (_ BitVec 64))
(declare-fun temp10144_19 () (_ BitVec 64))
(declare-fun temp10144_20 () (_ BitVec 64))
(declare-fun temp10144_21 () (_ BitVec 64))
(declare-fun temp10144_22 () (_ BitVec 64))
(declare-fun temp10144_23 () (_ BitVec 64))
(declare-fun temp10144_24 () (_ BitVec 64))
(declare-fun temp10144_25 () (_ BitVec 64))
(declare-fun temp10144_26 () (_ BitVec 64))
(declare-fun temp10144_27 () (_ BitVec 64))
(declare-fun temp10144_28 () (_ BitVec 64))
(declare-fun temp10144_29 () (_ BitVec 64))
(declare-fun temp10144_31 () (_ BitVec 64))
(declare-fun temp10144_30 () (_ BitVec 64))
(declare-fun temp10144_32 () (_ BitVec 64))
(declare-fun temp10144_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp10144_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp10144_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp10144_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp10144_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp10144_39 () (_ BitVec 64))
(declare-fun temp10144_38 () (_ BitVec 64))
(declare-fun temp10144_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp10144_41 () (_ BitVec 64))
(declare-fun temp10144_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp10144_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp10144_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp10144_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp10144_47 () (_ BitVec 64))
(declare-fun temp10144_46 () (_ BitVec 64))
(declare-fun temp10144_49 () (_ BitVec 64))
(declare-fun temp10144_48 () (_ BitVec 64))
(declare-fun temp10144_51 () (_ BitVec 64))
(declare-fun temp10144_50 () (_ BitVec 64))
(declare-fun temp10144_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp10144_54 () (_ BitVec 64))
(declare-fun temp10144_53 () (_ BitVec 64))
(declare-fun temp10144_56 () (_ BitVec 64))
(declare-fun temp10144_55 () (_ BitVec 64))
(declare-fun temp10144_58 () (_ BitVec 64))
(declare-fun temp10144_57 () (_ BitVec 64))
(declare-fun temp10144_60 () (_ BitVec 64))
(declare-fun temp10144_59 () (_ BitVec 64))
(declare-fun temp10144_62 () (_ BitVec 64))
(declare-fun temp10144_61 () (_ BitVec 64))
(declare-fun temp10144_64 () (_ BitVec 64))
(declare-fun temp10144_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp10144_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp10144_67 () (_ BitVec 64))
(declare-fun temp10144_66 () (_ BitVec 64))
(declare-fun temp10144_69 () (_ BitVec 64))
(declare-fun temp10144_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp10144_71 () (_ BitVec 64))
(declare-fun temp10144_70 () (_ BitVec 64))
(declare-fun temp10144_73 () (_ BitVec 64))
(declare-fun temp10144_72 () (_ BitVec 64))
(declare-fun temp10144_75 () (_ BitVec 64))
(declare-fun temp10144_74 () (_ BitVec 64))
(declare-fun temp10144_77 () (_ BitVec 64))
(declare-fun temp10144_76 () (_ BitVec 64))
(declare-fun temp10144_79 () (_ BitVec 64))
(declare-fun temp10144_78 () (_ BitVec 64))
(declare-fun temp10144_81 () (_ BitVec 64))
(declare-fun temp10144_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp10144_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp10144_83 () (_ BitVec 64))
(declare-fun temp10144_84 () (_ BitVec 64))
(declare-fun var83537 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp10144_85 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun temp10144_86 () (_ BitVec 64))
(declare-fun var6818846 () (_ BitVec 64))
(declare-fun temp10144_87 () (_ BitVec 64))
(declare-fun var6818858 () (_ BitVec 64))
(declare-fun temp10144_88 () (_ BitVec 64))
(declare-fun temp10144_89 () (_ BitVec 64))
(declare-fun var7605236 () (_ BitVec 64))
(declare-fun temp10144_90 () (_ BitVec 64))
(declare-fun var7605240 () (_ BitVec 64))
(declare-fun temp10144_91 () (_ BitVec 64))
(declare-fun var7605290 () (_ BitVec 64))
(declare-fun temp10144_92 () (_ BitVec 64))
(declare-fun temp10144_93 () (_ BitVec 64))
(declare-fun var8931623 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(assert (= temp10144_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp10144_1)))
(assert (= temp10144_2 #x0000000000000000))
(assert (= var1050945 temp10144_2))
(assert (= temp10144_3 #xffffffffffffffff))
(assert (= var67312 temp10144_3))
(assert (= temp10144_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp10144_4)))
(assert (= temp10144_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp10144_5)))
(assert (= temp10144_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp10144_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp10144_7 #x0000000000000000))
(assert (= var82187 temp10144_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10144_8 #x0000000000000000))
(assert (= var82356 temp10144_8))
(assert (= temp10144_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp10144_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10144_10 #x0000000000000001))
(assert (= var82528 temp10144_10))
(assert (= temp10144_11 #x0000000000000000))
(assert (= var65913 temp10144_11))
(assert (= temp10144_12 #x0000000000000000))
(assert (= temp10144_13 temp10144_12))
(assert (= temp10144_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp10144_13)))
(assert (= temp10144_15 #x0000000000000001))
(assert (= temp10144_16 temp10144_15))
(assert (= temp10144_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp10144_16)))
(assert (= temp10144_18 #x0000000000000002))
(assert (= temp10144_19 temp10144_18))
(assert (= temp10144_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp10144_19)))
(assert (= temp10144_21 #x0000000000000003))
(assert (= temp10144_22 temp10144_21))
(assert (= temp10144_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp10144_22)))
(assert (= temp10144_24 #x0000000000000004))
(assert (= temp10144_25 temp10144_24))
(assert (= temp10144_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp10144_25)))
(assert (= temp10144_27 #x0000000000000005))
(assert (= temp10144_28 temp10144_27))
(assert (= temp10144_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp10144_28)))
(assert (= temp10144_31 #x0000000000000000))
(assert (= temp10144_30
   (ite (bvslt var65913 temp10144_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp10144_32 temp10144_30))
(assert (= temp10144_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp10144_32)))
(assert (= var82530 temp10144_33))
(assert (bvslt temp10144_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp10144_34 #x0000000000000001))
(assert (= var82531 temp10144_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp10144_35 #x0000000000000001))
(assert (= var82728 temp10144_35))
(assert (= var1914351 var65913))
(assert (= temp10144_36 #x0000000000000001))
(assert (= var2115797 temp10144_36))
(assert (= temp10144_37 #x0000000000000002))
(assert (= var2115798 temp10144_37))
(assert (= temp10144_39 #x0000000000000000))
(assert (= temp10144_38 temp10144_39))
(assert (= temp10144_40 #x0000000000000000))
(assert (= var2628020 temp10144_40))
(assert (= temp10144_41 #x0000000000000001))
(assert (= temp10144_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001)
        temp10144_41
        temp10144_42)))
(assert (= temp10144_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp10144_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp10144_44 #x0000000000000000))
(assert (= var3740377 temp10144_44))
(assert (= temp10144_45 #x0000000000000002))
(assert (= var69143 temp10144_45))
(assert (= temp10144_47 #x0000000000000001))
(assert (= temp10144_46 temp10144_47))
(assert (= temp10144_49 #x0000000000000001))
(assert (= temp10144_48 temp10144_49))
(assert (= temp10144_51 #x0000000000000003))
(assert (= temp10144_50 temp10144_51))
(assert (= temp10144_52 #x0000000000000001))
(assert (= var4212949 temp10144_52))
(assert (= var4212950 var69143))
(assert (= temp10144_54 #x0000000000000001))
(assert (= temp10144_53 temp10144_54))
(assert (= temp10144_56 #x0000000000000001))
(assert (= temp10144_55 temp10144_56))
(assert (= temp10144_58 #x0000000000000001))
(assert (= temp10144_57 temp10144_58))
(assert (= temp10144_60 #x0000000000000001))
(assert (= temp10144_59 temp10144_60))
(assert (= temp10144_62 #x0000000000000000))
(assert (= temp10144_61 temp10144_62))
(assert (= temp10144_64 #x0000000000000001))
(assert (= temp10144_63 temp10144_64))
(assert (= var4868391 var69143))
(assert (= temp10144_65 #x0000000000000002))
(assert (= var4983962 temp10144_65))
(assert (= temp10144_67 #x0000000000000001))
(assert (= temp10144_66 temp10144_67))
(assert (= temp10144_69 #x0000000000000001))
(assert (= temp10144_68 temp10144_69))
(assert (= var5453295 var65913))
(assert (= temp10144_71 #x0000000000000001))
(assert (= temp10144_70 temp10144_71))
(assert (= temp10144_73 #x0000000000000001))
(assert (= temp10144_72 temp10144_73))
(assert (= temp10144_75 #x0000000000000001))
(assert (= temp10144_74 temp10144_75))
(assert (= temp10144_77 #x0000000000000001))
(assert (= temp10144_76 temp10144_77))
(assert (= temp10144_79 #x0000000000000000))
(assert (= temp10144_78 temp10144_79))
(assert (= temp10144_81 #x0000000000000001))
(assert (= temp10144_80 temp10144_81))
(assert (= var6375719 var69143))
(assert (= temp10144_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp10144_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10144_83 #x0000000000000000))
(assert (= var83534 temp10144_83))
(assert (= temp10144_84 #x0000000000000002))
(assert (= var83537 (bvsdiv ARGNAME_n_fft_NAMEEND temp10144_84)))
(assert (= var83540 var83537))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp10144_85 #x0000000000000001))
(assert (= var6818808 temp10144_85))
(assert (= temp10144_86 #x0000000000000000))
(assert (= var6818846 temp10144_86))
(assert (= temp10144_87 #x0000000000000000))
(assert (= var6818858 temp10144_87))
(assert (= temp10144_88 #x0000000000000000))
(assert (= var6818858 temp10144_88))
(assert (= temp10144_89 #x0000000000000000))
(assert (= var6818846 temp10144_89))
(assert (= var7605236 var69143))
(assert (= temp10144_90 #x0000000000000001))
(assert (= var7605240 temp10144_90))
(assert (= temp10144_91 #x0000000000000000))
(assert (= var7605290 temp10144_91))
(assert (= temp10144_92 #x0000000000000000))
(assert (= var7605290 temp10144_92))
(assert (= temp10144_93 #x0000000000000001))
(assert (= var8931623 temp10144_93))
(assert (= var9193767 var65913))
(model-add temp10144_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp10144_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp10144_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp10144_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp10144_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp10144_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10144_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





