(declare-fun temp92_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp92_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp92_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp92_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp92_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp92_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp92_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp92_8 () (_ BitVec 64))
(declare-fun temp92_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp92_10 () (_ BitVec 64))
(declare-fun temp92_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp92_12 () (_ BitVec 64))
(declare-fun temp92_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp92_14 () (_ BitVec 64))
(declare-fun temp92_15 () (_ BitVec 64))
(declare-fun temp92_16 () (_ BitVec 64))
(declare-fun temp92_17 () (_ BitVec 64))
(declare-fun temp92_18 () (_ BitVec 64))
(declare-fun temp92_19 () (_ BitVec 64))
(declare-fun temp92_20 () (_ BitVec 64))
(declare-fun temp92_21 () (_ BitVec 64))
(declare-fun temp92_22 () (_ BitVec 64))
(declare-fun temp92_23 () (_ BitVec 64))
(declare-fun temp92_24 () (_ BitVec 64))
(declare-fun temp92_25 () (_ BitVec 64))
(declare-fun temp92_26 () (_ BitVec 64))
(declare-fun temp92_27 () (_ BitVec 64))
(declare-fun temp92_28 () (_ BitVec 64))
(declare-fun temp92_29 () (_ BitVec 64))
(declare-fun temp92_31 () (_ BitVec 64))
(declare-fun temp92_30 () (_ BitVec 64))
(declare-fun temp92_32 () (_ BitVec 64))
(declare-fun temp92_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp92_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp92_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp92_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp92_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp92_39 () (_ BitVec 64))
(declare-fun temp92_38 () (_ BitVec 64))
(declare-fun temp92_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp92_41 () (_ BitVec 64))
(declare-fun temp92_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp92_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp92_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp92_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp92_47 () (_ BitVec 64))
(declare-fun temp92_46 () (_ BitVec 64))
(declare-fun temp92_49 () (_ BitVec 64))
(declare-fun temp92_48 () (_ BitVec 64))
(declare-fun temp92_51 () (_ BitVec 64))
(declare-fun temp92_50 () (_ BitVec 64))
(declare-fun temp92_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp92_54 () (_ BitVec 64))
(declare-fun temp92_53 () (_ BitVec 64))
(declare-fun temp92_56 () (_ BitVec 64))
(declare-fun temp92_55 () (_ BitVec 64))
(declare-fun temp92_58 () (_ BitVec 64))
(declare-fun temp92_57 () (_ BitVec 64))
(declare-fun temp92_60 () (_ BitVec 64))
(declare-fun temp92_59 () (_ BitVec 64))
(declare-fun temp92_62 () (_ BitVec 64))
(declare-fun temp92_61 () (_ BitVec 64))
(declare-fun temp92_64 () (_ BitVec 64))
(declare-fun temp92_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp92_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp92_67 () (_ BitVec 64))
(declare-fun temp92_66 () (_ BitVec 64))
(declare-fun temp92_69 () (_ BitVec 64))
(declare-fun temp92_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp92_71 () (_ BitVec 64))
(declare-fun temp92_70 () (_ BitVec 64))
(declare-fun temp92_73 () (_ BitVec 64))
(declare-fun temp92_72 () (_ BitVec 64))
(declare-fun temp92_75 () (_ BitVec 64))
(declare-fun temp92_74 () (_ BitVec 64))
(declare-fun temp92_77 () (_ BitVec 64))
(declare-fun temp92_76 () (_ BitVec 64))
(declare-fun temp92_79 () (_ BitVec 64))
(declare-fun temp92_78 () (_ BitVec 64))
(declare-fun temp92_81 () (_ BitVec 64))
(declare-fun temp92_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp92_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp92_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp92_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp92_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp92_86 () (_ BitVec 64))
(declare-fun var7867422 () (_ BitVec 64))
(declare-fun temp92_87 () (_ BitVec 64))
(declare-fun temp92_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp92_90 () (_ BitVec 64))
(declare-fun temp92_89 () (_ BitVec 64))
(declare-fun temp92_91 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp92_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp92_1)))
(assert (= temp92_2 #x0000000000000000))
(assert (= var1050945 temp92_2))
(assert (= temp92_3 #xffffffffffffffff))
(assert (= var67312 temp92_3))
(assert (= temp92_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp92_4)))
(assert (= temp92_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp92_5)))
(assert (= temp92_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp92_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp92_7 #x0000000000000000))
(assert (= var82187 temp92_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_8 #x0000000000000000))
(assert (= var82356 temp92_8))
(assert (= temp92_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp92_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_10 #x0000000000000001))
(assert (= var82528 temp92_10))
(assert (= temp92_11 #x0000000000000000))
(assert (= var65913 temp92_11))
(assert (= temp92_12 #x0000000000000000))
(assert (= temp92_13 temp92_12))
(assert (= temp92_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp92_13)))
(assert (= temp92_15 #x0000000000000001))
(assert (= temp92_16 temp92_15))
(assert (= temp92_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp92_16)))
(assert (= temp92_18 #x0000000000000002))
(assert (= temp92_19 temp92_18))
(assert (= temp92_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp92_19)))
(assert (= temp92_21 #x0000000000000003))
(assert (= temp92_22 temp92_21))
(assert (= temp92_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp92_22)))
(assert (= temp92_24 #x0000000000000004))
(assert (= temp92_25 temp92_24))
(assert (= temp92_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp92_25)))
(assert (= temp92_27 #x0000000000000005))
(assert (= temp92_28 temp92_27))
(assert (= temp92_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp92_28)))
(assert (= temp92_31 #x0000000000000000))
(assert (= temp92_30
   (ite (bvslt var65913 temp92_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp92_32 temp92_30))
(assert (= temp92_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp92_32)))
(assert (= var82530 temp92_33))
(assert (bvslt temp92_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp92_34 #x0000000000000001))
(assert (= var82531 temp92_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp92_35 #x0000000000000001))
(assert (= var82728 temp92_35))
(assert (= var1914351 var65913))
(assert (= temp92_36 #x0000000000000001))
(assert (= var2115797 temp92_36))
(assert (= temp92_37 #x0000000000000002))
(assert (= var2115798 temp92_37))
(assert (= temp92_39 #x0000000000000000))
(assert (= temp92_38 temp92_39))
(assert (= temp92_40 #x0000000000000000))
(assert (= var2628020 temp92_40))
(assert (= temp92_41 #x0000000000000001))
(assert (= temp92_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp92_41 temp92_42)))
(assert (= temp92_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp92_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp92_44 #x0000000000000000))
(assert (= var3740377 temp92_44))
(assert (= temp92_45 #x0000000000000002))
(assert (= var69143 temp92_45))
(assert (= temp92_47 #x0000000000000001))
(assert (= temp92_46 temp92_47))
(assert (= temp92_49 #x0000000000000001))
(assert (= temp92_48 temp92_49))
(assert (= temp92_51 #x0000000000000003))
(assert (= temp92_50 temp92_51))
(assert (= temp92_52 #x0000000000000001))
(assert (= var4212949 temp92_52))
(assert (= var4212950 var69143))
(assert (= temp92_54 #x0000000000000001))
(assert (= temp92_53 temp92_54))
(assert (= temp92_56 #x0000000000000001))
(assert (= temp92_55 temp92_56))
(assert (= temp92_58 #x0000000000000001))
(assert (= temp92_57 temp92_58))
(assert (= temp92_60 #x0000000000000001))
(assert (= temp92_59 temp92_60))
(assert (= temp92_62 #x0000000000000000))
(assert (= temp92_61 temp92_62))
(assert (= temp92_64 #x0000000000000001))
(assert (= temp92_63 temp92_64))
(assert (= var4868391 var69143))
(assert (= temp92_65 #x0000000000000002))
(assert (= var4983962 temp92_65))
(assert (= temp92_67 #x0000000000000001))
(assert (= temp92_66 temp92_67))
(assert (= temp92_69 #x0000000000000001))
(assert (= temp92_68 temp92_69))
(assert (= var5453295 var65913))
(assert (= temp92_71 #x0000000000000001))
(assert (= temp92_70 temp92_71))
(assert (= temp92_73 #x0000000000000001))
(assert (= temp92_72 temp92_73))
(assert (= temp92_75 #x0000000000000001))
(assert (= temp92_74 temp92_75))
(assert (= temp92_77 #x0000000000000001))
(assert (= temp92_76 temp92_77))
(assert (= temp92_79 #x0000000000000000))
(assert (= temp92_78 temp92_79))
(assert (= temp92_81 #x0000000000000001))
(assert (= temp92_80 temp92_81))
(assert (= var6375719 var69143))
(assert (= temp92_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp92_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp92_83 #x0000000000000001))
(assert (= var83534 temp92_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp92_84 #x0000000000000001))
(assert (= var6818808 temp92_84))
(assert (= var7867380 var69143))
(assert (= temp92_85 #x0000000000000001))
(assert (= var7867384 temp92_85))
(assert (= temp92_86 #x0000000000000000))
(assert (= var7867422 temp92_86))
(assert (= temp92_87 #x0000000000000000))
(assert (= var7867422 temp92_87))
(assert (= temp92_88 #x0000000000000001))
(assert (= var9193767 temp92_88))
(assert (= var9455911 var65913))
(assert (= temp92_90 #x0000000000000001))
(assert (= temp92_89 temp92_90))
(assert (= temp92_91 #x0000000000000000))
(assert (= var9702554 temp92_91))
(model-add temp92_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp92_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp92_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp92_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp92_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp92_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp92_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




