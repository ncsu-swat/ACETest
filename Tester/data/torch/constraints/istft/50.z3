(declare-fun temp93_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp93_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp93_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp93_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp93_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp93_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp93_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp93_8 () (_ BitVec 64))
(declare-fun temp93_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp93_10 () (_ BitVec 64))
(declare-fun temp93_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp93_12 () (_ BitVec 64))
(declare-fun temp93_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_14 () (_ BitVec 64))
(declare-fun temp93_15 () (_ BitVec 64))
(declare-fun temp93_16 () (_ BitVec 64))
(declare-fun temp93_17 () (_ BitVec 64))
(declare-fun temp93_18 () (_ BitVec 64))
(declare-fun temp93_19 () (_ BitVec 64))
(declare-fun temp93_20 () (_ BitVec 64))
(declare-fun temp93_21 () (_ BitVec 64))
(declare-fun temp93_22 () (_ BitVec 64))
(declare-fun temp93_23 () (_ BitVec 64))
(declare-fun temp93_24 () (_ BitVec 64))
(declare-fun temp93_25 () (_ BitVec 64))
(declare-fun temp93_26 () (_ BitVec 64))
(declare-fun temp93_27 () (_ BitVec 64))
(declare-fun temp93_28 () (_ BitVec 64))
(declare-fun temp93_29 () (_ BitVec 64))
(declare-fun temp93_31 () (_ BitVec 64))
(declare-fun temp93_30 () (_ BitVec 64))
(declare-fun temp93_32 () (_ BitVec 64))
(declare-fun temp93_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp93_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp93_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp93_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp93_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp93_39 () (_ BitVec 64))
(declare-fun temp93_38 () (_ BitVec 64))
(declare-fun temp93_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp93_41 () (_ BitVec 64))
(declare-fun temp93_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp93_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp93_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp93_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp93_47 () (_ BitVec 64))
(declare-fun temp93_46 () (_ BitVec 64))
(declare-fun temp93_49 () (_ BitVec 64))
(declare-fun temp93_48 () (_ BitVec 64))
(declare-fun temp93_51 () (_ BitVec 64))
(declare-fun temp93_50 () (_ BitVec 64))
(declare-fun temp93_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp93_54 () (_ BitVec 64))
(declare-fun temp93_53 () (_ BitVec 64))
(declare-fun temp93_56 () (_ BitVec 64))
(declare-fun temp93_55 () (_ BitVec 64))
(declare-fun temp93_58 () (_ BitVec 64))
(declare-fun temp93_57 () (_ BitVec 64))
(declare-fun temp93_60 () (_ BitVec 64))
(declare-fun temp93_59 () (_ BitVec 64))
(declare-fun temp93_62 () (_ BitVec 64))
(declare-fun temp93_61 () (_ BitVec 64))
(declare-fun temp93_64 () (_ BitVec 64))
(declare-fun temp93_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp93_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp93_67 () (_ BitVec 64))
(declare-fun temp93_66 () (_ BitVec 64))
(declare-fun temp93_69 () (_ BitVec 64))
(declare-fun temp93_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp93_71 () (_ BitVec 64))
(declare-fun temp93_70 () (_ BitVec 64))
(declare-fun temp93_73 () (_ BitVec 64))
(declare-fun temp93_72 () (_ BitVec 64))
(declare-fun temp93_75 () (_ BitVec 64))
(declare-fun temp93_74 () (_ BitVec 64))
(declare-fun temp93_77 () (_ BitVec 64))
(declare-fun temp93_76 () (_ BitVec 64))
(declare-fun temp93_79 () (_ BitVec 64))
(declare-fun temp93_78 () (_ BitVec 64))
(declare-fun temp93_81 () (_ BitVec 64))
(declare-fun temp93_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp93_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp93_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp93_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp93_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp93_86 () (_ BitVec 64))
(declare-fun var7867422 () (_ BitVec 64))
(declare-fun temp93_87 () (_ BitVec 64))
(declare-fun temp93_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp93_89 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp93_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp93_1)))
(assert (= temp93_2 #x0000000000000000))
(assert (= var1050945 temp93_2))
(assert (= temp93_3 #xffffffffffffffff))
(assert (= var67312 temp93_3))
(assert (= temp93_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp93_4)))
(assert (= temp93_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp93_5)))
(assert (= temp93_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp93_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp93_7 #x0000000000000000))
(assert (= var82187 temp93_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_8 #x0000000000000000))
(assert (= var82356 temp93_8))
(assert (= temp93_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp93_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_10 #x0000000000000001))
(assert (= var82528 temp93_10))
(assert (= temp93_11 #x0000000000000000))
(assert (= var65913 temp93_11))
(assert (= temp93_12 #x0000000000000000))
(assert (= temp93_13 temp93_12))
(assert (= temp93_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp93_13)))
(assert (= temp93_15 #x0000000000000001))
(assert (= temp93_16 temp93_15))
(assert (= temp93_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp93_16)))
(assert (= temp93_18 #x0000000000000002))
(assert (= temp93_19 temp93_18))
(assert (= temp93_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp93_19)))
(assert (= temp93_21 #x0000000000000003))
(assert (= temp93_22 temp93_21))
(assert (= temp93_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp93_22)))
(assert (= temp93_24 #x0000000000000004))
(assert (= temp93_25 temp93_24))
(assert (= temp93_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp93_25)))
(assert (= temp93_27 #x0000000000000005))
(assert (= temp93_28 temp93_27))
(assert (= temp93_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp93_28)))
(assert (= temp93_31 #x0000000000000000))
(assert (= temp93_30
   (ite (bvslt var65913 temp93_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp93_32 temp93_30))
(assert (= temp93_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp93_32)))
(assert (= var82530 temp93_33))
(assert (bvslt temp93_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_34 #x0000000000000001))
(assert (= var82531 temp93_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_35 #x0000000000000001))
(assert (= var82728 temp93_35))
(assert (= var1914351 var65913))
(assert (= temp93_36 #x0000000000000001))
(assert (= var2115797 temp93_36))
(assert (= temp93_37 #x0000000000000002))
(assert (= var2115798 temp93_37))
(assert (= temp93_39 #x0000000000000000))
(assert (= temp93_38 temp93_39))
(assert (= temp93_40 #x0000000000000000))
(assert (= var2628020 temp93_40))
(assert (= temp93_41 #x0000000000000001))
(assert (= temp93_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp93_41 temp93_42)))
(assert (= temp93_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp93_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp93_44 #x0000000000000000))
(assert (= var3740377 temp93_44))
(assert (= temp93_45 #x0000000000000002))
(assert (= var69143 temp93_45))
(assert (= temp93_47 #x0000000000000001))
(assert (= temp93_46 temp93_47))
(assert (= temp93_49 #x0000000000000001))
(assert (= temp93_48 temp93_49))
(assert (= temp93_51 #x0000000000000003))
(assert (= temp93_50 temp93_51))
(assert (= temp93_52 #x0000000000000001))
(assert (= var4212949 temp93_52))
(assert (= var4212950 var69143))
(assert (= temp93_54 #x0000000000000001))
(assert (= temp93_53 temp93_54))
(assert (= temp93_56 #x0000000000000001))
(assert (= temp93_55 temp93_56))
(assert (= temp93_58 #x0000000000000001))
(assert (= temp93_57 temp93_58))
(assert (= temp93_60 #x0000000000000001))
(assert (= temp93_59 temp93_60))
(assert (= temp93_62 #x0000000000000000))
(assert (= temp93_61 temp93_62))
(assert (= temp93_64 #x0000000000000001))
(assert (= temp93_63 temp93_64))
(assert (= var4868391 var69143))
(assert (= temp93_65 #x0000000000000002))
(assert (= var4983962 temp93_65))
(assert (= temp93_67 #x0000000000000001))
(assert (= temp93_66 temp93_67))
(assert (= temp93_69 #x0000000000000001))
(assert (= temp93_68 temp93_69))
(assert (= var5453295 var65913))
(assert (= temp93_71 #x0000000000000001))
(assert (= temp93_70 temp93_71))
(assert (= temp93_73 #x0000000000000001))
(assert (= temp93_72 temp93_73))
(assert (= temp93_75 #x0000000000000001))
(assert (= temp93_74 temp93_75))
(assert (= temp93_77 #x0000000000000001))
(assert (= temp93_76 temp93_77))
(assert (= temp93_79 #x0000000000000000))
(assert (= temp93_78 temp93_79))
(assert (= temp93_81 #x0000000000000001))
(assert (= temp93_80 temp93_81))
(assert (= var6375719 var69143))
(assert (= temp93_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp93_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_83 #x0000000000000001))
(assert (= var83534 temp93_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp93_84 #x0000000000000001))
(assert (= var6818808 temp93_84))
(assert (= var7867380 var69143))
(assert (= temp93_85 #x0000000000000001))
(assert (= var7867384 temp93_85))
(assert (= temp93_86 #x0000000000000000))
(assert (= var7867422 temp93_86))
(assert (= temp93_87 #x0000000000000000))
(assert (= var7867422 temp93_87))
(assert (= temp93_88 #x0000000000000001))
(assert (= var9193767 temp93_88))
(assert (= var9455911 var65913))
(assert (= temp93_89 #x0000000000000000))
(assert (= var9702554 temp93_89))
(model-add temp93_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp93_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp93_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp93_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp93_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp93_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp93_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




