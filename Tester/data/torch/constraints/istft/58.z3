(declare-fun temp113_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp113_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp113_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp113_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp113_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp113_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp113_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp113_8 () (_ BitVec 64))
(declare-fun temp113_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp113_10 () (_ BitVec 64))
(declare-fun temp113_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp113_12 () (_ BitVec 64))
(declare-fun temp113_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp113_14 () (_ BitVec 64))
(declare-fun temp113_15 () (_ BitVec 64))
(declare-fun temp113_16 () (_ BitVec 64))
(declare-fun temp113_17 () (_ BitVec 64))
(declare-fun temp113_18 () (_ BitVec 64))
(declare-fun temp113_19 () (_ BitVec 64))
(declare-fun temp113_20 () (_ BitVec 64))
(declare-fun temp113_21 () (_ BitVec 64))
(declare-fun temp113_22 () (_ BitVec 64))
(declare-fun temp113_23 () (_ BitVec 64))
(declare-fun temp113_24 () (_ BitVec 64))
(declare-fun temp113_25 () (_ BitVec 64))
(declare-fun temp113_26 () (_ BitVec 64))
(declare-fun temp113_27 () (_ BitVec 64))
(declare-fun temp113_28 () (_ BitVec 64))
(declare-fun temp113_29 () (_ BitVec 64))
(declare-fun temp113_31 () (_ BitVec 64))
(declare-fun temp113_30 () (_ BitVec 64))
(declare-fun temp113_32 () (_ BitVec 64))
(declare-fun temp113_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp113_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp113_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp113_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp113_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp113_39 () (_ BitVec 64))
(declare-fun temp113_38 () (_ BitVec 64))
(declare-fun temp113_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp113_41 () (_ BitVec 64))
(declare-fun temp113_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp113_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp113_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp113_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp113_47 () (_ BitVec 64))
(declare-fun temp113_46 () (_ BitVec 64))
(declare-fun temp113_49 () (_ BitVec 64))
(declare-fun temp113_48 () (_ BitVec 64))
(declare-fun temp113_51 () (_ BitVec 64))
(declare-fun temp113_50 () (_ BitVec 64))
(declare-fun temp113_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp113_54 () (_ BitVec 64))
(declare-fun temp113_53 () (_ BitVec 64))
(declare-fun temp113_56 () (_ BitVec 64))
(declare-fun temp113_55 () (_ BitVec 64))
(declare-fun temp113_58 () (_ BitVec 64))
(declare-fun temp113_57 () (_ BitVec 64))
(declare-fun temp113_60 () (_ BitVec 64))
(declare-fun temp113_59 () (_ BitVec 64))
(declare-fun temp113_62 () (_ BitVec 64))
(declare-fun temp113_61 () (_ BitVec 64))
(declare-fun temp113_64 () (_ BitVec 64))
(declare-fun temp113_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp113_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp113_67 () (_ BitVec 64))
(declare-fun temp113_66 () (_ BitVec 64))
(declare-fun temp113_69 () (_ BitVec 64))
(declare-fun temp113_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp113_71 () (_ BitVec 64))
(declare-fun temp113_70 () (_ BitVec 64))
(declare-fun temp113_73 () (_ BitVec 64))
(declare-fun temp113_72 () (_ BitVec 64))
(declare-fun temp113_75 () (_ BitVec 64))
(declare-fun temp113_74 () (_ BitVec 64))
(declare-fun temp113_77 () (_ BitVec 64))
(declare-fun temp113_76 () (_ BitVec 64))
(declare-fun temp113_79 () (_ BitVec 64))
(declare-fun temp113_78 () (_ BitVec 64))
(declare-fun temp113_81 () (_ BitVec 64))
(declare-fun temp113_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp113_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp113_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp113_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp113_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp113_86 () (_ BitVec 64))
(declare-fun var7867422 () (_ BitVec 64))
(declare-fun temp113_87 () (_ BitVec 64))
(declare-fun temp113_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun temp113_89 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp113_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp113_1)))
(assert (= temp113_2 #x0000000000000000))
(assert (= var1050945 temp113_2))
(assert (= temp113_3 #xffffffffffffffff))
(assert (= var67312 temp113_3))
(assert (= temp113_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp113_4)))
(assert (= temp113_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp113_5)))
(assert (= temp113_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp113_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp113_7 #x0000000000000000))
(assert (= var82187 temp113_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp113_8 #x0000000000000000))
(assert (= var82356 temp113_8))
(assert (= temp113_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp113_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp113_10 #x0000000000000001))
(assert (= var82528 temp113_10))
(assert (= temp113_11 #x0000000000000000))
(assert (= var65913 temp113_11))
(assert (= temp113_12 #x0000000000000000))
(assert (= temp113_13 temp113_12))
(assert (= temp113_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp113_13)))
(assert (= temp113_15 #x0000000000000001))
(assert (= temp113_16 temp113_15))
(assert (= temp113_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp113_16)))
(assert (= temp113_18 #x0000000000000002))
(assert (= temp113_19 temp113_18))
(assert (= temp113_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp113_19)))
(assert (= temp113_21 #x0000000000000003))
(assert (= temp113_22 temp113_21))
(assert (= temp113_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp113_22)))
(assert (= temp113_24 #x0000000000000004))
(assert (= temp113_25 temp113_24))
(assert (= temp113_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp113_25)))
(assert (= temp113_27 #x0000000000000005))
(assert (= temp113_28 temp113_27))
(assert (= temp113_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp113_28)))
(assert (= temp113_31 #x0000000000000000))
(assert (= temp113_30
   (ite (bvslt var65913 temp113_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp113_32 temp113_30))
(assert (= temp113_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp113_32)))
(assert (= var82530 temp113_33))
(assert (bvslt temp113_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp113_34 #x0000000000000001))
(assert (= var82531 temp113_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp113_35 #x0000000000000001))
(assert (= var82728 temp113_35))
(assert (= var1914351 var65913))
(assert (= temp113_36 #x0000000000000001))
(assert (= var2115797 temp113_36))
(assert (= temp113_37 #x0000000000000002))
(assert (= var2115798 temp113_37))
(assert (= temp113_39 #x0000000000000000))
(assert (= temp113_38 temp113_39))
(assert (= temp113_40 #x0000000000000000))
(assert (= var2628020 temp113_40))
(assert (= temp113_41 #x0000000000000001))
(assert (= temp113_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp113_41 temp113_42)))
(assert (= temp113_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp113_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp113_44 #x0000000000000000))
(assert (= var3740377 temp113_44))
(assert (= temp113_45 #x0000000000000002))
(assert (= var69143 temp113_45))
(assert (= temp113_47 #x0000000000000001))
(assert (= temp113_46 temp113_47))
(assert (= temp113_49 #x0000000000000001))
(assert (= temp113_48 temp113_49))
(assert (= temp113_51 #x0000000000000003))
(assert (= temp113_50 temp113_51))
(assert (= temp113_52 #x0000000000000001))
(assert (= var4212949 temp113_52))
(assert (= var4212950 var69143))
(assert (= temp113_54 #x0000000000000001))
(assert (= temp113_53 temp113_54))
(assert (= temp113_56 #x0000000000000001))
(assert (= temp113_55 temp113_56))
(assert (= temp113_58 #x0000000000000001))
(assert (= temp113_57 temp113_58))
(assert (= temp113_60 #x0000000000000001))
(assert (= temp113_59 temp113_60))
(assert (= temp113_62 #x0000000000000000))
(assert (= temp113_61 temp113_62))
(assert (= temp113_64 #x0000000000000001))
(assert (= temp113_63 temp113_64))
(assert (= var4868391 var69143))
(assert (= temp113_65 #x0000000000000002))
(assert (= var4983962 temp113_65))
(assert (= temp113_67 #x0000000000000001))
(assert (= temp113_66 temp113_67))
(assert (= temp113_69 #x0000000000000001))
(assert (= temp113_68 temp113_69))
(assert (= var5453295 var65913))
(assert (= temp113_71 #x0000000000000001))
(assert (= temp113_70 temp113_71))
(assert (= temp113_73 #x0000000000000001))
(assert (= temp113_72 temp113_73))
(assert (= temp113_75 #x0000000000000001))
(assert (= temp113_74 temp113_75))
(assert (= temp113_77 #x0000000000000001))
(assert (= temp113_76 temp113_77))
(assert (= temp113_79 #x0000000000000000))
(assert (= temp113_78 temp113_79))
(assert (= temp113_81 #x0000000000000001))
(assert (= temp113_80 temp113_81))
(assert (= var6375719 var69143))
(assert (= temp113_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp113_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp113_83 #x0000000000000001))
(assert (= var83534 temp113_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp113_84 #x0000000000000001))
(assert (= var6818808 temp113_84))
(assert (= var7867380 var69143))
(assert (= temp113_85 #x0000000000000001))
(assert (= var7867384 temp113_85))
(assert (= temp113_86 #x0000000000000000))
(assert (= var7867422 temp113_86))
(assert (= temp113_87 #x0000000000000000))
(assert (= var7867422 temp113_87))
(assert (= temp113_88 #x0000000000000001))
(assert (= var9128231 temp113_88))
(assert (= var9390375 var65913))
(assert (= temp113_89 #x0000000000000000))
(assert (= var9637018 temp113_89))
(model-add temp113_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp113_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp113_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp113_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp113_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp113_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp113_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




