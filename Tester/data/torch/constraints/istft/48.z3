(declare-fun temp91_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp91_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp91_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp91_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp91_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp91_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp91_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp91_8 () (_ BitVec 64))
(declare-fun temp91_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp91_10 () (_ BitVec 64))
(declare-fun temp91_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp91_12 () (_ BitVec 64))
(declare-fun temp91_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp91_14 () (_ BitVec 64))
(declare-fun temp91_15 () (_ BitVec 64))
(declare-fun temp91_16 () (_ BitVec 64))
(declare-fun temp91_17 () (_ BitVec 64))
(declare-fun temp91_18 () (_ BitVec 64))
(declare-fun temp91_19 () (_ BitVec 64))
(declare-fun temp91_20 () (_ BitVec 64))
(declare-fun temp91_21 () (_ BitVec 64))
(declare-fun temp91_22 () (_ BitVec 64))
(declare-fun temp91_23 () (_ BitVec 64))
(declare-fun temp91_24 () (_ BitVec 64))
(declare-fun temp91_25 () (_ BitVec 64))
(declare-fun temp91_26 () (_ BitVec 64))
(declare-fun temp91_27 () (_ BitVec 64))
(declare-fun temp91_28 () (_ BitVec 64))
(declare-fun temp91_29 () (_ BitVec 64))
(declare-fun temp91_31 () (_ BitVec 64))
(declare-fun temp91_30 () (_ BitVec 64))
(declare-fun temp91_32 () (_ BitVec 64))
(declare-fun temp91_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp91_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp91_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp91_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp91_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp91_39 () (_ BitVec 64))
(declare-fun temp91_38 () (_ BitVec 64))
(declare-fun temp91_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp91_41 () (_ BitVec 64))
(declare-fun temp91_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp91_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp91_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp91_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp91_47 () (_ BitVec 64))
(declare-fun temp91_46 () (_ BitVec 64))
(declare-fun temp91_49 () (_ BitVec 64))
(declare-fun temp91_48 () (_ BitVec 64))
(declare-fun temp91_51 () (_ BitVec 64))
(declare-fun temp91_50 () (_ BitVec 64))
(declare-fun temp91_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp91_54 () (_ BitVec 64))
(declare-fun temp91_53 () (_ BitVec 64))
(declare-fun temp91_56 () (_ BitVec 64))
(declare-fun temp91_55 () (_ BitVec 64))
(declare-fun temp91_58 () (_ BitVec 64))
(declare-fun temp91_57 () (_ BitVec 64))
(declare-fun temp91_60 () (_ BitVec 64))
(declare-fun temp91_59 () (_ BitVec 64))
(declare-fun temp91_62 () (_ BitVec 64))
(declare-fun temp91_61 () (_ BitVec 64))
(declare-fun temp91_64 () (_ BitVec 64))
(declare-fun temp91_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp91_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp91_67 () (_ BitVec 64))
(declare-fun temp91_66 () (_ BitVec 64))
(declare-fun temp91_69 () (_ BitVec 64))
(declare-fun temp91_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp91_71 () (_ BitVec 64))
(declare-fun temp91_70 () (_ BitVec 64))
(declare-fun temp91_73 () (_ BitVec 64))
(declare-fun temp91_72 () (_ BitVec 64))
(declare-fun temp91_75 () (_ BitVec 64))
(declare-fun temp91_74 () (_ BitVec 64))
(declare-fun temp91_77 () (_ BitVec 64))
(declare-fun temp91_76 () (_ BitVec 64))
(declare-fun temp91_79 () (_ BitVec 64))
(declare-fun temp91_78 () (_ BitVec 64))
(declare-fun temp91_81 () (_ BitVec 64))
(declare-fun temp91_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp91_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp91_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp91_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp91_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp91_86 () (_ BitVec 64))
(declare-fun var7867422 () (_ BitVec 64))
(declare-fun temp91_87 () (_ BitVec 64))
(declare-fun temp91_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp91_89 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp91_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp91_1)))
(assert (= temp91_2 #x0000000000000000))
(assert (= var1050945 temp91_2))
(assert (= temp91_3 #xffffffffffffffff))
(assert (= var67312 temp91_3))
(assert (= temp91_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp91_4)))
(assert (= temp91_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp91_5)))
(assert (= temp91_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp91_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp91_7 #x0000000000000000))
(assert (= var82187 temp91_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp91_8 #x0000000000000000))
(assert (= var82356 temp91_8))
(assert (= temp91_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp91_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp91_10 #x0000000000000001))
(assert (= var82528 temp91_10))
(assert (= temp91_11 #x0000000000000000))
(assert (= var65913 temp91_11))
(assert (= temp91_12 #x0000000000000000))
(assert (= temp91_13 temp91_12))
(assert (= temp91_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp91_13)))
(assert (= temp91_15 #x0000000000000001))
(assert (= temp91_16 temp91_15))
(assert (= temp91_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp91_16)))
(assert (= temp91_18 #x0000000000000002))
(assert (= temp91_19 temp91_18))
(assert (= temp91_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp91_19)))
(assert (= temp91_21 #x0000000000000003))
(assert (= temp91_22 temp91_21))
(assert (= temp91_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp91_22)))
(assert (= temp91_24 #x0000000000000004))
(assert (= temp91_25 temp91_24))
(assert (= temp91_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp91_25)))
(assert (= temp91_27 #x0000000000000005))
(assert (= temp91_28 temp91_27))
(assert (= temp91_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp91_28)))
(assert (= temp91_31 #x0000000000000000))
(assert (= temp91_30
   (ite (bvslt var65913 temp91_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp91_32 temp91_30))
(assert (= temp91_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp91_32)))
(assert (= var82530 temp91_33))
(assert (bvslt temp91_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp91_34 #x0000000000000001))
(assert (= var82531 temp91_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp91_35 #x0000000000000001))
(assert (= var82728 temp91_35))
(assert (= var1914351 var65913))
(assert (= temp91_36 #x0000000000000001))
(assert (= var2115797 temp91_36))
(assert (= temp91_37 #x0000000000000002))
(assert (= var2115798 temp91_37))
(assert (= temp91_39 #x0000000000000000))
(assert (= temp91_38 temp91_39))
(assert (= temp91_40 #x0000000000000000))
(assert (= var2628020 temp91_40))
(assert (= temp91_41 #x0000000000000001))
(assert (= temp91_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp91_41 temp91_42)))
(assert (= temp91_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp91_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp91_44 #x0000000000000000))
(assert (= var3740377 temp91_44))
(assert (= temp91_45 #x0000000000000002))
(assert (= var69143 temp91_45))
(assert (= temp91_47 #x0000000000000001))
(assert (= temp91_46 temp91_47))
(assert (= temp91_49 #x0000000000000001))
(assert (= temp91_48 temp91_49))
(assert (= temp91_51 #x0000000000000003))
(assert (= temp91_50 temp91_51))
(assert (= temp91_52 #x0000000000000001))
(assert (= var4212949 temp91_52))
(assert (= var4212950 var69143))
(assert (= temp91_54 #x0000000000000001))
(assert (= temp91_53 temp91_54))
(assert (= temp91_56 #x0000000000000001))
(assert (= temp91_55 temp91_56))
(assert (= temp91_58 #x0000000000000001))
(assert (= temp91_57 temp91_58))
(assert (= temp91_60 #x0000000000000001))
(assert (= temp91_59 temp91_60))
(assert (= temp91_62 #x0000000000000000))
(assert (= temp91_61 temp91_62))
(assert (= temp91_64 #x0000000000000001))
(assert (= temp91_63 temp91_64))
(assert (= var4868391 var69143))
(assert (= temp91_65 #x0000000000000002))
(assert (= var4983962 temp91_65))
(assert (= temp91_67 #x0000000000000001))
(assert (= temp91_66 temp91_67))
(assert (= temp91_69 #x0000000000000001))
(assert (= temp91_68 temp91_69))
(assert (= var5453295 var65913))
(assert (= temp91_71 #x0000000000000001))
(assert (= temp91_70 temp91_71))
(assert (= temp91_73 #x0000000000000001))
(assert (= temp91_72 temp91_73))
(assert (= temp91_75 #x0000000000000001))
(assert (= temp91_74 temp91_75))
(assert (= temp91_77 #x0000000000000001))
(assert (= temp91_76 temp91_77))
(assert (= temp91_79 #x0000000000000000))
(assert (= temp91_78 temp91_79))
(assert (= temp91_81 #x0000000000000001))
(assert (= temp91_80 temp91_81))
(assert (= var6375719 var69143))
(assert (= temp91_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp91_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp91_83 #x0000000000000001))
(assert (= var83534 temp91_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp91_84 #x0000000000000001))
(assert (= var6818808 temp91_84))
(assert (= var7867380 var69143))
(assert (= temp91_85 #x0000000000000001))
(assert (= var7867384 temp91_85))
(assert (= temp91_86 #x0000000000000000))
(assert (= var7867422 temp91_86))
(assert (= temp91_87 #x0000000000000000))
(assert (= var7867422 temp91_87))
(assert (= temp91_88 #x0000000000000001))
(assert (= var9193767 temp91_88))
(assert (= var9455911 var65913))
(assert (= temp91_89 #x0000000000000000))
(assert (= var9702554 temp91_89))
(model-add temp91_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp91_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp91_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp91_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp91_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp91_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp91_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




