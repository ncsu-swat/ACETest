(declare-fun temp23_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp23_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp23_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp23_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp23_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp23_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp23_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp23_8 () (_ BitVec 64))
(declare-fun temp23_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp23_10 () (_ BitVec 64))
(declare-fun temp23_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp23_12 () (_ BitVec 64))
(declare-fun temp23_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp23_14 () (_ BitVec 64))
(declare-fun temp23_15 () (_ BitVec 64))
(declare-fun temp23_16 () (_ BitVec 64))
(declare-fun temp23_17 () (_ BitVec 64))
(declare-fun temp23_18 () (_ BitVec 64))
(declare-fun temp23_19 () (_ BitVec 64))
(declare-fun temp23_20 () (_ BitVec 64))
(declare-fun temp23_21 () (_ BitVec 64))
(declare-fun temp23_22 () (_ BitVec 64))
(declare-fun temp23_23 () (_ BitVec 64))
(declare-fun temp23_24 () (_ BitVec 64))
(declare-fun temp23_25 () (_ BitVec 64))
(declare-fun temp23_26 () (_ BitVec 64))
(declare-fun temp23_27 () (_ BitVec 64))
(declare-fun temp23_28 () (_ BitVec 64))
(declare-fun temp23_29 () (_ BitVec 64))
(declare-fun temp23_31 () (_ BitVec 64))
(declare-fun temp23_30 () (_ BitVec 64))
(declare-fun temp23_32 () (_ BitVec 64))
(declare-fun temp23_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp23_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp23_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp23_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp23_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp23_39 () (_ BitVec 64))
(declare-fun temp23_38 () (_ BitVec 64))
(declare-fun temp23_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp23_41 () (_ BitVec 64))
(declare-fun temp23_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp23_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp23_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp23_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp23_47 () (_ BitVec 64))
(declare-fun temp23_46 () (_ BitVec 64))
(declare-fun temp23_49 () (_ BitVec 64))
(declare-fun temp23_48 () (_ BitVec 64))
(declare-fun temp23_51 () (_ BitVec 64))
(declare-fun temp23_50 () (_ BitVec 64))
(declare-fun temp23_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp23_54 () (_ BitVec 64))
(declare-fun temp23_53 () (_ BitVec 64))
(declare-fun temp23_56 () (_ BitVec 64))
(declare-fun temp23_55 () (_ BitVec 64))
(declare-fun temp23_58 () (_ BitVec 64))
(declare-fun temp23_57 () (_ BitVec 64))
(declare-fun temp23_60 () (_ BitVec 64))
(declare-fun temp23_59 () (_ BitVec 64))
(declare-fun temp23_62 () (_ BitVec 64))
(declare-fun temp23_61 () (_ BitVec 64))
(declare-fun temp23_64 () (_ BitVec 64))
(declare-fun temp23_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp23_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp23_67 () (_ BitVec 64))
(declare-fun temp23_66 () (_ BitVec 64))
(declare-fun temp23_69 () (_ BitVec 64))
(declare-fun temp23_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp23_71 () (_ BitVec 64))
(declare-fun temp23_70 () (_ BitVec 64))
(declare-fun temp23_73 () (_ BitVec 64))
(declare-fun temp23_72 () (_ BitVec 64))
(declare-fun temp23_75 () (_ BitVec 64))
(declare-fun temp23_74 () (_ BitVec 64))
(declare-fun temp23_77 () (_ BitVec 64))
(declare-fun temp23_76 () (_ BitVec 64))
(declare-fun temp23_79 () (_ BitVec 64))
(declare-fun temp23_78 () (_ BitVec 64))
(declare-fun temp23_81 () (_ BitVec 64))
(declare-fun temp23_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp23_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp23_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp23_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp23_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp23_86 () (_ BitVec 64))
(declare-fun var9259303 () (_ BitVec 64))
(declare-fun var9521447 () (_ BitVec 64))
(declare-fun temp23_87 () (_ BitVec 64))
(declare-fun var9768090 () (_ BitVec 64))
(assert (= temp23_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp23_1)))
(assert (= temp23_2 #x0000000000000000))
(assert (= var1050945 temp23_2))
(assert (= temp23_3 #xffffffffffffffff))
(assert (= var67312 temp23_3))
(assert (= temp23_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp23_4)))
(assert (= temp23_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp23_5)))
(assert (= temp23_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp23_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp23_7 #x0000000000000000))
(assert (= var82187 temp23_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp23_8 #x0000000000000000))
(assert (= var82356 temp23_8))
(assert (= temp23_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp23_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp23_10 #x0000000000000001))
(assert (= var82528 temp23_10))
(assert (= temp23_11 #x0000000000000000))
(assert (= var65913 temp23_11))
(assert (= temp23_12 #x0000000000000000))
(assert (= temp23_13 temp23_12))
(assert (= temp23_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp23_13)))
(assert (= temp23_15 #x0000000000000001))
(assert (= temp23_16 temp23_15))
(assert (= temp23_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp23_16)))
(assert (= temp23_18 #x0000000000000002))
(assert (= temp23_19 temp23_18))
(assert (= temp23_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp23_19)))
(assert (= temp23_21 #x0000000000000003))
(assert (= temp23_22 temp23_21))
(assert (= temp23_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp23_22)))
(assert (= temp23_24 #x0000000000000004))
(assert (= temp23_25 temp23_24))
(assert (= temp23_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp23_25)))
(assert (= temp23_27 #x0000000000000005))
(assert (= temp23_28 temp23_27))
(assert (= temp23_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp23_28)))
(assert (= temp23_31 #x0000000000000000))
(assert (= temp23_30
   (ite (bvslt var65913 temp23_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp23_32 temp23_30))
(assert (= temp23_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp23_32)))
(assert (= var82530 temp23_33))
(assert (bvslt temp23_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp23_34 #x0000000000000001))
(assert (= var82531 temp23_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp23_35 #x0000000000000001))
(assert (= var82728 temp23_35))
(assert (= var1914351 var65913))
(assert (= temp23_36 #x0000000000000001))
(assert (= var2115797 temp23_36))
(assert (= temp23_37 #x0000000000000002))
(assert (= var2115798 temp23_37))
(assert (= temp23_39 #x0000000000000000))
(assert (= temp23_38 temp23_39))
(assert (= temp23_40 #x0000000000000000))
(assert (= var2628020 temp23_40))
(assert (= temp23_41 #x0000000000000001))
(assert (= temp23_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp23_41 temp23_42)))
(assert (= temp23_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp23_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp23_44 #x0000000000000000))
(assert (= var3740377 temp23_44))
(assert (= temp23_45 #x0000000000000002))
(assert (= var69143 temp23_45))
(assert (= temp23_47 #x0000000000000001))
(assert (= temp23_46 temp23_47))
(assert (= temp23_49 #x0000000000000001))
(assert (= temp23_48 temp23_49))
(assert (= temp23_51 #x0000000000000003))
(assert (= temp23_50 temp23_51))
(assert (= temp23_52 #x0000000000000001))
(assert (= var4212949 temp23_52))
(assert (= var4212950 var69143))
(assert (= temp23_54 #x0000000000000001))
(assert (= temp23_53 temp23_54))
(assert (= temp23_56 #x0000000000000001))
(assert (= temp23_55 temp23_56))
(assert (= temp23_58 #x0000000000000001))
(assert (= temp23_57 temp23_58))
(assert (= temp23_60 #x0000000000000001))
(assert (= temp23_59 temp23_60))
(assert (= temp23_62 #x0000000000000000))
(assert (= temp23_61 temp23_62))
(assert (= temp23_64 #x0000000000000001))
(assert (= temp23_63 temp23_64))
(assert (= var4868391 var69143))
(assert (= temp23_65 #x0000000000000002))
(assert (= var4983962 temp23_65))
(assert (= temp23_67 #x0000000000000001))
(assert (= temp23_66 temp23_67))
(assert (= temp23_69 #x0000000000000001))
(assert (= temp23_68 temp23_69))
(assert (= var5453295 var65913))
(assert (= temp23_71 #x0000000000000001))
(assert (= temp23_70 temp23_71))
(assert (= temp23_73 #x0000000000000001))
(assert (= temp23_72 temp23_73))
(assert (= temp23_75 #x0000000000000001))
(assert (= temp23_74 temp23_75))
(assert (= temp23_77 #x0000000000000001))
(assert (= temp23_76 temp23_77))
(assert (= temp23_79 #x0000000000000000))
(assert (= temp23_78 temp23_79))
(assert (= temp23_81 #x0000000000000001))
(assert (= temp23_80 temp23_81))
(assert (= var6375719 var69143))
(assert (= temp23_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp23_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp23_83 #x0000000000000001))
(assert (= var83534 temp23_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp23_84 #x0000000000000001))
(assert (= var6818808 temp23_84))
(assert (= var7867380 var69143))
(assert (= temp23_85 #x0000000000000001))
(assert (= var7867384 temp23_85))
(assert (= temp23_86 #x0000000000000001))
(assert (= var9259303 temp23_86))
(assert (= var9521447 var65913))
(assert (= temp23_87 #x0000000000000000))
(assert (= var9768090 temp23_87))
(model-add temp23_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp23_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp23_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp23_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp23_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp23_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp23_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))






