(declare-fun temp398_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp398_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp398_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp398_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp398_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp398_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp398_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp398_8 () (_ BitVec 64))
(declare-fun temp398_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp398_10 () (_ BitVec 64))
(declare-fun temp398_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp398_12 () (_ BitVec 64))
(declare-fun temp398_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp398_14 () (_ BitVec 64))
(declare-fun temp398_15 () (_ BitVec 64))
(declare-fun temp398_16 () (_ BitVec 64))
(declare-fun temp398_17 () (_ BitVec 64))
(declare-fun temp398_18 () (_ BitVec 64))
(declare-fun temp398_19 () (_ BitVec 64))
(declare-fun temp398_20 () (_ BitVec 64))
(declare-fun temp398_21 () (_ BitVec 64))
(declare-fun temp398_22 () (_ BitVec 64))
(declare-fun temp398_23 () (_ BitVec 64))
(declare-fun temp398_24 () (_ BitVec 64))
(declare-fun temp398_25 () (_ BitVec 64))
(declare-fun temp398_26 () (_ BitVec 64))
(declare-fun temp398_27 () (_ BitVec 64))
(declare-fun temp398_28 () (_ BitVec 64))
(declare-fun temp398_29 () (_ BitVec 64))
(declare-fun temp398_31 () (_ BitVec 64))
(declare-fun temp398_30 () (_ BitVec 64))
(declare-fun temp398_32 () (_ BitVec 64))
(declare-fun temp398_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp398_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp398_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp398_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp398_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp398_39 () (_ BitVec 64))
(declare-fun temp398_38 () (_ BitVec 64))
(declare-fun temp398_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp398_41 () (_ BitVec 64))
(declare-fun temp398_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp398_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp398_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp398_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp398_47 () (_ BitVec 64))
(declare-fun temp398_46 () (_ BitVec 64))
(declare-fun temp398_49 () (_ BitVec 64))
(declare-fun temp398_48 () (_ BitVec 64))
(declare-fun temp398_51 () (_ BitVec 64))
(declare-fun temp398_50 () (_ BitVec 64))
(declare-fun temp398_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp398_54 () (_ BitVec 64))
(declare-fun temp398_53 () (_ BitVec 64))
(declare-fun temp398_56 () (_ BitVec 64))
(declare-fun temp398_55 () (_ BitVec 64))
(declare-fun temp398_58 () (_ BitVec 64))
(declare-fun temp398_57 () (_ BitVec 64))
(declare-fun temp398_60 () (_ BitVec 64))
(declare-fun temp398_59 () (_ BitVec 64))
(declare-fun temp398_62 () (_ BitVec 64))
(declare-fun temp398_61 () (_ BitVec 64))
(declare-fun temp398_64 () (_ BitVec 64))
(declare-fun temp398_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp398_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp398_67 () (_ BitVec 64))
(declare-fun temp398_66 () (_ BitVec 64))
(declare-fun temp398_69 () (_ BitVec 64))
(declare-fun temp398_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp398_71 () (_ BitVec 64))
(declare-fun temp398_70 () (_ BitVec 64))
(declare-fun temp398_73 () (_ BitVec 64))
(declare-fun temp398_72 () (_ BitVec 64))
(declare-fun temp398_75 () (_ BitVec 64))
(declare-fun temp398_74 () (_ BitVec 64))
(declare-fun temp398_77 () (_ BitVec 64))
(declare-fun temp398_76 () (_ BitVec 64))
(declare-fun temp398_79 () (_ BitVec 64))
(declare-fun temp398_78 () (_ BitVec 64))
(declare-fun temp398_81 () (_ BitVec 64))
(declare-fun temp398_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp398_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp398_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp398_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp398_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp398_86 () (_ BitVec 64))
(declare-fun var7801898 () (_ BitVec 64))
(declare-fun temp398_87 () (_ BitVec 64))
(declare-fun temp398_88 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun temp398_89 () (_ BitVec 64))
(declare-fun var9374874 () (_ BitVec 64))
(assert (= temp398_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp398_1)))
(assert (= temp398_2 #x0000000000000000))
(assert (= var1050945 temp398_2))
(assert (= temp398_3 #xffffffffffffffff))
(assert (= var67312 temp398_3))
(assert (= temp398_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp398_4)))
(assert (= temp398_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp398_5)))
(assert (= temp398_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp398_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp398_7 #x0000000000000000))
(assert (= var82187 temp398_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp398_8 #x0000000000000000))
(assert (= var82356 temp398_8))
(assert (= temp398_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp398_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp398_10 #x0000000000000001))
(assert (= var82528 temp398_10))
(assert (= temp398_11 #x0000000000000000))
(assert (= var65913 temp398_11))
(assert (= temp398_12 #x0000000000000000))
(assert (= temp398_13 temp398_12))
(assert (= temp398_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp398_13)))
(assert (= temp398_15 #x0000000000000001))
(assert (= temp398_16 temp398_15))
(assert (= temp398_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp398_16)))
(assert (= temp398_18 #x0000000000000002))
(assert (= temp398_19 temp398_18))
(assert (= temp398_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp398_19)))
(assert (= temp398_21 #x0000000000000003))
(assert (= temp398_22 temp398_21))
(assert (= temp398_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp398_22)))
(assert (= temp398_24 #x0000000000000004))
(assert (= temp398_25 temp398_24))
(assert (= temp398_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp398_25)))
(assert (= temp398_27 #x0000000000000005))
(assert (= temp398_28 temp398_27))
(assert (= temp398_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp398_28)))
(assert (= temp398_31 #x0000000000000000))
(assert (= temp398_30
   (ite (bvslt var65913 temp398_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp398_32 temp398_30))
(assert (= temp398_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp398_32)))
(assert (= var82530 temp398_33))
(assert (bvslt temp398_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp398_34 #x0000000000000001))
(assert (= var82531 temp398_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp398_35 #x0000000000000001))
(assert (= var82728 temp398_35))
(assert (= var1914351 var65913))
(assert (= temp398_36 #x0000000000000001))
(assert (= var2115797 temp398_36))
(assert (= temp398_37 #x0000000000000002))
(assert (= var2115798 temp398_37))
(assert (= temp398_39 #x0000000000000000))
(assert (= temp398_38 temp398_39))
(assert (= temp398_40 #x0000000000000000))
(assert (= var2628020 temp398_40))
(assert (= temp398_41 #x0000000000000001))
(assert (= temp398_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp398_41 temp398_42)))
(assert (= temp398_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp398_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp398_44 #x0000000000000000))
(assert (= var3740377 temp398_44))
(assert (= temp398_45 #x0000000000000002))
(assert (= var69143 temp398_45))
(assert (= temp398_47 #x0000000000000001))
(assert (= temp398_46 temp398_47))
(assert (= temp398_49 #x0000000000000001))
(assert (= temp398_48 temp398_49))
(assert (= temp398_51 #x0000000000000003))
(assert (= temp398_50 temp398_51))
(assert (= temp398_52 #x0000000000000001))
(assert (= var4212949 temp398_52))
(assert (= var4212950 var69143))
(assert (= temp398_54 #x0000000000000001))
(assert (= temp398_53 temp398_54))
(assert (= temp398_56 #x0000000000000001))
(assert (= temp398_55 temp398_56))
(assert (= temp398_58 #x0000000000000001))
(assert (= temp398_57 temp398_58))
(assert (= temp398_60 #x0000000000000001))
(assert (= temp398_59 temp398_60))
(assert (= temp398_62 #x0000000000000000))
(assert (= temp398_61 temp398_62))
(assert (= temp398_64 #x0000000000000001))
(assert (= temp398_63 temp398_64))
(assert (= var4868391 var69143))
(assert (= temp398_65 #x0000000000000002))
(assert (= var4983962 temp398_65))
(assert (= temp398_67 #x0000000000000001))
(assert (= temp398_66 temp398_67))
(assert (= temp398_69 #x0000000000000001))
(assert (= temp398_68 temp398_69))
(assert (= var5453295 var65913))
(assert (= temp398_71 #x0000000000000001))
(assert (= temp398_70 temp398_71))
(assert (= temp398_73 #x0000000000000001))
(assert (= temp398_72 temp398_73))
(assert (= temp398_75 #x0000000000000001))
(assert (= temp398_74 temp398_75))
(assert (= temp398_77 #x0000000000000001))
(assert (= temp398_76 temp398_77))
(assert (= temp398_79 #x0000000000000000))
(assert (= temp398_78 temp398_79))
(assert (= temp398_81 #x0000000000000001))
(assert (= temp398_80 temp398_81))
(assert (= var6375719 var69143))
(assert (= temp398_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp398_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp398_83 #x0000000000000001))
(assert (= var83534 temp398_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp398_84 #x0000000000000001))
(assert (= var6818808 temp398_84))
(assert (= var7801844 var69143))
(assert (= temp398_85 #x0000000000000001))
(assert (= var7801848 temp398_85))
(assert (= temp398_86 #x0000000000000000))
(assert (= var7801898 temp398_86))
(assert (= temp398_87 #x0000000000000000))
(assert (= var7801898 temp398_87))
(assert (= temp398_88 #x0000000000000001))
(assert (= var9062695 temp398_88))
(assert (= temp398_89 #x0000000000000000))
(assert (= var9374874 temp398_89))
(model-add temp398_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp398_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp398_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp398_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp398_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp398_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp398_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





