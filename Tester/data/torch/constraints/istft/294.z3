(declare-fun temp968_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp968_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp968_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp968_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp968_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp968_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp968_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp968_8 () (_ BitVec 64))
(declare-fun temp968_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp968_10 () (_ BitVec 64))
(declare-fun temp968_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp968_12 () (_ BitVec 64))
(declare-fun temp968_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp968_14 () (_ BitVec 64))
(declare-fun temp968_15 () (_ BitVec 64))
(declare-fun temp968_16 () (_ BitVec 64))
(declare-fun temp968_17 () (_ BitVec 64))
(declare-fun temp968_18 () (_ BitVec 64))
(declare-fun temp968_19 () (_ BitVec 64))
(declare-fun temp968_20 () (_ BitVec 64))
(declare-fun temp968_21 () (_ BitVec 64))
(declare-fun temp968_22 () (_ BitVec 64))
(declare-fun temp968_23 () (_ BitVec 64))
(declare-fun temp968_24 () (_ BitVec 64))
(declare-fun temp968_25 () (_ BitVec 64))
(declare-fun temp968_26 () (_ BitVec 64))
(declare-fun temp968_27 () (_ BitVec 64))
(declare-fun temp968_28 () (_ BitVec 64))
(declare-fun temp968_29 () (_ BitVec 64))
(declare-fun temp968_31 () (_ BitVec 64))
(declare-fun temp968_30 () (_ BitVec 64))
(declare-fun temp968_32 () (_ BitVec 64))
(declare-fun temp968_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp968_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp968_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp968_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp968_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp968_39 () (_ BitVec 64))
(declare-fun temp968_38 () (_ BitVec 64))
(declare-fun temp968_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp968_41 () (_ BitVec 64))
(declare-fun temp968_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp968_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp968_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp968_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp968_47 () (_ BitVec 64))
(declare-fun temp968_46 () (_ BitVec 64))
(declare-fun temp968_49 () (_ BitVec 64))
(declare-fun temp968_48 () (_ BitVec 64))
(declare-fun temp968_51 () (_ BitVec 64))
(declare-fun temp968_50 () (_ BitVec 64))
(declare-fun temp968_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp968_54 () (_ BitVec 64))
(declare-fun temp968_53 () (_ BitVec 64))
(declare-fun temp968_56 () (_ BitVec 64))
(declare-fun temp968_55 () (_ BitVec 64))
(declare-fun temp968_58 () (_ BitVec 64))
(declare-fun temp968_57 () (_ BitVec 64))
(declare-fun temp968_60 () (_ BitVec 64))
(declare-fun temp968_59 () (_ BitVec 64))
(declare-fun temp968_62 () (_ BitVec 64))
(declare-fun temp968_61 () (_ BitVec 64))
(declare-fun temp968_64 () (_ BitVec 64))
(declare-fun temp968_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp968_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp968_67 () (_ BitVec 64))
(declare-fun temp968_66 () (_ BitVec 64))
(declare-fun temp968_69 () (_ BitVec 64))
(declare-fun temp968_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp968_71 () (_ BitVec 64))
(declare-fun temp968_70 () (_ BitVec 64))
(declare-fun temp968_73 () (_ BitVec 64))
(declare-fun temp968_72 () (_ BitVec 64))
(declare-fun temp968_75 () (_ BitVec 64))
(declare-fun temp968_74 () (_ BitVec 64))
(declare-fun temp968_77 () (_ BitVec 64))
(declare-fun temp968_76 () (_ BitVec 64))
(declare-fun temp968_79 () (_ BitVec 64))
(declare-fun temp968_78 () (_ BitVec 64))
(declare-fun temp968_81 () (_ BitVec 64))
(declare-fun temp968_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp968_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp968_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp968_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun temp968_85 () (_ BitVec 64))
(declare-fun var6818858 () (_ BitVec 64))
(declare-fun temp968_86 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp968_87 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp968_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun temp968_89 () (_ BitVec 64))
(declare-fun var9505946 () (_ BitVec 64))
(assert (= temp968_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp968_1)))
(assert (= temp968_2 #x0000000000000000))
(assert (= var1050945 temp968_2))
(assert (= temp968_3 #xffffffffffffffff))
(assert (= var67312 temp968_3))
(assert (= temp968_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp968_4)))
(assert (= temp968_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp968_5)))
(assert (= temp968_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp968_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp968_7 #x0000000000000000))
(assert (= var82187 temp968_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp968_8 #x0000000000000000))
(assert (= var82356 temp968_8))
(assert (= temp968_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp968_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp968_10 #x0000000000000001))
(assert (= var82528 temp968_10))
(assert (= temp968_11 #x0000000000000000))
(assert (= var65913 temp968_11))
(assert (= temp968_12 #x0000000000000000))
(assert (= temp968_13 temp968_12))
(assert (= temp968_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp968_13)))
(assert (= temp968_15 #x0000000000000001))
(assert (= temp968_16 temp968_15))
(assert (= temp968_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp968_16)))
(assert (= temp968_18 #x0000000000000002))
(assert (= temp968_19 temp968_18))
(assert (= temp968_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp968_19)))
(assert (= temp968_21 #x0000000000000003))
(assert (= temp968_22 temp968_21))
(assert (= temp968_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp968_22)))
(assert (= temp968_24 #x0000000000000004))
(assert (= temp968_25 temp968_24))
(assert (= temp968_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp968_25)))
(assert (= temp968_27 #x0000000000000005))
(assert (= temp968_28 temp968_27))
(assert (= temp968_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp968_28)))
(assert (= temp968_31 #x0000000000000000))
(assert (= temp968_30
   (ite (bvslt var65913 temp968_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp968_32 temp968_30))
(assert (= temp968_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp968_32)))
(assert (= var82530 temp968_33))
(assert (bvslt temp968_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp968_34 #x0000000000000001))
(assert (= var82531 temp968_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp968_35 #x0000000000000001))
(assert (= var82728 temp968_35))
(assert (= var1914351 var65913))
(assert (= temp968_36 #x0000000000000001))
(assert (= var2115797 temp968_36))
(assert (= temp968_37 #x0000000000000002))
(assert (= var2115798 temp968_37))
(assert (= temp968_39 #x0000000000000000))
(assert (= temp968_38 temp968_39))
(assert (= temp968_40 #x0000000000000000))
(assert (= var2628020 temp968_40))
(assert (= temp968_41 #x0000000000000001))
(assert (= temp968_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp968_41 temp968_42)))
(assert (= temp968_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp968_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp968_44 #x0000000000000000))
(assert (= var3740377 temp968_44))
(assert (= temp968_45 #x0000000000000002))
(assert (= var69143 temp968_45))
(assert (= temp968_47 #x0000000000000001))
(assert (= temp968_46 temp968_47))
(assert (= temp968_49 #x0000000000000001))
(assert (= temp968_48 temp968_49))
(assert (= temp968_51 #x0000000000000003))
(assert (= temp968_50 temp968_51))
(assert (= temp968_52 #x0000000000000001))
(assert (= var4212949 temp968_52))
(assert (= var4212950 var69143))
(assert (= temp968_54 #x0000000000000001))
(assert (= temp968_53 temp968_54))
(assert (= temp968_56 #x0000000000000001))
(assert (= temp968_55 temp968_56))
(assert (= temp968_58 #x0000000000000001))
(assert (= temp968_57 temp968_58))
(assert (= temp968_60 #x0000000000000001))
(assert (= temp968_59 temp968_60))
(assert (= temp968_62 #x0000000000000000))
(assert (= temp968_61 temp968_62))
(assert (= temp968_64 #x0000000000000001))
(assert (= temp968_63 temp968_64))
(assert (= var4868391 var69143))
(assert (= temp968_65 #x0000000000000002))
(assert (= var4983962 temp968_65))
(assert (= temp968_67 #x0000000000000001))
(assert (= temp968_66 temp968_67))
(assert (= temp968_69 #x0000000000000001))
(assert (= temp968_68 temp968_69))
(assert (= var5453295 var65913))
(assert (= temp968_71 #x0000000000000001))
(assert (= temp968_70 temp968_71))
(assert (= temp968_73 #x0000000000000001))
(assert (= temp968_72 temp968_73))
(assert (= temp968_75 #x0000000000000001))
(assert (= temp968_74 temp968_75))
(assert (= temp968_77 #x0000000000000001))
(assert (= temp968_76 temp968_77))
(assert (= temp968_79 #x0000000000000000))
(assert (= temp968_78 temp968_79))
(assert (= temp968_81 #x0000000000000001))
(assert (= temp968_80 temp968_81))
(assert (= var6375719 var69143))
(assert (= temp968_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp968_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp968_83 #x0000000000000001))
(assert (= var83534 temp968_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp968_84 #x0000000000000001))
(assert (= var6818808 temp968_84))
(assert (= temp968_85 #x0000000000000000))
(assert (= var6818858 temp968_85))
(assert (= temp968_86 #x0000000000000000))
(assert (= var6818858 temp968_86))
(assert (= var7736308 var69143))
(assert (= temp968_87 #x0000000000000001))
(assert (= var7736312 temp968_87))
(assert (= temp968_88 #x0000000000000001))
(assert (= var9193767 temp968_88))
(assert (= temp968_89 #x0000000000000000))
(assert (= var9505946 temp968_89))
(model-add temp968_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp968_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp968_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp968_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp968_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp968_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp968_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





