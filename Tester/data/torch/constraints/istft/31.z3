(declare-fun temp39_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp39_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp39_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp39_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp39_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp39_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp39_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp39_8 () (_ BitVec 64))
(declare-fun temp39_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp39_10 () (_ BitVec 64))
(declare-fun temp39_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp39_12 () (_ BitVec 64))
(declare-fun temp39_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp39_14 () (_ BitVec 64))
(declare-fun temp39_15 () (_ BitVec 64))
(declare-fun temp39_16 () (_ BitVec 64))
(declare-fun temp39_17 () (_ BitVec 64))
(declare-fun temp39_18 () (_ BitVec 64))
(declare-fun temp39_19 () (_ BitVec 64))
(declare-fun temp39_20 () (_ BitVec 64))
(declare-fun temp39_21 () (_ BitVec 64))
(declare-fun temp39_22 () (_ BitVec 64))
(declare-fun temp39_23 () (_ BitVec 64))
(declare-fun temp39_24 () (_ BitVec 64))
(declare-fun temp39_25 () (_ BitVec 64))
(declare-fun temp39_26 () (_ BitVec 64))
(declare-fun temp39_27 () (_ BitVec 64))
(declare-fun temp39_28 () (_ BitVec 64))
(declare-fun temp39_29 () (_ BitVec 64))
(declare-fun temp39_31 () (_ BitVec 64))
(declare-fun temp39_30 () (_ BitVec 64))
(declare-fun temp39_32 () (_ BitVec 64))
(declare-fun temp39_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp39_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp39_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp39_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp39_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp39_39 () (_ BitVec 64))
(declare-fun temp39_38 () (_ BitVec 64))
(declare-fun temp39_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp39_41 () (_ BitVec 64))
(declare-fun temp39_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp39_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp39_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp39_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp39_47 () (_ BitVec 64))
(declare-fun temp39_46 () (_ BitVec 64))
(declare-fun temp39_49 () (_ BitVec 64))
(declare-fun temp39_48 () (_ BitVec 64))
(declare-fun temp39_51 () (_ BitVec 64))
(declare-fun temp39_50 () (_ BitVec 64))
(declare-fun temp39_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp39_54 () (_ BitVec 64))
(declare-fun temp39_53 () (_ BitVec 64))
(declare-fun temp39_56 () (_ BitVec 64))
(declare-fun temp39_55 () (_ BitVec 64))
(declare-fun temp39_58 () (_ BitVec 64))
(declare-fun temp39_57 () (_ BitVec 64))
(declare-fun temp39_60 () (_ BitVec 64))
(declare-fun temp39_59 () (_ BitVec 64))
(declare-fun temp39_62 () (_ BitVec 64))
(declare-fun temp39_61 () (_ BitVec 64))
(declare-fun temp39_64 () (_ BitVec 64))
(declare-fun temp39_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp39_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp39_67 () (_ BitVec 64))
(declare-fun temp39_66 () (_ BitVec 64))
(declare-fun temp39_69 () (_ BitVec 64))
(declare-fun temp39_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp39_71 () (_ BitVec 64))
(declare-fun temp39_70 () (_ BitVec 64))
(declare-fun temp39_73 () (_ BitVec 64))
(declare-fun temp39_72 () (_ BitVec 64))
(declare-fun temp39_75 () (_ BitVec 64))
(declare-fun temp39_74 () (_ BitVec 64))
(declare-fun temp39_77 () (_ BitVec 64))
(declare-fun temp39_76 () (_ BitVec 64))
(declare-fun temp39_79 () (_ BitVec 64))
(declare-fun temp39_78 () (_ BitVec 64))
(declare-fun temp39_81 () (_ BitVec 64))
(declare-fun temp39_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp39_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp39_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp39_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp39_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp39_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(assert (= temp39_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp39_1)))
(assert (= temp39_2 #x0000000000000000))
(assert (= var1050945 temp39_2))
(assert (= temp39_3 #xffffffffffffffff))
(assert (= var67312 temp39_3))
(assert (= temp39_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp39_4)))
(assert (= temp39_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp39_5)))
(assert (= temp39_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp39_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp39_7 #x0000000000000000))
(assert (= var82187 temp39_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp39_8 #x0000000000000000))
(assert (= var82356 temp39_8))
(assert (= temp39_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp39_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp39_10 #x0000000000000001))
(assert (= var82528 temp39_10))
(assert (= temp39_11 #x0000000000000000))
(assert (= var65913 temp39_11))
(assert (= temp39_12 #x0000000000000000))
(assert (= temp39_13 temp39_12))
(assert (= temp39_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp39_13)))
(assert (= temp39_15 #x0000000000000001))
(assert (= temp39_16 temp39_15))
(assert (= temp39_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp39_16)))
(assert (= temp39_18 #x0000000000000002))
(assert (= temp39_19 temp39_18))
(assert (= temp39_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp39_19)))
(assert (= temp39_21 #x0000000000000003))
(assert (= temp39_22 temp39_21))
(assert (= temp39_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp39_22)))
(assert (= temp39_24 #x0000000000000004))
(assert (= temp39_25 temp39_24))
(assert (= temp39_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp39_25)))
(assert (= temp39_27 #x0000000000000005))
(assert (= temp39_28 temp39_27))
(assert (= temp39_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp39_28)))
(assert (= temp39_31 #x0000000000000000))
(assert (= temp39_30
   (ite (bvslt var65913 temp39_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp39_32 temp39_30))
(assert (= temp39_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp39_32)))
(assert (= var82530 temp39_33))
(assert (bvslt temp39_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp39_34 #x0000000000000001))
(assert (= var82531 temp39_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp39_35 #x0000000000000001))
(assert (= var82728 temp39_35))
(assert (= var1914351 var65913))
(assert (= temp39_36 #x0000000000000001))
(assert (= var2115797 temp39_36))
(assert (= temp39_37 #x0000000000000002))
(assert (= var2115798 temp39_37))
(assert (= temp39_39 #x0000000000000000))
(assert (= temp39_38 temp39_39))
(assert (= temp39_40 #x0000000000000000))
(assert (= var2628020 temp39_40))
(assert (= temp39_41 #x0000000000000001))
(assert (= temp39_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp39_41 temp39_42)))
(assert (= temp39_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp39_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp39_44 #x0000000000000000))
(assert (= var3740377 temp39_44))
(assert (= temp39_45 #x0000000000000002))
(assert (= var69143 temp39_45))
(assert (= temp39_47 #x0000000000000001))
(assert (= temp39_46 temp39_47))
(assert (= temp39_49 #x0000000000000001))
(assert (= temp39_48 temp39_49))
(assert (= temp39_51 #x0000000000000003))
(assert (= temp39_50 temp39_51))
(assert (= temp39_52 #x0000000000000001))
(assert (= var4212949 temp39_52))
(assert (= var4212950 var69143))
(assert (= temp39_54 #x0000000000000001))
(assert (= temp39_53 temp39_54))
(assert (= temp39_56 #x0000000000000001))
(assert (= temp39_55 temp39_56))
(assert (= temp39_58 #x0000000000000001))
(assert (= temp39_57 temp39_58))
(assert (= temp39_60 #x0000000000000001))
(assert (= temp39_59 temp39_60))
(assert (= temp39_62 #x0000000000000000))
(assert (= temp39_61 temp39_62))
(assert (= temp39_64 #x0000000000000001))
(assert (= temp39_63 temp39_64))
(assert (= var4868391 var69143))
(assert (= temp39_65 #x0000000000000002))
(assert (= var4983962 temp39_65))
(assert (= temp39_67 #x0000000000000001))
(assert (= temp39_66 temp39_67))
(assert (= temp39_69 #x0000000000000001))
(assert (= temp39_68 temp39_69))
(assert (= var5453295 var65913))
(assert (= temp39_71 #x0000000000000001))
(assert (= temp39_70 temp39_71))
(assert (= temp39_73 #x0000000000000001))
(assert (= temp39_72 temp39_73))
(assert (= temp39_75 #x0000000000000001))
(assert (= temp39_74 temp39_75))
(assert (= temp39_77 #x0000000000000001))
(assert (= temp39_76 temp39_77))
(assert (= temp39_79 #x0000000000000000))
(assert (= temp39_78 temp39_79))
(assert (= temp39_81 #x0000000000000001))
(assert (= temp39_80 temp39_81))
(assert (= var6375719 var69143))
(assert (= temp39_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp39_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp39_83 #x0000000000000001))
(assert (= var83534 temp39_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp39_84 #x0000000000000001))
(assert (= var6818808 temp39_84))
(assert (= var7867380 var69143))
(assert (= temp39_85 #x0000000000000001))
(assert (= var7867384 temp39_85))
(assert (= temp39_86 #x0000000000000001))
(assert (= var9193767 temp39_86))
(model-add temp39_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp39_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp39_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp39_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp39_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp39_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp39_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





