(declare-fun temp394_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp394_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp394_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp394_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp394_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp394_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp394_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp394_8 () (_ BitVec 64))
(declare-fun temp394_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp394_10 () (_ BitVec 64))
(declare-fun temp394_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp394_12 () (_ BitVec 64))
(declare-fun temp394_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp394_14 () (_ BitVec 64))
(declare-fun temp394_15 () (_ BitVec 64))
(declare-fun temp394_16 () (_ BitVec 64))
(declare-fun temp394_17 () (_ BitVec 64))
(declare-fun temp394_18 () (_ BitVec 64))
(declare-fun temp394_19 () (_ BitVec 64))
(declare-fun temp394_20 () (_ BitVec 64))
(declare-fun temp394_21 () (_ BitVec 64))
(declare-fun temp394_22 () (_ BitVec 64))
(declare-fun temp394_23 () (_ BitVec 64))
(declare-fun temp394_24 () (_ BitVec 64))
(declare-fun temp394_25 () (_ BitVec 64))
(declare-fun temp394_26 () (_ BitVec 64))
(declare-fun temp394_27 () (_ BitVec 64))
(declare-fun temp394_28 () (_ BitVec 64))
(declare-fun temp394_29 () (_ BitVec 64))
(declare-fun temp394_31 () (_ BitVec 64))
(declare-fun temp394_30 () (_ BitVec 64))
(declare-fun temp394_32 () (_ BitVec 64))
(declare-fun temp394_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp394_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp394_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp394_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp394_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp394_39 () (_ BitVec 64))
(declare-fun temp394_38 () (_ BitVec 64))
(declare-fun temp394_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp394_41 () (_ BitVec 64))
(declare-fun temp394_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp394_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp394_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp394_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp394_47 () (_ BitVec 64))
(declare-fun temp394_46 () (_ BitVec 64))
(declare-fun temp394_49 () (_ BitVec 64))
(declare-fun temp394_48 () (_ BitVec 64))
(declare-fun temp394_51 () (_ BitVec 64))
(declare-fun temp394_50 () (_ BitVec 64))
(declare-fun temp394_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp394_54 () (_ BitVec 64))
(declare-fun temp394_53 () (_ BitVec 64))
(declare-fun temp394_56 () (_ BitVec 64))
(declare-fun temp394_55 () (_ BitVec 64))
(declare-fun temp394_58 () (_ BitVec 64))
(declare-fun temp394_57 () (_ BitVec 64))
(declare-fun temp394_60 () (_ BitVec 64))
(declare-fun temp394_59 () (_ BitVec 64))
(declare-fun temp394_62 () (_ BitVec 64))
(declare-fun temp394_61 () (_ BitVec 64))
(declare-fun temp394_64 () (_ BitVec 64))
(declare-fun temp394_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp394_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp394_67 () (_ BitVec 64))
(declare-fun temp394_66 () (_ BitVec 64))
(declare-fun temp394_69 () (_ BitVec 64))
(declare-fun temp394_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp394_71 () (_ BitVec 64))
(declare-fun temp394_70 () (_ BitVec 64))
(declare-fun temp394_73 () (_ BitVec 64))
(declare-fun temp394_72 () (_ BitVec 64))
(declare-fun temp394_75 () (_ BitVec 64))
(declare-fun temp394_74 () (_ BitVec 64))
(declare-fun temp394_77 () (_ BitVec 64))
(declare-fun temp394_76 () (_ BitVec 64))
(declare-fun temp394_79 () (_ BitVec 64))
(declare-fun temp394_78 () (_ BitVec 64))
(declare-fun temp394_81 () (_ BitVec 64))
(declare-fun temp394_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp394_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp394_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp394_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp394_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp394_86 () (_ BitVec 64))
(declare-fun var7801898 () (_ BitVec 64))
(declare-fun temp394_87 () (_ BitVec 64))
(declare-fun temp394_88 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(assert (= temp394_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp394_1)))
(assert (= temp394_2 #x0000000000000000))
(assert (= var1050945 temp394_2))
(assert (= temp394_3 #xffffffffffffffff))
(assert (= var67312 temp394_3))
(assert (= temp394_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp394_4)))
(assert (= temp394_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp394_5)))
(assert (= temp394_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp394_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp394_7 #x0000000000000000))
(assert (= var82187 temp394_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp394_8 #x0000000000000000))
(assert (= var82356 temp394_8))
(assert (= temp394_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp394_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp394_10 #x0000000000000001))
(assert (= var82528 temp394_10))
(assert (= temp394_11 #x0000000000000000))
(assert (= var65913 temp394_11))
(assert (= temp394_12 #x0000000000000000))
(assert (= temp394_13 temp394_12))
(assert (= temp394_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp394_13)))
(assert (= temp394_15 #x0000000000000001))
(assert (= temp394_16 temp394_15))
(assert (= temp394_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp394_16)))
(assert (= temp394_18 #x0000000000000002))
(assert (= temp394_19 temp394_18))
(assert (= temp394_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp394_19)))
(assert (= temp394_21 #x0000000000000003))
(assert (= temp394_22 temp394_21))
(assert (= temp394_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp394_22)))
(assert (= temp394_24 #x0000000000000004))
(assert (= temp394_25 temp394_24))
(assert (= temp394_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp394_25)))
(assert (= temp394_27 #x0000000000000005))
(assert (= temp394_28 temp394_27))
(assert (= temp394_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp394_28)))
(assert (= temp394_31 #x0000000000000000))
(assert (= temp394_30
   (ite (bvslt var65913 temp394_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp394_32 temp394_30))
(assert (= temp394_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp394_32)))
(assert (= var82530 temp394_33))
(assert (bvslt temp394_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp394_34 #x0000000000000001))
(assert (= var82531 temp394_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp394_35 #x0000000000000001))
(assert (= var82728 temp394_35))
(assert (= var1914351 var65913))
(assert (= temp394_36 #x0000000000000001))
(assert (= var2115797 temp394_36))
(assert (= temp394_37 #x0000000000000002))
(assert (= var2115798 temp394_37))
(assert (= temp394_39 #x0000000000000000))
(assert (= temp394_38 temp394_39))
(assert (= temp394_40 #x0000000000000000))
(assert (= var2628020 temp394_40))
(assert (= temp394_41 #x0000000000000001))
(assert (= temp394_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp394_41 temp394_42)))
(assert (= temp394_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp394_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp394_44 #x0000000000000000))
(assert (= var3740377 temp394_44))
(assert (= temp394_45 #x0000000000000002))
(assert (= var69143 temp394_45))
(assert (= temp394_47 #x0000000000000001))
(assert (= temp394_46 temp394_47))
(assert (= temp394_49 #x0000000000000001))
(assert (= temp394_48 temp394_49))
(assert (= temp394_51 #x0000000000000003))
(assert (= temp394_50 temp394_51))
(assert (= temp394_52 #x0000000000000001))
(assert (= var4212949 temp394_52))
(assert (= var4212950 var69143))
(assert (= temp394_54 #x0000000000000001))
(assert (= temp394_53 temp394_54))
(assert (= temp394_56 #x0000000000000001))
(assert (= temp394_55 temp394_56))
(assert (= temp394_58 #x0000000000000001))
(assert (= temp394_57 temp394_58))
(assert (= temp394_60 #x0000000000000001))
(assert (= temp394_59 temp394_60))
(assert (= temp394_62 #x0000000000000000))
(assert (= temp394_61 temp394_62))
(assert (= temp394_64 #x0000000000000001))
(assert (= temp394_63 temp394_64))
(assert (= var4868391 var69143))
(assert (= temp394_65 #x0000000000000002))
(assert (= var4983962 temp394_65))
(assert (= temp394_67 #x0000000000000001))
(assert (= temp394_66 temp394_67))
(assert (= temp394_69 #x0000000000000001))
(assert (= temp394_68 temp394_69))
(assert (= var5453295 var65913))
(assert (= temp394_71 #x0000000000000001))
(assert (= temp394_70 temp394_71))
(assert (= temp394_73 #x0000000000000001))
(assert (= temp394_72 temp394_73))
(assert (= temp394_75 #x0000000000000001))
(assert (= temp394_74 temp394_75))
(assert (= temp394_77 #x0000000000000001))
(assert (= temp394_76 temp394_77))
(assert (= temp394_79 #x0000000000000000))
(assert (= temp394_78 temp394_79))
(assert (= temp394_81 #x0000000000000001))
(assert (= temp394_80 temp394_81))
(assert (= var6375719 var69143))
(assert (= temp394_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp394_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp394_83 #x0000000000000001))
(assert (= var83534 temp394_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp394_84 #x0000000000000001))
(assert (= var6818808 temp394_84))
(assert (= var7801844 var69143))
(assert (= temp394_85 #x0000000000000001))
(assert (= var7801848 temp394_85))
(assert (= temp394_86 #x0000000000000000))
(assert (= var7801898 temp394_86))
(assert (= temp394_87 #x0000000000000000))
(assert (= var7801898 temp394_87))
(assert (= temp394_88 #x0000000000000001))
(assert (= var9062695 temp394_88))
(assert (= var9324839 var65913))
(model-add temp394_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp394_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp394_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp394_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp394_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp394_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp394_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




