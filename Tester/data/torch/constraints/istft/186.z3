(declare-fun temp393_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp393_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp393_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp393_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp393_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp393_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp393_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp393_8 () (_ BitVec 64))
(declare-fun temp393_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp393_10 () (_ BitVec 64))
(declare-fun temp393_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp393_12 () (_ BitVec 64))
(declare-fun temp393_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_14 () (_ BitVec 64))
(declare-fun temp393_15 () (_ BitVec 64))
(declare-fun temp393_16 () (_ BitVec 64))
(declare-fun temp393_17 () (_ BitVec 64))
(declare-fun temp393_18 () (_ BitVec 64))
(declare-fun temp393_19 () (_ BitVec 64))
(declare-fun temp393_20 () (_ BitVec 64))
(declare-fun temp393_21 () (_ BitVec 64))
(declare-fun temp393_22 () (_ BitVec 64))
(declare-fun temp393_23 () (_ BitVec 64))
(declare-fun temp393_24 () (_ BitVec 64))
(declare-fun temp393_25 () (_ BitVec 64))
(declare-fun temp393_26 () (_ BitVec 64))
(declare-fun temp393_27 () (_ BitVec 64))
(declare-fun temp393_28 () (_ BitVec 64))
(declare-fun temp393_29 () (_ BitVec 64))
(declare-fun temp393_31 () (_ BitVec 64))
(declare-fun temp393_30 () (_ BitVec 64))
(declare-fun temp393_32 () (_ BitVec 64))
(declare-fun temp393_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp393_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp393_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp393_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp393_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp393_39 () (_ BitVec 64))
(declare-fun temp393_38 () (_ BitVec 64))
(declare-fun temp393_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp393_41 () (_ BitVec 64))
(declare-fun temp393_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp393_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp393_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp393_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp393_47 () (_ BitVec 64))
(declare-fun temp393_46 () (_ BitVec 64))
(declare-fun temp393_49 () (_ BitVec 64))
(declare-fun temp393_48 () (_ BitVec 64))
(declare-fun temp393_51 () (_ BitVec 64))
(declare-fun temp393_50 () (_ BitVec 64))
(declare-fun temp393_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp393_54 () (_ BitVec 64))
(declare-fun temp393_53 () (_ BitVec 64))
(declare-fun temp393_56 () (_ BitVec 64))
(declare-fun temp393_55 () (_ BitVec 64))
(declare-fun temp393_58 () (_ BitVec 64))
(declare-fun temp393_57 () (_ BitVec 64))
(declare-fun temp393_60 () (_ BitVec 64))
(declare-fun temp393_59 () (_ BitVec 64))
(declare-fun temp393_62 () (_ BitVec 64))
(declare-fun temp393_61 () (_ BitVec 64))
(declare-fun temp393_64 () (_ BitVec 64))
(declare-fun temp393_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp393_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp393_67 () (_ BitVec 64))
(declare-fun temp393_66 () (_ BitVec 64))
(declare-fun temp393_69 () (_ BitVec 64))
(declare-fun temp393_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp393_71 () (_ BitVec 64))
(declare-fun temp393_70 () (_ BitVec 64))
(declare-fun temp393_73 () (_ BitVec 64))
(declare-fun temp393_72 () (_ BitVec 64))
(declare-fun temp393_75 () (_ BitVec 64))
(declare-fun temp393_74 () (_ BitVec 64))
(declare-fun temp393_77 () (_ BitVec 64))
(declare-fun temp393_76 () (_ BitVec 64))
(declare-fun temp393_79 () (_ BitVec 64))
(declare-fun temp393_78 () (_ BitVec 64))
(declare-fun temp393_81 () (_ BitVec 64))
(declare-fun temp393_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp393_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp393_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp393_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp393_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp393_86 () (_ BitVec 64))
(declare-fun var7801898 () (_ BitVec 64))
(declare-fun temp393_87 () (_ BitVec 64))
(declare-fun temp393_88 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun temp393_89 () (_ BitVec 64))
(declare-fun var9571482 () (_ BitVec 64))
(assert (= temp393_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp393_1)))
(assert (= temp393_2 #x0000000000000000))
(assert (= var1050945 temp393_2))
(assert (= temp393_3 #xffffffffffffffff))
(assert (= var67312 temp393_3))
(assert (= temp393_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp393_4)))
(assert (= temp393_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp393_5)))
(assert (= temp393_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp393_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp393_7 #x0000000000000000))
(assert (= var82187 temp393_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_8 #x0000000000000000))
(assert (= var82356 temp393_8))
(assert (= temp393_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp393_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_10 #x0000000000000001))
(assert (= var82528 temp393_10))
(assert (= temp393_11 #x0000000000000000))
(assert (= var65913 temp393_11))
(assert (= temp393_12 #x0000000000000000))
(assert (= temp393_13 temp393_12))
(assert (= temp393_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp393_13)))
(assert (= temp393_15 #x0000000000000001))
(assert (= temp393_16 temp393_15))
(assert (= temp393_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp393_16)))
(assert (= temp393_18 #x0000000000000002))
(assert (= temp393_19 temp393_18))
(assert (= temp393_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp393_19)))
(assert (= temp393_21 #x0000000000000003))
(assert (= temp393_22 temp393_21))
(assert (= temp393_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp393_22)))
(assert (= temp393_24 #x0000000000000004))
(assert (= temp393_25 temp393_24))
(assert (= temp393_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp393_25)))
(assert (= temp393_27 #x0000000000000005))
(assert (= temp393_28 temp393_27))
(assert (= temp393_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp393_28)))
(assert (= temp393_31 #x0000000000000000))
(assert (= temp393_30
   (ite (bvslt var65913 temp393_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp393_32 temp393_30))
(assert (= temp393_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp393_32)))
(assert (= var82530 temp393_33))
(assert (bvslt temp393_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp393_34 #x0000000000000001))
(assert (= var82531 temp393_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp393_35 #x0000000000000001))
(assert (= var82728 temp393_35))
(assert (= var1914351 var65913))
(assert (= temp393_36 #x0000000000000001))
(assert (= var2115797 temp393_36))
(assert (= temp393_37 #x0000000000000002))
(assert (= var2115798 temp393_37))
(assert (= temp393_39 #x0000000000000000))
(assert (= temp393_38 temp393_39))
(assert (= temp393_40 #x0000000000000000))
(assert (= var2628020 temp393_40))
(assert (= temp393_41 #x0000000000000001))
(assert (= temp393_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp393_41 temp393_42)))
(assert (= temp393_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp393_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp393_44 #x0000000000000000))
(assert (= var3740377 temp393_44))
(assert (= temp393_45 #x0000000000000002))
(assert (= var69143 temp393_45))
(assert (= temp393_47 #x0000000000000001))
(assert (= temp393_46 temp393_47))
(assert (= temp393_49 #x0000000000000001))
(assert (= temp393_48 temp393_49))
(assert (= temp393_51 #x0000000000000003))
(assert (= temp393_50 temp393_51))
(assert (= temp393_52 #x0000000000000001))
(assert (= var4212949 temp393_52))
(assert (= var4212950 var69143))
(assert (= temp393_54 #x0000000000000001))
(assert (= temp393_53 temp393_54))
(assert (= temp393_56 #x0000000000000001))
(assert (= temp393_55 temp393_56))
(assert (= temp393_58 #x0000000000000001))
(assert (= temp393_57 temp393_58))
(assert (= temp393_60 #x0000000000000001))
(assert (= temp393_59 temp393_60))
(assert (= temp393_62 #x0000000000000000))
(assert (= temp393_61 temp393_62))
(assert (= temp393_64 #x0000000000000001))
(assert (= temp393_63 temp393_64))
(assert (= var4868391 var69143))
(assert (= temp393_65 #x0000000000000002))
(assert (= var4983962 temp393_65))
(assert (= temp393_67 #x0000000000000001))
(assert (= temp393_66 temp393_67))
(assert (= temp393_69 #x0000000000000001))
(assert (= temp393_68 temp393_69))
(assert (= var5453295 var65913))
(assert (= temp393_71 #x0000000000000001))
(assert (= temp393_70 temp393_71))
(assert (= temp393_73 #x0000000000000001))
(assert (= temp393_72 temp393_73))
(assert (= temp393_75 #x0000000000000001))
(assert (= temp393_74 temp393_75))
(assert (= temp393_77 #x0000000000000001))
(assert (= temp393_76 temp393_77))
(assert (= temp393_79 #x0000000000000000))
(assert (= temp393_78 temp393_79))
(assert (= temp393_81 #x0000000000000001))
(assert (= temp393_80 temp393_81))
(assert (= var6375719 var69143))
(assert (= temp393_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp393_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_83 #x0000000000000001))
(assert (= var83534 temp393_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp393_84 #x0000000000000001))
(assert (= var6818808 temp393_84))
(assert (= var7801844 var69143))
(assert (= temp393_85 #x0000000000000001))
(assert (= var7801848 temp393_85))
(assert (= temp393_86 #x0000000000000000))
(assert (= var7801898 temp393_86))
(assert (= temp393_87 #x0000000000000000))
(assert (= var7801898 temp393_87))
(assert (= temp393_88 #x0000000000000001))
(assert (= var9062695 temp393_88))
(assert (= var9324839 var65913))
(assert (= temp393_89 #x0000000000000000))
(assert (= var9571482 temp393_89))
(model-add temp393_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp393_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp393_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp393_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp393_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp393_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp393_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




