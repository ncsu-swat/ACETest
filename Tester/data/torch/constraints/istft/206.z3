(declare-fun temp438_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp438_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp438_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp438_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp438_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp438_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp438_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp438_8 () (_ BitVec 64))
(declare-fun temp438_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp438_10 () (_ BitVec 64))
(declare-fun temp438_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp438_12 () (_ BitVec 64))
(declare-fun temp438_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp438_14 () (_ BitVec 64))
(declare-fun temp438_15 () (_ BitVec 64))
(declare-fun temp438_16 () (_ BitVec 64))
(declare-fun temp438_17 () (_ BitVec 64))
(declare-fun temp438_18 () (_ BitVec 64))
(declare-fun temp438_19 () (_ BitVec 64))
(declare-fun temp438_20 () (_ BitVec 64))
(declare-fun temp438_21 () (_ BitVec 64))
(declare-fun temp438_22 () (_ BitVec 64))
(declare-fun temp438_23 () (_ BitVec 64))
(declare-fun temp438_24 () (_ BitVec 64))
(declare-fun temp438_25 () (_ BitVec 64))
(declare-fun temp438_26 () (_ BitVec 64))
(declare-fun temp438_27 () (_ BitVec 64))
(declare-fun temp438_28 () (_ BitVec 64))
(declare-fun temp438_29 () (_ BitVec 64))
(declare-fun temp438_31 () (_ BitVec 64))
(declare-fun temp438_30 () (_ BitVec 64))
(declare-fun temp438_32 () (_ BitVec 64))
(declare-fun temp438_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp438_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp438_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp438_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp438_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp438_39 () (_ BitVec 64))
(declare-fun temp438_38 () (_ BitVec 64))
(declare-fun temp438_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp438_41 () (_ BitVec 64))
(declare-fun temp438_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp438_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp438_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp438_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp438_47 () (_ BitVec 64))
(declare-fun temp438_46 () (_ BitVec 64))
(declare-fun temp438_49 () (_ BitVec 64))
(declare-fun temp438_48 () (_ BitVec 64))
(declare-fun temp438_51 () (_ BitVec 64))
(declare-fun temp438_50 () (_ BitVec 64))
(declare-fun temp438_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp438_54 () (_ BitVec 64))
(declare-fun temp438_53 () (_ BitVec 64))
(declare-fun temp438_56 () (_ BitVec 64))
(declare-fun temp438_55 () (_ BitVec 64))
(declare-fun temp438_58 () (_ BitVec 64))
(declare-fun temp438_57 () (_ BitVec 64))
(declare-fun temp438_60 () (_ BitVec 64))
(declare-fun temp438_59 () (_ BitVec 64))
(declare-fun temp438_62 () (_ BitVec 64))
(declare-fun temp438_61 () (_ BitVec 64))
(declare-fun temp438_64 () (_ BitVec 64))
(declare-fun temp438_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp438_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp438_67 () (_ BitVec 64))
(declare-fun temp438_66 () (_ BitVec 64))
(declare-fun temp438_69 () (_ BitVec 64))
(declare-fun temp438_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp438_71 () (_ BitVec 64))
(declare-fun temp438_70 () (_ BitVec 64))
(declare-fun temp438_73 () (_ BitVec 64))
(declare-fun temp438_72 () (_ BitVec 64))
(declare-fun temp438_75 () (_ BitVec 64))
(declare-fun temp438_74 () (_ BitVec 64))
(declare-fun temp438_77 () (_ BitVec 64))
(declare-fun temp438_76 () (_ BitVec 64))
(declare-fun temp438_79 () (_ BitVec 64))
(declare-fun temp438_78 () (_ BitVec 64))
(declare-fun temp438_81 () (_ BitVec 64))
(declare-fun temp438_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp438_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp438_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp438_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp438_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp438_86 () (_ BitVec 64))
(declare-fun var7801886 () (_ BitVec 64))
(declare-fun temp438_87 () (_ BitVec 64))
(declare-fun temp438_88 () (_ BitVec 64))
(declare-fun var9062695 () (_ BitVec 64))
(declare-fun temp438_89 () (_ BitVec 64))
(declare-fun var9374874 () (_ BitVec 64))
(assert (= temp438_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp438_1)))
(assert (= temp438_2 #x0000000000000000))
(assert (= var1050945 temp438_2))
(assert (= temp438_3 #xffffffffffffffff))
(assert (= var67312 temp438_3))
(assert (= temp438_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp438_4)))
(assert (= temp438_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp438_5)))
(assert (= temp438_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp438_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp438_7 #x0000000000000000))
(assert (= var82187 temp438_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp438_8 #x0000000000000000))
(assert (= var82356 temp438_8))
(assert (= temp438_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp438_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp438_10 #x0000000000000001))
(assert (= var82528 temp438_10))
(assert (= temp438_11 #x0000000000000000))
(assert (= var65913 temp438_11))
(assert (= temp438_12 #x0000000000000000))
(assert (= temp438_13 temp438_12))
(assert (= temp438_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp438_13)))
(assert (= temp438_15 #x0000000000000001))
(assert (= temp438_16 temp438_15))
(assert (= temp438_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp438_16)))
(assert (= temp438_18 #x0000000000000002))
(assert (= temp438_19 temp438_18))
(assert (= temp438_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp438_19)))
(assert (= temp438_21 #x0000000000000003))
(assert (= temp438_22 temp438_21))
(assert (= temp438_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp438_22)))
(assert (= temp438_24 #x0000000000000004))
(assert (= temp438_25 temp438_24))
(assert (= temp438_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp438_25)))
(assert (= temp438_27 #x0000000000000005))
(assert (= temp438_28 temp438_27))
(assert (= temp438_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp438_28)))
(assert (= temp438_31 #x0000000000000000))
(assert (= temp438_30
   (ite (bvslt var65913 temp438_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp438_32 temp438_30))
(assert (= temp438_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp438_32)))
(assert (= var82530 temp438_33))
(assert (bvslt temp438_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp438_34 #x0000000000000001))
(assert (= var82531 temp438_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp438_35 #x0000000000000001))
(assert (= var82728 temp438_35))
(assert (= var1914351 var65913))
(assert (= temp438_36 #x0000000000000001))
(assert (= var2115797 temp438_36))
(assert (= temp438_37 #x0000000000000002))
(assert (= var2115798 temp438_37))
(assert (= temp438_39 #x0000000000000000))
(assert (= temp438_38 temp438_39))
(assert (= temp438_40 #x0000000000000000))
(assert (= var2628020 temp438_40))
(assert (= temp438_41 #x0000000000000001))
(assert (= temp438_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp438_41 temp438_42)))
(assert (= temp438_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp438_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp438_44 #x0000000000000000))
(assert (= var3740377 temp438_44))
(assert (= temp438_45 #x0000000000000002))
(assert (= var69143 temp438_45))
(assert (= temp438_47 #x0000000000000001))
(assert (= temp438_46 temp438_47))
(assert (= temp438_49 #x0000000000000001))
(assert (= temp438_48 temp438_49))
(assert (= temp438_51 #x0000000000000003))
(assert (= temp438_50 temp438_51))
(assert (= temp438_52 #x0000000000000001))
(assert (= var4212949 temp438_52))
(assert (= var4212950 var69143))
(assert (= temp438_54 #x0000000000000001))
(assert (= temp438_53 temp438_54))
(assert (= temp438_56 #x0000000000000001))
(assert (= temp438_55 temp438_56))
(assert (= temp438_58 #x0000000000000001))
(assert (= temp438_57 temp438_58))
(assert (= temp438_60 #x0000000000000001))
(assert (= temp438_59 temp438_60))
(assert (= temp438_62 #x0000000000000000))
(assert (= temp438_61 temp438_62))
(assert (= temp438_64 #x0000000000000001))
(assert (= temp438_63 temp438_64))
(assert (= var4868391 var69143))
(assert (= temp438_65 #x0000000000000002))
(assert (= var4983962 temp438_65))
(assert (= temp438_67 #x0000000000000001))
(assert (= temp438_66 temp438_67))
(assert (= temp438_69 #x0000000000000001))
(assert (= temp438_68 temp438_69))
(assert (= var5453295 var65913))
(assert (= temp438_71 #x0000000000000001))
(assert (= temp438_70 temp438_71))
(assert (= temp438_73 #x0000000000000001))
(assert (= temp438_72 temp438_73))
(assert (= temp438_75 #x0000000000000001))
(assert (= temp438_74 temp438_75))
(assert (= temp438_77 #x0000000000000001))
(assert (= temp438_76 temp438_77))
(assert (= temp438_79 #x0000000000000000))
(assert (= temp438_78 temp438_79))
(assert (= temp438_81 #x0000000000000001))
(assert (= temp438_80 temp438_81))
(assert (= var6375719 var69143))
(assert (= temp438_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp438_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp438_83 #x0000000000000001))
(assert (= var83534 temp438_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp438_84 #x0000000000000001))
(assert (= var6818808 temp438_84))
(assert (= var7801844 var69143))
(assert (= temp438_85 #x0000000000000001))
(assert (= var7801848 temp438_85))
(assert (= temp438_86 #x0000000000000000))
(assert (= var7801886 temp438_86))
(assert (= temp438_87 #x0000000000000000))
(assert (= var7801886 temp438_87))
(assert (= temp438_88 #x0000000000000001))
(assert (= var9062695 temp438_88))
(assert (= temp438_89 #x0000000000000000))
(assert (= var9374874 temp438_89))
(model-add temp438_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp438_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp438_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp438_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp438_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp438_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp438_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




