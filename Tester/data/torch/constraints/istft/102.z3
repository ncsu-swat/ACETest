(declare-fun temp198_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp198_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp198_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp198_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp198_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp198_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp198_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp198_8 () (_ BitVec 64))
(declare-fun temp198_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp198_10 () (_ BitVec 64))
(declare-fun temp198_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp198_12 () (_ BitVec 64))
(declare-fun temp198_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp198_14 () (_ BitVec 64))
(declare-fun temp198_15 () (_ BitVec 64))
(declare-fun temp198_16 () (_ BitVec 64))
(declare-fun temp198_17 () (_ BitVec 64))
(declare-fun temp198_18 () (_ BitVec 64))
(declare-fun temp198_19 () (_ BitVec 64))
(declare-fun temp198_20 () (_ BitVec 64))
(declare-fun temp198_21 () (_ BitVec 64))
(declare-fun temp198_22 () (_ BitVec 64))
(declare-fun temp198_23 () (_ BitVec 64))
(declare-fun temp198_24 () (_ BitVec 64))
(declare-fun temp198_25 () (_ BitVec 64))
(declare-fun temp198_26 () (_ BitVec 64))
(declare-fun temp198_27 () (_ BitVec 64))
(declare-fun temp198_28 () (_ BitVec 64))
(declare-fun temp198_29 () (_ BitVec 64))
(declare-fun temp198_31 () (_ BitVec 64))
(declare-fun temp198_30 () (_ BitVec 64))
(declare-fun temp198_32 () (_ BitVec 64))
(declare-fun temp198_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp198_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp198_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp198_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp198_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp198_39 () (_ BitVec 64))
(declare-fun temp198_38 () (_ BitVec 64))
(declare-fun temp198_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp198_41 () (_ BitVec 64))
(declare-fun temp198_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp198_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp198_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp198_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp198_47 () (_ BitVec 64))
(declare-fun temp198_46 () (_ BitVec 64))
(declare-fun temp198_49 () (_ BitVec 64))
(declare-fun temp198_48 () (_ BitVec 64))
(declare-fun temp198_51 () (_ BitVec 64))
(declare-fun temp198_50 () (_ BitVec 64))
(declare-fun temp198_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp198_54 () (_ BitVec 64))
(declare-fun temp198_53 () (_ BitVec 64))
(declare-fun temp198_56 () (_ BitVec 64))
(declare-fun temp198_55 () (_ BitVec 64))
(declare-fun temp198_58 () (_ BitVec 64))
(declare-fun temp198_57 () (_ BitVec 64))
(declare-fun temp198_60 () (_ BitVec 64))
(declare-fun temp198_59 () (_ BitVec 64))
(declare-fun temp198_62 () (_ BitVec 64))
(declare-fun temp198_61 () (_ BitVec 64))
(declare-fun temp198_64 () (_ BitVec 64))
(declare-fun temp198_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp198_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp198_67 () (_ BitVec 64))
(declare-fun temp198_66 () (_ BitVec 64))
(declare-fun temp198_69 () (_ BitVec 64))
(declare-fun temp198_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp198_71 () (_ BitVec 64))
(declare-fun temp198_70 () (_ BitVec 64))
(declare-fun temp198_73 () (_ BitVec 64))
(declare-fun temp198_72 () (_ BitVec 64))
(declare-fun temp198_75 () (_ BitVec 64))
(declare-fun temp198_74 () (_ BitVec 64))
(declare-fun temp198_77 () (_ BitVec 64))
(declare-fun temp198_76 () (_ BitVec 64))
(declare-fun temp198_79 () (_ BitVec 64))
(declare-fun temp198_78 () (_ BitVec 64))
(declare-fun temp198_81 () (_ BitVec 64))
(declare-fun temp198_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp198_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp198_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp198_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp198_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp198_86 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun temp198_87 () (_ BitVec 64))
(declare-fun var9440410 () (_ BitVec 64))
(assert (= temp198_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp198_1)))
(assert (= temp198_2 #x0000000000000000))
(assert (= var1050945 temp198_2))
(assert (= temp198_3 #xffffffffffffffff))
(assert (= var67312 temp198_3))
(assert (= temp198_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp198_4)))
(assert (= temp198_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp198_5)))
(assert (= temp198_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp198_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp198_7 #x0000000000000000))
(assert (= var82187 temp198_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_8 #x0000000000000000))
(assert (= var82356 temp198_8))
(assert (= temp198_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp198_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_10 #x0000000000000001))
(assert (= var82528 temp198_10))
(assert (= temp198_11 #x0000000000000000))
(assert (= var65913 temp198_11))
(assert (= temp198_12 #x0000000000000000))
(assert (= temp198_13 temp198_12))
(assert (= temp198_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp198_13)))
(assert (= temp198_15 #x0000000000000001))
(assert (= temp198_16 temp198_15))
(assert (= temp198_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp198_16)))
(assert (= temp198_18 #x0000000000000002))
(assert (= temp198_19 temp198_18))
(assert (= temp198_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp198_19)))
(assert (= temp198_21 #x0000000000000003))
(assert (= temp198_22 temp198_21))
(assert (= temp198_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp198_22)))
(assert (= temp198_24 #x0000000000000004))
(assert (= temp198_25 temp198_24))
(assert (= temp198_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp198_25)))
(assert (= temp198_27 #x0000000000000005))
(assert (= temp198_28 temp198_27))
(assert (= temp198_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp198_28)))
(assert (= temp198_31 #x0000000000000000))
(assert (= temp198_30
   (ite (bvslt var65913 temp198_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp198_32 temp198_30))
(assert (= temp198_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp198_32)))
(assert (= var82530 temp198_33))
(assert (bvslt temp198_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_34 #x0000000000000001))
(assert (= var82531 temp198_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp198_35 #x0000000000000001))
(assert (= var82728 temp198_35))
(assert (= var1914351 var65913))
(assert (= temp198_36 #x0000000000000001))
(assert (= var2115797 temp198_36))
(assert (= temp198_37 #x0000000000000002))
(assert (= var2115798 temp198_37))
(assert (= temp198_39 #x0000000000000000))
(assert (= temp198_38 temp198_39))
(assert (= temp198_40 #x0000000000000000))
(assert (= var2628020 temp198_40))
(assert (= temp198_41 #x0000000000000001))
(assert (= temp198_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp198_41 temp198_42)))
(assert (= temp198_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp198_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp198_44 #x0000000000000000))
(assert (= var3740377 temp198_44))
(assert (= temp198_45 #x0000000000000002))
(assert (= var69143 temp198_45))
(assert (= temp198_47 #x0000000000000001))
(assert (= temp198_46 temp198_47))
(assert (= temp198_49 #x0000000000000001))
(assert (= temp198_48 temp198_49))
(assert (= temp198_51 #x0000000000000003))
(assert (= temp198_50 temp198_51))
(assert (= temp198_52 #x0000000000000001))
(assert (= var4212949 temp198_52))
(assert (= var4212950 var69143))
(assert (= temp198_54 #x0000000000000001))
(assert (= temp198_53 temp198_54))
(assert (= temp198_56 #x0000000000000001))
(assert (= temp198_55 temp198_56))
(assert (= temp198_58 #x0000000000000001))
(assert (= temp198_57 temp198_58))
(assert (= temp198_60 #x0000000000000001))
(assert (= temp198_59 temp198_60))
(assert (= temp198_62 #x0000000000000000))
(assert (= temp198_61 temp198_62))
(assert (= temp198_64 #x0000000000000001))
(assert (= temp198_63 temp198_64))
(assert (= var4868391 var69143))
(assert (= temp198_65 #x0000000000000002))
(assert (= var4983962 temp198_65))
(assert (= temp198_67 #x0000000000000001))
(assert (= temp198_66 temp198_67))
(assert (= temp198_69 #x0000000000000001))
(assert (= temp198_68 temp198_69))
(assert (= var5453295 var65913))
(assert (= temp198_71 #x0000000000000001))
(assert (= temp198_70 temp198_71))
(assert (= temp198_73 #x0000000000000001))
(assert (= temp198_72 temp198_73))
(assert (= temp198_75 #x0000000000000001))
(assert (= temp198_74 temp198_75))
(assert (= temp198_77 #x0000000000000001))
(assert (= temp198_76 temp198_77))
(assert (= temp198_79 #x0000000000000000))
(assert (= temp198_78 temp198_79))
(assert (= temp198_81 #x0000000000000001))
(assert (= temp198_80 temp198_81))
(assert (= var6375719 var69143))
(assert (= temp198_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp198_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp198_83 #x0000000000000001))
(assert (= var83534 temp198_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp198_84 #x0000000000000001))
(assert (= var6818808 temp198_84))
(assert (= var7801844 var69143))
(assert (= temp198_85 #x0000000000000001))
(assert (= var7801848 temp198_85))
(assert (= temp198_86 #x0000000000000001))
(assert (= var9128231 temp198_86))
(assert (= temp198_87 #x0000000000000000))
(assert (= var9440410 temp198_87))
(model-add temp198_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp198_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp198_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp198_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp198_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp198_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp198_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



