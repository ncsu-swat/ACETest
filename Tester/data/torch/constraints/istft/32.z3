(declare-fun temp61_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp61_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp61_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp61_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp61_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp61_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp61_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp61_8 () (_ BitVec 64))
(declare-fun temp61_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp61_10 () (_ BitVec 64))
(declare-fun temp61_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp61_12 () (_ BitVec 64))
(declare-fun temp61_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_14 () (_ BitVec 64))
(declare-fun temp61_15 () (_ BitVec 64))
(declare-fun temp61_16 () (_ BitVec 64))
(declare-fun temp61_17 () (_ BitVec 64))
(declare-fun temp61_18 () (_ BitVec 64))
(declare-fun temp61_19 () (_ BitVec 64))
(declare-fun temp61_20 () (_ BitVec 64))
(declare-fun temp61_21 () (_ BitVec 64))
(declare-fun temp61_22 () (_ BitVec 64))
(declare-fun temp61_23 () (_ BitVec 64))
(declare-fun temp61_24 () (_ BitVec 64))
(declare-fun temp61_25 () (_ BitVec 64))
(declare-fun temp61_26 () (_ BitVec 64))
(declare-fun temp61_27 () (_ BitVec 64))
(declare-fun temp61_28 () (_ BitVec 64))
(declare-fun temp61_29 () (_ BitVec 64))
(declare-fun temp61_31 () (_ BitVec 64))
(declare-fun temp61_30 () (_ BitVec 64))
(declare-fun temp61_32 () (_ BitVec 64))
(declare-fun temp61_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp61_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp61_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp61_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp61_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp61_39 () (_ BitVec 64))
(declare-fun temp61_38 () (_ BitVec 64))
(declare-fun temp61_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp61_41 () (_ BitVec 64))
(declare-fun temp61_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp61_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp61_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp61_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp61_47 () (_ BitVec 64))
(declare-fun temp61_46 () (_ BitVec 64))
(declare-fun temp61_49 () (_ BitVec 64))
(declare-fun temp61_48 () (_ BitVec 64))
(declare-fun temp61_51 () (_ BitVec 64))
(declare-fun temp61_50 () (_ BitVec 64))
(declare-fun temp61_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp61_54 () (_ BitVec 64))
(declare-fun temp61_53 () (_ BitVec 64))
(declare-fun temp61_56 () (_ BitVec 64))
(declare-fun temp61_55 () (_ BitVec 64))
(declare-fun temp61_58 () (_ BitVec 64))
(declare-fun temp61_57 () (_ BitVec 64))
(declare-fun temp61_60 () (_ BitVec 64))
(declare-fun temp61_59 () (_ BitVec 64))
(declare-fun temp61_62 () (_ BitVec 64))
(declare-fun temp61_61 () (_ BitVec 64))
(declare-fun temp61_64 () (_ BitVec 64))
(declare-fun temp61_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp61_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp61_67 () (_ BitVec 64))
(declare-fun temp61_66 () (_ BitVec 64))
(declare-fun temp61_69 () (_ BitVec 64))
(declare-fun temp61_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp61_71 () (_ BitVec 64))
(declare-fun temp61_70 () (_ BitVec 64))
(declare-fun temp61_73 () (_ BitVec 64))
(declare-fun temp61_72 () (_ BitVec 64))
(declare-fun temp61_75 () (_ BitVec 64))
(declare-fun temp61_74 () (_ BitVec 64))
(declare-fun temp61_77 () (_ BitVec 64))
(declare-fun temp61_76 () (_ BitVec 64))
(declare-fun temp61_79 () (_ BitVec 64))
(declare-fun temp61_78 () (_ BitVec 64))
(declare-fun temp61_81 () (_ BitVec 64))
(declare-fun temp61_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp61_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp61_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp61_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp61_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp61_86 () (_ BitVec 64))
(declare-fun var7867434 () (_ BitVec 64))
(declare-fun temp61_87 () (_ BitVec 64))
(declare-fun temp61_88 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp61_89 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp61_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp61_1)))
(assert (= temp61_2 #x0000000000000000))
(assert (= var1050945 temp61_2))
(assert (= temp61_3 #xffffffffffffffff))
(assert (= var67312 temp61_3))
(assert (= temp61_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp61_4)))
(assert (= temp61_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp61_5)))
(assert (= temp61_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp61_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp61_7 #x0000000000000000))
(assert (= var82187 temp61_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_8 #x0000000000000000))
(assert (= var82356 temp61_8))
(assert (= temp61_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp61_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_10 #x0000000000000001))
(assert (= var82528 temp61_10))
(assert (= temp61_11 #x0000000000000000))
(assert (= var65913 temp61_11))
(assert (= temp61_12 #x0000000000000000))
(assert (= temp61_13 temp61_12))
(assert (= temp61_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp61_13)))
(assert (= temp61_15 #x0000000000000001))
(assert (= temp61_16 temp61_15))
(assert (= temp61_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp61_16)))
(assert (= temp61_18 #x0000000000000002))
(assert (= temp61_19 temp61_18))
(assert (= temp61_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp61_19)))
(assert (= temp61_21 #x0000000000000003))
(assert (= temp61_22 temp61_21))
(assert (= temp61_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp61_22)))
(assert (= temp61_24 #x0000000000000004))
(assert (= temp61_25 temp61_24))
(assert (= temp61_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp61_25)))
(assert (= temp61_27 #x0000000000000005))
(assert (= temp61_28 temp61_27))
(assert (= temp61_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp61_28)))
(assert (= temp61_31 #x0000000000000000))
(assert (= temp61_30
   (ite (bvslt var65913 temp61_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp61_32 temp61_30))
(assert (= temp61_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp61_32)))
(assert (= var82530 temp61_33))
(assert (bvslt temp61_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_34 #x0000000000000001))
(assert (= var82531 temp61_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_35 #x0000000000000001))
(assert (= var82728 temp61_35))
(assert (= var1914351 var65913))
(assert (= temp61_36 #x0000000000000001))
(assert (= var2115797 temp61_36))
(assert (= temp61_37 #x0000000000000002))
(assert (= var2115798 temp61_37))
(assert (= temp61_39 #x0000000000000000))
(assert (= temp61_38 temp61_39))
(assert (= temp61_40 #x0000000000000000))
(assert (= var2628020 temp61_40))
(assert (= temp61_41 #x0000000000000001))
(assert (= temp61_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp61_41 temp61_42)))
(assert (= temp61_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp61_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp61_44 #x0000000000000000))
(assert (= var3740377 temp61_44))
(assert (= temp61_45 #x0000000000000002))
(assert (= var69143 temp61_45))
(assert (= temp61_47 #x0000000000000001))
(assert (= temp61_46 temp61_47))
(assert (= temp61_49 #x0000000000000001))
(assert (= temp61_48 temp61_49))
(assert (= temp61_51 #x0000000000000003))
(assert (= temp61_50 temp61_51))
(assert (= temp61_52 #x0000000000000001))
(assert (= var4212949 temp61_52))
(assert (= var4212950 var69143))
(assert (= temp61_54 #x0000000000000001))
(assert (= temp61_53 temp61_54))
(assert (= temp61_56 #x0000000000000001))
(assert (= temp61_55 temp61_56))
(assert (= temp61_58 #x0000000000000001))
(assert (= temp61_57 temp61_58))
(assert (= temp61_60 #x0000000000000001))
(assert (= temp61_59 temp61_60))
(assert (= temp61_62 #x0000000000000000))
(assert (= temp61_61 temp61_62))
(assert (= temp61_64 #x0000000000000001))
(assert (= temp61_63 temp61_64))
(assert (= var4868391 var69143))
(assert (= temp61_65 #x0000000000000002))
(assert (= var4983962 temp61_65))
(assert (= temp61_67 #x0000000000000001))
(assert (= temp61_66 temp61_67))
(assert (= temp61_69 #x0000000000000001))
(assert (= temp61_68 temp61_69))
(assert (= var5453295 var65913))
(assert (= temp61_71 #x0000000000000001))
(assert (= temp61_70 temp61_71))
(assert (= temp61_73 #x0000000000000001))
(assert (= temp61_72 temp61_73))
(assert (= temp61_75 #x0000000000000001))
(assert (= temp61_74 temp61_75))
(assert (= temp61_77 #x0000000000000001))
(assert (= temp61_76 temp61_77))
(assert (= temp61_79 #x0000000000000000))
(assert (= temp61_78 temp61_79))
(assert (= temp61_81 #x0000000000000001))
(assert (= temp61_80 temp61_81))
(assert (= var6375719 var69143))
(assert (= temp61_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp61_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_83 #x0000000000000001))
(assert (= var83534 temp61_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp61_84 #x0000000000000001))
(assert (= var6818808 temp61_84))
(assert (= var7867380 var69143))
(assert (= temp61_85 #x0000000000000001))
(assert (= var7867384 temp61_85))
(assert (= temp61_86 #x0000000000000000))
(assert (= var7867434 temp61_86))
(assert (= temp61_87 #x0000000000000000))
(assert (= var7867434 temp61_87))
(assert (= temp61_88 #x0000000000000001))
(assert (= var9193767 temp61_88))
(assert (= var9455911 var65913))
(assert (= temp61_89 #x0000000000000000))
(assert (= var9702554 temp61_89))
(model-add temp61_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp61_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp61_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp61_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp61_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp61_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp61_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





