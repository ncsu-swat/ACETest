(declare-fun temp352_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp352_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp352_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp352_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp352_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp352_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp352_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp352_8 () (_ BitVec 64))
(declare-fun temp352_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp352_10 () (_ BitVec 64))
(declare-fun temp352_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp352_12 () (_ BitVec 64))
(declare-fun temp352_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp352_14 () (_ BitVec 64))
(declare-fun temp352_15 () (_ BitVec 64))
(declare-fun temp352_16 () (_ BitVec 64))
(declare-fun temp352_17 () (_ BitVec 64))
(declare-fun temp352_18 () (_ BitVec 64))
(declare-fun temp352_19 () (_ BitVec 64))
(declare-fun temp352_20 () (_ BitVec 64))
(declare-fun temp352_21 () (_ BitVec 64))
(declare-fun temp352_22 () (_ BitVec 64))
(declare-fun temp352_23 () (_ BitVec 64))
(declare-fun temp352_24 () (_ BitVec 64))
(declare-fun temp352_25 () (_ BitVec 64))
(declare-fun temp352_26 () (_ BitVec 64))
(declare-fun temp352_27 () (_ BitVec 64))
(declare-fun temp352_28 () (_ BitVec 64))
(declare-fun temp352_29 () (_ BitVec 64))
(declare-fun temp352_31 () (_ BitVec 64))
(declare-fun temp352_30 () (_ BitVec 64))
(declare-fun temp352_32 () (_ BitVec 64))
(declare-fun temp352_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp352_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp352_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp352_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp352_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp352_39 () (_ BitVec 64))
(declare-fun temp352_38 () (_ BitVec 64))
(declare-fun temp352_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp352_41 () (_ BitVec 64))
(declare-fun temp352_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp352_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp352_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp352_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp352_47 () (_ BitVec 64))
(declare-fun temp352_46 () (_ BitVec 64))
(declare-fun temp352_49 () (_ BitVec 64))
(declare-fun temp352_48 () (_ BitVec 64))
(declare-fun temp352_51 () (_ BitVec 64))
(declare-fun temp352_50 () (_ BitVec 64))
(declare-fun temp352_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp352_54 () (_ BitVec 64))
(declare-fun temp352_53 () (_ BitVec 64))
(declare-fun temp352_56 () (_ BitVec 64))
(declare-fun temp352_55 () (_ BitVec 64))
(declare-fun temp352_58 () (_ BitVec 64))
(declare-fun temp352_57 () (_ BitVec 64))
(declare-fun temp352_60 () (_ BitVec 64))
(declare-fun temp352_59 () (_ BitVec 64))
(declare-fun temp352_62 () (_ BitVec 64))
(declare-fun temp352_61 () (_ BitVec 64))
(declare-fun temp352_64 () (_ BitVec 64))
(declare-fun temp352_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp352_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp352_67 () (_ BitVec 64))
(declare-fun temp352_66 () (_ BitVec 64))
(declare-fun temp352_69 () (_ BitVec 64))
(declare-fun temp352_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp352_71 () (_ BitVec 64))
(declare-fun temp352_70 () (_ BitVec 64))
(declare-fun temp352_73 () (_ BitVec 64))
(declare-fun temp352_72 () (_ BitVec 64))
(declare-fun temp352_75 () (_ BitVec 64))
(declare-fun temp352_74 () (_ BitVec 64))
(declare-fun temp352_77 () (_ BitVec 64))
(declare-fun temp352_76 () (_ BitVec 64))
(declare-fun temp352_79 () (_ BitVec 64))
(declare-fun temp352_78 () (_ BitVec 64))
(declare-fun temp352_81 () (_ BitVec 64))
(declare-fun temp352_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp352_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp352_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp352_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp352_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp352_86 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun temp352_88 () (_ BitVec 64))
(declare-fun temp352_87 () (_ BitVec 64))
(declare-fun temp352_89 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp352_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp352_1)))
(assert (= temp352_2 #x0000000000000000))
(assert (= var1050945 temp352_2))
(assert (= temp352_3 #xffffffffffffffff))
(assert (= var67312 temp352_3))
(assert (= temp352_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp352_4)))
(assert (= temp352_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp352_5)))
(assert (= temp352_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp352_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp352_7 #x0000000000000000))
(assert (= var82187 temp352_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_8 #x0000000000000000))
(assert (= var82356 temp352_8))
(assert (= temp352_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp352_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_10 #x0000000000000001))
(assert (= var82528 temp352_10))
(assert (= temp352_11 #x0000000000000000))
(assert (= var65913 temp352_11))
(assert (= temp352_12 #x0000000000000000))
(assert (= temp352_13 temp352_12))
(assert (= temp352_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp352_13)))
(assert (= temp352_15 #x0000000000000001))
(assert (= temp352_16 temp352_15))
(assert (= temp352_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp352_16)))
(assert (= temp352_18 #x0000000000000002))
(assert (= temp352_19 temp352_18))
(assert (= temp352_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp352_19)))
(assert (= temp352_21 #x0000000000000003))
(assert (= temp352_22 temp352_21))
(assert (= temp352_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp352_22)))
(assert (= temp352_24 #x0000000000000004))
(assert (= temp352_25 temp352_24))
(assert (= temp352_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp352_25)))
(assert (= temp352_27 #x0000000000000005))
(assert (= temp352_28 temp352_27))
(assert (= temp352_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp352_28)))
(assert (= temp352_31 #x0000000000000000))
(assert (= temp352_30
   (ite (bvslt var65913 temp352_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp352_32 temp352_30))
(assert (= temp352_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp352_32)))
(assert (= var82530 temp352_33))
(assert (bvslt temp352_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp352_34 #x0000000000000001))
(assert (= var82531 temp352_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp352_35 #x0000000000000001))
(assert (= var82728 temp352_35))
(assert (= var1914351 var65913))
(assert (= temp352_36 #x0000000000000001))
(assert (= var2115797 temp352_36))
(assert (= temp352_37 #x0000000000000002))
(assert (= var2115798 temp352_37))
(assert (= temp352_39 #x0000000000000000))
(assert (= temp352_38 temp352_39))
(assert (= temp352_40 #x0000000000000000))
(assert (= var2628020 temp352_40))
(assert (= temp352_41 #x0000000000000001))
(assert (= temp352_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp352_41 temp352_42)))
(assert (= temp352_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp352_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp352_44 #x0000000000000000))
(assert (= var3740377 temp352_44))
(assert (= temp352_45 #x0000000000000002))
(assert (= var69143 temp352_45))
(assert (= temp352_47 #x0000000000000001))
(assert (= temp352_46 temp352_47))
(assert (= temp352_49 #x0000000000000001))
(assert (= temp352_48 temp352_49))
(assert (= temp352_51 #x0000000000000003))
(assert (= temp352_50 temp352_51))
(assert (= temp352_52 #x0000000000000001))
(assert (= var4212949 temp352_52))
(assert (= var4212950 var69143))
(assert (= temp352_54 #x0000000000000001))
(assert (= temp352_53 temp352_54))
(assert (= temp352_56 #x0000000000000001))
(assert (= temp352_55 temp352_56))
(assert (= temp352_58 #x0000000000000001))
(assert (= temp352_57 temp352_58))
(assert (= temp352_60 #x0000000000000001))
(assert (= temp352_59 temp352_60))
(assert (= temp352_62 #x0000000000000000))
(assert (= temp352_61 temp352_62))
(assert (= temp352_64 #x0000000000000001))
(assert (= temp352_63 temp352_64))
(assert (= var4868391 var69143))
(assert (= temp352_65 #x0000000000000002))
(assert (= var4983962 temp352_65))
(assert (= temp352_67 #x0000000000000001))
(assert (= temp352_66 temp352_67))
(assert (= temp352_69 #x0000000000000001))
(assert (= temp352_68 temp352_69))
(assert (= var5453295 var65913))
(assert (= temp352_71 #x0000000000000001))
(assert (= temp352_70 temp352_71))
(assert (= temp352_73 #x0000000000000001))
(assert (= temp352_72 temp352_73))
(assert (= temp352_75 #x0000000000000001))
(assert (= temp352_74 temp352_75))
(assert (= temp352_77 #x0000000000000001))
(assert (= temp352_76 temp352_77))
(assert (= temp352_79 #x0000000000000000))
(assert (= temp352_78 temp352_79))
(assert (= temp352_81 #x0000000000000001))
(assert (= temp352_80 temp352_81))
(assert (= var6375719 var69143))
(assert (= temp352_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp352_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp352_83 #x0000000000000001))
(assert (= var83534 temp352_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp352_84 #x0000000000000001))
(assert (= var6818808 temp352_84))
(assert (= var7801844 var69143))
(assert (= temp352_85 #x0000000000000001))
(assert (= var7801848 temp352_85))
(assert (= temp352_86 #x0000000000000001))
(assert (= var9128231 temp352_86))
(assert (= var9390375 var65913))
(assert (= temp352_88 #x0000000000000001))
(assert (= temp352_87 temp352_88))
(assert (= temp352_89 #x0000000000000000))
(assert (= var9637018 temp352_89))
(model-add temp352_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp352_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp352_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp352_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp352_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp352_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp352_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




