(declare-fun temp384_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp384_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp384_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp384_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp384_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp384_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp384_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp384_8 () (_ BitVec 64))
(declare-fun temp384_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp384_10 () (_ BitVec 64))
(declare-fun temp384_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp384_12 () (_ BitVec 64))
(declare-fun temp384_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp384_14 () (_ BitVec 64))
(declare-fun temp384_15 () (_ BitVec 64))
(declare-fun temp384_16 () (_ BitVec 64))
(declare-fun temp384_17 () (_ BitVec 64))
(declare-fun temp384_18 () (_ BitVec 64))
(declare-fun temp384_19 () (_ BitVec 64))
(declare-fun temp384_20 () (_ BitVec 64))
(declare-fun temp384_21 () (_ BitVec 64))
(declare-fun temp384_22 () (_ BitVec 64))
(declare-fun temp384_23 () (_ BitVec 64))
(declare-fun temp384_24 () (_ BitVec 64))
(declare-fun temp384_25 () (_ BitVec 64))
(declare-fun temp384_26 () (_ BitVec 64))
(declare-fun temp384_27 () (_ BitVec 64))
(declare-fun temp384_28 () (_ BitVec 64))
(declare-fun temp384_29 () (_ BitVec 64))
(declare-fun temp384_31 () (_ BitVec 64))
(declare-fun temp384_30 () (_ BitVec 64))
(declare-fun temp384_32 () (_ BitVec 64))
(declare-fun temp384_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp384_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp384_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp384_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp384_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp384_39 () (_ BitVec 64))
(declare-fun temp384_38 () (_ BitVec 64))
(declare-fun temp384_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp384_41 () (_ BitVec 64))
(declare-fun temp384_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp384_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp384_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp384_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp384_47 () (_ BitVec 64))
(declare-fun temp384_46 () (_ BitVec 64))
(declare-fun temp384_49 () (_ BitVec 64))
(declare-fun temp384_48 () (_ BitVec 64))
(declare-fun temp384_51 () (_ BitVec 64))
(declare-fun temp384_50 () (_ BitVec 64))
(declare-fun temp384_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp384_54 () (_ BitVec 64))
(declare-fun temp384_53 () (_ BitVec 64))
(declare-fun temp384_56 () (_ BitVec 64))
(declare-fun temp384_55 () (_ BitVec 64))
(declare-fun temp384_58 () (_ BitVec 64))
(declare-fun temp384_57 () (_ BitVec 64))
(declare-fun temp384_60 () (_ BitVec 64))
(declare-fun temp384_59 () (_ BitVec 64))
(declare-fun temp384_62 () (_ BitVec 64))
(declare-fun temp384_61 () (_ BitVec 64))
(declare-fun temp384_64 () (_ BitVec 64))
(declare-fun temp384_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp384_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp384_67 () (_ BitVec 64))
(declare-fun temp384_66 () (_ BitVec 64))
(declare-fun temp384_69 () (_ BitVec 64))
(declare-fun temp384_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp384_71 () (_ BitVec 64))
(declare-fun temp384_70 () (_ BitVec 64))
(declare-fun temp384_73 () (_ BitVec 64))
(declare-fun temp384_72 () (_ BitVec 64))
(declare-fun temp384_75 () (_ BitVec 64))
(declare-fun temp384_74 () (_ BitVec 64))
(declare-fun temp384_77 () (_ BitVec 64))
(declare-fun temp384_76 () (_ BitVec 64))
(declare-fun temp384_79 () (_ BitVec 64))
(declare-fun temp384_78 () (_ BitVec 64))
(declare-fun temp384_81 () (_ BitVec 64))
(declare-fun temp384_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp384_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp384_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp384_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp384_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp384_86 () (_ BitVec 64))
(declare-fun var7801898 () (_ BitVec 64))
(declare-fun temp384_87 () (_ BitVec 64))
(declare-fun temp384_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(assert (= temp384_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp384_1)))
(assert (= temp384_2 #x0000000000000000))
(assert (= var1050945 temp384_2))
(assert (= temp384_3 #xffffffffffffffff))
(assert (= var67312 temp384_3))
(assert (= temp384_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp384_4)))
(assert (= temp384_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp384_5)))
(assert (= temp384_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp384_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp384_7 #x0000000000000000))
(assert (= var82187 temp384_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp384_8 #x0000000000000000))
(assert (= var82356 temp384_8))
(assert (= temp384_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp384_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp384_10 #x0000000000000001))
(assert (= var82528 temp384_10))
(assert (= temp384_11 #x0000000000000000))
(assert (= var65913 temp384_11))
(assert (= temp384_12 #x0000000000000000))
(assert (= temp384_13 temp384_12))
(assert (= temp384_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp384_13)))
(assert (= temp384_15 #x0000000000000001))
(assert (= temp384_16 temp384_15))
(assert (= temp384_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp384_16)))
(assert (= temp384_18 #x0000000000000002))
(assert (= temp384_19 temp384_18))
(assert (= temp384_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp384_19)))
(assert (= temp384_21 #x0000000000000003))
(assert (= temp384_22 temp384_21))
(assert (= temp384_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp384_22)))
(assert (= temp384_24 #x0000000000000004))
(assert (= temp384_25 temp384_24))
(assert (= temp384_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp384_25)))
(assert (= temp384_27 #x0000000000000005))
(assert (= temp384_28 temp384_27))
(assert (= temp384_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp384_28)))
(assert (= temp384_31 #x0000000000000000))
(assert (= temp384_30
   (ite (bvslt var65913 temp384_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp384_32 temp384_30))
(assert (= temp384_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp384_32)))
(assert (= var82530 temp384_33))
(assert (bvslt temp384_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp384_34 #x0000000000000001))
(assert (= var82531 temp384_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp384_35 #x0000000000000001))
(assert (= var82728 temp384_35))
(assert (= var1914351 var65913))
(assert (= temp384_36 #x0000000000000001))
(assert (= var2115797 temp384_36))
(assert (= temp384_37 #x0000000000000002))
(assert (= var2115798 temp384_37))
(assert (= temp384_39 #x0000000000000000))
(assert (= temp384_38 temp384_39))
(assert (= temp384_40 #x0000000000000000))
(assert (= var2628020 temp384_40))
(assert (= temp384_41 #x0000000000000001))
(assert (= temp384_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp384_41 temp384_42)))
(assert (= temp384_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp384_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp384_44 #x0000000000000000))
(assert (= var3740377 temp384_44))
(assert (= temp384_45 #x0000000000000002))
(assert (= var69143 temp384_45))
(assert (= temp384_47 #x0000000000000001))
(assert (= temp384_46 temp384_47))
(assert (= temp384_49 #x0000000000000001))
(assert (= temp384_48 temp384_49))
(assert (= temp384_51 #x0000000000000003))
(assert (= temp384_50 temp384_51))
(assert (= temp384_52 #x0000000000000001))
(assert (= var4212949 temp384_52))
(assert (= var4212950 var69143))
(assert (= temp384_54 #x0000000000000001))
(assert (= temp384_53 temp384_54))
(assert (= temp384_56 #x0000000000000001))
(assert (= temp384_55 temp384_56))
(assert (= temp384_58 #x0000000000000001))
(assert (= temp384_57 temp384_58))
(assert (= temp384_60 #x0000000000000001))
(assert (= temp384_59 temp384_60))
(assert (= temp384_62 #x0000000000000000))
(assert (= temp384_61 temp384_62))
(assert (= temp384_64 #x0000000000000001))
(assert (= temp384_63 temp384_64))
(assert (= var4868391 var69143))
(assert (= temp384_65 #x0000000000000002))
(assert (= var4983962 temp384_65))
(assert (= temp384_67 #x0000000000000001))
(assert (= temp384_66 temp384_67))
(assert (= temp384_69 #x0000000000000001))
(assert (= temp384_68 temp384_69))
(assert (= var5453295 var65913))
(assert (= temp384_71 #x0000000000000001))
(assert (= temp384_70 temp384_71))
(assert (= temp384_73 #x0000000000000001))
(assert (= temp384_72 temp384_73))
(assert (= temp384_75 #x0000000000000001))
(assert (= temp384_74 temp384_75))
(assert (= temp384_77 #x0000000000000001))
(assert (= temp384_76 temp384_77))
(assert (= temp384_79 #x0000000000000000))
(assert (= temp384_78 temp384_79))
(assert (= temp384_81 #x0000000000000001))
(assert (= temp384_80 temp384_81))
(assert (= var6375719 var69143))
(assert (= temp384_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp384_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp384_83 #x0000000000000001))
(assert (= var83534 temp384_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp384_84 #x0000000000000001))
(assert (= var6818808 temp384_84))
(assert (= var7801844 var69143))
(assert (= temp384_85 #x0000000000000001))
(assert (= var7801848 temp384_85))
(assert (= temp384_86 #x0000000000000000))
(assert (= var7801898 temp384_86))
(assert (= temp384_87 #x0000000000000000))
(assert (= var7801898 temp384_87))
(assert (= temp384_88 #x0000000000000001))
(assert (= var9128231 temp384_88))
(assert (= var9390375 var65913))
(model-add temp384_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp384_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp384_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp384_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp384_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp384_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp384_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




