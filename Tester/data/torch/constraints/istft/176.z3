(declare-fun temp381_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp381_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp381_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp381_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp381_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp381_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp381_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp381_8 () (_ BitVec 64))
(declare-fun temp381_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp381_10 () (_ BitVec 64))
(declare-fun temp381_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp381_12 () (_ BitVec 64))
(declare-fun temp381_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp381_14 () (_ BitVec 64))
(declare-fun temp381_15 () (_ BitVec 64))
(declare-fun temp381_16 () (_ BitVec 64))
(declare-fun temp381_17 () (_ BitVec 64))
(declare-fun temp381_18 () (_ BitVec 64))
(declare-fun temp381_19 () (_ BitVec 64))
(declare-fun temp381_20 () (_ BitVec 64))
(declare-fun temp381_21 () (_ BitVec 64))
(declare-fun temp381_22 () (_ BitVec 64))
(declare-fun temp381_23 () (_ BitVec 64))
(declare-fun temp381_24 () (_ BitVec 64))
(declare-fun temp381_25 () (_ BitVec 64))
(declare-fun temp381_26 () (_ BitVec 64))
(declare-fun temp381_27 () (_ BitVec 64))
(declare-fun temp381_28 () (_ BitVec 64))
(declare-fun temp381_29 () (_ BitVec 64))
(declare-fun temp381_31 () (_ BitVec 64))
(declare-fun temp381_30 () (_ BitVec 64))
(declare-fun temp381_32 () (_ BitVec 64))
(declare-fun temp381_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp381_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp381_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp381_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp381_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp381_39 () (_ BitVec 64))
(declare-fun temp381_38 () (_ BitVec 64))
(declare-fun temp381_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp381_41 () (_ BitVec 64))
(declare-fun temp381_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp381_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp381_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp381_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp381_47 () (_ BitVec 64))
(declare-fun temp381_46 () (_ BitVec 64))
(declare-fun temp381_49 () (_ BitVec 64))
(declare-fun temp381_48 () (_ BitVec 64))
(declare-fun temp381_51 () (_ BitVec 64))
(declare-fun temp381_50 () (_ BitVec 64))
(declare-fun temp381_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp381_54 () (_ BitVec 64))
(declare-fun temp381_53 () (_ BitVec 64))
(declare-fun temp381_56 () (_ BitVec 64))
(declare-fun temp381_55 () (_ BitVec 64))
(declare-fun temp381_58 () (_ BitVec 64))
(declare-fun temp381_57 () (_ BitVec 64))
(declare-fun temp381_60 () (_ BitVec 64))
(declare-fun temp381_59 () (_ BitVec 64))
(declare-fun temp381_62 () (_ BitVec 64))
(declare-fun temp381_61 () (_ BitVec 64))
(declare-fun temp381_64 () (_ BitVec 64))
(declare-fun temp381_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp381_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp381_67 () (_ BitVec 64))
(declare-fun temp381_66 () (_ BitVec 64))
(declare-fun temp381_69 () (_ BitVec 64))
(declare-fun temp381_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp381_71 () (_ BitVec 64))
(declare-fun temp381_70 () (_ BitVec 64))
(declare-fun temp381_73 () (_ BitVec 64))
(declare-fun temp381_72 () (_ BitVec 64))
(declare-fun temp381_75 () (_ BitVec 64))
(declare-fun temp381_74 () (_ BitVec 64))
(declare-fun temp381_77 () (_ BitVec 64))
(declare-fun temp381_76 () (_ BitVec 64))
(declare-fun temp381_79 () (_ BitVec 64))
(declare-fun temp381_78 () (_ BitVec 64))
(declare-fun temp381_81 () (_ BitVec 64))
(declare-fun temp381_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp381_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp381_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp381_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp381_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp381_86 () (_ BitVec 64))
(declare-fun var7801898 () (_ BitVec 64))
(declare-fun temp381_87 () (_ BitVec 64))
(declare-fun temp381_88 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun temp381_89 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp381_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp381_1)))
(assert (= temp381_2 #x0000000000000000))
(assert (= var1050945 temp381_2))
(assert (= temp381_3 #xffffffffffffffff))
(assert (= var67312 temp381_3))
(assert (= temp381_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp381_4)))
(assert (= temp381_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp381_5)))
(assert (= temp381_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp381_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp381_7 #x0000000000000000))
(assert (= var82187 temp381_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_8 #x0000000000000000))
(assert (= var82356 temp381_8))
(assert (= temp381_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp381_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_10 #x0000000000000001))
(assert (= var82528 temp381_10))
(assert (= temp381_11 #x0000000000000000))
(assert (= var65913 temp381_11))
(assert (= temp381_12 #x0000000000000000))
(assert (= temp381_13 temp381_12))
(assert (= temp381_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp381_13)))
(assert (= temp381_15 #x0000000000000001))
(assert (= temp381_16 temp381_15))
(assert (= temp381_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp381_16)))
(assert (= temp381_18 #x0000000000000002))
(assert (= temp381_19 temp381_18))
(assert (= temp381_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp381_19)))
(assert (= temp381_21 #x0000000000000003))
(assert (= temp381_22 temp381_21))
(assert (= temp381_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp381_22)))
(assert (= temp381_24 #x0000000000000004))
(assert (= temp381_25 temp381_24))
(assert (= temp381_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp381_25)))
(assert (= temp381_27 #x0000000000000005))
(assert (= temp381_28 temp381_27))
(assert (= temp381_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp381_28)))
(assert (= temp381_31 #x0000000000000000))
(assert (= temp381_30
   (ite (bvslt var65913 temp381_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp381_32 temp381_30))
(assert (= temp381_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp381_32)))
(assert (= var82530 temp381_33))
(assert (bvslt temp381_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp381_34 #x0000000000000001))
(assert (= var82531 temp381_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp381_35 #x0000000000000001))
(assert (= var82728 temp381_35))
(assert (= var1914351 var65913))
(assert (= temp381_36 #x0000000000000001))
(assert (= var2115797 temp381_36))
(assert (= temp381_37 #x0000000000000002))
(assert (= var2115798 temp381_37))
(assert (= temp381_39 #x0000000000000000))
(assert (= temp381_38 temp381_39))
(assert (= temp381_40 #x0000000000000000))
(assert (= var2628020 temp381_40))
(assert (= temp381_41 #x0000000000000001))
(assert (= temp381_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp381_41 temp381_42)))
(assert (= temp381_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp381_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp381_44 #x0000000000000000))
(assert (= var3740377 temp381_44))
(assert (= temp381_45 #x0000000000000002))
(assert (= var69143 temp381_45))
(assert (= temp381_47 #x0000000000000001))
(assert (= temp381_46 temp381_47))
(assert (= temp381_49 #x0000000000000001))
(assert (= temp381_48 temp381_49))
(assert (= temp381_51 #x0000000000000003))
(assert (= temp381_50 temp381_51))
(assert (= temp381_52 #x0000000000000001))
(assert (= var4212949 temp381_52))
(assert (= var4212950 var69143))
(assert (= temp381_54 #x0000000000000001))
(assert (= temp381_53 temp381_54))
(assert (= temp381_56 #x0000000000000001))
(assert (= temp381_55 temp381_56))
(assert (= temp381_58 #x0000000000000001))
(assert (= temp381_57 temp381_58))
(assert (= temp381_60 #x0000000000000001))
(assert (= temp381_59 temp381_60))
(assert (= temp381_62 #x0000000000000000))
(assert (= temp381_61 temp381_62))
(assert (= temp381_64 #x0000000000000001))
(assert (= temp381_63 temp381_64))
(assert (= var4868391 var69143))
(assert (= temp381_65 #x0000000000000002))
(assert (= var4983962 temp381_65))
(assert (= temp381_67 #x0000000000000001))
(assert (= temp381_66 temp381_67))
(assert (= temp381_69 #x0000000000000001))
(assert (= temp381_68 temp381_69))
(assert (= var5453295 var65913))
(assert (= temp381_71 #x0000000000000001))
(assert (= temp381_70 temp381_71))
(assert (= temp381_73 #x0000000000000001))
(assert (= temp381_72 temp381_73))
(assert (= temp381_75 #x0000000000000001))
(assert (= temp381_74 temp381_75))
(assert (= temp381_77 #x0000000000000001))
(assert (= temp381_76 temp381_77))
(assert (= temp381_79 #x0000000000000000))
(assert (= temp381_78 temp381_79))
(assert (= temp381_81 #x0000000000000001))
(assert (= temp381_80 temp381_81))
(assert (= var6375719 var69143))
(assert (= temp381_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp381_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_83 #x0000000000000001))
(assert (= var83534 temp381_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp381_84 #x0000000000000001))
(assert (= var6818808 temp381_84))
(assert (= var7801844 var69143))
(assert (= temp381_85 #x0000000000000001))
(assert (= var7801848 temp381_85))
(assert (= temp381_86 #x0000000000000000))
(assert (= var7801898 temp381_86))
(assert (= temp381_87 #x0000000000000000))
(assert (= var7801898 temp381_87))
(assert (= temp381_88 #x0000000000000001))
(assert (= var9128231 temp381_88))
(assert (= var9390375 var65913))
(assert (= temp381_89 #x0000000000000000))
(assert (= var9637018 temp381_89))
(model-add temp381_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp381_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp381_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp381_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp381_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp381_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp381_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




