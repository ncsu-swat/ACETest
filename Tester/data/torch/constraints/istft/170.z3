(declare-fun temp353_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp353_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp353_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp353_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp353_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp353_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp353_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp353_8 () (_ BitVec 64))
(declare-fun temp353_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp353_10 () (_ BitVec 64))
(declare-fun temp353_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp353_12 () (_ BitVec 64))
(declare-fun temp353_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_14 () (_ BitVec 64))
(declare-fun temp353_15 () (_ BitVec 64))
(declare-fun temp353_16 () (_ BitVec 64))
(declare-fun temp353_17 () (_ BitVec 64))
(declare-fun temp353_18 () (_ BitVec 64))
(declare-fun temp353_19 () (_ BitVec 64))
(declare-fun temp353_20 () (_ BitVec 64))
(declare-fun temp353_21 () (_ BitVec 64))
(declare-fun temp353_22 () (_ BitVec 64))
(declare-fun temp353_23 () (_ BitVec 64))
(declare-fun temp353_24 () (_ BitVec 64))
(declare-fun temp353_25 () (_ BitVec 64))
(declare-fun temp353_26 () (_ BitVec 64))
(declare-fun temp353_27 () (_ BitVec 64))
(declare-fun temp353_28 () (_ BitVec 64))
(declare-fun temp353_29 () (_ BitVec 64))
(declare-fun temp353_31 () (_ BitVec 64))
(declare-fun temp353_30 () (_ BitVec 64))
(declare-fun temp353_32 () (_ BitVec 64))
(declare-fun temp353_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp353_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp353_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp353_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp353_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp353_39 () (_ BitVec 64))
(declare-fun temp353_38 () (_ BitVec 64))
(declare-fun temp353_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp353_41 () (_ BitVec 64))
(declare-fun temp353_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp353_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp353_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp353_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp353_47 () (_ BitVec 64))
(declare-fun temp353_46 () (_ BitVec 64))
(declare-fun temp353_49 () (_ BitVec 64))
(declare-fun temp353_48 () (_ BitVec 64))
(declare-fun temp353_51 () (_ BitVec 64))
(declare-fun temp353_50 () (_ BitVec 64))
(declare-fun temp353_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp353_54 () (_ BitVec 64))
(declare-fun temp353_53 () (_ BitVec 64))
(declare-fun temp353_56 () (_ BitVec 64))
(declare-fun temp353_55 () (_ BitVec 64))
(declare-fun temp353_58 () (_ BitVec 64))
(declare-fun temp353_57 () (_ BitVec 64))
(declare-fun temp353_60 () (_ BitVec 64))
(declare-fun temp353_59 () (_ BitVec 64))
(declare-fun temp353_62 () (_ BitVec 64))
(declare-fun temp353_61 () (_ BitVec 64))
(declare-fun temp353_64 () (_ BitVec 64))
(declare-fun temp353_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp353_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp353_67 () (_ BitVec 64))
(declare-fun temp353_66 () (_ BitVec 64))
(declare-fun temp353_69 () (_ BitVec 64))
(declare-fun temp353_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp353_71 () (_ BitVec 64))
(declare-fun temp353_70 () (_ BitVec 64))
(declare-fun temp353_73 () (_ BitVec 64))
(declare-fun temp353_72 () (_ BitVec 64))
(declare-fun temp353_75 () (_ BitVec 64))
(declare-fun temp353_74 () (_ BitVec 64))
(declare-fun temp353_77 () (_ BitVec 64))
(declare-fun temp353_76 () (_ BitVec 64))
(declare-fun temp353_79 () (_ BitVec 64))
(declare-fun temp353_78 () (_ BitVec 64))
(declare-fun temp353_81 () (_ BitVec 64))
(declare-fun temp353_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp353_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp353_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp353_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7801844 () (_ BitVec 64))
(declare-fun temp353_85 () (_ BitVec 64))
(declare-fun var7801848 () (_ BitVec 64))
(declare-fun temp353_86 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun temp353_87 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp353_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp353_1)))
(assert (= temp353_2 #x0000000000000000))
(assert (= var1050945 temp353_2))
(assert (= temp353_3 #xffffffffffffffff))
(assert (= var67312 temp353_3))
(assert (= temp353_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp353_4)))
(assert (= temp353_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp353_5)))
(assert (= temp353_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp353_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp353_7 #x0000000000000000))
(assert (= var82187 temp353_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_8 #x0000000000000000))
(assert (= var82356 temp353_8))
(assert (= temp353_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp353_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_10 #x0000000000000001))
(assert (= var82528 temp353_10))
(assert (= temp353_11 #x0000000000000000))
(assert (= var65913 temp353_11))
(assert (= temp353_12 #x0000000000000000))
(assert (= temp353_13 temp353_12))
(assert (= temp353_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp353_13)))
(assert (= temp353_15 #x0000000000000001))
(assert (= temp353_16 temp353_15))
(assert (= temp353_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp353_16)))
(assert (= temp353_18 #x0000000000000002))
(assert (= temp353_19 temp353_18))
(assert (= temp353_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp353_19)))
(assert (= temp353_21 #x0000000000000003))
(assert (= temp353_22 temp353_21))
(assert (= temp353_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp353_22)))
(assert (= temp353_24 #x0000000000000004))
(assert (= temp353_25 temp353_24))
(assert (= temp353_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp353_25)))
(assert (= temp353_27 #x0000000000000005))
(assert (= temp353_28 temp353_27))
(assert (= temp353_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp353_28)))
(assert (= temp353_31 #x0000000000000000))
(assert (= temp353_30
   (ite (bvslt var65913 temp353_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp353_32 temp353_30))
(assert (= temp353_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp353_32)))
(assert (= var82530 temp353_33))
(assert (bvslt temp353_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp353_34 #x0000000000000001))
(assert (= var82531 temp353_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp353_35 #x0000000000000001))
(assert (= var82728 temp353_35))
(assert (= var1914351 var65913))
(assert (= temp353_36 #x0000000000000001))
(assert (= var2115797 temp353_36))
(assert (= temp353_37 #x0000000000000002))
(assert (= var2115798 temp353_37))
(assert (= temp353_39 #x0000000000000000))
(assert (= temp353_38 temp353_39))
(assert (= temp353_40 #x0000000000000000))
(assert (= var2628020 temp353_40))
(assert (= temp353_41 #x0000000000000001))
(assert (= temp353_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp353_41 temp353_42)))
(assert (= temp353_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp353_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp353_44 #x0000000000000000))
(assert (= var3740377 temp353_44))
(assert (= temp353_45 #x0000000000000002))
(assert (= var69143 temp353_45))
(assert (= temp353_47 #x0000000000000001))
(assert (= temp353_46 temp353_47))
(assert (= temp353_49 #x0000000000000001))
(assert (= temp353_48 temp353_49))
(assert (= temp353_51 #x0000000000000003))
(assert (= temp353_50 temp353_51))
(assert (= temp353_52 #x0000000000000001))
(assert (= var4212949 temp353_52))
(assert (= var4212950 var69143))
(assert (= temp353_54 #x0000000000000001))
(assert (= temp353_53 temp353_54))
(assert (= temp353_56 #x0000000000000001))
(assert (= temp353_55 temp353_56))
(assert (= temp353_58 #x0000000000000001))
(assert (= temp353_57 temp353_58))
(assert (= temp353_60 #x0000000000000001))
(assert (= temp353_59 temp353_60))
(assert (= temp353_62 #x0000000000000000))
(assert (= temp353_61 temp353_62))
(assert (= temp353_64 #x0000000000000001))
(assert (= temp353_63 temp353_64))
(assert (= var4868391 var69143))
(assert (= temp353_65 #x0000000000000002))
(assert (= var4983962 temp353_65))
(assert (= temp353_67 #x0000000000000001))
(assert (= temp353_66 temp353_67))
(assert (= temp353_69 #x0000000000000001))
(assert (= temp353_68 temp353_69))
(assert (= var5453295 var65913))
(assert (= temp353_71 #x0000000000000001))
(assert (= temp353_70 temp353_71))
(assert (= temp353_73 #x0000000000000001))
(assert (= temp353_72 temp353_73))
(assert (= temp353_75 #x0000000000000001))
(assert (= temp353_74 temp353_75))
(assert (= temp353_77 #x0000000000000001))
(assert (= temp353_76 temp353_77))
(assert (= temp353_79 #x0000000000000000))
(assert (= temp353_78 temp353_79))
(assert (= temp353_81 #x0000000000000001))
(assert (= temp353_80 temp353_81))
(assert (= var6375719 var69143))
(assert (= temp353_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp353_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_83 #x0000000000000001))
(assert (= var83534 temp353_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp353_84 #x0000000000000001))
(assert (= var6818808 temp353_84))
(assert (= var7801844 var69143))
(assert (= temp353_85 #x0000000000000001))
(assert (= var7801848 temp353_85))
(assert (= temp353_86 #x0000000000000001))
(assert (= var9128231 temp353_86))
(assert (= var9390375 var65913))
(assert (= temp353_87 #x0000000000000000))
(assert (= var9637018 temp353_87))
(model-add temp353_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp353_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp353_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp353_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp353_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp353_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp353_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))



