(declare-fun temp32_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp32_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp32_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp32_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp32_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp32_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp32_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp32_8 () (_ BitVec 64))
(declare-fun temp32_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp32_10 () (_ BitVec 64))
(declare-fun temp32_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp32_12 () (_ BitVec 64))
(declare-fun temp32_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_14 () (_ BitVec 64))
(declare-fun temp32_15 () (_ BitVec 64))
(declare-fun temp32_16 () (_ BitVec 64))
(declare-fun temp32_17 () (_ BitVec 64))
(declare-fun temp32_18 () (_ BitVec 64))
(declare-fun temp32_19 () (_ BitVec 64))
(declare-fun temp32_20 () (_ BitVec 64))
(declare-fun temp32_21 () (_ BitVec 64))
(declare-fun temp32_22 () (_ BitVec 64))
(declare-fun temp32_23 () (_ BitVec 64))
(declare-fun temp32_24 () (_ BitVec 64))
(declare-fun temp32_25 () (_ BitVec 64))
(declare-fun temp32_26 () (_ BitVec 64))
(declare-fun temp32_27 () (_ BitVec 64))
(declare-fun temp32_28 () (_ BitVec 64))
(declare-fun temp32_29 () (_ BitVec 64))
(declare-fun temp32_31 () (_ BitVec 64))
(declare-fun temp32_30 () (_ BitVec 64))
(declare-fun temp32_32 () (_ BitVec 64))
(declare-fun temp32_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp32_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp32_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp32_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp32_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp32_39 () (_ BitVec 64))
(declare-fun temp32_38 () (_ BitVec 64))
(declare-fun temp32_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp32_41 () (_ BitVec 64))
(declare-fun temp32_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp32_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp32_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp32_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp32_47 () (_ BitVec 64))
(declare-fun temp32_46 () (_ BitVec 64))
(declare-fun temp32_49 () (_ BitVec 64))
(declare-fun temp32_48 () (_ BitVec 64))
(declare-fun temp32_51 () (_ BitVec 64))
(declare-fun temp32_50 () (_ BitVec 64))
(declare-fun temp32_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp32_54 () (_ BitVec 64))
(declare-fun temp32_53 () (_ BitVec 64))
(declare-fun temp32_56 () (_ BitVec 64))
(declare-fun temp32_55 () (_ BitVec 64))
(declare-fun temp32_58 () (_ BitVec 64))
(declare-fun temp32_57 () (_ BitVec 64))
(declare-fun temp32_60 () (_ BitVec 64))
(declare-fun temp32_59 () (_ BitVec 64))
(declare-fun temp32_62 () (_ BitVec 64))
(declare-fun temp32_61 () (_ BitVec 64))
(declare-fun temp32_64 () (_ BitVec 64))
(declare-fun temp32_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp32_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp32_67 () (_ BitVec 64))
(declare-fun temp32_66 () (_ BitVec 64))
(declare-fun temp32_69 () (_ BitVec 64))
(declare-fun temp32_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp32_71 () (_ BitVec 64))
(declare-fun temp32_70 () (_ BitVec 64))
(declare-fun temp32_73 () (_ BitVec 64))
(declare-fun temp32_72 () (_ BitVec 64))
(declare-fun temp32_75 () (_ BitVec 64))
(declare-fun temp32_74 () (_ BitVec 64))
(declare-fun temp32_77 () (_ BitVec 64))
(declare-fun temp32_76 () (_ BitVec 64))
(declare-fun temp32_79 () (_ BitVec 64))
(declare-fun temp32_78 () (_ BitVec 64))
(declare-fun temp32_81 () (_ BitVec 64))
(declare-fun temp32_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp32_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp32_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp32_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp32_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp32_86 () (_ BitVec 64))
(declare-fun var9193767 () (_ BitVec 64))
(declare-fun var9455911 () (_ BitVec 64))
(declare-fun temp32_88 () (_ BitVec 64))
(declare-fun temp32_87 () (_ BitVec 64))
(declare-fun temp32_89 () (_ BitVec 64))
(declare-fun var9702554 () (_ BitVec 64))
(assert (= temp32_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp32_1)))
(assert (= temp32_2 #x0000000000000000))
(assert (= var1050945 temp32_2))
(assert (= temp32_3 #xffffffffffffffff))
(assert (= var67312 temp32_3))
(assert (= temp32_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp32_4)))
(assert (= temp32_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp32_5)))
(assert (= temp32_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp32_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp32_7 #x0000000000000000))
(assert (= var82187 temp32_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_8 #x0000000000000000))
(assert (= var82356 temp32_8))
(assert (= temp32_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp32_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_10 #x0000000000000001))
(assert (= var82528 temp32_10))
(assert (= temp32_11 #x0000000000000000))
(assert (= var65913 temp32_11))
(assert (= temp32_12 #x0000000000000000))
(assert (= temp32_13 temp32_12))
(assert (= temp32_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp32_13)))
(assert (= temp32_15 #x0000000000000001))
(assert (= temp32_16 temp32_15))
(assert (= temp32_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp32_16)))
(assert (= temp32_18 #x0000000000000002))
(assert (= temp32_19 temp32_18))
(assert (= temp32_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp32_19)))
(assert (= temp32_21 #x0000000000000003))
(assert (= temp32_22 temp32_21))
(assert (= temp32_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp32_22)))
(assert (= temp32_24 #x0000000000000004))
(assert (= temp32_25 temp32_24))
(assert (= temp32_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp32_25)))
(assert (= temp32_27 #x0000000000000005))
(assert (= temp32_28 temp32_27))
(assert (= temp32_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp32_28)))
(assert (= temp32_31 #x0000000000000000))
(assert (= temp32_30
   (ite (bvslt var65913 temp32_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp32_32 temp32_30))
(assert (= temp32_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp32_32)))
(assert (= var82530 temp32_33))
(assert (bvslt temp32_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_34 #x0000000000000001))
(assert (= var82531 temp32_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_35 #x0000000000000001))
(assert (= var82728 temp32_35))
(assert (= var1914351 var65913))
(assert (= temp32_36 #x0000000000000001))
(assert (= var2115797 temp32_36))
(assert (= temp32_37 #x0000000000000002))
(assert (= var2115798 temp32_37))
(assert (= temp32_39 #x0000000000000000))
(assert (= temp32_38 temp32_39))
(assert (= temp32_40 #x0000000000000000))
(assert (= var2628020 temp32_40))
(assert (= temp32_41 #x0000000000000001))
(assert (= temp32_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp32_41 temp32_42)))
(assert (= temp32_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp32_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp32_44 #x0000000000000000))
(assert (= var3740377 temp32_44))
(assert (= temp32_45 #x0000000000000002))
(assert (= var69143 temp32_45))
(assert (= temp32_47 #x0000000000000001))
(assert (= temp32_46 temp32_47))
(assert (= temp32_49 #x0000000000000001))
(assert (= temp32_48 temp32_49))
(assert (= temp32_51 #x0000000000000003))
(assert (= temp32_50 temp32_51))
(assert (= temp32_52 #x0000000000000001))
(assert (= var4212949 temp32_52))
(assert (= var4212950 var69143))
(assert (= temp32_54 #x0000000000000001))
(assert (= temp32_53 temp32_54))
(assert (= temp32_56 #x0000000000000001))
(assert (= temp32_55 temp32_56))
(assert (= temp32_58 #x0000000000000001))
(assert (= temp32_57 temp32_58))
(assert (= temp32_60 #x0000000000000001))
(assert (= temp32_59 temp32_60))
(assert (= temp32_62 #x0000000000000000))
(assert (= temp32_61 temp32_62))
(assert (= temp32_64 #x0000000000000001))
(assert (= temp32_63 temp32_64))
(assert (= var4868391 var69143))
(assert (= temp32_65 #x0000000000000002))
(assert (= var4983962 temp32_65))
(assert (= temp32_67 #x0000000000000001))
(assert (= temp32_66 temp32_67))
(assert (= temp32_69 #x0000000000000001))
(assert (= temp32_68 temp32_69))
(assert (= var5453295 var65913))
(assert (= temp32_71 #x0000000000000001))
(assert (= temp32_70 temp32_71))
(assert (= temp32_73 #x0000000000000001))
(assert (= temp32_72 temp32_73))
(assert (= temp32_75 #x0000000000000001))
(assert (= temp32_74 temp32_75))
(assert (= temp32_77 #x0000000000000001))
(assert (= temp32_76 temp32_77))
(assert (= temp32_79 #x0000000000000000))
(assert (= temp32_78 temp32_79))
(assert (= temp32_81 #x0000000000000001))
(assert (= temp32_80 temp32_81))
(assert (= var6375719 var69143))
(assert (= temp32_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp32_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_83 #x0000000000000001))
(assert (= var83534 temp32_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp32_84 #x0000000000000001))
(assert (= var6818808 temp32_84))
(assert (= var7867380 var69143))
(assert (= temp32_85 #x0000000000000001))
(assert (= var7867384 temp32_85))
(assert (= temp32_86 #x0000000000000001))
(assert (= var9193767 temp32_86))
(assert (= var9455911 var65913))
(assert (= temp32_88 #x0000000000000001))
(assert (= temp32_87 temp32_88))
(assert (= temp32_89 #x0000000000000000))
(assert (= var9702554 temp32_89))
(model-add temp32_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp32_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp32_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp32_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp32_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp32_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp32_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))





