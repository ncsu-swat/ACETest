(declare-fun temp502_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp502_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp502_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp502_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp502_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp502_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp502_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp502_8 () (_ BitVec 64))
(declare-fun temp502_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp502_10 () (_ BitVec 64))
(declare-fun temp502_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp502_12 () (_ BitVec 64))
(declare-fun temp502_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp502_14 () (_ BitVec 64))
(declare-fun temp502_15 () (_ BitVec 64))
(declare-fun temp502_16 () (_ BitVec 64))
(declare-fun temp502_17 () (_ BitVec 64))
(declare-fun temp502_18 () (_ BitVec 64))
(declare-fun temp502_19 () (_ BitVec 64))
(declare-fun temp502_20 () (_ BitVec 64))
(declare-fun temp502_21 () (_ BitVec 64))
(declare-fun temp502_22 () (_ BitVec 64))
(declare-fun temp502_23 () (_ BitVec 64))
(declare-fun temp502_24 () (_ BitVec 64))
(declare-fun temp502_25 () (_ BitVec 64))
(declare-fun temp502_26 () (_ BitVec 64))
(declare-fun temp502_27 () (_ BitVec 64))
(declare-fun temp502_28 () (_ BitVec 64))
(declare-fun temp502_29 () (_ BitVec 64))
(declare-fun temp502_31 () (_ BitVec 64))
(declare-fun temp502_30 () (_ BitVec 64))
(declare-fun temp502_32 () (_ BitVec 64))
(declare-fun temp502_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp502_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp502_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp502_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp502_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp502_39 () (_ BitVec 64))
(declare-fun temp502_38 () (_ BitVec 64))
(declare-fun temp502_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp502_41 () (_ BitVec 64))
(declare-fun temp502_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp502_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp502_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp502_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp502_47 () (_ BitVec 64))
(declare-fun temp502_46 () (_ BitVec 64))
(declare-fun temp502_49 () (_ BitVec 64))
(declare-fun temp502_48 () (_ BitVec 64))
(declare-fun temp502_51 () (_ BitVec 64))
(declare-fun temp502_50 () (_ BitVec 64))
(declare-fun temp502_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp502_54 () (_ BitVec 64))
(declare-fun temp502_53 () (_ BitVec 64))
(declare-fun temp502_56 () (_ BitVec 64))
(declare-fun temp502_55 () (_ BitVec 64))
(declare-fun temp502_58 () (_ BitVec 64))
(declare-fun temp502_57 () (_ BitVec 64))
(declare-fun temp502_60 () (_ BitVec 64))
(declare-fun temp502_59 () (_ BitVec 64))
(declare-fun temp502_62 () (_ BitVec 64))
(declare-fun temp502_61 () (_ BitVec 64))
(declare-fun temp502_64 () (_ BitVec 64))
(declare-fun temp502_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp502_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp502_67 () (_ BitVec 64))
(declare-fun temp502_66 () (_ BitVec 64))
(declare-fun temp502_69 () (_ BitVec 64))
(declare-fun temp502_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp502_71 () (_ BitVec 64))
(declare-fun temp502_70 () (_ BitVec 64))
(declare-fun temp502_73 () (_ BitVec 64))
(declare-fun temp502_72 () (_ BitVec 64))
(declare-fun temp502_75 () (_ BitVec 64))
(declare-fun temp502_74 () (_ BitVec 64))
(declare-fun temp502_77 () (_ BitVec 64))
(declare-fun temp502_76 () (_ BitVec 64))
(declare-fun temp502_79 () (_ BitVec 64))
(declare-fun temp502_78 () (_ BitVec 64))
(declare-fun temp502_81 () (_ BitVec 64))
(declare-fun temp502_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp502_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp502_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp502_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7736308 () (_ BitVec 64))
(declare-fun temp502_85 () (_ BitVec 64))
(declare-fun var7736312 () (_ BitVec 64))
(declare-fun temp502_86 () (_ BitVec 64))
(declare-fun var9128231 () (_ BitVec 64))
(declare-fun var9390375 () (_ BitVec 64))
(declare-fun temp502_88 () (_ BitVec 64))
(declare-fun temp502_87 () (_ BitVec 64))
(declare-fun temp502_89 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp502_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp502_1)))
(assert (= temp502_2 #x0000000000000000))
(assert (= var1050945 temp502_2))
(assert (= temp502_3 #xffffffffffffffff))
(assert (= var67312 temp502_3))
(assert (= temp502_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp502_4)))
(assert (= temp502_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp502_5)))
(assert (= temp502_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp502_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp502_7 #x0000000000000000))
(assert (= var82187 temp502_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp502_8 #x0000000000000000))
(assert (= var82356 temp502_8))
(assert (= temp502_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp502_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp502_10 #x0000000000000001))
(assert (= var82528 temp502_10))
(assert (= temp502_11 #x0000000000000000))
(assert (= var65913 temp502_11))
(assert (= temp502_12 #x0000000000000000))
(assert (= temp502_13 temp502_12))
(assert (= temp502_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp502_13)))
(assert (= temp502_15 #x0000000000000001))
(assert (= temp502_16 temp502_15))
(assert (= temp502_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp502_16)))
(assert (= temp502_18 #x0000000000000002))
(assert (= temp502_19 temp502_18))
(assert (= temp502_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp502_19)))
(assert (= temp502_21 #x0000000000000003))
(assert (= temp502_22 temp502_21))
(assert (= temp502_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp502_22)))
(assert (= temp502_24 #x0000000000000004))
(assert (= temp502_25 temp502_24))
(assert (= temp502_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp502_25)))
(assert (= temp502_27 #x0000000000000005))
(assert (= temp502_28 temp502_27))
(assert (= temp502_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp502_28)))
(assert (= temp502_31 #x0000000000000000))
(assert (= temp502_30
   (ite (bvslt var65913 temp502_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp502_32 temp502_30))
(assert (= temp502_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp502_32)))
(assert (= var82530 temp502_33))
(assert (bvslt temp502_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp502_34 #x0000000000000001))
(assert (= var82531 temp502_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp502_35 #x0000000000000001))
(assert (= var82728 temp502_35))
(assert (= var1914351 var65913))
(assert (= temp502_36 #x0000000000000001))
(assert (= var2115797 temp502_36))
(assert (= temp502_37 #x0000000000000002))
(assert (= var2115798 temp502_37))
(assert (= temp502_39 #x0000000000000000))
(assert (= temp502_38 temp502_39))
(assert (= temp502_40 #x0000000000000000))
(assert (= var2628020 temp502_40))
(assert (= temp502_41 #x0000000000000001))
(assert (= temp502_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp502_41 temp502_42)))
(assert (= temp502_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp502_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp502_44 #x0000000000000000))
(assert (= var3740377 temp502_44))
(assert (= temp502_45 #x0000000000000002))
(assert (= var69143 temp502_45))
(assert (= temp502_47 #x0000000000000001))
(assert (= temp502_46 temp502_47))
(assert (= temp502_49 #x0000000000000001))
(assert (= temp502_48 temp502_49))
(assert (= temp502_51 #x0000000000000003))
(assert (= temp502_50 temp502_51))
(assert (= temp502_52 #x0000000000000001))
(assert (= var4212949 temp502_52))
(assert (= var4212950 var69143))
(assert (= temp502_54 #x0000000000000001))
(assert (= temp502_53 temp502_54))
(assert (= temp502_56 #x0000000000000001))
(assert (= temp502_55 temp502_56))
(assert (= temp502_58 #x0000000000000001))
(assert (= temp502_57 temp502_58))
(assert (= temp502_60 #x0000000000000001))
(assert (= temp502_59 temp502_60))
(assert (= temp502_62 #x0000000000000000))
(assert (= temp502_61 temp502_62))
(assert (= temp502_64 #x0000000000000001))
(assert (= temp502_63 temp502_64))
(assert (= var4868391 var69143))
(assert (= temp502_65 #x0000000000000002))
(assert (= var4983962 temp502_65))
(assert (= temp502_67 #x0000000000000001))
(assert (= temp502_66 temp502_67))
(assert (= temp502_69 #x0000000000000001))
(assert (= temp502_68 temp502_69))
(assert (= var5453295 var65913))
(assert (= temp502_71 #x0000000000000001))
(assert (= temp502_70 temp502_71))
(assert (= temp502_73 #x0000000000000001))
(assert (= temp502_72 temp502_73))
(assert (= temp502_75 #x0000000000000001))
(assert (= temp502_74 temp502_75))
(assert (= temp502_77 #x0000000000000001))
(assert (= temp502_76 temp502_77))
(assert (= temp502_79 #x0000000000000000))
(assert (= temp502_78 temp502_79))
(assert (= temp502_81 #x0000000000000001))
(assert (= temp502_80 temp502_81))
(assert (= var6375719 var69143))
(assert (= temp502_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp502_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp502_83 #x0000000000000001))
(assert (= var83534 temp502_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp502_84 #x0000000000000001))
(assert (= var6818808 temp502_84))
(assert (= var7736308 var69143))
(assert (= temp502_85 #x0000000000000001))
(assert (= var7736312 temp502_85))
(assert (= temp502_86 #x0000000000000001))
(assert (= var9128231 temp502_86))
(assert (= var9390375 var65913))
(assert (= temp502_88 #x0000000000000001))
(assert (= temp502_87 temp502_88))
(assert (= temp502_89 #x0000000000000000))
(assert (= var9637018 temp502_89))
(model-add temp502_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp502_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp502_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp502_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp502_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp502_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp502_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




