(declare-fun temp8_1 () (_ BitVec 64))
(declare-fun var81157 () (_ BitVec 64))
(declare-fun ARGNAME_n_fft_NAMEEND () (_ BitVec 64))
(declare-fun temp8_2 () (_ BitVec 64))
(declare-fun var1050945 () (_ BitVec 64))
(declare-fun temp8_3 () (_ BitVec 64))
(declare-fun var67312 () (_ BitVec 64))
(declare-fun temp8_4 () (_ BitVec 64))
(declare-fun var81838 () (_ BitVec 64))
(declare-fun temp8_5 () (_ BitVec 64))
(declare-fun var81839 () (_ BitVec 64))
(declare-fun temp8_6 () (_ BitVec 64))
(declare-fun var82185 () (_ BitVec 64))
(declare-fun ARGNAME_hop_length_NAMEEND () (_ BitVec 64))
(declare-fun var82186 () (_ BitVec 64))
(declare-fun null () (_ BitVec 64))
(declare-fun temp8_7 () (_ BitVec 64))
(declare-fun var82187 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun var82356 () (_ BitVec 64))
(declare-fun temp8_8 () (_ BitVec 64))
(declare-fun temp8_9 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82528 () (_ BitVec 64))
(declare-fun temp8_10 () (_ BitVec 64))
(declare-fun temp8_11 () (_ BitVec 64))
(declare-fun var65913 () (_ BitVec 64))
(declare-fun temp8_12 () (_ BitVec 64))
(declare-fun temp8_13 () (_ BitVec 64))
(declare-fun ARGNAME_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_14 () (_ BitVec 64))
(declare-fun temp8_15 () (_ BitVec 64))
(declare-fun temp8_16 () (_ BitVec 64))
(declare-fun temp8_17 () (_ BitVec 64))
(declare-fun temp8_18 () (_ BitVec 64))
(declare-fun temp8_19 () (_ BitVec 64))
(declare-fun temp8_20 () (_ BitVec 64))
(declare-fun temp8_21 () (_ BitVec 64))
(declare-fun temp8_22 () (_ BitVec 64))
(declare-fun temp8_23 () (_ BitVec 64))
(declare-fun temp8_24 () (_ BitVec 64))
(declare-fun temp8_25 () (_ BitVec 64))
(declare-fun temp8_26 () (_ BitVec 64))
(declare-fun temp8_27 () (_ BitVec 64))
(declare-fun temp8_28 () (_ BitVec 64))
(declare-fun temp8_29 () (_ BitVec 64))
(declare-fun temp8_31 () (_ BitVec 64))
(declare-fun temp8_30 () (_ BitVec 64))
(declare-fun temp8_32 () (_ BitVec 64))
(declare-fun temp8_33 () (_ BitVec 64))
(declare-fun var82530 () (_ BitVec 64))
(declare-fun var82531 () (_ BitVec 64))
(declare-fun temp8_34 () (_ BitVec 64))
(declare-fun var82728 () (_ BitVec 64))
(declare-fun temp8_35 () (_ BitVec 64))
(declare-fun var1914351 () (_ BitVec 64))
(declare-fun temp8_36 () (_ BitVec 64))
(declare-fun var2115797 () (_ BitVec 64))
(declare-fun temp8_37 () (_ BitVec 64))
(declare-fun var2115798 () (_ BitVec 64))
(declare-fun temp8_39 () (_ BitVec 64))
(declare-fun temp8_38 () (_ BitVec 64))
(declare-fun temp8_40 () (_ BitVec 64))
(declare-fun var2628020 () (_ BitVec 64))
(declare-fun temp8_41 () (_ BitVec 64))
(declare-fun temp8_42 () (_ BitVec 64))
(declare-fun ARGNAME_normalized_NAMEEND () (_ BitVec 64))
(declare-fun var82862 () (_ BitVec 64))
(declare-fun temp8_43 () (_ BitVec 64))
(declare-fun ARGNAME_return_complex_NAMEEND () (_ BitVec 64))
(declare-fun var82911 () (_ BitVec 64))
(declare-fun var3740376 () (_ BitVec 64))
(declare-fun temp8_44 () (_ BitVec 64))
(declare-fun var3740377 () (_ BitVec 64))
(declare-fun temp8_45 () (_ BitVec 64))
(declare-fun var69143 () (_ BitVec 64))
(declare-fun temp8_47 () (_ BitVec 64))
(declare-fun temp8_46 () (_ BitVec 64))
(declare-fun temp8_49 () (_ BitVec 64))
(declare-fun temp8_48 () (_ BitVec 64))
(declare-fun temp8_51 () (_ BitVec 64))
(declare-fun temp8_50 () (_ BitVec 64))
(declare-fun temp8_52 () (_ BitVec 64))
(declare-fun var4212949 () (_ BitVec 64))
(declare-fun var4212950 () (_ BitVec 64))
(declare-fun temp8_54 () (_ BitVec 64))
(declare-fun temp8_53 () (_ BitVec 64))
(declare-fun temp8_56 () (_ BitVec 64))
(declare-fun temp8_55 () (_ BitVec 64))
(declare-fun temp8_58 () (_ BitVec 64))
(declare-fun temp8_57 () (_ BitVec 64))
(declare-fun temp8_60 () (_ BitVec 64))
(declare-fun temp8_59 () (_ BitVec 64))
(declare-fun temp8_62 () (_ BitVec 64))
(declare-fun temp8_61 () (_ BitVec 64))
(declare-fun temp8_64 () (_ BitVec 64))
(declare-fun temp8_63 () (_ BitVec 64))
(declare-fun var4868391 () (_ BitVec 64))
(declare-fun temp8_65 () (_ BitVec 64))
(declare-fun var4983962 () (_ BitVec 64))
(declare-fun temp8_67 () (_ BitVec 64))
(declare-fun temp8_66 () (_ BitVec 64))
(declare-fun temp8_69 () (_ BitVec 64))
(declare-fun temp8_68 () (_ BitVec 64))
(declare-fun var5453295 () (_ BitVec 64))
(declare-fun temp8_71 () (_ BitVec 64))
(declare-fun temp8_70 () (_ BitVec 64))
(declare-fun temp8_73 () (_ BitVec 64))
(declare-fun temp8_72 () (_ BitVec 64))
(declare-fun temp8_75 () (_ BitVec 64))
(declare-fun temp8_74 () (_ BitVec 64))
(declare-fun temp8_77 () (_ BitVec 64))
(declare-fun temp8_76 () (_ BitVec 64))
(declare-fun temp8_79 () (_ BitVec 64))
(declare-fun temp8_78 () (_ BitVec 64))
(declare-fun temp8_81 () (_ BitVec 64))
(declare-fun temp8_80 () (_ BitVec 64))
(declare-fun var6375719 () (_ BitVec 64))
(declare-fun temp8_82 () (_ BitVec 64))
(declare-fun ARGNAME_center_NAMEEND () (_ BitVec 64))
(declare-fun var83534 () (_ BitVec 64))
(declare-fun temp8_83 () (_ BitVec 64))
(declare-fun var83540 () (_ BitVec 64))
(declare-fun var6506824 () (_ BitVec 64))
(declare-fun var6818804 () (_ BitVec 64))
(declare-fun temp8_84 () (_ BitVec 64))
(declare-fun var6818808 () (_ BitVec 64))
(declare-fun var7867380 () (_ BitVec 64))
(declare-fun temp8_85 () (_ BitVec 64))
(declare-fun var7867384 () (_ BitVec 64))
(declare-fun temp8_86 () (_ BitVec 64))
(declare-fun var9324839 () (_ BitVec 64))
(declare-fun temp8_87 () (_ BitVec 64))
(declare-fun var9637018 () (_ BitVec 64))
(assert (= temp8_1 #x0000000000000002))
(assert (= var81157 (bvashr ARGNAME_n_fft_NAMEEND temp8_1)))
(assert (= temp8_2 #x0000000000000000))
(assert (= var1050945 temp8_2))
(assert (= temp8_3 #xffffffffffffffff))
(assert (= var67312 temp8_3))
(assert (= temp8_4 #x0000000000000002))
(assert (= var81838 (bvsdiv ARGNAME_n_fft_NAMEEND temp8_4)))
(assert (= temp8_5 #x0000000000000001))
(assert (= var81839 (bvadd var81838 temp8_5)))
(assert (= temp8_6 #x0000000000000001))
(assert (= var82185
   (ite (bvslt ARGNAME_hop_length_NAMEEND temp8_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82186
   (ite (bvsgt ARGNAME_hop_length_NAMEEND null)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82187 (bvor var82185 var82186)))
(assert (= temp8_7 #x0000000000000000))
(assert (= var82187 temp8_7))
(assert (= var82356
   (ite (bvsgt null ARGNAME_n_fft_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_8 #x0000000000000000))
(assert (= var82356 temp8_8))
(assert (= temp8_9 #x0000000000000001))
(assert (= var82528
   (ite (= ARGNAME_window_NAMEEND_DIM temp8_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_10 #x0000000000000001))
(assert (= var82528 temp8_10))
(assert (= temp8_11 #x0000000000000000))
(assert (= var65913 temp8_11))
(assert (= temp8_12 #x0000000000000000))
(assert (= temp8_13 temp8_12))
(assert (= temp8_14 (select ARGNAME_window_NAMEEND_DIMSIZE temp8_13)))
(assert (= temp8_15 #x0000000000000001))
(assert (= temp8_16 temp8_15))
(assert (= temp8_17 (select ARGNAME_window_NAMEEND_DIMSIZE temp8_16)))
(assert (= temp8_18 #x0000000000000002))
(assert (= temp8_19 temp8_18))
(assert (= temp8_20 (select ARGNAME_window_NAMEEND_DIMSIZE temp8_19)))
(assert (= temp8_21 #x0000000000000003))
(assert (= temp8_22 temp8_21))
(assert (= temp8_23 (select ARGNAME_window_NAMEEND_DIMSIZE temp8_22)))
(assert (= temp8_24 #x0000000000000004))
(assert (= temp8_25 temp8_24))
(assert (= temp8_26 (select ARGNAME_window_NAMEEND_DIMSIZE temp8_25)))
(assert (= temp8_27 #x0000000000000005))
(assert (= temp8_28 temp8_27))
(assert (= temp8_29 (select ARGNAME_window_NAMEEND_DIMSIZE temp8_28)))
(assert (= temp8_31 #x0000000000000000))
(assert (= temp8_30
   (ite (bvslt var65913 temp8_31)
        (bvadd ARGNAME_window_NAMEEND_DIM var65913)
        var65913)))
(assert (= temp8_32 temp8_30))
(assert (= temp8_33 (select ARGNAME_window_NAMEEND_DIMSIZE temp8_32)))
(assert (= var82530 temp8_33))
(assert (bvslt temp8_30 ARGNAME_window_NAMEEND_DIM))
(assert (= var82531 (ite (= var82530 null) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_34 #x0000000000000001))
(assert (= var82531 temp8_34))
(assert (= var82728
   (ite (= ARGNAME_n_fft_NAMEEND null) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_35 #x0000000000000001))
(assert (= var82728 temp8_35))
(assert (= var1914351 var65913))
(assert (= temp8_36 #x0000000000000001))
(assert (= var2115797 temp8_36))
(assert (= temp8_37 #x0000000000000002))
(assert (= var2115798 temp8_37))
(assert (= temp8_39 #x0000000000000000))
(assert (= temp8_38 temp8_39))
(assert (= temp8_40 #x0000000000000000))
(assert (= var2628020 temp8_40))
(assert (= temp8_41 #x0000000000000001))
(assert (= temp8_42 #x0000000000000002))
(assert (= var82862
   (ite (= ARGNAME_normalized_NAMEEND #x0000000000000001) temp8_41 temp8_42)))
(assert (= temp8_43 #x0000000000000001))
(assert (= ARGNAME_return_complex_NAMEEND temp8_43))
(assert (= var82911 var82862))
(assert (= var3740376 var82911))
(assert (= temp8_44 #x0000000000000000))
(assert (= var3740377 temp8_44))
(assert (= temp8_45 #x0000000000000002))
(assert (= var69143 temp8_45))
(assert (= temp8_47 #x0000000000000001))
(assert (= temp8_46 temp8_47))
(assert (= temp8_49 #x0000000000000001))
(assert (= temp8_48 temp8_49))
(assert (= temp8_51 #x0000000000000003))
(assert (= temp8_50 temp8_51))
(assert (= temp8_52 #x0000000000000001))
(assert (= var4212949 temp8_52))
(assert (= var4212950 var69143))
(assert (= temp8_54 #x0000000000000001))
(assert (= temp8_53 temp8_54))
(assert (= temp8_56 #x0000000000000001))
(assert (= temp8_55 temp8_56))
(assert (= temp8_58 #x0000000000000001))
(assert (= temp8_57 temp8_58))
(assert (= temp8_60 #x0000000000000001))
(assert (= temp8_59 temp8_60))
(assert (= temp8_62 #x0000000000000000))
(assert (= temp8_61 temp8_62))
(assert (= temp8_64 #x0000000000000001))
(assert (= temp8_63 temp8_64))
(assert (= var4868391 var69143))
(assert (= temp8_65 #x0000000000000002))
(assert (= var4983962 temp8_65))
(assert (= temp8_67 #x0000000000000001))
(assert (= temp8_66 temp8_67))
(assert (= temp8_69 #x0000000000000001))
(assert (= temp8_68 temp8_69))
(assert (= var5453295 var65913))
(assert (= temp8_71 #x0000000000000001))
(assert (= temp8_70 temp8_71))
(assert (= temp8_73 #x0000000000000001))
(assert (= temp8_72 temp8_73))
(assert (= temp8_75 #x0000000000000001))
(assert (= temp8_74 temp8_75))
(assert (= temp8_77 #x0000000000000001))
(assert (= temp8_76 temp8_77))
(assert (= temp8_79 #x0000000000000000))
(assert (= temp8_78 temp8_79))
(assert (= temp8_81 #x0000000000000001))
(assert (= temp8_80 temp8_81))
(assert (= var6375719 var69143))
(assert (= temp8_82 #x0000000000000000))
(assert (= var83534
   (ite (= ARGNAME_center_NAMEEND temp8_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_83 #x0000000000000001))
(assert (= var83534 temp8_83))
(assert (= var83540 var65913))
(assert (= var6506824 var83540))
(assert (= var6818804 var69143))
(assert (= temp8_84 #x0000000000000001))
(assert (= var6818808 temp8_84))
(assert (= var7867380 var69143))
(assert (= temp8_85 #x0000000000000001))
(assert (= var7867384 temp8_85))
(assert (= temp8_86 #x0000000000000001))
(assert (= var9324839 temp8_86))
(assert (= temp8_87 #x0000000000000000))
(assert (= var9637018 temp8_87))
(model-add temp8_1 () (_ BitVec 64) #x0000000000000002)
(model-add var81157
           ()
           (_ BitVec 64)
           (bvashr ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp8_2 () (_ BitVec 64) #x0000000000000000)
(model-add var1050945 () (_ BitVec 64) #x0000000000000000)
(model-add temp8_3 () (_ BitVec 64) #xffffffffffffffff)
(model-add var67312 () (_ BitVec 64) #xffffffffffffffff)
(model-add temp8_4 () (_ BitVec 64) #x0000000000000002)
(model-add var81838
           ()
           (_ BitVec 64)
           (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002))
(model-add temp8_5 () (_ BitVec 64) #x0000000000000001)
(model-add var81839
           ()
           (_ BitVec 64)
           (bvadd #x0000000000000001
                  (bvsdiv_i ARGNAME_n_fft_NAMEEND #x0000000000000002)))
(model-add temp8_6 () (_ BitVec 64) #x0000000000000001)
(model-add var82185
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000001 ARGNAME_hop_length_NAMEEND)
                #x0000000000000000
                #x0000000000000001))
(model-add var82186
           ()
           (_ BitVec 64)
           (ite (bvsle ARGNAME_hop_length_NAMEEND null)
                #x0000000000000000
                #x0000000000000001))
(model-add temp8_7 () (_ BitVec 64) #x0000000000000000)
(model-add var82187 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add null
           ()
           (_ BitVec 64)
           (ite (or k!0 (= ARGNAME_hop_length_NAMEEND #x8000000000000000))
                ARGNAME_hop_length_NAMEEND
                (bvsub ARGNAME_hop_length_NAMEEND #x0000000000000001)))




