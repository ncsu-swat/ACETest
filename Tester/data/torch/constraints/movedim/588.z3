(declare-fun temp588_1 () (_ BitVec 64))
(declare-fun var89147 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_source_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_destination_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp588_3 () (_ BitVec 64))
(declare-fun temp588_2 () (_ BitVec 64))
(declare-fun temp588_4 () (_ BitVec 64))
(declare-fun var201290 () (_ BitVec 64))
(declare-fun var201292 () (_ BitVec 64))
(declare-fun temp588_5 () (_ BitVec 64))
(declare-fun var461075 () (_ BitVec 64))
(declare-fun temp588_7 () (_ BitVec 64))
(declare-fun temp588_6 () (_ BitVec 64))
(declare-fun temp588_8 () (_ BitVec 64))
(declare-fun var856650 () (_ BitVec 64))
(declare-fun var856652 () (_ BitVec 64))
(declare-fun temp588_9 () (_ BitVec 64))
(declare-fun var1116435 () (_ BitVec 64))
(declare-fun temp588_11 () (_ BitVec 64))
(declare-fun temp588_10 () (_ BitVec 64))
(declare-fun var1577925 () (_ BitVec 64))
(declare-fun temp588_12 () (_ BitVec 64))
(declare-fun temp588_13 () (_ BitVec 64))
(declare-fun var1643466 () (_ BitVec 64))
(declare-fun temp588_15 () (_ BitVec 64))
(declare-fun temp588_14 () (_ BitVec 64))
(declare-fun var2298821 () (_ BitVec 64))
(declare-fun temp588_16 () (_ BitVec 64))
(declare-fun temp588_17 () (_ BitVec 64))
(declare-fun var2364362 () (_ BitVec 64))
(declare-fun temp588_18 () (_ BitVec 64))
(declare-fun var3019338 () (_ BitVec 64))
(declare-fun var3019340 () (_ BitVec 64))
(declare-fun temp588_19 () (_ BitVec 64))
(declare-fun var4461130 () (_ BitVec 64))
(declare-fun var4461132 () (_ BitVec 64))
(declare-fun temp588_20 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var89269 () (_ BitVec 64))
(declare-fun temp588_21 () (_ BitVec 64))
(declare-fun temp588_23 () (_ BitVec 64))
(declare-fun temp588_22 () (_ BitVec 64))
(declare-fun temp588_24 () (_ BitVec 64))
(declare-fun var5837386 () (_ BitVec 64))
(declare-fun var5837388 () (_ BitVec 64))
(declare-fun temp588_25 () (_ BitVec 64))
(declare-fun var6097171 () (_ BitVec 64))
(declare-fun temp588_27 () (_ BitVec 64))
(declare-fun temp588_26 () (_ BitVec 64))
(declare-fun temp588_28 () (_ BitVec 64))
(declare-fun var6492746 () (_ BitVec 64))
(declare-fun var6492748 () (_ BitVec 64))
(declare-fun temp588_29 () (_ BitVec 64))
(declare-fun var6752531 () (_ BitVec 64))
(declare-fun temp588_31 () (_ BitVec 64))
(declare-fun temp588_30 () (_ BitVec 64))
(declare-fun temp588_32 () (_ BitVec 64))
(declare-fun var7148106 () (_ BitVec 64))
(declare-fun var7148108 () (_ BitVec 64))
(declare-fun temp588_34 () (_ BitVec 64))
(declare-fun temp588_33 () (_ BitVec 64))
(declare-fun var8852421 () (_ BitVec 64))
(declare-fun temp588_35 () (_ BitVec 64))
(declare-fun temp588_36 () (_ BitVec 64))
(declare-fun var8917962 () (_ BitVec 64))
(declare-fun temp588_38 () (_ BitVec 64))
(declare-fun temp588_37 () (_ BitVec 64))
(declare-fun temp588_40 () (_ BitVec 64))
(declare-fun temp588_39 () (_ BitVec 64))
(declare-fun temp588_42 () (_ BitVec 64))
(declare-fun temp588_41 () (_ BitVec 64))
(declare-fun temp588_44 () (_ BitVec 64))
(declare-fun temp588_43 () (_ BitVec 64))
(declare-fun var89398 () (_ BitVec 64))
(declare-fun var10488697 () (_ BitVec 64))
(declare-fun temp588_46 () (_ BitVec 64))
(declare-fun temp588_45 () (_ BitVec 64))
(declare-fun var10554689 () (_ BitVec 64))
(declare-fun var10554690 () (_ BitVec 64))
(declare-fun temp588_47 () (_ BitVec 64))
(declare-fun temp588_48 () (_ BitVec 64))
(declare-fun var10620231 () (_ BitVec 64))
(declare-fun var10685778 () (_ BitVec 64))
(declare-fun var10488717 () (_ BitVec 64))
(assert (= var89147
   (ite (= ARGNAME_source_NAMEEND_LEN ARGNAME_destination_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_1 #x0000000000000001))
(assert (= var89147 temp588_1))
(assert (= temp588_3 #x0000000000000000))
(assert (= temp588_2 temp588_3))
(assert (= temp588_4 #x0000000000000005))
(assert (= var201290 temp588_4))
(assert (= var201292 var201290))
(assert (= temp588_5 #x0000000000000000))
(assert (= var461075 temp588_5))
(assert (= temp588_7 #x0000000000000000))
(assert (= temp588_6 temp588_7))
(assert (= temp588_8 #x0000000000000005))
(assert (= var856650 temp588_8))
(assert (= var856652 var856650))
(assert (= temp588_9 #x0000000000000000))
(assert (= var1116435 temp588_9))
(assert (= temp588_11 #x0000000000000000))
(assert (= temp588_10 temp588_11))
(assert (= var1577925
   (ite (bvslt temp588_10 ARGNAME_source_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_12
   (ite (= var1577925 #x0000000000000001) ARGNAME_source_NAMEEND_LEN temp588_10)))
(assert (= temp588_13 #x0000000000000000))
(assert (= var1643466 temp588_13))
(assert (= temp588_15 #x0000000000000000))
(assert (= temp588_14 temp588_15))
(assert (= var2298821
   (ite (bvslt temp588_14 ARGNAME_destination_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_16
   (ite (= var2298821 #x0000000000000001)
        ARGNAME_destination_NAMEEND_LEN
        temp588_14)))
(assert (= temp588_17 #x0000000000000000))
(assert (= var2364362 temp588_17))
(assert (= temp588_18 #x0000000000000005))
(assert (= var3019338 temp588_18))
(assert (= var3019340 var3019338))
(assert (= temp588_19 #x0000000000000005))
(assert (= var4461130 temp588_19))
(assert (= var4461132 var4461130))
(assert (= temp588_20 #x0000000000000000))
(assert (= var89269
   (ite (= ARGNAME_input_NAMEEND_DIM temp588_20)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_21 #x0000000000000000))
(assert (= var89269 temp588_21))
(assert (= temp588_23 #x0000000000000000))
(assert (= temp588_22 temp588_23))
(assert (= temp588_24 #x0000000000000005))
(assert (= var5837386 temp588_24))
(assert (= var5837388 var5837386))
(assert (= temp588_25 #x0000000000000000))
(assert (= var6097171 temp588_25))
(assert (= temp588_27 #x0000000000000000))
(assert (= temp588_26 temp588_27))
(assert (= temp588_28 #x0000000000000005))
(assert (= var6492746 temp588_28))
(assert (= var6492748 var6492746))
(assert (= temp588_29 #x0000000000000000))
(assert (= var6752531 temp588_29))
(assert (= temp588_31 #x0000000000000000))
(assert (= temp588_30 temp588_31))
(assert (= temp588_32 #x0000000000000005))
(assert (= var7148106 temp588_32))
(assert (= var7148108 var7148106))
(assert (= temp588_34 #x0000000000000000))
(assert (= temp588_33 temp588_34))
(assert (= var8852421
   (ite (bvslt temp588_33 ARGNAME_source_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_35
   (ite (= var8852421 #x0000000000000001) ARGNAME_source_NAMEEND_LEN temp588_33)))
(assert (= temp588_36 #x0000000000000000))
(assert (= var8917962 temp588_36))
(assert (= temp588_38 #xffffffffffffffff))
(assert (= temp588_37 temp588_38))
(assert (= temp588_40 #xffffffffffffffff))
(assert (= temp588_39 temp588_40))
(assert (= temp588_42 #xffffffffffffffff))
(assert (= temp588_41 temp588_42))
(assert (= temp588_44 #xffffffffffffffff))
(assert (= temp588_43 temp588_44))
(assert (= var89398 (bvsub ARGNAME_input_NAMEEND_DIM ARGNAME_source_NAMEEND_LEN)))
(assert (= var10488697 var89398))
(assert (= temp588_46 #x0000000000000000))
(assert (= temp588_45 temp588_46))
(assert (= var10554689 var10488697))
(assert (= var10554690
   (ite (bvslt temp588_45 var10554689) #x0000000000000001 #x0000000000000000)))
(assert (= temp588_47 (ite (= var10554690 #x0000000000000001) var10488697 temp588_45)))
(assert (= temp588_48 #x0000000000000000))
(assert (= var10620231 temp588_48))
(assert (= var10685778 var10620231))
(assert (= var10488717 var10685778))
(model-add temp588_1 () (_ BitVec 64) #x0000000000000001)
(model-add var89147 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_source_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_destination_NAMEEND_LEN
                (bvnot ARGNAME_destination_NAMEEND_LEN)))




