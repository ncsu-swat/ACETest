(declare-fun temp10458_1 () (_ BitVec 64))
(declare-fun temp10458_2 () (_ BitVec 64))
(declare-fun var82795 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10458_3 () (_ BitVec 64))
(declare-fun temp10458_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10458_5 () (_ BitVec 64))
(declare-fun temp10458_6 () (_ BitVec 64))
(declare-fun temp10458_7 () (_ BitVec 64))
(declare-fun temp10458_8 () (_ BitVec 64))
(declare-fun temp10458_9 () (_ BitVec 64))
(declare-fun temp10458_10 () (_ BitVec 64))
(declare-fun temp10458_11 () (_ BitVec 64))
(declare-fun temp10458_12 () (_ BitVec 64))
(declare-fun temp10458_13 () (_ BitVec 64))
(declare-fun temp10458_14 () (_ BitVec 64))
(declare-fun temp10458_15 () (_ BitVec 64))
(declare-fun temp10458_16 () (_ BitVec 64))
(declare-fun temp10458_17 () (_ BitVec 64))
(declare-fun temp10458_18 () (_ BitVec 64))
(declare-fun temp10458_19 () (_ BitVec 64))
(declare-fun temp10458_20 () (_ BitVec 64))
(declare-fun temp10458_21 () (_ BitVec 64))
(declare-fun var82808 () (_ BitVec 64))
(declare-fun temp10458_22 () (_ BitVec 64))
(declare-fun temp10458_23 () (_ BitVec 64))
(declare-fun var82809 () (_ BitVec 64))
(declare-fun temp10458_25 () (_ BitVec 64))
(declare-fun temp10458_24 () (_ BitVec 64))
(declare-fun temp10458_27 () (_ BitVec 64))
(declare-fun temp10458_26 () (_ BitVec 64))
(declare-fun ARGNAME_split_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var331074 () (_ BitVec 64))
(declare-fun temp10458_28 () (_ BitVec 64))
(declare-fun temp10458_29 () (_ BitVec 64))
(declare-fun var396615 () (_ BitVec 64))
(declare-fun var462162 () (_ BitVec 64))
(declare-fun var265101 () (_ BitVec 64))
(declare-fun temp10458_30 () (_ BitVec 64))
(declare-fun var999067 () (_ BitVec 64))
(declare-fun temp10458_31 () (_ BitVec 64))
(declare-fun var999116 () (_ BitVec 64))
(declare-fun temp10458_32 () (_ BitVec 64))
(declare-fun temp10458_33 () (_ BitVec 64))
(declare-fun var1249866 () (_ BitVec 64))
(declare-fun var1249868 () (_ BitVec 64))
(declare-fun temp10458_34 () (_ BitVec 64))
(declare-fun var1968812 () (_ BitVec 64))
(declare-fun temp10458_35 () (_ BitVec 64))
(declare-fun var2296492 () (_ BitVec 64))
(declare-fun temp10458_36 () (_ BitVec 64))
(declare-fun var2495050 () (_ BitVec 64))
(declare-fun var2495052 () (_ BitVec 64))
(declare-fun temp10458_37 () (_ BitVec 64))
(declare-fun var999233 () (_ BitVec 64))
(declare-fun temp10458_38 () (_ BitVec 64))
(declare-fun temp10458_39 () (_ BitVec 64))
(declare-fun var999297 () (_ BitVec 64))
(declare-fun var999309 () (_ BitVec 64))
(declare-fun temp10458_40 () (_ BitVec 64))
(declare-fun var3607212 () (_ BitVec 64))
(declare-fun temp10458_41 () (_ BitVec 64))
(declare-fun var999321 () (_ BitVec 64))
(declare-fun var999322 () (_ BitVec 64))
(declare-fun var999323 () (_ BitVec 64))
(declare-fun var999324 () (_ BitVec 64))
(declare-fun temp10458_42 () (_ BitVec 64))
(declare-fun var4132738 () (_ BitVec 64))
(declare-fun temp10458_43 () (_ BitVec 64))
(declare-fun var4209308 () (_ BitVec 64))
(declare-fun var4209309 () (_ BitVec 64))
(declare-fun var4209310 () (_ BitVec 64))
(declare-fun var4209312 () (_ BitVec 64))
(declare-fun temp10458_44 () (_ BitVec 64))
(declare-fun temp10458_45 () (_ BitVec 64))
(declare-fun var4924281 () (_ BitVec 64))
(declare-fun var4924285 () (_ BitVec 64))
(declare-fun temp10458_46 () (_ BitVec 64))
(declare-fun var4924325 () (_ BitVec 64))
(declare-fun temp10458_47 () (_ BitVec 64))
(declare-fun temp10458_48 () (_ BitVec 64))
(declare-fun temp10458_49 () (_ BitVec 64))
(declare-fun var5514105 () (_ BitVec 64))
(declare-fun var5514109 () (_ BitVec 64))
(declare-fun temp10458_50 () (_ BitVec 64))
(declare-fun var5514137 () (_ BitVec 64))
(declare-fun temp10458_51 () (_ BitVec 64))
(declare-fun temp10458_53 () (_ BitVec 64))
(declare-fun temp10458_52 () (_ BitVec 64))
(declare-fun var82851 () (_ BitVec 64))
(declare-fun var82852 () (_ BitVec 64))
(declare-fun temp10458_54 () (_ BitVec 64))
(assert (= temp10458_1 #x0000000000000000))
(assert (= var82795
   (ite (= ARGNAME_input_NAMEEND_DIM temp10458_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_2 #x0000000000000000))
(assert (= var82795 temp10458_2))
(assert (= temp10458_3 #x0000000000000000))
(assert (= temp10458_4 temp10458_3))
(assert (= temp10458_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_4)))
(assert (= temp10458_6 #x0000000000000001))
(assert (= temp10458_7 temp10458_6))
(assert (= temp10458_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_7)))
(assert (= temp10458_9 #x0000000000000002))
(assert (= temp10458_10 temp10458_9))
(assert (= temp10458_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_10)))
(assert (= temp10458_12 #x0000000000000003))
(assert (= temp10458_13 temp10458_12))
(assert (= temp10458_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_13)))
(assert (= temp10458_15 #x0000000000000004))
(assert (= temp10458_16 temp10458_15))
(assert (= temp10458_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_16)))
(assert (= temp10458_18 #x0000000000000005))
(assert (= temp10458_19 temp10458_18))
(assert (= temp10458_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_19)))
(assert (= temp10458_21 #x0000000000000000))
(assert (= temp10458_22
   (ite (bvslt var82808 temp10458_21)
        (bvadd ARGNAME_input_NAMEEND_DIM var82808)
        var82808)))
(assert (= temp10458_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_22)))
(assert (= var82809 temp10458_23))
(assert (bvslt (ite (bvslt var82808 temp10458_21)
            (bvadd ARGNAME_input_NAMEEND_DIM var82808)
            var82808)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10458_25 #x0000000000000000))
(assert (= temp10458_24 temp10458_25))
(assert (= temp10458_27 #x0000000000000000))
(assert (= temp10458_26 temp10458_27))
(assert (= var331074
   (ite (bvslt temp10458_26 ARGNAME_split_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_28
   (ite (= var331074 #x0000000000000001)
        ARGNAME_split_sizes_NAMEEND_LEN
        temp10458_26)))
(assert (= temp10458_29 #x0000000000000000))
(assert (= var396615 temp10458_29))
(assert (= var462162 var396615))
(assert (= var265101 var462162))
(assert (= temp10458_30 #x0000000000000001))
(assert (= var999067 temp10458_30))
(assert (= temp10458_31 #x0000000000000000))
(assert (= var999116
   (ite (= ARGNAME_input_NAMEEND_DIM temp10458_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_32 #x0000000000000000))
(assert (= var999116 temp10458_32))
(assert (= temp10458_33 #x0000000000000005))
(assert (= var1249866 temp10458_33))
(assert (= var1249868 var1249866))
(assert (= temp10458_34 #x0000000000000001))
(assert (= var1968812 temp10458_34))
(assert (= temp10458_35 #x0000000000000001))
(assert (= var2296492 temp10458_35))
(assert (= temp10458_36 #x0000000000000005))
(assert (= var2495050 temp10458_36))
(assert (= var2495052 var2495050))
(assert (= temp10458_37 #x0000000000000001))
(assert (= var999233
   (ite (bvslt var999067 temp10458_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp10458_38 #x0000000000000000))
(assert (= var999233 temp10458_38))
(assert (= temp10458_39 #x0000000000000000))
(assert (= var999297 temp10458_39))
(assert (= var999309 var999297))
(assert (= temp10458_40 #x0000000000000002))
(assert (= var3607212 temp10458_40))
(assert (= temp10458_41 #xffffffffffffffff))
(assert (= var999321 (bvxor var999297 temp10458_41)))
(assert (= var999322 (bvadd var999321 var999067)))
(assert (= var999323 (bvadd var999322 var999309)))
(assert (= var999324 (bvsdiv var999323 var999067)))
(assert (= temp10458_42 #x0000000000080000))
(assert (= var4132738 temp10458_42))
(assert (= temp10458_43 #x0000000000000000))
(assert (= var4209308 temp10458_43))
(assert (= var4209309 var999297))
(assert (= var4209310 var999309))
(assert (= var4209312 var999067))
(assert (= temp10458_44 #x0000000000000000))
(assert (= var4209308 temp10458_44))
(assert (= temp10458_45 #x0000000000000000))
(assert (= var4924281 temp10458_45))
(assert (= var4924285 var4209312))
(assert (= temp10458_46 #x0000000000000000))
(assert (= var4924325 temp10458_46))
(assert (= temp10458_47 #x0000000000000000))
(assert (= var4924325 temp10458_47))
(assert (= temp10458_48 #x0000000000000000))
(assert (= var4209308 temp10458_48))
(assert (= temp10458_49 #x0000000000000000))
(assert (= var5514105 temp10458_49))
(assert (= var5514109 var4209312))
(assert (= temp10458_50 #x0000000000000000))
(assert (= var5514137 temp10458_50))
(assert (= temp10458_51 #x0000000000000000))
(assert (= var5514137 temp10458_51))
(assert (= temp10458_53 #x0000000000000000))
(assert (= temp10458_52 temp10458_53))
(assert (= var82851 var82809))
(assert (= var82852
   (ite (= temp10458_24 var82851) #x0000000000000001 #x0000000000000000)))
(assert (= temp10458_54 #x0000000000000001))
(assert (= var82852 temp10458_54))
(model-add temp10458_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp10458_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82795 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






