(declare-fun temp4_2 () (_ BitVec 64))
(declare-fun temp4_1 () (_ BitVec 64))
(declare-fun temp4_3 () (_ BitVec 64))
(declare-fun var274908 () (_ BitVec 64))
(declare-fun temp4_4 () (_ BitVec 64))
(declare-fun temp4_5 () (_ BitVec 64))
(declare-fun var73335 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp4_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var462520 () (_ BitVec 64))
(declare-fun temp4_7 () (_ BitVec 64))
(declare-fun temp4_8 () (_ BitVec 64))
(declare-fun var394843 () (_ BitVec 64))
(declare-fun temp4_9 () (_ BitVec 64))
(declare-fun temp4_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4_11 () (_ BitVec 64))
(declare-fun temp4_12 () (_ BitVec 64))
(declare-fun temp4_13 () (_ BitVec 64))
(declare-fun temp4_14 () (_ BitVec 64))
(declare-fun temp4_15 () (_ BitVec 64))
(declare-fun temp4_16 () (_ BitVec 64))
(declare-fun temp4_17 () (_ BitVec 64))
(declare-fun temp4_18 () (_ BitVec 64))
(declare-fun temp4_19 () (_ BitVec 64))
(declare-fun temp4_20 () (_ BitVec 64))
(declare-fun temp4_21 () (_ BitVec 64))
(declare-fun temp4_22 () (_ BitVec 64))
(declare-fun temp4_23 () (_ BitVec 64))
(declare-fun temp4_24 () (_ BitVec 64))
(declare-fun temp4_25 () (_ BitVec 64))
(declare-fun temp4_26 () (_ BitVec 64))
(declare-fun temp4_28 () (_ BitVec 64))
(declare-fun temp4_27 () (_ BitVec 64))
(declare-fun temp4_29 () (_ BitVec 64))
(declare-fun temp4_30 () (_ BitVec 64))
(declare-fun var394842 () (_ BitVec 64))
(declare-fun temp4_31 () (_ BitVec 64))
(declare-fun var394847 () (_ BitVec 64))
(declare-fun temp4_33 () (_ BitVec 64))
(declare-fun temp4_32 () (_ BitVec 64))
(declare-fun temp4_34 () (_ BitVec 64))
(declare-fun temp4_35 () (_ BitVec 64))
(declare-fun var394846 () (_ BitVec 64))
(declare-fun var394848 () (_ BitVec 64))
(declare-fun temp4_36 () (_ BitVec 64))
(declare-fun temp4_37 () (_ BitVec 64))
(declare-fun var73403 () (_ BitVec 64))
(declare-fun var1577661 () (_ BitVec 64))
(declare-fun temp4_38 () (_ BitVec 64))
(declare-fun var1709354 () (_ BitVec 64))
(declare-fun var1841618 () (_ BitVec 64))
(declare-fun temp4_39 () (_ BitVec 64))
(declare-fun var1904193 () (_ BitVec 64))
(declare-fun temp4_40 () (_ BitVec 64))
(declare-fun ARGNAME_upper_NAMEEND () (_ BitVec 64))
(declare-fun var73410 () (_ BitVec 64))
(declare-fun temp4_41 () (_ BitVec 64))
(assert (= temp4_2 #x000000000000065a))
(assert (= temp4_1 temp4_2))
(assert (= temp4_3 #x0000000000000000))
(assert (= var274908 temp4_3))
(assert (= temp4_4 #x0000000000000000))
(assert (= var73335
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp4_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4_5 #x0000000000000000))
(assert (= var73335 temp4_5))
(assert (= temp4_6 #x0000000000000002))
(assert (= var462520
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp4_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4_7 #x0000000000000000))
(assert (= var462520 temp4_7))
(assert (= temp4_8 #xffffffffffffffff))
(assert (= var394843 temp4_8))
(assert (= temp4_9 #x0000000000000000))
(assert (= temp4_10 temp4_9))
(assert (= temp4_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp4_10)))
(assert (= temp4_12 #x0000000000000001))
(assert (= temp4_13 temp4_12))
(assert (= temp4_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp4_13)))
(assert (= temp4_15 #x0000000000000002))
(assert (= temp4_16 temp4_15))
(assert (= temp4_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp4_16)))
(assert (= temp4_18 #x0000000000000003))
(assert (= temp4_19 temp4_18))
(assert (= temp4_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp4_19)))
(assert (= temp4_21 #x0000000000000004))
(assert (= temp4_22 temp4_21))
(assert (= temp4_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp4_22)))
(assert (= temp4_24 #x0000000000000005))
(assert (= temp4_25 temp4_24))
(assert (= temp4_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp4_25)))
(assert (= temp4_28 #x0000000000000000))
(assert (= temp4_27
   (ite (bvslt var394843 temp4_28)
        (bvadd ARGNAME_input_NAMEEND_DIM var394843)
        var394843)))
(assert (= temp4_29 temp4_27))
(assert (= temp4_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp4_29)))
(assert (= var394842 temp4_30))
(assert (bvslt temp4_27 ARGNAME_input_NAMEEND_DIM))
(assert (= temp4_31 #xfffffffffffffffe))
(assert (= var394847 temp4_31))
(assert (= temp4_33 #x0000000000000000))
(assert (= temp4_32
   (ite (bvslt var394847 temp4_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var394847)
        var394847)))
(assert (= temp4_34 temp4_32))
(assert (= temp4_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp4_34)))
(assert (= var394846 temp4_35))
(assert (bvslt temp4_32 ARGNAME_input_NAMEEND_DIM))
(assert (= var394848
   (ite (= var394842 var394846) #x0000000000000001 #x0000000000000000)))
(assert (= temp4_36 #x0000000000000001))
(assert (= var394848 temp4_36))
(assert (= temp4_37 #x0000000000000002))
(assert (= var73403
   (ite (= ARGNAME_input_NAMEEND_DIM temp4_37)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1577661 var73403))
(assert (= temp4_38 #x0000000000000000))
(assert (= var1709354 temp4_38))
(assert (= var1841618 var1709354))
(assert (= temp4_39 #x0000000000000001))
(assert (= var1904193 temp4_39))
(assert (= temp4_40 #x0000000000000000))
(assert (= var73410
   (ite (= ARGNAME_upper_NAMEEND temp4_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4_41 #x0000000000000000))
(assert (= var73410 temp4_41))
(model-add temp4_2 () (_ BitVec 64) #x000000000000065a)
(model-add temp4_1 () (_ BitVec 64) #x000000000000065a)
(model-add temp4_3 () (_ BitVec 64) #x0000000000000000)
(model-add var274908 () (_ BitVec 64) #x0000000000000000)
(model-add temp4_4 () (_ BitVec 64) #x0000000000000000)
(model-add temp4_5 () (_ BitVec 64) #x0000000000000000)
(model-add var73335 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






