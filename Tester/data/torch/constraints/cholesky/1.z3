(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun var274908 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun var73335 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var462520 () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun var394843 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun var394842 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun var394847 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun temp1_34 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun var394846 () (_ BitVec 64))
(declare-fun var394848 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun var73403 () (_ BitVec 64))
(declare-fun var1577661 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun var1709354 () (_ BitVec 64))
(declare-fun var1841618 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun var1904193 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun ARGNAME_upper_NAMEEND () (_ BitVec 64))
(declare-fun var73410 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(assert (= temp1_2 #x000000000000065a))
(assert (= temp1_1 temp1_2))
(assert (= temp1_3 #x0000000000000000))
(assert (= var274908 temp1_3))
(assert (= temp1_4 #x0000000000000000))
(assert (= var73335
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp1_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_5 #x0000000000000000))
(assert (= var73335 temp1_5))
(assert (= temp1_6 #x0000000000000002))
(assert (= var462520
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp1_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_7 #x0000000000000000))
(assert (= var462520 temp1_7))
(assert (= temp1_8 #xffffffffffffffff))
(assert (= var394843 temp1_8))
(assert (= temp1_9 #x0000000000000000))
(assert (= temp1_10 temp1_9))
(assert (= temp1_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_10)))
(assert (= temp1_12 #x0000000000000001))
(assert (= temp1_13 temp1_12))
(assert (= temp1_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_13)))
(assert (= temp1_15 #x0000000000000002))
(assert (= temp1_16 temp1_15))
(assert (= temp1_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_16)))
(assert (= temp1_18 #x0000000000000003))
(assert (= temp1_19 temp1_18))
(assert (= temp1_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_19)))
(assert (= temp1_21 #x0000000000000004))
(assert (= temp1_22 temp1_21))
(assert (= temp1_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_22)))
(assert (= temp1_24 #x0000000000000005))
(assert (= temp1_25 temp1_24))
(assert (= temp1_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_25)))
(assert (= temp1_28 #x0000000000000000))
(assert (= temp1_27
   (ite (bvslt var394843 temp1_28)
        (bvadd ARGNAME_input_NAMEEND_DIM var394843)
        var394843)))
(assert (= temp1_29 temp1_27))
(assert (= temp1_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_29)))
(assert (= var394842 temp1_30))
(assert (bvslt temp1_27 ARGNAME_input_NAMEEND_DIM))
(assert (= temp1_31 #xfffffffffffffffe))
(assert (= var394847 temp1_31))
(assert (= temp1_33 #x0000000000000000))
(assert (= temp1_32
   (ite (bvslt var394847 temp1_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var394847)
        var394847)))
(assert (= temp1_34 temp1_32))
(assert (= temp1_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_34)))
(assert (= var394846 temp1_35))
(assert (bvslt temp1_32 ARGNAME_input_NAMEEND_DIM))
(assert (= var394848
   (ite (= var394842 var394846) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_36 #x0000000000000001))
(assert (= var394848 temp1_36))
(assert (= temp1_37 #x0000000000000002))
(assert (= var73403
   (ite (= ARGNAME_input_NAMEEND_DIM temp1_37)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1577661 var73403))
(assert (= temp1_38 #x0000000000000000))
(assert (= var1709354 temp1_38))
(assert (= var1841618 var1709354))
(assert (= temp1_39 #x0000000000000001))
(assert (= var1904193 temp1_39))
(assert (= temp1_40 #x0000000000000000))
(assert (= var73410
   (ite (= ARGNAME_upper_NAMEEND temp1_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_41 #x0000000000000001))
(assert (= var73410 temp1_41))
(model-add temp1_2 () (_ BitVec 64) #x000000000000065a)
(model-add temp1_1 () (_ BitVec 64) #x000000000000065a)
(model-add temp1_3 () (_ BitVec 64) #x0000000000000000)
(model-add var274908 () (_ BitVec 64) #x0000000000000000)
(model-add temp1_4 () (_ BitVec 64) #x0000000000000000)
(model-add temp1_5 () (_ BitVec 64) #x0000000000000000)
(model-add var73335 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






