(declare-fun temp2_2 () (_ BitVec 64))
(declare-fun temp2_1 () (_ BitVec 64))
(declare-fun temp2_3 () (_ BitVec 64))
(declare-fun var274908 () (_ BitVec 64))
(declare-fun temp2_4 () (_ BitVec 64))
(declare-fun temp2_5 () (_ BitVec 64))
(declare-fun var73335 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp2_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var462520 () (_ BitVec 64))
(declare-fun temp2_7 () (_ BitVec 64))
(declare-fun temp2_8 () (_ BitVec 64))
(declare-fun var394843 () (_ BitVec 64))
(declare-fun temp2_9 () (_ BitVec 64))
(declare-fun temp2_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_11 () (_ BitVec 64))
(declare-fun temp2_12 () (_ BitVec 64))
(declare-fun temp2_13 () (_ BitVec 64))
(declare-fun temp2_14 () (_ BitVec 64))
(declare-fun temp2_15 () (_ BitVec 64))
(declare-fun temp2_16 () (_ BitVec 64))
(declare-fun temp2_17 () (_ BitVec 64))
(declare-fun temp2_18 () (_ BitVec 64))
(declare-fun temp2_19 () (_ BitVec 64))
(declare-fun temp2_20 () (_ BitVec 64))
(declare-fun temp2_21 () (_ BitVec 64))
(declare-fun temp2_22 () (_ BitVec 64))
(declare-fun temp2_23 () (_ BitVec 64))
(declare-fun temp2_24 () (_ BitVec 64))
(declare-fun temp2_25 () (_ BitVec 64))
(declare-fun temp2_26 () (_ BitVec 64))
(declare-fun temp2_28 () (_ BitVec 64))
(declare-fun temp2_27 () (_ BitVec 64))
(declare-fun temp2_29 () (_ BitVec 64))
(declare-fun temp2_30 () (_ BitVec 64))
(declare-fun var394842 () (_ BitVec 64))
(declare-fun temp2_31 () (_ BitVec 64))
(declare-fun var394847 () (_ BitVec 64))
(declare-fun temp2_33 () (_ BitVec 64))
(declare-fun temp2_32 () (_ BitVec 64))
(declare-fun temp2_34 () (_ BitVec 64))
(declare-fun temp2_35 () (_ BitVec 64))
(declare-fun var394846 () (_ BitVec 64))
(declare-fun var394848 () (_ BitVec 64))
(declare-fun temp2_36 () (_ BitVec 64))
(declare-fun temp2_37 () (_ BitVec 64))
(declare-fun var73403 () (_ BitVec 64))
(declare-fun var1577661 () (_ BitVec 64))
(declare-fun temp2_38 () (_ BitVec 64))
(declare-fun var1709354 () (_ BitVec 64))
(declare-fun var1841618 () (_ BitVec 64))
(declare-fun temp2_39 () (_ BitVec 64))
(declare-fun var1904193 () (_ BitVec 64))
(declare-fun temp2_40 () (_ BitVec 64))
(declare-fun ARGNAME_upper_NAMEEND () (_ BitVec 64))
(declare-fun var73410 () (_ BitVec 64))
(declare-fun temp2_41 () (_ BitVec 64))
(assert (= temp2_2 #x000000000000065a))
(assert (= temp2_1 temp2_2))
(assert (= temp2_3 #x0000000000000000))
(assert (= var274908 temp2_3))
(assert (= temp2_4 #x0000000000000000))
(assert (= var73335
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp2_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_5 #x0000000000000000))
(assert (= var73335 temp2_5))
(assert (= temp2_6 #x0000000000000002))
(assert (= var462520
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp2_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_7 #x0000000000000000))
(assert (= var462520 temp2_7))
(assert (= temp2_8 #xffffffffffffffff))
(assert (= var394843 temp2_8))
(assert (= temp2_9 #x0000000000000000))
(assert (= temp2_10 temp2_9))
(assert (= temp2_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_10)))
(assert (= temp2_12 #x0000000000000001))
(assert (= temp2_13 temp2_12))
(assert (= temp2_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_13)))
(assert (= temp2_15 #x0000000000000002))
(assert (= temp2_16 temp2_15))
(assert (= temp2_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_16)))
(assert (= temp2_18 #x0000000000000003))
(assert (= temp2_19 temp2_18))
(assert (= temp2_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_19)))
(assert (= temp2_21 #x0000000000000004))
(assert (= temp2_22 temp2_21))
(assert (= temp2_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_22)))
(assert (= temp2_24 #x0000000000000005))
(assert (= temp2_25 temp2_24))
(assert (= temp2_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_25)))
(assert (= temp2_28 #x0000000000000000))
(assert (= temp2_27
   (ite (bvslt var394843 temp2_28)
        (bvadd ARGNAME_input_NAMEEND_DIM var394843)
        var394843)))
(assert (= temp2_29 temp2_27))
(assert (= temp2_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_29)))
(assert (= var394842 temp2_30))
(assert (bvslt temp2_27 ARGNAME_input_NAMEEND_DIM))
(assert (= temp2_31 #xfffffffffffffffe))
(assert (= var394847 temp2_31))
(assert (= temp2_33 #x0000000000000000))
(assert (= temp2_32
   (ite (bvslt var394847 temp2_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var394847)
        var394847)))
(assert (= temp2_34 temp2_32))
(assert (= temp2_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp2_34)))
(assert (= var394846 temp2_35))
(assert (bvslt temp2_32 ARGNAME_input_NAMEEND_DIM))
(assert (= var394848
   (ite (= var394842 var394846) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_36 #x0000000000000001))
(assert (= var394848 temp2_36))
(assert (= temp2_37 #x0000000000000002))
(assert (= var73403
   (ite (= ARGNAME_input_NAMEEND_DIM temp2_37)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1577661 var73403))
(assert (= temp2_38 #x0000000000000000))
(assert (= var1709354 temp2_38))
(assert (= var1841618 var1709354))
(assert (= temp2_39 #x0000000000000001))
(assert (= var1904193 temp2_39))
(assert (= temp2_40 #x0000000000000000))
(assert (= var73410
   (ite (= ARGNAME_upper_NAMEEND temp2_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_41 #x0000000000000000))
(assert (= var73410 temp2_41))
(model-add temp2_2 () (_ BitVec 64) #x000000000000065a)
(model-add temp2_1 () (_ BitVec 64) #x000000000000065a)
(model-add temp2_3 () (_ BitVec 64) #x0000000000000000)
(model-add var274908 () (_ BitVec 64) #x0000000000000000)
(model-add temp2_4 () (_ BitVec 64) #x0000000000000000)
(model-add temp2_5 () (_ BitVec 64) #x0000000000000000)
(model-add var73335 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






