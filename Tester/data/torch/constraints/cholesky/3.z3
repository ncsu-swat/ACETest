(declare-fun temp3_2 () (_ BitVec 64))
(declare-fun temp3_1 () (_ BitVec 64))
(declare-fun temp3_3 () (_ BitVec 64))
(declare-fun var274908 () (_ BitVec 64))
(declare-fun temp3_4 () (_ BitVec 64))
(declare-fun temp3_5 () (_ BitVec 64))
(declare-fun var73335 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp3_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var462520 () (_ BitVec 64))
(declare-fun temp3_7 () (_ BitVec 64))
(declare-fun temp3_8 () (_ BitVec 64))
(declare-fun var394843 () (_ BitVec 64))
(declare-fun temp3_9 () (_ BitVec 64))
(declare-fun temp3_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3_11 () (_ BitVec 64))
(declare-fun temp3_12 () (_ BitVec 64))
(declare-fun temp3_13 () (_ BitVec 64))
(declare-fun temp3_14 () (_ BitVec 64))
(declare-fun temp3_15 () (_ BitVec 64))
(declare-fun temp3_16 () (_ BitVec 64))
(declare-fun temp3_17 () (_ BitVec 64))
(declare-fun temp3_18 () (_ BitVec 64))
(declare-fun temp3_19 () (_ BitVec 64))
(declare-fun temp3_20 () (_ BitVec 64))
(declare-fun temp3_21 () (_ BitVec 64))
(declare-fun temp3_22 () (_ BitVec 64))
(declare-fun temp3_23 () (_ BitVec 64))
(declare-fun temp3_24 () (_ BitVec 64))
(declare-fun temp3_25 () (_ BitVec 64))
(declare-fun temp3_26 () (_ BitVec 64))
(declare-fun temp3_28 () (_ BitVec 64))
(declare-fun temp3_27 () (_ BitVec 64))
(declare-fun temp3_29 () (_ BitVec 64))
(declare-fun temp3_30 () (_ BitVec 64))
(declare-fun var394842 () (_ BitVec 64))
(declare-fun temp3_31 () (_ BitVec 64))
(declare-fun var394847 () (_ BitVec 64))
(declare-fun temp3_33 () (_ BitVec 64))
(declare-fun temp3_32 () (_ BitVec 64))
(declare-fun temp3_34 () (_ BitVec 64))
(declare-fun temp3_35 () (_ BitVec 64))
(declare-fun var394846 () (_ BitVec 64))
(declare-fun var394848 () (_ BitVec 64))
(declare-fun temp3_36 () (_ BitVec 64))
(declare-fun temp3_37 () (_ BitVec 64))
(declare-fun var73403 () (_ BitVec 64))
(declare-fun var1577661 () (_ BitVec 64))
(declare-fun temp3_38 () (_ BitVec 64))
(declare-fun var1709354 () (_ BitVec 64))
(declare-fun var1841618 () (_ BitVec 64))
(declare-fun temp3_39 () (_ BitVec 64))
(declare-fun var1904193 () (_ BitVec 64))
(declare-fun temp3_40 () (_ BitVec 64))
(declare-fun ARGNAME_upper_NAMEEND () (_ BitVec 64))
(declare-fun var73410 () (_ BitVec 64))
(declare-fun temp3_41 () (_ BitVec 64))
(assert (= temp3_2 #x000000000000065a))
(assert (= temp3_1 temp3_2))
(assert (= temp3_3 #x0000000000000000))
(assert (= var274908 temp3_3))
(assert (= temp3_4 #x0000000000000000))
(assert (= var73335
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp3_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3_5 #x0000000000000000))
(assert (= var73335 temp3_5))
(assert (= temp3_6 #x0000000000000002))
(assert (= var462520
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp3_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3_7 #x0000000000000000))
(assert (= var462520 temp3_7))
(assert (= temp3_8 #xffffffffffffffff))
(assert (= var394843 temp3_8))
(assert (= temp3_9 #x0000000000000000))
(assert (= temp3_10 temp3_9))
(assert (= temp3_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_10)))
(assert (= temp3_12 #x0000000000000001))
(assert (= temp3_13 temp3_12))
(assert (= temp3_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_13)))
(assert (= temp3_15 #x0000000000000002))
(assert (= temp3_16 temp3_15))
(assert (= temp3_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_16)))
(assert (= temp3_18 #x0000000000000003))
(assert (= temp3_19 temp3_18))
(assert (= temp3_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_19)))
(assert (= temp3_21 #x0000000000000004))
(assert (= temp3_22 temp3_21))
(assert (= temp3_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_22)))
(assert (= temp3_24 #x0000000000000005))
(assert (= temp3_25 temp3_24))
(assert (= temp3_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_25)))
(assert (= temp3_28 #x0000000000000000))
(assert (= temp3_27
   (ite (bvslt var394843 temp3_28)
        (bvadd ARGNAME_input_NAMEEND_DIM var394843)
        var394843)))
(assert (= temp3_29 temp3_27))
(assert (= temp3_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_29)))
(assert (= var394842 temp3_30))
(assert (bvslt temp3_27 ARGNAME_input_NAMEEND_DIM))
(assert (= temp3_31 #xfffffffffffffffe))
(assert (= var394847 temp3_31))
(assert (= temp3_33 #x0000000000000000))
(assert (= temp3_32
   (ite (bvslt var394847 temp3_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var394847)
        var394847)))
(assert (= temp3_34 temp3_32))
(assert (= temp3_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_34)))
(assert (= var394846 temp3_35))
(assert (bvslt temp3_32 ARGNAME_input_NAMEEND_DIM))
(assert (= var394848
   (ite (= var394842 var394846) #x0000000000000001 #x0000000000000000)))
(assert (= temp3_36 #x0000000000000001))
(assert (= var394848 temp3_36))
(assert (= temp3_37 #x0000000000000002))
(assert (= var73403
   (ite (= ARGNAME_input_NAMEEND_DIM temp3_37)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1577661 var73403))
(assert (= temp3_38 #x0000000000000000))
(assert (= var1709354 temp3_38))
(assert (= var1841618 var1709354))
(assert (= temp3_39 #x0000000000000001))
(assert (= var1904193 temp3_39))
(assert (= temp3_40 #x0000000000000000))
(assert (= var73410
   (ite (= ARGNAME_upper_NAMEEND temp3_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3_41 #x0000000000000001))
(assert (= var73410 temp3_41))
(model-add temp3_2 () (_ BitVec 64) #x000000000000065a)
(model-add temp3_1 () (_ BitVec 64) #x000000000000065a)
(model-add temp3_3 () (_ BitVec 64) #x0000000000000000)
(model-add var274908 () (_ BitVec 64) #x0000000000000000)
(model-add temp3_4 () (_ BitVec 64) #x0000000000000000)
(model-add temp3_5 () (_ BitVec 64) #x0000000000000000)
(model-add var73335 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






