(declare-fun temp667_1 () (_ BitVec 64))
(declare-fun temp667_2 () (_ BitVec 64))
(declare-fun var82549 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp667_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82574 () (_ BitVec 64))
(declare-fun temp667_4 () (_ BitVec 64))
(declare-fun temp667_5 () (_ BitVec 64))
(declare-fun var66699 () (_ BitVec 64))
(declare-fun temp667_6 () (_ BitVec 64))
(declare-fun temp667_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_8 () (_ BitVec 64))
(declare-fun temp667_9 () (_ BitVec 64))
(declare-fun temp667_10 () (_ BitVec 64))
(declare-fun temp667_11 () (_ BitVec 64))
(declare-fun temp667_12 () (_ BitVec 64))
(declare-fun temp667_13 () (_ BitVec 64))
(declare-fun temp667_14 () (_ BitVec 64))
(declare-fun temp667_15 () (_ BitVec 64))
(declare-fun temp667_16 () (_ BitVec 64))
(declare-fun temp667_17 () (_ BitVec 64))
(declare-fun temp667_18 () (_ BitVec 64))
(declare-fun temp667_19 () (_ BitVec 64))
(declare-fun temp667_20 () (_ BitVec 64))
(declare-fun temp667_21 () (_ BitVec 64))
(declare-fun temp667_22 () (_ BitVec 64))
(declare-fun temp667_23 () (_ BitVec 64))
(declare-fun temp667_25 () (_ BitVec 64))
(declare-fun temp667_26 () (_ BitVec 64))
(declare-fun temp667_24 () (_ BitVec 64))
(declare-fun var82588 () (_ BitVec 64))
(declare-fun temp667_27 () (_ BitVec 64))
(declare-fun var82589 () (_ BitVec 64))
(declare-fun temp667_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp667_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp667_30 () (_ BitVec 64))
(declare-fun temp667_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp667_32 () (_ BitVec 64))
(declare-fun temp667_34 () (_ BitVec 64))
(declare-fun temp667_33 () (_ BitVec 64))
(declare-fun temp667_36 () (_ BitVec 64))
(declare-fun temp667_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp667_37 () (_ BitVec 64))
(declare-fun temp667_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp667_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp667_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp667_41 () (_ BitVec 64))
(declare-fun temp667_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp667_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp667_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp667_45 () (_ BitVec 64))
(declare-fun temp667_46 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun temp667_47 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun temp667_48 () (_ BitVec 64))
(declare-fun var3291804 () (_ BitVec 64))
(declare-fun var3291805 () (_ BitVec 64))
(declare-fun var3291808 () (_ BitVec 64))
(declare-fun temp667_50 () (_ BitVec 64))
(declare-fun temp667_49 () (_ BitVec 64))
(assert (= temp667_1 #x0000000000000002))
(assert (= var82549
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp667_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_2 #x0000000000000000))
(assert (= var82549 temp667_2))
(assert (= temp667_3 #x0000000000000000))
(assert (= var82574
   (ite (= ARGNAME_sections_NAMEEND temp667_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_4 #x0000000000000000))
(assert (= var82574 temp667_4))
(assert (= temp667_5 #x0000000000000000))
(assert (= var66699 temp667_5))
(assert (= temp667_6 #x0000000000000000))
(assert (= temp667_7 temp667_6))
(assert (= temp667_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_7)))
(assert (= temp667_9 #x0000000000000001))
(assert (= temp667_10 temp667_9))
(assert (= temp667_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_10)))
(assert (= temp667_12 #x0000000000000002))
(assert (= temp667_13 temp667_12))
(assert (= temp667_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_13)))
(assert (= temp667_15 #x0000000000000003))
(assert (= temp667_16 temp667_15))
(assert (= temp667_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_16)))
(assert (= temp667_18 #x0000000000000004))
(assert (= temp667_19 temp667_18))
(assert (= temp667_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_19)))
(assert (= temp667_21 #x0000000000000005))
(assert (= temp667_22 temp667_21))
(assert (= temp667_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_22)))
(assert (= temp667_25 var66699))
(assert (= temp667_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_25)))
(assert (= temp667_24 temp667_26))
(assert (= var82588 (bvsmod temp667_24 ARGNAME_sections_NAMEEND)))
(assert (= temp667_27 #x0000000000000000))
(assert (= var82589 (ite (= var82588 temp667_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp667_28 #x0000000000000001))
(assert (= var82589 temp667_28))
(assert (= var140605 var66699))
(assert (= temp667_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp667_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_30 #x0000000000000000))
(assert (= var140635 temp667_30))
(assert (= temp667_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp667_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_32 #x0000000000000000))
(assert (= var140664 temp667_32))
(assert (= temp667_34 #x0000000000000000))
(assert (= temp667_33 temp667_34))
(assert (= temp667_36 #x0000000000000000))
(assert (= temp667_35 temp667_36))
(assert (= var462146
   (ite (bvslt temp667_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp667_35)))
(assert (= temp667_38 #x0000000000000000))
(assert (= var527687 temp667_38))
(assert (= var593234 var527687))
(assert (= temp667_39 #x0000000000000001))
(assert (= var1130139 temp667_39))
(assert (= temp667_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp667_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_41 #x0000000000000000))
(assert (= var1130188 temp667_41))
(assert (= temp667_42 #x0000000000000005))
(assert (= var1380938 temp667_42))
(assert (= temp667_43 #x0000000000000005))
(assert (= var2101834 temp667_43))
(assert (= temp667_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp667_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp667_45 #x0000000000000000))
(assert (= var1130305 temp667_45))
(assert (= temp667_46 #x0000000000000000))
(assert (= var1130369 temp667_46))
(assert (= temp667_47 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp667_47)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= temp667_48 #x0000000000000000))
(assert (= var3291804 temp667_48))
(assert (= var3291805 var1130369))
(assert (= var3291808 var1130139))
(assert (= temp667_50 #x0000000000000000))
(assert (= temp667_49 temp667_50))
(model-add temp667_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp667_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82549 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))





