(declare-fun temp1264_1 () (_ BitVec 64))
(declare-fun temp1264_2 () (_ BitVec 64))
(declare-fun var82549 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1264_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82574 () (_ BitVec 64))
(declare-fun temp1264_4 () (_ BitVec 64))
(declare-fun temp1264_5 () (_ BitVec 64))
(declare-fun var66699 () (_ BitVec 64))
(declare-fun temp1264_6 () (_ BitVec 64))
(declare-fun temp1264_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_8 () (_ BitVec 64))
(declare-fun temp1264_9 () (_ BitVec 64))
(declare-fun temp1264_10 () (_ BitVec 64))
(declare-fun temp1264_11 () (_ BitVec 64))
(declare-fun temp1264_12 () (_ BitVec 64))
(declare-fun temp1264_13 () (_ BitVec 64))
(declare-fun temp1264_14 () (_ BitVec 64))
(declare-fun temp1264_15 () (_ BitVec 64))
(declare-fun temp1264_16 () (_ BitVec 64))
(declare-fun temp1264_17 () (_ BitVec 64))
(declare-fun temp1264_18 () (_ BitVec 64))
(declare-fun temp1264_19 () (_ BitVec 64))
(declare-fun temp1264_20 () (_ BitVec 64))
(declare-fun temp1264_21 () (_ BitVec 64))
(declare-fun temp1264_22 () (_ BitVec 64))
(declare-fun temp1264_23 () (_ BitVec 64))
(declare-fun temp1264_25 () (_ BitVec 64))
(declare-fun temp1264_26 () (_ BitVec 64))
(declare-fun temp1264_24 () (_ BitVec 64))
(declare-fun var82588 () (_ BitVec 64))
(declare-fun temp1264_27 () (_ BitVec 64))
(declare-fun var82589 () (_ BitVec 64))
(declare-fun temp1264_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp1264_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp1264_30 () (_ BitVec 64))
(declare-fun temp1264_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp1264_32 () (_ BitVec 64))
(declare-fun temp1264_34 () (_ BitVec 64))
(declare-fun temp1264_33 () (_ BitVec 64))
(declare-fun temp1264_36 () (_ BitVec 64))
(declare-fun temp1264_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp1264_37 () (_ BitVec 64))
(declare-fun temp1264_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp1264_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp1264_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp1264_41 () (_ BitVec 64))
(declare-fun temp1264_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp1264_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp1264_44 () (_ BitVec 64))
(declare-fun var1130304 () (_ BitVec 64))
(declare-fun temp1264_45 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp1264_46 () (_ BitVec 64))
(declare-fun temp1264_47 () (_ BitVec 64))
(declare-fun var1130349 () (_ BitVec 64))
(declare-fun temp1264_48 () (_ BitVec 64))
(declare-fun temp1264_49 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun var1130381 () (_ BitVec 64))
(declare-fun temp1264_50 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun var1130395 () (_ BitVec 64))
(declare-fun var1130396 () (_ BitVec 64))
(assert (= temp1264_1 #x0000000000000002))
(assert (= var82549
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp1264_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_2 #x0000000000000000))
(assert (= var82549 temp1264_2))
(assert (= temp1264_3 #x0000000000000000))
(assert (= var82574
   (ite (= ARGNAME_sections_NAMEEND temp1264_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_4 #x0000000000000000))
(assert (= var82574 temp1264_4))
(assert (= temp1264_5 #x0000000000000000))
(assert (= var66699 temp1264_5))
(assert (= temp1264_6 #x0000000000000000))
(assert (= temp1264_7 temp1264_6))
(assert (= temp1264_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_7)))
(assert (= temp1264_9 #x0000000000000001))
(assert (= temp1264_10 temp1264_9))
(assert (= temp1264_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_10)))
(assert (= temp1264_12 #x0000000000000002))
(assert (= temp1264_13 temp1264_12))
(assert (= temp1264_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_13)))
(assert (= temp1264_15 #x0000000000000003))
(assert (= temp1264_16 temp1264_15))
(assert (= temp1264_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_16)))
(assert (= temp1264_18 #x0000000000000004))
(assert (= temp1264_19 temp1264_18))
(assert (= temp1264_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_19)))
(assert (= temp1264_21 #x0000000000000005))
(assert (= temp1264_22 temp1264_21))
(assert (= temp1264_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_22)))
(assert (= temp1264_25 var66699))
(assert (= temp1264_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_25)))
(assert (= temp1264_24 temp1264_26))
(assert (= var82588 (bvsmod temp1264_24 ARGNAME_sections_NAMEEND)))
(assert (= temp1264_27 #x0000000000000000))
(assert (= var82589
   (ite (= var82588 temp1264_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_28 #x0000000000000001))
(assert (= var82589 temp1264_28))
(assert (= var140605 var66699))
(assert (= temp1264_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp1264_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_30 #x0000000000000000))
(assert (= var140635 temp1264_30))
(assert (= temp1264_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp1264_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_32 #x0000000000000000))
(assert (= var140664 temp1264_32))
(assert (= temp1264_34 #x0000000000000000))
(assert (= temp1264_33 temp1264_34))
(assert (= temp1264_36 #x0000000000000000))
(assert (= temp1264_35 temp1264_36))
(assert (= var462146
   (ite (bvslt temp1264_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp1264_35)))
(assert (= temp1264_38 #x0000000000000000))
(assert (= var527687 temp1264_38))
(assert (= var593234 var527687))
(assert (= temp1264_39 #x0000000000000001))
(assert (= var1130139 temp1264_39))
(assert (= temp1264_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp1264_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_41 #x0000000000000000))
(assert (= var1130188 temp1264_41))
(assert (= temp1264_42 #x0000000000000005))
(assert (= var1380938 temp1264_42))
(assert (= temp1264_43 #x0000000000000005))
(assert (= var2101834 temp1264_43))
(assert (= temp1264_44 #xffffffffffffffff))
(assert (= var1130304 temp1264_44))
(assert (= temp1264_45 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp1264_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_46 #x0000000000000000))
(assert (= var1130305 temp1264_46))
(assert (= temp1264_47 #x0000000000000000))
(assert (= var1130349
   (ite (bvslt var1130304 temp1264_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_48 #x0000000000000001))
(assert (= var1130349 temp1264_48))
(assert (= temp1264_49 #x0000000000000000))
(assert (= var1130369 temp1264_49))
(assert (= var1130381 var1130369))
(assert (= temp1264_50 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp1264_50)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= var1130395 (bvadd var1130394 var1130381)))
(assert (= var1130396 (bvsdiv var1130395 var1130139)))
(model-add temp1264_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp1264_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82549 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






