(declare-fun temp40_1 () (_ BitVec 64))
(declare-fun temp40_2 () (_ BitVec 64))
(declare-fun var82549 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp40_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82574 () (_ BitVec 64))
(declare-fun temp40_4 () (_ BitVec 64))
(declare-fun temp40_5 () (_ BitVec 64))
(declare-fun var66699 () (_ BitVec 64))
(declare-fun temp40_6 () (_ BitVec 64))
(declare-fun temp40_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp40_8 () (_ BitVec 64))
(declare-fun temp40_9 () (_ BitVec 64))
(declare-fun temp40_10 () (_ BitVec 64))
(declare-fun temp40_11 () (_ BitVec 64))
(declare-fun temp40_12 () (_ BitVec 64))
(declare-fun temp40_13 () (_ BitVec 64))
(declare-fun temp40_14 () (_ BitVec 64))
(declare-fun temp40_15 () (_ BitVec 64))
(declare-fun temp40_16 () (_ BitVec 64))
(declare-fun temp40_17 () (_ BitVec 64))
(declare-fun temp40_18 () (_ BitVec 64))
(declare-fun temp40_19 () (_ BitVec 64))
(declare-fun temp40_20 () (_ BitVec 64))
(declare-fun temp40_21 () (_ BitVec 64))
(declare-fun temp40_22 () (_ BitVec 64))
(declare-fun temp40_23 () (_ BitVec 64))
(declare-fun temp40_25 () (_ BitVec 64))
(declare-fun temp40_26 () (_ BitVec 64))
(declare-fun temp40_24 () (_ BitVec 64))
(declare-fun var82588 () (_ BitVec 64))
(declare-fun temp40_27 () (_ BitVec 64))
(declare-fun var82589 () (_ BitVec 64))
(declare-fun temp40_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp40_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp40_30 () (_ BitVec 64))
(declare-fun temp40_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp40_32 () (_ BitVec 64))
(declare-fun temp40_34 () (_ BitVec 64))
(declare-fun temp40_33 () (_ BitVec 64))
(declare-fun temp40_36 () (_ BitVec 64))
(declare-fun temp40_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp40_37 () (_ BitVec 64))
(declare-fun temp40_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp40_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp40_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp40_41 () (_ BitVec 64))
(declare-fun temp40_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp40_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp40_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp40_45 () (_ BitVec 64))
(declare-fun temp40_46 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun temp40_47 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun temp40_48 () (_ BitVec 64))
(declare-fun var3357340 () (_ BitVec 64))
(declare-fun var3357341 () (_ BitVec 64))
(declare-fun var3357344 () (_ BitVec 64))
(declare-fun temp40_49 () (_ BitVec 64))
(declare-fun temp40_50 () (_ BitVec 64))
(declare-fun var4006777 () (_ BitVec 64))
(declare-fun var4006781 () (_ BitVec 64))
(declare-fun temp40_51 () (_ BitVec 64))
(declare-fun temp40_52 () (_ BitVec 64))
(declare-fun var4334457 () (_ BitVec 64))
(declare-fun var4334461 () (_ BitVec 64))
(declare-fun temp40_54 () (_ BitVec 64))
(declare-fun temp40_53 () (_ BitVec 64))
(assert (= temp40_1 #x0000000000000002))
(assert (= var82549
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp40_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_2 #x0000000000000000))
(assert (= var82549 temp40_2))
(assert (= temp40_3 #x0000000000000000))
(assert (= var82574
   (ite (= ARGNAME_sections_NAMEEND temp40_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_4 #x0000000000000000))
(assert (= var82574 temp40_4))
(assert (= temp40_5 #x0000000000000000))
(assert (= var66699 temp40_5))
(assert (= temp40_6 #x0000000000000000))
(assert (= temp40_7 temp40_6))
(assert (= temp40_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_7)))
(assert (= temp40_9 #x0000000000000001))
(assert (= temp40_10 temp40_9))
(assert (= temp40_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_10)))
(assert (= temp40_12 #x0000000000000002))
(assert (= temp40_13 temp40_12))
(assert (= temp40_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_13)))
(assert (= temp40_15 #x0000000000000003))
(assert (= temp40_16 temp40_15))
(assert (= temp40_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_16)))
(assert (= temp40_18 #x0000000000000004))
(assert (= temp40_19 temp40_18))
(assert (= temp40_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_19)))
(assert (= temp40_21 #x0000000000000005))
(assert (= temp40_22 temp40_21))
(assert (= temp40_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_22)))
(assert (= temp40_25 var66699))
(assert (= temp40_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_25)))
(assert (= temp40_24 temp40_26))
(assert (= var82588 (bvsmod temp40_24 ARGNAME_sections_NAMEEND)))
(assert (= temp40_27 #x0000000000000000))
(assert (= var82589 (ite (= var82588 temp40_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp40_28 #x0000000000000001))
(assert (= var82589 temp40_28))
(assert (= var140605 var66699))
(assert (= temp40_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp40_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_30 #x0000000000000000))
(assert (= var140635 temp40_30))
(assert (= temp40_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp40_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_32 #x0000000000000000))
(assert (= var140664 temp40_32))
(assert (= temp40_34 #x0000000000000000))
(assert (= temp40_33 temp40_34))
(assert (= temp40_36 #x0000000000000000))
(assert (= temp40_35 temp40_36))
(assert (= var462146
   (ite (bvslt temp40_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp40_35)))
(assert (= temp40_38 #x0000000000000000))
(assert (= var527687 temp40_38))
(assert (= var593234 var527687))
(assert (= temp40_39 #x0000000000000001))
(assert (= var1130139 temp40_39))
(assert (= temp40_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp40_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_41 #x0000000000000000))
(assert (= var1130188 temp40_41))
(assert (= temp40_42 #x0000000000000005))
(assert (= var1380938 temp40_42))
(assert (= temp40_43 #x0000000000000005))
(assert (= var2101834 temp40_43))
(assert (= temp40_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp40_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp40_45 #x0000000000000000))
(assert (= var1130305 temp40_45))
(assert (= temp40_46 #x0000000000000000))
(assert (= var1130369 temp40_46))
(assert (= temp40_47 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp40_47)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= temp40_48 #x0000000000000000))
(assert (= var3357340 temp40_48))
(assert (= var3357341 var1130369))
(assert (= var3357344 var1130139))
(assert (= temp40_49 #x0000000000000000))
(assert (= var3357340 temp40_49))
(assert (= temp40_50 #x0000000000000000))
(assert (= var4006777 temp40_50))
(assert (= var4006781 var3357344))
(assert (= temp40_51 #x0000000000000000))
(assert (= var3357340 temp40_51))
(assert (= temp40_52 #x0000000000000000))
(assert (= var4334457 temp40_52))
(assert (= var4334461 var3357344))
(assert (= temp40_54 #x0000000000000000))
(assert (= temp40_53 temp40_54))
(model-add temp40_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp40_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82549 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))




