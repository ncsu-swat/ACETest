(declare-fun temp661_1 () (_ BitVec 64))
(declare-fun temp661_2 () (_ BitVec 64))
(declare-fun var82549 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp661_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82574 () (_ BitVec 64))
(declare-fun temp661_4 () (_ BitVec 64))
(declare-fun temp661_5 () (_ BitVec 64))
(declare-fun var66699 () (_ BitVec 64))
(declare-fun temp661_6 () (_ BitVec 64))
(declare-fun temp661_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_8 () (_ BitVec 64))
(declare-fun temp661_9 () (_ BitVec 64))
(declare-fun temp661_10 () (_ BitVec 64))
(declare-fun temp661_11 () (_ BitVec 64))
(declare-fun temp661_12 () (_ BitVec 64))
(declare-fun temp661_13 () (_ BitVec 64))
(declare-fun temp661_14 () (_ BitVec 64))
(declare-fun temp661_15 () (_ BitVec 64))
(declare-fun temp661_16 () (_ BitVec 64))
(declare-fun temp661_17 () (_ BitVec 64))
(declare-fun temp661_18 () (_ BitVec 64))
(declare-fun temp661_19 () (_ BitVec 64))
(declare-fun temp661_20 () (_ BitVec 64))
(declare-fun temp661_21 () (_ BitVec 64))
(declare-fun temp661_22 () (_ BitVec 64))
(declare-fun temp661_23 () (_ BitVec 64))
(declare-fun temp661_25 () (_ BitVec 64))
(declare-fun temp661_26 () (_ BitVec 64))
(declare-fun temp661_24 () (_ BitVec 64))
(declare-fun var82588 () (_ BitVec 64))
(declare-fun temp661_27 () (_ BitVec 64))
(declare-fun var82589 () (_ BitVec 64))
(declare-fun temp661_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp661_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp661_30 () (_ BitVec 64))
(declare-fun temp661_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp661_32 () (_ BitVec 64))
(declare-fun temp661_34 () (_ BitVec 64))
(declare-fun temp661_33 () (_ BitVec 64))
(declare-fun temp661_36 () (_ BitVec 64))
(declare-fun temp661_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp661_37 () (_ BitVec 64))
(declare-fun temp661_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp661_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp661_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp661_41 () (_ BitVec 64))
(declare-fun temp661_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp661_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp661_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp661_45 () (_ BitVec 64))
(declare-fun temp661_46 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun temp661_47 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun temp661_48 () (_ BitVec 64))
(declare-fun var3226268 () (_ BitVec 64))
(declare-fun var3226269 () (_ BitVec 64))
(declare-fun var3226272 () (_ BitVec 64))
(declare-fun temp661_49 () (_ BitVec 64))
(declare-fun temp661_50 () (_ BitVec 64))
(declare-fun var3875705 () (_ BitVec 64))
(declare-fun var3875709 () (_ BitVec 64))
(declare-fun temp661_51 () (_ BitVec 64))
(declare-fun temp661_52 () (_ BitVec 64))
(declare-fun var4203385 () (_ BitVec 64))
(declare-fun var4203389 () (_ BitVec 64))
(declare-fun temp661_54 () (_ BitVec 64))
(declare-fun temp661_53 () (_ BitVec 64))
(assert (= temp661_1 #x0000000000000002))
(assert (= var82549
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp661_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_2 #x0000000000000000))
(assert (= var82549 temp661_2))
(assert (= temp661_3 #x0000000000000000))
(assert (= var82574
   (ite (= ARGNAME_sections_NAMEEND temp661_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_4 #x0000000000000000))
(assert (= var82574 temp661_4))
(assert (= temp661_5 #x0000000000000000))
(assert (= var66699 temp661_5))
(assert (= temp661_6 #x0000000000000000))
(assert (= temp661_7 temp661_6))
(assert (= temp661_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_7)))
(assert (= temp661_9 #x0000000000000001))
(assert (= temp661_10 temp661_9))
(assert (= temp661_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_10)))
(assert (= temp661_12 #x0000000000000002))
(assert (= temp661_13 temp661_12))
(assert (= temp661_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_13)))
(assert (= temp661_15 #x0000000000000003))
(assert (= temp661_16 temp661_15))
(assert (= temp661_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_16)))
(assert (= temp661_18 #x0000000000000004))
(assert (= temp661_19 temp661_18))
(assert (= temp661_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_19)))
(assert (= temp661_21 #x0000000000000005))
(assert (= temp661_22 temp661_21))
(assert (= temp661_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_22)))
(assert (= temp661_25 var66699))
(assert (= temp661_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_25)))
(assert (= temp661_24 temp661_26))
(assert (= var82588 (bvsmod temp661_24 ARGNAME_sections_NAMEEND)))
(assert (= temp661_27 #x0000000000000000))
(assert (= var82589 (ite (= var82588 temp661_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_28 #x0000000000000001))
(assert (= var82589 temp661_28))
(assert (= var140605 var66699))
(assert (= temp661_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp661_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_30 #x0000000000000000))
(assert (= var140635 temp661_30))
(assert (= temp661_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp661_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_32 #x0000000000000000))
(assert (= var140664 temp661_32))
(assert (= temp661_34 #x0000000000000000))
(assert (= temp661_33 temp661_34))
(assert (= temp661_36 #x0000000000000000))
(assert (= temp661_35 temp661_36))
(assert (= var462146
   (ite (bvslt temp661_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp661_35)))
(assert (= temp661_38 #x0000000000000000))
(assert (= var527687 temp661_38))
(assert (= var593234 var527687))
(assert (= temp661_39 #x0000000000000001))
(assert (= var1130139 temp661_39))
(assert (= temp661_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp661_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_41 #x0000000000000000))
(assert (= var1130188 temp661_41))
(assert (= temp661_42 #x0000000000000005))
(assert (= var1380938 temp661_42))
(assert (= temp661_43 #x0000000000000005))
(assert (= var2101834 temp661_43))
(assert (= temp661_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp661_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_45 #x0000000000000000))
(assert (= var1130305 temp661_45))
(assert (= temp661_46 #x0000000000000000))
(assert (= var1130369 temp661_46))
(assert (= temp661_47 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp661_47)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= temp661_48 #x0000000000000000))
(assert (= var3226268 temp661_48))
(assert (= var3226269 var1130369))
(assert (= var3226272 var1130139))
(assert (= temp661_49 #x0000000000000000))
(assert (= var3226268 temp661_49))
(assert (= temp661_50 #x0000000000000000))
(assert (= var3875705 temp661_50))
(assert (= var3875709 var3226272))
(assert (= temp661_51 #x0000000000000000))
(assert (= var3226268 temp661_51))
(assert (= temp661_52 #x0000000000000000))
(assert (= var4203385 temp661_52))
(assert (= var4203389 var3226272))
(assert (= temp661_54 #x0000000000000000))
(assert (= temp661_53 temp661_54))
(model-add temp661_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp661_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82549 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))



