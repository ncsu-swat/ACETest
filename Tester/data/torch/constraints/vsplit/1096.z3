(declare-fun temp3952_1 () (_ BitVec 64))
(declare-fun temp3952_2 () (_ BitVec 64))
(declare-fun var82549 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp3952_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82574 () (_ BitVec 64))
(declare-fun temp3952_4 () (_ BitVec 64))
(declare-fun temp3952_5 () (_ BitVec 64))
(declare-fun var66699 () (_ BitVec 64))
(declare-fun temp3952_6 () (_ BitVec 64))
(declare-fun temp3952_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3952_8 () (_ BitVec 64))
(declare-fun temp3952_9 () (_ BitVec 64))
(declare-fun temp3952_10 () (_ BitVec 64))
(declare-fun temp3952_11 () (_ BitVec 64))
(declare-fun temp3952_12 () (_ BitVec 64))
(declare-fun temp3952_13 () (_ BitVec 64))
(declare-fun temp3952_14 () (_ BitVec 64))
(declare-fun temp3952_15 () (_ BitVec 64))
(declare-fun temp3952_16 () (_ BitVec 64))
(declare-fun temp3952_17 () (_ BitVec 64))
(declare-fun temp3952_18 () (_ BitVec 64))
(declare-fun temp3952_19 () (_ BitVec 64))
(declare-fun temp3952_20 () (_ BitVec 64))
(declare-fun temp3952_21 () (_ BitVec 64))
(declare-fun temp3952_22 () (_ BitVec 64))
(declare-fun temp3952_23 () (_ BitVec 64))
(declare-fun temp3952_25 () (_ BitVec 64))
(declare-fun temp3952_26 () (_ BitVec 64))
(declare-fun temp3952_24 () (_ BitVec 64))
(declare-fun var82588 () (_ BitVec 64))
(declare-fun temp3952_27 () (_ BitVec 64))
(declare-fun var82589 () (_ BitVec 64))
(declare-fun temp3952_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp3952_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp3952_30 () (_ BitVec 64))
(declare-fun temp3952_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp3952_32 () (_ BitVec 64))
(declare-fun temp3952_34 () (_ BitVec 64))
(declare-fun temp3952_33 () (_ BitVec 64))
(declare-fun temp3952_36 () (_ BitVec 64))
(declare-fun temp3952_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp3952_37 () (_ BitVec 64))
(declare-fun temp3952_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp3952_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp3952_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp3952_41 () (_ BitVec 64))
(declare-fun temp3952_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp3952_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp3952_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp3952_45 () (_ BitVec 64))
(declare-fun temp3952_46 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun var1130381 () (_ BitVec 64))
(declare-fun temp3952_47 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun var1130395 () (_ BitVec 64))
(declare-fun var1130396 () (_ BitVec 64))
(declare-fun temp3952_48 () (_ BitVec 64))
(declare-fun var3160732 () (_ BitVec 64))
(declare-fun var3160733 () (_ BitVec 64))
(declare-fun var3160734 () (_ BitVec 64))
(declare-fun var3160736 () (_ BitVec 64))
(declare-fun var3160897 () (_ BitVec 64))
(declare-fun temp3952_50 () (_ BitVec 64))
(declare-fun temp3952_49 () (_ BitVec 64))
(assert (= temp3952_1 #x0000000000000002))
(assert (= var82549
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp3952_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3952_2 #x0000000000000000))
(assert (= var82549 temp3952_2))
(assert (= temp3952_3 #x0000000000000000))
(assert (= var82574
   (ite (= ARGNAME_sections_NAMEEND temp3952_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3952_4 #x0000000000000000))
(assert (= var82574 temp3952_4))
(assert (= temp3952_5 #x0000000000000000))
(assert (= var66699 temp3952_5))
(assert (= temp3952_6 #x0000000000000000))
(assert (= temp3952_7 temp3952_6))
(assert (= temp3952_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp3952_7)))
(assert (= temp3952_9 #x0000000000000001))
(assert (= temp3952_10 temp3952_9))
(assert (= temp3952_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp3952_10)))
(assert (= temp3952_12 #x0000000000000002))
(assert (= temp3952_13 temp3952_12))
(assert (= temp3952_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp3952_13)))
(assert (= temp3952_15 #x0000000000000003))
(assert (= temp3952_16 temp3952_15))
(assert (= temp3952_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp3952_16)))
(assert (= temp3952_18 #x0000000000000004))
(assert (= temp3952_19 temp3952_18))
(assert (= temp3952_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp3952_19)))
(assert (= temp3952_21 #x0000000000000005))
(assert (= temp3952_22 temp3952_21))
(assert (= temp3952_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp3952_22)))
(assert (= temp3952_25 var66699))
(assert (= temp3952_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp3952_25)))
(assert (= temp3952_24 temp3952_26))
(assert (= var82588 (bvsmod temp3952_24 ARGNAME_sections_NAMEEND)))
(assert (= temp3952_27 #x0000000000000000))
(assert (= var82589
   (ite (= var82588 temp3952_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp3952_28 #x0000000000000001))
(assert (= var82589 temp3952_28))
(assert (= var140605 var66699))
(assert (= temp3952_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp3952_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3952_30 #x0000000000000000))
(assert (= var140635 temp3952_30))
(assert (= temp3952_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp3952_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3952_32 #x0000000000000000))
(assert (= var140664 temp3952_32))
(assert (= temp3952_34 #x0000000000000000))
(assert (= temp3952_33 temp3952_34))
(assert (= temp3952_36 #x0000000000000000))
(assert (= temp3952_35 temp3952_36))
(assert (= var462146
   (ite (bvslt temp3952_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3952_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp3952_35)))
(assert (= temp3952_38 #x0000000000000000))
(assert (= var527687 temp3952_38))
(assert (= var593234 var527687))
(assert (= temp3952_39 #x0000000000000001))
(assert (= var1130139 temp3952_39))
(assert (= temp3952_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp3952_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3952_41 #x0000000000000000))
(assert (= var1130188 temp3952_41))
(assert (= temp3952_42 #x0000000000000005))
(assert (= var1380938 temp3952_42))
(assert (= temp3952_43 #x0000000000000005))
(assert (= var2101834 temp3952_43))
(assert (= temp3952_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp3952_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp3952_45 #x0000000000000000))
(assert (= var1130305 temp3952_45))
(assert (= temp3952_46 #x0000000000000000))
(assert (= var1130369 temp3952_46))
(assert (= var1130381 var1130369))
(assert (= temp3952_47 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp3952_47)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= var1130395 (bvadd var1130394 var1130381)))
(assert (= var1130396 (bvsdiv var1130395 var1130139)))
(assert (= temp3952_48 #x0000000000000000))
(assert (= var3160732 temp3952_48))
(assert (= var3160733 var1130369))
(assert (= var3160734 var1130381))
(assert (= var3160736 var1130139))
(assert (= var3160897 var3160732))
(assert (= temp3952_50 #x0000000000000000))
(assert (= temp3952_49 temp3952_50))
(model-add temp3952_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp3952_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82549 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))





