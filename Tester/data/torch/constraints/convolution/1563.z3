(declare-fun temp10878_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10878_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10878_3 () (_ BitVec 64))
(declare-fun temp10878_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10878_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10878_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10878_7 () (_ BitVec 64))
(declare-fun temp10878_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10878_9 () (_ BitVec 64))
(declare-fun temp10878_10 () (_ BitVec 64))
(declare-fun temp10878_11 () (_ BitVec 64))
(declare-fun temp10878_12 () (_ BitVec 64))
(declare-fun temp10878_13 () (_ BitVec 64))
(declare-fun temp10878_14 () (_ BitVec 64))
(declare-fun temp10878_15 () (_ BitVec 64))
(declare-fun temp10878_16 () (_ BitVec 64))
(declare-fun temp10878_17 () (_ BitVec 64))
(declare-fun temp10878_18 () (_ BitVec 64))
(declare-fun temp10878_19 () (_ BitVec 64))
(declare-fun temp10878_20 () (_ BitVec 64))
(declare-fun temp10878_21 () (_ BitVec 64))
(declare-fun temp10878_22 () (_ BitVec 64))
(declare-fun temp10878_23 () (_ BitVec 64))
(declare-fun temp10878_24 () (_ BitVec 64))
(declare-fun temp10878_25 () (_ BitVec 64))
(declare-fun temp10878_26 () (_ BitVec 64))
(declare-fun temp10878_27 () (_ BitVec 64))
(declare-fun temp10878_28 () (_ BitVec 64))
(declare-fun temp10878_29 () (_ BitVec 64))
(declare-fun temp10878_30 () (_ BitVec 64))
(declare-fun temp10878_31 () (_ BitVec 64))
(declare-fun temp10878_32 () (_ BitVec 64))
(declare-fun temp10878_33 () (_ BitVec 64))
(declare-fun temp10878_34 () (_ BitVec 64))
(declare-fun temp10878_35 () (_ BitVec 64))
(declare-fun temp10878_36 () (_ BitVec 64))
(declare-fun temp10878_37 () (_ BitVec 64))
(declare-fun temp10878_38 () (_ BitVec 64))
(declare-fun temp10878_39 () (_ BitVec 64))
(declare-fun temp10878_40 () (_ BitVec 64))
(declare-fun temp10878_41 () (_ BitVec 64))
(declare-fun temp10878_42 () (_ BitVec 64))
(declare-fun temp10878_43 () (_ BitVec 64))
(declare-fun temp10878_44 () (_ BitVec 64))
(declare-fun temp10878_45 () (_ BitVec 64))
(declare-fun temp10878_46 () (_ BitVec 64))
(declare-fun temp10878_47 () (_ BitVec 64))
(declare-fun temp10878_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10878_49 () (_ BitVec 64))
(declare-fun temp10878_50 () (_ BitVec 64))
(declare-fun temp10878_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10878_52 () (_ BitVec 64))
(declare-fun temp10878_53 () (_ BitVec 64))
(declare-fun temp10878_54 () (_ BitVec 64))
(declare-fun temp10878_55 () (_ BitVec 64))
(declare-fun temp10878_56 () (_ BitVec 64))
(declare-fun temp10878_57 () (_ BitVec 64))
(declare-fun temp10878_58 () (_ BitVec 64))
(declare-fun temp10878_59 () (_ BitVec 64))
(declare-fun temp10878_60 () (_ BitVec 64))
(declare-fun temp10878_61 () (_ BitVec 64))
(declare-fun temp10878_62 () (_ BitVec 64))
(declare-fun temp10878_63 () (_ BitVec 64))
(declare-fun temp10878_64 () (_ BitVec 64))
(declare-fun temp10878_65 () (_ BitVec 64))
(declare-fun temp10878_66 () (_ BitVec 64))
(declare-fun temp10878_67 () (_ BitVec 64))
(declare-fun temp10878_68 () (_ BitVec 64))
(declare-fun temp10878_69 () (_ BitVec 64))
(declare-fun temp10878_70 () (_ BitVec 64))
(declare-fun temp10878_71 () (_ BitVec 64))
(declare-fun temp10878_72 () (_ BitVec 64))
(declare-fun temp10878_73 () (_ BitVec 64))
(declare-fun temp10878_74 () (_ BitVec 64))
(declare-fun temp10878_75 () (_ BitVec 64))
(declare-fun temp10878_76 () (_ BitVec 64))
(declare-fun temp10878_77 () (_ BitVec 64))
(declare-fun temp10878_78 () (_ BitVec 64))
(declare-fun temp10878_79 () (_ BitVec 64))
(declare-fun temp10878_80 () (_ BitVec 64))
(declare-fun temp10878_81 () (_ BitVec 64))
(declare-fun temp10878_82 () (_ BitVec 64))
(declare-fun temp10878_83 () (_ BitVec 64))
(declare-fun temp10878_84 () (_ BitVec 64))
(declare-fun temp10878_85 () (_ BitVec 64))
(declare-fun temp10878_86 () (_ BitVec 64))
(declare-fun temp10878_87 () (_ BitVec 64))
(declare-fun temp10878_88 () (_ BitVec 64))
(declare-fun temp10878_89 () (_ BitVec 64))
(declare-fun temp10878_90 () (_ BitVec 64))
(declare-fun temp10878_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10878_92 () (_ BitVec 64))
(declare-fun temp10878_93 () (_ BitVec 64))
(declare-fun temp10878_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10878_95 () (_ BitVec 64))
(declare-fun temp10878_96 () (_ BitVec 64))
(declare-fun temp10878_97 () (_ BitVec 64))
(declare-fun temp10878_98 () (_ BitVec 64))
(declare-fun temp10878_99 () (_ BitVec 64))
(declare-fun temp10878_100 () (_ BitVec 64))
(declare-fun temp10878_101 () (_ BitVec 64))
(declare-fun temp10878_102 () (_ BitVec 64))
(declare-fun temp10878_103 () (_ BitVec 64))
(declare-fun temp10878_104 () (_ BitVec 64))
(declare-fun temp10878_105 () (_ BitVec 64))
(declare-fun temp10878_106 () (_ BitVec 64))
(declare-fun temp10878_107 () (_ BitVec 64))
(declare-fun temp10878_108 () (_ BitVec 64))
(declare-fun temp10878_109 () (_ BitVec 64))
(declare-fun temp10878_110 () (_ BitVec 64))
(declare-fun temp10878_111 () (_ BitVec 64))
(declare-fun temp10878_112 () (_ BitVec 64))
(declare-fun temp10878_113 () (_ BitVec 64))
(declare-fun temp10878_114 () (_ BitVec 64))
(declare-fun temp10878_115 () (_ BitVec 64))
(declare-fun temp10878_116 () (_ BitVec 64))
(declare-fun temp10878_117 () (_ BitVec 64))
(declare-fun temp10878_118 () (_ BitVec 64))
(declare-fun temp10878_119 () (_ BitVec 64))
(declare-fun temp10878_120 () (_ BitVec 64))
(declare-fun temp10878_121 () (_ BitVec 64))
(declare-fun temp10878_122 () (_ BitVec 64))
(declare-fun temp10878_123 () (_ BitVec 64))
(declare-fun temp10878_124 () (_ BitVec 64))
(declare-fun temp10878_125 () (_ BitVec 64))
(declare-fun temp10878_126 () (_ BitVec 64))
(declare-fun temp10878_127 () (_ BitVec 64))
(declare-fun temp10878_128 () (_ BitVec 64))
(declare-fun temp10878_129 () (_ BitVec 64))
(declare-fun temp10878_130 () (_ BitVec 64))
(declare-fun temp10878_131 () (_ BitVec 64))
(declare-fun temp10878_132 () (_ BitVec 64))
(declare-fun temp10878_133 () (_ BitVec 64))
(declare-fun temp10878_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10878_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10878_136 () (_ BitVec 64))
(declare-fun temp10878_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10878_138 () (_ BitVec 64))
(declare-fun temp10878_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10878_140 () (_ BitVec 64))
(declare-fun temp10878_141 () (_ BitVec 64))
(declare-fun temp10878_142 () (_ BitVec 64))
(declare-fun temp10878_143 () (_ BitVec 64))
(declare-fun temp10878_144 () (_ BitVec 64))
(declare-fun temp10878_145 () (_ BitVec 64))
(declare-fun temp10878_146 () (_ BitVec 64))
(declare-fun temp10878_147 () (_ BitVec 64))
(declare-fun temp10878_148 () (_ BitVec 64))
(declare-fun temp10878_149 () (_ BitVec 64))
(declare-fun temp10878_150 () (_ BitVec 64))
(declare-fun temp10878_151 () (_ BitVec 64))
(declare-fun temp10878_152 () (_ BitVec 64))
(declare-fun temp10878_153 () (_ BitVec 64))
(declare-fun temp10878_154 () (_ BitVec 64))
(declare-fun temp10878_155 () (_ BitVec 64))
(declare-fun temp10878_157 () (_ BitVec 64))
(declare-fun temp10878_158 () (_ BitVec 64))
(declare-fun temp10878_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10878_159 () (_ BitVec 64))
(declare-fun temp10878_160 () (_ BitVec 64))
(declare-fun temp10878_162 () (_ BitVec 64))
(declare-fun temp10878_163 () (_ BitVec 64))
(declare-fun temp10878_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10878_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10878_165 () (_ BitVec 64))
(declare-fun temp10878_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10878_167 () (_ BitVec 64))
(declare-fun temp10878_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10878_169 () (_ BitVec 64))
(declare-fun temp10878_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10878_171 () (_ BitVec 64))
(declare-fun temp10878_172 () (_ BitVec 64))
(declare-fun temp10878_173 () (_ BitVec 64))
(declare-fun temp10878_174 () (_ BitVec 64))
(declare-fun temp10878_175 () (_ BitVec 64))
(declare-fun temp10878_176 () (_ BitVec 64))
(declare-fun temp10878_177 () (_ BitVec 64))
(declare-fun temp10878_178 () (_ BitVec 64))
(declare-fun temp10878_179 () (_ BitVec 64))
(declare-fun temp10878_180 () (_ BitVec 64))
(declare-fun temp10878_181 () (_ BitVec 64))
(declare-fun temp10878_182 () (_ BitVec 64))
(declare-fun temp10878_183 () (_ BitVec 64))
(declare-fun temp10878_184 () (_ BitVec 64))
(declare-fun temp10878_185 () (_ BitVec 64))
(declare-fun temp10878_186 () (_ BitVec 64))
(declare-fun temp10878_187 () (_ BitVec 64))
(declare-fun temp10878_188 () (_ BitVec 64))
(declare-fun temp10878_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10878_190 () (_ BitVec 64))
(declare-fun temp10878_192 () (_ BitVec 64))
(declare-fun temp10878_193 () (_ BitVec 64))
(declare-fun temp10878_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10878_194 () (_ BitVec 64))
(declare-fun temp10878_195 () (_ BitVec 64))
(declare-fun temp10878_197 () (_ BitVec 64))
(declare-fun temp10878_198 () (_ BitVec 64))
(declare-fun temp10878_196 () (_ BitVec 64))
(declare-fun temp10878_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10878_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10878_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10878_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10878_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10878_204 () (_ BitVec 64))
(declare-fun temp10878_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10878_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10878_207 () (_ BitVec 64))
(declare-fun temp10878_208 () (_ BitVec 64))
(declare-fun temp10878_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10878_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10878_211 () (_ BitVec 64))
(declare-fun temp10878_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10878_213 () (_ BitVec 64))
(declare-fun temp10878_214 () (_ BitVec 64))
(declare-fun temp10878_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10878_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10878_217 () (_ BitVec 64))
(declare-fun temp10878_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10878_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10878_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun temp10878_221 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp10878_222 () (_ BitVec 64))
(assert (= temp10878_1 #x0000000000000001))
(assert (= var77203 temp10878_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10878_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10878_2)))
(assert (= temp10878_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10878_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_4 #x0000000000000000))
(assert (= var210941 temp10878_4))
(assert (= temp10878_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10878_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_6 #x0000000000000000))
(assert (= var210986 temp10878_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10878_7 #x0000000000000000))
(assert (= temp10878_8 temp10878_7))
(assert (= temp10878_9 (select ARGNAME_padding_NAMEEND_VAL temp10878_8)))
(assert (= temp10878_10 #x0000000000000001))
(assert (= temp10878_11 temp10878_10))
(assert (= temp10878_12 (select ARGNAME_padding_NAMEEND_VAL temp10878_11)))
(assert (= temp10878_13 #x0000000000000002))
(assert (= temp10878_14 temp10878_13))
(assert (= temp10878_15 (select ARGNAME_padding_NAMEEND_VAL temp10878_14)))
(assert (= temp10878_16 #x0000000000000003))
(assert (= temp10878_17 temp10878_16))
(assert (= temp10878_18 (select ARGNAME_padding_NAMEEND_VAL temp10878_17)))
(assert (= temp10878_19 #x0000000000000004))
(assert (= temp10878_20 temp10878_19))
(assert (= temp10878_21 (select ARGNAME_padding_NAMEEND_VAL temp10878_20)))
(assert (= temp10878_22 #x0000000000000005))
(assert (= temp10878_23 temp10878_22))
(assert (= temp10878_24 (select ARGNAME_padding_NAMEEND_VAL temp10878_23)))
(assert (= temp10878_25 #x0000000000000000))
(assert (= temp10878_26 #x0000000000000000))
(assert (= temp10878_27 temp10878_26))
(assert (= temp10878_28 (select ARGNAME_padding_NAMEEND_VAL temp10878_27)))
(assert (= temp10878_29 #x0000000000000000))
(assert (= temp10878_30 #x0000000000000001))
(assert (= temp10878_31 temp10878_30))
(assert (= temp10878_32 (select ARGNAME_padding_NAMEEND_VAL temp10878_31)))
(assert (= temp10878_33 #x0000000000000000))
(assert (= temp10878_34 #x0000000000000002))
(assert (= temp10878_35 temp10878_34))
(assert (= temp10878_36 (select ARGNAME_padding_NAMEEND_VAL temp10878_35)))
(assert (= temp10878_37 #x0000000000000000))
(assert (= temp10878_38 #x0000000000000003))
(assert (= temp10878_39 temp10878_38))
(assert (= temp10878_40 (select ARGNAME_padding_NAMEEND_VAL temp10878_39)))
(assert (= temp10878_41 #x0000000000000000))
(assert (= temp10878_42 #x0000000000000004))
(assert (= temp10878_43 temp10878_42))
(assert (= temp10878_44 (select ARGNAME_padding_NAMEEND_VAL temp10878_43)))
(assert (= temp10878_45 #x0000000000000000))
(assert (= temp10878_46 #x0000000000000005))
(assert (= temp10878_47 temp10878_46))
(assert (= temp10878_48 (select ARGNAME_padding_NAMEEND_VAL temp10878_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10878_28 temp10878_25)
             (bvslt temp10878_32 temp10878_29)
             (bvslt temp10878_36 temp10878_33)
             (bvslt temp10878_40 temp10878_37)
             (bvslt temp10878_44 temp10878_41)
             (bvslt temp10878_48 temp10878_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_49 #x0000000000000000))
(assert (= var1191714 temp10878_49))
(assert (= temp10878_50 #x0000000000000000))
(assert (= temp10878_51 temp10878_50))
(assert (= temp10878_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_51)))
(assert (= temp10878_53 #x0000000000000001))
(assert (= temp10878_54 temp10878_53))
(assert (= temp10878_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_54)))
(assert (= temp10878_56 #x0000000000000002))
(assert (= temp10878_57 temp10878_56))
(assert (= temp10878_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_57)))
(assert (= temp10878_59 #x0000000000000003))
(assert (= temp10878_60 temp10878_59))
(assert (= temp10878_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_60)))
(assert (= temp10878_62 #x0000000000000004))
(assert (= temp10878_63 temp10878_62))
(assert (= temp10878_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_63)))
(assert (= temp10878_65 #x0000000000000005))
(assert (= temp10878_66 temp10878_65))
(assert (= temp10878_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_66)))
(assert (= temp10878_68 #x0000000000000000))
(assert (= temp10878_69 #x0000000000000000))
(assert (= temp10878_70 temp10878_69))
(assert (= temp10878_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_70)))
(assert (= temp10878_72 #x0000000000000000))
(assert (= temp10878_73 #x0000000000000001))
(assert (= temp10878_74 temp10878_73))
(assert (= temp10878_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_74)))
(assert (= temp10878_76 #x0000000000000000))
(assert (= temp10878_77 #x0000000000000002))
(assert (= temp10878_78 temp10878_77))
(assert (= temp10878_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_78)))
(assert (= temp10878_80 #x0000000000000000))
(assert (= temp10878_81 #x0000000000000003))
(assert (= temp10878_82 temp10878_81))
(assert (= temp10878_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_82)))
(assert (= temp10878_84 #x0000000000000000))
(assert (= temp10878_85 #x0000000000000004))
(assert (= temp10878_86 temp10878_85))
(assert (= temp10878_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_86)))
(assert (= temp10878_88 #x0000000000000000))
(assert (= temp10878_89 #x0000000000000005))
(assert (= temp10878_90 temp10878_89))
(assert (= temp10878_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10878_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10878_71 temp10878_68)
             (bvslt temp10878_75 temp10878_72)
             (bvslt temp10878_79 temp10878_76)
             (bvslt temp10878_83 temp10878_80)
             (bvslt temp10878_87 temp10878_84)
             (bvslt temp10878_91 temp10878_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_92 #x0000000000000000))
(assert (= var1191725 temp10878_92))
(assert (= temp10878_93 #x0000000000000000))
(assert (= temp10878_94 temp10878_93))
(assert (= temp10878_95 (select ARGNAME_stride_NAMEEND_VAL temp10878_94)))
(assert (= temp10878_96 #x0000000000000001))
(assert (= temp10878_97 temp10878_96))
(assert (= temp10878_98 (select ARGNAME_stride_NAMEEND_VAL temp10878_97)))
(assert (= temp10878_99 #x0000000000000002))
(assert (= temp10878_100 temp10878_99))
(assert (= temp10878_101 (select ARGNAME_stride_NAMEEND_VAL temp10878_100)))
(assert (= temp10878_102 #x0000000000000003))
(assert (= temp10878_103 temp10878_102))
(assert (= temp10878_104 (select ARGNAME_stride_NAMEEND_VAL temp10878_103)))
(assert (= temp10878_105 #x0000000000000004))
(assert (= temp10878_106 temp10878_105))
(assert (= temp10878_107 (select ARGNAME_stride_NAMEEND_VAL temp10878_106)))
(assert (= temp10878_108 #x0000000000000005))
(assert (= temp10878_109 temp10878_108))
(assert (= temp10878_110 (select ARGNAME_stride_NAMEEND_VAL temp10878_109)))
(assert (= temp10878_111 #x0000000000000000))
(assert (= temp10878_112 #x0000000000000000))
(assert (= temp10878_113 temp10878_112))
(assert (= temp10878_114 (select ARGNAME_stride_NAMEEND_VAL temp10878_113)))
(assert (= temp10878_115 #x0000000000000000))
(assert (= temp10878_116 #x0000000000000001))
(assert (= temp10878_117 temp10878_116))
(assert (= temp10878_118 (select ARGNAME_stride_NAMEEND_VAL temp10878_117)))
(assert (= temp10878_119 #x0000000000000000))
(assert (= temp10878_120 #x0000000000000002))
(assert (= temp10878_121 temp10878_120))
(assert (= temp10878_122 (select ARGNAME_stride_NAMEEND_VAL temp10878_121)))
(assert (= temp10878_123 #x0000000000000000))
(assert (= temp10878_124 #x0000000000000003))
(assert (= temp10878_125 temp10878_124))
(assert (= temp10878_126 (select ARGNAME_stride_NAMEEND_VAL temp10878_125)))
(assert (= temp10878_127 #x0000000000000000))
(assert (= temp10878_128 #x0000000000000004))
(assert (= temp10878_129 temp10878_128))
(assert (= temp10878_130 (select ARGNAME_stride_NAMEEND_VAL temp10878_129)))
(assert (= temp10878_131 #x0000000000000000))
(assert (= temp10878_132 #x0000000000000005))
(assert (= temp10878_133 temp10878_132))
(assert (= temp10878_134 (select ARGNAME_stride_NAMEEND_VAL temp10878_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10878_114 temp10878_111)
             (bvsle temp10878_118 temp10878_115)
             (bvsle temp10878_122 temp10878_119)
             (bvsle temp10878_126 temp10878_123)
             (bvsle temp10878_130 temp10878_127)
             (bvsle temp10878_134 temp10878_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_135 #x0000000000000000))
(assert (= var1191735 temp10878_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_136 #x0000000000000001))
(assert (= var1191747 temp10878_136))
(assert (= temp10878_137 #x0000000000000000))
(assert (= var1179826 temp10878_137))
(assert (= temp10878_138 #x0000000000000000))
(assert (= temp10878_139 temp10878_138))
(assert (= temp10878_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_139)))
(assert (= temp10878_141 #x0000000000000001))
(assert (= temp10878_142 temp10878_141))
(assert (= temp10878_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_142)))
(assert (= temp10878_144 #x0000000000000002))
(assert (= temp10878_145 temp10878_144))
(assert (= temp10878_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_145)))
(assert (= temp10878_147 #x0000000000000003))
(assert (= temp10878_148 temp10878_147))
(assert (= temp10878_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_148)))
(assert (= temp10878_150 #x0000000000000004))
(assert (= temp10878_151 temp10878_150))
(assert (= temp10878_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_151)))
(assert (= temp10878_153 #x0000000000000005))
(assert (= temp10878_154 temp10878_153))
(assert (= temp10878_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_154)))
(assert (= temp10878_157 var1179826))
(assert (= temp10878_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_157)))
(assert (= temp10878_156 temp10878_158))
(assert (= var1191780
   (ite (bvslt temp10878_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_159 #x0000000000000000))
(assert (= var1191780 temp10878_159))
(assert (= temp10878_160 #x0000000000000000))
(assert (= var1179826 temp10878_160))
(assert (= temp10878_162 var1179826))
(assert (= temp10878_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_162)))
(assert (= temp10878_161 temp10878_163))
(assert (= var1191802 (bvsmod temp10878_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10878_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10878_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10878_165 #x0000000000000001))
(assert (= var1191803 temp10878_165))
(assert (= temp10878_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10878_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_167 #x0000000000000001))
(assert (= var1191823 temp10878_167))
(assert (= temp10878_168 #x0000000000000001))
(assert (= var1180714 temp10878_168))
(assert (= temp10878_169 #x0000000000000000))
(assert (= temp10878_170 temp10878_169))
(assert (= temp10878_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10878_170)))
(assert (= temp10878_172 #x0000000000000001))
(assert (= temp10878_173 temp10878_172))
(assert (= temp10878_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10878_173)))
(assert (= temp10878_175 #x0000000000000002))
(assert (= temp10878_176 temp10878_175))
(assert (= temp10878_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10878_176)))
(assert (= temp10878_178 #x0000000000000003))
(assert (= temp10878_179 temp10878_178))
(assert (= temp10878_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10878_179)))
(assert (= temp10878_181 #x0000000000000004))
(assert (= temp10878_182 temp10878_181))
(assert (= temp10878_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10878_182)))
(assert (= temp10878_184 #x0000000000000005))
(assert (= temp10878_185 temp10878_184))
(assert (= temp10878_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10878_185)))
(assert (= temp10878_187 #x0000000000000000))
(assert (= temp10878_188
   (ite (bvslt var1180714 temp10878_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10878_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10878_188)))
(assert (= var1191831 temp10878_189))
(assert (bvslt (ite (bvslt var1180714 temp10878_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10878_190 #x0000000000000001))
(assert (= var1180714 temp10878_190))
(assert (= temp10878_192 var1180714))
(assert (= temp10878_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_192)))
(assert (= temp10878_191 temp10878_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10878_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10878_194 #x0000000000000001))
(assert (= var1191836 temp10878_194))
(assert (= temp10878_195 #x0000000000000000))
(assert (= var1179826 temp10878_195))
(assert (= temp10878_197 var1179826))
(assert (= temp10878_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10878_197)))
(assert (= temp10878_196 temp10878_198))
(assert (= temp10878_199 #x0000000000000002))
(assert (= var1586025 temp10878_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10878_200 #x0000000000000001))
(assert (= var1191993 temp10878_200))
(assert (= temp10878_201 #x0000000000000001))
(assert (= var2700303 temp10878_201))
(assert (= temp10878_202 #x0000000000000001))
(assert (= var2962447 temp10878_202))
(assert (= temp10878_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10878_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_204 #x0000000000000001))
(assert (= var211058 temp10878_204))
(assert (= temp10878_205 #x0000000000000001))
(assert (= var211188 temp10878_205))
(assert (= var3879401 var211188))
(assert (= temp10878_206 #x0000000000000000))
(assert (= var3866802 temp10878_206))
(assert (= temp10878_207 #x0000000000000000))
(assert (= temp10878_208
   (ite (bvslt var3866802 temp10878_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10878_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10878_208)))
(assert (= var3879420 temp10878_209))
(assert (bvslt (ite (bvslt var3866802 temp10878_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10878_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10878_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10878_211 #x0000000000000000))
(assert (= var3879421 temp10878_211))
(assert (= temp10878_212 #x0000000000000001))
(assert (= var3867690 temp10878_212))
(assert (= temp10878_213 #x0000000000000000))
(assert (= temp10878_214
   (ite (bvslt var3867690 temp10878_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10878_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10878_214)))
(assert (= var3879423 temp10878_215))
(assert (bvslt (ite (bvslt var3867690 temp10878_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10878_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10878_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10878_217 #x0000000000000001))
(assert (= var3879424 temp10878_217))
(assert (= temp10878_218 #x0000000000000000))
(assert (= var4133117 temp10878_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10878_219 #x0000000000000002))
(assert (= var4339331 temp10878_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10878_220 #x0000000000000000))
(assert (= var4404892 temp10878_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5714320 var211201))
(assert (= var5976464 var211201))
(assert (= temp10878_221 #x0000000000000000))
(assert (= var6304144 temp10878_221))
(assert (= temp10878_222 #x0000000000000001))
(assert (= var211058 temp10878_222))
(model-add temp10878_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10878_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10878_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10878_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




