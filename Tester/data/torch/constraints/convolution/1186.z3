(declare-fun temp10312_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10312_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10312_3 () (_ BitVec 64))
(declare-fun temp10312_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10312_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10312_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10312_7 () (_ BitVec 64))
(declare-fun temp10312_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10312_9 () (_ BitVec 64))
(declare-fun temp10312_10 () (_ BitVec 64))
(declare-fun temp10312_11 () (_ BitVec 64))
(declare-fun temp10312_12 () (_ BitVec 64))
(declare-fun temp10312_13 () (_ BitVec 64))
(declare-fun temp10312_14 () (_ BitVec 64))
(declare-fun temp10312_15 () (_ BitVec 64))
(declare-fun temp10312_16 () (_ BitVec 64))
(declare-fun temp10312_17 () (_ BitVec 64))
(declare-fun temp10312_18 () (_ BitVec 64))
(declare-fun temp10312_19 () (_ BitVec 64))
(declare-fun temp10312_20 () (_ BitVec 64))
(declare-fun temp10312_21 () (_ BitVec 64))
(declare-fun temp10312_22 () (_ BitVec 64))
(declare-fun temp10312_23 () (_ BitVec 64))
(declare-fun temp10312_24 () (_ BitVec 64))
(declare-fun temp10312_25 () (_ BitVec 64))
(declare-fun temp10312_26 () (_ BitVec 64))
(declare-fun temp10312_27 () (_ BitVec 64))
(declare-fun temp10312_28 () (_ BitVec 64))
(declare-fun temp10312_29 () (_ BitVec 64))
(declare-fun temp10312_30 () (_ BitVec 64))
(declare-fun temp10312_31 () (_ BitVec 64))
(declare-fun temp10312_32 () (_ BitVec 64))
(declare-fun temp10312_33 () (_ BitVec 64))
(declare-fun temp10312_34 () (_ BitVec 64))
(declare-fun temp10312_35 () (_ BitVec 64))
(declare-fun temp10312_36 () (_ BitVec 64))
(declare-fun temp10312_37 () (_ BitVec 64))
(declare-fun temp10312_38 () (_ BitVec 64))
(declare-fun temp10312_39 () (_ BitVec 64))
(declare-fun temp10312_40 () (_ BitVec 64))
(declare-fun temp10312_41 () (_ BitVec 64))
(declare-fun temp10312_42 () (_ BitVec 64))
(declare-fun temp10312_43 () (_ BitVec 64))
(declare-fun temp10312_44 () (_ BitVec 64))
(declare-fun temp10312_45 () (_ BitVec 64))
(declare-fun temp10312_46 () (_ BitVec 64))
(declare-fun temp10312_47 () (_ BitVec 64))
(declare-fun temp10312_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10312_49 () (_ BitVec 64))
(declare-fun temp10312_50 () (_ BitVec 64))
(declare-fun temp10312_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10312_52 () (_ BitVec 64))
(declare-fun temp10312_53 () (_ BitVec 64))
(declare-fun temp10312_54 () (_ BitVec 64))
(declare-fun temp10312_55 () (_ BitVec 64))
(declare-fun temp10312_56 () (_ BitVec 64))
(declare-fun temp10312_57 () (_ BitVec 64))
(declare-fun temp10312_58 () (_ BitVec 64))
(declare-fun temp10312_59 () (_ BitVec 64))
(declare-fun temp10312_60 () (_ BitVec 64))
(declare-fun temp10312_61 () (_ BitVec 64))
(declare-fun temp10312_62 () (_ BitVec 64))
(declare-fun temp10312_63 () (_ BitVec 64))
(declare-fun temp10312_64 () (_ BitVec 64))
(declare-fun temp10312_65 () (_ BitVec 64))
(declare-fun temp10312_66 () (_ BitVec 64))
(declare-fun temp10312_67 () (_ BitVec 64))
(declare-fun temp10312_68 () (_ BitVec 64))
(declare-fun temp10312_69 () (_ BitVec 64))
(declare-fun temp10312_70 () (_ BitVec 64))
(declare-fun temp10312_71 () (_ BitVec 64))
(declare-fun temp10312_72 () (_ BitVec 64))
(declare-fun temp10312_73 () (_ BitVec 64))
(declare-fun temp10312_74 () (_ BitVec 64))
(declare-fun temp10312_75 () (_ BitVec 64))
(declare-fun temp10312_76 () (_ BitVec 64))
(declare-fun temp10312_77 () (_ BitVec 64))
(declare-fun temp10312_78 () (_ BitVec 64))
(declare-fun temp10312_79 () (_ BitVec 64))
(declare-fun temp10312_80 () (_ BitVec 64))
(declare-fun temp10312_81 () (_ BitVec 64))
(declare-fun temp10312_82 () (_ BitVec 64))
(declare-fun temp10312_83 () (_ BitVec 64))
(declare-fun temp10312_84 () (_ BitVec 64))
(declare-fun temp10312_85 () (_ BitVec 64))
(declare-fun temp10312_86 () (_ BitVec 64))
(declare-fun temp10312_87 () (_ BitVec 64))
(declare-fun temp10312_88 () (_ BitVec 64))
(declare-fun temp10312_89 () (_ BitVec 64))
(declare-fun temp10312_90 () (_ BitVec 64))
(declare-fun temp10312_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10312_92 () (_ BitVec 64))
(declare-fun temp10312_93 () (_ BitVec 64))
(declare-fun temp10312_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10312_95 () (_ BitVec 64))
(declare-fun temp10312_96 () (_ BitVec 64))
(declare-fun temp10312_97 () (_ BitVec 64))
(declare-fun temp10312_98 () (_ BitVec 64))
(declare-fun temp10312_99 () (_ BitVec 64))
(declare-fun temp10312_100 () (_ BitVec 64))
(declare-fun temp10312_101 () (_ BitVec 64))
(declare-fun temp10312_102 () (_ BitVec 64))
(declare-fun temp10312_103 () (_ BitVec 64))
(declare-fun temp10312_104 () (_ BitVec 64))
(declare-fun temp10312_105 () (_ BitVec 64))
(declare-fun temp10312_106 () (_ BitVec 64))
(declare-fun temp10312_107 () (_ BitVec 64))
(declare-fun temp10312_108 () (_ BitVec 64))
(declare-fun temp10312_109 () (_ BitVec 64))
(declare-fun temp10312_110 () (_ BitVec 64))
(declare-fun temp10312_111 () (_ BitVec 64))
(declare-fun temp10312_112 () (_ BitVec 64))
(declare-fun temp10312_113 () (_ BitVec 64))
(declare-fun temp10312_114 () (_ BitVec 64))
(declare-fun temp10312_115 () (_ BitVec 64))
(declare-fun temp10312_116 () (_ BitVec 64))
(declare-fun temp10312_117 () (_ BitVec 64))
(declare-fun temp10312_118 () (_ BitVec 64))
(declare-fun temp10312_119 () (_ BitVec 64))
(declare-fun temp10312_120 () (_ BitVec 64))
(declare-fun temp10312_121 () (_ BitVec 64))
(declare-fun temp10312_122 () (_ BitVec 64))
(declare-fun temp10312_123 () (_ BitVec 64))
(declare-fun temp10312_124 () (_ BitVec 64))
(declare-fun temp10312_125 () (_ BitVec 64))
(declare-fun temp10312_126 () (_ BitVec 64))
(declare-fun temp10312_127 () (_ BitVec 64))
(declare-fun temp10312_128 () (_ BitVec 64))
(declare-fun temp10312_129 () (_ BitVec 64))
(declare-fun temp10312_130 () (_ BitVec 64))
(declare-fun temp10312_131 () (_ BitVec 64))
(declare-fun temp10312_132 () (_ BitVec 64))
(declare-fun temp10312_133 () (_ BitVec 64))
(declare-fun temp10312_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10312_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10312_136 () (_ BitVec 64))
(declare-fun temp10312_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10312_138 () (_ BitVec 64))
(declare-fun temp10312_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10312_140 () (_ BitVec 64))
(declare-fun temp10312_141 () (_ BitVec 64))
(declare-fun temp10312_142 () (_ BitVec 64))
(declare-fun temp10312_143 () (_ BitVec 64))
(declare-fun temp10312_144 () (_ BitVec 64))
(declare-fun temp10312_145 () (_ BitVec 64))
(declare-fun temp10312_146 () (_ BitVec 64))
(declare-fun temp10312_147 () (_ BitVec 64))
(declare-fun temp10312_148 () (_ BitVec 64))
(declare-fun temp10312_149 () (_ BitVec 64))
(declare-fun temp10312_150 () (_ BitVec 64))
(declare-fun temp10312_151 () (_ BitVec 64))
(declare-fun temp10312_152 () (_ BitVec 64))
(declare-fun temp10312_153 () (_ BitVec 64))
(declare-fun temp10312_154 () (_ BitVec 64))
(declare-fun temp10312_155 () (_ BitVec 64))
(declare-fun temp10312_157 () (_ BitVec 64))
(declare-fun temp10312_158 () (_ BitVec 64))
(declare-fun temp10312_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10312_159 () (_ BitVec 64))
(declare-fun temp10312_160 () (_ BitVec 64))
(declare-fun temp10312_162 () (_ BitVec 64))
(declare-fun temp10312_163 () (_ BitVec 64))
(declare-fun temp10312_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10312_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10312_165 () (_ BitVec 64))
(declare-fun temp10312_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10312_167 () (_ BitVec 64))
(declare-fun temp10312_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10312_169 () (_ BitVec 64))
(declare-fun temp10312_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10312_171 () (_ BitVec 64))
(declare-fun temp10312_172 () (_ BitVec 64))
(declare-fun temp10312_173 () (_ BitVec 64))
(declare-fun temp10312_174 () (_ BitVec 64))
(declare-fun temp10312_175 () (_ BitVec 64))
(declare-fun temp10312_176 () (_ BitVec 64))
(declare-fun temp10312_177 () (_ BitVec 64))
(declare-fun temp10312_178 () (_ BitVec 64))
(declare-fun temp10312_179 () (_ BitVec 64))
(declare-fun temp10312_180 () (_ BitVec 64))
(declare-fun temp10312_181 () (_ BitVec 64))
(declare-fun temp10312_182 () (_ BitVec 64))
(declare-fun temp10312_183 () (_ BitVec 64))
(declare-fun temp10312_184 () (_ BitVec 64))
(declare-fun temp10312_185 () (_ BitVec 64))
(declare-fun temp10312_186 () (_ BitVec 64))
(declare-fun temp10312_187 () (_ BitVec 64))
(declare-fun temp10312_188 () (_ BitVec 64))
(declare-fun temp10312_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10312_190 () (_ BitVec 64))
(declare-fun temp10312_192 () (_ BitVec 64))
(declare-fun temp10312_193 () (_ BitVec 64))
(declare-fun temp10312_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10312_194 () (_ BitVec 64))
(declare-fun temp10312_195 () (_ BitVec 64))
(declare-fun temp10312_197 () (_ BitVec 64))
(declare-fun temp10312_198 () (_ BitVec 64))
(declare-fun temp10312_196 () (_ BitVec 64))
(declare-fun temp10312_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10312_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10312_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10312_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10312_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10312_204 () (_ BitVec 64))
(declare-fun temp10312_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10312_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10312_207 () (_ BitVec 64))
(declare-fun temp10312_208 () (_ BitVec 64))
(declare-fun temp10312_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10312_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10312_211 () (_ BitVec 64))
(declare-fun temp10312_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10312_213 () (_ BitVec 64))
(declare-fun temp10312_214 () (_ BitVec 64))
(declare-fun temp10312_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10312_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10312_217 () (_ BitVec 64))
(declare-fun temp10312_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10312_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10312_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp10312_221 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10312_222 () (_ BitVec 64))
(assert (= temp10312_1 #x0000000000000001))
(assert (= var77203 temp10312_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10312_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10312_2)))
(assert (= temp10312_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10312_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_4 #x0000000000000000))
(assert (= var210941 temp10312_4))
(assert (= temp10312_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10312_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_6 #x0000000000000000))
(assert (= var210986 temp10312_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10312_7 #x0000000000000000))
(assert (= temp10312_8 temp10312_7))
(assert (= temp10312_9 (select ARGNAME_padding_NAMEEND_VAL temp10312_8)))
(assert (= temp10312_10 #x0000000000000001))
(assert (= temp10312_11 temp10312_10))
(assert (= temp10312_12 (select ARGNAME_padding_NAMEEND_VAL temp10312_11)))
(assert (= temp10312_13 #x0000000000000002))
(assert (= temp10312_14 temp10312_13))
(assert (= temp10312_15 (select ARGNAME_padding_NAMEEND_VAL temp10312_14)))
(assert (= temp10312_16 #x0000000000000003))
(assert (= temp10312_17 temp10312_16))
(assert (= temp10312_18 (select ARGNAME_padding_NAMEEND_VAL temp10312_17)))
(assert (= temp10312_19 #x0000000000000004))
(assert (= temp10312_20 temp10312_19))
(assert (= temp10312_21 (select ARGNAME_padding_NAMEEND_VAL temp10312_20)))
(assert (= temp10312_22 #x0000000000000005))
(assert (= temp10312_23 temp10312_22))
(assert (= temp10312_24 (select ARGNAME_padding_NAMEEND_VAL temp10312_23)))
(assert (= temp10312_25 #x0000000000000000))
(assert (= temp10312_26 #x0000000000000000))
(assert (= temp10312_27 temp10312_26))
(assert (= temp10312_28 (select ARGNAME_padding_NAMEEND_VAL temp10312_27)))
(assert (= temp10312_29 #x0000000000000000))
(assert (= temp10312_30 #x0000000000000001))
(assert (= temp10312_31 temp10312_30))
(assert (= temp10312_32 (select ARGNAME_padding_NAMEEND_VAL temp10312_31)))
(assert (= temp10312_33 #x0000000000000000))
(assert (= temp10312_34 #x0000000000000002))
(assert (= temp10312_35 temp10312_34))
(assert (= temp10312_36 (select ARGNAME_padding_NAMEEND_VAL temp10312_35)))
(assert (= temp10312_37 #x0000000000000000))
(assert (= temp10312_38 #x0000000000000003))
(assert (= temp10312_39 temp10312_38))
(assert (= temp10312_40 (select ARGNAME_padding_NAMEEND_VAL temp10312_39)))
(assert (= temp10312_41 #x0000000000000000))
(assert (= temp10312_42 #x0000000000000004))
(assert (= temp10312_43 temp10312_42))
(assert (= temp10312_44 (select ARGNAME_padding_NAMEEND_VAL temp10312_43)))
(assert (= temp10312_45 #x0000000000000000))
(assert (= temp10312_46 #x0000000000000005))
(assert (= temp10312_47 temp10312_46))
(assert (= temp10312_48 (select ARGNAME_padding_NAMEEND_VAL temp10312_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10312_28 temp10312_25)
             (bvslt temp10312_32 temp10312_29)
             (bvslt temp10312_36 temp10312_33)
             (bvslt temp10312_40 temp10312_37)
             (bvslt temp10312_44 temp10312_41)
             (bvslt temp10312_48 temp10312_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_49 #x0000000000000000))
(assert (= var1191714 temp10312_49))
(assert (= temp10312_50 #x0000000000000000))
(assert (= temp10312_51 temp10312_50))
(assert (= temp10312_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_51)))
(assert (= temp10312_53 #x0000000000000001))
(assert (= temp10312_54 temp10312_53))
(assert (= temp10312_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_54)))
(assert (= temp10312_56 #x0000000000000002))
(assert (= temp10312_57 temp10312_56))
(assert (= temp10312_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_57)))
(assert (= temp10312_59 #x0000000000000003))
(assert (= temp10312_60 temp10312_59))
(assert (= temp10312_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_60)))
(assert (= temp10312_62 #x0000000000000004))
(assert (= temp10312_63 temp10312_62))
(assert (= temp10312_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_63)))
(assert (= temp10312_65 #x0000000000000005))
(assert (= temp10312_66 temp10312_65))
(assert (= temp10312_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_66)))
(assert (= temp10312_68 #x0000000000000000))
(assert (= temp10312_69 #x0000000000000000))
(assert (= temp10312_70 temp10312_69))
(assert (= temp10312_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_70)))
(assert (= temp10312_72 #x0000000000000000))
(assert (= temp10312_73 #x0000000000000001))
(assert (= temp10312_74 temp10312_73))
(assert (= temp10312_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_74)))
(assert (= temp10312_76 #x0000000000000000))
(assert (= temp10312_77 #x0000000000000002))
(assert (= temp10312_78 temp10312_77))
(assert (= temp10312_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_78)))
(assert (= temp10312_80 #x0000000000000000))
(assert (= temp10312_81 #x0000000000000003))
(assert (= temp10312_82 temp10312_81))
(assert (= temp10312_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_82)))
(assert (= temp10312_84 #x0000000000000000))
(assert (= temp10312_85 #x0000000000000004))
(assert (= temp10312_86 temp10312_85))
(assert (= temp10312_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_86)))
(assert (= temp10312_88 #x0000000000000000))
(assert (= temp10312_89 #x0000000000000005))
(assert (= temp10312_90 temp10312_89))
(assert (= temp10312_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10312_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10312_71 temp10312_68)
             (bvslt temp10312_75 temp10312_72)
             (bvslt temp10312_79 temp10312_76)
             (bvslt temp10312_83 temp10312_80)
             (bvslt temp10312_87 temp10312_84)
             (bvslt temp10312_91 temp10312_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_92 #x0000000000000000))
(assert (= var1191725 temp10312_92))
(assert (= temp10312_93 #x0000000000000000))
(assert (= temp10312_94 temp10312_93))
(assert (= temp10312_95 (select ARGNAME_stride_NAMEEND_VAL temp10312_94)))
(assert (= temp10312_96 #x0000000000000001))
(assert (= temp10312_97 temp10312_96))
(assert (= temp10312_98 (select ARGNAME_stride_NAMEEND_VAL temp10312_97)))
(assert (= temp10312_99 #x0000000000000002))
(assert (= temp10312_100 temp10312_99))
(assert (= temp10312_101 (select ARGNAME_stride_NAMEEND_VAL temp10312_100)))
(assert (= temp10312_102 #x0000000000000003))
(assert (= temp10312_103 temp10312_102))
(assert (= temp10312_104 (select ARGNAME_stride_NAMEEND_VAL temp10312_103)))
(assert (= temp10312_105 #x0000000000000004))
(assert (= temp10312_106 temp10312_105))
(assert (= temp10312_107 (select ARGNAME_stride_NAMEEND_VAL temp10312_106)))
(assert (= temp10312_108 #x0000000000000005))
(assert (= temp10312_109 temp10312_108))
(assert (= temp10312_110 (select ARGNAME_stride_NAMEEND_VAL temp10312_109)))
(assert (= temp10312_111 #x0000000000000000))
(assert (= temp10312_112 #x0000000000000000))
(assert (= temp10312_113 temp10312_112))
(assert (= temp10312_114 (select ARGNAME_stride_NAMEEND_VAL temp10312_113)))
(assert (= temp10312_115 #x0000000000000000))
(assert (= temp10312_116 #x0000000000000001))
(assert (= temp10312_117 temp10312_116))
(assert (= temp10312_118 (select ARGNAME_stride_NAMEEND_VAL temp10312_117)))
(assert (= temp10312_119 #x0000000000000000))
(assert (= temp10312_120 #x0000000000000002))
(assert (= temp10312_121 temp10312_120))
(assert (= temp10312_122 (select ARGNAME_stride_NAMEEND_VAL temp10312_121)))
(assert (= temp10312_123 #x0000000000000000))
(assert (= temp10312_124 #x0000000000000003))
(assert (= temp10312_125 temp10312_124))
(assert (= temp10312_126 (select ARGNAME_stride_NAMEEND_VAL temp10312_125)))
(assert (= temp10312_127 #x0000000000000000))
(assert (= temp10312_128 #x0000000000000004))
(assert (= temp10312_129 temp10312_128))
(assert (= temp10312_130 (select ARGNAME_stride_NAMEEND_VAL temp10312_129)))
(assert (= temp10312_131 #x0000000000000000))
(assert (= temp10312_132 #x0000000000000005))
(assert (= temp10312_133 temp10312_132))
(assert (= temp10312_134 (select ARGNAME_stride_NAMEEND_VAL temp10312_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10312_114 temp10312_111)
             (bvsle temp10312_118 temp10312_115)
             (bvsle temp10312_122 temp10312_119)
             (bvsle temp10312_126 temp10312_123)
             (bvsle temp10312_130 temp10312_127)
             (bvsle temp10312_134 temp10312_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_135 #x0000000000000000))
(assert (= var1191735 temp10312_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_136 #x0000000000000001))
(assert (= var1191747 temp10312_136))
(assert (= temp10312_137 #x0000000000000000))
(assert (= var1179826 temp10312_137))
(assert (= temp10312_138 #x0000000000000000))
(assert (= temp10312_139 temp10312_138))
(assert (= temp10312_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_139)))
(assert (= temp10312_141 #x0000000000000001))
(assert (= temp10312_142 temp10312_141))
(assert (= temp10312_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_142)))
(assert (= temp10312_144 #x0000000000000002))
(assert (= temp10312_145 temp10312_144))
(assert (= temp10312_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_145)))
(assert (= temp10312_147 #x0000000000000003))
(assert (= temp10312_148 temp10312_147))
(assert (= temp10312_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_148)))
(assert (= temp10312_150 #x0000000000000004))
(assert (= temp10312_151 temp10312_150))
(assert (= temp10312_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_151)))
(assert (= temp10312_153 #x0000000000000005))
(assert (= temp10312_154 temp10312_153))
(assert (= temp10312_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_154)))
(assert (= temp10312_157 var1179826))
(assert (= temp10312_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_157)))
(assert (= temp10312_156 temp10312_158))
(assert (= var1191780
   (ite (bvslt temp10312_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_159 #x0000000000000000))
(assert (= var1191780 temp10312_159))
(assert (= temp10312_160 #x0000000000000000))
(assert (= var1179826 temp10312_160))
(assert (= temp10312_162 var1179826))
(assert (= temp10312_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_162)))
(assert (= temp10312_161 temp10312_163))
(assert (= var1191802 (bvsmod temp10312_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10312_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10312_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10312_165 #x0000000000000001))
(assert (= var1191803 temp10312_165))
(assert (= temp10312_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10312_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_167 #x0000000000000001))
(assert (= var1191823 temp10312_167))
(assert (= temp10312_168 #x0000000000000001))
(assert (= var1180714 temp10312_168))
(assert (= temp10312_169 #x0000000000000000))
(assert (= temp10312_170 temp10312_169))
(assert (= temp10312_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10312_170)))
(assert (= temp10312_172 #x0000000000000001))
(assert (= temp10312_173 temp10312_172))
(assert (= temp10312_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10312_173)))
(assert (= temp10312_175 #x0000000000000002))
(assert (= temp10312_176 temp10312_175))
(assert (= temp10312_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10312_176)))
(assert (= temp10312_178 #x0000000000000003))
(assert (= temp10312_179 temp10312_178))
(assert (= temp10312_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10312_179)))
(assert (= temp10312_181 #x0000000000000004))
(assert (= temp10312_182 temp10312_181))
(assert (= temp10312_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10312_182)))
(assert (= temp10312_184 #x0000000000000005))
(assert (= temp10312_185 temp10312_184))
(assert (= temp10312_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10312_185)))
(assert (= temp10312_187 #x0000000000000000))
(assert (= temp10312_188
   (ite (bvslt var1180714 temp10312_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10312_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10312_188)))
(assert (= var1191831 temp10312_189))
(assert (bvslt (ite (bvslt var1180714 temp10312_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10312_190 #x0000000000000001))
(assert (= var1180714 temp10312_190))
(assert (= temp10312_192 var1180714))
(assert (= temp10312_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_192)))
(assert (= temp10312_191 temp10312_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10312_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10312_194 #x0000000000000001))
(assert (= var1191836 temp10312_194))
(assert (= temp10312_195 #x0000000000000000))
(assert (= var1179826 temp10312_195))
(assert (= temp10312_197 var1179826))
(assert (= temp10312_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10312_197)))
(assert (= temp10312_196 temp10312_198))
(assert (= temp10312_199 #x0000000000000002))
(assert (= var1586025 temp10312_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10312_200 #x0000000000000001))
(assert (= var1191993 temp10312_200))
(assert (= temp10312_201 #x0000000000000001))
(assert (= var2700303 temp10312_201))
(assert (= temp10312_202 #x0000000000000001))
(assert (= var2962447 temp10312_202))
(assert (= temp10312_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10312_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_204 #x0000000000000001))
(assert (= var211058 temp10312_204))
(assert (= temp10312_205 #x0000000000000001))
(assert (= var211188 temp10312_205))
(assert (= var3879401 var211188))
(assert (= temp10312_206 #x0000000000000000))
(assert (= var3866802 temp10312_206))
(assert (= temp10312_207 #x0000000000000000))
(assert (= temp10312_208
   (ite (bvslt var3866802 temp10312_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10312_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10312_208)))
(assert (= var3879420 temp10312_209))
(assert (bvslt (ite (bvslt var3866802 temp10312_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10312_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10312_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10312_211 #x0000000000000000))
(assert (= var3879421 temp10312_211))
(assert (= temp10312_212 #x0000000000000001))
(assert (= var3867690 temp10312_212))
(assert (= temp10312_213 #x0000000000000000))
(assert (= temp10312_214
   (ite (bvslt var3867690 temp10312_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10312_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10312_214)))
(assert (= var3879423 temp10312_215))
(assert (bvslt (ite (bvslt var3867690 temp10312_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10312_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10312_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10312_217 #x0000000000000001))
(assert (= var3879424 temp10312_217))
(assert (= temp10312_218 #x0000000000000000))
(assert (= var4079423 temp10312_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10312_219 #x0000000000000002))
(assert (= var4208259 temp10312_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10312_220 #x0000000000000000))
(assert (= var4273820 temp10312_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp10312_221 #x0000000000000000))
(assert (= var5714320 temp10312_221))
(assert (= temp10312_222 #x0000000000000001))
(assert (= var211058 temp10312_222))
(model-add temp10312_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10312_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10312_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10312_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





