(declare-fun temp10788_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10788_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10788_3 () (_ BitVec 64))
(declare-fun temp10788_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10788_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10788_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10788_7 () (_ BitVec 64))
(declare-fun temp10788_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10788_9 () (_ BitVec 64))
(declare-fun temp10788_10 () (_ BitVec 64))
(declare-fun temp10788_11 () (_ BitVec 64))
(declare-fun temp10788_12 () (_ BitVec 64))
(declare-fun temp10788_13 () (_ BitVec 64))
(declare-fun temp10788_14 () (_ BitVec 64))
(declare-fun temp10788_15 () (_ BitVec 64))
(declare-fun temp10788_16 () (_ BitVec 64))
(declare-fun temp10788_17 () (_ BitVec 64))
(declare-fun temp10788_18 () (_ BitVec 64))
(declare-fun temp10788_19 () (_ BitVec 64))
(declare-fun temp10788_20 () (_ BitVec 64))
(declare-fun temp10788_21 () (_ BitVec 64))
(declare-fun temp10788_22 () (_ BitVec 64))
(declare-fun temp10788_23 () (_ BitVec 64))
(declare-fun temp10788_24 () (_ BitVec 64))
(declare-fun temp10788_25 () (_ BitVec 64))
(declare-fun temp10788_26 () (_ BitVec 64))
(declare-fun temp10788_27 () (_ BitVec 64))
(declare-fun temp10788_28 () (_ BitVec 64))
(declare-fun temp10788_29 () (_ BitVec 64))
(declare-fun temp10788_30 () (_ BitVec 64))
(declare-fun temp10788_31 () (_ BitVec 64))
(declare-fun temp10788_32 () (_ BitVec 64))
(declare-fun temp10788_33 () (_ BitVec 64))
(declare-fun temp10788_34 () (_ BitVec 64))
(declare-fun temp10788_35 () (_ BitVec 64))
(declare-fun temp10788_36 () (_ BitVec 64))
(declare-fun temp10788_37 () (_ BitVec 64))
(declare-fun temp10788_38 () (_ BitVec 64))
(declare-fun temp10788_39 () (_ BitVec 64))
(declare-fun temp10788_40 () (_ BitVec 64))
(declare-fun temp10788_41 () (_ BitVec 64))
(declare-fun temp10788_42 () (_ BitVec 64))
(declare-fun temp10788_43 () (_ BitVec 64))
(declare-fun temp10788_44 () (_ BitVec 64))
(declare-fun temp10788_45 () (_ BitVec 64))
(declare-fun temp10788_46 () (_ BitVec 64))
(declare-fun temp10788_47 () (_ BitVec 64))
(declare-fun temp10788_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10788_49 () (_ BitVec 64))
(declare-fun temp10788_50 () (_ BitVec 64))
(declare-fun temp10788_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10788_52 () (_ BitVec 64))
(declare-fun temp10788_53 () (_ BitVec 64))
(declare-fun temp10788_54 () (_ BitVec 64))
(declare-fun temp10788_55 () (_ BitVec 64))
(declare-fun temp10788_56 () (_ BitVec 64))
(declare-fun temp10788_57 () (_ BitVec 64))
(declare-fun temp10788_58 () (_ BitVec 64))
(declare-fun temp10788_59 () (_ BitVec 64))
(declare-fun temp10788_60 () (_ BitVec 64))
(declare-fun temp10788_61 () (_ BitVec 64))
(declare-fun temp10788_62 () (_ BitVec 64))
(declare-fun temp10788_63 () (_ BitVec 64))
(declare-fun temp10788_64 () (_ BitVec 64))
(declare-fun temp10788_65 () (_ BitVec 64))
(declare-fun temp10788_66 () (_ BitVec 64))
(declare-fun temp10788_67 () (_ BitVec 64))
(declare-fun temp10788_68 () (_ BitVec 64))
(declare-fun temp10788_69 () (_ BitVec 64))
(declare-fun temp10788_70 () (_ BitVec 64))
(declare-fun temp10788_71 () (_ BitVec 64))
(declare-fun temp10788_72 () (_ BitVec 64))
(declare-fun temp10788_73 () (_ BitVec 64))
(declare-fun temp10788_74 () (_ BitVec 64))
(declare-fun temp10788_75 () (_ BitVec 64))
(declare-fun temp10788_76 () (_ BitVec 64))
(declare-fun temp10788_77 () (_ BitVec 64))
(declare-fun temp10788_78 () (_ BitVec 64))
(declare-fun temp10788_79 () (_ BitVec 64))
(declare-fun temp10788_80 () (_ BitVec 64))
(declare-fun temp10788_81 () (_ BitVec 64))
(declare-fun temp10788_82 () (_ BitVec 64))
(declare-fun temp10788_83 () (_ BitVec 64))
(declare-fun temp10788_84 () (_ BitVec 64))
(declare-fun temp10788_85 () (_ BitVec 64))
(declare-fun temp10788_86 () (_ BitVec 64))
(declare-fun temp10788_87 () (_ BitVec 64))
(declare-fun temp10788_88 () (_ BitVec 64))
(declare-fun temp10788_89 () (_ BitVec 64))
(declare-fun temp10788_90 () (_ BitVec 64))
(declare-fun temp10788_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10788_92 () (_ BitVec 64))
(declare-fun temp10788_93 () (_ BitVec 64))
(declare-fun temp10788_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10788_95 () (_ BitVec 64))
(declare-fun temp10788_96 () (_ BitVec 64))
(declare-fun temp10788_97 () (_ BitVec 64))
(declare-fun temp10788_98 () (_ BitVec 64))
(declare-fun temp10788_99 () (_ BitVec 64))
(declare-fun temp10788_100 () (_ BitVec 64))
(declare-fun temp10788_101 () (_ BitVec 64))
(declare-fun temp10788_102 () (_ BitVec 64))
(declare-fun temp10788_103 () (_ BitVec 64))
(declare-fun temp10788_104 () (_ BitVec 64))
(declare-fun temp10788_105 () (_ BitVec 64))
(declare-fun temp10788_106 () (_ BitVec 64))
(declare-fun temp10788_107 () (_ BitVec 64))
(declare-fun temp10788_108 () (_ BitVec 64))
(declare-fun temp10788_109 () (_ BitVec 64))
(declare-fun temp10788_110 () (_ BitVec 64))
(declare-fun temp10788_111 () (_ BitVec 64))
(declare-fun temp10788_112 () (_ BitVec 64))
(declare-fun temp10788_113 () (_ BitVec 64))
(declare-fun temp10788_114 () (_ BitVec 64))
(declare-fun temp10788_115 () (_ BitVec 64))
(declare-fun temp10788_116 () (_ BitVec 64))
(declare-fun temp10788_117 () (_ BitVec 64))
(declare-fun temp10788_118 () (_ BitVec 64))
(declare-fun temp10788_119 () (_ BitVec 64))
(declare-fun temp10788_120 () (_ BitVec 64))
(declare-fun temp10788_121 () (_ BitVec 64))
(declare-fun temp10788_122 () (_ BitVec 64))
(declare-fun temp10788_123 () (_ BitVec 64))
(declare-fun temp10788_124 () (_ BitVec 64))
(declare-fun temp10788_125 () (_ BitVec 64))
(declare-fun temp10788_126 () (_ BitVec 64))
(declare-fun temp10788_127 () (_ BitVec 64))
(declare-fun temp10788_128 () (_ BitVec 64))
(declare-fun temp10788_129 () (_ BitVec 64))
(declare-fun temp10788_130 () (_ BitVec 64))
(declare-fun temp10788_131 () (_ BitVec 64))
(declare-fun temp10788_132 () (_ BitVec 64))
(declare-fun temp10788_133 () (_ BitVec 64))
(declare-fun temp10788_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10788_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10788_136 () (_ BitVec 64))
(declare-fun temp10788_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10788_138 () (_ BitVec 64))
(declare-fun temp10788_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10788_140 () (_ BitVec 64))
(declare-fun temp10788_141 () (_ BitVec 64))
(declare-fun temp10788_142 () (_ BitVec 64))
(declare-fun temp10788_143 () (_ BitVec 64))
(declare-fun temp10788_144 () (_ BitVec 64))
(declare-fun temp10788_145 () (_ BitVec 64))
(declare-fun temp10788_146 () (_ BitVec 64))
(declare-fun temp10788_147 () (_ BitVec 64))
(declare-fun temp10788_148 () (_ BitVec 64))
(declare-fun temp10788_149 () (_ BitVec 64))
(declare-fun temp10788_150 () (_ BitVec 64))
(declare-fun temp10788_151 () (_ BitVec 64))
(declare-fun temp10788_152 () (_ BitVec 64))
(declare-fun temp10788_153 () (_ BitVec 64))
(declare-fun temp10788_154 () (_ BitVec 64))
(declare-fun temp10788_155 () (_ BitVec 64))
(declare-fun temp10788_157 () (_ BitVec 64))
(declare-fun temp10788_158 () (_ BitVec 64))
(declare-fun temp10788_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10788_159 () (_ BitVec 64))
(declare-fun temp10788_160 () (_ BitVec 64))
(declare-fun temp10788_162 () (_ BitVec 64))
(declare-fun temp10788_163 () (_ BitVec 64))
(declare-fun temp10788_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10788_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10788_165 () (_ BitVec 64))
(declare-fun temp10788_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10788_167 () (_ BitVec 64))
(declare-fun temp10788_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10788_169 () (_ BitVec 64))
(declare-fun temp10788_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10788_171 () (_ BitVec 64))
(declare-fun temp10788_172 () (_ BitVec 64))
(declare-fun temp10788_173 () (_ BitVec 64))
(declare-fun temp10788_174 () (_ BitVec 64))
(declare-fun temp10788_175 () (_ BitVec 64))
(declare-fun temp10788_176 () (_ BitVec 64))
(declare-fun temp10788_177 () (_ BitVec 64))
(declare-fun temp10788_178 () (_ BitVec 64))
(declare-fun temp10788_179 () (_ BitVec 64))
(declare-fun temp10788_180 () (_ BitVec 64))
(declare-fun temp10788_181 () (_ BitVec 64))
(declare-fun temp10788_182 () (_ BitVec 64))
(declare-fun temp10788_183 () (_ BitVec 64))
(declare-fun temp10788_184 () (_ BitVec 64))
(declare-fun temp10788_185 () (_ BitVec 64))
(declare-fun temp10788_186 () (_ BitVec 64))
(declare-fun temp10788_187 () (_ BitVec 64))
(declare-fun temp10788_188 () (_ BitVec 64))
(declare-fun temp10788_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10788_190 () (_ BitVec 64))
(declare-fun temp10788_192 () (_ BitVec 64))
(declare-fun temp10788_193 () (_ BitVec 64))
(declare-fun temp10788_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10788_194 () (_ BitVec 64))
(declare-fun temp10788_195 () (_ BitVec 64))
(declare-fun temp10788_197 () (_ BitVec 64))
(declare-fun temp10788_198 () (_ BitVec 64))
(declare-fun temp10788_196 () (_ BitVec 64))
(declare-fun temp10788_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10788_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10788_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10788_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10788_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10788_204 () (_ BitVec 64))
(declare-fun temp10788_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10788_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10788_207 () (_ BitVec 64))
(declare-fun temp10788_208 () (_ BitVec 64))
(declare-fun temp10788_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10788_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10788_211 () (_ BitVec 64))
(declare-fun temp10788_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10788_213 () (_ BitVec 64))
(declare-fun temp10788_214 () (_ BitVec 64))
(declare-fun temp10788_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10788_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10788_217 () (_ BitVec 64))
(declare-fun temp10788_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10788_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10788_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10788_221 () (_ BitVec 64))
(declare-fun temp10788_222 () (_ BitVec 64))
(declare-fun var7090964 () (_ BitVec 64))
(declare-fun var7090931 () (_ BitVec 64))
(declare-fun var6959495 () (_ BitVec 64))
(declare-fun var6959491 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10788_223 () (_ BitVec 64))
(assert (= temp10788_1 #x0000000000000001))
(assert (= var77203 temp10788_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10788_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10788_2)))
(assert (= temp10788_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10788_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_4 #x0000000000000000))
(assert (= var210941 temp10788_4))
(assert (= temp10788_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10788_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_6 #x0000000000000000))
(assert (= var210986 temp10788_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10788_7 #x0000000000000000))
(assert (= temp10788_8 temp10788_7))
(assert (= temp10788_9 (select ARGNAME_padding_NAMEEND_VAL temp10788_8)))
(assert (= temp10788_10 #x0000000000000001))
(assert (= temp10788_11 temp10788_10))
(assert (= temp10788_12 (select ARGNAME_padding_NAMEEND_VAL temp10788_11)))
(assert (= temp10788_13 #x0000000000000002))
(assert (= temp10788_14 temp10788_13))
(assert (= temp10788_15 (select ARGNAME_padding_NAMEEND_VAL temp10788_14)))
(assert (= temp10788_16 #x0000000000000003))
(assert (= temp10788_17 temp10788_16))
(assert (= temp10788_18 (select ARGNAME_padding_NAMEEND_VAL temp10788_17)))
(assert (= temp10788_19 #x0000000000000004))
(assert (= temp10788_20 temp10788_19))
(assert (= temp10788_21 (select ARGNAME_padding_NAMEEND_VAL temp10788_20)))
(assert (= temp10788_22 #x0000000000000005))
(assert (= temp10788_23 temp10788_22))
(assert (= temp10788_24 (select ARGNAME_padding_NAMEEND_VAL temp10788_23)))
(assert (= temp10788_25 #x0000000000000000))
(assert (= temp10788_26 #x0000000000000000))
(assert (= temp10788_27 temp10788_26))
(assert (= temp10788_28 (select ARGNAME_padding_NAMEEND_VAL temp10788_27)))
(assert (= temp10788_29 #x0000000000000000))
(assert (= temp10788_30 #x0000000000000001))
(assert (= temp10788_31 temp10788_30))
(assert (= temp10788_32 (select ARGNAME_padding_NAMEEND_VAL temp10788_31)))
(assert (= temp10788_33 #x0000000000000000))
(assert (= temp10788_34 #x0000000000000002))
(assert (= temp10788_35 temp10788_34))
(assert (= temp10788_36 (select ARGNAME_padding_NAMEEND_VAL temp10788_35)))
(assert (= temp10788_37 #x0000000000000000))
(assert (= temp10788_38 #x0000000000000003))
(assert (= temp10788_39 temp10788_38))
(assert (= temp10788_40 (select ARGNAME_padding_NAMEEND_VAL temp10788_39)))
(assert (= temp10788_41 #x0000000000000000))
(assert (= temp10788_42 #x0000000000000004))
(assert (= temp10788_43 temp10788_42))
(assert (= temp10788_44 (select ARGNAME_padding_NAMEEND_VAL temp10788_43)))
(assert (= temp10788_45 #x0000000000000000))
(assert (= temp10788_46 #x0000000000000005))
(assert (= temp10788_47 temp10788_46))
(assert (= temp10788_48 (select ARGNAME_padding_NAMEEND_VAL temp10788_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10788_28 temp10788_25)
             (bvslt temp10788_32 temp10788_29)
             (bvslt temp10788_36 temp10788_33)
             (bvslt temp10788_40 temp10788_37)
             (bvslt temp10788_44 temp10788_41)
             (bvslt temp10788_48 temp10788_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_49 #x0000000000000000))
(assert (= var1191714 temp10788_49))
(assert (= temp10788_50 #x0000000000000000))
(assert (= temp10788_51 temp10788_50))
(assert (= temp10788_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_51)))
(assert (= temp10788_53 #x0000000000000001))
(assert (= temp10788_54 temp10788_53))
(assert (= temp10788_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_54)))
(assert (= temp10788_56 #x0000000000000002))
(assert (= temp10788_57 temp10788_56))
(assert (= temp10788_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_57)))
(assert (= temp10788_59 #x0000000000000003))
(assert (= temp10788_60 temp10788_59))
(assert (= temp10788_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_60)))
(assert (= temp10788_62 #x0000000000000004))
(assert (= temp10788_63 temp10788_62))
(assert (= temp10788_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_63)))
(assert (= temp10788_65 #x0000000000000005))
(assert (= temp10788_66 temp10788_65))
(assert (= temp10788_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_66)))
(assert (= temp10788_68 #x0000000000000000))
(assert (= temp10788_69 #x0000000000000000))
(assert (= temp10788_70 temp10788_69))
(assert (= temp10788_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_70)))
(assert (= temp10788_72 #x0000000000000000))
(assert (= temp10788_73 #x0000000000000001))
(assert (= temp10788_74 temp10788_73))
(assert (= temp10788_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_74)))
(assert (= temp10788_76 #x0000000000000000))
(assert (= temp10788_77 #x0000000000000002))
(assert (= temp10788_78 temp10788_77))
(assert (= temp10788_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_78)))
(assert (= temp10788_80 #x0000000000000000))
(assert (= temp10788_81 #x0000000000000003))
(assert (= temp10788_82 temp10788_81))
(assert (= temp10788_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_82)))
(assert (= temp10788_84 #x0000000000000000))
(assert (= temp10788_85 #x0000000000000004))
(assert (= temp10788_86 temp10788_85))
(assert (= temp10788_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_86)))
(assert (= temp10788_88 #x0000000000000000))
(assert (= temp10788_89 #x0000000000000005))
(assert (= temp10788_90 temp10788_89))
(assert (= temp10788_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10788_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10788_71 temp10788_68)
             (bvslt temp10788_75 temp10788_72)
             (bvslt temp10788_79 temp10788_76)
             (bvslt temp10788_83 temp10788_80)
             (bvslt temp10788_87 temp10788_84)
             (bvslt temp10788_91 temp10788_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_92 #x0000000000000000))
(assert (= var1191725 temp10788_92))
(assert (= temp10788_93 #x0000000000000000))
(assert (= temp10788_94 temp10788_93))
(assert (= temp10788_95 (select ARGNAME_stride_NAMEEND_VAL temp10788_94)))
(assert (= temp10788_96 #x0000000000000001))
(assert (= temp10788_97 temp10788_96))
(assert (= temp10788_98 (select ARGNAME_stride_NAMEEND_VAL temp10788_97)))
(assert (= temp10788_99 #x0000000000000002))
(assert (= temp10788_100 temp10788_99))
(assert (= temp10788_101 (select ARGNAME_stride_NAMEEND_VAL temp10788_100)))
(assert (= temp10788_102 #x0000000000000003))
(assert (= temp10788_103 temp10788_102))
(assert (= temp10788_104 (select ARGNAME_stride_NAMEEND_VAL temp10788_103)))
(assert (= temp10788_105 #x0000000000000004))
(assert (= temp10788_106 temp10788_105))
(assert (= temp10788_107 (select ARGNAME_stride_NAMEEND_VAL temp10788_106)))
(assert (= temp10788_108 #x0000000000000005))
(assert (= temp10788_109 temp10788_108))
(assert (= temp10788_110 (select ARGNAME_stride_NAMEEND_VAL temp10788_109)))
(assert (= temp10788_111 #x0000000000000000))
(assert (= temp10788_112 #x0000000000000000))
(assert (= temp10788_113 temp10788_112))
(assert (= temp10788_114 (select ARGNAME_stride_NAMEEND_VAL temp10788_113)))
(assert (= temp10788_115 #x0000000000000000))
(assert (= temp10788_116 #x0000000000000001))
(assert (= temp10788_117 temp10788_116))
(assert (= temp10788_118 (select ARGNAME_stride_NAMEEND_VAL temp10788_117)))
(assert (= temp10788_119 #x0000000000000000))
(assert (= temp10788_120 #x0000000000000002))
(assert (= temp10788_121 temp10788_120))
(assert (= temp10788_122 (select ARGNAME_stride_NAMEEND_VAL temp10788_121)))
(assert (= temp10788_123 #x0000000000000000))
(assert (= temp10788_124 #x0000000000000003))
(assert (= temp10788_125 temp10788_124))
(assert (= temp10788_126 (select ARGNAME_stride_NAMEEND_VAL temp10788_125)))
(assert (= temp10788_127 #x0000000000000000))
(assert (= temp10788_128 #x0000000000000004))
(assert (= temp10788_129 temp10788_128))
(assert (= temp10788_130 (select ARGNAME_stride_NAMEEND_VAL temp10788_129)))
(assert (= temp10788_131 #x0000000000000000))
(assert (= temp10788_132 #x0000000000000005))
(assert (= temp10788_133 temp10788_132))
(assert (= temp10788_134 (select ARGNAME_stride_NAMEEND_VAL temp10788_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10788_114 temp10788_111)
             (bvsle temp10788_118 temp10788_115)
             (bvsle temp10788_122 temp10788_119)
             (bvsle temp10788_126 temp10788_123)
             (bvsle temp10788_130 temp10788_127)
             (bvsle temp10788_134 temp10788_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_135 #x0000000000000000))
(assert (= var1191735 temp10788_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_136 #x0000000000000001))
(assert (= var1191747 temp10788_136))
(assert (= temp10788_137 #x0000000000000000))
(assert (= var1179826 temp10788_137))
(assert (= temp10788_138 #x0000000000000000))
(assert (= temp10788_139 temp10788_138))
(assert (= temp10788_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_139)))
(assert (= temp10788_141 #x0000000000000001))
(assert (= temp10788_142 temp10788_141))
(assert (= temp10788_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_142)))
(assert (= temp10788_144 #x0000000000000002))
(assert (= temp10788_145 temp10788_144))
(assert (= temp10788_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_145)))
(assert (= temp10788_147 #x0000000000000003))
(assert (= temp10788_148 temp10788_147))
(assert (= temp10788_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_148)))
(assert (= temp10788_150 #x0000000000000004))
(assert (= temp10788_151 temp10788_150))
(assert (= temp10788_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_151)))
(assert (= temp10788_153 #x0000000000000005))
(assert (= temp10788_154 temp10788_153))
(assert (= temp10788_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_154)))
(assert (= temp10788_157 var1179826))
(assert (= temp10788_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_157)))
(assert (= temp10788_156 temp10788_158))
(assert (= var1191780
   (ite (bvslt temp10788_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_159 #x0000000000000000))
(assert (= var1191780 temp10788_159))
(assert (= temp10788_160 #x0000000000000000))
(assert (= var1179826 temp10788_160))
(assert (= temp10788_162 var1179826))
(assert (= temp10788_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_162)))
(assert (= temp10788_161 temp10788_163))
(assert (= var1191802 (bvsmod temp10788_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10788_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10788_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10788_165 #x0000000000000001))
(assert (= var1191803 temp10788_165))
(assert (= temp10788_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10788_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_167 #x0000000000000001))
(assert (= var1191823 temp10788_167))
(assert (= temp10788_168 #x0000000000000001))
(assert (= var1180714 temp10788_168))
(assert (= temp10788_169 #x0000000000000000))
(assert (= temp10788_170 temp10788_169))
(assert (= temp10788_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10788_170)))
(assert (= temp10788_172 #x0000000000000001))
(assert (= temp10788_173 temp10788_172))
(assert (= temp10788_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10788_173)))
(assert (= temp10788_175 #x0000000000000002))
(assert (= temp10788_176 temp10788_175))
(assert (= temp10788_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10788_176)))
(assert (= temp10788_178 #x0000000000000003))
(assert (= temp10788_179 temp10788_178))
(assert (= temp10788_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10788_179)))
(assert (= temp10788_181 #x0000000000000004))
(assert (= temp10788_182 temp10788_181))
(assert (= temp10788_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10788_182)))
(assert (= temp10788_184 #x0000000000000005))
(assert (= temp10788_185 temp10788_184))
(assert (= temp10788_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10788_185)))
(assert (= temp10788_187 #x0000000000000000))
(assert (= temp10788_188
   (ite (bvslt var1180714 temp10788_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10788_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10788_188)))
(assert (= var1191831 temp10788_189))
(assert (bvslt (ite (bvslt var1180714 temp10788_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10788_190 #x0000000000000001))
(assert (= var1180714 temp10788_190))
(assert (= temp10788_192 var1180714))
(assert (= temp10788_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_192)))
(assert (= temp10788_191 temp10788_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10788_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10788_194 #x0000000000000001))
(assert (= var1191836 temp10788_194))
(assert (= temp10788_195 #x0000000000000000))
(assert (= var1179826 temp10788_195))
(assert (= temp10788_197 var1179826))
(assert (= temp10788_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10788_197)))
(assert (= temp10788_196 temp10788_198))
(assert (= temp10788_199 #x0000000000000002))
(assert (= var1586025 temp10788_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10788_200 #x0000000000000001))
(assert (= var1191993 temp10788_200))
(assert (= temp10788_201 #x0000000000000001))
(assert (= var2700303 temp10788_201))
(assert (= temp10788_202 #x0000000000000001))
(assert (= var2962447 temp10788_202))
(assert (= temp10788_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10788_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_204 #x0000000000000001))
(assert (= var211058 temp10788_204))
(assert (= temp10788_205 #x0000000000000001))
(assert (= var211188 temp10788_205))
(assert (= var3879401 var211188))
(assert (= temp10788_206 #x0000000000000000))
(assert (= var3866802 temp10788_206))
(assert (= temp10788_207 #x0000000000000000))
(assert (= temp10788_208
   (ite (bvslt var3866802 temp10788_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10788_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10788_208)))
(assert (= var3879420 temp10788_209))
(assert (bvslt (ite (bvslt var3866802 temp10788_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10788_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10788_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10788_211 #x0000000000000000))
(assert (= var3879421 temp10788_211))
(assert (= temp10788_212 #x0000000000000001))
(assert (= var3867690 temp10788_212))
(assert (= temp10788_213 #x0000000000000000))
(assert (= temp10788_214
   (ite (bvslt var3867690 temp10788_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10788_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10788_214)))
(assert (= var3879423 temp10788_215))
(assert (bvslt (ite (bvslt var3867690 temp10788_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10788_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10788_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10788_217 #x0000000000000001))
(assert (= var3879424 temp10788_217))
(assert (= temp10788_218 #x0000000000000000))
(assert (= var4133117 temp10788_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10788_219 #x0000000000000002))
(assert (= var4339331 temp10788_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10788_220 #x0000000000000000))
(assert (= var4404892 temp10788_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10788_221 #x0000000000000001))
(assert (= var211058 temp10788_221))
(assert (= temp10788_222 #x0000000000000000))
(assert (= var7090964 temp10788_222))
(assert (= var7090931 var7090964))
(assert (= var6959495 var7090931))
(assert (= var6959491 var6959495))
(assert (= var212669 var6959491))
(assert (= temp10788_223 #x0000000000000000))
(assert (= var212669 temp10788_223))
(model-add temp10788_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10788_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10788_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10788_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






