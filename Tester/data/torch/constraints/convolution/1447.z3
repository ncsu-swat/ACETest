(declare-fun temp10660_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10660_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10660_3 () (_ BitVec 64))
(declare-fun temp10660_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10660_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10660_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10660_7 () (_ BitVec 64))
(declare-fun temp10660_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10660_9 () (_ BitVec 64))
(declare-fun temp10660_10 () (_ BitVec 64))
(declare-fun temp10660_11 () (_ BitVec 64))
(declare-fun temp10660_12 () (_ BitVec 64))
(declare-fun temp10660_13 () (_ BitVec 64))
(declare-fun temp10660_14 () (_ BitVec 64))
(declare-fun temp10660_15 () (_ BitVec 64))
(declare-fun temp10660_16 () (_ BitVec 64))
(declare-fun temp10660_17 () (_ BitVec 64))
(declare-fun temp10660_18 () (_ BitVec 64))
(declare-fun temp10660_19 () (_ BitVec 64))
(declare-fun temp10660_20 () (_ BitVec 64))
(declare-fun temp10660_21 () (_ BitVec 64))
(declare-fun temp10660_22 () (_ BitVec 64))
(declare-fun temp10660_23 () (_ BitVec 64))
(declare-fun temp10660_24 () (_ BitVec 64))
(declare-fun temp10660_25 () (_ BitVec 64))
(declare-fun temp10660_26 () (_ BitVec 64))
(declare-fun temp10660_27 () (_ BitVec 64))
(declare-fun temp10660_28 () (_ BitVec 64))
(declare-fun temp10660_29 () (_ BitVec 64))
(declare-fun temp10660_30 () (_ BitVec 64))
(declare-fun temp10660_31 () (_ BitVec 64))
(declare-fun temp10660_32 () (_ BitVec 64))
(declare-fun temp10660_33 () (_ BitVec 64))
(declare-fun temp10660_34 () (_ BitVec 64))
(declare-fun temp10660_35 () (_ BitVec 64))
(declare-fun temp10660_36 () (_ BitVec 64))
(declare-fun temp10660_37 () (_ BitVec 64))
(declare-fun temp10660_38 () (_ BitVec 64))
(declare-fun temp10660_39 () (_ BitVec 64))
(declare-fun temp10660_40 () (_ BitVec 64))
(declare-fun temp10660_41 () (_ BitVec 64))
(declare-fun temp10660_42 () (_ BitVec 64))
(declare-fun temp10660_43 () (_ BitVec 64))
(declare-fun temp10660_44 () (_ BitVec 64))
(declare-fun temp10660_45 () (_ BitVec 64))
(declare-fun temp10660_46 () (_ BitVec 64))
(declare-fun temp10660_47 () (_ BitVec 64))
(declare-fun temp10660_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10660_49 () (_ BitVec 64))
(declare-fun temp10660_50 () (_ BitVec 64))
(declare-fun temp10660_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10660_52 () (_ BitVec 64))
(declare-fun temp10660_53 () (_ BitVec 64))
(declare-fun temp10660_54 () (_ BitVec 64))
(declare-fun temp10660_55 () (_ BitVec 64))
(declare-fun temp10660_56 () (_ BitVec 64))
(declare-fun temp10660_57 () (_ BitVec 64))
(declare-fun temp10660_58 () (_ BitVec 64))
(declare-fun temp10660_59 () (_ BitVec 64))
(declare-fun temp10660_60 () (_ BitVec 64))
(declare-fun temp10660_61 () (_ BitVec 64))
(declare-fun temp10660_62 () (_ BitVec 64))
(declare-fun temp10660_63 () (_ BitVec 64))
(declare-fun temp10660_64 () (_ BitVec 64))
(declare-fun temp10660_65 () (_ BitVec 64))
(declare-fun temp10660_66 () (_ BitVec 64))
(declare-fun temp10660_67 () (_ BitVec 64))
(declare-fun temp10660_68 () (_ BitVec 64))
(declare-fun temp10660_69 () (_ BitVec 64))
(declare-fun temp10660_70 () (_ BitVec 64))
(declare-fun temp10660_71 () (_ BitVec 64))
(declare-fun temp10660_72 () (_ BitVec 64))
(declare-fun temp10660_73 () (_ BitVec 64))
(declare-fun temp10660_74 () (_ BitVec 64))
(declare-fun temp10660_75 () (_ BitVec 64))
(declare-fun temp10660_76 () (_ BitVec 64))
(declare-fun temp10660_77 () (_ BitVec 64))
(declare-fun temp10660_78 () (_ BitVec 64))
(declare-fun temp10660_79 () (_ BitVec 64))
(declare-fun temp10660_80 () (_ BitVec 64))
(declare-fun temp10660_81 () (_ BitVec 64))
(declare-fun temp10660_82 () (_ BitVec 64))
(declare-fun temp10660_83 () (_ BitVec 64))
(declare-fun temp10660_84 () (_ BitVec 64))
(declare-fun temp10660_85 () (_ BitVec 64))
(declare-fun temp10660_86 () (_ BitVec 64))
(declare-fun temp10660_87 () (_ BitVec 64))
(declare-fun temp10660_88 () (_ BitVec 64))
(declare-fun temp10660_89 () (_ BitVec 64))
(declare-fun temp10660_90 () (_ BitVec 64))
(declare-fun temp10660_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10660_92 () (_ BitVec 64))
(declare-fun temp10660_93 () (_ BitVec 64))
(declare-fun temp10660_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10660_95 () (_ BitVec 64))
(declare-fun temp10660_96 () (_ BitVec 64))
(declare-fun temp10660_97 () (_ BitVec 64))
(declare-fun temp10660_98 () (_ BitVec 64))
(declare-fun temp10660_99 () (_ BitVec 64))
(declare-fun temp10660_100 () (_ BitVec 64))
(declare-fun temp10660_101 () (_ BitVec 64))
(declare-fun temp10660_102 () (_ BitVec 64))
(declare-fun temp10660_103 () (_ BitVec 64))
(declare-fun temp10660_104 () (_ BitVec 64))
(declare-fun temp10660_105 () (_ BitVec 64))
(declare-fun temp10660_106 () (_ BitVec 64))
(declare-fun temp10660_107 () (_ BitVec 64))
(declare-fun temp10660_108 () (_ BitVec 64))
(declare-fun temp10660_109 () (_ BitVec 64))
(declare-fun temp10660_110 () (_ BitVec 64))
(declare-fun temp10660_111 () (_ BitVec 64))
(declare-fun temp10660_112 () (_ BitVec 64))
(declare-fun temp10660_113 () (_ BitVec 64))
(declare-fun temp10660_114 () (_ BitVec 64))
(declare-fun temp10660_115 () (_ BitVec 64))
(declare-fun temp10660_116 () (_ BitVec 64))
(declare-fun temp10660_117 () (_ BitVec 64))
(declare-fun temp10660_118 () (_ BitVec 64))
(declare-fun temp10660_119 () (_ BitVec 64))
(declare-fun temp10660_120 () (_ BitVec 64))
(declare-fun temp10660_121 () (_ BitVec 64))
(declare-fun temp10660_122 () (_ BitVec 64))
(declare-fun temp10660_123 () (_ BitVec 64))
(declare-fun temp10660_124 () (_ BitVec 64))
(declare-fun temp10660_125 () (_ BitVec 64))
(declare-fun temp10660_126 () (_ BitVec 64))
(declare-fun temp10660_127 () (_ BitVec 64))
(declare-fun temp10660_128 () (_ BitVec 64))
(declare-fun temp10660_129 () (_ BitVec 64))
(declare-fun temp10660_130 () (_ BitVec 64))
(declare-fun temp10660_131 () (_ BitVec 64))
(declare-fun temp10660_132 () (_ BitVec 64))
(declare-fun temp10660_133 () (_ BitVec 64))
(declare-fun temp10660_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10660_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10660_136 () (_ BitVec 64))
(declare-fun temp10660_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10660_138 () (_ BitVec 64))
(declare-fun temp10660_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10660_140 () (_ BitVec 64))
(declare-fun temp10660_141 () (_ BitVec 64))
(declare-fun temp10660_142 () (_ BitVec 64))
(declare-fun temp10660_143 () (_ BitVec 64))
(declare-fun temp10660_144 () (_ BitVec 64))
(declare-fun temp10660_145 () (_ BitVec 64))
(declare-fun temp10660_146 () (_ BitVec 64))
(declare-fun temp10660_147 () (_ BitVec 64))
(declare-fun temp10660_148 () (_ BitVec 64))
(declare-fun temp10660_149 () (_ BitVec 64))
(declare-fun temp10660_150 () (_ BitVec 64))
(declare-fun temp10660_151 () (_ BitVec 64))
(declare-fun temp10660_152 () (_ BitVec 64))
(declare-fun temp10660_153 () (_ BitVec 64))
(declare-fun temp10660_154 () (_ BitVec 64))
(declare-fun temp10660_155 () (_ BitVec 64))
(declare-fun temp10660_157 () (_ BitVec 64))
(declare-fun temp10660_158 () (_ BitVec 64))
(declare-fun temp10660_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10660_159 () (_ BitVec 64))
(declare-fun temp10660_160 () (_ BitVec 64))
(declare-fun temp10660_162 () (_ BitVec 64))
(declare-fun temp10660_163 () (_ BitVec 64))
(declare-fun temp10660_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10660_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10660_165 () (_ BitVec 64))
(declare-fun temp10660_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10660_167 () (_ BitVec 64))
(declare-fun temp10660_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10660_169 () (_ BitVec 64))
(declare-fun temp10660_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10660_171 () (_ BitVec 64))
(declare-fun temp10660_172 () (_ BitVec 64))
(declare-fun temp10660_173 () (_ BitVec 64))
(declare-fun temp10660_174 () (_ BitVec 64))
(declare-fun temp10660_175 () (_ BitVec 64))
(declare-fun temp10660_176 () (_ BitVec 64))
(declare-fun temp10660_177 () (_ BitVec 64))
(declare-fun temp10660_178 () (_ BitVec 64))
(declare-fun temp10660_179 () (_ BitVec 64))
(declare-fun temp10660_180 () (_ BitVec 64))
(declare-fun temp10660_181 () (_ BitVec 64))
(declare-fun temp10660_182 () (_ BitVec 64))
(declare-fun temp10660_183 () (_ BitVec 64))
(declare-fun temp10660_184 () (_ BitVec 64))
(declare-fun temp10660_185 () (_ BitVec 64))
(declare-fun temp10660_186 () (_ BitVec 64))
(declare-fun temp10660_187 () (_ BitVec 64))
(declare-fun temp10660_188 () (_ BitVec 64))
(declare-fun temp10660_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10660_190 () (_ BitVec 64))
(declare-fun temp10660_192 () (_ BitVec 64))
(declare-fun temp10660_193 () (_ BitVec 64))
(declare-fun temp10660_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10660_194 () (_ BitVec 64))
(declare-fun temp10660_195 () (_ BitVec 64))
(declare-fun temp10660_197 () (_ BitVec 64))
(declare-fun temp10660_198 () (_ BitVec 64))
(declare-fun temp10660_196 () (_ BitVec 64))
(declare-fun temp10660_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10660_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10660_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10660_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10660_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10660_204 () (_ BitVec 64))
(declare-fun temp10660_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10660_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10660_207 () (_ BitVec 64))
(declare-fun temp10660_208 () (_ BitVec 64))
(declare-fun temp10660_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10660_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10660_211 () (_ BitVec 64))
(declare-fun temp10660_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10660_213 () (_ BitVec 64))
(declare-fun temp10660_214 () (_ BitVec 64))
(declare-fun temp10660_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10660_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10660_217 () (_ BitVec 64))
(declare-fun temp10660_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10660_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10660_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10660_222 () (_ BitVec 64))
(declare-fun temp10660_221 () (_ BitVec 64))
(declare-fun temp10660_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10660_224 () (_ BitVec 64))
(declare-fun temp10660_225 () (_ BitVec 64))
(declare-fun temp10660_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10660_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10660_228 () (_ BitVec 64))
(declare-fun temp10660_230 () (_ BitVec 64))
(declare-fun temp10660_229 () (_ BitVec 64))
(declare-fun temp10660_231 () (_ BitVec 64))
(declare-fun temp10660_232 () (_ BitVec 64))
(declare-fun var5518100 () (_ BitVec 64))
(declare-fun var5518067 () (_ BitVec 64))
(declare-fun var5386631 () (_ BitVec 64))
(declare-fun var5386627 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10660_233 () (_ BitVec 64))
(assert (= temp10660_1 #x0000000000000001))
(assert (= var77203 temp10660_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10660_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10660_2)))
(assert (= temp10660_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10660_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_4 #x0000000000000000))
(assert (= var210941 temp10660_4))
(assert (= temp10660_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10660_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_6 #x0000000000000000))
(assert (= var210986 temp10660_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10660_7 #x0000000000000000))
(assert (= temp10660_8 temp10660_7))
(assert (= temp10660_9 (select ARGNAME_padding_NAMEEND_VAL temp10660_8)))
(assert (= temp10660_10 #x0000000000000001))
(assert (= temp10660_11 temp10660_10))
(assert (= temp10660_12 (select ARGNAME_padding_NAMEEND_VAL temp10660_11)))
(assert (= temp10660_13 #x0000000000000002))
(assert (= temp10660_14 temp10660_13))
(assert (= temp10660_15 (select ARGNAME_padding_NAMEEND_VAL temp10660_14)))
(assert (= temp10660_16 #x0000000000000003))
(assert (= temp10660_17 temp10660_16))
(assert (= temp10660_18 (select ARGNAME_padding_NAMEEND_VAL temp10660_17)))
(assert (= temp10660_19 #x0000000000000004))
(assert (= temp10660_20 temp10660_19))
(assert (= temp10660_21 (select ARGNAME_padding_NAMEEND_VAL temp10660_20)))
(assert (= temp10660_22 #x0000000000000005))
(assert (= temp10660_23 temp10660_22))
(assert (= temp10660_24 (select ARGNAME_padding_NAMEEND_VAL temp10660_23)))
(assert (= temp10660_25 #x0000000000000000))
(assert (= temp10660_26 #x0000000000000000))
(assert (= temp10660_27 temp10660_26))
(assert (= temp10660_28 (select ARGNAME_padding_NAMEEND_VAL temp10660_27)))
(assert (= temp10660_29 #x0000000000000000))
(assert (= temp10660_30 #x0000000000000001))
(assert (= temp10660_31 temp10660_30))
(assert (= temp10660_32 (select ARGNAME_padding_NAMEEND_VAL temp10660_31)))
(assert (= temp10660_33 #x0000000000000000))
(assert (= temp10660_34 #x0000000000000002))
(assert (= temp10660_35 temp10660_34))
(assert (= temp10660_36 (select ARGNAME_padding_NAMEEND_VAL temp10660_35)))
(assert (= temp10660_37 #x0000000000000000))
(assert (= temp10660_38 #x0000000000000003))
(assert (= temp10660_39 temp10660_38))
(assert (= temp10660_40 (select ARGNAME_padding_NAMEEND_VAL temp10660_39)))
(assert (= temp10660_41 #x0000000000000000))
(assert (= temp10660_42 #x0000000000000004))
(assert (= temp10660_43 temp10660_42))
(assert (= temp10660_44 (select ARGNAME_padding_NAMEEND_VAL temp10660_43)))
(assert (= temp10660_45 #x0000000000000000))
(assert (= temp10660_46 #x0000000000000005))
(assert (= temp10660_47 temp10660_46))
(assert (= temp10660_48 (select ARGNAME_padding_NAMEEND_VAL temp10660_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10660_28 temp10660_25)
             (bvslt temp10660_32 temp10660_29)
             (bvslt temp10660_36 temp10660_33)
             (bvslt temp10660_40 temp10660_37)
             (bvslt temp10660_44 temp10660_41)
             (bvslt temp10660_48 temp10660_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_49 #x0000000000000000))
(assert (= var1191714 temp10660_49))
(assert (= temp10660_50 #x0000000000000000))
(assert (= temp10660_51 temp10660_50))
(assert (= temp10660_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_51)))
(assert (= temp10660_53 #x0000000000000001))
(assert (= temp10660_54 temp10660_53))
(assert (= temp10660_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_54)))
(assert (= temp10660_56 #x0000000000000002))
(assert (= temp10660_57 temp10660_56))
(assert (= temp10660_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_57)))
(assert (= temp10660_59 #x0000000000000003))
(assert (= temp10660_60 temp10660_59))
(assert (= temp10660_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_60)))
(assert (= temp10660_62 #x0000000000000004))
(assert (= temp10660_63 temp10660_62))
(assert (= temp10660_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_63)))
(assert (= temp10660_65 #x0000000000000005))
(assert (= temp10660_66 temp10660_65))
(assert (= temp10660_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_66)))
(assert (= temp10660_68 #x0000000000000000))
(assert (= temp10660_69 #x0000000000000000))
(assert (= temp10660_70 temp10660_69))
(assert (= temp10660_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_70)))
(assert (= temp10660_72 #x0000000000000000))
(assert (= temp10660_73 #x0000000000000001))
(assert (= temp10660_74 temp10660_73))
(assert (= temp10660_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_74)))
(assert (= temp10660_76 #x0000000000000000))
(assert (= temp10660_77 #x0000000000000002))
(assert (= temp10660_78 temp10660_77))
(assert (= temp10660_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_78)))
(assert (= temp10660_80 #x0000000000000000))
(assert (= temp10660_81 #x0000000000000003))
(assert (= temp10660_82 temp10660_81))
(assert (= temp10660_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_82)))
(assert (= temp10660_84 #x0000000000000000))
(assert (= temp10660_85 #x0000000000000004))
(assert (= temp10660_86 temp10660_85))
(assert (= temp10660_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_86)))
(assert (= temp10660_88 #x0000000000000000))
(assert (= temp10660_89 #x0000000000000005))
(assert (= temp10660_90 temp10660_89))
(assert (= temp10660_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10660_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10660_71 temp10660_68)
             (bvslt temp10660_75 temp10660_72)
             (bvslt temp10660_79 temp10660_76)
             (bvslt temp10660_83 temp10660_80)
             (bvslt temp10660_87 temp10660_84)
             (bvslt temp10660_91 temp10660_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_92 #x0000000000000000))
(assert (= var1191725 temp10660_92))
(assert (= temp10660_93 #x0000000000000000))
(assert (= temp10660_94 temp10660_93))
(assert (= temp10660_95 (select ARGNAME_stride_NAMEEND_VAL temp10660_94)))
(assert (= temp10660_96 #x0000000000000001))
(assert (= temp10660_97 temp10660_96))
(assert (= temp10660_98 (select ARGNAME_stride_NAMEEND_VAL temp10660_97)))
(assert (= temp10660_99 #x0000000000000002))
(assert (= temp10660_100 temp10660_99))
(assert (= temp10660_101 (select ARGNAME_stride_NAMEEND_VAL temp10660_100)))
(assert (= temp10660_102 #x0000000000000003))
(assert (= temp10660_103 temp10660_102))
(assert (= temp10660_104 (select ARGNAME_stride_NAMEEND_VAL temp10660_103)))
(assert (= temp10660_105 #x0000000000000004))
(assert (= temp10660_106 temp10660_105))
(assert (= temp10660_107 (select ARGNAME_stride_NAMEEND_VAL temp10660_106)))
(assert (= temp10660_108 #x0000000000000005))
(assert (= temp10660_109 temp10660_108))
(assert (= temp10660_110 (select ARGNAME_stride_NAMEEND_VAL temp10660_109)))
(assert (= temp10660_111 #x0000000000000000))
(assert (= temp10660_112 #x0000000000000000))
(assert (= temp10660_113 temp10660_112))
(assert (= temp10660_114 (select ARGNAME_stride_NAMEEND_VAL temp10660_113)))
(assert (= temp10660_115 #x0000000000000000))
(assert (= temp10660_116 #x0000000000000001))
(assert (= temp10660_117 temp10660_116))
(assert (= temp10660_118 (select ARGNAME_stride_NAMEEND_VAL temp10660_117)))
(assert (= temp10660_119 #x0000000000000000))
(assert (= temp10660_120 #x0000000000000002))
(assert (= temp10660_121 temp10660_120))
(assert (= temp10660_122 (select ARGNAME_stride_NAMEEND_VAL temp10660_121)))
(assert (= temp10660_123 #x0000000000000000))
(assert (= temp10660_124 #x0000000000000003))
(assert (= temp10660_125 temp10660_124))
(assert (= temp10660_126 (select ARGNAME_stride_NAMEEND_VAL temp10660_125)))
(assert (= temp10660_127 #x0000000000000000))
(assert (= temp10660_128 #x0000000000000004))
(assert (= temp10660_129 temp10660_128))
(assert (= temp10660_130 (select ARGNAME_stride_NAMEEND_VAL temp10660_129)))
(assert (= temp10660_131 #x0000000000000000))
(assert (= temp10660_132 #x0000000000000005))
(assert (= temp10660_133 temp10660_132))
(assert (= temp10660_134 (select ARGNAME_stride_NAMEEND_VAL temp10660_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10660_114 temp10660_111)
             (bvsle temp10660_118 temp10660_115)
             (bvsle temp10660_122 temp10660_119)
             (bvsle temp10660_126 temp10660_123)
             (bvsle temp10660_130 temp10660_127)
             (bvsle temp10660_134 temp10660_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_135 #x0000000000000000))
(assert (= var1191735 temp10660_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_136 #x0000000000000001))
(assert (= var1191747 temp10660_136))
(assert (= temp10660_137 #x0000000000000000))
(assert (= var1179826 temp10660_137))
(assert (= temp10660_138 #x0000000000000000))
(assert (= temp10660_139 temp10660_138))
(assert (= temp10660_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_139)))
(assert (= temp10660_141 #x0000000000000001))
(assert (= temp10660_142 temp10660_141))
(assert (= temp10660_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_142)))
(assert (= temp10660_144 #x0000000000000002))
(assert (= temp10660_145 temp10660_144))
(assert (= temp10660_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_145)))
(assert (= temp10660_147 #x0000000000000003))
(assert (= temp10660_148 temp10660_147))
(assert (= temp10660_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_148)))
(assert (= temp10660_150 #x0000000000000004))
(assert (= temp10660_151 temp10660_150))
(assert (= temp10660_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_151)))
(assert (= temp10660_153 #x0000000000000005))
(assert (= temp10660_154 temp10660_153))
(assert (= temp10660_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_154)))
(assert (= temp10660_157 var1179826))
(assert (= temp10660_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_157)))
(assert (= temp10660_156 temp10660_158))
(assert (= var1191780
   (ite (bvslt temp10660_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_159 #x0000000000000000))
(assert (= var1191780 temp10660_159))
(assert (= temp10660_160 #x0000000000000000))
(assert (= var1179826 temp10660_160))
(assert (= temp10660_162 var1179826))
(assert (= temp10660_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_162)))
(assert (= temp10660_161 temp10660_163))
(assert (= var1191802 (bvsmod temp10660_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10660_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10660_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10660_165 #x0000000000000001))
(assert (= var1191803 temp10660_165))
(assert (= temp10660_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10660_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_167 #x0000000000000001))
(assert (= var1191823 temp10660_167))
(assert (= temp10660_168 #x0000000000000001))
(assert (= var1180714 temp10660_168))
(assert (= temp10660_169 #x0000000000000000))
(assert (= temp10660_170 temp10660_169))
(assert (= temp10660_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_170)))
(assert (= temp10660_172 #x0000000000000001))
(assert (= temp10660_173 temp10660_172))
(assert (= temp10660_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_173)))
(assert (= temp10660_175 #x0000000000000002))
(assert (= temp10660_176 temp10660_175))
(assert (= temp10660_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_176)))
(assert (= temp10660_178 #x0000000000000003))
(assert (= temp10660_179 temp10660_178))
(assert (= temp10660_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_179)))
(assert (= temp10660_181 #x0000000000000004))
(assert (= temp10660_182 temp10660_181))
(assert (= temp10660_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_182)))
(assert (= temp10660_184 #x0000000000000005))
(assert (= temp10660_185 temp10660_184))
(assert (= temp10660_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_185)))
(assert (= temp10660_187 #x0000000000000000))
(assert (= temp10660_188
   (ite (bvslt var1180714 temp10660_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10660_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_188)))
(assert (= var1191831 temp10660_189))
(assert (bvslt (ite (bvslt var1180714 temp10660_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10660_190 #x0000000000000001))
(assert (= var1180714 temp10660_190))
(assert (= temp10660_192 var1180714))
(assert (= temp10660_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_192)))
(assert (= temp10660_191 temp10660_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10660_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10660_194 #x0000000000000001))
(assert (= var1191836 temp10660_194))
(assert (= temp10660_195 #x0000000000000000))
(assert (= var1179826 temp10660_195))
(assert (= temp10660_197 var1179826))
(assert (= temp10660_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10660_197)))
(assert (= temp10660_196 temp10660_198))
(assert (= temp10660_199 #x0000000000000002))
(assert (= var1586025 temp10660_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10660_200 #x0000000000000001))
(assert (= var1191993 temp10660_200))
(assert (= temp10660_201 #x0000000000000001))
(assert (= var2700303 temp10660_201))
(assert (= temp10660_202 #x0000000000000001))
(assert (= var2962447 temp10660_202))
(assert (= temp10660_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10660_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_204 #x0000000000000001))
(assert (= var211058 temp10660_204))
(assert (= temp10660_205 #x0000000000000001))
(assert (= var211188 temp10660_205))
(assert (= var3879401 var211188))
(assert (= temp10660_206 #x0000000000000000))
(assert (= var3866802 temp10660_206))
(assert (= temp10660_207 #x0000000000000000))
(assert (= temp10660_208
   (ite (bvslt var3866802 temp10660_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10660_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_208)))
(assert (= var3879420 temp10660_209))
(assert (bvslt (ite (bvslt var3866802 temp10660_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10660_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10660_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10660_211 #x0000000000000000))
(assert (= var3879421 temp10660_211))
(assert (= temp10660_212 #x0000000000000001))
(assert (= var3867690 temp10660_212))
(assert (= temp10660_213 #x0000000000000000))
(assert (= temp10660_214
   (ite (bvslt var3867690 temp10660_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10660_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_214)))
(assert (= var3879423 temp10660_215))
(assert (bvslt (ite (bvslt var3867690 temp10660_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10660_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10660_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10660_217 #x0000000000000001))
(assert (= var3879424 temp10660_217))
(assert (= temp10660_218 #x0000000000000000))
(assert (= var4133117 temp10660_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10660_219 #x0000000000000002))
(assert (= var4339331 temp10660_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10660_220 #x0000000000000000))
(assert (= var4404892 temp10660_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10660_222 #xffffffffffffffff))
(assert (= temp10660_221 temp10660_222))
(assert (= temp10660_223 #x0000000000000001))
(assert (= var197674 temp10660_223))
(assert (= temp10660_224 #x0000000000000000))
(assert (= temp10660_225
   (ite (bvslt var197674 temp10660_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10660_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10660_225)))
(assert (= var211595 temp10660_226))
(assert (bvslt (ite (bvslt var197674 temp10660_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10660_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10660_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10660_228 #x0000000000000001))
(assert (= var211596 temp10660_228))
(assert (= temp10660_230 #xffffffffffffffff))
(assert (= temp10660_229 temp10660_230))
(assert (= temp10660_231 #x0000000000000001))
(assert (= var211058 temp10660_231))
(assert (= temp10660_232 #x0000000000000000))
(assert (= var5518100 temp10660_232))
(assert (= var5518067 var5518100))
(assert (= var5386631 var5518067))
(assert (= var5386627 var5386631))
(assert (= var212669 var5386627))
(assert (= temp10660_233 #x0000000000000000))
(assert (= var212669 temp10660_233))
(model-add temp10660_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10660_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10660_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10660_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




