(declare-fun temp10022_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10022_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10022_3 () (_ BitVec 64))
(declare-fun temp10022_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10022_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10022_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10022_7 () (_ BitVec 64))
(declare-fun temp10022_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10022_9 () (_ BitVec 64))
(declare-fun temp10022_10 () (_ BitVec 64))
(declare-fun temp10022_11 () (_ BitVec 64))
(declare-fun temp10022_12 () (_ BitVec 64))
(declare-fun temp10022_13 () (_ BitVec 64))
(declare-fun temp10022_14 () (_ BitVec 64))
(declare-fun temp10022_15 () (_ BitVec 64))
(declare-fun temp10022_16 () (_ BitVec 64))
(declare-fun temp10022_17 () (_ BitVec 64))
(declare-fun temp10022_18 () (_ BitVec 64))
(declare-fun temp10022_19 () (_ BitVec 64))
(declare-fun temp10022_20 () (_ BitVec 64))
(declare-fun temp10022_21 () (_ BitVec 64))
(declare-fun temp10022_22 () (_ BitVec 64))
(declare-fun temp10022_23 () (_ BitVec 64))
(declare-fun temp10022_24 () (_ BitVec 64))
(declare-fun temp10022_25 () (_ BitVec 64))
(declare-fun temp10022_26 () (_ BitVec 64))
(declare-fun temp10022_27 () (_ BitVec 64))
(declare-fun temp10022_28 () (_ BitVec 64))
(declare-fun temp10022_29 () (_ BitVec 64))
(declare-fun temp10022_30 () (_ BitVec 64))
(declare-fun temp10022_31 () (_ BitVec 64))
(declare-fun temp10022_32 () (_ BitVec 64))
(declare-fun temp10022_33 () (_ BitVec 64))
(declare-fun temp10022_34 () (_ BitVec 64))
(declare-fun temp10022_35 () (_ BitVec 64))
(declare-fun temp10022_36 () (_ BitVec 64))
(declare-fun temp10022_37 () (_ BitVec 64))
(declare-fun temp10022_38 () (_ BitVec 64))
(declare-fun temp10022_39 () (_ BitVec 64))
(declare-fun temp10022_40 () (_ BitVec 64))
(declare-fun temp10022_41 () (_ BitVec 64))
(declare-fun temp10022_42 () (_ BitVec 64))
(declare-fun temp10022_43 () (_ BitVec 64))
(declare-fun temp10022_44 () (_ BitVec 64))
(declare-fun temp10022_45 () (_ BitVec 64))
(declare-fun temp10022_46 () (_ BitVec 64))
(declare-fun temp10022_47 () (_ BitVec 64))
(declare-fun temp10022_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10022_49 () (_ BitVec 64))
(declare-fun temp10022_50 () (_ BitVec 64))
(declare-fun temp10022_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10022_52 () (_ BitVec 64))
(declare-fun temp10022_53 () (_ BitVec 64))
(declare-fun temp10022_54 () (_ BitVec 64))
(declare-fun temp10022_55 () (_ BitVec 64))
(declare-fun temp10022_56 () (_ BitVec 64))
(declare-fun temp10022_57 () (_ BitVec 64))
(declare-fun temp10022_58 () (_ BitVec 64))
(declare-fun temp10022_59 () (_ BitVec 64))
(declare-fun temp10022_60 () (_ BitVec 64))
(declare-fun temp10022_61 () (_ BitVec 64))
(declare-fun temp10022_62 () (_ BitVec 64))
(declare-fun temp10022_63 () (_ BitVec 64))
(declare-fun temp10022_64 () (_ BitVec 64))
(declare-fun temp10022_65 () (_ BitVec 64))
(declare-fun temp10022_66 () (_ BitVec 64))
(declare-fun temp10022_67 () (_ BitVec 64))
(declare-fun temp10022_68 () (_ BitVec 64))
(declare-fun temp10022_69 () (_ BitVec 64))
(declare-fun temp10022_70 () (_ BitVec 64))
(declare-fun temp10022_71 () (_ BitVec 64))
(declare-fun temp10022_72 () (_ BitVec 64))
(declare-fun temp10022_73 () (_ BitVec 64))
(declare-fun temp10022_74 () (_ BitVec 64))
(declare-fun temp10022_75 () (_ BitVec 64))
(declare-fun temp10022_76 () (_ BitVec 64))
(declare-fun temp10022_77 () (_ BitVec 64))
(declare-fun temp10022_78 () (_ BitVec 64))
(declare-fun temp10022_79 () (_ BitVec 64))
(declare-fun temp10022_80 () (_ BitVec 64))
(declare-fun temp10022_81 () (_ BitVec 64))
(declare-fun temp10022_82 () (_ BitVec 64))
(declare-fun temp10022_83 () (_ BitVec 64))
(declare-fun temp10022_84 () (_ BitVec 64))
(declare-fun temp10022_85 () (_ BitVec 64))
(declare-fun temp10022_86 () (_ BitVec 64))
(declare-fun temp10022_87 () (_ BitVec 64))
(declare-fun temp10022_88 () (_ BitVec 64))
(declare-fun temp10022_89 () (_ BitVec 64))
(declare-fun temp10022_90 () (_ BitVec 64))
(declare-fun temp10022_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10022_92 () (_ BitVec 64))
(declare-fun temp10022_93 () (_ BitVec 64))
(declare-fun temp10022_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10022_95 () (_ BitVec 64))
(declare-fun temp10022_96 () (_ BitVec 64))
(declare-fun temp10022_97 () (_ BitVec 64))
(declare-fun temp10022_98 () (_ BitVec 64))
(declare-fun temp10022_99 () (_ BitVec 64))
(declare-fun temp10022_100 () (_ BitVec 64))
(declare-fun temp10022_101 () (_ BitVec 64))
(declare-fun temp10022_102 () (_ BitVec 64))
(declare-fun temp10022_103 () (_ BitVec 64))
(declare-fun temp10022_104 () (_ BitVec 64))
(declare-fun temp10022_105 () (_ BitVec 64))
(declare-fun temp10022_106 () (_ BitVec 64))
(declare-fun temp10022_107 () (_ BitVec 64))
(declare-fun temp10022_108 () (_ BitVec 64))
(declare-fun temp10022_109 () (_ BitVec 64))
(declare-fun temp10022_110 () (_ BitVec 64))
(declare-fun temp10022_111 () (_ BitVec 64))
(declare-fun temp10022_112 () (_ BitVec 64))
(declare-fun temp10022_113 () (_ BitVec 64))
(declare-fun temp10022_114 () (_ BitVec 64))
(declare-fun temp10022_115 () (_ BitVec 64))
(declare-fun temp10022_116 () (_ BitVec 64))
(declare-fun temp10022_117 () (_ BitVec 64))
(declare-fun temp10022_118 () (_ BitVec 64))
(declare-fun temp10022_119 () (_ BitVec 64))
(declare-fun temp10022_120 () (_ BitVec 64))
(declare-fun temp10022_121 () (_ BitVec 64))
(declare-fun temp10022_122 () (_ BitVec 64))
(declare-fun temp10022_123 () (_ BitVec 64))
(declare-fun temp10022_124 () (_ BitVec 64))
(declare-fun temp10022_125 () (_ BitVec 64))
(declare-fun temp10022_126 () (_ BitVec 64))
(declare-fun temp10022_127 () (_ BitVec 64))
(declare-fun temp10022_128 () (_ BitVec 64))
(declare-fun temp10022_129 () (_ BitVec 64))
(declare-fun temp10022_130 () (_ BitVec 64))
(declare-fun temp10022_131 () (_ BitVec 64))
(declare-fun temp10022_132 () (_ BitVec 64))
(declare-fun temp10022_133 () (_ BitVec 64))
(declare-fun temp10022_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10022_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10022_136 () (_ BitVec 64))
(declare-fun temp10022_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10022_138 () (_ BitVec 64))
(declare-fun temp10022_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10022_140 () (_ BitVec 64))
(declare-fun temp10022_141 () (_ BitVec 64))
(declare-fun temp10022_142 () (_ BitVec 64))
(declare-fun temp10022_143 () (_ BitVec 64))
(declare-fun temp10022_144 () (_ BitVec 64))
(declare-fun temp10022_145 () (_ BitVec 64))
(declare-fun temp10022_146 () (_ BitVec 64))
(declare-fun temp10022_147 () (_ BitVec 64))
(declare-fun temp10022_148 () (_ BitVec 64))
(declare-fun temp10022_149 () (_ BitVec 64))
(declare-fun temp10022_150 () (_ BitVec 64))
(declare-fun temp10022_151 () (_ BitVec 64))
(declare-fun temp10022_152 () (_ BitVec 64))
(declare-fun temp10022_153 () (_ BitVec 64))
(declare-fun temp10022_154 () (_ BitVec 64))
(declare-fun temp10022_155 () (_ BitVec 64))
(declare-fun temp10022_157 () (_ BitVec 64))
(declare-fun temp10022_158 () (_ BitVec 64))
(declare-fun temp10022_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10022_159 () (_ BitVec 64))
(declare-fun temp10022_160 () (_ BitVec 64))
(declare-fun temp10022_162 () (_ BitVec 64))
(declare-fun temp10022_163 () (_ BitVec 64))
(declare-fun temp10022_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10022_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10022_165 () (_ BitVec 64))
(declare-fun temp10022_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10022_167 () (_ BitVec 64))
(declare-fun temp10022_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10022_169 () (_ BitVec 64))
(declare-fun temp10022_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10022_171 () (_ BitVec 64))
(declare-fun temp10022_172 () (_ BitVec 64))
(declare-fun temp10022_173 () (_ BitVec 64))
(declare-fun temp10022_174 () (_ BitVec 64))
(declare-fun temp10022_175 () (_ BitVec 64))
(declare-fun temp10022_176 () (_ BitVec 64))
(declare-fun temp10022_177 () (_ BitVec 64))
(declare-fun temp10022_178 () (_ BitVec 64))
(declare-fun temp10022_179 () (_ BitVec 64))
(declare-fun temp10022_180 () (_ BitVec 64))
(declare-fun temp10022_181 () (_ BitVec 64))
(declare-fun temp10022_182 () (_ BitVec 64))
(declare-fun temp10022_183 () (_ BitVec 64))
(declare-fun temp10022_184 () (_ BitVec 64))
(declare-fun temp10022_185 () (_ BitVec 64))
(declare-fun temp10022_186 () (_ BitVec 64))
(declare-fun temp10022_187 () (_ BitVec 64))
(declare-fun temp10022_188 () (_ BitVec 64))
(declare-fun temp10022_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10022_190 () (_ BitVec 64))
(declare-fun temp10022_192 () (_ BitVec 64))
(declare-fun temp10022_193 () (_ BitVec 64))
(declare-fun temp10022_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10022_194 () (_ BitVec 64))
(declare-fun temp10022_195 () (_ BitVec 64))
(declare-fun temp10022_197 () (_ BitVec 64))
(declare-fun temp10022_198 () (_ BitVec 64))
(declare-fun temp10022_196 () (_ BitVec 64))
(declare-fun temp10022_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10022_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10022_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10022_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10022_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10022_204 () (_ BitVec 64))
(declare-fun temp10022_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10022_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10022_207 () (_ BitVec 64))
(declare-fun temp10022_208 () (_ BitVec 64))
(declare-fun temp10022_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10022_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10022_211 () (_ BitVec 64))
(declare-fun temp10022_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10022_213 () (_ BitVec 64))
(declare-fun temp10022_214 () (_ BitVec 64))
(declare-fun temp10022_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10022_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10022_217 () (_ BitVec 64))
(declare-fun temp10022_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10022_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10022_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10022_222 () (_ BitVec 64))
(declare-fun temp10022_221 () (_ BitVec 64))
(declare-fun temp10022_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10022_224 () (_ BitVec 64))
(declare-fun temp10022_225 () (_ BitVec 64))
(declare-fun temp10022_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10022_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10022_228 () (_ BitVec 64))
(declare-fun temp10022_230 () (_ BitVec 64))
(declare-fun temp10022_229 () (_ BitVec 64))
(declare-fun temp10022_231 () (_ BitVec 64))
(assert (= temp10022_1 #x0000000000000001))
(assert (= var77203 temp10022_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10022_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10022_2)))
(assert (= temp10022_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10022_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_4 #x0000000000000000))
(assert (= var210941 temp10022_4))
(assert (= temp10022_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10022_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_6 #x0000000000000000))
(assert (= var210986 temp10022_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10022_7 #x0000000000000000))
(assert (= temp10022_8 temp10022_7))
(assert (= temp10022_9 (select ARGNAME_padding_NAMEEND_VAL temp10022_8)))
(assert (= temp10022_10 #x0000000000000001))
(assert (= temp10022_11 temp10022_10))
(assert (= temp10022_12 (select ARGNAME_padding_NAMEEND_VAL temp10022_11)))
(assert (= temp10022_13 #x0000000000000002))
(assert (= temp10022_14 temp10022_13))
(assert (= temp10022_15 (select ARGNAME_padding_NAMEEND_VAL temp10022_14)))
(assert (= temp10022_16 #x0000000000000003))
(assert (= temp10022_17 temp10022_16))
(assert (= temp10022_18 (select ARGNAME_padding_NAMEEND_VAL temp10022_17)))
(assert (= temp10022_19 #x0000000000000004))
(assert (= temp10022_20 temp10022_19))
(assert (= temp10022_21 (select ARGNAME_padding_NAMEEND_VAL temp10022_20)))
(assert (= temp10022_22 #x0000000000000005))
(assert (= temp10022_23 temp10022_22))
(assert (= temp10022_24 (select ARGNAME_padding_NAMEEND_VAL temp10022_23)))
(assert (= temp10022_25 #x0000000000000000))
(assert (= temp10022_26 #x0000000000000000))
(assert (= temp10022_27 temp10022_26))
(assert (= temp10022_28 (select ARGNAME_padding_NAMEEND_VAL temp10022_27)))
(assert (= temp10022_29 #x0000000000000000))
(assert (= temp10022_30 #x0000000000000001))
(assert (= temp10022_31 temp10022_30))
(assert (= temp10022_32 (select ARGNAME_padding_NAMEEND_VAL temp10022_31)))
(assert (= temp10022_33 #x0000000000000000))
(assert (= temp10022_34 #x0000000000000002))
(assert (= temp10022_35 temp10022_34))
(assert (= temp10022_36 (select ARGNAME_padding_NAMEEND_VAL temp10022_35)))
(assert (= temp10022_37 #x0000000000000000))
(assert (= temp10022_38 #x0000000000000003))
(assert (= temp10022_39 temp10022_38))
(assert (= temp10022_40 (select ARGNAME_padding_NAMEEND_VAL temp10022_39)))
(assert (= temp10022_41 #x0000000000000000))
(assert (= temp10022_42 #x0000000000000004))
(assert (= temp10022_43 temp10022_42))
(assert (= temp10022_44 (select ARGNAME_padding_NAMEEND_VAL temp10022_43)))
(assert (= temp10022_45 #x0000000000000000))
(assert (= temp10022_46 #x0000000000000005))
(assert (= temp10022_47 temp10022_46))
(assert (= temp10022_48 (select ARGNAME_padding_NAMEEND_VAL temp10022_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10022_28 temp10022_25)
             (bvslt temp10022_32 temp10022_29)
             (bvslt temp10022_36 temp10022_33)
             (bvslt temp10022_40 temp10022_37)
             (bvslt temp10022_44 temp10022_41)
             (bvslt temp10022_48 temp10022_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_49 #x0000000000000000))
(assert (= var1191714 temp10022_49))
(assert (= temp10022_50 #x0000000000000000))
(assert (= temp10022_51 temp10022_50))
(assert (= temp10022_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_51)))
(assert (= temp10022_53 #x0000000000000001))
(assert (= temp10022_54 temp10022_53))
(assert (= temp10022_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_54)))
(assert (= temp10022_56 #x0000000000000002))
(assert (= temp10022_57 temp10022_56))
(assert (= temp10022_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_57)))
(assert (= temp10022_59 #x0000000000000003))
(assert (= temp10022_60 temp10022_59))
(assert (= temp10022_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_60)))
(assert (= temp10022_62 #x0000000000000004))
(assert (= temp10022_63 temp10022_62))
(assert (= temp10022_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_63)))
(assert (= temp10022_65 #x0000000000000005))
(assert (= temp10022_66 temp10022_65))
(assert (= temp10022_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_66)))
(assert (= temp10022_68 #x0000000000000000))
(assert (= temp10022_69 #x0000000000000000))
(assert (= temp10022_70 temp10022_69))
(assert (= temp10022_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_70)))
(assert (= temp10022_72 #x0000000000000000))
(assert (= temp10022_73 #x0000000000000001))
(assert (= temp10022_74 temp10022_73))
(assert (= temp10022_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_74)))
(assert (= temp10022_76 #x0000000000000000))
(assert (= temp10022_77 #x0000000000000002))
(assert (= temp10022_78 temp10022_77))
(assert (= temp10022_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_78)))
(assert (= temp10022_80 #x0000000000000000))
(assert (= temp10022_81 #x0000000000000003))
(assert (= temp10022_82 temp10022_81))
(assert (= temp10022_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_82)))
(assert (= temp10022_84 #x0000000000000000))
(assert (= temp10022_85 #x0000000000000004))
(assert (= temp10022_86 temp10022_85))
(assert (= temp10022_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_86)))
(assert (= temp10022_88 #x0000000000000000))
(assert (= temp10022_89 #x0000000000000005))
(assert (= temp10022_90 temp10022_89))
(assert (= temp10022_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10022_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10022_71 temp10022_68)
             (bvslt temp10022_75 temp10022_72)
             (bvslt temp10022_79 temp10022_76)
             (bvslt temp10022_83 temp10022_80)
             (bvslt temp10022_87 temp10022_84)
             (bvslt temp10022_91 temp10022_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_92 #x0000000000000000))
(assert (= var1191725 temp10022_92))
(assert (= temp10022_93 #x0000000000000000))
(assert (= temp10022_94 temp10022_93))
(assert (= temp10022_95 (select ARGNAME_stride_NAMEEND_VAL temp10022_94)))
(assert (= temp10022_96 #x0000000000000001))
(assert (= temp10022_97 temp10022_96))
(assert (= temp10022_98 (select ARGNAME_stride_NAMEEND_VAL temp10022_97)))
(assert (= temp10022_99 #x0000000000000002))
(assert (= temp10022_100 temp10022_99))
(assert (= temp10022_101 (select ARGNAME_stride_NAMEEND_VAL temp10022_100)))
(assert (= temp10022_102 #x0000000000000003))
(assert (= temp10022_103 temp10022_102))
(assert (= temp10022_104 (select ARGNAME_stride_NAMEEND_VAL temp10022_103)))
(assert (= temp10022_105 #x0000000000000004))
(assert (= temp10022_106 temp10022_105))
(assert (= temp10022_107 (select ARGNAME_stride_NAMEEND_VAL temp10022_106)))
(assert (= temp10022_108 #x0000000000000005))
(assert (= temp10022_109 temp10022_108))
(assert (= temp10022_110 (select ARGNAME_stride_NAMEEND_VAL temp10022_109)))
(assert (= temp10022_111 #x0000000000000000))
(assert (= temp10022_112 #x0000000000000000))
(assert (= temp10022_113 temp10022_112))
(assert (= temp10022_114 (select ARGNAME_stride_NAMEEND_VAL temp10022_113)))
(assert (= temp10022_115 #x0000000000000000))
(assert (= temp10022_116 #x0000000000000001))
(assert (= temp10022_117 temp10022_116))
(assert (= temp10022_118 (select ARGNAME_stride_NAMEEND_VAL temp10022_117)))
(assert (= temp10022_119 #x0000000000000000))
(assert (= temp10022_120 #x0000000000000002))
(assert (= temp10022_121 temp10022_120))
(assert (= temp10022_122 (select ARGNAME_stride_NAMEEND_VAL temp10022_121)))
(assert (= temp10022_123 #x0000000000000000))
(assert (= temp10022_124 #x0000000000000003))
(assert (= temp10022_125 temp10022_124))
(assert (= temp10022_126 (select ARGNAME_stride_NAMEEND_VAL temp10022_125)))
(assert (= temp10022_127 #x0000000000000000))
(assert (= temp10022_128 #x0000000000000004))
(assert (= temp10022_129 temp10022_128))
(assert (= temp10022_130 (select ARGNAME_stride_NAMEEND_VAL temp10022_129)))
(assert (= temp10022_131 #x0000000000000000))
(assert (= temp10022_132 #x0000000000000005))
(assert (= temp10022_133 temp10022_132))
(assert (= temp10022_134 (select ARGNAME_stride_NAMEEND_VAL temp10022_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10022_114 temp10022_111)
             (bvsle temp10022_118 temp10022_115)
             (bvsle temp10022_122 temp10022_119)
             (bvsle temp10022_126 temp10022_123)
             (bvsle temp10022_130 temp10022_127)
             (bvsle temp10022_134 temp10022_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_135 #x0000000000000000))
(assert (= var1191735 temp10022_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_136 #x0000000000000001))
(assert (= var1191747 temp10022_136))
(assert (= temp10022_137 #x0000000000000000))
(assert (= var1179826 temp10022_137))
(assert (= temp10022_138 #x0000000000000000))
(assert (= temp10022_139 temp10022_138))
(assert (= temp10022_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_139)))
(assert (= temp10022_141 #x0000000000000001))
(assert (= temp10022_142 temp10022_141))
(assert (= temp10022_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_142)))
(assert (= temp10022_144 #x0000000000000002))
(assert (= temp10022_145 temp10022_144))
(assert (= temp10022_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_145)))
(assert (= temp10022_147 #x0000000000000003))
(assert (= temp10022_148 temp10022_147))
(assert (= temp10022_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_148)))
(assert (= temp10022_150 #x0000000000000004))
(assert (= temp10022_151 temp10022_150))
(assert (= temp10022_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_151)))
(assert (= temp10022_153 #x0000000000000005))
(assert (= temp10022_154 temp10022_153))
(assert (= temp10022_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_154)))
(assert (= temp10022_157 var1179826))
(assert (= temp10022_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_157)))
(assert (= temp10022_156 temp10022_158))
(assert (= var1191780
   (ite (bvslt temp10022_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_159 #x0000000000000000))
(assert (= var1191780 temp10022_159))
(assert (= temp10022_160 #x0000000000000000))
(assert (= var1179826 temp10022_160))
(assert (= temp10022_162 var1179826))
(assert (= temp10022_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_162)))
(assert (= temp10022_161 temp10022_163))
(assert (= var1191802 (bvsmod temp10022_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10022_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10022_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10022_165 #x0000000000000001))
(assert (= var1191803 temp10022_165))
(assert (= temp10022_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10022_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_167 #x0000000000000001))
(assert (= var1191823 temp10022_167))
(assert (= temp10022_168 #x0000000000000001))
(assert (= var1180714 temp10022_168))
(assert (= temp10022_169 #x0000000000000000))
(assert (= temp10022_170 temp10022_169))
(assert (= temp10022_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_170)))
(assert (= temp10022_172 #x0000000000000001))
(assert (= temp10022_173 temp10022_172))
(assert (= temp10022_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_173)))
(assert (= temp10022_175 #x0000000000000002))
(assert (= temp10022_176 temp10022_175))
(assert (= temp10022_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_176)))
(assert (= temp10022_178 #x0000000000000003))
(assert (= temp10022_179 temp10022_178))
(assert (= temp10022_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_179)))
(assert (= temp10022_181 #x0000000000000004))
(assert (= temp10022_182 temp10022_181))
(assert (= temp10022_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_182)))
(assert (= temp10022_184 #x0000000000000005))
(assert (= temp10022_185 temp10022_184))
(assert (= temp10022_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_185)))
(assert (= temp10022_187 #x0000000000000000))
(assert (= temp10022_188
   (ite (bvslt var1180714 temp10022_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10022_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_188)))
(assert (= var1191831 temp10022_189))
(assert (bvslt (ite (bvslt var1180714 temp10022_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10022_190 #x0000000000000001))
(assert (= var1180714 temp10022_190))
(assert (= temp10022_192 var1180714))
(assert (= temp10022_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_192)))
(assert (= temp10022_191 temp10022_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10022_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10022_194 #x0000000000000001))
(assert (= var1191836 temp10022_194))
(assert (= temp10022_195 #x0000000000000000))
(assert (= var1179826 temp10022_195))
(assert (= temp10022_197 var1179826))
(assert (= temp10022_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10022_197)))
(assert (= temp10022_196 temp10022_198))
(assert (= temp10022_199 #x0000000000000002))
(assert (= var1586025 temp10022_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10022_200 #x0000000000000001))
(assert (= var1191993 temp10022_200))
(assert (= temp10022_201 #x0000000000000001))
(assert (= var2700303 temp10022_201))
(assert (= temp10022_202 #x0000000000000001))
(assert (= var2962447 temp10022_202))
(assert (= temp10022_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10022_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_204 #x0000000000000001))
(assert (= var211058 temp10022_204))
(assert (= temp10022_205 #x0000000000000001))
(assert (= var211188 temp10022_205))
(assert (= var3879401 var211188))
(assert (= temp10022_206 #x0000000000000000))
(assert (= var3866802 temp10022_206))
(assert (= temp10022_207 #x0000000000000000))
(assert (= temp10022_208
   (ite (bvslt var3866802 temp10022_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10022_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_208)))
(assert (= var3879420 temp10022_209))
(assert (bvslt (ite (bvslt var3866802 temp10022_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10022_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10022_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10022_211 #x0000000000000000))
(assert (= var3879421 temp10022_211))
(assert (= temp10022_212 #x0000000000000001))
(assert (= var3867690 temp10022_212))
(assert (= temp10022_213 #x0000000000000000))
(assert (= temp10022_214
   (ite (bvslt var3867690 temp10022_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10022_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_214)))
(assert (= var3879423 temp10022_215))
(assert (bvslt (ite (bvslt var3867690 temp10022_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10022_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10022_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10022_217 #x0000000000000001))
(assert (= var3879424 temp10022_217))
(assert (= temp10022_218 #x0000000000000000))
(assert (= var4079423 temp10022_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10022_219 #x0000000000000002))
(assert (= var4208259 temp10022_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10022_220 #x0000000000000000))
(assert (= var4273820 temp10022_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10022_222 #xffffffffffffffff))
(assert (= temp10022_221 temp10022_222))
(assert (= temp10022_223 #x0000000000000001))
(assert (= var197674 temp10022_223))
(assert (= temp10022_224 #x0000000000000000))
(assert (= temp10022_225
   (ite (bvslt var197674 temp10022_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10022_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10022_225)))
(assert (= var211595 temp10022_226))
(assert (bvslt (ite (bvslt var197674 temp10022_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10022_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10022_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10022_228 #x0000000000000001))
(assert (= var211596 temp10022_228))
(assert (= temp10022_230 #xffffffffffffffff))
(assert (= temp10022_229 temp10022_230))
(assert (= temp10022_231 #x0000000000000001))
(assert (= var211058 temp10022_231))
(model-add temp10022_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10022_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10022_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10022_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





